uint64_t sub_1008C7564()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_1008C7570()
{
  return v0;
}

__n128 sub_1008C757C()
{
  __n128 result = *(__n128 *)(v0 - 128);
  *(__n128 *)(v0 - 144) = result;
  return result;
}

uint64_t sub_1008C75A4()
{
  return *(void *)(v0 - 552);
}

uint64_t sub_1008C75C0()
{
  return static Optional<A>.read(from:)();
}

uint64_t sub_1008C75D8()
{
  return v0;
}

uint64_t sub_1008C75E4()
{
  return type metadata accessor for LocationPreviewViewState(0);
}

uint64_t sub_1008C760C()
{
  return type metadata accessor for ConditionDetailViewState();
}

uint64_t sub_1008C7650()
{
  return type metadata accessor for AirQualityScale();
}

uint64_t sub_1008C7678()
{
  return type metadata accessor for Location();
}

uint64_t sub_1008C76A0()
{
  return v0;
}

uint64_t sub_1008C76AC()
{
  return Set<>.write(to:)();
}

uint64_t sub_1008C76E0()
{
  return static String.read(from:)();
}

uint64_t sub_1008C76F8()
{
  return static String.read(from:)();
}

uint64_t sub_1008C7710()
{
  return static FixedSizeTypeBinaryCodable.read(from:)();
}

uint64_t sub_1008C7728()
{
  return v0;
}

uint64_t sub_1008C7734()
{
  return static Optional<A>.read(from:)();
}

uint64_t sub_1008C775C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, unsigned __int8 a13)
{
  return a13 - 1;
}

uint64_t sub_1008C7778@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t sub_1008C7790()
{
  return *(void *)(v0 - 224);
}

uint64_t sub_1008C77A0()
{
  return v0;
}

uint64_t sub_1008C77B8()
{
  return v0;
}

uint64_t sub_1008C77E8()
{
  return Array<A>.write(to:)();
}

uint64_t sub_1008C7804()
{
  return v0;
}

uint64_t sub_1008C781C()
{
  return Measurement.init(value:unit:)();
}

uint64_t sub_1008C7834()
{
  return sub_1008C3650();
}

uint64_t sub_1008C7850()
{
  return v0;
}

void sub_1008C787C()
{
  *(unsigned char *)(v0 - 65) = 2;
}

uint64_t sub_1008C7888()
{
  return v0;
}

void sub_1008C7898()
{
  *(void *)(v1 - 88) = v0;
}

uint64_t sub_1008C78B0()
{
  return *(void *)(v0 - 360);
}

uint64_t sub_1008C78BC()
{
  return *(void *)(v0 - 104);
}

uint64_t sub_1008C78D4()
{
  return *(void *)(v0 - 376);
}

uint64_t sub_1008C78E0()
{
  return Date.write(to:)();
}

uint64_t sub_1008C7908()
{
  return *(void *)(v0 - 312);
}

uint64_t sub_1008C7920()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1008C7938()
{
  return static FixedSizeTypeBinaryCodable.read(from:)();
}

uint64_t sub_1008C795C()
{
  return *(void *)(v0 - 208);
}

uint64_t sub_1008C796C()
{
  return *(void *)(v0 - 216);
}

uint64_t sub_1008C797C()
{
  return v0;
}

uint64_t sub_1008C79AC()
{
  return static Array<A>.read(from:)();
}

uint64_t sub_1008C79D0()
{
  return static Array<A>.read(from:)();
}

uint64_t sub_1008C7A00()
{
  return static Array<A>.read(from:)();
}

uint64_t sub_1008C7A24()
{
  return v0;
}

void sub_1008C7A3C()
{
  sub_1008BA04C();
}

uint64_t sub_1008C7A64()
{
  return 0;
}

uint64_t sub_1008C7A70()
{
  return v0;
}

uint64_t sub_1008C7A7C()
{
  return static NSUnitLength.read(from:)();
}

uint64_t sub_1008C7A98()
{
  return v0;
}

uint64_t sub_1008C7AA4()
{
  return *(void *)(v0 - 432);
}

uint64_t sub_1008C7ABC()
{
  return *(void *)(v0 - 328);
}

uint64_t sub_1008C7B0C()
{
  return v0;
}

uint64_t sub_1008C7B24()
{
  return v0;
}

void sub_1008C7B3C()
{
  sub_1008BA04C();
}

void sub_1008C7B58()
{
  Wind.write(to:)();
}

__n128 sub_1008C7B74()
{
  __n128 result = *(__n128 *)(v0 - 128);
  *(__n128 *)(v0 - 144) = result;
  return result;
}

uint64_t sub_1008C7B80()
{
  return *(void *)(v0 - 392);
}

uint64_t sub_1008C7BB8()
{
  return v0;
}

uint64_t sub_1008C7BC4()
{
  return sub_1008C384C();
}

uint64_t sub_1008C7BDC()
{
  return Optional<A>.write(to:)();
}

uint64_t sub_1008C7C00()
{
  return static Set<>.read(from:)();
}

uint64_t sub_1008C7C34()
{
  return v0;
}

uint64_t sub_1008C7C4C()
{
  return v0;
}

uint64_t sub_1008C7C64()
{
  return Date.write(to:)();
}

uint64_t sub_1008C7C80()
{
  return String.write(to:)();
}

uint64_t sub_1008C7C9C()
{
  return Optional<A>.write(to:)();
}

uint64_t sub_1008C7CB4()
{
  return Array<A>.write(to:)();
}

uint64_t sub_1008C7CD0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1008C7CE8()
{
  return v0;
}

void sub_1008C7CF8()
{
  *(void *)(v1 - 72) = v0;
  sub_1008BA04C();
}

uint64_t sub_1008C7D1C()
{
  return static Array<A>.read(from:)();
}

uint64_t sub_1008C7D40()
{
  return v0;
}

uint64_t sub_1008C7D50()
{
  return Location.write(to:)();
}

uint64_t sub_1008C7D6C()
{
  return v0;
}

uint64_t sub_1008C7D78()
{
  return v0;
}

uint64_t sub_1008C7D88()
{
  return static Array<A>.read(from:)();
}

uint64_t sub_1008C7DAC()
{
  return static String.read(from:)();
}

uint64_t sub_1008C7DD0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1008C7DE8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1008C7E00()
{
  return *(void *)(v0 - 368);
}

uint64_t sub_1008C7E18()
{
  return v0;
}

uint64_t sub_1008C7E30()
{
  return FixedSizeTypeBinaryCodable.write(to:)();
}

uint64_t sub_1008C7E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, unsigned __int8 a13)
{
  return a13 - 1;
}

uint64_t sub_1008C7E68()
{
  return *(void *)(v0 - 104);
}

uint64_t sub_1008C7E74()
{
  return v0;
}

uint64_t sub_1008C7E80()
{
  return Measurement.init(value:unit:)();
}

uint64_t sub_1008C7EB4()
{
  return v0;
}

uint64_t sub_1008C7EC8()
{
  return Array<A>.write(to:)();
}

uint64_t sub_1008C7EE8()
{
  return type metadata accessor for Date();
}

uint64_t sub_1008C7F00()
{
  return swift_getWitnessTable();
}

uint64_t sub_1008C7F20()
{
  return Measurement.init(value:unit:)();
}

__n128 sub_1008C7F38@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *(__n128 *)(v4 - 144);
  *a1 = result;
  a1[1].n128_u64[0] = v1;
  a1[1].n128_u64[1] = v2;
  a1[2].n128_u8[0] = v3;
  return result;
}

__n128 sub_1008C7F58()
{
  __n128 result = *(__n128 *)(v0 - 120);
  *(__n128 *)(v0 - 144) = result;
  return result;
}

uint64_t sub_1008C7F88()
{
  return type metadata accessor for WeatherCondition();
}

uint64_t sub_1008C7FBC()
{
  return type metadata accessor for WeatherCondition();
}

uint64_t sub_1008C7FDC()
{
  return type metadata accessor for Date();
}

uint64_t sub_1008C8010()
{
  return type metadata accessor for Date();
}

uint64_t sub_1008C8030()
{
  return type metadata accessor for WeatherCondition();
}

uint64_t sub_1008C8084(uint64_t result, uint64_t a2)
{
  *(void *)(v2 - 320) = result;
  *(void *)(v2 - 312) = a2;
  return result;
}

uint64_t sub_1008C8098@<X0>(uint64_t a1@<X8>)
{
  return *(void *)(a1 - 256);
}

uint64_t sub_1008C80AC()
{
  return static FixedSizeTypeBinaryCodable.read(from:)();
}

void sub_1008C80E4()
{
  sub_1008BA04C();
}

void sub_1008C80FC()
{
  sub_1008BA04C();
}

uint64_t sub_1008C812C()
{
  return static NSUnitTemperature.read(from:)();
}

uint64_t sub_1008C814C()
{
  return v0;
}

uint64_t sub_1008C8160()
{
  return 0;
}

uint64_t sub_1008C8174()
{
  return v0;
}

uint64_t sub_1008C8180()
{
  return *(void *)(v0 - 560);
}

uint64_t sub_1008C8194()
{
  return Date.write(to:)();
}

uint64_t sub_1008C81B4()
{
  return v0;
}

uint64_t sub_1008C81C8()
{
  return v0;
}

uint64_t sub_1008C81F4@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v1 - 112) = a1;
  return 0;
}

uint64_t sub_1008C8200()
{
  return v0;
}

uint64_t sub_1008C820C()
{
  return v0;
}

uint64_t sub_1008C8220()
{
  return Optional<A>.write(to:)();
}

unint64_t sub_1008C8244(uint64_t a1)
{
  return sub_1008BD0FC(a1);
}

uint64_t sub_1008C825C()
{
  return v0;
}

uint64_t sub_1008C8270()
{
  return v0;
}

uint64_t sub_1008C8284()
{
  return *(void *)(v0 - 72);
}

uint64_t sub_1008C8290()
{
  return v0;
}

uint64_t sub_1008C82A4()
{
  return v0;
}

uint64_t sub_1008C82B8()
{
  return static String.read(from:)();
}

uint64_t sub_1008C82D0()
{
  return *(void *)(v0 - 104);
}

uint64_t sub_1008C82DC()
{
  return FixedSizeTypeBinaryCodable.write(to:)();
}

uint64_t sub_1008C82FC()
{
  return FixedSizeTypeBinaryCodable.write(to:)();
}

uint64_t sub_1008C8328()
{
  return v0;
}

uint64_t sub_1008C833C()
{
  return static Dictionary<>.read(from:)();
}

uint64_t sub_1008C837C()
{
  return v0;
}

uint64_t sub_1008C8390()
{
  return v0;
}

uint64_t sub_1008C839C()
{
  return static Optional<A>.read(from:)();
}

uint64_t sub_1008C83BC()
{
  return v0;
}

uint64_t sub_1008C83C8()
{
  return *(void *)(v0 - 280);
}

uint64_t sub_1008C83F4()
{
  return v0;
}

uint64_t sub_1008C8414()
{
  return v0;
}

uint64_t sub_1008C8420()
{
  return v0;
}

uint64_t sub_1008C8450()
{
  return v0;
}

uint64_t sub_1008C8468()
{
  return static NSUnitTemperature.read(from:)();
}

uint64_t sub_1008C8488()
{
  return *(void *)(v0 - 440);
}

uint64_t sub_1008C849C()
{
  return v0;
}

uint64_t sub_1008C84B0()
{
  return v0;
}

uint64_t sub_1008C84C4()
{
  return FixedSizeTypeBinaryCodable.write(to:)();
}

uint64_t sub_1008C84DC()
{
  return Dictionary<>.write(to:)();
}

uint64_t sub_1008C84FC()
{
  return static WeatherChange.Direction.read(from:)();
}

uint64_t sub_1008C8514()
{
  return v0;
}

void sub_1008C8554()
{
  static WeatherMetadata.read(from:)();
}

uint64_t sub_1008C8580()
{
  return v0;
}

uint64_t sub_1008C8594()
{
  return v0;
}

void sub_1008C85A8()
{
  type metadata accessor for CGRect(0);
}

uint64_t sub_1008C85C0()
{
  return *(void *)(v0 - 496);
}

uint64_t sub_1008C85CC()
{
  return v0;
}

uint64_t sub_1008C85D8()
{
  return v0;
}

uint64_t sub_1008C85EC()
{
  return v0;
}

uint64_t sub_1008C85F8()
{
  return Optional<A>.write(to:)();
}

uint64_t sub_1008C8618()
{
  return type metadata accessor for WeatherMetadata();
}

uint64_t sub_1008C8638()
{
  return v0;
}

uint64_t sub_1008C864C()
{
  return String.write(to:)();
}

uint64_t sub_1008C8664()
{
  return 0;
}

uint64_t sub_1008C8670()
{
  return static Date.read(from:)();
}

uint64_t sub_1008C8688()
{
  return Optional<A>.write(to:)();
}

uint64_t sub_1008C86A8()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_1008C86C0()
{
  return v0;
}

uint64_t sub_1008C86CC()
{
  return v0;
}

uint64_t sub_1008C86D8()
{
  return *(void *)(v0 - 240);
}

uint64_t sub_1008C86EC()
{
  return 0;
}

uint64_t sub_1008C8700()
{
  return Location.write(to:)();
}

uint64_t sub_1008C8718(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = (int *)type metadata accessor for ListLocationViewModel(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  char v9 = *(unsigned char *)(v8 + 8);
  *(void *)uint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = v9;
  uint64_t v10 = v5[6];
  v11 = (void *)(a1 + v10);
  v12 = (void *)(a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v13 = v5[7];
    v14 = (void *)(a1 + v13);
    v15 = (void *)(a2 + v13);
    sub_1008CB8C8(a1 + v13, (void (*)(void))type metadata accessor for ListLocationRowPrimaryText);
    type metadata accessor for ListLocationRowPrimaryText(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
      {
        uint64_t v17 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
      }
    }
    else
    {
      void *v14 = *v15;
      v14[1] = v15[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v18 = v5[8];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = *(void *)v20;
  uint64_t v22 = *(void *)(v20 + 8);
  uint64_t v23 = *(void *)(v20 + 16);
  uint64_t v24 = *(void *)(v20 + 24);
  char v25 = *(unsigned char *)(v20 + 32);
  sub_100193004(*(void *)v20, v22, v23, v24, v25);
  uint64_t v26 = *(void *)v19;
  uint64_t v27 = *(void *)(v19 + 8);
  uint64_t v28 = *(void *)(v19 + 16);
  uint64_t v29 = *(void *)(v19 + 24);
  *(void *)uint64_t v19 = v21;
  *(void *)(v19 + 8) = v22;
  *(void *)(v19 + 16) = v23;
  *(void *)(v19 + 24) = v24;
  char v30 = *(unsigned char *)(v19 + 32);
  *(unsigned char *)(v19 + 32) = v25;
  sub_100191D78(v26, v27, v28, v29, v30);
  *(unsigned char *)(a1 + v5[9]) = *(unsigned char *)(a2 + v5[9]);
  uint64_t v31 = v5[10];
  v32 = (void *)(a1 + v31);
  v33 = (const void *)(a2 + v31);
  uint64_t v34 = type metadata accessor for Date();
  LODWORD(v24) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v34);
  int v35 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34);
  if (v24)
  {
    if (!v35)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  uint64_t v36 = *(void *)(v34 - 8);
  if (v35)
  {
    (*(void (**)(void *, uint64_t))(v36 + 8))(v32, v34);
LABEL_13:
    uint64_t v37 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v32, v33, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, const void *, uint64_t))(v36 + 24))(v32, v33, v34);
LABEL_14:
  uint64_t v38 = v5[11];
  v39 = (void *)(a1 + v38);
  v40 = (const void *)(a2 + v38);
  uint64_t v41 = type metadata accessor for TimeZone();
  int v42 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v41);
  int v43 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41);
  if (!v42)
  {
    uint64_t v44 = *(void *)(v41 - 8);
    if (!v43)
    {
      (*(void (**)(void *, const void *, uint64_t))(v44 + 24))(v39, v40, v41);
      goto LABEL_20;
    }
    (*(void (**)(void *, uint64_t))(v44 + 8))(v39, v41);
    goto LABEL_19;
  }
  if (v43)
  {
LABEL_19:
    uint64_t v45 = sub_10017DF08(&qword_100E6D1D8);
    memcpy(v39, v40, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
LABEL_20:
  uint64_t v46 = v5[12];
  v47 = (void *)(a1 + v46);
  v48 = (void *)(a2 + v46);
  void *v47 = *v48;
  v47[1] = v48[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v49 = v5[13];
  v50 = (void *)(a1 + v49);
  v51 = (void *)(a2 + v49);
  void *v50 = *v51;
  v50[1] = v51[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v5[14]) = *(unsigned char *)(a2 + v5[14]);
  uint64_t v52 = v5[15];
  v53 = (void *)(a1 + v52);
  v54 = (void *)(a2 + v52);
  void *v53 = *v54;
  v53[1] = v54[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v55 = v5[16];
  v56 = (void *)(a1 + v55);
  v57 = (void *)(a2 + v55);
  void *v56 = *v57;
  v56[1] = v57[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v58 = v5[17];
  v59 = (void *)(a1 + v58);
  v60 = (void *)(a2 + v58);
  void *v59 = *v60;
  v59[1] = v60[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v61 = v5[18];
  v62 = (void *)(a1 + v61);
  v63 = (void *)(a2 + v61);
  void *v62 = *v63;
  v62[1] = v63[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v64 = v5[19];
  v65 = (void *)(a1 + v64);
  v66 = (void *)(a2 + v64);
  void *v65 = *v66;
  v65[1] = v66[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v67 = v5[20];
  v68 = (void *)(a1 + v67);
  v69 = (void *)(a2 + v67);
  void *v68 = *v69;
  v68[1] = v69[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v5[21]) = *(unsigned char *)(a2 + v5[21]);
  uint64_t v70 = v5[22];
  uint64_t v71 = a1 + v70;
  uint64_t v72 = a2 + v70;
  uint64_t v73 = type metadata accessor for WeatherConditionBackgroundModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 24))(v71, v72, v73);
  *(unsigned char *)(a1 + v5[23]) = *(unsigned char *)(a2 + v5[23]);
  *(unsigned char *)(a1 + v5[24]) = *(unsigned char *)(a2 + v5[24]);
  uint64_t v74 = v5[25];
  v75 = (void *)(a1 + v74);
  v76 = (void *)(a2 + v74);
  void *v75 = *v76;
  v75[1] = v76[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + v5[26]) = *(void *)(a2 + v5[26]);
  return a1;
}

uint64_t sub_1008C8DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = (int *)type metadata accessor for ListLocationViewModel(0);
  uint64_t v6 = v5[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(void *)uint64_t v7 = *(void *)v8;
  *(unsigned char *)(v7 + 8) = *(unsigned char *)(v8 + 8);
  uint64_t v9 = v5[6];
  uint64_t v10 = (void *)(a1 + v9);
  v11 = (uint64_t *)(a2 + v9);
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  *uint64_t v10 = v13;
  v10[1] = v12;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v14 = v5[7];
    v15 = (void *)(a1 + v14);
    uint64_t v16 = (const void *)(a2 + v14);
    sub_1008CB8C8(a1 + v14, (void (*)(void))type metadata accessor for ListLocationRowPrimaryText);
    uint64_t v17 = type metadata accessor for ListLocationRowPrimaryText(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v18))
      {
        uint64_t v19 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(v15, v16, v18);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v18);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
  }
  uint64_t v20 = v5[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  char v23 = *(unsigned char *)(v22 + 32);
  uint64_t v24 = *(void *)v21;
  uint64_t v25 = *(void *)(v21 + 8);
  uint64_t v26 = *(void *)(v21 + 16);
  uint64_t v27 = *(void *)(v21 + 24);
  long long v28 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v28;
  char v29 = *(unsigned char *)(v21 + 32);
  *(unsigned char *)(v21 + 32) = v23;
  sub_100191D78(v24, v25, v26, v27, v29);
  *(unsigned char *)(a1 + v5[9]) = *(unsigned char *)(a2 + v5[9]);
  uint64_t v30 = v5[10];
  uint64_t v31 = (void *)(a1 + v30);
  v32 = (const void *)(a2 + v30);
  uint64_t v33 = type metadata accessor for Date();
  int v34 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v33);
  int v35 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v33);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v33);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  uint64_t v36 = *(void *)(v33 - 8);
  if (v35)
  {
    (*(void (**)(void *, uint64_t))(v36 + 8))(v31, v33);
LABEL_13:
    uint64_t v37 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v31, v32, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, const void *, uint64_t))(v36 + 40))(v31, v32, v33);
LABEL_14:
  uint64_t v38 = v5[11];
  v39 = (void *)(a1 + v38);
  v40 = (const void *)(a2 + v38);
  uint64_t v41 = type metadata accessor for TimeZone();
  int v42 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v41);
  int v43 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41);
  if (!v42)
  {
    uint64_t v44 = *(void *)(v41 - 8);
    if (!v43)
    {
      (*(void (**)(void *, const void *, uint64_t))(v44 + 40))(v39, v40, v41);
      goto LABEL_20;
    }
    (*(void (**)(void *, uint64_t))(v44 + 8))(v39, v41);
    goto LABEL_19;
  }
  if (v43)
  {
LABEL_19:
    uint64_t v45 = sub_10017DF08(&qword_100E6D1D8);
    memcpy(v39, v40, *(void *)(*(void *)(v45 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
LABEL_20:
  uint64_t v46 = v5[12];
  v47 = (void *)(a1 + v46);
  v48 = (uint64_t *)(a2 + v46);
  uint64_t v50 = *v48;
  uint64_t v49 = v48[1];
  void *v47 = v50;
  v47[1] = v49;
  swift_bridgeObjectRelease();
  uint64_t v51 = v5[13];
  uint64_t v52 = (void *)(a1 + v51);
  v53 = (uint64_t *)(a2 + v51);
  uint64_t v55 = *v53;
  uint64_t v54 = v53[1];
  *uint64_t v52 = v55;
  v52[1] = v54;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v5[14]) = *(unsigned char *)(a2 + v5[14]);
  uint64_t v56 = v5[15];
  v57 = (void *)(a1 + v56);
  uint64_t v58 = (uint64_t *)(a2 + v56);
  uint64_t v60 = *v58;
  uint64_t v59 = v58[1];
  void *v57 = v60;
  v57[1] = v59;
  swift_bridgeObjectRelease();
  uint64_t v61 = v5[16];
  v62 = (void *)(a1 + v61);
  v63 = (uint64_t *)(a2 + v61);
  uint64_t v65 = *v63;
  uint64_t v64 = v63[1];
  void *v62 = v65;
  v62[1] = v64;
  swift_bridgeObjectRelease();
  uint64_t v66 = v5[17];
  uint64_t v67 = (void *)(a1 + v66);
  v68 = (uint64_t *)(a2 + v66);
  uint64_t v70 = *v68;
  uint64_t v69 = v68[1];
  *uint64_t v67 = v70;
  v67[1] = v69;
  swift_bridgeObjectRelease();
  uint64_t v71 = v5[18];
  uint64_t v72 = (void *)(a1 + v71);
  uint64_t v73 = (uint64_t *)(a2 + v71);
  uint64_t v75 = *v73;
  uint64_t v74 = v73[1];
  *uint64_t v72 = v75;
  v72[1] = v74;
  swift_bridgeObjectRelease();
  uint64_t v76 = v5[19];
  v77 = (void *)(a1 + v76);
  v78 = (uint64_t *)(a2 + v76);
  uint64_t v80 = *v78;
  uint64_t v79 = v78[1];
  void *v77 = v80;
  v77[1] = v79;
  swift_bridgeObjectRelease();
  uint64_t v81 = v5[20];
  v82 = (void *)(a1 + v81);
  v83 = (uint64_t *)(a2 + v81);
  uint64_t v85 = *v83;
  uint64_t v84 = v83[1];
  void *v82 = v85;
  v82[1] = v84;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v5[21]) = *(unsigned char *)(a2 + v5[21]);
  uint64_t v86 = v5[22];
  uint64_t v87 = a1 + v86;
  uint64_t v88 = a2 + v86;
  uint64_t v89 = type metadata accessor for WeatherConditionBackgroundModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 40))(v87, v88, v89);
  *(unsigned char *)(a1 + v5[23]) = *(unsigned char *)(a2 + v5[23]);
  *(unsigned char *)(a1 + v5[24]) = *(unsigned char *)(a2 + v5[24]);
  uint64_t v90 = v5[25];
  v91 = (void *)(a1 + v90);
  v92 = (uint64_t *)(a2 + v90);
  uint64_t v94 = *v92;
  uint64_t v93 = v92[1];
  void *v91 = v94;
  v91[1] = v93;
  swift_bridgeObjectRelease();
  *(void *)(a1 + v5[26]) = *(void *)(a2 + v5[26]);
  return a1;
}

uint64_t sub_1008C9398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1008C93AC);
}

uint64_t sub_1008C93AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ListLocationViewModel(0);

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_1008C93F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1008C9408);
}

uint64_t sub_1008C9408(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ListLocationViewModel(0);

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v4);
}

uint64_t type metadata accessor for LocationRowContentViewLargeText()
{
  uint64_t result = qword_100E9D688;
  if (!qword_100E9D688) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1008C949C()
{
  uint64_t result = type metadata accessor for ListLocationViewModel(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1008C9528()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1008C9544()
{
  return EnvironmentValues.redactionReasons.getter();
}

uint64_t sub_1008C9568(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RedactionReasons();
  __chkstk_darwin(v2);
  sub_1001626E0();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v4 - v3, a1);
  return EnvironmentValues.redactionReasons.setter();
}

uint64_t sub_1008C9628(uint64_t a1)
{
  return sub_1008C9638(a1, 0);
}

uint64_t sub_1008C9630(uint64_t a1)
{
  return sub_1008C9638(a1, 2u);
}

uint64_t sub_1008C9638(uint64_t a1, unsigned __int8 a2)
{
  sub_10062DE24(a2, a1);
  if (v2)
  {
    sub_10017DF08(&qword_100E79A90);
    type metadata accessor for RedactionReasons();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C251B0;
    static RedactionReasons.placeholder.getter();
  }
  else
  {
    type metadata accessor for RedactionReasons();
  }
  sub_1008CB920(&qword_100E6DA70, (void (*)(uint64_t))&type metadata accessor for RedactionReasons);
  sub_10017DF08(&qword_100E79A80);
  sub_1001246C8(&qword_100E79A88, &qword_100E79A80);
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_1008C97C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.effectiveForegroundStyle.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1008C97F0()
{
  uint64_t v1 = sub_10017DF08(&qword_100E9D6C0);
  __chkstk_darwin(v1 - 8);
  sub_1001626E0();
  uint64_t v4 = v3 - v2;
  *(void *)uint64_t v4 = static HorizontalAlignment.leading.getter();
  *(void *)(v4 + 8) = 0;
  *(unsigned char *)(v4 + 16) = 1;
  uint64_t v5 = sub_10017DF08(&qword_100E9D6C8);
  sub_1008C98EC(v0, (void *)(v4 + *(int *)(v5 + 44)));
  static Alignment.leading.getter();
  sub_100BD8458();
  return sub_1001781AC(v4, &qword_100E9D6C0);
}

uint64_t sub_1008C98EC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v118 = a1;
  v107 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100E9D6D0);
  __chkstk_darwin(v3 - 8);
  uint64_t v116 = (uint64_t)&v100 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v115 = (uint64_t)&v100 - v6;
  uint64_t v7 = type metadata accessor for LocationRowSubheadingView(0);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v100 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v100 - v12;
  uint64_t v14 = type metadata accessor for ListLocationViewModel(0);
  v15 = (uint64_t *)(a1 + *(int *)(v14 + 24));
  uint64_t v16 = v15[1];
  uint64_t v120 = *v15;
  uint64_t v121 = v16;
  unint64_t v17 = sub_10014A85C();
  swift_bridgeObjectRetain();
  unint64_t v108 = v17;
  uint64_t v18 = Text.init<A>(_:)();
  uint64_t v20 = v19;
  char v22 = v21 & 1;
  swift_beginAccess();
  sub_1008E4C10();
  swift_endAccess();
  Font.init(_:)();
  uint64_t v23 = Text.font(_:)();
  uint64_t v111 = v24;
  uint64_t v112 = v23;
  int v105 = v25;
  uint64_t v117 = v26;
  swift_release();
  sub_100191924(v18, v20, v22);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v27 = v118;
  sub_1008CB874(v118, (uint64_t)v10, (void (*)(void))type metadata accessor for ListLocationViewModel);
  long long v28 = &v10[*(int *)(v8 + 28)];
  *(void *)long long v28 = swift_getKeyPath();
  v28[8] = 0;
  char v29 = (uint64_t *)&v10[*(int *)(v8 + 32)];
  *char v29 = swift_getKeyPath();
  sub_10017DF08(&qword_100E62D60);
  swift_storeEnumTagMultiPayload();
  v113 = v13;
  v114 = v10;
  sub_1008CB7E0((uint64_t)v10, (uint64_t)v13);
  uint64_t v109 = v14;
  uint64_t v30 = (uint64_t *)(v27 + *(int *)(v14 + 68));
  uint64_t v31 = v30[1];
  if (v31)
  {
    uint64_t v32 = *v30;
    uint64_t v33 = (uint64_t *)(v118 + *(int *)(v109 + 64));
    uint64_t v34 = v33[1];
    uint64_t v120 = *v33;
    uint64_t v121 = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v35 = Text.init<A>(_:)();
    uint64_t v37 = v36;
    char v39 = v38 & 1;
    swift_beginAccess();
    sub_1008E564C();
    swift_endAccess();
    Font.init(_:)();
    uint64_t v106 = Text.font(_:)();
    uint64_t v102 = v40;
    char v42 = v41;
    uint64_t v100 = v43;
    swift_release();
    int v101 = v42 & 1;
    sub_100191924(v35, v37, v39);
    swift_bridgeObjectRelease();
    uint64_t v120 = v32;
    uint64_t v121 = v31;
    uint64_t v44 = Text.init<A>(_:)();
    uint64_t v46 = v45;
    char v48 = v47 & 1;
    swift_beginAccess();
    sub_1008E5754();
    swift_endAccess();
    Font.init(_:)();
    uint64_t v49 = Text.font(_:)();
    uint64_t v51 = v50;
    LOBYTE(v32) = v52;
    swift_release();
    sub_100191924(v44, v46, v48);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    v53 = (void *)sub_1008E564C();
    swift_endAccess();
    [v53 capHeight];

    swift_beginAccess();
    uint64_t v54 = (void *)sub_1008E5754();
    swift_endAccess();
    [v54 capHeight];

    uint64_t v55 = Text.baselineOffset(_:)();
    uint64_t v57 = v56;
    char v59 = v58 & 1;
    sub_100191924(v49, v51, v32 & 1);
    swift_bridgeObjectRelease();
    uint64_t v60 = v106;
    uint64_t v61 = v102;
    LOBYTE(v49) = v101;
    uint64_t v103 = static Text.+ infix(_:_:)();
    uint64_t v63 = v62;
    int v104 = v64;
    unint64_t v66 = v65;
    sub_100191924(v55, v57, v59);
    swift_bridgeObjectRelease();
    uint64_t v67 = v60;
    uint64_t v68 = v61;
    char v69 = v49;
  }
  else
  {
    uint64_t v70 = (uint64_t *)(v118 + *(int *)(v109 + 64));
    uint64_t v71 = v70[1];
    uint64_t v120 = *v70;
    uint64_t v121 = v71;
    swift_bridgeObjectRetain();
    uint64_t v72 = Text.init<A>(_:)();
    uint64_t v74 = v73;
    char v76 = v75 & 1;
    swift_beginAccess();
    sub_1008E564C();
    swift_endAccess();
    Font.init(_:)();
    uint64_t v103 = Text.font(_:)();
    uint64_t v63 = v77;
    int v104 = v78;
    unint64_t v66 = v79;
    swift_release();
    uint64_t v67 = v72;
    uint64_t v68 = v74;
    char v69 = v76;
  }
  sub_100191924(v67, v68, v69);
  swift_bridgeObjectRelease();
  uint64_t v80 = swift_getKeyPath();
  char v81 = *(unsigned char *)(v118 + *(int *)(v109 + 84));
  uint64_t v82 = v115;
  uint64_t v106 = v80;
  unint64_t v108 = v66;
  if (v81)
  {
    uint64_t v83 = sub_10017DF08(&qword_100E9D6D8);
    _s7Weather24LocationCompositionStateOwst_0(v82, 1, 1, v83);
    char v84 = v104;
    uint64_t v85 = v103;
    sub_100190CC4(v103, v63, v104 & 1);
    swift_bridgeObjectRetain();
  }
  else
  {
    char v84 = v104;
    uint64_t v85 = v103;
    sub_100190CC4(v103, v63, v104 & 1);
    swift_bridgeObjectRetain();
    sub_1008CA270(v118, v82);
    uint64_t v86 = sub_10017DF08(&qword_100E9D6D8);
    _s7Weather24LocationCompositionStateOwst_0(v82, 0, 1, v86);
  }
  uint64_t v87 = v63;
  char v88 = v105 & 1;
  LOBYTE(v120) = v105 & 1;
  uint64_t v89 = (uint64_t)v114;
  sub_1008CB874((uint64_t)v113, (uint64_t)v114, (void (*)(void))type metadata accessor for LocationRowSubheadingView);
  char v90 = v84 & 1;
  char v119 = v84 & 1;
  uint64_t v91 = v116;
  sub_10006DF38(v82, v116, &qword_100E9D6D0);
  v92 = v107;
  uint64_t v93 = v111;
  void *v107 = v112;
  v92[1] = v93;
  *((unsigned char *)v92 + 16) = v88;
  v92[3] = v117;
  *((_WORD *)v92 + 16) = 256;
  v92[5] = KeyPath;
  v92[6] = 2;
  *((unsigned char *)v92 + 56) = 0;
  uint64_t v94 = (int *)sub_10017DF08(&qword_100E9D6E0);
  sub_1008CB874(v89, (uint64_t)v92 + v94[12], (void (*)(void))type metadata accessor for LocationRowSubheadingView);
  v95 = (char *)v92 + v94[16];
  *(void *)v95 = v85;
  *((void *)v95 + 1) = v87;
  v95[16] = v90;
  uint64_t v96 = v106;
  *((void *)v95 + 3) = v108;
  *((void *)v95 + 4) = v96;
  *((void *)v95 + 5) = 1;
  v95[48] = 0;
  sub_10006DF38(v91, (uint64_t)v92 + v94[20], &qword_100E9D6D0);
  uint64_t v98 = v111;
  uint64_t v97 = v112;
  sub_100190CC4(v112, v111, v88);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100190CC4(v85, v87, v90);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100190CC4(v97, v98, v88);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1001781AC(v115, &qword_100E9D6D0);
  sub_100191924(v85, v87, v90);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1008CB8C8((uint64_t)v113, (void (*)(void))type metadata accessor for LocationRowSubheadingView);
  sub_100191924(v97, v98, v88);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1001781AC(v116, &qword_100E9D6D0);
  sub_100191924(v85, v87, v119);
  swift_release();
  swift_bridgeObjectRelease();
  sub_1008CB8C8((uint64_t)v114, (void (*)(void))type metadata accessor for LocationRowSubheadingView);
  sub_100191924(v97, v98, v120);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1008CA270@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v158 = a1;
  uint64_t v157 = a2;
  uint64_t v181 = sub_10017DF08(&qword_100E79978);
  __chkstk_darwin(v181);
  v145 = (uint64_t *)((char *)&v137 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v156 = sub_10017DF08(&qword_100E79980);
  __chkstk_darwin(v156);
  v146 = (char *)&v137 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v147 = (uint64_t)&v137 - v5;
  uint64_t v153 = sub_10017DF08(&qword_100E9D6E8);
  __chkstk_darwin(v153);
  uint64_t v155 = (uint64_t)&v137 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = sub_10017DF08(&qword_100E651D0);
  __chkstk_darwin(v154);
  v144 = (char *)&v137 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = type metadata accessor for TemperatureHighLowTextVertical();
  uint64_t v141 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  v140 = (char *)&v137 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = sub_10017DF08(&qword_100E79990);
  __chkstk_darwin(v149);
  v143 = (char *)&v137 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = sub_10017DF08(&qword_100E9D6F0);
  uint64_t v139 = *(void *)(v151 - 8);
  __chkstk_darwin(v151);
  v137 = (char *)&v137 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v138 = (char *)&v137 - v12;
  uint64_t v13 = type metadata accessor for LocationRowContentViewLargeText();
  __chkstk_darwin(v13 - 8);
  v178 = (char *)&v137 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100E9D6F8);
  __chkstk_darwin(v15 - 8);
  uint64_t v152 = (uint64_t)&v137 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v150 = (char *)&v137 - v18;
  uint64_t v180 = type metadata accessor for RedactionReasons();
  uint64_t v183 = *(void *)(v180 - 8);
  __chkstk_darwin(v180);
  v179 = (char *)&v137 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for BlendMode();
  uint64_t v176 = *(void *)(v20 - 8);
  v177 = (void (*)(void, void))v20;
  __chkstk_darwin(v20);
  v175 = (char *)&v137 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10017DF08(&qword_100EAADC0) - 8;
  __chkstk_darwin(v22);
  v164 = (uint64_t *)((char *)&v137 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v163 = type metadata accessor for Image.Scale();
  uint64_t v161 = *(void *)(v163 - 8);
  __chkstk_darwin(v163);
  v159 = (char *)&v137 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v162 = sub_10017DF08(&qword_100E79E68) - 8;
  __chkstk_darwin(v162);
  v160 = (char *)&v137 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = sub_10017DF08(&qword_100E9D700) - 8;
  __chkstk_darwin(v168);
  uint64_t v165 = (uint64_t)&v137 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = sub_10017DF08(&qword_100E9D708) - 8;
  __chkstk_darwin(v167);
  v166 = (char *)&v137 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = sub_10017DF08(&qword_100E9D710) - 8;
  __chkstk_darwin(v170);
  uint64_t v169 = (uint64_t)&v137 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = sub_10017DF08(&qword_100E9D718) - 8;
  __chkstk_darwin(v173);
  uint64_t v171 = (uint64_t)&v137 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = sub_10017DF08(&qword_100E9D720) - 8;
  __chkstk_darwin(v174);
  uint64_t v148 = (uint64_t)&v137 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  v172 = (char *)&v137 - v32;
  __chkstk_darwin(v33);
  uint64_t v182 = (uint64_t)&v137 - v34;
  uint64_t v35 = sub_1008CB5D0();
  uint64_t v37 = v36;
  char v39 = v38 & 1;
  swift_beginAccess();
  sub_1008E526C();
  swift_endAccess();
  Font.init(_:)();
  uint64_t v40 = Text.font(_:)();
  uint64_t v42 = v41;
  char v44 = v43;
  uint64_t v46 = v45;
  swift_release();
  char v47 = v44 & 1;
  sub_100191924(v35, v37, v39);
  swift_bridgeObjectRelease();
  uint64_t v48 = v161;
  uint64_t v49 = v159;
  uint64_t v50 = v163;
  (*(void (**)(char *, void, uint64_t))(v161 + 104))(v159, enum case for Image.Scale.small(_:), v163);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v52 = *(int *)(v22 + 36);
  v53 = v164;
  uint64_t v54 = v48;
  uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
  uint64_t v56 = v50;
  v55((char *)v164 + v52, v49, v50);
  uint64_t v57 = (uint64_t)v53;
  uint64_t *v53 = KeyPath;
  uint64_t v58 = (uint64_t)v160;
  sub_10006DF38(v57, (uint64_t)&v160[*(int *)(v162 + 44)], &qword_100EAADC0);
  *(void *)uint64_t v58 = v40;
  *(void *)(v58 + 8) = v42;
  *(unsigned char *)(v58 + 16) = v47;
  *(void *)(v58 + 24) = v46;
  sub_100190CC4(v40, v42, v47);
  swift_bridgeObjectRetain();
  sub_1001781AC(v57, &qword_100EAADC0);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v49, v56);
  sub_100191924(v40, v42, v47);
  swift_bridgeObjectRelease();
  LODWORD(KeyPath) = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v59 = v165;
  sub_10006DF38(v58, v165, &qword_100E79E68);
  *(_DWORD *)(v59 + *(int *)(v168 + 44)) = KeyPath;
  uint64_t v60 = v58;
  uint64_t v61 = (uint64_t)v178;
  sub_1001781AC(v60, &qword_100E79E68);
  uint64_t v63 = v175;
  uint64_t v62 = v176;
  int v64 = v177;
  (*(void (**)(char *, void, void (*)(void, void)))(v176 + 104))(v175, enum case for BlendMode.plusLighter(_:), v177);
  uint64_t v65 = (uint64_t)v166;
  (*(void (**)(char *, char *, void (*)(void, void)))(v62 + 16))(&v166[*(int *)(v167 + 44)], v63, v64);
  sub_10006DF38(v59, v65, &qword_100E9D700);
  (*(void (**)(char *, void))(v62 + 8))(v63, v64);
  sub_1001781AC(v59, &qword_100E9D700);
  uint64_t v66 = v169;
  sub_10006DF38(v65, v169, &qword_100E9D708);
  *(_WORD *)(v66 + *(int *)(v170 + 44)) = 256;
  sub_1001781AC(v65, &qword_100E9D708);
  uint64_t v67 = v158;
  uint64_t v68 = *((void *)sub_100B747B0() + 2);
  swift_bridgeObjectRelease();
  if (v68) {
    uint64_t v69 = 1;
  }
  else {
    uint64_t v69 = 4;
  }
  uint64_t v70 = swift_getKeyPath();
  uint64_t v71 = v171;
  sub_10006DF38(v66, v171, &qword_100E9D710);
  uint64_t v72 = v71 + *(int *)(v173 + 44);
  *(void *)uint64_t v72 = v70;
  *(void *)(v72 + 8) = v69;
  *(unsigned char *)(v72 + 16) = 0;
  sub_1001781AC(v66, &qword_100E9D710);
  uint64_t v73 = swift_getKeyPath();
  uint64_t v74 = v67;
  char v75 = sub_100B747B0();
  char v76 = v179;
  sub_1008C9638((uint64_t)v75, 0);
  swift_bridgeObjectRelease();
  uint64_t v77 = (uint64_t)v172;
  int v78 = (uint64_t *)&v172[*(int *)(v174 + 44)];
  unint64_t v79 = (char *)v78 + *(int *)(v181 + 28);
  uint64_t v80 = v183;
  char v81 = v76;
  uint64_t v82 = v76;
  uint64_t v83 = v180;
  uint64_t v176 = *(void *)(v183 + 16);
  ((void (*)(char *, char *, uint64_t))v176)(v79, v81, v180);
  uint64_t *v78 = v73;
  sub_10006DF38(v71, v77, &qword_100E9D718);
  uint64_t v84 = v80 + 8;
  uint64_t v85 = *(void (**)(void, void))(v80 + 8);
  uint64_t v86 = v82;
  uint64_t v87 = v82;
  uint64_t v88 = v83;
  uint64_t v183 = v84;
  v177 = v85;
  v85(v86, v83);
  sub_1001781AC(v71, &qword_100E9D718);
  sub_10020E72C(v77, v182, &qword_100E9D720);
  uint64_t v89 = (int *)type metadata accessor for ListLocationViewModel(0);
  LODWORD(v78) = *(unsigned __int8 *)(v74 + v89[24]);
  sub_1008CB874(v74, v61, (void (*)(void))type metadata accessor for LocationRowContentViewLargeText);
  if (v78 != 1)
  {
    sub_1008CB8C8(v61, (void (*)(void))type metadata accessor for LocationRowContentViewLargeText);
    goto LABEL_9;
  }
  char v90 = sub_100B747B0();
  sub_10062DE24(2u, (uint64_t)v90);
  char v92 = v91;
  swift_bridgeObjectRelease();
  sub_1008CB8C8(v61, (void (*)(void))type metadata accessor for LocationRowContentViewLargeText);
  if (v92)
  {
LABEL_9:
    uint64_t v116 = v89[19];
    uint64_t v117 = (char **)(v74 + v89[18]);
    uint64_t v118 = v117[1];
    v175 = *v117;
    uint64_t v119 = *(void *)(v74 + v116 + 8);
    v178 = *(char **)(v74 + v116);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v120 = sub_100B747B0();
    sub_10062DE24(2u, (uint64_t)v120);
    LODWORD(v174) = v121;
    swift_bridgeObjectRelease();
    v122 = (uint64_t *)(v74 + v89[20]);
    uint64_t v124 = *v122;
    uint64_t v123 = v122[1];
    uint64_t v125 = swift_getKeyPath();
    swift_bridgeObjectRetain();
    v126 = sub_100B747B0();
    sub_1008C9638((uint64_t)v126, 2u);
    swift_bridgeObjectRelease();
    v127 = v145;
    ((void (*)(char *, char *, uint64_t))v176)((char *)v145 + *(int *)(v181 + 28), v87, v88);
    uint64_t *v127 = v125;
    uint64_t v128 = (uint64_t)v146;
    sub_10006DF38((uint64_t)v127, (uint64_t)&v146[*(int *)(v156 + 36)], &qword_100E79978);
    *(void *)uint64_t v128 = v175;
    *(void *)(v128 + 8) = v118;
    *(void *)(v128 + 16) = v178;
    *(void *)(v128 + 24) = v119;
    *(unsigned char *)(v128 + 32) = v174 & 1;
    *(void *)(v128 + 40) = v124;
    *(void *)(v128 + 48) = v123;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001781AC((uint64_t)v127, &qword_100E79978);
    v177(v87, v88);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v129 = v147;
    sub_10020E72C(v128, v147, &qword_100E79980);
    sub_10006DF38(v129, v155, &qword_100E79980);
    swift_storeEnumTagMultiPayload();
    unint64_t v130 = sub_1004A0AFC();
    uint64_t v131 = sub_1001246C8((unint64_t *)&unk_100EAADB0, &qword_100E651D0);
    uint64_t v184 = v149;
    uint64_t v185 = v154;
    unint64_t v186 = v130;
    uint64_t v187 = v131;
    swift_getOpaqueTypeConformance2();
    sub_1004A0BD8();
    uint64_t v115 = (uint64_t)v150;
    _ConditionalContent<>.init(storage:)();
    sub_1001781AC(v129, &qword_100E79980);
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v93 = v140;
  TemperatureHighLowTextVertical.init(highTemperature:lowTemperature:showNumericOnlyHighLow:scaleFactor:additionalSpacing:)();
  uint64_t v94 = (uint64_t *)(v74 + v89[20]);
  uint64_t v95 = v94[1];
  uint64_t v184 = *v94;
  uint64_t v185 = v95;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v96 = Text.init<A>(_:)();
  uint64_t v98 = v97;
  char v100 = v99 & 1;
  sub_1008CB920(&qword_100E63F90, (void (*)(uint64_t))&type metadata accessor for TemperatureHighLowTextVertical);
  uint64_t v101 = (uint64_t)v143;
  uint64_t v102 = v142;
  View.accessibilityLabel(_:)();
  sub_100191924(v96, v98, v100);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v141 + 8))(v93, v102);
  uint64_t v103 = enum case for DynamicTypeSize.accessibility3(_:);
  uint64_t v104 = type metadata accessor for DynamicTypeSize();
  uint64_t v105 = (uint64_t)v144;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v104 - 8) + 104))(v144, v103, v104);
  sub_1008CB920(&qword_100E651F0, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result)
  {
    unint64_t v107 = sub_1004A0AFC();
    uint64_t v108 = sub_1001246C8((unint64_t *)&unk_100EAADB0, &qword_100E651D0);
    uint64_t v109 = v137;
    uint64_t v110 = v149;
    uint64_t v111 = v154;
    View.dynamicTypeSize<A>(_:)();
    sub_1001781AC(v105, &qword_100E651D0);
    sub_1001781AC(v101, &qword_100E79990);
    uint64_t v112 = v139;
    v113 = v138;
    uint64_t v114 = v151;
    (*(void (**)(char *, char *, uint64_t))(v139 + 32))(v138, v109, v151);
    (*(void (**)(uint64_t, char *, uint64_t))(v112 + 16))(v155, v113, v114);
    swift_storeEnumTagMultiPayload();
    uint64_t v184 = v110;
    uint64_t v185 = v111;
    unint64_t v186 = v107;
    uint64_t v187 = v108;
    swift_getOpaqueTypeConformance2();
    sub_1004A0BD8();
    uint64_t v115 = (uint64_t)v150;
    _ConditionalContent<>.init(storage:)();
    (*(void (**)(char *, uint64_t))(v112 + 8))(v113, v114);
LABEL_10:
    uint64_t v132 = v182;
    uint64_t v133 = v148;
    sub_10006DF38(v182, v148, &qword_100E9D720);
    uint64_t v134 = v152;
    sub_10006DF38(v115, v152, &qword_100E9D6F8);
    uint64_t v135 = v157;
    sub_10006DF38(v133, v157, &qword_100E9D720);
    uint64_t v136 = sub_10017DF08(&qword_100E9D728);
    sub_10006DF38(v134, v135 + *(int *)(v136 + 48), &qword_100E9D6F8);
    sub_1001781AC(v115, &qword_100E9D6F8);
    sub_1001781AC(v132, &qword_100E9D720);
    sub_1001781AC(v134, &qword_100E9D6F8);
    return sub_1001781AC(v133, &qword_100E9D720);
  }
  __break(1u);
  return result;
}

uint64_t sub_1008CB5D0()
{
  uint64_t v1 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v1 - 8);
  sub_1001626E0();
  uint64_t v2 = type metadata accessor for ListLocationViewModel(0);
  if (*(void *)(v0 + *(int *)(v2 + 52) + 8))
  {
    swift_bridgeObjectRetain();
    LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v3._countAndFlagsBits = 0;
    v3._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v3);
    Image.init(systemName:)();
    LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
    swift_release();
    v4._countAndFlagsBits = 0;
    v4._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v4);
    LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(*(Swift::String *)(v0 + *(int *)(v2 + 48)));
    v5._countAndFlagsBits = 0;
    v5._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v5);
    LocalizedStringKey.init(stringInterpolation:)();
    return Text.init(_:tableName:bundle:comment:)();
  }
  else
  {
    sub_10014A85C();
    swift_bridgeObjectRetain();
    return Text.init<A>(_:)();
  }
}

uint64_t sub_1008CB740@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = EnvironmentValues.lineLimit.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1008CB778()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t sub_1008CB7AC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.effectiveForegroundStyle.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1008CB7E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationRowSubheadingView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1008CB84C()
{
  return EnvironmentValues.redactionReasons.getter();
}

uint64_t sub_1008CB874(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_1008CB8C8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1008CB920(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1008CB96C()
{
  unint64_t result = qword_100E9D730;
  if (!qword_100E9D730)
  {
    sub_10018C6DC(&qword_100E9D738);
    sub_1001246C8(&qword_100E9D740, &qword_100E9D6C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9D730);
  }
  return result;
}

uint64_t sub_1008CBA0C()
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 32);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 72);
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 128);
  return v0;
}

uint64_t sub_1008CBA4C()
{
  sub_1008CBA0C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WeatherMenuInteractor()
{
  return self;
}

unint64_t sub_1008CBAA8()
{
  unint64_t result = qword_100E9D808;
  if (!qword_100E9D808)
  {
    type metadata accessor for WeatherMenuInteractor();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9D808);
  }
  return result;
}

uint64_t sub_1008CBB2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActivityAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1008CBB90(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v11 = type metadata accessor for Location();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
LABEL_11:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v8 = type metadata accessor for WeatherCondition();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v8))
      {
        uint64_t v9 = sub_10017DF08(&qword_100E63A50);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v8);
      }
      uint64_t v12 = *(int *)(sub_10017DF08(&qword_100E6F648) + 48);
      uint64_t v13 = (uint64_t *)((char *)a1 + v12);
      uint64_t v14 = (uint64_t *)((char *)a2 + v12);
      uint64_t v15 = v14[1];
      *uint64_t v13 = *v14;
      v13[1] = v15;
      swift_bridgeObjectRetain();
      goto LABEL_11;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t sub_1008CBD5C(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v4 = type metadata accessor for Location();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(a1, v4);
  }
  else if (!result)
  {
    uint64_t v3 = type metadata accessor for WeatherCondition();
    if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v3)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    }
    sub_10017DF08(&qword_100E6F648);
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *sub_1008CBE60(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v9 = type metadata accessor for Location();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
LABEL_9:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = type metadata accessor for WeatherCondition();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_10017DF08(&qword_100E63A50);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v10 = *(int *)(sub_10017DF08(&qword_100E6F648) + 48);
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = *((void *)v12 + 1);
    *(void *)uint64_t v11 = *(void *)v12;
    *((void *)v11 + 1) = v13;
    swift_bridgeObjectRetain();
    goto LABEL_9;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *sub_1008CBFE8(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1008CC188((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v9 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = type metadata accessor for WeatherCondition();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
      {
        uint64_t v8 = sub_10017DF08(&qword_100E63A50);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
      }
      uint64_t v10 = *(int *)(sub_10017DF08(&qword_100E6F648) + 48);
      uint64_t v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      *(void *)uint64_t v11 = *(void *)v12;
      *((void *)v11 + 1) = *((void *)v12 + 1);
      swift_bridgeObjectRetain();
      goto LABEL_10;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1008CC188(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DebugAction();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_1008CC1E4(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v9 = type metadata accessor for Location();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
LABEL_9:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = type metadata accessor for WeatherCondition();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_10017DF08(&qword_100E63A50);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v10 = sub_10017DF08(&qword_100E6F648);
    *(_OWORD *)&a1[*(int *)(v10 + 48)] = *(_OWORD *)&a2[*(int *)(v10 + 48)];
    goto LABEL_9;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *sub_1008CC360(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1008CC188((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v9 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
LABEL_10:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = type metadata accessor for WeatherCondition();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
      {
        uint64_t v8 = sub_10017DF08(&qword_100E63A50);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
      }
      uint64_t v10 = sub_10017DF08(&qword_100E6F648);
      *(_OWORD *)&a1[*(int *)(v10 + 48)] = *(_OWORD *)&a2[*(int *)(v10 + 48)];
      goto LABEL_10;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1008CC4EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v46 = a1;
  uint64_t v3 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = sub_10017DF08(&qword_100E63A50);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v44 - v14;
  uint64_t v16 = type metadata accessor for DebugAction();
  __chkstk_darwin(v16);
  sub_1001626E0();
  uint64_t v19 = v18 - v17;
  uint64_t v45 = sub_10017DF08(&qword_100E9D978);
  sub_100179C0C();
  uint64_t v21 = v20;
  __chkstk_darwin(v22);
  sub_1001626E0();
  uint64_t v25 = v24 - v23;
  sub_10039C0B4(v2, v19);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v9, v19, v3);
      sub_10017DF08(&qword_100E635E0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100C251B0;
      sub_10017D758();
      *(void *)(inited + 32) = v28;
      *(void *)(inited + 40) = v29;
      *(void *)(inited + 72) = v3;
      uint64_t v31 = sub_100170694(v30);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v5 + 16))(v31, v9, v3);
      Dictionary.init(dictionaryLiteral:)();
      sub_100180614();
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
    }
    else
    {
      Dictionary.init(dictionaryLiteral:)();
      sub_100180614();
    }
  }
  else
  {
    uint64_t v32 = (uint64_t *)(v19 + *(int *)(sub_10017DF08(&qword_100E6F648) + 48));
    uint64_t v33 = *v32;
    uint64_t v34 = v32[1];
    sub_10039C118(v19, (uint64_t)v15);
    sub_10017DF08(&qword_100E635E0);
    uint64_t v35 = swift_initStackObject();
    *(_OWORD *)(v35 + 16) = xmmword_100C25ED0;
    *(void *)(v35 + 32) = 0x6F697469646E6F63;
    *(void *)(v35 + 40) = 0xE90000000000006ELL;
    sub_1000ACA10((uint64_t)v15, (uint64_t)v12);
    uint64_t v36 = type metadata accessor for WeatherCondition();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v36) == 1)
    {
      sub_1008CCA4C((uint64_t)v12);
      *(void *)(v35 + 72) = &type metadata for String;
      *(void *)(v35 + 48) = 0;
      *(void *)(v35 + 56) = 0xE000000000000000;
    }
    else
    {
      uint64_t v48 = v36;
      uint64_t v37 = sub_100170694((uint64_t *)&v47);
      (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v37, v12, v36);
      sub_100098DB4(&v47, (_OWORD *)(v35 + 48));
    }
    sub_10017D758();
    *(void *)(v35 + 80) = v38;
    *(void *)(v35 + 88) = v39;
    *(void *)(v35 + 120) = &type metadata for String;
    *(void *)(v35 + 96) = v33;
    *(void *)(v35 + 104) = v34;
    Dictionary.init(dictionaryLiteral:)();
    ShortDescription.init(name:_:)();
    sub_1008CCA4C((uint64_t)v15);
  }
  uint64_t v40 = v46;
  uint64_t v41 = v45;
  v46[3] = v45;
  v40[4] = sub_1008CC9F8();
  uint64_t v42 = sub_100170694(v40);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v21 + 32))(v42, v25, v41);
}

uint64_t sub_1008CC96C()
{
  sub_1008CCAAC(qword_100E9D988);

  return ShortDescribable.description.getter();
}

uint64_t sub_1008CC9C4()
{
  return sub_1008CCAAC(&qword_100E9D970);
}

unint64_t sub_1008CC9F8()
{
  unint64_t result = qword_100E9D980;
  if (!qword_100E9D980)
  {
    sub_10018C6DC(&qword_100E9D978);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9D980);
  }
  return result;
}

uint64_t sub_1008CCA4C(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E63A50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1008CCAAC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for DebugAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for SevereNhpAqiContentView()
{
  return sub_100109098();
}

uint64_t sub_1008CCB08()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1008CCB4C@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v57 = a7;
  uint64_t v58 = a6;
  uint64_t v45 = a4;
  uint64_t v52 = a3;
  v70[3] = a5;
  int v9 = a2;
  unsigned int v10 = a2 & 0x100;
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  v70[7] = a5;
  sub_10017C794();
  uint64_t v50 = sub_10017F7C0();
  uint64_t v56 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v53 = v11;
  __chkstk_darwin(v12);
  sub_100162EF8();
  uint64_t v55 = v13;
  __chkstk_darwin(v14);
  uint64_t v54 = (uint64_t)&v41 - v15;
  v70[0] = a5;
  v70[1] = a5;
  v70[2] = a5;
  v70[3] = type metadata accessor for Optional();
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  v70[7] = a5;
  sub_10017C794();
  sub_10017F7C0();
  uint64_t v51 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v49 = v16;
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v59 = v18;
  __chkstk_darwin(v19);
  uint64_t v60 = (uint64_t)&v41 - v20;
  if (v9)
  {
    if (v9 == 1)
    {
      if (v10)
      {
        uint64_t v21 = &qword_100E93C00;
        goto LABEL_11;
      }
    }
    else if (v10)
    {
      uint64_t v21 = &qword_100E94010;
      goto LABEL_11;
    }
    uint64_t v21 = &qword_100E93E08;
    goto LABEL_11;
  }
  if (v10) {
    uint64_t v21 = &qword_100E937F0;
  }
  else {
    uint64_t v21 = &qword_100E939F8;
  }
LABEL_11:
  memcpy(v70, v21, sizeof(v70));
  uint64_t v22 = memcpy(v69, v70, sizeof(v69));
  __chkstk_darwin(v22);
  uint64_t v23 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v23;
  *(&v41 - 6) = a1;
  *((unsigned char *)&v41 - 40) = v9;
  uint64_t v44 = a1;
  int v42 = v9;
  unsigned int v43 = v10 >> 8;
  *((unsigned char *)&v41 - 39) = BYTE1(v10);
  uint64_t v24 = v45;
  *(&v41 - 4) = v52;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v26 = v59;
  Group<A>.init(content:)();
  uint64_t v68 = WitnessTable;
  uint64_t v27 = v51;
  uint64_t v46 = swift_getWitnessTable();
  sub_100121584(v26, v27, v60);
  uint64_t v28 = v49;
  long long v47 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8);
  uint64_t v48 = v49 + 8;
  uint64_t v29 = v47(v26, v27);
  __chkstk_darwin(v29);
  uint64_t v30 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v30;
  *(&v41 - 6) = v44;
  *((unsigned char *)&v41 - 40) = v42;
  *((unsigned char *)&v41 - 39) = v43;
  *(&v41 - 4) = v31;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = v55;
  Group<A>.init(content:)();
  uint64_t v67 = v32;
  uint64_t v34 = v56;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v35 = v54;
  sub_100121584(v33, v34, v54);
  uint64_t v36 = v53;
  uint64_t v37 = *(void (**)(void))(v53 + 8);
  sub_10017C768();
  v37();
  uint64_t v38 = v59;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v59, v60, v27);
  uint64_t v65 = v38;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v33, v35, v34);
  uint64_t v66 = v33;
  uint64_t v63 = v27;
  uint64_t v64 = v34;
  uint64_t v61 = v46;
  uint64_t v62 = v58;
  sub_1006E9080();
  sub_10017C768();
  v37();
  uint64_t v39 = v47;
  v47(v60, v27);
  sub_10017C768();
  v37();
  return v39(v38, v27);
}

uint64_t sub_1008CD00C@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v101 = a6;
  uint64_t v102 = a5;
  uint64_t v10 = sub_10017DF08(&qword_100E64E80);
  __chkstk_darwin(v10 - 8);
  uint64_t v99 = (uint64_t)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for Optional();
  uint64_t v112 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  uint64_t v119 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v118 = (char *)&v94 - v14;
  uint64_t v98 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v98);
  uint64_t v95 = (uint64_t)&v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v94 - v17;
  uint64_t v105 = *(void *)(a4 - 8);
  __chkstk_darwin(v19);
  char v100 = (char *)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v111 = (char *)&v94 - v22;
  __chkstk_darwin(v23);
  uint64_t v110 = (char *)&v94 - v24;
  __chkstk_darwin(v25);
  uint64_t v108 = (char *)&v94 - v26;
  __chkstk_darwin(v27);
  uint64_t v109 = (char *)&v94 - v28;
  __chkstk_darwin(v29);
  uint64_t v106 = (char *)&v94 - v30;
  __chkstk_darwin(v31);
  unint64_t v107 = (char *)&v94 - v32;
  __chkstk_darwin(v33);
  uint64_t v104 = (char *)&v94 - v34;
  __chkstk_darwin(v35);
  uint64_t v114 = (char *)&v94 - v36;
  __chkstk_darwin(v37);
  v122 = (char *)&v94 - v38;
  __chkstk_darwin(v39);
  uint64_t v116 = (char *)&v94 - v40;
  __chkstk_darwin(v41);
  uint64_t v115 = (char *)&v94 - v42;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v94 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v94 - v47;
  uint64_t v117 = a1;
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather19SevereNhpAqiContent8_Storage_severeAlert, (uint64_t)v18);
  uint64_t v96 = a3;
  uint64_t v49 = a3[45];
  uint64_t v50 = a3[46];
  uint64_t v51 = a3[47];
  uint64_t v52 = a3[48];
  uint64_t v123 = a2;
  a2(v18, v49, v50, v51, v52);
  sub_1001F2B74((uint64_t)v18);
  uint64_t v103 = v48;
  sub_100121584((uint64_t)v45, a4, (uint64_t)v48);
  uint64_t v53 = v105 + 8;
  uint64_t v124 = *(void (**)(char *, uint64_t))(v105 + 8);
  v124(v45, a4);
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather19SevereNhpAqiContent8_Storage_nextHourPrecipitation, (uint64_t)v18);
  uint64_t v54 = v96;
  a2(v18, v96[33], v96[34], v96[35], v96[36]);
  sub_1001F2B74((uint64_t)v18);
  uint64_t v55 = v54;
  sub_100121584((uint64_t)v45, a4, (uint64_t)v115);
  uint64_t v56 = v124;
  v124(v45, a4);
  uint64_t v57 = v117;
  sub_1001F3734(v117 + OBJC_IVAR____TtCV7Weather19SevereNhpAqiContent8_Storage_airQuality, (uint64_t)v18);
  v123(v18, *v55, v55[1], v55[2], v55[3]);
  uint64_t v97 = v18;
  sub_1001F2B74((uint64_t)v18);
  sub_100121584((uint64_t)v45, a4, (uint64_t)v116);
  int v121 = v45;
  uint64_t v113 = v53;
  v56(v45, a4);
  uint64_t v58 = v57 + OBJC_IVAR____TtCV7Weather19SevereNhpAqiContent8_Storage_map;
  swift_beginAccess();
  uint64_t v59 = v58;
  uint64_t v60 = v99;
  sub_10027A764(v59, v99);
  if (_s7Weather24LocationCompositionStateOwet_0(v60, 1, v98) == 1)
  {
    sub_10027A7CC(v60);
  }
  else
  {
    uint64_t v61 = v95;
    sub_10027A82C(v60, v95);
    sub_10027A890((uint64_t)(v55 + 24), (uint64_t)v150);
    sub_10027A890((uint64_t)v150, (uint64_t)v151);
    if (v152 != 1)
    {
      uint64_t v65 = (uint64_t)v122;
      v123((char *)v61, v151[0], v151[1], v151[2], v151[3]);
      sub_1001F2B74(v61);
      uint64_t v66 = (uint64_t)v121;
      sub_100121584(v65, a4, (uint64_t)v121);
      uint64_t v67 = (void (*)(uint64_t, uint64_t))v124;
      v124((char *)v65, a4);
      uint64_t v62 = (uint64_t)v119;
      sub_100121584(v66, a4, (uint64_t)v119);
      v67(v66, a4);
      uint64_t v63 = v62;
      uint64_t v64 = 0;
      goto LABEL_7;
    }
    sub_1001F2B74(v61);
  }
  uint64_t v62 = (uint64_t)v119;
  uint64_t v63 = (uint64_t)v119;
  uint64_t v64 = 1;
LABEL_7:
  _s7Weather24LocationCompositionStateOwst_0(v63, v64, 1, a4);
  sub_1000CA354();
  uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v112 + 8);
  uint64_t v99 = (v112 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v68(v62, v120);
  uint64_t v69 = a4;
  uint64_t v70 = v117;
  uint64_t v71 = (uint64_t)v97;
  sub_1001F3734(*(void *)(v117 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v97);
  uint64_t v72 = (void (*)(uint64_t, void, void, void, void))v123;
  uint64_t v73 = (uint64_t)v122;
  v123((char *)v71, v55[16], v55[17], v55[18], v55[19]);
  sub_1001F2B74(v71);
  sub_100121584(v73, v69, (uint64_t)v121);
  v124((char *)v73, v69);
  sub_1001F3734(*(void *)(v70 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v71);
  uint64_t v74 = (uint64_t)v114;
  v72(v71, v55[8], v55[9], v55[10], v55[11]);
  sub_1001F2B74(v71);
  sub_100121584(v74, v69, v73);
  v124((char *)v74, v69);
  sub_1001F3734(*(void *)(v70 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, v71);
  uint64_t v75 = (uint64_t)v104;
  v72(v71, v55[53], v55[54], v55[55], v55[56]);
  sub_1001F2B74(v71);
  uint64_t v76 = v102;
  sub_100121584(v75, v69, v74);
  uint64_t v77 = v124;
  v124((char *)v75, v69);
  sub_1001F3734(*(void *)(v117 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, v71);
  uint64_t v78 = (uint64_t)v107;
  v123((char *)v71, v55[49], v55[50], v55[51], v55[52]);
  sub_1001F2B74(v71);
  sub_100121584(v78, v69, v75);
  unint64_t v79 = v77;
  v77((char *)v78, v69);
  uint64_t v80 = *(void (**)(uint64_t, char *, uint64_t))(v105 + 16);
  v80(v78, v103, v69);
  uint64_t v142 = v78;
  char v81 = v106;
  v80((uint64_t)v106, v115, v69);
  v143 = v81;
  uint64_t v82 = v109;
  v80((uint64_t)v109, v116, v69);
  v144 = v82;
  uint64_t v83 = v112 + 16;
  uint64_t v84 = (uint64_t)v119;
  (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v119, v118, v120);
  uint64_t v145 = v84;
  uint64_t v85 = v108;
  v80((uint64_t)v108, v121, v69);
  v146 = v85;
  uint64_t v86 = v110;
  v80((uint64_t)v110, v122, v69);
  uint64_t v147 = v86;
  uint64_t v87 = v111;
  v80((uint64_t)v111, v114, v69);
  uint64_t v148 = v87;
  uint64_t v88 = v100;
  uint64_t v89 = v104;
  v80((uint64_t)v100, v104, v69);
  uint64_t v149 = v88;
  char v90 = v88;
  uint64_t v134 = v69;
  uint64_t v135 = v69;
  uint64_t v91 = v120;
  uint64_t v136 = v69;
  uint64_t v137 = v120;
  uint64_t v138 = v69;
  uint64_t v139 = v69;
  uint64_t v140 = v69;
  uint64_t v141 = v69;
  uint64_t v126 = v76;
  uint64_t v127 = v76;
  uint64_t v128 = v76;
  uint64_t v125 = v76;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v130 = v76;
  uint64_t v131 = v76;
  uint64_t v132 = v76;
  uint64_t v133 = v76;
  sub_1006E9080();
  v79(v89, v69);
  v79(v114, v69);
  v79(v122, v69);
  v79(v121, v69);
  char v92 = *(void (**)(char *, uint64_t))(v83 - 8);
  v92(v118, v91);
  v79(v116, v69);
  v79(v115, v69);
  v79(v103, v69);
  v79(v90, v69);
  v79(v111, v69);
  v79(v110, v69);
  v79(v108, v69);
  v92(v119, v91);
  v79(v109, v69);
  v79(v106, v69);
  return ((uint64_t (*)(char *, uint64_t))v79)(v107, v69);
}

uint64_t sub_1008CDB7C@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v102 = a5;
  uint64_t v84 = a6;
  uint64_t v10 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = *(void *)(a4 - 8);
  uint64_t v13 = v82;
  __chkstk_darwin(v14);
  uint64_t v83 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v98 = (char *)&v82 - v17;
  __chkstk_darwin(v18);
  uint64_t v97 = (char *)&v82 - v19;
  __chkstk_darwin(v20);
  uint64_t v96 = (char *)&v82 - v21;
  __chkstk_darwin(v22);
  uint64_t v95 = (char *)&v82 - v23;
  __chkstk_darwin(v24);
  uint64_t v93 = (char *)&v82 - v25;
  __chkstk_darwin(v26);
  char v92 = (char *)&v82 - v27;
  __chkstk_darwin(v28);
  char v90 = (char *)&v82 - v29;
  __chkstk_darwin(v30);
  uint64_t v89 = (char *)&v82 - v31;
  __chkstk_darwin(v32);
  uint64_t v101 = (char *)&v82 - v33;
  __chkstk_darwin(v34);
  uint64_t v87 = (char *)&v82 - v35;
  __chkstk_darwin(v36);
  uint64_t v86 = (char *)&v82 - v37;
  __chkstk_darwin(v38);
  char v100 = (char *)&v82 - v39;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v82 - v41;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v82 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v82 - v47;
  uint64_t v94 = (char *)&v82 - v47;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v12);
  uint64_t v49 = a3[61];
  uint64_t v50 = a3[62];
  uint64_t v51 = a3[63];
  uint64_t v52 = a3[64];
  uint64_t v99 = a2;
  a2(v12, v49, v50, v51, v52);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v45, a4, (uint64_t)v48);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v91 = v45;
  v53(v45, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)v12);
  a2(v12, a3[41], a3[42], a3[43], a3[44]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v42, a4, (uint64_t)v45);
  uint64_t v88 = v42;
  v53(v42, a4);
  uint64_t v85 = a1;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v12);
  uint64_t v54 = (uint64_t)v100;
  v99(v12, a3[12], a3[13], a3[14], a3[15]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v54, a4, (uint64_t)v42);
  uint64_t v55 = v54;
  v53((char *)v54, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)v12);
  uint64_t v56 = (uint64_t)v86;
  uint64_t v57 = v99;
  v99(v12, a3[20], a3[21], a3[22], a3[23]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v56, a4, v55);
  v53((char *)v56, a4);
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v12);
  uint64_t v58 = (uint64_t)v87;
  v57(v12, a3[57], a3[58], a3[59], a3[60]);
  sub_1001F2B74((uint64_t)v12);
  uint64_t v59 = v58;
  sub_100121584(v58, a4, v56);
  v53((char *)v58, a4);
  uint64_t v60 = v85;
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)v12);
  uint64_t v61 = (uint64_t)v101;
  uint64_t v62 = v99;
  v99(v12, a3[37], a3[38], a3[39], a3[40]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v61, a4, v59);
  v53((char *)v61, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, (uint64_t)v12);
  uint64_t v63 = (uint64_t)v89;
  v62(v12, a3[29], a3[30], a3[31], a3[32]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v63, a4, (uint64_t)v101);
  v53((char *)v63, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, (uint64_t)v12);
  uint64_t v64 = a3[4];
  uint64_t v65 = a3[5];
  uint64_t v66 = a3[6];
  uint64_t v67 = a3[7];
  uint64_t v68 = (uint64_t)v90;
  v62(v12, v64, v65, v66, v67);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v68, a4, v63);
  v53((char *)v68, a4);
  uint64_t v69 = *(void (**)(uint64_t, char *, uint64_t))(v82 + 16);
  v69(v68, v94, a4);
  uint64_t v119 = v68;
  uint64_t v70 = v92;
  v69((uint64_t)v92, v91, a4);
  uint64_t v120 = v70;
  uint64_t v71 = v93;
  v69((uint64_t)v93, v88, a4);
  int v121 = v71;
  uint64_t v72 = v95;
  v69((uint64_t)v95, v100, a4);
  v122 = v72;
  uint64_t v73 = v96;
  uint64_t v74 = v86;
  v69((uint64_t)v96, v86, a4);
  uint64_t v123 = v73;
  uint64_t v75 = v97;
  uint64_t v76 = v87;
  v69((uint64_t)v97, v87, a4);
  uint64_t v124 = v75;
  uint64_t v77 = v98;
  uint64_t v78 = (uint64_t)v101;
  v69((uint64_t)v98, v101, a4);
  uint64_t v125 = v77;
  unint64_t v79 = v83;
  uint64_t v80 = v89;
  v69((uint64_t)v83, v89, a4);
  uint64_t v126 = v79;
  uint64_t v111 = a4;
  uint64_t v112 = a4;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v115 = a4;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v103 = v102;
  uint64_t v104 = v102;
  uint64_t v105 = v102;
  uint64_t v106 = v102;
  uint64_t v107 = v102;
  uint64_t v108 = v102;
  uint64_t v109 = v102;
  uint64_t v110 = v102;
  sub_1006E9080();
  v53(v80, a4);
  v53((char *)v78, a4);
  v53(v76, a4);
  v53(v74, a4);
  v53(v100, a4);
  v53(v88, a4);
  v53(v91, a4);
  v53(v94, a4);
  v53(v79, a4);
  v53(v98, a4);
  v53(v97, a4);
  v53(v96, a4);
  v53(v95, a4);
  v53(v93, a4);
  v53(v92, a4);
  return ((uint64_t (*)(char *, uint64_t))v53)(v90, a4);
}

uint64_t sub_1008CE5C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(v2 + 9)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_1008CCB4C(*(void *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_1008CE5F0()
{
  return sub_1008CE620((uint64_t (*)(void, void, void, void, void, void, void))sub_1008CD00C);
}

uint64_t sub_1008CE608()
{
  return sub_1008CE620((uint64_t (*)(void, void, void, void, void, void, void))sub_1008CDB7C);
}

uint64_t sub_1008CE620(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  if (*(unsigned char *)(v1 + 41)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return a1(*(void *)(v1 + 32), v2 | *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1008CE654(uint64_t a1)
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_10011BFD8();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v1 + 16);
  type metadata accessor for Location();
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v6 + 16))(v2, a1);
  type metadata accessor for LocationViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = 0;
  memset(v8, 0, sizeof(v8));
  swift_retain();
  sub_1001AAF58(v2, (uint64_t)v8, v5);
  sub_1001781AC((uint64_t)v8, (uint64_t *)&unk_100EA01F0);
  sub_1008CFDCC(v2, (void (*)(void))type metadata accessor for MainAction);
  return swift_release();
}

uint64_t sub_1008CE77C()
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v2);
  sub_10011BFD8();
  __int16 v3 = *(uint64_t (**)(uint64_t))(v0 + 16);
  type metadata accessor for NotificationsOptInAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = 0;
  memset(v5, 0, sizeof(v5));
  swift_retain();
  sub_1001AAF58(v1, (uint64_t)v5, v3);
  sub_1001781AC((uint64_t)v5, (uint64_t *)&unk_100EA01F0);
  sub_1008CFDCC(v1, (void (*)(void))type metadata accessor for MainAction);
  return swift_release();
}

uint64_t sub_1008CE864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v8);
  uint64_t v9 = sub_10017FDD0();
  type metadata accessor for LocationComponentAction(v9);
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = type metadata accessor for URL();
  sub_100179C0C();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  sub_100162EB8();
  sub_1001F39BC(a2, v13, (void (*)(void))type metadata accessor for LocationComponentAction);
  uint64_t v31 = a4;
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1008CFDCC(v13, (void (*)(void))type metadata accessor for LocationComponentAction);
  }
  else
  {
    char v18 = *(unsigned char *)(v13 + *(int *)(sub_10017DF08(&qword_100E66478) + 48));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v5, v13, v14);
    if ((v18 & 1) == 0)
    {
      id v28 = [self sharedApplication];
      URL._bridgeToObjectiveC()(v19);
      uint64_t v27 = v20;
      type metadata accessor for OpenExternalURLOptionsKey(0);
      sub_1008CFE24((unint64_t *)&qword_100E62F98, 255, type metadata accessor for OpenExternalURLOptionsKey);
      Dictionary.init(dictionaryLiteral:)();
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v28 openURL:v27 options:isa completionHandler:0];
    }
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v5, v14);
  }
  sub_10088F084(a1);
  uint64_t v22 = *(uint64_t (**)(uint64_t))(v5 + 16);
  uint64_t v23 = sub_10017DF08(&qword_100E66458);
  uint64_t v24 = v4 + *(int *)(v23 + 48);
  uint64_t v25 = v4 + *(int *)(v23 + 64);
  sub_1001F39BC(a2, v4, (void (*)(void))type metadata accessor for LocationComponentAction);
  sub_1008CFD64(a3, v24);
  sub_10006DF38(v31, v25, (uint64_t *)&unk_100E73CA0);
  type metadata accessor for LocationViewAction();
  sub_10017AAFC();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v33 = 0;
  memset(v32, 0, sizeof(v32));
  swift_retain();
  sub_1001AAF58(v4, (uint64_t)v32, v22);
  sub_1001781AC((uint64_t)v32, (uint64_t *)&unk_100EA01F0);
  sub_1008CFDCC(v4, (void (*)(void))type metadata accessor for MainAction);
  return swift_release();
}

uint64_t sub_1008CEBD8(uint64_t a1, long long *a2)
{
  sub_100366CA8(a2, &v35);
  uint64_t v5 = v36;
  Swift::UInt v4 = v37;
  uint64_t v7 = v38;
  unint64_t v6 = v39;
  uint64_t v8 = type metadata accessor for LocationComponentViewModel();
  __chkstk_darwin(v8 - 8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_10017DF08(&qword_100E9DAD8);
  __chkstk_darwin(v12 - 8);
  sub_1001626E0();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = type metadata accessor for LocationComponentHeaderInputModel.SegmentedControlModel.Option(0);
  sub_100179C0C();
  uint64_t v18 = v17;
  __chkstk_darwin(v19);
  sub_10011BFD8();
  if (!*(void *)(v5 + 16))
  {
    _s7Weather24LocationCompositionStateOwst_0(v15, 1, 1, v16);
    return sub_1001781AC(v15, &qword_100E9DAD8);
  }
  swift_bridgeObjectRetain();
  unint64_t v20 = sub_100246C20(v4, v7, v6);
  if (v21)
  {
    sub_1001F39BC(*(void *)(v5 + 56) + *(void *)(v18 + 72) * v20, v15, (void (*)(void))type metadata accessor for LocationComponentHeaderInputModel.SegmentedControlModel.Option);
    uint64_t v22 = 0;
  }
  else
  {
    uint64_t v22 = 1;
  }
  _s7Weather24LocationCompositionStateOwst_0(v15, v22, 1, v16);
  swift_bridgeObjectRelease();
  if (_s7Weather24LocationCompositionStateOwet_0(v15, 1, v16) == 1) {
    return sub_1001781AC(v15, &qword_100E9DAD8);
  }
  sub_1008CFD00(v15, v2);
  if (qword_100E62790 != -1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for Logger();
  sub_1002102B0(v24, (uint64_t)qword_100F51DC8);
  sub_1001F39BC(a1, v11, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  swift_bridgeObjectRetain_n();
  uint64_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    *(void *)&v33[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136315394;
    uint64_t v28 = sub_1001F26C0();
    sub_10016414C(v28, v29, (uint64_t *)v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1008CFDCC(v11, (void (*)(void))type metadata accessor for LocationComponentViewModel);
    *(_WORD *)(v27 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_10016414C(v7, v6, (uint64_t *)v33);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "User changed selection in segmented control. Component=%s, Selection=%s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1008CFDCC(v11, (void (*)(void))type metadata accessor for LocationComponentViewModel);

    swift_bridgeObjectRelease_n();
  }
  uint64_t v30 = *(uint64_t (**)(uint64_t))(v32 + 16);
  uint64_t v31 = v2 + *(int *)(v16 + 24);
  uint64_t v34 = 0;
  memset(v33, 0, sizeof(v33));
  swift_retain();
  sub_1001AAF58(v31, (uint64_t)v33, v30);
  sub_1001781AC((uint64_t)v33, (uint64_t *)&unk_100EA01F0);
  swift_release();
  return sub_1008CFDCC(v2, (void (*)(void))type metadata accessor for LocationComponentHeaderInputModel.SegmentedControlModel.Option);
}

uint64_t sub_1008CF024(uint64_t a1, uint64_t a2)
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_10011BFD8();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v2 + 16);
  uint64_t v8 = v3 + *(int *)(sub_10017DF08(&qword_100E66448) + 48);
  sub_1001F39BC(a1, v3, (void (*)(void))type metadata accessor for LocationFooterAction);
  sub_1008CFD64(a2, v8);
  type metadata accessor for LocationViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = 0;
  memset(v10, 0, sizeof(v10));
  swift_retain();
  sub_1001AAF58(v3, (uint64_t)v10, v7);
  sub_1001781AC((uint64_t)v10, (uint64_t *)&unk_100EA01F0);
  sub_1008CFDCC(v3, (void (*)(void))type metadata accessor for MainAction);
  return swift_release();
}

uint64_t sub_1008CF164()
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v2);
  sub_10017FDD0();
  uint64_t v3 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_100162EB8();
  if (qword_100E62418 != -1) {
    swift_once();
  }
  Date.init()();
  Date.timeIntervalSince1970.getter();
  uint64_t v8 = v7;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
  *(void *)&v12[0] = v8;
  sub_1008CFE24(&qword_100E9DAE0, v9, (void (*)(uint64_t))type metadata accessor for LocationInteractor);
  Updatable.save<A>(setting:value:)();
  if (qword_100E62420 != -1) {
    swift_once();
  }
  LOBYTE(v12[0]) = 1;
  Updatable.save<A>(setting:value:)();
  uint64_t v10 = *(uint64_t (**)(uint64_t))(v1 + 16);
  type metadata accessor for LocationViewAction();
  sub_10017AAFC();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = 0;
  memset(v12, 0, sizeof(v12));
  swift_retain();
  sub_1001AAF58(v0, (uint64_t)v12, v10);
  sub_1001781AC((uint64_t)v12, (uint64_t *)&unk_100EA01F0);
  sub_1008CFDCC(v0, (void (*)(void))type metadata accessor for MainAction);
  return swift_release();
}

uint64_t sub_1008CF3D0()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 16);
  sub_10017DF08(&qword_100E63480);
  type metadata accessor for MainAction();
  sub_100179EF0();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100C25ED0;
  type metadata accessor for LocationViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for NotificationsOptInAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = 0;
  memset(v7, 0, sizeof(v7));
  sub_10006DF38((uint64_t)v7, (uint64_t)v4, (uint64_t *)&unk_100EA01F0);
  uint64_t v5 = v2;
  char v6 = 0;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1001AB2DC((uint64_t)v4, v1);
  sub_1001781AC((uint64_t)v4, &qword_100E63488);
  swift_bridgeObjectRelease();
  sub_1001781AC((uint64_t)v7, (uint64_t *)&unk_100EA01F0);
  return swift_release();
}

uint64_t sub_1008CF56C()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 16);
  sub_10017DF08(&qword_100E63480);
  type metadata accessor for MainAction();
  sub_100179EF0();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100C25ED0;
  type metadata accessor for LocationViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for NotificationsOptInAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = 0;
  memset(v7, 0, sizeof(v7));
  sub_10006DF38((uint64_t)v7, (uint64_t)v4, (uint64_t *)&unk_100EA01F0);
  uint64_t v5 = v2;
  char v6 = 0;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1001AB2DC((uint64_t)v4, v1);
  sub_1001781AC((uint64_t)v4, &qword_100E63488);
  swift_bridgeObjectRelease();
  sub_1001781AC((uint64_t)v7, (uint64_t *)&unk_100EA01F0);
  return swift_release();
}

uint64_t sub_1008CF6E0(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10017C704();
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  static Settings.Daemon.enablePushLocationViewLoadData.getter();
  SettingReader.read<A>(_:)();
  swift_release();
  swift_release();
  if (v9 == 1)
  {
    Date.init()();
    sub_1001B1E64((void *)(v1 + 32), *(void *)(v1 + 56));
    sub_10063EC68();
    swift_retain();
    sub_10090B4CC(a1, v2);
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
  }
  else
  {
    sub_1001B1E64((void *)(v1 + 32), *(void *)(v1 + 56));
    return sub_10063EA3C();
  }
}

void sub_1008CF810(uint64_t a1)
{
  uint64_t State = type metadata accessor for VisibleLocationWeatherLoadState();
  __chkstk_darwin(State - 8);
  sub_10017C704();
  uint64_t v5 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  static Settings.Daemon.enablePushLocationViewLoadData.getter();
  SettingReader.read<A>(_:)();
  swift_release();
  swift_release();
  if (HIBYTE(v20) == 1)
  {
    Date.init()();
    swift_retain();
    sub_10090C5B0(v2);
    swift_release();
    sub_1001B1E64((void *)(v1 + 32), *(void *)(v1 + 56));
    sub_100640C8C();
    sub_1008CFDCC(v2, (void (*)(void))type metadata accessor for VisibleLocationWeatherLoadState);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
  }
  else
  {
    sub_1001B1E64((void *)(v1 + 32), *(void *)(v1 + 56));
    sub_10063FE48(a1, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, vars0, vars8);
  }
}

uint64_t sub_1008CF9A8(uint64_t a1, int a2)
{
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  static Settings.Daemon.enablePushLocationViewLoadData.getter();
  SettingReader.read<A>(_:)();
  swift_release();
  uint64_t result = swift_release();
  if (v5 == 1)
  {
    swift_retain();
    sub_10090BB3C(a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1008CFA48()
{
  return sub_1008CFA58();
}

uint64_t sub_1008CFA50()
{
  return sub_1008CFA58();
}

uint64_t sub_1008CFA58()
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = static Settings.Features.homeAndWorkEnabled.getter();
  if ((result & 1) == 0)
  {
    char v5 = *(uint64_t (**)(uint64_t))(v0 + 16);
    type metadata accessor for SearchViewAction();
    sub_10017AAFC();
    swift_storeEnumTagMultiPayload();
    type metadata accessor for ViewAction();
    sub_10017AAFC();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = 0;
    memset(v6, 0, sizeof(v6));
    swift_retain();
    sub_1001AAF58((uint64_t)v3, (uint64_t)v6, v5);
    sub_1001781AC((uint64_t)v6, (uint64_t *)&unk_100EA01F0);
    sub_1008CFDCC((uint64_t)v3, (void (*)(void))type metadata accessor for MainAction);
    return swift_release();
  }
  return result;
}

uint64_t sub_1008CFB74()
{
  if (qword_100E62288 != -1) {
    swift_once();
  }
  sub_1009E99E4(byte_100F51392, 0xD000000000000010, 0x8000000100CB5980);
  sub_100B2C998();

  return swift_release();
}

uint64_t sub_1008CFC08()
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 32);
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1008CFC48()
{
  sub_1008CFC08();

  return swift_deallocClassInstance();
}

void sub_1008CFC80()
{
  sub_1001B1E64((void *)(v0 + 32), *(void *)(v0 + 56));
  sub_100643098();
}

uint64_t sub_1008CFCB8(uint64_t a1, uint64_t a2)
{
  return sub_1008CFE24(&qword_100E9DAD0, a2, (void (*)(uint64_t))type metadata accessor for LocationInteractor);
}

uint64_t sub_1008CFD00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationComponentHeaderInputModel.SegmentedControlModel.Option(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1008CFD64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E64498);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1008CFDCC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1008CFE24(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_1008CFE6C()
{
  uint64_t v1 = OBJC_IVAR____TtC7Weather48DebugNotificationDeliverySchedulesViewController____lazy_storage___dateFormatter;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC7Weather48DebugNotificationDeliverySchedulesViewController____lazy_storage___dateFormatter);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC7Weather48DebugNotificationDeliverySchedulesViewController____lazy_storage___dateFormatter);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)NSDateFormatter) init];
    [v4 setDateStyle:1];
    [v4 setTimeStyle:1];
    char v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1008CFF08(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC7Weather48DebugNotificationDeliverySchedulesViewController____lazy_storage___dateFormatter] = 0;
  *(void *)&v1[OBJC_IVAR____TtC7Weather48DebugNotificationDeliverySchedulesViewController_deliverySchedules] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for DebugNotificationDeliverySchedulesViewController();
  return [super initWithStyle:2];
}

void sub_1008CFF58()
{
  *(void *)&v0[OBJC_IVAR____TtC7Weather48DebugNotificationDeliverySchedulesViewController____lazy_storage___dateFormatter] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1008CFFD8()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for DebugNotificationDeliverySchedulesViewController();
  [super viewDidLoad];
  id v1 = [v0 tableView];
  if (v1)
  {
    uint64_t v2 = v1;
    sub_10056AF64();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    NSString v4 = String._bridgeToObjectiveC()();
    [v2 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v4];

    sub_10040BF9C(0xD000000000000012, 0x8000000100CADD80, v0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1008D00F4()
{
  return *(void *)(*(void *)(v0
                               + OBJC_IVAR____TtC7Weather48DebugNotificationDeliverySchedulesViewController_deliverySchedules)
                   + 16);
}

unint64_t sub_1008D012C(void *a1)
{
  uint64_t v3 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v3 - 8);
  uint64_t v54 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v50 - v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v50 - v9;
  uint64_t v11 = type metadata accessor for UIListContentConfiguration();
  sub_100179C0C();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_1001626E0();
  uint64_t v55 = v16 - v15;
  type metadata accessor for DeliveryScheduleEntity();
  sub_100179C0C();
  uint64_t v56 = v18;
  uint64_t v57 = v17;
  __chkstk_darwin(v17);
  sub_1001626E0();
  uint64_t v21 = v20 - v19;
  NSString v22 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v24 = [a1 dequeueReusableCellWithIdentifier:v22 forIndexPath:isa];

  uint64_t v25 = *(void *)(v1 + OBJC_IVAR____TtC7Weather48DebugNotificationDeliverySchedulesViewController_deliverySchedules);
  unint64_t result = IndexPath.row.getter();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (result >= *(void *)(v25 + 16))
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v52 = v11;
  uint64_t v53 = v7;
  id v50 = v24;
  uint64_t v51 = v13;
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v56 + 16))(v21, v25+ ((*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80))+ *(void *)(v56 + 72) * result, v57);
  static UIListContentConfiguration.subtitleCell()();
  uint64_t v58 = 91;
  unint64_t v59 = 0xE100000000000000;
  uint64_t v62 = DeliveryScheduleEntity.state.getter();
  sub_10017DF08(&qword_100E89788);
  sub_10069804C();
  v27._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v27);
  swift_release();
  swift_bridgeObjectRelease();
  v28._countAndFlagsBits = 8285;
  v28._object = (void *)0xE200000000000000;
  String.append(_:)(v28);
  id v29 = sub_1008CFE6C();
  DeliveryScheduleEntity.date.getter();
  dispatch thunk of Column.value.getter();
  swift_release();
  uint64_t v30 = type metadata accessor for Date();
  unint64_t result = sub_10017A6D8((uint64_t)v10);
  if (v31)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  Class v32 = Date._bridgeToObjectiveC()().super.isa;
  uint64_t v33 = *(void (**)(void))(*(void *)(v30 - 8) + 8);
  sub_10017C938();
  v33();
  id v34 = [v29 stringFromDate:v32];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_100180634();
  swift_bridgeObjectRelease();
  UIListContentConfiguration.text.setter();
  uint64_t v58 = 0;
  unint64_t v59 = 0xE000000000000000;
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  uint64_t v58 = 0x3A64657461657263;
  unint64_t v59 = 0xE900000000000020;
  id v35 = sub_1008CFE6C();
  DeliveryScheduleEntity.created.getter();
  uint64_t v36 = (uint64_t)v53;
  dispatch thunk of Column.value.getter();
  swift_release();
  unint64_t result = sub_10017A6D8(v36);
  if (v31)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  Class v37 = Date._bridgeToObjectiveC()().super.isa;
  sub_10017C938();
  v33();
  id v38 = [v35 stringFromDate:v37];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  sub_100180634();
  swift_bridgeObjectRelease();
  v39._countAndFlagsBits = 0x696669646F6D203BLL;
  v39._object = (void *)0xEC000000203A6465;
  String.append(_:)(v39);
  id v40 = sub_1008CFE6C();
  DeliveryScheduleEntity.modified.getter();
  uint64_t v41 = (uint64_t)v54;
  dispatch thunk of Column.value.getter();
  swift_release();
  unint64_t result = sub_10017A6D8(v41);
  if (!v31)
  {
    Class v42 = Date._bridgeToObjectiveC()().super.isa;
    sub_10017C938();
    v33();
    id v43 = [v40 stringFromDate:v42];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    sub_100180634();
    swift_bridgeObjectRelease();
    uint64_t v44 = v55;
    UIListContentConfiguration.secondaryText.setter();
    uint64_t v45 = (void (*)(uint64_t *, void))UIListContentConfiguration.secondaryTextProperties.modify();
    UIListContentConfiguration.TextProperties.numberOfLines.setter();
    v45(&v58, 0);
    uint64_t v46 = v52;
    uint64_t v60 = v52;
    uint64_t v61 = &protocol witness table for UIListContentConfiguration;
    uint64_t v47 = sub_100170694(&v58);
    uint64_t v48 = v51;
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v51 + 16))(v47, v44, v46);
    uint64_t v49 = v50;
    UITableViewCell.contentConfiguration.setter();
    [v49 setAccessoryType:1];
    (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v44, v46);
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v21, v57);
    return (unint64_t)v49;
  }
LABEL_11:
  __break(1u);
  return result;
}

void sub_1008D07F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DeliveryScheduleEntity();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = *(void *)&v0[OBJC_IVAR____TtC7Weather48DebugNotificationDeliverySchedulesViewController_deliverySchedules];
  unint64_t v10 = IndexPath.row.getter();
  if ((v10 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v10 >= *(void *)(v9 + 16))
  {
LABEL_7:
    __break(1u);
    return;
  }
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v4 + 16))(v8, v9+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v10, v2);
  id v11 = objc_allocWithZone((Class)type metadata accessor for DebugNotificationDeliveryScheduleViewController());
  sub_1008FC554();
  uint64_t v13 = v12;
  id v14 = [v1 navigationController];
  if (v14)
  {
    id v15 = v14;
    [v14 pushViewController:v13 animated:1];

    uint64_t v13 = v15;
  }
}

void sub_1008D0A20()
{
}

void sub_1008D0A60()
{
}

id sub_1008D0AB8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DebugNotificationDeliverySchedulesViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for DebugNotificationDeliverySchedulesViewController()
{
  return self;
}

uint64_t sub_1008D0B5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E7B2D8);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v230 = v6;
  sub_100129064();
  uint64_t v191 = type metadata accessor for AirQualityScaleCategory();
  sub_100179C0C();
  uint64_t v190 = v7;
  __chkstk_darwin(v8);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v9);
  sub_100128F8C();
  uint64_t v189 = v10;
  sub_100129064();
  type metadata accessor for AirQualityScale();
  sub_100179C0C();
  uint64_t v217 = v12;
  uint64_t v218 = v11;
  __chkstk_darwin(v11);
  sub_100162EF8();
  uint64_t v216 = v13;
  __chkstk_darwin(v14);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v15);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v16);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v17);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v18);
  sub_100128F8C();
  uint64_t v209 = v19;
  sub_100129064();
  uint64_t v207 = type metadata accessor for LocationDetailsKind();
  sub_100179C0C();
  uint64_t v206 = v20;
  __chkstk_darwin(v21);
  sub_100109314();
  uint64_t v205 = v22;
  sub_100129064();
  uint64_t v23 = type metadata accessor for Date();
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_100109314();
  uint64_t v204 = v25;
  sub_100129064();
  uint64_t v202 = type metadata accessor for WeatherMetadata();
  sub_100179C0C();
  uint64_t v201 = v26;
  __chkstk_darwin(v27);
  sub_100109314();
  uint64_t v200 = v28;
  sub_100129064();
  uint64_t v29 = type metadata accessor for LocationDetailEntity();
  uint64_t v30 = sub_100109308(v29);
  __chkstk_darwin(v30);
  sub_100109314();
  uint64_t v228 = v31;
  sub_100129064();
  type metadata accessor for LocationEntity();
  sub_100179C0C();
  uint64_t v226 = v33;
  uint64_t v227 = v32;
  __chkstk_darwin(v32);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v34);
  sub_100128F8C();
  uint64_t v225 = v35;
  uint64_t v36 = sub_10017DF08(&qword_100E66E28);
  uint64_t v37 = sub_100109308(v36);
  __chkstk_darwin(v37);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v38);
  sub_100128F8C();
  uint64_t v224 = v39;
  sub_100129064();
  uint64_t v196 = type metadata accessor for ArticlePlacementLocation();
  sub_100179C0C();
  uint64_t v195 = v40;
  __chkstk_darwin(v41);
  sub_100109314();
  uint64_t v194 = v42;
  uint64_t v43 = sub_10017DF08(&qword_100E7B2B8);
  uint64_t v44 = sub_100109308(v43);
  __chkstk_darwin(v44);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v45);
  sub_100128F8C();
  v223 = v46;
  sub_100129064();
  uint64_t v192 = type metadata accessor for ConditionDetailMapViewModel();
  sub_100162E4C();
  __chkstk_darwin(v47);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v48);
  sub_100128F8C();
  v222 = (void *)v49;
  uint64_t v50 = sub_10017DF08(&qword_100E885C0);
  uint64_t v51 = sub_100109308(v50);
  __chkstk_darwin(v51);
  sub_100109314();
  uint64_t v220 = v52;
  sub_100129064();
  uint64_t v233 = type metadata accessor for AirQuality();
  sub_100179C0C();
  uint64_t v198 = v53;
  __chkstk_darwin(v54);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v55);
  sub_100128F8C();
  uint64_t v221 = v56;
  sub_100129064();
  uint64_t v57 = type metadata accessor for NewsDataModel();
  uint64_t v58 = sub_100109308(v57);
  __chkstk_darwin(v58);
  sub_100109314();
  uint64_t v232 = v59;
  uint64_t v60 = sub_100129064();
  uint64_t v219 = type metadata accessor for WeatherData(v60);
  sub_100162E4C();
  __chkstk_darwin(v61);
  sub_100109314();
  uint64_t v231 = v62;
  uint64_t v63 = sub_10017DF08(&qword_100E63770);
  uint64_t v64 = sub_100109308(v63);
  __chkstk_darwin(v64);
  uint64_t v66 = (char *)&v181 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for LocationWeatherDataState(0);
  sub_100162E4C();
  uint64_t v69 = __chkstk_darwin(v68);
  uint64_t v71 = (char *)&v181 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v69);
  sub_100128F8C();
  uint64_t v234 = v72;
  uint64_t v73 = sub_10017DF08(&qword_100E9DBC8);
  uint64_t v74 = sub_100109308(v73);
  __chkstk_darwin(v74);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v75);
  uint64_t v77 = (char *)&v181 - v76;
  uint64_t v78 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v80 = v79;
  uint64_t v82 = __chkstk_darwin(v81);
  uint64_t v84 = (char *)&v181 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v82);
  uint64_t v86 = (char *)&v181 - v85;
  sub_1008D1EA0(a1, (uint64_t)v77);
  uint64_t v203 = type metadata accessor for AirQualityDetailViewState();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v77, 1, v203) != 1)
  {
    uint64_t v188 = a2;
    uint64_t v184 = *(void (**)(char *, char *, uint64_t))(v80 + 16);
    v184(v84, v77, v78);
    sub_1008D2EB0((uint64_t)v77, (void (*)(void))type metadata accessor for AirQualityDetailViewState);
    (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v86, v84, v78);
    uint64_t v187 = a1;
    uint64_t v92 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
    swift_bridgeObjectRetain();
    uint64_t v93 = Location.id.getter();
    sub_1001BBE9C(v93, v94, v92);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, v67) == 1)
    {
      (*(void (**)(char *, uint64_t))(v80 + 8))(v86, v78);
      uint64_t v95 = &qword_100E63770;
      uint64_t v96 = (uint64_t)v66;
    }
    else
    {
      uint64_t v185 = v86;
      uint64_t v183 = v80;
      uint64_t v186 = v78;
      uint64_t v97 = v234;
      sub_1001E1158((uint64_t)v66, v234, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      sub_1001BCC1C(v97, (uint64_t)v71, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        sub_1008D2EB0(v97, (void (*)(void))type metadata accessor for LocationWeatherDataState);
        uint64_t v108 = sub_100181900();
        v109(v108);
        sub_1008D2EB0((uint64_t)v71, (void (*)(void))type metadata accessor for LocationWeatherDataState);
        goto LABEL_14;
      }
      uint64_t v98 = sub_10017DF08(&qword_100E63748);
      uint64_t v99 = (uint64_t)&v71[*(int *)(v98 + 48)];
      uint64_t v100 = (uint64_t)&v71[*(int *)(v98 + 64)];
      uint64_t v101 = v231;
      sub_1001E1158((uint64_t)v71, v231, (void (*)(void))type metadata accessor for WeatherData);
      uint64_t v102 = v232;
      sub_1001E1158(v100, v232, (void (*)(void))type metadata accessor for NewsDataModel);
      sub_1008D2EB0(v99, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      uint64_t v103 = v220;
      WeatherDataModel.airQuality.getter();
      uint64_t v104 = v233;
      int v105 = _s7Weather24LocationCompositionStateOwet_0(v103, 1, v233);
      uint64_t v106 = v185;
      if (v105 != 1)
      {
        uint64_t v113 = v198;
        uint64_t v114 = v221;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v198 + 32))(v221, v103, v104);
        uint64_t v182 = sub_1008D251C();
        uint64_t v181 = v115;
        uint64_t v116 = (int *)v192;
        uint64_t v117 = v222;
        v184((char *)v222 + *(int *)(v192 + 20), v106, v186);
        uint64_t v118 = v113;
        sub_1001177B0((uint64_t)v117 + v116[6]);
        id v119 = [self mainBundle];
        v235._object = (void *)0x8000000100CB5B00;
        v120._countAndFlagsBits = 0x65726F4D20656553;
        v120._object = (void *)0xE800000000000000;
        v121._countAndFlagsBits = 0;
        v121._object = (void *)0xE000000000000000;
        v235._countAndFlagsBits = 0xD000000000000030;
        Swift::String v122 = NSLocalizedString(_:tableName:bundle:value:comment:)(v120, (Swift::String_optional)0, (NSBundle)v119, v121, v235);

        uint64_t v123 = (char *)v117 + v116[8];
        uint64_t v124 = enum case for WeatherMapOverlayKind.airQuality(_:);
        type metadata accessor for WeatherMapOverlayKind();
        sub_100162E4C();
        (*(void (**)(char *, uint64_t))(v125 + 104))(v123, v124);
        *uint64_t v117 = 0;
        v117[1] = 0;
        *(Swift::String *)((char *)v117 + v116[7]) = v122;
        *((unsigned char *)v117 + v116[9]) = 1;
        sub_1001B1E64((void *)(v229 + 16), *(void *)(v229 + 40));
        uint64_t v126 = v195;
        uint64_t v127 = v194;
        uint64_t v128 = v196;
        (*(void (**)(uint64_t, void, uint64_t))(v195 + 104))(v194, enum case for ArticlePlacementLocation.airQualityDetail(_:), v196);
        uint64_t v129 = v223;
        sub_1006BAAF0(v127, v223);
        (*(void (**)(uint64_t, uint64_t))(v126 + 8))(v127, v128);
        uint64_t v130 = (uint64_t)v129;
        uint64_t v131 = v193;
        sub_10006DF38(v130, v193, &qword_100E7B2B8);
        sub_1004B80E0(v131, v224);
        uint64_t v132 = v225;
        static LocationEntity.makeFromLocation(_:name:)();
        (*(void (**)(void (*)(uint64_t, uint64_t), uint64_t, uint64_t))(v226 + 16))(v199, v132, v227);
        AirQuality.metadata.getter();
        WeatherMetadata.date.getter();
        sub_100162F0C();
        v133();
        (*(void (**)(uint64_t, void, uint64_t))(v206 + 104))(v205, enum case for LocationDetailsKind.airQuality(_:), v207);
        LocationDetailEntity.init(location:date:kind:)();
        AirQuality.scale.getter();
        uint64_t v134 = AirQualityScale.displayName.getter();
        uint64_t v136 = v135;
        uint64_t v137 = *(void (**)(void))(v217 + 8);
        uint64_t v138 = v218;
        sub_1001D1F54();
        v137();
        AirQuality.scale.getter();
        uint64_t v139 = AirQualityScale.longDisplayName.getter();
        uint64_t v141 = v140;
        sub_1001D1F54();
        v137();
        uint64_t v142 = v114;
        uint64_t v143 = v233;
        (*(void (**)(uint64_t, uint64_t))(v118 + 16))(v197, v142);
        uint64_t v201 = v134;
        uint64_t v200 = v136;
        if (v141)
        {
          uint64_t v195 = v141;
          uint64_t v196 = v139;
        }
        else
        {
          AirQuality.scale.getter();
          uint64_t v196 = AirQualityScale.displayName.getter();
          uint64_t v195 = v146;
          sub_1001D1F54();
          v137();
        }
        uint64_t v144 = sub_1001A2610();
        v145(v144);
        sub_1001A0080();
        uint64_t v147 = v221;
        uint64_t v148 = AirQuality.displayDescription.getter();
        uint64_t v219 = v149;
        uint64_t v220 = v148;
        AirQuality.scale.getter();
        uint64_t v217 = AirQualityScale.range.getter();
        uint64_t v210 = v150;
        sub_1001D1F54();
        v137();
        AirQuality.scale.getter();
        Swift::Int v151 = AirQuality.index.getter();
        double v152 = AirQualityScale.fraction(for:)(v151);
        sub_1001D1F54();
        v137();
        AirQuality.currentScaleCategory.getter();
        uint64_t v211 = AirQualityScaleCategory.description.getter();
        uint64_t v209 = v153;
        uint64_t v154 = v138;
        uint64_t v155 = *(void (**)(uint64_t))(v143 + 8);
        uint64_t v156 = sub_10018952C();
        v155(v156);
        uint64_t v157 = v213;
        AirQuality.scale.getter();
        uint64_t v207 = AirQualityScale.displayLabel.getter();
        uint64_t v206 = v158;
        ((void (*)(uint64_t, uint64_t))v137)(v157, v154);
        AirQuality.currentScaleCategory.getter();
        uint64_t v213 = AirQualityScaleCategory.recommendation.getter();
        uint64_t v205 = v159;
        uint64_t v160 = sub_10018952C();
        v155(v160);
        AirQuality.primaryPollutant.getter();
        uint64_t v161 = v229;
        sub_1008D263C(v147);
        uint64_t v215 = v162;
        uint64_t v204 = v163;
        uint64_t v202 = v164;
        sub_1001B1E64((void *)(v161 + 56), *(void *)(v161 + 80));
        uint64_t v165 = dispatch thunk of AirQualityDetailStringBuilderType.attributionDescription(for:)();
        uint64_t v166 = v216;
        AirQuality.scale.getter();
        uint64_t v167 = AirQualityScale.gradientStops.getter();
        ((void (*)(uint64_t, uint64_t))v137)(v166, v154);
        uint64_t v168 = (uint64_t)v222;
        uint64_t v169 = v212;
        sub_1001BCC1C((uint64_t)v222, v212, (void (*)(void))type metadata accessor for ConditionDetailMapViewModel);
        uint64_t v170 = v224;
        uint64_t v171 = v214;
        sub_10006DF38(v224, v214, &qword_100E66E28);
        uint64_t v172 = v208;
        sub_1008D1EA0(v187, v208);
        sub_100162F0C();
        v173();
        sub_100178110(v170, &qword_100E66E28);
        sub_100178110((uint64_t)v223, &qword_100E7B2B8);
        sub_1008D2EB0(v168, (void (*)(void))type metadata accessor for ConditionDetailMapViewModel);
        v199(v147, v233);
        sub_1008D2EB0(v232, (void (*)(void))type metadata accessor for NewsDataModel);
        sub_1008D2EB0(v231, (void (*)(void))type metadata accessor for WeatherData);
        sub_1008D2EB0(v234, (void (*)(void))type metadata accessor for LocationWeatherDataState);
        uint64_t v174 = sub_100181900();
        v175(v174);
        uint64_t v176 = v203;
        if (_s7Weather24LocationCompositionStateOwet_0(v172, 1, v203) == 1)
        {
          sub_100178110(v172, &qword_100E9DBC8);
          char v177 = 0;
        }
        else
        {
          char v177 = *(unsigned char *)(v172 + *(int *)(v176 + 20));
          sub_1008D2EB0(v172, (void (*)(void))type metadata accessor for AirQualityDetailViewState);
        }
        *((void *)&v180 + 1) = v204;
        *(void *)&long long v180 = v215;
        *((void *)&v179 + 1) = v206;
        *(void *)&long long v179 = v207;
        *((void *)&v178 + 1) = v209;
        *(void *)&long long v178 = v211;
        a2 = v188;
        sub_10075DC10(v201, v200, v196, v195, v182, v181, v220, v219, v188, v152, v217, v210, v178, v179, v213, v205, v230, v180, v202,
          v165,
          v167,
          v169,
          v171,
          v177,
          v228);
        uint64_t v91 = 0;
        goto LABEL_15;
      }
      sub_1008D2EB0(v102, (void (*)(void))type metadata accessor for NewsDataModel);
      sub_1008D2EB0(v101, (void (*)(void))type metadata accessor for WeatherData);
      sub_1008D2EB0(v234, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      sub_100162F0C();
      v107();
      uint64_t v95 = &qword_100E885C0;
      uint64_t v96 = v103;
    }
    sub_100178110(v96, v95);
LABEL_14:
    uint64_t v91 = 1;
    a2 = v188;
    goto LABEL_15;
  }
  sub_100178110((uint64_t)v77, &qword_100E9DBC8);
  if (qword_100E627E8 != -1) {
    swift_once();
  }
  uint64_t v87 = type metadata accessor for Logger();
  sub_1002102B0(v87, (uint64_t)qword_100F51ED0);
  uint64_t v88 = Logger.logObject.getter();
  os_log_type_t v89 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v88, v89))
  {
    char v90 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v90 = 0;
    _os_log_impl((void *)&_mh_execute_header, v88, v89, "Unable to make AirQualityDetailViewModel due to missing airQualityDetailViewState.", v90, 2u);
    swift_slowDealloc();
  }

  uint64_t v91 = 1;
LABEL_15:
  uint64_t v110 = type metadata accessor for AirQualityDetailViewModel.Model(0);
  _s7Weather24LocationCompositionStateOwst_0(a2, v91, 1, v110);
  uint64_t v111 = type metadata accessor for AirQualityDetailViewModel(0);
  return _s7Weather24LocationCompositionStateOwst_0(a2, 0, 1, v111);
}

uint64_t sub_1008D1EA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v60 = a2;
  uint64_t v59 = type metadata accessor for LocationPreviewModalViewState(0);
  uint64_t v3 = __chkstk_darwin(v59);
  uint64_t v55 = (uint64_t)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v57 = (uint64_t)&v51 - v5;
  uint64_t v58 = type metadata accessor for LocationPreviewViewState(0);
  uint64_t v6 = __chkstk_darwin(v58);
  uint64_t v54 = (uint64_t)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v56 = (uint64_t)&v51 - v8;
  uint64_t v9 = type metadata accessor for AirQualityDetailViewState();
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v52 = (uint64_t)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v53 = (uint64_t)&v51 - v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v51 - v14;
  uint64_t v16 = type metadata accessor for ModalViewState(0);
  uint64_t v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v51 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v51 - v23;
  uint64_t v25 = type metadata accessor for ModalViewState.LocationDetailModal(0);
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v51 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v51 - v29;
  uint64_t v31 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView;
  sub_1001BCC1C(v31, (uint64_t)v24, (void (*)(void))type metadata accessor for ModalViewState);
  if (swift_getEnumCaseMultiPayload() != 5)
  {
    sub_1008D2EB0((uint64_t)v24, (void (*)(void))type metadata accessor for ModalViewState);
    goto LABEL_6;
  }
  uint64_t v51 = v9;
  sub_1001E1158((uint64_t)v24, (uint64_t)v30, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
  sub_1001E1158((uint64_t)v30, (uint64_t)v28, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1008D2EB0((uint64_t)v28, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
    uint64_t v9 = v51;
LABEL_6:
    sub_1001BCC1C(v31, (uint64_t)v22, (void (*)(void))type metadata accessor for ModalViewState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v36 = v58;
    if (EnumCaseMultiPayload)
    {
      uint64_t v37 = type metadata accessor for ModalViewState;
      uint64_t v38 = (uint64_t)v22;
    }
    else
    {
      uint64_t v39 = v56;
      sub_1001E1158((uint64_t)v22, v56, (void (*)(void))type metadata accessor for LocationPreviewViewState);
      uint64_t v40 = v57;
      sub_1001BCC1C(v39 + *(int *)(v36 + 20), v57, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
      sub_1008D2EB0(v39, (void (*)(void))type metadata accessor for LocationPreviewViewState);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v41 = v9;
        uint64_t v42 = v53;
        sub_1001E1158(v40, v53, (void (*)(void))type metadata accessor for AirQualityDetailViewState);
        uint64_t v43 = v42;
        uint64_t v33 = v60;
        goto LABEL_18;
      }
      uint64_t v37 = type metadata accessor for LocationPreviewModalViewState;
      uint64_t v38 = v40;
    }
    sub_1008D2EB0(v38, (void (*)(void))v37);
    sub_1001BCC1C(v31, (uint64_t)v19, (void (*)(void))type metadata accessor for ModalViewState);
    if (swift_getEnumCaseMultiPayload() != 4)
    {
      sub_1008D2EB0((uint64_t)v19, (void (*)(void))type metadata accessor for ModalViewState);
      goto LABEL_15;
    }
    uint64_t v44 = type metadata accessor for ModalViewState.MapViewModal(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v44) == 1)
    {
      sub_100178110((uint64_t)v19, &qword_100E663E8);
LABEL_15:
      uint64_t v34 = 1;
      uint64_t v33 = v60;
      return _s7Weather24LocationCompositionStateOwst_0(v33, v34, 1, v9);
    }
    uint64_t v45 = v54;
    sub_1001E1158((uint64_t)v19, v54, (void (*)(void))type metadata accessor for LocationPreviewViewState);
    uint64_t v46 = v55;
    sub_1001BCC1C(v45 + *(int *)(v36 + 20), v55, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
    sub_1008D2EB0(v45, (void (*)(void))type metadata accessor for LocationPreviewViewState);
    int v47 = swift_getEnumCaseMultiPayload();
    uint64_t v33 = v60;
    if (v47 != 2)
    {
      sub_1008D2EB0(v46, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
      uint64_t v34 = 1;
      return _s7Weather24LocationCompositionStateOwst_0(v33, v34, 1, v9);
    }
    uint64_t v41 = v9;
    uint64_t v48 = v46;
    uint64_t v49 = v52;
    sub_1001E1158(v48, v52, (void (*)(void))type metadata accessor for AirQualityDetailViewState);
    uint64_t v43 = v49;
LABEL_18:
    uint64_t v9 = v41;
    sub_1001E1158(v43, v33, (void (*)(void))type metadata accessor for AirQualityDetailViewState);
    uint64_t v34 = 0;
    return _s7Weather24LocationCompositionStateOwst_0(v33, v34, 1, v9);
  }
  sub_1001E1158((uint64_t)v28, (uint64_t)v15, (void (*)(void))type metadata accessor for AirQualityDetailViewState);
  uint64_t v32 = (uint64_t)v15;
  uint64_t v33 = v60;
  sub_1001E1158(v32, v60, (void (*)(void))type metadata accessor for AirQualityDetailViewState);
  uint64_t v34 = 0;
  uint64_t v9 = v51;
  return _s7Weather24LocationCompositionStateOwst_0(v33, v34, 1, v9);
}

uint64_t sub_1008D251C()
{
  uint64_t v0 = 0x776F6C2E697161;
  uint64_t v1 = type metadata accessor for AirQualityScaleCategory();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  AirQuality.currentScaleCategory.getter();
  uint64_t v5 = AirQualityScaleCategory.glyph.getter();
  unint64_t v7 = v6;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v7)
  {
    uint64_t v8 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0) {
      uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
    }
    if (v8) {
      return v5;
    }
    else {
      swift_bridgeObjectRelease();
    }
  }
  return v0;
}

void sub_1008D263C(uint64_t a1)
{
  uint64_t v55 = type metadata accessor for AirQuality();
  uint64_t v53 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v58 = (char *)&v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for Logger();
  uint64_t v50 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v54 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for AirPollutant();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v64 = (char *)&v49 - v9;
  uint64_t v68 = 0;
  uint64_t v52 = a1;
  uint64_t v10 = AirQuality.pollutants.getter();
  sub_100215150(v10, v69);
  uint64_t v65 = v69[0];
  int64_t v11 = v69[3];
  unint64_t v12 = v69[4];
  uint64_t v59 = v69[1];
  int64_t v60 = (unint64_t)(v69[2] + 64) >> 6;
  uint64_t v62 = v5 + 32;
  uint64_t v63 = v5 + 16;
  uint64_t v61 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v56 = v10;
  swift_bridgeObjectRetain();
  uint64_t v57 = _swiftEmptyArrayStorage;
  while (v12)
  {
    unint64_t v13 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    unint64_t v14 = v13 | (v11 << 6);
LABEL_22:
    uint64_t v20 = v64;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v64, *(void *)(v65 + 56) + *(void *)(v5 + 72) * v14, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v20, v4);
    uint64_t v21 = AirPollutant.standaloneDisplayName.getter();
    if (!v22) {
      goto LABEL_27;
    }
    uint64_t v23 = v21;
    uint64_t v24 = v22;
    uint64_t v25 = (const __CTFont *)sub_1008D2DE8(&v68);
    uint64_t v26 = (void *)AirPollutant.abbreviatedDisplayName(font:)(v25);

    if (v26)
    {
      uint64_t v27 = AirPollutant.formattedValueString.getter();
      if (!v28)
      {
        swift_bridgeObjectRelease();

        goto LABEL_27;
      }
      uint64_t v29 = v27;
      uint64_t v30 = v28;
      (*v61)(v8, v4);
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v31 = v57;
      }
      else
      {
        sub_1007E9640();
        uint64_t v31 = v35;
      }
      unint64_t v32 = v31[2];
      uint64_t v33 = (void *)(v32 + 1);
      if (v32 >= v31[3] >> 1)
      {
        uint64_t v57 = (void *)(v32 + 1);
        unint64_t v49 = v32;
        sub_1007E9640();
        uint64_t v33 = v57;
        unint64_t v32 = v49;
        uint64_t v31 = v36;
      }
      v31[2] = v33;
      uint64_t v57 = v31;
      uint64_t v34 = &v31[5 * v32];
      v34[4] = v23;
      v34[5] = v24;
      v34[6] = v26;
      v34[7] = v29;
      v34[8] = v30;
    }
    else
    {
      swift_bridgeObjectRelease();
LABEL_27:
      (*v61)(v8, v4);
    }
  }
  int64_t v15 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    return;
  }
  uint64_t v16 = v58;
  if (v15 >= v60) {
    goto LABEL_34;
  }
  unint64_t v17 = *(void *)(v59 + 8 * v15);
  int64_t v18 = v11 + 1;
  if (v17) {
    goto LABEL_21;
  }
  int64_t v18 = v11 + 2;
  if (v11 + 2 >= v60) {
    goto LABEL_34;
  }
  unint64_t v17 = *(void *)(v59 + 8 * v18);
  if (v17) {
    goto LABEL_21;
  }
  int64_t v18 = v11 + 3;
  if (v11 + 3 >= v60) {
    goto LABEL_34;
  }
  unint64_t v17 = *(void *)(v59 + 8 * v18);
  if (v17) {
    goto LABEL_21;
  }
  int64_t v18 = v11 + 4;
  if (v11 + 4 >= v60) {
    goto LABEL_34;
  }
  unint64_t v17 = *(void *)(v59 + 8 * v18);
  if (v17) {
    goto LABEL_21;
  }
  int64_t v18 = v11 + 5;
  if (v11 + 5 >= v60) {
    goto LABEL_34;
  }
  unint64_t v17 = *(void *)(v59 + 8 * v18);
  if (v17) {
    goto LABEL_21;
  }
  int64_t v18 = v11 + 6;
  if (v11 + 6 >= v60) {
    goto LABEL_34;
  }
  unint64_t v17 = *(void *)(v59 + 8 * v18);
  if (v17)
  {
LABEL_21:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v18 << 6);
    int64_t v11 = v18;
    goto LABEL_22;
  }
  int64_t v19 = v11 + 7;
  while (v19 < v60)
  {
    unint64_t v17 = *(void *)(v59 + 8 * v19++);
    if (v17)
    {
      int64_t v18 = v19 - 1;
      goto LABEL_21;
    }
  }
LABEL_34:
  swift_bridgeObjectRelease();
  swift_release();
  if (v57[2])
  {
    id v37 = [self mainBundle];
    v70._countAndFlagsBits = 0xD00000000000005FLL;
    v70._object = (void *)0x8000000100CB5B40;
    v38._object = (void *)0x8000000100CA4490;
    v38._countAndFlagsBits = 0xD000000000000011;
    v39._countAndFlagsBits = 0;
    v39._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v38, (Swift::String_optional)0, (NSBundle)v37, v39, v70);

    Array.sorting<A>(on:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v40 = v54;
    static Logger.airPollutant.getter();
    uint64_t v41 = v53;
    uint64_t v42 = v55;
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v16, v52, v55);
    uint64_t v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      uint64_t v65 = swift_slowAlloc();
      uint64_t v67 = v65;
      *(_DWORD *)uint64_t v45 = 136446210;
      uint64_t v64 = (char *)(v45 + 4);
      AirQuality.pollutants.getter();
      uint64_t v46 = Dictionary.description.getter();
      unint64_t v48 = v47;
      swift_bridgeObjectRelease();
      uint64_t v66 = sub_10016414C(v46, v48, &v67);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v16, v55);
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "No view models created for pollutants = %{public}s", v45, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v41 + 8))(v16, v42);
    }

    (*(void (**)(char *, uint64_t))(v50 + 8))(v40, v51);
  }
}

id sub_1008D2DE8(void **a1)
{
  uint64_t v1 = *a1;
  if (*a1)
  {
    id v2 = *a1;
  }
  else
  {
    id v4 = [self preferredFontForTextStyle:UIFontTextStyleBody];
    swift_beginAccess();
    uint64_t v5 = *a1;
    *a1 = v4;
    id v2 = v4;

    uint64_t v1 = 0;
  }
  id v6 = v1;
  return v2;
}

uint64_t type metadata accessor for AirQualityDetailViewModelFactory()
{
  return self;
}

uint64_t sub_1008D2EB0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

unsigned char *storeEnumTagSinglePayload for LocationHeaderViewTextLayout(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1008D2FD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationHeaderViewTextLayout()
{
  return &type metadata for LocationHeaderViewTextLayout;
}

unint64_t sub_1008D300C()
{
  unint64_t result = qword_100E9DBD0;
  if (!qword_100E9DBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9DBD0);
  }
  return result;
}

void *sub_1008D3058(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for DispatchQoS();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_1008D30F4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for DispatchQoS();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_1008D3170(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for DispatchQoS();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1008D31FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1008D3210);
}

uint64_t sub_1008D3210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for DispatchQoS();
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_1008D3298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1008D32AC);
}

uint64_t sub_1008D32AC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for DispatchQoS();
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AutomationInfoSetting(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1008D33F8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AutomationInfoSetting()
{
  return &type metadata for AutomationInfoSetting;
}

uint64_t *sub_1008D3430(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v10 = a2[7];
    a1[6] = a2[6];
    a1[7] = v10;
    uint64_t v11 = a2[9];
    a1[8] = a2[8];
    a1[9] = v11;
    uint64_t v12 = a2[11];
    uint64_t v13 = a3[5];
    unint64_t v14 = (uint64_t *)((char *)a1 + v13);
    int64_t v15 = (uint64_t *)((char *)a2 + v13);
    a1[10] = a2[10];
    a1[11] = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    }
    else
    {
      void *v14 = *v15;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = a3[6];
    int64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = *(void *)v20;
    char v22 = v20[8];
    sub_100195B7C(*(void *)v20, v22);
    *(void *)int64_t v19 = v21;
    v19[8] = v22;
    uint64_t v23 = a3[7];
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = *(void *)v25;
    char v27 = v25[8];
    sub_100195B7C(*(void *)v25, v27);
    *(void *)uint64_t v24 = v26;
    v24[8] = v27;
  }
  return a1;
}

uint64_t sub_1008D3608(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(a1 + a2[6]), *(unsigned char *)(a1 + a2[6] + 8));
  uint64_t v6 = a1 + a2[7];
  uint64_t v7 = *(void *)v6;
  char v8 = *(unsigned char *)(v6 + 8);

  return sub_10018F6D8(v7, v8);
}

void *sub_1008D3704(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  uint64_t v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  uint64_t v11 = a2[11];
  uint64_t v12 = a3[5];
  uint64_t v13 = (void *)((char *)a1 + v12);
  unint64_t v14 = (void *)((char *)a2 + v12);
  a1[10] = a2[10];
  a1[11] = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  else
  {
    *uint64_t v13 = *v14;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = a3[6];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = *(void *)v18;
  char v20 = v18[8];
  sub_100195B7C(*(void *)v18, v20);
  *(void *)uint64_t v17 = v19;
  v17[8] = v20;
  uint64_t v21 = a3[7];
  char v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = *(void *)v23;
  char v25 = v23[8];
  sub_100195B7C(*(void *)v23, v25);
  *(void *)char v22 = v24;
  v22[8] = v25;
  return a1;
}

void *sub_1008D388C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_1001781AC((uint64_t)a1 + v6, &qword_100E63BC8);
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = *(void *)v12;
  char v14 = v12[8];
  sub_100195B7C(*(void *)v12, v14);
  uint64_t v15 = *(void *)v11;
  char v16 = v11[8];
  *(void *)uint64_t v11 = v13;
  v11[8] = v14;
  sub_10018F6D8(v15, v16);
  uint64_t v17 = a3[7];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = *(void *)v19;
  char v21 = v19[8];
  sub_100195B7C(*(void *)v19, v21);
  uint64_t v22 = *(void *)v18;
  char v23 = v18[8];
  *(void *)uint64_t v18 = v20;
  v18[8] = v21;
  sub_10018F6D8(v22, v23);
  return a1;
}

char *sub_1008D3A98(char *a1, char *a2, int *a3)
{
  memcpy(a1, a2, 0x60uLL);
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = &a1[v11];
  char v14 = &a2[v11];
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  uint64_t v15 = &a1[v12];
  char v16 = &a2[v12];
  *(void *)uint64_t v15 = *(void *)v16;
  v15[8] = v16[8];
  return a1;
}

void *sub_1008D3BB0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[11];
  a1[10] = a2[10];
  a1[11] = v11;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v12 = a3[5];
    uint64_t v13 = (char *)a1 + v12;
    char v14 = (char *)a2 + v12;
    sub_1001781AC((uint64_t)a1 + v12, &qword_100E63BC8);
    uint64_t v15 = sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v16 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
  }
  uint64_t v17 = a3[6];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = *(void *)v19;
  LOBYTE(v19) = v19[8];
  uint64_t v21 = *(void *)v18;
  char v22 = v18[8];
  *(void *)uint64_t v18 = v20;
  v18[8] = (char)v19;
  sub_10018F6D8(v21, v22);
  uint64_t v23 = a3[7];
  uint64_t v24 = (char *)a1 + v23;
  char v25 = (char *)a2 + v23;
  uint64_t v26 = *(void *)v25;
  LOBYTE(v25) = v25[8];
  uint64_t v27 = *(void *)v24;
  char v28 = v24[8];
  *(void *)uint64_t v24 = v26;
  v24[8] = (char)v25;
  sub_10018F6D8(v27, v28);
  return a1;
}

uint64_t sub_1008D3D54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1008D3D68);
}

uint64_t sub_1008D3D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100EAA530);
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_1008D3DF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1008D3E08);
}

uint64_t sub_1008D3E08(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100EAA530);
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_1008D3E8C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1008D3EA8@<X0>(uint64_t a1@<X8>)
{
  id v2 = v1;
  uint64_t v55 = a1;
  uint64_t v54 = type metadata accessor for AutomationInfo(0);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = (void *)(v5 - v4);
  uint64_t v52 = type metadata accessor for AccessibilityChildBehavior();
  sub_100179C0C();
  uint64_t v50 = v7;
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_10017DF08(&qword_100E9DD00);
  sub_100162E4C();
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = sub_10017DF08(&qword_100E9DD08);
  sub_100179C0C();
  uint64_t v19 = v18;
  __chkstk_darwin(v20);
  sub_1001626E0();
  uint64_t v23 = v22 - v21;
  uint64_t v53 = sub_10017DF08(&qword_100E7A0A0);
  sub_100162E4C();
  __chkstk_darwin(v24);
  sub_10016278C();
  uint64_t v27 = v25 - v26;
  __chkstk_darwin(v28);
  uint64_t v51 = (uint64_t)&v48 - v29;
  *(void *)uint64_t v16 = static VerticalAlignment.center.getter();
  *(void *)(v16 + 8) = 0;
  *(unsigned char *)(v16 + 16) = 0;
  uint64_t v30 = sub_10017DF08(&qword_100E9DD10);
  sub_1008D4248(v2, v16 + *(int *)(v30 + 44));
  static AccessibilityChildBehavior.ignore.getter();
  uint64_t v31 = sub_1001246C8(&qword_100E9DD18, &qword_100E9DD00);
  View.accessibilityElement(children:)();
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v11, v52);
  sub_1001781AC(v16, &qword_100E9DD00);
  __dst[0] = v12;
  __dst[1] = v31;
  swift_getOpaqueTypeConformance2();
  View.accessibilityRespondsToUserInteraction(_:)();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v23, v17);
  unint64_t v32 = v49;
  memcpy(__dst, v49, sizeof(__dst));
  uint64_t v57 = sub_10062E56C();
  uint64_t v58 = v33;
  sub_10014A85C();
  uint64_t v34 = Text.init<A>(_:)();
  uint64_t v36 = v35;
  LOBYTE(v11) = v37 & 1;
  uint64_t v38 = v51;
  ModifiedContent<>.accessibilityLabel(_:)();
  sub_100191924(v34, v36, v11);
  swift_bridgeObjectRelease();
  sub_1001781AC(v27, &qword_100E7A0A0);
  uint64_t v39 = v32[11];
  *uint64_t v6 = v32[10];
  v6[1] = v39;
  type metadata accessor for AutomationCellInfo(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_10048D504((uint64_t)v6, v40, v41, v42, v43, v44, v45, v46, v48, (uint64_t)v49, v50, v51, v52, v53, v54, v55, v56, v57, v58,
    __dst[0]);
  swift_bridgeObjectRetain();
  sub_1003F8810((uint64_t)v6);
  return sub_1001781AC(v38, &qword_100E7A0A0);
}

uint64_t sub_1008D4248@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E9DD20);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E9DD28);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v17 - v12;
  *(void *)uint64_t v6 = static HorizontalAlignment.leading.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  uint64_t v14 = sub_10017DF08(&qword_100E9DD30);
  sub_1008D43F8(a1, (uint64_t)&v6[*(int *)(v14 + 44)]);
  sub_1001262FC((uint64_t)v6, (uint64_t)v10, &qword_100E9DD20);
  *(void *)&v10[*(int *)(v8 + 44)] = 0x3FF0000000000000;
  sub_1001781AC((uint64_t)v6, &qword_100E9DD20);
  sub_10020E72C((uint64_t)v10, (uint64_t)v13, &qword_100E9DD28);
  sub_1001262FC((uint64_t)v13, (uint64_t)v10, &qword_100E9DD28);
  sub_1001262FC((uint64_t)v10, a2, &qword_100E9DD28);
  uint64_t v15 = a2 + *(int *)(sub_10017DF08(&qword_100E9DD38) + 48);
  *(void *)uint64_t v15 = 0;
  *(unsigned char *)(v15 + 8) = 0;
  sub_1001781AC((uint64_t)v13, &qword_100E9DD28);
  return sub_1001781AC((uint64_t)v10, &qword_100E9DD28);
}

uint64_t sub_1008D43F8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v101 = a2;
  uint64_t v99 = type metadata accessor for TypesettingLanguageAwareLineHeightRatio();
  uint64_t v97 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v94 = (char *)&v85 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100E6D330);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (uint64_t)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v85 - v8;
  uint64_t v98 = sub_10017DF08(&qword_100E9DD40);
  uint64_t v100 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  uint64_t v92 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E9DD48);
  __chkstk_darwin(v11 - 8);
  uint64_t v95 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_10017DF08(&qword_100E9DD50) - 8;
  __chkstk_darwin(v96);
  uint64_t v103 = (uint64_t)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v102 = (uint64_t)&v85 - v15;
  uint64_t v16 = (uint64_t)a1;
  uint64_t v17 = *a1;
  uint64_t v18 = a1[1];
  uint64_t v19 = v16;
  uint64_t v90 = v16;
  v110[0] = v17;
  v110[1] = v18;
  unint64_t v91 = sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v20 = Text.init<A>(_:)();
  uint64_t v88 = v21;
  uint64_t v89 = v22;
  char v24 = v23 & 1;
  uint64_t v25 = static Font.largeTitle.getter();
  uint64_t v26 = static Font.title2.getter();
  uint64_t v93 = type metadata accessor for PrecipitationTotalComponentView();
  uint64_t v27 = v19 + *(int *)(v93 + 28);
  uint64_t v28 = *(void *)v27;
  char v29 = *(unsigned char *)(v27 + 8);
  sub_100195B7C(*(void *)v27, v29);
  sub_100149AE8();
  char v31 = v30;
  sub_10018F6D8(v28, v29);
  uint64_t v32 = enum case for Font.Leading.tight(_:);
  uint64_t v33 = type metadata accessor for Font.Leading();
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 104);
  uint64_t v87 = v9;
  v34(v9, v32, v33);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v33);
  sub_1001262FC((uint64_t)v9, v6, &qword_100E6D330);
  swift_retain();
  swift_retain();
  sub_10014A8A8(v25, v26, v31 & 1, v6);
  uint64_t v35 = v88;
  uint64_t v85 = Text.font(_:)();
  uint64_t v86 = v36;
  uint64_t v38 = v37;
  LOBYTE(v6) = v39;
  swift_release();
  swift_release();
  swift_release();
  sub_100191924(v20, v35, v24);
  swift_bridgeObjectRelease();
  sub_1001781AC((uint64_t)v87, &qword_100E6D330);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v41 = swift_getKeyPath();
  v110[0] = v85;
  v110[1] = v38;
  LOBYTE(v110[2]) = v6 & 1;
  v110[3] = v86;
  v110[4] = KeyPath;
  v110[5] = 1;
  LOBYTE(v110[6]) = 0;
  v110[7] = v41;
  v110[8] = 0x3FE0000000000000;
  uint64_t v42 = v94;
  static TypesettingLanguageAwareLineHeightRatio.disable.getter();
  uint64_t v43 = sub_10017DF08(&qword_100E78F20);
  unint64_t v44 = sub_100482A90();
  uint64_t v45 = v92;
  View.typesettingLanguageAwareLineHeightRatio(_:isEnabled:)();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v42, v99);
  sub_100191924(v110[0], v110[1], v110[2]);
  uint64_t v46 = v90;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v47 = *(void *)(v46 + 24);
  v110[0] = *(void *)(v46 + 16);
  v110[1] = v47;
  v109[0].n128_u64[0] = v43;
  v109[0].n128_u64[1] = v44;
  swift_getOpaqueTypeConformance2();
  uint64_t v48 = (uint64_t)v95;
  uint64_t v49 = v98;
  View.accessibilityLabel<A>(_:)();
  (*(void (**)(char *, uint64_t))(v100 + 8))(v45, v49);
  uint64_t v50 = v103;
  sub_1001262FC(v48, v103, &qword_100E9DD48);
  *(void *)(v50 + *(int *)(v96 + 44)) = 0x3FF0000000000000;
  sub_1001781AC(v48, &qword_100E9DD48);
  sub_10020E72C(v50, v102, &qword_100E9DD50);
  uint64_t v51 = v46 + *(int *)(v93 + 24);
  uint64_t v52 = *(void *)v51;
  LOBYTE(v50) = *(unsigned char *)(v51 + 8);
  sub_100195B7C(*(void *)v51, v50);
  sub_100147CF4();
  LOBYTE(v48) = v53;
  sub_10018F6D8(v52, v50);
  if (v48)
  {
    unsigned __int8 v79 = static Axis.Set.vertical.getter();
    sub_1008D557C(v46, v108);
    memcpy(&v106[7], v108, 0x1D1uLL);
    v109[0].n128_u8[0] = v79;
    memcpy((char *)v109[0].n128_u64 + 1, v106, 0x1D8uLL);
    sub_1008D5E6C((uint64_t)v109);
    sub_10020E72C((uint64_t)v109, (uint64_t)v107, &qword_100E9DD58);
    sub_10017DF08(&qword_100E9DD60);
    sub_10017DF08(&qword_100E9DD68);
    sub_1001246C8(&qword_100E9DD70, &qword_100E9DD60);
    sub_1001246C8(&qword_100E9DD78, &qword_100E9DD68);
    _ConditionalContent<>.init(storage:)();
  }
  else
  {
    sub_1008D4EF4(v110);
    uint64_t v54 = v110[0];
    uint64_t v55 = v110[1];
    int v56 = LOBYTE(v110[2]);
    uint64_t v100 = v110[3];
    uint64_t v98 = v110[4];
    uint64_t v57 = v110[5];
    sub_1008D51F4((uint64_t)v110);
    uint64_t v58 = v110[0];
    uint64_t v90 = v110[1];
    char v59 = v110[2];
    uint64_t v94 = (char *)v110[3];
    uint64_t v60 = v110[4];
    uint64_t v61 = v110[5];
    uint64_t v99 = v110[6];
    uint64_t v92 = (char *)v110[7];
    LODWORD(v91) = LOBYTE(v110[8]);
    int v62 = v56;
    v106[0] = v56;
    v108[0] = 0;
    char v105 = v110[2];
    LODWORD(v93) = LOBYTE(v110[2]);
    char v104 = v110[8];
    uint64_t v63 = v54;
    uint64_t v96 = v55;
    uint64_t v97 = v54;
    uint64_t v64 = v54;
    uint64_t v65 = v55;
    uint64_t v66 = v55;
    LOBYTE(v55) = v62;
    LODWORD(v95) = v62;
    sub_100190CC4(v64, v66, v62);
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v67 = v90;
    sub_100190CC4(v58, v90, v59);
    swift_bridgeObjectRetain();
    uint64_t v68 = v60;
    swift_retain();
    swift_retain();
    sub_100190CC4(v63, v65, v55);
    swift_bridgeObjectRetain();
    unint64_t v69 = v98;
    swift_retain();
    uint64_t v70 = v58;
    LOBYTE(v55) = v93;
    sub_100190CC4(v58, v67, v93);
    unint64_t v71 = (unint64_t)v94;
    swift_bridgeObjectRetain();
    unint64_t v72 = v68;
    swift_retain();
    swift_retain();
    uint64_t v73 = v70;
    uint64_t v74 = v67;
    sub_100191924(v70, v67, v55);
    swift_release();
    unint64_t v75 = v72;
    swift_release();
    swift_bridgeObjectRelease();
    unint64_t v77 = v96;
    unint64_t v76 = v97;
    LOBYTE(v70) = (_BYTE)v95;
    sub_100191924(v97, v96, (char)v95);
    swift_release();
    unint64_t v78 = v100;
    swift_bridgeObjectRelease();
    v109[0].n128_u64[0] = v76;
    v109[0].n128_u64[1] = v77;
    v109[1].n128_u8[0] = v70;
    v109[1].n128_u64[1] = v78;
    v109[2].n128_u64[0] = v69;
    v109[2].n128_u64[1] = v57;
    v109[3].n128_u16[0] = 256;
    v109[3].n128_u64[1] = 0;
    v109[4].n128_u8[0] = 0;
    v109[4].n128_u64[1] = v73;
    v109[5].n128_u64[0] = v74;
    LOBYTE(v78) = v93;
    v109[5].n128_u8[8] = v93;
    v109[6].n128_u64[0] = v71;
    v109[6].n128_u64[1] = v75;
    v109[7].n128_u64[0] = v61;
    v109[7].n128_u64[1] = v99;
    v109[8].n128_u64[0] = (unint64_t)v92;
    v109[8].n128_u8[8] = v91;
    *(unsigned __int16 *)((char *)&v109[8].n128_u16[4] + 1) = 256;
    sub_1008D6534((uint64_t)v109);
    sub_10020E72C((uint64_t)v109, (uint64_t)v110, &qword_100E9DD58);
    sub_10017DF08(&qword_100E9DD60);
    sub_10017DF08(&qword_100E9DD68);
    sub_1001246C8(&qword_100E9DD70, &qword_100E9DD60);
    sub_1001246C8(&qword_100E9DD78, &qword_100E9DD68);
    _ConditionalContent<>.init(storage:)();
    sub_100191924(v73, v74, v78);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_100191924(v97, v96, (char)v95);
    swift_release();
    swift_bridgeObjectRelease();
    memcpy(v110, v107, 0x1DAuLL);
  }
  uint64_t v81 = v102;
  uint64_t v80 = v103;
  sub_1001262FC(v102, v103, &qword_100E9DD50);
  memcpy(v106, v110, sizeof(v106));
  uint64_t v82 = v101;
  sub_1001262FC(v80, v101, &qword_100E9DD50);
  uint64_t v83 = (void *)(v82 + *(int *)(sub_10017DF08(&qword_100E9DD80) + 48));
  memcpy(v107, v106, 0x1DAuLL);
  memcpy(v83, v106, 0x1DAuLL);
  sub_1008D617C(v107);
  sub_1001781AC(v81, &qword_100E9DD50);
  memcpy(v109, v106, 0x1DAuLL);
  sub_1008D617C(v109);
  return sub_1001781AC(v80, &qword_100E9DD50);
}

uint64_t sub_1008D4EF4@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v44 = a1;
  uint64_t v2 = sub_10017DF08(&qword_100E6D330);
  __chkstk_darwin(v2 - 8);
  sub_10016278C();
  uint64_t v5 = v3 - v4;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v40 - v7;
  uint64_t v9 = type metadata accessor for Font.TextStyle();
  sub_100179C0C();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_1001626E0();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = *(void *)(v1 + 40);
  uint64_t v45 = *(void *)(v1 + 32);
  uint64_t v46 = v16;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v17 = Text.init<A>(_:)();
  uint64_t v42 = v18;
  uint64_t v43 = v19;
  char v21 = v20 & 1;
  (*(void (**)(uint64_t, void, uint64_t))(v11 + 104))(v15, enum case for Font.TextStyle.title3(_:), v9);
  static Font.Weight.semibold.getter();
  uint64_t v22 = static Font.system(_:weight:)();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v15, v9);
  uint64_t v23 = static Font.headline.getter();
  uint64_t v24 = v1 + *(int *)(type metadata accessor for PrecipitationTotalComponentView() + 28);
  uint64_t v25 = *(void *)v24;
  LOBYTE(v15) = *(unsigned char *)(v24 + 8);
  sub_100195B7C(*(void *)v24, v15);
  sub_100149AE8();
  LOBYTE(v16) = v26;
  sub_10018F6D8(v25, v15);
  uint64_t v27 = enum case for Font.Leading.tight(_:);
  uint64_t v28 = type metadata accessor for Font.Leading();
  sub_100162E4C();
  char v30 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 104);
  uint64_t v41 = v8;
  v30(v8, v27, v28);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v28);
  sub_1001262FC((uint64_t)v8, v5, &qword_100E6D330);
  swift_retain();
  swift_retain();
  sub_10014A8A8(v22, v23, v16 & 1, v5);
  uint64_t v31 = v17;
  uint64_t v32 = v42;
  uint64_t v33 = Text.font(_:)();
  uint64_t v35 = v34;
  LOBYTE(v16) = v36;
  uint64_t v40 = v37;
  swift_release();
  swift_release();
  swift_release();
  sub_100191924(v31, v32, v21);
  swift_bridgeObjectRelease();
  sub_1001781AC((uint64_t)v41, &qword_100E6D330);
  uint64_t result = swift_getKeyPath();
  char v39 = v44;
  *unint64_t v44 = v33;
  v39[1] = v35;
  *((unsigned char *)v39 + 16) = v16 & 1;
  v39[3] = v40;
  v39[4] = result;
  v39[5] = 0x3FE999999999999ALL;
  return result;
}

uint64_t sub_1008D51F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10017DF08(&qword_100E6D330);
  __chkstk_darwin(v4 - 8);
  sub_10016278C();
  uint64_t v58 = v5 - v6;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v52 - v8;
  uint64_t v10 = type metadata accessor for ContentSizeCategory();
  sub_100179C0C();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_10016278C();
  uint64_t v16 = v14 - v15;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v52 - v18;
  uint64_t v20 = *(void *)(v1 + 48);
  uint64_t v21 = *(void *)(v1 + 56);
  uint64_t v59 = v20;
  uint64_t v60 = v21;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v22 = Text.init<A>(_:)();
  uint64_t v55 = v23;
  uint64_t v56 = v22;
  LODWORD(v54) = v24;
  uint64_t v57 = v25;
  uint64_t v26 = type metadata accessor for PrecipitationTotalComponentView();
  sub_10014E6E8();
  (*(void (**)(uint64_t, void, uint64_t))(v12 + 104))(v16, enum case for ContentSizeCategory.extraExtraLarge(_:), v10);
  LOBYTE(v21) = sub_1006ADAC0((uint64_t)v19, v16);
  uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v27(v16, v10);
  v27((uint64_t)v19, v10);
  if (v21) {
    uint64_t v28 = static Font.caption2.getter();
  }
  else {
    uint64_t v28 = static Font.subheadline.getter();
  }
  uint64_t v29 = v28;
  char v30 = v54 & 1;
  uint64_t v31 = static Font.footnote.getter();
  uint64_t v32 = v2 + *(int *)(v26 + 28);
  uint64_t v33 = *(void *)v32;
  char v34 = *(unsigned char *)(v32 + 8);
  sub_100195B7C(*(void *)v32, v34);
  sub_100149AE8();
  char v36 = v35;
  sub_10018F6D8(v33, v34);
  uint64_t v37 = enum case for Font.Leading.tight(_:);
  uint64_t v38 = type metadata accessor for Font.Leading();
  sub_100162E4C();
  (*(void (**)(char *, uint64_t, uint64_t))(v39 + 104))(v9, v37, v38);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v38);
  uint64_t v40 = v58;
  sub_1001262FC((uint64_t)v9, v58, &qword_100E6D330);
  swift_retain();
  swift_retain();
  sub_10014A8A8(v29, v31, v36 & 1, v40);
  uint64_t v41 = (uint64_t)v9;
  uint64_t v43 = v55;
  uint64_t v42 = v56;
  uint64_t v44 = Text.font(_:)();
  uint64_t v53 = v45;
  uint64_t v54 = v44;
  char v47 = v46;
  uint64_t v58 = v48;
  swift_release();
  swift_release();
  swift_release();
  sub_100191924(v42, v43, v30);
  swift_bridgeObjectRelease();
  sub_1001781AC(v41, &qword_100E6D330);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t result = swift_getKeyPath();
  uint64_t v51 = v53;
  *(void *)a1 = v54;
  *(void *)(a1 + 8) = v51;
  *(unsigned char *)(a1 + 16) = v47 & 1;
  *(void *)(a1 + 24) = v58;
  *(void *)(a1 + 32) = KeyPath;
  *(void *)(a1 + 40) = 0x3FE999999999999ALL;
  *(void *)(a1 + 48) = result;
  *(void *)(a1 + 56) = 3;
  *(unsigned char *)(a1 + 64) = 0;
  return result;
}

uint64_t sub_1008D557C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v18 = static HorizontalAlignment.leading.getter();
  sub_1008D5888((uint64_t)__src);
  v27[168] = 1;
  memcpy(&v27[7], __src, 0x9BuLL);
  if (objc_msgSend(self, "wu_systemUsesExuberatedLineHeight"))
  {
    sub_1008D66D8(__dst);
  }
  else
  {
    uint64_t v3 = static HorizontalAlignment.leading.getter();
    sub_1008D5A2C(a1, (uint64_t)v20);
    v23[0].n128_u8[0] = 0;
    memcpy((char *)v24 + 7, v20, 0x8BuLL);
    *(void *)__dst = v3;
    *(void *)&__dst[8] = 0xC008000000000000;
    __dst[16] = 0;
    memcpy(&__dst[17], v24, 0x92uLL);
    LocationSearchEntityFromStringResolver.init()();
  }
  sub_10020E72C((uint64_t)__dst, (uint64_t)v25, &qword_100E9DD88);
  uint64_t v16 = static HorizontalAlignment.leading.getter();
  sub_1008D5D34((uint64_t)v24);
  uint64_t v4 = v24[0];
  uint64_t v5 = v24[1];
  char v6 = v24[2];
  uint64_t v7 = v24[3];
  uint64_t v8 = v24[4];
  uint64_t v9 = v24[5];
  uint64_t v10 = v24[6];
  long long v15 = *(_OWORD *)&v24[7];
  uint64_t v11 = v24[9];
  uint64_t v12 = v24[10];
  char v13 = v24[11];
  sub_10020E72C((uint64_t)v25, (uint64_t)v19, &qword_100E9DD88);
  v20[0] = v18;
  v20[1] = 0;
  LOBYTE(v20[2]) = 1;
  memcpy((char *)&v20[2] + 1, v27, 0xA2uLL);
  sub_10020E72C((uint64_t)v19, (uint64_t)v21, &qword_100E9DD88);
  memcpy(__dst, v20, 0xB3uLL);
  sub_10020E72C((uint64_t)v21, (uint64_t)&__dst[184], &qword_100E9DD88);
  *(void *)&__dst[352] = v16;
  *(void *)&__dst[360] = 0;
  __dst[368] = 1;
  *(void *)&__dst[376] = v4;
  *(void *)&__dst[384] = v5;
  __dst[392] = v6;
  *(void *)&__dst[400] = v7;
  *(void *)&__dst[408] = v8;
  *(void *)&__dst[416] = v9;
  *(void *)&__dst[424] = v10;
  *(_OWORD *)&__dst[432] = v15;
  *(void *)&__dst[448] = v11;
  *(void *)&__dst[456] = v12;
  __dst[464] = v13;
  memcpy(a2, __dst, 0x1D1uLL);
  sub_1008D653C((uint64_t)v20);
  sub_1008D65DC(v21);
  sub_100190CC4(v4, v5, v6);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_100191924(v4, v5, v6);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_10020E72C((uint64_t)v19, (uint64_t)v23, &qword_100E9DD88);
  sub_1008D65DC(v23);
  v24[0] = v18;
  v24[1] = 0;
  LOBYTE(v24[2]) = 1;
  memcpy((char *)&v24[2] + 1, v27, 0xA2uLL);
  return sub_1008D6638((uint64_t)v24);
}

uint64_t sub_1008D5888@<X0>(uint64_t a1@<X8>)
{
  sub_1008D4EF4(&v19);
  uint64_t v17 = v20;
  uint64_t v18 = v19;
  char v2 = v21;
  uint64_t v3 = v22;
  uint64_t v4 = v23;
  uint64_t v5 = v24;
  if (objc_msgSend(self, "wu_systemUsesExuberatedLineHeight")) {
    double v6 = 0.0;
  }
  else {
    double v6 = -4.0;
  }
  sub_1008D51F4((uint64_t)&v19);
  uint64_t v7 = v19;
  uint64_t v8 = v20;
  char v9 = v21;
  uint64_t v10 = v22;
  uint64_t v11 = v23;
  uint64_t v12 = v24;
  uint64_t v14 = v25;
  uint64_t v13 = v26;
  char v15 = v27;
  LOBYTE(v19) = v2;
  char v30 = 0;
  char v29 = v21;
  char v28 = v27;
  *(void *)a1 = v18;
  *(void *)(a1 + 8) = v17;
  *(unsigned char *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  *(_WORD *)(a1 + 48) = 256;
  *(void *)(a1 + 56) = 0;
  *(double *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = 0;
  *(unsigned char *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = v7;
  *(void *)(a1 + 96) = v8;
  *(unsigned char *)(a1 + 104) = v9;
  *(void *)(a1 + 112) = v10;
  *(void *)(a1 + 120) = v11;
  *(void *)(a1 + 128) = v12;
  *(void *)(a1 + 136) = v14;
  *(void *)(a1 + 144) = v13;
  *(unsigned char *)(a1 + 152) = v15;
  *(_WORD *)(a1 + 153) = 256;
  sub_100190CC4(v18, v17, v2);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100190CC4(v7, v8, v9);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_100191924(v7, v8, v9);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100191924(v18, v17, v2);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1008D5A2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Font.Leading();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = a1;
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v37 = v8;
  uint64_t v38 = v9;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v10 = Text.init<A>(_:)();
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  static Font.subheadline.getter();
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Font.Leading.tight(_:), v4);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v15 = Text.font(_:)();
  uint64_t v34 = v16;
  uint64_t v35 = v17;
  LOBYTE(v4) = v18;
  swift_release();
  char v19 = v4 & 1;
  sub_100191924(v10, v12, v14);
  swift_bridgeObjectRelease();
  sub_1008D51F4((uint64_t)&v37);
  uint64_t v20 = v37;
  uint64_t v21 = v38;
  char v22 = v39;
  uint64_t v23 = v40;
  uint64_t v24 = v41;
  uint64_t v25 = v42;
  uint64_t v27 = v43;
  uint64_t v26 = v44;
  char v53 = v19;
  char v50 = 0;
  char v48 = v39;
  char v46 = v45;
  *(_DWORD *)(a2 + 17) = v37;
  *(_DWORD *)(a2 + 20) = *(_DWORD *)((char *)&v37 + 3);
  *(_DWORD *)(a2 + 34) = v51;
  *(_WORD *)(a2 + 38) = v52;
  *(_DWORD *)(a2 + 65) = *(_DWORD *)v49;
  *(_DWORD *)(a2 + 68) = *(_DWORD *)&v49[3];
  int v28 = *(_DWORD *)v47;
  *(_DWORD *)(a2 + 92) = *(_DWORD *)&v47[3];
  *(_DWORD *)(a2 + 89) = v28;
  LOBYTE(v28) = v46;
  uint64_t v29 = v34;
  uint64_t v30 = v35;
  *(void *)a2 = v15;
  *(void *)(a2 + 8) = v29;
  *(unsigned char *)(a2 + 16) = v19;
  *(void *)(a2 + 24) = v30;
  *(_WORD *)(a2 + 32) = 256;
  *(_OWORD *)(a2 + 40) = xmmword_100C64AC0;
  *(void *)(a2 + 56) = 0;
  *(unsigned char *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = v20;
  *(void *)(a2 + 80) = v21;
  *(unsigned char *)(a2 + 88) = v22;
  *(void *)(a2 + 96) = v23;
  *(void *)(a2 + 104) = v24;
  *(void *)(a2 + 112) = v25;
  *(void *)(a2 + 120) = v27;
  *(void *)(a2 + 128) = v26;
  *(unsigned char *)(a2 + 136) = v28;
  *(_WORD *)(a2 + 137) = 256;
  uint64_t v31 = v29;
  sub_100190CC4(v15, v29, v19);
  swift_bridgeObjectRetain();
  sub_100190CC4(v20, v21, v22);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_100191924(v20, v21, v22);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100191924(v15, v31, v19);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1008D5D34@<X0>(uint64_t a1@<X8>)
{
  sub_1008D4EF4(v12);
  uint64_t v2 = v12[0];
  uint64_t v3 = v12[1];
  char v4 = v13;
  uint64_t v5 = v14;
  uint64_t v6 = v15;
  uint64_t v7 = v16;
  uint64_t KeyPath = swift_getKeyPath();
  unsigned int v9 = [self wu_systemUsesExuberatedLineHeight];
  double v10 = -4.0;
  if (v9) {
    double v10 = 0.0;
  }
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = KeyPath;
  *(_OWORD *)(a1 + 56) = xmmword_100C64AD0;
  *(double *)(a1 + 72) = v10;
  *(void *)(a1 + 80) = 0;
  *(unsigned char *)(a1 + 88) = 0;
  sub_100190CC4(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_100191924(v2, v3, v4);
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1008D5E6C(uint64_t result)
{
  *(unsigned char *)(result + 473) = 1;
  return result;
}

uint64_t sub_1008D5E78(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,char a60,char a61)
{
  if (a61)
  {
    sub_100190CC4(a5, a6, a7 & 1);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100190CC4(a16, a17, a18 & 1);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_1008D60DC(a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39);
    sub_100190CC4(a49, a50, a51 & 1);
  }
  else
  {
    sub_100190CC4(a1, a2, a3 & 1);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100190CC4(a10, a11, a12 & 1);
  }
  swift_bridgeObjectRetain();
  swift_retain();

  return swift_retain();
}

uint64_t sub_1008D60DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  if (a7)
  {
    sub_100190CC4(a4, a5, a6 & 1);
    swift_bridgeObjectRetain();
    sub_100190CC4(a13, a14, a15 & 1);
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1008D617C(__n128 *a1)
{
  __n128 v2 = sub_10017D770(a1);
  long long v21 = *(_OWORD *)(v1 + 400);
  long long v19 = *(_OWORD *)(v1 + 368);
  long long v20 = *(_OWORD *)(v1 + 384);
  v11(v3, v4, v5, v6, v7, v8, v9, v10, v2.n128_u64[0], v2.n128_u64[1], v12, v13, v14, v15, v16, v17, *(void *)(v1 + 128), *(void *)(v1 + 136), *(void *)(v1 + 144),
    *(void *)(v1 + 152),
    *(void *)(v1 + 160),
    *(void *)(v1 + 168),
    *(void *)(v1 + 176),
    *(void *)(v1 + 184),
    *(void *)(v1 + 192),
    *(void *)(v1 + 200),
    *(void *)(v1 + 208),
    *(void *)(v1 + 216),
    *(void *)(v1 + 224),
    *(void *)(v1 + 232),
    *(void *)(v1 + 240),
    *(void *)(v1 + 248),
    *(void *)(v1 + 256),
    *(void *)(v1 + 264),
    *(void *)(v1 + 272),
    *(void *)(v1 + 280),
    *(void *)(v1 + 288),
    *(void *)(v1 + 296),
    *(void *)(v1 + 304),
    *(void *)(v1 + 312),
    *(void *)(v1 + 320),
    *(void *)(v1 + 328),
    *(void *)(v1 + 336),
    *(void *)(v1 + 344),
    *(void *)(v1 + 352),
    *(void *)(v1 + 360),
    v19,
    *((void *)&v19 + 1),
    v20,
    *((void *)&v20 + 1),
    v21,
    *((void *)&v21 + 1));
  return v1;
}

uint64_t sub_1008D6230(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,char a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,char a60,char a61)
{
  if (a61)
  {
    sub_100191924(a5, a6, a7 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    sub_100191924(a16, a17, a18 & 1);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    sub_1008D6494(a25, a26, a27, a28, a29, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39);
    sub_100191924(a49, a50, a51 & 1);
  }
  else
  {
    sub_100191924(a1, a2, a3 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    sub_100191924(a10, a11, a12 & 1);
  }
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1008D6494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15)
{
  if (a7)
  {
    sub_100191924(a4, a5, a6 & 1);
    swift_bridgeObjectRelease();
    sub_100191924(a13, a14, a15 & 1);
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1008D6534(uint64_t result)
{
  *(unsigned char *)(result + 473) = 0;
  return result;
}

uint64_t sub_1008D653C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 112);
  uint64_t v3 = *(void *)(a1 + 120);
  char v4 = *(unsigned char *)(a1 + 128);
  sub_100190CC4(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100190CC4(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1008D65DC(__n128 *a1)
{
  __n128 v2 = sub_10017D770(a1);
  v11(v3, v4, v5, v6, v7, v8, v9, v10, v2.n128_u64[0], v2.n128_u64[1], v12, v13, v14);
  return v1;
}

uint64_t sub_1008D6638(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 112);
  uint64_t v3 = *(void *)(a1 + 120);
  char v4 = *(unsigned char *)(a1 + 128);
  sub_100191924(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_release();
  swift_bridgeObjectRelease();
  sub_100191924(v2, v3, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

void sub_1008D66D8(void *a1)
{
}

unint64_t sub_1008D66E4()
{
  unint64_t result = qword_100E9DD90;
  if (!qword_100E9DD90)
  {
    sub_10018C6DC(&qword_100E7A0A8);
    sub_1008D6790();
    sub_10032DC40((unint64_t *)&qword_100E66BF8, (void (*)(uint64_t))type metadata accessor for AutomationInfoViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9DD90);
  }
  return result;
}

unint64_t sub_1008D6790()
{
  unint64_t result = qword_100E9DD98;
  if (!qword_100E9DD98)
  {
    sub_10018C6DC(&qword_100E7A0A0);
    sub_10018C6DC(&qword_100E9DD00);
    sub_1001246C8(&qword_100E9DD18, &qword_100E9DD00);
    swift_getOpaqueTypeConformance2();
    sub_10032DC40((unint64_t *)&qword_100EAACA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9DD98);
  }
  return result;
}

void *sub_1008D689C(char a1, char a2, uint64_t a3)
{
  uint64_t v90 = a3;
  uint64_t v6 = type metadata accessor for TipPriorityQueue.GridEntry();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100162EF8();
  uint64_t v87 = v8;
  sub_1001626D4();
  __chkstk_darwin(v9);
  uint64_t v86 = (uint64_t)&v71 - v10;
  sub_1001626D4();
  __chkstk_darwin(v11);
  uint64_t v85 = (uint64_t)&v71 - v12;
  uint64_t v13 = sub_10017DF08(&qword_100E64E80);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_10017F948();
  uint64_t v15 = type metadata accessor for LocationComponentViewModel();
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_100162EF8();
  uint64_t v18 = v17;
  sub_1001626D4();
  __chkstk_darwin(v19);
  uint64_t v71 = (uint64_t)&v71 - v20;
  uint64_t v21 = sub_10017DF08(&qword_100E6CCD8);
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_100162EF8();
  uint64_t v84 = v23;
  sub_1001626D4();
  __chkstk_darwin(v24);
  uint64_t v83 = (uint64_t)&v71 - v25;
  sub_1001626D4();
  __chkstk_darwin(v26);
  uint64_t v89 = (uint64_t)&v71 - v27;
  sub_1001626D4();
  __chkstk_darwin(v28);
  uint64_t v82 = (uint64_t)&v71 - v29;
  uint64_t v88 = v6;
  if (a1)
  {
    if (a1 == 1)
    {
      if (a2)
      {
        uint64_t v30 = &qword_100E9E150;
        goto LABEL_11;
      }
    }
    else if (a2)
    {
      uint64_t v30 = &qword_100E9E4E0;
      goto LABEL_11;
    }
    uint64_t v30 = &qword_100E9E318;
  }
  else if (a2)
  {
    uint64_t v30 = &qword_100E9DDC0;
  }
  else
  {
    uint64_t v30 = &qword_100E9DF88;
  }
LABEL_11:
  char v31 = *((unsigned char *)v30 + 160);
  uint64_t v32 = *v30;
  uint64_t v73 = v30[1];
  uint64_t v72 = v30[2];
  uint64_t v33 = v30[3];
  uint64_t v34 = v30[16];
  uint64_t v35 = v30[17];
  uint64_t v36 = v30[18];
  uint64_t v37 = v30[19];
  uint64_t v38 = v30[41];
  uint64_t v76 = v30[42];
  uint64_t v77 = v38;
  uint64_t v39 = v30[43];
  uint64_t v74 = v30[44];
  uint64_t v75 = v39;
  uint64_t v40 = v30[49];
  uint64_t v80 = v30[50];
  uint64_t v81 = v40;
  uint64_t v41 = v30[51];
  uint64_t v78 = v30[52];
  uint64_t v79 = v41;
  uint64_t v42 = v90 + OBJC_IVAR____TtCV7Weather18NoAqiSevereContent8_Storage_map;
  swift_beginAccess();
  sub_10006DF38(v42, v3, &qword_100E64E80);
  uint64_t v43 = type metadata accessor for LocationComponentContainerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0(v3, 1, v43) == 1)
  {
    sub_1001781AC(v3, &qword_100E64E80);
LABEL_16:
    uint64_t v48 = 1;
    uint64_t v49 = v88;
    goto LABEL_17;
  }
  sub_10031F6A8(v3 + *(int *)(v43 + 20), v18, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  sub_10031F75C(v3, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  uint64_t v44 = v18;
  uint64_t v45 = v71;
  sub_10031F6FC(v44, v71, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  if (v31)
  {
    sub_10031F75C(v45, (void (*)(void))type metadata accessor for LocationComponentViewModel);
    goto LABEL_16;
  }
  uint64_t v46 = v45;
  uint64_t v47 = v89;
  sub_10031F6FC(v46, v89, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v48 = 0;
  uint64_t v49 = v88;
  char v50 = (uint64_t *)(v47 + *(int *)(v88 + 20));
  uint64_t *v50 = v34;
  v50[1] = v35;
  v50[2] = v36;
  v50[3] = v37;
LABEL_17:
  uint64_t v51 = v89;
  _s7Weather24LocationCompositionStateOwst_0(v89, v48, 1, v49);
  uint64_t v52 = v82;
  sub_10031F640(v51, v82);
  uint64_t v53 = v83;
  _s7Weather24LocationCompositionStateOwst_0(v83, 1, 1, v49);
  uint64_t v54 = sub_100163354(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
  uint64_t v55 = v85;
  sub_10031F6A8(v54, v85, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v56 = (uint64_t *)(v55 + *(int *)(v49 + 20));
  uint64_t v57 = v73;
  uint64_t *v56 = v32;
  v56[1] = v57;
  v56[2] = v72;
  v56[3] = v33;
  uint64_t v58 = v84;
  sub_10006DF38(v52, v84, &qword_100E6CCD8);
  uint64_t v59 = sub_100163354(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
  uint64_t v60 = v86;
  sub_10031F6A8(v59, v86, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v61 = (uint64_t *)(v60 + *(int *)(v49 + 20));
  uint64_t v62 = v76;
  *uint64_t v61 = v77;
  v61[1] = v62;
  uint64_t v63 = v74;
  v61[2] = v75;
  v61[3] = v63;
  uint64_t v64 = sub_100163354(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
  uint64_t v65 = v87;
  sub_10031F6A8(v64, v87, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v66 = (uint64_t *)(v65 + *(int *)(v49 + 20));
  uint64_t v67 = v80;
  uint64_t *v66 = v81;
  v66[1] = v67;
  uint64_t v68 = v78;
  v66[2] = v79;
  v66[3] = v68;
  unint64_t v69 = sub_100AD6D18(v53, v55, v58, v60, v65);
  sub_1001781AC(v52, &qword_100E6CCD8);
  return v69;
}

uint64_t sub_1008D6E28(uint64_t a1)
{
  uint64_t v4 = sub_10017DF08(&qword_100E64E80);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_10017F948();
  uint64_t v6 = type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_10008B8C0();
  uint64_t v8 = a1 + OBJC_IVAR____TtCV7Weather18NoAqiSevereContent8_Storage_map;
  swift_beginAccess();
  sub_10006DF38(v8, v1, &qword_100E64E80);
  uint64_t v92 = a1;
  if (_s7Weather24LocationCompositionStateOwet_0(v1, 1, v6) == 1)
  {
    sub_1001781AC(v1, &qword_100E64E80);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_100C34240;
    sub_10017DF08(&qword_100E6CCD0);
    unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v11 = *(void *)(v7 + 72);
    uint64_t v12 = (__n128 *)swift_allocObject();
    uint64_t v13 = sub_100183900(v12, (__n128)xmmword_100C251B0);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather18NoAqiSevereContent8_Storage_severeAlert, (uint64_t)v13 + v10, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 32) = sub_1001F24CC((uint64_t)v12);
    *(void *)(v9 + 40) = v14;
    *(void *)(v9 + 48) = v15;
    uint64_t v16 = (__n128 *)sub_100181354();
    sub_100183B78(v16);
    sub_10031F6A8(v17 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v18, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 56) = sub_1001F24CC((uint64_t)v16);
    *(void *)(v9 + 64) = v19;
    *(void *)(v9 + 72) = v20;
    uint64_t v21 = (__n128 *)swift_allocObject();
    sub_100183B78(v21);
    sub_10031F6A8(v22 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v23, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 80) = sub_1001F24CC((uint64_t)v21);
    *(void *)(v9 + 88) = v24;
    *(void *)(v9 + 96) = v25;
    uint64_t v26 = v11;
    uint64_t v27 = (__n128 *)swift_allocObject();
    uint64_t v28 = (char *)sub_100183900(v27, (__n128)xmmword_100C25ED0) + v10;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
    sub_1001859A8((uint64_t)&v28[v26], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset);
    *(void *)(v9 + 104) = sub_1001F24CC((uint64_t)v27);
    *(void *)(v9 + 112) = v29;
    *(void *)(v9 + 120) = v30;
    char v31 = (__n128 *)swift_allocObject();
    sub_10016324C(v31);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_1001859A8((uint64_t)&v28[v26], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal);
    *(void *)(v9 + 128) = sub_1001F24CC((uint64_t)v27);
    *(void *)(v9 + 136) = v32;
    *(void *)(v9 + 144) = v33;
    uint64_t v34 = (__n128 *)sub_100181354();
    sub_10016324C(v34);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_1001859A8((uint64_t)&v28[v26], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity);
    *(void *)(v9 + 152) = sub_1001F24CC((uint64_t)v27);
    *(void *)(v9 + 160) = v35;
    *(void *)(v9 + 168) = v36;
    uint64_t v37 = sub_100181354();
    *(_OWORD *)(v37 + 16) = v93;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_1001859A8(v37 + v10 + v26, OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure);
    *(void *)(v9 + 176) = sub_1001F24CC(v37);
    *(void *)(v9 + 184) = v38;
    *(void *)(v9 + 192) = v39;
    uint64_t v40 = sub_100181354();
    *(_OWORD *)(v40 + 16) = v93;
    uint64_t v41 = *(void *)(a1 + 16);
    sub_10031F6A8(v41 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v40 + v10, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v41 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v40 + v10 + v26, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 200) = sub_1001F24CC(v40);
    *(void *)(v9 + 208) = v42;
    *(void *)(v9 + 216) = v43;
  }
  else
  {
    sub_10031F6FC(v1, v2, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_100C367B0;
    sub_10017DF08(&qword_100E6CCD0);
    uint64_t v91 = *(void *)(v7 + 72);
    uint64_t v90 = v2;
    unint64_t v44 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v45 = (__n128 *)swift_allocObject();
    uint64_t v46 = sub_100183900(v45, (__n128)xmmword_100C251B0);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather18NoAqiSevereContent8_Storage_severeAlert, (uint64_t)v46 + v44, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 32) = sub_1001F24CC((uint64_t)v45);
    *(void *)(v9 + 40) = v47;
    *(void *)(v9 + 48) = v48;
    uint64_t v49 = (__n128 *)sub_10017C984();
    sub_10017E198(v49);
    sub_10031F6A8(v50 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v51, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 56) = sub_1001F24CC((uint64_t)v45);
    *(void *)(v9 + 64) = v52;
    *(void *)(v9 + 72) = v53;
    uint64_t v54 = (__n128 *)sub_10017C984();
    sub_10017E198(v54);
    sub_10031F6A8(v55 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v56, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 80) = sub_1001F24CC((uint64_t)v45);
    *(void *)(v9 + 88) = v57;
    *(void *)(v9 + 96) = v58;
    uint64_t v59 = sub_10017C984();
    *(_OWORD *)(v59 + 16) = v93;
    sub_10031F6A8(v2, v59 + v44, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 104) = sub_1001F24CC(v59);
    *(void *)(v9 + 112) = v60;
    *(void *)(v9 + 120) = v61;
    uint64_t v62 = (__n128 *)swift_allocObject();
    uint64_t v63 = (char *)sub_100183900(v62, (__n128)xmmword_100C25ED0) + v44;
    uint64_t v64 = *(void *)(a1 + 16);
    sub_10031F6A8(v64 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v63, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v64 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v63[v91], (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 128) = sub_1001F24CC((uint64_t)v62);
    *(void *)(v9 + 136) = v65;
    *(void *)(v9 + 144) = v66;
    uint64_t v67 = (__n128 *)swift_allocObject();
    sub_10017A334(v67);
    uint64_t v69 = v68 + v44;
    uint64_t v70 = *(void *)(v92 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_10031F6A8(v70 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, v69 + v91, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 152) = sub_1001F24CC((uint64_t)v62);
    *(void *)(v9 + 160) = v71;
    *(void *)(v9 + 168) = v72;
    uint64_t v73 = (__n128 *)swift_allocObject();
    sub_10017A334(v73);
    uint64_t v75 = v74 + v44;
    uint64_t v76 = *(void *)(v92 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_10031F6A8(v76 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, v75 + v91, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 176) = sub_1001F24CC((uint64_t)v62);
    *(void *)(v9 + 184) = v77;
    *(void *)(v9 + 192) = v78;
    uint64_t v79 = (__n128 *)swift_allocObject();
    sub_10017A334(v79);
    uint64_t v81 = v80 + v44;
    uint64_t v82 = *(void *)(v92 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_10031F6A8(v82 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, v81 + v91, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 200) = sub_1001F24CC((uint64_t)v62);
    *(void *)(v9 + 208) = v83;
    *(void *)(v9 + 216) = v84;
    uint64_t v85 = swift_allocObject();
    *(_OWORD *)(v85 + 16) = v93;
    uint64_t v86 = *(void *)(v92 + 16);
    sub_10031F6A8(v86 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v85 + v44, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v86 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v85 + v44 + v91, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 224) = sub_1001F24CC(v85);
    *(void *)(v9 + 232) = v87;
    *(void *)(v9 + 240) = v88;
    sub_10031F75C(v90, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  }
  return v9;
}

uint64_t sub_1008D7604(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v5 = type metadata accessor for LocationComponentContainerViewModel();
  sub_100162E4C();
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v25 - v10;
  uint64_t v12 = type metadata accessor for LocationViewComponent();
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_10008B8C0();
  uint64_t v14 = sub_10017DF08(&qword_100E64E80);
  uint64_t v15 = sub_100109308(v14);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v25 - v19;
  uint64_t v21 = swift_retain();
  sub_1006E2E94(v21, a2);
  uint64_t v26 = v22;
  swift_release();
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather32LocationNoAqiSevereConfiguration8_Storage_map, v2, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v2);
  sub_10031F75C(v2, (void (*)(void))type metadata accessor for LocationViewComponent);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v5);
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather32LocationNoAqiSevereConfiguration8_Storage_severeAlert, v2, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v2);
  sub_10031F75C(v2, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_10006DF38((uint64_t)v20, (uint64_t)v18, &qword_100E64E80);
  sub_10031F6A8((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  type metadata accessor for NoAqiSevereContent._Storage(0);
  swift_allocObject();
  uint64_t v23 = sub_1002DC844(v26, (uint64_t)v18, (uint64_t)v9);
  sub_10031F75C((uint64_t)v11, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_1001781AC((uint64_t)v20, &qword_100E64E80);
  return v23;
}

uint64_t sub_1008D788C@<X0>(void (**a1)(uint64_t a1)@<X8>)
{
  type metadata accessor for PerformLocationComponentHeaderInputModelAction();
  uint64_t result = UUID.init()();
  *a1 = sub_1008D7938;
  a1[1] = 0;
  return result;
}

uint64_t sub_1008D78D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_1008D7EB8();

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

void sub_1008D7938(uint64_t a1)
{
  if (qword_100E62790 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1002102B0(v2, (uint64_t)qword_100F51DC8);
  sub_1008D7F08(a1);
  sub_1008D7F08(a1);
  oslog = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    sub_1008D7F08(a1);
    unint64_t v5 = sub_10036659C();
    unint64_t v7 = v6;
    sub_1008D7F5C(a1);
    sub_10016414C(v5, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1008D7F5C(a1);
    sub_1008D7F5C(a1);
    _os_log_impl((void *)&_mh_execute_header, oslog, v3, "Attempted to perform header input action using default closure. Is the calling component in a different subgraph? (action=%s)", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1008D7F5C(a1);
    sub_1008D7F5C(a1);
  }
}

uint64_t sub_1008D7B34()
{
  type metadata accessor for PerformLocationComponentHeaderInputModelAction();

  return static UUID.== infix(_:_:)();
}

void *sub_1008D7B80(void *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = v5;
    a1[1] = v6;
    uint64_t v7 = *(int *)(a3 + 20);
    unint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for UUID();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_retain();
    v11(v8, v9, v10);
  }
  return a1;
}

void *sub_1008D7C68(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(int *)(a3 + 20);
  unint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

_OWORD *sub_1008D7CFC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1008D7D78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1008D7D8C);
}

uint64_t sub_1008D7D8C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    uint64_t v9 = (uint64_t)a1 + *(int *)(a3 + 20);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_1008D7E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1008D7E28);
}

void *sub_1008D7E28(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 20);
    return (void *)_s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

ValueMetadata *_s46__Key_performLocationComponentHeaderInputModelVMa()
{
  return &_s46__Key_performLocationComponentHeaderInputModelVN;
}

unint64_t sub_1008D7EB8()
{
  unint64_t result = qword_100E9E720[0];
  if (!qword_100E9E720[0])
  {
    type metadata accessor for PerformLocationComponentHeaderInputModelAction();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100E9E720);
  }
  return result;
}

uint64_t sub_1008D7F08(uint64_t a1)
{
  return a1;
}

uint64_t sub_1008D7F5C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1008D7FB0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1008D8050()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 96));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1008D80DC()
{
  sub_1008D8050();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SpyDispatcher()
{
  return sub_100109098();
}

uint64_t sub_1008D814C(uint64_t a1, uint64_t a2)
{
  uint64_t v122 = a2;
  uint64_t v4 = sub_10017DF08(&qword_100E66E28);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v128 = v6;
  sub_100129064();
  uint64_t v7 = type metadata accessor for MonthlyAveragesChartModel();
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v127 = v9;
  sub_100129064();
  type metadata accessor for LocationDetailsKind();
  sub_100179C0C();
  uint64_t v120 = v11;
  uint64_t v121 = v10;
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v119 = v12;
  sub_100129064();
  type metadata accessor for LocationDetailEntity();
  sub_100179C0C();
  uint64_t v125 = v14;
  uint64_t v126 = v13;
  __chkstk_darwin(v13);
  sub_100162EF8();
  uint64_t v124 = v15;
  sub_1001626D4();
  __chkstk_darwin(v16);
  sub_100128F8C();
  uint64_t v123 = v17;
  sub_100129064();
  type metadata accessor for LocationEntity();
  sub_100179C0C();
  uint64_t v137 = v19;
  uint64_t v138 = v18;
  __chkstk_darwin(v18);
  sub_100162EF8();
  uint64_t v118 = v20;
  sub_1001626D4();
  __chkstk_darwin(v21);
  sub_100128F8C();
  uint64_t v136 = v22;
  sub_100129064();
  uint64_t v112 = type metadata accessor for Calendar.Identifier();
  sub_100179C0C();
  uint64_t v111 = v23;
  __chkstk_darwin(v24);
  sub_100162EF8();
  uint64_t v110 = v25;
  sub_1001626D4();
  __chkstk_darwin(v26);
  sub_100128F8C();
  uint64_t v109 = v27;
  sub_100129064();
  uint64_t v116 = type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v113 = v28;
  __chkstk_darwin(v29);
  sub_100109314();
  uint64_t v108 = v30;
  sub_100129064();
  uint64_t v103 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v106 = v31;
  __chkstk_darwin(v32);
  sub_100109314();
  uint64_t v107 = v33;
  uint64_t v104 = sub_10017DF08(&qword_100E6B6A0);
  sub_100179C0C();
  uint64_t v105 = v34;
  __chkstk_darwin(v35);
  sub_100109314();
  uint64_t v102 = v36;
  uint64_t v37 = sub_100129064();
  uint64_t v99 = type metadata accessor for ConditionDetailPlatterViewModel(v37);
  sub_100162E4C();
  __chkstk_darwin(v38);
  sub_100162EF8();
  uint64_t v117 = v39;
  sub_1001626D4();
  __chkstk_darwin(v40);
  sub_100128F8C();
  uint64_t v135 = v41;
  sub_100129064();
  uint64_t v101 = type metadata accessor for ArticlePlacementLocation();
  sub_100179C0C();
  uint64_t v43 = v42;
  __chkstk_darwin(v44);
  uint64_t v46 = (char *)&v98 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_10017DF08(&qword_100E7B2B8);
  uint64_t v48 = sub_100109308(v47);
  __chkstk_darwin(v48);
  sub_100162EF8();
  uint64_t v114 = v49;
  sub_1001626D4();
  __chkstk_darwin(v50);
  uint64_t v52 = (uint64_t *)((char *)&v98 - v51);
  uint64_t v53 = sub_10017DF08(&qword_100E66E40);
  uint64_t v54 = sub_100109308(v53);
  __chkstk_darwin(v54);
  sub_100162EF8();
  uint64_t v115 = v55;
  sub_1001626D4();
  __chkstk_darwin(v56);
  uint64_t v130 = (uint64_t)&v98 - v57;
  sub_1001626D4();
  __chkstk_darwin(v58);
  uint64_t v132 = (uint64_t)&v98 - v59;
  sub_1001626D4();
  __chkstk_darwin(v60);
  uint64_t v62 = (char *)&v98 - v61;
  uint64_t v63 = type metadata accessor for PrecipitationAveragesHeroChartViewModel();
  uint64_t v64 = sub_100109308(v63);
  __chkstk_darwin(v64);
  sub_100162EF8();
  uint64_t v129 = v65;
  sub_1001626D4();
  __chkstk_darwin(v66);
  uint64_t v68 = (char *)&v98 - v67;
  sub_1001B1E64(v2 + 5, v2[8]);
  sub_1002F183C(a1, (uint64_t)v68);
  uint64_t v131 = v68;
  uint64_t v69 = (void (*)(char *, uint64_t))*((void *)v68 + 8);
  uint64_t v70 = *((void *)v68 + 9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v133 = v62;
  sub_1008D8B5C(a1, v69, v70, (uint64_t)v62);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1001B1E64(v2 + 20, v2[23]);
  uint64_t v100 = type metadata accessor for PrecipitationAveragesDetailInput();
  uint64_t v71 = v101;
  (*(void (**)(char *, void, uint64_t))(v43 + 104))(v46, enum case for ArticlePlacementLocation.precipitationAveragesDetail(_:), v101);
  uint64_t v134 = v52;
  sub_1006BAAF0((uint64_t)v46, v52);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v46, v71);
  type metadata accessor for PrecipitationAveragesHeroChartInput();
  WeatherStatisticsModel.dailyPrecipitationStatistics.getter();
  uint64_t v72 = v107;
  DailyWeatherStatistics.baselineStartDate.getter();
  uint64_t v73 = v2;
  sub_100162F0C();
  v74();
  Calendar.timeZone.getter();
  uint64_t v75 = v109;
  Calendar.identifier.getter();
  uint64_t v76 = v111;
  uint64_t v77 = v110;
  uint64_t v78 = v112;
  (*(void (**)(uint64_t, void, uint64_t))(v111 + 104))(v110, enum case for Calendar.Identifier.gregorian(_:), v112);
  LOBYTE(v71) = static Calendar.Identifier.== infix(_:_:)();
  uint64_t v79 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
  v79(v77, v78);
  v79(v75, v78);
  uint64_t v80 = a1;
  uint64_t v81 = (int *)v100;
  uint64_t v82 = v73;
  sub_1008D9F48(v72, (v71 & 1) == 0, v135);
  sub_100162F0C();
  v83();
  uint64_t v84 = v106;
  uint64_t v85 = v103;
  (*(void (**)(uint64_t))(v106 + 8))(v72);
  uint64_t v86 = *(void *)(v80 + v81[6]);
  if (v86)
  {
    sub_1001B1E64(v73, v73[3]);
    sub_1009F37CC(v86, v132);
  }
  else
  {
    _s7Weather24LocationCompositionStateOwst_0(v132, 1, 1, v99);
  }
  uint64_t v87 = v136;
  static LocationEntity.makeFromLocation(_:name:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v137 + 16))(v118, v87, v138);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 16))(v72, v80 + v81[9], v85);
  (*(void (**)(uint64_t, void, uint64_t))(v120 + 104))(v119, enum case for LocationDetailsKind.averages(_:), v121);
  uint64_t v88 = v123;
  LocationDetailEntity.init(location:date:kind:)();
  sub_1008DAE60((uint64_t)v131, v129, (void (*)(void))type metadata accessor for PrecipitationAveragesHeroChartViewModel);
  sub_10006DF38((uint64_t)v133, v130, &qword_100E66E40);
  sub_1001B1E64(v82 + 15, v82[18]);
  sub_100B0C2A8(v80 + v81[5], v127);
  uint64_t v89 = v114;
  sub_10006DF38((uint64_t)v134, v114, &qword_100E7B2B8);
  sub_1004B80E0(v89, v128);
  uint64_t v90 = v135;
  sub_1008DAE60(v135, v117, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  uint64_t v91 = v132;
  sub_10006DF38(v132, v115, &qword_100E66E40);
  uint64_t v92 = v125;
  uint64_t v93 = v126;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v125 + 16))(v124, v88, v126);
  sub_1002DE768();
  uint64_t v95 = v94;
  (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v88, v93);
  sub_100162F0C();
  v96();
  sub_100178110(v91, &qword_100E66E40);
  sub_1008DAEB4(v90, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  sub_100178110((uint64_t)v134, &qword_100E7B2B8);
  sub_100178110((uint64_t)v133, &qword_100E66E40);
  sub_1008DAEB4((uint64_t)v131, (void (*)(void))type metadata accessor for PrecipitationAveragesHeroChartViewModel);
  return v95;
}

uint64_t sub_1008D8B5C@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v163 = a3;
  uint64_t v171 = a2;
  uint64_t v168 = a4;
  uint64_t v5 = type metadata accessor for PrecipitationAveragesDetailInput();
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v164 = (void (*)(char *, char *, uint64_t))((char *)&v138 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v158 = (uint64_t)&v138 - v9;
  __chkstk_darwin(v8);
  uint64_t v153 = (uint64_t)&v138 - v10;
  uint64_t v151 = type metadata accessor for WeatherDescription();
  uint64_t v150 = *(void *)(v151 - 8);
  __chkstk_darwin(v151);
  uint64_t v149 = (char *)&v138 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = sub_10017DF08(&qword_100E6B648);
  uint64_t v147 = *(void *)(v148 - 8);
  uint64_t v12 = __chkstk_darwin(v148);
  uint64_t v144 = (char *)&v138 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v143 = (char *)&v138 - v14;
  uint64_t v146 = type metadata accessor for TimeZone();
  uint64_t v145 = *(void *)(v146 - 8);
  __chkstk_darwin(v146);
  uint64_t v141 = (char *)&v138 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E6B640);
  __chkstk_darwin(v16 - 8);
  uint64_t v155 = (uint64_t)&v138 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v18 - 8);
  uint64_t v156 = (uint64_t)&v138 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = type metadata accessor for DetailChartDataElement();
  uint64_t countAndFlagsBits = *(void *)(v167 - 8);
  uint64_t v20 = __chkstk_darwin(v167);
  uint64_t v157 = (char *)&v138 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v154 = (char *)&v138 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v159 = (char *)&v138 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v138 - v27;
  uint64_t v29 = __chkstk_darwin(v26);
  uint64_t v160 = (char *)&v138 - v30;
  __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v138 - v31;
  uint64_t v33 = type metadata accessor for Date();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = __chkstk_darwin(v33);
  double v152 = (char *)&v138 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v39 = (char *)&v138 - v38;
  __chkstk_darwin(v37);
  uint64_t v41 = (char *)&v138 - v40;
  uint64_t v42 = type metadata accessor for Calendar();
  uint64_t v43 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v45 = *(void (**)(void))(v43 + 16);
  v175 = (char *)&v138 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45();
  uint64_t v162 = v5;
  uint64_t v46 = *(int *)(v5 + 36);
  uint64_t object = a1;
  uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 16);
  uint64_t v174 = v41;
  uint64_t v48 = v41;
  uint64_t v49 = v171;
  uint64_t v176 = v33;
  v47(v48, a1 + v46, v33);
  uint64_t v50 = *((void *)v49 + 2);
  uint64_t v169 = v42;
  uint64_t v165 = v43;
  if (v50)
  {
    uint64_t v161 = v32;
    uint64_t v51 = *(void (**)(char *, char *, uint64_t))(countAndFlagsBits + 16);
    unint64_t v139 = (*(unsigned __int8 *)(countAndFlagsBits + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(countAndFlagsBits + 80);
    uint64_t v52 = (char *)v49 + v139;
    uint64_t v53 = *(void *)(countAndFlagsBits + 72);
    uint64_t v140 = v34;
    uint64_t v172 = (void (**)(char *, uint64_t))(countAndFlagsBits + 8);
    uint64_t v173 = (void (**)(char *, uint64_t))(v34 + 8);
    swift_bridgeObjectRetain();
    uint64_t v54 = v167;
    while (1)
    {
      v51(v28, v52, v54);
      DetailChartDataElement.date.getter();
      char v55 = Calendar.isDate(_:inSameDayAs:)();
      uint64_t v56 = *v173;
      (*v173)(v39, v176);
      if (v55) {
        break;
      }
      (*v172)(v28, v54);
      v52 += v53;
      if (!--v50)
      {
        swift_bridgeObjectRelease();
        uint64_t v43 = v165;
        uint64_t v34 = v140;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v69 = countAndFlagsBits + 32;
    uint64_t v70 = *(void (**)(char *, char *, uint64_t))(countAndFlagsBits + 32);
    uint64_t v71 = v160;
    v70(v160, v28, v54);
    uint64_t v164 = v70;
    v70(v161, v71, v54);
    uint64_t v72 = *(void *)(v163 + 16);
    if (v72)
    {
      uint64_t v73 = v54;
      uint64_t countAndFlagsBits = v69;
      uint64_t v74 = (char *)(v163 + v139);
      swift_bridgeObjectRetain();
      uint64_t v75 = v157;
      while (1)
      {
        v51(v75, v74, v73);
        DetailChartDataElement.date.getter();
        char v76 = Calendar.isDate(_:inSameDayAs:)();
        v56(v39, v176);
        if (v76) {
          break;
        }
        (*v172)(v75, v73);
        v74 += v53;
        if (!--v72)
        {
          swift_bridgeObjectRelease();
          goto LABEL_17;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v88 = v154;
      uint64_t v89 = v164;
      v164(v154, v75, v73);
      v89(v159, v88, v73);
      uint64_t v90 = v155;
      sub_10043F6C8((uint64_t)v171, v155);
      if (_s7Weather24LocationCompositionStateOwet_0(v90, 1, v73) == 1)
      {
        sub_100178110(v90, &qword_100E6B640);
        uint64_t v91 = v156;
        _s7Weather24LocationCompositionStateOwst_0(v156, 1, 1, v176);
        uint64_t v92 = v169;
      }
      else
      {
        uint64_t v91 = v156;
        DetailChartDataElement.date.getter();
        uint64_t v93 = *v172;
        (*v172)((char *)v90, v167);
        uint64_t v94 = v176;
        _s7Weather24LocationCompositionStateOwst_0(v91, 0, 1, v176);
        int v95 = _s7Weather24LocationCompositionStateOwet_0(v91, 1, v94);
        uint64_t v92 = v169;
        if (v95 != 1)
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v140 + 32))(v152, v91, v176);
          uint64_t v171 = v93;
          uint64_t v112 = v141;
          Calendar.timeZone.getter();
          uint64_t countAndFlagsBits = Date.formattedMonthAndDay(timeZone:)();
          uint64_t v114 = v113;
          uint64_t v115 = v161;
          DetailChartDataElement.date.getter();
          uint64_t object = Date.formattedMonthAndDay(timeZone:)();
          uint64_t v117 = v116;
          type metadata accessor for UnitManager();
          static UnitManager.standard.getter();
          uint64_t v118 = (void *)UnitManager.precipitationRainfall.getter();
          swift_release();
          DetailChartDataElement.value.getter();
          sub_1002F8D98();
          id v119 = v118;
          uint64_t v120 = v143;
          Measurement.init(value:unit:)();
          DetailChartDataElement.value.getter();
          id v121 = v119;
          uint64_t v122 = v144;
          Measurement.init(value:unit:)();
          sub_1001B1E64((void *)(v142 + 80), *(void *)(v142 + 104));
          uint64_t v123 = v149;
          sub_1009D5204(countAndFlagsBits, v114, object, v117);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          id v124 = [self mainBundle];
          v179._uint64_t countAndFlagsBits = 0xD000000000000023;
          v179._uint64_t object = (void *)0x8000000100CA27C0;
          v125._uint64_t object = (void *)0x8000000100CB6410;
          v125._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
          v126._uint64_t countAndFlagsBits = 0x7972616D6D7553;
          v126._uint64_t object = (void *)0xE700000000000000;
          Swift::String v127 = NSLocalizedString(_:tableName:bundle:value:comment:)(v125, (Swift::String_optional)0, (NSBundle)v124, v126, v179);
          uint64_t countAndFlagsBits = v127._countAndFlagsBits;
          uint64_t object = (uint64_t)v127._object;

          uint64_t v128 = *(void (**)(char *, uint64_t))(v147 + 8);
          uint64_t v129 = v148;
          v128(v122, v148);
          v128(v120, v129);
          uint64_t v130 = v176;
          v56(v39, v176);
          (*(void (**)(char *, uint64_t))(v145 + 8))(v112, v146);
          v56(v152, v130);
          uint64_t v131 = v167;
          uint64_t v132 = v171;
          v171(v159, v167);
          v132(v115, v131);
          uint64_t v133 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
          uint64_t v134 = v168;
          uint64_t v135 = v151;
          _s7Weather24LocationCompositionStateOwst_0(v168 + v133[6], 1, 1, v151);
          (*(void (**)(uint64_t, char *, uint64_t))(v150 + 32))(v134 + v133[7], v123, v135);
          uint64_t v136 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
          swift_storeEnumTagMultiPayload();
          _s7Weather24LocationCompositionStateOwst_0(v134 + v133[8], 1, 1, v136);
          *(void *)uint64_t v134 = 0;
          *(void *)(v134 + 8) = 0;
          *(unsigned char *)(v134 + 16) = 2;
          uint64_t v137 = object;
          *(void *)(v134 + 24) = countAndFlagsBits;
          *(void *)(v134 + 32) = v137;
          *(unsigned char *)(v134 + v133[9]) = 0;
          *(unsigned char *)(v134 + v133[10]) = 0;
          v56(v174, v130);
          (*(void (**)(char *, uint64_t))(v165 + 8))(v175, v169);
          uint64_t v68 = v134;
          uint64_t v110 = 0;
          uint64_t v67 = (uint64_t)v133;
          return _s7Weather24LocationCompositionStateOwst_0(v68, v110, 1, v67);
        }
      }
      sub_100178110(v91, (uint64_t *)&unk_100E73CA0);
      if (qword_100E62810 != -1) {
        swift_once();
      }
      uint64_t v96 = type metadata accessor for Logger();
      sub_1002102B0(v96, (uint64_t)qword_100F51F38);
      uint64_t v97 = v153;
      sub_1008DAE60(object, v153, (void (*)(void))type metadata accessor for PrecipitationAveragesDetailInput);
      uint64_t v98 = Logger.logObject.getter();
      os_log_type_t v99 = static os_log_type_t.error.getter();
      BOOL v100 = os_log_type_enabled(v98, v99);
      uint64_t v101 = v165;
      uint64_t v102 = v161;
      if (v100)
      {
        uint64_t v103 = swift_slowAlloc();
        uint64_t v104 = (void (*)(char *, uint64_t))swift_slowAlloc();
        uint64_t v171 = v104;
        *(_DWORD *)uint64_t v103 = 141558275;
        uint64_t v177 = 1752392040;
        long long v178 = (void (*)(void, void))v104;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v103 + 12) = 2081;
        uint64_t countAndFlagsBits = v103 + 14;
        type metadata accessor for Location();
        sub_1002FF134();
        uint64_t v105 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v177 = sub_10016414C(v105, v106, (uint64_t *)&v178);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_1008DAEB4(v97, (void (*)(void))type metadata accessor for PrecipitationAveragesDetailInput);
        _os_log_impl((void *)&_mh_execute_header, v98, v99, "Could not derive a start date, for creating platter view summary. location=%{private,mask.hash}s", (uint8_t *)v103, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v107 = *v172;
        uint64_t v92 = v169;
        uint64_t v108 = v167;
        (*v172)(v159, v167);
        uint64_t v109 = v161;
      }
      else
      {

        sub_1008DAEB4(v97, (void (*)(void))type metadata accessor for PrecipitationAveragesDetailInput);
        uint64_t v107 = *v172;
        uint64_t v108 = v167;
        (*v172)(v159, v167);
        uint64_t v109 = v102;
      }
      v107(v109, v108);
      v56(v174, v176);
      (*(void (**)(char *, uint64_t))(v101 + 8))(v175, v92);
    }
    else
    {
LABEL_17:
      if (qword_100E62810 != -1) {
        swift_once();
      }
      uint64_t v77 = type metadata accessor for Logger();
      sub_1002102B0(v77, (uint64_t)qword_100F51F38);
      uint64_t v78 = v158;
      sub_1008DAE60(object, v158, (void (*)(void))type metadata accessor for PrecipitationAveragesDetailInput);
      uint64_t v79 = Logger.logObject.getter();
      os_log_type_t v80 = static os_log_type_t.error.getter();
      BOOL v81 = os_log_type_enabled(v79, v80);
      uint64_t v82 = v169;
      uint64_t v83 = v161;
      if (v81)
      {
        uint64_t v84 = swift_slowAlloc();
        uint64_t v85 = swift_slowAlloc();
        *(_DWORD *)uint64_t v84 = 141558275;
        uint64_t v177 = 1752392040;
        long long v178 = (void (*)(void, void))v85;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v84 + 12) = 2081;
        uint64_t v171 = (void (*)(char *, uint64_t))(v84 + 14);
        type metadata accessor for Location();
        sub_1002FF134();
        uint64_t v86 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v177 = sub_10016414C(v86, v87, (uint64_t *)&v178);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_1008DAEB4(v78, (void (*)(void))type metadata accessor for PrecipitationAveragesDetailInput);
        _os_log_impl((void *)&_mh_execute_header, v79, v80, "Missing historical average precipitation accumulation up to today, for creating platter view summary. location=%{private,mask.hash}s", (uint8_t *)v84, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*v172)(v161, v167);
      }
      else
      {

        sub_1008DAEB4(v78, (void (*)(void))type metadata accessor for PrecipitationAveragesDetailInput);
        (*v172)(v83, v167);
      }
      v56(v174, v176);
      (*(void (**)(char *, uint64_t))(v165 + 8))(v175, v82);
    }
    uint64_t v67 = type metadata accessor for ConditionDetailPlatterViewModel(0);
    uint64_t v68 = v168;
  }
  else
  {
LABEL_6:
    if (qword_100E62810 != -1) {
      swift_once();
    }
    uint64_t v57 = type metadata accessor for Logger();
    sub_1002102B0(v57, (uint64_t)qword_100F51F38);
    uint64_t v58 = (void (*)(void, void, void))v164;
    sub_1008DAE60(object, (uint64_t)v164, (void (*)(void))type metadata accessor for PrecipitationAveragesDetailInput);
    uint64_t v59 = Logger.logObject.getter();
    os_log_type_t v60 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v59, v60))
    {
      uint64_t v61 = swift_slowAlloc();
      uint64_t v62 = swift_slowAlloc();
      *(_DWORD *)uint64_t v61 = 141558275;
      uint64_t v177 = 1752392040;
      long long v178 = (void (*)(void, void))v62;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v61 + 12) = 2081;
      type metadata accessor for Location();
      sub_1002FF134();
      uint64_t v63 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v177 = sub_10016414C(v63, v64, (uint64_t *)&v178);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1008DAEB4((uint64_t)v58, (void (*)(void))type metadata accessor for PrecipitationAveragesDetailInput);
      _os_log_impl((void *)&_mh_execute_header, v59, v60, "Missing precipitation accumulation up to today, for creating platter view summary. location=%{private,mask.hash}s", (uint8_t *)v61, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v43 = v165;
      swift_slowDealloc();
    }
    else
    {
      sub_1008DAEB4((uint64_t)v58, (void (*)(void))type metadata accessor for PrecipitationAveragesDetailInput);
    }

    uint64_t v65 = v168;
    uint64_t v66 = v169;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v174, v176);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v175, v66);
    uint64_t v67 = type metadata accessor for ConditionDetailPlatterViewModel(0);
    uint64_t v68 = v65;
  }
  uint64_t v110 = 1;
  return _s7Weather24LocationCompositionStateOwst_0(v68, v110, 1, v67);
}

uint64_t sub_1008D9F48@<X0>(uint64_t a1@<X0>, char a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v141 = a1;
  uint64_t v132 = a3;
  uint64_t v130 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  __chkstk_darwin(v130);
  uint64_t v131 = (char *)&v116 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E63758);
  __chkstk_darwin(v5 - 8);
  uint64_t v144 = (uint64_t)&v116 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E7D438);
  __chkstk_darwin(v7 - 8);
  uint64_t countAndFlagsBits = (uint64_t)&v116 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = type metadata accessor for DateComponents();
  uint64_t v136 = *(void *)(v139 - 8);
  __chkstk_darwin(v139);
  unint64_t v135 = (unint64_t)&v116 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v133 = (uint64_t)&v116 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v138 = (void (*)(void))((char *)&v116 - v14);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v137 = (uint64_t)&v116 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v145 = (uint64_t)&v116 - v18;
  __chkstk_darwin(v17);
  uint64_t v146 = (uint64_t)&v116 - v19;
  uint64_t v143 = type metadata accessor for Calendar();
  uint64_t v20 = *(void *)(v143 - 8);
  __chkstk_darwin(v143);
  uint64_t v142 = (char *)&v116 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10017DF08(&qword_100E6D1D8);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  id v119 = (char *)&v116 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v120 = (char *)&v116 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v116 - v28;
  uint64_t v30 = __chkstk_darwin(v27);
  uint64_t v32 = (char *)&v116 - v31;
  __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v116 - v33;
  uint64_t v35 = type metadata accessor for TimeZone();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v117 = (char *)&v116 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v118 = (char *)&v116 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v43 = (char *)&v116 - v42;
  __chkstk_darwin(v41);
  uint64_t v45 = (char *)&v116 - v44;
  uint64_t v46 = sub_1008DAD54(a2);
  uint64_t v128 = v47;
  uint64_t v129 = v46;
  TimeZone.init(secondsFromGMT:)();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v127 = v20;
  uint64_t v49 = v36 + 32;
  uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v36 + 32);
  v50(v45, v34, v35);
  uint64_t v140 = Date.formattedYear(timeZone:)();
  uint64_t v141 = v51;
  uint64_t v53 = *(void (**)(char *, uint64_t))(v36 + 8);
  uint64_t v52 = v36 + 8;
  uint64_t v54 = v53;
  v53(v45, v35);
  TimeZone.init(secondsFromGMT:)();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v35);
  if (result == 1)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v123 = v49;
  uint64_t v122 = (void (*)(char *, uint64_t, uint64_t))v50;
  v50(v43, v32, v35);
  static Calendar.gregorianCalendar(with:)();
  uint64_t v124 = v52;
  id v121 = v54;
  v54(v43, v35);
  uint64_t v55 = countAndFlagsBits;
  uint64_t v56 = v143;
  _s7Weather24LocationCompositionStateOwst_0(countAndFlagsBits, 1, 1, v143);
  uint64_t v57 = (uint64_t)v29;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 1, 1, v35);
  unint64_t v58 = v135;
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
  Calendar.date(from:)();
  uint64_t v59 = *(void (**)(unint64_t, uint64_t))(v136 + 8);
  uint64_t v60 = v139;
  v59(v58, v139);
  _s7Weather24LocationCompositionStateOwst_0(v55, 1, 1, v56);
  uint64_t v136 = v35;
  _s7Weather24LocationCompositionStateOwst_0(v57, 1, 1, v35);
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
  uint64_t v61 = v145;
  Calendar.date(from:)();
  v59(v58, v60);
  uint64_t v62 = type metadata accessor for Date();
  int v63 = _s7Weather24LocationCompositionStateOwet_0(v146, 1, v62);
  uint64_t v64 = v61;
  uint64_t v65 = v137;
  sub_10006DF38(v64, v137, (uint64_t *)&unk_100E73CA0);
  uint64_t v139 = v62;
  if (v63 == 1 || _s7Weather24LocationCompositionStateOwet_0(v65, 1, v62) == 1)
  {
    sub_100178110(v65, (uint64_t *)&unk_100E73CA0);
    uint64_t v66 = (uint64_t)v138;
    uint64_t v67 = v140;
    if (qword_100E62810 != -1) {
      swift_once();
    }
    uint64_t v68 = type metadata accessor for Logger();
    sub_1002102B0(v68, (uint64_t)qword_100F51F38);
    uint64_t v69 = Logger.logObject.getter();
    os_log_type_t v70 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v69, v70))
    {
      uint64_t v71 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v71 = 0;
      _os_log_impl((void *)&_mh_execute_header, v69, v70, "Could not derive dates for describing average range in platter view summary.", v71, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    sub_100178110(v65, (uint64_t *)&unk_100E73CA0);
    uint64_t v66 = (uint64_t)v138;
    uint64_t v67 = v140;
  }
  id v72 = [self mainBundle];
  v147._uint64_t countAndFlagsBits = 0xD000000000000032;
  v147._uint64_t object = (void *)0x8000000100CB5BF0;
  unint64_t v135 = (unint64_t)"dispatchedEvents";
  v73._uint64_t object = (void *)0x8000000100CB5BD0;
  v73._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v74._uint64_t countAndFlagsBits = 0;
  v74._uint64_t object = (void *)0xE000000000000000;
  Swift::String v75 = NSLocalizedString(_:tableName:bundle:value:comment:)(v73, (Swift::String_optional)0, (NSBundle)v72, v74, v147);
  uint64_t countAndFlagsBits = v75._countAndFlagsBits;
  uint64_t object = v75._object;

  uint64_t v76 = type metadata accessor for WeatherDescription();
  _s7Weather24LocationCompositionStateOwst_0(v144, 1, 1, v76);
  sub_10017DF08(&qword_100E6E908);
  uint64_t v77 = type metadata accessor for WeatherDescription.Argument();
  uint64_t v78 = *(void *)(v77 - 8);
  uint64_t v79 = *(void *)(v78 + 72);
  unint64_t v80 = (*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
  uint64_t v81 = swift_allocObject();
  *(_OWORD *)(v81 + 16) = xmmword_100C31880;
  uint64_t v125 = v81;
  uint64_t v82 = (uint64_t *)(v81 + v80);
  uint64_t v83 = v141;
  uint64_t *v82 = v67;
  v82[1] = v83;
  uint64_t v84 = *(void (**)(void))(v78 + 104);
  ((void (*)(unint64_t, void, uint64_t))v84)(v81 + v80, enum case for WeatherDescription.Argument.string(_:), v77);
  uint64_t v137 = v79;
  uint64_t v138 = v84;
  uint64_t v85 = (uint64_t *)((char *)v82 + v79);
  *uint64_t v85 = v67;
  v85[1] = v83;
  v84();
  sub_10006DF38(v146, v66, (uint64_t *)&unk_100E73CA0);
  uint64_t v86 = v139;
  LODWORD(v72) = _s7Weather24LocationCompositionStateOwet_0(v66, 1, v139);
  swift_bridgeObjectRetain_n();
  if (v72 != 1)
  {
    uint64_t v90 = (uint64_t)v120;
    TimeZone.init(secondsFromGMT:)();
    uint64_t v91 = v136;
    uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v90, 1, v136);
    if (result != 1)
    {
      uint64_t v92 = v118;
      v122(v118, v90, v91);
      uint64_t v93 = v91;
      uint64_t v94 = v66;
      uint64_t v87 = Date.formattedMonthAndDay(timeZone:)();
      unint64_t v88 = v95;
      v121(v92, v93);
      uint64_t v89 = v139;
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v139 - 8) + 8))(v94, v139);
      uint64_t v67 = v140;
      goto LABEL_15;
    }
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_100178110(v66, (uint64_t *)&unk_100E73CA0);
  uint64_t v87 = 0;
  unint64_t v88 = 0xE000000000000000;
  uint64_t v89 = v86;
LABEL_15:
  uint64_t v97 = v137;
  uint64_t v96 = v138;
  uint64_t v98 = (uint64_t *)((char *)v82 + 2 * v137);
  *uint64_t v98 = v87;
  v98[1] = v88;
  v96();
  uint64_t v99 = v133;
  sub_10006DF38(v145, v133, (uint64_t *)&unk_100E73CA0);
  if (_s7Weather24LocationCompositionStateOwet_0(v99, 1, v89) == 1)
  {
    sub_100178110(v99, (uint64_t *)&unk_100E73CA0);
    uint64_t v100 = 0;
    unint64_t v101 = 0xE000000000000000;
LABEL_19:
    unint64_t v106 = (uint64_t *)((char *)v82 + 3 * v97);
    *unint64_t v106 = v100;
    v106[1] = v101;
    uint64_t v107 = v138;
    v138();
    uint64_t v108 = (uint64_t *)((char *)v82 + 4 * v97);
    uint64_t v109 = v141;
    *uint64_t v108 = v67;
    v108[1] = v109;
    v107();
    uint64_t v110 = (uint64_t)v131;
    WeatherDescription.init(format:_:)();
    sub_100178110(v145, (uint64_t *)&unk_100E73CA0);
    (*(void (**)(char *, uint64_t))(v127 + 8))(v142, v143);
    uint64_t v111 = v130;
    swift_storeEnumTagMultiPayload();
    uint64_t v112 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
    uint64_t v113 = v132;
    _s7Weather24LocationCompositionStateOwst_0(v132 + v112[8], 1, 1, v111);
    unint64_t v114 = v135 | 0x8000000000000000;
    *(void *)uint64_t v113 = 0xD00000000000001BLL;
    *(void *)(v113 + 8) = v114;
    *(unsigned char *)(v113 + 16) = 0;
    uint64_t v115 = object;
    *(void *)(v113 + 24) = countAndFlagsBits;
    *(void *)(v113 + 32) = v115;
    sub_1001A8858(v144, v113 + v112[6]);
    sub_100519D98(v110, v113 + v112[7]);
    *(unsigned char *)(v113 + v112[9]) = 0;
    *(unsigned char *)(v113 + v112[10]) = 0;
    return sub_100178110(v146, (uint64_t *)&unk_100E73CA0);
  }
  uint64_t v102 = (uint64_t)v119;
  TimeZone.init(secondsFromGMT:)();
  uint64_t v103 = v136;
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v102, 1, v136);
  if (result != 1)
  {
    uint64_t v104 = v117;
    v122(v117, v102, v103);
    uint64_t v100 = Date.formattedMonthAndDay(timeZone:)();
    unint64_t v101 = v105;
    v121(v104, v103);
    (*(void (**)(uint64_t))(*(void *)(v139 - 8) + 8))(v99);
    uint64_t v67 = v140;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1008DAD54(char a1)
{
  uint64_t v2 = (objc_class *)[self mainBundle];
  if (a1)
  {
    uint64_t v3 = 0x1000000000000279;
    unint64_t v4 = 0xD00000000000018CLL;
    unint64_t v11 = 0x8000000100CB6190;
    unint64_t v5 = 0x8000000100CB6000;
    v6.super.Class isa = v2;
    uint64_t v7 = 0;
    unint64_t v8 = 0xE000000000000000;
  }
  else
  {
    unint64_t v11 = 0x8000000100CB5DA0;
    unint64_t v5 = 0x8000000100CB5C30;
    unint64_t v4 = 0xD00000000000016ELL;
    v6.super.Class isa = v2;
    uint64_t v7 = 0;
    unint64_t v8 = 0xE000000000000000;
    uint64_t v3 = 0x100000000000025BLL;
  }
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, (Swift::String_optional)0, v6, *(Swift::String *)&v7, *(Swift::String *)&v3)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_1008DAE60(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_1008DAEB4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

ValueMetadata *type metadata accessor for PrecipitationAveragesDetailViewModelFactory()
{
  return &type metadata for PrecipitationAveragesDetailViewModelFactory;
}

uint64_t sub_1008DAF18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1008DAF2C);
}

uint64_t sub_1008DAF2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherCondition();

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_1008DAF74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1008DAF88);
}

uint64_t sub_1008DAF88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherCondition();

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v4);
}

uint64_t type metadata accessor for VFXTestViewModel()
{
  uint64_t result = qword_100E9E818;
  if (!qword_100E9E818) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1008DB01C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CloudAltitudeKind();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = type metadata accessor for WeatherConditionGradientModel.PresentationContext();
  sub_100179C0C();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_1001626E0();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = type metadata accessor for Elevation();
  __chkstk_darwin(v16 - 8);
  sub_1001626E0();
  type metadata accessor for WeatherCondition();
  sub_100179C0C();
  __chkstk_darwin(v17);
  sub_1001626E0();
  (*(void (**)(uint64_t, uint64_t))(v20 + 16))(v19 - v18, v1);
  Elevation.init(_:isPM:)();
  uint64_t v21 = enum case for WeatherConditionGradientModel.AnimationContext.vfx(_:);
  uint64_t v22 = type metadata accessor for WeatherConditionGradientModel.AnimationContext();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 104))(v15, v21, v22);
  (*(void (**)(uint64_t, void, uint64_t))(v11 + 104))(v15, enum case for WeatherConditionGradientModel.PresentationContext.fullScreen(_:), v9);
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v8, enum case for CloudAltitudeKind.low(_:), v2);
  return WeatherConditionGradientModel.init(conditionKind:elevation:isDaylight:presentation:cloudCover:cloudKind:)();
}

uint64_t sub_1008DB254@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = sub_10017DF08(&qword_100E9E858);
  a1[4] = sub_1008DB398();
  sub_100170694(a1);
  type metadata accessor for VFXTestViewModel();
  return ShortDescription.init(name:_:)();
}

uint64_t sub_1008DB2F4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1008DB254(a1);
}

uint64_t sub_1008DB30C()
{
  sub_1008DB3EC(&qword_100E9E868);

  return ShortDescribable.description.getter();
}

uint64_t sub_1008DB364()
{
  return sub_1008DB3EC(&qword_100E9E850);
}

unint64_t sub_1008DB398()
{
  unint64_t result = qword_100E9E860;
  if (!qword_100E9E860)
  {
    sub_10018C6DC(&qword_100E9E858);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9E860);
  }
  return result;
}

uint64_t sub_1008DB3EC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for VFXTestViewModel();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1008DB430(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (void *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for ConditionDetailChartHeaderStringModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = type metadata accessor for ConditionDetailChartHeaderViewModel();
    *((unsigned char *)a1 + *(int *)(v8 + 20)) = *((unsigned char *)a2 + *(int *)(v8 + 20));
    *((unsigned char *)a1 + *(int *)(v8 + 24)) = *((unsigned char *)a2 + *(int *)(v8 + 24));
    uint64_t v9 = *(int *)(a3 + 24);
    *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
    *(void *)((char *)a1 + v9) = *(void *)((char *)a2 + v9);
  }
  return a1;
}

uint64_t sub_1008DB524(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ConditionDetailChartHeaderStringModel();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1008DB588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ConditionDetailChartHeaderStringModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for ConditionDetailChartHeaderViewModel();
  *(unsigned char *)(a1 + *(int *)(v7 + 20)) = *(unsigned char *)(a2 + *(int *)(v7 + 20));
  *(unsigned char *)(a1 + *(int *)(v7 + 24)) = *(unsigned char *)(a2 + *(int *)(v7 + 24));
  uint64_t v8 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  return a1;
}

uint64_t sub_1008DB62C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ConditionDetailChartHeaderStringModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for ConditionDetailChartHeaderViewModel();
  *(unsigned char *)(a1 + *(int *)(v7 + 20)) = *(unsigned char *)(a2 + *(int *)(v7 + 20));
  *(unsigned char *)(a1 + *(int *)(v7 + 24)) = *(unsigned char *)(a2 + *(int *)(v7 + 24));
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1008DB6D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ConditionDetailChartHeaderStringModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for ConditionDetailChartHeaderViewModel();
  *(unsigned char *)(a1 + *(int *)(v7 + 20)) = *(unsigned char *)(a2 + *(int *)(v7 + 20));
  *(unsigned char *)(a1 + *(int *)(v7 + 24)) = *(unsigned char *)(a2 + *(int *)(v7 + 24));
  uint64_t v8 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  return a1;
}

uint64_t sub_1008DB778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ConditionDetailChartHeaderStringModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = type metadata accessor for ConditionDetailChartHeaderViewModel();
  *(unsigned char *)(a1 + *(int *)(v7 + 20)) = *(unsigned char *)(a2 + *(int *)(v7 + 20));
  *(unsigned char *)(a1 + *(int *)(v7 + 24)) = *(unsigned char *)(a2 + *(int *)(v7 + 24));
  uint64_t v8 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  return a1;
}

uint64_t sub_1008DB81C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1008DB830);
}

uint64_t sub_1008DB830(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConditionDetailChartHeaderViewModel();

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_1008DB878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1008DB88C);
}

uint64_t sub_1008DB88C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConditionDetailChartHeaderViewModel();

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ConditionDetailChartHeaderView()
{
  uint64_t result = qword_100E9E8C8;
  if (!qword_100E9E8C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1008DB920()
{
  uint64_t result = type metadata accessor for ConditionDetailChartHeaderViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1008DB9BC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1008DB9D8@<X0>(uint64_t *a1@<X8>)
{
  switch(*(unsigned char *)(v1 + *(int *)(type metadata accessor for ConditionDetailChartHeaderViewModel() + 20)))
  {
    case 1:
      if (qword_100E62B90 != -1) {
        swift_once();
      }
      uint64_t v3 = qword_100F52458;
      a1[3] = type metadata accessor for ChanceOfRainChartHeaderStyle();
      uint64_t v4 = (unint64_t *)&unk_100E9E950;
      int v5 = type metadata accessor for ChanceOfRainChartHeaderStyle;
      break;
    case 2:
      if (qword_100E62B88 != -1) {
        swift_once();
      }
      uint64_t v3 = qword_100F52450;
      a1[3] = type metadata accessor for TemperatureChartHeaderStyle();
      uint64_t v4 = (unint64_t *)&unk_100E9E948;
      int v5 = type metadata accessor for TemperatureChartHeaderStyle;
      break;
    case 3:
      if (qword_100E62988 != -1) {
        swift_once();
      }
      uint64_t v3 = qword_100F52200;
      a1[3] = type metadata accessor for VisibilityChartHeaderStyle();
      uint64_t v4 = (unint64_t *)&unk_100E9E940;
      int v5 = type metadata accessor for VisibilityChartHeaderStyle;
      break;
    case 4:
      if (qword_100E62570 != -1) {
        swift_once();
      }
      uint64_t v3 = qword_100F51AD0;
      a1[3] = type metadata accessor for UVIndexChartHeaderStyle();
      uint64_t v4 = (unint64_t *)&unk_100E9E938;
      int v5 = type metadata accessor for UVIndexChartHeaderStyle;
      break;
    default:
      if (qword_100E62378 != -1) {
        swift_once();
      }
      uint64_t v3 = qword_100F51510;
      a1[3] = type metadata accessor for DefaultChartHeaderStyle();
      uint64_t v4 = (unint64_t *)&unk_100E9E958;
      int v5 = type metadata accessor for DefaultChartHeaderStyle;
      break;
  }
  a1[4] = sub_1008E0974(v4, (void (*)(uint64_t))v5);
  *a1 = v3;

  return swift_retain();
}

uint64_t sub_1008DBCA0()
{
  uint64_t v2 = v0;
  uint64_t v3 = type metadata accessor for ConditionDetailChartHeaderView();
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_100162EF8();
  uint64_t v37 = v5;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v36 - v7;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v36 - v10;
  uint64_t v12 = sub_10017DF08(&qword_100E79020);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_10008B8C0();
  uint64_t v14 = type metadata accessor for ConditionDetailChartHeaderViewModel();
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v36 - v19;
  __chkstk_darwin(v21);
  sub_1008E0790(v0, (uint64_t)&v36 - v22, (void (*)(void))type metadata accessor for ConditionDetailChartHeaderViewModel);
  ConditionDetailChartHeaderStringModel.title2.getter();
  type metadata accessor for ConditionDetailChartHeaderStringModel();
  sub_100162E4C();
  uint64_t v24 = *(void (**)(void))(v23 + 8);
  sub_1001A0FD8();
  v24();
  uint64_t v25 = type metadata accessor for AttributedString();
  int v26 = _s7Weather24LocationCompositionStateOwet_0(v1, 1, v25);
  sub_100178110(v1, &qword_100E79020);
  sub_1008E0790(v2, (uint64_t)v11, (void (*)(void))type metadata accessor for ConditionDetailChartHeaderView);
  if (v26 != 1)
  {
    sub_10014CF7C((uint64_t)v11, (void (*)(void))type metadata accessor for ConditionDetailChartHeaderView);
    sub_1008E0790(v2, (uint64_t)v8, (void (*)(void))type metadata accessor for ConditionDetailChartHeaderView);
    goto LABEL_7;
  }
  uint64_t v27 = (uint64_t)v17;
  sub_1008E0790((uint64_t)v11, (uint64_t)v20, (void (*)(void))type metadata accessor for ConditionDetailChartHeaderViewModel);
  ConditionDetailChartHeaderStringModel.title3.getter();
  uint64_t v29 = v28;
  sub_10014CF7C((uint64_t)v11, (void (*)(void))type metadata accessor for ConditionDetailChartHeaderView);
  sub_1001A0FD8();
  v24();
  swift_bridgeObjectRelease();
  sub_1008E0790(v2, (uint64_t)v8, (void (*)(void))type metadata accessor for ConditionDetailChartHeaderView);
  if (v29)
  {
LABEL_7:
    sub_10014CF7C((uint64_t)v8, (void (*)(void))type metadata accessor for ConditionDetailChartHeaderView);
    uint64_t v32 = v37;
    sub_1008E0790(v2, v37, (void (*)(void))type metadata accessor for ConditionDetailChartHeaderView);
    goto LABEL_8;
  }
  sub_1008E0790((uint64_t)v8, (uint64_t)v20, (void (*)(void))type metadata accessor for ConditionDetailChartHeaderViewModel);
  ConditionDetailChartHeaderStringModel.symbolName.getter();
  uint64_t v31 = v30;
  sub_10014CF7C((uint64_t)v8, (void (*)(void))type metadata accessor for ConditionDetailChartHeaderView);
  sub_1001A0FD8();
  v24();
  swift_bridgeObjectRelease();
  uint64_t v32 = v37;
  sub_1008E0790(v2, v37, (void (*)(void))type metadata accessor for ConditionDetailChartHeaderView);
  if (v31)
  {
LABEL_8:
    sub_10014CF7C(v32, (void (*)(void))type metadata accessor for ConditionDetailChartHeaderView);
    return 0;
  }
  sub_1008E0790(v32, v27, (void (*)(void))type metadata accessor for ConditionDetailChartHeaderViewModel);
  ConditionDetailChartHeaderStringModel.subtitle.getter();
  uint64_t v34 = v33;
  sub_10014CF7C(v32, (void (*)(void))type metadata accessor for ConditionDetailChartHeaderView);
  sub_1001A0FD8();
  v24();
  if (!v34) {
    return 1;
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1008DC0D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v105 = a1;
  uint64_t v2 = sub_10017DF08(&qword_100E79020);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_100109314();
  uint64_t v101 = v4;
  sub_100129064();
  uint64_t v5 = type metadata accessor for AttributedString();
  uint64_t v6 = sub_10017C81C(v5, (uint64_t)&v117);
  uint64_t v99 = v7;
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v97 = v8;
  uint64_t v9 = sub_100129064();
  uint64_t v104 = type metadata accessor for AutomationInfo(v9);
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v103 = v11;
  sub_100129064();
  uint64_t v12 = type metadata accessor for ConditionDetailChartHeaderViewModel();
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_100162EF8();
  uint64_t v102 = v14;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v89 - v16;
  uint64_t v18 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v19 = sub_10017C81C(v18, (uint64_t)&v115);
  uint64_t v93 = v20;
  __chkstk_darwin(v19);
  sub_10008B8C0();
  uint64_t v21 = sub_10017DF08(&qword_100E9E908);
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v89 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10017DF08(&qword_100E9E910);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v89 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_10017DF08(&qword_100E9E918);
  uint64_t v29 = sub_10017C81C(v28, (uint64_t)&v116);
  uint64_t v96 = v30;
  __chkstk_darwin(v29);
  sub_100109314();
  uint64_t v92 = v31;
  uint64_t v32 = sub_10017DF08(&qword_100E7A180);
  uint64_t v33 = sub_100109308(v32);
  __chkstk_darwin(v33);
  sub_100109314();
  uint64_t v107 = v34;
  uint64_t v35 = sub_10017DF08(&qword_100E7A188);
  uint64_t v36 = sub_100109308(v35);
  __chkstk_darwin(v36);
  sub_100109314();
  uint64_t v100 = v37;
  sub_100129064();
  *(void *)uint64_t v24 = *(void *)(v1 + *(int *)(type metadata accessor for ConditionDetailChartHeaderView() + 20));
  *((void *)v24 + 1) = 0;
  v24[16] = 0;
  uint64_t v38 = sub_10017DF08(&qword_100E9E920);
  sub_1008DC8E4(v1, &v24[*(int *)(v38 + 44)]);
  sub_1008DB9D8((uint64_t *)&v112);
  sub_1001B1E64(&v112, *((uint64_t *)&v113 + 1));
  dispatch thunk of ConditionDetailChartHeaderStyleType.preferredHeight.getter();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v112);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_10006DF38((uint64_t)v24, (uint64_t)v27, &qword_100E9E908);
  uint64_t v39 = &v27[*(int *)(v25 + 36)];
  long long v40 = v113;
  *(_OWORD *)uint64_t v39 = v112;
  *((_OWORD *)v39 + 1) = v40;
  *((_OWORD *)v39 + 2) = v114;
  sub_100178110((uint64_t)v24, &qword_100E9E908);
  static AccessibilityChildBehavior.ignore.getter();
  unint64_t v41 = sub_1008DFD7C();
  View.accessibilityElement(children:)();
  sub_100162F0C();
  v42();
  sub_100178110((uint64_t)v27, &qword_100E9E910);
  uint64_t v43 = v1;
  uint64_t v91 = v1;
  sub_1008E0790(v1, (uint64_t)v17, (void (*)(void))type metadata accessor for ConditionDetailChartHeaderViewModel);
  uint64_t v44 = ConditionDetailChartHeaderStringModel.accessibilityDescription.getter();
  uint64_t v46 = v45;
  uint64_t v90 = type metadata accessor for ConditionDetailChartHeaderStringModel();
  sub_100162E4C();
  uint64_t v48 = *(void (**)(void))(v47 + 8);
  uint64_t v93 = v47 + 8;
  ((void (*)(char *))v48)(v17);
  uint64_t v110 = v44;
  uint64_t v111 = v46;
  uint64_t v108 = v25;
  unint64_t v109 = v41;
  swift_getOpaqueTypeConformance2();
  sub_10014A85C();
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  sub_100162F0C();
  v49();
  unint64_t v106 = v17;
  uint64_t v94 = type metadata accessor for ConditionDetailChartHeaderViewModel;
  sub_1008E0790(v43, (uint64_t)v17, (void (*)(void))type metadata accessor for ConditionDetailChartHeaderViewModel);
  ConditionDetailChartHeaderStringModel.title1.getter();
  sub_100164938();
  v48();
  sub_1008E0974(qword_100E85C00, (void (*)(uint64_t))&type metadata accessor for AttributedString);
  uint64_t v50 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v52 = v51;
  sub_100162F0C();
  v53();
  uint64_t v110 = v50;
  uint64_t v111 = v52;
  swift_bridgeObjectRetain();
  v54._uint64_t countAndFlagsBits = 32;
  v54._uint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v54);
  swift_bridgeObjectRelease();
  uint64_t v56 = v110;
  uint64_t v55 = v111;
  sub_1008E0790(v43, (uint64_t)v106, (void (*)(void))type metadata accessor for ConditionDetailChartHeaderViewModel);
  uint64_t v57 = v101;
  ConditionDetailChartHeaderStringModel.title2.getter();
  sub_100164938();
  v48();
  uint64_t v58 = sub_100633414();
  uint64_t v60 = v59;
  sub_100178110(v57, &qword_100E79020);
  uint64_t v110 = v56;
  uint64_t v111 = v55;
  swift_bridgeObjectRetain();
  v61._uint64_t countAndFlagsBits = v58;
  v61._uint64_t object = v60;
  String.append(_:)(v61);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v62._uint64_t countAndFlagsBits = 32;
  v62._uint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v62);
  swift_bridgeObjectRelease();
  uint64_t v64 = v110;
  uint64_t v63 = v111;
  uint64_t v65 = v91;
  uint64_t v66 = v94;
  sub_1008E0790(v91, v102, (void (*)(void))v94);
  uint64_t v67 = ConditionDetailChartHeaderStringModel.title3.getter();
  uint64_t v69 = v68;
  sub_100164938();
  v48();
  if (v69) {
    uint64_t v70 = v67;
  }
  else {
    uint64_t v70 = 0;
  }
  if (!v69) {
    uint64_t v69 = (void *)0xE000000000000000;
  }
  uint64_t v110 = v64;
  uint64_t v111 = v63;
  swift_bridgeObjectRetain();
  v71._uint64_t countAndFlagsBits = v70;
  v71._uint64_t object = v69;
  String.append(_:)(v71);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v72 = v110;
  uint64_t v73 = v111;
  sub_1008E0790(v65, (uint64_t)v106, (void (*)(void))v66);
  uint64_t v74 = ConditionDetailChartHeaderStringModel.subtitle.getter();
  uint64_t v76 = v75;
  sub_100164938();
  v48();
  uint64_t v77 = v103;
  *uint64_t v103 = v72;
  v77[1] = v73;
  v77[2] = v74;
  v77[3] = v76;
  uint64_t v78 = (uint64_t)v77;
  type metadata accessor for AutomationCellInfo(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v79 = v100;
  uint64_t v80 = v107;
  sub_10048D52C(v78, v81, v82, v83, v84, v85, v86, v87, v89, v90, v91, v92, v93, (uint64_t)v94, v95, v96, v97, v98, v99,
    v100);
  sub_10014CF7C(v78, (void (*)(void))type metadata accessor for AutomationInfo);
  sub_100178110(v80, &qword_100E7A180);
  return sub_10020E72C(v79, v105, &qword_100E7A188);
}

uint64_t sub_1008DC8E4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v52 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100E9E960);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E9E968);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AttributedString();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for ConditionDetailChartHeaderViewModel();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100E9E970);
  __chkstk_darwin(v13 - 8);
  uint64_t v51 = (uint64_t)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v53 = (uint64_t)v49 - v16;
  sub_1008DB9D8(&v55);
  sub_1001B1E64(&v55, v58);
  dispatch thunk of ConditionDetailChartHeaderStyleType.topPadding.getter();
  uint64_t v18 = v17;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v55);
  if (sub_1008DBCA0())
  {
    sub_1008E0790(a1, (uint64_t)v12, (void (*)(void))type metadata accessor for ConditionDetailChartHeaderViewModel);
    ConditionDetailChartHeaderStringModel.title1.getter();
    uint64_t v19 = type metadata accessor for ConditionDetailChartHeaderStringModel();
    (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v12, v19);
    uint64_t v20 = Text.init(_:)();
    uint64_t v22 = v21;
    char v24 = v23 & 1;
    sub_1008DB9D8(&v55);
    uint64_t v50 = a1;
    sub_1001B1E64(&v55, v58);
    dispatch thunk of ConditionDetailChartHeaderStyleType.title1Font.getter();
    uint64_t v25 = Text.font(_:)();
    v49[0] = v6;
    v49[1] = v3;
    uint64_t v27 = v26;
    char v29 = v28 & 1;
    sub_100191924(v20, v22, v24);
    swift_release();
    swift_bridgeObjectRelease();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v55);
    sub_1008DB9D8(&v55);
    sub_1001B1E64(&v55, v58);
    dispatch thunk of ConditionDetailChartHeaderStyleType.title1Color.getter();
    uint64_t v30 = Text.foregroundColor(_:)();
    uint64_t v32 = v31;
    char v34 = v33;
    uint64_t v36 = v35;
    sub_100191924(v25, v27, v29);
    swift_release();
    swift_bridgeObjectRelease();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v55);
    uint64_t KeyPath = swift_getKeyPath();
    *(void *)uint64_t v8 = v30;
    *((void *)v8 + 1) = v32;
    v8[16] = v34 & 1;
    *((void *)v8 + 3) = v36;
    *((void *)v8 + 4) = KeyPath;
    *((void *)v8 + 5) = 0x3FE0000000000000;
    swift_storeEnumTagMultiPayload();
    sub_10017DF08(&qword_100E7BB28);
    sub_1004D36E0();
    sub_1001246C8(&qword_100E9E978, &qword_100E9E960);
    _ConditionalContent<>.init(storage:)();
  }
  else
  {
    sub_1008DCEC8((uint64_t)v5);
    sub_10006DF38((uint64_t)v5, (uint64_t)v8, &qword_100E9E960);
    swift_storeEnumTagMultiPayload();
    sub_10017DF08(&qword_100E7BB28);
    sub_1004D36E0();
    sub_1001246C8(&qword_100E9E978, &qword_100E9E960);
    _ConditionalContent<>.init(storage:)();
    sub_100178110((uint64_t)v5, &qword_100E9E960);
  }
  sub_1008DB9D8(v54);
  sub_1001B1E64(v54, v54[3]);
  dispatch thunk of ConditionDetailChartHeaderStyleType.bottomPadding.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v50 = v55;
  char v38 = v56;
  uint64_t v39 = v57;
  char v40 = v58;
  uint64_t v41 = v59;
  uint64_t v42 = v60;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v54);
  uint64_t v43 = v53;
  uint64_t v44 = v51;
  sub_10006DF38(v53, v51, &qword_100E9E970);
  uint64_t v45 = v52;
  *uint64_t v52 = v18;
  *((unsigned char *)v45 + 8) = 0;
  uint64_t v46 = sub_10017DF08(&qword_100E9E980);
  sub_10006DF38(v44, (uint64_t)v45 + *(int *)(v46 + 48), &qword_100E9E970);
  uint64_t v47 = (char *)v45 + *(int *)(v46 + 64);
  *(void *)uint64_t v47 = 0;
  v47[8] = 1;
  *((void *)v47 + 2) = v50;
  v47[24] = v38;
  *((void *)v47 + 4) = v39;
  v47[40] = v40;
  *((void *)v47 + 6) = v41;
  *((void *)v47 + 7) = v42;
  sub_100178110(v43, &qword_100E9E970);
  return sub_100178110(v44, &qword_100E9E970);
}

uint64_t sub_1008DCEC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v38 = a1;
  uint64_t v3 = type metadata accessor for ConditionDetailChartHeaderViewModel();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = &v39[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v6 = sub_10017DF08(&qword_100E9E988);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v39[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v9 = sub_10017DF08(&qword_100E9E990);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = &v39[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v13);
  uint64_t v15 = &v39[-v14 - 8];
  __chkstk_darwin(v16);
  uint64_t v18 = &v39[-v17 - 8];
  *(void *)uint64_t v8 = static VerticalAlignment.firstTextBaseline.getter();
  *((void *)v8 + 1) = 0;
  v8[16] = 0;
  uint64_t v19 = sub_10017DF08(&qword_100E9E998);
  sub_1008DD28C(v2, &v8[*(int *)(v19 + 44)]);
  char v20 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  sub_10006DF38((uint64_t)v8, (uint64_t)v15, &qword_100E9E988);
  char v29 = &v15[*(int *)(v10 + 44)];
  *char v29 = v20;
  *((void *)v29 + 1) = v22;
  *((void *)v29 + 2) = v24;
  *((void *)v29 + 3) = v26;
  *((void *)v29 + 4) = v28;
  v29[40] = 0;
  sub_100178110((uint64_t)v8, &qword_100E9E988);
  sub_10020E72C((uint64_t)v15, (uint64_t)v18, &qword_100E9E990);
  sub_1008E0790(v2, (uint64_t)v5, (void (*)(void))type metadata accessor for ConditionDetailChartHeaderViewModel);
  uint64_t v30 = ConditionDetailChartHeaderStringModel.subtitle.getter();
  uint64_t v32 = v31;
  uint64_t v33 = type metadata accessor for ConditionDetailChartHeaderStringModel();
  (*(void (**)(unsigned char *, uint64_t))(*(void *)(v33 - 8) + 8))(v5, v33);
  if (v32)
  {
    char v34 = static Axis.Set.horizontal.getter();
    sub_1008DF418(v30, v32, v2, (uint64_t)v39);
    swift_bridgeObjectRelease();
    memcpy((char *)&v40.n128_i16[3] + 1, v39, 0x80uLL);
    v41[0] = v34;
    memcpy(&v41[1], &v40, 0x87uLL);
    LocationSearchEntityFromStringResolver.init()();
  }
  else
  {
    sub_1008DFE24(v41);
  }
  sub_10020E72C((uint64_t)v41, (uint64_t)v42, &qword_100E9E9A0);
  sub_10006DF38((uint64_t)v18, (uint64_t)v12, &qword_100E9E990);
  sub_10020E72C((uint64_t)v42, (uint64_t)v39, &qword_100E9E9A0);
  uint64_t v35 = v38;
  sub_10006DF38((uint64_t)v12, v38, &qword_100E9E990);
  uint64_t v36 = v35 + *(int *)(sub_10017DF08(&qword_100E9E9A8) + 48);
  sub_10020E72C((uint64_t)v39, (uint64_t)&v40, &qword_100E9E9A0);
  sub_10020E72C((uint64_t)&v40, v36, &qword_100E9E9A0);
  sub_1008DFF18(&v40);
  sub_100178110((uint64_t)v18, &qword_100E9E990);
  sub_10020E72C((uint64_t)v39, (uint64_t)v41, &qword_100E9E9A0);
  sub_1008DFF18((__n128 *)v41);
  return sub_100178110((uint64_t)v12, &qword_100E9E990);
}

void *sub_1008DD28C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v63 = sub_10017DF08(&qword_100EAADC0);
  __chkstk_darwin(v63);
  uint64_t v67 = (uint64_t *)((char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for Image.Scale();
  uint64_t v65 = *(void *)(v5 - 8);
  uint64_t v66 = v5;
  __chkstk_darwin(v5);
  Swift::String v62 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E7DFA0);
  __chkstk_darwin(v7 - 8);
  uint64_t v59 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_10017DF08(&qword_100E6F770);
  __chkstk_darwin(v60);
  uint64_t v64 = (uint64_t *)((char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v61 = sub_10017DF08(&qword_100E76A00);
  __chkstk_darwin(v61);
  uint64_t v11 = (char *)&v55 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v68 = (uint64_t)&v55 - v13;
  uint64_t v14 = sub_10017DF08(&qword_100E9E9B0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v55 - v18;
  uint64_t v20 = type metadata accessor for ConditionDetailChartHeaderViewModel();
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v55 - v24;
  sub_1008E0790(a1, (uint64_t)&v55 - v24, (void (*)(void))type metadata accessor for ConditionDetailChartHeaderViewModel);
  char v26 = ConditionDetailChartHeaderStringModel.reverseChartTitle.getter();
  uint64_t v27 = type metadata accessor for ConditionDetailChartHeaderStringModel();
  uint64_t v28 = *(void *)(v27 - 8);
  char v29 = *(void (**)(char *, uint64_t))(v28 + 8);
  uint64_t v70 = v28 + 8;
  Swift::String v71 = v29;
  v29(v25, v27);
  uint64_t v72 = v19;
  uint64_t v73 = a2;
  uint64_t v69 = v11;
  if (v26)
  {
    sub_1008DDB88((uint64_t)v74);
    memcpy(v76, v74, 0xE0uLL);
    sub_1008E06D4((uint64_t)v76);
  }
  else
  {
    sub_1008DE4A8(v74);
    memcpy(v76, v74, 0x131uLL);
    sub_1008E0048((uint64_t)v76);
  }
  sub_10020E72C((uint64_t)v76, (uint64_t)v75, &qword_100E9E9B8);
  sub_10017DF08(&qword_100E9E9C0);
  sub_10017DF08(&qword_100E9E9C8);
  sub_1001246C8(&qword_100E9E9D0, &qword_100E9E9C0);
  sub_1001246C8(&qword_100E9E9D8, &qword_100E9E9C8);
  _ConditionalContent<>.init(storage:)();
  uint64_t v30 = v71;
  sub_1008E0790(a1, (uint64_t)v22, (void (*)(void))type metadata accessor for ConditionDetailChartHeaderViewModel);
  ConditionDetailChartHeaderStringModel.symbolName.getter();
  uint64_t v32 = v31;
  v30(v22, v27);
  if (v32)
  {
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    Swift::String v71 = v77;
    LODWORD(v70) = v78;
    uint64_t v58 = v79;
    int v57 = v80;
    uint64_t v55 = v82;
    uint64_t v56 = v81;
    Image.init(systemName:)();
    uint64_t v33 = (uint64_t)v59;
    static Image.TemplateRenderingMode.macSafeOriginal.getter();
    uint64_t v34 = type metadata accessor for Image.TemplateRenderingMode();
    _s7Weather24LocationCompositionStateOwst_0(v33, 0, 1, v34);
    uint64_t v35 = Image.renderingMode(_:)();
    swift_release();
    sub_100178110(v33, &qword_100E7DFA0);
    uint64_t v37 = v65;
    uint64_t v36 = v66;
    uint64_t v38 = v62;
    (*(void (**)(char *, void, uint64_t))(v65 + 104))(v62, enum case for Image.Scale.small(_:), v66);
    uint64_t KeyPath = swift_getKeyPath();
    __n128 v40 = v67;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))((char *)v67 + *(int *)(v63 + 28), v38, v36);
    uint64_t *v40 = KeyPath;
    uint64_t v41 = v64;
    sub_10006DF38((uint64_t)v40, (uint64_t)v64 + *(int *)(v60 + 36), &qword_100EAADC0);
    *uint64_t v41 = v35;
    swift_retain();
    sub_100178110((uint64_t)v40, &qword_100EAADC0);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v36);
    swift_release();
    sub_1008DB9D8((uint64_t *)v76);
    sub_1001B1E64(v76, *(uint64_t *)&v76[24]);
    uint64_t v42 = dispatch thunk of ConditionDetailChartHeaderStyleType.title1Font.getter();
    uint64_t v43 = swift_getKeyPath();
    uint64_t v44 = (uint64_t)v69;
    sub_10006DF38((uint64_t)v41, (uint64_t)v69, &qword_100E6F770);
    uint64_t v45 = (uint64_t *)(v44 + *(int *)(v61 + 36));
    *uint64_t v45 = v43;
    v45[1] = v42;
    sub_100178110((uint64_t)v41, &qword_100E6F770);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v76);
    uint64_t v46 = v68;
    sub_10020E72C(v44, v68, &qword_100E76A00);
    sub_10006DF38(v46, v44, &qword_100E76A00);
    *(void *)uint64_t v16 = 0;
    v16[8] = 1;
    *((void *)v16 + 2) = v71;
    v16[24] = v70;
    *((void *)v16 + 4) = v58;
    v16[40] = v57;
    uint64_t v47 = v55;
    *((void *)v16 + 6) = v56;
    *((void *)v16 + 7) = v47;
    uint64_t v48 = sub_10017DF08(&qword_100E9E9F0);
    sub_10006DF38(v44, (uint64_t)&v16[*(int *)(v48 + 48)], &qword_100E76A00);
    sub_100178110(v46, &qword_100E76A00);
    sub_100178110(v44, &qword_100E76A00);
    uint64_t v49 = sub_10017DF08(&qword_100E9E9E0);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v49);
    uint64_t v50 = (uint64_t)v72;
    sub_10020E72C((uint64_t)v16, (uint64_t)v72, &qword_100E9E9B0);
  }
  else
  {
    uint64_t v51 = sub_10017DF08(&qword_100E9E9E0);
    uint64_t v50 = (uint64_t)v72;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v72, 1, 1, v51);
  }
  memcpy(v74, v83, 0x132uLL);
  sub_10006DF38(v50, (uint64_t)v16, &qword_100E9E9B0);
  memcpy(v75, v74, 0x132uLL);
  uint64_t v52 = v73;
  memcpy(v73, v74, 0x132uLL);
  uint64_t v53 = sub_10017DF08(&qword_100E9E9E8);
  sub_10006DF38((uint64_t)v16, (uint64_t)v52 + *(int *)(v53 + 48), &qword_100E9E9B0);
  sub_1008E0328(v75);
  sub_100178110(v50, &qword_100E9E9B0);
  sub_100178110((uint64_t)v16, &qword_100E9E9B0);
  memcpy(v76, v74, sizeof(v76));
  return sub_1008E0328((__n128 *)v76);
}

uint64_t sub_1008DDB88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v99 = a1;
  uint64_t v3 = sub_10017DF08(&qword_100E79020);
  __chkstk_darwin(v3 - 8);
  uint64_t v103 = &v84[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v105 = type metadata accessor for AttributedString();
  uint64_t v98 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v97 = &v84[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v8 = &v84[-v7];
  uint64_t v9 = type metadata accessor for ConditionDetailChartHeaderViewModel();
  __chkstk_darwin(v9 - 8);
  uint64_t v102 = (uint64_t)&v84[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  uint64_t v13 = &v84[-v12];
  __chkstk_darwin(v14);
  uint64_t v16 = &v84[-v15];
  sub_1008E0790(v1, (uint64_t)&v84[-v15], (void (*)(void))type metadata accessor for ConditionDetailChartHeaderViewModel);
  uint64_t v17 = ConditionDetailChartHeaderStringModel.title3.getter();
  uint64_t v19 = v18;
  uint64_t v20 = type metadata accessor for ConditionDetailChartHeaderStringModel();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v107 = *(void (**)(unsigned char *))(v21 + 8);
  uint64_t v108 = v20;
  uint64_t v106 = v21 + 8;
  v107(v16);
  uint64_t v109 = v2;
  uint64_t v104 = v8;
  if (v19)
  {
    uint64_t v110 = v17;
    uint64_t v111 = v19;
    sub_10014A85C();
    uint64_t v22 = Text.init<A>(_:)();
    uint64_t v24 = v23;
    uint64_t v101 = v13;
    char v26 = v25 & 1;
    sub_1008DB9D8(&v110);
    sub_1001B1E64(&v110, v113);
    dispatch thunk of ConditionDetailChartHeaderStyleType.title3Font.getter();
    uint64_t v27 = Text.font(_:)();
    uint64_t v29 = v28;
    char v31 = v30 & 1;
    uint64_t v32 = v22;
    uint64_t v2 = v109;
    sub_100191924(v32, v24, v26);
    swift_release();
    swift_bridgeObjectRelease();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v110);
    sub_1008DB9D8(&v110);
    sub_1001B1E64(&v110, v113);
    uint64_t v13 = v101;
    dispatch thunk of ConditionDetailChartHeaderStyleType.title3Color.getter();
    uint64_t v33 = Text.foregroundColor(_:)();
    uint64_t v95 = v34;
    uint64_t v96 = v33;
    uint64_t v93 = v35 & 1;
    uint64_t v94 = v36;
    sub_100191924(v27, v29, v31);
    swift_release();
    swift_bridgeObjectRelease();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v110);
  }
  else
  {
    uint64_t v95 = 0;
    uint64_t v96 = 0;
    uint64_t v93 = 0;
    uint64_t v94 = 0;
  }
  sub_1008DB9D8(&v110);
  sub_1001B1E64(&v110, v113);
  dispatch thunk of ConditionDetailChartHeaderStyleType.title3LeadingPadding.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v92 = v137[6];
  int v91 = v138;
  uint64_t v90 = v139;
  int v89 = v140;
  uint64_t v87 = v142;
  uint64_t v88 = v141;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v110);
  *(void *)&long long v100 = type metadata accessor for ConditionDetailChartHeaderViewModel;
  sub_1008E0790(v2, (uint64_t)v13, (void (*)(void))type metadata accessor for ConditionDetailChartHeaderViewModel);
  ConditionDetailChartHeaderStringModel.title1.getter();
  ((void (*)(unsigned char *, uint64_t))v107)(v13, v108);
  uint64_t v37 = Text.init(_:)();
  uint64_t v39 = v38;
  char v41 = v40 & 1;
  sub_1008DB9D8(&v110);
  sub_1001B1E64(&v110, v113);
  dispatch thunk of ConditionDetailChartHeaderStyleType.title1Font.getter();
  uint64_t v42 = Text.font(_:)();
  uint64_t v44 = v43;
  char v46 = v45 & 1;
  sub_100191924(v37, v39, v41);
  swift_release();
  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v110);
  sub_1008DB9D8(&v110);
  sub_1001B1E64(&v110, v113);
  uint64_t v47 = v109;
  dispatch thunk of ConditionDetailChartHeaderStyleType.title1Color.getter();
  uint64_t v48 = Text.foregroundColor(_:)();
  uint64_t v86 = v49;
  int v85 = v50;
  uint64_t v101 = v51;
  sub_100191924(v42, v44, v46);
  swift_release();
  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v110);
  uint64_t v52 = v102;
  sub_1008E0790(v47, v102, (void (*)(void))v100);
  uint64_t v53 = (uint64_t)v103;
  ConditionDetailChartHeaderStringModel.title2.getter();
  ((void (*)(uint64_t, uint64_t))v107)(v52, v108);
  uint64_t v54 = v105;
  if (_s7Weather24LocationCompositionStateOwet_0(v53, 1, v105) == 1)
  {
    sub_100178110(v53, &qword_100E79020);
    uint64_t v55 = 0;
    uint64_t v56 = 0;
    uint64_t v57 = 0;
    uint64_t v58 = 0;
    uint64_t v59 = 0;
    uint64_t v60 = 0;
    uint64_t v61 = 0;
    uint64_t v62 = 0;
    uint64_t v63 = 0;
    long long v64 = 0uLL;
  }
  else
  {
    uint64_t v65 = v97;
    uint64_t v66 = v98;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v98 + 32))(v97, v53, v54);
    sub_1008DB9D8(&v110);
    sub_1001B1E64(&v110, v113);
    dispatch thunk of ConditionDetailChartHeaderStyleType.title2LeadingPadding.getter();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v106 = v144;
    uint64_t v107 = v143;
    uint64_t v102 = v146;
    uint64_t v103 = v145;
    long long v100 = v147;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v110);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v66 + 16))(v104, v65, v54);
    uint64_t v67 = Text.init(_:)();
    uint64_t v69 = v68;
    char v71 = v70 & 1;
    sub_1008DB9D8(&v110);
    sub_1001B1E64(&v110, v113);
    dispatch thunk of ConditionDetailChartHeaderStyleType.title2Font.getter();
    uint64_t v72 = Text.font(_:)();
    uint64_t v74 = v73;
    uint64_t v104 = v75;
    uint64_t v108 = v48;
    char v77 = v76 & 1;
    sub_100191924(v67, v69, v71);
    swift_release();
    swift_bridgeObjectRelease();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v110);
    sub_1008DB9D8(&v110);
    sub_1001B1E64(&v110, v113);
    dispatch thunk of ConditionDetailChartHeaderStyleType.title2Color.getter();
    uint64_t v60 = Text.foregroundColor(_:)();
    uint64_t v61 = v78;
    uint64_t v63 = v79;
    uint64_t v62 = v80 & 1;
    char v81 = v77;
    uint64_t v48 = v108;
    sub_100191924(v72, v74, v81);
    swift_release();
    swift_bridgeObjectRelease();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v110);
    LOBYTE(v110) = v62;
    sub_100190CC4(v60, v61, v62);
    uint64_t v82 = *(void (**)(unsigned char *, uint64_t))(v98 + 8);
    swift_bridgeObjectRetain();
    v82(v97, v105);
    sub_100191924(v60, v61, v110);
    swift_bridgeObjectRelease();
    long long v64 = v100;
    uint64_t v59 = v102;
    uint64_t v58 = (uint64_t)v103;
    uint64_t v57 = v106;
    uint64_t v56 = (uint64_t)v107;
    uint64_t v55 = 1;
  }
  uint64_t v133 = v96;
  uint64_t v134 = v95;
  uint64_t v135 = v93;
  uint64_t v136 = v94;
  char v126 = 1;
  uint64_t v127 = v92;
  char v128 = v91;
  uint64_t v129 = v90;
  char v130 = v89;
  uint64_t v131 = v88;
  uint64_t v132 = v87;
  v137[0] = &v133;
  v137[1] = &v125;
  uint64_t v121 = v48;
  uint64_t v122 = v86;
  char v123 = v85 & 1;
  uint64_t v124 = v101;
  uint64_t v125 = 0;
  uint64_t v110 = 0;
  uint64_t v111 = v55;
  uint64_t v112 = v56;
  uint64_t v113 = v57;
  uint64_t v114 = v58;
  uint64_t v115 = v59;
  long long v116 = v64;
  uint64_t v117 = v60;
  uint64_t v118 = v61;
  uint64_t v119 = v62;
  uint64_t v120 = v63;
  v137[2] = &v121;
  v137[3] = &v110;
  sub_1004B9E3C((uint64_t)v137, v99);
  sub_1008E05EC(v110, v111, v112, v113, v114, v115, v116, *((uint64_t *)&v116 + 1), v117, v118, v119, v120);
  sub_100191924(v121, v122, v123);
  swift_bridgeObjectRelease();
  return sub_100147E60(v133, v134, v135, v136);
}

uint64_t sub_1008DE4A8@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v135 = a1;
  uint64_t v129 = type metadata accessor for Text.Scale();
  uint64_t v126 = *(void *)(v129 - 8);
  __chkstk_darwin(v129);
  uint64_t v125 = (char *)&v124 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = type metadata accessor for AttributedString.CharacterView();
  __chkstk_darwin(v140);
  char v128 = (char *)&v124 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E79020);
  __chkstk_darwin(v5 - 8);
  uint64_t v151 = (uint64_t)&v124 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = type metadata accessor for AttributedString();
  uint64_t v139 = *(void *)(v152 - 8);
  __chkstk_darwin(v152);
  uint64_t v131 = (char *)&v124 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v124 - v9;
  uint64_t v11 = type metadata accessor for ConditionDetailChartHeaderViewModel();
  __chkstk_darwin(v11 - 8);
  char v130 = (char *)&v124 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v150 = (uint64_t)&v124 - v14;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v124 - v16;
  unsigned __int8 v146 = type metadata accessor for ConditionDetailChartHeaderViewModel;
  sub_1008E0790(v2, (uint64_t)&v124 - v16, (void (*)(void))type metadata accessor for ConditionDetailChartHeaderViewModel);
  ConditionDetailChartHeaderStringModel.title1.getter();
  uint64_t v138 = type metadata accessor for ConditionDetailChartHeaderStringModel();
  uint64_t v18 = *(void *)(v138 - 8);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v18 + 8);
  uint64_t v136 = v18 + 8;
  uint64_t v137 = (uint64_t)v19;
  v19(v17, v138);
  uint64_t v127 = v10;
  uint64_t v20 = Text.init(_:)();
  uint64_t v22 = v21;
  char v24 = v23 & 1;
  sub_1008DB9D8(v169);
  sub_1001B1E64(v169, v169[3]);
  dispatch thunk of ConditionDetailChartHeaderStyleType.title1Font.getter();
  uint64_t v25 = Text.font(_:)();
  uint64_t v27 = v26;
  LOBYTE(v2) = v28 & 1;
  sub_100191924(v20, v22, v24);
  swift_release();
  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v169);
  uint64_t v29 = v154;
  sub_1008DB9D8(v169);
  sub_1001B1E64(v169, v169[3]);
  uint64_t v30 = v152;
  dispatch thunk of ConditionDetailChartHeaderStyleType.title1Color.getter();
  uint64_t v147 = Text.foregroundColor(_:)();
  uint64_t v149 = v31;
  int v134 = v32;
  uint64_t v34 = v33;
  uint64_t v35 = v25;
  uint64_t v36 = v27;
  uint64_t v38 = (void (*)(uint64_t, uint64_t))v137;
  uint64_t v37 = v138;
  sub_100191924(v35, v36, v2);
  swift_release();
  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v169);
  int v133 = sub_1008DBCA0();
  uint64_t KeyPath = swift_getKeyPath();
  int v132 = sub_1008DBCA0();
  uint64_t v40 = v29;
  uint64_t v41 = v150;
  sub_1008E0790(v40, v150, (void (*)(void))v146);
  uint64_t v42 = v151;
  ConditionDetailChartHeaderStringModel.title2.getter();
  v38(v41, v37);
  int v43 = _s7Weather24LocationCompositionStateOwet_0(v42, 1, v30);
  uint64_t v148 = v34;
  uint64_t v153 = KeyPath;
  if (v43 == 1)
  {
    sub_100178110(v42, &qword_100E79020);
    uint64_t v140 = 0;
    uint64_t v141 = 0;
    uint64_t v145 = 0;
    unsigned __int8 v146 = 0;
    uint64_t v143 = 0;
    uint64_t v144 = 0;
    uint64_t v142 = 0;
    uint64_t v139 = 0;
    uint64_t v151 = 0;
    uint64_t v152 = 0;
    uint64_t v150 = 0;
    LODWORD(v131) = 0;
    uint64_t v44 = (uint64_t)v130;
    goto LABEL_11;
  }
  uint64_t v45 = v139;
  char v46 = v131;
  (*(void (**)(char *, uint64_t, uint64_t))(v139 + 32))(v131, v42, v30);
  sub_1008DB9D8(v169);
  sub_1001B1E64(v169, v169[3]);
  dispatch thunk of ConditionDetailChartHeaderStyleType.title2LeadingPadding.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v145 = v172;
  unsigned __int8 v146 = (uint64_t (*)())v171[21];
  uint64_t v143 = v174;
  uint64_t v144 = v173;
  uint64_t v141 = v176;
  uint64_t v142 = v175;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v169);
  AttributedString.characters.getter();
  sub_1008E0974(&qword_100E6B650, (void (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView);
  char v128 = (char *)String.init<A>(_:)();
  uint64_t v140 = v47;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v127, v46, v30);
  uint64_t v48 = Text.init(_:)();
  uint64_t v50 = v49;
  char v52 = v51 & 1;
  sub_1008DB9D8(v169);
  sub_1001B1E64(v169, v169[3]);
  dispatch thunk of ConditionDetailChartHeaderStyleType.title2Font.getter();
  uint64_t v53 = Text.font(_:)();
  uint64_t v55 = v54;
  uint64_t v150 = v56;
  LOBYTE(v46) = v57 & 1;
  sub_100191924(v48, v50, v52);
  swift_release();
  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v169);
  sub_1008DB9D8(v169);
  sub_1001B1E64(v169, v169[3]);
  dispatch thunk of ConditionDetailChartHeaderStyleType.title2Color.getter();
  uint64_t v151 = Text.foregroundColor(_:)();
  uint64_t v59 = v58;
  char v61 = v60;
  sub_100191924(v53, v55, (char)v46);
  swift_release();
  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v169);
  sub_1008DB9D8(v169);
  sub_1001B1E64(v169, v169[3]);
  if (dispatch thunk of ConditionDetailChartHeaderStyleType.applySecondaryTextScaleToTitle2.getter())
  {
    char v62 = String.isPercentSymbol.getter();
    uint64_t v44 = (uint64_t)v130;
    long long v64 = v125;
    uint64_t v63 = v126;
    if (v62)
    {
      swift_bridgeObjectRelease();
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v169);
LABEL_9:
      static Text.Scale.secondary.getter();
      goto LABEL_10;
    }
    char v65 = String.containsOnlyPunctuationCharacters.getter();
    swift_bridgeObjectRelease();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v169);
    if ((v65 & 1) == 0) {
      goto LABEL_9;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v169);
    uint64_t v44 = (uint64_t)v130;
    long long v64 = v125;
    uint64_t v63 = v126;
  }
  static Text.Scale.default.getter();
LABEL_10:
  char v66 = v61 & 1;
  uint64_t v140 = 1;
  uint64_t v67 = v151;
  uint64_t v68 = Text.textScale(_:isEnabled:)();
  uint64_t v69 = v59;
  uint64_t v71 = v70;
  uint64_t v72 = v67;
  uint64_t v74 = v73;
  uint64_t v76 = v75 & 1;
  sub_100191924(v72, v69, v66);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v64, v129);
  LOBYTE(v169[0]) = v76;
  uint64_t v150 = v76;
  sub_100190CC4(v68, v71, v76);
  char v77 = *(void (**)(char *, uint64_t))(v139 + 8);
  swift_bridgeObjectRetain();
  v77(v131, v152);
  uint64_t v139 = v68;
  uint64_t v152 = v71;
  sub_100191924(v68, v71, v169[0]);
  uint64_t v151 = v74;
  swift_bridgeObjectRelease();
  LODWORD(v131) = 257;
  uint64_t v38 = (void (*)(uint64_t, uint64_t))v137;
  uint64_t v37 = v138;
LABEL_11:
  sub_1008E0790(v154, v44, (void (*)(void))type metadata accessor for ConditionDetailChartHeaderViewModel);
  uint64_t v78 = ConditionDetailChartHeaderStringModel.title3.getter();
  uint64_t v80 = v79;
  v38(v44, v37);
  if (v80)
  {
    sub_1008DB9D8(v169);
    sub_1001B1E64(v169, v169[3]);
    dispatch thunk of ConditionDetailChartHeaderStyleType.title3LeadingPadding.getter();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    char v130 = v177;
    LODWORD(v129) = v178;
    LODWORD(v128) = v180;
    uint64_t v138 = v181;
    uint64_t v136 = v179;
    uint64_t v137 = v182;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v169);
    v169[0] = v78;
    v169[1] = v80;
    sub_10014A85C();
    uint64_t v81 = Text.init<A>(_:)();
    uint64_t v83 = v82;
    char v85 = v84 & 1;
    sub_1008DB9D8(v169);
    sub_1001B1E64(v169, v169[3]);
    dispatch thunk of ConditionDetailChartHeaderStyleType.title3Font.getter();
    uint64_t v86 = Text.font(_:)();
    uint64_t v88 = v87;
    uint64_t v127 = v89;
    char v91 = v90 & 1;
    sub_100191924(v81, v83, v85);
    swift_release();
    swift_bridgeObjectRelease();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v169);
    sub_1008DB9D8(v169);
    sub_1001B1E64(v169, v169[3]);
    dispatch thunk of ConditionDetailChartHeaderStyleType.title3Color.getter();
    uint64_t v92 = Text.foregroundColor(_:)();
    uint64_t v94 = v93;
    uint64_t v96 = v95;
    unsigned __int8 v98 = v97 & 1;
    sub_100191924(v86, v88, v91);
    swift_release();
    swift_bridgeObjectRelease();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v169);
    uint64_t v99 = swift_getKeyPath();
    uint64_t v100 = swift_getKeyPath();
    uint64_t v101 = swift_getKeyPath();
    char v164 = 1;
    char v102 = v129;
    char v162 = v129;
    LOBYTE(v88) = (_BYTE)v128;
    char v160 = (char)v128;
    unsigned __int8 v158 = v98;
    char v156 = 0;
    v170[0].n128_u32[0] = *(_DWORD *)v163;
    *(unsigned __int32 *)((char *)v170[0].n128_u32 + 3) = *(_DWORD *)&v163[3];
    v168[0].n128_u32[0] = *(_DWORD *)v161;
    *(unsigned __int32 *)((char *)v168[0].n128_u32 + 3) = *(_DWORD *)&v161[3];
    *(_DWORD *)&v167[3] = *(_DWORD *)&v159[3];
    *(_DWORD *)uint64_t v167 = *(_DWORD *)v159;
    LODWORD(v127) = v98;
    *(_DWORD *)((char *)v166 + 3) = *(_DWORD *)&v157[3];
    v166[0] = *(_DWORD *)v157;
    LODWORD(v154) = 0;
    *(_DWORD *)((char *)v165 + 3) = *(_DWORD *)&v155[3];
    v165[0] = *(_DWORD *)v155;
    sub_100190CC4(v92, v94, v98);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100191924(v92, v94, v98);
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    v169[0] = 0;
    LOBYTE(v169[1]) = 1;
    *(_DWORD *)((char *)&v169[1] + 1) = v170[0].n128_u32[0];
    HIDWORD(v169[1]) = *(unsigned __int32 *)((char *)v170[0].n128_u32 + 3);
    v169[2] = (uint64_t)v130;
    LOBYTE(v169[3]) = v102;
    *(_DWORD *)((char *)&v169[3] + 1) = v168[0].n128_u32[0];
    HIDWORD(v169[3]) = *(unsigned __int32 *)((char *)v168[0].n128_u32 + 3);
    v169[4] = v136;
    LOBYTE(v169[5]) = v88;
    *(_DWORD *)((char *)&v169[5] + 1) = *(_DWORD *)v167;
    HIDWORD(v169[5]) = *(_DWORD *)&v167[3];
    v169[6] = v138;
    v169[7] = v137;
    v169[8] = v92;
    v169[9] = v94;
    LOBYTE(v169[10]) = (_BYTE)v127;
    HIDWORD(v169[10]) = *(_DWORD *)((char *)v166 + 3);
    *(_DWORD *)((char *)&v169[10] + 1) = v166[0];
    v169[11] = v96;
    v169[12] = v99;
    v169[13] = 1;
    LOBYTE(v169[14]) = v154;
    HIDWORD(v169[14]) = *(_DWORD *)((char *)v165 + 3);
    *(_DWORD *)((char *)&v169[14] + 1) = v165[0];
    v169[15] = v100;
    v169[16] = 0x3FE6666666666666;
    v169[17] = v101;
    LOBYTE(v169[18]) = 1;
    LocationSearchEntityFromStringResolver.init()();
  }
  else
  {
    sub_1008E06DC(v169);
  }
  sub_10020E72C((uint64_t)v169, (uint64_t)v171, &qword_100E9E9F8);
  uint64_t v104 = v147;
  uint64_t v103 = v148;
  int v105 = v134 & 1;
  if (v133) {
    double v106 = 0.5;
  }
  else {
    double v106 = 1.0;
  }
  BOOL v107 = (v132 & 1) == 0;
  sub_10020E72C((uint64_t)v171, (uint64_t)v167, &qword_100E9E9F8);
  sub_10020E72C((uint64_t)v167, (uint64_t)v168, &qword_100E9E9F8);
  v169[0] = v104;
  uint64_t v108 = v149;
  v169[1] = v149;
  LOBYTE(v169[2]) = v105;
  LODWORD(v154) = v105;
  v169[3] = v103;
  v169[4] = v153;
  *(double *)&v169[5] = v106;
  LOWORD(v169[6]) = v107;
  v169[7] = 0;
  v169[8] = v140;
  v169[9] = (uint64_t)v146;
  v169[10] = v145;
  v169[11] = v144;
  v169[12] = v143;
  v169[13] = v142;
  v169[14] = v141;
  v169[15] = v139;
  uint64_t v109 = v151;
  uint64_t v110 = v152;
  v169[16] = v152;
  char v111 = v150;
  v169[17] = v150;
  v169[18] = v151;
  LOWORD(v169[19]) = (_WORD)v131;
  sub_10020E72C((uint64_t)v168, (uint64_t)&v169[20], &qword_100E9E9F8);
  memcpy(v135, v169, 0x131uLL);
  sub_10020E72C((uint64_t)v167, (uint64_t)v170, &qword_100E9E9F8);
  sub_100190CC4(v104, v108, v105);
  swift_bridgeObjectRetain();
  swift_retain();
  char v122 = v111;
  uint64_t v123 = v109;
  uint64_t v121 = v110;
  uint64_t v112 = v139;
  uint64_t v113 = v140;
  uint64_t v114 = v141;
  uint64_t v116 = v145;
  uint64_t v115 = v146;
  uint64_t v117 = v143;
  uint64_t v118 = v144;
  uint64_t v119 = v142;
  sub_1004C9380(0, v140, (uint64_t)v146, v145, v144, v143, v142, v141, v139, v121, v122, v123);
  sub_1008E06E4(v168);
  sub_1008E06E4(v170);
  sub_1008E05EC(0, v113, (uint64_t)v115, v116, v118, v117, v119, v114, v112, v152, v150, v151);
  sub_100191924(v147, v149, v154);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1008DF418@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v102 = a3;
  uint64_t v94 = a1;
  uint64_t v92 = a4;
  uint64_t v7 = type metadata accessor for ConditionDetailChartHeaderViewModel();
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v87 = (uint64_t)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Font.TextStyle();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = (uint64_t *)a1;
  uint64_t v120 = a2;
  uint64_t v93 = a2;
  unint64_t v99 = sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v14 = Text.init<A>(_:)();
  uint64_t v16 = v15;
  LOBYTE(a2) = v17 & 1;
  uint64_t v18 = *(void (**)(void))(v11 + 104);
  uint64_t v98 = v11 + 104;
  char v97 = (void (*)(char *, void, uint64_t))v18;
  unsigned int v82 = enum case for Font.TextStyle.subheadline(_:);
  uint64_t v101 = v10;
  v18(v13);
  uint64_t v95 = *(int *)(v8 + 28);
  sub_100ADE2A4(*(unsigned char *)(a3 + v95), (uint64_t *)&v119);
  sub_1001B1E64(&v119, (uint64_t)v122);
  dispatch thunk of ConditionDetailChartHeaderStyleType.subtitleFontWeight.getter();
  static Font.system(_:weight:)();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v100 = v11 + 8;
  uint64_t v96 = v19;
  v19(v13, v10);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v119);
  uint64_t v20 = Text.font(_:)();
  uint64_t v22 = v21;
  LOBYTE(v10) = v23;
  swift_release();
  sub_100191924(v14, v16, (char)a2);
  swift_bridgeObjectRelease();
  static Color.secondary.getter();
  uint64_t v90 = Text.foregroundColor(_:)();
  uint64_t v89 = v24;
  int v88 = v25;
  uint64_t v91 = v26;
  swift_release();
  sub_100191924(v20, v22, v10 & 1);
  swift_bridgeObjectRelease();
  uint64_t v119 = (uint64_t *)v94;
  uint64_t v120 = v93;
  swift_bridgeObjectRetain();
  uint64_t v27 = Text.init<A>(_:)();
  uint64_t v29 = v28;
  LOBYTE(v14) = v30 & 1;
  uint64_t v31 = v101;
  v97(v13, enum case for Font.TextStyle.footnote(_:), v101);
  sub_100ADE2A4(*(unsigned char *)(v102 + v95), (uint64_t *)&v119);
  sub_1001B1E64(&v119, (uint64_t)v122);
  dispatch thunk of ConditionDetailChartHeaderStyleType.subtitleFontWeight.getter();
  static Font.system(_:weight:)();
  v96(v13, v31);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v119);
  uint64_t v32 = Text.font(_:)();
  uint64_t v34 = v33;
  LOBYTE(v31) = v35;
  swift_release();
  sub_100191924(v27, v29, v14);
  swift_bridgeObjectRelease();
  static Color.secondary.getter();
  uint64_t v85 = Text.foregroundColor(_:)();
  uint64_t v84 = v36;
  int v83 = v37;
  uint64_t v86 = v38;
  swift_release();
  sub_100191924(v32, v34, v31 & 1);
  swift_bridgeObjectRelease();
  uint64_t v119 = (uint64_t *)v94;
  uint64_t v120 = v93;
  swift_bridgeObjectRetain();
  uint64_t v39 = Text.init<A>(_:)();
  uint64_t v41 = v40;
  LOBYTE(v34) = v42 & 1;
  uint64_t v43 = v101;
  v97(v13, enum case for Font.TextStyle.caption2(_:), v101);
  sub_100ADE2A4(*(unsigned char *)(v102 + v95), (uint64_t *)&v119);
  sub_1001B1E64(&v119, (uint64_t)v122);
  dispatch thunk of ConditionDetailChartHeaderStyleType.subtitleFontWeight.getter();
  static Font.system(_:weight:)();
  v96(v13, v43);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v119);
  uint64_t v44 = Text.font(_:)();
  uint64_t v46 = v45;
  LOBYTE(v31) = v47;
  swift_release();
  LOBYTE(v8) = v31 & 1;
  sub_100191924(v39, v41, v34);
  swift_bridgeObjectRelease();
  static Color.secondary.getter();
  uint64_t v48 = Text.foregroundColor(_:)();
  uint64_t v50 = v49;
  LODWORD(v94) = v51;
  unint64_t v53 = v52;
  swift_release();
  uint64_t v54 = v44;
  uint64_t v55 = v102;
  sub_100191924(v54, v46, v8);
  swift_bridgeObjectRelease();
  uint64_t v56 = v87;
  sub_1008E0790(v55, v87, (void (*)(void))type metadata accessor for ConditionDetailChartHeaderViewModel);
  uint64_t v57 = ConditionDetailChartHeaderStringModel.subtitleTruncationAlternative.getter();
  uint64_t v59 = v58;
  uint64_t v60 = type metadata accessor for ConditionDetailChartHeaderStringModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v60 - 8) + 8))(v56, v60);
  if (v59)
  {
    uint64_t v119 = (uint64_t *)v57;
    uint64_t v120 = (uint64_t *)v59;
    uint64_t v61 = Text.init<A>(_:)();
    uint64_t v63 = v62;
    uint64_t v93 = (uint64_t *)v48;
    char v65 = v64 & 1;
    unint64_t v99 = v53;
    uint64_t v66 = v101;
    v97(v13, v82, v101);
    sub_100ADE2A4(*(unsigned char *)(v55 + v95), (uint64_t *)&v119);
    sub_1001B1E64(&v119, (uint64_t)v122);
    dispatch thunk of ConditionDetailChartHeaderStyleType.subtitleFontWeight.getter();
    static Font.system(_:weight:)();
    v96(v13, v66);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v119);
    uint64_t v67 = Text.font(_:)();
    uint64_t v69 = v68;
    char v71 = v70;
    swift_release();
    uint64_t v102 = v50;
    char v72 = v71 & 1;
    sub_100191924(v61, v63, v65);
    swift_bridgeObjectRelease();
    static Color.secondary.getter();
    uint64_t v73 = Text.foregroundColor(_:)();
    uint64_t v59 = v74;
    char v76 = v75;
    uint64_t v78 = v77;
    swift_release();
    uint64_t v79 = v76 & 1;
    uint64_t v48 = (uint64_t)v93;
    char v80 = v72;
    uint64_t v50 = v102;
    sub_100191924(v67, v69, v80);
    unint64_t v53 = v99;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v73 = 0;
    uint64_t v79 = 0;
    uint64_t v78 = 0;
  }
  uint64_t v115 = v90;
  uint64_t v116 = v89;
  char v117 = v88 & 1;
  uint64_t v118 = v91;
  uint64_t v111 = v85;
  uint64_t v112 = v84;
  char v113 = v83 & 1;
  uint64_t v114 = v86;
  uint64_t v119 = &v115;
  uint64_t v120 = &v111;
  uint64_t v107 = v48;
  uint64_t v108 = v50;
  char v109 = v94 & 1;
  unint64_t v110 = v53;
  uint64_t v103 = v73;
  uint64_t v104 = v59;
  uint64_t v105 = v79;
  uint64_t v106 = v78;
  uint64_t v121 = &v107;
  char v122 = &v103;
  sub_1004B9F74((uint64_t)&v119, v92);
  sub_100147E60(v103, v104, v105, v106);
  sub_100191924(v107, v108, v109);
  swift_bridgeObjectRelease();
  sub_100191924(v111, v112, v113);
  swift_bridgeObjectRelease();
  sub_100191924(v115, v116, v117);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1008DFD7C()
{
  unint64_t result = qword_100E9E928;
  if (!qword_100E9E928)
  {
    sub_10018C6DC(&qword_100E9E910);
    sub_1001246C8(&qword_100E9E930, &qword_100E9E908);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9E928);
  }
  return result;
}

void sub_1008DFE24(void *a1)
{
}

void sub_1008DFE2C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17)
{
  if (a5)
  {
    char v19 = a8 & 1;
    sub_100190CC4(a2, a3, a4 & 1);
    swift_bridgeObjectRetain();
    sub_100190CC4(a6, a7, v19);
    swift_bridgeObjectRetain();
    sub_100190CC4(a10, a11, a12 & 1);
    swift_bridgeObjectRetain();
    sub_100147E1C(a14, a15, a16, a17);
  }
}

uint64_t sub_1008DFF18(__n128 *a1)
{
  unint64_t v2 = sub_10017D770(a1).n128_u64[0];
  v11(v3, v4, v5, v6, v7, v8, v9, v10, v2);
  return v1;
}

void sub_1008DFF5C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17)
{
  if (a5)
  {
    char v19 = a8 & 1;
    sub_100191924(a2, a3, a4 & 1);
    swift_bridgeObjectRelease();
    sub_100191924(a6, a7, v19);
    swift_bridgeObjectRelease();
    sub_100191924(a10, a11, a12 & 1);
    swift_bridgeObjectRelease();
    sub_100147E60(a14, a15, a16, a17);
  }
}

uint64_t sub_1008E0048(uint64_t result)
{
  *(unsigned char *)(result + 305) = 1;
  return result;
}

uint64_t sub_1008E0054(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,char a40)
{
  if (a40)
  {
    sub_100190CC4(a1, a2, a3 & 1);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1004C9380(a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
    return sub_1008E02A4(a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32);
  }
  else
  {
    sub_100147E1C(a1, a2, a3, a4);
    sub_100190CC4(a13, a14, a15 & 1);
    swift_bridgeObjectRetain();
    return sub_1004C9380(a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28);
  }
}

uint64_t sub_1008E02A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12)
{
  if (a12)
  {
    sub_100190CC4(a9, a10, a11 & 1);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

void *sub_1008E0328(__n128 *a1)
{
  __n128 v2 = sub_10017D770(a1);
  v11(v3, v4, v5, v6, v7, v8, v9, v10, v2.n128_u64[0], v2.n128_u64[1], v12, v13, v14, v15, v16, v17, v1[16], v1[17], v1[18],
    v1[19],
    v1[20],
    v1[21],
    v1[22],
    v1[23],
    v1[24],
    v1[25],
    v1[26],
    v1[27],
    v1[28],
    v1[29],
    v1[30]);
  return v1;
}

uint64_t sub_1008E03A4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39,char a40)
{
  if (a40)
  {
    sub_100191924(a1, a2, a3 & 1);
    swift_release();
    swift_bridgeObjectRelease();
    sub_1008E05EC(a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
    return sub_1008E0640(a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32);
  }
  else
  {
    sub_100147E60(a1, a2, a3, a4);
    sub_100191924(a13, a14, a15 & 1);
    swift_bridgeObjectRelease();
    return sub_1008E05EC(a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28);
  }
}

uint64_t sub_1008E05EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12)
{
  if (a12)
  {
    sub_100191924(a9, a10, a11 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1008E0640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, uint64_t a12)
{
  if (a12)
  {
    sub_100191924(a9, a10, a11 & 1);
    swift_release();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1008E06D4(uint64_t result)
{
  *(unsigned char *)(result + 305) = 0;
  return result;
}

void sub_1008E06DC(void *a1)
{
}

uint64_t sub_1008E06E4(__n128 *a1)
{
  __n128 v2 = sub_10017D770(a1);
  v11(v3, v4, v5, v6, v7, v8, v9, v10, v2.n128_u64[0], v2.n128_u64[1], v12);
  return v1;
}

uint64_t sub_1008E0738@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.allowsTightening.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1008E0768()
{
  return EnvironmentValues.allowsTightening.setter();
}

uint64_t sub_1008E0790(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

unint64_t sub_1008E07E8()
{
  unint64_t result = qword_100E9EA00;
  if (!qword_100E9EA00)
  {
    sub_10018C6DC(&qword_100E7A188);
    sub_1008E0894();
    sub_1008E0974((unint64_t *)&qword_100E66BF8, (void (*)(uint64_t))type metadata accessor for AutomationInfoViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9EA00);
  }
  return result;
}

unint64_t sub_1008E0894()
{
  unint64_t result = qword_100E9EA08;
  if (!qword_100E9EA08)
  {
    sub_10018C6DC(&qword_100E7A180);
    sub_10018C6DC(&qword_100E9E910);
    sub_1008DFD7C();
    swift_getOpaqueTypeConformance2();
    sub_1008E0974((unint64_t *)&qword_100EAACA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9EA08);
  }
  return result;
}

uint64_t sub_1008E0974(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1008E09BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ArticlePlacementLocation();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DetailCondition();
  int v9 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 88))(a1, v8);
  if (v9 == enum case for DetailCondition.conditions(_:))
  {
    uint64_t v10 = sub_10017D798();
    v11(v10);
    uint64_t v12 = sub_100186A24();
    v13(v12);
LABEL_10:
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
    return _s7Weather24LocationCompositionStateOwst_0(a2, 0, 1, v4);
  }
  if (v9 == enum case for DetailCondition.humidity(_:)
    || v9 == enum case for DetailCondition.pressure(_:)
    || v9 == enum case for DetailCondition.precipitationTotal(_:)
    || v9 == enum case for DetailCondition.uvIndex(_:)
    || v9 == enum case for DetailCondition.visibility(_:)
    || v9 == enum case for DetailCondition.wind(_:))
  {
    uint64_t v14 = sub_10017D798();
    v15(v14);
    goto LABEL_10;
  }
  uint64_t v17 = sub_100186A24();
  v18(v17);

  return _s7Weather24LocationCompositionStateOwst_0(a2, 1, 1, v4);
}

uint64_t sub_1008E0C40(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MainAction();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(uint64_t (**)(uint64_t))(a1 + 16);
  swift_retain();
  sub_1008E0D54((uint64_t)v4);
  type metadata accessor for LocationsAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = 0;
  memset(v7, 0, sizeof(v7));
  sub_1001AAF58((uint64_t)v4, (uint64_t)v7, v5);
  sub_1001781AC((uint64_t)v7, (uint64_t *)&unk_100EA01F0);
  sub_100158F8C((uint64_t)v4, (void (*)(void))type metadata accessor for MainAction);
  return swift_release();
}

uint64_t sub_1008E0D54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for WeatherDataConfiguration();
  uint64_t v71 = *(void *)(v3 - 8);
  uint64_t v72 = v3;
  __chkstk_darwin(v3);
  char v70 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AppConfigurationState();
  __chkstk_darwin(v5 - 8);
  uint64_t v69 = (uint64_t)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v7 - 8);
  uint64_t v68 = (uint64_t)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E6D1D8);
  __chkstk_darwin(v9 - 8);
  uint64_t v67 = (uint64_t)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Location.Identifier();
  uint64_t v65 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100E6DC08);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10017DF08(&qword_100E639E8);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for Location();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v66 = (char *)&v61 - v26;
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v61 - v27;
  uint64_t v73 = v1;
  sub_1008E15FC((uint64_t)v19);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20) == 1)
  {
    sub_1001781AC((uint64_t)v19, &qword_100E639E8);
  }
  else
  {
    uint64_t v29 = *(void (**)(uint64_t, char *, uint64_t))(v21 + 32);
    uint64_t v63 = v21 + 32;
    uint64_t v64 = a1;
    uint64_t v62 = v29;
    v29((uint64_t)v28, v19, v20);
    sub_1001B1E64((void *)(v73 + 32), *(void *)(v73 + 56));
    uint64_t v30 = dispatch thunk of LocationManagerType.currentCLLocation.getter();
    if (v30)
    {
      uint64_t v31 = (void *)v30;
      (*(void (**)(char *, char *, uint64_t))(v21 + 16))(v24, v28, v20);
      Location.identifier.getter();
      static Location.currentLocationID.getter();
      Location.Identifier.with(id:name:coordinate:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v13, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v11);
      uint64_t v32 = type metadata accessor for TimeZone();
      uint64_t v33 = v67;
      _s7Weather24LocationCompositionStateOwst_0(v67, 1, 1, v32);
      uint64_t v34 = type metadata accessor for Date();
      uint64_t v35 = v68;
      _s7Weather24LocationCompositionStateOwst_0(v68, 1, 1, v34);
      uint64_t v36 = v66;
      Location.with(identifier:timeZone:lastRefreshDate:searchTitle:searchSubtitle:preciseName:secondaryName:)();
      sub_1001781AC(v35, (uint64_t *)&unk_100E73CA0);
      sub_1001781AC(v33, &qword_100E6D1D8);
      sub_1001781AC((uint64_t)v16, &qword_100E6DC08);
      int v37 = *(void (**)(char *, uint64_t))(v21 + 8);
      v37(v24, v20);
      v37(v28, v20);
      uint64_t v38 = v62;
      v62((uint64_t)v28, v36, v20);
      Location.coordinate.getter();
      double v40 = v39;
      Location.coordinate.getter();
      id v42 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v40 longitude:v41];
      uint64_t v43 = v31;
      id v44 = [v31 distanceFromLocation:v42];
      double v46 = v45;
      (*(void (**)(double *__return_ptr, id))(v73 + 72))(&v74, v44);
      uint64_t v47 = v69;
      sub_100118300(*(void *)&v74 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_appConfiguration, v69, (void (*)(void))type metadata accessor for AppConfigurationState);
      swift_release();
      uint64_t v48 = v70;
      AppConfiguration.weatherData.getter();
      uint64_t v49 = type metadata accessor for AppConfiguration();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v49 - 8) + 8))(v47, v49);
      WeatherDataConfiguration.currentLocationCertaintyRadius.getter();
      double v51 = v50;
      (*(void (**)(char *, uint64_t))(v71 + 8))(v48, v72);
      if (v51 >= v46)
      {
        uint64_t v52 = v64;
        if (qword_100E62838 != -1) {
          swift_once();
        }
        uint64_t v57 = type metadata accessor for Logger();
        sub_1002102B0(v57, (uint64_t)qword_100F51FB0);
        uint64_t v54 = Logger.logObject.getter();
        os_log_type_t v58 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v54, v58))
        {
          uint64_t v59 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v59 = 0;
          _os_log_impl((void *)&_mh_execute_header, v54, v58, "Current location accurate.", v59, 2u);
          swift_slowDealloc();
        }
      }
      else
      {
        uint64_t v52 = v64;
        if (qword_100E62838 != -1) {
          swift_once();
        }
        uint64_t v53 = type metadata accessor for Logger();
        sub_1002102B0(v53, (uint64_t)qword_100F51FB0);
        uint64_t v54 = Logger.logObject.getter();
        os_log_type_t v55 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v54, v55))
        {
          uint64_t v56 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v56 = 134217984;
          double v74 = v51;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v54, v55, "Current location stale - greater than %fm away.", v56, 0xCu);
          swift_slowDealloc();
        }
      }

      v38(v52, v28, v20);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v21 + 8))(v28, v20);
    }
  }
  type metadata accessor for CurrentLocation();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1008E15FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LocationsState();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CurrentLocation();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E639E8);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64((void *)(v1 + 32), *(void *)(v1 + 56));
  dispatch thunk of LocationManagerType.currentLocation.getter();
  uint64_t v15 = type metadata accessor for Location();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15) != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, v14, v15);
    uint64_t v17 = a1;
    uint64_t v18 = 0;
    return _s7Weather24LocationCompositionStateOwst_0(v17, v18, 1, v15);
  }
  uint64_t v16 = sub_1001781AC((uint64_t)v14, &qword_100E639E8);
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(v1 + 72))(&v21, v16);
  sub_100118300(v21 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (uint64_t)v8, (void (*)(void))type metadata accessor for LocationsState);
  swift_release();
  sub_10013B3F0((uint64_t)v8, (uint64_t)v5);
  sub_100158F8C((uint64_t)v8, (void (*)(void))type metadata accessor for LocationsState);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v9) == 1)
  {
    sub_1001781AC((uint64_t)v5, (uint64_t *)&unk_100EADD50);
    uint64_t v17 = a1;
    uint64_t v18 = 1;
    return _s7Weather24LocationCompositionStateOwst_0(v17, v18, 1, v15);
  }
  sub_10013CA40((uint64_t)v5, (uint64_t)v11);
  CurrentLocation.location.getter();
  return sub_100158F8C((uint64_t)v11, (void (*)(void))&type metadata accessor for CurrentLocation);
}

uint64_t sub_1008E18E4()
{
  sub_1001B1E64((void *)(v0 + 104), *(void *)(v0 + 128));
  dispatch thunk of LocationMetadataManagerType.resolveAddress(for:)();
  uint64_t v1 = (void *)zalgo.getter();
  uint64_t v2 = Promise.then<A>(on:closure:)();
  swift_release();

  return v2;
}

uint64_t sub_1008E1978()
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 32);
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 104);

  return v0;
}

uint64_t sub_1008E19CC()
{
  sub_1008E1978();

  return swift_deallocClassInstance();
}

uint64_t sub_1008E1A00()
{
  sub_1001B1E64((void *)(v0 + 32), *(void *)(v0 + 56));
  sub_10021E710();
  sub_10019F3A0();
  return dispatch thunk of LocationManagerType.removeObserver(_:)();
}

uint64_t sub_1008E1A48()
{
  sub_10017DF08(&qword_100E76B08);
  uint64_t updated = type metadata accessor for LocationManagerUpdateType();
  uint64_t v1 = *(void *)(updated - 8);
  uint64_t v2 = *(void *)(v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100C25ED0;
  unint64_t v5 = v4 + v3;
  uint64_t v6 = *(void (**)(unint64_t, void, uint64_t))(v1 + 104);
  v6(v5, enum case for LocationManagerUpdateType.currentLocation(_:), updated);
  v6(v5 + v2, enum case for LocationManagerUpdateType.currentCLLocation(_:), updated);
  return v4;
}

void sub_1008E1B4C()
{
  sub_1001B1E64((void *)(v0 + 104), *(void *)(v0 + 128));
  uint64_t v1 = dispatch thunk of LocationMetadataManagerType.requiresShowingAddresses.getter();
  if (v1)
  {
    __chkstk_darwin(v1);
    firstly<A>(closure:)();
    sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
    uint64_t v2 = (void *)static OS_dispatch_queue.main.getter();
    Promise.then<A, B>(on:disposeOn:closure:)();
    swift_release();
    swift_release();
  }
  else
  {
    if (qword_100E62838 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_1002102B0(v3, (uint64_t)qword_100F51FB0);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Current location updated, post sync", v6, 2u);
      swift_slowDealloc();
    }

    swift_retain();
    asyncMain(block:)();
    swift_release();
  }
}

uint64_t sub_1008E1D8C()
{
  if (qword_100E62838 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1002102B0(v0, (uint64_t)qword_100F51FB0);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Current location updated, confirm address", v3, 2u);
    swift_slowDealloc();
  }

  return sub_1008E18E4();
}

uint64_t sub_1008E1E88()
{
  if (qword_100E62838 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1002102B0(v0, (uint64_t)qword_100F51FB0);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Current location updated, post sync", v3, 2u);
    swift_slowDealloc();
  }

  swift_retain();
  asyncMain(block:)();
  return swift_release();
}

uint64_t sub_1008E1FA0()
{
  swift_retain();
  asyncMain(block:)();

  return swift_release();
}

void sub_1008E1FEC()
{
  if (qword_100E62838 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1002102B0(v0, (uint64_t)qword_100F51FB0);
  swift_errorRetain();
  swift_errorRetain();
  oslog = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    os_log_type_t v2 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v2 = 136446210;
    swift_errorRetain();
    sub_10017DF08(&qword_100E77F30);
    uint64_t v3 = String.init<A>(describing:)();
    sub_10016414C(v3, v4, &v6);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "location update failed with error: %{public}s", v2, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
}

uint64_t sub_1008E21E4()
{
  return sub_1008E1A48();
}

uint64_t sub_1008E21FC(uint64_t a1, uint64_t a2)
{
  return LocationManagerObserver.authorizationDidChange(_:authorizationStatus:)(a1, a2, *v2);
}

void sub_1008E2230()
{
}

uint64_t sub_1008E224C()
{
  return sub_1008E1D8C();
}

uint64_t type metadata accessor for NoAqiSevereNhpNewsContentView()
{
  return sub_100109098();
}

uint64_t sub_1008E2280()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1008E22C4@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v57 = a7;
  uint64_t v58 = a6;
  uint64_t v45 = a4;
  uint64_t v52 = a3;
  v70[3] = a5;
  int v9 = a2;
  unsigned int v10 = a2 & 0x100;
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  v70[7] = a5;
  sub_10017C794();
  uint64_t v50 = sub_10017F7C0();
  uint64_t v56 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v53 = v11;
  __chkstk_darwin(v12);
  sub_100162EF8();
  uint64_t v55 = v13;
  __chkstk_darwin(v14);
  uint64_t v54 = (uint64_t)&v41 - v15;
  v70[0] = a5;
  v70[1] = a5;
  v70[2] = a5;
  v70[3] = type metadata accessor for Optional();
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  v70[7] = a5;
  sub_10017C794();
  sub_10017F7C0();
  uint64_t v51 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v49 = v16;
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v59 = v18;
  __chkstk_darwin(v19);
  uint64_t v60 = (uint64_t)&v41 - v20;
  if (v9)
  {
    if (v9 == 1)
    {
      if (v10)
      {
        uint64_t v21 = &unk_100E8D1F8;
        goto LABEL_11;
      }
    }
    else if (v10)
    {
      uint64_t v21 = &unk_100E8D608;
      goto LABEL_11;
    }
    uint64_t v21 = &unk_100E8D400;
    goto LABEL_11;
  }
  if (v10) {
    uint64_t v21 = &unk_100E8CDE8;
  }
  else {
    uint64_t v21 = &unk_100E8CFF0;
  }
LABEL_11:
  memcpy(v70, v21, sizeof(v70));
  uint64_t v22 = memcpy(v69, v70, sizeof(v69));
  __chkstk_darwin(v22);
  uint64_t v23 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v23;
  *(&v41 - 6) = a1;
  *((unsigned char *)&v41 - 40) = v9;
  uint64_t v44 = a1;
  int v42 = v9;
  unsigned int v43 = v10 >> 8;
  *((unsigned char *)&v41 - 39) = BYTE1(v10);
  uint64_t v24 = v45;
  *(&v41 - 4) = v52;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v26 = v59;
  Group<A>.init(content:)();
  uint64_t v68 = WitnessTable;
  uint64_t v27 = v51;
  uint64_t v46 = swift_getWitnessTable();
  sub_100121584(v26, v27, v60);
  uint64_t v28 = v49;
  uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8);
  uint64_t v48 = v49 + 8;
  uint64_t v29 = v47(v26, v27);
  __chkstk_darwin(v29);
  uint64_t v30 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v30;
  *(&v41 - 6) = v44;
  *((unsigned char *)&v41 - 40) = v42;
  *((unsigned char *)&v41 - 39) = v43;
  *(&v41 - 4) = v31;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = v55;
  Group<A>.init(content:)();
  uint64_t v67 = v32;
  uint64_t v34 = v56;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v35 = v54;
  sub_100121584(v33, v34, v54);
  uint64_t v36 = v53;
  int v37 = *(void (**)(void))(v53 + 8);
  sub_10017C768();
  v37();
  uint64_t v38 = v59;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v59, v60, v27);
  uint64_t v65 = v38;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v33, v35, v34);
  uint64_t v66 = v33;
  uint64_t v63 = v27;
  uint64_t v64 = v34;
  uint64_t v61 = v46;
  uint64_t v62 = v58;
  sub_1006E9080();
  sub_10017C768();
  v37();
  double v39 = v47;
  v47(v60, v27);
  sub_10017C768();
  v37();
  return v39(v38, v27);
}

uint64_t sub_1008E2784@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v101 = a6;
  uint64_t v102 = a5;
  uint64_t v10 = sub_10017DF08(&qword_100E64E80);
  __chkstk_darwin(v10 - 8);
  uint64_t v99 = (uint64_t)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for Optional();
  uint64_t v112 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  uint64_t v119 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v118 = (char *)&v94 - v14;
  uint64_t v98 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v98);
  uint64_t v95 = (uint64_t)&v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v94 - v17;
  uint64_t v105 = *(void *)(a4 - 8);
  __chkstk_darwin(v19);
  uint64_t v100 = (char *)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v111 = (char *)&v94 - v22;
  __chkstk_darwin(v23);
  unint64_t v110 = (char *)&v94 - v24;
  __chkstk_darwin(v25);
  uint64_t v108 = (char *)&v94 - v26;
  __chkstk_darwin(v27);
  char v109 = (char *)&v94 - v28;
  __chkstk_darwin(v29);
  uint64_t v106 = (char *)&v94 - v30;
  __chkstk_darwin(v31);
  uint64_t v107 = (char *)&v94 - v32;
  __chkstk_darwin(v33);
  uint64_t v104 = (char *)&v94 - v34;
  __chkstk_darwin(v35);
  uint64_t v114 = (char *)&v94 - v36;
  __chkstk_darwin(v37);
  char v122 = (char *)&v94 - v38;
  __chkstk_darwin(v39);
  uint64_t v116 = (char *)&v94 - v40;
  __chkstk_darwin(v41);
  uint64_t v115 = (char *)&v94 - v42;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v94 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v94 - v47;
  uint64_t v117 = a1;
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather25NoAqiSevereNhpNewsContent8_Storage_severeAlert, (uint64_t)v18);
  uint64_t v96 = a3;
  uint64_t v49 = a3[45];
  uint64_t v50 = a3[46];
  uint64_t v51 = a3[47];
  uint64_t v52 = a3[48];
  uint64_t v123 = a2;
  a2(v18, v49, v50, v51, v52);
  sub_1001F2B74((uint64_t)v18);
  uint64_t v103 = v48;
  sub_100121584((uint64_t)v45, a4, (uint64_t)v48);
  uint64_t v53 = v105 + 8;
  uint64_t v124 = *(void (**)(char *, uint64_t))(v105 + 8);
  v124(v45, a4);
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather25NoAqiSevereNhpNewsContent8_Storage_nextHourPrecipitation, (uint64_t)v18);
  uint64_t v54 = v96;
  a2(v18, v96[33], v96[34], v96[35], v96[36]);
  sub_1001F2B74((uint64_t)v18);
  uint64_t v55 = v54;
  sub_100121584((uint64_t)v45, a4, (uint64_t)v115);
  uint64_t v56 = v124;
  v124(v45, a4);
  uint64_t v57 = v117;
  sub_1001F3734(v117 + OBJC_IVAR____TtCV7Weather25NoAqiSevereNhpNewsContent8_Storage_newsArticle, (uint64_t)v18);
  v123(v18, v55[29], v55[30], v55[31], v55[32]);
  char v97 = v18;
  sub_1001F2B74((uint64_t)v18);
  sub_100121584((uint64_t)v45, a4, (uint64_t)v116);
  uint64_t v121 = v45;
  uint64_t v113 = v53;
  v56(v45, a4);
  uint64_t v58 = v57 + OBJC_IVAR____TtCV7Weather25NoAqiSevereNhpNewsContent8_Storage_map;
  swift_beginAccess();
  uint64_t v59 = v58;
  uint64_t v60 = v99;
  sub_10027A764(v59, v99);
  if (_s7Weather24LocationCompositionStateOwet_0(v60, 1, v98) == 1)
  {
    sub_10027A7CC(v60);
  }
  else
  {
    uint64_t v61 = v95;
    sub_10027A82C(v60, v95);
    sub_10027A890((uint64_t)(v55 + 20), (uint64_t)v150);
    sub_10027A890((uint64_t)v150, (uint64_t)v151);
    if (v152 != 1)
    {
      uint64_t v65 = (uint64_t)v122;
      v123((char *)v61, v151[0], v151[1], v151[2], v151[3]);
      sub_1001F2B74(v61);
      uint64_t v66 = (uint64_t)v121;
      sub_100121584(v65, a4, (uint64_t)v121);
      uint64_t v67 = (void (*)(uint64_t, uint64_t))v124;
      v124((char *)v65, a4);
      uint64_t v62 = (uint64_t)v119;
      sub_100121584(v66, a4, (uint64_t)v119);
      v67(v66, a4);
      uint64_t v63 = v62;
      uint64_t v64 = 0;
      goto LABEL_7;
    }
    sub_1001F2B74(v61);
  }
  uint64_t v62 = (uint64_t)v119;
  uint64_t v63 = (uint64_t)v119;
  uint64_t v64 = 1;
LABEL_7:
  _s7Weather24LocationCompositionStateOwst_0(v63, v64, 1, a4);
  sub_1000CA354();
  uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v112 + 8);
  uint64_t v99 = (v112 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v68(v62, v120);
  uint64_t v69 = a4;
  uint64_t v70 = v117;
  uint64_t v71 = (uint64_t)v97;
  sub_1001F3734(*(void *)(v117 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v97);
  uint64_t v72 = (void (*)(uint64_t, void, void, void, void))v123;
  uint64_t v73 = (uint64_t)v122;
  v123((char *)v71, v55[12], v55[13], v55[14], v55[15]);
  sub_1001F2B74(v71);
  sub_100121584(v73, v69, (uint64_t)v121);
  v124((char *)v73, v69);
  sub_1001F3734(*(void *)(v70 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v71);
  uint64_t v74 = (uint64_t)v114;
  v72(v71, v55[4], v55[5], v55[6], v55[7]);
  sub_1001F2B74(v71);
  sub_100121584(v74, v69, v73);
  v124((char *)v74, v69);
  sub_1001F3734(*(void *)(v70 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, v71);
  uint64_t v75 = (uint64_t)v104;
  v72(v71, v55[53], v55[54], v55[55], v55[56]);
  sub_1001F2B74(v71);
  uint64_t v76 = v102;
  sub_100121584(v75, v69, v74);
  uint64_t v77 = v124;
  v124((char *)v75, v69);
  sub_1001F3734(*(void *)(v117 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, v71);
  uint64_t v78 = (uint64_t)v107;
  v123((char *)v71, v55[49], v55[50], v55[51], v55[52]);
  sub_1001F2B74(v71);
  sub_100121584(v78, v69, v75);
  uint64_t v79 = v77;
  v77((char *)v78, v69);
  char v80 = *(void (**)(uint64_t, char *, uint64_t))(v105 + 16);
  v80(v78, v103, v69);
  uint64_t v142 = v78;
  uint64_t v81 = v106;
  v80((uint64_t)v106, v115, v69);
  uint64_t v143 = v81;
  unsigned int v82 = v109;
  v80((uint64_t)v109, v116, v69);
  uint64_t v144 = v82;
  uint64_t v83 = v112 + 16;
  uint64_t v84 = (uint64_t)v119;
  (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v119, v118, v120);
  uint64_t v145 = v84;
  uint64_t v85 = v108;
  v80((uint64_t)v108, v121, v69);
  unsigned __int8 v146 = v85;
  uint64_t v86 = v110;
  v80((uint64_t)v110, v122, v69);
  uint64_t v147 = v86;
  uint64_t v87 = v111;
  v80((uint64_t)v111, v114, v69);
  uint64_t v148 = v87;
  int v88 = v100;
  uint64_t v89 = v104;
  v80((uint64_t)v100, v104, v69);
  uint64_t v149 = v88;
  uint64_t v90 = v88;
  uint64_t v134 = v69;
  uint64_t v135 = v69;
  uint64_t v91 = v120;
  uint64_t v136 = v69;
  uint64_t v137 = v120;
  uint64_t v138 = v69;
  uint64_t v139 = v69;
  uint64_t v140 = v69;
  uint64_t v141 = v69;
  uint64_t v126 = v76;
  uint64_t v127 = v76;
  uint64_t v128 = v76;
  uint64_t v125 = v76;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v130 = v76;
  uint64_t v131 = v76;
  uint64_t v132 = v76;
  uint64_t v133 = v76;
  sub_1006E9080();
  v79(v89, v69);
  v79(v114, v69);
  v79(v122, v69);
  v79(v121, v69);
  uint64_t v92 = *(void (**)(char *, uint64_t))(v83 - 8);
  v92(v118, v91);
  v79(v116, v69);
  v79(v115, v69);
  v79(v103, v69);
  v79(v90, v69);
  v79(v111, v69);
  v79(v110, v69);
  v79(v108, v69);
  v92(v119, v91);
  v79(v109, v69);
  v79(v106, v69);
  return ((uint64_t (*)(char *, uint64_t))v79)(v107, v69);
}

uint64_t sub_1008E32F4@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t, uint64_t, uint64_t, uint64_t)@<X2>, uint64_t *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v102 = a5;
  uint64_t v84 = a6;
  uint64_t v10 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = *(void *)(a4 - 8);
  uint64_t v13 = v82;
  __chkstk_darwin(v14);
  uint64_t v83 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v98 = (char *)&v82 - v17;
  __chkstk_darwin(v18);
  char v97 = (char *)&v82 - v19;
  __chkstk_darwin(v20);
  uint64_t v96 = (char *)&v82 - v21;
  __chkstk_darwin(v22);
  uint64_t v95 = (char *)&v82 - v23;
  __chkstk_darwin(v24);
  uint64_t v93 = (char *)&v82 - v25;
  __chkstk_darwin(v26);
  uint64_t v92 = (char *)&v82 - v27;
  __chkstk_darwin(v28);
  uint64_t v90 = (char *)&v82 - v29;
  __chkstk_darwin(v30);
  uint64_t v89 = (char *)&v82 - v31;
  __chkstk_darwin(v32);
  uint64_t v101 = (char *)&v82 - v33;
  __chkstk_darwin(v34);
  uint64_t v87 = (char *)&v82 - v35;
  __chkstk_darwin(v36);
  uint64_t v86 = (char *)&v82 - v37;
  __chkstk_darwin(v38);
  uint64_t v100 = (char *)&v82 - v39;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v82 - v41;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v82 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v82 - v47;
  uint64_t v94 = (char *)&v82 - v47;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v12);
  uint64_t v49 = a3[61];
  uint64_t v50 = a3[62];
  uint64_t v51 = a3[63];
  uint64_t v52 = a3[64];
  uint64_t v99 = a2;
  a2(v12, v49, v50, v51, v52);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v45, a4, (uint64_t)v48);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v91 = v45;
  v53(v45, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)v12);
  a2(v12, a3[41], a3[42], a3[43], a3[44]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v42, a4, (uint64_t)v45);
  int v88 = v42;
  v53(v42, a4);
  uint64_t v85 = a1;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v12);
  uint64_t v54 = (uint64_t)v100;
  v99(v12, a3[8], a3[9], a3[10], a3[11]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v54, a4, (uint64_t)v42);
  uint64_t v55 = v54;
  v53((char *)v54, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)v12);
  uint64_t v56 = (uint64_t)v86;
  uint64_t v57 = v99;
  v99(v12, a3[16], a3[17], a3[18], a3[19]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v56, a4, v55);
  v53((char *)v56, a4);
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v12);
  uint64_t v58 = (uint64_t)v87;
  v57(v12, a3[57], a3[58], a3[59], a3[60]);
  sub_1001F2B74((uint64_t)v12);
  uint64_t v59 = v58;
  sub_100121584(v58, a4, v56);
  v53((char *)v58, a4);
  uint64_t v60 = v85;
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)v12);
  uint64_t v61 = (uint64_t)v101;
  uint64_t v62 = v99;
  v99(v12, a3[37], a3[38], a3[39], a3[40]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v61, a4, v59);
  v53((char *)v61, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, (uint64_t)v12);
  uint64_t v63 = (uint64_t)v89;
  v62(v12, a3[25], a3[26], a3[27], a3[28]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v63, a4, (uint64_t)v101);
  v53((char *)v63, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, (uint64_t)v12);
  uint64_t v64 = *a3;
  uint64_t v65 = a3[1];
  uint64_t v66 = a3[2];
  uint64_t v67 = a3[3];
  uint64_t v68 = (uint64_t)v90;
  v62(v12, v64, v65, v66, v67);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v68, a4, v63);
  v53((char *)v68, a4);
  uint64_t v69 = *(void (**)(uint64_t, char *, uint64_t))(v82 + 16);
  v69(v68, v94, a4);
  uint64_t v119 = v68;
  uint64_t v70 = v92;
  v69((uint64_t)v92, v91, a4);
  uint64_t v120 = v70;
  uint64_t v71 = v93;
  v69((uint64_t)v93, v88, a4);
  uint64_t v121 = v71;
  uint64_t v72 = v95;
  v69((uint64_t)v95, v100, a4);
  char v122 = v72;
  uint64_t v73 = v96;
  uint64_t v74 = v86;
  v69((uint64_t)v96, v86, a4);
  uint64_t v123 = v73;
  uint64_t v75 = v97;
  uint64_t v76 = v87;
  v69((uint64_t)v97, v87, a4);
  uint64_t v124 = v75;
  uint64_t v77 = v98;
  uint64_t v78 = (uint64_t)v101;
  v69((uint64_t)v98, v101, a4);
  uint64_t v125 = v77;
  uint64_t v79 = v83;
  char v80 = v89;
  v69((uint64_t)v83, v89, a4);
  uint64_t v126 = v79;
  uint64_t v111 = a4;
  uint64_t v112 = a4;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v115 = a4;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v103 = v102;
  uint64_t v104 = v102;
  uint64_t v105 = v102;
  uint64_t v106 = v102;
  uint64_t v107 = v102;
  uint64_t v108 = v102;
  uint64_t v109 = v102;
  uint64_t v110 = v102;
  sub_1006E9080();
  v53(v80, a4);
  v53((char *)v78, a4);
  v53(v76, a4);
  v53(v74, a4);
  v53(v100, a4);
  v53(v88, a4);
  v53(v91, a4);
  v53(v94, a4);
  v53(v79, a4);
  v53(v98, a4);
  v53(v97, a4);
  v53(v96, a4);
  v53(v95, a4);
  v53(v93, a4);
  v53(v92, a4);
  return ((uint64_t (*)(char *, uint64_t))v53)(v90, a4);
}

uint64_t sub_1008E3D3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(v2 + 9)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_1008E22C4(*(void *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_1008E3D68()
{
  return sub_1008E3D98((uint64_t (*)(void, void, void, void, void, void, void))sub_1008E2784);
}

uint64_t sub_1008E3D80()
{
  return sub_1008E3D98((uint64_t (*)(void, void, void, void, void, void, void))sub_1008E32F4);
}

uint64_t sub_1008E3D98(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  if (*(unsigned char *)(v1 + 41)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return a1(*(void *)(v1 + 32), v2 | *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1008E3DCC@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  id v4 = [self mainBundle];
  v12._uint64_t countAndFlagsBits = 0xD000000000000038;
  v12._uint64_t object = (void *)0x8000000100CB6520;
  v5._uint64_t object = (void *)0x8000000100CB6500;
  v5._uint64_t countAndFlagsBits = 0xD000000000000019;
  v6._uint64_t countAndFlagsBits = 0x612074726F706552;
  v6._uint64_t object = (void *)0xEF6575737349206ELL;
  Swift::String v7 = NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v12);

  *(Swift::String *)a2 = v7;
  *(void *)(a2 + 16) = 0xD00000000000001BLL;
  *(void *)(a2 + 24) = 0x8000000100C969E0;
  *(unsigned char *)(a2 + 32) = 0;
  type metadata accessor for LocationComponentHeaderViewModel(0);
  *(void *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0;
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = (int *)type metadata accessor for LocationComponentContainerViewModel();
  *(unsigned char *)(a2 + v8[5]) = a1;
  type metadata accessor for LocationComponentViewModel();
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = a2 + v8[7];
  uint64_t v10 = type metadata accessor for LocationComponentAction(0);
  swift_storeEnumTagMultiPayload();
  uint64_t result = _s7Weather24LocationCompositionStateOwst_0(v9, 0, 1, v10);
  *(_WORD *)(a2 + v8[6]) = 258;
  return result;
}

uint64_t sub_1008E3F50@<X0>(uint64_t *a1@<X8>)
{
  sub_10020D948(v1 + 16, (uint64_t)(a1 + 2));
  uint64_t v3 = *(void *)(v1 + 64);
  swift_retain();
  swift_retain();
  sub_10017DF08(&qword_100E649D0);
  sub_1008E3FEC();
  uint64_t result = ObservedObject.init(wrappedValue:)();
  *a1 = result;
  a1[1] = v5;
  a1[7] = v3;
  return result;
}

uint64_t type metadata accessor for NextHourPrecipitationDetailModule()
{
  return self;
}

unint64_t sub_1008E3FEC()
{
  unint64_t result = qword_100E649D8;
  if (!qword_100E649D8)
  {
    sub_10018C6DC(&qword_100E649D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E649D8);
  }
  return result;
}

uint64_t sub_1008E4040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v7 = sub_10017DF08(&qword_100E9ED30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a2, a1, v7);
  uint64_t result = sub_10017DF08(&qword_100E9ED38);
  uint64_t v9 = a2 + *(int *)(result + 36);
  *(void *)uint64_t v9 = KeyPath;
  *(double *)(v9 + 8) = a3;
  return result;
}

double sub_1008E40E4()
{
  sub_1008E415C();
  EnvironmentValues.subscript.getter();
  return v1;
}

uint64_t sub_1008E4120()
{
  return EnvironmentValues.subscript.setter();
}

unint64_t sub_1008E415C()
{
  unint64_t result = qword_100E9ECA8[0];
  if (!qword_100E9ECA8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100E9ECA8);
  }
  return result;
}

ValueMetadata *_s29InteractiveMapCornerRadiusKeyVMa()
{
  return &_s29InteractiveMapCornerRadiusKeyVN;
}

ValueMetadata *type metadata accessor for InteractiveMapTransitionModifier()
{
  return &type metadata for InteractiveMapTransitionModifier;
}

uint64_t type metadata accessor for InteractiveMapTransitionView()
{
  return sub_100109098();
}

uint64_t sub_1008E41E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1008E4224@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1008E4040(a1, a2, *v2);
}

void sub_1008E422C()
{
  qword_100E9ECA0 = 0;
}

uint64_t *sub_1008E4238()
{
  if (qword_100E62750 != -1) {
    swift_once();
  }
  return &qword_100E9ECA0;
}

double sub_1008E4284@<D0>(uint64_t *a1@<X8>)
{
  int v2 = sub_1008E4238();
  double result = *(double *)v2;
  *a1 = *v2;
  return result;
}

uint64_t sub_1008E42B0@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t, double)@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(void *)(a3 - 8);
  __chkstk_darwin(a1);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v22 - v12;
  char v15 = v14 & 1;
  sub_100195B7C(v16, v14 & 1);
  sub_100201DE4();
  double v18 = v17;
  uint64_t v19 = sub_10018F6D8(a1, v15);
  a2(v19, v18);
  sub_100121584((uint64_t)v10, a3, (uint64_t)v13);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  v20(v10, a3);
  sub_100121584((uint64_t)v13, a3, a4);
  return ((uint64_t (*)(char *, uint64_t))v20)(v13, a3);
}

uint64_t sub_1008E4428@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1008E42B0(*(void *)v2, *(void (**)(uint64_t, double))(v2 + 16), *(void *)(a1 + 16), a2);
}

uint64_t sub_1008E4448()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1008E4470()
{
  unint64_t result = qword_100E9ED40;
  if (!qword_100E9ED40)
  {
    sub_10018C6DC(&qword_100E9ED38);
    sub_1001246C8(&qword_100E9ED48, &qword_100E9ED30);
    sub_1001246C8(&qword_100E6E388, &qword_100E6E390);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9ED40);
  }
  return result;
}

uint64_t sub_1008E4534(uint64_t a1)
{
  return *(void *)(a1 + 8);
}

uint64_t sub_1008E453C(uint64_t a1)
{
  return sub_10019F3B8(a1, 30, 0x8000000100CB6600, &qword_100F51D68);
}

uint64_t sub_1008E455C(uint64_t a1)
{
  return sub_10019F3B8(a1, 33, 0x8000000100CB65D0, &qword_100F51D70);
}

uint64_t sub_1008E457C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = type metadata accessor for Access();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = type metadata accessor for Domain();
  __chkstk_darwin(v12 - 8);
  sub_1001626E0();
  static Domain.weatherInternal.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v11, enum case for Access.public(_:), v5);
  sub_10017DF08(&qword_100E70818);
  swift_allocObject();
  uint64_t result = Setting.init(_:defaultValue:domain:access:)();
  *a4 = result;
  return result;
}

uint64_t sub_1008E46B4()
{
  uint64_t v0 = type metadata accessor for Access();
  sub_100179C0C();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = type metadata accessor for Domain();
  __chkstk_darwin(v7 - 8);
  sub_1001626E0();
  static Domain.weatherInternal.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v6, enum case for Access.public(_:), v0);
  sub_10017DF08(&qword_100E7F440);
  swift_allocObject();
  uint64_t result = Setting.init(_:defaultValue:domain:access:)();
  qword_100F51D78 = result;
  return result;
}

uint64_t sub_1008E47E4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7Weather14FrameContainer___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1008E4884()
{
  return type metadata accessor for FrameContainer();
}

double sub_1008E488C()
{
  double result = 0.0;
  xmmword_100E9ED50 = 0u;
  *(_OWORD *)&qword_100E9ED60 = 0u;
  return result;
}

unsigned char *sub_1008E48A0()
{
  if (qword_100E62770 != -1) {
    swift_once();
  }
  return ymmword_100E9ED50;
}

BOOL sub_1008E48EC(CGFloat *a1, void (*a2)(void *__return_ptr))
{
  a2(v8);
  CGFloat v3 = *(double *)v8;
  CGFloat v4 = *(double *)&v8[1];
  CGFloat v5 = *(double *)&v8[2];
  CGFloat v6 = *(double *)&v8[3];
  if (qword_100E62770 != -1) {
    swift_once();
  }
  v9.origin.x = v3;
  v9.origin.y = v4;
  v9.size.width = v5;
  v9.size.height = v6;
  BOOL result = CGRectEqualToRect(v9, *(CGRect *)ymmword_100E9ED50);
  if (!result)
  {
    *a1 = v3;
    a1[1] = v4;
    a1[2] = v5;
    a1[3] = v6;
  }
  return result;
}

__n128 sub_1008E499C@<Q0>(_OWORD *a1@<X8>)
{
  uint64_t v2 = sub_1008E48A0();
  __n128 result = *(__n128 *)v2;
  long long v4 = *((_OWORD *)v2 + 1);
  *a1 = *(_OWORD *)v2;
  a1[1] = v4;
  return result;
}

uint64_t sub_1008E49CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = static Color.clear.getter();
  uint64_t result = GeometryProxy.frame(in:)();
  *a1 = v2;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  return result;
}

ValueMetadata *type metadata accessor for LocationComponentFramePreferenceKey()
{
  return &type metadata for LocationComponentFramePreferenceKey;
}

uint64_t sub_1008E4A28()
{
  uint64_t v1 = *(void **)(v0 + 24);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 24);
  }
  else
  {
    uint64_t v2 = v0;
    id v3 = [self defaultMetrics];
    [self wu_systemUsesExuberatedLineHeight];
    sub_100870424();
    uint64_t v4 = (void *)static UIFont.monospacedDigitSystemFont(ofSize:weight:traits:)();
    id v5 = [v3 scaledFontForFont:v4];

    *(void *)(v2 + 24) = v5;
    id v6 = v5;
    sub_10017AB08();
  }
  id v7 = v1;
  return v2;
}

uint64_t sub_1008E4B20()
{
  uint64_t v1 = *(void **)(v0 + 40);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 40);
  }
  else
  {
    uint64_t v2 = v0;
    id v3 = [self defaultMetrics];
    [self wu_systemUsesExuberatedLineHeight];
    sub_100870424();
    uint64_t v4 = (void *)static UIFont.monospacedDigitSystemFont(ofSize:weight:traits:)();
    id v5 = [v3 scaledFontForFont:v4];

    *(void *)(v2 + 40) = v5;
    id v6 = v5;
    sub_10017AB08();
  }
  id v7 = v1;
  return v2;
}

id sub_1008E4C10()
{
  uint64_t v1 = (void *)*((void *)v0 + 2);
  if (v1)
  {
    id v2 = (id)*((void *)v0 + 2);
  }
  else
  {
    sub_10017D7B0();
    long long v36 = *v0;
    *(_OWORD *)(v3 + 24) = *(long long *)((char *)v0 + 24);
    *(_OWORD *)(v3 + 40) = *(long long *)((char *)v0 + 40);
    uint64_t v37 = 0;
    uint64_t v38 = v4;
    char v39 = v5;
    uint64_t v40 = v6;
    char v41 = v7;
    uint64_t v42 = v8;
    char v43 = v9;
    uint64_t v44 = v10;
    char v45 = v11;
    uint64_t v46 = v12;
    sub_100188248();
    uint64_t v13 = self;
    sub_1008E5858((uint64_t)&v36);
    id v14 = [v13 preferredFontDescriptorWithTextStyle:UIFontTextStyleTitle2];
    id v15 = [v14 fontDescriptorWithSymbolicTraits:0x8000];
    if (v15)
    {
      id v16 = v15;

      id v14 = v16;
    }
    sub_10017DF08(&qword_100E868D8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100C251B0;
    *(void *)(inited + 32) = UIFontDescriptorTraitsAttribute;
    sub_10017DF08(&qword_100E868E0);
    double v18 = (__n128 *)swift_initStackObject();
    sub_100181928(v18, v19, v20, v21, v22, v23, v24, v25, v26);
    sub_10017EAC8(v27);
    sub_1008E58C0(&qword_100E63080, type metadata accessor for TraitKey);
    uint64_t v28 = UIFontDescriptorTraitsAttribute;
    uint64_t v29 = UIFontWeightTrait;
    sub_1001A2640();
    uint64_t v30 = sub_10017DF08(&qword_100E868E8);
    sub_1001A0FE8(v30);
    sub_1008E58C0(&qword_100E63090, type metadata accessor for AttributeName);
    sub_10019F3C0();
    Class isa = sub_100180650().super.isa;
    swift_bridgeObjectRelease();
    id v32 = [v14 fontDescriptorByAddingAttributes:isa, 1, 2];

    id v2 = [self fontWithDescriptor:v32 size:0.0];
    sub_1008E5908((uint64_t)&v36);
    *((void *)v0 + 2) = v2;
    id v33 = v2;
    sub_10017AB08();
  }
  id v34 = v1;
  return v2;
}

id sub_1008E4EE0()
{
  id v1 = *(id *)v0;
  if (*(void *)v0)
  {
    id v2 = *(id *)v0;
  }
  else
  {
    sub_10017D7B0();
    *(_OWORD *)(v3 + 8) = *(_OWORD *)(v0 + 8);
    *(_OWORD *)(v3 + 24) = *(_OWORD *)(v0 + 24);
    *(_OWORD *)(v3 + 40) = *(_OWORD *)(v0 + 40);
    v36[0] = 0;
    v36[7] = v4;
    char v37 = v5;
    uint64_t v38 = v6;
    char v39 = v7;
    uint64_t v40 = v8;
    char v41 = v9;
    uint64_t v42 = v10;
    char v43 = v11;
    uint64_t v44 = v12;
    sub_100188248();
    uint64_t v13 = self;
    sub_1008E5858((uint64_t)v36);
    id v14 = [v13 preferredFontDescriptorWithTextStyle:UIFontTextStyleFootnote];
    id v15 = [v14 fontDescriptorWithSymbolicTraits:0x8000];
    if (v15)
    {
      id v16 = v15;

      id v14 = v16;
    }
    sub_10017DF08(&qword_100E868D8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100C251B0;
    *(void *)(inited + 32) = UIFontDescriptorTraitsAttribute;
    sub_10017DF08(&qword_100E868E0);
    double v18 = (__n128 *)swift_initStackObject();
    sub_100181928(v18, v19, v20, v21, v22, v23, v24, v25, v26);
    sub_10017EAC8(v27);
    sub_1008E58C0(&qword_100E63080, type metadata accessor for TraitKey);
    uint64_t v28 = UIFontDescriptorTraitsAttribute;
    uint64_t v29 = UIFontWeightTrait;
    sub_1001A2640();
    uint64_t v30 = sub_10017DF08(&qword_100E868E8);
    sub_1001A0FE8(v30);
    sub_1008E58C0(&qword_100E63090, type metadata accessor for AttributeName);
    sub_10019F3C0();
    Class isa = sub_100180650().super.isa;
    swift_bridgeObjectRelease();
    id v32 = [v14 fontDescriptorByAddingAttributes:isa, 1, 2];

    id v2 = [self fontWithDescriptor:v32 size:0.0];
    sub_1008E5908((uint64_t)v36);
    *(void *)uint64_t v0 = v2;
    id v33 = v2;
    sub_10017AB08();
  }
  id v34 = v1;
  return v2;
}

void sub_1008E51B0()
{
  if (*(unsigned char *)(v0 + 64))
  {
    id v1 = (void *)sub_1008E4A28();
    [v1 capHeight];
    double v3 = v2;

    *(double *)(v0 + 56) = round(v3);
    *(unsigned char *)(v0 + 64) = 0;
  }
}

double sub_1008E520C()
{
  if ((*(unsigned char *)(v0 + 112) & 1) == 0) {
    return *(double *)(v0 + 104);
  }
  id v1 = (void *)sub_1008E4A28();
  [v1 _scaledValueForValue:0.75];
  double v3 = v2;

  *(double *)(v0 + 104) = v3;
  *(unsigned char *)(v0 + 112) = 0;
  return v3;
}

id sub_1008E526C()
{
  id v1 = *(void **)(v0 + 8);
  if (v1)
  {
    id v2 = *(id *)(v0 + 8);
  }
  else
  {
    sub_10017D7B0();
    v37[0] = v3;
    v37[1] = 0;
    long long v4 = *(_OWORD *)(v0 + 32);
    v5[1] = *(_OWORD *)(v0 + 16);
    _OWORD v5[2] = v4;
    v5[3] = *(_OWORD *)(v0 + 48);
    char v38 = v6;
    uint64_t v39 = v7;
    char v40 = v8;
    uint64_t v41 = v9;
    char v42 = v10;
    uint64_t v43 = v11;
    char v44 = v12;
    uint64_t v45 = v13;
    sub_100188248();
    id v14 = self;
    sub_1008E5858((uint64_t)v37);
    id v15 = [v14 preferredFontDescriptorWithTextStyle:UIFontTextStyleFootnote];
    id v16 = [v15 fontDescriptorWithSymbolicTraits:0x8000];
    if (v16)
    {
      id v17 = v16;

      id v15 = v17;
    }
    sub_10017DF08(&qword_100E868D8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100C251B0;
    *(void *)(inited + 32) = UIFontDescriptorTraitsAttribute;
    sub_10017DF08(&qword_100E868E0);
    uint64_t v19 = (__n128 *)swift_initStackObject();
    sub_100181928(v19, v20, v21, v22, v23, v24, v25, v26, v27);
    sub_10017EAC8(v28);
    sub_1008E58C0(&qword_100E63080, type metadata accessor for TraitKey);
    uint64_t v29 = UIFontDescriptorTraitsAttribute;
    uint64_t v30 = UIFontWeightTrait;
    sub_1001A2640();
    uint64_t v31 = sub_10017DF08(&qword_100E868E8);
    sub_1001A0FE8(v31);
    sub_1008E58C0(&qword_100E63090, type metadata accessor for AttributeName);
    sub_10019F3C0();
    Class isa = sub_100180650().super.isa;
    swift_bridgeObjectRelease();
    id v33 = [v15 fontDescriptorByAddingAttributes:isa, 1, 2];

    id v2 = [self fontWithDescriptor:v33 size:0.0];
    sub_1008E5908((uint64_t)v37);
    *(void *)(v0 + 8) = v2;
    id v34 = v2;
    sub_10017AB08();
  }
  id v35 = v1;
  return v2;
}

void sub_1008E5530()
{
  if (*(unsigned char *)(v0 + 96))
  {
    id v1 = sub_1008E4EE0();
    [v1 descender];
    double v3 = v2;

    *(double *)(v0 + 88) = -v3;
    *(unsigned char *)(v0 + 96) = 0;
  }
}

double sub_1008E558C()
{
  if ((*(unsigned char *)(v0 + 80) & 1) == 0) {
    return *(double *)(v0 + 72);
  }
  double result = sub_1008E5970();
  *(double *)(v0 + 72) = result;
  *(unsigned char *)(v0 + 80) = 0;
  return result;
}

double sub_1008E55C0()
{
  if ((*(unsigned char *)(v0 + 144) & 1) == 0) {
    return *(double *)(v0 + 136);
  }
  *(void *)(v0 + 136) = 0x3FD0000000000000;
  *(unsigned char *)(v0 + 144) = 0;
  return 0.25;
}

double sub_1008E55E4()
{
  if ((*(unsigned char *)(v0 + 160) & 1) == 0) {
    return *(double *)(v0 + 152);
  }
  *(void *)(v0 + 152) = 0x4008000000000000;
  *(unsigned char *)(v0 + 160) = 0;
  return 3.0;
}

double sub_1008E5608()
{
  if ((*(unsigned char *)(v0 + 176) & 1) == 0) {
    return *(double *)(v0 + 168);
  }
  *(void *)(v0 + 168) = 0;
  *(unsigned char *)(v0 + 176) = 0;
  return 0.0;
}

double sub_1008E5628()
{
  if ((*(unsigned char *)(v0 + 128) & 1) == 0) {
    return *(double *)(v0 + 120);
  }
  *(void *)(v0 + 120) = 0x4010000000000000;
  *(unsigned char *)(v0 + 128) = 0;
  return 4.0;
}

uint64_t sub_1008E564C()
{
  id v1 = *(void **)(v0 + 32);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 32);
  }
  else
  {
    uint64_t v2 = v0;
    id v3 = [self defaultMetrics];
    sub_100870424();
    long long v4 = (void *)static UIFont.monospacedDigitSystemFont(ofSize:weight:traits:)();
    id v5 = [self traitCollectionWithPreferredContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
    id v6 = [v3 scaledFontForFont:v4 compatibleWithTraitCollection:v5];

    *(void *)(v2 + 32) = v6;
    id v7 = v6;
    sub_10017AB08();
  }
  id v8 = v1;
  return v2;
}

uint64_t sub_1008E5754()
{
  id v1 = *(void **)(v0 + 48);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 48);
  }
  else
  {
    uint64_t v2 = v0;
    id v3 = [self defaultMetrics];
    sub_100870424();
    long long v4 = (void *)static UIFont.monospacedDigitSystemFont(ofSize:weight:traits:)();
    id v5 = [self traitCollectionWithPreferredContentSizeCategory:UIContentSizeCategoryAccessibilityMedium];
    id v6 = [v3 scaledFontForFont:v4 compatibleWithTraitCollection:v5];

    *(void *)(v2 + 48) = v6;
    id v7 = v6;
    sub_10017AB08();
  }
  id v8 = v1;
  return v2;
}

uint64_t sub_1008E5858(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  id v3 = *(void **)(a1 + 8);
  long long v4 = *(void **)(a1 + 16);
  id v5 = *(void **)(a1 + 24);
  id v6 = *(void **)(a1 + 32);
  id v7 = *(void **)(a1 + 40);
  id v8 = *(id *)(a1 + 48);
  id v9 = v2;
  id v10 = v3;
  id v11 = v4;
  id v12 = v5;
  id v13 = v6;
  id v14 = v7;
  return a1;
}

uint64_t sub_1008E58C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1008E5908(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
  id v3 = *(void **)(a1 + 16);
  long long v4 = *(void **)(a1 + 24);
  id v5 = *(void **)(a1 + 32);
  id v6 = *(void **)(a1 + 40);
  id v7 = *(void **)(a1 + 48);

  return a1;
}

double sub_1008E5970()
{
  id v0 = sub_1008E526C();
  [v0 lineHeight];
  double v2 = v1;

  double v3 = v2 + v2;
  id v4 = sub_1008E526C();
  [v4 descender];
  double v6 = v5;

  return round(v3 + v6 + 16.0);
}

uint64_t sub_1008E59E4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1008E5A38(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(_DWORD *)(a1 + 105) = *(_DWORD *)(a2 + 105);
  *(_DWORD *)(a1 + 108) = *(_DWORD *)(a2 + 108);
  *(_WORD *)(a1 + 112) = *(_WORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1008E5AE8(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(void *)(a1 + 96) = v4;
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(unsigned char *)(a1 + 106) = *(unsigned char *)(a2 + 106);
  *(unsigned char *)(a1 + 107) = *(unsigned char *)(a2 + 107);
  *(unsigned char *)(a1 + 108) = *(unsigned char *)(a2 + 108);
  *(unsigned char *)(a1 + 109) = *(unsigned char *)(a2 + 109);
  *(unsigned char *)(a1 + 110) = *(unsigned char *)(a2 + 110);
  *(unsigned char *)(a1 + 111) = *(unsigned char *)(a2 + 111);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
  return a1;
}

void *sub_1008E5C20(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x72uLL);
}

uint64_t sub_1008E5C28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(_DWORD *)(a1 + 105) = *(_DWORD *)(a2 + 105);
  *(unsigned char *)(a1 + 109) = *(unsigned char *)(a2 + 109);
  *(_WORD *)(a1 + 110) = *(_WORD *)(a2 + 110);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(unsigned char *)(a1 + 113) = *(unsigned char *)(a2 + 113);
  return a1;
}

uint64_t sub_1008E5CE0(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 114))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1008E5D20(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 112) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 114) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 114) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for DiagnosticSummary.Location()
{
}

void type metadata accessor for DiagnosticSummary.BundleVersion()
{
}

uint64_t sub_1008E5D98()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1008E5DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1008E5E8C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1008E5F84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for DiagnosticSummary()
{
}

uint64_t sub_1008E6028(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x8000000100CB67C0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v5 = a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000;
    if (v5 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x8000000100CB67E0 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000100CB6800 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000100CB6820 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else if (a1 == 0xD000000000000020 && a2 == 0x8000000100CB6840)
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else
    {
      char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v6) {
        return 5;
      }
      else {
        return 6;
      }
    }
  }
}

unint64_t sub_1008E6270(char a1)
{
  unint64_t result = 0xD000000000000012;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656C61636F6CLL;
      break;
    case 3:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 4:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 5:
      unint64_t result = 0xD000000000000020;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1008E6320()
{
  sub_1001A351C();
  sub_10017DF08(&qword_100E9F0A8);
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_100164F78();
  sub_1008EA120();
  sub_1001634D8();
  sub_10017FFDC();
  if (!v0)
  {
    sub_10017FFDC();
    sub_1001832CC();
    sub_10019F408();
    sub_10019F408();
    sub_10017FFDC();
    sub_10019F408();
  }
  uint64_t v2 = sub_10017A278();
  v3(v2);
  sub_100182C7C();
}

void sub_1008E6470()
{
  sub_10016314C();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  sub_10017DF08(&qword_100E9F0E0);
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_1001B1E64(v2, v2[3]);
  sub_1008EA120();
  sub_1001A2EC0();
  if (v0)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v2);
  }
  else
  {
    uint64_t v6 = sub_100184094();
    uint64_t v8 = v7;
    sub_100185694();
    uint64_t v20 = sub_100184094();
    uint64_t v21 = v6;
    sub_1001832CC();
    uint64_t v10 = v9;
    swift_bridgeObjectRetain();
    uint64_t v22 = v10;
    char v19 = sub_1001A009C();
    char v18 = sub_1001A009C();
    uint64_t v11 = sub_100184094();
    uint64_t v13 = v12;
    uint64_t v17 = v11;
    swift_bridgeObjectRetain();
    char v14 = sub_1001A009C();
    uint64_t v15 = sub_100179CA0();
    v16(v15);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v4 = v21;
    *(void *)(v4 + 8) = v8;
    *(void *)(v4 + 16) = v20;
    *(void *)(v4 + 24) = v22;
    *(unsigned char *)(v4 + 32) = v19 & 1;
    *(unsigned char *)(v4 + 33) = v18 & 1;
    *(void *)(v4 + 40) = v17;
    *(void *)(v4 + 48) = v13;
    *(unsigned char *)(v4 + 56) = v14 & 1;
  }
  sub_100163164();
}

unint64_t sub_1008E6738(Swift::String string)
{
  uint64_t object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._uint64_t object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E080B8, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

uint64_t sub_1008E6784(char a1)
{
  if (!a1) {
    return 0x6C62616C69617661;
  }
  if (a1 == 1) {
    return 0xD000000000000016;
  }
  return 0x616C696176616E75;
}

uint64_t sub_1008E67EC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x57746E6572727563 && a2 == 0xEE00726568746165;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x726F46796C696164 && a2 == 0xED00007473616365;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6F46796C72756F68 && a2 == 0xEE00747361636572;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x696C617551726961 && a2 == 0xEA00000000007974;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0xD000000000000015 && a2 == 0x8000000100C95D30 {
               || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        }
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          BOOL v9 = a1 == 0x6557657265766573 && a2 == 0xED00007265687461;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else if (a1 == 0x4372656874616577 && a2 == 0xEE007365676E6168)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v11) {
              return 6;
            }
            else {
              return 7;
            }
          }
        }
      }
    }
  }
}

unint64_t sub_1008E6B78(char a1)
{
  unint64_t result = 0x57746E6572727563;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x726F46796C696164;
      break;
    case 2:
      unint64_t result = 0x6F46796C72756F68;
      break;
    case 3:
      unint64_t result = 0x696C617551726961;
      break;
    case 4:
      unint64_t result = 0xD000000000000015;
      break;
    case 5:
      unint64_t result = 0x6557657265766573;
      break;
    case 6:
      unint64_t result = 0x4372656874616577;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1008E6CA4()
{
  sub_10017DF08(&qword_100E9F130);
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_100164F78();
  sub_1008EA6DC();
  sub_1001634D8();
  sub_1008EA774();
  sub_100180670();
  if (!v0)
  {
    sub_100180670();
    sub_100180670();
    sub_100180670();
    sub_100180670();
    sub_100180670();
    sub_100180670();
  }
  uint64_t v2 = sub_10017A278();
  v3(v2);
  sub_100182C7C();
}

void sub_1008E6E90()
{
  sub_10016314C();
  sub_10018AB58();
  sub_10017DF08(&qword_100E9F118);
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_100125FF8();
  sub_1001B1E64(v0, v0[3]);
  sub_1008EA6DC();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  sub_1008EA728();
  sub_10019F3E4();
  sub_10019F3E4();
  sub_10019F3E4();
  sub_10019F3E4();
  sub_10019F3E4();
  sub_10019F3E4();
  sub_10019F3E4();
  uint64_t v2 = sub_100184C9C();
  v3(v2);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v0);
  sub_100163164();
}

uint64_t sub_1008E70D0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6574617473 && a2 == 0xE500000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1702125924 && a2 == 0xE400000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 6645601 && a2 == 0xE300000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000014 && a2 == 0x8000000100CB6870)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v8) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

unint64_t sub_1008E7258(char a1)
{
  unint64_t result = 0x6574617473;
  switch(a1)
  {
    case 1:
      unint64_t result = 1702125924;
      break;
    case 2:
      unint64_t result = 6645601;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1008E72DC()
{
  sub_1001A351C();
  sub_10017DF08(&qword_100E9F0D0);
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_100164F78();
  sub_1008EA16C();
  sub_1001634D8();
  sub_10017FFDC();
  if (!v0)
  {
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    sub_1001832CC();
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    sub_1008EA204();
    sub_10017EAE4();
  }
  uint64_t v2 = sub_10017A278();
  v3(v2);
  sub_100182C7C();
}

void sub_1008E7434()
{
  sub_10016314C();
  sub_10018AB58();
  uint64_t v3 = v2;
  sub_10017DF08(&qword_100E9F0B8);
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_1001B1E64(v0, v0[3]);
  sub_1008EA16C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v0);
  }
  else
  {
    uint64_t v5 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v7 = v6;
    uint64_t v16 = v5;
    sub_100185694();
    uint64_t v8 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v10 = v9;
    uint64_t v15 = v8;
    sub_1001832CC();
    swift_bridgeObjectRetain();
    uint64_t v11 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    char v20 = v12;
    uint64_t v14 = v11;
    sub_1008EA1B8();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_100164FC8();
    v13();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v3 = v16;
    *(void *)(v3 + 8) = v7;
    *(void *)(v3 + 16) = v15;
    *(void *)(v3 + 24) = v10;
    *(void *)(v3 + 32) = v14;
    *(unsigned char *)(v3 + 40) = v20 & 1;
    *(_DWORD *)(v3 + 41) = v17;
    *(_WORD *)(v3 + 45) = v18;
    *(unsigned char *)(v3 + 47) = v19;
  }
  sub_100163164();
}

uint64_t sub_1008E76C8(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1701667182 && a2 == 0xE400000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x7461446C61636F6CLL && a2 == 0xE900000000000065;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x616E6964726F6F63 && a2 == 0xEA00000000006574;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x4472656874616577 && a2 == 0xEB00000000617461;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000100CB6780 {
                 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          }
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000100CB67A0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v10) {
              return 6;
            }
            else {
              return 7;
            }
          }
        }
      }
    }
  }
}

unint64_t sub_1008E79B4(char a1)
{
  unint64_t result = 0x696669746E656469;
  switch(a1)
  {
    case 1:
      unint64_t result = 1701667182;
      break;
    case 2:
      unint64_t result = 0x7461446C61636F6CLL;
      break;
    case 3:
      unint64_t result = 0x616E6964726F6F63;
      break;
    case 4:
      unint64_t result = 0x4472656874616577;
      break;
    case 5:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1008E7AB8()
{
  sub_1001A351C();
  sub_10017DF08(&qword_100E9F008);
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_100164F78();
  sub_1008E96AC();
  sub_1001634D8();
  sub_10017FFDC();
  if (!v0)
  {
    sub_10017FFDC();
    sub_10017FFDC();
    type metadata accessor for CLLocationCoordinate2D(0);
    sub_1008E9744(&qword_100E99310);
    sub_10017EAE4();
    sub_1008E9788();
    sub_10017EAE4();
    sub_10019F408();
    sub_10019F408();
  }
  uint64_t v2 = sub_10017A278();
  v3(v2);
  sub_100182C7C();
}

uint64_t sub_1008E7C8C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_10017DF08(&qword_100E9EFF0);
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_1001B1E64(a1, a1[3]);
  sub_1008E96AC();
  sub_1001A2EC0();
  if (v2) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  uint64_t v7 = sub_100184094();
  uint64_t v10 = v9;
  uint64_t v25 = v7;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_100184094();
  uint64_t v13 = v12;
  uint64_t v24 = v11;
  LOBYTE(v27) = 2;
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_100184094();
  uint64_t v15 = v14;
  type metadata accessor for CLLocationCoordinate2D(0);
  sub_1008E9744(&qword_100E992F0);
  uint64_t v26 = v15;
  swift_bridgeObjectRetain();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  sub_1008E96F8();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  v3.i32[0] = v33;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v16 = sub_1001A009C();
  if (v28)
  {
    uint64_t v17 = sub_100179CA0();
    v18(v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    char v22 = v16;
    char v19 = sub_1001A009C();
    uint64_t v20 = sub_100165338();
    v21(v20);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a2 = v25;
    *(void *)(a2 + 8) = v10;
    *(void *)(a2 + 16) = v24;
    *(void *)(a2 + 24) = v13;
    *(void *)(a2 + 32) = v23;
    *(void *)(a2 + 40) = v26;
    *(void *)(a2 + 48) = v27;
    *(void *)(a2 + 56) = 0;
    *(void *)(a2 + 64) = v27;
    *(void *)(a2 + 72) = 0;
    *(void *)(a2 + 80) = v29;
    *(void *)(a2 + 88) = v30;
    *(void *)(a2 + 96) = v31;
    *(unsigned char *)(a2 + 104) = v32;
    *(_DWORD *)(a2 + 105) = vmovn_s16((int16x8_t)vmovl_u8(v3)).u32[0];
    *(unsigned char *)(a2 + 109) = v34;
    *(unsigned char *)(a2 + 110) = v35;
    *(unsigned char *)(a2 + 111) = v36;
    *(unsigned char *)(a2 + 112) = v22 & 1;
    *(unsigned char *)(a2 + 113) = v19 & 1;
  }
  return result;
}

uint64_t sub_1008E8120(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F6973726576 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1008E8200(char a1)
{
  if (a1) {
    return 0x6E6F6973726576;
  }
  else {
    return 1701667182;
  }
}

void sub_1008E8230()
{
  sub_10016314C();
  uint8x8_t v3 = v2;
  uint64_t v4 = sub_10017DF08(&qword_100E9F028);
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_100125FF8();
  sub_1001B1E64(v3, v3[3]);
  sub_1008E97D4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v0) {
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_100163164();
}

void sub_1008E835C()
{
  sub_10016314C();
  sub_10018AB58();
  sub_10017DF08(&qword_100E9F018);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_1001B1E64(v0, v0[3]);
  sub_1008E97D4();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v0);
  }
  else
  {
    KeyedDecodingContainer.decode(_:forKey:)();
    sub_100185694();
    KeyedDecodingContainer.decode(_:forKey:)();
    sub_100164FC8();
    v3();
    swift_bridgeObjectRetain();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_100163164();
}

uint64_t sub_1008E8514(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6D6E6F7269766E65 && a2 == 0xEB00000000746E65;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6E6F697461636F6CLL && a2 == 0xE900000000000073;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x736E6F6973726576 && a2 == 0xE800000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_1008E86D8(char a1)
{
  uint64_t result = 1702125924;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6D6E6F7269766E65;
      break;
    case 2:
      uint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 3:
      uint64_t result = 0x736E6F6973726576;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1008E8770()
{
  sub_1001A351C();
  sub_10017DF08(&qword_100E9EFA8);
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_100164F78();
  sub_1008E957C();
  sub_1001634D8();
  sub_10017FFDC();
  if (!v0)
  {
    sub_1008E95C8();
    sub_100185DB0();
    sub_10017EAE4();
    sub_10017DF08(&qword_100E9EFC0);
    sub_1008E98B8(&qword_100E9EFC8, &qword_100E9EFC0, (void (*)(void))sub_1008E9614);
    sub_100185DB0();
    sub_10017EAE4();
    sub_10017DF08(&qword_100E9EFD8);
    sub_1008E98B8(&qword_100E9EFE0, &qword_100E9EFD8, (void (*)(void))sub_1008E9660);
    sub_100185DB0();
    sub_10017EAE4();
  }
  uint64_t v2 = sub_10017A278();
  v3(v2);
  sub_100182C7C();
}

void sub_1008E8960()
{
  sub_10016314C();
  sub_10018AB58();
  uint64_t v3 = v2;
  sub_10017DF08(&qword_100E9F030);
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_1001B1E64(v0, v0[3]);
  sub_1008E957C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v0);
  }
  else
  {
    LOBYTE(v11) = 0;
    uint64_t v5 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v7 = v6;
    uint64_t v10 = v5;
    sub_1008E9820();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_10017DF08(&qword_100E9EFC0);
    sub_1008E98B8(&qword_100E9F040, &qword_100E9EFC0, (void (*)(void))sub_1008E986C);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_10017DF08(&qword_100E9EFD8);
    sub_1008E98B8(&qword_100E9F050, &qword_100E9EFD8, (void (*)(void))sub_1008E9924);
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v8 = sub_1001D1F64();
    v9(v8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v3 = v10;
    *(void *)(v3 + 8) = v7;
    *(void *)(v3 + 16) = v11;
    *(void *)(v3 + 24) = v12;
    *(void *)(v3 + 32) = v13;
    *(void *)(v3 + 40) = v14;
    *(unsigned char *)(v3 + 48) = v15;
    *(unsigned char *)(v3 + 49) = v16;
    *(void *)(v3 + 56) = v17;
    *(void *)(v3 + 64) = v18;
    *(unsigned char *)(v3 + 72) = v19;
    *(void *)(v3 + 80) = v11;
    *(void *)(v3 + 88) = v11;
  }
  sub_100163164();
}

unint64_t sub_1008E8DFC()
{
  return sub_1008E6270(*v0);
}

uint64_t sub_1008E8E04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1008E6028(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1008E8E2C(uint64_t a1)
{
  unint64_t v2 = sub_1008EA120();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008E8E68(uint64_t a1)
{
  unint64_t v2 = sub_1008EA120();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_1008E8EA4@<D0>(_OWORD *a1@<X8>)
{
  sub_1008E6470();
  if (!v1)
  {
    *a1 = v4;
    a1[1] = v5;
    a1[2] = *(_OWORD *)v6;
    double result = *(double *)&v6[9];
    *(_OWORD *)((char *)a1 + 41) = *(_OWORD *)&v6[9];
  }
  return result;
}

void sub_1008E8EF0()
{
}

uint64_t sub_1008E8F08(unsigned __int8 *a1, char *a2)
{
  return sub_10088A8FC(*a1, *a2);
}

Swift::Int sub_1008E8F14()
{
  return sub_1006527F4();
}

uint64_t sub_1008E8F1C(uint64_t a1)
{
  return sub_1002C2980(a1, *v1);
}

Swift::Int sub_1008E8F24()
{
  return sub_1002C45C0();
}

unint64_t sub_1008E8F2C@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1008E6738(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1008E8F5C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1008E6784(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1008E8F88()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1008E8FE8()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t sub_1008E9038()
{
  return sub_1008E6B78(*v0);
}

uint64_t sub_1008E9040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1008E67EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1008E9068(uint64_t a1)
{
  unint64_t v2 = sub_1008EA6DC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008E90A4(uint64_t a1)
{
  unint64_t v2 = sub_1008EA6DC();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1008E90E0(uint64_t a1@<X8>)
{
  sub_1008E6E90();
  if (!v1)
  {
    *(_WORD *)a1 = v3;
    *(unsigned char *)(a1 + 2) = BYTE2(v3);
    *(unsigned char *)(a1 + 3) = BYTE3(v3);
    *(unsigned char *)(a1 + 4) = BYTE4(v3);
    *(unsigned char *)(a1 + 5) = BYTE5(v3);
    *(unsigned char *)(a1 + 6) = BYTE6(v3);
  }
}

void sub_1008E913C()
{
}

unint64_t sub_1008E9168()
{
  return sub_1008E7258(*v0);
}

uint64_t sub_1008E9170@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1008E70D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1008E9198(uint64_t a1)
{
  unint64_t v2 = sub_1008EA16C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008E91D4(uint64_t a1)
{
  unint64_t v2 = sub_1008EA16C();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_1008E9210@<D0>(_OWORD *a1@<X8>)
{
  sub_1008E7434();
  if (!v1)
  {
    *a1 = v4;
    a1[1] = v5;
    double result = *(double *)&v6;
    a1[2] = v6;
  }
  return result;
}

void sub_1008E9254()
{
}

unint64_t sub_1008E926C()
{
  return sub_1008E79B4(*v0);
}

uint64_t sub_1008E9274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1008E76C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1008E929C(uint64_t a1)
{
  unint64_t v2 = sub_1008E96AC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008E92D8(uint64_t a1)
{
  unint64_t v2 = sub_1008E96AC();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_1008E9314@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = (void *)sub_1008E7C8C(a1, (uint64_t)__src);
  if (!v2) {
    return memcpy(a2, __src, 0x72uLL);
  }
  return result;
}

void sub_1008E9360()
{
}

uint64_t sub_1008E9378()
{
  return sub_1008E8200(*v0);
}

uint64_t sub_1008E9380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1008E8120(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1008E93A8(uint64_t a1)
{
  unint64_t v2 = sub_1008E97D4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008E93E4(uint64_t a1)
{
  unint64_t v2 = sub_1008E97D4();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1008E9420(void *a1@<X8>)
{
  sub_1008E835C();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = v4;
    a1[2] = v5;
    a1[3] = v6;
  }
}

void sub_1008E9450()
{
}

uint64_t sub_1008E9470()
{
  return sub_1008E86D8(*v0);
}

uint64_t sub_1008E9478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1008E8514(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1008E94A0(uint64_t a1)
{
  unint64_t v2 = sub_1008E957C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008E94DC(uint64_t a1)
{
  unint64_t v2 = sub_1008E957C();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1008E9518(void *a1@<X8>)
{
  sub_1008E8960();
  if (!v1) {
    memcpy(a1, v3, 0x60uLL);
  }
}

void sub_1008E9564()
{
}

unint64_t sub_1008E957C()
{
  unint64_t result = qword_100E9EFB0;
  if (!qword_100E9EFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9EFB0);
  }
  return result;
}

unint64_t sub_1008E95C8()
{
  unint64_t result = qword_100E9EFB8;
  if (!qword_100E9EFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9EFB8);
  }
  return result;
}

unint64_t sub_1008E9614()
{
  unint64_t result = qword_100E9EFD0;
  if (!qword_100E9EFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9EFD0);
  }
  return result;
}

unint64_t sub_1008E9660()
{
  unint64_t result = qword_100E9EFE8;
  if (!qword_100E9EFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9EFE8);
  }
  return result;
}

unint64_t sub_1008E96AC()
{
  unint64_t result = qword_100E9EFF8;
  if (!qword_100E9EFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9EFF8);
  }
  return result;
}

unint64_t sub_1008E96F8()
{
  unint64_t result = qword_100E9F000;
  if (!qword_100E9F000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F000);
  }
  return result;
}

uint64_t sub_1008E9744(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CLLocationCoordinate2D(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1008E9788()
{
  unint64_t result = qword_100E9F010;
  if (!qword_100E9F010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F010);
  }
  return result;
}

unint64_t sub_1008E97D4()
{
  unint64_t result = qword_100E9F020;
  if (!qword_100E9F020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F020);
  }
  return result;
}

unint64_t sub_1008E9820()
{
  unint64_t result = qword_100E9F038;
  if (!qword_100E9F038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F038);
  }
  return result;
}

unint64_t sub_1008E986C()
{
  unint64_t result = qword_100E9F048;
  if (!qword_100E9F048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F048);
  }
  return result;
}

uint64_t sub_1008E98B8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1008E9924()
{
  unint64_t result = qword_100E9F058;
  if (!qword_100E9F058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F058);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DiagnosticSummary.BundleVersion.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1008E9A3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiagnosticSummary.BundleVersion.CodingKeys()
{
  return &type metadata for DiagnosticSummary.BundleVersion.CodingKeys;
}

ValueMetadata *type metadata accessor for DiagnosticSummary.Location.CodingKeys()
{
  return &type metadata for DiagnosticSummary.Location.CodingKeys;
}

ValueMetadata *type metadata accessor for DiagnosticSummary.CodingKeys()
{
  return &type metadata for DiagnosticSummary.CodingKeys;
}

uint64_t sub_1008E9AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_DWORD *)(a1 + 41) = *(_DWORD *)(a2 + 41);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1008E9B00(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(unsigned char *)(a1 + 43) = *(unsigned char *)(a2 + 43);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  *(unsigned char *)(a1 + 45) = *(unsigned char *)(a2 + 45);
  *(unsigned char *)(a1 + 46) = *(unsigned char *)(a2 + 46);
  *(unsigned char *)(a1 + 47) = *(unsigned char *)(a2 + 47);
  return a1;
}

uint64_t sub_1008E9BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_DWORD *)(a1 + 41) = *(_DWORD *)(a2 + 41);
  *(unsigned char *)(a1 + 45) = *(unsigned char *)(a2 + 45);
  *(_WORD *)(a1 + 46) = *(_WORD *)(a2 + 46);
  return a1;
}

void type metadata accessor for DiagnosticSummary.WeatherData()
{
}

uint64_t sub_1008E9C34(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1008E9C9C(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t sub_1008E9D44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t sub_1008E9DB4(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 57))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1008E9DF4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for DiagnosticSummary.Environment()
{
}

unint64_t sub_1008E9E54()
{
  unint64_t result = qword_100E9F060;
  if (!qword_100E9F060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F060);
  }
  return result;
}

unint64_t sub_1008E9EA4()
{
  unint64_t result = qword_100E9F068;
  if (!qword_100E9F068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F068);
  }
  return result;
}

unint64_t sub_1008E9EF4()
{
  unint64_t result = qword_100E9F070;
  if (!qword_100E9F070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F070);
  }
  return result;
}

unint64_t sub_1008E9F44()
{
  unint64_t result = qword_100E9F078;
  if (!qword_100E9F078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F078);
  }
  return result;
}

unint64_t sub_1008E9F94()
{
  unint64_t result = qword_100E9F080;
  if (!qword_100E9F080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F080);
  }
  return result;
}

unint64_t sub_1008E9FE4()
{
  unint64_t result = qword_100E9F088;
  if (!qword_100E9F088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F088);
  }
  return result;
}

unint64_t sub_1008EA034()
{
  unint64_t result = qword_100E9F090;
  if (!qword_100E9F090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F090);
  }
  return result;
}

unint64_t sub_1008EA084()
{
  unint64_t result = qword_100E9F098;
  if (!qword_100E9F098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F098);
  }
  return result;
}

unint64_t sub_1008EA0D4()
{
  unint64_t result = qword_100E9F0A0;
  if (!qword_100E9F0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F0A0);
  }
  return result;
}

unint64_t sub_1008EA120()
{
  unint64_t result = qword_100E9F0B0;
  if (!qword_100E9F0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F0B0);
  }
  return result;
}

unint64_t sub_1008EA16C()
{
  unint64_t result = qword_100E9F0C0;
  if (!qword_100E9F0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F0C0);
  }
  return result;
}

unint64_t sub_1008EA1B8()
{
  unint64_t result = qword_100E9F0C8;
  if (!qword_100E9F0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F0C8);
  }
  return result;
}

unint64_t sub_1008EA204()
{
  unint64_t result = qword_100E9F0D8;
  if (!qword_100E9F0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F0D8);
  }
  return result;
}

unsigned char *_s7Weather17DiagnosticSummaryV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1008EA31CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiagnosticSummary.WeatherData.CodingKeys()
{
  return &type metadata for DiagnosticSummary.WeatherData.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for DiagnosticSummary.Environment.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1008EA420);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiagnosticSummary.Environment.CodingKeys()
{
  return &type metadata for DiagnosticSummary.Environment.CodingKeys;
}

_DWORD *sub_1008EA458(_DWORD *result, int *a2)
{
  int v2 = *a2;
  *(_DWORD *)((char *)result + 3) = *(int *)((char *)a2 + 3);
  *unint64_t result = v2;
  return result;
}

uint64_t sub_1008EA46C(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && a1[7])
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *a1;
      BOOL v4 = v3 >= 3;
      int v2 = v3 - 3;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1008EA4A8(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 6) = 0;
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 7) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 7) = 0;
    }
    if (a2) {
      *(unsigned char *)unint64_t result = a2 + 2;
    }
  }
  return result;
}

void type metadata accessor for DiagnosticSummary.ProductAvailability()
{
}

unint64_t sub_1008EA500()
{
  unint64_t result = qword_100E9F0E8;
  if (!qword_100E9F0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F0E8);
  }
  return result;
}

unint64_t sub_1008EA550()
{
  unint64_t result = qword_100E9F0F0;
  if (!qword_100E9F0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F0F0);
  }
  return result;
}

unint64_t sub_1008EA5A0()
{
  unint64_t result = qword_100E9F0F8;
  if (!qword_100E9F0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F0F8);
  }
  return result;
}

unint64_t sub_1008EA5F0()
{
  unint64_t result = qword_100E9F100;
  if (!qword_100E9F100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F100);
  }
  return result;
}

unint64_t sub_1008EA640()
{
  unint64_t result = qword_100E9F108;
  if (!qword_100E9F108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F108);
  }
  return result;
}

unint64_t sub_1008EA690()
{
  unint64_t result = qword_100E9F110;
  if (!qword_100E9F110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F110);
  }
  return result;
}

unint64_t sub_1008EA6DC()
{
  unint64_t result = qword_100E9F120;
  if (!qword_100E9F120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F120);
  }
  return result;
}

unint64_t sub_1008EA728()
{
  unint64_t result = qword_100E9F128;
  if (!qword_100E9F128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F128);
  }
  return result;
}

unint64_t sub_1008EA774()
{
  unint64_t result = qword_100E9F138;
  if (!qword_100E9F138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F138);
  }
  return result;
}

unsigned char *_s7Weather17DiagnosticSummaryV8LocationV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1008EA88CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DiagnosticSummary.ProductAvailability.CodingKeys()
{
  return &type metadata for DiagnosticSummary.ProductAvailability.CodingKeys;
}

unsigned char *sub_1008EA8C4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1008EA990);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for DiagnosticSummary.ProductAvailabilityState()
{
}

unint64_t sub_1008EA9C8()
{
  unint64_t result = qword_100E9F140;
  if (!qword_100E9F140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F140);
  }
  return result;
}

unint64_t sub_1008EAA18()
{
  unint64_t result = qword_100E9F148;
  if (!qword_100E9F148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F148);
  }
  return result;
}

unint64_t sub_1008EAA68()
{
  unint64_t result = qword_100E9F150;
  if (!qword_100E9F150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F150);
  }
  return result;
}

unint64_t sub_1008EAAB8()
{
  unint64_t result = qword_100E9F158;
  if (!qword_100E9F158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F158);
  }
  return result;
}

unint64_t sub_1008EAB04()
{
  unint64_t result = qword_100E9F160;
  if (!qword_100E9F160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F160);
  }
  return result;
}

uint64_t sub_1008EAB54()
{
  return View.modifier<A>(_:)();
}

uint64_t sub_1008EABA8(uint64_t a1)
{
  type metadata accessor for VisibilityStateHolder();
  sub_100128D4C(&qword_100E9F250, (void (*)(uint64_t))type metadata accessor for VisibilityStateHolder);
  StateObject.wrappedValue.getter();
  sub_10007C004(0, *(void *)a1, *(void *)(a1 + 8), *(uint64_t (**)(uint64_t))(a1 + 16));

  return swift_release();
}

uint64_t sub_1008EAC60(uint64_t a1, uint64_t a2)
{
  type metadata accessor for VisibilityStateHolder();
  sub_100128D4C(&qword_100E9F250, (void (*)(uint64_t))type metadata accessor for VisibilityStateHolder);
  StateObject.wrappedValue.getter();
  sub_10007C004(0, *(void *)a2, *(void *)(a2 + 8), *(uint64_t (**)(uint64_t))(a2 + 16));

  return swift_release();
}

uint64_t sub_1008EAD18(uint64_t a1, uint64_t a2)
{
  type metadata accessor for VisibilityStateHolder();
  sub_100128D4C(&qword_100E9F250, (void (*)(uint64_t))type metadata accessor for VisibilityStateHolder);
  StateObject.wrappedValue.getter();
  sub_10007C004(1, *(void *)a2, *(void *)(a2 + 8), *(uint64_t (**)(uint64_t))(a2 + 16));

  return swift_release();
}

uint64_t sub_1008EADD0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t assignWithCopy for TrackVisibilityModifier(uint64_t a1, void *a2)
{
  int v2 = a2;
  uint64_t v4 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = v2[3];
  *(void *)(a1 + 16) = v2[2];
  *(void *)(a1 + 24) = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = v2[4];
  uint64_t v7 = v2[5];
  LOBYTE(v2) = *((unsigned char *)v2 + 48);
  sub_100195B88();
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = (_BYTE)v2;
  sub_10018F6E4();
  return a1;
}

uint64_t assignWithTake for TrackVisibilityModifier(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  char v4 = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = v4;
  sub_10018F6E4();
  return a1;
}

uint64_t sub_1008EAF00()
{
  return sub_1008EABA8(v0 + 16);
}

uint64_t sub_1008EAF0C(uint64_t a1)
{
  return sub_1008EAC60(a1, v1 + 16);
}

uint64_t sub_1008EAF18(uint64_t a1)
{
  return sub_1008EAD18(a1, v1 + 16);
}

uint64_t sub_1008EAF20()
{
  return sub_1001246C8(&qword_100E9F258, &qword_100E9F248);
}

uint64_t sub_1008EAF5C()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 88);
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 136);
  return v0;
}

uint64_t sub_1008EAFAC()
{
  sub_1008EAF5C();

  return swift_deallocClassInstance();
}

ValueMetadata *type metadata accessor for MoonScrubberGradientMask()
{
  return &type metadata for MoonScrubberGradientMask;
}

uint64_t sub_1008EAFF0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1008EB00C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = static VerticalAlignment.center.getter();
  static UnitPoint.trailing.getter();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  static UnitPoint.leading.getter();
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  static UnitPoint.leading.getter();
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t result = static UnitPoint.trailing.getter();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = 0;
  *(unsigned char *)(a1 + 64) = 1;
  *(void *)(a1 + 72) = v12;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v16;
  *(void *)(a1 + 96) = v17;
  *(unsigned char *)(a1 + 104) = 1;
  return result;
}

ValueMetadata *type metadata accessor for GradientMask()
{
  return &type metadata for GradientMask;
}

unint64_t sub_1008EB0B4()
{
  unint64_t result = qword_100E9F330;
  if (!qword_100E9F330)
  {
    sub_10018C6DC(&qword_100E9F338);
    sub_1001246C8(&qword_100E9F340, &qword_100E9F348);
    sub_10082D3C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F330);
  }
  return result;
}

uint64_t sub_1008EB154()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1008EB170@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v1 = type metadata accessor for _BlendModeEffect();
  __chkstk_darwin(v1 - 8);
  uint64_t v26 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for BlendMode();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E9F350);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E646B0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_100C25ED0;
  *(void *)(v11 + 32) = static Color.clear.getter();
  *(void *)(v11 + 40) = static Color.white.getter();
  uint64_t v32 = v11;
  specialized Array._endMutation()();
  Gradient.init(colors:)();
  LinearGradient.init(gradient:startPoint:endPoint:)();
  uint64_t v12 = v28;
  long long v25 = v29;
  uint64_t v13 = v30;
  uint64_t v14 = v31;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v15 = v32;
  char v16 = v33;
  uint64_t v24 = v34;
  int v23 = v35;
  uint64_t v17 = v37;
  uint64_t v22 = v36;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for BlendMode.destinationOut(_:), v3);
  uint64_t v18 = (uint64_t)v26;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v26, v6, v3);
  sub_1005173D0(v18, (uint64_t)&v10[*(int *)(v8 + 44)]);
  *(void *)uint64_t v10 = v12;
  *(_OWORD *)(v10 + 8) = v25;
  *((void *)v10 + 3) = v13;
  *((void *)v10 + 4) = v14;
  *((_WORD *)v10 + 20) = 0;
  *((void *)v10 + 6) = v15;
  v10[56] = v16;
  *((void *)v10 + 8) = v24;
  v10[72] = v23;
  *((void *)v10 + 10) = v22;
  *((void *)v10 + 11) = v17;
  swift_bridgeObjectRetain();
  sub_1000D8C98(v18);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_100295014((uint64_t)&v28);
  uint64_t v19 = v27;
  sub_1008EB49C((uint64_t)v10, v27);
  *(unsigned char *)(v19 + *(int *)(sub_10017DF08(&qword_100E9F358) + 36)) = 0;
  return sub_1008EB504((uint64_t)v10);
}

uint64_t sub_1008EB490@<X0>(uint64_t a1@<X8>)
{
  return sub_1008EB170(a1);
}

uint64_t sub_1008EB49C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E9F350);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1008EB504(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E9F350);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1008EB568()
{
  unint64_t result = qword_100E9F360;
  if (!qword_100E9F360)
  {
    sub_10018C6DC(&qword_100E9F358);
    sub_1008EB5E4();
    sub_100123BE4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F360);
  }
  return result;
}

unint64_t sub_1008EB5E4()
{
  unint64_t result = qword_100E9F368;
  if (!qword_100E9F368)
  {
    sub_10018C6DC(&qword_100E9F350);
    sub_1008EB660();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F368);
  }
  return result;
}

unint64_t sub_1008EB660()
{
  unint64_t result = qword_100E9F370;
  if (!qword_100E9F370)
  {
    sub_10018C6DC(&qword_100E9F378);
    sub_1001246C8(&qword_100E9F380, &qword_100E9F388);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9F370);
  }
  return result;
}

void sub_1008EB700()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [self sharedApplication];
  uint64_t v5 = (void *)UIApplication.maybeWindow.getter();

  sub_1008EBA4C();
  id v6 = sub_1008EB964(0xD00000000000001CLL, 0x8000000100CAD7E0);
  if (v6)
  {
    if (v5)
    {
      id v15 = v6;
      id v14 = v5;
      id v7 = [v14 rootViewController];
      if (v7)
      {
        uint64_t v8 = v7;
        uint64_t v9 = sub_1008EB9D4(v7);
        if (v9)
        {
          uint64_t v10 = v9;
          [v15 setPresentingViewController:v9];
          [v15 setDarkMode:1];
          [v15 present];
        }
        else
        {
        }
      }

      id v6 = v14;
    }
  }
  else
  {
    static Logger.privacy.getter();
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Failed to find privacy bundle for Weather", v13, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
}

id sub_1008EB964(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    NSString v2 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v2 = 0;
  }
  id v3 = [(id)swift_getObjCClassFromMetadata() presenterForPrivacySplashWithIdentifier:v2];

  return v3;
}

void *sub_1008EB9D4(void *a1)
{
  uint64_t v1 = a1;
  id v2 = [a1 presentedViewController];
  if (v2)
  {
    id v3 = v2;
    uint64_t v1 = (void *)sub_1008EB9D4();
  }
  else
  {
    id v4 = v1;
  }
  return v1;
}

uint64_t type metadata accessor for PrivacySplashPresenter()
{
  return self;
}

unint64_t sub_1008EBA4C()
{
  unint64_t result = qword_100E9F428;
  if (!qword_100E9F428)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100E9F428);
  }
  return result;
}

ValueMetadata *type metadata accessor for TemperatureComparisonTextBuilder()
{
  return &type metadata for TemperatureComparisonTextBuilder;
}

NSObject *sub_1008EBA9C(uint64_t a1)
{
  sub_10017DF08(&qword_100E65250);
  sub_100179C0C();
  uint64_t v39 = v2;
  __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  id v6 = ((char *)&v37 - v5);
  uint64_t v7 = sub_10017DF08(&qword_100E6BCB0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  os_log_type_t v12 = (char *)&v37 - v11;
  uint64_t v13 = type metadata accessor for ConditionUnits();
  sub_100179C0C();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (int *)type metadata accessor for PastDataComparisonTextContext();
  uint64_t v20 = a1 + v19[9];
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  char v40 = v18;
  v21(v18, v20, v13);
  sub_10047AA38(a1 + v19[12], (uint64_t)v12);
  uint64_t v22 = type metadata accessor for ExtremaResult();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v22) == 1) {
    goto LABEL_4;
  }
  uint64_t v37 = v15;
  uint64_t v38 = v13;
  ExtremaResult.maxValue.getter();
  int v23 = *(void (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8);
  v23(v12, v22);
  sub_10047AA38(a1 + v19[10], (uint64_t)v9);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v22) == 1)
  {
    os_log_type_t v12 = v9;
    uint64_t v15 = v37;
    uint64_t v13 = v38;
LABEL_4:
    sub_10047AAA0((uint64_t)v12);
    if (qword_100E627E8 != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    sub_1002102B0(v24, (uint64_t)qword_100F51ED0);
    long long v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Missing extrema values for building temperature comparison text", v27, 2u);
      swift_slowDealloc();
    }

    LocalizedStringKey.init(stringLiteral:)();
    sub_10017A2E0();
    goto LABEL_9;
  }
  ExtremaResult.maxValue.getter();
  v23(v9, v22);
  ConditionUnits.temperature.getter();
  sub_1001433AC();
  Measurement.init(value:unit:)();
  long long v29 = self;
  id v30 = [v29 fahrenheit];
  Measurement<>.converted(to:)();

  uint64_t v31 = *(void (**)(void))(v39 + 8);
  sub_10017D7D4();
  v31();
  Measurement.value.getter();
  double v33 = v32;
  sub_10017D7D4();
  v31();
  ConditionUnits.temperature.getter();
  Measurement.init(value:unit:)();
  id v34 = [v29 fahrenheit];
  Measurement<>.converted(to:)();

  sub_10017D7D4();
  v31();
  long long v25 = v6;
  Measurement.value.getter();
  double v36 = v35;
  sub_10017D7D4();
  v31();
  if (round(v36) - round(v33) >= 5.0)
  {
    LocalizedStringKey.init(stringLiteral:)();
    sub_10017A2E0();
    Text.init(_:tableName:bundle:comment:)();
    sub_10019F424();
    uint64_t v15 = v37;
    uint64_t v13 = v38;
    goto LABEL_10;
  }
  uint64_t v15 = v37;
  uint64_t v13 = v38;
  sub_10017A258();
  sub_10017A2E0();
LABEL_9:
  Text.init(_:tableName:bundle:comment:)();
  sub_10019F424();
LABEL_10:
  (*(void (**)(char *, uint64_t))(v15 + 8))(v40, v13);
  return v25;
}

NSObject *sub_1008EBFFC(uint64_t a1)
{
  return sub_1008EBA9C(a1);
}

void *sub_1008EC020(char a1, char a2, uint64_t a3)
{
  uint64_t v94 = a3;
  uint64_t v6 = type metadata accessor for TipPriorityQueue.GridEntry();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100162EF8();
  uint64_t v93 = v8;
  __chkstk_darwin(v9);
  uint64_t v92 = (uint64_t)&v71 - v10;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v71 - v12;
  uint64_t v14 = sub_10017DF08(&qword_100E64E80);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_10008B8C0();
  uint64_t v16 = type metadata accessor for LocationComponentViewModel();
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v71 - v21;
  uint64_t v23 = sub_10017DF08(&qword_100E6CCD8);
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_100162EF8();
  uint64_t v91 = v25;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v71 - v27;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v71 - v30;
  __chkstk_darwin(v32);
  id v34 = (char *)&v71 - v33;
  if (a1)
  {
    if (a1 == 1)
    {
      if (a2)
      {
        double v35 = &qword_100E9F800;
        goto LABEL_11;
      }
    }
    else if (a2)
    {
      double v35 = &qword_100E9FBD0;
      goto LABEL_11;
    }
    double v35 = &qword_100E9F9E8;
  }
  else if (a2)
  {
    double v35 = &qword_100E9F430;
  }
  else
  {
    double v35 = &qword_100E9F618;
  }
LABEL_11:
  char v36 = *((unsigned char *)v35 + 224);
  uint64_t v37 = *v35;
  uint64_t v77 = v35[1];
  uint64_t v78 = v37;
  uint64_t v76 = v35[2];
  uint64_t v75 = v35[3];
  uint64_t v38 = v35[8];
  uint64_t v81 = v35[9];
  uint64_t v82 = v38;
  uint64_t v39 = v35[10];
  uint64_t v79 = v35[11];
  uint64_t v80 = v39;
  uint64_t v74 = v35[24];
  uint64_t v73 = v35[25];
  uint64_t v72 = v35[26];
  uint64_t v71 = v35[27];
  uint64_t v40 = v35[49];
  uint64_t v85 = v35[50];
  uint64_t v86 = v40;
  uint64_t v41 = v35[51];
  uint64_t v83 = v35[52];
  uint64_t v84 = v41;
  uint64_t v42 = v35[57];
  uint64_t v89 = v35[58];
  uint64_t v90 = v42;
  uint64_t v43 = v94 + OBJC_IVAR____TtCV7Weather17MinorAlertContent8_Storage_map;
  uint64_t v45 = v35[59];
  uint64_t v44 = v35[60];
  uint64_t v87 = v45;
  uint64_t v88 = v44;
  swift_beginAccess();
  sub_10006DF38(v43, v3, &qword_100E64E80);
  uint64_t v46 = type metadata accessor for LocationComponentContainerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0(v3, 1, v46) == 1)
  {
    sub_1001781AC(v3, &qword_100E64E80);
LABEL_16:
    uint64_t v47 = 1;
    goto LABEL_17;
  }
  sub_10031F6A8(v3 + *(int *)(v46 + 20), (uint64_t)v19, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  sub_10031F75C(v3, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_10031F6FC((uint64_t)v19, (uint64_t)v22, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  if (v36)
  {
    sub_10031F75C((uint64_t)v22, (void (*)(void))type metadata accessor for LocationComponentViewModel);
    goto LABEL_16;
  }
  sub_10031F6FC((uint64_t)v22, (uint64_t)v31, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v47 = 0;
  uint64_t v48 = &v31[*(int *)(v6 + 20)];
  uint64_t v49 = v73;
  *(void *)uint64_t v48 = v74;
  *((void *)v48 + 1) = v49;
  uint64_t v50 = v71;
  *((void *)v48 + 2) = v72;
  *((void *)v48 + 3) = v50;
LABEL_17:
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, v47, 1, v6);
  sub_10031F640((uint64_t)v31, (uint64_t)v34);
  sub_10031F6A8(v94 + *(int *)(v46 + 20) + OBJC_IVAR____TtCV7Weather17MinorAlertContent8_Storage_airQuality, (uint64_t)v28, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v51 = &v28[*(int *)(v6 + 20)];
  uint64_t v52 = v77;
  *(void *)uint64_t v51 = v78;
  *((void *)v51 + 1) = v52;
  uint64_t v53 = v75;
  *((void *)v51 + 2) = v76;
  *((void *)v51 + 3) = v53;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v6);
  uint64_t v54 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
  sub_10031F6A8(v54, (uint64_t)v13, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v55 = &v13[*(int *)(v6 + 20)];
  uint64_t v56 = v81;
  *(void *)uint64_t v55 = v82;
  *((void *)v55 + 1) = v56;
  uint64_t v57 = v79;
  *((void *)v55 + 2) = v80;
  *((void *)v55 + 3) = v57;
  uint64_t v58 = v91;
  sub_10006DF38((uint64_t)v34, v91, &qword_100E6CCD8);
  uint64_t v59 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
  uint64_t v60 = v92;
  sub_10031F6A8(v59, v92, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v61 = (uint64_t *)(v60 + *(int *)(v6 + 20));
  uint64_t v62 = v85;
  *uint64_t v61 = v86;
  v61[1] = v62;
  uint64_t v63 = v83;
  v61[2] = v84;
  v61[3] = v63;
  uint64_t v64 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
  uint64_t v65 = v93;
  sub_10031F6A8(v64, v93, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v66 = (uint64_t *)(v65 + *(int *)(v6 + 20));
  uint64_t v67 = v89;
  uint64_t *v66 = v90;
  v66[1] = v67;
  uint64_t v68 = v88;
  v66[2] = v87;
  v66[3] = v68;
  uint64_t v69 = sub_100AD6D18((uint64_t)v28, (uint64_t)v13, v58, v60, v65);
  sub_1001781AC((uint64_t)v34, &qword_100E6CCD8);
  return v69;
}

uint64_t sub_1008EC5FC(uint64_t a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E64E80);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_10008B8C0();
  uint64_t v10 = a1 + OBJC_IVAR____TtCV7Weather17MinorAlertContent8_Storage_map;
  swift_beginAccess();
  sub_10006DF38(v10, v7, &qword_100E64E80);
  uint64_t v105 = a1;
  if (_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8) == 1)
  {
    sub_1001781AC(v7, &qword_100E64E80);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100C367B0;
    sub_10017DF08(&qword_100E6CCD0);
    unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v13 = *(void *)(v9 + 72);
    uint64_t v14 = (__n128 *)swift_allocObject();
    uint64_t v15 = sub_100183900(v14, (__n128)xmmword_100C251B0);
    sub_10031F6A8(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v15 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 32) = sub_1001F24CC((uint64_t)v14);
    *(void *)(v11 + 40) = v16;
    *(void *)(v11 + 48) = v17;
    uint64_t v18 = (__n128 *)swift_allocObject();
    sub_100181608(v18);
    sub_10031F6A8(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v19, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 56) = sub_1001F24CC((uint64_t)v18);
    *(void *)(v11 + 64) = v20;
    *(void *)(v11 + 72) = v21;
    uint64_t v22 = (__n128 *)sub_100163204();
    sub_100181608(v22);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather17MinorAlertContent8_Storage_airQuality, v23, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 80) = sub_1001F24CC((uint64_t)v22);
    *(void *)(v11 + 88) = v24;
    *(void *)(v11 + 96) = v25;
    uint64_t v26 = (__n128 *)sub_100163204();
    sub_100181608(v26);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather17MinorAlertContent8_Storage_severeAlert, v27, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 104) = sub_1001F24CC((uint64_t)v26);
    *(void *)(v11 + 112) = v28;
    *(void *)(v11 + 120) = v29;
    uint64_t v30 = v13;
    uint64_t v31 = (__n128 *)swift_allocObject();
    uint64_t v32 = (char *)sub_100183900(v31, (__n128)xmmword_100C25ED0) + v12;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
    sub_1001859A8((uint64_t)&v32[v30], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset);
    *(void *)(v11 + 128) = sub_1001F24CC((uint64_t)v31);
    *(void *)(v11 + 136) = v33;
    *(void *)(v11 + 144) = v34;
    double v35 = (__n128 *)swift_allocObject();
    sub_10016324C(v35);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_1001859A8((uint64_t)&v32[v30], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal);
    *(void *)(v11 + 152) = sub_1001F24CC((uint64_t)v31);
    *(void *)(v11 + 160) = v36;
    *(void *)(v11 + 168) = v37;
    uint64_t v38 = (__n128 *)swift_allocObject();
    sub_10016324C(v38);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_1001859A8((uint64_t)&v32[v30], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity);
    *(void *)(v11 + 176) = sub_1001F24CC((uint64_t)v31);
    *(void *)(v11 + 184) = v39;
    *(void *)(v11 + 192) = v40;
    uint64_t v41 = sub_100163204();
    *(_OWORD *)(v41 + 16) = v106;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_1001859A8(v41 + v12 + v30, OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure);
    *(void *)(v11 + 200) = sub_1001F24CC(v41);
    *(void *)(v11 + 208) = v42;
    *(void *)(v11 + 216) = v43;
    uint64_t v44 = (__n128 *)swift_allocObject();
    sub_100179F48(v44);
    uint64_t v46 = v45 + v12;
    uint64_t v47 = *(void *)(a1 + 16);
    sub_10031F6A8(v47 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v45 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v47 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v46 + v30, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 224) = sub_1001F24CC((uint64_t)v44);
    *(void *)(v11 + 232) = v48;
    *(void *)(v11 + 240) = v49;
  }
  else
  {
    sub_10031F6FC(v7, v1, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100C28110;
    sub_10017DF08(&qword_100E6CCD0);
    uint64_t v104 = *(void *)(v9 + 72);
    uint64_t v103 = v1;
    unint64_t v50 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v51 = (__n128 *)swift_allocObject();
    uint64_t v52 = sub_100183900(v51, (__n128)xmmword_100C251B0);
    sub_10031F6A8(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v52 + v50, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 32) = sub_1001F24CC((uint64_t)v51);
    *(void *)(v11 + 40) = v53;
    *(void *)(v11 + 48) = v54;
    uint64_t v55 = (__n128 *)sub_10017C984();
    sub_100179F54(v55);
    sub_10031F6A8(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v56, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 56) = sub_1001F24CC((uint64_t)v55);
    *(void *)(v11 + 64) = v57;
    *(void *)(v11 + 72) = v58;
    uint64_t v59 = (__n128 *)sub_10017C984();
    sub_100179F54(v59);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather17MinorAlertContent8_Storage_airQuality, v60, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 80) = sub_1001F24CC((uint64_t)v59);
    *(void *)(v11 + 88) = v61;
    *(void *)(v11 + 96) = v62;
    uint64_t v63 = (__n128 *)sub_10017C984();
    sub_100179F54(v63);
    sub_10031F6A8(v1, v64, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 104) = sub_1001F24CC((uint64_t)v63);
    *(void *)(v11 + 112) = v65;
    *(void *)(v11 + 120) = v66;
    uint64_t v67 = (__n128 *)sub_10017C984();
    sub_100179F54(v67);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather17MinorAlertContent8_Storage_severeAlert, v68, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 128) = sub_1001F24CC((uint64_t)v67);
    *(void *)(v11 + 136) = v69;
    *(void *)(v11 + 144) = v70;
    uint64_t v71 = (__n128 *)swift_allocObject();
    uint64_t v72 = (char *)sub_100183900(v71, (__n128)xmmword_100C25ED0) + v50;
    uint64_t v73 = a1;
    uint64_t v74 = *(void *)(a1 + 16);
    uint64_t v75 = v73;
    sub_10031F6A8(v74 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v72, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v74 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v72[v104], (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 152) = sub_1001F24CC((uint64_t)v71);
    *(void *)(v11 + 160) = v76;
    *(void *)(v11 + 168) = v77;
    uint64_t v78 = (__n128 *)swift_allocObject();
    sub_100179F48(v78);
    uint64_t v80 = v79 + v50;
    uint64_t v81 = *(void *)(v75 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_10031F6A8(v81 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, v80 + v104, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 176) = sub_1001F24CC((uint64_t)v78);
    *(void *)(v11 + 184) = v82;
    *(void *)(v11 + 192) = v83;
    uint64_t v84 = (__n128 *)swift_allocObject();
    sub_100179F48(v84);
    uint64_t v86 = v85 + v50;
    uint64_t v87 = *(void *)(v105 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_10031F6A8(v87 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, v86 + v104, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 200) = sub_1001F24CC((uint64_t)v84);
    *(void *)(v11 + 208) = v88;
    *(void *)(v11 + 216) = v89;
    uint64_t v90 = (__n128 *)swift_allocObject();
    sub_100179F48(v90);
    uint64_t v92 = v91 + v50;
    uint64_t v93 = *(void *)(v105 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_10031F6A8(v93 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, v92 + v104, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 224) = sub_1001F24CC((uint64_t)v90);
    *(void *)(v11 + 232) = v94;
    *(void *)(v11 + 240) = v95;
    uint64_t v96 = (__n128 *)swift_allocObject();
    sub_100179F48(v96);
    uint64_t v98 = v97 + v50;
    uint64_t v99 = *(void *)(v105 + 16);
    sub_10031F6A8(v99 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v97 + v50, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v99 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v98 + v104, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 248) = sub_1001F24CC((uint64_t)v96);
    *(void *)(v11 + 256) = v100;
    *(void *)(v11 + 264) = v101;
    sub_10031F75C(v103, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  }
  return v11;
}

void sub_1008ECE70(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = type metadata accessor for LocationComponentContainerViewModel();
  sub_100162E4C();
  uint64_t v6 = __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  uint64_t v7 = type metadata accessor for LocationViewComponent();
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_10017DF08(&qword_100E64E80);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = swift_retain();
  sub_1006E2E94(v17, a2);
  swift_release();
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather31LocationMinorAlertConfiguration8_Storage_map, v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v11);
  sub_10031F75C(v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  _s7Weather24LocationCompositionStateOwst_0(v16, 0, 1, v4);
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather31LocationMinorAlertConfiguration8_Storage_airQuality, v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v11);
  sub_10031F75C(v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather31LocationMinorAlertConfiguration8_Storage_severeAlert, v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v11);
  sub_10031F75C(v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_1002DB15C();
}

uint64_t sub_1008ED09C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_10017DF08(&qword_100E9FDC0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Dictionary.init(dictionaryLiteral:)();
  ShortDescription.init(name:_:)();
  a1[3] = v2;
  a1[4] = sub_1008ED298();
  uint64_t v6 = sub_100170694(a1);
  return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v3 + 32))(v6, v5, v2);
}

uint64_t sub_1008ED204@<X0>(uint64_t *a1@<X8>)
{
  return sub_1008ED09C(a1);
}

uint64_t sub_1008ED20C()
{
  sub_1008ED2EC();

  return ShortDescribable.description.getter();
}

unint64_t sub_1008ED24C()
{
  unint64_t result = qword_100E9FDB8;
  if (!qword_100E9FDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9FDB8);
  }
  return result;
}

unint64_t sub_1008ED298()
{
  unint64_t result = qword_100E9FDC8;
  if (!qword_100E9FDC8)
  {
    sub_10018C6DC(&qword_100E9FDC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9FDC8);
  }
  return result;
}

unint64_t sub_1008ED2EC()
{
  unint64_t result = qword_100E9FDD0;
  if (!qword_100E9FDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9FDD0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for UnitsConfigurationViewAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1008ED404);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UnitsConfigurationViewAction()
{
  return &type metadata for UnitsConfigurationViewAction;
}

unint64_t sub_1008ED440()
{
  unint64_t result = qword_100E9FDD8[0];
  if (!qword_100E9FDD8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100E9FDD8);
  }
  return result;
}

uint64_t *sub_1008ED48C()
{
  uint64_t v1 = *v0;
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*v0 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 112));
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 88) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 120));
  return v0;
}

uint64_t sub_1008ED558()
{
  sub_1008ED48C();

  return swift_deallocClassInstance();
}

uint64_t *sub_1008ED5B0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Elevation();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (uint64_t *)((char *)a1 + v8);
    uint64_t v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    uint64_t v13 = (uint64_t *)((char *)a1 + v9);
    uint64_t v14 = (uint64_t *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1008ED6A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Elevation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1008ED728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Elevation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  uint64_t v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  void *v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1008ED7C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Elevation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1008ED890(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Elevation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1008ED914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Elevation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1008ED9BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1008ED9D0);
}

uint64_t sub_1008ED9D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Elevation();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_1008EDA60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1008EDA74);
}

void sub_1008EDA74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Elevation();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
}

uint64_t type metadata accessor for ElevationData()
{
  uint64_t result = qword_100E9FED8;
  if (!qword_100E9FED8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1008EDB48()
{
  uint64_t result = type metadata accessor for Elevation();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

BOOL sub_1008EDBE0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v33 = a1[6];
  uint64_t v31 = a1[8];
  uint64_t v32 = a1[7];
  uint64_t v27 = a1[10];
  uint64_t v26 = a1[11];
  uint64_t v22 = a1[13];
  uint64_t v23 = a1[12];
  uint64_t v6 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  uint64_t v9 = a2[5];
  uint64_t v10 = a2[6];
  uint64_t v11 = a2[7];
  uint64_t v29 = a2[8];
  uint64_t v30 = a1[9];
  uint64_t v28 = a2[9];
  uint64_t v24 = a2[11];
  uint64_t v25 = a2[10];
  BOOL v12 = *a1 == *a2 && a1[1] == a2[1];
  uint64_t v20 = a2[12];
  uint64_t v21 = a2[13];
  BOOL result = 0;
  if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    BOOL v13 = v2 == v6 && v3 == v7;
    if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      BOOL v14 = v4 == v8 && v5 == v9;
      if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        BOOL v15 = v33 == v10 && v32 == v11;
        if (v15 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          BOOL v16 = v31 == v29 && v30 == v28;
          if (v16 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            BOOL v17 = v27 == v25 && v26 == v24;
            if (v17 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              BOOL v18 = v23 == v20 && v22 == v21;
              if (v18 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
                return 1;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1008EDDC0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10017DF08(&qword_100E9FF18);
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(a1, a1[3]);
  sub_1008EDF78();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  sub_1008EDFC4();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
  long long v21 = v24;
  long long v22 = v23;
  long long v20 = v25;
  long long v19 = v26;
  long long v18 = v27;
  long long v17 = v28;
  uint64_t v11 = v29;
  uint64_t v12 = v30;
  uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  long long v14 = v21;
  *(_OWORD *)a2 = v22;
  *(_OWORD *)(a2 + 16) = v14;
  long long v15 = v19;
  *(_OWORD *)(a2 + 32) = v20;
  *(_OWORD *)(a2 + 48) = v15;
  long long v16 = v17;
  *(_OWORD *)(a2 + 64) = v18;
  *(_OWORD *)(a2 + 80) = v16;
  *(void *)(a2 + 96) = v11;
  *(void *)(a2 + 104) = v12;
  return result;
}

unint64_t sub_1008EDF78()
{
  unint64_t result = qword_100E9FF20;
  if (!qword_100E9FF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9FF20);
  }
  return result;
}

unint64_t sub_1008EDFC4()
{
  unint64_t result = qword_100E9FF28;
  if (!qword_100E9FF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9FF28);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PrecipitationTotalComponent.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1008EE0ACLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PrecipitationTotalComponent.CodingKeys()
{
  return &type metadata for PrecipitationTotalComponent.CodingKeys;
}

ValueMetadata *type metadata accessor for PrecipitationTotalComponent()
{
  return &type metadata for PrecipitationTotalComponent;
}

uint64_t sub_1008EE0F4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x8000000100CA1B90)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1008EE17C()
{
  return 0xD000000000000010;
}

uint64_t sub_1008EE198(void *a1)
{
  char v2 = v1;
  uint64_t v4 = sub_10017DF08(&qword_100E9FF48);
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  uint64_t v9 = &__dst[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001B1E64(a1, a1[3]);
  sub_1008EDF78();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  memcpy(__dst, v2, sizeof(__dst));
  sub_1008EE4C0();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v4);
}

uint64_t sub_1008EE2C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1008EE0F4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1008EE2F0(uint64_t a1)
{
  unint64_t v2 = sub_1008EDF78();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008EE32C(uint64_t a1)
{
  unint64_t v2 = sub_1008EDF78();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_1008EE368@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = (void *)sub_1008EDDC0(a1, (uint64_t)v5);
  if (!v2) {
    return memcpy(a2, v5, 0x70uLL);
  }
  return result;
}

uint64_t sub_1008EE3B4(void *a1)
{
  return sub_1008EE198(a1);
}

unint64_t sub_1008EE3D4()
{
  unint64_t result = qword_100E9FF30;
  if (!qword_100E9FF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9FF30);
  }
  return result;
}

unint64_t sub_1008EE424()
{
  unint64_t result = qword_100E9FF38;
  if (!qword_100E9FF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9FF38);
  }
  return result;
}

unint64_t sub_1008EE474()
{
  unint64_t result = qword_100E9FF40;
  if (!qword_100E9FF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9FF40);
  }
  return result;
}

unint64_t sub_1008EE4C0()
{
  unint64_t result = qword_100E9FF50;
  if (!qword_100E9FF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9FF50);
  }
  return result;
}

uint64_t destroy for AirPollutantTableView(uint64_t a1)
{
  sub_10018F6D8(*(void *)a1, *(unsigned char *)(a1 + 8));
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AirPollutantTableView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v5);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AirPollutantTableView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  char v5 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v5);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_10018F6D8(v6, v7);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AirPollutantTableView(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  char v5 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *(void *)a1;
  char v7 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = v5;
  sub_10018F6D8(v6, v7);
  *(void *)(a1 + 16) = a2[2];
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AirPollutantTableView()
{
  return &type metadata for AirPollutantTableView;
}

uint64_t sub_1008EE6C0()
{
  return swift_getOpaqueTypeConformance2();
}

double sub_1008EE6DC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)v1;
  char v4 = *(unsigned char *)(v1 + 8);
  sub_100195B7C(*(void *)v1, v4);
  sub_100149AE8();
  sub_10018F6D8(v3, v4);
  sub_1008F0244();
  sub_1008F0290();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _ConditionalContent<>.init(storage:)();
  double result = *(double *)&v6;
  *(_OWORD *)a1 = v6;
  *(_OWORD *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  return result;
}

uint64_t sub_1008EE7D0(uint64_t a1, uint64_t a2, uint64_t a3, double a4)
{
  uint64_t v8 = sub_10017DF08(&qword_100E9FFB8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = static HorizontalAlignment.leading.getter();
  uint64_t v12 = static VerticalAlignment.firstTextBaseline.getter();
  *(void *)uint64_t v10 = v11;
  *((void *)v10 + 1) = v12;
  *((void *)v10 + 2) = 0x4030000000000000;
  v10[24] = 0;
  *((double *)v10 + 4) = a4;
  v10[40] = 0;
  sub_10017DF08(&qword_100E9FFC0);
  v15[1] = a3;
  swift_getKeyPath();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  *(void *)(v13 + 32) = a3;
  *(double *)(v13 + 40) = a4;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100E9FF80);
  sub_10017DF08(&qword_100E9FFC8);
  sub_1001246C8(&qword_100E9FF90, &qword_100E9FF80);
  sub_1008F04BC();
  sub_1001246C8(&qword_100E9FFD0, &qword_100E9FFC8);
  ForEach<>.init(_:id:content:)();
  static Alignment.center.getter();
  sub_100BD8490();
  return sub_1001781AC((uint64_t)v10, &qword_100E9FFB8);
}

uint64_t sub_1008EEA18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v67 = a3;
  uint64_t v60 = type metadata accessor for Divider();
  uint64_t v59 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v58 = (char *)v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_10017DF08(&qword_100E9FFD8);
  __chkstk_darwin(v65);
  uint64_t v57 = (char *)v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E9FFE0);
  __chkstk_darwin(v6 - 8);
  uint64_t v66 = (uint64_t)v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v64 = (uint64_t)v52 - v9;
  uint64_t v10 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_10017DF08(&qword_100E9FFE8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100E9FFF0);
  __chkstk_darwin(v14 - 8);
  long long v16 = (char *)v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  long long v19 = (char *)v52 - v18;
  long long v20 = *(_OWORD *)(a1 + 16);
  Swift::String v71 = *(Swift::String *)a1;
  *(_OWORD *)uint64_t v72 = v20;
  uint64_t v56 = *(void *)(a1 + 32);
  *(void *)&v72[16] = v56;
  uint64_t v55 = *(void *)a1;
  uint64_t v54 = *(void *)(a1 + 8);
  uint64_t v53 = *(void **)(a1 + 16);
  v52[1] = *(void *)(a1 + 24);
  v13[8] = 1;
  uint64_t v21 = (uint64_t)&v13[*(int *)(v11 + 36)];
  *(void *)uint64_t v13 = 0;
  sub_1008EF0D8(&v71._countAndFlagsBits, v21);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v22._uint64_t countAndFlagsBits = 0;
  v22._uint64_t object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v22);
  uint64_t object = v71._object;
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v71);
  v23._uint64_t countAndFlagsBits = 8236;
  v23._uint64_t object = (void *)0xE200000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v23);
  uint64_t v61 = *(void *)&v72[16];
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(*(Swift::String *)&v72[8]);
  v24._uint64_t countAndFlagsBits = 0;
  v24._uint64_t object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v24);
  LocalizedStringKey.init(stringInterpolation:)();
  uint64_t v25 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v27 = v26;
  char v29 = v28 & 1;
  sub_1001246C8(&qword_100E9FFF8, &qword_100E9FFE8);
  View.accessibilityLabel(_:)();
  sub_100191924(v25, v27, v29);
  swift_bridgeObjectRelease();
  sub_1001781AC((uint64_t)v13, &qword_100E9FFE8);
  sub_10020E72C((uint64_t)v16, (uint64_t)v19, &qword_100E9FFF0);
  uint64_t v30 = *(void **)v72;
  sub_100304290(v63, v68);
  uint64_t v31 = v68[0];
  uint64_t v32 = v68[1];
  uint64_t v34 = (void *)v68[2];
  uint64_t v33 = v68[3];
  uint64_t v35 = v68[4];
  sub_10020E72C((uint64_t)v68, (uint64_t)v69, &qword_100E9FFA8);
  if (!v70)
  {
    swift_bridgeObjectRetain();
    id v42 = v30;
    swift_bridgeObjectRetain();
    sub_1008F0508(v55, v54, v53);
    sub_1008F0508(v31, v32, v34);
    goto LABEL_5;
  }
  v73[0] = v31;
  v73[1] = v32;
  v73[2] = v34;
  v73[3] = v33;
  v73[4] = v35;
  swift_bridgeObjectRetain_n();
  id v36 = v30;
  swift_bridgeObjectRetain_n();
  id v37 = v36;
  char v38 = sub_1005A7564(&v71, v73);
  swift_bridgeObjectRelease_n();

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  if ((v38 & 1) == 0)
  {
LABEL_5:
    uint64_t v43 = v58;
    Divider.init()();
    char v44 = static Axis.Set.horizontal.getter();
    uint64_t v45 = v59;
    uint64_t v46 = (uint64_t)v57;
    uint64_t v47 = v60;
    (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v57, v43, v60);
    uint64_t v40 = v65;
    *(unsigned char *)(v46 + *(int *)(v65 + 36)) = v44;
    (*(void (**)(char *, uint64_t))(v45 + 8))(v43, v47);
    uint64_t v41 = v64;
    sub_10020E72C(v46, v64, &qword_100E9FFD8);
    uint64_t v39 = 0;
    goto LABEL_6;
  }
  uint64_t v39 = 1;
  uint64_t v40 = v65;
  uint64_t v41 = v64;
LABEL_6:
  _s7Weather24LocationCompositionStateOwst_0(v41, v39, 1, v40);
  sub_1001262FC((uint64_t)v19, (uint64_t)v16, &qword_100E9FFF0);
  uint64_t v48 = v66;
  sub_1001262FC(v41, v66, &qword_100E9FFE0);
  uint64_t v49 = v67;
  sub_1001262FC((uint64_t)v16, v67, &qword_100E9FFF0);
  uint64_t v50 = sub_10017DF08(&qword_100EA0000);
  sub_1001262FC(v48, v49 + *(int *)(v50 + 48), &qword_100E9FFE0);
  sub_1001781AC(v41, &qword_100E9FFE0);
  sub_1001781AC((uint64_t)v19, &qword_100E9FFF0);
  sub_1001781AC(v48, &qword_100E9FFE0);
  return sub_1001781AC((uint64_t)v16, &qword_100E9FFF0);
}

uint64_t sub_1008EF0D8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v59 = a1;
  uint64_t v62 = a2;
  uint64_t v2 = sub_10017DF08(&qword_100EA0008);
  __chkstk_darwin(v2 - 8);
  uint64_t v61 = (uint64_t)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v63 = (uint64_t)&v58 - v5;
  uint64_t v6 = sub_10017DF08(&qword_100E79020);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AttributedText();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100EA0010);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100EA0018);
  __chkstk_darwin(v16 - 8);
  uint64_t v64 = (uint64_t)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  long long v20 = (char *)&v58 - v19;
  id v60 = self;
  id v21 = [v60 secondaryLabelColor];
  unint64_t v68 = sub_1001B71C4();
  uint64_t v65 = (uint64_t)v21;
  NSAttributedString.addingAttribute(_:value:)();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v65);
  uint64_t v22 = type metadata accessor for AttributedString();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 1, 1, v22);
  AttributedText.init(_:accessibilityAttributedText:onInteraction:)();
  uint64_t v23 = static HorizontalAlignment.leading.getter();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v15, v12, v9);
  *(void *)&v15[*(int *)(v13 + 36)] = v23;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_1008F0568();
  uint64_t v24 = v64;
  View.accessibilityHidden(_:)();
  sub_1001781AC((uint64_t)v15, &qword_100EA0010);
  uint64_t v58 = v20;
  sub_10020E72C(v24, (uint64_t)v20, &qword_100EA0018);
  uint64_t v25 = static VerticalAlignment.center.getter();
  uint64_t v26 = v59;
  sub_1008EF6F8(v59, (uint64_t)&v65);
  uint64_t v27 = v65;
  uint64_t v28 = v66;
  LOBYTE(v15) = v67;
  unint64_t v29 = v68;
  uint64_t v30 = v69;
  char v31 = v70;
  uint64_t v65 = v25;
  uint64_t v66 = 0;
  char v67 = 1;
  unint64_t v68 = v27;
  uint64_t v69 = v28;
  char v70 = (char)v15;
  unint64_t v71 = v29;
  uint64_t v72 = v30;
  char v73 = v31;
  sub_10017DF08(&qword_100EA0038);
  sub_1001246C8(&qword_100EA0040, &qword_100EA0038);
  View.accessibilityHidden(_:)();
  sub_100191924(v27, v28, (char)v15);
  swift_bridgeObjectRelease();
  uint64_t v32 = v26[4];
  uint64_t v65 = v26[3];
  uint64_t v66 = v32;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v33 = Text.init<A>(_:)();
  uint64_t v35 = v34;
  LOBYTE(v28) = v36 & 1;
  static Font.body.getter();
  uint64_t v37 = Text.font(_:)();
  uint64_t v39 = v38;
  char v41 = v40;
  swift_release();
  sub_100191924(v33, v35, v28);
  swift_bridgeObjectRelease();
  id v42 = [v60 secondaryLabelColor];
  uint64_t v65 = Color.init(_:)();
  uint64_t v43 = Text.foregroundStyle<A>(_:)();
  uint64_t v45 = v44;
  uint64_t v47 = v46;
  LOBYTE(v28) = v48 & 1;
  sub_100191924(v37, v39, v41 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v49 = static HorizontalAlignment.trailing.getter();
  uint64_t v50 = v64;
  sub_1001262FC((uint64_t)v20, v64, &qword_100EA0018);
  uint64_t v51 = v63;
  uint64_t v52 = v61;
  sub_1001262FC(v63, v61, &qword_100EA0008);
  uint64_t v53 = v50;
  uint64_t v54 = v62;
  sub_1001262FC(v53, v62, &qword_100EA0018);
  uint64_t v55 = sub_10017DF08(&qword_100EA0048);
  sub_1001262FC(v52, v54 + *(int *)(v55 + 48), &qword_100EA0008);
  uint64_t v56 = v54 + *(int *)(v55 + 64);
  *(void *)uint64_t v56 = v43;
  *(void *)(v56 + 8) = v45;
  *(unsigned char *)(v56 + 16) = v28;
  *(void *)(v56 + 24) = v47;
  *(void *)(v56 + 32) = v49;
  sub_100190CC4(v43, v45, v28);
  swift_bridgeObjectRetain();
  sub_1001781AC(v51, &qword_100EA0008);
  sub_1001781AC((uint64_t)v58, &qword_100EA0018);
  sub_100191924(v43, v45, v28);
  swift_bridgeObjectRelease();
  sub_1001781AC(v52, &qword_100EA0008);
  return sub_1001781AC(v64, &qword_100EA0018);
}

uint64_t sub_1008EF6F8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Font.TextStyle();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  uint64_t v9 = a1[1];
  v22[2] = v8;
  v22[3] = v9;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v10 = Text.init<A>(_:)();
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Font.TextStyle.body(_:), v4);
  static Font.Weight.semibold.getter();
  static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v15 = Text.font(_:)();
  uint64_t v17 = v16;
  LOBYTE(v5) = v18;
  uint64_t v20 = v19;
  swift_release();
  sub_100191924(v10, v12, v14);
  swift_bridgeObjectRelease();
  *(void *)a2 = v15;
  *(void *)(a2 + 8) = v17;
  *(unsigned char *)(a2 + 16) = v5 & 1;
  *(void *)(a2 + 24) = v20;
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 40) = 0;
  sub_100190CC4(v15, v17, v5 & 1);
  swift_bridgeObjectRetain();
  sub_100191924(v15, v17, v5 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1008EF8D4()
{
  return sub_1008EE7D0(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_1008EF8E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  *(void *)a4 = static HorizontalAlignment.leading.getter();
  *(void *)(a4 + 8) = 0;
  *(unsigned char *)(a4 + 16) = 0;
  sub_10017DF08(&qword_100E9FF78);
  swift_getKeyPath();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  *(void *)(v10 + 32) = a3;
  *(double *)(v10 + 40) = a5;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100E9FF80);
  sub_10017DF08(&qword_100E9FF88);
  sub_1001246C8(&qword_100E9FF90, &qword_100E9FF80);
  sub_1008F04BC();
  sub_1001246C8(&qword_100E9FFA0, &qword_100E9FF88);
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_1008EFA60@<X0>(long long *a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v86 = a2;
  uint64_t v83 = type metadata accessor for Divider();
  uint64_t v82 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  uint64_t v81 = (char *)v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_10017DF08(&qword_100E66250);
  __chkstk_darwin(v91);
  uint64_t v80 = (char *)v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E66278);
  __chkstk_darwin(v7 - 8);
  uint64_t v93 = (uint64_t)v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v92 = (uint64_t)v75 - v10;
  uint64_t v11 = type metadata accessor for Font.TextStyle();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  char v14 = (char *)v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v15 = a1[1];
  long long v98 = *a1;
  *(_OWORD *)uint64_t v99 = v15;
  uint64_t v79 = *((void *)a1 + 4);
  *(void *)&v99[16] = v79;
  uint64_t v78 = *(void *)a1;
  uint64_t v77 = *((void *)a1 + 1);
  uint64_t v76 = (void *)*((void *)a1 + 2);
  v75[1] = *((void *)a1 + 3);
  long long v105 = v98;
  long long v100 = *a1;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v16 = Text.init<A>(_:)();
  uint64_t v18 = v17;
  char v20 = v19 & 1;
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for Font.TextStyle.body(_:), v11);
  static Font.Weight.medium.getter();
  static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v89 = Text.font(_:)();
  uint64_t v88 = v21;
  int v87 = v22;
  uint64_t v90 = v23;
  swift_release();
  sub_100191924(v16, v18, v20);
  swift_bridgeObjectRelease();
  long long v104 = *(_OWORD *)&v99[8];
  long long v100 = *(_OWORD *)&v99[8];
  swift_bridgeObjectRetain();
  uint64_t v24 = Text.init<A>(_:)();
  uint64_t v26 = v25;
  LOBYTE(v12) = v27 & 1;
  static Font.body.getter();
  uint64_t v28 = Text.font(_:)();
  uint64_t v30 = v29;
  char v32 = v31;
  swift_release();
  sub_100191924(v24, v26, v12);
  swift_bridgeObjectRelease();
  id v33 = [self secondaryLabelColor];
  *(void *)&long long v100 = Color.init(_:)();
  uint64_t v34 = Text.foregroundStyle<A>(_:)();
  uint64_t v84 = v35;
  char v37 = v36;
  uint64_t v85 = v38;
  sub_100191924(v28, v30, v32 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v39 = *(void **)v99;
  sub_100304290(v86, v95);
  uint64_t v40 = v95[0];
  uint64_t v41 = v95[1];
  id v42 = (void *)v95[2];
  uint64_t v43 = v95[3];
  uint64_t v44 = v95[4];
  sub_10020E72C((uint64_t)v95, (uint64_t)v96, &qword_100E9FFA8);
  if (!v97)
  {
    sub_10006AD9C((uint64_t)&v105);
    sub_10006AD9C((uint64_t)&v104);
    id v51 = v39;
    sub_1008F0508(v78, v77, v76);
    sub_1008F0508(v40, v41, v42);
    goto LABEL_5;
  }
  *(void *)&long long v100 = v40;
  *((void *)&v100 + 1) = v41;
  uint64_t v101 = v42;
  uint64_t v102 = v43;
  uint64_t v103 = v44;
  sub_10006AD9C((uint64_t)&v105);
  sub_10006AD9C((uint64_t)&v104);
  id v45 = v39;
  sub_10006AD9C((uint64_t)&v105);
  sub_10006AD9C((uint64_t)&v104);
  id v46 = v45;
  char v47 = sub_1005A7564(&v98, &v100);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1002F8DD8((uint64_t)&v105);

  sub_1002F8DD8((uint64_t)&v104);
  sub_1002F8DD8((uint64_t)&v105);

  sub_1002F8DD8((uint64_t)&v104);
  if ((v47 & 1) == 0)
  {
LABEL_5:
    uint64_t v52 = v81;
    Divider.init()();
    char v53 = static Edge.Set.vertical.getter();
    EdgeInsets.init(_all:)();
    uint64_t v55 = v54;
    uint64_t v57 = v56;
    uint64_t v59 = v58;
    uint64_t v61 = v60;
    uint64_t v62 = v82;
    uint64_t v63 = (uint64_t)v80;
    uint64_t v64 = v83;
    (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v80, v52, v83);
    uint64_t v50 = v91;
    uint64_t v65 = v63 + *(int *)(v91 + 36);
    *(unsigned char *)uint64_t v65 = v53;
    *(void *)(v65 + 8) = v55;
    *(void *)(v65 + 16) = v57;
    *(void *)(v65 + 24) = v59;
    *(void *)(v65 + 32) = v61;
    *(unsigned char *)(v65 + 40) = 0;
    (*(void (**)(char *, uint64_t))(v62 + 8))(v52, v64);
    uint64_t v49 = v92;
    sub_10020E72C(v63, v92, &qword_100E66250);
    uint64_t v48 = 0;
    goto LABEL_6;
  }
  uint64_t v48 = 1;
  uint64_t v49 = v92;
  uint64_t v50 = v91;
LABEL_6:
  _s7Weather24LocationCompositionStateOwst_0(v49, v48, 1, v50);
  char v66 = v37 & 1;
  char v67 = v87 & 1;
  char v94 = v87 & 1;
  uint64_t v68 = v93;
  sub_1001262FC(v49, v93, &qword_100E66278);
  uint64_t v69 = v89;
  uint64_t v70 = v88;
  *(void *)a3 = v89;
  *(void *)(a3 + 8) = v70;
  *(unsigned char *)(a3 + 16) = v67;
  *(void *)(a3 + 24) = v90;
  *(void *)(a3 + 32) = v34;
  uint64_t v71 = v84;
  *(void *)(a3 + 40) = v84;
  *(unsigned char *)(a3 + 48) = v66;
  uint64_t v92 = v34;
  *(void *)(a3 + 56) = v85;
  uint64_t v72 = sub_10017DF08(&qword_100E9FFB0);
  sub_1001262FC(v68, a3 + *(int *)(v72 + 64), &qword_100E66278);
  sub_100190CC4(v69, v70, v67);
  swift_bridgeObjectRetain();
  uint64_t v73 = v92;
  sub_100190CC4(v92, v71, v66);
  swift_bridgeObjectRetain();
  sub_1001781AC(v49, &qword_100E66278);
  sub_1001781AC(v68, &qword_100E66278);
  sub_100191924(v73, v71, v66);
  swift_bridgeObjectRelease();
  sub_100191924(v69, v70, v94);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1008F0234@<X0>(uint64_t a1@<X8>)
{
  return sub_1008EF8E4(*(void *)v1, *(void *)(v1 + 8), *(void *)(v1 + 16), a1, *(double *)(v1 + 24));
}

unint64_t sub_1008F0244()
{
  unint64_t result = qword_100E9FF58;
  if (!qword_100E9FF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9FF58);
  }
  return result;
}

unint64_t sub_1008F0290()
{
  unint64_t result = qword_100E9FF60;
  if (!qword_100E9FF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9FF60);
  }
  return result;
}

ValueMetadata *type metadata accessor for AirPollutantTableGridView()
{
  return &type metadata for AirPollutantTableGridView;
}

void *_s7Weather25AirPollutantTableGridViewVwcp_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s7Weather25AirPollutantTableGridViewVwca_0(void *a1, void *a2)
{
  sub_10017CAB0(a1, a2);
  v3[1] = *(void *)(v4 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v3[2] = *(void *)(v2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v3[3] = *(void *)(v2 + 24);
  return v3;
}

uint64_t _s7Weather25AirPollutantTableGridViewVwta_0(void *a1, void *a2)
{
  sub_10017CAB0(a1, a2);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v3 + 8) = *(_OWORD *)(v2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(v3 + 24) = *(void *)(v2 + 24);
  return v3;
}

ValueMetadata *type metadata accessor for AirPollutantTableStackView()
{
  return &type metadata for AirPollutantTableStackView;
}

unint64_t sub_1008F03F4()
{
  unint64_t result = qword_100E9FF68;
  if (!qword_100E9FF68)
  {
    sub_10018C6DC(&qword_100E9FF70);
    sub_1008F0244();
    sub_1008F0290();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9FF68);
  }
  return result;
}

uint64_t sub_1008F0470()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1008F048C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1008F04AC@<X0>(long long *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1008EFA60(a1, *(void *)(v2 + 32), a2);
}

unint64_t sub_1008F04BC()
{
  unint64_t result = qword_100E9FF98;
  if (!qword_100E9FF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E9FF98);
  }
  return result;
}

uint64_t sub_1008F0508(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    swift_bridgeObjectRelease();

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1008F0558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1008EEA18(a1, *(void *)(v2 + 32), a2);
}

unint64_t sub_1008F0568()
{
  unint64_t result = qword_100EA0020;
  if (!qword_100EA0020)
  {
    sub_10018C6DC(&qword_100EA0010);
    sub_1008F05E4();
    sub_1008F0634();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA0020);
  }
  return result;
}

unint64_t sub_1008F05E4()
{
  unint64_t result = qword_100EA0028;
  if (!qword_100EA0028)
  {
    type metadata accessor for AttributedText();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA0028);
  }
  return result;
}

unint64_t sub_1008F0634()
{
  unint64_t result = qword_100EA0030;
  if (!qword_100EA0030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA0030);
  }
  return result;
}

uint64_t sub_1008F0680()
{
  return sub_1001246C8(&qword_100EA0050, &qword_100EA0058);
}

unint64_t sub_1008F06C0()
{
  unint64_t result = qword_100EA0060;
  if (!qword_100EA0060)
  {
    sub_10018C6DC(&qword_100EA0068);
    sub_1001246C8((unint64_t *)&unk_100EA0070, &qword_100E9FFB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA0060);
  }
  return result;
}

void sub_1008F0760(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_1008F07D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, long long *a5)
{
  *(_WORD *)(v5 + 32) = 5033;
  type metadata accessor for MockServer();
  *(void *)(v5 + 40) = static MockServer.shared.getter();
  *(_OWORD *)(v5 + 64) = xmmword_100C66670;
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  if (qword_100E624D0 != -1) {
    swift_once();
  }
  SettingReader.read<A>(_:)();
  swift_release();
  *(unsigned char *)(v5 + 120) = v12;
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  *(void *)(v5 + 48) = a3;
  *(void *)(v5 + 56) = a4;
  sub_1001262E4(a5, v5 + 80);
  return v5;
}

void sub_1008F08D0(char a1)
{
  type metadata accessor for WeatherMapOverlayKind();
  sub_10017C83C();
  uint64_t v77 = v3;
  uint64_t v78 = v2;
  __chkstk_darwin(v2);
  sub_100109314();
  uint64_t v76 = v4;
  uint64_t v5 = type metadata accessor for WeatherCondition();
  sub_10017C83C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v9 = type metadata accessor for ConditionCode();
  sub_10017C83C();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_1001626E0();
  uint64_t v15 = v14 - v13;
  uint64_t v79 = type metadata accessor for Logger();
  sub_10017C83C();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  sub_100184CB0();
  char v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v75 = v11;
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v81 = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136446210;
    unint64_t v22 = sub_1003ADD20(a1);
    uint64_t v24 = sub_10016414C(v22, v23, &v81);
    sub_10017F094(v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Run test %{public}s", v21, 0xCu);
    swift_arrayDestroy();
    sub_100162EE0();
    uint64_t v11 = v75;
    sub_100162EE0();
  }

  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v1, v79);
  switch(a1)
  {
    case 1:
      uint64_t v25 = sub_10019F43C();
      v26(v25);
      int v27 = 1;
      goto LABEL_11;
    case 2:
      uint64_t v28 = sub_10019F43C();
      v29(v28);
      int v27 = 2;
      goto LABEL_11;
    case 3:
      uint64_t v30 = sub_10019F43C();
      v31(v30);
      int v27 = 3;
      goto LABEL_11;
    case 4:
      uint64_t v32 = sub_10019F43C();
      v33(v32);
      int v27 = 4;
      goto LABEL_11;
    case 5:
      uint64_t v34 = sub_10019F43C();
      v35(v34);
      int v27 = 5;
      goto LABEL_11;
    case 6:
      uint64_t v36 = sub_10019F43C();
      v37(v36);
      int v27 = 6;
LABEL_11:
      sub_1008F18E4(v27);
      goto LABEL_19;
    case 7:
      uint64_t v38 = sub_10019F43C();
      v39(v38);
      int v40 = 7;
      goto LABEL_18;
    case 8:
      uint64_t v41 = sub_10019F43C();
      v42(v41);
      int v40 = 8;
      goto LABEL_18;
    case 9:
      uint64_t v43 = sub_10019F43C();
      v44(v43);
      int v40 = 9;
      goto LABEL_18;
    case 10:
      uint64_t v45 = sub_10019F43C();
      v46(v45);
      int v40 = 10;
      goto LABEL_18;
    case 11:
      uint64_t v47 = sub_10019F43C();
      v48(v47);
      int v40 = 11;
      goto LABEL_18;
    case 12:
      uint64_t v49 = sub_10019F43C();
      v50(v49);
      int v40 = 12;
LABEL_18:
      sub_1008F1FBC(v40);
LABEL_19:
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v15, v9);
      return;
    case 13:
      uint64_t v51 = sub_100180690();
      v52(v51);
      char v53 = 13;
      goto LABEL_26;
    case 14:
      uint64_t v54 = sub_100180690();
      v55(v54);
      char v53 = 14;
      goto LABEL_26;
    case 15:
      uint64_t v56 = sub_100180690();
      v57(v56);
      char v53 = 15;
      goto LABEL_26;
    case 16:
      uint64_t v58 = sub_100180690();
      v59(v58);
      char v53 = 16;
      goto LABEL_26;
    case 17:
      uint64_t v60 = sub_100180690();
      v61(v60);
      char v53 = 17;
      goto LABEL_26;
    case 18:
      uint64_t v62 = sub_100180690();
      v63(v62);
      char v53 = 18;
LABEL_26:
      sub_1008F2694(v53, (uint64_t)v19);
      (*(void (**)(NSObject *, uint64_t))(v7 + 8))(v19, v5);
      return;
    case 19:
      int v64 = 19;
      int v65 = 0;
      goto LABEL_29;
    case 20:
      int v64 = 20;
      int v65 = 1;
LABEL_29:
      sub_1008F33DC(v64, v65);
      return;
    case 21:
      sub_1008F2B90(21);
      return;
    case 22:
      char v66 = 22;
      uint64_t v67 = 0;
      goto LABEL_35;
    case 23:
      char v66 = 23;
      uint64_t v67 = 1;
      goto LABEL_35;
    case 24:
      char v66 = 24;
      uint64_t v67 = 2;
      goto LABEL_35;
    case 25:
      char v66 = 25;
      uint64_t v67 = 3;
LABEL_35:
      sub_1008F2CF0(v66, v67);
      return;
    case 26:
      sub_1008F2E58(26);
      return;
    case 27:
      sub_1008F3110(27);
      return;
    case 28:
      uint64_t v68 = sub_100185DC0();
      v69(v68);
      char v70 = 28;
      goto LABEL_41;
    case 29:
      uint64_t v71 = enum case for WeatherMapPrecipitationOverlayKind.auto(_:);
      type metadata accessor for WeatherMapPrecipitationOverlayKind();
      sub_100162E4C();
      uint64_t v9 = v76;
      (*(void (**)(uint64_t, uint64_t))(v72 + 104))(v76, v71);
      uint64_t v11 = v77;
      char v19 = v78;
      (*(void (**)(uint64_t, void, NSObject *))(v77 + 104))(v76, enum case for WeatherMapOverlayKind.precipitation(_:), v78);
      char v70 = 29;
      goto LABEL_41;
    case 30:
      uint64_t v73 = sub_100185DC0();
      v74(v73);
      char v70 = 30;
LABEL_41:
      sub_1008F42EC(v70, v9);
      (*(void (**)(uint64_t, NSObject *))(v11 + 8))(v9, v19);
      break;
    case 31:
      sub_1008F47D0(31);
      break;
    case 32:
      sub_1008F48E0(32);
      break;
    default:
      sub_1008F0FCC(0);
      break;
  }
}

void sub_1008F0FCC(int a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v56 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v54 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for DispatchQoS();
  uint64_t v53 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v52 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for DispatchTime();
  uint64_t v51 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v49 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v50 = (char *)&v43 - v8;
  uint64_t v47 = type metadata accessor for MainAction();
  __chkstk_darwin(v47);
  uint64_t v48 = (uint64_t *)((char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v60 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind();
  uint64_t v10 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v43 - v14;
  uint64_t v16 = type metadata accessor for ConditionCode();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  char v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v58 = sub_1003ADD20(a1);
  uint64_t v21 = v20;
  if ([self isRecapAvailable])
  {
    int v46 = a1;
    uint64_t v57 = v1;
    uint64_t v45 = v3;
    type metadata accessor for SettingReader();
    static SettingReader.shared.getter();
    if (qword_100E624C8 != -1) {
      swift_once();
    }
    SettingReader.read<A>(_:)();
    swift_release();
    unint64_t v22 = (unsigned int *)&enum case for ConditionCode.clear(_:);
    uint64_t v23 = 0;
    uint64_t v24 = v10;
    uint64_t v25 = v21;
    switch((char)aBlock)
    {
      case 1:
        goto LABEL_11;
      case 2:
        unint64_t v22 = (unsigned int *)&enum case for ConditionCode.cloudy(_:);
        goto LABEL_11;
      case 3:
        unint64_t v22 = (unsigned int *)&enum case for ConditionCode.mostlyCloudy(_:);
        goto LABEL_11;
      case 4:
        unint64_t v22 = (unsigned int *)&enum case for ConditionCode.rain(_:);
        goto LABEL_11;
      case 5:
        unint64_t v22 = (unsigned int *)&enum case for ConditionCode.thunderstorms(_:);
        goto LABEL_11;
      case 6:
        unint64_t v22 = (unsigned int *)&enum case for ConditionCode.strongStorms(_:);
LABEL_11:
        (*(void (**)(char *, void, uint64_t))(v17 + 104))(v19, *v22, v16);
        StubPPTWeatherDataManager.setupStubData(for:)();
        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
        uint64_t v23 = 1;
        break;
      default:
        break;
    }
    uint64_t v26 = v23;
    static SettingReader.shared.getter();
    static Settings.VFX.animatedBackgrounds.getter();
    Settings.VFX.AnimatedBackgrounds.listAnimationKind.getter();
    swift_release();
    SettingReader.read<A>(_:)();
    swift_release();
    swift_release();
    static Settings.VFX.animatedBackgrounds.getter();
    char v27 = dispatch thunk of SettingGroup.isEnabled.getter();
    swift_release();
    uint64_t v28 = v60;
    (*(void (**)(char *, void, uint64_t))(v24 + 104))(v12, enum case for Settings.VFX.AnimatedBackgrounds.AnimationKind.mica(_:), v60);
    char v29 = sub_10012F990((uint64_t)v15, (uint64_t)v12);
    uint64_t v30 = *(void (**)(char *, uint64_t))(v24 + 8);
    v30(v12, v28);
    if (v29 & 1) != 0 && (v27)
    {
      id v31 = [self standardUserDefaults];
      LOBYTE(aBlock) = 0;
      NSUserDefaults.set<A>(_:for:)();

      uint64_t v44 = v30;
      uint64_t v32 = v57;
      id v33 = *(uint64_t (**)(uint64_t))(v57 + 16);
      uint64_t v34 = (uint64_t)v48;
      void *v48 = 1;
      type metadata accessor for PerformanceTestAction();
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      uint64_t v63 = 0;
      long long aBlock = 0u;
      long long v62 = 0u;
      swift_retain();
      sub_1001AAF58(v34, (uint64_t)&aBlock, v33);
      sub_100178110((uint64_t)&aBlock, (uint64_t *)&unk_100EA01F0);
      sub_100158FE4(v34, (void (*)(void))type metadata accessor for MainAction);
      swift_release();
      sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
      uint64_t v48 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v35 = v49;
      static DispatchTime.now()();
      uint64_t v36 = v50;
      + infix(_:_:)();
      uint64_t v51 = *(void *)(v51 + 8);
      ((void (*)(char *, uint64_t))v51)(v35, v59);
      uint64_t v37 = swift_allocObject();
      *(void *)(v37 + 16) = v32;
      *(unsigned char *)(v37 + 24) = v26;
      *(unsigned char *)(v37 + 25) = v46;
      *(void *)(v37 + 32) = v58;
      *(void *)(v37 + 40) = v25;
      *(unsigned char *)(v37 + 48) = 1;
      uint64_t v63 = sub_1008FBA14;
      uint64_t v64 = v37;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      *(void *)&long long v62 = sub_10010A4D4;
      *((void *)&v62 + 1) = &unk_100E2D310;
      uint64_t v38 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      uint64_t v39 = v52;
      static DispatchQoS.unspecified.getter();
      *(void *)&long long aBlock = _swiftEmptyArrayStorage;
      sub_100128D94((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_10017DF08(&qword_100E75530);
      sub_100115EDC();
      int v40 = v54;
      uint64_t v41 = v45;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      id v42 = v48;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v38);

      (*(void (**)(char *, uint64_t))(v56 + 8))(v40, v41);
      (*(void (**)(char *, uint64_t))(v53 + 8))(v39, v55);
      ((void (*)(char *, uint64_t))v51)(v36, v59);
      v44(v15, v60);
    }
    else
    {
      sub_1008F5158(0, 0, v57, v26, v46, v58, v21);
      swift_bridgeObjectRelease();
      v30(v15, v60);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1008F4F80(a1, (uint64_t (*)(void))&static os_log_type_t.error.getter, "Failed test: %{public}s", (SEL *)&selRef_failedTest_);
  }
}

uint64_t sub_1008F18E4(int a1)
{
  uint64_t v2 = v1;
  int v43 = a1;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  __chkstk_darwin(v3);
  uint64_t v37 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for DispatchQoS();
  uint64_t v36 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v35 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchTime();
  uint64_t v34 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v41 = (char *)&v32 - v9;
  id v33 = (uint64_t (*)(char *, uint64_t))type metadata accessor for MainAction();
  __chkstk_darwin(v33);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v32 - v17;
  StubPPTWeatherDataManager.setupStubData(for:)();
  sub_100A41EA4();
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  static Settings.VFX.animatedBackgrounds.getter();
  Settings.VFX.AnimatedBackgrounds.locationAnimationKind.getter();
  swift_release();
  SettingReader.read<A>(_:)();
  swift_release();
  swift_release();
  static Settings.VFX.animatedBackgrounds.getter();
  char v19 = dispatch thunk of SettingGroup.isEnabled.getter();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for Settings.VFX.AnimatedBackgrounds.AnimationKind.mica(_:), v12);
  char v20 = sub_10012F990((uint64_t)v18, (uint64_t)v15);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v13 + 8);
  v21(v15, v12);
  if (v20 & 1) != 0 && (v19)
  {
    id v22 = [self standardUserDefaults];
    LOBYTE(aBlock) = 0;
    NSUserDefaults.set<A>(_:for:)();

    uint64_t v23 = *(uint64_t (**)(uint64_t))(v2 + 16);
    type metadata accessor for PerformanceTestAction();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    int v46 = 0;
    long long aBlock = 0u;
    long long v45 = 0u;
    swift_retain();
    sub_1001AAF58((uint64_t)v11, (uint64_t)&aBlock, v23);
    sub_100178110((uint64_t)&aBlock, (uint64_t *)&unk_100EA01F0);
    sub_100158FE4((uint64_t)v11, (void (*)(void))type metadata accessor for MainAction);
    swift_release();
    sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
    uint64_t v32 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    + infix(_:_:)();
    id v33 = (uint64_t (*)(char *, uint64_t))v21;
    uint64_t v34 = *(void *)(v34 + 8);
    ((void (*)(char *, uint64_t))v34)(v7, v42);
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v2;
    *(unsigned char *)(v24 + 24) = v43;
    *(unsigned char *)(v24 + 25) = 1;
    int v46 = sub_1008FBBEC;
    uint64_t v47 = v24;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v45 = sub_10010A4D4;
    *((void *)&v45 + 1) = &unk_100E2D478;
    uint64_t v25 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    uint64_t v26 = v35;
    static DispatchQoS.unspecified.getter();
    *(void *)&long long aBlock = _swiftEmptyArrayStorage;
    sub_100128D94((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10017DF08(&qword_100E75530);
    sub_100115EDC();
    char v27 = v37;
    uint64_t v28 = v40;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    char v29 = v41;
    uint64_t v30 = (void *)v32;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v39 + 8))(v27, v28);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v26, v38);
    ((void (*)(char *, uint64_t))v34)(v29, v42);
    return v33(v18, v12);
  }
  else
  {
    sub_1008F6070(0, 0, v2, v43, 6, (uint64_t)&unk_100E2D4D8, (uint64_t)sub_1008FBC0C, (uint64_t)&unk_100E2D4F0);
    return ((uint64_t (*)(char *, uint64_t))v21)(v18, v12);
  }
}

uint64_t sub_1008F1FBC(int a1)
{
  uint64_t v2 = v1;
  int v43 = a1;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  __chkstk_darwin(v3);
  uint64_t v37 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for DispatchQoS();
  uint64_t v36 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v35 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchTime();
  uint64_t v34 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v41 = (char *)&v32 - v9;
  id v33 = (uint64_t (*)(char *, uint64_t))type metadata accessor for MainAction();
  __chkstk_darwin(v33);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v32 - v17;
  StubPPTWeatherDataManager.setupStubData(for:)();
  sub_100A41EA4();
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  static Settings.VFX.animatedBackgrounds.getter();
  Settings.VFX.AnimatedBackgrounds.locationAnimationKind.getter();
  swift_release();
  SettingReader.read<A>(_:)();
  swift_release();
  swift_release();
  static Settings.VFX.animatedBackgrounds.getter();
  char v19 = dispatch thunk of SettingGroup.isEnabled.getter();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for Settings.VFX.AnimatedBackgrounds.AnimationKind.mica(_:), v12);
  char v20 = sub_10012F990((uint64_t)v18, (uint64_t)v15);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v13 + 8);
  v21(v15, v12);
  if (v20 & 1) != 0 && (v19)
  {
    id v22 = [self standardUserDefaults];
    LOBYTE(aBlock) = 0;
    NSUserDefaults.set<A>(_:for:)();

    uint64_t v23 = *(uint64_t (**)(uint64_t))(v2 + 16);
    type metadata accessor for PerformanceTestAction();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    int v46 = 0;
    long long aBlock = 0u;
    long long v45 = 0u;
    swift_retain();
    sub_1001AAF58((uint64_t)v11, (uint64_t)&aBlock, v23);
    sub_100178110((uint64_t)&aBlock, (uint64_t *)&unk_100EA01F0);
    sub_100158FE4((uint64_t)v11, (void (*)(void))type metadata accessor for MainAction);
    swift_release();
    sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
    uint64_t v32 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    + infix(_:_:)();
    id v33 = (uint64_t (*)(char *, uint64_t))v21;
    uint64_t v34 = *(void *)(v34 + 8);
    ((void (*)(char *, uint64_t))v34)(v7, v42);
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v2;
    *(unsigned char *)(v24 + 24) = v43;
    *(unsigned char *)(v24 + 25) = 1;
    int v46 = sub_1008FBC64;
    uint64_t v47 = v24;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v45 = sub_10010A4D4;
    *((void *)&v45 + 1) = &unk_100E2D5B8;
    uint64_t v25 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    uint64_t v26 = v35;
    static DispatchQoS.unspecified.getter();
    *(void *)&long long aBlock = _swiftEmptyArrayStorage;
    sub_100128D94((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10017DF08(&qword_100E75530);
    sub_100115EDC();
    char v27 = v37;
    uint64_t v28 = v40;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    char v29 = v41;
    uint64_t v30 = (void *)v32;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v39 + 8))(v27, v28);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v26, v38);
    ((void (*)(char *, uint64_t))v34)(v29, v42);
    return v33(v18, v12);
  }
  else
  {
    sub_1008F6070(0, 0, v2, v43, 7, (uint64_t)&unk_100E2D618, (uint64_t)sub_1008FBC84, (uint64_t)&unk_100E2D630);
    return ((uint64_t (*)(char *, uint64_t))v21)(v18, v12);
  }
}

uint64_t sub_1008F2694(char a1, uint64_t a2)
{
  uint64_t v28 = a2;
  uint64_t v31 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v34 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v30 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v32 = *(void *)(v5 - 8);
  uint64_t v33 = v5;
  __chkstk_darwin(v5);
  char v29 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchTime();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v27 - v12;
  uint64_t v14 = type metadata accessor for MainAction();
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1008F4F80(a1, (uint64_t (*)(void))&static os_log_type_t.default.getter, "Started test: %{public}s", (SEL *)&selRef_startedTest_);
  uint64_t v17 = *(uint64_t (**)(uint64_t))(v2 + 16);
  uint64_t v18 = type metadata accessor for WeatherCondition();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v28, v18);
  type metadata accessor for PerformanceTestAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v37 = 0;
  long long aBlock = 0u;
  long long v36 = 0u;
  swift_retain();
  sub_1001AAF58((uint64_t)v16, (uint64_t)&aBlock, v17);
  sub_100178110((uint64_t)&aBlock, (uint64_t *)&unk_100EA01F0);
  sub_100158FE4((uint64_t)v16, (void (*)(void))type metadata accessor for MainAction);
  swift_release();
  sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
  char v19 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  char v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v28 = v8 + 8;
  v20(v10, v7);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v2;
  *(unsigned char *)(v21 + 24) = a1;
  uint64_t v37 = sub_1008FC4B0;
  uint64_t v38 = v21;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v36 = sub_10010A4D4;
  *((void *)&v36 + 1) = &unk_100E2D838;
  id v22 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  uint64_t v23 = v29;
  static DispatchQoS.unspecified.getter();
  *(void *)&long long aBlock = _swiftEmptyArrayStorage;
  sub_100128D94((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10017DF08(&qword_100E75530);
  sub_100115EDC();
  uint64_t v24 = v30;
  uint64_t v25 = v31;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v34 + 8))(v24, v25);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v23, v33);
  return ((uint64_t (*)(char *, uint64_t))v20)(v13, v7);
}

void sub_1008F2B90(char a1)
{
  uint64_t v3 = type metadata accessor for MainAction();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1008F4F80(a1, (uint64_t (*)(void))&static os_log_type_t.default.getter, "Started test: %{public}s", (SEL *)&selRef_startedTest_);
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v1 + 16);
  type metadata accessor for PerformanceTestAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = 0;
  memset(v7, 0, sizeof(v7));
  swift_retain();
  sub_1001AAF58((uint64_t)v5, (uint64_t)v7, v6);
  sub_100178110((uint64_t)v7, (uint64_t *)&unk_100EA01F0);
  sub_100158FE4((uint64_t)v5, (void (*)(void))type metadata accessor for MainAction);
  swift_release();
  sub_1008F4F80(a1, (uint64_t (*)(void))&static os_log_type_t.default.getter, "Finished test: %{public}s", (SEL *)&selRef_finishedTest_);
}

void sub_1008F2CF0(char a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for MainAction();
  __chkstk_darwin(v5);
  uint64_t v7 = (void *)((char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1008F4F80(a1, (uint64_t (*)(void))&static os_log_type_t.default.getter, "Started test: %{public}s", (SEL *)&selRef_startedTest_);
  uint64_t v8 = *(uint64_t (**)(uint64_t))(v2 + 16);
  *uint64_t v7 = a2;
  type metadata accessor for PerformanceTestAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = 0;
  memset(v9, 0, sizeof(v9));
  swift_retain();
  sub_1001AAF58((uint64_t)v7, (uint64_t)v9, v8);
  sub_100178110((uint64_t)v9, (uint64_t *)&unk_100EA01F0);
  sub_100158FE4((uint64_t)v7, (void (*)(void))type metadata accessor for MainAction);
  swift_release();
  sub_1008F4F80(a1, (uint64_t (*)(void))&static os_log_type_t.default.getter, "Finished test: %{public}s", (SEL *)&selRef_finishedTest_);
}

void sub_1008F2E58(char a1)
{
  sub_1008F4F80(a1, (uint64_t (*)(void))&static os_log_type_t.default.getter, "Started test: %{public}s", (SEL *)&selRef_startedTest_);
  unint64_t v2 = sub_1003ADD20(a1);
  uint64_t v4 = v3;
  id v5 = [self sharedApplication];
  UIApplication.expectedWindow.getter();

  sub_1001B1E64(v20, (uint64_t)v21);
  dispatch thunk of WindowType.bounds.getter();
  double v6 = CGRectGetHeight(v24) * 0.7;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v20);
  id v7 = objc_allocWithZone((Class)RPTDirectionalSwipeTestParameters);
  id v8 = sub_1008FB790(40.0, v6, 300.0, 10.0, v2, v4, 5, 6, 0, 0);
  uint64_t v9 = self;
  unint64_t v10 = sub_1003ADD20(a1);
  uint64_t v12 = v11;
  sub_10017DF08(&qword_100E6BBD0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_100C31F30;
  *(void *)(v13 + 32) = v8;
  v20[0] = v13;
  specialized Array._endMutation()();
  id v14 = v8;
  sub_10017DF08(&qword_100EA0220);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v16;
  *(unsigned char *)(v17 + 24) = a1;
  id v22 = sub_1008FC380;
  uint64_t v23 = v17;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 1107296256;
  v20[2] = sub_10010A4D4;
  uint64_t v21 = &unk_100E2D888;
  uint64_t v18 = _Block_copy(v20);
  swift_release();
  id v19 = sub_1008FBB18(v10, v12, (uint64_t)isa, (uint64_t)v18, v9);
  _Block_release(v18);

  [self runTestWithParameters:v19];
}

void sub_1008F3110(char a1)
{
  sub_1008F4F80(a1, (uint64_t (*)(void))&static os_log_type_t.default.getter, "Started test: %{public}s", (SEL *)&selRef_startedTest_);
  id v2 = [self sharedApplication];
  UIApplication.expectedWindow.getter();

  sub_1001B1E64(v23, (uint64_t)v24);
  dispatch thunk of WindowType.bounds.getter();
  CGRect v28 = CGRectInset(v27, 10.0, 90.0);
  double x = v28.origin.x;
  double y = v28.origin.y;
  double width = v28.size.width;
  double height = v28.size.height;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v23);
  unint64_t v7 = sub_1003ADD20(a1);
  uint64_t v9 = v8;
  id v10 = objc_allocWithZone((Class)RPTDirectionalSwipeTestParameters);
  id v11 = sub_1008FB790(x, y, width, height, v7, v9, 3, 3, 0, 0);
  uint64_t v12 = self;
  unint64_t v13 = sub_1003ADD20(a1);
  uint64_t v15 = v14;
  sub_10017DF08(&qword_100E6BBD0);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_100C31F30;
  *(void *)(v16 + 32) = v11;
  v23[0] = v16;
  specialized Array._endMutation()();
  id v17 = v11;
  sub_10017DF08(&qword_100EA0220);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v19 = swift_allocObject();
  swift_weakInit();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v19;
  *(unsigned char *)(v20 + 24) = a1;
  uint64_t v25 = sub_1008FC380;
  uint64_t v26 = v20;
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 1107296256;
  v23[2] = sub_10010A4D4;
  CGRect v24 = &unk_100E2D8D8;
  uint64_t v21 = _Block_copy(v23);
  swift_release();
  id v22 = sub_1008FBB18(v13, v15, (uint64_t)isa, (uint64_t)v21, v12);
  _Block_release(v21);

  [self runTestWithParameters:v22];
}

void sub_1008F33DC(int a1, int a2)
{
  LODWORD(v136) = a2;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v131 = *(void *)(v4 - 8);
  uint64_t v132 = v4;
  __chkstk_darwin(v4);
  uint64_t v129 = (char *)&v110 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = type metadata accessor for DispatchQoS();
  uint64_t v128 = *(void *)(v130 - 8);
  __chkstk_darwin(v130);
  uint64_t v127 = (char *)&v110 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = type metadata accessor for DispatchTime();
  uint64_t v125 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  uint64_t v123 = (char *)&v110 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v124 = (char *)&v110 - v9;
  uint64_t v137 = type metadata accessor for ConditionCode();
  uint64_t v141 = *(void *)(v137 - 8);
  __chkstk_darwin(v137);
  char v122 = (char *)&v110 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = (void *)type metadata accessor for Location.Identifier();
  uint64_t v11 = *(v142 - 1);
  __chkstk_darwin(v142);
  uint64_t v121 = (char *)&v110 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v134 = (char *)&v110 - v14;
  __chkstk_darwin(v15);
  uint64_t v135 = (char *)&v110 - v16;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v110 - v18;
  uint64_t v20 = type metadata accessor for SavedLocation();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20 - 8);
  uint64_t v120 = (uint64_t)&v110 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v133 = (uint64_t)&v110 - v24;
  __chkstk_darwin(v25);
  CGRect v27 = (char *)&v110 - v26;
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v110 - v29;
  sub_1008F4F80(a1, (uint64_t (*)(void))&static os_log_type_t.default.getter, "Started test: %{public}s", (SEL *)&selRef_startedTest_);
  sub_1001B1E64(v2 + 10, v2[13]);
  uint64_t v31 = dispatch thunk of SavedLocationsManagerType.savedLocations.getter();
  if (*(void *)(v31 + 16) < 5uLL)
  {
    swift_bridgeObjectRelease();
    sub_1008F4F80(a1, (uint64_t (*)(void))&static os_log_type_t.error.getter, "Failed test: %{public}s", (SEL *)&selRef_failedTest_);
    return;
  }
  int v115 = a1;
  uint64_t v116 = v2;
  uint64_t v114 = v2[6];
  sub_10017DF08(&qword_100EA0230);
  uint64_t v32 = sub_10017DF08(&qword_100EA0238);
  unint64_t v33 = (*(unsigned __int8 *)(*(void *)(v32 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v32 - 8) + 80);
  uint64_t v139 = *(void *)(*(void *)(v32 - 8) + 72);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_100C31870;
  uint64_t v113 = v34;
  unint64_t v35 = v34 + v33;
  uint64_t v140 = v32;
  unint64_t v36 = v34 + v33 + *(int *)(v32 + 48);
  uint64_t v117 = v21;
  uint64_t v138 = v31 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
  sub_100347CE4(v138, (uint64_t)v30);
  SavedLocation.identifier.getter();
  sub_100158FE4((uint64_t)v30, (void (*)(void))&type metadata accessor for SavedLocation);
  Location.Identifier.coordinate.getter();
  double v38 = v37;
  double v40 = v39;
  uint64_t v41 = v142;
  uint64_t v118 = *(void (**)(char *, void *))(v11 + 8);
  v118(v19, v142);
  sub_1008F5EEC(v38, v40);
  uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v141 + 104);
  uint64_t v119 = v42;
  if (v136)
  {
    unsigned int v111 = enum case for ConditionCode.clear(_:);
    uint64_t v43 = v137;
    ((void (*)(unint64_t))v42)(v36);
    if (*(void *)(v31 + 16) < 2uLL)
    {
      __break(1u);
    }
    else
    {
      uint64_t v44 = *(int *)(v140 + 48);
      unint64_t v110 = v35;
      long long v45 = v41;
      unint64_t v112 = v35 + v139 + v44;
      uint64_t v136 = *(void *)(v117 + 72);
      sub_100347CE4(v138 + v136, (uint64_t)v27);
      int v46 = v135;
      SavedLocation.identifier.getter();
      sub_100158FE4((uint64_t)v27, (void (*)(void))&type metadata accessor for SavedLocation);
      Location.Identifier.coordinate.getter();
      double v48 = v47;
      double v50 = v49;
      uint64_t v51 = v46;
      uint64_t v52 = v45;
      uint64_t v53 = v43;
      uint64_t v54 = v118;
      v118(v51, v52);
      sub_1008F5EEC(v48, v50);
      v42(v112, enum case for ConditionCode.snow(_:), v43);
      if (*(void *)(v31 + 16) >= 3uLL)
      {
        unint64_t v55 = v110;
        uint64_t v56 = v110 + 2 * v139 + *(int *)(v140 + 48);
        uint64_t v57 = v133;
        sub_100347CE4(v138 + 2 * v136, v133);
        unint64_t v58 = v134;
        SavedLocation.identifier.getter();
        sub_100158FE4(v57, (void (*)(void))&type metadata accessor for SavedLocation);
        Location.Identifier.coordinate.getter();
        double v60 = v59;
        double v62 = v61;
        uint64_t v63 = v58;
        uint64_t v64 = v142;
        v54(v63, v142);
        sub_1008F5EEC(v60, v62);
        v119(v56, enum case for ConditionCode.thunderstorms(_:), v53);
        if (*(void *)(v31 + 16) >= 4uLL)
        {
          uint64_t v65 = v55 + 3 * v139 + *(int *)(v140 + 48);
          uint64_t v66 = v120;
          sub_100347CE4(v138 + 3 * v136, v120);
          swift_bridgeObjectRelease();
          uint64_t v67 = v121;
          SavedLocation.identifier.getter();
          sub_100158FE4(v66, (void (*)(void))&type metadata accessor for SavedLocation);
          Location.Identifier.coordinate.getter();
          uint64_t v68 = v119;
          double v70 = v69;
          double v72 = v71;
          v54(v67, v64);
          sub_1008F5EEC(v70, v72);
          v68(v65, enum case for ConditionCode.strongStorms(_:), v53);
          type metadata accessor for StubPPTWeatherDataManager.CoordinateString();
          sub_100128D94((unint64_t *)&unk_100EA0240, (void (*)(uint64_t))&type metadata accessor for StubPPTWeatherDataManager.CoordinateString);
          Dictionary.init(dictionaryLiteral:)();
          uint64_t v73 = v111;
LABEL_12:
          uint64_t v99 = v122;
          v68((uint64_t)v122, v73, v53);
          StubPPTWeatherDataManager.setupStubData(for:defaultCondition:)();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v141 + 8))(v99, v53);
          long long v100 = v116;
          sub_100A41EA4();
          sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
          uint64_t v101 = (void *)static OS_dispatch_queue.main.getter();
          uint64_t v102 = v123;
          static DispatchTime.now()();
          uint64_t v103 = v124;
          + infix(_:_:)();
          uint64_t v142 = *(void **)(v125 + 8);
          uint64_t v104 = v126;
          ((void (*)(char *, uint64_t))v142)(v102, v126);
          uint64_t v105 = swift_allocObject();
          *(void *)(v105 + 16) = v100;
          *(unsigned char *)(v105 + 24) = v115;
          aBlock[4] = sub_1008FBE84;
          aBlock[5] = v105;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_10010A4D4;
          aBlock[3] = &unk_100E2D928;
          long long v106 = _Block_copy(aBlock);
          swift_retain();
          swift_release();
          uint64_t v107 = v127;
          static DispatchQoS.unspecified.getter();
          aBlock[0] = _swiftEmptyArrayStorage;
          sub_100128D94((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
          sub_10017DF08(&qword_100E75530);
          sub_100115EDC();
          uint64_t v108 = v129;
          uint64_t v109 = v132;
          dispatch thunk of SetAlgebra.init<A>(_:)();
          OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
          _Block_release(v106);

          (*(void (**)(char *, uint64_t))(v131 + 8))(v108, v109);
          (*(void (**)(char *, uint64_t))(v128 + 8))(v107, v130);
          ((void (*)(char *, uint64_t))v142)(v103, v104);
          return;
        }
        goto LABEL_15;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  LODWORD(v136) = enum case for ConditionCode.cloudy(_:);
  ((void (*)(unint64_t))v42)(v36);
  if (*(void *)(v31 + 16) < 2uLL)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v74 = v41;
  unint64_t v112 = v35 + v139 + *(int *)(v140 + 48);
  uint64_t v117 = *(void *)(v117 + 72);
  sub_100347CE4(v138 + v117, (uint64_t)v27);
  uint64_t v75 = v135;
  SavedLocation.identifier.getter();
  sub_100158FE4((uint64_t)v27, (void (*)(void))&type metadata accessor for SavedLocation);
  Location.Identifier.coordinate.getter();
  double v77 = v76;
  double v79 = v78;
  uint64_t v80 = v75;
  uint64_t v81 = v74;
  uint64_t v53 = v137;
  uint64_t v82 = v118;
  v118(v80, v81);
  sub_1008F5EEC(v77, v79);
  v42(v112, v136, v53);
  if (*(void *)(v31 + 16) < 3uLL)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v83 = v35 + 2 * v139 + *(int *)(v140 + 48);
  uint64_t v84 = v133;
  sub_100347CE4(v138 + 2 * v117, v133);
  uint64_t v85 = v134;
  SavedLocation.identifier.getter();
  sub_100158FE4(v84, (void (*)(void))&type metadata accessor for SavedLocation);
  Location.Identifier.coordinate.getter();
  double v87 = v86;
  double v89 = v88;
  uint64_t v90 = v85;
  uint64_t v91 = v142;
  v82(v90, v142);
  sub_1008F5EEC(v87, v89);
  v119(v83, v136, v53);
  if (*(void *)(v31 + 16) >= 4uLL)
  {
    uint64_t v92 = v35 + 3 * v139 + *(int *)(v140 + 48);
    uint64_t v93 = v120;
    sub_100347CE4(v138 + 3 * v117, v120);
    swift_bridgeObjectRelease();
    char v94 = v121;
    SavedLocation.identifier.getter();
    sub_100158FE4(v93, (void (*)(void))&type metadata accessor for SavedLocation);
    Location.Identifier.coordinate.getter();
    uint64_t v68 = v119;
    double v96 = v95;
    double v98 = v97;
    v82(v94, v91);
    sub_1008F5EEC(v96, v98);
    v68(v92, enum case for ConditionCode.partlyCloudy(_:), v53);
    type metadata accessor for StubPPTWeatherDataManager.CoordinateString();
    sub_100128D94((unint64_t *)&unk_100EA0240, (void (*)(uint64_t))&type metadata accessor for StubPPTWeatherDataManager.CoordinateString);
    Dictionary.init(dictionaryLiteral:)();
    uint64_t v73 = enum case for ConditionCode.clear(_:);
    goto LABEL_12;
  }
LABEL_18:
  __break(1u);
}

void sub_1008F42EC(char a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for MainAction();
  __chkstk_darwin(v6);
  uint64_t v8 = (uint64_t *)((char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = self;
  if ([v9 isRecapAvailable])
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t))(v3 + 16);
    uint64_t v11 = sub_10017DF08((uint64_t *)&unk_100EA0250);
    uint64_t v12 = (char *)v8 + *(int *)(v11 + 48);
    id v43 = v9;
    uint64_t v13 = *(int *)(v11 + 64);
    *uint64_t v8 = 2;
    uint64_t v14 = type metadata accessor for WeatherMapOverlayKind();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, a2, v14);
    *((unsigned char *)v8 + v13) = 1;
    type metadata accessor for PerformanceTestAction();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    int v46 = 0;
    long long aBlock = 0u;
    long long v45 = 0u;
    swift_retain();
    sub_1001AAF58((uint64_t)v8, (uint64_t)&aBlock, v10);
    sub_100178110((uint64_t)&aBlock, (uint64_t *)&unk_100EA01F0);
    sub_100158FE4((uint64_t)v8, (void (*)(void))type metadata accessor for MainAction);
    swift_release();
    unint64_t v15 = sub_1003ADD20(a1);
    uint64_t v17 = v16;
    uint64_t v18 = self;
    id v19 = [v18 sharedApplication];
    UIApplication.expectedWindow.getter();

    sub_1001B1E64(&aBlock, *((uint64_t *)&v45 + 1));
    dispatch thunk of WindowType.bounds.getter();
    double v20 = CGRectGetHeight(v48) * 0.7;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&aBlock);
    id v21 = objc_allocWithZone((Class)RPTDirectionalSwipeTestParameters);
    id v22 = sub_1008FB790(40.0, v20, 300.0, 10.0, v15, v17, 3, 6, 0, 0);
    unint64_t v23 = sub_1003ADD20(a1);
    uint64_t v25 = v24;
    id v26 = [v18 sharedApplication];
    UIApplication.expectedWindow.getter();

    sub_1001B1E64(&aBlock, *((uint64_t *)&v45 + 1));
    dispatch thunk of WindowType.bounds.getter();
    double v27 = CGRectGetHeight(v49) * 0.7;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&aBlock);
    id v28 = objc_allocWithZone((Class)RPTDirectionalSwipeTestParameters);
    id v29 = sub_1008FB790(40.0, v27, 300.0, 10.0, v23, v25, 6, 5, 0, 0);
    uint64_t v30 = self;
    unint64_t v31 = sub_1003ADD20(a1);
    uint64_t v33 = v32;
    sub_10017DF08(&qword_100E6BBD0);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_100C454D0;
    *(void *)(v34 + 32) = v22;
    *(void *)(v34 + 40) = v29;
    *(void *)(v34 + 48) = v22;
    *(void *)&long long aBlock = v34;
    specialized Array._endMutation()();
    id v35 = v22;
    id v36 = v29;
    sub_10017DF08(&qword_100EA0220);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v38 = swift_allocObject();
    swift_weakInit();
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = v38;
    *(unsigned char *)(v39 + 24) = a1;
    int v46 = sub_1008FBED4;
    uint64_t v47 = v39;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v45 = sub_10010A4D4;
    *((void *)&v45 + 1) = &unk_100E2D978;
    double v40 = _Block_copy(&aBlock);
    swift_release();
    id v41 = sub_1008FBB18(v31, v33, (uint64_t)isa, (uint64_t)v40, v30);
    _Block_release(v40);

    [v43 runTestWithParameters:v41];
  }
  else
  {
    sub_1008F4F80(a1, (uint64_t (*)(void))&static os_log_type_t.error.getter, "Failed test: %{public}s", (SEL *)&selRef_failedTest_);
  }
}

uint64_t sub_1008F47D0(char a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E634B0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TaskPriority();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 1, 1, v5);
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(unsigned char *)(v7 + 24) = a1;
  sub_1008F8540((uint64_t)v4, (uint64_t)&unk_100EA0268, v7);
  swift_release();
  return sub_100178110((uint64_t)v4, &qword_100E634B0);
}

uint64_t sub_1008F48E0(int a1)
{
  uint64_t v2 = v1;
  int v43 = a1;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v39 = *(void *)(v3 - 8);
  uint64_t v40 = v3;
  __chkstk_darwin(v3);
  double v37 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for DispatchQoS();
  uint64_t v36 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  id v35 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DispatchTime();
  uint64_t v34 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v41 = (char *)&v32 - v9;
  uint64_t v33 = (uint64_t (*)(char *, uint64_t))type metadata accessor for MainAction();
  __chkstk_darwin(v33);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  unint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v32 - v17;
  sub_100A41EA4();
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  static Settings.VFX.animatedBackgrounds.getter();
  Settings.VFX.AnimatedBackgrounds.locationAnimationKind.getter();
  swift_release();
  SettingReader.read<A>(_:)();
  swift_release();
  swift_release();
  static Settings.VFX.animatedBackgrounds.getter();
  char v19 = dispatch thunk of SettingGroup.isEnabled.getter();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for Settings.VFX.AnimatedBackgrounds.AnimationKind.mica(_:), v12);
  char v20 = sub_10012F990((uint64_t)v18, (uint64_t)v15);
  id v21 = *(void (**)(char *, uint64_t))(v13 + 8);
  v21(v15, v12);
  if (v20 & 1) != 0 && (v19)
  {
    id v22 = [self standardUserDefaults];
    LOBYTE(aBlock) = 0;
    NSUserDefaults.set<A>(_:for:)();

    unint64_t v23 = *(uint64_t (**)(uint64_t))(v2 + 16);
    type metadata accessor for PerformanceTestAction();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    int v46 = 0;
    long long aBlock = 0u;
    long long v45 = 0u;
    swift_retain();
    sub_1001AAF58((uint64_t)v11, (uint64_t)&aBlock, v23);
    sub_100178110((uint64_t)&aBlock, (uint64_t *)&unk_100EA01F0);
    sub_100158FE4((uint64_t)v11, (void (*)(void))type metadata accessor for MainAction);
    swift_release();
    sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
    uint64_t v32 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    + infix(_:_:)();
    uint64_t v33 = (uint64_t (*)(char *, uint64_t))v21;
    uint64_t v34 = *(void *)(v34 + 8);
    ((void (*)(char *, uint64_t))v34)(v7, v42);
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v2;
    *(unsigned char *)(v24 + 24) = v43;
    *(unsigned char *)(v24 + 25) = 1;
    int v46 = sub_1008FC234;
    uint64_t v47 = v24;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v45 = sub_10010A4D4;
    *((void *)&v45 + 1) = &unk_100E2DBF8;
    uint64_t v25 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    id v26 = v35;
    static DispatchQoS.unspecified.getter();
    *(void *)&long long aBlock = _swiftEmptyArrayStorage;
    sub_100128D94((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10017DF08(&qword_100E75530);
    sub_100115EDC();
    double v27 = v37;
    uint64_t v28 = v40;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    id v29 = v41;
    uint64_t v30 = (void *)v32;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v39 + 8))(v27, v28);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v26, v38);
    ((void (*)(char *, uint64_t))v34)(v29, v42);
    return v33(v18, v12);
  }
  else
  {
    sub_1008F873C(0, 0, v2, v43);
    return ((uint64_t (*)(char *, uint64_t))v21)(v18, v12);
  }
}

void sub_1008F4F80(char a1, uint64_t (*a2)(void), const char *a3, SEL *a4)
{
  uint64_t v9 = type metadata accessor for Logger();
  sub_10017C83C();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_100184CB0();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = a2();
  if (os_log_type_enabled(v13, v14))
  {
    swift_slowAlloc();
    uint64_t v21 = sub_100183DC4();
    *(_DWORD *)a2 = 136446210;
    unint64_t v15 = sub_1003ADD20(a1);
    uint64_t v17 = sub_10016414C(v15, v16, &v21);
    sub_10017F094(v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, a3, (uint8_t *)a2, 0xCu);
    sub_1001891D4();
    sub_100162EE0();
    sub_100162EE0();

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v4, v9);
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v4, v9);
  }
  id v18 = [self sharedApplication];
  unint64_t v19 = sub_1003ADD20(a1);
  sub_10013D3A0(v19, v20, v18, a4);
}

uint64_t sub_1008F5158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v39 = a7;
  uint64_t v40 = a2;
  uint64_t v36 = a6;
  uint64_t v37 = a1;
  int v35 = a5;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v44 = *(void *)(v8 - 8);
  uint64_t v45 = v8;
  __chkstk_darwin(v8);
  id v41 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v42 = *(void *)(v10 - 8);
  uint64_t v43 = v10;
  __chkstk_darwin(v10);
  uint64_t v38 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchTime();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  unint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  id v18 = (char *)&v34 - v17;
  uint64_t v19 = type metadata accessor for MainAction();
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100A41EA4();
  id v22 = *(uint64_t (**)(uint64_t))(a3 + 16);
  type metadata accessor for PerformanceTestAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  CGRect v48 = 0;
  long long aBlock = 0u;
  long long v47 = 0u;
  swift_retain();
  sub_1001AAF58((uint64_t)v21, (uint64_t)&aBlock, v22);
  sub_100178110((uint64_t)&aBlock, (uint64_t *)&unk_100EA01F0);
  sub_100158FE4((uint64_t)v21, (void (*)(void))type metadata accessor for MainAction);
  swift_release();
  sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
  unint64_t v23 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v13 + 8);
  v34(v15, v12);
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = a3;
  *(unsigned char *)(v24 + 24) = v35;
  uint64_t v25 = v37;
  id v26 = v18;
  uint64_t v27 = v39;
  uint64_t v28 = v40;
  *(void *)(v24 + 32) = v36;
  *(void *)(v24 + 40) = v27;
  *(void *)(v24 + 48) = v25;
  *(void *)(v24 + 56) = v28;
  CGRect v48 = sub_1008FBA9C;
  uint64_t v49 = v24;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v47 = sub_10010A4D4;
  *((void *)&v47 + 1) = &unk_100E2D388;
  id v29 = _Block_copy(&aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_10005BEBC(v25);
  swift_release();
  uint64_t v30 = v38;
  static DispatchQoS.unspecified.getter();
  *(void *)&long long aBlock = _swiftEmptyArrayStorage;
  sub_100128D94((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10017DF08(&qword_100E75530);
  sub_100115EDC();
  unint64_t v31 = v41;
  uint64_t v32 = v45;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v29);

  (*(void (**)(char *, uint64_t))(v44 + 8))(v31, v32);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v30, v43);
  return ((uint64_t (*)(char *, uint64_t))v34)(v26, v12);
}

void sub_1008F564C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_1008F4F80(a2, (uint64_t (*)(void))&static os_log_type_t.default.getter, "Started test: %{public}s", (SEL *)&selRef_startedTest_);
  id v9 = [self sharedApplication];
  UIApplication.expectedWindow.getter();

  sub_1001B1E64(aBlock, (uint64_t)v32);
  dispatch thunk of WindowType.bounds.getter();
  CGRect v36 = CGRectInset(v35, 10.0, 120.0);
  double x = v36.origin.x;
  double y = v36.origin.y;
  double width = v36.size.width;
  double height = v36.size.height;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)aBlock);
  v37.origin.double x = x;
  v37.origin.double y = y;
  v37.size.double width = width;
  v37.size.double height = height;
  double v14 = CGRectGetHeight(v37) * 3.0;
  id v15 = objc_allocWithZone((Class)RPTScrollViewTestParameters);
  swift_bridgeObjectRetain();
  id v16 = sub_1008FB65C(x, y, width, height, v14, a3, a4, 1, 0, 0);
  v38.origin.double x = x;
  v38.origin.double y = y;
  v38.size.double width = width;
  v38.size.double height = height;
  double v17 = CGRectGetHeight(v38) * 3.0;
  id v18 = objc_allocWithZone((Class)RPTScrollViewTestParameters);
  swift_bridgeObjectRetain();
  id v19 = sub_1008FB65C(x, y, width, height, v17, a3, a4, 0, 0, 0);
  uint64_t v20 = self;
  sub_10017DF08(&qword_100E6BBD0);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_100C31780;
  *(void *)(v21 + 32) = v16;
  *(void *)(v21 + 40) = v19;
  aBlock[0] = v21;
  specialized Array._endMutation()();
  id v22 = v16;
  id v23 = v19;
  sub_10017DF08(&qword_100EA0220);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v25 = swift_allocObject();
  swift_weakInit();
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v25;
  *(unsigned char *)(v26 + 24) = a2;
  *(void *)(v26 + 32) = a5;
  *(void *)(v26 + 40) = a6;
  uint64_t v33 = sub_1008FBAE4;
  uint64_t v34 = v26;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10010A4D4;
  uint64_t v32 = &unk_100E2D400;
  uint64_t v27 = _Block_copy(aBlock);
  sub_10005BEBC(a5);
  swift_release();
  id v28 = sub_1008FBB8C(a3, a4, (uint64_t)isa, (uint64_t)v27, v20);
  _Block_release(v27);

  [self runTestWithParameters:v28];
}

uint64_t sub_1008F59B8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a6;
  sub_1008F5158((uint64_t)sub_1008FBA38, v12, a1, a2, a3, a4, a5);

  return swift_release();
}

void sub_1008F5A64(char a1, void (*a2)(void), uint64_t a3)
{
  unint64_t v6 = sub_1003ADD20(a1);
  uint64_t v8 = v7;
  id v9 = self;
  if ([v9 isRecapAvailable])
  {
    id v31 = v9;
    sub_1008F4F80(a1, (uint64_t (*)(void))&static os_log_type_t.default.getter, "Started test: %{public}s", (SEL *)&selRef_startedTest_);
    id v10 = [self sharedApplication];
    UIApplication.expectedWindow.getter();

    uint64_t v30 = a3;
    sub_1001B1E64(aBlock, (uint64_t)v33);
    dispatch thunk of WindowType.bounds.getter();
    CGRect v37 = CGRectInset(v36, 10.0, 90.0);
    double x = v37.origin.x;
    double y = v37.origin.y;
    double width = v37.size.width;
    double height = v37.size.height;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)aBlock);
    swift_bridgeObjectRetain();
    v38.origin.double x = x;
    v38.origin.double y = y;
    v38.size.double width = width;
    v38.size.double height = height;
    double v15 = CGRectGetHeight(v38) * 3.0;
    id v16 = objc_allocWithZone((Class)RPTScrollViewTestParameters);
    id v17 = sub_1008FB65C(x, y, width, height, v15, v6, v8, 1, 0, 0);
    swift_bridgeObjectRetain();
    v39.origin.double x = x;
    v39.origin.double y = y;
    v39.size.double width = width;
    v39.size.double height = height;
    double v18 = CGRectGetHeight(v39) * 3.0;
    id v19 = objc_allocWithZone((Class)RPTScrollViewTestParameters);
    id v20 = sub_1008FB65C(x, y, width, height, v18, v6, v8, 0, 0, 0);
    id v29 = self;
    sub_10017DF08(&qword_100E6BBD0);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_100C31780;
    *(void *)(v21 + 32) = v17;
    *(void *)(v21 + 40) = v20;
    aBlock[0] = v21;
    specialized Array._endMutation()();
    id v22 = v17;
    id v23 = v20;
    sub_10017DF08(&qword_100EA0220);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v25 = swift_allocObject();
    swift_weakInit();
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = v25;
    *(unsigned char *)(v26 + 24) = a1;
    *(void *)(v26 + 32) = a2;
    *(void *)(v26 + 40) = v30;
    uint64_t v34 = sub_1008FC384;
    uint64_t v35 = v26;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10010A4D4;
    uint64_t v33 = &unk_100E2D568;
    uint64_t v27 = _Block_copy(aBlock);
    sub_10005BEBC((uint64_t)a2);
    swift_release();
    id v28 = sub_1008FBB18(v6, v8, (uint64_t)isa, (uint64_t)v27, v29);
    _Block_release(v27);

    [v31 runTestWithParameters:v28];
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1008F4F80(a1, (uint64_t (*)(void))&static os_log_type_t.error.getter, "Failed test: %{public}s", (SEL *)&selRef_failedTest_);
    if (a2) {
      a2();
    }
  }
}

uint64_t sub_1008F5E40(uint64_t a1, int a2, char a3)
{
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = a3;
  sub_1008F6070((uint64_t)sub_1008FC450, v6, a1, a2, 6, (uint64_t)&unk_100E2D4D8, (uint64_t)sub_1008FBC0C, (uint64_t)&unk_100E2D4F0);

  return swift_release();
}

uint64_t sub_1008F5EEC(double a1, double a2)
{
  sub_10017DF08(&qword_100E64020);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100C251B0;
  *(void *)(v4 + 56) = &type metadata for Double;
  *(void *)(v4 + 64) = &protocol witness table for Double;
  *(double *)(v4 + 32) = a1;
  uint64_t v5 = String.init(format:_:)();
  uint64_t v7 = v6;
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100C251B0;
  *(void *)(v8 + 56) = &type metadata for Double;
  *(void *)(v8 + 64) = &protocol witness table for Double;
  *(double *)(v8 + 32) = a2;
  uint64_t v10 = String.init(format:_:)();

  return StubPPTWeatherDataManager.CoordinateString.init(latitude:longitude:)(v5, v7, v10, v9);
}

uint64_t sub_1008F5FEC(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1008F4F80(a2, (uint64_t (*)(void))&static os_log_type_t.default.getter, "Finished test: %{public}s", (SEL *)&selRef_finishedTest_);
    return swift_release();
  }
  return result;
}

uint64_t sub_1008F6070(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a7;
  uint64_t v44 = a8;
  uint64_t v39 = a6;
  uint64_t v40 = a1;
  v37[3] = a5;
  int v42 = a4;
  uint64_t v41 = a2;
  uint64_t v46 = type metadata accessor for DispatchWorkItemFlags();
  sub_10017C83C();
  uint64_t v49 = v9;
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v45 = v11;
  type metadata accessor for DispatchQoS();
  sub_10017C83C();
  uint64_t v47 = v13;
  uint64_t v48 = v12;
  __chkstk_darwin(v12);
  sub_1001626E0();
  uint64_t v14 = type metadata accessor for DispatchTime();
  uint64_t v38 = v14;
  sub_10017C83C();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  id v19 = (char *)v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  id v22 = (char *)v37 - v21;
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v23);
  sub_1001626E0();
  uint64_t v26 = v25 - v24;
  uint64_t v27 = *(uint64_t (**)(uint64_t))(a3 + 16);
  type metadata accessor for PerformanceTestAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v52 = 0;
  long long aBlock = 0u;
  long long v51 = 0u;
  swift_retain();
  sub_1001AAF58(v26, (uint64_t)&aBlock, v27);
  sub_100178110((uint64_t)&aBlock, (uint64_t *)&unk_100EA01F0);
  sub_100158FE4(v26, (void (*)(void))type metadata accessor for MainAction);
  swift_release();
  sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
  id v28 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  id v29 = *(void (**)(char *, uint64_t))(v16 + 8);
  v29(v19, v14);
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = a3;
  *(unsigned char *)(v30 + 24) = v42;
  uint64_t v32 = v40;
  uint64_t v31 = v41;
  *(void *)(v30 + 32) = v40;
  *(void *)(v30 + 40) = v31;
  uint64_t v52 = v43;
  uint64_t v53 = v30;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v51 = sub_10010A4D4;
  *((void *)&v51 + 1) = v44;
  uint64_t v33 = _Block_copy(&aBlock);
  swift_retain();
  sub_10005BEBC(v32);
  swift_release();
  static DispatchQoS.unspecified.getter();
  *(void *)&long long aBlock = _swiftEmptyArrayStorage;
  sub_100128D94((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10017DF08(&qword_100E75530);
  sub_100115EDC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v33);

  sub_100162F0C();
  v34();
  sub_100162F0C();
  v35();
  return ((uint64_t (*)(char *, uint64_t))v29)(v22, v38);
}

uint64_t sub_1008F6470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a3;
  *(void *)(v12 + 24) = a4;
  sub_10005BEBC(a3);
  a7(a2, a6, v12);

  return swift_release();
}

void sub_1008F650C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v8 = sub_1003ADD20(a1);
  uint64_t v10 = v9;
  uint64_t v11 = self;
  if ([v11 isRecapAvailable])
  {
    uint64_t v42 = a3;
    sub_1008F4F80(a1, (uint64_t (*)(void))&static os_log_type_t.default.getter, "Started test: %{public}s", (SEL *)&selRef_startedTest_);
    uint64_t v12 = self;
    swift_bridgeObjectRetain();
    id v13 = [v12 sharedApplication];
    UIApplication.expectedWindow.getter();

    sub_1001B1E64(aBlock, (uint64_t)v44);
    dispatch thunk of WindowType.bounds.getter();
    double v15 = v14;
    double v17 = v16;
    double v19 = v18;
    double v21 = v20;
    id v22 = objc_allocWithZone((Class)RPTDirectionalSwipeTestParameters);
    id v23 = sub_1008FB790(v15, v17, v19, v21, v8, v10, 1, 6, 0, 0);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)aBlock);
    id v24 = [v12 sharedApplication];
    UIApplication.expectedWindow.getter();

    sub_1001B1E64(aBlock, (uint64_t)v44);
    dispatch thunk of WindowType.bounds.getter();
    double v26 = v25;
    double v28 = v27;
    double v30 = v29;
    double v32 = v31;
    id v33 = objc_allocWithZone((Class)RPTDirectionalSwipeTestParameters);
    id v34 = sub_1008FB790(v26, v28, v30, v32, v8, v10, 1, 5, 0, 0);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)aBlock);
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = v34;
    *(void *)(v35 + 24) = v23;
    *(void *)(v35 + 32) = v4;
    *(unsigned char *)(v35 + 40) = a1;
    uint64_t v36 = a2;
    *(void *)(v35 + 48) = a2;
    *(void *)(v35 + 56) = v42;
    uint64_t v37 = sub_1001ABC4C(0, &qword_100EA0228);
    uint64_t v38 = (void *)swift_allocObject();
    v38[2] = 0x3FF0000000000000;
    v38[3] = v37;
    v38[4] = 2;
    v38[5] = v23;
    v38[6] = sub_1008FBD8C;
    v38[7] = v35;
    uint64_t v45 = sub_1008FBDA4;
    uint64_t v46 = v38;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1008F0760;
    uint64_t v44 = &unk_100E2D6D0;
    uint64_t v39 = _Block_copy(aBlock);
    id v40 = v23;
    id v41 = v34;
    swift_retain();
    sub_10005BEBC(v36);
    swift_retain();
    swift_release();
    [v11 runTestWithParameters:v40 resultHandler:v39];
    _Block_release(v39);

    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1008F4F80(a1, (uint64_t (*)(void))&static os_log_type_t.error.getter, "Failed test: %{public}s", (SEL *)&selRef_failedTest_);
  }
}

uint64_t sub_1008F68BC(uint64_t a1, int a2, char a3)
{
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = a3;
  sub_1008F6070((uint64_t)sub_1008FC450, v6, a1, a2, 7, (uint64_t)&unk_100E2D618, (uint64_t)sub_1008FBC84, (uint64_t)&unk_100E2D630);

  return swift_release();
}

uint64_t sub_1008F6968(void *a1, void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a2;
  *(void *)(v12 + 24) = a3;
  *(unsigned char *)(v12 + 32) = a4;
  *(void *)(v12 + 40) = a5;
  *(void *)(v12 + 48) = a6;
  uint64_t v13 = sub_1001ABC4C(0, &qword_100EA0228);
  double v14 = self;
  double v15 = (void *)swift_allocObject();
  void v15[2] = 0x3FF0000000000000;
  v15[3] = v13;
  v15[4] = 4;
  v15[5] = a1;
  v15[6] = sub_1008FBDF8;
  v15[7] = v12;
  v20[4] = sub_1008FBDA4;
  v20[5] = v15;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 1107296256;
  v20[2] = sub_1008F0760;
  void v20[3] = &unk_100E2D748;
  double v16 = _Block_copy(v20);
  id v17 = a2;
  swift_retain();
  sub_10005BEBC(a5);
  id v18 = a1;
  swift_retain();
  swift_release();
  [v14 runTestWithParameters:v18 resultHandler:v16];
  _Block_release(v16);
  return swift_release();
}

uint64_t sub_1008F6B0C(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  *(unsigned char *)(v10 + 24) = a3;
  *(void *)(v10 + 32) = a4;
  *(void *)(v10 + 40) = a5;
  uint64_t v11 = sub_1001ABC4C(0, &qword_100EA0228);
  uint64_t v12 = self;
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = 0x3FF0000000000000;
  v13[3] = v11;
  v13[4] = 2;
  v13[5] = a1;
  v13[6] = sub_1008FC384;
  v13[7] = v10;
  v17[4] = sub_1008FBDA4;
  v17[5] = v13;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_1008F0760;
  v17[3] = &unk_100E2D7C0;
  double v14 = _Block_copy(v17);
  swift_retain();
  sub_10005BEBC(a4);
  id v15 = a1;
  swift_retain();
  swift_release();
  [v12 runTestWithParameters:v15 resultHandler:v14];
  _Block_release(v14);
  swift_release();
  return swift_release();
}

uint64_t sub_1008F6CCC(uint64_t a1, char a2, uint64_t (*a3)(uint64_t))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1008F4F80(a2, (uint64_t (*)(void))&static os_log_type_t.default.getter, "Finished test: %{public}s", (SEL *)&selRef_finishedTest_);
    uint64_t result = swift_release();
  }
  if (a3) {
    return a3(result);
  }
  return result;
}

uint64_t sub_1008F6D74(uint64_t a1, uint64_t a2, char a3)
{
  *(unsigned char *)(v3 + 257) = a3;
  *(void *)(v3 + 104) = a2;
  uint64_t v4 = type metadata accessor for Logger();
  *(void *)(v3 + 112) = v4;
  *(void *)(v3 + 120) = *(void *)(v4 - 8);
  *(void *)(v3 + 128) = swift_task_alloc();
  *(void *)(v3 + 136) = swift_task_alloc();
  return _swift_task_switch(sub_1008F6E48, 0, 0);
}

uint64_t sub_1008F6E48()
{
  uint64_t v17 = v0;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 144) = Strong;
  if (Strong)
  {
    *(unsigned char *)(v0 + 258) = sub_1008F7E18() & 1;
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1008F70A8;
    return sub_1008F8014();
  }
  else
  {
    static Logger.automation.getter();
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    BOOL v6 = os_log_type_enabled(v4, v5);
    uint64_t v7 = *(void *)(v0 + 136);
    uint64_t v9 = *(void *)(v0 + 112);
    uint64_t v8 = *(void *)(v0 + 120);
    if (v6)
    {
      uint64_t v15 = *(void *)(v0 + 136);
      uint64_t v14 = *(void *)(v0 + 112);
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136446210;
      uint64_t v11 = String.init<A>(describing:)();
      *(void *)(v0 + 80) = sub_10016414C(v11, v12, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to run list view to location view transition test with error: %{public}s", v10, 0xCu);
      swift_arrayDestroy();
      sub_100162EE0();
      sub_100162EE0();

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v15, v14);
    }
    else
    {

      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1001627B4();
    return v13();
  }
}

uint64_t sub_1008F70A8()
{
  sub_1000A9DE8();
  sub_100119470();
  uint64_t v3 = v2;
  sub_10018AA7C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_10018AA7C();
  *BOOL v6 = v5;
  *(void *)(v3 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_100127A5C();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v3 + 168) = v10;
    *uint64_t v10 = v5;
    v10[1] = sub_1008F71E4;
    return sub_1008F81A4(2);
  }
}

uint64_t sub_1008F71E4()
{
  sub_1000A9DE8();
  sub_100119470();
  uint64_t v3 = v2;
  sub_10018AA7C();
  *uint64_t v4 = v3;
  uint64_t v5 = *v1;
  sub_10018AA7C();
  *BOOL v6 = v5;
  *(void *)(v3 + 176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_100127A5C();
    return _swift_task_switch(v7, v8, v9);
  }
  else
  {
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v3 + 184) = v10;
    *uint64_t v10 = v5;
    v10[1] = sub_1008F731C;
    return sub_1008F8014();
  }
}

uint64_t sub_1008F731C()
{
  sub_1000A9DE8();
  sub_100119470();
  sub_10018AA7C();
  *uint64_t v3 = v2;
  uint64_t v4 = *v1;
  sub_10018AA7C();
  void *v5 = v4;
  *(void *)(v6 + 192) = v0;
  swift_task_dealloc();
  sub_100127A5C();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_1008F73FC()
{
  sub_1000A9DE8();
  v0[25] = self;
  v0[26] = type metadata accessor for MainActor();
  v0[27] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1008F74A0, v2, v1);
}

uint64_t sub_1008F74A0()
{
  sub_1000A9DE8();
  uint64_t v1 = *(void **)(v0 + 200);
  swift_release();
  *(void *)(v0 + 224) = [v1 sharedApplication];
  sub_100127A5C();
  return _swift_task_switch(v2, v3, v4);
}

uint64_t sub_1008F7520()
{
  sub_1000A9DE8();
  *(void *)(v0 + 232) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1008F75A8, v2, v1);
}

uint64_t sub_1008F75A8()
{
  sub_1000A9DE8();
  uint64_t v1 = *(void **)(v0 + 224);
  swift_release();
  UIApplication.expectedWindow.getter();

  sub_100127A5C();
  return _swift_task_switch(v2, v3, v4);
}

uint64_t sub_1008F7618()
{
  sub_1001B1E64((void *)(v0 + 16), *(void *)(v0 + 40));
  dispatch thunk of WindowType.bounds.getter();
  double v1 = CGRectGetWidth(v6) * 0.5;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 240) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1008F7704;
  char v3 = *(unsigned char *)(v0 + 257);
  return sub_1008F8264(v3, v1, 200.0);
}

uint64_t sub_1008F7704()
{
  sub_1000A9DE8();
  sub_100119470();
  sub_10018AA7C();
  *char v3 = v2;
  uint64_t v4 = *v1;
  sub_10018AA7C();
  void *v5 = v4;
  *(void *)(v6 + 248) = v0;
  swift_task_dealloc();
  sub_100127A5C();
  return _swift_task_switch(v7, v8, v9);
}

uint64_t sub_1008F77E4()
{
  sub_100109790();
  char v1 = *(unsigned char *)(v0 + 258);
  id v2 = [self standardUserDefaults];
  *(unsigned char *)(v0 + 256) = v1;
  NSUserDefaults.set<A>(_:for:)();

  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1001627B4();
  return v3();
}

#error "1008F799C: call analysis failed (funcsize=83)"

#error "1008F7AF4: call analysis failed (funcsize=83)"

#error "1008F7C4C: call analysis failed (funcsize=83)"

#error "1008F7DA4: call analysis failed (funcsize=83)"

uint64_t sub_1008F7E18()
{
  uint64_t v0 = type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  char v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v6 = &v12[-v5];
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  static Settings.VFX.animatedBackgrounds.getter();
  Settings.VFX.AnimatedBackgrounds.locationAnimationKind.getter();
  swift_release();
  SettingReader.read<A>(_:)();
  swift_release();
  swift_release();
  static Settings.VFX.animatedBackgrounds.getter();
  char v7 = dispatch thunk of SettingGroup.isEnabled.getter();
  swift_release();
  (*(void (**)(unsigned char *, void, uint64_t))(v1 + 104))(v3, enum case for Settings.VFX.AnimatedBackgrounds.AnimationKind.mica(_:), v0);
  char v8 = sub_10012F990((uint64_t)v6, (uint64_t)v3);
  uint64_t v9 = *(void (**)(unsigned char *, uint64_t))(v1 + 8);
  v9(v3, v0);
  if (v8 & 1) != 0 && (v7)
  {
    id v10 = [self standardUserDefaults];
    v12[15] = 0;
    NSUserDefaults.set<A>(_:for:)();
  }
  v9(v6, v0);
  return v7 & 1;
}

uint64_t sub_1008F8014()
{
  *(void *)(v1 + 80) = v0;
  return _swift_task_switch(sub_1008F8034, 0, 0);
}

uint64_t sub_1008F8034()
{
  sub_1000A9DE8();
  uint64_t v1 = v0[10];
  v0[2] = v0;
  v0[3] = sub_1008F80C8;
  uint64_t v2 = swift_continuation_init();
  sub_1008F917C(v2, v1);
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1008F80C8()
{
  sub_100109790();
  sub_100119470();
  uint64_t v1 = *v0;
  sub_10018AA7C();
  *uint64_t v2 = v1;
  if (*(void *)(v3 + 48)) {
    swift_willThrow();
  }
  uint64_t v4 = *(uint64_t (**)(void))(v1 + 8);
  return v4();
}

uint64_t sub_1008F81A4(uint64_t a1)
{
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = v1;
  return _swift_task_switch(sub_1008F81C4, 0, 0);
}

uint64_t sub_1008F81C4()
{
  sub_100109790();
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  v0[2] = v0;
  v0[3] = sub_1008F80C8;
  uint64_t v3 = swift_continuation_init();
  sub_1008F9834(v3, v1, v2);
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1008F8264(char a1, double a2, double a3)
{
  *(void *)(v4 + 104) = v3;
  *(double *)(v4 + 88) = a2;
  *(double *)(v4 + 96) = a3;
  *(unsigned char *)(v4 + 120) = a1;
  return _swift_task_switch(sub_1008F828C, 0, 0);
}

uint64_t sub_1008F828C()
{
  sub_1000A9DE8();
  swift_weakInit();
  sub_100127A5C();
  return _swift_task_switch(v0, v1, v2);
}

uint64_t sub_1008F82F0()
{
  sub_100109790();
  uint64_t v1 = v0 + 16;
  uint64_t v2 = v0 + 80;
  double v4 = *(double *)(v0 + 88);
  double v3 = *(double *)(v0 + 96);
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 24) = sub_1008F83A0;
  char v5 = *(unsigned char *)(v0 + 120);
  uint64_t v6 = swift_continuation_init();
  sub_1008F9F28(v6, v4, v3, v2, v5);
  return _swift_continuation_await(v1);
}

uint64_t sub_1008F83A0()
{
  sub_100109790();
  sub_10018AA7C();
  *uint64_t v2 = v1;
  uint64_t v3 = *v0;
  *uint64_t v2 = *v0;
  uint64_t v5 = *(void *)(v4 + 48);
  *(void *)(v1 + 112) = v5;
  if (v5)
  {
    swift_willThrow();
    sub_100127A5C();
    return _swift_task_switch(v6, v7, v8);
  }
  else
  {
    swift_weakDestroy();
    uint64_t v9 = *(uint64_t (**)(void))(v3 + 8);
    return v9();
  }
}

uint64_t sub_1008F84E4()
{
  sub_1000A9DE8();
  swift_weakDestroy();
  sub_1001627B4();
  return v0();
}

uint64_t sub_1008F8540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E634B0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100890508(a1, (uint64_t)v8);
  uint64_t v9 = (void *)swift_allocObject();
  _OWORD v9[2] = 0;
  v9[3] = 0;
  v9[4] = a2;
  v9[5] = a3;
  uint64_t v10 = type metadata accessor for TaskPriority();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10) == 1)
  {
    sub_100178110((uint64_t)v8, &qword_100E634B0);
    uint64_t v11 = 0;
    uint64_t v12 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);
    if (v9[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v12 = v13;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v11 = 0;
      uint64_t v12 = 0;
    }
  }
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = &unk_100EA0278;
  *(void *)(v14 + 24) = v9;
  if (v12 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v12;
  }
  return swift_task_create();
}

uint64_t sub_1008F873C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v29 = a4;
  uint64_t v31 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v34 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  double v30 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v32 = *(void *)(v6 - 8);
  uint64_t v33 = v6;
  __chkstk_darwin(v6);
  double v28 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchTime();
  uint64_t v27 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v27 - v13;
  uint64_t v15 = type metadata accessor for MainAction();
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(uint64_t (**)(uint64_t))(a3 + 16);
  type metadata accessor for PerformanceTestAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v37 = 0;
  long long aBlock = 0u;
  long long v36 = 0u;
  swift_retain();
  sub_1001AAF58((uint64_t)v17, (uint64_t)&aBlock, v18);
  sub_100178110((uint64_t)&aBlock, (uint64_t *)&unk_100EA01F0);
  sub_100158FE4((uint64_t)v17, (void (*)(void))type metadata accessor for MainAction);
  swift_release();
  sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
  double v19 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  double v20 = *(void (**)(char *, uint64_t))(v9 + 8);
  v20(v11, v8);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a3;
  *(unsigned char *)(v21 + 24) = v29;
  uint64_t v37 = sub_1008FC250;
  uint64_t v38 = v21;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v36 = sub_10010A4D4;
  *((void *)&v36 + 1) = &unk_100E2DC70;
  id v22 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id v23 = v28;
  static DispatchQoS.unspecified.getter();
  *(void *)&long long aBlock = _swiftEmptyArrayStorage;
  sub_100128D94((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10017DF08(&qword_100E75530);
  sub_100115EDC();
  double v25 = v30;
  uint64_t v24 = v31;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v22);

  (*(void (**)(char *, uint64_t))(v34 + 8))(v25, v24);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v23, v33);
  return ((uint64_t (*)(char *, uint64_t))v20)(v14, v27);
}

uint64_t sub_1008F8BCC(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v33 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  double v30 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v31 = *(void *)(v6 - 8);
  uint64_t v32 = v6;
  __chkstk_darwin(v6);
  int v29 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchTime();
  uint64_t v28 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v27 - v13;
  sub_1008F4F80(a2, (uint64_t (*)(void))&static os_log_type_t.default.getter, "Started test: %{public}s", (SEL *)&selRef_startedTest_);
  id v15 = [self sharedApplication];
  UIApplication.expectedWindow.getter();

  sub_1001B1E64(aBlock, (uint64_t)v35);
  dispatch thunk of WindowType.bounds.getter();
  double v16 = CGRectGetWidth(v38) * 0.5;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)aBlock);
  id v17 = objc_allocWithZone((Class)type metadata accessor for FastScrollParameters());
  id v18 = sub_1008FAE88(v16, 400.0, 200.0, 0.1);
  [self runTestWithParameters:v18];
  sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
  double v19 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v20 = v9 + 8;
  uint64_t v21 = *(void (**)(char *, uint64_t))(v9 + 8);
  v27[1] = v20;
  v21(v11, v8);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a1;
  *(unsigned char *)(v22 + 24) = a2;
  long long v36 = sub_1008FC4B0;
  uint64_t v37 = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10010A4D4;
  uint64_t v35 = &unk_100E2DCC0;
  id v23 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  uint64_t v24 = v29;
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100128D94((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10017DF08(&qword_100E75530);
  sub_100115EDC();
  double v25 = v30;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v25, v4);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v24, v32);
  return ((uint64_t (*)(char *, uint64_t))v21)(v14, v28);
}

uint64_t sub_1008F907C(uint64_t a1, int a2, char a3)
{
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = a3;
  sub_1008F873C((uint64_t)sub_1008FC450, v6, a1, a2);

  return swift_release();
}

void sub_1008F9100()
{
  id v0 = [self standardUserDefaults];
  NSUserDefaults.set<A>(_:for:)();
}

uint64_t sub_1008F917C(uint64_t a1, uint64_t a2)
{
  uint64_t v42 = a1;
  uint64_t v3 = type metadata accessor for DispatchTime();
  uint64_t v40 = *(void *)(v3 - 8);
  uint64_t v41 = v3;
  __chkstk_darwin(v3);
  long long v36 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v39 = (char *)&v30 - v6;
  uint64_t v38 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v7 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v45 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DispatchQoS();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v43 = v13;
  uint64_t v44 = v14;
  __chkstk_darwin(v13);
  double v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
  id v17 = (void *)static OS_dispatch_queue.main.getter();
  long long v51 = sub_1008FC1E8;
  uint64_t v52 = a2;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v48 = 1107296256;
  uint64_t v37 = &v49;
  uint64_t v49 = sub_10010A4D4;
  double v50 = &unk_100E2DB58;
  id v18 = _Block_copy(&aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v46 = _swiftEmptyArrayStorage;
  uint64_t v35 = sub_100128D94((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  uint64_t v34 = sub_10017DF08(&qword_100E75530);
  unint64_t v33 = sub_100115EDC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);

  double v19 = *(void (**)(char *, uint64_t))(v45 + 8);
  v45 += 8;
  uint64_t v32 = v19;
  v19(v12, v10);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v44 + 8);
  v44 += 8;
  uint64_t v31 = v20;
  v20(v16, v43);
  swift_release();
  uint64_t v21 = v38;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchQoS.QoSClass.default(_:), v38);
  uint64_t v22 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v21);
  id v23 = v36;
  static DispatchTime.now()();
  uint64_t v24 = v39;
  + infix(_:_:)();
  uint64_t v25 = v41;
  double v26 = *(void (**)(char *, uint64_t))(v40 + 8);
  v26(v23, v41);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v42;
  long long v51 = sub_100352FC8;
  uint64_t v52 = v27;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v48 = 1107296256;
  uint64_t v49 = sub_10010A4D4;
  double v50 = &unk_100E2DBA8;
  uint64_t v28 = _Block_copy(&aBlock);
  static DispatchQoS.unspecified.getter();
  uint64_t v46 = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v28);

  v32(v12, v10);
  v31(v16, v43);
  v26(v24, v25);
  return swift_release();
}

uint64_t sub_1008F9730(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MainAction();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(uint64_t (**)(uint64_t))(a1 + 16);
  type metadata accessor for PerformanceTestAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = 0;
  memset(v7, 0, sizeof(v7));
  swift_retain();
  sub_1001AAF58((uint64_t)v4, (uint64_t)v7, v5);
  sub_100178110((uint64_t)v7, (uint64_t *)&unk_100EA01F0);
  sub_100158FE4((uint64_t)v4, (void (*)(void))type metadata accessor for MainAction);
  return swift_release();
}

uint64_t sub_1008F9834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v43 = a1;
  uint64_t v42 = type metadata accessor for DispatchTime();
  uint64_t v46 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v40 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v41 = (char *)&v31 - v7;
  uint64_t v39 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v8 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v45 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchQoS();
  uint64_t v32 = v14;
  uint64_t v44 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  double v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
  id v17 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a2;
  *(void *)(v18 + 24) = a3;
  uint64_t v52 = sub_1008FC1D4;
  uint64_t v53 = v18;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v49 = 1107296256;
  uint64_t v38 = &v50;
  double v50 = sub_10010A4D4;
  long long v51 = &unk_100E2DAE0;
  double v19 = _Block_copy(&aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v47 = _swiftEmptyArrayStorage;
  uint64_t v36 = sub_100128D94((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  uint64_t v35 = sub_10017DF08(&qword_100E75530);
  unint64_t v34 = sub_100115EDC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v19);

  uint64_t v20 = *(void (**)(char *, uint64_t))(v45 + 8);
  v45 += 8;
  unint64_t v33 = v20;
  v20(v13, v11);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v44 + 8);
  v44 += 8;
  v21(v16, v14);
  swift_release();
  uint64_t v22 = v39;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchQoS.QoSClass.default(_:), v39);
  id v23 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v22);
  uint64_t v24 = v40;
  static DispatchTime.now()();
  uint64_t v25 = v41;
  + infix(_:_:)();
  double v26 = *(void (**)(char *, uint64_t))(v46 + 8);
  v46 += 8;
  uint64_t v27 = v42;
  v26(v24, v42);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v43;
  uint64_t v52 = sub_1008FC3A4;
  uint64_t v53 = v28;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v49 = 1107296256;
  double v50 = sub_10010A4D4;
  long long v51 = &unk_100E2DB30;
  int v29 = _Block_copy(&aBlock);
  static DispatchQoS.unspecified.getter();
  uint64_t v47 = _swiftEmptyArrayStorage;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v29);

  v33(v13, v11);
  v21(v16, v32);
  v26(v25, v27);
  return swift_release();
}

uint64_t sub_1008F9E14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MainAction();
  __chkstk_darwin(v4);
  uint64_t v6 = (void *)((char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(uint64_t (**)(uint64_t))(a1 + 16);
  *uint64_t v6 = a2;
  type metadata accessor for PerformanceTestAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = 0;
  memset(v9, 0, sizeof(v9));
  swift_retain();
  sub_1001AAF58((uint64_t)v6, (uint64_t)v9, v7);
  sub_100178110((uint64_t)v9, (uint64_t *)&unk_100EA01F0);
  sub_100158FE4((uint64_t)v6, (void (*)(void))type metadata accessor for MainAction);
  return swift_release();
}

uint64_t sub_1008F9F28(uint64_t a1, double a2, double a3, uint64_t a4, char a5)
{
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v21 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
  uint64_t v15 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v16 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v16;
  *(unsigned char *)(v17 + 24) = a5;
  *(double *)(v17 + 32) = a2;
  *(double *)(v17 + 40) = a3;
  *(void *)(v17 + 48) = a1;
  aBlock[4] = sub_1008FC148;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10010A4D4;
  void aBlock[3] = &unk_100E2DA40;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  uint64_t v22 = _swiftEmptyArrayStorage;
  sub_100128D94((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10017DF08(&qword_100E75530);
  sub_100115EDC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v9);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v20);
  swift_release();
  return swift_release();
}

uint64_t sub_1008FA268(double a1, double a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v56 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v54 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v10 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for DispatchQoS();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v55 = (char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for DispatchTime();
  uint64_t v14 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v16 = (char *)v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  double v19 = (char *)v43 - v18;
  uint64_t v20 = type metadata accessor for Logger();
  uint64_t v51 = *(void *)(v20 - 8);
  uint64_t v52 = (void (*)(char *, uint64_t))v20;
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v47 = a5;
    uint64_t v48 = v12;
    uint64_t v49 = v10;
    uint64_t v50 = v11;
    int v46 = a4;
    uint64_t v45 = result;
    sub_1008F4F80(a4, (uint64_t (*)(void))&static os_log_type_t.default.getter, "Started test: %{public}s", (SEL *)&selRef_startedTest_);
    id v24 = objc_allocWithZone((Class)type metadata accessor for TapParameters());
    id v25 = sub_1008FAA2C(a1, a2);
    double v26 = self;
    id v44 = v25;
    [v26 runTestWithParameters:v25];
    static Logger.automation.getter();
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v27, v28))
    {
      int v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = (void *)swift_slowAlloc();
      v43[1] = v30;
      *(_DWORD *)int v29 = 136446210;
      v43[0] = v29 + 4;
      uint64_t v57 = v30;
      uint64_t aBlock = 40;
      unint64_t v59 = 0xE100000000000000;
      v31._uint64_t countAndFlagsBits = Double.description.getter();
      String.append(_:)(v31);
      swift_bridgeObjectRelease();
      v32._uint64_t countAndFlagsBits = 44;
      v32._uint64_t object = (void *)0xE100000000000000;
      String.append(_:)(v32);
      v33._uint64_t countAndFlagsBits = Double.description.getter();
      String.append(_:)(v33);
      swift_bridgeObjectRelease();
      v34._uint64_t countAndFlagsBits = 41;
      v34._uint64_t object = (void *)0xE100000000000000;
      String.append(_:)(v34);
      uint64_t aBlock = sub_10016414C(aBlock, v59, (uint64_t *)&v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Tap at %{public}s", v29, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, void))(v51 + 8))(v22, v52);
    sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
    uint64_t v35 = (void *)static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    + infix(_:_:)();
    uint64_t v36 = *(void (**)(char *, uint64_t))(v14 + 8);
    uint64_t v51 = v14 + 8;
    uint64_t v52 = v36;
    uint64_t v37 = v53;
    v36(v16, v53);
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = v45;
    *(unsigned char *)(v38 + 24) = v46;
    *(void *)(v38 + 32) = v47;
    double v62 = sub_1008FC194;
    uint64_t v63 = v38;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    unint64_t v59 = 1107296256;
    double v60 = sub_10010A4D4;
    double v61 = &unk_100E2DA90;
    uint64_t v39 = _Block_copy(&aBlock);
    swift_retain();
    uint64_t v40 = v55;
    static DispatchQoS.unspecified.getter();
    uint64_t v57 = _swiftEmptyArrayStorage;
    sub_100128D94((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10017DF08(&qword_100E75530);
    sub_100115EDC();
    uint64_t v41 = v49;
    uint64_t v42 = v56;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v39);

    swift_release();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v41, v42);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v40, v50);
    v52(v19, v37);
    return swift_release();
  }
  return result;
}

uint64_t sub_1008FA930(uint64_t a1, char a2, uint64_t a3)
{
  sub_1008F4F80(a2, (uint64_t (*)(void))&static os_log_type_t.default.getter, "Finished test: %{public}s", (SEL *)&selRef_finishedTest_);

  return _swift_continuation_throwingResume(a3);
}

uint64_t sub_1008FA994()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 80);
  return v0;
}

uint64_t sub_1008FA9D4()
{
  sub_1008FA994();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LegacyPerformanceTestRunner()
{
  return self;
}

id sub_1008FAA2C(double a1, double a2)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = &v2[OBJC_IVAR____TtC7WeatherP33_4025464B1BDEC98D863ED8B5370ABB4913TapParameters_completionHandler];
  *(void *)uint64_t v6 = 0;
  *((void *)v6 + 1) = 0;
  uint64_t v7 = &v2[OBJC_IVAR____TtC7WeatherP33_4025464B1BDEC98D863ED8B5370ABB4913TapParameters_testName];
  *(void *)uint64_t v7 = 0;
  *((void *)v7 + 1) = 0;
  uint64_t v8 = (double *)&v2[OBJC_IVAR____TtC7WeatherP33_4025464B1BDEC98D863ED8B5370ABB4913TapParameters_point];
  *uint64_t v8 = a1;
  v8[1] = a2;
  v10.receiver = v2;
  v10.super_class = ObjectType;
  return [super init];
}

uint64_t sub_1008FAAC4()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC7WeatherP33_4025464B1BDEC98D863ED8B5370ABB4913TapParameters_completionHandler);
  sub_10005BEBC(v1);
  return v1;
}

void (*sub_1008FABF4())(void *a1)
{
  return sub_1008FB900;
}

void sub_1008FAC4C(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    [a1 pointerOrFingerTap:*(double *)(Strong + OBJC_IVAR____TtC7WeatherP33_4025464B1BDEC98D863ED8B5370ABB4913TapParameters_point), *(double *)(Strong + OBJC_IVAR____TtC7WeatherP33_4025464B1BDEC98D863ED8B5370ABB4913TapParameters_point + 8)];
  }
  else
  {
    static Logger.automation.getter();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      objc_super v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)objc_super v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Failed to run tap due to instance deallocated", v10, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

void sub_1008FADFC()
{
}

uint64_t type metadata accessor for TapParameters()
{
  return self;
}

id sub_1008FAE88(double a1, double a2, double a3, double a4)
{
  ObjectType = (objc_class *)swift_getObjectType();
  objc_super v10 = &v4[OBJC_IVAR____TtC7WeatherP33_4025464B1BDEC98D863ED8B5370ABB4920FastScrollParameters_completionHandler];
  *(void *)objc_super v10 = 0;
  *((void *)v10 + 1) = 0;
  uint64_t v11 = &v4[OBJC_IVAR____TtC7WeatherP33_4025464B1BDEC98D863ED8B5370ABB4920FastScrollParameters_testName];
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  uint64_t v12 = (double *)&v4[OBJC_IVAR____TtC7WeatherP33_4025464B1BDEC98D863ED8B5370ABB4920FastScrollParameters_point];
  double *v12 = a1;
  v12[1] = a2;
  *(double *)&v4[OBJC_IVAR____TtC7WeatherP33_4025464B1BDEC98D863ED8B5370ABB4920FastScrollParameters_distance] = a3;
  *(double *)&v4[OBJC_IVAR____TtC7WeatherP33_4025464B1BDEC98D863ED8B5370ABB4920FastScrollParameters_duration] = a4;
  v14.receiver = v4;
  v14.super_class = ObjectType;
  return [super init];
}

id sub_1008FAF48()
{
  sub_10018C55C();
  uint64_t v2 = v1();
  if (v2)
  {
    v6[4] = v2;
    v6[5] = v3;
    v6[0] = _NSConcreteStackBlock;
    sub_1001D0F44();
    _OWORD v6[2] = sub_10010A4D4;
    v6[3] = v0;
    uint64_t v4 = _Block_copy(v6);
    swift_release();
  }
  else
  {
    uint64_t v4 = 0;
  }

  return v4;
}

uint64_t sub_1008FAFE8()
{
  uint64_t v1 = *(void *)(v0
                 + OBJC_IVAR____TtC7WeatherP33_4025464B1BDEC98D863ED8B5370ABB4920FastScrollParameters_completionHandler);
  sub_10005BEBC(v1);
  return v1;
}

uint64_t sub_1008FB0D8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = (uint64_t *)(v3 + *a3);
  uint64_t v5 = *v4;
  *uint64_t v4 = a1;
  v4[1] = a2;
  return sub_1001361AC(v5);
}

id sub_1008FB100(uint64_t a1, uint64_t a2, void *a3)
{
  sub_1008FB15C(a3);
  if (v3)
  {
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v4 = 0;
  }

  return v4;
}

uint64_t sub_1008FB15C(void *a1)
{
  uint64_t v2 = *(void *)(v1 + *a1);
  swift_bridgeObjectRetain();
  return v2;
}

void sub_1008FB1A0()
{
  sub_10018C55C();
  if (v2)
  {
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v5 = 0;
  }
  id v6 = v1;
  sub_1008FB224(v3, v5, v0);
}

uint64_t sub_1008FB224(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = (void *)(v3 + *a3);
  *uint64_t v4 = a1;
  v4[1] = a2;
  return swift_bridgeObjectRelease();
}

void (*sub_1008FB264())(void *a1)
{
  return sub_1008FB654;
}

void sub_1008FB2BC(void *a1)
{
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (char *)Strong;
    uint64_t v8 = (double *)(Strong + OBJC_IVAR____TtC7WeatherP33_4025464B1BDEC98D863ED8B5370ABB4920FastScrollParameters_point);
    [a1 pointerOrFingerTapDown:*(double *)(Strong + OBJC_IVAR____TtC7WeatherP33_4025464B1BDEC98D863ED8B5370ABB4920FastScrollParameters_point), *(double *)(Strong + OBJC_IVAR____TtC7WeatherP33_4025464B1BDEC98D863ED8B5370ABB4920FastScrollParameters_point + 8)];
    uint64_t v9 = OBJC_IVAR____TtC7WeatherP33_4025464B1BDEC98D863ED8B5370ABB4920FastScrollParameters_distance;
    [a1 pointerOrFingerMoveToPoint:*v8 duration:v8[1]- *(double *)&v7[OBJC_IVAR____TtC7WeatherP33_4025464B1BDEC98D863ED8B5370ABB4920FastScrollParameters_distance] *(double *)&v7[OBJC_IVAR____TtC7WeatherP33_4025464B1BDEC98D863ED8B5370ABB4920FastScrollParameters_duration]];
    [a1 pointerOrFingerTapUp:*v8, v8[1] - *(double *)&v7[v9]];
  }
  else
  {
    static Logger.automation.getter();
    objc_super v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Failed to run scroll due to instance deallocated", v12, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

id sub_1008FB4B8()
{
  sub_10018C55C();
  uint64_t v7 = v1();
  uint64_t v8 = v2;
  v5[0] = _NSConcreteStackBlock;
  sub_1001D0F44();
  _OWORD v5[2] = sub_100B0EB30;
  uint64_t v6 = v0;
  uint64_t v3 = _Block_copy(v5);
  swift_release();

  return v3;
}

void sub_1008FB54C()
{
}

uint64_t sub_1008FB5B4()
{
  sub_10018C55C();
  sub_1001361AC(*(void *)(v1 + *v0));

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for FastScrollParameters()
{
  return self;
}

uint64_t sub_1008FB624()
{
  swift_unknownObjectWeakDestroy();
  sub_100188188();

  return swift_deallocObject();
}

void sub_1008FB654(void *a1)
{
}

id sub_1008FB65C(double a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (!a7)
  {
    NSString v19 = 0;
    if (a9) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v20 = 0;
    goto LABEL_6;
  }
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a9) {
    goto LABEL_5;
  }
LABEL_3:
  v23[4] = a9;
  v23[5] = a10;
  v23[0] = _NSConcreteStackBlock;
  sub_1001D0F44();
  v23[2] = sub_10010A4D4;
  void v23[3] = &unk_100E2D428;
  uint64_t v20 = _Block_copy(v23);
  swift_release();
LABEL_6:
  id v21 = [v10 initWithTestName:v19 scrollBounds:a8 amplitude:v20 direction:a1 completionHandler:a2, a3, a4, a5, v23[0]];
  _Block_release(v20);

  return v21;
}

id sub_1008FB790(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  os_log_type_t v11 = v10;
  if (!a6)
  {
    NSString v20 = 0;
    if (a9) {
      goto LABEL_3;
    }
LABEL_5:
    id v21 = 0;
    goto LABEL_6;
  }
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (!a9) {
    goto LABEL_5;
  }
LABEL_3:
  v24[4] = a9;
  v24[5] = a10;
  v24[0] = _NSConcreteStackBlock;
  sub_1001D0F44();
  v24[2] = sub_10010A4D4;
  v24[3] = &unk_100E2D7E8;
  id v21 = _Block_copy(v24);
  swift_release();
LABEL_6:
  id v22 = [v11 initWithTestName:v20 scrollingBounds:a7 swipeCount:a8 direction:v21 completionHandler:a1, a2, a3, a4, v24[0]];
  _Block_release(v21);

  return v22;
}

uint64_t sub_1008FB8C8()
{
  _Block_release(*(const void **)(v0 + 16));
  sub_100188188();

  return swift_deallocObject();
}

uint64_t sub_1008FB8F8()
{
  return sub_100A60A4C(*(void *)(v0 + 16));
}

void sub_1008FB900(void *a1)
{
}

uint64_t sub_1008FB908(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v8 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_1008FC4B4;
  return v8(a1);
}

uint64_t sub_1008FB9E4()
{
  return sub_1008FBFC0((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1008FBA14()
{
  return sub_1008F59B8(*(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(unsigned __int8 *)(v0 + 25), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
}

uint64_t sub_1008FBA2C()
{
  return sub_10017D164();
}

void sub_1008FBA38()
{
}

uint64_t sub_1008FBA54()
{
  swift_release();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }
  sub_10017F5F4();

  return swift_deallocObject();
}

void sub_1008FBA9C()
{
  sub_1008F564C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_1008FBAB0()
{
  swift_weakDestroy();
  sub_100188188();

  return swift_deallocObject();
}

uint64_t sub_1008FBAE4()
{
  uint64_t v0 = sub_1001821C4();
  return sub_1008F6CCC(v0, v1, v2);
}

void sub_1008FBB00(uint64_t a1, uint64_t a2, void *a3)
{
}

void sub_1008FBB0C(uint64_t a1, uint64_t a2, void *a3)
{
}

id sub_1008FBB18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = [a5 newWithTestName:v8 parameters:a3 completionHandler:a4];

  return v9;
}

id sub_1008FBB8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [a5 newWithTestName:v8 parameters:a3 completionHandler:a4];

  return v9;
}

uint64_t sub_1008FBBEC()
{
  return sub_1008F5E40(*(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(unsigned char *)(v0 + 25));
}

uint64_t sub_1008FBBFC()
{
  return sub_10017D164();
}

uint64_t sub_1008FBC0C()
{
  uint64_t v0 = sub_1001821C4();
  return sub_1008F6470(v0, v1, v2, v3, (uint64_t)&unk_100E2D528, (uint64_t)sub_1008FBC5C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1008F5A64);
}

uint64_t sub_1008FBC64()
{
  return sub_1008F68BC(*(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(unsigned char *)(v0 + 25));
}

uint64_t sub_1008FBC74()
{
  return sub_10017D164();
}

uint64_t sub_1008FBC84()
{
  uint64_t v0 = sub_1001821C4();
  return sub_1008F6470(v0, v1, v2, v3, (uint64_t)&unk_100E2D668, (uint64_t)sub_1008FBC5C, (void (*)(uint64_t, uint64_t, uint64_t))sub_1008F650C);
}

uint64_t sub_1008FBCD4()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  sub_100180160();

  return swift_deallocObject();
}

uint64_t sub_1008FBD0C()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1();
  }
  return result;
}

uint64_t sub_1008FBD3C()
{
  swift_release();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }
  sub_10017F5F4();

  return swift_deallocObject();
}

uint64_t sub_1008FBD8C()
{
  return sub_1008F6968(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_1008FBDA8()
{
  swift_release();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1008FBDF8()
{
  return sub_1008F6B0C(*(void **)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1008FBE14()
{
  swift_unknownObjectRelease();
  swift_release();
  sub_10017F5F4();

  return swift_deallocObject();
}

uint64_t sub_1008FBE4C()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1008FBE84()
{
  sub_1008F4F80(*(unsigned char *)(v0 + 24), (uint64_t (*)(void))&static os_log_type_t.default.getter, "Finished test: %{public}s", (SEL *)&selRef_finishedTest_);
}

uint64_t sub_1008FBED4()
{
  return sub_1008F5FEC(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1008FBEF4()
{
  sub_100109790();
  char v1 = *(unsigned char *)(v0 + 24);
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)sub_100162FCC(v2);
  *uint64_t v3 = v4;
  v3[1] = sub_10007FF00;
  uint64_t v5 = sub_1001832D8();
  return sub_1008F6D74(v5, v6, v1);
}

uint64_t sub_1008FBF90()
{
  return sub_1008FBFC0((void (*)(void))&_swift_unknownObjectRelease, (void (*)(void))&_swift_release);
}

uint64_t sub_1008FBFC0(void (*a1)(void), void (*a2)(void))
{
  a1(*(void *)(v2 + 16));
  a2(*(void *)(v2 + 40));

  return swift_deallocObject();
}

uint64_t sub_1008FC024()
{
  uint64_t v0 = swift_task_alloc();
  char v1 = (void *)sub_100162FCC(v0);
  *char v1 = v2;
  v1[1] = sub_1008FC4B4;
  uint64_t v3 = sub_1001832D8();
  return v4(v3);
}

uint64_t sub_1008FC0E0()
{
  swift_release();
  sub_100180160();

  return swift_deallocObject();
}

uint64_t sub_1008FC110()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008FC148()
{
  return sub_1008FA268(*(double *)(v0 + 32), *(double *)(v0 + 40), *(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(void *)(v0 + 48));
}

uint64_t sub_1008FC15C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008FC194()
{
  return sub_1008FA930(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1008FC1A4()
{
  swift_release();
  sub_100180160();

  return swift_deallocObject();
}

uint64_t sub_1008FC1D4()
{
  return sub_1008F9E14(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1008FC1DC()
{
  return sub_10017D164();
}

uint64_t sub_1008FC1E8()
{
  return sub_1008F9730(v0);
}

uint64_t sub_1008FC1F0()
{
  return sub_10017D164();
}

uint64_t sub_1008FC1FC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008FC234()
{
  return sub_1008F907C(*(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(unsigned char *)(v0 + 25));
}

uint64_t sub_1008FC244()
{
  return sub_10017D164();
}

uint64_t sub_1008FC250()
{
  return sub_1008F8BCC(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

unsigned char *storeEnumTagSinglePayload for LegacyPerformanceTestRunner.LegacyPerformanceTestError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1008FC2F8);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LegacyPerformanceTestRunner.LegacyPerformanceTestError()
{
  return &type metadata for LegacyPerformanceTestRunner.LegacyPerformanceTestError;
}

unint64_t sub_1008FC334()
{
  unint64_t result = qword_100EA02A8;
  if (!qword_100EA02A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA02A8);
  }
  return result;
}

id sub_1008FC4B8()
{
  uint64_t v1 = OBJC_IVAR____TtC7Weather47DebugNotificationDeliveryScheduleViewController____lazy_storage___dateFormatter;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC7Weather47DebugNotificationDeliveryScheduleViewController____lazy_storage___dateFormatter);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC7Weather47DebugNotificationDeliveryScheduleViewController____lazy_storage___dateFormatter);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)NSDateFormatter) init];
    [v4 setDateStyle:1];
    [v4 setTimeStyle:1];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_1008FC554()
{
  sub_100162EA0();
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for PrecipitationNotification();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_100125FF8();
  *(void *)&v0[OBJC_IVAR____TtC7Weather47DebugNotificationDeliveryScheduleViewController____lazy_storage___dateFormatter] = 0;
  uint64_t v8 = type metadata accessor for DeliveryScheduleEntity();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v12 = v8;
  sub_100162808();
  v10();
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  os_log_type_t v11 = v0;
  JSONDecoder.init()();
  DeliveryScheduleEntity.notification.getter();
  dispatch thunk of Column.value.getter();
  swift_release();
  if (v15 >> 60 == 15)
  {
    __break(1u);
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_1008FDA2C(&qword_100EA0308, (void (*)(uint64_t))&type metadata accessor for PrecipitationNotification);
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    swift_release();
    sub_1003FC164(v14, v15);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 32))(&v11[OBJC_IVAR____TtC7Weather47DebugNotificationDeliveryScheduleViewController_notification], v1, v4);

    v13.receiver = v11;
    v13.super_class = (Class)type metadata accessor for DebugNotificationDeliveryScheduleViewController();
    [super initWithStyle:2];
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v3, v12);
    sub_100162694();
  }
}

void sub_1008FC790()
{
  *(void *)&v0[OBJC_IVAR____TtC7Weather47DebugNotificationDeliveryScheduleViewController____lazy_storage___dateFormatter] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1008FC810()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for DebugNotificationDeliveryScheduleViewController();
  [super viewDidLoad];
  id v2 = [v0 tableView];
  if (v2)
  {
    uint64_t v3 = v2;
    sub_10056AF64();
    swift_getObjCClassFromMetadata();
    NSString v4 = sub_10017A514();
    [v3 registerClass:v1 forCellReuseIdentifier:v4];

    sub_10040BF9C(0xD000000000000011, 0x8000000100CB6FA0, v0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1008FC920(uint64_t a1, unint64_t a2)
{
  if (a2 > 2) {
    return 0;
  }
  else {
    return qword_100C66880[a2];
  }
}

unint64_t sub_1008FC95C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = 0x6163696669746F4ELL;
  uint64_t v3 = 0x656C756465686353;
  if (a2) {
    uint64_t v3 = 0;
  }
  if (a2 != 1) {
    uint64_t v2 = v3;
  }
  if (a2 == 2) {
    return 0xD000000000000012;
  }
  else {
    return v2;
  }
}

id sub_1008FCA24()
{
  NSString v1 = sub_10017A514();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v3 = [v0 dequeueReusableCellWithIdentifier:v1 forIndexPath:isa];

  if (IndexPath.section.getter())
  {
    if (IndexPath.section.getter() == 1)
    {
      IndexPath.row.getter();
      sub_1008FD080();
    }
    else if (IndexPath.section.getter() == 2)
    {
      sub_1008FD4E0();
    }
  }
  else
  {
    IndexPath.row.getter();
    sub_1008FCC08();
  }
  return v3;
}

void sub_1008FCC08()
{
  sub_100162EA0();
  uint64_t v2 = v1;
  NSString v4 = v3;
  uint64_t v5 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v32[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  objc_super v10 = (char *)&v32[-1] - v9;
  __chkstk_darwin(v11);
  objc_super v13 = (char *)&v32[-1] - v12;
  uint64_t v14 = type metadata accessor for UIListContentConfiguration();
  sub_100179C0C();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  sub_10017CC58();
  switch(v2)
  {
    case 0:
      sub_10019F458();
      uint64_t v18 = DeliveryScheduleEntity.id.getter();
      goto LABEL_8;
    case 1:
      UIListContentConfiguration.text.setter();
      uint64_t v18 = DeliveryScheduleEntity.state.getter();
LABEL_8:
      v32[0] = v18;
      sub_10017DF08(&qword_100E89788);
      sub_10069804C();
      dispatch thunk of CustomStringConvertible.description.getter();
      swift_release();
      break;
    case 2:
      UIListContentConfiguration.text.setter();
      id v19 = sub_1008FC4B8();
      DeliveryScheduleEntity.created.getter();
      dispatch thunk of Column.value.getter();
      swift_release();
      type metadata accessor for Date();
      sub_100163F10((uint64_t)v13);
      if (v20)
      {
        __break(1u);
LABEL_15:
        __break(1u);
LABEL_16:
        __break(1u);
        JUMPOUT(0x1008FD06CLL);
      }
      id v21 = v13;
      Date._bridgeToObjectiveC()();
      sub_1001806B0();
      sub_100162F0C();
      v22();
      id v23 = [v19 stringFromDate:v13];
      goto LABEL_11;
    case 3:
      sub_10017F4EC();
      id v19 = sub_1008FC4B8();
      DeliveryScheduleEntity.modified.getter();
      dispatch thunk of Column.value.getter();
      swift_release();
      type metadata accessor for Date();
      sub_100163F10((uint64_t)v10);
      if (v20) {
        goto LABEL_16;
      }
      id v21 = v10;
      Date._bridgeToObjectiveC()();
      sub_1001806B0();
      sub_100162F0C();
      v28();
      id v23 = [v19 stringFromDate:v10];
LABEL_11:
      id v29 = v23;

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      break;
    case 4:
      sub_100163AD0();
      id v24 = sub_1008FC4B8();
      DeliveryScheduleEntity.date.getter();
      dispatch thunk of Column.value.getter();
      swift_release();
      type metadata accessor for Date();
      sub_100163F10((uint64_t)v7);
      if (v20) {
        goto LABEL_15;
      }
      id v25 = v7;
      Date._bridgeToObjectiveC()();
      sub_1001806B0();
      sub_100162F0C();
      v26();
      id v27 = [v24 stringFromDate:v7];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      break;
    default:
      goto LABEL_13;
  }
  UIListContentConfiguration.secondaryText.setter();
LABEL_13:
  v32[3] = v14;
  v32[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  sub_100170694(v32);
  sub_100162808();
  v30();
  UITableViewCell.contentConfiguration.setter();
  [v4 setSelectionStyle:0];
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v0, v14);
  sub_100162694();
}

void sub_1008FD080()
{
  sub_100162EA0();
  uint64_t v2 = v1;
  uint64_t v18 = v3;
  type metadata accessor for Date();
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_1001626E0();
  type metadata accessor for ForecastSummary.Intensity();
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_10017FDD0();
  type metadata accessor for PrecipitationType();
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_1001626E0();
  type metadata accessor for PrecipitationNotification.Kind();
  sub_100179C0C();
  __chkstk_darwin(v7);
  sub_100125FF8();
  uint64_t v17 = type metadata accessor for UIListContentConfiguration();
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_10017CC58();
  switch(v2)
  {
    case 0:
      sub_10019F458();
      PrecipitationNotification.identifier.getter();
      goto LABEL_10;
    case 1:
      sub_100163AD0();
      sub_10019DA30();
      PrecipitationNotification.kind.getter();
      _print_unlocked<A, B>(_:_:)();
      goto LABEL_8;
    case 2:
      sub_10017F4EC();
      sub_10019DA30();
      PrecipitationNotification.starting.getter();
      goto LABEL_6;
    case 3:
      sub_10017F4EC();
      sub_10019DA30();
      PrecipitationNotification.stopping.getter();
LABEL_6:
      _print_unlocked<A, B>(_:_:)();
      goto LABEL_8;
    case 4:
      UIListContentConfiguration.text.setter();
      sub_10019DA30();
      PrecipitationNotification.intensity.getter();
      _print_unlocked<A, B>(_:_:)();
LABEL_8:
      sub_100162F0C();
      v11();
      goto LABEL_10;
    case 5:
      sub_100163AD0();
      id v12 = sub_1008FC4B8();
      PrecipitationNotification.date.getter();
      Class isa = Date._bridgeToObjectiveC()().super.isa;
      sub_100162F0C();
      v14();
      id v15 = [v12 stringFromDate:isa];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
LABEL_10:
      UIListContentConfiguration.secondaryText.setter();
      break;
    default:
      break;
  }
  v19[3] = v17;
  v19[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  sub_100170694(v19);
  sub_100162808();
  v16();
  UITableViewCell.contentConfiguration.setter();
  [v18 setSelectionStyle:0];
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0, v17);
  sub_100162694();
}

void sub_1008FD4E0()
{
  sub_100162EA0();
  uint64_t v17 = v0;
  uint64_t v1 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v1 - 8);
  sub_1001626E0();
  uint64_t v16 = type metadata accessor for UIListContentConfiguration();
  sub_100179C0C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  type metadata accessor for NextHourForecast();
  sub_100179C0C();
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v9 = type metadata accessor for JSONEncoder.OutputFormatting();
  __chkstk_darwin(v9 - 8);
  sub_10017FDD0();
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  static JSONEncoder.OutputFormatting.prettyPrinted.getter();
  dispatch thunk of JSONEncoder.outputFormatting.setter();
  PrecipitationNotification.forecast.getter();
  sub_1008FDA2C(&qword_100EA0300, (void (*)(uint64_t))&type metadata accessor for NextHourForecast);
  uint64_t v10 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  unint64_t v12 = v11;
  uint64_t v13 = sub_1001D1F7C();
  v14(v13);
  static UIListContentConfiguration.cell()();
  static String.Encoding.utf8.getter();
  String.init(data:encoding:)();
  UIListContentConfiguration.text.setter();
  v18[3] = v16;
  v18[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  sub_100170694(v18);
  sub_100162808();
  v15();
  UITableViewCell.contentConfiguration.setter();
  [v17 setSelectionStyle:0];
  sub_100318440(v10, v12);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v16);
  sub_100162694();
}

void sub_1008FD794()
{
}

void sub_1008FD7D4()
{
}

id sub_1008FD82C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DebugNotificationDeliveryScheduleViewController();
  return [super dealloc];
}

uint64_t sub_1008FD908()
{
  return type metadata accessor for DebugNotificationDeliveryScheduleViewController();
}

uint64_t type metadata accessor for DebugNotificationDeliveryScheduleViewController()
{
  uint64_t result = qword_100EA02F0;
  if (!qword_100EA02F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1008FD958()
{
  uint64_t result = type metadata accessor for DeliveryScheduleEntity();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for PrecipitationNotification();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1008FDA2C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1008FDA74(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    uint64_t v14 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v6 = type metadata accessor for Location.Identifier();
    uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16);
    v7(a1, a2, v6);
    uint64_t v8 = (int *)type metadata accessor for LocationViewModel();
    uint64_t v9 = v8[5];
    uint64_t v10 = &a1[v9];
    unint64_t v11 = &a2[v9];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v9], 1, v6))
    {
      uint64_t v12 = sub_10017DF08(&qword_100E6DC08);
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      v7(v10, v11, v6);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v6);
    }
    uint64_t v15 = v8[6];
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    uint64_t v18 = *(void *)&a2[v15 + 8];
    *(void *)uint64_t v16 = *(void *)&a2[v15];
    *((void *)v16 + 1) = v18;
    uint64_t v19 = *(void *)&a2[v15 + 16];
    uint64_t v20 = *(void *)&a2[v15 + 24];
    uint64_t v21 = *(void *)&a2[v15 + 32];
    uint64_t v22 = *(void *)&a2[v15 + 40];
    char v23 = a2[v15 + 48];
    swift_bridgeObjectRetain();
    sub_100193004(v19, v20, v21, v22, v23);
    *((void *)v16 + 2) = v19;
    *((void *)v16 + 3) = v20;
    *((void *)v16 + 4) = v21;
    *((void *)v16 + 5) = v22;
    v16[48] = v23;
    uint64_t v24 = *((void *)v17 + 8);
    *((void *)v16 + 7) = *((void *)v17 + 7);
    *((void *)v16 + 8) = v24;
    uint64_t v25 = *((void *)v17 + 10);
    *((void *)v16 + 9) = *((void *)v17 + 9);
    *((void *)v16 + 10) = v25;
    uint64_t v26 = *((void *)v17 + 12);
    *((void *)v16 + 11) = *((void *)v17 + 11);
    *((void *)v16 + 12) = v26;
    uint64_t v27 = *((void *)v17 + 14);
    *((void *)v16 + 13) = *((void *)v17 + 13);
    *((void *)v16 + 14) = v27;
    uint64_t v28 = *((void *)v17 + 16);
    *((void *)v16 + 15) = *((void *)v17 + 15);
    *((void *)v16 + 16) = v28;
    v16[136] = v17[136];
    *(_WORD *)(v16 + 137) = *(_WORD *)(v17 + 137);
    uint64_t v29 = *((void *)v17 + 19);
    *((void *)v16 + 18) = *((void *)v17 + 18);
    *((void *)v16 + 19) = v29;
    v16[160] = v17[160];
    v16[161] = v17[161];
    *(void *)&a1[v8[7]] = *(void *)&a2[v8[7]];
    *(void *)&a1[v8[8]] = *(void *)&a2[v8[8]];
    double v96 = a2;
    double v97 = v8;
    uint64_t v30 = v8[9];
    Swift::String v31 = a1;
    Swift::String v32 = &a1[v30];
    Swift::String v33 = &a2[v30];
    uint64_t v34 = type metadata accessor for LocationFooterViewModel();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v35 = (int *)v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34))
    {
      uint64_t v36 = sub_10017DF08(&qword_100E6DC18);
      memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
      uint64_t v37 = a2;
      uint64_t v14 = v31;
    }
    else
    {
      char *v32 = *v33;
      *(_WORD *)(v32 + 1) = *(_WORD *)(v33 + 1);
      uint64_t v38 = *((void *)v33 + 2);
      *((void *)v32 + 1) = *((void *)v33 + 1);
      *((void *)v32 + 2) = v38;
      uint64_t v39 = *(int *)(v34 + 32);
      uint64_t v40 = v32;
      uint64_t v41 = &v32[v39];
      uint64_t v42 = &v33[v39];
      uint64_t v43 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43))
      {
        uint64_t v44 = sub_10017DF08(&qword_100E749B0);
        memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v43);
      }
      uint64_t v14 = v31;
      double v95 = v35;
      uint64_t v45 = v35[9];
      uint64_t v46 = (uint64_t)v40;
      uint64_t v47 = &v40[v45];
      uint64_t v48 = &v33[v45];
      unsigned char *v47 = v33[v45];
      *((void *)v47 + 1) = *(void *)&v33[v45 + 8];
      uint64_t v49 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
      uint64_t v50 = v49[6];
      uint64_t v51 = &v47[v50];
      uint64_t v52 = &v48[v50];
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v43))
      {
        uint64_t v53 = sub_10017DF08(&qword_100E749B0);
        memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v43 - 8) + 16))(v51, v52, v43);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v51, 0, 1, v43);
      }
      uint64_t v54 = v49[7];
      unint64_t v55 = &v47[v54];
      uint64_t v56 = &v48[v54];
      uint64_t v57 = v56[1];
      *unint64_t v55 = *v56;
      v55[1] = v57;
      *(void *)&v47[v49[8]] = *(void *)&v48[v49[8]];
      v40[v95[10]] = v33[v95[10]];
      uint64_t v58 = v95[11];
      unint64_t v59 = &v40[v58];
      double v60 = &v33[v58];
      uint64_t v61 = type metadata accessor for LocationOfInterest();
      swift_bridgeObjectRetain();
      swift_retain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v61))
      {
        uint64_t v62 = sub_10017DF08(&qword_100E63508);
        memcpy(v59, v60, *(void *)(*(void *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, 0, 1, v61);
      }
      v40[v95[12]] = v33[v95[12]];
      v40[v95[13]] = v33[v95[13]];
      uint64_t v63 = v95[14];
      uint64_t v64 = &v40[v63];
      uint64_t v65 = &v33[v63];
      uint64_t v66 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, (uint64_t)v66))
      {
        uint64_t v67 = sub_10017DF08(&qword_100E6DC10);
        memcpy(v64, v65, *(void *)(*(void *)(v67 - 8) + 64));
      }
      else
      {
        *uint64_t v64 = *v65;
        uint64_t v68 = v66[5];
        double v69 = &v64[v68];
        double v70 = &v65[v68];
        uint64_t v71 = type metadata accessor for Location();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v71 - 8) + 16))(v69, v70, v71);
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v61 - 8) + 16))(&v64[v66[6]], &v65[v66[6]], v61);
        v64[v66[7]] = v65[v66[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v64, 0, 1, (uint64_t)v66);
      }
      uint64_t v37 = v96;
      _s7Weather24LocationCompositionStateOwst_0(v46, 0, 1, (uint64_t)v95);
    }
    *((unsigned char *)v14 + v97[10]) = *((unsigned char *)v37 + v97[10]);
    *((unsigned char *)v14 + v97[11]) = *((unsigned char *)v37 + v97[11]);
    *((unsigned char *)v14 + v97[12]) = *((unsigned char *)v37 + v97[12]);
    *((unsigned char *)v14 + v97[13]) = *((unsigned char *)v37 + v97[13]);
    *((unsigned char *)v14 + v97[14]) = *((unsigned char *)v37 + v97[14]);
    uint64_t v72 = v97[15];
    uint64_t v73 = *(void **)((char *)v37 + v72);
    *(void *)((char *)v14 + v72) = v73;
    *((unsigned char *)v14 + v97[16]) = *((unsigned char *)v37 + v97[16]);
    *((unsigned char *)v14 + v97[17]) = *((unsigned char *)v37 + v97[17]);
    *((unsigned char *)v14 + v97[18]) = *((unsigned char *)v37 + v97[18]);
    uint64_t v74 = v97[19];
    uint64_t v75 = (uint64_t)v14 + v74;
    double v76 = (char *)v37 + v74;
    uint64_t v77 = type metadata accessor for Date();
    double v78 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v77 - 8) + 16);
    id v79 = v73;
    v78(v75, v76, v77);
    uint64_t v80 = v97[20];
    uint64_t v81 = (char *)v14 + v80;
    uint64_t v82 = (char *)v37 + v80;
    uint64_t v83 = type metadata accessor for ForegroundEffect();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v83))
    {
      uint64_t v84 = sub_10017DF08(&qword_100E65FA8);
      memcpy(v81, v82, *(void *)(*(void *)(v84 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16))(v81, v82, v83);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v83);
    }
    *((unsigned char *)v14 + v97[21]) = *((unsigned char *)v37 + v97[21]);
    *(void *)((char *)v14 + v97[22]) = *(void *)((char *)v37 + v97[22]);
    *((unsigned char *)v14 + v97[23]) = *((unsigned char *)v37 + v97[23]);
    uint64_t v85 = v97[24];
    uint64_t v86 = (uint64_t)v14 + v85;
    double v87 = (char *)v37 + v85;
    uint64_t v88 = type metadata accessor for LocationEntity();
    double v89 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v88 - 8) + 16);
    swift_bridgeObjectRetain();
    v89(v86, v87, v88);
    uint64_t v90 = *(int *)(a3 + 20);
    uint64_t v91 = (void *)((char *)v14 + v90);
    uint64_t v92 = (void *)((char *)v37 + v90);
    uint64_t v93 = v92[1];
    void *v91 = *v92;
    v91[1] = v93;
  }
  swift_retain();
  return v14;
}

uint64_t sub_1008FE2FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for LocationViewModel();
  uint64_t v9 = v8[5];
  uint64_t v10 = (void *)(a1 + v9);
  unint64_t v11 = (const void *)(a2 + v9);
  if (_s7Weather24LocationCompositionStateOwet_0(a2 + v9, 1, v6))
  {
    uint64_t v12 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v10, (uint64_t)v11, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v6);
  }
  memcpy((void *)(a1 + v8[6]), (const void *)(a2 + v8[6]), 0xA2uLL);
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  *(void *)(a1 + v8[8]) = *(void *)(a2 + v8[8]);
  uint64_t v13 = v8[9];
  uint64_t v14 = (unsigned char *)(a1 + v13);
  uint64_t v15 = (unsigned char *)(a2 + v13);
  uint64_t v16 = type metadata accessor for LocationFooterViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
  {
    uint64_t v17 = sub_10017DF08(&qword_100E6DC18);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v58 = a3;
    unsigned char *v14 = *v15;
    *(_WORD *)(v14 + 1) = *(_WORD *)(v15 + 1);
    *(_OWORD *)(v14 + 8) = *(_OWORD *)(v15 + 8);
    uint64_t v18 = *(int *)(v16 + 32);
    uint64_t v19 = &v14[v18];
    uint64_t v20 = &v15[v18];
    uint64_t v21 = type metadata accessor for URL();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21))
    {
      uint64_t v22 = sub_10017DF08(&qword_100E749B0);
      memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
    }
    uint64_t v57 = (int *)v16;
    uint64_t v23 = *(int *)(v16 + 36);
    uint64_t v24 = &v14[v23];
    uint64_t v25 = &v15[v23];
    *uint64_t v24 = v15[v23];
    *((void *)v24 + 1) = *(void *)&v15[v23 + 8];
    uint64_t v26 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
    uint64_t v27 = v26[6];
    __dst = &v24[v27];
    uint64_t v28 = &v25[v27];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v25[v27], 1, v21))
    {
      uint64_t v29 = sub_10017DF08(&qword_100E749B0);
      memcpy(__dst, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 32))(__dst, v28, v21);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v21);
    }
    *(_OWORD *)&v24[v26[7]] = *(_OWORD *)&v25[v26[7]];
    *(void *)&v24[v26[8]] = *(void *)&v25[v26[8]];
    v14[v57[10]] = v15[v57[10]];
    uint64_t v30 = v57[11];
    Swift::String v31 = &v14[v30];
    Swift::String v32 = &v15[v30];
    uint64_t v33 = type metadata accessor for LocationOfInterest();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v33))
    {
      uint64_t v34 = sub_10017DF08(&qword_100E63508);
      memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v33);
    }
    v14[v57[12]] = v15[v57[12]];
    v14[v57[13]] = v15[v57[13]];
    uint64_t v35 = v57[14];
    uint64_t v36 = &v14[v35];
    uint64_t v37 = &v15[v35];
    uint64_t v38 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, (uint64_t)v38))
    {
      uint64_t v39 = sub_10017DF08(&qword_100E6DC10);
      memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      *uint64_t v36 = *v37;
      uint64_t v40 = v38[5];
      uint64_t v41 = &v36[v40];
      __dsta = &v37[v40];
      uint64_t v42 = type metadata accessor for Location();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v42 - 8) + 32))(v41, __dsta, v42);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v33 - 8) + 32))(&v36[v38[6]], &v37[v38[6]], v33);
      v36[v38[7]] = v37[v38[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, (uint64_t)v38);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, (uint64_t)v57);
    a3 = v58;
  }
  *(unsigned char *)(a1 + v8[10]) = *(unsigned char *)(a2 + v8[10]);
  *(unsigned char *)(a1 + v8[11]) = *(unsigned char *)(a2 + v8[11]);
  *(unsigned char *)(a1 + v8[12]) = *(unsigned char *)(a2 + v8[12]);
  *(unsigned char *)(a1 + v8[13]) = *(unsigned char *)(a2 + v8[13]);
  *(unsigned char *)(a1 + v8[14]) = *(unsigned char *)(a2 + v8[14]);
  *(void *)(a1 + v8[15]) = *(void *)(a2 + v8[15]);
  *(unsigned char *)(a1 + v8[16]) = *(unsigned char *)(a2 + v8[16]);
  *(unsigned char *)(a1 + v8[17]) = *(unsigned char *)(a2 + v8[17]);
  *(unsigned char *)(a1 + v8[18]) = *(unsigned char *)(a2 + v8[18]);
  uint64_t v43 = v8[19];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  uint64_t v47 = v8[20];
  uint64_t v48 = (void *)(a1 + v47);
  uint64_t v49 = (const void *)(a2 + v47);
  uint64_t v50 = type metadata accessor for ForegroundEffect();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v50))
  {
    uint64_t v51 = sub_10017DF08(&qword_100E65FA8);
    memcpy(v48, v49, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v50);
  }
  *(unsigned char *)(a1 + v8[21]) = *(unsigned char *)(a2 + v8[21]);
  *(void *)(a1 + v8[22]) = *(void *)(a2 + v8[22]);
  *(unsigned char *)(a1 + v8[23]) = *(unsigned char *)(a2 + v8[23]);
  uint64_t v52 = v8[24];
  uint64_t v53 = a1 + v52;
  uint64_t v54 = a2 + v52;
  uint64_t v55 = type metadata accessor for LocationEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1008FE9FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for Location.Identifier();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  uint64_t v8 = (int *)type metadata accessor for LocationViewModel();
  uint64_t v9 = v8[5];
  uint64_t v10 = (void *)(a1 + v9);
  unint64_t v11 = (const void *)(a2 + v9);
  int v12 = _s7Weather24LocationCompositionStateOwet_0(a1 + v9, 1, v5);
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v5);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v10, v11, v5);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v5);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v10, v5);
LABEL_6:
    uint64_t v14 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v7((uint64_t)v10, (uint64_t)v11, v5);
LABEL_7:
  uint64_t v15 = v8[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = *(void *)(a2 + v15 + 8);
  *(void *)uint64_t v16 = *(void *)(a2 + v15);
  *(void *)(v16 + 8) = v18;
  swift_bridgeObjectRelease();
  char v19 = *(unsigned char *)(v17 + 48);
  uint64_t v20 = *(void *)(v16 + 16);
  uint64_t v21 = *(void *)(v16 + 24);
  uint64_t v22 = *(void *)(v16 + 32);
  uint64_t v23 = *(void *)(v16 + 40);
  long long v24 = *(_OWORD *)(v17 + 32);
  *(_OWORD *)(v16 + 16) = *(_OWORD *)(v17 + 16);
  *(_OWORD *)(v16 + 32) = v24;
  char v25 = *(unsigned char *)(v16 + 48);
  *(unsigned char *)(v16 + 48) = v19;
  sub_100191D78(v20, v21, v22, v23, v25);
  uint64_t v26 = *(void *)(v17 + 64);
  *(void *)(v16 + 56) = *(void *)(v17 + 56);
  *(void *)(v16 + 64) = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = *(void *)(v17 + 80);
  *(void *)(v16 + 72) = *(void *)(v17 + 72);
  *(void *)(v16 + 80) = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(v17 + 96);
  *(void *)(v16 + 88) = *(void *)(v17 + 88);
  *(void *)(v16 + 96) = v28;
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void *)(v17 + 112);
  *(void *)(v16 + 104) = *(void *)(v17 + 104);
  *(void *)(v16 + 112) = v29;
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(v17 + 128);
  *(void *)(v16 + 120) = *(void *)(v17 + 120);
  *(void *)(v16 + 128) = v30;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v16 + 136) = *(unsigned char *)(v17 + 136);
  *(unsigned char *)(v16 + 137) = *(unsigned char *)(v17 + 137);
  *(unsigned char *)(v16 + 138) = *(unsigned char *)(v17 + 138);
  uint64_t v31 = *(void *)(v17 + 152);
  *(void *)(v16 + 144) = *(void *)(v17 + 144);
  *(void *)(v16 + 152) = v31;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v16 + 160) = *(unsigned char *)(v17 + 160);
  *(unsigned char *)(v16 + 161) = *(unsigned char *)(v17 + 161);
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + v8[8]) = *(void *)(a2 + v8[8]);
  swift_release();
  uint64_t v32 = v8[9];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  uint64_t v35 = (int *)type metadata accessor for LocationFooterViewModel();
  LODWORD(v16) = _s7Weather24LocationCompositionStateOwet_0(v33, 1, (uint64_t)v35);
  int v36 = _s7Weather24LocationCompositionStateOwet_0(v34, 1, (uint64_t)v35);
  if (v16)
  {
    if (!v36)
    {
      *(unsigned char *)uint64_t v33 = *(unsigned char *)v34;
      *(_WORD *)(v33 + 1) = *(_WORD *)(v34 + 1);
      *(_OWORD *)(v33 + 8) = *(_OWORD *)(v34 + 8);
      uint64_t v37 = v35[8];
      uint64_t v38 = (void *)(v33 + v37);
      uint64_t v39 = (const void *)(v34 + v37);
      uint64_t v40 = type metadata accessor for URL();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40))
      {
        uint64_t v41 = sub_10017DF08(&qword_100E749B0);
        memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
      }
      uint64_t v137 = v35;
      uint64_t v52 = v35[9];
      uint64_t v53 = v33 + v52;
      uint64_t v54 = v34 + v52;
      *(unsigned char *)uint64_t v53 = *(unsigned char *)(v34 + v52);
      *(void *)(v53 + 8) = *(void *)(v34 + v52 + 8);
      uint64_t v55 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
      uint64_t v56 = v55[6];
      __dst = (void *)(v53 + v56);
      uint64_t v57 = (const void *)(v54 + v56);
      if (_s7Weather24LocationCompositionStateOwet_0(v54 + v56, 1, v40))
      {
        uint64_t v58 = sub_10017DF08(&qword_100E749B0);
        memcpy(__dst, v57, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v40 - 8) + 32))(__dst, v57, v40);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v40);
      }
      *(_OWORD *)(v53 + v55[7]) = *(_OWORD *)(v54 + v55[7]);
      *(void *)(v53 + v55[8]) = *(void *)(v54 + v55[8]);
      *(unsigned char *)(v33 + v137[10]) = *(unsigned char *)(v34 + v137[10]);
      uint64_t v59 = v137[11];
      double v60 = (void *)(v33 + v59);
      uint64_t v61 = (const void *)(v34 + v59);
      uint64_t v62 = type metadata accessor for LocationOfInterest();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v62))
      {
        uint64_t v63 = sub_10017DF08(&qword_100E63508);
        memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v62);
      }
      *(unsigned char *)(v33 + v137[12]) = *(unsigned char *)(v34 + v137[12]);
      *(unsigned char *)(v33 + v137[13]) = *(unsigned char *)(v34 + v137[13]);
      uint64_t v64 = v137[14];
      uint64_t v65 = (unsigned char *)(v33 + v64);
      uint64_t v66 = (unsigned char *)(v34 + v64);
      uint64_t v67 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, (uint64_t)v67))
      {
        uint64_t v68 = sub_10017DF08(&qword_100E6DC10);
        memcpy(v65, v66, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        unsigned char *v65 = *v66;
        uint64_t v69 = v67[5];
        double v70 = &v65[v69];
        __dstb = &v66[v69];
        uint64_t v71 = type metadata accessor for Location();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v71 - 8) + 32))(v70, __dstb, v71);
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v62 - 8) + 32))(&v65[v67[6]], &v66[v67[6]], v62);
        v65[v67[7]] = v66[v67[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 0, 1, (uint64_t)v67);
      }
      uint64_t v72 = v33;
      uint64_t v73 = (uint64_t)v137;
      goto LABEL_30;
    }
    goto LABEL_13;
  }
  if (v36)
  {
    sub_1000B07E0(v33, (void (*)(void))type metadata accessor for LocationFooterViewModel);
LABEL_13:
    size_t v42 = *(void *)(*(void *)(sub_10017DF08(&qword_100E6DC18) - 8) + 64);
    uint64_t v43 = (void *)v33;
    uint64_t v44 = (const void *)v34;
LABEL_14:
    memcpy(v43, v44, v42);
    goto LABEL_31;
  }
  *(unsigned char *)uint64_t v33 = *(unsigned char *)v34;
  *(unsigned char *)(v33 + 1) = *(unsigned char *)(v34 + 1);
  *(unsigned char *)(v33 + 2) = *(unsigned char *)(v34 + 2);
  uint64_t v45 = *(void *)(v34 + 16);
  *(void *)(v33 + 8) = *(void *)(v34 + 8);
  *(void *)(v33 + 16) = v45;
  swift_bridgeObjectRelease();
  uint64_t v46 = v35[8];
  uint64_t v47 = (void *)(v33 + v46);
  uint64_t v48 = (const void *)(v34 + v46);
  uint64_t v49 = type metadata accessor for URL();
  int v50 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v49);
  int v51 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v49);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v49);
      goto LABEL_42;
    }
    goto LABEL_41;
  }
  uint64_t v98 = *(void *)(v49 - 8);
  if (v51)
  {
    (*(void (**)(void *, uint64_t))(v98 + 8))(v47, v49);
LABEL_41:
    uint64_t v99 = sub_10017DF08(&qword_100E749B0);
    memcpy(v47, v48, *(void *)(*(void *)(v99 - 8) + 64));
    goto LABEL_42;
  }
  (*(void (**)(void *, const void *, uint64_t))(v98 + 40))(v47, v48, v49);
LABEL_42:
  uint64_t v100 = v35[9];
  uint64_t v101 = v33 + v100;
  uint64_t v102 = v34 + v100;
  *(unsigned char *)uint64_t v101 = *(unsigned char *)(v34 + v100);
  *(void *)(v101 + 8) = *(void *)(v34 + v100 + 8);
  swift_bridgeObjectRelease();
  uint64_t v138 = v102;
  __dsta = (int *)type metadata accessor for LearnMoreAttributorViewModel();
  uint64_t v103 = __dsta[6];
  uint64_t v104 = (const void *)(v102 + v103);
  uint64_t v136 = v101 + v103;
  LODWORD(v102) = _s7Weather24LocationCompositionStateOwet_0(v101 + v103, 1, v49);
  int v105 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v104, 1, v49);
  if (v102)
  {
    if (v105)
    {
      size_t v106 = *(void *)(*(void *)(sub_10017DF08(&qword_100E749B0) - 8) + 64);
      uint64_t v107 = (void *)v136;
LABEL_47:
      memcpy(v107, v104, v106);
      goto LABEL_51;
    }
    (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v49 - 8) + 32))(v136, v104, v49);
    _s7Weather24LocationCompositionStateOwst_0(v136, 0, 1, v49);
  }
  else
  {
    uint64_t v108 = *(void *)(v49 - 8);
    if (v105)
    {
      (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v136, v49);
      size_t v106 = *(void *)(*(void *)(sub_10017DF08(&qword_100E749B0) - 8) + 64);
      uint64_t v107 = (void *)v136;
      goto LABEL_47;
    }
    (*(void (**)(uint64_t, const void *, uint64_t))(v108 + 40))(v136, v104, v49);
  }
LABEL_51:
  uint64_t v109 = __dsta[7];
  unint64_t v110 = (void *)(v101 + v109);
  unsigned int v111 = (uint64_t *)(v138 + v109);
  uint64_t v113 = *v111;
  uint64_t v112 = v111[1];
  *unint64_t v110 = v113;
  v110[1] = v112;
  swift_bridgeObjectRelease();
  *(void *)(v101 + __dsta[8]) = *(void *)(v138 + __dsta[8]);
  swift_release();
  *(unsigned char *)(v33 + v35[10]) = *(unsigned char *)(v34 + v35[10]);
  uint64_t v114 = v35[11];
  int v115 = (void *)(v33 + v114);
  uint64_t v116 = (const void *)(v34 + v114);
  uint64_t v117 = type metadata accessor for LocationOfInterest();
  int v118 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v115, 1, v117);
  int v119 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v116, 1, v117);
  if (v118)
  {
    if (!v119)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v117 - 8) + 32))(v115, v116, v117);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v115, 0, 1, v117);
      goto LABEL_57;
    }
    goto LABEL_56;
  }
  uint64_t v120 = *(void *)(v117 - 8);
  if (v119)
  {
    (*(void (**)(void *, uint64_t))(v120 + 8))(v115, v117);
LABEL_56:
    uint64_t v121 = sub_10017DF08(&qword_100E63508);
    memcpy(v115, v116, *(void *)(*(void *)(v121 - 8) + 64));
    goto LABEL_57;
  }
  (*(void (**)(void *, const void *, uint64_t))(v120 + 40))(v115, v116, v117);
LABEL_57:
  *(unsigned char *)(v33 + v35[12]) = *(unsigned char *)(v34 + v35[12]);
  *(unsigned char *)(v33 + v35[13]) = *(unsigned char *)(v34 + v35[13]);
  uint64_t v122 = v35[14];
  uint64_t v123 = (unsigned char *)(v33 + v122);
  uint64_t v124 = (unsigned char *)(v34 + v122);
  uint64_t v125 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
  int v126 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v123, 1, (uint64_t)v125);
  int v127 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v124, 1, (uint64_t)v125);
  if (v126)
  {
    if (!v127)
    {
      *uint64_t v123 = *v124;
      uint64_t v128 = v125[5];
      uint64_t v129 = &v123[v128];
      uint64_t v130 = &v124[v128];
      uint64_t v131 = type metadata accessor for Location();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v131 - 8) + 32))(v129, v130, v131);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v117 - 8) + 32))(&v123[v125[6]], &v124[v125[6]], v117);
      v123[v125[7]] = v124[v125[7]];
      uint64_t v72 = (uint64_t)v123;
      uint64_t v73 = (uint64_t)v125;
LABEL_30:
      _s7Weather24LocationCompositionStateOwst_0(v72, 0, 1, v73);
      goto LABEL_31;
    }
    goto LABEL_62;
  }
  if (v127)
  {
    sub_1000B07E0((uint64_t)v123, (void (*)(void))type metadata accessor for HomeAndWorkRefinementRowViewModel);
LABEL_62:
    size_t v42 = *(void *)(*(void *)(sub_10017DF08(&qword_100E6DC10) - 8) + 64);
    uint64_t v43 = v123;
    uint64_t v44 = v124;
    goto LABEL_14;
  }
  *uint64_t v123 = *v124;
  uint64_t v132 = v125[5];
  uint64_t v133 = &v123[v132];
  uint64_t v134 = &v124[v132];
  uint64_t v135 = type metadata accessor for Location();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v135 - 8) + 40))(v133, v134, v135);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v117 - 8) + 40))(&v123[v125[6]], &v124[v125[6]], v117);
  v123[v125[7]] = v124[v125[7]];
LABEL_31:
  *(unsigned char *)(a1 + v8[10]) = *(unsigned char *)(a2 + v8[10]);
  *(unsigned char *)(a1 + v8[11]) = *(unsigned char *)(a2 + v8[11]);
  *(unsigned char *)(a1 + v8[12]) = *(unsigned char *)(a2 + v8[12]);
  *(unsigned char *)(a1 + v8[13]) = *(unsigned char *)(a2 + v8[13]);
  *(unsigned char *)(a1 + v8[14]) = *(unsigned char *)(a2 + v8[14]);
  uint64_t v74 = v8[15];
  uint64_t v75 = *(void **)(a1 + v74);
  *(void *)(a1 + v74) = *(void *)(a2 + v74);

  *(unsigned char *)(a1 + v8[16]) = *(unsigned char *)(a2 + v8[16]);
  *(unsigned char *)(a1 + v8[17]) = *(unsigned char *)(a2 + v8[17]);
  *(unsigned char *)(a1 + v8[18]) = *(unsigned char *)(a2 + v8[18]);
  uint64_t v76 = v8[19];
  uint64_t v77 = a1 + v76;
  uint64_t v78 = a2 + v76;
  uint64_t v79 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 40))(v77, v78, v79);
  uint64_t v80 = v8[20];
  uint64_t v81 = (void *)(a1 + v80);
  uint64_t v82 = (const void *)(a2 + v80);
  uint64_t v83 = type metadata accessor for ForegroundEffect();
  int v84 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v81, 1, v83);
  int v85 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v83);
  if (!v84)
  {
    uint64_t v86 = *(void *)(v83 - 8);
    if (!v85)
    {
      (*(void (**)(void *, const void *, uint64_t))(v86 + 40))(v81, v82, v83);
      goto LABEL_37;
    }
    (*(void (**)(void *, uint64_t))(v86 + 8))(v81, v83);
    goto LABEL_36;
  }
  if (v85)
  {
LABEL_36:
    uint64_t v87 = sub_10017DF08(&qword_100E65FA8);
    memcpy(v81, v82, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v83 - 8) + 32))(v81, v82, v83);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v83);
LABEL_37:
  *(unsigned char *)(a1 + v8[21]) = *(unsigned char *)(a2 + v8[21]);
  *(void *)(a1 + v8[22]) = *(void *)(a2 + v8[22]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v8[23]) = *(unsigned char *)(a2 + v8[23]);
  uint64_t v88 = v8[24];
  uint64_t v89 = a1 + v88;
  uint64_t v90 = a2 + v88;
  uint64_t v91 = type metadata accessor for LocationEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 40))(v89, v90, v91);
  uint64_t v92 = *(int *)(a3 + 20);
  uint64_t v93 = (void *)(a1 + v92);
  char v94 = (uint64_t *)(a2 + v92);
  uint64_t v96 = *v94;
  uint64_t v95 = v94[1];
  *uint64_t v93 = v96;
  v93[1] = v95;
  swift_release();
  return a1;
}

uint64_t sub_1008FF924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1008FF938);
}

uint64_t sub_1008FF938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for LocationViewModel();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_1008FF9C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1008FF9DC);
}

void sub_1008FF9DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for LocationViewModel();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
}

uint64_t destroy for SearchViewModel(uint64_t a1)
{
  return sub_100275C08(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(unsigned char *)(a1 + 96));
}

uint64_t initializeWithCopy for SearchViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 80);
  uint64_t v15 = *(void *)(a2 + 88);
  char v16 = *(unsigned char *)(a2 + 96);
  sub_100275D44(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v13, v14, v15, v16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v15;
  *(unsigned char *)(a1 + 96) = v16;
  return a1;
}

uint64_t assignWithCopy for SearchViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v25 = *(void *)(a2 + 72);
  uint64_t v26 = *(void *)(a2 + 80);
  uint64_t v27 = *(void *)(a2 + 88);
  char v28 = *(unsigned char *)(a2 + 96);
  sub_100275D44(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11, v25, v26, v27, v28);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  long long v20 = *(_OWORD *)(a1 + 64);
  uint64_t v21 = *(void *)(a1 + 80);
  uint64_t v22 = *(void *)(a1 + 88);
  char v23 = *(unsigned char *)(a1 + 96);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v25;
  *(void *)(a1 + 80) = v26;
  *(void *)(a1 + 88) = v27;
  *(unsigned char *)(a1 + 96) = v28;
  sub_100275C08(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, v22, v23);
  return a1;
}

uint64_t assignWithTake for SearchViewModel(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 96);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  long long v12 = *(_OWORD *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 80);
  uint64_t v14 = *(void *)(a1 + 88);
  char v15 = *(unsigned char *)(a1 + 96);
  long long v16 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v16;
  long long v17 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v17;
  long long v18 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v18;
  *(unsigned char *)(a1 + 96) = v3;
  sub_100275C08(v4, v6, v5, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, v14, v15);
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchViewModel(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFD && *(unsigned char *)(a1 + 97))
    {
      int v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 96);
      if (v3 <= 3) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchViewModel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 96) = 0;
    *(void *)uint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 97) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 97) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 96) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1008FFDA8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 96) <= 2u) {
    return *(unsigned __int8 *)(a1 + 96);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_1008FFDC0(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)uint64_t result = a2 - 3;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    LOBYTE(a2) = 3;
    *(void *)(result + 88) = 0;
  }
  *(unsigned char *)(result + 96) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SearchViewModel()
{
  return &type metadata for SearchViewModel;
}

uint64_t sub_1008FFE04(uint64_t a1, uint64_t a2)
{
  sub_100275CC0(a1, (uint64_t)&v114);
  uint64_t v3 = v114;
  switch(v122)
  {
    case 1:
      uint64_t v16 = v115;
      uint64_t v17 = v116;
      uint64_t v18 = v117;
      uint64_t v19 = v118.i64[0];
      uint64_t v20 = v119.i64[0];
      char v101 = v119.i8[8];
      uint64_t v103 = v118.i64[1];
      uint64_t v21 = v120.i64[1];
      uint64_t v99 = v120.i64[0];
      int8x16_t v22 = v121;
      sub_100275CC0(a2, (uint64_t)&v104);
      if (v113 != 1) {
        goto LABEL_76;
      }
      uint64_t v24 = v104.i64[1];
      uint64_t v23 = v105.i64[0];
      uint64_t v95 = v106;
      uint64_t v97 = v105.i64[1];
      uint64_t v93 = v107;
      uint64_t v89 = v21;
      uint64_t v91 = v108;
      uint64_t v87 = *((void *)&v110 + 1);
      if (v3) {
        uint64_t v25 = 0x656369746F6ELL;
      }
      else {
        uint64_t v25 = 0x616D7269666E6F63;
      }
      if (v3) {
        unint64_t v26 = 0xE600000000000000;
      }
      else {
        unint64_t v26 = 0xEC0000006E6F6974;
      }
      if (v104.i8[0]) {
        uint64_t v27 = 0x656369746F6ELL;
      }
      else {
        uint64_t v27 = 0x616D7269666E6F63;
      }
      if (v104.i8[0]) {
        unint64_t v28 = 0xE600000000000000;
      }
      else {
        unint64_t v28 = 0xEC0000006E6F6974;
      }
      BOOL v29 = v25 == v27 && v26 == v28;
      uint64_t v83 = v110;
      uint64_t v77 = v112;
      uint64_t v79 = v111;
      char v85 = v109;
      if (v29)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v30 & 1) == 0) {
          goto LABEL_76;
        }
      }
      BOOL v70 = v16 == v24 && v17 == v23;
      if (!v70 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        goto LABEL_76;
      }
      BOOL v71 = v18 == v97 && v19 == v95;
      if (!v71 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        goto LABEL_76;
      }
      BOOL v72 = v103 == v93 && v20 == v91;
      if (!v72 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        goto LABEL_76;
      }
      if (v89)
      {
        if (!v87) {
          goto LABEL_76;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v73 = sub_100701574(v101, v99, v89, v85, v83, v87);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v73 & 1) == 0) {
          goto LABEL_76;
        }
      }
      else if (v87)
      {
        goto LABEL_76;
      }
      BOOL v74 = v22.i64[0] == v79 && v22.i64[1] == v77;
      if (!v74 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        goto LABEL_76;
      }
      goto LABEL_75;
    case 2:
      uint64_t v31 = v115;
      uint64_t v32 = v116;
      sub_100275CC0(a2, (uint64_t)&v104);
      if (v113 != 2) {
        goto LABEL_76;
      }
      uint64_t v33 = v104.i64[1];
      uint64_t v34 = v105.i64[0];
      sub_100126FF0();
      if ((v35 & 1) == 0) {
        goto LABEL_76;
      }
      if (v31 != v33 || v32 != v34) {
        goto LABEL_40;
      }
      goto LABEL_75;
    case 3:
      sub_100188290(v120, v121, v118, v119);
      if (!(v37 | v38 | v40 | v39 | v3))
      {
        uint64_t v57 = sub_100275CC0(a2, (uint64_t)&v104);
        if (v113 != 3) {
          goto LABEL_76;
        }
        __n128 v65 = sub_10017D7E4(v57, v58, v59, v60, v61, v62, v63, v64, v76, v78, v80, v81, v82, v84, v86, v88, v90, v92, v94,
                v96,
                v98,
                v100,
                v102,
                v104.i64[0],
                v104.i64[1],
                v105.i64[0],
                v105.i64[1],
                v106,
                v107,
                v108,
                v109,
                v110);
        int8x16_t v69 = vorrq_s8(vorrq_s8(vorrq_s8(v68, (int8x16_t)v65), vorrq_s8(v67, v66)), vorrq_s8(v104, v105));
        if (vorr_s8(*(int8x8_t *)v69.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v69, v69, 8uLL))) {
          goto LABEL_76;
        }
LABEL_75:
        char v14 = 1;
        return v14 & 1;
      }
      uint64_t v41 = sub_100275CC0(a2, (uint64_t)&v104);
      if (v113 == 3 && v104.i64[0] == 1)
      {
        __n128 v49 = sub_10017D7E4(v41, v42, v43, v44, v45, v46, v47, v48, v76, v78, v80, v81, v82, v84, v86, v88, v90, v92, v94,
                v96,
                v98,
                v100,
                v102,
                1,
                v104.i64[1],
                v105.i64[0],
                v105.i64[1],
                v106,
                v107,
                v108,
                v109,
                v110);
        sub_100188290((int8x16_t)v49, v50, v51, v52);
        if (!(v54 | v53 | v55 | v56)) {
          goto LABEL_75;
        }
      }
LABEL_76:
      char v14 = 0;
      return v14 & 1;
    default:
      uint64_t v4 = v116;
      uint64_t v5 = v117;
      int8x16_t v6 = v118;
      sub_100275CC0(a2, (uint64_t)&v104);
      if (v113) {
        goto LABEL_76;
      }
      int8x16_t v7 = v105;
      uint64_t v8 = v106;
      uint64_t v9 = v107;
      sub_100126FF0();
      if ((v10 & 1) == 0) {
        goto LABEL_76;
      }
      sub_100BDB41C();
      if ((v11 & 1) == 0) {
        goto LABEL_76;
      }
      if (v4 != v7.i64[0] || v5 != v7.i64[1])
      {
        char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
        char v14 = 0;
        if ((v13 & 1) == 0) {
          return v14 & 1;
        }
      }
      if (v6.i64[0] == v8 && v6.i64[1] == v9) {
        goto LABEL_75;
      }
LABEL_40:
      char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
      return v14 & 1;
  }
}

uint64_t sub_10090024C(uint64_t a1, uint64_t a2)
{
  sub_100275CC0(a1, (uint64_t)v4);
  sub_100275CC0(a2, (uint64_t)v5);
  return sub_1008FFE04((uint64_t)v4, (uint64_t)v5) & 1;
}

uint64_t *sub_100900298(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for CurrentLocation();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100EADD50);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() > 2)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        uint64_t v10 = type metadata accessor for Location();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        swift_storeEnumTagMultiPayload();
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v11 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v11) = *(uint64_t *)((char *)a2 + v11);
    uint64_t v12 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)a1 + v12) = *(uint64_t *)((char *)a2 + v12);
    uint64_t v13 = a3[10];
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *(uint64_t *)((char *)a1 + v13) = *(uint64_t *)((char *)a2 + v13);
    uint64_t v14 = a3[12];
    *(uint64_t *)((char *)a1 + a3[11]) = *(uint64_t *)((char *)a2 + a3[11]);
    char v15 = (char *)a1 + v14;
    uint64_t v18 = *(uint64_t *)((char *)a2 + v14 + 8);
    uint64_t v19 = *(uint64_t *)((char *)a2 + v14);
    unsigned __int8 v17 = *((unsigned char *)a2 + v14 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10015458C(v19, v18, v17);
    *(void *)char v15 = v19;
    *((void *)v15 + 1) = v18;
    v15[16] = v17;
    *(uint64_t *)((char *)a1 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

char *sub_100900594(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for CurrentLocation();
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      if (a1 == a2) {
        goto LABEL_14;
      }
      sub_1001D1298((uint64_t)a1, (void (*)(void))&type metadata accessor for CurrentLocation);
      if (swift_getEnumCaseMultiPayload() <= 2)
      {
        uint64_t v11 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      size_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
      goto LABEL_8;
    }
    sub_1001D1298((uint64_t)a1, (void (*)(void))&type metadata accessor for CurrentLocation);
LABEL_7:
    size_t v9 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100EADD50) - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v9);
    goto LABEL_14;
  }
  if (v8) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() > 2)
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    uint64_t v10 = type metadata accessor for Location();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
    swift_storeEnumTagMultiPayload();
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_14:
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[12];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *(void *)v14;
  uint64_t v16 = *((void *)v14 + 1);
  unsigned __int8 v17 = v14[16];
  sub_10015458C(*(void *)v14, v16, v17);
  uint64_t v18 = *(void *)v13;
  uint64_t v19 = *((void *)v13 + 1);
  *(void *)uint64_t v13 = v15;
  *((void *)v13 + 1) = v16;
  unsigned __int8 v20 = v13[16];
  v13[16] = v17;
  sub_10015303C(v18, v19, v20);
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_1009009FC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for CurrentLocation();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100EADD50);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() > 2)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      uint64_t v8 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v9 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  *(void *)&a1[v9] = *(void *)&a2[v9];
  uint64_t v10 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  *(void *)&a1[v10] = *(void *)&a2[v10];
  uint64_t v11 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  *(void *)&a1[v11] = *(void *)&a2[v11];
  uint64_t v12 = a3[12];
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  v13[16] = v14[16];
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  return a1;
}

char *sub_100900C2C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for CurrentLocation();
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    if (!v8)
    {
      if (a1 == a2) {
        goto LABEL_14;
      }
      sub_1001D1298((uint64_t)a1, (void (*)(void))&type metadata accessor for CurrentLocation);
      if (swift_getEnumCaseMultiPayload() <= 2)
      {
        uint64_t v11 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      size_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
      goto LABEL_8;
    }
    sub_1001D1298((uint64_t)a1, (void (*)(void))&type metadata accessor for CurrentLocation);
LABEL_7:
    size_t v9 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100EADD50) - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v9);
    goto LABEL_14;
  }
  if (v8) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() > 2)
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    uint64_t v10 = type metadata accessor for Location();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
    swift_storeEnumTagMultiPayload();
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_14:
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[11]] = *(void *)&a2[a3[11]];
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[12];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  char v15 = v14[16];
  uint64_t v16 = *(void *)v13;
  uint64_t v17 = *((void *)v13 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  unsigned __int8 v18 = v13[16];
  v13[16] = v15;
  sub_10015303C(v16, v17, v18);
  *(void *)&a1[a3[13]] = *(void *)&a2[a3[13]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10090103C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10017DF08((uint64_t *)&unk_100EADD50);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

void sub_1009010CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_10017DF08((uint64_t *)&unk_100EADD50);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
}

void sub_100901158()
{
  sub_100162EA0();
  uint64_t v3 = v2;
  uint64_t v4 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_100125FF8();
  sub_10006DF38(v3, v1, (uint64_t *)&unk_100EADD50);
  uint64_t v6 = v0 + *(int *)(type metadata accessor for LocationsState() + 48);
  uint64_t v7 = *(void *)v6;
  uint64_t v8 = *(void *)(v6 + 8);
  unsigned __int8 v9 = *(unsigned char *)(v6 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10015458C(v7, v8, v9);
  swift_bridgeObjectRetain();
  sub_1001CF8D0();
  sub_100162694();
}

void sub_100901260()
{
  sub_100162EA0();
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for SavedLocation();
  uint64_t v5 = sub_100164920(v4);
  v101[1] = v6;
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v122 = v7;
  uint64_t v8 = sub_10017DF08(&qword_100E639E8);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  uint64_t v108 = (char *)v101 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v101 - v12;
  uint64_t v14 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v123 = v15;
  __chkstk_darwin(v16);
  sub_100162EF8();
  uint64_t v121 = v17;
  sub_1001626D4();
  __chkstk_darwin(v18);
  sub_100109770();
  uint64_t v107 = v19;
  sub_1001626D4();
  __chkstk_darwin(v20);
  sub_100109770();
  uint64_t v120 = v21;
  sub_1001626D4();
  __chkstk_darwin(v22);
  sub_100128F8C();
  uint64_t v106 = v23;
  uint64_t v24 = type metadata accessor for LocationModel();
  sub_100179C0C();
  uint64_t v26 = v25;
  __chkstk_darwin(v27);
  sub_100162EF8();
  uint64_t v119 = v28;
  sub_1001626D4();
  __chkstk_darwin(v29);
  uint64_t v117 = (char *)v101 - v30;
  sub_1001626D4();
  __chkstk_darwin(v31);
  sub_1001190EC();
  __chkstk_darwin(v32);
  sub_100128F8C();
  uint64_t v125 = v33;
  uint64_t v102 = type metadata accessor for LocationsState();
  uint64_t v34 = *(int *)(v102 + 24);
  uint64_t v103 = v0;
  uint64_t v35 = *(void *)(v0 + v34);
  int v36 = (char *)&_swiftEmptyArrayStorage;
  uint64_t v128 = &_swiftEmptyArrayStorage;
  uint64_t v37 = *(void *)(v35 + 16);
  uint64_t v38 = swift_bridgeObjectRetain();
  uint64_t v127 = v14;
  int8x16_t v118 = v13;
  uint64_t v116 = v37;
  uint64_t v104 = v3;
  if (v37)
  {
    unint64_t v39 = 0;
    uint64_t v112 = v26 + 88;
    uint64_t v113 = v26 + 16;
    int v111 = enum case for LocationModel.current(_:);
    long long v110 = (void (**)(uint64_t, uint64_t))(v26 + 8);
    int v105 = enum case for LocationModel.saved(_:);
    uint64_t v109 = v26 + 96;
    uint64_t v114 = v38;
    uint64_t v115 = (void (**)(void))(v26 + 32);
    uint64_t v126 = v26;
    while (v39 < *(void *)(v38 + 16))
    {
      sub_100129058();
      uint64_t v124 = v40;
      uint64_t v41 = *(void (**)(void))(v26 + 16);
      sub_100179020();
      v41();
      sub_100179020();
      v41();
      sub_1001D145C();
      int v43 = v42();
      if (v43 == v111)
      {
        sub_1001821D4();
        v44();
        uint64_t v45 = sub_10017DF08(&qword_100E63878);
        sub_100178110(v1 + *(int *)(v45 + 48), &qword_100E63508);
        sub_1001D1298(v1, (void (*)(void))&type metadata accessor for CurrentLocation);
        sub_100162F0C();
        v46();
      }
      else
      {
        if (v43 == v105)
        {
          sub_1001821D4();
          v47();
          uint64_t v48 = sub_10017DF08(&qword_100E63870);
          sub_100178110(v1 + *(int *)(v48 + 48), &qword_100E63508);
          sub_1001D1298(v1, (void (*)(void))&type metadata accessor for SavedLocation);
        }
        else
        {
          (*v110)(v1, v24);
        }
        __n128 v49 = *v115;
        sub_1001627D4();
        v49();
        int8x16_t v50 = v128;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1007F30E8();
          int8x16_t v50 = v128;
        }
        unint64_t v52 = v50[2];
        unint64_t v51 = v50[3];
        if (v52 >= v51 >> 1)
        {
          sub_10019AEC0(v51);
          sub_1007F30E8();
          int8x16_t v50 = v128;
        }
        v50[2] = v52 + 1;
        sub_1001627D4();
        v49();
        uint64_t v128 = v50;
        uint64_t v26 = v126;
        uint64_t v14 = v127;
        uint64_t v13 = v118;
      }
      ++v39;
      uint64_t v38 = v114;
      if (v116 == v39)
      {
        int v36 = (char *)v128;
        goto LABEL_16;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v53 = *((void *)v36 + 2);
    if (v53)
    {
      uint64_t v54 = v26 + 16;
      sub_100129058();
      uint64_t v56 = &v36[v55];
      uint64_t v124 = *(void *)(v54 + 56);
      uint64_t v125 = v57;
      uint64_t v126 = v54;
      uint64_t v58 = (void (**)(uint64_t, uint64_t))(v54 - 8);
      uint64_t v59 = (void (**)(void))(v123 + 32);
      uint64_t v117 = v36;
      swift_retain();
      uint64_t v60 = &_swiftEmptyArrayStorage;
      do
      {
        uint64_t v61 = v119;
        sub_100162808();
        v62();
        LocationModel.location.getter();
        (*v58)(v61, v24);
        sub_10012B520((uint64_t)v13, 1, v14);
        if (v63)
        {
          sub_100178110((uint64_t)v13, &qword_100E639E8);
        }
        else
        {
          uint64_t v64 = *v59;
          sub_1001887EC();
          v64();
          sub_1001887EC();
          v64();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t v68 = sub_100183298();
            uint64_t v60 = (void *)sub_1001D262C(v68, v69, v70, (uint64_t)v60);
          }
          unint64_t v67 = v60[2];
          unint64_t v66 = v60[3];
          if (v67 >= v66 >> 1)
          {
            BOOL v71 = sub_10016534C(v66);
            uint64_t v60 = (void *)sub_1001D262C(v71, v72, v73, (uint64_t)v60);
          }
          v60[2] = v67 + 1;
          sub_1001887EC();
          v64();
          uint64_t v13 = v118;
        }
        v56 += v124;
        --v53;
      }
      while (v53);
      swift_release_n();
    }
    else
    {
      swift_release();
      uint64_t v60 = &_swiftEmptyArrayStorage;
    }
    uint64_t v74 = (uint64_t)v108;
    uint64_t v75 = *(void *)(*(void *)(v103 + *(int *)(v102 + 20)) + 16);
    if (v75)
    {
      sub_100129058();
      uint64_t v78 = v76 + v77;
      uint64_t v80 = *(void *)(v79 + 72);
      uint64_t v81 = (void (**)(uint64_t, uint64_t, uint64_t))(v123 + 32);
      uint64_t v126 = v76;
      swift_bridgeObjectRetain();
      uint64_t v82 = &_swiftEmptyArrayStorage;
      uint64_t v83 = v107;
      do
      {
        uint64_t v84 = v122;
        sub_10018D0C0(v78, v122);
        SavedLocation.location.getter();
        sub_1001D1298(v84, (void (*)(void))&type metadata accessor for SavedLocation);
        uint64_t v85 = v127;
        sub_10012B520(v74, 1, v127);
        if (v63)
        {
          sub_100178110(v74, &qword_100E639E8);
        }
        else
        {
          uint64_t v86 = *v81;
          (*v81)(v83, v74, v85);
          v86(v121, v83, v85);
          char v87 = swift_isUniquelyReferenced_nonNull_native();
          if ((v87 & 1) == 0)
          {
            uint64_t v92 = sub_100183298();
            uint64_t v82 = (void *)sub_1001D262C(v92, v93, v94, (uint64_t)v82);
          }
          unint64_t v89 = v82[2];
          unint64_t v88 = v82[3];
          if (v89 >= v88 >> 1)
          {
            BOOL v95 = sub_10016534C(v88);
            uint64_t v82 = (void *)sub_1001D262C(v95, v96, v97, (uint64_t)v82);
          }
          v82[2] = v89 + 1;
          sub_100129058();
          v86((uint64_t)v82 + v90 + *(void *)(v91 + 72) * v89, v121, v127);
          uint64_t v74 = (uint64_t)v108;
        }
        v78 += v80;
        --v75;
      }
      while (v75);
      swift_bridgeObjectRelease();
    }
    sub_1007E66C0();
    uint64_t v99 = sub_100903DD4((uint64_t)v60, v98);
    swift_bridgeObjectRelease();
    uint64_t v100 = sub_1009038B4((uint64_t)v99);
    swift_release();
    sub_10043F6B0((uint64_t)v100, v104);
    swift_release();
    sub_100162694();
  }
}

void sub_100901AD4()
{
  sub_100162EA0();
  uint64_t v2 = type metadata accessor for LocationModel();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_100129860();
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v34 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v34 - v10;
  uint64_t v12 = *(void *)(v0 + *(int *)(type metadata accessor for LocationsState() + 24));
  uint64_t v45 = _swiftEmptyArrayStorage;
  uint64_t v13 = *(void *)(v12 + 16);
  swift_bridgeObjectRetain();
  uint64_t v44 = v13;
  if (v13)
  {
    unint64_t v14 = 0;
    uint64_t v42 = v4 + 16;
    uint64_t v43 = v1;
    uint64_t v41 = v4 + 88;
    int v40 = enum case for LocationModel.current(_:);
    int v35 = enum case for LocationModel.saved(_:);
    uint64_t v38 = (void (**)(uint64_t))(v4 + 32);
    uint64_t v39 = v4 + 96;
    uint64_t v34 = v4 + 8;
    uint64_t v36 = v4;
    uint64_t v37 = v12;
    while (v14 < *(void *)(v12 + 16))
    {
      uint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      v15(v11, v12+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v14, v2);
      v15(v9, (unint64_t)v11, v2);
      sub_1001D145C();
      int v18 = v17(v16);
      if (v18 == v40)
      {
        sub_1001821D4();
        v20(v19);
        uint64_t v21 = sub_10017DF08(&qword_100E63878);
        uint64_t v22 = sub_10012B6D0(v21);
        sub_100178110(v22, &qword_100E63508);
        sub_1001D1298((uint64_t)v9, (void (*)(void))&type metadata accessor for CurrentLocation);
        sub_100162F0C();
        v24(v23);
      }
      else
      {
        if (v18 != v35) {
          goto LABEL_15;
        }
        sub_1001821D4();
        v26(v25);
        uint64_t v27 = sub_10017DF08(&qword_100E63870);
        uint64_t v28 = sub_10012B6D0(v27);
        sub_100178110(v28, &qword_100E63508);
        sub_1001D1298((uint64_t)v9, (void (*)(void))&type metadata accessor for SavedLocation);
        uint64_t v29 = *v38;
        sub_1001627D4();
        v29(v30);
        uint64_t v31 = v45;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100176E34();
          sub_1007F30E8();
          uint64_t v31 = v45;
        }
        unint64_t v32 = v31[2];
        if (v32 >= v31[3] >> 1)
        {
          sub_1007F30E8();
          uint64_t v31 = v45;
        }
        v31[2] = v32 + 1;
        sub_1001627D4();
        v29(v33);
        uint64_t v45 = v31;
        uint64_t v4 = v36;
        uint64_t v12 = v37;
      }
      if (v44 == ++v14) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_15:
    _diagnoseUnexpectedEnumCase<A>(type:)();
    __break(1u);
  }
  else
  {
LABEL_13:
    swift_bridgeObjectRelease();
    sub_100162694();
  }
}

uint64_t sub_100901E10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, char a11, uint64_t a12)
{
  swift_bridgeObjectRelease();
  sub_10006DF38(a1, a8, (uint64_t *)&unk_100EADD50);
  int v18 = (int *)type metadata accessor for LocationsState();
  *(void *)(a8 + v18[5]) = a2;
  *(void *)(a8 + v18[6]) = a3;
  *(void *)(a8 + v18[7]) = a4;
  *(void *)(a8 + v18[8]) = a5;
  uint64_t v19 = swift_bridgeObjectRetain();
  uint64_t v20 = sub_1001D26BC(v19);
  sub_100178110(a1, (uint64_t *)&unk_100EADD50);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a8 + v18[9]) = v20;
  *(void *)(a8 + v18[10]) = a6;
  *(void *)(a8 + v18[11]) = a7;
  uint64_t v22 = a8 + v18[12];
  *(void *)uint64_t v22 = a9;
  *(void *)(v22 + 8) = a10;
  *(unsigned char *)(v22 + 16) = a11;
  *(void *)(a8 + v18[13]) = a12;
  return result;
}

uint64_t sub_100901F40(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E6572727563 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6465766173 && a2 == 0xE500000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 7105633 && a2 == 0xE300000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000013 && a2 == 0x8000000100CB6FC0 {
             || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      }
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD000000000000018 && a2 == 0x8000000100CB6FE0 {
             || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      }
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        BOOL v8 = a1 == 0x746E6564496C6C61 && a2 == 0xEE00737265696669;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          BOOL v9 = a1 == 0x64657070616DLL && a2 == 0xE600000000000000;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else if (a1 == 0xD000000000000012 && a2 == 0x8000000100CB7000 {
                 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          }
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else if (a1 == 0xD000000000000018 && a2 == 0x8000000100CB7020 {
                 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          }
          {
            swift_bridgeObjectRelease();
            return 8;
          }
          else if (a1 == 0xD000000000000018 && a2 == 0x8000000100CB7040)
          {
            swift_bridgeObjectRelease();
            return 9;
          }
          else
          {
            char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v10) {
              return 9;
            }
            else {
              return 10;
            }
          }
        }
      }
    }
  }
}

unint64_t sub_100902314(char a1)
{
  unint64_t result = 0x746E6572727563;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6465766173;
      break;
    case 2:
      unint64_t result = 7105633;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
    case 8:
    case 9:
      unint64_t result = 0xD000000000000018;
      break;
    case 5:
      unint64_t result = 0x746E6564496C6C61;
      break;
    case 6:
      unint64_t result = 0x64657070616DLL;
      break;
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100902440()
{
  return sub_100902314(*v0);
}

uint64_t sub_100902448@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100901F40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100902470(uint64_t a1)
{
  unint64_t v2 = sub_100905D94();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1009024AC(uint64_t a1)
{
  unint64_t v2 = sub_100905D94();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1009024E8()
{
  sub_100162EA0();
  uint64_t v2 = type metadata accessor for SavedLocation();
  uint64_t v3 = sub_100164920(v2);
  uint64_t v5 = v4;
  __chkstk_darwin(v3);
  sub_10011BFD8();
  uint64_t v6 = *(void *)(v0 + *(int *)(type metadata accessor for LocationsState() + 20));
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    sub_1001EA6A0(0, v7, 0);
    sub_100129058();
    uint64_t v9 = v6 + v8;
    uint64_t v10 = *(void *)(v5 + 72);
    do
    {
      sub_10018D0C0(v9, v1);
      uint64_t v11 = SavedLocation.id.getter();
      uint64_t v13 = v12;
      sub_1001D1298(v1, (void (*)(void))&type metadata accessor for SavedLocation);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v14 = sub_100176E34();
        sub_1001EA6A0(v14, v15, v16);
      }
      unint64_t v18 = _swiftEmptyArrayStorage[2];
      unint64_t v17 = _swiftEmptyArrayStorage[3];
      if (v18 >= v17 >> 1) {
        sub_1001EA6A0(v17 > 1, v18 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v18 + 1;
      uint64_t v19 = &_swiftEmptyArrayStorage[2 * v18];
      v19[4] = v11;
      uint64_t v19[5] = v13;
      v9 += v10;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = sub_100012CD8((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v21 = Location.id.getter();
  sub_100215FB4(v21, v22, v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100162694();
}

uint64_t sub_1009026AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E63508);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_100125FF8();
  uint64_t v6 = type metadata accessor for LocationModel();
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_10016279C();
  sub_100162808();
  v10();
  int v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 88))(v1, v6);
  if (v11 == enum case for LocationModel.current(_:))
  {
    uint64_t v12 = sub_1001724A8();
    v13(v12);
    uint64_t v14 = sub_10017DF08(&qword_100E63878);
    uint64_t v15 = sub_10012B6D0(v14);
    sub_1001278D0(v15, v2, &qword_100E63508);
    sub_1001C8200();
    uint64_t v17 = *(void *)(v16 + 16);
    swift_bridgeObjectRelease();
    if (v17)
    {
      sub_1001278D0(v2, a1, &qword_100E63508);
    }
    else
    {
      sub_100178110(v2, &qword_100E63508);
      uint64_t v25 = type metadata accessor for LocationOfInterest();
      sub_100187DB4(v25);
    }
    uint64_t v22 = &type metadata accessor for CurrentLocation;
  }
  else
  {
    if (v11 != enum case for LocationModel.saved(_:))
    {
      uint64_t v23 = type metadata accessor for LocationOfInterest();
      sub_100187DB4(v23);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v1, v6);
    }
    uint64_t v18 = sub_1001724A8();
    v19(v18);
    uint64_t v20 = sub_10017DF08(&qword_100E63870);
    uint64_t v21 = sub_10012B6D0(v20);
    sub_1001278D0(v21, a1, &qword_100E63508);
    uint64_t v22 = &type metadata accessor for SavedLocation;
  }
  return sub_1001D1298(v1, (void (*)(void))v22);
}

uint64_t sub_1009028B8(uint64_t a1, uint64_t a2)
{
  sub_100162708();
  uint64_t v37 = type metadata accessor for LocationOfInterest();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_100163770();
  uint64_t v7 = type metadata accessor for LocationOfInterestType();
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_1001190EC();
  __chkstk_darwin(v11);
  sub_100128F8C();
  uint64_t v34 = v12;
  uint64_t v13 = *(void *)(a2 + 16);
  uint64_t v14 = _swiftEmptyArrayStorage;
  uint64_t v38 = v9;
  if (v13)
  {
    uint64_t v39 = _swiftEmptyArrayStorage;
    sub_1007F3020();
    uint64_t v15 = v5 + 16;
    sub_100129058();
    uint64_t v17 = a2 + v16;
    uint64_t v35 = *(void *)(v15 + 56);
    uint64_t v36 = v7;
    uint64_t v18 = (void (**)(uint64_t, uint64_t))(v15 - 8);
    do
    {
      sub_100162808();
      v20(v19);
      LocationOfInterest.type.getter();
      (*v18)(v2, v37);
      uint64_t v14 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1007F3020();
        uint64_t v14 = v39;
      }
      unint64_t v22 = v14[2];
      unint64_t v21 = v14[3];
      if (v22 >= v21 >> 1)
      {
        sub_10019AEC0(v21);
        sub_1007F3020();
        uint64_t v14 = v39;
      }
      v14[2] = v22 + 1;
      uint64_t v9 = v38;
      uint64_t v7 = v36;
      sub_1001190D4();
      v24(v23);
      uint64_t v39 = v14;
      v17 += v35;
      --v13;
    }
    while (v13);
  }
  LocationOfInterest.type.getter();
  uint64_t v25 = v14[2];
  if (v25)
  {
    sub_100129058();
    uint64_t v27 = (char *)v14 + v26;
    uint64_t v28 = *(void *)(v9 + 72);
    sub_100906844(&qword_100E63530, (void (*)(uint64_t))&type metadata accessor for LocationOfInterestType);
    swift_bridgeObjectRetain();
    uint64_t v29 = v25 - 1;
    do
    {
      uint64_t v30 = v29;
      char v31 = dispatch thunk of static Equatable.== infix(_:_:)();
      if (v31) {
        break;
      }
      uint64_t v29 = v30 - 1;
      v27 += v28;
    }
    while (v30);
    char v32 = v31 ^ 1;
    swift_bridgeObjectRelease();
    uint64_t v9 = v38;
  }
  else
  {
    char v32 = 1;
  }
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v34, v7);
  swift_bridgeObjectRelease();
  return v32 & 1;
}

uint64_t sub_100902BC4(void *a1)
{
  uint64_t v4 = sub_10017DF08(&qword_100EA0528);
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10012B938();
  sub_1001B1E64(a1, a1[3]);
  sub_100905D94();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  type metadata accessor for CurrentLocation();
  sub_100906844(&qword_100EA0530, (void (*)(uint64_t))&type metadata accessor for CurrentLocation);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  if (!v1)
  {
    uint64_t v8 = (int *)type metadata accessor for LocationsState();
    sub_10018A058(v8[5]);
    sub_10017DF08(&qword_100E97F18);
    sub_100906364();
    sub_10019F488();
    sub_10018A058(v8[6]);
    sub_10017DF08(&qword_100EA04B0);
    sub_100906408();
    sub_10019F488();
    sub_10018A058(v8[7]);
    sub_10017DF08(&qword_100E662A8);
    sub_1007158E0();
    sub_10019F488();
    sub_10018A058(v8[8]);
    sub_10017DF08(&qword_100EA04C8);
    sub_1009064AC();
    sub_10019F488();
    sub_10018A058(v8[9]);
    sub_10017DF08(&qword_100EA04D8);
    sub_100906550();
    sub_10019F488();
    sub_10018A058(v8[10]);
    sub_10017DF08(&qword_100EA04E8);
    sub_1009065F4();
    sub_10019F488();
    sub_10018A058(v8[11]);
    sub_10017DF08(&qword_100EA04F8);
    sub_1009066A0();
    sub_10019F488();
    sub_10090674C();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_10018A058(v8[13]);
    sub_10017DF08(&qword_100EA0510);
    sub_100906798();
    sub_10019F488();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t sub_100902EE8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  sub_10017DF08(&qword_100EA0488);
  sub_100179C0C();
  __chkstk_darwin(v10);
  sub_100163770();
  uint64_t v18 = (int *)type metadata accessor for LocationsState();
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_100109314();
  uint64_t v17 = v12;
  sub_1001B1E64(a1, a1[3]);
  sub_100905D94();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  type metadata accessor for CurrentLocation();
  LOBYTE(v19) = 0;
  sub_100906844(&qword_100EA0498, (void (*)(uint64_t))&type metadata accessor for CurrentLocation);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  sub_1001278D0(v9, v17, (uint64_t *)&unk_100EADD50);
  sub_10017DF08(&qword_100E97F18);
  sub_100905DE0();
  sub_100184CD8();
  *(void *)(v17 + v18[5]) = v19;
  sub_10017DF08(&qword_100EA04B0);
  sub_100905E84();
  sub_100184CD8();
  *(void *)(v17 + v18[6]) = v19;
  sub_10017DF08(&qword_100E662A8);
  sub_100905F28();
  sub_1001806C4();
  *(void *)(v17 + v18[7]) = v19;
  sub_10017DF08(&qword_100EA04C8);
  sub_100905FCC();
  sub_1001806C4();
  *(void *)(v17 + v18[8]) = v19;
  sub_10017DF08(&qword_100EA04D8);
  sub_100906070();
  sub_1001806C4();
  *(void *)(v17 + v18[9]) = v19;
  sub_10017DF08(&qword_100EA04E8);
  sub_100906114();
  sub_1001806C4();
  *(void *)(v17 + v18[10]) = v19;
  sub_10017DF08(&qword_100EA04F8);
  sub_1009061C0();
  sub_1001806C4();
  *(void *)(v17 + v18[11]) = v19;
  sub_10090626C();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v13 = v17 + v18[12];
  *(_OWORD *)uint64_t v13 = v19;
  *(unsigned char *)(v13 + 16) = v20;
  sub_10017DF08(&qword_100EA0510);
  sub_1009062B8();
  sub_1001806C4();
  uint64_t v14 = sub_10017B45C();
  v15(v14);
  *(void *)(v17 + v18[13]) = v19;
  sub_10018D0C0(v17, a2);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  return sub_1001D1298(v17, (void (*)(void))type metadata accessor for LocationsState);
}

uint64_t sub_100903518@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100902EE8(a1, a2);
}

uint64_t sub_100903530(void *a1)
{
  return sub_100902BC4(a1);
}

uint64_t sub_100903548@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = sub_10017DF08(&qword_100EA0588);
  a1[4] = sub_1001246C8(&qword_100EA0590, &qword_100EA0588);
  sub_100170694(a1);
  type metadata accessor for LocationsState();
  return ShortDescription.init(name:_:)();
}

uint64_t sub_10090361C@<X0>(uint64_t *a1@<X8>)
{
  return sub_100903548(a1);
}

uint64_t sub_100903634()
{
  sub_100906844(&qword_100EA0598, (void (*)(uint64_t))type metadata accessor for LocationsState);

  return ShortDescribable.description.getter();
}

void sub_1009036A0()
{
}

uint64_t sub_1009036B8()
{
  return sub_1008C04C4();
}

uint64_t sub_1009036D0()
{
  return sub_100906844(&qword_100EA0470, (void (*)(uint64_t))type metadata accessor for LocationsState);
}

void *sub_100903718(uint64_t a1)
{
  return sub_100903768(a1, &qword_100E97320, &qword_100E6CD98, (uint64_t (*)(uint64_t *, char *, uint64_t, uint64_t))sub_1009049C4);
}

void *sub_100903740(uint64_t a1)
{
  return sub_100903768(a1, &qword_100E97318, &qword_100E96350, (uint64_t (*)(uint64_t *, char *, uint64_t, uint64_t))sub_100904D4C);
}

void *sub_100903768(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t *, char *, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
  sub_10017DF08(a2);
  uint64_t v8 = sub_10017DF08(a3);
  sub_100164920(v8);
  uint64_t v10 = *(void *)(v9 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  uint64_t result = (void *)j__malloc_size(v13);
  if (v10)
  {
    if ((void *)((char *)result - v12) != (void *)0x8000000000000000 || v10 != -1)
    {
      v13[2] = v4;
      v13[3] = 2 * ((uint64_t)((uint64_t)result - v12) / v10);
      uint64_t v16 = sub_10017DF08(a3);
      sub_1001627C0(v16);
      sub_100129058();
      uint64_t v18 = a4(&v19, (char *)v13 + v17, v4, a1);
      swift_bridgeObjectRetain();
      sub_10023B8FC();
      if (v18 == v4) {
        return v13;
      }
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

char *sub_1009038B4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (char *)&_swiftEmptyArrayStorage;
  }
  sub_10017DF08(&qword_100E81490);
  uint64_t v3 = *(void *)(type metadata accessor for Location() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t result = (char *)j__malloc_size(v6);
  if (v4)
  {
    if (&result[-v5] != (char *)0x8000000000000000 || v4 != -1)
    {
      _OWORD v6[2] = v1;
      v6[3] = 2 * ((uint64_t)&result[-v5] / v4);
      uint64_t v9 = sub_10090513C(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_10023B8FC();
      if (v9 == v1) {
        return (char *)v6;
      }
      __break(1u);
      return (char *)&_swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100903A08()
{
}

void *sub_100903A3C(uint64_t a1)
{
  uint64_t v4 = sub_10017DF08(&qword_100E717A8);
  __chkstk_darwin(v4);
  sub_10011BFD8();
  uint64_t v5 = sub_10017DF08(&qword_100EA0478);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_10012B938();
  sub_10017DF08(&qword_100E66CC8);
  sub_1001246C8((unint64_t *)&qword_100E66CE0, &qword_100E66CC8);
  uint64_t v7 = dispatch thunk of Collection.distance(from:to:)();
  if (!v7) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v8 = v7;
  if (v7 <= 0)
  {
    uint64_t v14 = _swiftEmptyArrayStorage;
LABEL_11:
    uint64_t v17 = type metadata accessor for HourWeather();
    sub_1001627C0(v17);
    sub_100129058();
    uint64_t v19 = (char *)v14 + v18;
    sub_10006DF38(a1, v1, &qword_100E717A8);
    uint64_t v20 = sub_100905484(v2, v19, v8);
    uint64_t result = (void *)sub_100178110(v2, &qword_100EA0478);
    if (v20 == v8) {
      return v14;
    }
    __break(1u);
    goto LABEL_14;
  }
  sub_10017DF08(&qword_100E97038);
  sub_100162708();
  uint64_t v9 = type metadata accessor for HourWeather();
  sub_100164920(v9);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = (void *)swift_allocObject();
  uint64_t result = (void *)j__malloc_size(v14);
  if (v11)
  {
    if ((void *)((char *)result - v13) == (void *)0x8000000000000000 && v11 == -1) {
      goto LABEL_15;
    }
    v14[2] = v8;
    v14[3] = 2 * ((uint64_t)((uint64_t)result - v13) / v11);
    goto LABEL_11;
  }
LABEL_14:
  __break(1u);
LABEL_15:
  __break(1u);
  return result;
}

void sub_100903C54()
{
}

void sub_100903C88()
{
  sub_100162EA0();
  unint64_t v6 = v5 >> 1;
  uint64_t v7 = (v5 >> 1) - v1;
  if (__OFSUB__(v5 >> 1, v1))
  {
    __break(1u);
    goto LABEL_16;
  }
  if (!v7) {
    goto LABEL_14;
  }
  uint64_t v8 = v4;
  uint64_t v9 = v3;
  uint64_t v10 = v1;
  uint64_t v11 = v0;
  if (v7 > 0)
  {
    sub_10017DF08(v2);
    uint64_t v12 = v9(0);
    sub_100164920(v12);
    uint64_t v14 = *(void *)(v13 + 72);
    unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v17 = (void *)swift_allocObject();
    size_t v18 = j__malloc_size(v17);
    if (v14)
    {
      if (v18 - v16 != 0x8000000000000000 || v14 != -1)
      {
        v17[2] = v7;
        v17[3] = 2 * ((uint64_t)(v18 - v16) / v14);
        goto LABEL_12;
      }
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v17 = &_swiftEmptyArrayStorage;
LABEL_12:
  if (v6 != v10)
  {
    uint64_t v20 = v9(0);
    sub_100164920(v20);
    v8(v11 + *(void *)(v22 + 72) * v10, v7, (char *)v17 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80)));
LABEL_14:
    sub_100162694();
    return;
  }
LABEL_18:
  __break(1u);
}

void *sub_100903DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Location();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v35 = (char *)&v30 - v9;
  if (*(void *)(a2 + 16))
  {
    uint64_t v36 = a1;
    unint64_t v10 = *(void *)(a1 + 16);
    swift_bridgeObjectRetain();
    if (v10)
    {
      unint64_t v11 = 0;
      uint64_t v33 = v5 + 16;
      uint64_t v34 = (char *)(a2 + 56);
      uint64_t v12 = (void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v31 = v5;
      uint64_t v32 = (v5 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      while (1)
      {
        if (v11 >= v10) {
          __break(1u);
        }
        uint64_t v13 = *(void *)(v5 + 72);
        unint64_t v14 = a1
            + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
            + v13 * v11;
        unint64_t v37 = v11 + 1;
        uint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
        v15(v35, v14, v4);
        sub_100906844(&qword_100E639A0, (void (*)(uint64_t))&type metadata accessor for Location);
        uint64_t v16 = dispatch thunk of Hashable._rawHashValue(seed:)();
        uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v18 = v16 & ~v17;
        if ((*(void *)&v34[(v18 >> 3) & 0xFFFFFFFFFFFFFF8] >> v18)) {
          break;
        }
        uint64_t v22 = *v12;
LABEL_11:
        v22(v35, v4);
        a1 = v36;
        unint64_t v11 = v37;
        unint64_t v10 = *(void *)(v36 + 16);
        if (v37 == v10) {
          goto LABEL_12;
        }
      }
      uint64_t v19 = a2;
      uint64_t v20 = ~v17;
      while (1)
      {
        v15(v8, *(void *)(v19 + 48) + v18 * v13, v4);
        sub_100906844((unint64_t *)&qword_100E639A8, (void (*)(uint64_t))&type metadata accessor for Location);
        char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v22 = *v12;
        (*v12)(v8, v4);
        if (v21) {
          break;
        }
        unint64_t v18 = (v18 + 1) & v20;
        if (((*(void *)&v34[(v18 >> 3) & 0xFFFFFFFFFFFFFF8] >> v18) & 1) == 0)
        {
          a2 = v19;
          uint64_t v5 = v31;
          goto LABEL_11;
        }
      }
      uint64_t isStackAllocationSafe = ((uint64_t (*)(char *, uint64_t))v22)(v35, v4);
      char v24 = *(unsigned char *)(v19 + 32);
      unint64_t v25 = (unint64_t)((1 << v24) + 63) >> 6;
      size_t v26 = 8 * v25;
      if ((v24 & 0x3Fu) <= 0xD
        || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
      {
        __chkstk_darwin(isStackAllocationSafe);
        memcpy((char *)&v30 - ((v26 + 15) & 0x3FFFFFFFFFFFFFF0), v34, v26);
        uint64_t v27 = sub_100904248((unint64_t *)((char *)&v30 - ((v26 + 15) & 0x3FFFFFFFFFFFFFF0)), v25, v19, v18, &v36);
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v28 = (void *)swift_slowAlloc();
        memcpy(v28, v34, v26);
        uint64_t v27 = sub_100904248((unint64_t *)v28, v25, v19, v18, &v36);
        swift_release();
        swift_bridgeObjectRelease();
        swift_slowDealloc();
      }
      return v27;
    }
    else
    {
LABEL_12:
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  return (void *)a2;
}

void *sub_100904248(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v10 = type metadata accessor for Location();
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11);
  uint64_t result = (void *)__chkstk_darwin(v14);
  uint64_t v19 = (char *)&v44 - v18;
  uint64_t v20 = *(void *)(a3 + 16);
  uint64_t v21 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  uint64_t v22 = *(unint64_t *)((char *)a1 + v21);
  uint64_t v45 = a1;
  *(unint64_t *)((char *)a1 + v21) = v22 & ((-1 << a4) - 1);
  uint64_t v23 = v20 - 1;
  uint64_t v24 = *a5;
  unint64_t v25 = a5[1];
  unint64_t v26 = *(void *)(*a5 + 16);
  uint64_t v44 = a2;
  uint64_t v46 = v23;
  if (v25 == v26)
  {
    uint64_t v27 = a3;
LABEL_18:
    swift_retain();
    return (void *)sub_100904640(v45, v44, v46, v27);
  }
  else
  {
    uint64_t v55 = v19;
    uint64_t v54 = v16 + 16;
    uint64_t v49 = v16 + 32;
    uint64_t v50 = v17;
    uint64_t v51 = v16;
    uint64_t v52 = a3 + 56;
    uint64_t v28 = (void (**)(char *, uint64_t))(v16 + 8);
    uint64_t v27 = a3;
    uint64_t v29 = a5;
    uint64_t v47 = a5;
    while (v25 < v26)
    {
      uint64_t v31 = v50;
      uint64_t v30 = v51;
      uint64_t v32 = *(unsigned __int8 *)(v51 + 80);
      uint64_t v53 = *(void *)(v51 + 72);
      uint64_t v33 = *(void (**)(uint64_t, unint64_t, uint64_t))(v51 + 16);
      v33(v50, v24 + ((v32 + 32) & ~v32) + v53 * v25, v10);
      v29[1] = v25 + 1;
      (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v55, v31, v10);
      sub_100906844(&qword_100E639A0, (void (*)(uint64_t))&type metadata accessor for Location);
      uint64_t v34 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v35 = -1 << *(unsigned char *)(v27 + 32);
      unint64_t v36 = v34 & ~v35;
      if ((*(void *)(v52 + ((v36 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v36))
      {
        uint64_t v48 = (unint64_t)v28 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        uint64_t v37 = v27;
        uint64_t v38 = ~v35;
        while (1)
        {
          v33((uint64_t)v13, *(void *)(v37 + 48) + v36 * v53, v10);
          sub_100906844((unint64_t *)&qword_100E639A8, (void (*)(uint64_t))&type metadata accessor for Location);
          char v39 = dispatch thunk of static Equatable.== infix(_:_:)();
          int v40 = *v28;
          (*v28)(v13, v10);
          if (v39) {
            break;
          }
          unint64_t v36 = (v36 + 1) & v38;
          if (((*(void *)(v52 + ((v36 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v36) & 1) == 0)
          {
            uint64_t v27 = v37;
            uint64_t v29 = v47;
            goto LABEL_11;
          }
        }
        uint64_t result = (void *)((uint64_t (*)(char *, uint64_t))v40)(v55, v10);
        uint64_t v41 = (v36 >> 3) & 0x1FFFFFFFFFFFFFF8;
        uint64_t v42 = *(unint64_t *)((char *)v45 + v41);
        *(unint64_t *)((char *)v45 + v41) = v42 & ~(1 << v36);
        if ((v42 & (1 << v36)) != 0)
        {
          uint64_t v43 = v46 - 1;
          if (__OFSUB__(v46, 1)) {
            goto LABEL_21;
          }
          uint64_t v27 = v37;
          uint64_t v29 = v47;
          --v46;
          if (!v43) {
            return &_swiftEmptySetSingleton;
          }
        }
        else
        {
          uint64_t v27 = v37;
          uint64_t v29 = v47;
        }
      }
      else
      {
        int v40 = *v28;
LABEL_11:
        uint64_t result = (void *)((uint64_t (*)(char *, uint64_t))v40)(v55, v10);
      }
      uint64_t v24 = *v29;
      unint64_t v25 = v29[1];
      unint64_t v26 = *(void *)(*v29 + 16);
      if (v25 == v26) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_21:
    __break(1u);
  }
  return result;
}

uint64_t sub_100904640(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a1;
  uint64_t v7 = type metadata accessor for Location();
  uint64_t v37 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return (uint64_t)&_swiftEmptySetSingleton;
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  sub_10017DF08(&qword_100E96FE0);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  uint64_t v10 = result;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v34;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 56;
  uint64_t v35 = (uint64_t (**)(unint64_t, char *, uint64_t))(v37 + 32);
  uint64_t v36 = v37 + 16;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v33)
      {
LABEL_36:
        swift_release();
        return v10;
      }
      unint64_t v18 = v34[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v33) {
          goto LABEL_36;
        }
        unint64_t v18 = v34[v13];
        if (!v18)
        {
          uint64_t v13 = v17 + 2;
          if (v17 + 2 >= v33) {
            goto LABEL_36;
          }
          unint64_t v18 = v34[v13];
          if (!v18)
          {
            uint64_t v19 = v17 + 3;
            if (v19 >= v33) {
              goto LABEL_36;
            }
            unint64_t v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                uint64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_36;
                }
                unint64_t v18 = v34[v13];
                ++v19;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v19;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    uint64_t v20 = a4;
    uint64_t v21 = *(void *)(a4 + 48);
    uint64_t v22 = *(void *)(v37 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v9, v21 + v22 * v16, v7);
    sub_100906844(&qword_100E639A0, (void (*)(uint64_t))&type metadata accessor for Location);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v23 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) == 0) {
      break;
    }
    unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(void *)(v14 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t result = (*v35)(*(void *)(v10 + 48) + v26 * v22, v9, v7);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      goto LABEL_39;
    }
    a4 = v20;
    if (!a3) {
      goto LABEL_36;
    }
  }
  char v27 = 0;
  unint64_t v28 = (unint64_t)(63 - v23) >> 6;
  while (++v25 != v28 || (v27 & 1) == 0)
  {
    BOOL v29 = v25 == v28;
    if (v25 == v28) {
      unint64_t v25 = 0;
    }
    v27 |= v29;
    uint64_t v30 = *(void *)(v14 + 8 * v25);
    if (v30 != -1)
    {
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
      goto LABEL_34;
    }
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

void sub_1009049C4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10017DF08(&qword_100E6CD98);
  uint64_t v37 = *(void *)(v8 - 8);
  uint64_t v38 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v31 - v12;
  uint64_t v14 = *(void *)(a4 + 64);
  uint64_t v36 = a4 + 64;
  uint64_t v15 = -1 << *(unsigned char *)(a4 + 32);
  if (-v15 < 64) {
    uint64_t v16 = ~(-1 << -(char)v15);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v14;
  if (!a2)
  {
    int64_t v18 = 0;
LABEL_38:
    uint64_t v30 = v36;
    *a1 = a4;
    a1[1] = v30;
    a1[2] = ~v15;
    a1[3] = v18;
    a1[4] = v17;
    return;
  }
  if (!a3)
  {
    int64_t v18 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v33 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v34 = a1;
  int64_t v18 = 0;
  uint64_t v19 = 0;
  int64_t v35 = (unint64_t)(63 - v15) >> 6;
  int64_t v32 = v35 - 1;
  uint64_t v20 = a3;
  if (!v17) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v21 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  unint64_t v22 = v21 | (v18 << 6);
  while (1)
  {
    ++v19;
    uint64_t v26 = *(void *)(a4 + 48);
    uint64_t v27 = type metadata accessor for Date();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v10, v26 + *(void *)(*(void *)(v27 - 8) + 72) * v22, v27);
    uint64_t v28 = *(void *)(a4 + 56);
    uint64_t v29 = type metadata accessor for SunriseSunsetDaylightCalculator.SunActivity(0);
    sub_10018D0C0(v28 + *(void *)(*(void *)(v29 - 8) + 72) * v22, (uint64_t)&v10[*(int *)(v38 + 48)]);
    sub_1001278D0((uint64_t)v10, (uint64_t)v13, &qword_100E6CD98);
    sub_1001278D0((uint64_t)v13, a2, &qword_100E6CD98);
    if (v19 == v20) {
      goto LABEL_37;
    }
    a2 += *(void *)(v37 + 72);
    if (v17) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v23 >= v35) {
      goto LABEL_33;
    }
    unint64_t v24 = *(void *)(v36 + 8 * v23);
    if (!v24) {
      break;
    }
LABEL_18:
    unint64_t v17 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
    int64_t v18 = v23;
  }
  v18 += 2;
  if (v23 + 1 >= v35)
  {
    unint64_t v17 = 0;
    int64_t v18 = v23;
    goto LABEL_37;
  }
  unint64_t v24 = *(void *)(v36 + 8 * v18);
  if (v24) {
    goto LABEL_14;
  }
  int64_t v25 = v23 + 2;
  if (v23 + 2 >= v35) {
    goto LABEL_33;
  }
  unint64_t v24 = *(void *)(v36 + 8 * v25);
  if (v24) {
    goto LABEL_17;
  }
  int64_t v18 = v23 + 3;
  if (v23 + 3 >= v35)
  {
    unint64_t v17 = 0;
    int64_t v18 = v23 + 2;
    goto LABEL_37;
  }
  unint64_t v24 = *(void *)(v36 + 8 * v18);
  if (v24)
  {
LABEL_14:
    int64_t v23 = v18;
    goto LABEL_18;
  }
  int64_t v25 = v23 + 4;
  if (v23 + 4 >= v35)
  {
LABEL_33:
    unint64_t v17 = 0;
LABEL_37:
    uint64_t v15 = v33;
    a1 = v34;
    goto LABEL_38;
  }
  unint64_t v24 = *(void *)(v36 + 8 * v25);
  if (v24)
  {
LABEL_17:
    int64_t v23 = v25;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v23 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v23 >= v35)
    {
      unint64_t v17 = 0;
      int64_t v18 = v32;
      goto LABEL_37;
    }
    unint64_t v24 = *(void *)(v36 + 8 * v23);
    ++v25;
    if (v24) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
}

void sub_100904D4C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v48 = sub_10017DF08(&qword_100E96350);
  uint64_t v45 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v46 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v47 = (char *)&v38 - v10;
  uint64_t v49 = a4;
  uint64_t v11 = *(void *)(a4 + 64);
  uint64_t v43 = a4 + 64;
  uint64_t v41 = -1 << *(unsigned char *)(a4 + 32);
  if (-v41 < 64) {
    uint64_t v12 = ~(-1 << -(char)v41);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  if (!a2)
  {
    int64_t v14 = 0;
LABEL_36:
    uint64_t v36 = ~v41;
    uint64_t v37 = v43;
    *a1 = v49;
    a1[1] = v37;
    a1[2] = v36;
    a1[3] = v14;
    a1[4] = v13;
    return;
  }
  if (!a3)
  {
    int64_t v14 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v44 = a3;
  int64_t v14 = 0;
  uint64_t v15 = 0;
  int64_t v42 = (unint64_t)(63 - v41) >> 6;
  int64_t v39 = v42 - 1;
  int v40 = a1;
  uint64_t v16 = (uint64_t)v47;
  if (!v13) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v17 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  int64_t v18 = v14;
  for (unint64_t i = v17 | (v14 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v18 << 6))
  {
    ++v15;
    uint64_t v22 = v49;
    uint64_t v23 = *(void *)(v49 + 48);
    uint64_t v24 = type metadata accessor for Date();
    uint64_t v25 = (uint64_t)v46;
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(v46, v23 + *(void *)(*(void *)(v24 - 8) + 72) * i, v24);
    uint64_t v26 = *(void *)(v22 + 56) + 80 * i;
    uint64_t v27 = *(void *)(v26 + 8);
    uint64_t v28 = *(void *)(v26 + 16);
    uint64_t v29 = *(void *)(v26 + 24);
    uint64_t v30 = *(void *)(v26 + 32);
    uint64_t v31 = *(void *)(v26 + 40);
    uint64_t v32 = *(void *)(v26 + 48);
    uint64_t v33 = *(void *)(v26 + 56);
    uint64_t v34 = v25 + *(int *)(v48 + 48);
    long long v35 = *(_OWORD *)(v26 + 64);
    *(void *)uint64_t v34 = *(void *)v26;
    *(void *)(v34 + 8) = v27;
    *(void *)(v34 + 16) = v28;
    *(void *)(v34 + 24) = v29;
    *(void *)(v34 + 32) = v30;
    *(void *)(v34 + 40) = v31;
    *(void *)(v34 + 48) = v32;
    *(void *)(v34 + 56) = v33;
    *(_OWORD *)(v34 + 64) = v35;
    sub_1001278D0(v25, v16, &qword_100E96350);
    sub_1001278D0(v16, a2, &qword_100E96350);
    if (v15 == v44)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a1 = v40;
      int64_t v14 = v18;
      goto LABEL_36;
    }
    a2 += *(void *)(v45 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int64_t v14 = v18;
    if (v13) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v18 >= v42) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v43 + 8 * v18);
    if (!v20) {
      break;
    }
LABEL_18:
    unint64_t v13 = (v20 - 1) & v20;
  }
  v14 += 2;
  if (v18 + 1 >= v42)
  {
    unint64_t v13 = 0;
    int64_t v14 = v18;
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v43 + 8 * v14);
  if (v20) {
    goto LABEL_14;
  }
  int64_t v21 = v18 + 2;
  if (v18 + 2 >= v42) {
    goto LABEL_33;
  }
  unint64_t v20 = *(void *)(v43 + 8 * v21);
  if (v20) {
    goto LABEL_17;
  }
  int64_t v14 = v18 + 3;
  if (v18 + 3 >= v42)
  {
    unint64_t v13 = 0;
    int64_t v14 = v18 + 2;
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v43 + 8 * v14);
  if (v20)
  {
LABEL_14:
    int64_t v18 = v14;
    goto LABEL_18;
  }
  int64_t v21 = v18 + 4;
  if (v18 + 4 >= v42)
  {
LABEL_33:
    unint64_t v13 = 0;
LABEL_35:
    a1 = v40;
    goto LABEL_36;
  }
  unint64_t v20 = *(void *)(v43 + 8 * v21);
  if (v20)
  {
LABEL_17:
    int64_t v18 = v21;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v18 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v18 >= v42)
    {
      unint64_t v13 = 0;
      int64_t v14 = v39;
      a1 = v40;
      goto LABEL_36;
    }
    unint64_t v20 = *(void *)(v43 + 8 * v18);
    ++v21;
    if (v20) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
}

uint64_t sub_10090513C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Location();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  int64_t v42 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v41 = (char *)&v32 - v13;
  uint64_t v43 = a4;
  uint64_t v16 = *(void *)(a4 + 56);
  uint64_t v15 = a4 + 56;
  uint64_t v14 = v16;
  uint64_t v37 = v15;
  uint64_t v17 = -1 << *(unsigned char *)(v15 - 24);
  if (-v17 < 64) {
    uint64_t v18 = ~(-1 << -(char)v17);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v14;
  if (!a2)
  {
    int64_t v20 = 0;
    a3 = 0;
LABEL_38:
    uint64_t v31 = v37;
    *a1 = v43;
    a1[1] = v31;
    a1[2] = ~v17;
    a1[3] = v20;
    a1[4] = v19;
    return a3;
  }
  if (!a3)
  {
    int64_t v20 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v34 = -1 << *(unsigned char *)(v15 - 24);
  long long v35 = a1;
  int64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v38 = v9 + 32;
  uint64_t v39 = v9 + 16;
  int64_t v36 = (unint64_t)(63 - v17) >> 6;
  int64_t v33 = v36 - 1;
  uint64_t v40 = a3;
  uint64_t v22 = v41;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v23 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v24 = v23 | (v20 << 6);
  while (1)
  {
    ++v21;
    uint64_t v28 = v42;
    uint64_t v29 = *(void *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v42, *(void *)(v43 + 48) + v29 * v24, v8);
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v30(v22, v28, v8);
    uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v30)(a2, v22, v8);
    a3 = v40;
    if (v21 == v40) {
      goto LABEL_37;
    }
    a2 += v29;
    if (v19) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v25 >= v36) {
      goto LABEL_32;
    }
    unint64_t v26 = *(void *)(v37 + 8 * v25);
    if (!v26) {
      break;
    }
LABEL_18:
    unint64_t v19 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v25 << 6);
    int64_t v20 = v25;
  }
  v20 += 2;
  if (v25 + 1 >= v36)
  {
    unint64_t v19 = 0;
    int64_t v20 = v25;
    goto LABEL_36;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v20);
  if (v26) {
    goto LABEL_14;
  }
  int64_t v27 = v25 + 2;
  if (v25 + 2 >= v36) {
    goto LABEL_32;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v27);
  if (v26) {
    goto LABEL_17;
  }
  int64_t v20 = v25 + 3;
  if (v25 + 3 >= v36)
  {
    unint64_t v19 = 0;
    int64_t v20 = v25 + 2;
    goto LABEL_36;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v20);
  if (v26)
  {
LABEL_14:
    int64_t v25 = v20;
    goto LABEL_18;
  }
  int64_t v27 = v25 + 4;
  if (v25 + 4 >= v36)
  {
LABEL_32:
    unint64_t v19 = 0;
LABEL_36:
    a3 = v21;
LABEL_37:
    uint64_t v17 = v34;
    a1 = v35;
    goto LABEL_38;
  }
  unint64_t v26 = *(void *)(v37 + 8 * v27);
  if (v26)
  {
LABEL_17:
    int64_t v25 = v27;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v25 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v25 >= v36)
    {
      unint64_t v19 = 0;
      int64_t v20 = v33;
      goto LABEL_36;
    }
    unint64_t v26 = *(void *)(v37 + 8 * v25);
    ++v27;
    if (v26) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100905484(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v51 = a1;
  uint64_t v7 = type metadata accessor for HourWeather();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v55 = v7;
  uint64_t v56 = v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v54 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v53 = (char *)&v45 - v11;
  uint64_t v12 = sub_10017DF08(&qword_100E717A8);
  __chkstk_darwin(v12);
  uint64_t v52 = (uint64_t)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_10017DF08(&qword_100EA0478);
  uint64_t v14 = __chkstk_darwin(v57);
  uint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (uint64_t *)((char *)&v45 - v17);
  uint64_t v19 = sub_10017DF08(&qword_100E66CC8);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  unint64_t v23 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v63 = a2;
  uint64_t v64 = a3;
  uint64_t v45 = a3;
  uint64_t v58 = v12;
  uint64_t v24 = *(int *)(v12 + 40);
  uint64_t v25 = v21;
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v23, &v4[v24], v21);
  uint64_t v59 = v4;
  uint64_t v60 = sub_100905D28;
  uint64_t v61 = &v62;
  sub_1001246C8(&qword_100E66CD8, &qword_100E66CC8);
  sub_10017DF08(&qword_100EA0480);
  dispatch thunk of Sequence.withContiguousStorageIfAvailable<A>(_:)();
  int64_t v27 = *(void (**)(char *, uint64_t))(v20 + 8);
  uint64_t v26 = v20 + 8;
  v27(v23, v25);
  if ((v67 & 1) == 0)
  {
    uint64_t v32 = v66[2];
    uint64_t v65 = *(void *)v4;
    sub_1001246C8((unint64_t *)&qword_100E66CE0, &qword_100E66CC8);
    dispatch thunk of Collection.index(_:offsetBy:)();
    uint64_t v33 = v51;
    sub_1001278D0((uint64_t)v4, v51, &qword_100E717A8);
    *(void *)(v33 + *(int *)(v57 + 36)) = v66[0];
    return v32;
  }
  sub_10006DF38((uint64_t)v4, (uint64_t)v16, &qword_100E717A8);
  uint64_t v28 = *(void *)v4;
  sub_100178110((uint64_t)v4, &qword_100E717A8);
  uint64_t v29 = v57;
  *(void *)&v16[*(int *)(v57 + 36)] = v28;
  sub_1001278D0((uint64_t)v16, (uint64_t)v18, &qword_100EA0478);
  if (!a2)
  {
    sub_1001278D0((uint64_t)v18, v51, &qword_100EA0478);
    return 0;
  }
  uint64_t v50 = v25;
  if (!v45)
  {
LABEL_13:
    sub_1001278D0((uint64_t)v18, v51, &qword_100EA0478);
    return v45;
  }
  uint64_t v30 = v45;
  if ((v45 & 0x8000000000000000) == 0)
  {
    uint64_t v57 = (uint64_t)v18 + *(int *)(v29 + 36);
    uint64_t v31 = v18[1];
    if (*(void *)v57 == v31)
    {
      uint64_t v32 = 0;
LABEL_12:
      sub_1001278D0((uint64_t)v18, v51, &qword_100EA0478);
      return v32;
    }
    uint64_t v49 = (void (**)(char *))(v56 + 16);
    uint64_t v48 = (void (**)(char *, char *, uint64_t))(v56 + 32);
    uint64_t v47 = sub_1001246C8((unint64_t *)&qword_100E66CE0, &qword_100E66CC8);
    uint64_t v32 = 0;
    uint64_t v46 = v30 - 1;
    uint64_t v34 = v54;
    uint64_t v35 = v55;
    while (1)
    {
      v66[0] = *v18;
      v66[1] = v31;
      dispatch thunk of Collection._failEarlyRangeCheck(_:bounds:)();
      int64_t v36 = (void (*)(void *, void))dispatch thunk of Collection.subscript.read();
      (*v49)(v34);
      v36(v66, 0);
      uint64_t v37 = (uint64_t)v18;
      uint64_t v38 = a2;
      uint64_t v39 = v18;
      uint64_t v40 = v52;
      sub_10006DF38(v37, v52, &qword_100E717A8);
      dispatch thunk of Collection.formIndex(after:)();
      uint64_t v41 = v40;
      uint64_t v18 = v39;
      sub_100178110(v41, &qword_100E717A8);
      int64_t v42 = *v48;
      uint64_t v43 = v53;
      (*v48)(v53, v34, v35);
      v42(v38, v43, v35);
      if (v46 == v32) {
        goto LABEL_13;
      }
      a2 = &v38[*(void *)(v56 + 72)];
      uint64_t v31 = v18[1];
      ++v32;
      if (*(void *)v57 == v31) {
        goto LABEL_12;
      }
    }
  }
  __break(1u);
  swift_errorRelease();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v29, v30);
  __break(1u);
  return result;
}

void *sub_100905AFC(uint64_t a1, uint64_t a2, uint64_t a3, void *(*a4)(uint64_t *__return_ptr, uint64_t, void *))
{
  sub_10017DF08(&qword_100E717A8);
  sub_10017DF08(&qword_100E66CC8);
  sub_1001246C8((unint64_t *)&qword_100E66CE0, &qword_100E66CC8);
  dispatch thunk of Collection.startIndex.getter();
  uint64_t v7 = dispatch thunk of Collection.distance(from:to:)();
  uint64_t result = (void *)dispatch thunk of Collection.distance(from:to:)();
  if (__OFADD__(v7, result))
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v9 = result;
  if ((uint64_t)result + v7 < v7)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v10 = 0;
  if (a1) {
    uint64_t v10 = a1 + *(void *)(*(void *)(type metadata accessor for HourWeather() - 8) + 72) * v7;
  }
  uint64_t result = a4(&v11, v10, v9);
  if (!v4) {
    return (void *)v11;
  }
  return result;
}

uint64_t sub_100905C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a1;
  if (a2 && a4)
  {
    if (a2 >= a4) {
      uint64_t v5 = a4;
    }
    else {
      uint64_t v5 = a2;
    }
    sub_1007EB8C8(a1, v5);
    v4 += *(void *)(*(void *)(type metadata accessor for HourWeather() - 8) + 72) * v5;
  }
  else if (a1)
  {
    type metadata accessor for HourWeather();
  }
  return v4;
}

uint64_t sub_100905CF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result = sub_100905C44(a1, a2, a3, a4);
  if (!v5)
  {
    *a5 = result;
    a5[1] = v8;
    a5[2] = v9;
  }
  return result;
}

uint64_t sub_100905D28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_100905CF8(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 24), a3);
}

void *sub_100905D44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *(*a4)(uint64_t *__return_ptr, uint64_t, void *)@<X3>, void *a5@<X8>)
{
  uint64_t result = sub_100905AFC(a1, a2, a3, a4);
  if (!v5)
  {
    *a5 = result;
    a5[1] = v8;
    a5[2] = v9;
  }
  return result;
}

void *sub_100905D74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_100905D44(a1, a2, *(void *)(v3 + 16), *(void *(**)(uint64_t *__return_ptr, uint64_t, void *))(v3 + 24), a3);
}

unint64_t sub_100905D94()
{
  unint64_t result = qword_100EA0490;
  if (!qword_100EA0490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA0490);
  }
  return result;
}

unint64_t sub_100905DE0()
{
  unint64_t result = qword_100EA04A0;
  if (!qword_100EA04A0)
  {
    sub_10018C6DC(&qword_100E97F18);
    sub_100906844(&qword_100EA04A8, (void (*)(uint64_t))&type metadata accessor for SavedLocation);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA04A0);
  }
  return result;
}

unint64_t sub_100905E84()
{
  unint64_t result = qword_100EA04B8;
  if (!qword_100EA04B8)
  {
    sub_10018C6DC(&qword_100EA04B0);
    sub_100906844(&qword_100E7E498, (void (*)(uint64_t))&type metadata accessor for LocationModel);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA04B8);
  }
  return result;
}

unint64_t sub_100905F28()
{
  unint64_t result = qword_100EA04C0;
  if (!qword_100EA04C0)
  {
    sub_10018C6DC(&qword_100E662A8);
    sub_100906844(&qword_100E8B208, (void (*)(uint64_t))&type metadata accessor for LocationOfInterest);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA04C0);
  }
  return result;
}

unint64_t sub_100905FCC()
{
  unint64_t result = qword_100EA04D0;
  if (!qword_100EA04D0)
  {
    sub_10018C6DC(&qword_100EA04C8);
    sub_100906844(&qword_100E6F9D0, (void (*)(uint64_t))&type metadata accessor for Location);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA04D0);
  }
  return result;
}

unint64_t sub_100906070()
{
  unint64_t result = qword_100EA04E0;
  if (!qword_100EA04E0)
  {
    sub_10018C6DC(&qword_100EA04D8);
    sub_100906844(&qword_100E7E448, (void (*)(uint64_t))&type metadata accessor for Location.Identifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA04E0);
  }
  return result;
}

unint64_t sub_100906114()
{
  unint64_t result = qword_100EA04F0;
  if (!qword_100EA04F0)
  {
    sub_10018C6DC(&qword_100EA04E8);
    sub_100906844(&qword_100E7E498, (void (*)(uint64_t))&type metadata accessor for LocationModel);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA04F0);
  }
  return result;
}

unint64_t sub_1009061C0()
{
  unint64_t result = qword_100EA0500;
  if (!qword_100EA0500)
  {
    sub_10018C6DC(&qword_100EA04F8);
    sub_100906844(&qword_100E6F9D0, (void (*)(uint64_t))&type metadata accessor for Location);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA0500);
  }
  return result;
}

unint64_t sub_10090626C()
{
  unint64_t result = qword_100EA0508;
  if (!qword_100EA0508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA0508);
  }
  return result;
}

unint64_t sub_1009062B8()
{
  unint64_t result = qword_100EA0518;
  if (!qword_100EA0518)
  {
    sub_10018C6DC(&qword_100EA0510);
    sub_100906844(&qword_100EA0520, (void (*)(uint64_t))&type metadata accessor for LocationDisplayContext);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA0518);
  }
  return result;
}

unint64_t sub_100906364()
{
  unint64_t result = qword_100EA0538;
  if (!qword_100EA0538)
  {
    sub_10018C6DC(&qword_100E97F18);
    sub_100906844(&qword_100EA0540, (void (*)(uint64_t))&type metadata accessor for SavedLocation);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA0538);
  }
  return result;
}

unint64_t sub_100906408()
{
  unint64_t result = qword_100EA0548;
  if (!qword_100EA0548)
  {
    sub_10018C6DC(&qword_100EA04B0);
    sub_100906844(&qword_100E7E550, (void (*)(uint64_t))&type metadata accessor for LocationModel);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA0548);
  }
  return result;
}

unint64_t sub_1009064AC()
{
  unint64_t result = qword_100EA0550;
  if (!qword_100EA0550)
  {
    sub_10018C6DC(&qword_100EA04C8);
    sub_100906844(&qword_100E6F9F8, (void (*)(uint64_t))&type metadata accessor for Location);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA0550);
  }
  return result;
}

unint64_t sub_100906550()
{
  unint64_t result = qword_100EA0558;
  if (!qword_100EA0558)
  {
    sub_10018C6DC(&qword_100EA04D8);
    sub_100906844(&qword_100E7E548, (void (*)(uint64_t))&type metadata accessor for Location.Identifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA0558);
  }
  return result;
}

unint64_t sub_1009065F4()
{
  unint64_t result = qword_100EA0560;
  if (!qword_100EA0560)
  {
    sub_10018C6DC(&qword_100EA04E8);
    sub_100906844(&qword_100E7E550, (void (*)(uint64_t))&type metadata accessor for LocationModel);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA0560);
  }
  return result;
}

unint64_t sub_1009066A0()
{
  unint64_t result = qword_100EA0568;
  if (!qword_100EA0568)
  {
    sub_10018C6DC(&qword_100EA04F8);
    sub_100906844(&qword_100E6F9F8, (void (*)(uint64_t))&type metadata accessor for Location);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA0568);
  }
  return result;
}

unint64_t sub_10090674C()
{
  unint64_t result = qword_100EA0570;
  if (!qword_100EA0570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA0570);
  }
  return result;
}

unint64_t sub_100906798()
{
  unint64_t result = qword_100EA0578;
  if (!qword_100EA0578)
  {
    sub_10018C6DC(&qword_100EA0510);
    sub_100906844(&qword_100EA0580, (void (*)(uint64_t))&type metadata accessor for LocationDisplayContext);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA0578);
  }
  return result;
}

uint64_t sub_100906844(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LocationsState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100906958);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationsState.CodingKeys()
{
  return &type metadata for LocationsState.CodingKeys;
}

unint64_t sub_100906994()
{
  unint64_t result = qword_100EA05A0;
  if (!qword_100EA05A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA05A0);
  }
  return result;
}

unint64_t sub_1009069E4()
{
  unint64_t result = qword_100EA05A8;
  if (!qword_100EA05A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA05A8);
  }
  return result;
}

unint64_t sub_100906A34()
{
  unint64_t result = qword_100EA05B0;
  if (!qword_100EA05B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA05B0);
  }
  return result;
}

uint64_t *sub_100906A80(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for SunriseSunsetViewModel();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      *uint64_t v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = *(void *)v15;
    char v17 = v15[8];
    sub_100195B7C(*(void *)v15, v17);
    *(void *)uint64_t v14 = v16;
    v14[8] = v17;
    uint64_t v18 = a3[7];
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = *(void *)v20;
    char v22 = v20[8];
    sub_100195B7C(*(void *)v20, v22);
    *(void *)uint64_t v19 = v21;
    v19[8] = v22;
    uint64_t v23 = a3[8];
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = *(void *)v25;
    char v27 = v25[8];
    sub_100195B7C(*(void *)v25, v27);
    *(void *)uint64_t v24 = v26;
    v24[8] = v27;
    uint64_t v28 = a3[9];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    uint64_t v31 = *(void *)v30;
    char v32 = v30[8];
    sub_100195B7C(*(void *)v30, v32);
    *(void *)uint64_t v29 = v31;
    v29[8] = v32;
  }
  return a1;
}

uint64_t sub_100906C80(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for SunriseSunsetViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(a1 + a2[6]), *(unsigned char *)(a1 + a2[6] + 8));
  sub_10018F6D8(*(void *)(a1 + a2[7]), *(unsigned char *)(a1 + a2[7] + 8));
  sub_10018F6D8(*(void *)(a1 + a2[8]), *(unsigned char *)(a1 + a2[8] + 8));
  uint64_t v7 = a1 + a2[9];
  uint64_t v8 = *(void *)v7;
  char v9 = *(unsigned char *)(v7 + 8);

  return sub_10018F6D8(v8, v9);
}

uint64_t sub_100906DAC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SunriseSunsetViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  char v9 = (void *)(a2 + v7);
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = *(unsigned char *)(v13 + 8);
  sub_100195B7C(*(void *)v13, v15);
  *(void *)uint64_t v12 = v14;
  *(unsigned char *)(v12 + 8) = v15;
  uint64_t v16 = a3[7];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = *(void *)v18;
  char v20 = *(unsigned char *)(v18 + 8);
  sub_100195B7C(*(void *)v18, v20);
  *(void *)uint64_t v17 = v19;
  *(unsigned char *)(v17 + 8) = v20;
  uint64_t v21 = a3[8];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = *(void *)v23;
  char v25 = *(unsigned char *)(v23 + 8);
  sub_100195B7C(*(void *)v23, v25);
  *(void *)uint64_t v22 = v24;
  *(unsigned char *)(v22 + 8) = v25;
  uint64_t v26 = a3[9];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  uint64_t v29 = *(void *)v28;
  char v30 = *(unsigned char *)(v28 + 8);
  sub_100195B7C(*(void *)v28, v30);
  *(void *)uint64_t v27 = v29;
  *(unsigned char *)(v27 + 8) = v30;
  return a1;
}

uint64_t sub_100906F5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SunriseSunsetViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)(a1 + v7);
    char v9 = (void *)(a2 + v7);
    sub_100178110(a1 + v7, &qword_100E63BC8);
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = *(void *)v13;
  char v15 = *(unsigned char *)(v13 + 8);
  sub_100195B7C(*(void *)v13, v15);
  uint64_t v16 = *(void *)v12;
  char v17 = *(unsigned char *)(v12 + 8);
  *(void *)uint64_t v12 = v14;
  *(unsigned char *)(v12 + 8) = v15;
  sub_10018F6D8(v16, v17);
  uint64_t v18 = a3[7];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = *(void *)v20;
  char v22 = *(unsigned char *)(v20 + 8);
  sub_100195B7C(*(void *)v20, v22);
  uint64_t v23 = *(void *)v19;
  char v24 = *(unsigned char *)(v19 + 8);
  *(void *)uint64_t v19 = v21;
  *(unsigned char *)(v19 + 8) = v22;
  sub_10018F6D8(v23, v24);
  uint64_t v25 = a3[8];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  uint64_t v28 = *(void *)v27;
  char v29 = *(unsigned char *)(v27 + 8);
  sub_100195B7C(*(void *)v27, v29);
  uint64_t v30 = *(void *)v26;
  char v31 = *(unsigned char *)(v26 + 8);
  *(void *)uint64_t v26 = v28;
  *(unsigned char *)(v26 + 8) = v29;
  sub_10018F6D8(v30, v31);
  uint64_t v32 = a3[9];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  uint64_t v35 = *(void *)v34;
  char v36 = *(unsigned char *)(v34 + 8);
  sub_100195B7C(*(void *)v34, v36);
  uint64_t v37 = *(void *)v33;
  char v38 = *(unsigned char *)(v33 + 8);
  *(void *)uint64_t v33 = v35;
  *(unsigned char *)(v33 + 8) = v36;
  sub_10018F6D8(v37, v38);
  return a1;
}

uint64_t sub_100907154(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SunriseSunsetViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  char v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  *(void *)uint64_t v14 = *(void *)v15;
  *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
  uint64_t v16 = a1 + v13;
  uint64_t v17 = a2 + v13;
  *(void *)uint64_t v16 = *(void *)v17;
  *(unsigned char *)(v16 + 8) = *(unsigned char *)(v17 + 8);
  uint64_t v18 = a3[8];
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = a2 + v18;
  *(void *)uint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = *(unsigned char *)(v21 + 8);
  uint64_t v22 = a1 + v19;
  uint64_t v23 = a2 + v19;
  *(void *)uint64_t v22 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  return a1;
}

uint64_t sub_1009072D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for SunriseSunsetViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)(a1 + v7);
    char v9 = (const void *)(a2 + v7);
    sub_100178110(a1 + v7, &qword_100E63BC8);
    uint64_t v10 = sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v15 = *v14;
  LOBYTE(v14) = *((unsigned char *)v14 + 8);
  uint64_t v16 = *(void *)v13;
  char v17 = *(unsigned char *)(v13 + 8);
  *(void *)uint64_t v13 = v15;
  *(unsigned char *)(v13 + 8) = (_BYTE)v14;
  sub_10018F6D8(v16, v17);
  uint64_t v18 = a3[7];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v21 = *v20;
  LOBYTE(v20) = *((unsigned char *)v20 + 8);
  uint64_t v22 = *(void *)v19;
  char v23 = *(unsigned char *)(v19 + 8);
  *(void *)uint64_t v19 = v21;
  *(unsigned char *)(v19 + 8) = (_BYTE)v20;
  sub_10018F6D8(v22, v23);
  uint64_t v24 = a3[8];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = (uint64_t *)(a2 + v24);
  uint64_t v27 = *v26;
  LOBYTE(v26) = *((unsigned char *)v26 + 8);
  uint64_t v28 = *(void *)v25;
  char v29 = *(unsigned char *)(v25 + 8);
  *(void *)uint64_t v25 = v27;
  *(unsigned char *)(v25 + 8) = (_BYTE)v26;
  sub_10018F6D8(v28, v29);
  uint64_t v30 = a3[9];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = (uint64_t *)(a2 + v30);
  uint64_t v33 = *v32;
  LOBYTE(v32) = *((unsigned char *)v32 + 8);
  uint64_t v34 = *(void *)v31;
  char v35 = *(unsigned char *)(v31 + 8);
  *(void *)uint64_t v31 = v33;
  *(unsigned char *)(v31 + 8) = (_BYTE)v32;
  sub_10018F6D8(v34, v35);
  return a1;
}

uint64_t sub_1009074A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009074B8);
}

uint64_t sub_1009074B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for SunriseSunsetViewModel();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    sub_10017DF08((uint64_t *)&unk_100EAA530);
    sub_100162F30();
    if (*(_DWORD *)(v11 + 84) != a2)
    {
      unsigned int v13 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24) + 8);
      if (v13 > 1) {
        return (v13 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v10;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_100907570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100907584);
}

void sub_100907584(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for SunriseSunsetViewModel();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_10017DF08((uint64_t *)&unk_100EAA530);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 24) + 8) = -(char)a2;
      return;
    }
    uint64_t v10 = v12;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t sub_10090763C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100907658@<X0>(uint64_t a1@<X8>)
{
  uint64_t v121 = a1;
  uint64_t v101 = sub_10017DF08(&qword_100EA0658);
  sub_100162E4C();
  __chkstk_darwin(v1);
  sub_100109314();
  uint64_t v98 = v2;
  uint64_t v103 = sub_10017DF08(&qword_100EA0660);
  sub_100179C0C();
  uint64_t v102 = v3;
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v99 = v5;
  uint64_t v6 = sub_10017DF08(&qword_100E7A080);
  __chkstk_darwin(v6 - 8);
  sub_100109314();
  uint64_t v104 = v7;
  uint64_t v120 = sub_10017DF08(&qword_100E7A088);
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_100162EF8();
  uint64_t v100 = v9;
  __chkstk_darwin(v10);
  uint64_t v105 = (uint64_t)&v98 - v11;
  uint64_t v118 = sub_10017DF08(&qword_100EA0668);
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v119 = v13;
  uint64_t v115 = type metadata accessor for AutomationInfo(0);
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_100109314();
  uint64_t v116 = v15;
  type metadata accessor for AccessibilityChildBehavior();
  sub_100179C0C();
  uint64_t v113 = v17;
  uint64_t v114 = v16;
  __chkstk_darwin(v16);
  sub_100109314();
  uint64_t v112 = v18;
  uint64_t v107 = sub_10017DF08(&qword_100EA0670);
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_1001626E0();
  uint64_t v22 = v21 - v20;
  sub_10017DF08(&qword_100EA0678);
  sub_100179C0C();
  uint64_t v108 = v24;
  uint64_t v109 = v23;
  __chkstk_darwin(v23);
  sub_1001626E0();
  uint64_t v25 = sub_10017DF08(&qword_100E7A090);
  __chkstk_darwin(v25 - 8);
  sub_100109314();
  uint64_t v110 = v26;
  uint64_t v117 = sub_10017DF08(&qword_100E7A098);
  sub_100162E4C();
  __chkstk_darwin(v27);
  sub_100162EF8();
  uint64_t v106 = v28;
  __chkstk_darwin(v29);
  uint64_t v111 = (uint64_t)&v98 - v30;
  uint64_t v31 = type metadata accessor for ContentSizeCategory();
  sub_100179C0C();
  uint64_t v33 = v32;
  __chkstk_darwin(v34);
  char v36 = (char *)&v98 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  uint64_t v39 = (char *)&v98 - v38;
  type metadata accessor for SunriseSunsetComponentView();
  sub_100162E4C();
  __chkstk_darwin(v40);
  sub_1001626E0();
  uint64_t v43 = v42 - v41;
  id v44 = [self currentDevice];
  id v45 = [v44 userInterfaceIdiom];

  uint64_t v46 = v122;
  sub_10090A6D0(v122, v43);
  if (!v45) {
    goto LABEL_42;
  }
  sub_10014E6E8();
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v36, v39, v31);
  int v47 = (*(uint64_t (**)(char *, uint64_t))(v33 + 88))(v36, v31);
  if (v47 == enum case for ContentSizeCategory.extraSmall(_:)
    || v47 == enum case for ContentSizeCategory.small(_:)
    || v47 == enum case for ContentSizeCategory.medium(_:)
    || v47 == enum case for ContentSizeCategory.large(_:)
    || v47 == enum case for ContentSizeCategory.extraLarge(_:)
    || v47 == enum case for ContentSizeCategory.extraExtraLarge(_:)
    || v47 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
  {
    (*(void (**)(char *, uint64_t))(v33 + 8))(v39, v31);
LABEL_42:
    sub_10090A734(v43, (void (*)(void))type metadata accessor for SunriseSunsetComponentView);
    *(void *)uint64_t v22 = static HorizontalAlignment.leading.getter();
    *(void *)(v22 + 8) = 0;
    *(unsigned char *)(v22 + 16) = 0;
    uint64_t v81 = sub_10017DF08(&qword_100EA0680);
    sub_1009080B8(v46, v22 + *(int *)(v81 + 44));
    static AccessibilityChildBehavior.combine.getter();
    unint64_t v82 = sub_10024D5E4((uint64_t)&unk_100EA0688);
    uint64_t v83 = v107;
    View.accessibilityElement(children:)();
    sub_100162F0C();
    v84();
    sub_100178110(v22, &qword_100EA0670);
    uint64_t v123 = v83;
    unint64_t v124 = v82;
    swift_getOpaqueTypeConformance2();
    uint64_t v85 = v109;
    uint64_t v86 = v110;
    View.accessibilityRespondsToUserInteraction(_:)();
    sub_100162F0C();
    v87();
    type metadata accessor for AutomationCellInfo(0);
    sub_1001D1F94();
    swift_storeEnumTagMultiPayload();
    uint64_t v88 = v106;
    sub_10048D554(v85, v89, v90, v91, v92, v93, v94, v95, (uint64_t)v98, v99, v100, v101, v102, v103, v104, v105, v106, v107, v108,
      v109);
    sub_10090A734(v85, (void (*)(void))type metadata accessor for AutomationInfo);
    sub_100178110(v86, &qword_100E7A090);
    uint64_t v78 = &qword_100E7A098;
    uint64_t v96 = v88;
    uint64_t v80 = v111;
    sub_10020E72C(v96, v111, &qword_100E7A098);
    sub_10017EB24();
    swift_storeEnumTagMultiPayload();
    sub_10090A894((uint64_t)&unk_100EA0690);
    goto LABEL_43;
  }
  uint64_t v54 = *(void (**)(char *, uint64_t))(v33 + 8);
  if (v47 != enum case for ContentSizeCategory.accessibilityMedium(_:)
    && v47 != enum case for ContentSizeCategory.accessibilityLarge(_:)
    && v47 != enum case for ContentSizeCategory.accessibilityExtraLarge(_:)
    && v47 != enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:)
    && v47 != enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
  {
    v54(v36, v31);
    v54(v39, v31);
    goto LABEL_42;
  }
  v54(v39, v31);
  sub_10090A734(v43, (void (*)(void))type metadata accessor for SunriseSunsetComponentView);
  unsigned __int8 v59 = static Axis.Set.horizontal.getter();
  unsigned __int8 v60 = static Axis.Set.vertical.getter();
  char v61 = Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v59) {
    char v61 = Axis.Set.init(rawValue:)();
  }
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v60) {
    char v61 = Axis.Set.init(rawValue:)();
  }
  char v62 = v98;
  *uint64_t v98 = v61;
  uint64_t v63 = sub_10017DF08(&qword_100EA06B8);
  sub_10090950C((uint64_t)&v62[*(int *)(v63 + 44)]);
  static AccessibilityChildBehavior.combine.getter();
  unint64_t v64 = sub_10024D5E4((uint64_t)&unk_100EA06B0);
  uint64_t v65 = v101;
  View.accessibilityElement(children:)();
  sub_100162F0C();
  v66();
  sub_100178110((uint64_t)v62, &qword_100EA0658);
  uint64_t v123 = v65;
  unint64_t v124 = v64;
  swift_getOpaqueTypeConformance2();
  uint64_t v67 = v104;
  uint64_t v68 = v103;
  View.accessibilityRespondsToUserInteraction(_:)();
  sub_100162F0C();
  v69();
  type metadata accessor for AutomationCellInfo(0);
  sub_1001D1F94();
  swift_storeEnumTagMultiPayload();
  uint64_t v70 = v100;
  sub_10048D57C(v68, v71, v72, v73, v74, v75, v76, v77, (uint64_t)v98, v99, v100, v101, v102, v103, v104, v105, v106, v107, v108,
    v109);
  sub_10090A734(v68, (void (*)(void))type metadata accessor for AutomationInfo);
  sub_100178110(v67, &qword_100E7A080);
  uint64_t v78 = &qword_100E7A088;
  uint64_t v79 = v70;
  uint64_t v80 = v105;
  sub_10020E72C(v79, v105, &qword_100E7A088);
  sub_10017EB24();
  swift_storeEnumTagMultiPayload();
  sub_10090A894((uint64_t)&unk_100EA0690);
LABEL_43:
  sub_10090A894((uint64_t)&unk_100EA06A0);
  _ConditionalContent<>.init(storage:)();
  return sub_100178110(v80, v78);
}

uint64_t sub_1009080B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v124 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100EA06E8);
  __chkstk_darwin(v3 - 8);
  uint64_t v125 = (uint64_t)&v108 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v123 = (char *)&v108 - v6;
  uint64_t v113 = sub_10017DF08(&qword_100EA0778);
  __chkstk_darwin(v113);
  uint64_t v118 = (uint64_t)&v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_10017DF08(&qword_100EA0780);
  __chkstk_darwin(v117);
  uint64_t v112 = (char *)&v108 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v110 = (char *)&v108 - v10;
  uint64_t v114 = sub_10017DF08(&qword_100EA0788);
  __chkstk_darwin(v114);
  uint64_t v109 = (uint64_t)&v108 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v111 = (uint64_t)&v108 - v13;
  uint64_t v14 = sub_10017DF08(&qword_100EA0790);
  __chkstk_darwin(v14 - 8);
  uint64_t v116 = (uint64_t)&v108 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v115 = (char *)&v108 - v17;
  uint64_t v18 = type metadata accessor for ContentSizeCategory();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v119 = (char *)&v108 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v108 - v22;
  uint64_t v24 = sub_10017DF08(&qword_100EA0798);
  __chkstk_darwin(v24 - 8);
  uint64_t v122 = (char *)&v108 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v121 = (char *)&v108 - v27;
  uint64_t v28 = sub_10017DF08(&qword_100EA06F0);
  __chkstk_darwin(v28 - 8);
  uint64_t v30 = (char *)&v108 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)&v108 - v32;
  uint64_t v34 = sub_10017DF08(&qword_100EA06F8);
  __chkstk_darwin(v34 - 8);
  uint64_t v120 = (uint64_t)&v108 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  uint64_t v38 = (char *)&v108 - v37;
  __chkstk_darwin(v39);
  uint64_t v41 = (char *)&v108 - v40;
  *(void *)uint64_t v38 = static VerticalAlignment.center.getter();
  *((void *)v38 + 1) = 0;
  v38[16] = 1;
  uint64_t v42 = (uint64_t)&v38[*(int *)(sub_10017DF08(&qword_100EA0700) + 44)];
  sub_100908BE0((uint64_t)v33);
  sub_1001262FC((uint64_t)v33, (uint64_t)v30, &qword_100EA06F0);
  sub_1001262FC((uint64_t)v30, v42, &qword_100EA06F0);
  uint64_t v43 = v42 + *(int *)(sub_10017DF08(&qword_100EA0708) + 48);
  *(void *)uint64_t v43 = 0;
  *(unsigned char *)(v43 + 8) = 0;
  sub_100178110((uint64_t)v33, &qword_100EA06F0);
  uint64_t v44 = (uint64_t)v30;
  uint64_t v45 = a1;
  sub_100178110(v44, &qword_100EA06F0);
  uint64_t v46 = (uint64_t)v41;
  uint64_t v47 = (uint64_t)v41;
  uint64_t v48 = v119;
  sub_10020E72C((uint64_t)v38, v47, &qword_100EA06F8);
  uint64_t v49 = type metadata accessor for SunriseSunsetComponentView();
  sub_10014E6E8();
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v48, v23, v18);
  int v50 = (*(uint64_t (**)(char *, uint64_t))(v19 + 88))(v48, v18);
  if (v50 == enum case for ContentSizeCategory.extraSmall(_:)
    || v50 == enum case for ContentSizeCategory.small(_:)
    || v50 == enum case for ContentSizeCategory.medium(_:)
    || v50 == enum case for ContentSizeCategory.large(_:)
    || v50 == enum case for ContentSizeCategory.extraLarge(_:)
    || v50 == enum case for ContentSizeCategory.extraExtraLarge(_:)
    || v50 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
  {
    uint64_t v57 = *(void (**)(char *, uint64_t))(v19 + 8);
  }
  else
  {
    uint64_t v57 = *(void (**)(char *, uint64_t))(v19 + 8);
    if (v50 == enum case for ContentSizeCategory.accessibilityMedium(_:)
      || v50 == enum case for ContentSizeCategory.accessibilityLarge(_:)
      || v50 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:)
      || v50 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:)
      || v50 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
    {
      v57(v23, v18);
      uint64_t v62 = (uint64_t)v121;
LABEL_38:
      uint64_t v68 = sub_10017DF08(&qword_100EA07A0);
      _s7Weather24LocationCompositionStateOwst_0(v62, 1, 1, v68);
      uint64_t v70 = (uint64_t)v122;
      uint64_t v69 = (uint64_t)v123;
      goto LABEL_46;
    }
    v57(v48, v18);
  }
  uint64_t v62 = (uint64_t)v121;
  v57(v23, v18);
  uint64_t v63 = v45 + *(int *)(v49 + 24);
  uint64_t v64 = *(void *)v63;
  char v65 = *(unsigned char *)(v63 + 8);
  sub_100195B7C(*(void *)v63, v65);
  sub_10014E71C();
  __int16 v67 = v66;
  sub_10018F6D8(v64, v65);
  if ((v67 & 0x100) == 0) {
    goto LABEL_38;
  }
  uint64_t v71 = v62;
  id v72 = [self currentDevice];
  id v73 = [v72 userInterfaceIdiom];

  uint64_t v70 = (uint64_t)v122;
  if (v73)
  {
    uint64_t v74 = (uint64_t)v112;
    sub_10090901C();
    uint64_t v75 = &qword_100EA0780;
    sub_1001262FC(v74, v118, &qword_100EA0780);
    swift_storeEnumTagMultiPayload();
    sub_10090AAF8((uint64_t)&unk_100EA07B0);
    sub_10090AB70();
    uint64_t v76 = (uint64_t)v115;
    _ConditionalContent<>.init(storage:)();
    uint64_t v77 = v74;
  }
  else
  {
    uint64_t v78 = (uint64_t)v110;
    sub_10090901C();
    uint64_t v79 = v45 + *(int *)(v49 + 32);
    uint64_t v80 = *(void *)v79;
    uint64_t v81 = *(unsigned __int8 *)(v79 + 8);
    sub_100195B7C(*(void *)v79, *(unsigned char *)(v79 + 8));
    sub_100147CF4();
    char v83 = v82;
    sub_10018F6D8(v80, v81);
    char v84 = v83 & 1;
    if (v83) {
      uint64_t v85 = 0;
    }
    else {
      uint64_t v85 = 0x4010000000000000;
    }
    uint64_t v86 = v109;
    sub_1001262FC(v78, v109, &qword_100EA0780);
    uint64_t v87 = v86 + *(int *)(v114 + 36);
    *(void *)uint64_t v87 = v85;
    *(unsigned char *)(v87 + 8) = v84;
    *(unsigned char *)(v87 + 9) = 0;
    sub_100178110(v78, &qword_100EA0780);
    uint64_t v75 = &qword_100EA0788;
    uint64_t v88 = v86;
    uint64_t v89 = v111;
    sub_10020E72C(v88, v111, &qword_100EA0788);
    sub_1001262FC(v89, v118, &qword_100EA0788);
    swift_storeEnumTagMultiPayload();
    sub_10090AAF8((uint64_t)&unk_100EA07B0);
    sub_10090AB70();
    uint64_t v76 = (uint64_t)v115;
    _ConditionalContent<>.init(storage:)();
    uint64_t v77 = v89;
  }
  sub_100178110(v77, v75);
  uint64_t v69 = (uint64_t)v123;
  uint64_t v90 = v116;
  sub_1001262FC(v76, v116, &qword_100EA0790);
  *(void *)uint64_t v70 = 0;
  *(unsigned char *)(v70 + 8) = 1;
  uint64_t v91 = sub_10017DF08(&qword_100EA07E8);
  sub_1001262FC(v90, v70 + *(int *)(v91 + 48), &qword_100EA0790);
  uint64_t v92 = v70 + *(int *)(v91 + 64);
  *(void *)uint64_t v92 = 0;
  *(unsigned char *)(v92 + 8) = 1;
  sub_100178110(v76, &qword_100EA0790);
  sub_100178110(v90, &qword_100EA0790);
  uint64_t v93 = sub_10017DF08(&qword_100EA07A0);
  _s7Weather24LocationCompositionStateOwst_0(v70, 0, 1, v93);
  uint64_t v62 = v71;
  sub_10020E72C(v70, v71, &qword_100EA0798);
LABEL_46:
  uint64_t v94 = SunriseSunsetViewModel.description.getter();
  unint64_t v96 = v95;
  swift_bridgeObjectRelease();
  uint64_t v97 = HIBYTE(v96) & 0xF;
  if ((v96 & 0x2000000000000000) == 0) {
    uint64_t v97 = v94 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v98 = 1;
  uint64_t v99 = v70;
  if (v97)
  {
    *(void *)uint64_t v69 = static VerticalAlignment.center.getter();
    *(void *)(v69 + 8) = 0;
    *(unsigned char *)(v69 + 16) = 1;
    uint64_t v100 = sub_10017DF08(&qword_100EA0710);
    sub_100909DC8(v69 + *(int *)(v100 + 44));
    uint64_t v98 = 0;
  }
  uint64_t v101 = sub_10017DF08(&qword_100EA0718);
  _s7Weather24LocationCompositionStateOwst_0(v69, v98, 1, v101);
  uint64_t v102 = v120;
  sub_1001262FC(v46, v120, &qword_100EA06F8);
  sub_1001262FC(v62, v99, &qword_100EA0798);
  uint64_t v103 = v125;
  sub_1001262FC(v69, v125, &qword_100EA06E8);
  uint64_t v104 = v124;
  sub_1001262FC(v102, v124, &qword_100EA06F8);
  uint64_t v105 = v62;
  uint64_t v106 = sub_10017DF08(&qword_100EA07A8);
  sub_1001262FC(v99, v104 + *(int *)(v106 + 48), &qword_100EA0798);
  sub_1001262FC(v103, v104 + *(int *)(v106 + 64), &qword_100EA06E8);
  sub_100178110(v69, &qword_100EA06E8);
  sub_100178110(v105, &qword_100EA0798);
  sub_100178110(v46, &qword_100EA06F8);
  sub_100178110(v103, &qword_100EA06E8);
  sub_100178110(v99, &qword_100EA0798);
  return sub_100178110(v102, &qword_100EA06F8);
}

uint64_t sub_100908BE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v41 = a1;
  uint64_t v39 = type metadata accessor for SunriseSunsetComponentView();
  __chkstk_darwin(v39);
  uint64_t v3 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.sunriseSunset.getter();
  uint64_t v40 = v1;
  sub_10090A6D0(v1, (uint64_t)v3);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v38 = v4;
    v44[0] = v11;
    *(_DWORD *)uint64_t v10 = 136446210;
    uint64_t v12 = SunriseSunsetViewModel.title.getter();
    uint64_t v42 = sub_10016414C(v12, v13, v44);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10090A734((uint64_t)v3, (void (*)(void))type metadata accessor for SunriseSunsetComponentView);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "SunriseSunsetComponentView: next sun event is %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v38);
  }
  else
  {
    sub_10090A734((uint64_t)v3, (void (*)(void))type metadata accessor for SunriseSunsetComponentView);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v14 = v40;
  uint64_t v15 = SunriseSunsetViewModel.title.getter();
  uint64_t v17 = v16;
  uint64_t v18 = SunriseSunsetViewModel.timePeriodSymbols.getter();
  uint64_t v19 = sub_100909EC8(v15, v17, v18);
  uint64_t v21 = v20;
  char v23 = v22;
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  char v27 = static Edge.Set.horizontal.getter();
  uint64_t v28 = v14 + *(int *)(v39 + 28);
  uint64_t v29 = *(void *)v28;
  LOBYTE(v17) = *(unsigned char *)(v28 + 8);
  sub_100195B7C(*(void *)v28, v17);
  sub_100149AE8();
  char v31 = v30;
  sub_10018F6D8(v29, v17);
  if (v31)
  {
    if (qword_100E62240 == -1) {
      goto LABEL_8;
    }
    goto LABEL_9;
  }
  if (qword_100E62248 != -1) {
LABEL_9:
  }
    swift_once();
LABEL_8:
  EdgeInsets.init(_all:)();
  v44[0] = v19;
  v44[1] = v21;
  char v45 = v23 & 1;
  uint64_t v46 = v25;
  uint64_t v47 = KeyPath;
  uint64_t v48 = 0x3FE0000000000000;
  char v49 = v27;
  uint64_t v50 = v32;
  uint64_t v51 = v33;
  uint64_t v52 = v34;
  uint64_t v53 = v35;
  char v54 = 0;
  uint64_t v42 = SunriseSunsetViewModel.title.getter();
  uint64_t v43 = v36;
  sub_10017DF08(&qword_100EA0748);
  sub_10090AA5C();
  sub_10014A85C();
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  sub_100191924(v19, v21, v23 & 1);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10090901C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SunriseSunsetViewModel();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SunriseSunsetChartView();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  os_log_type_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100EA07C8);
  __n128 v11 = __chkstk_darwin(v10);
  unint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v5, v1, v2, v11);
  SunriseSunsetChartView.init(model:)();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v15 = v1 + *(int *)(type metadata accessor for SunriseSunsetComponentView() + 36);
  uint64_t v16 = *(void *)v15;
  LOBYTE(v5) = *(unsigned char *)(v15 + 8);
  sub_100195B7C(*(void *)v15, (char)v5);
  sub_100149AE8();
  LOBYTE(v3) = v17;
  sub_10018F6D8(v16, (char)v5);
  if (v3) {
    static Color.white.getter();
  }
  else {
    static Color.black.getter();
  }
  uint64_t v18 = Color.opacity(_:)();
  swift_release();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v9, v6);
  uint64_t v19 = (uint64_t *)&v13[*(int *)(v10 + 36)];
  *uint64_t v19 = KeyPath;
  v19[1] = v18;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_10090AC1C();
  View.accessibilityHidden(_:)();
  return sub_100178110((uint64_t)v13, &qword_100EA07C8);
}

uint64_t sub_1009092B8()
{
  uint64_t v1 = SunriseSunsetViewModel.description.getter();
  uint64_t v3 = v2;
  uint64_t v4 = SunriseSunsetViewModel.timePeriodSymbols.getter();
  uint64_t v5 = sub_10090A324(v1, v3, v4);
  uint64_t v7 = v6;
  char v9 = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  static Edge.Set.horizontal.getter();
  uint64_t v10 = v0 + *(int *)(type metadata accessor for SunriseSunsetComponentView() + 28);
  uint64_t v11 = *(void *)v10;
  char v12 = *(unsigned char *)(v10 + 8);
  sub_100195B7C(*(void *)v10, v12);
  sub_100149AE8();
  LOBYTE(v1) = v13;
  sub_10018F6D8(v11, v12);
  if (v1)
  {
    if (qword_100E62240 == -1) {
      goto LABEL_5;
    }
    goto LABEL_6;
  }
  if (qword_100E62248 != -1) {
LABEL_6:
  }
    swift_once();
LABEL_5:
  EdgeInsets.init(_all:)();
  SunriseSunsetViewModel.description.getter();
  sub_10017DF08(&qword_100EA0738);
  sub_10090AAF8((uint64_t)&unk_100EA0740);
  sub_10014A85C();
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  sub_100191924(v5, v7, v9 & 1);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10090950C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10017DF08(&qword_100EA06C0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v18 - v6;
  uint64_t v8 = sub_10017DF08(&qword_100EA06C8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  char v13 = (char *)&v18 - v12;
  *(void *)char v13 = static VerticalAlignment.lastTextBaseline.getter();
  *((void *)v13 + 1) = 0;
  v13[16] = 0;
  uint64_t v14 = sub_10017DF08(&qword_100EA06D0);
  sub_1009096F4((uint64_t)&v13[*(int *)(v14 + 44)]);
  *(void *)uint64_t v7 = static HorizontalAlignment.leading.getter();
  *((void *)v7 + 1) = 0;
  v7[16] = 0;
  uint64_t v15 = sub_10017DF08(&qword_100EA06D8);
  sub_100909A7C((uint64_t)&v7[*(int *)(v15 + 44)]);
  sub_1001262FC((uint64_t)v13, (uint64_t)v10, &qword_100EA06C8);
  sub_1001262FC((uint64_t)v7, (uint64_t)v4, &qword_100EA06C0);
  sub_1001262FC((uint64_t)v10, a1, &qword_100EA06C8);
  uint64_t v16 = sub_10017DF08(&qword_100EA06E0);
  sub_1001262FC((uint64_t)v4, a1 + *(int *)(v16 + 48), &qword_100EA06C0);
  sub_100178110((uint64_t)v7, &qword_100EA06C0);
  sub_100178110((uint64_t)v13, &qword_100EA06C8);
  sub_100178110((uint64_t)v4, &qword_100EA06C0);
  return sub_100178110((uint64_t)v10, &qword_100EA06C8);
}

uint64_t sub_1009096F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v1 = sub_10017DF08(&qword_100EA0728);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_10017DF08(&qword_100EA0758);
  __chkstk_darwin(v33);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100EA0760);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v33 - v10;
  uint64_t v12 = sub_10017DF08(&qword_100EA06F0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100EA0768);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v33 - v20;
  sub_100908BE0((uint64_t)v14);
  sub_1001262FC((uint64_t)v14, (uint64_t)v18, &qword_100EA06F0);
  *(_WORD *)&v18[*(int *)(v16 + 44)] = 257;
  sub_100178110((uint64_t)v14, &qword_100EA06F0);
  sub_10020E72C((uint64_t)v18, (uint64_t)v21, &qword_100EA0768);
  uint64_t v22 = SunriseSunsetViewModel.description.getter();
  unint64_t v24 = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = HIBYTE(v24) & 0xF;
  if ((v24 & 0x2000000000000000) == 0) {
    uint64_t v25 = v22 & 0xFFFFFFFFFFFFLL;
  }
  if (v25)
  {
    sub_1009092B8();
    sub_1001262FC((uint64_t)v3, (uint64_t)v5, &qword_100EA0728);
    uint64_t v26 = v33;
    *(_WORD *)&v5[*(int *)(v33 + 36)] = 257;
    sub_100178110((uint64_t)v3, &qword_100EA0728);
    sub_10020E72C((uint64_t)v5, (uint64_t)v11, &qword_100EA0758);
    uint64_t v27 = 0;
    uint64_t v28 = v26;
  }
  else
  {
    uint64_t v27 = 1;
    uint64_t v28 = v33;
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, v27, 1, v28);
  sub_1001262FC((uint64_t)v21, (uint64_t)v18, &qword_100EA0768);
  sub_1001262FC((uint64_t)v11, (uint64_t)v8, &qword_100EA0760);
  uint64_t v29 = v34;
  sub_1001262FC((uint64_t)v18, v34, &qword_100EA0768);
  uint64_t v30 = sub_10017DF08(&qword_100EA0770);
  sub_1001262FC((uint64_t)v8, v29 + *(int *)(v30 + 48), &qword_100EA0760);
  uint64_t v31 = v29 + *(int *)(v30 + 64);
  *(void *)uint64_t v31 = 0;
  *(unsigned char *)(v31 + 8) = 0;
  sub_100178110((uint64_t)v11, &qword_100EA0760);
  sub_100178110((uint64_t)v21, &qword_100EA0768);
  sub_100178110((uint64_t)v8, &qword_100EA0760);
  return sub_100178110((uint64_t)v18, &qword_100EA0768);
}

uint64_t sub_100909A7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v1 = sub_10017DF08(&qword_100EA06E8);
  __chkstk_darwin(v1 - 8);
  uint64_t v35 = (uint64_t)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v34 - v4;
  uint64_t v6 = sub_10017DF08(&qword_100EA06F0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v34 - v10;
  uint64_t v12 = sub_10017DF08(&qword_100EA06F8);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v34 - v16;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v34 - v19;
  *(void *)uint64_t v17 = static VerticalAlignment.center.getter();
  *((void *)v17 + 1) = 0;
  uint64_t v21 = 1;
  v17[16] = 1;
  uint64_t v22 = (uint64_t)&v17[*(int *)(sub_10017DF08(&qword_100EA0700) + 44)];
  sub_100908BE0((uint64_t)v11);
  sub_1001262FC((uint64_t)v11, (uint64_t)v8, &qword_100EA06F0);
  sub_1001262FC((uint64_t)v8, v22, &qword_100EA06F0);
  uint64_t v23 = v22 + *(int *)(sub_10017DF08(&qword_100EA0708) + 48);
  *(void *)uint64_t v23 = 0;
  *(unsigned char *)(v23 + 8) = 0;
  sub_100178110((uint64_t)v11, &qword_100EA06F0);
  sub_100178110((uint64_t)v8, &qword_100EA06F0);
  sub_10020E72C((uint64_t)v17, (uint64_t)v20, &qword_100EA06F8);
  uint64_t v24 = SunriseSunsetViewModel.description.getter();
  unint64_t v26 = v25;
  swift_bridgeObjectRelease();
  uint64_t v27 = HIBYTE(v26) & 0xF;
  if ((v26 & 0x2000000000000000) == 0) {
    uint64_t v27 = v24 & 0xFFFFFFFFFFFFLL;
  }
  if (v27)
  {
    *(void *)uint64_t v5 = static VerticalAlignment.center.getter();
    *((void *)v5 + 1) = 0;
    v5[16] = 1;
    uint64_t v28 = sub_10017DF08(&qword_100EA0710);
    sub_100909DC8((uint64_t)&v5[*(int *)(v28 + 44)]);
    uint64_t v21 = 0;
  }
  uint64_t v29 = sub_10017DF08(&qword_100EA0718);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, v21, 1, v29);
  sub_1001262FC((uint64_t)v20, (uint64_t)v14, &qword_100EA06F8);
  uint64_t v30 = v35;
  sub_1001262FC((uint64_t)v5, v35, &qword_100EA06E8);
  uint64_t v31 = v34;
  sub_1001262FC((uint64_t)v14, v34, &qword_100EA06F8);
  uint64_t v32 = sub_10017DF08(&qword_100EA0720);
  sub_1001262FC(v30, v31 + *(int *)(v32 + 48), &qword_100EA06E8);
  sub_100178110((uint64_t)v5, &qword_100EA06E8);
  sub_100178110((uint64_t)v20, &qword_100EA06F8);
  sub_100178110(v30, &qword_100EA06E8);
  return sub_100178110((uint64_t)v14, &qword_100EA06F8);
}

uint64_t sub_100909DC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10017DF08(&qword_100EA0728);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v10 - v6;
  sub_1009092B8();
  sub_1001262FC((uint64_t)v7, (uint64_t)v4, &qword_100EA0728);
  sub_1001262FC((uint64_t)v4, a1, &qword_100EA0728);
  uint64_t v8 = a1 + *(int *)(sub_10017DF08(&qword_100EA0730) + 48);
  *(void *)uint64_t v8 = 0;
  *(unsigned char *)(v8 + 8) = 0;
  sub_100178110((uint64_t)v7, &qword_100EA0728);
  return sub_100178110((uint64_t)v4, &qword_100EA0728);
}

uint64_t sub_100909EC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v40 = a2;
  uint64_t v41 = a3;
  uint64_t v39 = a1;
  uint64_t v4 = type metadata accessor for TypesettingLanguageAwareLineHeightRatio();
  uint64_t v43 = *(void *)(v4 - 8);
  uint64_t v44 = v4;
  __chkstk_darwin(v4);
  uint64_t v42 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TimeStyle();
  uint64_t v37 = *(void *)(v6 - 8);
  uint64_t v38 = v6;
  __chkstk_darwin(v6);
  uint64_t v35 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for Font.Leading();
  uint64_t v8 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ContentSizeCategory();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v35 - v16;
  uint64_t v18 = type metadata accessor for SunriseSunsetComponentView();
  sub_10014E6E8();
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for ContentSizeCategory.extraExtraLarge(_:), v11);
  BOOL v19 = sub_1006ADAC0((uint64_t)v17, (uint64_t)v14);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v12 + 8);
  v20(v14, v11);
  v20(v17, v11);
  uint64_t v21 = v3 + *(int *)(v18 + 28);
  uint64_t v22 = *(void *)v21;
  LOBYTE(v12) = *(unsigned char *)(v21 + 8);
  sub_100195B7C(*(void *)v21, v12);
  sub_100149AE8();
  char v24 = v23;
  sub_10018F6D8(v22, v12);
  if (!v19)
  {
    if ((v24 & 1) == 0)
    {
      static Font.largeTitle.getter();
      goto LABEL_7;
    }
    goto LABEL_5;
  }
  if (v24)
  {
LABEL_5:
    static Font.title2.getter();
    goto LABEL_7;
  }
  static Font.title.getter();
LABEL_7:
  uint64_t v25 = v36;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for Font.Leading.tight(_:), v36);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v25);
  type metadata accessor for Style();
  unint64_t v26 = v35;
  static Style.componentTime.getter();
  uint64_t v27 = TimeStyle.formatTime(_:periodSymbols:font:)();
  uint64_t v29 = v28;
  char v31 = v30 & 1;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v26, v38);
  uint64_t v32 = v42;
  static TypesettingLanguageAwareLineHeightRatio.disable.getter();
  uint64_t v33 = Text.typesettingLanguageAwareLineHeightRatio(_:isEnabled:)();
  sub_100191924(v27, v29, v31);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v32, v44);
  return v33;
}

uint64_t sub_10090A324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v30 = a2;
  uint64_t v31 = a3;
  uint64_t v29 = a1;
  uint64_t v4 = type metadata accessor for TimeStyle();
  uint64_t v32 = *(void *)(v4 - 8);
  uint64_t v33 = v4;
  __chkstk_darwin(v4);
  uint64_t v27 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for Font.Leading();
  uint64_t v6 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ContentSizeCategory();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v27 - v14;
  uint64_t v16 = type metadata accessor for SunriseSunsetComponentView();
  sub_10014E6E8();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for ContentSizeCategory.extraExtraLarge(_:), v9);
  BOOL v17 = sub_1006ADAC0((uint64_t)v15, (uint64_t)v12);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v18(v12, v9);
  v18(v15, v9);
  uint64_t v19 = v3 + *(int *)(v16 + 28);
  uint64_t v20 = *(void *)v19;
  LOBYTE(v15) = *(unsigned char *)(v19 + 8);
  sub_100195B7C(*(void *)v19, (char)v15);
  sub_100149AE8();
  char v22 = v21;
  sub_10018F6D8(v20, (char)v15);
  if (!v17)
  {
    if ((v22 & 1) == 0)
    {
      static Font.subheadline.getter();
      goto LABEL_7;
    }
    goto LABEL_5;
  }
  if (v22)
  {
LABEL_5:
    static Font.footnote.getter();
    goto LABEL_7;
  }
  static Font.caption2.getter();
LABEL_7:
  uint64_t v23 = v28;
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for Font.Leading.tight(_:), v28);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v23);
  type metadata accessor for Style();
  char v24 = v27;
  static Style.componentTime.getter();
  uint64_t v25 = TimeStyle.formatTime(_:periodSymbols:font:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v24, v33);
  return v25;
}

uint64_t sub_10090A6A0()
{
  return EnvironmentValues.sunriseSunsetNightLineColor.setter();
}

uint64_t sub_10090A6D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SunriseSunsetComponentView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10090A734(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

unint64_t sub_10090A788()
{
  unint64_t result = qword_100EA0698;
  if (!qword_100EA0698)
  {
    sub_10018C6DC(&qword_100E7A090);
    sub_10018C6DC(&qword_100EA0670);
    sub_10024D5E4((uint64_t)&unk_100EA0688);
    swift_getOpaqueTypeConformance2();
    sub_10090ACEC((uint64_t)&qword_100EAACA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA0698);
  }
  return result;
}

unint64_t sub_10090A894(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    uint64_t v5 = v4;
    sub_10018C6DC(v3);
    v5();
    sub_10090ACEC((uint64_t)&qword_100E66BF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_10090A940()
{
  unint64_t result = qword_100EA06A8;
  if (!qword_100EA06A8)
  {
    sub_10018C6DC(&qword_100E7A080);
    sub_10018C6DC(&qword_100EA0658);
    sub_10024D5E4((uint64_t)&unk_100EA06B0);
    swift_getOpaqueTypeConformance2();
    sub_10090ACEC((uint64_t)&qword_100EAACA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA06A8);
  }
  return result;
}

unint64_t sub_10090AA5C()
{
  unint64_t result = qword_100EA0750;
  if (!qword_100EA0750)
  {
    sub_10018C6DC(&qword_100EA0748);
    sub_10083B1D4((uint64_t)&qword_100E7BB20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA0750);
  }
  return result;
}

unint64_t sub_10090AAF8(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    uint64_t v5 = v4;
    sub_10018C6DC(v3);
    v5();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_10090AB70()
{
  unint64_t result = qword_100EA07B8;
  if (!qword_100EA07B8)
  {
    sub_10018C6DC(&qword_100EA0780);
    sub_10090AC1C();
    sub_10090ACEC((uint64_t)&qword_100EAACA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA07B8);
  }
  return result;
}

unint64_t sub_10090AC1C()
{
  unint64_t result = qword_100EA07C0;
  if (!qword_100EA07C0)
  {
    sub_10018C6DC(&qword_100EA07C8);
    sub_10090ACEC((uint64_t)&unk_100EA07D0);
    sub_10024D5E4((uint64_t)&unk_100EA07D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA07C0);
  }
  return result;
}

unint64_t sub_10090ACEC(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_10090AD30@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.sunriseSunsetNightLineColor.getter();
  *a1 = result;
  return result;
}

unint64_t sub_10090AD64()
{
  unint64_t result = qword_100EA07F0;
  if (!qword_100EA07F0)
  {
    sub_10018C6DC(&qword_100EA07F8);
    sub_10090A894((uint64_t)&unk_100EA0690);
    sub_10090A894((uint64_t)&unk_100EA06A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA07F0);
  }
  return result;
}

uint64_t Date.urlRepresentationParameter.getter()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_10090AE48, 0, 0);
}

uint64_t sub_10090AE48()
{
  id v1 = [objc_allocWithZone((Class)NSISO8601DateFormatter) init];
  [v1 setFormatOptions:1907];
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  id v3 = [v1 stringFromDate:isa];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v7(v4, v6);
}

uint64_t sub_10090AF24()
{
  id v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *id v1 = v0;
  v1[1] = sub_10090AFB0;
  return Date.urlRepresentationParameter.getter();
}

uint64_t sub_10090AFB0(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

uint64_t sub_10090B0B4()
{
  if (*(void *)(v0 + 40)) {
    sub_10090B108();
  }

  swift_release();
  swift_unknownObjectRelease();
  sub_1001361AC(*(void *)(v0 + 64));
  return v0;
}

void sub_10090B108()
{
  id v1 = (void *)v0[2];
  if (v1)
  {
    prefs = v1;
    UnfairLock.lock()();
    uint64_t v2 = (void *)v0[5];
    v0[5] = 0;

    v0[7] = 0;
    swift_unknownObjectRelease();
    SCPreferencesSetDispatchQueue(prefs, 0);
    SCPreferencesSetCallback(prefs, 0, 0);
    UnfairLock.unlock()();
  }
}

uint64_t sub_10090B1A4()
{
  sub_10090B0B4();

  return swift_deallocClassInstance();
}

void sub_10090B1D8(const __SCPreferences *a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_retain();
    sub_100056498(a1);
    swift_release();
  }
  else
  {
    if (qword_100E62830 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_1002102B0(v4, (uint64_t)qword_100F51F98);
    oslog = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v5, "Missing context", v6, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_10090B300(void *a1, uint64_t a2, uint64_t a3)
{
  os_log_type_t v5 = a1;
  sub_10090B1D8(v5, a2, a3);
}

NSString sub_10090B35C()
{
  swift_retain();
  type metadata accessor for AirplaneModeMonitor();
  _print_unlocked<A, B>(_:_:)();
  swift_release();
  NSString v0 = String._bridgeToObjectiveC()();

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_10090B3E4()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10090B41C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10090B45C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10090B494()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(unsigned __int8 *)(v0 + 32));
}

uint64_t sub_10090B4CC(uint64_t a1, uint64_t a2)
{
  uint64_t v71 = a2;
  uint64_t v68 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v70 = v4;
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v64 = v6;
  sub_100129064();
  type metadata accessor for CurrentWeather();
  sub_100179C0C();
  uint64_t v62 = v8;
  uint64_t v63 = v7;
  __chkstk_darwin(v7);
  sub_100109314();
  v60[1] = v9;
  v60[0] = type metadata accessor for WeatherData(0);
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_10019DE20(v11, v60[0]);
  uint64_t v12 = sub_10017DF08(&qword_100E63770);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for LocationWeatherDataState(0);
  sub_100162E4C();
  __chkstk_darwin(v15);
  sub_100162EF8();
  uint64_t v65 = v16;
  sub_1001626D4();
  __chkstk_darwin(v17);
  uint64_t v66 = (uint64_t)v60 - v18;
  sub_1001626D4();
  __chkstk_darwin(v19);
  uint64_t v67 = (uint64_t)v60 - v20;
  sub_100129064();
  uint64_t State = (int *)type metadata accessor for VisibleLocationWeatherLoadState();
  sub_100162E4C();
  __chkstk_darwin(v22);
  char v24 = (char *)v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for Location.Identifier();
  sub_100162E4C();
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v24, a1, v25);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v25);
  uint64_t v27 = *(int *)(type metadata accessor for LocationViewModel() + 56);
  LOBYTE(v25) = *(unsigned char *)(a1 + v27);
  uint64_t v28 = &v24[State[6]];
  StatusLog = (int *)type metadata accessor for VisibleLocationWeatherLoadStatusLog();
  *(_OWORD *)uint64_t v28 = 0u;
  *((_OWORD *)v28 + 1) = 0u;
  Date.init()();
  uint64_t v30 = &v28[StatusLog[9]];
  *(void *)uint64_t v30 = 0;
  v30[8] = 1;
  uint64_t v31 = &v28[StatusLog[10]];
  *(void *)uint64_t v31 = 0;
  v31[8] = 1;
  uint64_t v32 = v68;
  Date.init()();
  *(void *)&v24[State[5]] = _swiftEmptyArrayStorage;
  v24[State[7]] = v25;
  uint64_t v33 = v2 + OBJC_IVAR____TtC7Weather33VisibleLocationWeatherLoadMonitor_loadState;
  sub_100182350();
  sub_10090C798((uint64_t)v24, v33);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 24))(v33 + State[6] + (uint64_t)StatusLog[8], v71, v32);
  uint64_t v34 = swift_endAccess();
  if (*(unsigned char *)(a1 + v27) == 3)
  {
    uint64_t v35 = v33 + State[6] + (uint64_t)StatusLog[9];
    *(void *)uint64_t v35 = 0;
    *(unsigned char *)(v35 + 8) = 0;
  }
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(v2 + 16))(v72, v34);
  uint64_t v36 = *(void *)(v72[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v37 = Location.Identifier.id.getter();
  sub_1001BBE9C(v37, v38, v36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v69) == 1) {
    return sub_100178110((uint64_t)v14, &qword_100E63770);
  }
  uint64_t v40 = v67;
  sub_1001E10A4((uint64_t)v14, v67, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  uint64_t v41 = v66;
  sub_10090C6E4(v40, v66, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v42 = *(void *)(v41 + 16);
    uint64_t v43 = *(void *)(v41 + 24);
    swift_bridgeObjectRelease();
    sub_100182350();
    uint64_t v44 = v33 + State[5];
    sub_10062E090();
    sub_100289738(*(void *)(*(void *)v44 + 16));
    sub_1001840D0();
    *(void *)(v45 + 32) = v42;
    *(void *)(v45 + 40) = v43;
    swift_endAccess();
    uint64_t v46 = v40;
  }
  else
  {
    sub_10090C744(v41, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    uint64_t v47 = v65;
    sub_10090C6E4(v40, v65, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v48 = sub_10017DF08(&qword_100E63748);
      uint64_t v49 = v47 + *(int *)(v48 + 48);
      uint64_t v50 = v47 + *(int *)(v48 + 64);
      uint64_t v51 = v47;
      uint64_t v52 = v61;
      sub_1001E10A4(v51, v61, (void (*)(void))type metadata accessor for WeatherData);
      sub_10090C744(v50, (void (*)(void))type metadata accessor for NewsDataModel);
      sub_10090C744(v49, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      WeatherDataModel.currentWeather.getter();
      CurrentWeather.date.getter();
      sub_100162F0C();
      v53();
      Date.distance(to:)();
      uint64_t v55 = v54;
      sub_100162F0C();
      v56();
      sub_10090C744(v52, (void (*)(void))type metadata accessor for WeatherData);
      uint64_t result = sub_10090C744(v40, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      uint64_t v57 = v33 + State[6];
      uint64_t v58 = v57 + StatusLog[10];
      *(void *)uint64_t v58 = v55;
      *(unsigned char *)(v58 + 8) = 0;
      uint64_t v59 = v57 + StatusLog[9];
      *(void *)uint64_t v59 = 0;
      *(unsigned char *)(v59 + 8) = 0;
      *(unsigned char *)(v33 + State[7]) = 3;
      return result;
    }
    sub_10090C744(v40, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    uint64_t v46 = v47;
  }
  return sub_10090C744(v46, (void (*)(void))type metadata accessor for LocationWeatherDataState);
}

void sub_10090BB3C(uint64_t a1, int a2)
{
  LODWORD(v83) = a2;
  type metadata accessor for CurrentWeather();
  sub_100179C0C();
  v74[1] = v6;
  __chkstk_darwin(v7);
  sub_100109314();
  v74[3] = v8;
  v74[2] = type metadata accessor for WeatherData(0);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v75 = v10;
  uint64_t v11 = sub_10017DF08(&qword_100E63770);
  __chkstk_darwin(v11 - 8);
  sub_10019DE20(v12, v74[0]);
  uint64_t v80 = type metadata accessor for LocationWeatherDataState(0);
  sub_100162E4C();
  __chkstk_darwin(v13);
  sub_100162EF8();
  uint64_t v76 = v14;
  sub_1001626D4();
  __chkstk_darwin(v15);
  uint64_t v78 = (uint64_t)v74 - v16;
  sub_100129064();
  type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v86 = v17;
  uint64_t v87 = v18;
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v77 = v19;
  sub_1001626D4();
  __chkstk_darwin(v20);
  uint64_t v85 = (char *)v74 - v21;
  sub_100129064();
  uint64_t v22 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v24 = v23;
  __chkstk_darwin(v25);
  sub_100162F18();
  uint64_t v26 = sub_10017DF08(&qword_100E6DD18);
  uint64_t v27 = v26 - 8;
  __chkstk_darwin(v26);
  sub_100162E88();
  uint64_t v28 = sub_10017DF08(&qword_100E6DC08);
  uint64_t v29 = __chkstk_darwin(v28 - 8);
  uint64_t v31 = (char *)v74 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v33 = (char *)v74 - v32;
  uint64_t v79 = v3;
  uint64_t v34 = v3 + OBJC_IVAR____TtC7Weather33VisibleLocationWeatherLoadMonitor_loadState;
  swift_beginAccess();
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  uint64_t v82 = a1;
  v35(v33, a1, v22);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v22);
  uint64_t v36 = v2 + *(int *)(v27 + 56);
  uint64_t v84 = v34;
  sub_100111070(v34, v2);
  sub_100111070((uint64_t)v33, v36);
  sub_10017A344(v2);
  if (!v37)
  {
    sub_100111070(v2, (uint64_t)v31);
    sub_10017A344(v36);
    if (!v37)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v4, v36, v22);
      sub_1001CF7B8();
      char v40 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      v41(v4, v22);
      sub_100178110((uint64_t)v33, &qword_100E6DC08);
      v41((uint64_t)v31, v22);
      sub_100178110(v2, &qword_100E6DC08);
      if ((v40 & 1) == 0) {
        return;
      }
      goto LABEL_12;
    }
    sub_100178110((uint64_t)v33, &qword_100E6DC08);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v31, v22);
LABEL_9:
    uint64_t v38 = &qword_100E6DD18;
    uint64_t v39 = v2;
LABEL_10:
    sub_100178110(v39, v38);
    return;
  }
  sub_100178110((uint64_t)v33, &qword_100E6DC08);
  sub_10017A344(v36);
  if (!v37) {
    goto LABEL_9;
  }
  sub_100178110(v2, &qword_100E6DC08);
LABEL_12:
  uint64_t v42 = v85;
  static Date.now.getter();
  uint64_t v43 = v84;
  sub_100182350();
  sub_1005968E4();
  uint64_t State = (int *)type metadata accessor for VisibleLocationWeatherLoadState();
  unsigned __int8 v45 = v83;
  *(unsigned char *)(v43 + State[7]) = v83;
  int v46 = v45;
  uint64_t v48 = v86;
  uint64_t v47 = v87;
  (*(void (**)(uint64_t, char *, uint64_t))(v87 + 24))(v43 + State[8], v42, v86);
  swift_endAccess();
  if (v46 == 3)
  {
    uint64_t v49 = v43 + State[6];
    uint64_t StatusLog = type metadata accessor for VisibleLocationWeatherLoadStatusLog();
    uint64_t v51 = StatusLog;
    if (*(unsigned char *)(v49 + *(int *)(StatusLog + 36) + 8) == 1)
    {
      uint64_t v52 = v49 + *(int *)(StatusLog + 32);
      uint64_t v53 = v77;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v77, v52, v48);
      Date.distance(to:)();
      (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v53, v48);
      sub_10019DA3C(State[6]);
    }
    uint64_t v83 = v51;
    (*(void (**)(uint64_t *__return_ptr))(v79 + 16))(v88);
    uint64_t v54 = *(void *)(v88[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v55 = Location.Identifier.id.getter();
    uint64_t v56 = v81;
    sub_1001BBE9C(v55, v57, v54);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (_s7Weather24LocationCompositionStateOwet_0(v56, 1, v80) == 1)
    {
      uint64_t v58 = sub_1001806F4();
      v59(v58);
      uint64_t v38 = &qword_100E63770;
      uint64_t v39 = v56;
      goto LABEL_10;
    }
    uint64_t v60 = v78;
    sub_1001E10A4(v56, v78, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    uint64_t v61 = v76;
    sub_10090C6E4(v60, v76, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_10090C744(v60, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      uint64_t v72 = sub_1001806F4();
      v73(v72);
      sub_10090C744(v61, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      return;
    }
    uint64_t v62 = sub_10017DF08(&qword_100E63748);
    uint64_t v63 = v61 + *(int *)(v62 + 48);
    uint64_t v64 = *(int *)(v62 + 64);
    uint64_t v65 = v61;
    uint64_t v66 = v61 + v64;
    uint64_t v67 = v75;
    sub_1001E10A4(v65, v75, (void (*)(void))type metadata accessor for WeatherData);
    sub_10090C744(v66, (void (*)(void))type metadata accessor for NewsDataModel);
    sub_10090C744(v63, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
    if (*(unsigned char *)(v43 + State[6] + (uint64_t)*(int *)(v83 + 40) + 8))
    {
      WeatherDataModel.currentWeather.getter();
      uint64_t v68 = v77;
      CurrentWeather.date.getter();
      sub_100162F0C();
      v69();
      Date.distance(to:)();
      uint64_t v70 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
      v70(v68, v48);
      sub_10090C744(v75, (void (*)(void))type metadata accessor for WeatherData);
      sub_10090C744(v78, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      uint64_t v71 = sub_1001806F4();
      ((void (*)(uint64_t))v70)(v71);
      sub_10019DA3C(State[6]);
      return;
    }
    sub_10090C744(v67, (void (*)(void))type metadata accessor for WeatherData);
    sub_10090C744(v78, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  }
  (*(void (**)(char *, uint64_t))(v47 + 8))(v42, v48);
}

uint64_t sub_10090C380(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v10 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_100162E88();
  uint64_t State = type metadata accessor for VisibleLocationWeatherLoadState();
  sub_100162E4C();
  __chkstk_darwin(v15);
  sub_100162F18();
  uint64_t v16 = v5 + OBJC_IVAR____TtC7Weather33VisibleLocationWeatherLoadMonitor_loadState;
  swift_beginAccess();
  sub_10090C6E4(v16, v6, (void (*)(void))type metadata accessor for VisibleLocationWeatherLoadState);
  if (_s7Weather24LocationCompositionStateOwet_0(v6, 1, v10)) {
    return sub_10090C744(v6, (void (*)(void))type metadata accessor for VisibleLocationWeatherLoadState);
  }
  unint64_t v25 = a4;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v4, v6, v10);
  sub_10090C744(v6, (void (*)(void))type metadata accessor for VisibleLocationWeatherLoadState);
  uint64_t v18 = Location.Identifier.id.getter();
  uint64_t v20 = v19;
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v4, v10);
  if (v18 == a1 && v20 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
  uint64_t result = swift_bridgeObjectRelease();
  if (v22)
  {
LABEL_10:
    sub_100182350();
    uint64_t v23 = v16 + *(int *)(State + 20);
    sub_100643E94(a3, v25);
    sub_10062E090();
    sub_100289738(*(void *)(*(void *)v23 + 16));
    sub_1001840D0();
    *(void *)(v24 + 32) = a3;
    *(void *)(v24 + 40) = v25;
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_10090C5B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC7Weather33VisibleLocationWeatherLoadMonitor_loadState;
  sub_100182350();
  sub_1005968E4();
  swift_endAccess();
  return sub_10090C6E4(v3, a1, (void (*)(void))type metadata accessor for VisibleLocationWeatherLoadState);
}

uint64_t sub_10090C62C()
{
  swift_release();
  swift_release();
  sub_10090C744(v0 + OBJC_IVAR____TtC7Weather33VisibleLocationWeatherLoadMonitor_loadState, (void (*)(void))type metadata accessor for VisibleLocationWeatherLoadState);
  return v0;
}

uint64_t sub_10090C684()
{
  sub_10090C62C();

  return swift_deallocClassInstance();
}

uint64_t sub_10090C6DC()
{
  return type metadata accessor for VisibleLocationWeatherLoadMonitor();
}

uint64_t sub_10090C6E4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_10090C744(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_10090C798(uint64_t a1, uint64_t a2)
{
  uint64_t State = type metadata accessor for VisibleLocationWeatherLoadState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(State - 8) + 40))(a2, a1, State);
  return a2;
}

uint64_t sub_10090C7FC@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = sub_10017DF08(&qword_100EA09E0);
  a1[4] = sub_10090C914();
  sub_100170694(a1);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_10090C888()
{
  sub_10090C968();

  return ShortDescribable.description.getter();
}

unint64_t sub_10090C8C8()
{
  unint64_t result = qword_100EA09D8;
  if (!qword_100EA09D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA09D8);
  }
  return result;
}

unint64_t sub_10090C914()
{
  unint64_t result = qword_100EA09E8;
  if (!qword_100EA09E8)
  {
    sub_10018C6DC(&qword_100EA09E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA09E8);
  }
  return result;
}

unint64_t sub_10090C968()
{
  unint64_t result = qword_100EA09F0;
  if (!qword_100EA09F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA09F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for VFXTestViewAction()
{
  return &type metadata for VFXTestViewAction;
}

uint64_t sub_10090C9C4(uint64_t a1)
{
  return sub_10017AB60(a1, qword_100F51D80);
}

uint64_t sub_10090C9E4(uint64_t a1)
{
  return sub_10009779C(a1, qword_100F51E58);
}

uint64_t sub_10090CA00(uint64_t a1)
{
  return sub_1001882AC(a1, qword_100F51E70);
}

uint64_t sub_10090CA20(uint64_t a1)
{
  return sub_10017EB44(a1, qword_100F51EA0);
}

uint64_t sub_10090CA48(uint64_t a1)
{
  return sub_10017EB44(a1, qword_100F51EB8);
}

uint64_t sub_10090CA70(uint64_t a1)
{
  return sub_10009779C(a1, qword_100F51ED0);
}

uint64_t sub_10090CA94(uint64_t a1)
{
  return sub_10019F4B4(a1, qword_100F51EE8);
}

uint64_t sub_10090CAB8()
{
  sub_1000DBCCC();
  uint64_t result = OS_os_log.init(subsystem:category:)();
  qword_100F51F00 = result;
  return result;
}

uint64_t sub_10090CB1C(uint64_t a1)
{
  return sub_1001882AC(a1, qword_100F51F20);
}

uint64_t sub_10090CB3C(uint64_t a1)
{
  return sub_1001882AC(a1, qword_100F51F38);
}

uint64_t sub_10090CB5C(uint64_t a1)
{
  return sub_1001882AC(a1, qword_100F51FB0);
}

uint64_t sub_10090CB7C(uint64_t a1)
{
  return sub_1001A1004(a1, qword_100F51FC8);
}

uint64_t sub_10090CB90(uint64_t a1)
{
  return sub_100180708(a1, qword_100F51FE0);
}

uint64_t sub_10090CBB4(uint64_t a1)
{
  return sub_10017AB60(a1, qword_100F51FF8);
}

uint64_t sub_10090CBD4(uint64_t a1)
{
  return sub_10019F4B4(a1, qword_100F52010);
}

uint64_t sub_10090CBF8(uint64_t a1)
{
  return sub_10009779C(a1, qword_100F52028);
}

uint64_t sub_10090CC14(uint64_t a1)
{
  return sub_1001A1004(a1, qword_100F52058);
}

void *sub_10090CC28(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    uint64_t v14 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v7 = type metadata accessor for Location.Identifier();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = v6[5];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v9], 1, v7))
    {
      uint64_t v12 = sub_10017DF08(&qword_100E6DC08);
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v7);
    }
    uint64_t v15 = v6[6];
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    uint64_t v18 = *(void *)&a2[v15 + 8];
    *(void *)uint64_t v16 = *(void *)&a2[v15];
    *((void *)v16 + 1) = v18;
    uint64_t v19 = *(void *)&a2[v15 + 16];
    uint64_t v20 = *(void *)&a2[v15 + 24];
    uint64_t v21 = *(void *)&a2[v15 + 32];
    uint64_t v22 = *(void *)&a2[v15 + 40];
    char v23 = a2[v15 + 48];
    swift_bridgeObjectRetain();
    sub_100193004(v19, v20, v21, v22, v23);
    *((void *)v16 + 2) = v19;
    *((void *)v16 + 3) = v20;
    *((void *)v16 + 4) = v21;
    *((void *)v16 + 5) = v22;
    v16[48] = v23;
    uint64_t v24 = *((void *)v17 + 8);
    *((void *)v16 + 7) = *((void *)v17 + 7);
    *((void *)v16 + 8) = v24;
    uint64_t v25 = *((void *)v17 + 10);
    *((void *)v16 + 9) = *((void *)v17 + 9);
    *((void *)v16 + 10) = v25;
    uint64_t v26 = *((void *)v17 + 12);
    *((void *)v16 + 11) = *((void *)v17 + 11);
    *((void *)v16 + 12) = v26;
    uint64_t v27 = *((void *)v17 + 14);
    *((void *)v16 + 13) = *((void *)v17 + 13);
    *((void *)v16 + 14) = v27;
    uint64_t v28 = *((void *)v17 + 16);
    *((void *)v16 + 15) = *((void *)v17 + 15);
    *((void *)v16 + 16) = v28;
    v16[136] = v17[136];
    *(_WORD *)(v16 + 137) = *(_WORD *)(v17 + 137);
    uint64_t v29 = *((void *)v17 + 18);
    uint64_t v30 = *((void *)v17 + 19);
    v16[160] = v17[160];
    v16[161] = v17[161];
    uint64_t v31 = v6[7];
    uint64_t v32 = v6[8];
    uint64_t v33 = *(void *)&a2[v31];
    *((void *)v16 + 18) = v29;
    *((void *)v16 + 19) = v30;
    *(void *)&a1[v31] = v33;
    *(void *)&a1[v32] = *(void *)&a2[v32];
    uint64_t v99 = v6;
    uint64_t v100 = a2;
    uint64_t v34 = v6[9];
    uint64_t v35 = a1;
    uint64_t v36 = &a1[v34];
    char v37 = &a2[v34];
    uint64_t v38 = type metadata accessor for LocationFooterViewModel();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v38))
    {
      uint64_t v39 = sub_10017DF08(&qword_100E6DC18);
      memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
      char v40 = v100;
      uint64_t v14 = v35;
    }
    else
    {
      *uint64_t v36 = *v37;
      *(_WORD *)(v36 + 1) = *(_WORD *)(v37 + 1);
      uint64_t v41 = *((void *)v37 + 2);
      *((void *)v36 + 1) = *((void *)v37 + 1);
      *((void *)v36 + 2) = v41;
      uint64_t v42 = *(int *)(v38 + 32);
      uint64_t v43 = v36;
      uint64_t v44 = &v36[v42];
      unsigned __int8 v45 = &v37[v42];
      uint64_t v46 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v46))
      {
        uint64_t v47 = sub_10017DF08(&qword_100E749B0);
        memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v46);
      }
      uint64_t v14 = v35;
      uint64_t v98 = (int *)v38;
      uint64_t v48 = *(int *)(v38 + 36);
      uint64_t v49 = (uint64_t)v43;
      uint64_t v50 = &v43[v48];
      uint64_t v51 = &v37[v48];
      unsigned char *v50 = v37[v48];
      *((void *)v50 + 1) = *(void *)&v37[v48 + 8];
      uint64_t v52 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
      uint64_t v53 = v52[6];
      uint64_t v54 = &v50[v53];
      uint64_t v55 = &v51[v53];
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v55, 1, v46))
      {
        uint64_t v56 = sub_10017DF08(&qword_100E749B0);
        memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v46 - 8) + 16))(v54, v55, v46);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v54, 0, 1, v46);
      }
      uint64_t v57 = v52[7];
      uint64_t v58 = &v50[v57];
      uint64_t v59 = &v51[v57];
      uint64_t v60 = v59[1];
      *uint64_t v58 = *v59;
      v58[1] = v60;
      *(void *)&v50[v52[8]] = *(void *)&v51[v52[8]];
      *(unsigned char *)(v49 + v98[10]) = v37[v98[10]];
      uint64_t v61 = v98[11];
      uint64_t v62 = (void *)(v49 + v61);
      uint64_t v63 = &v37[v61];
      uint64_t v64 = type metadata accessor for LocationOfInterest();
      swift_bridgeObjectRetain();
      swift_retain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 1, v64))
      {
        uint64_t v65 = sub_10017DF08(&qword_100E63508);
        memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v64 - 8) + 16))(v62, v63, v64);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v62, 0, 1, v64);
      }
      *(unsigned char *)(v49 + v98[12]) = v37[v98[12]];
      *(unsigned char *)(v49 + v98[13]) = v37[v98[13]];
      uint64_t v66 = v98[14];
      uint64_t v67 = (unsigned char *)(v49 + v66);
      uint64_t v68 = &v37[v66];
      uint64_t v69 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v68, 1, (uint64_t)v69))
      {
        uint64_t v70 = sub_10017DF08(&qword_100E6DC10);
        memcpy(v67, v68, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        *uint64_t v67 = *v68;
        uint64_t v71 = v69[5];
        uint64_t v72 = &v67[v71];
        id v73 = &v68[v71];
        uint64_t v74 = type metadata accessor for Location();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v74 - 8) + 16))(v72, v73, v74);
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v64 - 8) + 16))(&v67[v69[6]], &v68[v69[6]], v64);
        v67[v69[7]] = v68[v69[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v67, 0, 1, (uint64_t)v69);
      }
      uint64_t v6 = v99;
      _s7Weather24LocationCompositionStateOwst_0(v49, 0, 1, (uint64_t)v98);
      char v40 = v100;
    }
    uint64_t v75 = v6[11];
    *((unsigned char *)v14 + v6[10]) = *((unsigned char *)v40 + v6[10]);
    *((unsigned char *)v14 + v75) = *((unsigned char *)v40 + v75);
    uint64_t v76 = v6[13];
    *((unsigned char *)v14 + v6[12]) = *((unsigned char *)v40 + v6[12]);
    *((unsigned char *)v14 + v76) = *((unsigned char *)v40 + v76);
    uint64_t v77 = v6[15];
    *((unsigned char *)v14 + v6[14]) = *((unsigned char *)v40 + v6[14]);
    uint64_t v78 = *(void **)((char *)v40 + v77);
    *(void *)((char *)v14 + v77) = v78;
    uint64_t v79 = v6[17];
    *((unsigned char *)v14 + v6[16]) = *((unsigned char *)v40 + v6[16]);
    *((unsigned char *)v14 + v79) = *((unsigned char *)v40 + v79);
    uint64_t v80 = v6[19];
    *((unsigned char *)v14 + v6[18]) = *((unsigned char *)v40 + v6[18]);
    uint64_t v81 = (uint64_t)v14 + v80;
    uint64_t v82 = (uint64_t)v40 + v80;
    uint64_t v83 = type metadata accessor for Date();
    uint64_t v84 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 16);
    id v85 = v78;
    v84(v81, v82, v83);
    uint64_t v86 = v6[20];
    uint64_t v87 = (char *)v14 + v86;
    uint64_t v88 = (char *)v40 + v86;
    uint64_t v89 = type metadata accessor for ForegroundEffect();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v88, 1, v89))
    {
      uint64_t v90 = sub_10017DF08(&qword_100E65FA8);
      memcpy(v87, v88, *(void *)(*(void *)(v90 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 16))(v87, v88, v89);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v87, 0, 1, v89);
    }
    uint64_t v91 = v6[22];
    *((unsigned char *)v14 + v6[21]) = *((unsigned char *)v40 + v6[21]);
    *(void *)((char *)v14 + v91) = *(void *)((char *)v40 + v91);
    uint64_t v92 = v6[24];
    *((unsigned char *)v14 + v6[23]) = *((unsigned char *)v40 + v6[23]);
    uint64_t v93 = (uint64_t)v14 + v92;
    uint64_t v94 = (uint64_t)v40 + v92;
    uint64_t v95 = type metadata accessor for LocationEntity();
    unint64_t v96 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 16);
    swift_bridgeObjectRetain();
    v96(v93, v94, v95);
  }
  return v14;
}

uint64_t sub_10090D468(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  int v12 = _s7Weather24LocationCompositionStateOwet_0(a1 + v9, 1, v6);
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v10, v11, v6);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    uint64_t v14 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v10, (uint64_t)v11, v6);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(void *)uint64_t v16 = *(void *)(a2 + v15);
  *(void *)(v16 + 8) = *(void *)(a2 + v15 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void *)(v17 + 16);
  uint64_t v19 = *(void *)(v17 + 24);
  uint64_t v20 = *(void *)(v17 + 32);
  uint64_t v21 = *(void *)(v17 + 40);
  char v22 = *(unsigned char *)(v17 + 48);
  sub_100193004(v18, v19, v20, v21, v22);
  uint64_t v23 = *(void *)(v16 + 16);
  uint64_t v24 = *(void *)(v16 + 24);
  uint64_t v25 = *(void *)(v16 + 32);
  uint64_t v26 = *(void *)(v16 + 40);
  *(void *)(v16 + 16) = v18;
  *(void *)(v16 + 24) = v19;
  *(void *)(v16 + 32) = v20;
  *(void *)(v16 + 40) = v21;
  char v27 = *(unsigned char *)(v16 + 48);
  *(unsigned char *)(v16 + 48) = v22;
  sub_100191D78(v23, v24, v25, v26, v27);
  *(void *)(v16 + 56) = *(void *)(v17 + 56);
  *(void *)(v16 + 64) = *(void *)(v17 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 72) = *(void *)(v17 + 72);
  *(void *)(v16 + 80) = *(void *)(v17 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 88) = *(void *)(v17 + 88);
  *(void *)(v16 + 96) = *(void *)(v17 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 104) = *(void *)(v17 + 104);
  *(void *)(v16 + 112) = *(void *)(v17 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v16 + 120) = *(void *)(v17 + 120);
  *(void *)(v16 + 128) = *(void *)(v17 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v16 + 136) = *(unsigned char *)(v17 + 136);
  *(unsigned char *)(v16 + 137) = *(unsigned char *)(v17 + 137);
  *(unsigned char *)(v16 + 138) = *(unsigned char *)(v17 + 138);
  *(void *)(v16 + 144) = *(void *)(v17 + 144);
  *(void *)(v16 + 152) = *(void *)(v17 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v16 + 160) = *(unsigned char *)(v17 + 160);
  *(unsigned char *)(v16 + 161) = *(unsigned char *)(v17 + 161);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_retain();
  swift_release();
  uint64_t v28 = a3[9];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = (int *)type metadata accessor for LocationFooterViewModel();
  LODWORD(v21) = _s7Weather24LocationCompositionStateOwet_0(v29, 1, (uint64_t)v31);
  int v32 = _s7Weather24LocationCompositionStateOwet_0(v30, 1, (uint64_t)v31);
  if (v21)
  {
    if (!v32)
    {
      *(unsigned char *)uint64_t v29 = *(unsigned char *)v30;
      *(unsigned char *)(v29 + 1) = *(unsigned char *)(v30 + 1);
      *(unsigned char *)(v29 + 2) = *(unsigned char *)(v30 + 2);
      *(void *)(v29 + 8) = *(void *)(v30 + 8);
      *(void *)(v29 + 16) = *(void *)(v30 + 16);
      uint64_t v33 = v31[8];
      uint64_t v34 = (void *)(v29 + v33);
      uint64_t v35 = (const void *)(v30 + v33);
      uint64_t v36 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v36))
      {
        uint64_t v37 = sub_10017DF08(&qword_100E749B0);
        memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v36);
      }
      uint64_t v134 = v29;
      uint64_t v136 = v31;
      uint64_t v47 = v31[9];
      uint64_t v48 = v29 + v47;
      uint64_t v49 = v30 + v47;
      *(unsigned char *)uint64_t v48 = *(unsigned char *)(v30 + v47);
      *(void *)(v48 + 8) = *(void *)(v30 + v47 + 8);
      uint64_t v50 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
      uint64_t v51 = v50[6];
      __dst = (void *)(v48 + v51);
      uint64_t v52 = (const void *)(v49 + v51);
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v36))
      {
        uint64_t v53 = sub_10017DF08(&qword_100E749B0);
        memcpy(__dst, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v36 - 8) + 16))(__dst, v52, v36);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v36);
      }
      uint64_t v54 = v50[7];
      uint64_t v55 = (void *)(v48 + v54);
      uint64_t v56 = (void *)(v49 + v54);
      *uint64_t v55 = *v56;
      v55[1] = v56[1];
      *(void *)(v48 + v50[8]) = *(void *)(v49 + v50[8]);
      *(unsigned char *)(v134 + v31[10]) = *(unsigned char *)(v30 + v31[10]);
      uint64_t v57 = v31[11];
      uint64_t v58 = (void *)(v134 + v57);
      uint64_t v59 = (const void *)(v30 + v57);
      uint64_t v60 = type metadata accessor for LocationOfInterest();
      swift_bridgeObjectRetain();
      swift_retain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v60))
      {
        uint64_t v61 = sub_10017DF08(&qword_100E63508);
        memcpy(v58, v59, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v60);
      }
      *(unsigned char *)(v134 + v31[12]) = *(unsigned char *)(v30 + v31[12]);
      *(unsigned char *)(v134 + v31[13]) = *(unsigned char *)(v30 + v31[13]);
      uint64_t v62 = v31[14];
      uint64_t v63 = (unsigned char *)(v134 + v62);
      uint64_t v64 = (unsigned char *)(v30 + v62);
      uint64_t v65 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, (uint64_t)v65))
      {
        uint64_t v66 = sub_10017DF08(&qword_100E6DC10);
        memcpy(v63, v64, *(void *)(*(void *)(v66 - 8) + 64));
      }
      else
      {
        unsigned char *v63 = *v64;
        uint64_t v67 = v65[5];
        uint64_t v68 = &v63[v67];
        uint64_t v69 = &v64[v67];
        uint64_t v70 = type metadata accessor for Location();
        uint64_t v71 = v68;
        uint64_t v31 = v136;
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v70 - 8) + 16))(v71, v69, v70);
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v60 - 8) + 16))(&v63[v65[6]], &v64[v65[6]], v60);
        v63[v65[7]] = v64[v65[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v63, 0, 1, (uint64_t)v65);
      }
      uint64_t v72 = v134;
      uint64_t v73 = (uint64_t)v31;
      goto LABEL_30;
    }
    goto LABEL_13;
  }
  if (v32)
  {
    sub_1000B0834(v29, (void (*)(void))type metadata accessor for LocationFooterViewModel);
LABEL_13:
    size_t v38 = *(void *)(*(void *)(sub_10017DF08(&qword_100E6DC18) - 8) + 64);
    uint64_t v39 = (void *)v29;
    char v40 = (const void *)v30;
LABEL_14:
    memcpy(v39, v40, v38);
    goto LABEL_31;
  }
  *(unsigned char *)uint64_t v29 = *(unsigned char *)v30;
  *(unsigned char *)(v29 + 1) = *(unsigned char *)(v30 + 1);
  *(unsigned char *)(v29 + 2) = *(unsigned char *)(v30 + 2);
  *(void *)(v29 + 8) = *(void *)(v30 + 8);
  *(void *)(v29 + 16) = *(void *)(v30 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = v31[8];
  uint64_t v42 = (void *)(v29 + v41);
  uint64_t v43 = (const void *)(v30 + v41);
  uint64_t v44 = type metadata accessor for URL();
  int v45 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v44);
  int v46 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v44);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v44);
      goto LABEL_42;
    }
    goto LABEL_41;
  }
  uint64_t v95 = *(void *)(v44 - 8);
  if (v46)
  {
    (*(void (**)(void *, uint64_t))(v95 + 8))(v42, v44);
LABEL_41:
    uint64_t v96 = sub_10017DF08(&qword_100E749B0);
    memcpy(v42, v43, *(void *)(*(void *)(v96 - 8) + 64));
    goto LABEL_42;
  }
  (*(void (**)(void *, const void *, uint64_t))(v95 + 24))(v42, v43, v44);
LABEL_42:
  uint64_t v137 = v31;
  uint64_t v97 = v31[9];
  uint64_t v98 = v29 + v97;
  uint64_t v99 = v30 + v97;
  *(unsigned char *)uint64_t v98 = *(unsigned char *)(v30 + v97);
  *(void *)(v98 + 8) = *(void *)(v30 + v97 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v135 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
  uint64_t v100 = v135[6];
  uint64_t v101 = (const void *)(v99 + v100);
  uint64_t v132 = v98 + v100;
  int v102 = _s7Weather24LocationCompositionStateOwet_0(v98 + v100, 1, v44);
  int v103 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v101, 1, v44);
  if (v102)
  {
    if (v103)
    {
      size_t v104 = *(void *)(*(void *)(sub_10017DF08(&qword_100E749B0) - 8) + 64);
      uint64_t v105 = (void *)v132;
LABEL_47:
      memcpy(v105, v101, v104);
      goto LABEL_51;
    }
    (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v44 - 8) + 16))(v132, v101, v44);
    _s7Weather24LocationCompositionStateOwst_0(v132, 0, 1, v44);
  }
  else
  {
    uint64_t v106 = *(void *)(v44 - 8);
    if (v103)
    {
      (*(void (**)(uint64_t, uint64_t))(v106 + 8))(v132, v44);
      size_t v104 = *(void *)(*(void *)(sub_10017DF08(&qword_100E749B0) - 8) + 64);
      uint64_t v105 = (void *)v132;
      goto LABEL_47;
    }
    (*(void (**)(uint64_t, const void *, uint64_t))(v106 + 24))(v132, v101, v44);
  }
LABEL_51:
  uint64_t v107 = v135[7];
  uint64_t v108 = (void *)(v98 + v107);
  uint64_t v109 = (void *)(v99 + v107);
  *uint64_t v108 = *v109;
  v108[1] = v109[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v98 + v135[8]) = *(void *)(v99 + v135[8]);
  swift_retain();
  swift_release();
  *(unsigned char *)(v29 + v137[10]) = *(unsigned char *)(v30 + v137[10]);
  uint64_t v110 = v137[11];
  uint64_t v111 = (void *)(v29 + v110);
  uint64_t v112 = (const void *)(v30 + v110);
  uint64_t v113 = type metadata accessor for LocationOfInterest();
  int v114 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v111, 1, v113);
  int v115 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v112, 1, v113);
  if (v114)
  {
    if (!v115)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v113 - 8) + 16))(v111, v112, v113);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v111, 0, 1, v113);
      goto LABEL_57;
    }
    goto LABEL_56;
  }
  uint64_t v116 = *(void *)(v113 - 8);
  if (v115)
  {
    (*(void (**)(void *, uint64_t))(v116 + 8))(v111, v113);
LABEL_56:
    uint64_t v117 = sub_10017DF08(&qword_100E63508);
    memcpy(v111, v112, *(void *)(*(void *)(v117 - 8) + 64));
    goto LABEL_57;
  }
  (*(void (**)(void *, const void *, uint64_t))(v116 + 24))(v111, v112, v113);
LABEL_57:
  *(unsigned char *)(v29 + v137[12]) = *(unsigned char *)(v30 + v137[12]);
  *(unsigned char *)(v29 + v137[13]) = *(unsigned char *)(v30 + v137[13]);
  uint64_t v118 = v137[14];
  uint64_t v119 = (unsigned char *)(v29 + v118);
  uint64_t v120 = (unsigned char *)(v30 + v118);
  uint64_t v121 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
  int v122 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v119, 1, (uint64_t)v121);
  int v123 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v120, 1, (uint64_t)v121);
  if (v122)
  {
    if (!v123)
    {
      *uint64_t v119 = *v120;
      uint64_t v124 = v121[5];
      uint64_t v125 = &v119[v124];
      uint64_t v126 = &v120[v124];
      uint64_t v127 = type metadata accessor for Location();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v127 - 8) + 16))(v125, v126, v127);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v113 - 8) + 16))(&v119[v121[6]], &v120[v121[6]], v113);
      v119[v121[7]] = v120[v121[7]];
      uint64_t v72 = (uint64_t)v119;
      uint64_t v73 = (uint64_t)v121;
LABEL_30:
      _s7Weather24LocationCompositionStateOwst_0(v72, 0, 1, v73);
      goto LABEL_31;
    }
    goto LABEL_62;
  }
  if (v123)
  {
    sub_1000B0834((uint64_t)v119, (void (*)(void))type metadata accessor for HomeAndWorkRefinementRowViewModel);
LABEL_62:
    size_t v38 = *(void *)(*(void *)(sub_10017DF08(&qword_100E6DC10) - 8) + 64);
    uint64_t v39 = v119;
    char v40 = v120;
    goto LABEL_14;
  }
  *uint64_t v119 = *v120;
  uint64_t v128 = v121[5];
  uint64_t v129 = &v119[v128];
  uint64_t v130 = &v120[v128];
  uint64_t v131 = type metadata accessor for Location();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v131 - 8) + 24))(v129, v130, v131);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v113 - 8) + 24))(&v119[v121[6]], &v120[v121[6]], v113);
  v119[v121[7]] = v120[v121[7]];
LABEL_31:
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  uint64_t v74 = a3[15];
  uint64_t v75 = *(void **)(a2 + v74);
  uint64_t v76 = *(void **)(a1 + v74);
  *(void *)(a1 + v74) = v75;
  id v77 = v75;

  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  uint64_t v78 = a3[19];
  uint64_t v79 = a1 + v78;
  uint64_t v80 = a2 + v78;
  uint64_t v81 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 24))(v79, v80, v81);
  uint64_t v82 = a3[20];
  uint64_t v83 = (void *)(a1 + v82);
  uint64_t v84 = (const void *)(a2 + v82);
  uint64_t v85 = type metadata accessor for ForegroundEffect();
  int v86 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v83, 1, v85);
  int v87 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v84, 1, v85);
  if (!v86)
  {
    uint64_t v88 = *(void *)(v85 - 8);
    if (!v87)
    {
      (*(void (**)(void *, const void *, uint64_t))(v88 + 24))(v83, v84, v85);
      goto LABEL_37;
    }
    (*(void (**)(void *, uint64_t))(v88 + 8))(v83, v85);
    goto LABEL_36;
  }
  if (v87)
  {
LABEL_36:
    uint64_t v89 = sub_10017DF08(&qword_100E65FA8);
    memcpy(v83, v84, *(void *)(*(void *)(v89 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v85 - 8) + 16))(v83, v84, v85);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v83, 0, 1, v85);
LABEL_37:
  *(unsigned char *)(a1 + a3[21]) = *(unsigned char *)(a2 + a3[21]);
  *(void *)(a1 + a3[22]) = *(void *)(a2 + a3[22]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[23]) = *(unsigned char *)(a2 + a3[23]);
  uint64_t v90 = a3[24];
  uint64_t v91 = a1 + v90;
  uint64_t v92 = a2 + v90;
  uint64_t v93 = type metadata accessor for LocationEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 24))(v91, v92, v93);
  return a1;
}

uint64_t sub_10090E498(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  if (_s7Weather24LocationCompositionStateOwet_0(a2 + v8, 1, v6))
  {
    uint64_t v11 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v9, (uint64_t)v10, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v6);
  }
  memcpy((void *)(a1 + a3[6]), (const void *)(a2 + a3[6]), 0xA2uLL);
  uint64_t v12 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[9];
  uint64_t v14 = (unsigned char *)(a1 + v13);
  uint64_t v15 = (unsigned char *)(a2 + v13);
  uint64_t v16 = type metadata accessor for LocationFooterViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
  {
    uint64_t v17 = sub_10017DF08(&qword_100E6DC18);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    unsigned char *v14 = *v15;
    *(_WORD *)(v14 + 1) = *(_WORD *)(v15 + 1);
    *(_OWORD *)(v14 + 8) = *(_OWORD *)(v15 + 8);
    uint64_t v18 = *(int *)(v16 + 32);
    uint64_t v19 = &v14[v18];
    uint64_t v20 = &v15[v18];
    uint64_t v21 = type metadata accessor for URL();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21))
    {
      uint64_t v22 = sub_10017DF08(&qword_100E749B0);
      memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
    }
    uint64_t v62 = (int *)v16;
    uint64_t v23 = *(int *)(v16 + 36);
    uint64_t v24 = &v14[v23];
    uint64_t v25 = &v15[v23];
    *uint64_t v24 = v15[v23];
    *((void *)v24 + 1) = *(void *)&v15[v23 + 8];
    uint64_t v26 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
    uint64_t v27 = v26[6];
    __dst = &v24[v27];
    uint64_t v28 = &v25[v27];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v25[v27], 1, v21))
    {
      uint64_t v29 = sub_10017DF08(&qword_100E749B0);
      memcpy(__dst, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 32))(__dst, v28, v21);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v21);
    }
    *(_OWORD *)&v24[v26[7]] = *(_OWORD *)&v25[v26[7]];
    *(void *)&v24[v26[8]] = *(void *)&v25[v26[8]];
    v14[v62[10]] = v15[v62[10]];
    uint64_t v30 = v62[11];
    uint64_t v31 = &v14[v30];
    int v32 = &v15[v30];
    uint64_t v33 = type metadata accessor for LocationOfInterest();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v33))
    {
      uint64_t v34 = sub_10017DF08(&qword_100E63508);
      memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v33);
    }
    v14[v62[12]] = v15[v62[12]];
    v14[v62[13]] = v15[v62[13]];
    uint64_t v35 = v62[14];
    uint64_t v36 = &v14[v35];
    uint64_t v37 = &v15[v35];
    size_t v38 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, (uint64_t)v38))
    {
      uint64_t v39 = sub_10017DF08(&qword_100E6DC10);
      memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      *uint64_t v36 = *v37;
      uint64_t v40 = v38[5];
      uint64_t v41 = &v36[v40];
      __dsta = &v37[v40];
      uint64_t v42 = type metadata accessor for Location();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v42 - 8) + 32))(v41, __dsta, v42);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v33 - 8) + 32))(&v36[v38[6]], &v37[v38[6]], v33);
      v36[v38[7]] = v37[v38[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, (uint64_t)v38);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, (uint64_t)v62);
  }
  uint64_t v43 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v43) = *(unsigned char *)(a2 + v43);
  uint64_t v44 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v44) = *(unsigned char *)(a2 + v44);
  uint64_t v45 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *(void *)(a1 + v45) = *(void *)(a2 + v45);
  uint64_t v46 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + v46) = *(unsigned char *)(a2 + v46);
  uint64_t v47 = a3[19];
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  uint64_t v50 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
  uint64_t v51 = a3[20];
  uint64_t v52 = (void *)(a1 + v51);
  uint64_t v53 = (const void *)(a2 + v51);
  uint64_t v54 = type metadata accessor for ForegroundEffect();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v54))
  {
    uint64_t v55 = sub_10017DF08(&qword_100E65FA8);
    memcpy(v52, v53, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v54);
  }
  uint64_t v56 = a3[22];
  *(unsigned char *)(a1 + a3[21]) = *(unsigned char *)(a2 + a3[21]);
  *(void *)(a1 + v56) = *(void *)(a2 + v56);
  uint64_t v57 = a3[24];
  *(unsigned char *)(a1 + a3[23]) = *(unsigned char *)(a2 + a3[23]);
  uint64_t v58 = a1 + v57;
  uint64_t v59 = a2 + v57;
  uint64_t v60 = type metadata accessor for LocationEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 32))(v58, v59, v60);
  return a1;
}

uint64_t sub_10090EB58(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = a3[5];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  int v12 = _s7Weather24LocationCompositionStateOwet_0(a1 + v9, 1, v6);
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v10, v11, v6);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    uint64_t v14 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v10, (uint64_t)v11, v6);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = *(void *)(a2 + v15 + 8);
  *(void *)uint64_t v16 = *(void *)(a2 + v15);
  *(void *)(v16 + 8) = v18;
  swift_bridgeObjectRelease();
  char v19 = *(unsigned char *)(v17 + 48);
  uint64_t v20 = *(void *)(v16 + 16);
  uint64_t v21 = *(void *)(v16 + 24);
  uint64_t v22 = *(void *)(v16 + 32);
  uint64_t v23 = *(void *)(v16 + 40);
  long long v24 = *(_OWORD *)(v17 + 32);
  *(_OWORD *)(v16 + 16) = *(_OWORD *)(v17 + 16);
  *(_OWORD *)(v16 + 32) = v24;
  char v25 = *(unsigned char *)(v16 + 48);
  *(unsigned char *)(v16 + 48) = v19;
  sub_100191D78(v20, v21, v22, v23, v25);
  uint64_t v26 = *(void *)(v17 + 64);
  *(void *)(v16 + 56) = *(void *)(v17 + 56);
  *(void *)(v16 + 64) = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = *(void *)(v17 + 80);
  *(void *)(v16 + 72) = *(void *)(v17 + 72);
  *(void *)(v16 + 80) = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(v17 + 96);
  *(void *)(v16 + 88) = *(void *)(v17 + 88);
  *(void *)(v16 + 96) = v28;
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void *)(v17 + 112);
  *(void *)(v16 + 104) = *(void *)(v17 + 104);
  *(void *)(v16 + 112) = v29;
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(v17 + 128);
  *(void *)(v16 + 120) = *(void *)(v17 + 120);
  *(void *)(v16 + 128) = v30;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v16 + 136) = *(unsigned char *)(v17 + 136);
  *(unsigned char *)(v16 + 137) = *(unsigned char *)(v17 + 137);
  *(unsigned char *)(v16 + 138) = *(unsigned char *)(v17 + 138);
  uint64_t v31 = *(void *)(v17 + 152);
  *(void *)(v16 + 144) = *(void *)(v17 + 144);
  *(void *)(v16 + 152) = v31;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v16 + 160) = *(unsigned char *)(v17 + 160);
  *(unsigned char *)(v16 + 161) = *(unsigned char *)(v17 + 161);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_release();
  uint64_t v32 = a3[9];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  uint64_t v35 = (int *)type metadata accessor for LocationFooterViewModel();
  int v36 = _s7Weather24LocationCompositionStateOwet_0(v33, 1, (uint64_t)v35);
  int v37 = _s7Weather24LocationCompositionStateOwet_0(v34, 1, (uint64_t)v35);
  if (v36)
  {
    if (!v37)
    {
      *(unsigned char *)uint64_t v33 = *(unsigned char *)v34;
      *(_WORD *)(v33 + 1) = *(_WORD *)(v34 + 1);
      *(_OWORD *)(v33 + 8) = *(_OWORD *)(v34 + 8);
      uint64_t v38 = v35[8];
      uint64_t v39 = (void *)(v33 + v38);
      uint64_t v40 = (const void *)(v34 + v38);
      uint64_t v41 = type metadata accessor for URL();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
      {
        uint64_t v42 = sub_10017DF08(&qword_100E749B0);
        memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
      }
      uint64_t v137 = v35;
      uint64_t v53 = v35[9];
      uint64_t v54 = v33 + v53;
      uint64_t v55 = v34 + v53;
      *(unsigned char *)uint64_t v54 = *(unsigned char *)(v34 + v53);
      *(void *)(v54 + 8) = *(void *)(v34 + v53 + 8);
      uint64_t v56 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
      uint64_t v57 = v56[6];
      __dst = (void *)(v54 + v57);
      uint64_t v58 = (const void *)(v55 + v57);
      if (_s7Weather24LocationCompositionStateOwet_0(v55 + v57, 1, v41))
      {
        uint64_t v59 = sub_10017DF08(&qword_100E749B0);
        memcpy(__dst, v58, *(void *)(*(void *)(v59 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v41 - 8) + 32))(__dst, v58, v41);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v41);
      }
      *(_OWORD *)(v54 + v56[7]) = *(_OWORD *)(v55 + v56[7]);
      *(void *)(v54 + v56[8]) = *(void *)(v55 + v56[8]);
      *(unsigned char *)(v33 + v137[10]) = *(unsigned char *)(v34 + v137[10]);
      uint64_t v60 = v137[11];
      uint64_t v61 = (void *)(v33 + v60);
      uint64_t v62 = (const void *)(v34 + v60);
      uint64_t v63 = type metadata accessor for LocationOfInterest();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, v63))
      {
        uint64_t v64 = sub_10017DF08(&qword_100E63508);
        memcpy(v61, v62, *(void *)(*(void *)(v64 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v63 - 8) + 32))(v61, v62, v63);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v61, 0, 1, v63);
      }
      *(unsigned char *)(v33 + v137[12]) = *(unsigned char *)(v34 + v137[12]);
      *(unsigned char *)(v33 + v137[13]) = *(unsigned char *)(v34 + v137[13]);
      uint64_t v65 = v137[14];
      uint64_t v66 = (unsigned char *)(v33 + v65);
      uint64_t v67 = (unsigned char *)(v34 + v65);
      uint64_t v68 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v67, 1, (uint64_t)v68))
      {
        uint64_t v69 = sub_10017DF08(&qword_100E6DC10);
        memcpy(v66, v67, *(void *)(*(void *)(v69 - 8) + 64));
      }
      else
      {
        unsigned char *v66 = *v67;
        uint64_t v70 = v68[5];
        uint64_t v71 = &v66[v70];
        __dstb = &v67[v70];
        uint64_t v72 = type metadata accessor for Location();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v72 - 8) + 32))(v71, __dstb, v72);
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v63 - 8) + 32))(&v66[v68[6]], &v67[v68[6]], v63);
        v66[v68[7]] = v67[v68[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v66, 0, 1, (uint64_t)v68);
      }
      uint64_t v73 = v33;
      uint64_t v74 = (uint64_t)v137;
      goto LABEL_30;
    }
    goto LABEL_13;
  }
  if (v37)
  {
    sub_1000B0834(v33, (void (*)(void))type metadata accessor for LocationFooterViewModel);
LABEL_13:
    size_t v43 = *(void *)(*(void *)(sub_10017DF08(&qword_100E6DC18) - 8) + 64);
    uint64_t v44 = (void *)v33;
    uint64_t v45 = (const void *)v34;
LABEL_14:
    memcpy(v44, v45, v43);
    goto LABEL_31;
  }
  *(unsigned char *)uint64_t v33 = *(unsigned char *)v34;
  *(unsigned char *)(v33 + 1) = *(unsigned char *)(v34 + 1);
  *(unsigned char *)(v33 + 2) = *(unsigned char *)(v34 + 2);
  uint64_t v46 = *(void *)(v34 + 16);
  *(void *)(v33 + 8) = *(void *)(v34 + 8);
  *(void *)(v33 + 16) = v46;
  swift_bridgeObjectRelease();
  uint64_t v47 = v35[8];
  uint64_t v48 = (void *)(v33 + v47);
  uint64_t v49 = (const void *)(v34 + v47);
  uint64_t v50 = type metadata accessor for URL();
  int v51 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v50);
  int v52 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v50);
  if (v51)
  {
    if (!v52)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v50);
      goto LABEL_42;
    }
    goto LABEL_41;
  }
  uint64_t v98 = *(void *)(v50 - 8);
  if (v52)
  {
    (*(void (**)(void *, uint64_t))(v98 + 8))(v48, v50);
LABEL_41:
    uint64_t v99 = sub_10017DF08(&qword_100E749B0);
    memcpy(v48, v49, *(void *)(*(void *)(v99 - 8) + 64));
    goto LABEL_42;
  }
  (*(void (**)(void *, const void *, uint64_t))(v98 + 40))(v48, v49, v50);
LABEL_42:
  uint64_t v100 = v35[9];
  uint64_t v101 = v33 + v100;
  uint64_t v102 = v34 + v100;
  *(unsigned char *)uint64_t v101 = *(unsigned char *)(v34 + v100);
  *(void *)(v101 + 8) = *(void *)(v34 + v100 + 8);
  swift_bridgeObjectRelease();
  uint64_t v138 = v102;
  __dsta = (int *)type metadata accessor for LearnMoreAttributorViewModel();
  uint64_t v103 = __dsta[6];
  size_t v104 = (const void *)(v102 + v103);
  uint64_t v136 = v101 + v103;
  LODWORD(v102) = _s7Weather24LocationCompositionStateOwet_0(v101 + v103, 1, v50);
  int v105 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v104, 1, v50);
  if (v102)
  {
    if (v105)
    {
      size_t v106 = *(void *)(*(void *)(sub_10017DF08(&qword_100E749B0) - 8) + 64);
      uint64_t v107 = (void *)v136;
LABEL_47:
      memcpy(v107, v104, v106);
      goto LABEL_51;
    }
    (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v50 - 8) + 32))(v136, v104, v50);
    _s7Weather24LocationCompositionStateOwst_0(v136, 0, 1, v50);
  }
  else
  {
    uint64_t v108 = *(void *)(v50 - 8);
    if (v105)
    {
      (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v136, v50);
      size_t v106 = *(void *)(*(void *)(sub_10017DF08(&qword_100E749B0) - 8) + 64);
      uint64_t v107 = (void *)v136;
      goto LABEL_47;
    }
    (*(void (**)(uint64_t, const void *, uint64_t))(v108 + 40))(v136, v104, v50);
  }
LABEL_51:
  uint64_t v109 = __dsta[7];
  uint64_t v110 = (void *)(v101 + v109);
  uint64_t v111 = (uint64_t *)(v138 + v109);
  uint64_t v113 = *v111;
  uint64_t v112 = v111[1];
  *uint64_t v110 = v113;
  v110[1] = v112;
  swift_bridgeObjectRelease();
  *(void *)(v101 + __dsta[8]) = *(void *)(v138 + __dsta[8]);
  swift_release();
  *(unsigned char *)(v33 + v35[10]) = *(unsigned char *)(v34 + v35[10]);
  uint64_t v114 = v35[11];
  int v115 = (void *)(v33 + v114);
  uint64_t v116 = (const void *)(v34 + v114);
  uint64_t v117 = type metadata accessor for LocationOfInterest();
  int v118 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v115, 1, v117);
  int v119 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v116, 1, v117);
  if (v118)
  {
    if (!v119)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v117 - 8) + 32))(v115, v116, v117);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v115, 0, 1, v117);
      goto LABEL_57;
    }
    goto LABEL_56;
  }
  uint64_t v120 = *(void *)(v117 - 8);
  if (v119)
  {
    (*(void (**)(void *, uint64_t))(v120 + 8))(v115, v117);
LABEL_56:
    uint64_t v121 = sub_10017DF08(&qword_100E63508);
    memcpy(v115, v116, *(void *)(*(void *)(v121 - 8) + 64));
    goto LABEL_57;
  }
  (*(void (**)(void *, const void *, uint64_t))(v120 + 40))(v115, v116, v117);
LABEL_57:
  *(unsigned char *)(v33 + v35[12]) = *(unsigned char *)(v34 + v35[12]);
  *(unsigned char *)(v33 + v35[13]) = *(unsigned char *)(v34 + v35[13]);
  uint64_t v122 = v35[14];
  int v123 = (unsigned char *)(v33 + v122);
  uint64_t v124 = (unsigned char *)(v34 + v122);
  uint64_t v125 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
  int v126 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v123, 1, (uint64_t)v125);
  int v127 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v124, 1, (uint64_t)v125);
  if (v126)
  {
    if (!v127)
    {
      *int v123 = *v124;
      uint64_t v128 = v125[5];
      uint64_t v129 = &v123[v128];
      uint64_t v130 = &v124[v128];
      uint64_t v131 = type metadata accessor for Location();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v131 - 8) + 32))(v129, v130, v131);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v117 - 8) + 32))(&v123[v125[6]], &v124[v125[6]], v117);
      v123[v125[7]] = v124[v125[7]];
      uint64_t v73 = (uint64_t)v123;
      uint64_t v74 = (uint64_t)v125;
LABEL_30:
      _s7Weather24LocationCompositionStateOwst_0(v73, 0, 1, v74);
      goto LABEL_31;
    }
    goto LABEL_62;
  }
  if (v127)
  {
    sub_1000B0834((uint64_t)v123, (void (*)(void))type metadata accessor for HomeAndWorkRefinementRowViewModel);
LABEL_62:
    size_t v43 = *(void *)(*(void *)(sub_10017DF08(&qword_100E6DC10) - 8) + 64);
    uint64_t v44 = v123;
    uint64_t v45 = v124;
    goto LABEL_14;
  }
  *int v123 = *v124;
  uint64_t v132 = v125[5];
  uint64_t v133 = &v123[v132];
  uint64_t v134 = &v124[v132];
  uint64_t v135 = type metadata accessor for Location();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v135 - 8) + 40))(v133, v134, v135);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v117 - 8) + 40))(&v123[v125[6]], &v124[v125[6]], v117);
  v123[v125[7]] = v124[v125[7]];
LABEL_31:
  uint64_t v75 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v75) = *(unsigned char *)(a2 + v75);
  uint64_t v76 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v76) = *(unsigned char *)(a2 + v76);
  uint64_t v77 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  uint64_t v78 = *(void **)(a1 + v77);
  *(void *)(a1 + v77) = *(void *)(a2 + v77);

  uint64_t v79 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + v79) = *(unsigned char *)(a2 + v79);
  uint64_t v80 = a3[19];
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  uint64_t v81 = a1 + v80;
  uint64_t v82 = a2 + v80;
  uint64_t v83 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 40))(v81, v82, v83);
  uint64_t v84 = a3[20];
  uint64_t v85 = (void *)(a1 + v84);
  int v86 = (const void *)(a2 + v84);
  uint64_t v87 = type metadata accessor for ForegroundEffect();
  int v88 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v87);
  int v89 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v86, 1, v87);
  if (!v88)
  {
    uint64_t v90 = *(void *)(v87 - 8);
    if (!v89)
    {
      (*(void (**)(void *, const void *, uint64_t))(v90 + 40))(v85, v86, v87);
      goto LABEL_37;
    }
    (*(void (**)(void *, uint64_t))(v90 + 8))(v85, v87);
    goto LABEL_36;
  }
  if (v89)
  {
LABEL_36:
    uint64_t v91 = sub_10017DF08(&qword_100E65FA8);
    memcpy(v85, v86, *(void *)(*(void *)(v91 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v87 - 8) + 32))(v85, v86, v87);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v85, 0, 1, v87);
LABEL_37:
  uint64_t v92 = a3[22];
  *(unsigned char *)(a1 + a3[21]) = *(unsigned char *)(a2 + a3[21]);
  *(void *)(a1 + v92) = *(void *)(a2 + v92);
  swift_bridgeObjectRelease();
  uint64_t v93 = a3[24];
  *(unsigned char *)(a1 + a3[23]) = *(unsigned char *)(a2 + a3[23]);
  uint64_t v94 = a1 + v93;
  uint64_t v95 = a2 + v93;
  uint64_t v96 = type metadata accessor for LocationEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 40))(v94, v95, v96);
  return a1;
}

uint64_t sub_10090FA38(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for Location.Identifier();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_17:
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  sub_10017DF08(&qword_100E6DC08);
  sub_100162F30();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v12 = a3[5];
LABEL_16:
    uint64_t v9 = a1 + v12;
    goto LABEL_17;
  }
  if (a2 != 0x7FFFFFFF)
  {
    sub_10017DF08(&qword_100E6DC18);
    sub_100162F30();
    if (*(_DWORD *)(v16 + 84) == a2)
    {
      uint64_t v8 = v15;
      uint64_t v12 = a3[9];
    }
    else
    {
      type metadata accessor for Date();
      sub_100162F30();
      if (*(_DWORD *)(v18 + 84) == a2)
      {
        uint64_t v8 = v17;
        uint64_t v12 = a3[19];
      }
      else
      {
        sub_10017DF08(&qword_100E65FA8);
        sub_100162F30();
        if (*(_DWORD *)(v20 + 84) == a2)
        {
          uint64_t v8 = v19;
          uint64_t v12 = a3[20];
        }
        else
        {
          uint64_t v8 = type metadata accessor for LocationEntity();
          uint64_t v12 = a3[24];
        }
      }
    }
    goto LABEL_16;
  }
  unint64_t v13 = *(void *)(a1 + a3[6] + 8);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

void sub_10090FB88(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  type metadata accessor for Location.Identifier();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_10017DF08(&qword_100E6DC08);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(void *)(a1 + a4[6] + 8) = (a2 - 1);
        return;
      }
      sub_10017DF08(&qword_100E6DC18);
      sub_100162F30();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[9];
      }
      else
      {
        type metadata accessor for Date();
        sub_100162F30();
        if (*(_DWORD *)(v18 + 84) == a3)
        {
          uint64_t v10 = v17;
          uint64_t v14 = a4[19];
        }
        else
        {
          sub_10017DF08(&qword_100E65FA8);
          sub_100162F30();
          if (*(_DWORD *)(v20 + 84) == a3)
          {
            uint64_t v10 = v19;
            uint64_t v14 = a4[20];
          }
          else
          {
            uint64_t v10 = type metadata accessor for LocationEntity();
            uint64_t v14 = a4[24];
          }
        }
      }
    }
    uint64_t v11 = a1 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

unint64_t sub_10090FCD4(Swift::String string)
{
  uint64_t object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._uint64_t object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E08120, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return 4;
  }
  else {
    return v3;
  }
}

uint64_t sub_10090FD20(char a1)
{
  uint64_t result = 0x7974706D65;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x7469577974706D65;
      break;
    case 2:
      uint64_t result = 0x656E696C66666FLL;
      break;
    case 3:
      uint64_t result = 0x6574616C75706F70;
      break;
    default:
      return result;
  }
  return result;
}

Swift::Int sub_10090FDC0()
{
  return sub_100652800(*v0);
}

uint64_t sub_10090FDC8()
{
  return sub_1002C28AC();
}

Swift::Int sub_10090FDD0(uint64_t a1)
{
  return sub_1002C461C(a1, *v1);
}

unint64_t sub_10090FDD8@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10090FCD4(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10090FE08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10090FD20(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

void *sub_10090FE34()
{
  uint64_t v75 = type metadata accessor for LocationComponentViewModel();
  sub_100162E4C();
  __chkstk_darwin(v2);
  sub_100179CB8();
  uint64_t v74 = type metadata accessor for LocationComponentContainerViewModel();
  sub_100179C0C();
  uint64_t v53 = v3;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v53 - v8;
  uint64_t v10 = *(void *)(v0 + *(int *)(type metadata accessor for LocationViewModel() + 28));
  uint64_t v56 = *(void *)(v10 + 16);
  if (!v56) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v55 = v10 + 32;
  uint64_t v11 = swift_bridgeObjectRetain();
  unint64_t v12 = 0;
  long long v65 = xmmword_100C251B0;
  unint64_t v73 = (unint64_t)"notificationsOptIn";
  uint64_t v63 = "sLike";
  unint64_t v64 = (unint64_t)"atureLow";
  uint64_t v61 = v9;
  uint64_t v62 = "feelsLikeApparent";
  uint64_t v13 = _swiftEmptyArrayStorage;
  uint64_t v54 = v11;
  do
  {
    if (v12 >= *(void *)(v11 + 16))
    {
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      _fatalErrorMessage(_:_:file:line:flags:)();
      __break(1u);
      JUMPOUT(0x100910870);
    }
    uint64_t v14 = (void *)(v55 + 24 * v12);
    uint64_t v15 = *v14;
    uint64_t v16 = *(void *)(*v14 + 16);
    if (v16)
    {
      uint64_t v59 = v13;
      unint64_t v60 = v12;
      uint64_t v17 = v14[2];
      uint64_t v78 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain_n();
      uint64_t v57 = v17;
      swift_bridgeObjectRetain();
      sub_1000D6524(0, v16, 0);
      uint64_t v18 = 0;
      uint64_t v19 = *(unsigned __int8 *)(v53 + 80);
      uint64_t v20 = (v19 + 32) & ~v19;
      uint64_t v58 = v15;
      uint64_t v68 = v15 + v20;
      uint64_t v69 = v20;
      uint64_t v76 = *(void *)(v53 + 72);
      uint64_t v66 = v19 | 7;
      uint64_t v67 = v76 + v20;
      uint64_t v70 = v16;
      do
      {
        uint64_t v72 = v18;
        sub_1001F3A10(v68 + v76 * v18, (uint64_t)v9, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
        sub_10017DF08(&qword_100E6CCD0);
        uint64_t v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = v65;
        uint64_t v22 = v21 + v69;
        sub_1001F3A10((uint64_t)v9, v21 + v69, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
        uint64_t v71 = v21;
        uint64_t v23 = *(void *)(v21 + 16);
        if (v23)
        {
          uint64_t v77 = _swiftEmptyArrayStorage;
          sub_1001EA6A0(0, v23, 0);
          while (2)
          {
            sub_1001F3A10(v22, (uint64_t)v7, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
            sub_1001F3A10((uint64_t)&v7[*(int *)(v74 + 20)], v1, (void (*)(void))type metadata accessor for LocationComponentViewModel);
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            uint64_t v25 = 0xD00000000000001BLL;
            unint64_t v26 = v73 | 0x8000000000000000;
            switch(EnumCaseMultiPayload)
            {
              case 1:
                sub_1000B0834(v1, (void (*)(void))type metadata accessor for LocationComponentViewModel);
                unint64_t v26 = 0xED00007473616365;
                uint64_t v25 = 0x726F46796C696164;
                goto LABEL_30;
              case 2:
                sub_1000B0834(v1, (void (*)(void))type metadata accessor for LocationComponentViewModel);
                unint64_t v26 = 0xE900000000000065;
                uint64_t v25 = 0x6B694C736C656566;
                goto LABEL_30;
              case 3:
                sub_1000B0834(v1, (void (*)(void))type metadata accessor for LocationComponentViewModel);
                unint64_t v26 = 0xEE00747361636572;
                uint64_t v25 = 0x6F46796C72756F68;
                goto LABEL_30;
              case 4:
                sub_1000B0834(v1, (void (*)(void))type metadata accessor for LocationComponentViewModel);
                unint64_t v26 = 0xE800000000000000;
                uint64_t v25 = 0x79746964696D7568;
                goto LABEL_30;
              case 5:
                sub_1000B0834(v1, (void (*)(void))type metadata accessor for LocationComponentViewModel);
                unint64_t v26 = 0xE300000000000000;
                uint64_t v25 = 7364973;
                goto LABEL_30;
              case 6:
                sub_1000B0834(v1, (void (*)(void))type metadata accessor for LocationComponentViewModel);
                unint64_t v26 = 0xE400000000000000;
                uint64_t v25 = 1852796781;
                goto LABEL_30;
              case 7:
                sub_1000B0834(v1, (void (*)(void))type metadata accessor for LocationComponentViewModel);
                unint64_t v26 = 0xEB00000000656C63;
                uint64_t v25 = 0x697472417377656ELL;
                goto LABEL_30;
              case 8:
                sub_1000B0834(v1, (void (*)(void))type metadata accessor for LocationComponentViewModel);
                uint64_t v25 = 0xD000000000000015;
                unint64_t v26 = v64 | 0x8000000000000000;
                goto LABEL_30;
              case 9:
                sub_1000B0834(v1, (void (*)(void))type metadata accessor for LocationComponentViewModel);
                unint64_t v28 = (unint64_t)v63;
                goto LABEL_27;
              case 10:
                sub_1000B0834(v1, (void (*)(void))type metadata accessor for LocationComponentViewModel);
                unint64_t v28 = (unint64_t)v62;
LABEL_27:
                unint64_t v26 = v28 | 0x8000000000000000;
                uint64_t v25 = 0xD000000000000012;
                goto LABEL_30;
              case 11:
                sub_1000B0834(v1, (void (*)(void))type metadata accessor for LocationComponentViewModel);
                unint64_t v26 = 0xE800000000000000;
                uint64_t v25 = 0x6572757373657270;
                goto LABEL_30;
              case 12:
                unint64_t v26 = 0xED00007265687461;
                uint64_t v25 = 0x655774726F706572;
                goto LABEL_30;
              case 13:
                sub_1000B0834(v1, (void (*)(void))type metadata accessor for LocationComponentViewModel);
                unint64_t v26 = 0xEB00000000747265;
                uint64_t v25 = 0x6C41657265766573;
                goto LABEL_30;
              case 14:
                sub_1000B0834(v1, (void (*)(void))type metadata accessor for LocationComponentViewModel);
                unint64_t v26 = 0xED00007465736E75;
                uint64_t v25 = 0x53657369726E7573;
                goto LABEL_30;
              case 15:
                sub_1000B0834(v1, (void (*)(void))type metadata accessor for LocationComponentViewModel);
                unint64_t v26 = 0xE800000000000000;
                uint64_t v25 = 0x7365676172657661;
                goto LABEL_30;
              case 16:
                sub_1000B0834(v1, (void (*)(void))type metadata accessor for LocationComponentViewModel);
                unint64_t v26 = 0xE700000000000000;
                uint64_t v25 = 0x7865646E497675;
                goto LABEL_30;
              case 17:
                sub_1000B0834(v1, (void (*)(void))type metadata accessor for LocationComponentViewModel);
                uint64_t v27 = 0x696269736976;
                goto LABEL_25;
              case 18:
                sub_1000B0834(v1, (void (*)(void))type metadata accessor for LocationComponentViewModel);
                unint64_t v26 = 0xE400000000000000;
                uint64_t v25 = 1684957559;
                goto LABEL_30;
              case 19:
                goto LABEL_30;
              default:
                sub_1000B0834(v1, (void (*)(void))type metadata accessor for LocationComponentViewModel);
                uint64_t v27 = 0x617551726961;
LABEL_25:
                uint64_t v25 = v27 & 0xFFFFFFFFFFFFLL | 0x696C000000000000;
                unint64_t v26 = 0xEA00000000007974;
LABEL_30:
                sub_1000B0834((uint64_t)v7, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
                uint64_t v29 = v77;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
                {
                  sub_1001EA6A0(0, v29[2] + 1, 1);
                  uint64_t v29 = v77;
                }
                unint64_t v31 = v29[2];
                unint64_t v30 = v29[3];
                if (v31 >= v30 >> 1)
                {
                  sub_1001EA6A0(v30 > 1, v31 + 1, 1);
                  uint64_t v29 = v77;
                }
                v29[2] = v31 + 1;
                uint64_t v32 = &v29[2 * v31];
                v32[4] = v25;
                uint64_t v32[5] = v26;
                v22 += v76;
                if (--v23) {
                  continue;
                }
                uint64_t v9 = v61;
                break;
            }
            break;
          }
        }
        else
        {
          uint64_t v29 = _swiftEmptyArrayStorage;
        }
        uint64_t v77 = v29;
        sub_10017DF08(&qword_100E91BC0);
        sub_1001246C8((unint64_t *)&qword_100E73CB0, &qword_100E91BC0);
        uint64_t v33 = BidirectionalCollection<>.joined(separator:)();
        uint64_t v35 = v34;
        swift_bridgeObjectRelease();
        sub_1000B0834((uint64_t)v9, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
        int v36 = v78;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1000D6524(0, v36[2] + 1, 1);
          int v36 = v78;
        }
        uint64_t v37 = v72;
        unint64_t v39 = v36[2];
        unint64_t v38 = v36[3];
        if (v39 >= v38 >> 1)
        {
          sub_1000D6524(v38 > 1, v39 + 1, 1);
          uint64_t v37 = v72;
          int v36 = v78;
        }
        uint64_t v18 = v37 + 1;
        v36[2] = v39 + 1;
        uint64_t v40 = &v36[3 * v39];
        uint64_t v41 = v70;
        v40[4] = v71;
        v40[5] = v33;
        v40[6] = v35;
      }
      while (v18 != v41);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      uint64_t v13 = v59;
      unint64_t v12 = v60;
    }
    else
    {
      int v36 = _swiftEmptyArrayStorage;
    }
    uint64_t v42 = v36[2];
    uint64_t v43 = v13[2];
    if (__OFADD__(v43, v42)) {
      goto LABEL_63;
    }
    if (!swift_isUniquelyReferenced_nonNull_native() || v43 + v42 > v13[3] >> 1)
    {
      sub_1000D5FB8();
      uint64_t v13 = v44;
    }
    if (v36[2])
    {
      uint64_t v45 = v13[2];
      if ((v13[3] >> 1) - v45 < v42) {
        goto LABEL_65;
      }
      unint64_t v46 = (unint64_t)&v13[3 * v45 + 4];
      if ((unint64_t)(v36 + 4) < v46 + 24 * v42 && v46 < (unint64_t)&v36[3 * v42 + 4]) {
        goto LABEL_67;
      }
      uint64_t v48 = v13;
      swift_arrayInitWithCopy();
      if (v42)
      {
        uint64_t v49 = v13[2];
        BOOL v50 = __OFADD__(v49, v42);
        uint64_t v51 = v49 + v42;
        if (v50) {
          goto LABEL_66;
        }
        v13[2] = v51;
      }
    }
    else
    {
      uint64_t v48 = v13;
      if (v42) {
        goto LABEL_64;
      }
    }
    ++v12;
    swift_bridgeObjectRelease();
    uint64_t v13 = v48;
    uint64_t v11 = v54;
  }
  while (v12 != v56);
  swift_bridgeObjectRelease();
  return v48;
}

uint64_t sub_1009108C0(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = type metadata accessor for LocationComponentViewModel();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v10 = *(void *)(v8 + 16);
  if (v10 == 2)
  {
    if (!__OFADD__(v9, 1))
    {
      if (v9 + 1 >= v9)
      {
        uint64_t v28 = v2;
        uint64_t v11 = type metadata accessor for LocationComponentContainerViewModel();
        uint64_t v25 = *(void *)(v11 - 8);
        uint64_t v12 = v8 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
        sub_1001F3A10(v12 + *(int *)(v11 + 20), (uint64_t)v7, (void (*)(void))type metadata accessor for LocationComponentViewModel);
        uint64_t v13 = sub_1001F26C0();
        uint64_t v15 = v14;
        sub_1000B0834((uint64_t)v7, (void (*)(void))type metadata accessor for LocationComponentViewModel);
        uint64_t v26 = v9 + 1;
        uint64_t v27 = a1;
        sub_100248178(0, 1, v9, v9 + 1, v13, v15);
        swift_bridgeObjectRelease();
        if (*(void *)(v8 + 16) >= 2uLL)
        {
          sub_1001F3A10(v12 + *(void *)(v25 + 72) + *(int *)(v11 + 20), (uint64_t)v7, (void (*)(void))type metadata accessor for LocationComponentViewModel);
          uint64_t v16 = sub_1001F26C0();
          uint64_t v18 = v17;
          sub_1000B0834((uint64_t)v7, (void (*)(void))type metadata accessor for LocationComponentViewModel);
          sub_100248178(1, 2, v9, v26, v16, v18);
          return swift_bridgeObjectRelease();
        }
        goto LABEL_15;
      }
      goto LABEL_13;
    }
    __break(1u);
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v10 == 1)
  {
    if (!__OFADD__(v9, 1))
    {
      if (v9 + 1 >= v9)
      {
        uint64_t v19 = type metadata accessor for LocationComponentContainerViewModel();
        sub_1001F3A10(v8+ *(int *)(v19 + 20)+ ((*(unsigned __int8 *)(*(void *)(v19 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v19 - 8) + 80)), (uint64_t)v7, (void (*)(void))type metadata accessor for LocationComponentViewModel);
        uint64_t v20 = sub_1001F26C0();
        uint64_t v22 = v21;
        sub_1000B0834((uint64_t)v7, (void (*)(void))type metadata accessor for LocationComponentViewModel);
        sub_100248178(0, 2, v9, v9 + 1, v20, v22);
        return swift_bridgeObjectRelease();
      }
      goto LABEL_14;
    }
    goto LABEL_12;
  }
LABEL_16:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100910C00@<X0>(uint64_t *a1@<X8>)
{
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C33BA0;
  *(void *)(inited + 32) = 0x6E6F697461636F6CLL;
  *(void *)(inited + 40) = 0xE800000000000000;
  *(void *)(inited + 48) = Location.Identifier.id.getter();
  *(void *)(inited + 56) = v4;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 80) = 0x726564616568;
  *(void *)(inited + 88) = 0xE600000000000000;
  uint64_t v5 = type metadata accessor for LocationViewModel();
  memcpy(__dst, (const void *)(v1 + *(int *)(v5 + 24)), 0xA2uLL);
  *(void *)(inited + 120) = &type metadata for LocationHeaderViewModel;
  uint64_t v6 = swift_allocObject();
  *(void *)(inited + 96) = v6;
  memcpy((void *)(v6 + 16), __dst, 0xA2uLL);
  *(void *)(inited + 128) = 1937207154;
  *(void *)(inited + 136) = 0xE400000000000000;
  uint64_t v7 = *(void *)(v1 + *(int *)(v5 + 28));
  *(void *)(inited + 168) = sub_10017DF08(&qword_100E9B330);
  *(void *)(inited + 144) = v7;
  sub_1000CE848((uint64_t)__dst);
  swift_bridgeObjectRetain();
  Dictionary.init(dictionaryLiteral:)();
  a1[3] = sub_10017DF08(&qword_100EA0B00);
  a1[4] = sub_1001246C8(&qword_100EA0B08, &qword_100EA0B00);
  sub_100170694(a1);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_100910DC4()
{
  sub_1000C81F4(&qword_100EA0B10, (void (*)(uint64_t))type metadata accessor for LocationViewModel);

  return ShortDescribable.description.getter();
}

uint64_t sub_100910E30()
{
  return sub_1000C81F4(&qword_100EA0AE8, (void (*)(uint64_t))type metadata accessor for LocationViewModel);
}

uint64_t sub_100910E78()
{
  swift_bridgeObjectRelease();
  sub_100191D78(*(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

unsigned char *storeEnumTagSinglePayload for LocationViewModel.ContentStatus(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100910FBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void *sub_100910FE8(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for CurrentWeather();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    *(void *)((char *)a1 + v8) = *(void *)((char *)a2 + v8);
    uint64_t v11 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
    uint64_t v12 = &v9[v11];
    uint64_t v13 = &v10[v11];
    uint64_t v14 = type metadata accessor for WeatherDescription();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
    {
      uint64_t v15 = sub_10017DF08(&qword_100E63758);
      memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
    }
    uint64_t v17 = a3[6];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = sub_10017DF08(&qword_100E66CC8);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    uint64_t v21 = a3[7];
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = sub_10017DF08(&qword_100E66CA0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    uint64_t v25 = a3[8];
    uint64_t v26 = (char *)a1 + v25;
    uint64_t v27 = (char *)a2 + v25;
    uint64_t v28 = type metadata accessor for WeatherChanges();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28))
    {
      uint64_t v29 = sub_10017DF08(&qword_100E6D1C8);
      memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
    }
    uint64_t v30 = a3[10];
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *((unsigned char *)a1 + v30) = *((unsigned char *)a2 + v30);
  }
  return a1;
}

uint64_t sub_1009112D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v10 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
  uint64_t v11 = (void *)(v8 + v10);
  uint64_t v12 = (const void *)(v9 + v10);
  uint64_t v13 = type metadata accessor for WeatherDescription();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
  {
    uint64_t v14 = sub_10017DF08(&qword_100E63758);
    memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_10017DF08(&qword_100E66CC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
  uint64_t v19 = a3[7];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = a3[8];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (const void *)(a2 + v23);
  uint64_t v26 = type metadata accessor for WeatherChanges();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26))
  {
    uint64_t v27 = sub_10017DF08(&qword_100E6D1C8);
    memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
  }
  uint64_t v28 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v28) = *(unsigned char *)(a2 + v28);
  return a1;
}

uint64_t sub_100911568(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
  uint64_t v11 = (void *)(v8 + v10);
  uint64_t v12 = (const void *)(v9 + v10);
  uint64_t v13 = type metadata accessor for WeatherDescription();
  int v14 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v13);
  int v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v16 = *(void *)(v13 - 8);
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v16 + 8))(v11, v13);
LABEL_6:
    uint64_t v17 = sub_10017DF08(&qword_100E63758);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v16 + 24))(v11, v12, v13);
LABEL_7:
  uint64_t v18 = a3[6];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = sub_10017DF08(&qword_100E66CC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  uint64_t v22 = a3[7];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 24))(v23, v24, v25);
  uint64_t v26 = a3[8];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (const void *)(a2 + v26);
  uint64_t v29 = type metadata accessor for WeatherChanges();
  int v30 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v29);
  int v31 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v29);
  if (!v30)
  {
    uint64_t v32 = *(void *)(v29 - 8);
    if (!v31)
    {
      (*(void (**)(void *, const void *, uint64_t))(v32 + 24))(v27, v28, v29);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v32 + 8))(v27, v29);
    goto LABEL_12;
  }
  if (v31)
  {
LABEL_12:
    uint64_t v33 = sub_10017DF08(&qword_100E6D1C8);
    memcpy(v27, v28, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v29);
LABEL_13:
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_10091190C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v10 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
  uint64_t v11 = (void *)(v8 + v10);
  uint64_t v12 = (const void *)(v9 + v10);
  uint64_t v13 = type metadata accessor for WeatherDescription();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
  {
    uint64_t v14 = sub_10017DF08(&qword_100E63758);
    memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_10017DF08(&qword_100E66CC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[7];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[8];
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (const void *)(a2 + v23);
  uint64_t v26 = type metadata accessor for WeatherChanges();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26))
  {
    uint64_t v27 = sub_10017DF08(&qword_100E6D1C8);
    memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
  }
  uint64_t v28 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v28) = *(unsigned char *)(a2 + v28);
  return a1;
}

uint64_t sub_100911B94(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
  uint64_t v11 = (void *)(v8 + v10);
  uint64_t v12 = (const void *)(v9 + v10);
  uint64_t v13 = type metadata accessor for WeatherDescription();
  int v14 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v13);
  int v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v16 = *(void *)(v13 - 8);
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v16 + 8))(v11, v13);
LABEL_6:
    uint64_t v17 = sub_10017DF08(&qword_100E63758);
    memcpy(v11, v12, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v16 + 40))(v11, v12, v13);
LABEL_7:
  uint64_t v18 = a3[6];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v21 = sub_10017DF08(&qword_100E66CC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  uint64_t v22 = a3[7];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = sub_10017DF08(&qword_100E66CA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 40))(v23, v24, v25);
  uint64_t v26 = a3[8];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (const void *)(a2 + v26);
  uint64_t v29 = type metadata accessor for WeatherChanges();
  int v30 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v29);
  int v31 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v29);
  if (!v30)
  {
    uint64_t v32 = *(void *)(v29 - 8);
    if (!v31)
    {
      (*(void (**)(void *, const void *, uint64_t))(v32 + 40))(v27, v28, v29);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v32 + 8))(v27, v29);
    goto LABEL_12;
  }
  if (v31)
  {
LABEL_12:
    uint64_t v33 = sub_10017DF08(&qword_100E6D1C8);
    memcpy(v27, v28, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v29);
LABEL_13:
  uint64_t v34 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v34) = *(unsigned char *)(a2 + v34);
  return a1;
}

uint64_t sub_100911F2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100911F40);
}

uint64_t sub_100911F40(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for CurrentWeather();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    type metadata accessor for HourlyForecastComponentPreprocessedDataModel();
    sub_100162F30();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v12 = a3[5];
    }
    else
    {
      sub_10017DF08(&qword_100E66CC8);
      sub_100162F30();
      if (*(_DWORD *)(v14 + 84) == a2)
      {
        uint64_t v8 = v13;
        uint64_t v12 = a3[6];
      }
      else
      {
        sub_10017DF08(&qword_100E66CA0);
        sub_100162F30();
        if (*(_DWORD *)(v16 + 84) == a2)
        {
          uint64_t v8 = v15;
          uint64_t v12 = a3[7];
        }
        else
        {
          sub_10017DF08(&qword_100E6D1C8);
          sub_100162F30();
          if (*(_DWORD *)(v18 + 84) != a2)
          {
            unsigned int v20 = *(unsigned __int8 *)(a1 + a3[9]);
            if (v20 >= 2) {
              return ((v20 + 2147483646) & 0x7FFFFFFF) + 1;
            }
            else {
              return 0;
            }
          }
          uint64_t v8 = v17;
          uint64_t v12 = a3[8];
        }
      }
    }
    uint64_t v9 = a1 + v12;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_10091207C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100912090);
}

void sub_100912090(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  type metadata accessor for CurrentWeather();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    type metadata accessor for HourlyForecastComponentPreprocessedDataModel();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      sub_10017DF08(&qword_100E66CC8);
      sub_100162F30();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[6];
      }
      else
      {
        sub_10017DF08(&qword_100E66CA0);
        sub_100162F30();
        if (*(_DWORD *)(v18 + 84) == a3)
        {
          uint64_t v10 = v17;
          uint64_t v14 = a4[7];
        }
        else
        {
          sub_10017DF08(&qword_100E6D1C8);
          sub_100162F30();
          if (*(_DWORD *)(v20 + 84) != a3)
          {
            *(unsigned char *)(a1 + a4[9]) = a2 + 1;
            return;
          }
          uint64_t v10 = v19;
          uint64_t v14 = a4[8];
        }
      }
    }
    uint64_t v11 = a1 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t sub_1009121B8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = type metadata accessor for WeatherChanges();
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_100125FF8();
  uint64_t v10 = sub_10017DF08(&qword_100E713D8);
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_10012B938();
  uint64_t v12 = sub_10017DF08(&qword_100E6D1C8);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = &v36[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  uint64_t v17 = &v36[-v16];
  __chkstk_darwin(v18);
  uint64_t v20 = &v36[-v19];
  if ((static CurrentWeather.== infix(_:_:)() & 1) == 0) {
    goto LABEL_13;
  }
  uint64_t v44 = v14;
  uint64_t v21 = type metadata accessor for HourlyForecastComponent();
  if (!sub_100489A5C(a1 + *(int *)(v21 + 20), a2 + *(int *)(v21 + 20))) {
    goto LABEL_13;
  }
  uint64_t v38 = v3;
  uint64_t v39 = v8;
  uint64_t v40 = v2;
  uint64_t v41 = v6;
  type metadata accessor for HourWeather();
  uint64_t v42 = a2;
  sub_1001A39A8(&qword_100E712F0, (void (*)(uint64_t))&type metadata accessor for HourWeather);
  uint64_t v43 = (int *)v21;
  sub_1001A39A8(&qword_100E712F8, (void (*)(uint64_t))&type metadata accessor for HourWeather);
  sub_1001A39A8(&qword_100E71300, (void (*)(uint64_t))&type metadata accessor for HourWeather);
  if ((static Forecast.== infix(_:_:)() & 1) == 0) {
    goto LABEL_13;
  }
  type metadata accessor for DayWeather();
  sub_1001A39A8(&qword_100E71318, (void (*)(uint64_t))&type metadata accessor for DayWeather);
  sub_1001A39A8(&qword_100E71320, (void (*)(uint64_t))&type metadata accessor for DayWeather);
  sub_1001A39A8(&qword_100E71328, (void (*)(uint64_t))&type metadata accessor for DayWeather);
  if ((static Forecast.== infix(_:_:)() & 1) == 0) {
    goto LABEL_13;
  }
  uint64_t v22 = v43;
  sub_1009136E4(a1 + v43[8], (uint64_t)v20);
  uint64_t v23 = v22[8];
  uint64_t v24 = v42;
  sub_1009136E4(v42 + v23, (uint64_t)v17);
  uint64_t v25 = v40;
  uint64_t v26 = v40 + *(int *)(v10 + 48);
  sub_1009136E4((uint64_t)v20, v40);
  sub_1009136E4((uint64_t)v17, v26);
  uint64_t v27 = v41;
  if (_s7Weather24LocationCompositionStateOwet_0(v25, 1, v41) != 1)
  {
    uint64_t v29 = (uint64_t)v44;
    sub_1009136E4(v25, (uint64_t)v44);
    if (_s7Weather24LocationCompositionStateOwet_0(v26, 1, v27) != 1)
    {
      uint64_t v31 = v38;
      uint64_t v30 = v39;
      sub_1001627D4();
      v32();
      sub_1001A39A8(&qword_100E713F8, (void (*)(uint64_t))&type metadata accessor for WeatherChanges);
      int v37 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
      v33(v31, v27);
      sub_100178110((uint64_t)v17, &qword_100E6D1C8);
      sub_100178110((uint64_t)v20, &qword_100E6D1C8);
      v33(v29, v27);
      uint64_t v28 = v42;
      sub_100178110(v25, &qword_100E6D1C8);
      if ((v37 & 1) == 0) {
        goto LABEL_13;
      }
      goto LABEL_12;
    }
    sub_100178110((uint64_t)v17, &qword_100E6D1C8);
    sub_100178110((uint64_t)v20, &qword_100E6D1C8);
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v29, v27);
LABEL_10:
    sub_100178110(v25, &qword_100E713D8);
    goto LABEL_13;
  }
  uint64_t v28 = v24;
  sub_100178110((uint64_t)v17, &qword_100E6D1C8);
  sub_100178110((uint64_t)v20, &qword_100E6D1C8);
  if (_s7Weather24LocationCompositionStateOwet_0(v26, 1, v27) != 1) {
    goto LABEL_10;
  }
  sub_100178110(v25, &qword_100E6D1C8);
LABEL_12:
  if (*(unsigned __int8 *)(a1 + v43[9]) == *(unsigned __int8 *)(v28 + v43[9]))
  {
    char v34 = *(unsigned char *)(a1 + v43[10]) ^ *(unsigned char *)(v28 + v43[10]) ^ 1;
    return v34 & 1;
  }
LABEL_13:
  char v34 = 0;
  return v34 & 1;
}

uint64_t sub_100912710@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v33 = a2;
  uint64_t v4 = sub_10017DF08(&qword_100E6D1C8);
  __chkstk_darwin(v4 - 8);
  sub_100109314();
  uint64_t v34 = v5;
  uint64_t v41 = sub_10017DF08(&qword_100E66CA0);
  sub_100179C0C();
  uint64_t v39 = v6;
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v35 = v8;
  uint64_t v42 = sub_10017DF08(&qword_100E66CC8);
  sub_100179C0C();
  uint64_t v40 = v9;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for HourlyForecastComponentPreprocessedDataModel();
  sub_100162E4C();
  __chkstk_darwin(v13);
  sub_10012B938();
  uint64_t v14 = type metadata accessor for CurrentWeather();
  sub_100179C0C();
  uint64_t v44 = v15;
  __chkstk_darwin(v16);
  sub_100125FF8();
  sub_10017DF08(&qword_100EA0C60);
  sub_100179C0C();
  uint64_t v36 = v18;
  uint64_t v37 = v17;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = (int *)type metadata accessor for HourlyForecastComponent();
  sub_100162E4C();
  __chkstk_darwin(v21);
  sub_100109314();
  unint64_t v46 = a1;
  uint64_t v47 = v22;
  sub_1001B1E64(a1, a1[3]);
  sub_10091374C();
  uint64_t v38 = v20;
  uint64_t v23 = v48;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  uint64_t v43 = v14;
  if (v23) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v46);
  }
  uint64_t v48 = v12;
  char v55 = 0;
  sub_1001A39A8(&qword_100E7CDD8, (void (*)(uint64_t))&type metadata accessor for CurrentWeather);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v24 = v47;
  sub_1001627D4();
  v25();
  char v54 = 1;
  sub_1001A39A8(&qword_100EA0C70, (void (*)(uint64_t))type metadata accessor for HourlyForecastComponentPreprocessedDataModel);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  sub_100913798(v2, v24 + v45[5]);
  char v53 = 2;
  sub_1001246C8(&qword_100EA0C78, &qword_100E66CC8);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  sub_1001627D4();
  v26();
  char v52 = 3;
  sub_1001246C8(&qword_100EA0C80, &qword_100E66CA0);
  sub_1001A00B8();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  sub_1001627D4();
  v27();
  type metadata accessor for WeatherChanges();
  char v51 = 4;
  sub_1001A39A8(&qword_100EA0C88, (void (*)(uint64_t))&type metadata accessor for WeatherChanges);
  uint64_t v28 = v34;
  sub_1001A00B8();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  sub_1009137FC(v28, v24 + v45[8]);
  char v50 = 5;
  *(unsigned char *)(v24 + v45[9]) = KeyedDecodingContainer.decode(_:forKey:)() & 1;
  char v49 = 6;
  char v29 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v30 = sub_10017AB78();
  v31(v30);
  *(unsigned char *)(v24 + v45[10]) = v29 & 1;
  sub_100913864(v24, v33);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v46);
  return sub_1009138C8(v24, (void (*)(void))type metadata accessor for HourlyForecastComponent);
}

uint64_t sub_100912E18(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x57746E6572727563 && a2 == 0xEE00726568746165;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000100CA1B90 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    BOOL v6 = a1 == 0x6F46796C72756F68 && a2 == 0xEE00747361636572;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v7 = a1 == 0x726F46796C696164 && a2 == 0xED00007473616365;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        BOOL v8 = a1 == 0x4372656874616577 && a2 == 0xEE007365676E6168;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          BOOL v9 = a1 == 0x6F726548776F6873 && a2 == 0xEE00676E69727453;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else if (a1 == 0x6E696C66664F7369 && a2 == 0xE900000000000065)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v11) {
              return 6;
            }
            else {
              return 7;
            }
          }
        }
      }
    }
  }
}

unint64_t sub_1009131A4(char a1)
{
  unint64_t result = 0x57746E6572727563;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x6F46796C72756F68;
      break;
    case 3:
      unint64_t result = 0x726F46796C696164;
      break;
    case 4:
      unint64_t result = 0x4372656874616577;
      break;
    case 5:
      unint64_t result = 0x6F726548776F6873;
      break;
    case 6:
      unint64_t result = 0x6E696C66664F7369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1009132D0(void *a1)
{
  uint64_t v4 = sub_10017DF08(&qword_100EA0C90);
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10012B938();
  sub_1001B1E64(a1, a1[3]);
  sub_10091374C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  type metadata accessor for CurrentWeather();
  sub_1001A39A8(&qword_100E7CDF0, (void (*)(uint64_t))&type metadata accessor for CurrentWeather);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for HourlyForecastComponent();
    type metadata accessor for HourlyForecastComponentPreprocessedDataModel();
    sub_1001A39A8(&qword_100EA0C98, (void (*)(uint64_t))type metadata accessor for HourlyForecastComponentPreprocessedDataModel);
    sub_10017EB60();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_10017DF08(&qword_100E66CC8);
    sub_1001246C8(&qword_100EA0CA0, &qword_100E66CC8);
    sub_1001A2690();
    sub_10017DF08(&qword_100E66CA0);
    sub_1001246C8(&qword_100EA0CA8, &qword_100E66CA0);
    sub_1001A2690();
    type metadata accessor for WeatherChanges();
    sub_1001A39A8(&qword_100EA0CB0, (void (*)(uint64_t))&type metadata accessor for WeatherChanges);
    sub_10017EB60();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    KeyedEncodingContainer.encode(_:forKey:)();
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

unint64_t sub_100913608()
{
  return sub_1009131A4(*v0);
}

uint64_t sub_100913610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100912E18(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100913638(uint64_t a1)
{
  unint64_t v2 = sub_10091374C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100913674(uint64_t a1)
{
  unint64_t v2 = sub_10091374C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1009136B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100912710(a1, a2);
}

uint64_t sub_1009136C8(void *a1)
{
  return sub_1009132D0(a1);
}

uint64_t sub_1009136E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6D1C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10091374C()
{
  unint64_t result = qword_100EA0C68;
  if (!qword_100EA0C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA0C68);
  }
  return result;
}

uint64_t sub_100913798(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HourlyForecastComponentPreprocessedDataModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1009137FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6D1C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100913864(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HourlyForecastComponent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1009138C8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

unsigned char *storeEnumTagSinglePayload for HourlyForecastComponent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1009139E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HourlyForecastComponent.CodingKeys()
{
  return &type metadata for HourlyForecastComponent.CodingKeys;
}

unint64_t sub_100913A24()
{
  unint64_t result = qword_100EA0CB8;
  if (!qword_100EA0CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA0CB8);
  }
  return result;
}

unint64_t sub_100913A74()
{
  unint64_t result = qword_100EA0CC0;
  if (!qword_100EA0CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA0CC0);
  }
  return result;
}

unint64_t sub_100913AC4()
{
  unint64_t result = qword_100EA0CC8;
  if (!qword_100EA0CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA0CC8);
  }
  return result;
}

unint64_t static LocalSearchRequestManager.dependencyKey.getter()
{
  return 0xD00000000000001DLL;
}

double sub_100913B2C()
{
  uint64_t v1 = type metadata accessor for AppConfiguration();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unsigned int v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64((void *)(v0 + 16), *(void *)(v0 + 40));
  dispatch thunk of AppConfigurationManagerType.appConfiguration.getter();
  AppConfiguration.reverseGeocodingRefreshTimeInterval.getter();
  double v6 = v5;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v6;
}

uint64_t sub_100913C28@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  sub_1001262FC(v1 + 80, (uint64_t)v4, &qword_100EA0CD0);
  if (v5 != 1) {
    return sub_10091554C((uint64_t)v4, a1);
  }
  sub_1001781AC((uint64_t)v4, &qword_100EA0CD0);
  sub_100913CF8(v1, a1);
  sub_1001262FC(a1, (uint64_t)v4, &qword_100EA0DA8);
  swift_beginAccess();
  sub_1009154E4((uint64_t)v4, v1 + 80);
  return swift_endAccess();
}

uint64_t sub_100913CF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Logger();
  __n128 v5 = __chkstk_darwin(v4);
  (*(void (**)(void *__return_ptr, __n128))(a1 + 120))(v9, v5);
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  static Settings.Geocoding.clearGeocodingCacheOnNextLaunch.getter();
  SettingReader.read<A>(_:)();
  swift_release();
  swift_release();
  sub_1001B1E64(v9, v9[3]);
  dispatch thunk of GeocodeStoreType.deleteAllLocations(satisfying:)();
  if (v8 == 1)
  {
    static Settings.Geocoding.clearGeocodingCacheOnNextLaunch.getter();
    sub_1009155B8(&qword_100EA0DB0, v6, (void (*)(uint64_t))type metadata accessor for LocalSearchRequestManager);
    Updatable.save<A>(setting:value:)();
    swift_release();
  }
  sub_10020D948((uint64_t)v9, a2);
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v9);
}

BOOL sub_1009140A4()
{
  uint64_t v0 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  BOOL v9 = (char *)&v15 - v8;
  Location.lastRefreshDate.getter();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v2, 1, v3) == 1)
  {
    sub_1001781AC((uint64_t)v2, (uint64_t *)&unk_100E73CA0);
    return 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v2, v3);
    double v11 = sub_100913B2C();
    Date.init()();
    Date.timeIntervalSince(_:)();
    double v13 = v12;
    uint64_t v14 = *(void (**)(char *, uint64_t))(v4 + 8);
    v14(v6, v3);
    v14(v9, v3);
    return v11 <= v13;
  }
}

uint64_t LocalSearchRequestManager.__allocating_init(service:store:appConfigurationManager:queue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = swift_allocObject();
  LocalSearchRequestManager.init(service:store:appConfigurationManager:queue:)(a1, a2, a3, a4, a5, a6);
  return v12;
}

uint64_t LocalSearchRequestManager.init(service:store:appConfigurationManager:queue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v20 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  sub_100179C0C();
  uint64_t v18 = v11;
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v19 = v13;
  type metadata accessor for OS_dispatch_queue.Attributes();
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_100109314();
  uint64_t v15 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v15 - 8);
  sub_100109314();
  type metadata accessor for PromiseDeduperFlags();
  sub_100162E4C();
  __chkstk_darwin(v16);
  sub_1009155B8(&qword_100E62D30, 255, (void (*)(uint64_t))&type metadata accessor for PromiseDeduperFlags);
  sub_10017DF08(&qword_100E62D38);
  sub_10012470C(&qword_100E62D40, &qword_100E62D38);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  sub_10017DF08(&qword_100E62D48);
  swift_allocObject();
  *(void *)(v6 + 72) = PromiseDeduper.init(options:)();
  *(void *)(v6 + 80) = 0;
  *(void *)(v6 + 88) = 0;
  *(void *)(v6 + 96) = 0;
  *(_OWORD *)(v6 + 104) = xmmword_100C251C0;
  *(void *)(v6 + 56) = a1;
  *(void *)(v6 + 64) = a2;
  *(void *)(v6 + 120) = a3;
  *(void *)(v6 + 128) = a4;
  sub_10020D948(a5, v6 + 16);
  if (!a6)
  {
    sub_1001AB3E0();
    swift_unknownObjectRetain();
    swift_retain();
    static DispatchQoS.unspecified.getter();
    sub_1009155B8((unint64_t *)&qword_100E62D18, 255, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
    sub_10017DF08(&qword_100E62D20);
    sub_10012470C((unint64_t *)&qword_100E62D28, &qword_100E62D20);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    (*(void (**)(uint64_t, void, uint64_t))(v18 + 104))(v19, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v20);
    a6 = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
    swift_unknownObjectRelease();
    swift_release();
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a5);
  *(void *)(v6 + 136) = a6;
  return v6;
}

uint64_t LocalSearchRequestManager.performLocalSearch(with:)(uint64_t a1, uint64_t a2)
{
  sub_10017C924();
  uint64_t v5 = (void *)swift_allocObject();
  _OWORD v5[2] = a1;
  void v5[3] = a2;
  v5[4] = v2;
  type metadata accessor for Location();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v6 = firstly<A, B>(on:disposeOn:closure:)();
  swift_release();
  return v6;
}

uint64_t sub_100914728()
{
  return PromiseDeduper.promise(key:createBlock:)();
}

uint64_t sub_100914784()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1009147C4()
{
  return sub_100914728();
}

uint64_t sub_1009147E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v32 = *a4;
  uint64_t v7 = sub_10017DF08(&qword_100E639E8);
  __chkstk_darwin(v7 - 8);
  BOOL v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Location();
  uint64_t v30 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v25 - v14;
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  static Settings.Geocoding.bypassGeocodingCache.getter();
  SettingReader.read<A>(_:)();
  swift_release();
  swift_release();
  if (v35[0]) {
    goto LABEL_9;
  }
  uint64_t v27 = v9;
  uint64_t v28 = a3;
  uint64_t v25 = v12;
  uint64_t v26 = v15;
  uint64_t v29 = v10;
  uint64_t v31 = a2;
  sub_100913C28((uint64_t)v35);
  if (!v36)
  {
    sub_1001781AC((uint64_t)v35, &qword_100EA0DA8);
    uint64_t v16 = (uint64_t)v27;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 1, 1, v29);
    a3 = v28;
    goto LABEL_8;
  }
  sub_10020D948((uint64_t)v35, (uint64_t)v33);
  sub_1001781AC((uint64_t)v35, &qword_100EA0DA8);
  sub_1001B1E64(v33, v34);
  uint64_t v16 = (uint64_t)v27;
  a3 = v28;
  dispatch thunk of GeocodeStoreType.queryLocation(for:)();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v33);
  uint64_t v17 = v29;
  if (_s7Weather24LocationCompositionStateOwet_0(v16, 1, v29) == 1)
  {
LABEL_8:
    sub_1001781AC(v16, &qword_100E639E8);
    a2 = v31;
    goto LABEL_9;
  }
  uint64_t v18 = v30;
  uint64_t v19 = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 32))(v26, v16, v17);
  if (!sub_1009140A4())
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v25, v19, v17);
    sub_10017DF08(&qword_100E965D0);
    swift_allocObject();
    uint64_t v23 = Promise.init(value:)();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v17);
    return v23;
  }
  sub_100913C28((uint64_t)v35);
  if (v36)
  {
    sub_10020D948((uint64_t)v35, (uint64_t)v33);
    sub_1001781AC((uint64_t)v35, &qword_100EA0DA8);
    sub_1001B1E64(v33, v34);
    dispatch thunk of GeocodeStoreType.deleteLocation(for:)();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v17);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v33);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v17);
    sub_1001781AC((uint64_t)v35, &qword_100EA0DA8);
  }
  a2 = v31;
  a3 = v28;
LABEL_9:
  uint64_t v20 = *(void *)(a1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 8))(a2, a3, ObjectType, v20);
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a2;
  *(void *)(v22 + 24) = a3;
  swift_bridgeObjectRetain();
  uint64_t v23 = Promise.then<A, B>(on:disposeOn:closure:)();
  swift_release();
  swift_release();
  return v23;
}

uint64_t LocalSearchRequestManager.performLocalSearch(with:calloutTitle:)(void *a1, uint64_t a2, uint64_t a3)
{
  sub_10017C924();
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = a2;
  v7[3] = a3;
  v7[4] = a1;
  v7[5] = v3;
  type metadata accessor for Location();
  swift_bridgeObjectRetain();
  id v8 = a1;
  swift_retain();
  uint64_t v9 = firstly<A, B>(on:disposeOn:closure:)();
  swift_release();
  return v9;
}

uint64_t sub_100914D20()
{
  return PromiseDeduper.promise(key:createBlock:)();
}

uint64_t sub_100914D80()
{
  swift_bridgeObjectRelease();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100914DC8()
{
  return sub_100914D20();
}

uint64_t sub_100914DE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v32 = *a5;
  uint64_t v33 = a3;
  uint64_t v9 = sub_10017DF08(&qword_100E639E8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Location();
  uint64_t v30 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v26 - v16;
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  static Settings.Geocoding.bypassGeocodingCache.getter();
  SettingReader.read<A>(_:)();
  swift_release();
  uint64_t v18 = v12;
  uint64_t v19 = v33;
  swift_release();
  if (v36[0]) {
    goto LABEL_9;
  }
  uint64_t v27 = v14;
  uint64_t v28 = a5;
  uint64_t v29 = a2;
  uint64_t v31 = a1;
  sub_100913C28((uint64_t)v36);
  if (!v37)
  {
    sub_1001781AC((uint64_t)v36, &qword_100EA0DA8);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 1, 1, v18);
    a2 = v29;
    goto LABEL_8;
  }
  sub_10020D948((uint64_t)v36, (uint64_t)v34);
  sub_1001781AC((uint64_t)v36, &qword_100EA0DA8);
  sub_1001B1E64(v34, v35);
  a2 = v29;
  dispatch thunk of GeocodeStoreType.queryLocation(for:)();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v34);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v18) == 1)
  {
LABEL_8:
    sub_1001781AC((uint64_t)v11, &qword_100E639E8);
    a1 = v31;
    goto LABEL_9;
  }
  uint64_t v20 = v30;
  (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v17, v11, v18);
  if (!sub_1009140A4())
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v27, v17, v18);
    sub_10017DF08(&qword_100E965D0);
    swift_allocObject();
    uint64_t v24 = Promise.init(value:)();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v18);
    return v24;
  }
  sub_100913C28((uint64_t)v36);
  if (v37)
  {
    sub_10020D948((uint64_t)v36, (uint64_t)v34);
    sub_1001781AC((uint64_t)v36, &qword_100EA0DA8);
    sub_1001B1E64(v34, v35);
    dispatch thunk of GeocodeStoreType.deleteLocation(for:)();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v18);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v34);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v18);
    sub_1001781AC((uint64_t)v36, &qword_100EA0DA8);
  }
  a1 = v31;
  a2 = v29;
LABEL_9:
  uint64_t v21 = *(void *)(v19 + 64);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 16))(a4, a1, a2, ObjectType, v21);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = a1;
  *(void *)(v23 + 24) = a2;
  swift_bridgeObjectRetain();
  uint64_t v24 = Promise.then<A, B>(on:disposeOn:closure:)();
  swift_release();
  swift_release();
  return v24;
}

uint64_t sub_100915260(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  id v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100913C28((uint64_t)v11);
  if (v12)
  {
    sub_10020D948((uint64_t)v11, (uint64_t)v10);
    sub_1001781AC((uint64_t)v11, &qword_100EA0DA8);
    uint64_t v13 = v1;
    sub_1001B1E64(v10, v10[3]);
    dispatch thunk of GeocodeStoreType.saveLocation(_:for:)();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v10);
  }
  else
  {
    sub_1001781AC((uint64_t)v11, &qword_100EA0DA8);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v3);
  sub_10017DF08(&qword_100E965D0);
  swift_allocObject();
  return Promise.init(value:)();
}

uint64_t LocalSearchRequestManager.deinit()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  swift_unknownObjectRelease();
  swift_release();
  sub_1001781AC(v0 + 80, &qword_100EA0CD0);
  swift_release();

  return v0;
}

uint64_t LocalSearchRequestManager.__deallocating_deinit()
{
  LocalSearchRequestManager.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_10091544C(uint64_t a1, uint64_t a2)
{
  return sub_1009155B8(&qword_100EA0CD8, a2, (void (*)(uint64_t))type metadata accessor for LocalSearchRequestManager);
}

uint64_t type metadata accessor for LocalSearchRequestManager()
{
  return self;
}

uint64_t sub_1009154B8()
{
  return sub_100914DE8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_1009154C8(uint64_t a1)
{
  return sub_100915260(a1);
}

uint64_t sub_1009154E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100EA0CD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10091554C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100EA0DA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1009155B8(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100915600()
{
  return sub_1009147E4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(uint64_t **)(v0 + 40));
}

uint64_t sub_10091560C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100915648(uint64_t a1)
{
  return sub_1009154C8(a1);
}

uint64_t sub_100915678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10091568C);
}

uint64_t sub_10091568C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WindComponentViewModel();

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_1009156D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009156E8);
}

uint64_t sub_1009156E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WindComponentViewModel();

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v4);
}

uint64_t type metadata accessor for WindComponentLargeContentView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EA0E10);
}

uint64_t sub_100915758()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100915774@<X0>(unsigned char *a1@<X8>)
{
  *a1 = static Axis.Set.horizontal.getter();
  uint64_t v3 = sub_10017DF08(&qword_100EA0E48);
  return sub_1009157B8(v1, (uint64_t)&a1[*(int *)(v3 + 44)]);
}

uint64_t sub_1009157B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100EA0E50);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v19 - v8;
  uint64_t v10 = type metadata accessor for WindCompassAndTableView(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v19 - v14;
  sub_100915CDC(a1, (uint64_t)&v19 - v14, (void (*)(void))type metadata accessor for WindComponentViewModel);
  *uint64_t v9 = static Axis.Set.vertical.getter();
  uint64_t v16 = sub_10017DF08(&qword_100EA0E58);
  sub_1009159B4(a1, (uint64_t)&v9[*(int *)(v16 + 44)]);
  sub_100915CDC((uint64_t)v15, (uint64_t)v12, (void (*)(void))type metadata accessor for WindCompassAndTableView);
  sub_1001B7204((uint64_t)v9, (uint64_t)v6, &qword_100EA0E50);
  sub_100915CDC((uint64_t)v12, a2, (void (*)(void))type metadata accessor for WindCompassAndTableView);
  uint64_t v17 = sub_10017DF08(&qword_100EA0E60);
  sub_1001B7204((uint64_t)v6, a2 + *(int *)(v17 + 48), &qword_100EA0E50);
  sub_100178110((uint64_t)v9, &qword_100EA0E50);
  sub_100915DBC((uint64_t)v15, (void (*)(void))type metadata accessor for WindCompassAndTableView);
  sub_100178110((uint64_t)v6, &qword_100EA0E50);
  return sub_100915DBC((uint64_t)v12, (void (*)(void))type metadata accessor for WindCompassAndTableView);
}

uint64_t sub_1009159B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for WindComponentViewModel();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for WindDataTableView(0);
  uint64_t v8 = (int *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v24 - v12;
  uint64_t v14 = type metadata accessor for WindCompassAndTableView(0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v24 - v18;
  sub_100915CDC(a1, (uint64_t)&v24 - v18, (void (*)(void))type metadata accessor for WindComponentViewModel);
  sub_100915CDC(a1, (uint64_t)v6, (void (*)(void))type metadata accessor for WindComponentViewModel);
  *(void *)uint64_t v10 = swift_getKeyPath();
  v10[8] = 0;
  uint64_t v20 = (uint64_t *)&v10[v8[7]];
  *uint64_t v20 = swift_getKeyPath();
  sub_10017DF08(&qword_100E66E50);
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = &v10[v8[8]];
  *(void *)uint64_t v21 = swift_getKeyPath();
  v21[8] = 0;
  sub_100915D68((uint64_t)v6, (uint64_t)&v10[v8[9]], (void (*)(void))type metadata accessor for WindComponentViewModel);
  sub_100915D68((uint64_t)v10, (uint64_t)v13, (void (*)(void))type metadata accessor for WindDataTableView);
  sub_100915CDC((uint64_t)v19, (uint64_t)v16, (void (*)(void))type metadata accessor for WindCompassAndTableView);
  sub_100915CDC((uint64_t)v13, (uint64_t)v10, (void (*)(void))type metadata accessor for WindDataTableView);
  sub_100915CDC((uint64_t)v16, a2, (void (*)(void))type metadata accessor for WindCompassAndTableView);
  uint64_t v22 = sub_10017DF08(&qword_100EA0E68);
  sub_100915CDC((uint64_t)v10, a2 + *(int *)(v22 + 48), (void (*)(void))type metadata accessor for WindDataTableView);
  sub_100915DBC((uint64_t)v13, (void (*)(void))type metadata accessor for WindDataTableView);
  sub_100915DBC((uint64_t)v19, (void (*)(void))type metadata accessor for WindCompassAndTableView);
  sub_100915DBC((uint64_t)v10, (void (*)(void))type metadata accessor for WindDataTableView);
  return sub_100915DBC((uint64_t)v16, (void (*)(void))type metadata accessor for WindCompassAndTableView);
}

uint64_t type metadata accessor for WindCompassAndTableView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EA0F60);
}

uint64_t sub_100915CDC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  sub_10008B8B4();
  v4();
  return a2;
}

uint64_t type metadata accessor for WindDataTableView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EA0EC8);
}

uint64_t sub_100915D68(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t sub_100915DBC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

unint64_t sub_100915E10(unint64_t a1, uint64_t a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_100195B7C(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = a3[5];
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (void *)(a2 + v9);
    sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = a3[6];
    uint64_t v15 = a1 + v14;
    uint64_t v16 = a2 + v14;
    uint64_t v17 = *(void *)v16;
    char v18 = *(unsigned char *)(v16 + 8);
    sub_100195B7C(*(void *)v16, v18);
    *(void *)uint64_t v15 = v17;
    *(unsigned char *)(v15 + 8) = v18;
    uint64_t v19 = a3[7];
    uint64_t v20 = a1 + v19;
    uint64_t v21 = a2 + v19;
    uint64_t v22 = *(void *)(a2 + v19 + 8);
    *(void *)uint64_t v20 = *(void *)(a2 + v19);
    *(void *)(v20 + 8) = v22;
    uint64_t v23 = *(void *)(a2 + v19 + 24);
    *(void *)(v20 + 16) = *(void *)(a2 + v19 + 16);
    *(void *)(v20 + 24) = v23;
    uint64_t v24 = *(void *)(a2 + v19 + 40);
    *(void *)(v20 + 32) = *(void *)(a2 + v19 + 32);
    *(void *)(v20 + 40) = v24;
    uint64_t v25 = *(void *)(a2 + v19 + 56);
    *(void *)(v20 + 48) = *(void *)(a2 + v19 + 48);
    *(void *)(v20 + 56) = v25;
    uint64_t v26 = *(void *)(a2 + v19 + 72);
    *(void *)(v20 + 64) = *(void *)(a2 + v19 + 64);
    *(void *)(v20 + 72) = v26;
    uint64_t v27 = *(void *)(a2 + v19 + 88);
    *(void *)(v20 + 80) = *(void *)(a2 + v19 + 80);
    *(void *)(v20 + 88) = v27;
    uint64_t v28 = *(void *)(a2 + v19 + 104);
    *(void *)(v20 + 96) = *(void *)(a2 + v19 + 96);
    *(void *)(v20 + 104) = v28;
    uint64_t v29 = *(void *)(a2 + v19 + 120);
    *(void *)(v20 + 112) = *(void *)(a2 + v19 + 112);
    *(void *)(v20 + 120) = v29;
    uint64_t v30 = *(void *)(a2 + v19 + 136);
    *(void *)(v20 + 128) = *(void *)(a2 + v19 + 128);
    *(void *)(v20 + 136) = v30;
    uint64_t v31 = *(void *)(a2 + v19 + 152);
    *(void *)(v20 + 144) = *(void *)(a2 + v19 + 144);
    *(void *)(v20 + 152) = v31;
    uint64_t v32 = *(void *)(a2 + v19 + 168);
    *(void *)(v20 + 160) = *(void *)(a2 + v19 + 160);
    *(void *)(v20 + 168) = v32;
    *(_OWORD *)(v20 + 176) = *(_OWORD *)(a2 + v19 + 176);
    *(void *)(v20 + 192) = *(void *)(a2 + v19 + 192);
    uint64_t v39 = type metadata accessor for WindComponentViewModel();
    uint64_t v33 = *(int *)(v39 + 68);
    uint64_t v37 = v21 + v33;
    uint64_t v38 = v20 + v33;
    uint64_t v34 = type metadata accessor for WindComponentCompassViewModel();
    uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v36(v38, v37, v34);
    *(void *)(v20 + *(int *)(v39 + 72)) = *(void *)(v21 + *(int *)(v39 + 72));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1009160E0(uint64_t a1, int *a2)
{
  sub_10018F6D8(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = a1 + a2[5];
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(a1 + a2[6]), *(unsigned char *)(a1 + a2[6] + 8));
  uint64_t v6 = a1 + a2[7];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + *(int *)(type metadata accessor for WindComponentViewModel() + 68);
  uint64_t v8 = type metadata accessor for WindComponentCompassViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100916264(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = *(void *)v14;
  char v16 = *(unsigned char *)(v14 + 8);
  sub_100195B7C(*(void *)v14, v16);
  *(void *)uint64_t v13 = v15;
  *(unsigned char *)(v13 + 8) = v16;
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = *(void *)(v19 + 8);
  *(void *)uint64_t v18 = *(void *)v19;
  *(void *)(v18 + 8) = v20;
  uint64_t v21 = *(void *)(v19 + 24);
  *(void *)(v18 + 16) = *(void *)(v19 + 16);
  *(void *)(v18 + 24) = v21;
  uint64_t v22 = *(void *)(v19 + 40);
  *(void *)(v18 + 32) = *(void *)(v19 + 32);
  *(void *)(v18 + 40) = v22;
  uint64_t v38 = a1;
  uint64_t v23 = *(void *)(v19 + 56);
  *(void *)(v18 + 48) = *(void *)(v19 + 48);
  *(void *)(v18 + 56) = v23;
  uint64_t v24 = *(void *)(v19 + 72);
  *(void *)(v18 + 64) = *(void *)(v19 + 64);
  *(void *)(v18 + 72) = v24;
  uint64_t v25 = *(void *)(v19 + 88);
  *(void *)(v18 + 80) = *(void *)(v19 + 80);
  *(void *)(v18 + 88) = v25;
  uint64_t v26 = *(void *)(v19 + 104);
  *(void *)(v18 + 96) = *(void *)(v19 + 96);
  *(void *)(v18 + 104) = v26;
  uint64_t v27 = *(void *)(v19 + 120);
  *(void *)(v18 + 112) = *(void *)(v19 + 112);
  *(void *)(v18 + 120) = v27;
  uint64_t v28 = *(void *)(v19 + 136);
  *(void *)(v18 + 128) = *(void *)(v19 + 128);
  *(void *)(v18 + 136) = v28;
  uint64_t v29 = *(void *)(v19 + 152);
  *(void *)(v18 + 144) = *(void *)(v19 + 144);
  *(void *)(v18 + 152) = v29;
  uint64_t v30 = *(void *)(v19 + 168);
  *(void *)(v18 + 160) = *(void *)(v19 + 160);
  *(void *)(v18 + 168) = v30;
  *(_OWORD *)(v18 + 176) = *(_OWORD *)(v19 + 176);
  *(void *)(v18 + 192) = *(void *)(v19 + 192);
  uint64_t v37 = type metadata accessor for WindComponentViewModel();
  uint64_t v31 = *(int *)(v37 + 68);
  uint64_t v35 = v19 + v31;
  uint64_t v36 = v18 + v31;
  uint64_t v32 = type metadata accessor for WindComponentCompassViewModel();
  uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v34(v36, v35, v32);
  *(void *)(v18 + *(int *)(v37 + 72)) = *(void *)(v19 + *(int *)(v37 + 72));
  swift_bridgeObjectRetain();
  return v38;
}

uint64_t sub_1009164E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10018F6D8(v8, v9);
  if (a1 != a2)
  {
    uint64_t v10 = a3[5];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(a2 + v10);
    sub_100178110(a1 + v10, &qword_100E66E50);
    sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      void *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)v16;
  char v18 = *(unsigned char *)(v16 + 8);
  sub_100195B7C(*(void *)v16, v18);
  uint64_t v19 = *(void *)v15;
  char v20 = *(unsigned char *)(v15 + 8);
  *(void *)uint64_t v15 = v17;
  *(unsigned char *)(v15 + 8) = v18;
  sub_10018F6D8(v19, v20);
  uint64_t v21 = a3[7];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  *uint64_t v22 = *(void *)(a2 + v21);
  v22[1] = *(void *)(a2 + v21 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22[2] = v23[2];
  v22[3] = v23[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void v22[4] = v23[4];
  v22[5] = v23[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22[6] = v23[6];
  v22[7] = v23[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22[8] = v23[8];
  v22[9] = v23[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22[10] = v23[10];
  v22[11] = v23[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22[12] = v23[12];
  v22[13] = v23[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22[14] = v23[14];
  v22[15] = v23[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22[16] = v23[16];
  v22[17] = v23[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22[18] = v23[18];
  v22[19] = v23[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22[20] = v23[20];
  v22[21] = v23[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22[22] = v23[22];
  v22[23] = v23[23];
  v22[24] = v23[24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = type metadata accessor for WindComponentViewModel();
  uint64_t v25 = *(int *)(v24 + 68);
  uint64_t v26 = (char *)v22 + v25;
  uint64_t v27 = (char *)v23 + v25;
  uint64_t v28 = type metadata accessor for WindComponentCompassViewModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 24))(v26, v27, v28);
  *(void *)((char *)v22 + *(int *)(v24 + 72)) = *(void *)((char *)v23 + *(int *)(v24 + 72));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100916828(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  char v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  uint64_t v15 = a1 + v12;
  uint64_t v16 = a2 + v12;
  long long v17 = *(_OWORD *)(a2 + v12 + 16);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)(a2 + v12);
  *(_OWORD *)(v15 + 16) = v17;
  long long v18 = *(_OWORD *)(a2 + v12 + 48);
  *(_OWORD *)(v15 + 32) = *(_OWORD *)(a2 + v12 + 32);
  *(_OWORD *)(v15 + 48) = v18;
  long long v19 = *(_OWORD *)(a2 + v12 + 80);
  *(_OWORD *)(v15 + 64) = *(_OWORD *)(a2 + v12 + 64);
  *(_OWORD *)(v15 + 80) = v19;
  long long v20 = *(_OWORD *)(a2 + v12 + 112);
  *(_OWORD *)(v15 + 96) = *(_OWORD *)(a2 + v12 + 96);
  *(_OWORD *)(v15 + 112) = v20;
  long long v21 = *(_OWORD *)(a2 + v12 + 144);
  *(_OWORD *)(v15 + 128) = *(_OWORD *)(a2 + v12 + 128);
  *(_OWORD *)(v15 + 144) = v21;
  *(_OWORD *)(v15 + 160) = *(_OWORD *)(a2 + v12 + 160);
  *(void *)(v15 + 176) = *(void *)(a2 + v12 + 176);
  *(_OWORD *)(v15 + 184) = *(_OWORD *)(a2 + v12 + 184);
  uint64_t v22 = type metadata accessor for WindComponentViewModel();
  uint64_t v23 = *(int *)(v22 + 68);
  uint64_t v24 = v15 + v23;
  uint64_t v25 = v16 + v23;
  uint64_t v26 = type metadata accessor for WindComponentCompassViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  *(void *)(v15 + *(int *)(v22 + 72)) = *(void *)(v16 + *(int *)(v22 + 72));
  return a1;
}

uint64_t sub_1009169D8(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10018F6D8(v8, v9);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v10 = a3[5];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (char *)a2 + v10;
    sub_100178110(a1 + v10, &qword_100E66E50);
    uint64_t v13 = sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
  }
  uint64_t v15 = a3[6];
  uint64_t v16 = a1 + v15;
  long long v17 = (uint64_t *)((char *)a2 + v15);
  uint64_t v18 = *v17;
  LOBYTE(v17) = *((unsigned char *)v17 + 8);
  uint64_t v19 = *(void *)v16;
  char v20 = *(unsigned char *)(v16 + 8);
  *(void *)uint64_t v16 = v18;
  *(unsigned char *)(v16 + 8) = (_BYTE)v17;
  sub_10018F6D8(v19, v20);
  uint64_t v21 = a3[7];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (uint64_t *)((char *)a2 + v21);
  uint64_t v24 = *(uint64_t *)((char *)a2 + v21 + 8);
  *uint64_t v22 = *(uint64_t *)((char *)a2 + v21);
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = v23[3];
  v22[2] = v23[2];
  v22[3] = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = v23[5];
  void v22[4] = v23[4];
  v22[5] = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = v23[7];
  v22[6] = v23[6];
  v22[7] = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = v23[9];
  v22[8] = v23[8];
  v22[9] = v28;
  swift_bridgeObjectRelease();
  uint64_t v29 = v23[11];
  v22[10] = v23[10];
  v22[11] = v29;
  swift_bridgeObjectRelease();
  uint64_t v30 = v23[13];
  v22[12] = v23[12];
  v22[13] = v30;
  swift_bridgeObjectRelease();
  uint64_t v31 = v23[15];
  v22[14] = v23[14];
  v22[15] = v31;
  swift_bridgeObjectRelease();
  uint64_t v32 = v23[17];
  v22[16] = v23[16];
  v22[17] = v32;
  swift_bridgeObjectRelease();
  uint64_t v33 = v23[19];
  v22[18] = v23[18];
  v22[19] = v33;
  swift_bridgeObjectRelease();
  uint64_t v34 = v23[21];
  v22[20] = v23[20];
  v22[21] = v34;
  swift_bridgeObjectRelease();
  v22[22] = v23[22];
  uint64_t v35 = v23[24];
  v22[23] = v23[23];
  v22[24] = v35;
  swift_bridgeObjectRelease();
  uint64_t v36 = type metadata accessor for WindComponentViewModel();
  uint64_t v37 = *(int *)(v36 + 68);
  uint64_t v38 = (char *)v22 + v37;
  uint64_t v39 = (char *)v23 + v37;
  uint64_t v40 = type metadata accessor for WindComponentCompassViewModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 40))(v38, v39, v40);
  *(void *)((char *)v22 + *(int *)(v36 + 72)) = *(void *)((char *)v23 + *(int *)(v36 + 72));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100916C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100916C60);
}

uint64_t sub_100916C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_10017DF08(&qword_100E6D908);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 20);
    }
    else
    {
      uint64_t v10 = type metadata accessor for WindComponentViewModel();
      uint64_t v11 = *(int *)(a3 + 28);
    }
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v11, a2, v10);
  }
}

uint64_t sub_100916D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100916D1C);
}

uint64_t sub_100916D1C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = -(char)a2;
  }
  else
  {
    sub_10017DF08(&qword_100E6D908);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 20);
    }
    else
    {
      uint64_t v10 = type metadata accessor for WindComponentViewModel();
      uint64_t v11 = *(int *)(a4 + 28);
    }
    return _s7Weather24LocationCompositionStateOwst_0(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_100916DC4()
{
  sub_10000F5F8();
  if (v0 <= 0x3F)
  {
    type metadata accessor for WindComponentViewModel();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100916E98()
{
  sub_1001A100C();
  type metadata accessor for WindComponentViewModel();
  sub_100162F30();
  int v4 = *(_DWORD *)(v3 + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v18 = *v1;
    *(void *)uint64_t v0 = *v1;
    uint64_t v0 = v18 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v5 = v2;
    uint64_t v6 = v1[1];
    *(void *)uint64_t v0 = *v1;
    *(void *)(v0 + 8) = v6;
    uint64_t v7 = v1[3];
    *(void *)(v0 + 16) = v1[2];
    *(void *)(v0 + 24) = v7;
    uint64_t v8 = v1[5];
    *(void *)(v0 + 32) = v1[4];
    *(void *)(v0 + 40) = v8;
    uint64_t v9 = v1[7];
    *(void *)(v0 + 48) = v1[6];
    *(void *)(v0 + 56) = v9;
    uint64_t v10 = v1[9];
    *(void *)(v0 + 64) = v1[8];
    *(void *)(v0 + 72) = v10;
    uint64_t v11 = v1[11];
    *(void *)(v0 + 80) = v1[10];
    *(void *)(v0 + 88) = v11;
    uint64_t v12 = v1[13];
    *(void *)(v0 + 96) = v1[12];
    *(void *)(v0 + 104) = v12;
    uint64_t v13 = v1[15];
    *(void *)(v0 + 112) = v1[14];
    *(void *)(v0 + 120) = v13;
    uint64_t v14 = v1[17];
    *(void *)(v0 + 128) = v1[16];
    *(void *)(v0 + 136) = v14;
    uint64_t v15 = v1[19];
    *(void *)(v0 + 144) = v1[18];
    *(void *)(v0 + 152) = v15;
    uint64_t v16 = v1[21];
    *(void *)(v0 + 160) = v1[20];
    *(void *)(v0 + 168) = v16;
    *(_OWORD *)(v0 + 176) = *((_OWORD *)v1 + 11);
    *(void *)(v0 + 192) = v1[24];
    type metadata accessor for WindComponentCompassViewModel();
    sub_100162E4C();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10008B8B4();
    v17();
    *(void *)(v0 + *(int *)(v5 + 72)) = *(uint64_t *)((char *)v1 + *(int *)(v5 + 72));
    swift_bridgeObjectRetain();
  }
  return v0;
}

uint64_t sub_10091704C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for WindComponentViewModel();
  type metadata accessor for WindComponentCompassViewModel();
  sub_100162E4C();
  sub_100162F0C();
  v0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10091712C()
{
  sub_1001A100C();
  uint64_t v3 = *(void *)(v2 + 8);
  *(void *)uint64_t v4 = *(void *)v2;
  *(void *)(v4 + 8) = v3;
  uint64_t v5 = *(void *)(v2 + 24);
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  *(void *)(v4 + 24) = v5;
  uint64_t v6 = *(void *)(v2 + 40);
  *(void *)(v4 + 32) = *(void *)(v2 + 32);
  *(void *)(v4 + 40) = v6;
  uint64_t v7 = *(void *)(v2 + 56);
  *(void *)(v4 + 48) = *(void *)(v2 + 48);
  *(void *)(v4 + 56) = v7;
  uint64_t v8 = *(void *)(v2 + 72);
  *(void *)(v4 + 64) = *(void *)(v2 + 64);
  *(void *)(v4 + 72) = v8;
  uint64_t v9 = *(void *)(v2 + 88);
  *(void *)(v4 + 80) = *(void *)(v2 + 80);
  *(void *)(v4 + 88) = v9;
  uint64_t v10 = *(void *)(v2 + 104);
  *(void *)(v4 + 96) = *(void *)(v2 + 96);
  *(void *)(v4 + 104) = v10;
  uint64_t v11 = *(void *)(v2 + 120);
  *(void *)(v4 + 112) = *(void *)(v2 + 112);
  *(void *)(v4 + 120) = v11;
  uint64_t v12 = *(void *)(v2 + 136);
  *(void *)(v4 + 128) = *(void *)(v2 + 128);
  *(void *)(v4 + 136) = v12;
  uint64_t v13 = *(void *)(v2 + 152);
  *(void *)(v4 + 144) = *(void *)(v2 + 144);
  *(void *)(v4 + 152) = v13;
  uint64_t v14 = *(void *)(v2 + 168);
  *(void *)(v4 + 160) = *(void *)(v2 + 160);
  *(void *)(v4 + 168) = v14;
  *(_OWORD *)(v4 + 176) = *(_OWORD *)(v2 + 176);
  *(void *)(v4 + 192) = *(void *)(v2 + 192);
  uint64_t v17 = type metadata accessor for WindComponentViewModel();
  type metadata accessor for WindComponentCompassViewModel();
  sub_100162E4C();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10008B8B4();
  v15();
  *(void *)(v0 + *(int *)(v17 + 72)) = *(void *)(v1 + *(int *)(v17 + 72));
  swift_bridgeObjectRetain();
  return v0;
}

void *sub_1009172B4()
{
  sub_1001A100C();
  *uint64_t v3 = *v2;
  v0[1] = v2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v0[2] = v1[2];
  v0[3] = v1[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v0[4] = v1[4];
  v0[5] = v1[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v0[6] = v1[6];
  v0[7] = v1[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v0[8] = v1[8];
  v0[9] = v1[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v0[10] = v1[10];
  v0[11] = v1[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v0[12] = v1[12];
  v0[13] = v1[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v0[14] = v1[14];
  v0[15] = v1[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v0[16] = v1[16];
  v0[17] = v1[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v0[18] = v1[18];
  v0[19] = v1[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v0[20] = v1[20];
  v0[21] = v1[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v0[22] = v1[22];
  v0[23] = v1[23];
  uint64_t v4 = v0[24];
  v0[24] = v1[24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  type metadata accessor for WindComponentViewModel();
  sub_10019F4BC();
  sub_100162E4C();
  uint64_t v5 = sub_10017FD84();
  v6(v5);
  *(void *)((char *)v0 + *(int *)(v4 + 72)) = *(void *)((char *)v1 + *(int *)(v4 + 72));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1009174BC(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  uint64_t v9 = type metadata accessor for WindComponentViewModel();
  type metadata accessor for WindComponentCompassViewModel();
  sub_100162E4C();
  uint64_t v10 = sub_10017FD84();
  v11(v10);
  *(void *)(a1 + *(int *)(v9 + 72)) = *(void *)(a2 + *(int *)(v9 + 72));
  return a1;
}

void *sub_100917584()
{
  sub_1001A100C();
  uint64_t v4 = v3[1];
  *uint64_t v0 = *v3;
  v0[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = v1[3];
  v0[2] = v1[2];
  v0[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = v1[5];
  v0[4] = v1[4];
  v0[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = v1[7];
  v0[6] = v1[6];
  v0[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = v1[9];
  v0[8] = v1[8];
  v0[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = v1[11];
  v0[10] = v1[10];
  v0[11] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = v1[13];
  v0[12] = v1[12];
  v0[13] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = v1[15];
  v0[14] = v1[14];
  v0[15] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = v1[17];
  v0[16] = v1[16];
  v0[17] = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = v1[19];
  v0[18] = v1[18];
  v0[19] = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = v1[21];
  v0[20] = v1[20];
  v0[21] = v14;
  swift_bridgeObjectRelease();
  v0[22] = v1[22];
  uint64_t v15 = v1[24];
  v0[23] = v1[23];
  v0[24] = v15;
  swift_bridgeObjectRelease();
  type metadata accessor for WindComponentViewModel();
  sub_10019F4BC();
  sub_100162E4C();
  uint64_t v16 = sub_10017FD84();
  v17(v16);
  *(void *)((char *)v0 + *(int *)(v2 + 72)) = *(void *)((char *)v1 + *(int *)(v2 + 72));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1009176C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100919ACC);
}

uint64_t sub_1009176D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100919AC8);
}

uint64_t sub_1009176EC()
{
  uint64_t result = type metadata accessor for WindComponentViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100917778()
{
  return sub_1001246C8(&qword_100EA0F98, &qword_100EA0FA0);
}

uint64_t sub_1009177B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1009177D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10017DF08(&qword_100EA1030);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E78ED8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for HorizontalABWithB1x1RatioLayout();
  uint64_t v11 = (int *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (uint64_t *)((char *)&v21 - v15);
  sub_1000DBCCC();
  *uint64_t v16 = OS_os_log.init(subsystem:category:)();
  uint64_t v17 = (uint64_t *)((char *)v16 + v11[7]);
  *uint64_t v17 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63BC8);
  swift_storeEnumTagMultiPayload();
  *(uint64_t *)((char *)v16 + v11[8]) = 0x4059000000000000;
  uint64_t v18 = (char *)v16 + v11[9];
  *(void *)uint64_t v18 = 0;
  v18[8] = 1;
  *(uint64_t *)((char *)v16 + v11[10]) = 0x4030000000000000;
  sub_100915D68((uint64_t)v16, (uint64_t)v13, (void (*)(void))type metadata accessor for HorizontalABWithB1x1RatioLayout);
  sub_100915CDC((uint64_t)v13, (uint64_t)v9, (void (*)(void))type metadata accessor for HorizontalABWithB1x1RatioLayout);
  sub_1001B7204((uint64_t)v9, a1, &qword_100E78ED8);
  sub_100917A64(v2, (uint64_t)v6);
  sub_100178110((uint64_t)v9, &qword_100E78ED8);
  uint64_t v19 = sub_10017DF08(&qword_100EA1038);
  sub_10024D364((uint64_t)v6, a1 + *(int *)(v19 + 44), &qword_100EA1030);
  return sub_100915DBC((uint64_t)v13, (void (*)(void))type metadata accessor for HorizontalABWithB1x1RatioLayout);
}

uint64_t sub_100917A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a1;
  uint64_t v33 = a2;
  uint64_t v32 = type metadata accessor for WindComponentCompassViewModel();
  uint64_t v3 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v31 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for WeatherWindComponentCompassContainerView(0);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v30 - v10;
  uint64_t v12 = type metadata accessor for WindComponentViewModel();
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for WindDataTableView(0);
  uint64_t v17 = (int *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v30 - v21;
  sub_100915CDC(a1, (uint64_t)v15, (void (*)(void))type metadata accessor for WindComponentViewModel);
  *(void *)uint64_t v19 = swift_getKeyPath();
  v19[8] = 0;
  uint64_t v23 = (uint64_t *)&v19[v17[7]];
  *uint64_t v23 = swift_getKeyPath();
  sub_10017DF08(&qword_100E66E50);
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = &v19[v17[8]];
  *(void *)uint64_t v24 = swift_getKeyPath();
  v24[8] = 0;
  sub_100915D68((uint64_t)v15, (uint64_t)&v19[v17[9]], (void (*)(void))type metadata accessor for WindComponentViewModel);
  sub_100915D68((uint64_t)v19, (uint64_t)v22, (void (*)(void))type metadata accessor for WindDataTableView);
  uint64_t v25 = v31;
  uint64_t v26 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v31, v30 + *(int *)(v13 + 76), v32);
  *(void *)uint64_t v8 = swift_getKeyPath();
  v8[8] = 0;
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(&v8[*(int *)(v6 + 28)], v25, v26);
  sub_100915D68((uint64_t)v8, (uint64_t)v11, (void (*)(void))type metadata accessor for WeatherWindComponentCompassContainerView);
  sub_100915CDC((uint64_t)v22, (uint64_t)v19, (void (*)(void))type metadata accessor for WindDataTableView);
  sub_100915CDC((uint64_t)v11, (uint64_t)v8, (void (*)(void))type metadata accessor for WeatherWindComponentCompassContainerView);
  uint64_t v27 = v33;
  sub_100915CDC((uint64_t)v19, v33, (void (*)(void))type metadata accessor for WindDataTableView);
  uint64_t v28 = sub_10017DF08(&qword_100EA1040);
  sub_100915CDC((uint64_t)v8, v27 + *(int *)(v28 + 48), (void (*)(void))type metadata accessor for WeatherWindComponentCompassContainerView);
  sub_100915DBC((uint64_t)v11, (void (*)(void))type metadata accessor for WeatherWindComponentCompassContainerView);
  sub_100915DBC((uint64_t)v22, (void (*)(void))type metadata accessor for WindDataTableView);
  sub_100915DBC((uint64_t)v8, (void (*)(void))type metadata accessor for WeatherWindComponentCompassContainerView);
  return sub_100915DBC((uint64_t)v19, (void (*)(void))type metadata accessor for WindDataTableView);
}

uint64_t sub_100917E68()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100917E84@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static HorizontalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  sub_10017DF08(&qword_100EA0FA8);
  return sub_100917ECC(v1);
}

uint64_t sub_100917ECC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WindDataTableView(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v6 = a1 + *(int *)(v5 + 36);
  v10[1] = *(void *)(v6 + *(int *)(type metadata accessor for WindComponentViewModel() + 72));
  swift_getKeyPath();
  sub_100915CDC(a1, (uint64_t)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for WindDataTableView);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  sub_100915D68((uint64_t)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, (void (*)(void))type metadata accessor for WindDataTableView);
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100EA0FB0);
  sub_10017DF08(&qword_100EA0FB8);
  sub_1001246C8(&qword_100EA0FC0, &qword_100EA0FB0);
  sub_1001246C8(&qword_100EA0FC8, &qword_100EA0FB8);
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_1009180D0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v106 = a2;
  uint64_t v94 = a3;
  uint64_t v90 = type metadata accessor for PrimaryDividerStyle();
  uint64_t v89 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v87 = (char *)&v82 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for Divider();
  uint64_t v86 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v85 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_10017DF08(&qword_100E66F20);
  uint64_t v84 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v83 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E78E78);
  __chkstk_darwin(v7 - 8);
  uint64_t v93 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v91 = (char *)&v82 - v10;
  uint64_t v11 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v11 - 8);
  uint64_t v104 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v101 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  uint64_t v99 = (char *)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100EA0FD0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v82 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100EA0FD8);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = sub_10017DF08(&qword_100EA0FE0);
  __chkstk_darwin(v98);
  uint64_t v21 = (char *)&v82 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_10017DF08(&qword_100EA0FE8);
  uint64_t v103 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  uint64_t v97 = (char *)&v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10017DF08(&qword_100EA0FF0);
  __chkstk_darwin(v23 - 8);
  uint64_t v95 = (char *)&v82 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v100 = (char *)&v82 - v26;
  __chkstk_darwin(v27);
  uint64_t v105 = (uint64_t)&v82 - v28;
  uint64_t v30 = *a1;
  uint64_t v29 = (void *)a1[1];
  uint64_t v32 = a1[3];
  uint64_t v96 = a1[2];
  uint64_t v31 = v96;
  *(void *)uint64_t v15 = static VerticalAlignment.center.getter();
  *((void *)v15 + 1) = 0;
  v15[16] = 0;
  uint64_t v33 = sub_10017DF08(&qword_100EA0FF8);
  sub_100918CC4(v30, (uint64_t)v29, v31, v32, v106, (uint64_t *)&v15[*(int *)(v33 + 44)]);
  LOBYTE(a1) = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  sub_1001B7204((uint64_t)v15, (uint64_t)v19, &qword_100EA0FD0);
  uint64_t v42 = &v19[*(int *)(v17 + 44)];
  *uint64_t v42 = (char)a1;
  *((void *)v42 + 1) = v35;
  *((void *)v42 + 2) = v37;
  *((void *)v42 + 3) = v39;
  *((void *)v42 + 4) = v41;
  v42[40] = 0;
  uint64_t v43 = (void *)v32;
  uint64_t v44 = (uint64_t)v29;
  sub_100178110((uint64_t)v15, &qword_100EA0FD0);
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_1001B7204((uint64_t)v19, (uint64_t)v21, &qword_100EA0FD8);
  uint64_t v45 = v98;
  memcpy(&v21[*(int *)(v98 + 36)], __src, 0x70uLL);
  sub_100178110((uint64_t)v19, &qword_100EA0FD8);
  unint64_t v46 = v99;
  static AccessibilityChildBehavior.ignore.getter();
  unint64_t v47 = sub_100919850();
  uint64_t v48 = v97;
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v101 + 8))(v46, v104);
  sub_100178110((uint64_t)v21, &qword_100EA0FE0);
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v49._uint64_t countAndFlagsBits = 0;
  v49._uint64_t object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v49);
  uint64_t v101 = v30;
  v50._uint64_t countAndFlagsBits = v30;
  uint64_t v51 = v96;
  v50._uint64_t object = v29;
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v50);
  v52._uint64_t countAndFlagsBits = 8250;
  v52._uint64_t object = (void *)0xE200000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v52);
  v53._uint64_t countAndFlagsBits = v51;
  uint64_t v104 = (uint64_t)v43;
  v53._uint64_t object = v43;
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v53);
  v54._uint64_t countAndFlagsBits = 0;
  v54._uint64_t object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v54);
  LocalizedStringKey.init(stringInterpolation:)();
  uint64_t v107 = v45;
  unint64_t v108 = v47;
  swift_getOpaqueTypeConformance2();
  uint64_t v55 = (uint64_t)v100;
  uint64_t v56 = v102;
  View.accessibilityLabel(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v48, v56);
  sub_10024D364(v55, v105, &qword_100EA0FF0);
  uint64_t v57 = v106 + *(int *)(type metadata accessor for WindDataTableView(0) + 28);
  uint64_t v58 = type metadata accessor for WindComponentViewModel();
  uint64_t v60 = sub_100304314(*(void *)(v57 + *(int *)(v58 + 72)));
  uint64_t v62 = v61;
  uint64_t v64 = v63;
  if (!v59)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10021A144(v101, v44);
    sub_10021A144(v60, 0);
LABEL_16:
    uint64_t v68 = v94;
    uint64_t v69 = (uint64_t)v93;
    uint64_t v70 = v92;
    uint64_t v71 = (uint64_t)v91;
    goto LABEL_17;
  }
  BOOL v65 = v101 == v60 && v59 == v44;
  if (!v65 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  if (v51 == v62 && v64 == v104)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v72 = 1;
    uint64_t v68 = v94;
    uint64_t v69 = (uint64_t)v93;
    uint64_t v70 = v92;
    uint64_t v71 = (uint64_t)v91;
    goto LABEL_18;
  }
  char v67 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v68 = v94;
  uint64_t v69 = (uint64_t)v93;
  uint64_t v70 = v92;
  uint64_t v71 = (uint64_t)v91;
  if ((v67 & 1) == 0)
  {
LABEL_17:
    unint64_t v73 = v85;
    Divider.init()();
    uint64_t v74 = v87;
    static DividerStyle<>.primary.getter();
    sub_10091996C(&qword_100E66F38, (void (*)(uint64_t))&type metadata accessor for Divider);
    sub_10091996C(&qword_100E66F40, (void (*)(uint64_t))&type metadata accessor for PrimaryDividerStyle);
    uint64_t v75 = v83;
    uint64_t v76 = v88;
    uint64_t v77 = v90;
    View.dividerStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v89 + 8))(v74, v77);
    (*(void (**)(char *, uint64_t))(v86 + 8))(v73, v76);
    (*(void (**)(uint64_t, char *, uint64_t))(v84 + 32))(v71, v75, v70);
    uint64_t v72 = 0;
    goto LABEL_18;
  }
  uint64_t v72 = 1;
LABEL_18:
  uint64_t v78 = (uint64_t)v95;
  uint64_t v79 = v105;
  _s7Weather24LocationCompositionStateOwst_0(v71, v72, 1, v70);
  sub_1001B7204(v79, v78, &qword_100EA0FF0);
  sub_1001B7204(v71, v69, &qword_100E78E78);
  sub_1001B7204(v78, v68, &qword_100EA0FF0);
  uint64_t v80 = sub_10017DF08(&qword_100EA1018);
  sub_1001B7204(v69, v68 + *(int *)(v80 + 48), &qword_100E78E78);
  sub_100178110(v71, &qword_100E78E78);
  sub_100178110(v79, &qword_100EA0FF0);
  sub_100178110(v69, &qword_100E78E78);
  return sub_100178110(v78, &qword_100EA0FF0);
}

uint64_t sub_100918CC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v93 = a5;
  uint64_t v98 = a4;
  uint64_t v96 = a3;
  uint64_t v112 = a6;
  uint64_t v8 = type metadata accessor for _BlendModeEffect();
  __chkstk_darwin(v8 - 8);
  uint64_t v111 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for BlendMode();
  uint64_t v109 = *(void *)(v10 - 8);
  uint64_t v110 = v10;
  __chkstk_darwin(v10);
  uint64_t v107 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = type metadata accessor for WindDataTableView(0);
  __chkstk_darwin(v100);
  uint64_t v95 = (char *)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for ColorSchemeContrast();
  uint64_t v97 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v94 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v92 = (char *)&v82 - v15;
  uint64_t v104 = sub_10017DF08(&qword_100EA1020);
  __chkstk_darwin(v104);
  uint64_t v108 = (uint64_t)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v105 = (char *)&v82 - v18;
  __chkstk_darwin(v19);
  uint64_t v106 = (uint64_t)&v82 - v20;
  uint64_t v21 = type metadata accessor for Font.TextStyle();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v82 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = a1;
  uint64_t v114 = a2;
  unint64_t v89 = sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v25 = Text.init<A>(_:)();
  uint64_t v27 = v26;
  char v29 = v28 & 1;
  unsigned int v88 = enum case for Font.TextStyle.subheadline(_:);
  uint64_t v30 = *(void (**)(void))(v22 + 104);
  uint64_t v86 = v22 + 104;
  uint64_t v87 = (void (*)(char *, void, uint64_t))v30;
  uint64_t v83 = v21;
  v30(v24);
  static Font.Weight.medium.getter();
  static Font.system(_:weight:)();
  uint64_t v31 = *(void (**)(char *, uint64_t))(v22 + 8);
  uint64_t v84 = v22 + 8;
  uint64_t v85 = v31;
  v31(v24, v21);
  uint64_t v32 = Text.font(_:)();
  uint64_t v34 = v33;
  char v36 = v35;
  swift_release();
  sub_100191924(v25, v27, v29);
  swift_bridgeObjectRelease();
  LODWORD(v113) = static HierarchicalShapeStyle.primary.getter();
  uint64_t v37 = Text.foregroundStyle<A>(_:)();
  uint64_t v101 = v38;
  uint64_t v102 = v37;
  int v90 = v39;
  uint64_t v103 = v40;
  sub_100191924(v32, v34, v36 & 1);
  swift_bridgeObjectRelease();
  uint64_t v41 = v93;
  uint64_t v42 = *(void *)v93;
  LOBYTE(v22) = *(unsigned char *)(v93 + 8);
  sub_100195B7C(*(void *)v93, v22);
  sub_100147CF4();
  int v91 = v43;
  sub_10018F6D8(v42, v22);
  uint64_t v113 = v96;
  uint64_t v114 = v98;
  swift_bridgeObjectRetain();
  uint64_t v44 = Text.init<A>(_:)();
  uint64_t v46 = v45;
  LOBYTE(v27) = v47 & 1;
  uint64_t v48 = v83;
  v87(v24, v88, v83);
  static Font.Weight.medium.getter();
  static Font.system(_:weight:)();
  v85(v24, v48);
  uint64_t v96 = Text.font(_:)();
  uint64_t v50 = v49;
  LODWORD(v89) = v51;
  uint64_t v98 = v52;
  swift_release();
  char v53 = v27;
  uint64_t v54 = (uint64_t)v95;
  sub_100191924(v44, v46, v53);
  uint64_t v55 = v100;
  swift_bridgeObjectRelease();
  uint64_t v56 = v92;
  sub_10014BB38();
  uint64_t v57 = v97;
  uint64_t v58 = v94;
  uint64_t v59 = v99;
  (*(void (**)(char *, void, uint64_t))(v97 + 104))(v94, enum case for ColorSchemeContrast.increased(_:), v99);
  LOBYTE(v48) = static ColorSchemeContrast.== infix(_:_:)();
  uint64_t v60 = *(void (**)(char *, uint64_t))(v57 + 8);
  v60(v58, v59);
  v60(v56, v59);
  sub_100915CDC(v41, v54, (void (*)(void))type metadata accessor for WindDataTableView);
  if (v48)
  {
    sub_100915DBC(v54, (void (*)(void))type metadata accessor for WindDataTableView);
    double v61 = 1.0;
  }
  else
  {
    uint64_t v62 = v54 + *(int *)(v55 + 24);
    uint64_t v63 = *(void *)v62;
    char v64 = *(unsigned char *)(v62 + 8);
    sub_100195B7C(*(void *)v62, v64);
    sub_100149AE8();
    char v66 = v65;
    sub_10018F6D8(v63, v64);
    sub_100915DBC(v54, (void (*)(void))type metadata accessor for WindDataTableView);
    if (v66) {
      double v61 = 1.0;
    }
    else {
      double v61 = 0.27;
    }
  }
  char v67 = v89 & 1;
  char v68 = v90 & 1;
  uint64_t v70 = v109;
  uint64_t v69 = v110;
  uint64_t v71 = v107;
  (*(void (**)(char *, void, uint64_t))(v109 + 104))(v107, enum case for BlendMode.plusLighter(_:), v110);
  uint64_t v72 = (uint64_t)v111;
  (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v111, v71, v69);
  uint64_t v73 = (uint64_t)v105;
  sub_100915CDC(v72, (uint64_t)&v105[*(int *)(v104 + 36)], (void (*)(void))&type metadata accessor for _BlendModeEffect);
  uint64_t v74 = v96;
  *(void *)uint64_t v73 = v96;
  *(void *)(v73 + 8) = v50;
  *(unsigned char *)(v73 + 16) = v67;
  *(void *)(v73 + 24) = v98;
  *(double *)(v73 + 32) = v61;
  sub_100190CC4(v74, v50, v67);
  swift_bridgeObjectRetain();
  sub_100915DBC(v72, (void (*)(void))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v69);
  sub_100191924(v74, v50, v67);
  swift_bridgeObjectRelease();
  uint64_t v75 = v106;
  sub_10024D364(v73, v106, &qword_100EA1020);
  uint64_t v76 = v108;
  sub_1001B7204(v75, v108, &qword_100EA1020);
  uint64_t v77 = v112;
  uint64_t v79 = v101;
  uint64_t v78 = v102;
  *uint64_t v112 = v102;
  v77[1] = v79;
  *((unsigned char *)v77 + 16) = v68;
  v77[3] = v103;
  *((unsigned char *)v77 + 32) = 0;
  *((unsigned char *)v77 + 33) = (v91 & 1) == 0;
  v77[5] = 0x4024000000000000;
  *((unsigned char *)v77 + 48) = 0;
  uint64_t v80 = sub_10017DF08(&qword_100EA1028);
  sub_1001B7204(v76, (uint64_t)v77 + *(int *)(v80 + 64), &qword_100EA1020);
  sub_100190CC4(v78, v79, v68);
  swift_bridgeObjectRetain();
  sub_100178110(v75, &qword_100EA1020);
  sub_100178110(v76, &qword_100EA1020);
  sub_100191924(v78, v79, v68);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1009195E4()
{
  uint64_t v1 = type metadata accessor for WindDataTableView(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  sub_10018F6D8(*(void *)(v0 + v3), *(unsigned char *)(v0 + v3 + 8));
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for ColorSchemeContrast();
    sub_100162E4C();
    sub_100162F0C();
    v4();
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(v0 + v3 + *(int *)(v1 + 24)), *(unsigned char *)(v0 + v3 + *(int *)(v1 + 24) + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for WindComponentViewModel();
  type metadata accessor for WindComponentCompassViewModel();
  sub_100162E4C();
  sub_100162F0C();
  v5();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1009197D0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for WindDataTableView(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1009180D0(a1, v6, a2);
}

unint64_t sub_100919850()
{
  unint64_t result = qword_100EA1000;
  if (!qword_100EA1000)
  {
    sub_10018C6DC(&qword_100EA0FE0);
    sub_1009198CC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1000);
  }
  return result;
}

unint64_t sub_1009198CC()
{
  unint64_t result = qword_100EA1008;
  if (!qword_100EA1008)
  {
    sub_10018C6DC(&qword_100EA0FD8);
    sub_1001246C8(&qword_100EA1010, &qword_100EA0FD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1008);
  }
  return result;
}

uint64_t sub_10091996C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1009199C4()
{
  return sub_1001246C8(&qword_100EA1048, &qword_100EA1050);
}

unint64_t sub_100919A04()
{
  unint64_t result = qword_100EA1058;
  if (!qword_100EA1058)
  {
    sub_10018C6DC(&qword_100EA1038);
    sub_1001246C8(&qword_100EA1060, &qword_100E78ED8);
    sub_1001246C8(&qword_100EA1068, &qword_100EA1030);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1058);
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeAndWorkAddedTip()
{
  return &type metadata for HomeAndWorkAddedTip;
}

uint64_t sub_100919AE0()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_100919B4C()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_100919BB4()
{
  uint64_t v0 = sub_10017DF08(&qword_100E6C0C0);
  __chkstk_darwin(v0 - 8);
  sub_1001626E0();
  uint64_t v3 = v2 - v1;
  Image.init(_internalSystemName:)();
  static SymbolRenderingMode.hierarchical.getter();
  uint64_t v4 = type metadata accessor for SymbolRenderingMode();
  _s7Weather24LocationCompositionStateOwst_0(v3, 0, 1, v4);
  uint64_t v5 = Image.symbolRenderingMode(_:)();
  swift_release();
  sub_100318DA8(v3);
  return v5;
}

void *sub_100919C84()
{
  uint64_t v1 = type metadata accessor for Tips.Action();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  sub_10011BFD8();
  Tips.Action.init(id:perform:_:)();
  sub_10017DF08(&qword_100E65410);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100C251B0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v2 + 32))(v4 + v3, v0, v1);
  uint64_t v5 = sub_1003B5BD4(v4);
  swift_setDeallocating();
  sub_1006BB0D4();
  return v5;
}

uint64_t sub_100919E00()
{
  uint64_t v0 = type metadata accessor for Font.TextStyle();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v4 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Font.TextStyle.body(_:), v0);
  static Font.Weight.medium.getter();
  static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v9 = Text.font(_:)();
  swift_release();
  sub_100191924(v4, v6, v8);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_100919FCC()
{
  sub_10017DF08(&qword_100E653D0);
  sub_100179C0C();
  __chkstk_darwin(v0);
  sub_100109314();
  sub_10017DF08(&qword_100E653D8);
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_100109314();
  uint64_t v2 = type metadata accessor for Tips.IgnoresDisplayFrequency();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  sub_10017DF08(&qword_100E653E0);
  sub_100179C0C();
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v10 = type metadata accessor for Tips.MaxDisplayCount();
  sub_100179C0C();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  sub_10017DF08(&qword_100E653E8);
  sub_100179C0C();
  __chkstk_darwin(v17);
  sub_1001626E0();
  Tips.MaxDisplayCount.init(_:)();
  static Tips.OptionsBuilder.buildExpression<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v16, v10);
  Tips.IgnoresDisplayFrequency.init(_:)();
  static Tips.OptionsBuilder.buildExpression<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
  swift_getOpaqueTypeConformance2();
  static Tips.OptionsBuilder.buildPartialBlock<A>(first:)();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  static Tips.OptionsBuilder.buildPartialBlock<A, B>(accumulated:next:)();
  swift_getOpaqueTypeConformance2();
  uint64_t v18 = static Tips.OptionsBuilder.buildFinalResult<A>(_:)();
  sub_100162F0C();
  v19();
  sub_100162F0C();
  v20();
  sub_100162F0C();
  v21();
  sub_100162F0C();
  v22();
  return v18;
}

uint64_t sub_10091A3A4()
{
  uint64_t v0 = sub_10017DF08(&qword_100E63520);
  sub_100097814(v0, qword_100F520E8);
  sub_1002102B0(v0, (uint64_t)qword_100F520E8);
  sub_10017DF08(&qword_100E65408);
  type metadata accessor for Tips.ParameterOption();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C251B0;
  static Tips.ParameterOption.transient.getter();
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t sub_10091A4E4()
{
  uint64_t v1 = sub_10017DF08(&qword_100E63520);
  sub_100179C0C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_10011BFD8();
  uint64_t v5 = type metadata accessor for Tips.Rule();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  if (qword_100E628A0 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1002102B0(v1, (uint64_t)qword_100F520E8);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, v12, v1);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
  uint64_t v13 = static Tips.RuleBuilder.buildPartialBlock(first:)();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_10091A694()
{
  return sub_100919AE0();
}

uint64_t sub_10091A6CC@<X0>(uint64_t *a1@<X8>)
{
  sub_10023AC4C();
  uint64_t result = Tip.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_10091A710()
{
  unint64_t result = qword_100EA1070;
  if (!qword_100EA1070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1070);
  }
  return result;
}

char *sub_10091A75C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t a1))
{
  v821 = a3;
  v822 = (char *)a2;
  uint64_t v793 = a1;
  uint64_t v3 = sub_10017DF08(&qword_100E663D0);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v6 = sub_100109328(v5);
  uint64_t v814 = type metadata accessor for ViewState.SecondaryViewState(v6);
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100109314();
  v772 = (uint64_t *)v8;
  uint64_t v9 = sub_10017DF08(&qword_100E639E8);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v800 = v11;
  uint64_t v12 = sub_10017DF08(&qword_100E70A78);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_100109314();
  uint64_t v15 = sub_100109328(v14);
  uint64_t v815 = type metadata accessor for ModalViewState(v15);
  sub_100162E4C();
  __chkstk_darwin(v16);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v17);
  sub_100128F8C();
  uint64_t v19 = sub_100109328(v18);
  v817 = (int *)type metadata accessor for SearchViewState(v19);
  sub_100162E4C();
  __chkstk_darwin(v20);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v21);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v22);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v23);
  sub_100128F8C();
  sub_100109328(v24);
  uint64_t v25 = type metadata accessor for SearchLocation();
  uint64_t v26 = sub_100109308(v25);
  __chkstk_darwin(v26);
  sub_100109314();
  sub_100109328(v27);
  uint64_t v798 = type metadata accessor for LocationOfInterest();
  sub_100179C0C();
  uint64_t v797 = v28;
  __chkstk_darwin(v29);
  sub_100109314();
  sub_100109328(v30);
  uint64_t v803 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v802 = v31;
  __chkstk_darwin(v32);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v33);
  sub_100128F8C();
  uint64_t v794 = v34;
  uint64_t v35 = sub_10017DF08(&qword_100E663F0);
  uint64_t v36 = sub_100109308(v35);
  __chkstk_darwin(v36);
  sub_100109314();
  uint64_t v811 = v37;
  uint64_t v38 = sub_10017DF08(&qword_100E663F8);
  uint64_t v39 = sub_100109308(v38);
  __chkstk_darwin(v39);
  sub_100109314();
  v812 = (char *)v40;
  uint64_t v41 = sub_10017DF08(&qword_100E66400);
  uint64_t v42 = sub_100109308(v41);
  __chkstk_darwin(v42);
  sub_100109314();
  uint64_t v813 = v43;
  uint64_t v44 = sub_10017DF08(&qword_100E66408);
  uint64_t v45 = sub_100109308(v44);
  __chkstk_darwin(v45);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v46);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v47);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v48);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v49);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v50);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v51);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v52);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v53);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v54);
  sub_100128F8C();
  v806 = (void *)v55;
  uint64_t v56 = sub_10017DF08(&qword_100E66410);
  uint64_t v57 = sub_100109308(v56);
  __chkstk_darwin(v57);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v58);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v59);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v60);
  sub_100128F8C();
  v807 = v61;
  uint64_t v62 = sub_10017DF08(&qword_100E66418);
  uint64_t v63 = sub_100109308(v62);
  __chkstk_darwin(v63);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v64);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v65);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v66);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v67);
  sub_100128F8C();
  uint64_t v804 = v68;
  uint64_t v69 = sub_10017DF08(&qword_100E66420);
  uint64_t v70 = sub_100109308(v69);
  __chkstk_darwin(v70);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v71);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v72);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v73);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v74);
  sub_100128F8C();
  uint64_t v808 = v75;
  uint64_t v76 = sub_10017DF08(&qword_100E66428);
  uint64_t v77 = sub_100109308(v76);
  __chkstk_darwin(v77);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v78);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v79);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v80);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v81);
  sub_100128F8C();
  uint64_t v810 = v82;
  uint64_t v83 = sub_10017DF08(&qword_100E66430);
  uint64_t v84 = sub_100109308(v83);
  __chkstk_darwin(v84);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v85);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v86);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v87);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v88);
  sub_100128F8C();
  uint64_t v816 = v89;
  uint64_t v90 = sub_10017DF08(&qword_100E66438);
  uint64_t v91 = sub_100109308(v90);
  __chkstk_darwin(v91);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v92);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v93);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v94);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v95);
  sub_100128F8C();
  uint64_t v818 = v96;
  uint64_t v97 = sub_10017DF08(&qword_100E66440);
  uint64_t v98 = sub_100109308(v97);
  __chkstk_darwin(v98);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v99);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v100);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v101);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v102);
  sub_100128F8C();
  uint64_t v819 = v103;
  v820 = (int *)type metadata accessor for ViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v104);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v105);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v106);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v107);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v108);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v109);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v110);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v111);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v112);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v113);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v114);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v115);
  uint64_t v117 = (uint64_t *)&v747[-v116];
  __chkstk_darwin(v118);
  sub_100109770();
  uint64_t v805 = v119;
  __chkstk_darwin(v120);
  uint64_t v122 = (uint64_t *)&v747[-v121];
  uint64_t v123 = type metadata accessor for CodableError();
  sub_100179C0C();
  uint64_t v125 = v124;
  __chkstk_darwin(v126);
  uint64_t v128 = &v747[-((v127 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v809 = type metadata accessor for SearchViewState.ViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v129);
  uint64_t v131 = &v747[-((v130 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v132);
  uint64_t v134 = &v747[-v133];
  __chkstk_darwin(v135);
  uint64_t v137 = &v747[-v136];
  type metadata accessor for SearchViewAction();
  sub_100162E4C();
  __chkstk_darwin(v138);
  uint64_t v140 = &v747[-((v139 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10091EF44((uint64_t)v821, (uint64_t)v140, (void (*)(void))type metadata accessor for SearchViewAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v155 = *(void *)v140;
      uint64_t v156 = sub_10018363C();
      sub_10091EF44(v156, (uint64_t)v134, (void (*)(void))type metadata accessor for SearchViewState.ViewState);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v131 = v822;
      switch(EnumCaseMultiPayload)
      {
        case 1:
          swift_bridgeObjectRelease();
          break;
        case 2:
          break;
        case 3:
        case 4:
          swift_bridgeObjectRelease();
          goto LABEL_73;
        default:
          sub_10013F118((uint64_t)v134, (void (*)(void))type metadata accessor for SearchViewState.ViewState);
          break;
      }
      *(void *)uint64_t v137 = v155;
      swift_storeEnumTagMultiPayload();
      uint64_t v308 = (uint64_t)v137;
      uint64_t v309 = 0;
      uint64_t v310 = (uint64_t)v131;
      goto LABEL_66;
    case 2u:
      uint64_t v159 = *(void *)v140;
      uint64_t v158 = *((void *)v140 + 1);
      uint64_t v160 = sub_10018363C();
      sub_10091EF44(v160, (uint64_t)v131, (void (*)(void))type metadata accessor for SearchViewState.ViewState);
      int v161 = swift_getEnumCaseMultiPayload();
      if ((v161 - 2) >= 3)
      {
        if (v161) {
          *(void *)uint64_t v137 = *(void *)v131;
        }
        else {
          sub_10013F118((uint64_t)v131, (void (*)(void))type metadata accessor for SearchViewState.ViewState);
        }
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v131 = (char *)sub_10091E0E0((uint64_t)v137, v159, v158, (uint64_t)v822);
      swift_bridgeObjectRelease();
      goto LABEL_67;
    case 3u:
      sub_10012B6DC();
      sub_1001627D4();
      v162();
      uint64_t v163 = type metadata accessor for AppConfigurationState();
      uint64_t v166 = sub_10017E050(v819, v164, v165, v163);
      uint64_t v167 = sub_10017D800(v166);
      uint64_t v170 = sub_10017A5E0(v816, v168, v169, v167);
      uint64_t v171 = v810;
      uint64_t v174 = sub_10017A0E0(v810, v172, v173, v170);
      uint64_t v175 = v808;
      sub_100163050(v808, v176, v177, v174);
      uint64_t v178 = (uint64_t)v822;
      sub_10019DFE0((uint64_t)&v822[OBJC_IVAR____TtCV7Weather9MainState8_Storage_view], v179, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v180 = sub_1001A00CC();
      uint64_t v181 = v813;
      uint64_t v184 = sub_100180710(v813, v182, v183, v180);
      sub_1001D1FB4(v184);
      sub_1001781AC((uint64_t)v140, &qword_100E663F8);
      sub_1001781AC(v181, &qword_100E66400);
      sub_1001781AC((uint64_t)v137, &qword_100E66408);
      sub_1001781AC((uint64_t)v131, &qword_100E66410);
      sub_10013F118((uint64_t)v128, (void (*)(void))type metadata accessor for ViewState);
      sub_10017B474();
      uint64_t v185 = v794;
      uint64_t v186 = v803;
      sub_100162808();
      v187();
      type metadata accessor for PreviewLocation();
      swift_storeEnumTagMultiPayload();
      type metadata accessor for LocationPreviewViewState(0);
      sub_10019D2D0();
      sub_100191288();
      sub_100182624();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v128, 0, 1, v181);
      uint64_t v743 = v178;
      uint64_t v739 = v171;
      uint64_t v188 = v171;
      uint64_t v190 = v818;
      uint64_t v189 = v819;
      uint64_t v191 = v816;
      sub_100163034(0, 3, v819, v818, v816, v192, v193, v194, 0, v739, v175, (uint64_t)v117, (uint64_t)v128, 0, 0, 0, 0, 0, 0,
        0,
        v743);
      sub_100185DE4();
      sub_1001781AC((uint64_t)v128, &qword_100E663F0);
      sub_1001781AC((uint64_t)v117, &qword_100E66418);
      sub_1001781AC(v175, &qword_100E66420);
      sub_1001781AC(v188, &qword_100E66428);
      sub_1001781AC(v191, &qword_100E66430);
      sub_1001781AC(v190, &qword_100E66438);
      sub_1001781AC(v189, &qword_100E66440);
      uint64_t v195 = &v826;
      goto LABEL_15;
    case 4u:
      sub_10012B6DC();
      sub_1001627D4();
      v196();
      uint64_t v197 = type metadata accessor for AppConfigurationState();
      uint64_t v200 = sub_10017E050(v819, v198, v199, v197);
      uint64_t v201 = sub_10017D800(v200);
      uint64_t v204 = sub_10017A5E0(v816, v202, v203, v201);
      uint64_t v205 = v810;
      uint64_t v208 = sub_10017A0E0(v810, v206, v207, v204);
      uint64_t v209 = v808;
      sub_100163050(v808, v210, v211, v208);
      uint64_t v212 = (uint64_t)v822;
      sub_10019DFE0((uint64_t)&v822[OBJC_IVAR____TtCV7Weather9MainState8_Storage_view], v213, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v214 = sub_1001A00CC();
      uint64_t v215 = v813;
      uint64_t v218 = sub_100180710(v813, v216, v217, v214);
      sub_1001D1FB4(v218);
      sub_1001781AC((uint64_t)v140, &qword_100E663F8);
      sub_1001781AC(v215, &qword_100E66400);
      sub_1001781AC((uint64_t)v137, &qword_100E66408);
      sub_1001781AC((uint64_t)v131, &qword_100E66410);
      sub_10013F118((uint64_t)v128, (void (*)(void))type metadata accessor for ViewState);
      sub_10017B474();
      uint64_t v185 = v795;
      uint64_t v186 = v798;
      sub_100162808();
      v219();
      type metadata accessor for PreviewLocation();
      swift_storeEnumTagMultiPayload();
      type metadata accessor for LocationPreviewViewState(0);
      sub_10019D2D0();
      sub_100191288();
      sub_100182624();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v128, 0, 1, v215);
      uint64_t v744 = v212;
      uint64_t v740 = v205;
      uint64_t v220 = v205;
      uint64_t v222 = v818;
      uint64_t v221 = v819;
      uint64_t v223 = v816;
      sub_100163034(0, 3, v819, v818, v816, v224, v225, v226, 0, v740, v209, (uint64_t)v117, (uint64_t)v128, 0, 0, 0, 0, 0, 0,
        0,
        v744);
      sub_100185DE4();
      sub_1001781AC((uint64_t)v128, &qword_100E663F0);
      sub_1001781AC((uint64_t)v117, &qword_100E66418);
      sub_1001781AC(v209, &qword_100E66420);
      sub_1001781AC(v220, &qword_100E66428);
      sub_1001781AC(v223, &qword_100E66430);
      sub_1001781AC(v222, &qword_100E66438);
      sub_1001781AC(v221, &qword_100E66440);
      uint64_t v195 = &v825;
LABEL_15:
      (*(void (**)(uint64_t, uint64_t))(*(v195 - 32) + 8))(v185, v186);
      return v131;
    case 5u:
      sub_10011E66C((uint64_t)v140, (uint64_t)v799, (void (*)(void))type metadata accessor for SearchLocation);
      uint64_t v227 = type metadata accessor for AppConfigurationState();
      uint64_t v230 = sub_10017E050(v819, v228, v229, v227);
      uint64_t v231 = sub_10017D800(v230);
      uint64_t v232 = v816;
      uint64_t v235 = sub_10017A5E0(v816, v233, v234, v231);
      uint64_t v236 = v810;
      uint64_t v239 = sub_10017A0E0(v810, v237, v238, v235);
      uint64_t v240 = v808;
      sub_100163050(v808, v241, v242, v239);
      uint64_t v243 = (uint64_t)v822;
      sub_10019DFE0((uint64_t)&v822[OBJC_IVAR____TtCV7Weather9MainState8_Storage_view], v244, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v245 = sub_1001A00CC();
      uint64_t v246 = v813;
      uint64_t v249 = sub_100180710(v813, v247, v248, v245);
      sub_1001D1FB4(v249);
      sub_1001781AC((uint64_t)v140, &qword_100E663F8);
      sub_1001781AC(v246, &qword_100E66400);
      sub_1001781AC((uint64_t)v137, &qword_100E66408);
      sub_1001781AC((uint64_t)v131, &qword_100E66410);
      sub_10013F118((uint64_t)v128, (void (*)(void))type metadata accessor for ViewState);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v117, 0, 1, (uint64_t)v820);
      uint64_t v140 = v799;
      uint64_t v250 = v811;
      sub_10091EF44((uint64_t)v799, v811, (void (*)(void))type metadata accessor for SearchLocation);
      type metadata accessor for PreviewLocation();
      swift_storeEnumTagMultiPayload();
      type metadata accessor for LocationPreviewViewState(0);
      sub_10019D2D0();
      sub_100191288();
      sub_100182624();
      _s7Weather24LocationCompositionStateOwst_0(v250, 0, 1, v246);
      uint64_t v745 = v243;
      uint64_t v252 = v818;
      uint64_t v251 = v819;
      sub_100163034(0, 3, v819, v818, v232, v253, v254, v255, 0, v236, v240, (uint64_t)v117, v250, 0, 0, 0, 0, 0, 0,
        0,
        v745);
      sub_100185DE4();
      sub_1001781AC(v250, &qword_100E663F0);
      sub_1001781AC((uint64_t)v117, &qword_100E66418);
      sub_1001781AC(v240, &qword_100E66420);
      sub_1001781AC(v236, &qword_100E66428);
      sub_1001781AC(v232, &qword_100E66430);
      sub_1001781AC(v252, &qword_100E66438);
      sub_1001781AC(v251, &qword_100E66440);
      v256 = (uint64_t (*)(uint64_t))type metadata accessor for SearchLocation;
      goto LABEL_57;
    case 6u:
      uint64_t v257 = v802;
      uint64_t v258 = v803;
      sub_1001627D4();
      v259();
      uint64_t v131 = v822;
      uint64_t v260 = (uint64_t)&v822[OBJC_IVAR____TtCV7Weather9MainState8_Storage_view];
      uint64_t v261 = v767;
      sub_10091EF44((uint64_t)&v822[OBJC_IVAR____TtCV7Weather9MainState8_Storage_view], v767, (void (*)(void))type metadata accessor for ViewState);
      sub_1001CA908();
      sub_10052E3A0(v262, v263);
      sub_10013F118(v261, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v264 = (uint64_t)v817;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v140, 1, (uint64_t)v817) == 1)
      {
        sub_1001781AC((uint64_t)v140, &qword_100E66408);
        uint64_t v265 = type metadata accessor for AppConfigurationState();
        uint64_t v266 = v258;
        uint64_t v267 = v264;
        uint64_t v270 = sub_10017E050(v819, v268, v269, v265);
        uint64_t v271 = sub_10017D800(v270);
        uint64_t v274 = sub_10017A5E0(v816, v272, v273, v271);
        uint64_t v275 = v810;
        uint64_t v278 = sub_10017A0E0(v810, v276, v277, v274);
        uint64_t v279 = v808;
        sub_100163050(v808, v280, v281, v278);
        uint64_t v282 = v805;
        sub_10091EF44(v260, v805, (void (*)(void))type metadata accessor for ViewState);
        sub_100165360();
        v283 = v806;
        swift_storeEnumTagMultiPayload();
        sub_100162808();
        v284();
        uint64_t v285 = sub_100163DF4();
        _s7Weather24LocationCompositionStateOwst_0(v285, v286, v287, v266);
        void *v283 = 0;
        v283[1] = 0xE000000000000000;
        *((unsigned char *)v283 + *(int *)(v267 + 24)) = 0;
        uint64_t v288 = sub_100182C6C();
        uint64_t v291 = sub_100182C98(v288, v289, v290, v267);
        uint64_t v292 = v813;
        uint64_t v295 = sub_100180710(v813, v293, v294, v291);
        uint64_t v296 = (uint64_t)v812;
        sub_100163050((uint64_t)v812, v297, v298, v295);
        uint64_t v299 = v257;
        uint64_t v300 = v804;
        sub_1001D1670();
        sub_10011D8AC();
        sub_1001781AC(v296, &qword_100E663F8);
        sub_1001781AC(v292, &qword_100E66400);
        sub_1001781AC((uint64_t)v283, &qword_100E66408);
        sub_1001781AC((uint64_t)v131, &qword_100E66410);
        sub_10013F118(v282, (void (*)(void))type metadata accessor for ViewState);
        _s7Weather24LocationCompositionStateOwst_0(v300, 0, 1, (uint64_t)v820);
        uint64_t v301 = v811;
        _s7Weather24LocationCompositionStateOwst_0(v811, 1, 1, v815);
        sub_100188BF0();
        uint64_t v303 = v818;
        uint64_t v302 = v819;
        uint64_t v304 = v816;
        sub_100163034(0, 3, v819, v818, v816, v305, v306, v307, 0, v275, v279, (uint64_t)v750, v751, v752, v753, v754, v755, v756, v757,
          v758,
          v759);
        sub_100185DE4();
        sub_1001781AC(v301, &qword_100E663F0);
        sub_1001781AC(v300, &qword_100E66418);
        sub_1001781AC(v279, &qword_100E66420);
        sub_1001781AC(v275, &qword_100E66428);
        sub_1001781AC(v304, &qword_100E66430);
        sub_1001781AC(v303, &qword_100E66438);
        sub_1001781AC(v302, &qword_100E66440);
        (*(void (**)(uint64_t, uint64_t))(v299 + 8))(v779, v803);
      }
      else
      {
        uint64_t v487 = v760;
        sub_10011E66C((uint64_t)v140, v760, (void (*)(void))type metadata accessor for SearchViewState);
        uint64_t v488 = type metadata accessor for AppConfigurationState();
        uint64_t v491 = sub_10017E050(v819, v489, v490, v488);
        uint64_t v492 = sub_10017D800(v491);
        uint64_t v495 = sub_10017A5E0(v816, v493, v494, v492);
        uint64_t v498 = sub_10017A0E0(v810, v496, v497, v495);
        uint64_t v499 = v808;
        sub_100163050(v808, v500, v501, v498);
        uint64_t v502 = v805;
        sub_10091EF44(v260, v805, (void (*)(void))type metadata accessor for ViewState);
        sub_100165360();
        uint64_t v503 = v801;
        _s7Weather24LocationCompositionStateOwst_0(v801, 1, 1, v809);
        uint64_t v504 = v257;
        uint64_t v505 = v800;
        sub_100162808();
        v506();
        _s7Weather24LocationCompositionStateOwst_0(v505, 0, 1, v258);
        uint64_t v507 = (uint64_t)v806;
        sub_10038C8DC();
        sub_1001781AC(v505, &qword_100E639E8);
        sub_1001781AC(v503, &qword_100E70A78);
        uint64_t v508 = sub_100182C98(v507, 0, 1, v264);
        uint64_t v509 = v813;
        uint64_t v512 = sub_100180710(v813, v510, v511, v508);
        uint64_t v513 = (uint64_t)v812;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v812, 1, 1, v512);
        uint64_t v514 = v804;
        sub_10011D8AC();
        sub_1001781AC(v513, &qword_100E663F8);
        sub_1001781AC(v509, &qword_100E66400);
        sub_1001781AC(v507, &qword_100E66408);
        sub_1001781AC((uint64_t)v131, &qword_100E66410);
        sub_10013F118(v502, (void (*)(void))type metadata accessor for ViewState);
        _s7Weather24LocationCompositionStateOwst_0(v514, 0, 1, (uint64_t)v820);
        uint64_t v515 = v811;
        _s7Weather24LocationCompositionStateOwst_0(v811, 1, 1, v815);
        sub_100188BF0();
        uint64_t v516 = v810;
        uint64_t v518 = v818;
        uint64_t v517 = v819;
        uint64_t v519 = v816;
        sub_100163034(0, 3, v819, v818, v816, v520, v521, v522, 0, v810, v499, (uint64_t)v750, v751, v752, v753, v754, v755, v756, v757,
          v758,
          v759);
        sub_100185DE4();
        sub_1001781AC(v515, &qword_100E663F0);
        sub_1001781AC(v514, &qword_100E66418);
        sub_1001781AC(v499, &qword_100E66420);
        sub_1001781AC(v516, &qword_100E66428);
        sub_1001781AC(v519, &qword_100E66430);
        sub_1001781AC(v518, &qword_100E66438);
        sub_1001781AC(v517, &qword_100E66440);
        sub_10013F118(v487, (void (*)(void))type metadata accessor for SearchViewState);
        (*(void (**)(uint64_t, uint64_t))(v504 + 8))(v779, v803);
      }
      return v131;
    case 7u:
      swift_storeEnumTagMultiPayload();
      uint64_t v308 = (uint64_t)v137;
      uint64_t v309 = 0xE000000000000000;
      uint64_t v310 = (uint64_t)v822;
LABEL_66:
      uint64_t v131 = (char *)sub_10091E0E0(v308, 0, v309, v310);
LABEL_67:
      v356 = type metadata accessor for SearchViewState.ViewState;
      v357 = v137;
      goto LABEL_68;
    case 8u:
      uint64_t v131 = v822;
      uint64_t v311 = (uint64_t)&v822[OBJC_IVAR____TtCV7Weather9MainState8_Storage_view];
      sub_10091EF44((uint64_t)&v822[OBJC_IVAR____TtCV7Weather9MainState8_Storage_view], (uint64_t)v122, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v312 = *v122;
      v313 = v820;
      if (*(uint64_t *)((char *)v122 + v820[9] + 8) == 1)
      {
        v314 = self;
        swift_retain();
        id v315 = [v314 currentDevice];
        [v315 userInterfaceIdiom];

        if (*((unsigned char *)v122 + v313[7]) == 1)
        {
          swift_release();
          v316 = type metadata accessor for ViewState;
          uint64_t v317 = (uint64_t)v122;
          goto LABEL_72;
        }
      }
      else
      {
        swift_retain();
      }
      v821 = type metadata accessor for ViewState;
      sub_10013F118((uint64_t)v122, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v523 = type metadata accessor for AppConfigurationState();
      uint64_t v526 = sub_10017E050(v819, v524, v525, v523);
      uint64_t v527 = sub_10017D800(v526);
      uint64_t v530 = sub_10017A5E0(v816, v528, v529, v527);
      uint64_t v531 = v810;
      uint64_t v534 = sub_10017A0E0(v810, v532, v533, v530);
      uint64_t v535 = v808;
      sub_100163050(v808, v536, v537, v534);
      uint64_t v539 = sub_10019DFE0(v311, v538, (void (*)(void))type metadata accessor for ViewState);
      sub_100184D08(v539, v540, v541, v542, v543, v544, v545, v546, v741, v742, 0, 0, 2, 2, v312);
      uint64_t v809 = v312;
      v547 = v807;
      sub_1001821E0((uint64_t)v807);
      uint64_t v548 = (uint64_t)v806;
      uint64_t v549 = sub_1001A197C((uint64_t)v806, 1);
      uint64_t v550 = v813;
      uint64_t v553 = sub_100180710(v813, v551, v552, v549);
      uint64_t v554 = (uint64_t)v812;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v812, 1, 1, v553);
      uint64_t v555 = v804;
      sub_10011D8AC();
      swift_release();
      sub_1001781AC(v554, &qword_100E663F8);
      sub_1001781AC(v550, &qword_100E66400);
      sub_1001781AC(v548, &qword_100E66408);
      sub_1001781AC((uint64_t)v547, &qword_100E66410);
      sub_10013F118(v311, (void (*)(void))v821);
      _s7Weather24LocationCompositionStateOwst_0(v555, 0, 1, (uint64_t)v820);
      uint64_t v556 = v811;
      _s7Weather24LocationCompositionStateOwst_0(v811, 1, 1, v815);
      sub_10018A064();
      uint64_t v442 = v818;
      uint64_t v441 = v819;
      uint64_t v557 = v816;
      sub_100163034(0, 3, v819, v818, v816, v558, v559, v560, 0, v531, v535, v555, v556, v752, v753, v754, v755, v756, v757,
        v758,
        v759);
      sub_100185DE4();
      swift_release();
      sub_1001781AC(v556, &qword_100E663F0);
      sub_1001781AC(v555, &qword_100E66418);
      sub_1001781AC(v535, &qword_100E66420);
      sub_1001781AC(v531, &qword_100E66428);
      uint64_t v448 = v557;
      goto LABEL_46;
    case 9u:
      uint64_t v131 = v822;
      uint64_t v318 = (uint64_t)&v822[OBJC_IVAR____TtCV7Weather9MainState8_Storage_view];
      sub_10091EF44((uint64_t)&v822[OBJC_IVAR____TtCV7Weather9MainState8_Storage_view], (uint64_t)v117, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v319 = *v117;
      v320 = v820;
      if (*(uint64_t *)((char *)v117 + v820[9] + 8) == 1)
      {
        v321 = self;
        swift_retain();
        id v322 = [v321 currentDevice];
        [v322 userInterfaceIdiom];

        if (*((unsigned char *)v117 + v320[7]) == 1)
        {
          swift_release();
          v316 = type metadata accessor for ViewState;
          uint64_t v317 = (uint64_t)v117;
          goto LABEL_72;
        }
      }
      else
      {
        swift_retain();
      }
      v821 = type metadata accessor for ViewState;
      sub_10013F118((uint64_t)v117, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v562 = type metadata accessor for AppConfigurationState();
      uint64_t v565 = sub_10017E050(v774, v563, v564, v562);
      uint64_t v568 = sub_1001630C0(v775, v566, v567, v565);
      uint64_t v571 = sub_10017A5E0(v776, v569, v570, v568);
      uint64_t v574 = sub_10017A0E0(v777, v572, v573, v571);
      sub_100163050(v778, v575, v576, v574);
      uint64_t v578 = sub_10019DFE0(v318, v577, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v819 = v319;
      sub_100184D08(v578, v579, v580, v581, v582, v583, v584, v585, v741, v742, 0, 0, 2, 2, v319);
      v586 = v807;
      sub_1001821E0((uint64_t)v807);
      uint64_t v587 = (uint64_t)v806;
      uint64_t v588 = sub_10018C5C8();
      uint64_t v589 = (uint64_t)v817;
      uint64_t v592 = sub_100182C98(v588, v590, v591, (uint64_t)v817);
      uint64_t v593 = v813;
      uint64_t v596 = sub_100180710(v813, v594, v595, v592);
      uint64_t v597 = (uint64_t)v812;
      sub_100163050((uint64_t)v812, v598, v599, v596);
      v600 = v761;
      sub_1001D1670();
      sub_10011D8AC();
      swift_release();
      sub_1001781AC(v597, &qword_100E663F8);
      sub_1001781AC(v593, &qword_100E66400);
      sub_1001781AC(v587, &qword_100E66408);
      sub_1001781AC((uint64_t)v586, &qword_100E66410);
      sub_10013F118(v318, (void (*)(void))v821);
      v601 = v762;
      v602 = (uint64_t *)((char *)v762 + v320[8]);
      swift_storeEnumTagMultiPayload();
      sub_100162C20((uint64_t)v602 + *(int *)(v589 + 28));
      void *v602 = 0;
      v602[1] = 0xE000000000000000;
      *((unsigned char *)v602 + *(int *)(v589 + 24)) = 0;
      uint64_t v603 = v589;
      uint64_t v604 = (uint64_t)v600;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v602, 0, 1, v603);
      uint64_t v605 = *v600;
      sub_10091EF44((uint64_t)v600 + v320[5], (uint64_t)v601 + v320[5], (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
      char v606 = *((unsigned char *)v600 + v320[6]);
      v607 = self;
      swift_retain();
      id v608 = [v607 currentDevice];
      id v609 = [v608 userInterfaceIdiom];

      if (v609)
      {
        uint64_t v610 = v320[9];
        if (*(void *)(v604 + v610 + 8) == 2) {
          uint64_t v677 = 1;
        }
        else {
          uint64_t v677 = *(unsigned __int8 *)(v604 + v320[7]);
        }
      }
      else
      {
        uint64_t v677 = *(unsigned __int8 *)(v604 + v320[7]);
        uint64_t v610 = v320[9];
      }
      uint64_t v678 = v811;
      uint64_t v679 = v815;
      sub_10091EF44(v604 + v610, (uint64_t)v601 + v610, (void (*)(void))type metadata accessor for DisplayMetrics);
      sub_10091EF44(v604 + v320[10], (uint64_t)v601 + v320[10], (void (*)(void))type metadata accessor for WeatherMapPresentationState);
      char v680 = *(unsigned char *)(v604 + v320[11]);
      uint64_t *v601 = v605;
      *((unsigned char *)v601 + v320[6]) = v606;
      *((unsigned char *)v601 + v320[7]) = v677;
      *((unsigned char *)v601 + v320[11]) = v680;
      sub_10013F118(v604, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v681 = sub_100163DF4();
      _s7Weather24LocationCompositionStateOwst_0(v681, v682, v683, (uint64_t)v320);
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0(v678, 0, 1, v679);
      sub_10018A064();
      v750 = v601;
      uint64_t v751 = v678;
      sub_100176E48();
      uint64_t v684 = sub_1001856B0();
      uint64_t v685 = v774;
      uint64_t v686 = v775;
      uint64_t v687 = v776;
      sub_100163034(v684, v688, v774, v775, v776, v689, v690, v691, v747[0], v748, v749, (uint64_t)v750, v751, v752, v753, v754, v755, v756, v757,
        v758,
        v759);
      sub_100185DE4();
      swift_release();
      sub_1001781AC(v678, &qword_100E663F0);
      sub_1001781AC((uint64_t)v601, &qword_100E66418);
      sub_1001781AC(v605, &qword_100E66420);
      sub_1001781AC(v677, &qword_100E66428);
      sub_1001781AC(v687, &qword_100E66430);
      sub_1001781AC(v686, &qword_100E66438);
      uint64_t v561 = v685;
      goto LABEL_62;
    case 0xAu:
      v323 = v796;
      uint64_t v324 = (uint64_t)v822;
      sub_10091EBF4((uint64_t)v822, v796);
      uint64_t v325 = type metadata accessor for AppConfigurationState();
      uint64_t v328 = sub_10017E050(v819, v326, v327, v325);
      uint64_t v329 = sub_10017D800(v328);
      uint64_t v330 = v816;
      uint64_t v333 = sub_10017A5E0(v816, v331, v332, v329);
      uint64_t v334 = v810;
      uint64_t v337 = sub_10017A0E0(v810, v335, v336, v333);
      uint64_t v338 = v808;
      sub_100163050(v808, v339, v340, v337);
      sub_10019DFE0(v324 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v341, (void (*)(void))type metadata accessor for ViewState);
      sub_100165360();
      uint64_t v342 = (uint64_t)v806;
      sub_10091EF44((uint64_t)v323, (uint64_t)v806, (void (*)(void))type metadata accessor for SearchViewState);
      uint64_t v343 = sub_1001A197C(v342, 0);
      uint64_t v344 = v813;
      uint64_t v347 = sub_100180710(v813, v345, v346, v343);
      uint64_t v348 = (uint64_t)v812;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v812, 1, 1, v347);
      uint64_t v349 = v804;
      sub_10011D8AC();
      sub_1001781AC(v348, &qword_100E663F8);
      sub_1001781AC(v344, &qword_100E66400);
      sub_1001781AC(v342, &qword_100E66408);
      sub_1001781AC((uint64_t)v131, &qword_100E66410);
      sub_10013F118((uint64_t)v128, (void (*)(void))type metadata accessor for ViewState);
      _s7Weather24LocationCompositionStateOwst_0(v349, 0, 1, (uint64_t)v820);
      uint64_t v350 = v811;
      _s7Weather24LocationCompositionStateOwst_0(v811, 1, 1, v815);
      uint64_t v746 = v324;
      uint64_t v352 = v818;
      uint64_t v351 = v819;
      sub_100163034(0, 3, v819, v818, v330, v353, v354, v355, 0, v334, v338, v349, v350, 0, 0, 0, 0, 0, 0,
        0,
        v746);
      sub_100185DE4();
      sub_1001781AC(v350, &qword_100E663F0);
      sub_1001781AC(v349, &qword_100E66418);
      sub_1001781AC(v338, &qword_100E66420);
      sub_1001781AC(v334, &qword_100E66428);
      sub_1001781AC(v330, &qword_100E66430);
      sub_1001781AC(v352, &qword_100E66438);
      sub_1001781AC(v351, &qword_100E66440);
      v356 = type metadata accessor for SearchViewState;
      v357 = (char *)v796;
      goto LABEL_68;
    case 0xBu:
      uint64_t v131 = v822;
      uint64_t v358 = v768;
      sub_10091EF44((uint64_t)&v822[OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView], v768, (void (*)(void))type metadata accessor for ModalViewState);
      sub_1001CA908();
      sub_10091EF44(v359, v360, (void (*)(void))type metadata accessor for ModalViewState);
      uint64_t v361 = v815;
      int v362 = 1 << swift_getEnumCaseMultiPayload();
      uint64_t v363 = v809;
      if ((v362 & 0x3D) != 0)
      {
        sub_10013F118((uint64_t)v140, (void (*)(void))type metadata accessor for ModalViewState);
LABEL_59:
        v316 = type metadata accessor for ModalViewState;
        uint64_t v317 = v358;
        goto LABEL_72;
      }
      if ((v362 & 0x82) != 0) {
        goto LABEL_59;
      }
      sub_10013F118(v358, (void (*)(void))type metadata accessor for ModalViewState);
      uint64_t v693 = type metadata accessor for AppConfigurationState();
      uint64_t v696 = sub_10017E050(v753, v694, v695, v693);
      uint64_t v699 = sub_1001630C0(v754, v697, v698, v696);
      uint64_t v702 = sub_10017A5E0(v755, v700, v701, v699);
      uint64_t v705 = sub_10017A0E0(v756, v703, v704, v702);
      sub_100163050(v757, v706, v707, v705);
      uint64_t v708 = (uint64_t)&v131[OBJC_IVAR____TtCV7Weather9MainState8_Storage_view];
      sub_10091EF44((uint64_t)&v131[OBJC_IVAR____TtCV7Weather9MainState8_Storage_view], v752, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v709 = sub_100166D74((uint64_t)&v781);
      sub_1001887FC(v709, (uint64_t)&v772);
      v710 = v820;
      sub_100179188(v708 + v820[8], (uint64_t)&v773);
      sub_10013F118(v708, (void (*)(void))type metadata accessor for ViewState);
      sub_10017F604();
      if (v382)
      {
        sub_1001781AC((uint64_t)type metadata accessor for ViewState, &qword_100E66408);
        uint64_t v716 = 1;
        uint64_t v717 = v811;
        uint64_t v718 = (uint64_t)v812;
        uint64_t v719 = v813;
        uint64_t v123 = v748;
      }
      else
      {
        uint64_t v711 = v801;
        uint64_t v712 = sub_10018C5C8();
        _s7Weather24LocationCompositionStateOwst_0(v712, v713, v714, v363);
        uint64_t v715 = v800;
        sub_100162C20(v800);
        sub_1001832E8();
        sub_10038C8DC();
        sub_1001781AC(v715, &qword_100E639E8);
        sub_1001781AC(v711, &qword_100E70A78);
        sub_10013F118((uint64_t)type metadata accessor for ViewState, (void (*)(void))type metadata accessor for SearchViewState);
        uint64_t v716 = 0;
        uint64_t v717 = v811;
        uint64_t v718 = (uint64_t)v812;
        uint64_t v719 = v813;
      }
      uint64_t v720 = sub_100182C98(v123, v716, 1, (uint64_t)v122);
      uint64_t v723 = sub_100180710(v719, v721, v722, v720);
      sub_100163050(v718, v724, v725, v723);
      uint64_t v726 = v751;
      uint64_t v727 = v758;
      sub_1001D1670();
      uint64_t v617 = v752;
      sub_10011D8AC();
      sub_1001781AC(v718, &qword_100E663F8);
      sub_1001781AC(v719, &qword_100E66400);
      sub_1001781AC(v123, &qword_100E66408);
      sub_1001781AC(v727, &qword_100E66410);
      sub_10013F118(v617, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v728 = sub_100182C6C();
      _s7Weather24LocationCompositionStateOwst_0(v728, v729, v730, (uint64_t)v710);
      uint64_t v731 = sub_10018C5C8();
      _s7Weather24LocationCompositionStateOwst_0(v731, v732, v733, v361);
      sub_10018B190();
      sub_100176E48();
      uint64_t v734 = sub_1001856B0();
      uint64_t v623 = v753;
      uint64_t v625 = v754;
      uint64_t v633 = v755;
      sub_100163034(v734, v735, v753, v754, v755, v736, v737, v738, v747[0], v748, v749, (uint64_t)v750, v751, v752, v753, v754, v755, v756, v757,
        v758,
        v759);
      sub_100185DE4();
      sub_1001781AC(v717, &qword_100E663F0);
      uint64_t v634 = v726;
LABEL_55:
      sub_1001781AC(v634, &qword_100E66418);
      sub_1001781AC(v617, &qword_100E66420);
      sub_1001781AC(v361, &qword_100E66428);
      sub_1001781AC(v633, &qword_100E66430);
      sub_1001781AC(v625, &qword_100E66438);
      uint64_t v561 = v623;
LABEL_62:
      sub_1001781AC(v561, &qword_100E66440);
      return v131;
    case 0xCu:
      uint64_t v364 = type metadata accessor for AppConfigurationState();
      uint64_t v367 = sub_10017E050(v783, v365, v366, v364);
      uint64_t v370 = sub_1001630C0(v785, v368, v369, v367);
      uint64_t v373 = sub_10017A5E0(v787, v371, v372, v370);
      uint64_t v376 = sub_10017A0E0(v789, v374, v375, v373);
      sub_100163050(v791, v377, v378, v376);
      uint64_t v361 = (uint64_t)v822;
      uint64_t v379 = (uint64_t)&v822[OBJC_IVAR____TtCV7Weather9MainState8_Storage_view];
      sub_10091EF44((uint64_t)&v822[OBJC_IVAR____TtCV7Weather9MainState8_Storage_view], v781, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v380 = sub_100166D74((uint64_t)v824);
      sub_1001887FC(v380, (uint64_t)&v793);
      v381 = v820;
      sub_100179188(v379 + v820[8], (uint64_t)&v797);
      sub_10013F118(v379, (void (*)(void))type metadata accessor for ViewState);
      sub_10017F604();
      if (v382)
      {
        sub_1001781AC((uint64_t)type metadata accessor for ViewState, &qword_100E66408);
        sub_1001845B8();
        uint64_t v123 = v766;
      }
      else
      {
        sub_100186C74();
        sub_1001832E8();
        sub_10038C8DC();
        sub_1001781AC((uint64_t)v140, &qword_100E639E8);
        sub_1001781AC(v379, &qword_100E70A78);
        sub_10013F118((uint64_t)type metadata accessor for ViewState, (void (*)(void))type metadata accessor for SearchViewState);
        sub_1001845B8();
      }
      uint64_t v612 = v764;
      uint64_t v613 = sub_100182C98(v123, v611, 1, (uint64_t)v122);
      uint64_t v616 = sub_100180710((uint64_t)v137, v614, v615, v613);
      sub_10018A488(v616);
      sub_10019B6C4();
      uint64_t v617 = v781;
      sub_10011D8AC();
      sub_1001781AC((uint64_t)v131, &qword_100E663F8);
      sub_1001781AC((uint64_t)v137, &qword_100E66400);
      sub_1001781AC(v123, &qword_100E66408);
      sub_1001781AC((uint64_t)v122, &qword_100E66410);
      sub_10013F118(v617, (void (*)(void))type metadata accessor for ViewState);
      _s7Weather24LocationCompositionStateOwst_0(v612, 0, 1, (uint64_t)v381);
      _s7Weather24LocationCompositionStateOwst_0(v379, 1, 1, (uint64_t)v140);
      sub_100164B9C();
      sub_100176E48();
      uint64_t v618 = sub_1001856B0();
      uint64_t v623 = v783;
      uint64_t v624 = v783;
      uint64_t v625 = v785;
      uint64_t v626 = v785;
      v627 = &v818;
      goto LABEL_54;
    case 0xDu:
      uint64_t v383 = type metadata accessor for AppConfigurationState();
      uint64_t v386 = sub_10017E050(v782, v384, v385, v383);
      uint64_t v389 = sub_1001630C0(v784, v387, v388, v386);
      uint64_t v392 = sub_10017A5E0(v786, v390, v391, v389);
      uint64_t v395 = sub_10017A0E0(v788, v393, v394, v392);
      sub_100163050(v790, v396, v397, v395);
      uint64_t v361 = (uint64_t)v822;
      uint64_t v379 = (uint64_t)&v822[OBJC_IVAR____TtCV7Weather9MainState8_Storage_view];
      sub_10091EF44((uint64_t)&v822[OBJC_IVAR____TtCV7Weather9MainState8_Storage_view], v780, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v398 = sub_100166D74((uint64_t)v823);
      sub_1001887FC(v398, (uint64_t)v792);
      v399 = v820;
      sub_100179188(v379 + v820[8], (uint64_t)&v796);
      sub_10013F118(v379, (void (*)(void))type metadata accessor for ViewState);
      sub_10017F604();
      if (v382)
      {
        sub_1001781AC((uint64_t)type metadata accessor for ViewState, &qword_100E66408);
        sub_1001845B8();
        uint64_t v123 = v765;
      }
      else
      {
        sub_100186C74();
        sub_1001832E8();
        sub_10038C8DC();
        sub_1001781AC((uint64_t)v140, &qword_100E639E8);
        sub_1001781AC(v379, &qword_100E70A78);
        sub_10013F118((uint64_t)type metadata accessor for ViewState, (void (*)(void))type metadata accessor for SearchViewState);
        sub_1001845B8();
      }
      uint64_t v612 = v763;
      uint64_t v629 = sub_100182C98(v123, v628, 1, (uint64_t)v122);
      uint64_t v632 = sub_100180710((uint64_t)v137, v630, v631, v629);
      sub_10018A488(v632);
      sub_10019B6C4();
      uint64_t v617 = v780;
      sub_10011D8AC();
      sub_1001781AC((uint64_t)v131, &qword_100E663F8);
      sub_1001781AC((uint64_t)v137, &qword_100E66400);
      sub_1001781AC(v123, &qword_100E66408);
      sub_1001781AC((uint64_t)v122, &qword_100E66410);
      sub_10013F118(v617, (void (*)(void))type metadata accessor for ViewState);
      _s7Weather24LocationCompositionStateOwst_0(v612, 0, 1, (uint64_t)v399);
      _s7Weather24LocationCompositionStateOwst_0(v379, 1, 1, (uint64_t)v140);
      sub_100164B9C();
      sub_100176E48();
      uint64_t v618 = sub_1001856B0();
      uint64_t v623 = v782;
      uint64_t v624 = v782;
      uint64_t v625 = v784;
      uint64_t v626 = v784;
      v627 = (uint64_t *)&v817;
LABEL_54:
      uint64_t v633 = *(v627 - 32);
      sub_100163034(v618, v619, v624, v626, v633, v620, v621, v622, v747[0], v748, v749, (uint64_t)v750, v751, v752, v753, v754, v755, v756, v757,
        v758,
        v759);
      sub_100185DE4();
      sub_1001781AC(v379, &qword_100E663F0);
      uint64_t v634 = v612;
      goto LABEL_55;
    case 0xEu:
      uint64_t v131 = v822;
      uint64_t v143 = (uint64_t)&v822[OBJC_IVAR____TtCV7Weather9MainState8_Storage_view];
      uint64_t v144 = v770;
      sub_10091EF44((uint64_t)&v822[OBJC_IVAR____TtCV7Weather9MainState8_Storage_view], v770, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v145 = v820;
      unsigned __int8 v146 = v772;
      sub_10091EF44(v144 + v820[5], (uint64_t)v772, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
      uint64_t v147 = v814;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_10013F118((uint64_t)v146, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
      }
      else
      {
        uint64_t v405 = *v146;
        if (*(void *)(v144 + v145[9] + 8) != 1
          || (id v406 = [self currentDevice],
              [v406 userInterfaceIdiom],
              v406,
              (*(unsigned char *)(v144 + v145[7]) & 1) != 0))
        {
          v821 = type metadata accessor for ViewState;
          sub_10013F118(v144, (void (*)(void))type metadata accessor for ViewState);
          uint64_t v407 = type metadata accessor for AppConfigurationState();
          uint64_t v410 = sub_10017E050(v819, v408, v409, v407);
          uint64_t v411 = sub_10017D800(v410);
          uint64_t v414 = sub_10017A5E0(v816, v412, v413, v411);
          uint64_t v417 = sub_10017A0E0(v810, v415, v416, v414);
          sub_100163050(v808, v418, v419, v417);
          uint64_t v420 = v805;
          sub_10091EF44(v143, v805, (void (*)(void))type metadata accessor for ViewState);
          uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
          uint64_t v422 = v759;
          sub_100163050(v759, v423, v424, active);
          uint64_t v425 = sub_1001CCC58(v422, 3, 1, 4, 2, 3, v405);
          sub_1001781AC(v422, &qword_100E663D0);
          v426 = v807;
          uint64_t *v807 = v425;
          swift_storeEnumTagMultiPayload();
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v426, 0, 1, v147);
          uint64_t v427 = (uint64_t)v806;
          uint64_t v428 = sub_1001A197C((uint64_t)v806, 1);
          uint64_t v429 = v813;
          uint64_t v432 = sub_100180710(v813, v430, v431, v428);
          uint64_t v433 = (uint64_t)v812;
          sub_100163050((uint64_t)v812, v434, v435, v432);
          sub_10017F180();
          sub_1001D1670();
          sub_10011D8AC();
          sub_1001781AC(v433, &qword_100E663F8);
          sub_1001781AC(v429, &qword_100E66400);
          sub_1001781AC(v427, &qword_100E66408);
          sub_1001781AC((uint64_t)v426, &qword_100E66410);
          sub_10013F118(v420, (void (*)(void))v821);
          uint64_t v436 = sub_100182C6C();
          _s7Weather24LocationCompositionStateOwst_0(v436, v437, v438, (uint64_t)v145);
          uint64_t v439 = v811;
          _s7Weather24LocationCompositionStateOwst_0(v811, 1, 1, v815);
          sub_10018A064();
          v750 = (void *)v405;
          uint64_t v751 = v439;
          uint64_t v440 = sub_1001D0F60();
          uint64_t v442 = v818;
          uint64_t v441 = v819;
          uint64_t v443 = v816;
          sub_100163034(v440, v444, v819, v818, v816, v445, v446, v447, v747[0], v748, v749, (uint64_t)v750, v751, v752, v753, v754, v755, v756, v757,
            v758,
            v759);
          sub_100185DE4();
          swift_release();
          sub_1001781AC(v439, &qword_100E663F0);
          sub_1001781AC(v405, &qword_100E66418);
          sub_1001781AC((uint64_t)v426, &qword_100E66420);
          sub_1001781AC(v433, &qword_100E66428);
          uint64_t v448 = v443;
LABEL_46:
          sub_1001781AC(v448, &qword_100E66430);
          sub_1001781AC(v442, &qword_100E66438);
          uint64_t v561 = v441;
          goto LABEL_62;
        }
        swift_release();
      }
      v316 = type metadata accessor for ViewState;
      uint64_t v317 = v144;
LABEL_72:
      sub_10013F118(v317, (void (*)(void))v316);
      goto LABEL_73;
    case 0xFu:
      uint64_t v131 = v822;
      uint64_t v400 = (uint64_t)&v822[OBJC_IVAR____TtCV7Weather9MainState8_Storage_view];
      sub_1001CA908();
      sub_10091EF44(v401, v402, v403);
      sub_100179188((uint64_t)&v140[v820[8]], (uint64_t)&v795);
      sub_10013F118((uint64_t)v140, (void (*)(void))type metadata accessor for ViewState);
      v404 = v817;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v128, 1, (uint64_t)v817) == 1)
      {
        sub_1001781AC((uint64_t)v128, &qword_100E66408);
LABEL_73:
        swift_retain();
      }
      else
      {
        sub_1001CA908();
        sub_10011E66C(v635, v636, v637);
        uint64_t v638 = type metadata accessor for AppConfigurationState();
        uint64_t v641 = sub_10017E050(v819, v639, v640, v638);
        uint64_t v642 = sub_10017D800(v641);
        uint64_t v645 = sub_10017A5E0(v816, v643, v644, v642);
        uint64_t v648 = sub_10017A0E0(v810, v646, v647, v645);
        sub_100163050(v808, v649, v650, v648);
        uint64_t v651 = v805;
        sub_10091EF44(v400, v805, (void (*)(void))type metadata accessor for ViewState);
        v652 = v807;
        sub_1001821E0((uint64_t)v807);
        uint64_t v654 = *(void *)v140;
        uint64_t v653 = *((void *)v140 + 1);
        v655 = v806;
        sub_10091EF44((uint64_t)&v140[v404[5]], (uint64_t)v806 + v404[5], (void (*)(void))type metadata accessor for SearchViewState.ViewState);
        char v656 = v140[v404[6]];
        sub_100162C20((uint64_t)v655 + v404[7]);
        uint64_t *v655 = v654;
        v655[1] = v653;
        *((unsigned char *)v655 + v404[6]) = v656;
        uint64_t v657 = sub_100182C98((uint64_t)v655, 0, 1, (uint64_t)v404);
        uint64_t v658 = v813;
        uint64_t v661 = sub_100180710(v813, v659, v660, v657);
        uint64_t v662 = (uint64_t)v812;
        sub_100163050((uint64_t)v812, v663, v664, v661);
        swift_bridgeObjectRetain();
        sub_10017F180();
        sub_10011D8AC();
        sub_1001781AC(v662, &qword_100E663F8);
        sub_1001781AC(v658, &qword_100E66400);
        sub_1001781AC((uint64_t)v655, &qword_100E66408);
        sub_1001781AC((uint64_t)v652, &qword_100E66410);
        sub_10013F118(v651, (void (*)(void))type metadata accessor for ViewState);
        uint64_t v665 = sub_100182C6C();
        _s7Weather24LocationCompositionStateOwst_0(v665, v666, v667, (uint64_t)v820);
        uint64_t v668 = v811;
        _s7Weather24LocationCompositionStateOwst_0(v811, 1, 1, v815);
        sub_10018B190();
        uint64_t v669 = sub_1001D0F60();
        uint64_t v671 = v818;
        uint64_t v670 = v819;
        uint64_t v672 = v816;
        sub_100163034(v669, v673, v819, v818, v816, v674, v675, v676, v747[0], v748, v749, (uint64_t)v750, v751, v752, v753, v754, v755, v756, v757,
          v758,
          v759);
        sub_100185DE4();
        sub_1001781AC(v668, &qword_100E663F0);
        sub_1001781AC((uint64_t)v122, &qword_100E66418);
        sub_1001781AC((uint64_t)v652, &qword_100E66420);
        sub_1001781AC(v651, &qword_100E66428);
        sub_1001781AC(v672, &qword_100E66430);
        sub_1001781AC(v671, &qword_100E66438);
        sub_1001781AC(v670, &qword_100E66440);
        v256 = type metadata accessor for SearchViewState;
LABEL_57:
        v356 = v256;
        v357 = v140;
LABEL_68:
        sub_10013F118((uint64_t)v357, (void (*)(void))v356);
      }
      return v131;
    case 0x10u:
      uint64_t v148 = (uint64_t)&v822[OBJC_IVAR____TtCV7Weather9MainState8_Storage_view];
      uint64_t v149 = v769;
      sub_10091EF44((uint64_t)&v822[OBJC_IVAR____TtCV7Weather9MainState8_Storage_view], v769, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v150 = v771;
      sub_10052E3A0(v149 + v820[8], v771);
      sub_10013F118(v149, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v151 = (uint64_t)v817;
      if (_s7Weather24LocationCompositionStateOwet_0(v150, 1, (uint64_t)v817) == 1)
      {
        char v152 = v773;
        uint64_t v153 = v809;
        swift_storeEnumTagMultiPayload();
        uint64_t v154 = v803;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v152 + *(int *)(v151 + 28), 1, 1, v803);
        *char v152 = 0;
        v152[1] = 0xE000000000000000;
        *((unsigned char *)v152 + *(int *)(v151 + 24)) = 0;
        sub_1001781AC(v150, &qword_100E66408);
        uint64_t v131 = v812;
      }
      else
      {
        char v152 = v773;
        sub_10011E66C(v150, (uint64_t)v773, (void (*)(void))type metadata accessor for SearchViewState);
        uint64_t v131 = v812;
        uint64_t v154 = v803;
        uint64_t v153 = v809;
      }
      uint64_t v449 = type metadata accessor for AppConfigurationState();
      uint64_t v452 = sub_10017E050(v819, v450, v451, v449);
      uint64_t v453 = sub_10017D800(v452);
      uint64_t v456 = sub_10017A5E0(v816, v454, v455, v453);
      uint64_t v457 = v810;
      uint64_t v460 = sub_10017A0E0(v810, v458, v459, v456);
      uint64_t v461 = v808;
      sub_100163050(v808, v462, v463, v460);
      uint64_t v464 = v805;
      sub_10091EF44(v148, v805, (void (*)(void))type metadata accessor for ViewState);
      v465 = v807;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v807, 1, 1, v814);
      uint64_t v466 = v801;
      swift_storeEnumTagMultiPayload();
      uint64_t v467 = sub_100163DF4();
      _s7Weather24LocationCompositionStateOwst_0(v467, v468, v469, v153);
      uint64_t v470 = v800;
      _s7Weather24LocationCompositionStateOwst_0(v800, 1, 1, v154);
      uint64_t v471 = (uint64_t)v806;
      sub_10038C8DC();
      sub_1001781AC(v470, &qword_100E639E8);
      sub_1001781AC(v466, &qword_100E70A78);
      uint64_t v472 = sub_1001A197C(v471, 0);
      uint64_t v473 = v813;
      uint64_t v476 = sub_100180710(v813, v474, v475, v472);
      sub_100163050((uint64_t)v131, v477, v478, v476);
      uint64_t v479 = v804;
      sub_10011D8AC();
      sub_1001781AC((uint64_t)v131, &qword_100E663F8);
      sub_1001781AC(v473, &qword_100E66400);
      sub_1001781AC(v471, &qword_100E66408);
      sub_1001781AC((uint64_t)v465, &qword_100E66410);
      sub_10013F118(v464, (void (*)(void))type metadata accessor for ViewState);
      _s7Weather24LocationCompositionStateOwst_0(v479, 0, 1, (uint64_t)v820);
      uint64_t v480 = v811;
      _s7Weather24LocationCompositionStateOwst_0(v811, 1, 1, v815);
      uint64_t v482 = v818;
      uint64_t v481 = v819;
      uint64_t v483 = v816;
      sub_100163034(0, 3, v819, v818, v816, v484, v485, v486, 0, v457, v461, v479, v480, 0, 0, 0, 0, 0, 0,
        0,
        (uint64_t)v822);
      sub_100185DE4();
      sub_1001781AC(v480, &qword_100E663F0);
      sub_1001781AC(v479, &qword_100E66418);
      sub_1001781AC(v461, &qword_100E66420);
      sub_1001781AC(v457, &qword_100E66428);
      sub_1001781AC(v483, &qword_100E66430);
      sub_1001781AC(v482, &qword_100E66438);
      sub_1001781AC(v481, &qword_100E66440);
      v356 = type metadata accessor for SearchViewState;
      v357 = (char *)v152;
      goto LABEL_68;
    default:
      sub_1001627D4();
      v141();
      sub_100162808();
      v142();
      swift_storeEnumTagMultiPayload();
      uint64_t v131 = (char *)sub_10091E0E0((uint64_t)v137, 0, 0, (uint64_t)v822);
      sub_10013F118((uint64_t)v137, (void (*)(void))type metadata accessor for SearchViewState.ViewState);
      (*(void (**)(char *, uint64_t))(v125 + 8))(v128, v123);
      return v131;
  }
}

uint64_t sub_10091E0E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v97 = a2;
  uint64_t v89 = a1;
  uint64_t v5 = sub_10017DF08(&qword_100E663F0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &v84[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_10017DF08(&qword_100E663F8);
  __chkstk_darwin(v8 - 8);
  uint64_t v93 = &v84[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_10017DF08(&qword_100E66400);
  __chkstk_darwin(v10 - 8);
  uint64_t v91 = &v84[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_10017DF08(&qword_100E66410);
  __chkstk_darwin(v12 - 8);
  uint64_t v90 = &v84[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_10017DF08(&qword_100E66418);
  __chkstk_darwin(v14 - 8);
  uint64_t v95 = &v84[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_10017DF08(&qword_100E66420);
  __chkstk_darwin(v16 - 8);
  uint64_t v94 = &v84[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = sub_10017DF08(&qword_100E66428);
  __chkstk_darwin(v18 - 8);
  uint64_t v92 = &v84[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = sub_10017DF08(&qword_100E66430);
  __chkstk_darwin(v20 - 8);
  uint64_t v101 = &v84[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = sub_10017DF08(&qword_100E66438);
  __chkstk_darwin(v22 - 8);
  uint64_t v100 = &v84[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v24 = sub_10017DF08(&qword_100E66440);
  __chkstk_darwin(v24 - 8);
  uint64_t v98 = &v84[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v26 = type metadata accessor for ViewState(0);
  __chkstk_darwin(v26);
  uint64_t v88 = &v84[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v28);
  uint64_t v30 = &v84[-v29];
  __chkstk_darwin(v31);
  uint64_t v33 = (uint64_t *)&v84[-v32];
  __chkstk_darwin(v34);
  uint64_t v36 = &v84[-v35];
  uint64_t v37 = sub_10017DF08(&qword_100E66408);
  __chkstk_darwin(v37 - 8);
  uint64_t v39 = (uint64_t *)&v84[-((v38 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v40);
  uint64_t v42 = &v84[-v41];
  __chkstk_darwin(v43);
  uint64_t v46 = (uint64_t *)&v84[-v45];
  uint64_t v99 = v26;
  uint64_t v96 = v7;
  if (v44)
  {
    unint64_t v86 = v44;
  }
  else
  {
    sub_10091EF44(a4 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, (uint64_t)v36, (void (*)(void))type metadata accessor for ViewState);
    sub_10052E3A0((uint64_t)&v36[*(int *)(v26 + 32)], (uint64_t)v46);
    sub_10013F118((uint64_t)v36, (void (*)(void))type metadata accessor for ViewState);
    uint64_t v47 = type metadata accessor for SearchViewState(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v47) == 1)
    {
      sub_1001781AC((uint64_t)v46, &qword_100E66408);
      uint64_t v97 = 0;
      unint64_t v86 = 0xE000000000000000;
    }
    else
    {
      unint64_t v48 = v46[1];
      uint64_t v97 = *v46;
      unint64_t v86 = v48;
      swift_bridgeObjectRetain();
      sub_10013F118((uint64_t)v46, (void (*)(void))type metadata accessor for SearchViewState);
    }
  }
  uint64_t v49 = a4;
  uint64_t v50 = a4 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
  sub_10091EF44(a4 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, (uint64_t)v33, (void (*)(void))type metadata accessor for ViewState);
  uint64_t v51 = *v33;
  uint64_t v52 = v99;
  if (*(uint64_t *)((char *)v33 + *(int *)(v99 + 36) + 8) == 1)
  {
    uint64_t v53 = self;
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v54 = (void *)v53;
    uint64_t v49 = a4;
    id v55 = [v54 currentDevice];
    [v55 userInterfaceIdiom];

    if (*((unsigned char *)v33 + *(int *)(v52 + 28)) == 1)
    {
      swift_release();
      sub_10013F118((uint64_t)v33, (void (*)(void))type metadata accessor for ViewState);
      type metadata accessor for ListViewState._Storage();
      swift_allocObject();
      uint64_t v51 = sub_1000EC58C(0, 0, 1, 0, 0, 0, 0xE000000000000000, 0, 0, 0, 0, 0, 1, 0);
      goto LABEL_11;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_retain();
  }
  sub_10013F118((uint64_t)v33, (void (*)(void))type metadata accessor for ViewState);
LABEL_11:
  uint64_t v56 = v86;
  sub_10091EF44(v50, (uint64_t)v30, (void (*)(void))type metadata accessor for ViewState);
  sub_10052E3A0((uint64_t)&v30[*(int *)(v52 + 32)], (uint64_t)v42);
  sub_10013F118((uint64_t)v30, (void (*)(void))type metadata accessor for ViewState);
  uint64_t v57 = (int *)type metadata accessor for SearchViewState(0);
  int v58 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, (uint64_t)v57);
  uint64_t v87 = v49;
  if (v58 == 1)
  {
    sub_1001781AC((uint64_t)v42, &qword_100E66408);
    int v85 = 0;
  }
  else
  {
    int v85 = v42[v57[6]];
    sub_10013F118((uint64_t)v42, (void (*)(void))type metadata accessor for SearchViewState);
  }
  uint64_t v59 = type metadata accessor for AppConfigurationState();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v98, 1, 1, v59);
  uint64_t v60 = type metadata accessor for EnvironmentState();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v100, 1, 1, v60);
  uint64_t v61 = type metadata accessor for LocationsState();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v101, 1, 1, v61);
  uint64_t v62 = type metadata accessor for NotificationsOptInState();
  uint64_t v63 = v92;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v92, 1, 1, v62);
  uint64_t v64 = type metadata accessor for TimeState();
  uint64_t v65 = v94;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v94, 1, 1, v64);
  uint64_t v66 = v88;
  sub_10091EF44(v50, (uint64_t)v88, (void (*)(void))type metadata accessor for ViewState);
  swift_bridgeObjectRetain();
  uint64_t v67 = v97;
  sub_1007210CC(0, 256, 2, 2, 3, v97, v56, 0, 1, 2, 0, 0, 2, 2, v51);
  swift_bridgeObjectRelease();
  uint64_t v68 = type metadata accessor for ViewState.SecondaryViewState(0);
  unint64_t v86 = v51;
  uint64_t v69 = v90;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v90, 1, 1, v68);
  sub_10091EF44(v89, (uint64_t)v39 + v57[5], (void (*)(void))type metadata accessor for SearchViewState.ViewState);
  uint64_t v70 = (uint64_t)v39 + v57[7];
  uint64_t v71 = type metadata accessor for Location();
  _s7Weather24LocationCompositionStateOwst_0(v70, 1, 1, v71);
  uint64_t *v39 = v67;
  v39[1] = v56;
  *((unsigned char *)v39 + v57[6]) = v85;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, (uint64_t)v57);
  uint64_t v72 = type metadata accessor for DisplayMetrics();
  uint64_t v73 = v91;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v91, 1, 1, v72);
  uint64_t v74 = type metadata accessor for WeatherMapPresentationState(0);
  uint64_t v75 = v93;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v93, 1, 1, v74);
  uint64_t v76 = (uint64_t)v95;
  sub_10011D8AC();
  swift_release();
  sub_1001781AC((uint64_t)v75, &qword_100E663F8);
  sub_1001781AC((uint64_t)v73, &qword_100E66400);
  sub_1001781AC((uint64_t)v39, &qword_100E66408);
  sub_1001781AC((uint64_t)v69, &qword_100E66410);
  sub_10013F118((uint64_t)v66, (void (*)(void))type metadata accessor for ViewState);
  _s7Weather24LocationCompositionStateOwst_0(v76, 0, 1, v99);
  uint64_t v77 = type metadata accessor for ModalViewState(0);
  uint64_t v78 = (uint64_t)v96;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v96, 1, 1, v77);
  uint64_t v79 = v98;
  uint64_t v80 = v100;
  uint64_t v81 = v101;
  uint64_t v82 = sub_1001659F0(0, 3, (uint64_t)v98, (uint64_t)v100, (uint64_t)v101, 0, 0, 0, 0, (uint64_t)v63, (uint64_t)v65, v76, v78, 0, 0, 0, 0, 0, 0,
          0,
          v87);
  swift_release();
  sub_1001781AC(v78, &qword_100E663F0);
  sub_1001781AC(v76, &qword_100E66418);
  sub_1001781AC((uint64_t)v65, &qword_100E66420);
  sub_1001781AC((uint64_t)v63, &qword_100E66428);
  sub_1001781AC((uint64_t)v81, &qword_100E66430);
  sub_1001781AC((uint64_t)v80, &qword_100E66438);
  sub_1001781AC((uint64_t)v79, &qword_100E66440);
  return v82;
}

uint64_t sub_10091EBF4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E639E8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E70A78);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E66408);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ViewState(0);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for SearchViewState(0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10091EF44(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, (uint64_t)v16, (void (*)(void))type metadata accessor for ViewState);
  sub_10052E3A0((uint64_t)&v16[*(int *)(v14 + 40)], (uint64_t)v12);
  sub_10013F118((uint64_t)v16, (void (*)(void))type metadata accessor for ViewState);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v17) == 1)
  {
    sub_1001781AC((uint64_t)v12, &qword_100E66408);
    type metadata accessor for SearchViewState.ViewState(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = (uint64_t)a2 + *(int *)(v17 + 28);
    uint64_t v21 = type metadata accessor for Location();
    uint64_t result = _s7Weather24LocationCompositionStateOwst_0(v20, 1, 1, v21);
    *a2 = 0;
    a2[1] = 0xE000000000000000;
    *((unsigned char *)a2 + *(int *)(v17 + 24)) = 0;
  }
  else
  {
    sub_10011E66C((uint64_t)v12, (uint64_t)v19, (void (*)(void))type metadata accessor for SearchViewState);
    uint64_t v23 = type metadata accessor for SearchViewState.ViewState(0);
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v23);
    uint64_t v24 = type metadata accessor for Location();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 1, 1, v24);
    sub_10038C8DC();
    sub_1001781AC((uint64_t)v6, &qword_100E639E8);
    sub_1001781AC((uint64_t)v9, &qword_100E70A78);
    return sub_10013F118((uint64_t)v19, (void (*)(void))type metadata accessor for SearchViewState);
  }
  return result;
}

uint64_t sub_10091EF44(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_10091EFA4()
{
  uint64_t result = sub_10091F024();
  uint64_t v1 = result;
  if (qword_100E628B8 != -1) {
    uint64_t result = swift_once();
  }
  double v2 = *(double *)&qword_100EA1110;
  if (*(double *)&qword_100EA1110 <= 0.9) {
    double v2 = 0.9;
  }
  qword_100F52100 = v1;
  qword_100F52108 = *(void *)&v2;
  return result;
}

uint64_t sub_10091F024()
{
  sub_10091F2FC();
  sub_10091F3A0();
  AnyTransition.combined(with:)();
  swift_release();
  swift_release();
  sub_10091F2FC();
  sub_10091F3A0();
  AnyTransition.combined(with:)();
  swift_release();
  swift_release();
  uint64_t v0 = static AnyTransition.asymmetric(insertion:removal:)();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_10091F154()
{
  uint64_t v0 = sub_10091F024();
  uint64_t result = sub_10091F024();
  qword_100F52110 = v0;
  *(void *)algn_100F52118 = result;
  return result;
}

uint64_t sub_10091F190()
{
  if (qword_100E628C0 != -1) {
    uint64_t result = swift_once();
  }
  double v0 = *(double *)&qword_100EA1118;
  if (*(double *)&qword_100EA1118 <= 0.33) {
    double v0 = 0.33;
  }
  qword_100EA1110 = *(void *)&v0;
  return result;
}

void sub_10091F1F4()
{
  id v0 = [objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:1.0 stiffness:220.0 damping:30.0 initialVelocity:0.0];
  [v0 ts_settlingDuration];
  uint64_t v2 = v1;

  qword_100EA1118 = v2;
}

uint64_t sub_10091F268()
{
  uint64_t result = static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)();
  qword_100EA1120 = result;
  return result;
}

uint64_t sub_10091F29C()
{
  static Animation.timingCurve(_:_:_:_:duration:)();
  uint64_t v0 = Animation.delay(_:)();
  uint64_t result = swift_release();
  qword_100EA1128 = v0;
  return result;
}

uint64_t sub_10091F2FC()
{
  sub_1001882B4();
  static AnyTransition.scale(scale:anchor:)();
  if (v1)
  {
    if (*v0 != -1) {
      swift_once();
    }
    swift_retain();
  }
  uint64_t v2 = AnyTransition.animation(_:)();
  swift_release();
  swift_release();
  return v2;
}

uint64_t sub_10091F3A0()
{
  sub_1001882B4();
  static AnyTransition.opacity.getter();
  if (v1)
  {
    if (*v0 != -1) {
      swift_once();
    }
    swift_retain();
  }
  uint64_t v2 = AnyTransition.animation(_:)();
  swift_release();
  swift_release();
  return v2;
}

uint64_t sub_10091F430()
{
  uint64_t result = sub_10091F460();
  qword_100EA1130 = result;
  return result;
}

uint64_t sub_10091F460()
{
  return static Animation.interpolatingSpring(mass:stiffness:damping:initialVelocity:)();
}

uint64_t sub_10091F4DC()
{
  uint64_t result = static Animation.timingCurve(_:_:_:_:duration:)();
  qword_100EA1138 = result;
  return result;
}

BOOL sub_10091F51C(int a1, unsigned int a2)
{
  return ((a1 ^ a2 | ((a1 ^ a2) >> 8)) & 1) == 0;
}

uint64_t sub_10091F530(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001ELL && a2 == 0x8000000100CB75D0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000100CB75F0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_10091F61C(char a1)
{
  if (a1) {
    return 0xD00000000000001ALL;
  }
  else {
    return 0xD00000000000001ELL;
  }
}

uint64_t sub_10091F658(void *a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100EA1170);
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(a1, a1[3]);
  sub_10091FD74();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v12 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    char v11 = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v3);
}

uint64_t sub_10091F79C(void *a1)
{
  sub_10017DF08(&qword_100EA1160);
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_1001B1E64(a1, a1[3]);
  sub_10091FD74();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  char v4 = KeyedDecodingContainer.decode(_:forKey:)();
  char v5 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v6 = sub_10017D214();
  v7(v6);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  if (v5) {
    int v9 = 256;
  }
  else {
    int v9 = 0;
  }
  return v9 & 0xFFFFFFFE | v4 & 1;
}

unint64_t sub_10091F900()
{
  return sub_10091F61C(*v0);
}

uint64_t sub_10091F908@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10091F530(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10091F930(uint64_t a1)
{
  unint64_t v2 = sub_10091FD74();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10091F96C(uint64_t a1)
{
  unint64_t v2 = sub_10091FD74();

  return CodingKey.debugDescription.getter(a1, v2);
}

BOOL sub_10091F9A8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1[1]) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  int v3 = v2 | *a1;
  if (a2[1]) {
    int v4 = 256;
  }
  else {
    int v4 = 0;
  }
  return sub_10091F51C(v3, v4 | *a2);
}

uint64_t sub_10091F9D8@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10091F79C(a1);
  if (!v2)
  {
    *a2 = result & 1;
    a2[1] = BYTE1(result) & 1;
  }
  return result;
}

uint64_t sub_10091FA10(void *a1)
{
  return sub_10091F658(a1);
}

uint64_t sub_10091FA40@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1008C2D10();
  if (!v1)
  {
    *a1 = result & 1;
    a1[1] = BYTE1(result) & 1;
  }
  return result;
}

uint64_t sub_10091FA78()
{
  return sub_1008C2CA4();
}

uint64_t sub_10091FAA8@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = sub_10017DF08(&qword_100EA1148);
  a1[4] = sub_10091FBD0();
  sub_100170694(a1);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_10091FB44()
{
  sub_10091FC24();

  return ShortDescribable.description.getter();
}

unint64_t sub_10091FB84()
{
  unint64_t result = qword_100EA1140;
  if (!qword_100EA1140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1140);
  }
  return result;
}

unint64_t sub_10091FBD0()
{
  unint64_t result = qword_100EA1150;
  if (!qword_100EA1150)
  {
    sub_10018C6DC(&qword_100EA1148);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1150);
  }
  return result;
}

unint64_t sub_10091FC24()
{
  unint64_t result = qword_100EA1158;
  if (!qword_100EA1158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1158);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for NotificationSettingsViewState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10091FD3CLL);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationSettingsViewState()
{
  return &type metadata for NotificationSettingsViewState;
}

unint64_t sub_10091FD74()
{
  unint64_t result = qword_100EA1168;
  if (!qword_100EA1168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1168);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NotificationSettingsViewState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10091FE8CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationSettingsViewState.CodingKeys()
{
  return &type metadata for NotificationSettingsViewState.CodingKeys;
}

unint64_t sub_10091FEC8()
{
  unint64_t result = qword_100EA1178;
  if (!qword_100EA1178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1178);
  }
  return result;
}

unint64_t sub_10091FF18()
{
  unint64_t result = qword_100EA1180;
  if (!qword_100EA1180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1180);
  }
  return result;
}

unint64_t sub_10091FF68()
{
  unint64_t result = qword_100EA1188;
  if (!qword_100EA1188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1188);
  }
  return result;
}

uint64_t sub_10091FFB4()
{
  return Publisher.eraseToAnyPublisher()();
}

uint64_t sub_100920004(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WeatherMapPerformanceTestConditions();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = sub_10017DF08(&qword_100EA1238);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_10017DF08(&qword_100E6E1E0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v23 - v16;
  CurrentValueSubject.value.getter();
  uint64_t v18 = v11 + *(int *)(v8 + 56);
  sub_100347DB0(a1, v11);
  sub_100347DB0((uint64_t)v17, v18);
  sub_100179F0C(v11);
  if (v20)
  {
    sub_1000F3400((uint64_t)v17, &qword_100E6E1E0);
    sub_100179F0C(v18);
    if (v20) {
      return sub_1000F3400(v11, &qword_100E6E1E0);
    }
    goto LABEL_9;
  }
  sub_100347DB0(v11, (uint64_t)v14);
  sub_100179F0C(v18);
  if (v20)
  {
    sub_1000F3400((uint64_t)v17, &qword_100E6E1E0);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v14, v2);
LABEL_9:
    sub_1000F3400(v11, &qword_100EA1238);
    return CurrentValueSubject.send(_:)();
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v6, v18, v2);
  sub_100920394();
  char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v22(v6, v2);
  sub_1000F3400((uint64_t)v17, &qword_100E6E1E0);
  v22((uint64_t)v14, v2);
  uint64_t result = sub_1000F3400(v11, &qword_100E6E1E0);
  if ((v21 & 1) == 0) {
    return CurrentValueSubject.send(_:)();
  }
  return result;
}

uint64_t type metadata accessor for MapPerformanceTestConditionsProvider()
{
  return self;
}

uint64_t sub_1009202E4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10017DF08(&qword_100E6E1E0);
  __chkstk_darwin(v2 - 8);
  sub_1001626E0();
  uint64_t v5 = v4 - v3;
  uint64_t v6 = type metadata accessor for WeatherMapPerformanceTestConditions();
  _s7Weather24LocationCompositionStateOwst_0(v5, 1, 1, v6);
  sub_10017DF08(&qword_100EA1230);
  swift_allocObject();
  *(void *)(v1 + 16) = CurrentValueSubject.init(_:)();
  return v1;
}

unint64_t sub_100920394()
{
  unint64_t result = qword_100EA1240;
  if (!qword_100EA1240)
  {
    type metadata accessor for WeatherMapPerformanceTestConditions();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1240);
  }
  return result;
}

unint64_t sub_1009203E4()
{
  unint64_t result = qword_100EA1248;
  if (!qword_100EA1248)
  {
    sub_10018C6DC(&qword_100EA1230);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1248);
  }
  return result;
}

ValueMetadata *type metadata accessor for Next()
{
  return &type metadata for Next;
}

ValueMetadata *type metadata accessor for ContentStatusBannerAssembly()
{
  return &type metadata for ContentStatusBannerAssembly;
}

uint64_t type metadata accessor for ListMenuViewModelFactory()
{
  return self;
}

uint64_t sub_100920480()
{
  return sub_1001C0BB0();
}

uint64_t sub_1009204A8()
{
  uint64_t v0 = sub_1001E74B8();
  return sub_100182AB8(v0);
}

uint64_t sub_1009204D4(unsigned __int8 *a1)
{
  return sub_1001E7498(*a1);
}

uint64_t sub_10092050C(uint64_t a1, double *a2)
{
  double v2 = *a2;
  type metadata accessor for LocationContentView(0);
  type metadata accessor for SceneResizeMonitor();
  sub_100135128((uint64_t)&unk_100EA1568);
  double v3 = *(double *)(StateObject.wrappedValue.getter() + 16);
  swift_release();
  if (v3 != v2)
  {
    StateObject.wrappedValue.getter();
    sub_100920624(1);
    swift_release();
  }
  *(double *)(StateObject.wrappedValue.getter() + 16) = v2;

  return swift_release();
}

uint64_t sub_100920624(char a1)
{
  uint64_t v3 = *(void *)(v1 + 24);
  swift_beginAccess();
  *(unsigned char *)(v3 + 32) = a1;
  swift_retain();
  sub_1004058CC();
  return swift_release();
}

uint64_t sub_10092067C()
{
  uint64_t v1 = type metadata accessor for LocationContentView(0);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v21[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v7 = (char *)&v21[-1] - v6;
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v21[-1] - v8;
  type metadata accessor for SceneResizeMonitor();
  sub_100135128((uint64_t)&unk_100EA1568);
  double v10 = *(double *)(StateObject.wrappedValue.getter() + 16);
  swift_release();
  uint64_t v11 = v0 + *(int *)(v1 + 76);
  long long v12 = *(_OWORD *)(v11 + 16);
  v22[0] = *(_OWORD *)v11;
  v22[1] = v12;
  v22[2] = *(_OWORD *)(v11 + 32);
  char v23 = *(unsigned char *)(v11 + 48);
  sub_10024D364((uint64_t)v22, (uint64_t)v24, &qword_100E63DB0);
  sub_1000FDD1C((uint64_t)v24, (void (*)(void, void, void, void, void, void, void))sub_100193D54);
  sub_1000FDD60();
  sub_1000FDD1C((uint64_t)v22, (void (*)(void, void, void, void, void, void, void))sub_10014DC00);
  id v13 = [self sharedApplication];
  UIApplication.expectedWindow.getter();

  sub_1001B1E64(v21, v21[3]);
  uint64_t v14 = (void *)dispatch thunk of WindowType.traitCollection.getter();
  id v15 = [v14 horizontalSizeClass];

  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v21);
  sub_1001300BC();
  if (v15 != (id)1)
  {
    double v17 = *(double *)&v21[5];
    sub_1001300BC();
    if (v10 == v17)
    {
      StateObject.wrappedValue.getter();
      char v18 = sub_1009218B8();
      swift_release();
      sub_1001338DC((uint64_t)v7, (void (*)(void))type metadata accessor for LocationContentView);
      sub_1001300BC();
      if ((v18 & 1) == 0)
      {
        sub_1001338DC((uint64_t)v9, (void (*)(void))type metadata accessor for LocationContentView);
        char v16 = 1;
        goto LABEL_8;
      }
    }
    else
    {
      sub_1001338DC((uint64_t)v7, (void (*)(void))type metadata accessor for LocationContentView);
      sub_1001300BC();
    }
    StateObject.wrappedValue.getter();
    sub_1001338DC((uint64_t)v9, (void (*)(void))type metadata accessor for LocationContentView);
    char v16 = sub_1009218F8();
    swift_release();
    goto LABEL_8;
  }
  char v16 = 0;
  uint64_t v4 = v9;
LABEL_8:
  sub_1001338DC((uint64_t)v4, (void (*)(void))type metadata accessor for LocationContentView);
  return v16 & 1;
}

uint64_t sub_100920A64@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  uint64_t v3 = v2;
  uint64_t v40 = a1;
  uint64_t v5 = sub_10017DF08(&qword_100E6DC18);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocationViewModel();
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for LocationFooterViewModel();
  uint64_t v12 = __chkstk_darwin(v39);
  uint64_t v38 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v37 = (char *)&v37 - v14;
  uint64_t v15 = sub_10017DF08(&qword_100EA1780);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  char v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  char v20 = (char *)&v37 - v19;
  uint64_t v21 = sub_10017DF08(&qword_100EA1788);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v24 = (char *)&v37 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v27 = (char *)&v37 - v26;
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v37 - v28;
  *(void *)uint64_t v27 = static VerticalAlignment.center.getter();
  *((void *)v27 + 1) = 0;
  v27[16] = 1;
  uint64_t v30 = sub_10017DF08(&qword_100EA1790);
  sub_100920EBC(v2, (uint64_t)&v27[*(int *)(v30 + 44)], a2);
  sub_10024D364((uint64_t)v27, (uint64_t)v29, &qword_100EA1788);
  swift_retain();
  sub_100133E68();
  swift_release();
  sub_10006DF38((uint64_t)&v11[*(int *)(v9 + 44)], (uint64_t)v7, &qword_100E6DC18);
  sub_1001338DC((uint64_t)v11, (void (*)(void))type metadata accessor for LocationViewModel);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v39) == 1)
  {
    sub_100178110((uint64_t)v7, &qword_100E6DC18);
    uint64_t v31 = type metadata accessor for LocationFooterView(0);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 1, 1, v31);
  }
  else
  {
    sub_100130070();
    uint64_t v32 = (uint64_t)v38;
    sub_100130070();
    sub_1000190F8(v32, v3[3], v3[4], (uint64_t)v20);
    uint64_t v33 = type metadata accessor for LocationFooterView(0);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v33);
    swift_unknownObjectRetain();
  }
  sub_10006DF38((uint64_t)v29, (uint64_t)v24, &qword_100EA1788);
  sub_10006DF38((uint64_t)v20, (uint64_t)v18, &qword_100EA1780);
  uint64_t v34 = v40;
  sub_10006DF38((uint64_t)v24, v40, &qword_100EA1788);
  uint64_t v35 = sub_10017DF08(&qword_100EA1798);
  sub_10006DF38((uint64_t)v18, v34 + *(int *)(v35 + 48), &qword_100EA1780);
  sub_100178110((uint64_t)v20, &qword_100EA1780);
  sub_100178110((uint64_t)v29, &qword_100EA1788);
  sub_100178110((uint64_t)v18, &qword_100EA1780);
  return sub_100178110((uint64_t)v24, &qword_100EA1788);
}

uint64_t sub_100920E94()
{
  return sub_1001AEA94();
}

uint64_t sub_100920EBC@<X0>(void *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v37 = a1;
  uint64_t v5 = type metadata accessor for LocationContentView(0);
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v40 + 64);
  __chkstk_darwin(v5 - 8);
  uint64_t v39 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100EA17A0);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100EA17A8);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100EA17B0);
  uint64_t v16 = v15 - 8;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v36 = (uint64_t)&v35 - v20;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v21 = &v10[*(int *)(v8 + 44)];
  *(void *)uint64_t v21 = swift_getKeyPath();
  *(_OWORD *)(v21 + 8) = 0u;
  *(_OWORD *)(v21 + 24) = 0u;
  *(_OWORD *)(v21 + 40) = 0u;
  *(_OWORD *)(v21 + 56) = 0u;
  v21[72] = 0;
  sub_100921380(v37, (uint64_t)v10, a3);
  uint64_t v22 = swift_getKeyPath();
  sub_10006DF38((uint64_t)v10, (uint64_t)v14, &qword_100EA17A0);
  uint64_t v23 = &v14[*(int *)(v12 + 44)];
  *(void *)uint64_t v23 = v22;
  *(_OWORD *)(v23 + 8) = 0u;
  *(_OWORD *)(v23 + 24) = 0u;
  *(_OWORD *)(v23 + 40) = 0u;
  *(_OWORD *)(v23 + 56) = 0u;
  v23[72] = 0;
  sub_100178110((uint64_t)v10, &qword_100EA17A0);
  sub_1001300BC();
  uint64_t v24 = swift_allocObject();
  sub_100130070();
  uint64_t v25 = static Alignment.center.getter();
  uint64_t v27 = v26;
  sub_10006DF38((uint64_t)v14, (uint64_t)v19, &qword_100EA17A8);
  uint64_t v28 = (uint64_t (**)@<X0>(uint64_t *@<X0>, uint64_t@<X8>))&v19[*(int *)(v16 + 44)];
  *uint64_t v28 = sub_1009244F8;
  v28[1] = (uint64_t (*)@<X0>(uint64_t *@<X0>, uint64_t@<X8>))v24;
  v28[2] = (uint64_t (*)@<X0>(uint64_t *@<X0>, uint64_t@<X8>))v25;
  v28[3] = v27;
  sub_100178110((uint64_t)v14, &qword_100EA17A8);
  uint64_t v29 = v36;
  sub_10024D364((uint64_t)v19, v36, &qword_100EA17B0);
  uint64_t v30 = swift_getKeyPath();
  sub_10006DF38(v29, (uint64_t)v19, &qword_100EA17B0);
  uint64_t v31 = KeyPath;
  *(void *)a2 = KeyPath;
  *(_OWORD *)(a2 + 8) = 0u;
  *(_OWORD *)(a2 + 24) = 0u;
  *(_OWORD *)(a2 + 40) = 0u;
  *(_OWORD *)(a2 + 56) = 0u;
  *(unsigned char *)(a2 + 72) = 0;
  uint64_t v32 = sub_10017DF08(&qword_100EA17B8);
  sub_10006DF38((uint64_t)v19, a2 + *(int *)(v32 + 48), &qword_100EA17B0);
  uint64_t v33 = a2 + *(int *)(v32 + 64);
  *(void *)uint64_t v33 = v30;
  *(_OWORD *)(v33 + 8) = 0u;
  *(_OWORD *)(v33 + 24) = 0u;
  *(_OWORD *)(v33 + 40) = 0u;
  *(_OWORD *)(v33 + 56) = 0u;
  *(unsigned char *)(v33 + 72) = 0;
  sub_1001910C8(v31, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  sub_1001910C8(v30, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  sub_100178110(v29, &qword_100EA17B0);
  sub_10018CCC4(v30, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  sub_100178110((uint64_t)v19, &qword_100EA17B0);
  return sub_10018CCC4(v31, 0, 0, 0, 0, 0, 0, 0, 0, 0);
}

uint64_t sub_100921380@<X0>(void *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6 = type metadata accessor for DisplayMetrics();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for LocationViewModel();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_100133E68();
  swift_release();
  uint64_t v12 = a1[6];
  uint64_t v13 = a1[17];
  uint64_t v14 = a1[2];
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  sub_1001E9994((uint64_t)(a1 + 7), (uint64_t)v19);
  type metadata accessor for LocationContentView(0);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  sub_1001EFFBC();
  return sub_10084F5F8((uint64_t)v11, v14, v12, v13, v15, v16, v19, (uint64_t)v8, a2, a3);
}

uint64_t sub_1009214FC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  if (*(void *)(v3 + 16))
  {
    sub_10012F3E0(v3, a2);
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = 1;
  }
  uint64_t v5 = sub_10017DF08(&qword_100EA17C0);

  return _s7Weather24LocationCompositionStateOwst_0(a2, v4, 1, v5);
}

uint64_t sub_10092156C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X4>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v8 = sub_10017DF08(&qword_100EA1820);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_10017DF08(&qword_100EA18C8);
  uint64_t v11 = __chkstk_darwin(v44);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v39 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v39 - v16;
  uint64_t result = __chkstk_darwin(v15);
  uint64_t v21 = (char *)&v39 - v20;
  uint64_t v22 = *(void *)(a1 + 16);
  if (v22)
  {
    uint64_t v41 = v19;
    uint64_t v42 = a3;
    uint64_t v43 = v22;
    uint64_t v39 = *(void *)(type metadata accessor for LocationComponentContainerViewModel() - 8);
    uint64_t v40 = a2;
    uint64_t v23 = a1 + ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80));
    sub_10013317C(v23, 0, a2, (uint64_t)v10, a4);
    uint64_t v24 = (uint64_t)v21;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v26 = static Alignment.bottomLeading.getter();
    uint64_t v28 = v27;
    sub_10006DF38((uint64_t)v10, (uint64_t)v17, &qword_100EA1820);
    uint64_t v29 = (uint64_t *)&v17[*(int *)(v44 + 36)];
    *uint64_t v29 = KeyPath;
    v29[1] = v26;
    uint64_t v30 = v24;
    v29[2] = v28;
    sub_100178110((uint64_t)v10, &qword_100EA1820);
    uint64_t result = sub_10024D364((uint64_t)v17, v24, &qword_100EA18C8);
    if (v43 != 1)
    {
      sub_10013317C(v23 + *(void *)(v39 + 72), 1, v40, (uint64_t)v10, a4);
      uint64_t v31 = swift_getKeyPath();
      uint64_t v32 = static Alignment.bottomTrailing.getter();
      uint64_t v34 = v33;
      sub_10006DF38((uint64_t)v10, (uint64_t)v14, &qword_100EA1820);
      uint64_t v35 = (uint64_t *)&v14[*(int *)(v44 + 36)];
      *uint64_t v35 = v31;
      v35[1] = v32;
      v35[2] = v34;
      sub_100178110((uint64_t)v10, &qword_100EA1820);
      sub_10024D364((uint64_t)v14, (uint64_t)v17, &qword_100EA18C8);
      sub_10006DF38(v30, (uint64_t)v14, &qword_100EA18C8);
      uint64_t v36 = v41;
      sub_10006DF38((uint64_t)v17, v41, &qword_100EA18C8);
      uint64_t v37 = v42;
      sub_10006DF38((uint64_t)v14, v42, &qword_100EA18C8);
      uint64_t v38 = sub_10017DF08(&qword_100EA18D0);
      sub_10006DF38(v36, v37 + *(int *)(v38 + 48), &qword_100EA18C8);
      sub_100178110((uint64_t)v17, &qword_100EA18C8);
      sub_100178110(v30, &qword_100EA18C8);
      sub_100178110(v36, &qword_100EA18C8);
      return sub_100178110((uint64_t)v14, &qword_100EA18C8);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1009218B8()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 32);
}

uint64_t sub_1009218F8()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_beginAccess();
  return *(unsigned __int8 *)(v1 + 32);
}

uint64_t sub_100921938@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10017DF08(&qword_100EA1DC0);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(__dst, v2, 0x49uLL);
  sub_1001BEAB0((uint64_t)__dst);
  sub_1001BEAF4();
  sub_1001BEAB0((uint64_t)v2);
  uint64_t v9 = 1;
  if (v26 == 4) {
    uint64_t v9 = 2;
  }
  if (v26 == 3) {
    uint64_t v10 = 0;
  }
  else {
    uint64_t v10 = v9;
  }
  v25[1] = v10;
  uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v13 = v12;
  uint64_t v14 = sub_10017DF08(&qword_100EA1DC8);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v8, a1, v14);
  uint64_t v15 = (uint64_t *)&v8[*(int *)(v6 + 60)];
  uint64_t *v15 = v11;
  v15[1] = v13;
  if (qword_100E628B0 != -1) {
    swift_once();
  }
  swift_retain();
  swift_retain();
  char v16 = sub_100A3A7DC();
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  sub_10006DF38((uint64_t)v8, a2, &qword_100EA1DC0);
  uint64_t v23 = a2 + *(int *)(sub_10017DF08(&qword_100EA1DD0) + 36);
  *(unsigned char *)uint64_t v23 = v16 & 1;
  *(void *)(v23 + 8) = v18;
  *(void *)(v23 + 16) = v20;
  *(void *)(v23 + 24) = v22;
  return sub_100178110((uint64_t)v8, &qword_100EA1DC0);
}

uint64_t sub_100921B58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  memcpy(v6, v2, sizeof(v6));
  return sub_100921938(a1, a2);
}

uint64_t sub_100921BAC()
{
  memcpy(__dst, (const void *)(v0 + 24), 0x49uLL);
  sub_1001BEAB0((uint64_t)__dst);
  sub_1001BEAF4();
  sub_1001BEAB0((uint64_t)__dst);
  sub_1000E0B50();
  sub_1001BEAB0((uint64_t)__dst);
  sub_1001BEAF4();
  return sub_1001BEAB0((uint64_t)__dst);
}

uint64_t sub_100921C8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v19 = a2;
  uint64_t v5 = *(void *)(a1 + 16);
  sub_10092BEB4();
  uint64_t v6 = type metadata accessor for _VariadicView.Tree();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v18 - v11;
  memcpy(__dst, (const void *)(v2 + *(int *)(a1 + 36)), 0x49uLL);
  sub_1001BEAB0((uint64_t)__dst);
  sub_1001BEAF4();
  sub_1001BEAB0((uint64_t)__dst);
  uint64_t v13 = v30;
  uint64_t v25 = static Alignment.center.getter();
  uint64_t v26 = v14;
  uint64_t v27 = v13;
  char v28 = 0;
  uint64_t v29 = v13;
  LOBYTE(v30) = 0;
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v20 = v5;
  uint64_t v21 = v15;
  uint64_t v22 = v3;
  _VariadicView.Tree.init(_:content:)();
  unint64_t v23 = sub_10092BF00();
  uint64_t v24 = v15;
  swift_getWitnessTable();
  sub_100121584((uint64_t)v9, v6, (uint64_t)v12);
  char v16 = *(void (**)(char *, uint64_t))(v7 + 8);
  v16(v9, v6);
  sub_100121584((uint64_t)v12, v6, v19);
  return ((uint64_t (*)(char *, uint64_t))v16)(v12, v6);
}

uint64_t sub_100921EE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = type metadata accessor for HStack();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  uint64_t v14 = &v17[-v13];
  memcpy(__dst, (const void *)(v3 + *(int *)(a1 + 36)), 0x49uLL);
  sub_1001BEAB0((uint64_t)__dst);
  sub_1001BEAF4();
  sub_1001BEAB0((uint64_t)__dst);
  uint64_t v18 = v6;
  uint64_t v19 = v7;
  uint64_t v20 = v3;
  static VerticalAlignment.center.getter();
  HStack.init(alignment:spacing:content:)();
  swift_getWitnessTable();
  sub_100121584((uint64_t)v11, v8, (uint64_t)v14);
  uint64_t v15 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
  v15(v11, v8);
  sub_100121584((uint64_t)v14, v8, a2);
  return ((uint64_t (*)(unsigned char *, uint64_t))v15)(v14, v8);
}

uint64_t sub_1009220E0()
{
  sub_10017C83C();
  __chkstk_darwin(v1);
  sub_10012B938();
  sub_100121584(v2, v3, v0);
  uint64_t v4 = sub_100183094();
  sub_100121584(v4, v5, v6);
  uint64_t v7 = sub_100183094();
  return v8(v7);
}

uint64_t sub_100922184@<X0>(uint64_t a1@<X8>)
{
  memcpy(__dst, v1, sizeof(__dst));
  sub_1001BEAB0((uint64_t)v1);
  sub_1001BEAF4();
  uint64_t result = sub_1001BEAB0((uint64_t)v1);
  *(void *)a1 = v4;
  *(unsigned char *)(a1 + 8) = 0;
  return result;
}

uint64_t sub_100922218@<X0>(uint64_t a1@<X8>)
{
  memcpy(v4, v1, sizeof(v4));
  return sub_100922184(a1);
}

uint64_t sub_10092225C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = (uint64_t)v2;
  uint64_t v36 = a2;
  uint64_t v5 = sub_10017DF08(&qword_100EA1E08);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_10017DF08(&qword_100EA1E10);
  __chkstk_darwin(v34);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_10017DF08(&qword_100EA1E18);
  __chkstk_darwin(v35);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(v38, v2, sizeof(v38));
  sub_1001BEAB0((uint64_t)v2);
  sub_1001BEAF4();
  sub_1001BEAB0((uint64_t)v2);
  double v13 = sub_1000E0B50();
  sub_1001BEAB0((uint64_t)v2);
  sub_1001BEAF4();
  sub_1001BEAB0((uint64_t)v2);
  double v14 = v13 - (v37[7] + v37[7]);
  sub_1001BEAB0((uint64_t)v2);
  sub_1001BEAF4();
  sub_1001BEAB0((uint64_t)v2);
  if ((v14 - v37[5]) * 0.5 > 0.0) {
    double v15 = (v14 - v37[5]) * 0.5;
  }
  else {
    double v15 = 0.0;
  }
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v17 = sub_10017DF08(&qword_100EA1E20);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v8, a1, v17);
  uint64_t v18 = &v8[*(int *)(v6 + 44)];
  *(void *)uint64_t v18 = KeyPath;
  *((double *)v18 + 1) = v15;
  v18[16] = 0;
  unsigned __int8 v19 = static Edge.Set.leading.getter();
  unsigned __int8 v20 = static Edge.Set.trailing.getter();
  char v21 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v19) {
    char v21 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v20) {
    char v21 = Edge.Set.init(rawValue:)();
  }
  sub_1001BEAB0(v3);
  sub_1001BEAF4();
  sub_1001BEAB0(v3);
  EdgeInsets.init(_all:)();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  sub_10006DF38((uint64_t)v8, (uint64_t)v10, &qword_100EA1E08);
  uint64_t v30 = &v10[*(int *)(v34 + 36)];
  *uint64_t v30 = v21;
  *((void *)v30 + 1) = v23;
  *((void *)v30 + 2) = v25;
  *((void *)v30 + 3) = v27;
  *((void *)v30 + 4) = v29;
  v30[40] = 0;
  sub_100178110((uint64_t)v8, &qword_100EA1E08);
  sub_1001BEAB0(v3);
  sub_1001BEAF4();
  sub_1001BEAB0(v3);
  double v31 = sub_1000E0B50();
  static Alignment.center.getter();
  if (v15 > v31)
  {
    static os_log_type_t.fault.getter();
    uint64_t v32 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_10006DF38((uint64_t)v10, (uint64_t)v12, &qword_100EA1E10);
  memcpy(&v12[*(int *)(v35 + 36)], v37, 0x70uLL);
  sub_100178110((uint64_t)v10, &qword_100EA1E10);
  return sub_10024D364((uint64_t)v12, v36, &qword_100EA1E18);
}

uint64_t sub_10092271C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  memcpy(v6, v2, sizeof(v6));
  return sub_10092225C(a1, a2);
}

double sub_100922770@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  memcpy(v6, v2, sizeof(v6));
  return sub_10002BC28(a1, (void (*)(uint64_t))sub_100A30964, &qword_100EA1E48, &qword_100EA1E50, a2);
}

uint64_t sub_1009227E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10017DF08(&qword_100EA1DA8);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = &__dst[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  memcpy(__dst, v2, sizeof(__dst));
  sub_1001BEAB0((uint64_t)v2);
  sub_1001BEAF4();
  sub_1001BEAB0((uint64_t)v2);
  sub_100A30964();
  uint64_t v9 = Double.description.getter();
  uint64_t v11 = v10;
  uint64_t v12 = sub_10017DF08(&qword_100EA1DB0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v8, a1, v12);
  double v13 = (uint64_t *)&v8[*(int *)(v6 + 60)];
  *double v13 = v9;
  v13[1] = v11;
  if (qword_100E628B0 != -1) {
    swift_once();
  }
  swift_retain();
  swift_retain();
  char v14 = sub_100A3A7DC();
  uint64_t v16 = v15;
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  sub_10006DF38((uint64_t)v8, a2, &qword_100EA1DA8);
  uint64_t v21 = a2 + *(int *)(sub_10017DF08(&qword_100EA1DB8) + 36);
  *(unsigned char *)uint64_t v21 = v14 & 1;
  *(void *)(v21 + 8) = v16;
  *(void *)(v21 + 16) = v18;
  *(void *)(v21 + 24) = v20;
  return sub_100178110((uint64_t)v8, &qword_100EA1DA8);
}

uint64_t sub_1009229E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  memcpy(v6, v2, sizeof(v6));
  return sub_1009227E8(a1, a2);
}

uint64_t sub_100922A34(char a1)
{
  uint64_t v3 = *(void *)(v1 + 32);
  swift_beginAccess();
  *(unsigned char *)(v3 + 32) = a1;
  swift_retain();
  sub_1004058CC();
  return swift_release();
}

uint64_t sub_100922A8C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100922A34(1);
    return swift_release();
  }
  return result;
}

uint64_t sub_100922AE8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Notification();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100922BDC()
{
  uint64_t v1 = *(void *)(v0 + 40);
  if (v1)
  {
    uint64_t v2 = self;
    swift_unknownObjectRetain();
    id v3 = [v2 defaultCenter];
    [v3 removeObserver:v1];
    swift_unknownObjectRelease();
  }
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_100922C74()
{
  sub_100922BDC();

  return swift_deallocClassInstance();
}

uint64_t sub_100922CA4(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *(void *)a1 = *a2;
    a1 = v21 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = a2[2];
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
    uint64_t v8 = a2[6];
    *(void *)(a1 + 40) = a2[5];
    *(void *)(a1 + 48) = v8;
    long long v9 = *((_OWORD *)a2 + 5);
    *(_OWORD *)(a1 + 80) = v9;
    uint64_t v10 = v9;
    uint64_t v11 = **(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8);
    swift_retain();
    swift_retain();
    swift_unknownObjectRetain();
    swift_retain();
    v11(a1 + 56, (uint64_t)(a2 + 7), v10);
    long long v12 = *(_OWORD *)(a2 + 15);
    *(_OWORD *)(a1 + 120) = v12;
    (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 96, (uint64_t)(a2 + 12));
    uint64_t v13 = a2[18];
    *(void *)(a1 + 136) = a2[17];
    LOBYTE(v8) = *((unsigned char *)a2 + 152);
    swift_retain();
    sub_100195B7C(v13, v8);
    *(void *)(a1 + 144) = v13;
    *(unsigned char *)(a1 + 152) = v8;
    uint64_t v14 = a3[13];
    uint64_t v15 = a1 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *(unsigned char *)(v15 + 16) = *(unsigned char *)(v16 + 16);
      *(unsigned char *)(v15 + 17) = *(unsigned char *)(v16 + 17);
      *(unsigned char *)(v15 + 18) = *(unsigned char *)(v16 + 18);
      uint64_t v17 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v18 = v15 + v17;
      uint64_t v19 = v16 + v17;
      uint64_t v20 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    }
    else
    {
      *(void *)uint64_t v15 = *(void *)v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = a3[14];
    uint64_t v23 = a1 + v22;
    uint64_t v24 = (uint64_t)a2 + v22;
    uint64_t v25 = *(void *)v24;
    char v26 = *(unsigned char *)(v24 + 8);
    sub_100195B7C(*(void *)v24, v26);
    *(void *)uint64_t v23 = v25;
    *(unsigned char *)(v23 + 8) = v26;
    uint64_t v27 = a3[15];
    uint64_t v28 = (void *)(a1 + v27);
    uint64_t v29 = (uint64_t *)((char *)a2 + v27);
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v30 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
    }
    else
    {
      *uint64_t v28 = *v29;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v31 = a3[16];
    uint64_t v32 = a1 + v31;
    uint64_t v33 = (uint64_t)a2 + v31;
    uint64_t v34 = *(void *)v33;
    uint64_t v35 = *(void *)(v33 + 8);
    uint64_t v36 = *(void *)(v33 + 16);
    uint64_t v37 = *(void *)(v33 + 24);
    char v38 = *(unsigned char *)(v33 + 32);
    sub_100190CD4(*(void *)v33, v35, v36, v37, v38);
    *(void *)uint64_t v32 = v34;
    *(void *)(v32 + 8) = v35;
    *(void *)(v32 + 16) = v36;
    *(void *)(v32 + 24) = v37;
    *(unsigned char *)(v32 + 32) = v38;
    uint64_t v39 = a3[17];
    uint64_t v40 = a1 + v39;
    uint64_t v41 = (uint64_t)a2 + v39;
    uint64_t v42 = *(void *)v41;
    LOBYTE(v35) = *(unsigned char *)(v41 + 8);
    sub_100195B7C(*(void *)v41, v35);
    *(void *)uint64_t v40 = v42;
    *(unsigned char *)(v40 + 8) = v35;
    uint64_t v43 = a3[18];
    uint64_t v44 = a1 + v43;
    uint64_t v45 = (uint64_t)a2 + v43;
    uint64_t v46 = *(void *)v45;
    LOBYTE(v35) = *(unsigned char *)(v45 + 8);
    sub_100195B7C(*(void *)v45, v35);
    *(void *)uint64_t v44 = v46;
    *(unsigned char *)(v44 + 8) = v35;
    uint64_t v47 = a3[19];
    uint64_t v73 = a3;
    uint64_t v48 = a1 + v47;
    uint64_t v49 = (uint64_t)a2 + v47;
    uint64_t v50 = *(void *)v49;
    uint64_t v51 = *(void *)(v49 + 8);
    uint64_t v52 = *(void *)(v49 + 16);
    uint64_t v53 = *(void *)(v49 + 24);
    uint64_t v54 = *(void *)(v49 + 32);
    uint64_t v55 = *(void *)(v49 + 40);
    char v56 = *(unsigned char *)(v49 + 48);
    sub_100193D54(*(void *)v49, v51, v52, v53, v54, v55, v56);
    *(void *)uint64_t v48 = v50;
    *(void *)(v48 + 8) = v51;
    *(void *)(v48 + 16) = v52;
    *(void *)(v48 + 24) = v53;
    *(void *)(v48 + 32) = v54;
    *(void *)(v48 + 40) = v55;
    *(unsigned char *)(v48 + 48) = v56;
    uint64_t v57 = v73[20];
    uint64_t v58 = a1 + v57;
    uint64_t v59 = (uint64_t *)((char *)a2 + v57);
    uint64_t v60 = *v59;
    uint64_t v61 = v59[1];
    LOBYTE(v52) = *((unsigned char *)v59 + 16);
    sub_100195B88();
    *(void *)uint64_t v58 = v60;
    *(void *)(v58 + 8) = v61;
    *(unsigned char *)(v58 + 16) = v52;
    uint64_t v62 = v73[21];
    uint64_t v63 = v73[22];
    uint64_t v64 = (void *)(a1 + v62);
    uint64_t v65 = (uint64_t *)((char *)a2 + v62);
    uint64_t v67 = *v65;
    uint64_t v66 = v65[1];
    *uint64_t v64 = v67;
    v64[1] = v66;
    uint64_t v68 = a1 + v63;
    uint64_t v69 = (uint64_t)a2 + v63;
    uint64_t v70 = type metadata accessor for Text.Measurements();
    uint64_t v71 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 16);
    swift_retain();
    v71(v68, v69, v70);
  }
  return a1;
}

uint64_t sub_100923134(uint64_t a1, uint64_t a2, int *a3)
{
  long long v7 = *(_OWORD *)(a2 + 16);
  long long v6 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v7;
  *(_OWORD *)(a1 + 32) = v6;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  long long v8 = *(_OWORD *)(a2 + 96);
  long long v9 = *(_OWORD *)(a2 + 112);
  uint64_t v10 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v10;
  *(unsigned char *)(a1 + 152) = *(unsigned char *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  uint64_t v11 = a3[13];
  long long v12 = (char *)(a1 + v11);
  uint64_t v13 = (char *)(a2 + v11);
  *(_OWORD *)(a1 + 96) = v8;
  *(_OWORD *)(a1 + 112) = v9;
  uint64_t v14 = sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)long long v12 = *(_OWORD *)v13;
    unsigned char v12[16] = v13[16];
    v12[17] = v13[17];
    v12[18] = v13[18];
    uint64_t v15 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v16 = &v12[v15];
    uint64_t v17 = &v13[v15];
    uint64_t v18 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  uint64_t v19 = a3[14];
  uint64_t v20 = a3[15];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = a2 + v19;
  *(void *)uint64_t v21 = *(void *)v22;
  *(unsigned char *)(v21 + 8) = *(unsigned char *)(v22 + 8);
  uint64_t v23 = (void *)(a1 + v20);
  uint64_t v24 = (const void *)(a2 + v20);
  uint64_t v25 = sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v26 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v26 - 8) + 32))(v23, v24, v26);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  uint64_t v27 = a3[16];
  uint64_t v28 = a3[17];
  uint64_t v29 = a1 + v27;
  uint64_t v30 = a2 + v27;
  long long v31 = *(_OWORD *)(v30 + 16);
  *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
  *(_OWORD *)(v29 + 16) = v31;
  *(unsigned char *)(v29 + 32) = *(unsigned char *)(v30 + 32);
  uint64_t v32 = a1 + v28;
  uint64_t v33 = a2 + v28;
  *(unsigned char *)(v32 + 8) = *(unsigned char *)(v33 + 8);
  *(void *)uint64_t v32 = *(void *)v33;
  uint64_t v34 = a3[18];
  uint64_t v35 = a3[19];
  uint64_t v36 = a1 + v34;
  uint64_t v37 = a2 + v34;
  *(void *)uint64_t v36 = *(void *)v37;
  *(unsigned char *)(v36 + 8) = *(unsigned char *)(v37 + 8);
  uint64_t v38 = a1 + v35;
  uint64_t v39 = (long long *)(a2 + v35);
  *(unsigned char *)(v38 + 48) = *((unsigned char *)v39 + 48);
  long long v40 = v39[2];
  long long v41 = *v39;
  *(_OWORD *)(v38 + 16) = v39[1];
  *(_OWORD *)(v38 + 32) = v40;
  *(_OWORD *)uint64_t v38 = v41;
  uint64_t v42 = a3[20];
  uint64_t v43 = a3[21];
  uint64_t v44 = a1 + v42;
  uint64_t v45 = (long long *)(a2 + v42);
  *(unsigned char *)(v44 + 16) = *((unsigned char *)v45 + 16);
  long long v46 = *v45;
  uint64_t v47 = a3[22];
  uint64_t v48 = a1 + v47;
  uint64_t v49 = a2 + v47;
  *(_OWORD *)uint64_t v44 = v46;
  *(_OWORD *)(a1 + v43) = *(_OWORD *)(a2 + v43);
  uint64_t v50 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
  return a1;
}

uint64_t sub_100923430(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  uint64_t v7 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_unknownObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 96);
  long long v10 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v10;
  uint64_t v11 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v11;
  swift_release();
  char v12 = *(unsigned char *)(a2 + 152);
  uint64_t v13 = *(void *)(a1 + 144);
  char v14 = *(unsigned char *)(a1 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(unsigned char *)(a1 + 152) = v12;
  sub_10018F6D8(v13, v14);
  if (a1 != a2)
  {
    uint64_t v15 = a3[13];
    uint64_t v16 = (char *)(a1 + v15);
    uint64_t v17 = (char *)(a2 + v15);
    sub_100178110(a1 + v15, &qword_100E63BD0);
    uint64_t v18 = sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
      v16[16] = v17[16];
      v16[17] = v17[17];
      v16[18] = v17[18];
      uint64_t v19 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v20 = &v16[v19];
      uint64_t v21 = &v17[v19];
      uint64_t v22 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
  }
  uint64_t v23 = a3[14];
  uint64_t v24 = a1 + v23;
  uint64_t v25 = (uint64_t *)(a2 + v23);
  uint64_t v26 = *v25;
  LOBYTE(v25) = *((unsigned char *)v25 + 8);
  uint64_t v27 = *(void *)v24;
  char v28 = *(unsigned char *)(v24 + 8);
  *(void *)uint64_t v24 = v26;
  *(unsigned char *)(v24 + 8) = (_BYTE)v25;
  sub_10018F6D8(v27, v28);
  if (a1 != a2)
  {
    uint64_t v29 = a3[15];
    uint64_t v30 = (void *)(a1 + v29);
    long long v31 = (const void *)(a2 + v29);
    sub_100178110(a1 + v29, &qword_100E63BC8);
    uint64_t v32 = sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v33 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v33 - 8) + 32))(v30, v31, v33);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
  }
  uint64_t v34 = a3[16];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = a2 + v34;
  char v37 = *(unsigned char *)(v36 + 32);
  uint64_t v38 = *(void *)v35;
  uint64_t v39 = *(void *)(v35 + 8);
  uint64_t v40 = *(void *)(v35 + 16);
  uint64_t v41 = *(void *)(v35 + 24);
  char v42 = *(unsigned char *)(v35 + 32);
  long long v43 = *(_OWORD *)(v36 + 16);
  *(_OWORD *)uint64_t v35 = *(_OWORD *)v36;
  *(_OWORD *)(v35 + 16) = v43;
  *(unsigned char *)(v35 + 32) = v37;
  sub_100191934(v38, v39, v40, v41, v42);
  uint64_t v44 = a3[17];
  uint64_t v45 = a1 + v44;
  long long v46 = (uint64_t *)(a2 + v44);
  uint64_t v47 = *v46;
  LOBYTE(v46) = *((unsigned char *)v46 + 8);
  uint64_t v48 = *(void *)v45;
  char v49 = *(unsigned char *)(v45 + 8);
  *(void *)uint64_t v45 = v47;
  *(unsigned char *)(v45 + 8) = (_BYTE)v46;
  sub_10018F6D8(v48, v49);
  uint64_t v50 = a3[18];
  uint64_t v51 = a1 + v50;
  uint64_t v52 = (uint64_t *)(a2 + v50);
  uint64_t v53 = *v52;
  LOBYTE(v52) = *((unsigned char *)v52 + 8);
  uint64_t v54 = *(void *)v51;
  char v55 = *(unsigned char *)(v51 + 8);
  *(void *)uint64_t v51 = v53;
  *(unsigned char *)(v51 + 8) = (_BYTE)v52;
  sub_10018F6D8(v54, v55);
  uint64_t v56 = a3[19];
  uint64_t v57 = a1 + v56;
  uint64_t v58 = a2 + v56;
  char v59 = *(unsigned char *)(v58 + 48);
  uint64_t v60 = *(void *)v57;
  uint64_t v61 = *(void *)(v57 + 8);
  uint64_t v62 = *(void *)(v57 + 16);
  uint64_t v63 = *(void *)(v57 + 24);
  uint64_t v64 = *(void *)(v57 + 32);
  uint64_t v65 = *(void *)(v57 + 40);
  char v66 = *(unsigned char *)(v57 + 48);
  long long v67 = *(_OWORD *)(v58 + 16);
  *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
  *(_OWORD *)(v57 + 16) = v67;
  *(_OWORD *)(v57 + 32) = *(_OWORD *)(v58 + 32);
  *(unsigned char *)(v57 + 48) = v59;
  sub_10014DC00(v60, v61, v62, v63, v64, v65, v66);
  uint64_t v68 = a3[20];
  uint64_t v69 = a1 + v68;
  uint64_t v70 = a2 + v68;
  char v71 = *(unsigned char *)(v70 + 16);
  *(_OWORD *)uint64_t v69 = *(_OWORD *)v70;
  *(unsigned char *)(v69 + 16) = v71;
  sub_10018F6E4();
  uint64_t v72 = a3[21];
  uint64_t v73 = a1 + v72;
  uint64_t v74 = a2 + v72;
  *(void *)(a1 + v72) = *(void *)(a2 + v72);
  swift_release();
  *(void *)(v73 + 8) = *(void *)(v74 + 8);
  uint64_t v75 = a3[22];
  uint64_t v76 = a1 + v75;
  uint64_t v77 = a2 + v75;
  uint64_t v78 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 40))(v76, v77, v78);
  return a1;
}

uint64_t sub_100923828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10092383C);
}

uint64_t sub_10092383C()
{
  sub_100181828();
  if (v3) {
    return sub_100163020(*(void *)(v1 + 8));
  }
  sub_100176E54();
  sub_10017DF08(&qword_100E63BF8);
  sub_100162F30();
  if (*(_DWORD *)(v5 + 84) == v0)
  {
    uint64_t v6 = v2[13];
  }
  else
  {
    sub_10017DF08((uint64_t *)&unk_100EAA530);
    sub_100162F30();
    if (*(_DWORD *)(v7 + 84) == v0)
    {
      uint64_t v6 = v2[15];
    }
    else
    {
      type metadata accessor for Text.Measurements();
      uint64_t v6 = v2[22];
    }
  }
  uint64_t v8 = sub_10017F118(v6);

  return _s7Weather24LocationCompositionStateOwet_0(v8, v9, v10);
}

uint64_t sub_1009238F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10092390C);
}

void sub_10092390C()
{
  sub_100163298();
  if (v4)
  {
    *(void *)(v1 + 8) = (v0 - 1);
  }
  else
  {
    uint64_t v5 = v3;
    int v6 = v2;
    sub_10017DF08(&qword_100E63BF8);
    sub_100162F30();
    if (*(_DWORD *)(v7 + 84) == v6)
    {
      uint64_t v8 = v5[13];
    }
    else
    {
      sub_10017DF08((uint64_t *)&unk_100EAA530);
      sub_100162F30();
      if (*(_DWORD *)(v9 + 84) == v6)
      {
        uint64_t v8 = v5[15];
      }
      else
      {
        type metadata accessor for Text.Measurements();
        uint64_t v8 = v5[22];
      }
    }
    uint64_t v10 = sub_1001A014C(v8);
    _s7Weather24LocationCompositionStateOwst_0(v10, v11, v12, v13);
  }
}

uint64_t sub_1009239CC()
{
  sub_100184810();
  uint64_t v0 = sub_10019C968();
  return sub_100182AB8(v0);
}

uint64_t sub_1009239F4(unsigned __int8 *a1)
{
  return sub_10019C920(*a1, (void (*)(void))sub_10019C65C);
}

uint64_t sub_100923A68@<X0>(uint64_t *a1@<X8>)
{
  *a1 = static Alignment.center.getter();
  a1[1] = v2;
  return sub_100923A98(a1 + 2);
}

uint64_t sub_100923A98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = static Color.clear.getter();
  __src[10] = sub_1008749EC;
  __src[11] = 0;
  LOBYTE(__src[12]) = 0;
  __src[0] = sub_10017DF08(&qword_100E66BC8);
  if (qword_100E62290 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)__dst, &qword_100E6F2A0);
  if (*(void *)&__dst[24])
  {
    sub_1001262E4((long long *)__dst, (uint64_t)&__src[3]);
    __src[1] = sub_10092BD28;
    __src[2] = 0;
    uint64_t v4 = Dictionary.init(dictionaryLiteral:)();
    __src[8] = _swiftEmptyArrayStorage;
    __src[9] = v4;
    memcpy(__dst, __src, sizeof(__dst));
    sub_10006DF38((uint64_t)__dst, (uint64_t)__src, &qword_100E66B30);
    *a1 = v2;
    sub_10006DF38((uint64_t)__src, (uint64_t)(a1 + 1), &qword_100E66B30);
    swift_retain();
    sub_100178110((uint64_t)__dst, &qword_100E66B30);
    sub_100178110((uint64_t)__src, &qword_100E66B30);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_100923C18@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  char v3 = sub_1001B1E64(a1, a1[3]);
  sub_100923C74((uint64_t)v5);
  sub_1001E9994(*v3 + 16, a2);
  return memcpy((void *)(a2 + 40), v5, 0x60uLL);
}

uint64_t sub_100923C74@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = self;
  id v3 = [v2 mainBundle];
  v18._uint64_t countAndFlagsBits = 0xD000000000000054;
  v18._uint64_t object = (void *)0x8000000100CB5190;
  v4._uint64_t object = (void *)0x8000000100CB5170;
  v4._uint64_t countAndFlagsBits = 0xD000000000000013;
  v5._uint64_t countAndFlagsBits = 0;
  v5._uint64_t object = (void *)0xE000000000000000;
  Swift::String v6 = NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v18);

  id v7 = [v2 mainBundle];
  v19._uint64_t countAndFlagsBits = 0xD000000000000036;
  v19._uint64_t object = (void *)0x8000000100CB7820;
  v8._uint64_t object = (void *)0x8000000100CB77B0;
  v8._uint64_t countAndFlagsBits = 0x100000000000006ALL;
  v9._uint64_t countAndFlagsBits = 0;
  v9._uint64_t object = (void *)0xE000000000000000;
  Swift::String v10 = NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v19);

  uint64_t v11 = sub_100881B40();
  uint64_t v13 = v12;
  static Color.white.getter();
  uint64_t v14 = Color.hex.getter();
  uint64_t v16 = v15;
  uint64_t result = swift_release();
  *(unsigned char *)a1 = 1;
  *(void *)(a1 + 8) = 0x616C732E69666977;
  *(void *)(a1 + 16) = 0xEA00000000006873;
  *(Swift::String *)(a1 + 24) = v6;
  *(Swift::String *)(a1 + 40) = v10;
  *(void *)(a1 + 56) = 0;
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v16;
  return result;
}

uint64_t sub_100923E10()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100923E48()
{
  return sub_100922A8C();
}

uint64_t sub_100923E50()
{
  type metadata accessor for LocationContentView(0);
  sub_10017FC70();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  sub_100186CC8();
  sub_100166D9C();
  sub_10017DF08(&qword_100E63BD0);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for DisplayMetrics();
    sub_100166C60();
    sub_100162E4C();
    sub_100162F0C();
    v0();
  }
  else
  {
    swift_release();
  }
  sub_10019DA50();
  sub_10017DF08(&qword_100E63BC8);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for ContentSizeCategory();
    sub_100162E4C();
    sub_100162F0C();
    v1();
  }
  else
  {
    swift_release();
  }
  sub_100180740();
  sub_1001724C0();
  sub_100162E4C();
  sub_100162F0C();
  v2();
  sub_100188C14();

  return swift_deallocObject();
}

uint64_t sub_100923FE4(uint64_t a1, uint64_t a2)
{
  return sub_10021FF34(a1, a2, (uint64_t (*)(uint64_t))sub_10092050C);
}

uint64_t sub_10092400C()
{
  sub_100184810();
  uint64_t v0 = sub_10019C394();
  return sub_100182AB8(v0);
}

uint64_t sub_100924034(unsigned __int8 *a1)
{
  return sub_10019C920(*a1, (void (*)(void))sub_10019B9B4);
}

uint64_t sub_100924078()
{
  uint64_t v0 = sub_1001C0C1C();
  return sub_100182AB8(v0);
}

uint64_t sub_1009240A4()
{
  return sub_1001C0BB0();
}

uint64_t sub_1009240CC()
{
  return sub_1001AED2C();
}

uint64_t sub_1009240FC()
{
  uint64_t v1 = (int *)type metadata accessor for LocationContentView(0);
  sub_10017FC70();
  sub_10018B1B0();
  unint64_t v3 = (((v2 + 15) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = v0 + v4;
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v5 + 56);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v5 + 96);
  swift_release();
  sub_10018F6D8(*(void *)(v5 + 144), *(unsigned char *)(v5 + 152));
  sub_10017DF08(&qword_100E63BD0);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for DisplayMetrics();
    sub_100166C60();
    sub_100162E4C();
    sub_100162F0C();
    v6();
  }
  else
  {
    swift_release();
  }
  sub_1001D0F80(v1[14]);
  sub_10017DF08(&qword_100E63BC8);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for ContentSizeCategory();
    sub_100162E4C();
    sub_100162F0C();
    v7();
  }
  else
  {
    swift_release();
  }
  uint64_t v8 = v5 + v1[16];
  sub_100191934(*(void *)v8, *(void *)(v8 + 8), *(void *)(v8 + 16), *(void *)(v8 + 24), *(unsigned char *)(v8 + 32));
  sub_1001D0F80(v1[17]);
  sub_1001D0F80(v1[18]);
  uint64_t v9 = v5 + v1[19];
  sub_10014DC00(*(void *)v9, *(void *)(v9 + 8), *(void *)(v9 + 16), *(void *)(v9 + 24), *(void *)(v9 + 32), *(void *)(v9 + 40), *(unsigned char *)(v9 + 48));
  sub_10018F6E4();
  swift_release();
  type metadata accessor for Text.Measurements();
  sub_100162E4C();
  sub_100162F0C();
  v10();
  sub_100187358();
  sub_100187358();
  if (*(void *)(v0 + ((v3 + 39) & 0xFFFFFFFFFFFFFFF8) + 24)) {
    sub_100187358();
  }

  return swift_deallocObject();
}

uint64_t sub_10092435C()
{
  sub_10017DF08(&qword_100EA15C0);
  sub_10017DF08(&qword_100EA1618);
  sub_100162E4C();
  sub_100162F0C();
  v0();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_10092444C(double *a1@<X8>)
{
  *a1 = sub_10019C838();
}

uint64_t sub_100924478()
{
  return sub_1001AEA94();
}

uint64_t sub_1009244A0()
{
  uint64_t v0 = sub_10019CBE8();
  return sub_100182AB8(v0);
}

uint64_t sub_1009244CC(unsigned __int8 *a1)
{
  return sub_1000250A4(*a1);
}

uint64_t sub_1009244F8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for LocationContentView(0);
  sub_1001627C0(v4);

  return sub_1009214FC(a1, a2);
}

uint64_t sub_100924570(uint64_t a1, unsigned char *a2)
{
  uint64_t result = type metadata accessor for LocationContentView(0) - 8;
  if (*a2 == 1) {
    return sub_100031844();
  }
  return result;
}

uint64_t sub_1009245E0()
{
  type metadata accessor for LocationContentView(0);
  sub_10017FC70();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  sub_100186CC8();
  sub_100166D9C();
  sub_10017DF08(&qword_100E63BD0);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for DisplayMetrics();
    sub_100166C60();
    sub_100162E4C();
    sub_100162F0C();
    v0();
  }
  else
  {
    swift_release();
  }
  sub_10019DA50();
  sub_10017DF08(&qword_100E63BC8);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for ContentSizeCategory();
    sub_100162E4C();
    sub_100162F0C();
    v1();
  }
  else
  {
    swift_release();
  }
  sub_100180740();
  sub_1001724C0();
  sub_100162E4C();
  sub_100162F0C();
  v2();

  return swift_deallocObject();
}

uint64_t sub_100924784()
{
  uint64_t v0 = sub_1001E74B8();
  return sub_100182AB8(v0);
}

uint64_t sub_1009247B0(unsigned __int8 *a1)
{
  return sub_1001E7498(*a1);
}

void sub_1009247E0(double *a1@<X8>)
{
  *a1 = sub_1001AE844();
}

uint64_t sub_10092480C()
{
  return sub_10004A3F8();
}

ValueMetadata *_s42ShouldConsiderMapPinnedToTopEnvironmentKeyVMa()
{
  return &_s42ShouldConsiderMapPinnedToTopEnvironmentKeyVN;
}

ValueMetadata *_s42LocationContentWantsGridViewEnvironmentKeyVMa()
{
  return &_s42LocationContentWantsGridViewEnvironmentKeyVN;
}

unint64_t sub_10092485C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    uint64_t v8 = *(void *)(a2 + 8);
    uint64_t v9 = *(void *)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 24);
    uint64_t v11 = *(void *)(a2 + 32);
    uint64_t v12 = *(void *)(a2 + 40);
    uint64_t v13 = *(void *)(a2 + 48);
    uint64_t v20 = *(void *)(a2 + 56);
    uint64_t v21 = *(void *)(a2 + 64);
    char v22 = *(unsigned char *)(a2 + 72);
    sub_1001910C8(*(void *)a2, v8, v9, v10, v11, v12, v13, v20, v21, v22);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v10;
    *(void *)(a1 + 32) = v11;
    *(void *)(a1 + 40) = v12;
    *(void *)(a1 + 48) = v13;
    *(void *)(a1 + 56) = v20;
    *(void *)(a1 + 64) = v21;
    uint64_t v14 = *(int *)(a3 + 20);
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    *(unsigned char *)(a1 + 72) = v22;
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      void *v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_100924A04(char *a1, char *a2, uint64_t a3)
{
  memcpy(a1, a2, 0x49uLL);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100924AE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 64);
  char v7 = *(unsigned char *)(a2 + 72);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = *(void *)(a1 + 32);
  uint64_t v13 = *(void *)(a1 + 40);
  uint64_t v14 = *(void *)(a1 + 48);
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v16 = *(void *)(a1 + 64);
  char v17 = *(unsigned char *)(a1 + 72);
  long long v18 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v18;
  long long v19 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v19;
  *(void *)(a1 + 64) = v6;
  *(unsigned char *)(a1 + 72) = v7;
  sub_10018CCC4(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
  if (a1 != a2)
  {
    uint64_t v20 = *(int *)(a3 + 20);
    uint64_t v21 = (void *)(a1 + v20);
    char v22 = (const void *)(a2 + v20);
    sub_100178110(a1 + v20, &qword_100E63BC8);
    uint64_t v23 = sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v24 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v22, v24);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100924C18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100924C2C);
}

uint64_t sub_100924C2C(uint64_t a1, int a2)
{
  if (a2 == 254)
  {
    unsigned int v3 = *(unsigned __int8 *)(a1 + 72);
    if (v3 > 1) {
      return (v3 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_100176E54();
    sub_10017DF08((uint64_t *)&unk_100EAA530);
    uint64_t v5 = sub_10017F118(*(int *)(v2 + 20));
    return _s7Weather24LocationCompositionStateOwet_0(v5, v6, v7);
  }
}

uint64_t sub_100924CA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100924CBC);
}

uint64_t sub_100924CBC(uint64_t result, char a2, int a3, uint64_t a4)
{
  if (a3 == 254)
  {
    *(unsigned char *)(result + 72) = -a2;
  }
  else
  {
    sub_10017DF08((uint64_t *)&unk_100EAA530);
    uint64_t v5 = sub_1001A014C(*(int *)(a4 + 20));
    return _s7Weather24LocationCompositionStateOwst_0(v5, v6, v7, v8);
  }
  return result;
}

uint64_t assignWithTake for DetermineWhetherViewsShouldConsiderMapPinnedToTopModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 72);
  char v4 = *(unsigned char *)(a2 + 80);
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  uint64_t v12 = *(void *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 72);
  char v14 = *(unsigned char *)(a1 + 80);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = v3;
  *(unsigned char *)(a1 + 80) = v4;
  sub_10018CCC4(v5, v7, v6, v8, v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for DetermineWhetherViewsShouldConsiderMapPinnedToTopModifier(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && a1[81])
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *a1;
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DetermineWhetherViewsShouldConsiderMapPinnedToTopModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 81) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t assignWithTake for DetermineCompactGridLayoutModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 64);
  char v5 = *(unsigned char *)(a2 + 72);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 48);
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v14 = *(void *)(a1 + 64);
  char v15 = *(unsigned char *)(a1 + 72);
  long long v16 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v16;
  long long v17 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v17;
  *(void *)(a1 + 64) = v4;
  *(unsigned char *)(a1 + 72) = v5;
  sub_10018CCC4(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15);
  char v18 = *(unsigned char *)(a2 + 88);
  uint64_t v19 = *(void *)(a1 + 80);
  char v20 = *(unsigned char *)(a1 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(unsigned char *)(a1 + 88) = v18;
  sub_10018F6D8(v19, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for DetermineCompactGridLayoutModifier(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 89))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 72);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DetermineCompactGridLayoutModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 88) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 89) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 89) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 72) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100924FC0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v7;
    uint64_t v8 = a2[4];
    uint64_t v9 = a2[5];
    uint64_t v10 = a2[6];
    uint64_t v11 = a2[7];
    uint64_t v21 = a2[8];
    uint64_t v22 = a2[3];
    uint64_t v12 = a2[9];
    uint64_t v13 = a2[11];
    uint64_t v20 = a2[10];
    char v14 = *((unsigned char *)a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001910C8(v22, v8, v9, v10, v11, v21, v12, v20, v13, v14);
    *(void *)(a1 + 24) = v22;
    *(void *)(a1 + 32) = v8;
    *(void *)(a1 + 40) = v9;
    *(void *)(a1 + 48) = v10;
    *(void *)(a1 + 56) = v11;
    *(void *)(a1 + 64) = v21;
    *(void *)(a1 + 72) = v12;
    *(void *)(a1 + 80) = v20;
    *(void *)(a1 + 88) = v13;
    uint64_t v15 = *(int *)(a3 + 24);
    long long v16 = (void *)(a1 + v15);
    long long v17 = (uint64_t *)((char *)a2 + v15);
    *(unsigned char *)(a1 + 96) = v14;
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    }
    else
    {
      *long long v16 = *v17;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10092518C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  memcpy((void *)(a1 + 24), (const void *)(a2 + 24), 0x49uLL);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100925280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 88);
  char v8 = *(unsigned char *)(a2 + 96);
  uint64_t v9 = *(void *)(a1 + 24);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = *(void *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 48);
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v15 = *(void *)(a1 + 72);
  uint64_t v16 = *(void *)(a1 + 80);
  uint64_t v17 = *(void *)(a1 + 88);
  char v18 = *(unsigned char *)(a1 + 96);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = v7;
  *(unsigned char *)(a1 + 96) = v8;
  sub_10018CCC4(v9, v10, v11, v12, v13, v14, v15, v16, v17, v18);
  if (a1 != a2)
  {
    uint64_t v19 = *(int *)(a3 + 24);
    uint64_t v20 = (void *)(a1 + v19);
    uint64_t v21 = (const void *)(a2 + v19);
    sub_100178110(a1 + v19, &qword_100E63BC8);
    uint64_t v22 = sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 32))(v20, v21, v23);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1009253E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009253FC);
}

uint64_t sub_1009253FC()
{
  sub_100181828();
  if (v2) {
    return sub_100163020(*v0);
  }
  sub_100176E54();
  sub_10017DF08((uint64_t *)&unk_100EAA530);
  uint64_t v4 = sub_10017F118(*(int *)(v1 + 24));

  return _s7Weather24LocationCompositionStateOwet_0(v4, v5, v6);
}

uint64_t sub_10092546C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100925480);
}

void sub_100925480()
{
  sub_100163298();
  if (v3)
  {
    *uint64_t v1 = (v0 - 1);
  }
  else
  {
    uint64_t v4 = v2;
    sub_10017DF08((uint64_t *)&unk_100EAA530);
    uint64_t v5 = sub_1001A014C(*(int *)(v4 + 24));
    _s7Weather24LocationCompositionStateOwst_0(v5, v6, v7, v8);
  }
}

void *sub_1009254F0(void *a1, void *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (void *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v8 = a2[2];
    a1[1] = a2[1];
    a1[2] = v8;
    uint64_t v9 = *(int *)(a3 + 40);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
      v10[16] = v11[16];
      v10[17] = v11[17];
      v10[18] = v11[18];
      uint64_t v12 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v13 = &v10[v12];
      uint64_t v14 = &v11[v12];
      uint64_t v15 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      *(void *)uint64_t v10 = *(void *)v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v16 = *(int *)(a3 + 44);
    uint64_t v34 = a2;
    uint64_t v35 = a3;
    uint64_t v17 = (char *)a1 + v16;
    char v18 = (char *)a2 + v16;
    uint64_t v19 = *(void *)v18;
    uint64_t v20 = *((void *)v18 + 1);
    uint64_t v21 = *((void *)v18 + 2);
    uint64_t v22 = *((void *)v18 + 3);
    uint64_t v23 = *((void *)v18 + 4);
    uint64_t v24 = *((void *)v18 + 5);
    uint64_t v26 = *((void *)v18 + 6);
    uint64_t v25 = *((void *)v18 + 7);
    uint64_t v32 = *((void *)v18 + 8);
    char v33 = v18[72];
    sub_1001910C8(*(void *)v18, v20, v21, v22, v23, v24, v26, v25, v32, v33);
    *(void *)uint64_t v17 = v19;
    *((void *)v17 + 1) = v20;
    *((void *)v17 + 2) = v21;
    *((void *)v17 + 3) = v22;
    *((void *)v17 + 4) = v23;
    *((void *)v17 + 5) = v24;
    *((void *)v17 + 6) = v26;
    *((void *)v17 + 7) = v25;
    *((void *)v17 + 8) = v32;
    v17[72] = v33;
    uint64_t v27 = *(int *)(v35 + 48);
    char v28 = (char *)a1 + v27;
    uint64_t v29 = (char *)v34 + v27;
    uint64_t v30 = *(void *)v29;
    LOBYTE(v25) = v29[8];
    sub_100195B7C(*(void *)v29, v25);
    *(void *)char v28 = v30;
    v28[8] = v25;
  }
  return a1;
}

uint64_t sub_100925714(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = a3[10];
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
    v7[16] = v8[16];
    v7[17] = v8[17];
    v7[18] = v8[18];
    uint64_t v10 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v11 = &v7[v10];
    uint64_t v12 = &v8[v10];
    uint64_t v13 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  memcpy((void *)(a1 + a3[11]), (const void *)(a2 + a3[11]), 0x49uLL);
  uint64_t v14 = a3[12];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  return a1;
}

uint64_t sub_10092586C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = a3[10];
    uint64_t v7 = (char *)(a1 + v6);
    uint64_t v8 = (char *)(a2 + v6);
    sub_100178110(a1 + v6, &qword_100E63BD0);
    uint64_t v9 = sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
      v7[16] = v8[16];
      v7[17] = v8[17];
      v7[18] = v8[18];
      uint64_t v10 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v11 = &v7[v10];
      uint64_t v12 = &v8[v10];
      uint64_t v13 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  uint64_t v14 = a3[11];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)(v16 + 64);
  char v18 = *(unsigned char *)(v16 + 72);
  uint64_t v19 = *(void *)v15;
  uint64_t v20 = *(void *)(v15 + 8);
  uint64_t v21 = *(void *)(v15 + 16);
  uint64_t v22 = *(void *)(v15 + 24);
  uint64_t v23 = *(void *)(v15 + 32);
  uint64_t v24 = *(void *)(v15 + 40);
  uint64_t v25 = *(void *)(v15 + 48);
  uint64_t v26 = *(void *)(v15 + 56);
  uint64_t v27 = *(void *)(v15 + 64);
  char v28 = *(unsigned char *)(v15 + 72);
  long long v29 = *(_OWORD *)(v16 + 16);
  *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
  *(_OWORD *)(v15 + 16) = v29;
  long long v30 = *(_OWORD *)(v16 + 48);
  *(_OWORD *)(v15 + 32) = *(_OWORD *)(v16 + 32);
  *(_OWORD *)(v15 + 48) = v30;
  *(void *)(v15 + 64) = v17;
  *(unsigned char *)(v15 + 72) = v18;
  sub_10018CCC4(v19, v20, v21, v22, v23, v24, v25, v26, v27, v28);
  uint64_t v31 = a3[12];
  uint64_t v32 = a1 + v31;
  char v33 = (uint64_t *)(a2 + v31);
  uint64_t v34 = *v33;
  LOBYTE(v33) = *((unsigned char *)v33 + 8);
  uint64_t v35 = *(void *)v32;
  char v36 = *(unsigned char *)(v32 + 8);
  *(void *)uint64_t v32 = v34;
  *(unsigned char *)(v32 + 8) = (_BYTE)v33;
  sub_10018F6D8(v35, v36);
  return a1;
}

uint64_t sub_100925A3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100925A50);
}

uint64_t sub_100925A50()
{
  sub_100181828();
  if (v2) {
    return sub_100163020(*v0);
  }
  sub_100176E54();
  sub_10017DF08(&qword_100E63BF8);
  uint64_t v4 = sub_10017F118(*(int *)(v1 + 40));

  return _s7Weather24LocationCompositionStateOwet_0(v4, v5, v6);
}

uint64_t sub_100925AC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100925AD4);
}

void sub_100925AD4()
{
  sub_100163298();
  if (v3)
  {
    *uint64_t v1 = (v0 - 1);
  }
  else
  {
    uint64_t v4 = v2;
    sub_10017DF08(&qword_100E63BF8);
    uint64_t v5 = sub_1001A014C(*(int *)(v4 + 40));
    _s7Weather24LocationCompositionStateOwst_0(v5, v6, v7, v8);
  }
}

void *sub_100925B44(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v29 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v29 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[9];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for PinnedScrollableViews();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[10];
    uint64_t v12 = a3[11];
    uint64_t v13 = (void *)((char *)v4 + v11);
    uint64_t v14 = (void *)((char *)a2 + v11);
    uint64_t v15 = v14[1];
    *uint64_t v13 = *v14;
    v13[1] = v15;
    uint64_t v16 = (char *)v4 + v12;
    uint64_t v17 = *(void *)((char *)a2 + v12);
    LOBYTE(v9) = *((unsigned char *)a2 + v12 + 8);
    swift_retain();
    sub_100195B7C(v17, (char)v9);
    *(void *)uint64_t v16 = v17;
    v16[8] = (char)v9;
    uint64_t v18 = a3[12];
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = *(void *)v20;
    uint64_t v22 = *((void *)v20 + 1);
    uint64_t v23 = *((void *)v20 + 2);
    uint64_t v24 = *((void *)v20 + 3);
    uint64_t v25 = *((void *)v20 + 4);
    uint64_t v26 = *((void *)v20 + 5);
    uint64_t v27 = *((void *)v20 + 6);
    uint64_t v28 = *((void *)v20 + 7);
    uint64_t v31 = *((void *)v20 + 8);
    char v32 = v20[72];
    sub_1001910C8(*(void *)v20, v22, v23, v24, v25, v26, v27, v28, v31, v32);
    *(void *)uint64_t v19 = v21;
    *((void *)v19 + 1) = v22;
    *((void *)v19 + 2) = v23;
    *((void *)v19 + 3) = v24;
    *((void *)v19 + 4) = v25;
    *((void *)v19 + 5) = v26;
    *((void *)v19 + 6) = v27;
    *((void *)v19 + 7) = v28;
    *((void *)v19 + 8) = v31;
    v19[72] = v32;
  }
  return v4;
}

void *sub_100925CEC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[9];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for PinnedScrollableViews();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[11];
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v12[8];
  memcpy((char *)a1 + a3[12], (char *)a2 + a3[12], 0x49uLL);
  return a1;
}

void *sub_100925DB0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[9];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for PinnedScrollableViews();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + a3[10]) = *(_OWORD *)((char *)a2 + a3[10]);
  swift_release();
  uint64_t v10 = a3[11];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = *(void *)v12;
  LOBYTE(v12) = v12[8];
  uint64_t v14 = *(void *)v11;
  char v15 = v11[8];
  *(void *)uint64_t v11 = v13;
  v11[8] = (char)v12;
  sub_10018F6D8(v14, v15);
  uint64_t v16 = a3[12];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = *((void *)v18 + 8);
  char v20 = v18[72];
  uint64_t v21 = *(void *)v17;
  uint64_t v22 = *((void *)v17 + 1);
  uint64_t v23 = *((void *)v17 + 2);
  uint64_t v24 = *((void *)v17 + 3);
  uint64_t v25 = *((void *)v17 + 4);
  uint64_t v26 = *((void *)v17 + 5);
  uint64_t v27 = *((void *)v17 + 6);
  uint64_t v28 = *((void *)v17 + 7);
  uint64_t v29 = *((void *)v17 + 8);
  char v30 = v17[72];
  long long v31 = *((_OWORD *)v18 + 1);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *((_OWORD *)v17 + 1) = v31;
  long long v32 = *((_OWORD *)v18 + 3);
  *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
  *((_OWORD *)v17 + 3) = v32;
  *((void *)v17 + 8) = v19;
  v17[72] = v20;
  sub_10018CCC4(v21, v22, v23, v24, v25, v26, v27, v28, v29, v30);
  return a1;
}

uint64_t sub_100925ED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100925EE8);
}

uint64_t sub_100925EE8(uint64_t a1, int a2, uint64_t a3)
{
  type metadata accessor for PinnedScrollableViews();
  sub_100162F30();
  if (*(_DWORD *)(v6 + 84) != a2) {
    return sub_100163020(*(void *)(a1 + *(int *)(a3 + 40)));
  }
  uint64_t v7 = sub_10017F118(*(int *)(a3 + 36));

  return _s7Weather24LocationCompositionStateOwet_0(v7, v8, v9);
}

uint64_t sub_100925F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100925F7C);
}

void sub_100925F7C(uint64_t a1, int a2, int a3, uint64_t a4)
{
  type metadata accessor for PinnedScrollableViews();
  sub_100162F30();
  if (*(_DWORD *)(v8 + 84) == a3)
  {
    uint64_t v9 = sub_1001A014C(*(int *)(a4 + 36));
    _s7Weather24LocationCompositionStateOwst_0(v9, v10, v11, v12);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 40)) = (a2 - 1);
  }
}

#error "1009260D4: call analysis failed (funcsize=66)"

uint64_t sub_100926108(uint64_t a1)
{
  sub_100162880();
  uint64_t v3 = v2 + 8;
  (*(void (**)(void))(v2 + 8))();
  return sub_100182CC0((a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8);
}

#error "1009261F0: call analysis failed (funcsize=45)"

#error "1009262A4: call analysis failed (funcsize=54)"

uint64_t sub_1009262F8(uint64_t a1, uint64_t a2)
{
  sub_100162880();
  uint64_t v5 = v4 + 32;
  (*(void (**)(void))(v4 + 32))();
  memcpy((void *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8), (const void *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8), 0x49uLL);
  return a1;
}

uint64_t sub_100926370(uint64_t a1, uint64_t a2)
{
  sub_100162880();
  uint64_t v5 = v4 + 40;
  (*(void (**)(void))(v4 + 40))();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v7 + 64);
  unint64_t v9 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  char v10 = *(unsigned char *)(v7 + 72);
  uint64_t v11 = *(void *)v9;
  uint64_t v12 = *(void *)(v9 + 8);
  uint64_t v13 = *(void *)(v9 + 16);
  uint64_t v14 = *(void *)(v9 + 24);
  uint64_t v15 = *(void *)(v9 + 32);
  uint64_t v16 = *(void *)(v9 + 40);
  uint64_t v17 = *(void *)(v9 + 48);
  uint64_t v18 = *(void *)(v9 + 56);
  uint64_t v19 = *(void *)(v9 + 64);
  char v20 = *(unsigned char *)(v9 + 72);
  long long v21 = *(_OWORD *)(v7 + 16);
  long long v22 = *(_OWORD *)(v7 + 32);
  long long v23 = *(_OWORD *)(v7 + 48);
  *(_OWORD *)unint64_t v9 = *(_OWORD *)v7;
  *(_OWORD *)(v9 + 16) = v21;
  *(_OWORD *)(v9 + 32) = v22;
  *(_OWORD *)(v9 + 48) = v23;
  *(void *)(v9 + 64) = v8;
  *(unsigned char *)(v9 + 72) = v10;
  sub_10018CCC4(v11, v12, v13, v14, v15, v16, v17, v18, v19, v20);
  return a1;
}

uint64_t sub_10092642C(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 0xFE) {
    unsigned int v7 = 254;
  }
  else {
    unsigned int v7 = *(_DWORD *)(*(void *)(v4 - 8) + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 73;
    unsigned int v9 = (a2 - v7 + 255) >> (8 * v8);
    if (v8 < 4) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = a1[v8];
        if (!a1[v8]) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v13 = *(unsigned __int16 *)&a1[v8];
        if (*(_WORD *)&a1[v8]) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x10092657CLL);
      case 4:
        int v13 = *(_DWORD *)&a1[v8];
        if (!v13) {
          break;
        }
LABEL_22:
        int v15 = (v13 - 1) << (8 * v8);
        if (v8 >= 4) {
          int v15 = 0;
        }
        if (((v6 + 7) & 0xFFFFFFF8) == 0xFFFFFFB8) {
          int v16 = *a1;
        }
        else {
          int v16 = *(_DWORD *)a1;
        }
        return v7 + (v16 | v15) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0xFE) {
    return _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, v5, v4);
  }
  unsigned int v17 = *(unsigned __int8 *)(((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8) + 72);
  if (v17 > 1) {
    return (v17 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

double sub_100926590(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(*(void *)(v6 - 8) + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  size_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 73;
  char v11 = 8 * v10;
  if (v8 >= a3)
  {
    int v15 = 0;
  }
  else
  {
    unsigned int v12 = (a3 - v8 + 255) >> v11;
    if (v10 <= 3) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
  }
  if (v8 < a2)
  {
    unsigned int v16 = ~v8 + a2;
    unsigned int v17 = (~(_BYTE)v8 + a2);
    if (v10 < 4) {
      int v18 = (v16 >> v11) + 1;
    }
    else {
      int v18 = 1;
    }
    if (v10 >= 4) {
      unsigned int v19 = v16;
    }
    else {
      unsigned int v19 = v17;
    }
    bzero(a1, v10);
    if (v10 == 1) {
      *a1 = v19;
    }
    else {
      *(_DWORD *)a1 = v19;
    }
    switch(v15)
    {
      case 1:
        a1[v10] = v18;
        return result;
      case 2:
        *(_WORD *)&a1[v10] = v18;
        return result;
      case 3:
        goto LABEL_46;
      case 4:
        *(_DWORD *)&a1[v10] = v18;
        return result;
      default:
        return result;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_34;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return result;
      }
      goto LABEL_34;
    case 3:
LABEL_46:
      __break(1u);
      JUMPOUT(0x1009267A8);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_33;
    default:
LABEL_33:
      if (a2)
      {
LABEL_34:
        if (v7 < 0xFE)
        {
          unint64_t v21 = (unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8;
          if (a2 > 0xFE)
          {
            double result = 0.0;
            *(_OWORD *)(v21 + 56) = 0u;
            *(_OWORD *)(v21 + 40) = 0u;
            *(_OWORD *)(v21 + 24) = 0u;
            *(_OWORD *)(v21 + 8) = 0u;
            *(unsigned char *)(v21 + 72) = 0;
            *(void *)unint64_t v21 = (a2 - 255);
          }
          else
          {
            *(unsigned char *)(v21 + 72) = -(char)a2;
          }
        }
        else
        {
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, a2, v7, v6);
        }
      }
      return result;
  }
}

uint64_t _s7Weather49DetermineLocationComponentHeaderLineLimitModifierVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 64);
  char v4 = *(unsigned char *)(a2 + 72);
  uint64_t v5 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t v13 = *(void *)(a1 + 64);
  char v14 = *(unsigned char *)(a1 + 72);
  long long v15 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v15;
  long long v16 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v16;
  *(void *)(a1 + 64) = v3;
  *(unsigned char *)(a1 + 72) = v4;
  sub_10018CCC4(v5, v7, v6, v8, v9, v10, v11, v12, v13, v14);
  return a1;
}

uint64_t _s7Weather49DetermineLocationComponentHeaderLineLimitModifierVwet_0(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 73))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 72);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t _s7Weather49DetermineLocationComponentHeaderLineLimitModifierVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)double result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 73) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 72) = -(char)a2;
    }
  }
  return result;
}

void *sub_1009268DC(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    uint64_t v15 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Location.Identifier();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = type metadata accessor for LocationViewModel();
    uint64_t v10 = *(int *)(v9 + 20);
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v163 = a3;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v10], 1, v7))
    {
      uint64_t v13 = sub_10017DF08(&qword_100E6DC08);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v8(v11, v12, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v7);
    }
    uint64_t v16 = *(int *)(v9 + 24);
    unsigned int v17 = &a1[v16];
    int v18 = &a2[v16];
    uint64_t v19 = *(void *)&a2[v16 + 8];
    *(void *)unsigned int v17 = *(void *)&a2[v16];
    *((void *)v17 + 1) = v19;
    uint64_t v20 = *(void *)&a2[v16 + 16];
    uint64_t v21 = *(void *)&a2[v16 + 24];
    long long v22 = a2;
    uint64_t v23 = *(void *)&a2[v16 + 32];
    uint64_t v24 = *(void *)&a2[v16 + 40];
    uint64_t v25 = a1;
    char v26 = v18[48];
    swift_bridgeObjectRetain();
    sub_100193004(v20, v21, v23, v24, v26);
    *((void *)v17 + 2) = v20;
    *((void *)v17 + 3) = v21;
    *((void *)v17 + 4) = v23;
    *((void *)v17 + 5) = v24;
    v17[48] = v26;
    uint64_t v27 = *((void *)v18 + 8);
    *((void *)v17 + 7) = *((void *)v18 + 7);
    *((void *)v17 + 8) = v27;
    uint64_t v28 = *((void *)v18 + 10);
    *((void *)v17 + 9) = *((void *)v18 + 9);
    *((void *)v17 + 10) = v28;
    uint64_t v29 = *((void *)v18 + 12);
    *((void *)v17 + 11) = *((void *)v18 + 11);
    *((void *)v17 + 12) = v29;
    char v30 = (int *)v9;
    uint64_t v31 = *((void *)v18 + 14);
    *((void *)v17 + 13) = *((void *)v18 + 13);
    *((void *)v17 + 14) = v31;
    uint64_t v32 = *((void *)v18 + 16);
    *((void *)v17 + 15) = *((void *)v18 + 15);
    *((void *)v17 + 16) = v32;
    v17[136] = v18[136];
    *(_WORD *)(v17 + 137) = *(_WORD *)(v18 + 137);
    uint64_t v33 = *((void *)v18 + 19);
    *((void *)v17 + 18) = *((void *)v18 + 18);
    *((void *)v17 + 19) = v33;
    v17[160] = v18[160];
    v17[161] = v18[161];
    *(void *)((char *)v25 + v30[7]) = *(void *)((char *)v22 + v30[7]);
    *(void *)((char *)v25 + v30[8]) = *(void *)((char *)v22 + v30[8]);
    uint64_t v160 = v30;
    char v162 = v22;
    uint64_t v34 = v30[9];
    uint64_t v164 = v25;
    uint64_t v35 = (char *)v25 + v34;
    char v36 = (char *)v22 + v34;
    uint64_t v37 = type metadata accessor for LocationFooterViewModel();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v38 = (int *)v37;
    swift_bridgeObjectRetain();
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37))
    {
      uint64_t v39 = sub_10017DF08(&qword_100E6DC18);
      memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
      uint64_t v41 = v162;
      uint64_t v40 = v163;
      char v42 = v164;
      long long v43 = v160;
    }
    else
    {
      *uint64_t v35 = *v36;
      *(_WORD *)(v35 + 1) = *(_WORD *)(v36 + 1);
      uint64_t v44 = v36;
      uint64_t v45 = *((void *)v36 + 1);
      uint64_t v46 = *((void *)v36 + 2);
      *((void *)v35 + 1) = v45;
      *((void *)v35 + 2) = v46;
      uint64_t v47 = *(int *)(v37 + 32);
      uint64_t v48 = &v35[v47];
      char v49 = v44;
      uint64_t v50 = &v44[v47];
      uint64_t v51 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v51))
      {
        uint64_t v52 = sub_10017DF08(&qword_100E749B0);
        memcpy(v48, v50, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v51 - 8) + 16))(v48, v50, v51);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v51);
      }
      uint64_t v40 = v163;
      uint64_t v159 = v38;
      uint64_t v53 = v38[9];
      uint64_t v54 = &v35[v53];
      char v55 = &v49[v53];
      unsigned char *v54 = v49[v53];
      *((void *)v54 + 1) = *(void *)&v49[v53 + 8];
      uint64_t v56 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
      uint64_t v57 = v56[6];
      uint64_t v58 = &v54[v57];
      char v59 = &v55[v57];
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v51))
      {
        uint64_t v60 = sub_10017DF08(&qword_100E749B0);
        memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v51 - 8) + 16))(v58, v59, v51);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v51);
      }
      uint64_t v61 = v56[7];
      uint64_t v62 = &v54[v61];
      uint64_t v63 = &v55[v61];
      uint64_t v64 = v63[1];
      void *v62 = *v63;
      v62[1] = v64;
      *(void *)&v54[v56[8]] = *(void *)&v55[v56[8]];
      v35[v159[10]] = v49[v159[10]];
      uint64_t v65 = v159[11];
      char v66 = &v35[v65];
      long long v67 = &v49[v65];
      uint64_t v68 = type metadata accessor for LocationOfInterest();
      swift_bridgeObjectRetain();
      swift_retain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v67, 1, v68))
      {
        uint64_t v69 = sub_10017DF08(&qword_100E63508);
        memcpy(v66, v67, *(void *)(*(void *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v68 - 8) + 16))(v66, v67, v68);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v66, 0, 1, v68);
      }
      v35[v159[12]] = v49[v159[12]];
      v35[v159[13]] = v49[v159[13]];
      uint64_t v70 = v159[14];
      char v71 = &v35[v70];
      uint64_t v72 = &v49[v70];
      uint64_t v73 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v72, 1, (uint64_t)v73))
      {
        uint64_t v74 = sub_10017DF08(&qword_100E6DC10);
        memcpy(v71, v72, *(void *)(*(void *)(v74 - 8) + 64));
      }
      else
      {
        *char v71 = *v72;
        uint64_t v75 = v73[5];
        uint64_t v76 = &v71[v75];
        uint64_t v77 = &v72[v75];
        uint64_t v78 = type metadata accessor for Location();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v78 - 8) + 16))(v76, v77, v78);
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v68 - 8) + 16))(&v71[v73[6]], &v72[v73[6]], v68);
        v71[v73[7]] = v72[v73[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v71, 0, 1, (uint64_t)v73);
      }
      long long v43 = v160;
      uint64_t v41 = v162;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, (uint64_t)v159);
      char v42 = v164;
    }
    *((unsigned char *)v42 + v43[10]) = *((unsigned char *)v41 + v43[10]);
    *((unsigned char *)v42 + v43[11]) = *((unsigned char *)v41 + v43[11]);
    *((unsigned char *)v42 + v43[12]) = *((unsigned char *)v41 + v43[12]);
    *((unsigned char *)v42 + v43[13]) = *((unsigned char *)v41 + v43[13]);
    *((unsigned char *)v42 + v43[14]) = *((unsigned char *)v41 + v43[14]);
    uint64_t v79 = v43[15];
    uint64_t v80 = *(void **)((char *)v41 + v79);
    *(void *)((char *)v42 + v79) = v80;
    *((unsigned char *)v42 + v43[16]) = *((unsigned char *)v41 + v43[16]);
    *((unsigned char *)v42 + v43[17]) = *((unsigned char *)v41 + v43[17]);
    *((unsigned char *)v42 + v43[18]) = *((unsigned char *)v41 + v43[18]);
    uint64_t v81 = v43[19];
    uint64_t v82 = (uint64_t)v42 + v81;
    uint64_t v83 = (uint64_t)v41 + v81;
    uint64_t v84 = type metadata accessor for Date();
    int v85 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 16);
    id v86 = v80;
    v85(v82, v83, v84);
    uint64_t v87 = v43[20];
    uint64_t v88 = (char *)v42 + v87;
    uint64_t v89 = (char *)v41 + v87;
    uint64_t v90 = type metadata accessor for ForegroundEffect();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v89, 1, v90))
    {
      uint64_t v91 = sub_10017DF08(&qword_100E65FA8);
      memcpy(v88, v89, *(void *)(*(void *)(v91 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16))(v88, v89, v90);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v88, 0, 1, v90);
    }
    *((unsigned char *)v42 + v43[21]) = *((unsigned char *)v41 + v43[21]);
    *(void *)((char *)v42 + v43[22]) = *(void *)((char *)v41 + v43[22]);
    *((unsigned char *)v42 + v43[23]) = *((unsigned char *)v41 + v43[23]);
    uint64_t v92 = v43[24];
    uint64_t v93 = (uint64_t)v42 + v92;
    uint64_t v94 = (uint64_t)v41 + v92;
    uint64_t v95 = type metadata accessor for LocationEntity();
    uint64_t v96 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 16);
    swift_bridgeObjectRetain();
    v96(v93, v94, v95);
    uint64_t v97 = v40[5];
    uint64_t v98 = (uint64_t)v42 + v97;
    uint64_t v99 = (uint64_t)v41 + v97;
    uint64_t v100 = *(void *)((char *)v41 + v97);
    uint64_t v101 = *(void *)((char *)v41 + v97 + 8);
    LOBYTE(v94) = *((unsigned char *)v41 + v97 + 16);
    sub_100190CC4(v100, v101, v94);
    *(void *)uint64_t v98 = v100;
    *(void *)(v98 + 8) = v101;
    *(unsigned char *)(v98 + 16) = v94;
    *(void *)(v98 + 24) = *(void *)(v99 + 24);
    uint64_t v102 = v40[6];
    uint64_t v103 = (uint64_t)v42 + v102;
    uint64_t v104 = (uint64_t)v41 + v102;
    uint64_t v105 = *(void *)((char *)v41 + v102);
    uint64_t v106 = *(void *)((char *)v41 + v102 + 8);
    LOBYTE(v94) = *((unsigned char *)v41 + v102 + 16);
    swift_bridgeObjectRetain();
    sub_100190CC4(v105, v106, v94);
    *(void *)uint64_t v103 = v105;
    *(void *)(v103 + 8) = v106;
    *(unsigned char *)(v103 + 16) = v94;
    *(void *)(v103 + 24) = *(void *)(v104 + 24);
    uint64_t v107 = v40[7];
    uint64_t v108 = (uint64_t)v42 + v107;
    uint64_t v109 = (uint64_t)v41 + v107;
    uint64_t v110 = *(void *)((char *)v41 + v107 + 24);
    swift_bridgeObjectRetain();
    if (v110)
    {
      uint64_t v111 = *(void *)v109;
      uint64_t v112 = *(void *)(v109 + 8);
      char v113 = *(unsigned char *)(v109 + 16);
      sub_100190CC4(*(void *)v109, v112, v113);
      *(void *)uint64_t v108 = v111;
      *(void *)(v108 + 8) = v112;
      *(unsigned char *)(v108 + 16) = v113;
      *(void *)(v108 + 24) = *(void *)(v109 + 24);
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v114 = *(_OWORD *)(v109 + 16);
      *(_OWORD *)uint64_t v108 = *(_OWORD *)v109;
      *(_OWORD *)(v108 + 16) = v114;
    }
    uint64_t v115 = v40[8];
    uint64_t v116 = (uint64_t)v42 + v115;
    uint64_t v117 = (uint64_t)v41 + v115;
    uint64_t v118 = type metadata accessor for Text.Measurements();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v118 - 8) + 16))(v116, v117, v118);
    uint64_t v119 = v40[9];
    uint64_t v120 = (uint64_t)v42 + v119;
    uint64_t v121 = (uint64_t)v41 + v119;
    sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)uint64_t v120 = *(_OWORD *)v121;
      *(unsigned char *)(v120 + 16) = *(unsigned char *)(v121 + 16);
      *(unsigned char *)(v120 + 17) = *(unsigned char *)(v121 + 17);
      *(unsigned char *)(v120 + 18) = *(unsigned char *)(v121 + 18);
      uint64_t v122 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v123 = v120 + v122;
      uint64_t v124 = v121 + v122;
      uint64_t v125 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v125 - 8) + 16))(v123, v124, v125);
    }
    else
    {
      *(void *)uint64_t v120 = *(void *)v121;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v126 = v40[10];
    uint64_t v127 = (uint64_t)v42 + v126;
    uint64_t v128 = (uint64_t)v41 + v126;
    uint64_t v129 = *(void *)v128;
    uint64_t v130 = *(void *)(v128 + 8);
    uint64_t v131 = *(void *)(v128 + 16);
    uint64_t v132 = *(void *)(v128 + 24);
    uint64_t v133 = *(void *)(v128 + 32);
    uint64_t v134 = *(void *)(v128 + 40);
    uint64_t v135 = *(void *)(v128 + 48);
    uint64_t v136 = *(void *)(v128 + 56);
    uint64_t v137 = *(void *)(v128 + 64);
    char v161 = *(unsigned char *)(v128 + 72);
    sub_1001910C8(*(void *)v128, v130, v131, v132, v133, v134, v135, v136, v137, v161);
    *(void *)uint64_t v127 = v129;
    *(void *)(v127 + 8) = v130;
    *(void *)(v127 + 16) = v131;
    *(void *)(v127 + 24) = v132;
    *(void *)(v127 + 32) = v133;
    *(void *)(v127 + 40) = v134;
    *(void *)(v127 + 48) = v135;
    *(void *)(v127 + 56) = v136;
    *(void *)(v127 + 64) = v137;
    *(unsigned char *)(v127 + 72) = v161;
    uint64_t v138 = v163[11];
    uint64_t v139 = (uint64_t)v164 + v138;
    uint64_t v140 = (uint64_t)v162 + v138;
    uint64_t v141 = *(void *)v140;
    LOBYTE(v130) = *(unsigned char *)(v140 + 8);
    sub_100195B7C(*(void *)v140, v130);
    *(void *)uint64_t v139 = v141;
    *(unsigned char *)(v139 + 8) = v130;
    uint64_t v142 = v163[12];
    uint64_t v143 = (uint64_t)v164 + v142;
    uint64_t v144 = (uint64_t)v162 + v142;
    uint64_t v145 = *(void *)v144;
    uint64_t v146 = *(void *)(v144 + 8);
    uint64_t v147 = *(void *)(v144 + 16);
    uint64_t v148 = *(void *)(v144 + 24);
    LOBYTE(v133) = *(unsigned char *)(v144 + 32);
    sub_100190CD4(*(void *)v144, v146, v147, v148, v133);
    *(void *)uint64_t v143 = v145;
    *(void *)(v143 + 8) = v146;
    *(void *)(v143 + 16) = v147;
    *(void *)(v143 + 24) = v148;
    *(unsigned char *)(v143 + 32) = v133;
    uint64_t v149 = v163[13];
    uint64_t v150 = (void *)((char *)v164 + v149);
    uint64_t v151 = (void *)((char *)v162 + v149);
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v152 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v152 - 8) + 16))(v150, v151, v152);
    }
    else
    {
      void *v150 = *v151;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v153 = v163[14];
    uint64_t v154 = (uint64_t)v164 + v153;
    uint64_t v155 = (uint64_t)v162 + v153;
    uint64_t v156 = *(void *)v155;
    char v157 = *(unsigned char *)(v155 + 8);
    sub_100195B7C(*(void *)v155, v157);
    *(void *)uint64_t v154 = v156;
    *(unsigned char *)(v154 + 8) = v157;
    return v164;
  }
  return (void *)v15;
}

uint64_t sub_1009274D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for LocationViewModel();
  uint64_t v9 = v8[5];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  if (_s7Weather24LocationCompositionStateOwet_0(a2 + v9, 1, v6))
  {
    uint64_t v12 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v10, (uint64_t)v11, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v6);
  }
  memcpy((void *)(a1 + v8[6]), (const void *)(a2 + v8[6]), 0xA2uLL);
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  *(void *)(a1 + v8[8]) = *(void *)(a2 + v8[8]);
  uint64_t v13 = v8[9];
  uint64_t v14 = (unsigned char *)(a1 + v13);
  uint64_t v15 = (unsigned char *)(a2 + v13);
  uint64_t v16 = type metadata accessor for LocationFooterViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
  {
    uint64_t v17 = sub_10017DF08(&qword_100E6DC18);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v97 = a3;
    unsigned char *v14 = *v15;
    *(_WORD *)(v14 + 1) = *(_WORD *)(v15 + 1);
    *(_OWORD *)(v14 + 8) = *(_OWORD *)(v15 + 8);
    uint64_t v18 = *(int *)(v16 + 32);
    uint64_t v19 = &v14[v18];
    uint64_t v20 = &v15[v18];
    uint64_t v21 = type metadata accessor for URL();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21))
    {
      uint64_t v22 = sub_10017DF08(&qword_100E749B0);
      memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
    }
    uint64_t v96 = (int *)v16;
    uint64_t v23 = *(int *)(v16 + 36);
    uint64_t v24 = &v14[v23];
    uint64_t v25 = &v15[v23];
    *uint64_t v24 = v15[v23];
    *((void *)v24 + 1) = *(void *)&v15[v23 + 8];
    char v26 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
    uint64_t v27 = v26[6];
    __dst = &v24[v27];
    uint64_t v28 = &v25[v27];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v25[v27], 1, v21))
    {
      uint64_t v29 = sub_10017DF08(&qword_100E749B0);
      memcpy(__dst, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 32))(__dst, v28, v21);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v21);
    }
    *(_OWORD *)&v24[v26[7]] = *(_OWORD *)&v25[v26[7]];
    *(void *)&v24[v26[8]] = *(void *)&v25[v26[8]];
    v14[v96[10]] = v15[v96[10]];
    uint64_t v30 = v96[11];
    uint64_t v31 = &v14[v30];
    uint64_t v32 = &v15[v30];
    uint64_t v33 = type metadata accessor for LocationOfInterest();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v33))
    {
      uint64_t v34 = sub_10017DF08(&qword_100E63508);
      memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v33);
    }
    v14[v96[12]] = v15[v96[12]];
    v14[v96[13]] = v15[v96[13]];
    uint64_t v35 = v96[14];
    char v36 = &v14[v35];
    uint64_t v37 = &v15[v35];
    uint64_t v38 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, (uint64_t)v38))
    {
      uint64_t v39 = sub_10017DF08(&qword_100E6DC10);
      memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      *char v36 = *v37;
      uint64_t v40 = v38[5];
      uint64_t v41 = &v36[v40];
      __dsta = &v37[v40];
      uint64_t v42 = type metadata accessor for Location();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v42 - 8) + 32))(v41, __dsta, v42);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v33 - 8) + 32))(&v36[v38[6]], &v37[v38[6]], v33);
      v36[v38[7]] = v37[v38[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, (uint64_t)v38);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, (uint64_t)v96);
    a3 = v97;
  }
  *(unsigned char *)(a1 + v8[10]) = *(unsigned char *)(a2 + v8[10]);
  *(unsigned char *)(a1 + v8[11]) = *(unsigned char *)(a2 + v8[11]);
  *(unsigned char *)(a1 + v8[12]) = *(unsigned char *)(a2 + v8[12]);
  *(unsigned char *)(a1 + v8[13]) = *(unsigned char *)(a2 + v8[13]);
  *(unsigned char *)(a1 + v8[14]) = *(unsigned char *)(a2 + v8[14]);
  *(void *)(a1 + v8[15]) = *(void *)(a2 + v8[15]);
  *(unsigned char *)(a1 + v8[16]) = *(unsigned char *)(a2 + v8[16]);
  *(unsigned char *)(a1 + v8[17]) = *(unsigned char *)(a2 + v8[17]);
  *(unsigned char *)(a1 + v8[18]) = *(unsigned char *)(a2 + v8[18]);
  uint64_t v43 = v8[19];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  uint64_t v47 = v8[20];
  uint64_t v48 = (void *)(a1 + v47);
  char v49 = (const void *)(a2 + v47);
  uint64_t v50 = type metadata accessor for ForegroundEffect();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v50))
  {
    uint64_t v51 = sub_10017DF08(&qword_100E65FA8);
    memcpy(v48, v49, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v50);
  }
  *(unsigned char *)(a1 + v8[21]) = *(unsigned char *)(a2 + v8[21]);
  *(void *)(a1 + v8[22]) = *(void *)(a2 + v8[22]);
  *(unsigned char *)(a1 + v8[23]) = *(unsigned char *)(a2 + v8[23]);
  uint64_t v52 = v8[24];
  uint64_t v53 = a1 + v52;
  uint64_t v54 = a2 + v52;
  uint64_t v55 = type metadata accessor for LocationEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
  uint64_t v56 = a3[5];
  uint64_t v57 = a3[6];
  uint64_t v58 = (_OWORD *)(a1 + v56);
  char v59 = (_OWORD *)(a2 + v56);
  long long v60 = v59[1];
  *uint64_t v58 = *v59;
  v58[1] = v60;
  uint64_t v61 = (_OWORD *)(a1 + v57);
  uint64_t v62 = (_OWORD *)(a2 + v57);
  long long v63 = v62[1];
  *uint64_t v61 = *v62;
  v61[1] = v63;
  uint64_t v64 = a3[7];
  uint64_t v65 = a3[8];
  long long v66 = *(_OWORD *)(a2 + v64);
  long long v67 = *(_OWORD *)(a2 + v64 + 16);
  uint64_t v68 = (_OWORD *)(a1 + v64);
  _OWORD *v68 = v66;
  v68[1] = v67;
  uint64_t v69 = a1 + v65;
  uint64_t v70 = a2 + v65;
  uint64_t v71 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 32))(v69, v70, v71);
  uint64_t v72 = a3[9];
  uint64_t v73 = (char *)(a1 + v72);
  uint64_t v74 = (char *)(a2 + v72);
  uint64_t v75 = sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)uint64_t v73 = *(_OWORD *)v74;
    v73[16] = v74[16];
    v73[17] = v74[17];
    v73[18] = v74[18];
    uint64_t v76 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v77 = &v73[v76];
    uint64_t v78 = &v74[v76];
    uint64_t v79 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v77, v78, v79);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
  }
  memcpy((void *)(a1 + a3[10]), (const void *)(a2 + a3[10]), 0x49uLL);
  uint64_t v80 = a3[11];
  uint64_t v81 = a3[12];
  uint64_t v82 = a1 + v80;
  uint64_t v83 = a2 + v80;
  *(void *)uint64_t v82 = *(void *)v83;
  *(unsigned char *)(v82 + 8) = *(unsigned char *)(v83 + 8);
  uint64_t v84 = a1 + v81;
  uint64_t v85 = a2 + v81;
  long long v86 = *(_OWORD *)(v85 + 16);
  *(_OWORD *)uint64_t v84 = *(_OWORD *)v85;
  *(_OWORD *)(v84 + 16) = v86;
  *(unsigned char *)(v84 + 32) = *(unsigned char *)(v85 + 32);
  uint64_t v87 = a3[13];
  uint64_t v88 = (void *)(a1 + v87);
  uint64_t v89 = (const void *)(a2 + v87);
  uint64_t v90 = sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v91 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v91 - 8) + 32))(v88, v89, v91);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v88, v89, *(void *)(*(void *)(v90 - 8) + 64));
  }
  uint64_t v92 = a3[14];
  uint64_t v93 = a1 + v92;
  uint64_t v94 = a2 + v92;
  *(void *)uint64_t v93 = *(void *)v94;
  *(unsigned char *)(v93 + 8) = *(unsigned char *)(v94 + 8);
  return a1;
}

uint64_t sub_100927E18(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = type metadata accessor for Location.Identifier();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  uint64_t v8 = (int *)type metadata accessor for LocationViewModel();
  uint64_t v9 = v8[5];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  int v12 = _s7Weather24LocationCompositionStateOwet_0(a1 + v9, 1, v5);
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v5);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v10, v11, v5);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v5);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v10, v5);
LABEL_6:
    uint64_t v14 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v7((uint64_t)v10, (uint64_t)v11, v5);
LABEL_7:
  uint64_t v15 = v8[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = *(void *)(a2 + v15 + 8);
  *(void *)uint64_t v16 = *(void *)(a2 + v15);
  *(void *)(v16 + 8) = v18;
  swift_bridgeObjectRelease();
  char v19 = *(unsigned char *)(v17 + 48);
  uint64_t v20 = *(void *)(v16 + 16);
  uint64_t v21 = *(void *)(v16 + 24);
  uint64_t v22 = *(void *)(v16 + 32);
  uint64_t v23 = *(void *)(v16 + 40);
  long long v24 = *(_OWORD *)(v17 + 32);
  *(_OWORD *)(v16 + 16) = *(_OWORD *)(v17 + 16);
  *(_OWORD *)(v16 + 32) = v24;
  char v25 = *(unsigned char *)(v16 + 48);
  *(unsigned char *)(v16 + 48) = v19;
  sub_100191D78(v20, v21, v22, v23, v25);
  uint64_t v26 = *(void *)(v17 + 64);
  *(void *)(v16 + 56) = *(void *)(v17 + 56);
  *(void *)(v16 + 64) = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = *(void *)(v17 + 80);
  *(void *)(v16 + 72) = *(void *)(v17 + 72);
  *(void *)(v16 + 80) = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(v17 + 96);
  *(void *)(v16 + 88) = *(void *)(v17 + 88);
  *(void *)(v16 + 96) = v28;
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void *)(v17 + 112);
  *(void *)(v16 + 104) = *(void *)(v17 + 104);
  *(void *)(v16 + 112) = v29;
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(v17 + 128);
  *(void *)(v16 + 120) = *(void *)(v17 + 120);
  *(void *)(v16 + 128) = v30;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v16 + 136) = *(unsigned char *)(v17 + 136);
  *(unsigned char *)(v16 + 137) = *(unsigned char *)(v17 + 137);
  *(unsigned char *)(v16 + 138) = *(unsigned char *)(v17 + 138);
  uint64_t v31 = *(void *)(v17 + 152);
  *(void *)(v16 + 144) = *(void *)(v17 + 144);
  *(void *)(v16 + 152) = v31;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v16 + 160) = *(unsigned char *)(v17 + 160);
  *(unsigned char *)(v16 + 161) = *(unsigned char *)(v17 + 161);
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + v8[8]) = *(void *)(a2 + v8[8]);
  swift_release();
  uint64_t v32 = v8[9];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  uint64_t v35 = (int *)type metadata accessor for LocationFooterViewModel();
  LODWORD(v16) = _s7Weather24LocationCompositionStateOwet_0(v33, 1, (uint64_t)v35);
  int v36 = _s7Weather24LocationCompositionStateOwet_0(v34, 1, (uint64_t)v35);
  if (v16)
  {
    if (!v36)
    {
      *(unsigned char *)uint64_t v33 = *(unsigned char *)v34;
      *(_WORD *)(v33 + 1) = *(_WORD *)(v34 + 1);
      *(_OWORD *)(v33 + 8) = *(_OWORD *)(v34 + 8);
      uint64_t v37 = v35[8];
      uint64_t v38 = (void *)(v33 + v37);
      uint64_t v39 = (const void *)(v34 + v37);
      uint64_t v40 = type metadata accessor for URL();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40))
      {
        uint64_t v41 = sub_10017DF08(&qword_100E749B0);
        memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
      }
      uint64_t v207 = v35;
      uint64_t v52 = v35[9];
      uint64_t v53 = v33 + v52;
      uint64_t v54 = v34 + v52;
      *(unsigned char *)uint64_t v53 = *(unsigned char *)(v34 + v52);
      *(void *)(v53 + 8) = *(void *)(v34 + v52 + 8);
      uint64_t v55 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
      uint64_t v56 = v55[6];
      __dst = (void *)(v53 + v56);
      uint64_t v57 = (const void *)(v54 + v56);
      if (_s7Weather24LocationCompositionStateOwet_0(v54 + v56, 1, v40))
      {
        uint64_t v58 = sub_10017DF08(&qword_100E749B0);
        memcpy(__dst, v57, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v40 - 8) + 32))(__dst, v57, v40);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v40);
      }
      *(_OWORD *)(v53 + v55[7]) = *(_OWORD *)(v54 + v55[7]);
      *(void *)(v53 + v55[8]) = *(void *)(v54 + v55[8]);
      *(unsigned char *)(v33 + v207[10]) = *(unsigned char *)(v34 + v207[10]);
      uint64_t v59 = v207[11];
      long long v60 = (void *)(v33 + v59);
      uint64_t v61 = (const void *)(v34 + v59);
      uint64_t v62 = type metadata accessor for LocationOfInterest();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v62))
      {
        uint64_t v63 = sub_10017DF08(&qword_100E63508);
        memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v62);
      }
      *(unsigned char *)(v33 + v207[12]) = *(unsigned char *)(v34 + v207[12]);
      *(unsigned char *)(v33 + v207[13]) = *(unsigned char *)(v34 + v207[13]);
      uint64_t v64 = v207[14];
      uint64_t v65 = (unsigned char *)(v33 + v64);
      long long v66 = (unsigned char *)(v34 + v64);
      long long v67 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, (uint64_t)v67))
      {
        uint64_t v68 = sub_10017DF08(&qword_100E6DC10);
        memcpy(v65, v66, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        unsigned char *v65 = *v66;
        uint64_t v69 = v67[5];
        uint64_t v70 = &v65[v69];
        __dstb = &v66[v69];
        uint64_t v71 = type metadata accessor for Location();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v71 - 8) + 32))(v70, __dstb, v71);
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v62 - 8) + 32))(&v65[v67[6]], &v66[v67[6]], v62);
        v65[v67[7]] = v66[v67[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 0, 1, (uint64_t)v67);
      }
      uint64_t v72 = v33;
      uint64_t v73 = (uint64_t)v207;
      goto LABEL_30;
    }
    goto LABEL_13;
  }
  if (v36)
  {
    sub_1001338DC(v33, (void (*)(void))type metadata accessor for LocationFooterViewModel);
LABEL_13:
    size_t v42 = *(void *)(*(void *)(sub_10017DF08(&qword_100E6DC18) - 8) + 64);
    uint64_t v43 = (void *)v33;
    uint64_t v44 = (const void *)v34;
LABEL_14:
    memcpy(v43, v44, v42);
    goto LABEL_31;
  }
  *(unsigned char *)uint64_t v33 = *(unsigned char *)v34;
  *(unsigned char *)(v33 + 1) = *(unsigned char *)(v34 + 1);
  *(unsigned char *)(v33 + 2) = *(unsigned char *)(v34 + 2);
  uint64_t v45 = *(void *)(v34 + 16);
  *(void *)(v33 + 8) = *(void *)(v34 + 8);
  *(void *)(v33 + 16) = v45;
  swift_bridgeObjectRelease();
  uint64_t v46 = v35[8];
  uint64_t v47 = (void *)(v33 + v46);
  uint64_t v48 = (const void *)(v34 + v46);
  uint64_t v49 = type metadata accessor for URL();
  int v50 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v49);
  int v51 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v49);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v49);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  uint64_t v168 = *(void *)(v49 - 8);
  if (v51)
  {
    (*(void (**)(void *, uint64_t))(v168 + 8))(v47, v49);
LABEL_54:
    uint64_t v169 = sub_10017DF08(&qword_100E749B0);
    memcpy(v47, v48, *(void *)(*(void *)(v169 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(void *, const void *, uint64_t))(v168 + 40))(v47, v48, v49);
LABEL_55:
  uint64_t v170 = v35[9];
  uint64_t v171 = v33 + v170;
  uint64_t v172 = v34 + v170;
  *(unsigned char *)uint64_t v171 = *(unsigned char *)(v34 + v170);
  *(void *)(v171 + 8) = *(void *)(v34 + v170 + 8);
  swift_bridgeObjectRelease();
  uint64_t v208 = v172;
  __dsta = (int *)type metadata accessor for LearnMoreAttributorViewModel();
  uint64_t v173 = __dsta[6];
  uint64_t v174 = (const void *)(v172 + v173);
  uint64_t v206 = v171 + v173;
  LODWORD(v172) = _s7Weather24LocationCompositionStateOwet_0(v171 + v173, 1, v49);
  int v175 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v174, 1, v49);
  if (v172)
  {
    if (v175)
    {
      size_t v176 = *(void *)(*(void *)(sub_10017DF08(&qword_100E749B0) - 8) + 64);
      uint64_t v177 = (void *)v206;
LABEL_60:
      memcpy(v177, v174, v176);
      goto LABEL_64;
    }
    (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v49 - 8) + 32))(v206, v174, v49);
    _s7Weather24LocationCompositionStateOwst_0(v206, 0, 1, v49);
  }
  else
  {
    uint64_t v178 = *(void *)(v49 - 8);
    if (v175)
    {
      (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v206, v49);
      size_t v176 = *(void *)(*(void *)(sub_10017DF08(&qword_100E749B0) - 8) + 64);
      uint64_t v177 = (void *)v206;
      goto LABEL_60;
    }
    (*(void (**)(uint64_t, const void *, uint64_t))(v178 + 40))(v206, v174, v49);
  }
LABEL_64:
  uint64_t v179 = __dsta[7];
  uint64_t v180 = (void *)(v171 + v179);
  uint64_t v181 = (uint64_t *)(v208 + v179);
  uint64_t v183 = *v181;
  uint64_t v182 = v181[1];
  *uint64_t v180 = v183;
  v180[1] = v182;
  swift_bridgeObjectRelease();
  *(void *)(v171 + __dsta[8]) = *(void *)(v208 + __dsta[8]);
  swift_release();
  *(unsigned char *)(v33 + v35[10]) = *(unsigned char *)(v34 + v35[10]);
  uint64_t v184 = v35[11];
  uint64_t v185 = (void *)(v33 + v184);
  uint64_t v186 = (const void *)(v34 + v184);
  uint64_t v187 = type metadata accessor for LocationOfInterest();
  int v188 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v185, 1, v187);
  int v189 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v186, 1, v187);
  if (v188)
  {
    if (!v189)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v187 - 8) + 32))(v185, v186, v187);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v185, 0, 1, v187);
      goto LABEL_70;
    }
    goto LABEL_69;
  }
  uint64_t v190 = *(void *)(v187 - 8);
  if (v189)
  {
    (*(void (**)(void *, uint64_t))(v190 + 8))(v185, v187);
LABEL_69:
    uint64_t v191 = sub_10017DF08(&qword_100E63508);
    memcpy(v185, v186, *(void *)(*(void *)(v191 - 8) + 64));
    goto LABEL_70;
  }
  (*(void (**)(void *, const void *, uint64_t))(v190 + 40))(v185, v186, v187);
LABEL_70:
  *(unsigned char *)(v33 + v35[12]) = *(unsigned char *)(v34 + v35[12]);
  *(unsigned char *)(v33 + v35[13]) = *(unsigned char *)(v34 + v35[13]);
  uint64_t v192 = v35[14];
  uint64_t v193 = (unsigned char *)(v33 + v192);
  uint64_t v194 = (unsigned char *)(v34 + v192);
  uint64_t v195 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
  int v196 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v193, 1, (uint64_t)v195);
  int v197 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v194, 1, (uint64_t)v195);
  if (v196)
  {
    if (!v197)
    {
      *uint64_t v193 = *v194;
      uint64_t v198 = v195[5];
      uint64_t v199 = &v193[v198];
      uint64_t v200 = &v194[v198];
      uint64_t v201 = type metadata accessor for Location();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v201 - 8) + 32))(v199, v200, v201);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v187 - 8) + 32))(&v193[v195[6]], &v194[v195[6]], v187);
      v193[v195[7]] = v194[v195[7]];
      uint64_t v72 = (uint64_t)v193;
      uint64_t v73 = (uint64_t)v195;
LABEL_30:
      _s7Weather24LocationCompositionStateOwst_0(v72, 0, 1, v73);
      goto LABEL_31;
    }
    goto LABEL_75;
  }
  if (v197)
  {
    sub_1001338DC((uint64_t)v193, (void (*)(void))type metadata accessor for HomeAndWorkRefinementRowViewModel);
LABEL_75:
    size_t v42 = *(void *)(*(void *)(sub_10017DF08(&qword_100E6DC10) - 8) + 64);
    uint64_t v43 = v193;
    uint64_t v44 = v194;
    goto LABEL_14;
  }
  *uint64_t v193 = *v194;
  uint64_t v202 = v195[5];
  uint64_t v203 = &v193[v202];
  uint64_t v204 = &v194[v202];
  uint64_t v205 = type metadata accessor for Location();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v205 - 8) + 40))(v203, v204, v205);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v187 - 8) + 40))(&v193[v195[6]], &v194[v195[6]], v187);
  v193[v195[7]] = v194[v195[7]];
LABEL_31:
  *(unsigned char *)(a1 + v8[10]) = *(unsigned char *)(a2 + v8[10]);
  *(unsigned char *)(a1 + v8[11]) = *(unsigned char *)(a2 + v8[11]);
  *(unsigned char *)(a1 + v8[12]) = *(unsigned char *)(a2 + v8[12]);
  *(unsigned char *)(a1 + v8[13]) = *(unsigned char *)(a2 + v8[13]);
  *(unsigned char *)(a1 + v8[14]) = *(unsigned char *)(a2 + v8[14]);
  uint64_t v74 = v8[15];
  uint64_t v75 = *(void **)(a1 + v74);
  *(void *)(a1 + v74) = *(void *)(a2 + v74);

  *(unsigned char *)(a1 + v8[16]) = *(unsigned char *)(a2 + v8[16]);
  *(unsigned char *)(a1 + v8[17]) = *(unsigned char *)(a2 + v8[17]);
  *(unsigned char *)(a1 + v8[18]) = *(unsigned char *)(a2 + v8[18]);
  uint64_t v76 = v8[19];
  uint64_t v77 = a1 + v76;
  uint64_t v78 = a2 + v76;
  uint64_t v79 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 40))(v77, v78, v79);
  uint64_t v80 = v8[20];
  uint64_t v81 = (void *)(a1 + v80);
  uint64_t v82 = (const void *)(a2 + v80);
  uint64_t v83 = type metadata accessor for ForegroundEffect();
  LODWORD(v77) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v81, 1, v83);
  int v84 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v83);
  if (v77)
  {
    if (!v84)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v83 - 8) + 32))(v81, v82, v83);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v83);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  uint64_t v85 = *(void *)(v83 - 8);
  if (v84)
  {
    (*(void (**)(void *, uint64_t))(v85 + 8))(v81, v83);
LABEL_36:
    uint64_t v86 = sub_10017DF08(&qword_100E65FA8);
    memcpy(v81, v82, *(void *)(*(void *)(v86 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, const void *, uint64_t))(v85 + 40))(v81, v82, v83);
LABEL_37:
  *(unsigned char *)(a1 + v8[21]) = *(unsigned char *)(a2 + v8[21]);
  *(void *)(a1 + v8[22]) = *(void *)(a2 + v8[22]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v8[23]) = *(unsigned char *)(a2 + v8[23]);
  uint64_t v87 = v8[24];
  uint64_t v88 = a1 + v87;
  uint64_t v89 = a2 + v87;
  uint64_t v90 = type metadata accessor for LocationEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 40))(v88, v89, v90);
  uint64_t v91 = a3[5];
  uint64_t v92 = a1 + v91;
  uint64_t v93 = a2 + v91;
  LOBYTE(v91) = *(unsigned char *)(a2 + v91 + 16);
  uint64_t v94 = *(void *)v92;
  uint64_t v95 = *(void *)(v92 + 8);
  char v96 = *(unsigned char *)(v92 + 16);
  *(_OWORD *)uint64_t v92 = *(_OWORD *)v93;
  *(unsigned char *)(v92 + 16) = v91;
  sub_100191924(v94, v95, v96);
  *(void *)(v92 + 24) = *(void *)(v93 + 24);
  swift_bridgeObjectRelease();
  uint64_t v97 = a3[6];
  uint64_t v98 = a1 + v97;
  uint64_t v99 = a2 + v97;
  LOBYTE(v97) = *(unsigned char *)(a2 + v97 + 16);
  uint64_t v100 = *(void *)v98;
  uint64_t v101 = *(void *)(v98 + 8);
  char v102 = *(unsigned char *)(v98 + 16);
  *(_OWORD *)uint64_t v98 = *(_OWORD *)v99;
  *(unsigned char *)(v98 + 16) = v97;
  sub_100191924(v100, v101, v102);
  *(void *)(v98 + 24) = *(void *)(v99 + 24);
  swift_bridgeObjectRelease();
  uint64_t v103 = a3[7];
  uint64_t v104 = a1 + v103;
  uint64_t v105 = a2 + v103;
  if (*(void *)(a1 + v103 + 24))
  {
    if (*(void *)(v105 + 24))
    {
      char v106 = *(unsigned char *)(v105 + 16);
      uint64_t v107 = *(void *)v104;
      uint64_t v108 = *(void *)(v104 + 8);
      char v109 = *(unsigned char *)(v104 + 16);
      *(_OWORD *)uint64_t v104 = *(_OWORD *)v105;
      *(unsigned char *)(v104 + 16) = v106;
      sub_100191924(v107, v108, v109);
      *(void *)(v104 + 24) = *(void *)(v105 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_42;
    }
    sub_10024ADC8(v104);
  }
  long long v110 = *(_OWORD *)(v105 + 16);
  *(_OWORD *)uint64_t v104 = *(_OWORD *)v105;
  *(_OWORD *)(v104 + 16) = v110;
LABEL_42:
  uint64_t v111 = a3[8];
  uint64_t v112 = a1 + v111;
  uint64_t v113 = a2 + v111;
  uint64_t v114 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 40))(v112, v113, v114);
  if (a1 != a2)
  {
    uint64_t v115 = a3[9];
    uint64_t v116 = (char *)(a1 + v115);
    uint64_t v117 = (char *)(a2 + v115);
    sub_100178110(a1 + v115, &qword_100E63BD0);
    uint64_t v118 = sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)uint64_t v116 = *(_OWORD *)v117;
      v116[16] = v117[16];
      v116[17] = v117[17];
      v116[18] = v117[18];
      uint64_t v119 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v120 = &v116[v119];
      uint64_t v121 = &v117[v119];
      uint64_t v122 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 32))(v120, v121, v122);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v116, v117, *(void *)(*(void *)(v118 - 8) + 64));
    }
  }
  uint64_t v123 = a3[10];
  uint64_t v124 = a1 + v123;
  uint64_t v125 = a2 + v123;
  uint64_t v126 = *(void *)(v125 + 64);
  char v127 = *(unsigned char *)(v125 + 72);
  uint64_t v128 = *(void *)v124;
  uint64_t v129 = *(void *)(v124 + 8);
  uint64_t v130 = *(void *)(v124 + 16);
  uint64_t v131 = *(void *)(v124 + 24);
  uint64_t v132 = *(void *)(v124 + 32);
  uint64_t v133 = *(void *)(v124 + 40);
  uint64_t v134 = *(void *)(v124 + 48);
  uint64_t v135 = *(void *)(v124 + 56);
  uint64_t v136 = *(void *)(v124 + 64);
  char v137 = *(unsigned char *)(v124 + 72);
  long long v138 = *(_OWORD *)(v125 + 16);
  *(_OWORD *)uint64_t v124 = *(_OWORD *)v125;
  *(_OWORD *)(v124 + 16) = v138;
  long long v139 = *(_OWORD *)(v125 + 48);
  *(_OWORD *)(v124 + 32) = *(_OWORD *)(v125 + 32);
  *(_OWORD *)(v124 + 48) = v139;
  *(void *)(v124 + 64) = v126;
  *(unsigned char *)(v124 + 72) = v127;
  sub_10018CCC4(v128, v129, v130, v131, v132, v133, v134, v135, v136, v137);
  uint64_t v140 = a3[11];
  uint64_t v141 = a1 + v140;
  uint64_t v142 = (uint64_t *)(a2 + v140);
  uint64_t v143 = *v142;
  LOBYTE(v142) = *((unsigned char *)v142 + 8);
  uint64_t v144 = *(void *)v141;
  char v145 = *(unsigned char *)(v141 + 8);
  *(void *)uint64_t v141 = v143;
  *(unsigned char *)(v141 + 8) = (_BYTE)v142;
  sub_10018F6D8(v144, v145);
  uint64_t v146 = a3[12];
  uint64_t v147 = a1 + v146;
  uint64_t v148 = a2 + v146;
  char v149 = *(unsigned char *)(v148 + 32);
  uint64_t v150 = *(void *)v147;
  uint64_t v151 = *(void *)(v147 + 8);
  uint64_t v152 = *(void *)(v147 + 16);
  uint64_t v153 = *(void *)(v147 + 24);
  char v154 = *(unsigned char *)(v147 + 32);
  long long v155 = *(_OWORD *)(v148 + 16);
  *(_OWORD *)uint64_t v147 = *(_OWORD *)v148;
  *(_OWORD *)(v147 + 16) = v155;
  *(unsigned char *)(v147 + 32) = v149;
  sub_100191934(v150, v151, v152, v153, v154);
  if (a1 != a2)
  {
    uint64_t v156 = a3[13];
    char v157 = (void *)(a1 + v156);
    uint64_t v158 = (const void *)(a2 + v156);
    sub_100178110(a1 + v156, &qword_100E63BC8);
    uint64_t v159 = sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v160 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v160 - 8) + 32))(v157, v158, v160);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v157, v158, *(void *)(*(void *)(v159 - 8) + 64));
    }
  }
  uint64_t v161 = a3[14];
  uint64_t v162 = a1 + v161;
  uint64_t v163 = (uint64_t *)(a2 + v161);
  uint64_t v164 = *v163;
  LOBYTE(v163) = *((unsigned char *)v163 + 8);
  uint64_t v165 = *(void *)v162;
  char v166 = *(unsigned char *)(v162 + 8);
  *(void *)uint64_t v162 = v164;
  *(unsigned char *)(v162 + 8) = (_BYTE)v163;
  sub_10018F6D8(v165, v166);
  return a1;
}

uint64_t sub_1009290A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1009290BC);
}

uint64_t sub_1009290BC(uint64_t a1, uint64_t a2, int *a3)
{
  sub_100165384();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == v3)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v4;
  }
  else
  {
    if (v3 == 0x7FFFFFFF) {
      return sub_100163020(*(void *)(v4 + a3[5] + 24));
    }
    type metadata accessor for Text.Measurements();
    sub_100162F30();
    if (*(_DWORD *)(v12 + 84) == v3)
    {
      uint64_t v8 = v11;
      uint64_t v13 = a3[8];
    }
    else
    {
      sub_10017DF08(&qword_100E63BF8);
      sub_100162F30();
      if (*(_DWORD *)(v15 + 84) == v3)
      {
        uint64_t v8 = v14;
        uint64_t v13 = a3[9];
      }
      else
      {
        uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100EAA530);
        uint64_t v13 = a3[13];
      }
    }
    uint64_t v9 = v4 + v13;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, v3, v8);
}

uint64_t sub_1009291A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009291BC);
}

void sub_1009291BC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_100165384();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = v5;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      sub_10018A4B4();
      return;
    }
    type metadata accessor for Text.Measurements();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[8];
    }
    else
    {
      sub_10017DF08(&qword_100E63BF8);
      sub_100162F30();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[9];
      }
      else
      {
        uint64_t v10 = sub_10017DF08((uint64_t *)&unk_100EAA530);
        uint64_t v14 = a4[13];
      }
    }
    uint64_t v11 = v5 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, v4, v4, v10);
}

void *sub_1009292A4(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    uint64_t v15 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Location.Identifier();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = type metadata accessor for LocationViewModel();
    uint64_t v10 = *(int *)(v9 + 20);
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v156 = a3;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v10], 1, v7))
    {
      uint64_t v13 = sub_10017DF08(&qword_100E6DC08);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v8(v11, v12, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v7);
    }
    uint64_t v16 = *(int *)(v9 + 24);
    uint64_t v17 = &a1[v16];
    uint64_t v18 = &a2[v16];
    uint64_t v19 = *(void *)&a2[v16 + 8];
    *(void *)uint64_t v17 = *(void *)&a2[v16];
    *((void *)v17 + 1) = v19;
    uint64_t v20 = *(void *)&a2[v16 + 16];
    uint64_t v21 = *(void *)&a2[v16 + 24];
    uint64_t v22 = a2;
    uint64_t v23 = *(void *)&a2[v16 + 32];
    uint64_t v24 = *(void *)&a2[v16 + 40];
    char v25 = a1;
    char v26 = v18[48];
    swift_bridgeObjectRetain();
    sub_100193004(v20, v21, v23, v24, v26);
    *((void *)v17 + 2) = v20;
    *((void *)v17 + 3) = v21;
    *((void *)v17 + 4) = v23;
    *((void *)v17 + 5) = v24;
    v17[48] = v26;
    uint64_t v27 = *((void *)v18 + 8);
    *((void *)v17 + 7) = *((void *)v18 + 7);
    *((void *)v17 + 8) = v27;
    uint64_t v28 = *((void *)v18 + 10);
    *((void *)v17 + 9) = *((void *)v18 + 9);
    *((void *)v17 + 10) = v28;
    uint64_t v29 = *((void *)v18 + 12);
    *((void *)v17 + 11) = *((void *)v18 + 11);
    *((void *)v17 + 12) = v29;
    uint64_t v30 = (int *)v9;
    uint64_t v31 = *((void *)v18 + 14);
    *((void *)v17 + 13) = *((void *)v18 + 13);
    *((void *)v17 + 14) = v31;
    uint64_t v32 = *((void *)v18 + 16);
    *((void *)v17 + 15) = *((void *)v18 + 15);
    *((void *)v17 + 16) = v32;
    v17[136] = v18[136];
    *(_WORD *)(v17 + 137) = *(_WORD *)(v18 + 137);
    uint64_t v33 = *((void *)v18 + 19);
    *((void *)v17 + 18) = *((void *)v18 + 18);
    *((void *)v17 + 19) = v33;
    v17[160] = v18[160];
    v17[161] = v18[161];
    *(void *)((char *)v25 + v30[7]) = *(void *)((char *)v22 + v30[7]);
    *(void *)((char *)v25 + v30[8]) = *(void *)((char *)v22 + v30[8]);
    uint64_t v153 = v30;
    long long v155 = v22;
    uint64_t v34 = v30[9];
    char v157 = v25;
    uint64_t v35 = (char *)v25 + v34;
    int v36 = (char *)v22 + v34;
    uint64_t v37 = type metadata accessor for LocationFooterViewModel();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v38 = (int *)v37;
    swift_bridgeObjectRetain();
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37))
    {
      uint64_t v39 = sub_10017DF08(&qword_100E6DC18);
      memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
      uint64_t v41 = v155;
      uint64_t v40 = v156;
      size_t v42 = v157;
      uint64_t v43 = v153;
    }
    else
    {
      *uint64_t v35 = *v36;
      *(_WORD *)(v35 + 1) = *(_WORD *)(v36 + 1);
      uint64_t v44 = v36;
      uint64_t v45 = *((void *)v36 + 1);
      uint64_t v46 = *((void *)v36 + 2);
      *((void *)v35 + 1) = v45;
      *((void *)v35 + 2) = v46;
      uint64_t v47 = *(int *)(v37 + 32);
      uint64_t v48 = &v35[v47];
      uint64_t v49 = v44;
      int v50 = &v44[v47];
      uint64_t v51 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v51))
      {
        uint64_t v52 = sub_10017DF08(&qword_100E749B0);
        memcpy(v48, v50, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v51 - 8) + 16))(v48, v50, v51);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v51);
      }
      uint64_t v40 = v156;
      uint64_t v152 = v38;
      uint64_t v53 = v38[9];
      uint64_t v54 = &v35[v53];
      uint64_t v55 = &v49[v53];
      unsigned char *v54 = v49[v53];
      *((void *)v54 + 1) = *(void *)&v49[v53 + 8];
      uint64_t v56 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
      uint64_t v57 = v56[6];
      uint64_t v58 = &v54[v57];
      uint64_t v59 = &v55[v57];
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v51))
      {
        uint64_t v60 = sub_10017DF08(&qword_100E749B0);
        memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v51 - 8) + 16))(v58, v59, v51);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v51);
      }
      uint64_t v61 = v56[7];
      uint64_t v62 = &v54[v61];
      uint64_t v63 = &v55[v61];
      uint64_t v64 = v63[1];
      void *v62 = *v63;
      v62[1] = v64;
      *(void *)&v54[v56[8]] = *(void *)&v55[v56[8]];
      v35[v152[10]] = v49[v152[10]];
      uint64_t v65 = v152[11];
      long long v66 = &v35[v65];
      long long v67 = &v49[v65];
      uint64_t v68 = type metadata accessor for LocationOfInterest();
      swift_bridgeObjectRetain();
      swift_retain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v67, 1, v68))
      {
        uint64_t v69 = sub_10017DF08(&qword_100E63508);
        memcpy(v66, v67, *(void *)(*(void *)(v69 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v68 - 8) + 16))(v66, v67, v68);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v66, 0, 1, v68);
      }
      v35[v152[12]] = v49[v152[12]];
      v35[v152[13]] = v49[v152[13]];
      uint64_t v70 = v152[14];
      uint64_t v71 = &v35[v70];
      uint64_t v72 = &v49[v70];
      uint64_t v73 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v72, 1, (uint64_t)v73))
      {
        uint64_t v74 = sub_10017DF08(&qword_100E6DC10);
        memcpy(v71, v72, *(void *)(*(void *)(v74 - 8) + 64));
      }
      else
      {
        *uint64_t v71 = *v72;
        uint64_t v75 = v73[5];
        uint64_t v76 = &v71[v75];
        uint64_t v77 = &v72[v75];
        uint64_t v78 = type metadata accessor for Location();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v78 - 8) + 16))(v76, v77, v78);
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v68 - 8) + 16))(&v71[v73[6]], &v72[v73[6]], v68);
        v71[v73[7]] = v72[v73[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v71, 0, 1, (uint64_t)v73);
      }
      uint64_t v43 = v153;
      uint64_t v41 = v155;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, (uint64_t)v152);
      size_t v42 = v157;
    }
    *((unsigned char *)v42 + v43[10]) = *((unsigned char *)v41 + v43[10]);
    *((unsigned char *)v42 + v43[11]) = *((unsigned char *)v41 + v43[11]);
    *((unsigned char *)v42 + v43[12]) = *((unsigned char *)v41 + v43[12]);
    *((unsigned char *)v42 + v43[13]) = *((unsigned char *)v41 + v43[13]);
    *((unsigned char *)v42 + v43[14]) = *((unsigned char *)v41 + v43[14]);
    uint64_t v79 = v43[15];
    uint64_t v80 = *(void **)((char *)v41 + v79);
    *(void *)((char *)v42 + v79) = v80;
    *((unsigned char *)v42 + v43[16]) = *((unsigned char *)v41 + v43[16]);
    *((unsigned char *)v42 + v43[17]) = *((unsigned char *)v41 + v43[17]);
    *((unsigned char *)v42 + v43[18]) = *((unsigned char *)v41 + v43[18]);
    uint64_t v81 = v43[19];
    uint64_t v82 = (uint64_t)v42 + v81;
    uint64_t v83 = (uint64_t)v41 + v81;
    uint64_t v84 = type metadata accessor for Date();
    uint64_t v85 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 16);
    id v86 = v80;
    v85(v82, v83, v84);
    uint64_t v87 = v43[20];
    uint64_t v88 = (char *)v42 + v87;
    uint64_t v89 = (char *)v41 + v87;
    uint64_t v90 = type metadata accessor for ForegroundEffect();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v89, 1, v90))
    {
      uint64_t v91 = sub_10017DF08(&qword_100E65FA8);
      memcpy(v88, v89, *(void *)(*(void *)(v91 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16))(v88, v89, v90);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v88, 0, 1, v90);
    }
    *((unsigned char *)v42 + v43[21]) = *((unsigned char *)v41 + v43[21]);
    *(void *)((char *)v42 + v43[22]) = *(void *)((char *)v41 + v43[22]);
    *((unsigned char *)v42 + v43[23]) = *((unsigned char *)v41 + v43[23]);
    uint64_t v92 = v43[24];
    uint64_t v93 = (uint64_t)v42 + v92;
    uint64_t v94 = (uint64_t)v41 + v92;
    uint64_t v95 = type metadata accessor for LocationEntity();
    char v96 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 16);
    swift_bridgeObjectRetain();
    v96(v93, v94, v95);
    uint64_t v97 = v40[5];
    uint64_t v98 = (uint64_t)v42 + v97;
    uint64_t v99 = (uint64_t)v41 + v97;
    uint64_t v100 = *(void *)((char *)v41 + v97);
    uint64_t v101 = *(void *)((char *)v41 + v97 + 8);
    LOBYTE(v94) = *((unsigned char *)v41 + v97 + 16);
    sub_100190CC4(v100, v101, v94);
    *(void *)uint64_t v98 = v100;
    *(void *)(v98 + 8) = v101;
    *(unsigned char *)(v98 + 16) = v94;
    *(void *)(v98 + 24) = *(void *)(v99 + 24);
    uint64_t v102 = v40[6];
    uint64_t v103 = (uint64_t)v42 + v102;
    uint64_t v104 = (uint64_t)v41 + v102;
    uint64_t v105 = *(void *)((char *)v41 + v102);
    uint64_t v106 = *(void *)((char *)v41 + v102 + 8);
    LOBYTE(v94) = *((unsigned char *)v41 + v102 + 16);
    swift_bridgeObjectRetain();
    sub_100190CC4(v105, v106, v94);
    *(void *)uint64_t v103 = v105;
    *(void *)(v103 + 8) = v106;
    *(unsigned char *)(v103 + 16) = v94;
    *(void *)(v103 + 24) = *(void *)(v104 + 24);
    uint64_t v107 = v40[7];
    uint64_t v108 = (uint64_t)v42 + v107;
    uint64_t v109 = (uint64_t)v41 + v107;
    uint64_t v110 = *(void *)((char *)v41 + v107 + 24);
    swift_bridgeObjectRetain();
    if (v110)
    {
      uint64_t v111 = *(void *)v109;
      uint64_t v112 = *(void *)(v109 + 8);
      char v113 = *(unsigned char *)(v109 + 16);
      sub_100190CC4(*(void *)v109, v112, v113);
      *(void *)uint64_t v108 = v111;
      *(void *)(v108 + 8) = v112;
      *(unsigned char *)(v108 + 16) = v113;
      *(void *)(v108 + 24) = *(void *)(v109 + 24);
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v114 = *(_OWORD *)(v109 + 16);
      *(_OWORD *)uint64_t v108 = *(_OWORD *)v109;
      *(_OWORD *)(v108 + 16) = v114;
    }
    uint64_t v115 = v40[8];
    uint64_t v116 = (uint64_t)v42 + v115;
    uint64_t v117 = (uint64_t)v41 + v115;
    uint64_t v118 = type metadata accessor for Text.Measurements();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v118 - 8) + 16))(v116, v117, v118);
    uint64_t v119 = v40[9];
    uint64_t v120 = (uint64_t)v42 + v119;
    uint64_t v121 = (uint64_t)v41 + v119;
    sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)uint64_t v120 = *(_OWORD *)v121;
      *(unsigned char *)(v120 + 16) = *(unsigned char *)(v121 + 16);
      *(unsigned char *)(v120 + 17) = *(unsigned char *)(v121 + 17);
      *(unsigned char *)(v120 + 18) = *(unsigned char *)(v121 + 18);
      uint64_t v122 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v123 = v120 + v122;
      uint64_t v124 = v121 + v122;
      uint64_t v125 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v125 - 8) + 16))(v123, v124, v125);
    }
    else
    {
      *(void *)uint64_t v120 = *(void *)v121;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v126 = v40[10];
    uint64_t v127 = (uint64_t)v42 + v126;
    uint64_t v128 = (uint64_t)v41 + v126;
    uint64_t v129 = *(void *)v128;
    uint64_t v130 = *(void *)(v128 + 8);
    uint64_t v131 = *(void *)(v128 + 16);
    uint64_t v132 = *(void *)(v128 + 24);
    uint64_t v133 = *(void *)(v128 + 32);
    uint64_t v134 = *(void *)(v128 + 40);
    uint64_t v135 = *(void *)(v128 + 48);
    uint64_t v136 = *(void *)(v128 + 56);
    uint64_t v137 = *(void *)(v128 + 64);
    char v154 = *(unsigned char *)(v128 + 72);
    sub_1001910C8(*(void *)v128, v130, v131, v132, v133, v134, v135, v136, v137, v154);
    *(void *)uint64_t v127 = v129;
    *(void *)(v127 + 8) = v130;
    *(void *)(v127 + 16) = v131;
    *(void *)(v127 + 24) = v132;
    *(void *)(v127 + 32) = v133;
    *(void *)(v127 + 40) = v134;
    *(void *)(v127 + 48) = v135;
    *(void *)(v127 + 56) = v136;
    *(void *)(v127 + 64) = v137;
    *(unsigned char *)(v127 + 72) = v154;
    uint64_t v138 = v156[11];
    uint64_t v139 = (uint64_t)v157 + v138;
    uint64_t v140 = (uint64_t)v155 + v138;
    uint64_t v141 = *(void *)v140;
    LOBYTE(v130) = *(unsigned char *)(v140 + 8);
    sub_100195B7C(*(void *)v140, v130);
    *(void *)uint64_t v139 = v141;
    *(unsigned char *)(v139 + 8) = v130;
    uint64_t v142 = v156[12];
    uint64_t v143 = (void *)((char *)v157 + v142);
    uint64_t v144 = (void *)((char *)v155 + v142);
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v145 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v145 - 8) + 16))(v143, v144, v145);
    }
    else
    {
      void *v143 = *v144;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v146 = v156[13];
    uint64_t v147 = (uint64_t)v157 + v146;
    uint64_t v148 = (uint64_t)v155 + v146;
    uint64_t v149 = *(void *)v148;
    char v150 = *(unsigned char *)(v148 + 8);
    sub_100195B7C(*(void *)v148, v150);
    *(void *)uint64_t v147 = v149;
    *(unsigned char *)(v147 + 8) = v150;
    return v157;
  }
  return (void *)v15;
}

uint64_t sub_100929E58(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = (int *)type metadata accessor for LocationViewModel();
  uint64_t v9 = v8[5];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  if (_s7Weather24LocationCompositionStateOwet_0(a2 + v9, 1, v6))
  {
    uint64_t v12 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v10, (uint64_t)v11, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v6);
  }
  memcpy((void *)(a1 + v8[6]), (const void *)(a2 + v8[6]), 0xA2uLL);
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  *(void *)(a1 + v8[8]) = *(void *)(a2 + v8[8]);
  uint64_t v13 = v8[9];
  uint64_t v14 = (unsigned char *)(a1 + v13);
  uint64_t v15 = (unsigned char *)(a2 + v13);
  uint64_t v16 = type metadata accessor for LocationFooterViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
  {
    uint64_t v17 = sub_10017DF08(&qword_100E6DC18);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    uint64_t v93 = a3;
    unsigned char *v14 = *v15;
    *(_WORD *)(v14 + 1) = *(_WORD *)(v15 + 1);
    *(_OWORD *)(v14 + 8) = *(_OWORD *)(v15 + 8);
    uint64_t v18 = *(int *)(v16 + 32);
    uint64_t v19 = &v14[v18];
    uint64_t v20 = &v15[v18];
    uint64_t v21 = type metadata accessor for URL();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21))
    {
      uint64_t v22 = sub_10017DF08(&qword_100E749B0);
      memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
    }
    uint64_t v92 = (int *)v16;
    uint64_t v23 = *(int *)(v16 + 36);
    uint64_t v24 = &v14[v23];
    char v25 = &v15[v23];
    *uint64_t v24 = v15[v23];
    *((void *)v24 + 1) = *(void *)&v15[v23 + 8];
    char v26 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
    uint64_t v27 = v26[6];
    __dst = &v24[v27];
    uint64_t v28 = &v25[v27];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v25[v27], 1, v21))
    {
      uint64_t v29 = sub_10017DF08(&qword_100E749B0);
      memcpy(__dst, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 32))(__dst, v28, v21);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v21);
    }
    *(_OWORD *)&v24[v26[7]] = *(_OWORD *)&v25[v26[7]];
    *(void *)&v24[v26[8]] = *(void *)&v25[v26[8]];
    v14[v92[10]] = v15[v92[10]];
    uint64_t v30 = v92[11];
    uint64_t v31 = &v14[v30];
    uint64_t v32 = &v15[v30];
    uint64_t v33 = type metadata accessor for LocationOfInterest();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v33))
    {
      uint64_t v34 = sub_10017DF08(&qword_100E63508);
      memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v33);
    }
    v14[v92[12]] = v15[v92[12]];
    v14[v92[13]] = v15[v92[13]];
    uint64_t v35 = v92[14];
    int v36 = &v14[v35];
    uint64_t v37 = &v15[v35];
    uint64_t v38 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, (uint64_t)v38))
    {
      uint64_t v39 = sub_10017DF08(&qword_100E6DC10);
      memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      *int v36 = *v37;
      uint64_t v40 = v38[5];
      uint64_t v41 = &v36[v40];
      __dsta = &v37[v40];
      uint64_t v42 = type metadata accessor for Location();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v42 - 8) + 32))(v41, __dsta, v42);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v33 - 8) + 32))(&v36[v38[6]], &v37[v38[6]], v33);
      v36[v38[7]] = v37[v38[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, (uint64_t)v38);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, (uint64_t)v92);
    a3 = v93;
  }
  *(unsigned char *)(a1 + v8[10]) = *(unsigned char *)(a2 + v8[10]);
  *(unsigned char *)(a1 + v8[11]) = *(unsigned char *)(a2 + v8[11]);
  *(unsigned char *)(a1 + v8[12]) = *(unsigned char *)(a2 + v8[12]);
  *(unsigned char *)(a1 + v8[13]) = *(unsigned char *)(a2 + v8[13]);
  *(unsigned char *)(a1 + v8[14]) = *(unsigned char *)(a2 + v8[14]);
  *(void *)(a1 + v8[15]) = *(void *)(a2 + v8[15]);
  *(unsigned char *)(a1 + v8[16]) = *(unsigned char *)(a2 + v8[16]);
  *(unsigned char *)(a1 + v8[17]) = *(unsigned char *)(a2 + v8[17]);
  *(unsigned char *)(a1 + v8[18]) = *(unsigned char *)(a2 + v8[18]);
  uint64_t v43 = v8[19];
  uint64_t v44 = a1 + v43;
  uint64_t v45 = a2 + v43;
  uint64_t v46 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  uint64_t v47 = v8[20];
  uint64_t v48 = (void *)(a1 + v47);
  uint64_t v49 = (const void *)(a2 + v47);
  uint64_t v50 = type metadata accessor for ForegroundEffect();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v50))
  {
    uint64_t v51 = sub_10017DF08(&qword_100E65FA8);
    memcpy(v48, v49, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v50);
  }
  *(unsigned char *)(a1 + v8[21]) = *(unsigned char *)(a2 + v8[21]);
  *(void *)(a1 + v8[22]) = *(void *)(a2 + v8[22]);
  *(unsigned char *)(a1 + v8[23]) = *(unsigned char *)(a2 + v8[23]);
  uint64_t v52 = v8[24];
  uint64_t v53 = a1 + v52;
  uint64_t v54 = a2 + v52;
  uint64_t v55 = type metadata accessor for LocationEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
  uint64_t v56 = a3[5];
  uint64_t v57 = a3[6];
  uint64_t v58 = (_OWORD *)(a1 + v56);
  uint64_t v59 = (_OWORD *)(a2 + v56);
  long long v60 = v59[1];
  *uint64_t v58 = *v59;
  v58[1] = v60;
  uint64_t v61 = (_OWORD *)(a1 + v57);
  uint64_t v62 = (_OWORD *)(a2 + v57);
  long long v63 = v62[1];
  *uint64_t v61 = *v62;
  v61[1] = v63;
  uint64_t v64 = a3[7];
  uint64_t v65 = a3[8];
  long long v66 = *(_OWORD *)(a2 + v64);
  long long v67 = *(_OWORD *)(a2 + v64 + 16);
  uint64_t v68 = (_OWORD *)(a1 + v64);
  _OWORD *v68 = v66;
  v68[1] = v67;
  uint64_t v69 = a1 + v65;
  uint64_t v70 = a2 + v65;
  uint64_t v71 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 32))(v69, v70, v71);
  uint64_t v72 = a3[9];
  uint64_t v73 = (char *)(a1 + v72);
  uint64_t v74 = (char *)(a2 + v72);
  uint64_t v75 = sub_10017DF08(&qword_100E63BD0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)uint64_t v73 = *(_OWORD *)v74;
    v73[16] = v74[16];
    v73[17] = v74[17];
    v73[18] = v74[18];
    uint64_t v76 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
    uint64_t v77 = &v73[v76];
    uint64_t v78 = &v74[v76];
    uint64_t v79 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v77, v78, v79);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
  }
  memcpy((void *)(a1 + a3[10]), (const void *)(a2 + a3[10]), 0x49uLL);
  uint64_t v80 = a3[11];
  uint64_t v81 = a3[12];
  uint64_t v82 = a1 + v80;
  uint64_t v83 = a2 + v80;
  *(void *)uint64_t v82 = *(void *)v83;
  *(unsigned char *)(v82 + 8) = *(unsigned char *)(v83 + 8);
  uint64_t v84 = (void *)(a1 + v81);
  uint64_t v85 = (const void *)(a2 + v81);
  uint64_t v86 = sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v87 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v87 - 8) + 32))(v84, v85, v87);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v84, v85, *(void *)(*(void *)(v86 - 8) + 64));
  }
  uint64_t v88 = a3[13];
  uint64_t v89 = a1 + v88;
  uint64_t v90 = a2 + v88;
  *(void *)uint64_t v89 = *(void *)v90;
  *(unsigned char *)(v89 + 8) = *(unsigned char *)(v90 + 8);
  return a1;
}

uint64_t sub_10092A784(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = type metadata accessor for Location.Identifier();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  uint64_t v8 = (int *)type metadata accessor for LocationViewModel();
  uint64_t v9 = v8[5];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  int v12 = _s7Weather24LocationCompositionStateOwet_0(a1 + v9, 1, v5);
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v5);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v10, v11, v5);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v5);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(void *, uint64_t))(v6 + 8))(v10, v5);
LABEL_6:
    uint64_t v14 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v7((uint64_t)v10, (uint64_t)v11, v5);
LABEL_7:
  uint64_t v15 = v8[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = *(void *)(a2 + v15 + 8);
  *(void *)uint64_t v16 = *(void *)(a2 + v15);
  *(void *)(v16 + 8) = v18;
  swift_bridgeObjectRelease();
  char v19 = *(unsigned char *)(v17 + 48);
  uint64_t v20 = *(void *)(v16 + 16);
  uint64_t v21 = *(void *)(v16 + 24);
  uint64_t v22 = *(void *)(v16 + 32);
  uint64_t v23 = *(void *)(v16 + 40);
  long long v24 = *(_OWORD *)(v17 + 32);
  *(_OWORD *)(v16 + 16) = *(_OWORD *)(v17 + 16);
  *(_OWORD *)(v16 + 32) = v24;
  char v25 = *(unsigned char *)(v16 + 48);
  *(unsigned char *)(v16 + 48) = v19;
  sub_100191D78(v20, v21, v22, v23, v25);
  uint64_t v26 = *(void *)(v17 + 64);
  *(void *)(v16 + 56) = *(void *)(v17 + 56);
  *(void *)(v16 + 64) = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = *(void *)(v17 + 80);
  *(void *)(v16 + 72) = *(void *)(v17 + 72);
  *(void *)(v16 + 80) = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(v17 + 96);
  *(void *)(v16 + 88) = *(void *)(v17 + 88);
  *(void *)(v16 + 96) = v28;
  swift_bridgeObjectRelease();
  uint64_t v29 = *(void *)(v17 + 112);
  *(void *)(v16 + 104) = *(void *)(v17 + 104);
  *(void *)(v16 + 112) = v29;
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(v17 + 128);
  *(void *)(v16 + 120) = *(void *)(v17 + 120);
  *(void *)(v16 + 128) = v30;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v16 + 136) = *(unsigned char *)(v17 + 136);
  *(unsigned char *)(v16 + 137) = *(unsigned char *)(v17 + 137);
  *(unsigned char *)(v16 + 138) = *(unsigned char *)(v17 + 138);
  uint64_t v31 = *(void *)(v17 + 152);
  *(void *)(v16 + 144) = *(void *)(v17 + 144);
  *(void *)(v16 + 152) = v31;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v16 + 160) = *(unsigned char *)(v17 + 160);
  *(unsigned char *)(v16 + 161) = *(unsigned char *)(v17 + 161);
  *(void *)(a1 + v8[7]) = *(void *)(a2 + v8[7]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + v8[8]) = *(void *)(a2 + v8[8]);
  swift_release();
  uint64_t v32 = v8[9];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  uint64_t v35 = (int *)type metadata accessor for LocationFooterViewModel();
  LODWORD(v16) = _s7Weather24LocationCompositionStateOwet_0(v33, 1, (uint64_t)v35);
  int v36 = _s7Weather24LocationCompositionStateOwet_0(v34, 1, (uint64_t)v35);
  if (v16)
  {
    if (!v36)
    {
      *(unsigned char *)uint64_t v33 = *(unsigned char *)v34;
      *(_WORD *)(v33 + 1) = *(_WORD *)(v34 + 1);
      *(_OWORD *)(v33 + 8) = *(_OWORD *)(v34 + 8);
      uint64_t v37 = v35[8];
      uint64_t v38 = (void *)(v33 + v37);
      uint64_t v39 = (const void *)(v34 + v37);
      uint64_t v40 = type metadata accessor for URL();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40))
      {
        uint64_t v41 = sub_10017DF08(&qword_100E749B0);
        memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v40 - 8) + 32))(v38, v39, v40);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
      }
      int v197 = v35;
      uint64_t v52 = v35[9];
      uint64_t v53 = v33 + v52;
      uint64_t v54 = v34 + v52;
      *(unsigned char *)uint64_t v53 = *(unsigned char *)(v34 + v52);
      *(void *)(v53 + 8) = *(void *)(v34 + v52 + 8);
      uint64_t v55 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
      uint64_t v56 = v55[6];
      __dst = (void *)(v53 + v56);
      uint64_t v57 = (const void *)(v54 + v56);
      if (_s7Weather24LocationCompositionStateOwet_0(v54 + v56, 1, v40))
      {
        uint64_t v58 = sub_10017DF08(&qword_100E749B0);
        memcpy(__dst, v57, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v40 - 8) + 32))(__dst, v57, v40);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v40);
      }
      *(_OWORD *)(v53 + v55[7]) = *(_OWORD *)(v54 + v55[7]);
      *(void *)(v53 + v55[8]) = *(void *)(v54 + v55[8]);
      *(unsigned char *)(v33 + v197[10]) = *(unsigned char *)(v34 + v197[10]);
      uint64_t v59 = v197[11];
      long long v60 = (void *)(v33 + v59);
      uint64_t v61 = (const void *)(v34 + v59);
      uint64_t v62 = type metadata accessor for LocationOfInterest();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v62))
      {
        uint64_t v63 = sub_10017DF08(&qword_100E63508);
        memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v62);
      }
      *(unsigned char *)(v33 + v197[12]) = *(unsigned char *)(v34 + v197[12]);
      *(unsigned char *)(v33 + v197[13]) = *(unsigned char *)(v34 + v197[13]);
      uint64_t v64 = v197[14];
      uint64_t v65 = (unsigned char *)(v33 + v64);
      long long v66 = (unsigned char *)(v34 + v64);
      long long v67 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, (uint64_t)v67))
      {
        uint64_t v68 = sub_10017DF08(&qword_100E6DC10);
        memcpy(v65, v66, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        unsigned char *v65 = *v66;
        uint64_t v69 = v67[5];
        uint64_t v70 = &v65[v69];
        __dstb = &v66[v69];
        uint64_t v71 = type metadata accessor for Location();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v71 - 8) + 32))(v70, __dstb, v71);
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v62 - 8) + 32))(&v65[v67[6]], &v66[v67[6]], v62);
        v65[v67[7]] = v66[v67[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 0, 1, (uint64_t)v67);
      }
      uint64_t v72 = v33;
      uint64_t v73 = (uint64_t)v197;
      goto LABEL_30;
    }
    goto LABEL_13;
  }
  if (v36)
  {
    sub_1001338DC(v33, (void (*)(void))type metadata accessor for LocationFooterViewModel);
LABEL_13:
    size_t v42 = *(void *)(*(void *)(sub_10017DF08(&qword_100E6DC18) - 8) + 64);
    uint64_t v43 = (void *)v33;
    uint64_t v44 = (const void *)v34;
LABEL_14:
    memcpy(v43, v44, v42);
    goto LABEL_31;
  }
  *(unsigned char *)uint64_t v33 = *(unsigned char *)v34;
  *(unsigned char *)(v33 + 1) = *(unsigned char *)(v34 + 1);
  *(unsigned char *)(v33 + 2) = *(unsigned char *)(v34 + 2);
  uint64_t v45 = *(void *)(v34 + 16);
  *(void *)(v33 + 8) = *(void *)(v34 + 8);
  *(void *)(v33 + 16) = v45;
  swift_bridgeObjectRelease();
  uint64_t v46 = v35[8];
  uint64_t v47 = (void *)(v33 + v46);
  uint64_t v48 = (const void *)(v34 + v46);
  uint64_t v49 = type metadata accessor for URL();
  int v50 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v49);
  int v51 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v49);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v49);
      goto LABEL_55;
    }
    goto LABEL_54;
  }
  uint64_t v158 = *(void *)(v49 - 8);
  if (v51)
  {
    (*(void (**)(void *, uint64_t))(v158 + 8))(v47, v49);
LABEL_54:
    uint64_t v159 = sub_10017DF08(&qword_100E749B0);
    memcpy(v47, v48, *(void *)(*(void *)(v159 - 8) + 64));
    goto LABEL_55;
  }
  (*(void (**)(void *, const void *, uint64_t))(v158 + 40))(v47, v48, v49);
LABEL_55:
  uint64_t v160 = v35[9];
  uint64_t v161 = v33 + v160;
  uint64_t v162 = v34 + v160;
  *(unsigned char *)uint64_t v161 = *(unsigned char *)(v34 + v160);
  *(void *)(v161 + 8) = *(void *)(v34 + v160 + 8);
  swift_bridgeObjectRelease();
  uint64_t v198 = v162;
  __dsta = (int *)type metadata accessor for LearnMoreAttributorViewModel();
  uint64_t v163 = __dsta[6];
  uint64_t v164 = (const void *)(v162 + v163);
  uint64_t v196 = v161 + v163;
  LODWORD(v162) = _s7Weather24LocationCompositionStateOwet_0(v161 + v163, 1, v49);
  int v165 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v164, 1, v49);
  if (v162)
  {
    if (v165)
    {
      size_t v166 = *(void *)(*(void *)(sub_10017DF08(&qword_100E749B0) - 8) + 64);
      uint64_t v167 = (void *)v196;
LABEL_60:
      memcpy(v167, v164, v166);
      goto LABEL_64;
    }
    (*(void (**)(uint64_t, const void *, uint64_t))(*(void *)(v49 - 8) + 32))(v196, v164, v49);
    _s7Weather24LocationCompositionStateOwst_0(v196, 0, 1, v49);
  }
  else
  {
    uint64_t v168 = *(void *)(v49 - 8);
    if (v165)
    {
      (*(void (**)(uint64_t, uint64_t))(v168 + 8))(v196, v49);
      size_t v166 = *(void *)(*(void *)(sub_10017DF08(&qword_100E749B0) - 8) + 64);
      uint64_t v167 = (void *)v196;
      goto LABEL_60;
    }
    (*(void (**)(uint64_t, const void *, uint64_t))(v168 + 40))(v196, v164, v49);
  }
LABEL_64:
  uint64_t v169 = __dsta[7];
  uint64_t v170 = (void *)(v161 + v169);
  uint64_t v171 = (uint64_t *)(v198 + v169);
  uint64_t v173 = *v171;
  uint64_t v172 = v171[1];
  *uint64_t v170 = v173;
  v170[1] = v172;
  swift_bridgeObjectRelease();
  *(void *)(v161 + __dsta[8]) = *(void *)(v198 + __dsta[8]);
  swift_release();
  *(unsigned char *)(v33 + v35[10]) = *(unsigned char *)(v34 + v35[10]);
  uint64_t v174 = v35[11];
  int v175 = (void *)(v33 + v174);
  size_t v176 = (const void *)(v34 + v174);
  uint64_t v177 = type metadata accessor for LocationOfInterest();
  int v178 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v175, 1, v177);
  int v179 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v176, 1, v177);
  if (v178)
  {
    if (!v179)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v177 - 8) + 32))(v175, v176, v177);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v175, 0, 1, v177);
      goto LABEL_70;
    }
    goto LABEL_69;
  }
  uint64_t v180 = *(void *)(v177 - 8);
  if (v179)
  {
    (*(void (**)(void *, uint64_t))(v180 + 8))(v175, v177);
LABEL_69:
    uint64_t v181 = sub_10017DF08(&qword_100E63508);
    memcpy(v175, v176, *(void *)(*(void *)(v181 - 8) + 64));
    goto LABEL_70;
  }
  (*(void (**)(void *, const void *, uint64_t))(v180 + 40))(v175, v176, v177);
LABEL_70:
  *(unsigned char *)(v33 + v35[12]) = *(unsigned char *)(v34 + v35[12]);
  *(unsigned char *)(v33 + v35[13]) = *(unsigned char *)(v34 + v35[13]);
  uint64_t v182 = v35[14];
  uint64_t v183 = (unsigned char *)(v33 + v182);
  uint64_t v184 = (unsigned char *)(v34 + v182);
  uint64_t v185 = (int *)type metadata accessor for HomeAndWorkRefinementRowViewModel();
  int v186 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v183, 1, (uint64_t)v185);
  int v187 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v184, 1, (uint64_t)v185);
  if (v186)
  {
    if (!v187)
    {
      *uint64_t v183 = *v184;
      uint64_t v188 = v185[5];
      int v189 = &v183[v188];
      uint64_t v190 = &v184[v188];
      uint64_t v191 = type metadata accessor for Location();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v191 - 8) + 32))(v189, v190, v191);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v177 - 8) + 32))(&v183[v185[6]], &v184[v185[6]], v177);
      v183[v185[7]] = v184[v185[7]];
      uint64_t v72 = (uint64_t)v183;
      uint64_t v73 = (uint64_t)v185;
LABEL_30:
      _s7Weather24LocationCompositionStateOwst_0(v72, 0, 1, v73);
      goto LABEL_31;
    }
    goto LABEL_75;
  }
  if (v187)
  {
    sub_1001338DC((uint64_t)v183, (void (*)(void))type metadata accessor for HomeAndWorkRefinementRowViewModel);
LABEL_75:
    size_t v42 = *(void *)(*(void *)(sub_10017DF08(&qword_100E6DC10) - 8) + 64);
    uint64_t v43 = v183;
    uint64_t v44 = v184;
    goto LABEL_14;
  }
  *uint64_t v183 = *v184;
  uint64_t v192 = v185[5];
  uint64_t v193 = &v183[v192];
  uint64_t v194 = &v184[v192];
  uint64_t v195 = type metadata accessor for Location();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v195 - 8) + 40))(v193, v194, v195);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v177 - 8) + 40))(&v183[v185[6]], &v184[v185[6]], v177);
  v183[v185[7]] = v184[v185[7]];
LABEL_31:
  *(unsigned char *)(a1 + v8[10]) = *(unsigned char *)(a2 + v8[10]);
  *(unsigned char *)(a1 + v8[11]) = *(unsigned char *)(a2 + v8[11]);
  *(unsigned char *)(a1 + v8[12]) = *(unsigned char *)(a2 + v8[12]);
  *(unsigned char *)(a1 + v8[13]) = *(unsigned char *)(a2 + v8[13]);
  *(unsigned char *)(a1 + v8[14]) = *(unsigned char *)(a2 + v8[14]);
  uint64_t v74 = v8[15];
  uint64_t v75 = *(void **)(a1 + v74);
  *(void *)(a1 + v74) = *(void *)(a2 + v74);

  *(unsigned char *)(a1 + v8[16]) = *(unsigned char *)(a2 + v8[16]);
  *(unsigned char *)(a1 + v8[17]) = *(unsigned char *)(a2 + v8[17]);
  *(unsigned char *)(a1 + v8[18]) = *(unsigned char *)(a2 + v8[18]);
  uint64_t v76 = v8[19];
  uint64_t v77 = a1 + v76;
  uint64_t v78 = a2 + v76;
  uint64_t v79 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 40))(v77, v78, v79);
  uint64_t v80 = v8[20];
  uint64_t v81 = (void *)(a1 + v80);
  uint64_t v82 = (const void *)(a2 + v80);
  uint64_t v83 = type metadata accessor for ForegroundEffect();
  LODWORD(v77) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v81, 1, v83);
  int v84 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v83);
  if (v77)
  {
    if (!v84)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v83 - 8) + 32))(v81, v82, v83);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v83);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  uint64_t v85 = *(void *)(v83 - 8);
  if (v84)
  {
    (*(void (**)(void *, uint64_t))(v85 + 8))(v81, v83);
LABEL_36:
    uint64_t v86 = sub_10017DF08(&qword_100E65FA8);
    memcpy(v81, v82, *(void *)(*(void *)(v86 - 8) + 64));
    goto LABEL_37;
  }
  (*(void (**)(void *, const void *, uint64_t))(v85 + 40))(v81, v82, v83);
LABEL_37:
  *(unsigned char *)(a1 + v8[21]) = *(unsigned char *)(a2 + v8[21]);
  *(void *)(a1 + v8[22]) = *(void *)(a2 + v8[22]);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v8[23]) = *(unsigned char *)(a2 + v8[23]);
  uint64_t v87 = v8[24];
  uint64_t v88 = a1 + v87;
  uint64_t v89 = a2 + v87;
  uint64_t v90 = type metadata accessor for LocationEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 40))(v88, v89, v90);
  uint64_t v91 = a3[5];
  uint64_t v92 = a1 + v91;
  uint64_t v93 = a2 + v91;
  LOBYTE(v91) = *(unsigned char *)(a2 + v91 + 16);
  uint64_t v94 = *(void *)v92;
  uint64_t v95 = *(void *)(v92 + 8);
  char v96 = *(unsigned char *)(v92 + 16);
  *(_OWORD *)uint64_t v92 = *(_OWORD *)v93;
  *(unsigned char *)(v92 + 16) = v91;
  sub_100191924(v94, v95, v96);
  *(void *)(v92 + 24) = *(void *)(v93 + 24);
  swift_bridgeObjectRelease();
  uint64_t v97 = a3[6];
  uint64_t v98 = a1 + v97;
  uint64_t v99 = a2 + v97;
  LOBYTE(v97) = *(unsigned char *)(a2 + v97 + 16);
  uint64_t v100 = *(void *)v98;
  uint64_t v101 = *(void *)(v98 + 8);
  char v102 = *(unsigned char *)(v98 + 16);
  *(_OWORD *)uint64_t v98 = *(_OWORD *)v99;
  *(unsigned char *)(v98 + 16) = v97;
  sub_100191924(v100, v101, v102);
  *(void *)(v98 + 24) = *(void *)(v99 + 24);
  swift_bridgeObjectRelease();
  uint64_t v103 = a3[7];
  uint64_t v104 = a1 + v103;
  uint64_t v105 = a2 + v103;
  if (*(void *)(a1 + v103 + 24))
  {
    if (*(void *)(v105 + 24))
    {
      char v106 = *(unsigned char *)(v105 + 16);
      uint64_t v107 = *(void *)v104;
      uint64_t v108 = *(void *)(v104 + 8);
      char v109 = *(unsigned char *)(v104 + 16);
      *(_OWORD *)uint64_t v104 = *(_OWORD *)v105;
      *(unsigned char *)(v104 + 16) = v106;
      sub_100191924(v107, v108, v109);
      *(void *)(v104 + 24) = *(void *)(v105 + 24);
      swift_bridgeObjectRelease();
      goto LABEL_42;
    }
    sub_10024ADC8(v104);
  }
  long long v110 = *(_OWORD *)(v105 + 16);
  *(_OWORD *)uint64_t v104 = *(_OWORD *)v105;
  *(_OWORD *)(v104 + 16) = v110;
LABEL_42:
  uint64_t v111 = a3[8];
  uint64_t v112 = a1 + v111;
  uint64_t v113 = a2 + v111;
  uint64_t v114 = type metadata accessor for Text.Measurements();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 40))(v112, v113, v114);
  if (a1 != a2)
  {
    uint64_t v115 = a3[9];
    uint64_t v116 = (char *)(a1 + v115);
    uint64_t v117 = (char *)(a2 + v115);
    sub_100178110(a1 + v115, &qword_100E63BD0);
    uint64_t v118 = sub_10017DF08(&qword_100E63BD0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)uint64_t v116 = *(_OWORD *)v117;
      v116[16] = v117[16];
      v116[17] = v117[17];
      v116[18] = v117[18];
      uint64_t v119 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
      uint64_t v120 = &v116[v119];
      uint64_t v121 = &v117[v119];
      uint64_t v122 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 32))(v120, v121, v122);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v116, v117, *(void *)(*(void *)(v118 - 8) + 64));
    }
  }
  uint64_t v123 = a3[10];
  uint64_t v124 = a1 + v123;
  uint64_t v125 = a2 + v123;
  uint64_t v126 = *(void *)(v125 + 64);
  char v127 = *(unsigned char *)(v125 + 72);
  uint64_t v128 = *(void *)v124;
  uint64_t v129 = *(void *)(v124 + 8);
  uint64_t v130 = *(void *)(v124 + 16);
  uint64_t v131 = *(void *)(v124 + 24);
  uint64_t v132 = *(void *)(v124 + 32);
  uint64_t v133 = *(void *)(v124 + 40);
  uint64_t v134 = *(void *)(v124 + 48);
  uint64_t v135 = *(void *)(v124 + 56);
  uint64_t v136 = *(void *)(v124 + 64);
  char v137 = *(unsigned char *)(v124 + 72);
  long long v138 = *(_OWORD *)(v125 + 16);
  *(_OWORD *)uint64_t v124 = *(_OWORD *)v125;
  *(_OWORD *)(v124 + 16) = v138;
  long long v139 = *(_OWORD *)(v125 + 48);
  *(_OWORD *)(v124 + 32) = *(_OWORD *)(v125 + 32);
  *(_OWORD *)(v124 + 48) = v139;
  *(void *)(v124 + 64) = v126;
  *(unsigned char *)(v124 + 72) = v127;
  sub_10018CCC4(v128, v129, v130, v131, v132, v133, v134, v135, v136, v137);
  uint64_t v140 = a3[11];
  uint64_t v141 = a1 + v140;
  uint64_t v142 = (uint64_t *)(a2 + v140);
  uint64_t v143 = *v142;
  LOBYTE(v142) = *((unsigned char *)v142 + 8);
  uint64_t v144 = *(void *)v141;
  char v145 = *(unsigned char *)(v141 + 8);
  *(void *)uint64_t v141 = v143;
  *(unsigned char *)(v141 + 8) = (_BYTE)v142;
  sub_10018F6D8(v144, v145);
  if (a1 != a2)
  {
    uint64_t v146 = a3[12];
    uint64_t v147 = (void *)(a1 + v146);
    uint64_t v148 = (const void *)(a2 + v146);
    sub_100178110(a1 + v146, &qword_100E63BC8);
    uint64_t v149 = sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v150 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v150 - 8) + 32))(v147, v148, v150);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v147, v148, *(void *)(*(void *)(v149 - 8) + 64));
    }
  }
  uint64_t v151 = a3[13];
  uint64_t v152 = a1 + v151;
  uint64_t v153 = (uint64_t *)(a2 + v151);
  uint64_t v154 = *v153;
  LOBYTE(v153) = *((unsigned char *)v153 + 8);
  uint64_t v155 = *(void *)v152;
  char v156 = *(unsigned char *)(v152 + 8);
  *(void *)uint64_t v152 = v154;
  *(unsigned char *)(v152 + 8) = (_BYTE)v153;
  sub_10018F6D8(v155, v156);
  return a1;
}

uint64_t sub_10092B9E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10092B9FC);
}

uint64_t sub_10092B9FC(uint64_t a1, uint64_t a2, int *a3)
{
  sub_100165384();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == v3)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v4;
  }
  else
  {
    if (v3 == 0x7FFFFFFF) {
      return sub_100163020(*(void *)(v4 + a3[5] + 24));
    }
    type metadata accessor for Text.Measurements();
    sub_100162F30();
    if (*(_DWORD *)(v12 + 84) == v3)
    {
      uint64_t v8 = v11;
      uint64_t v13 = a3[8];
    }
    else
    {
      sub_10017DF08(&qword_100E63BF8);
      sub_100162F30();
      if (*(_DWORD *)(v15 + 84) == v3)
      {
        uint64_t v8 = v14;
        uint64_t v13 = a3[9];
      }
      else
      {
        uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100EAA530);
        uint64_t v13 = a3[12];
      }
    }
    uint64_t v9 = v4 + v13;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, v3, v8);
}

uint64_t sub_10092BAE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10092BAFC);
}

void sub_10092BAFC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_100165384();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = v5;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      sub_10018A4B4();
      return;
    }
    type metadata accessor for Text.Measurements();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[8];
    }
    else
    {
      sub_10017DF08(&qword_100E63BF8);
      sub_100162F30();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[9];
      }
      else
      {
        uint64_t v10 = sub_10017DF08((uint64_t *)&unk_100EAA530);
        uint64_t v14 = a4[12];
      }
    }
    uint64_t v11 = v5 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, v4, v4, v10);
}

uint64_t sub_10092BBE8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10092BC04()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10092BC48()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10092BC64()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10092BCA8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10092BCC4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10092BCE0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10092BCFC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10092BD34()
{
  return sub_1009220E0();
}

uint64_t sub_10092BD54()
{
  uint64_t v1 = type metadata accessor for LocationStackView();
  sub_10017FC70();
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  swift_bridgeObjectRelease();
  swift_release();
  sub_10017DF08(&qword_100E63BD0);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for DisplayMetrics();
    sub_100166C60();
    sub_100162E4C();
    sub_100162F0C();
    v4();
  }
  else
  {
    swift_release();
  }
  sub_100182CC0(v3 + *(int *)(v1 + 44));
  sub_10018F6D8(*(void *)(v3 + *(int *)(v1 + 48)), *(unsigned char *)(v3 + *(int *)(v1 + 48) + 8));
  sub_100188C14();

  return swift_deallocObject();
}

uint64_t sub_10092BE7C()
{
  swift_release();

  return swift_deallocObject();
}

unint64_t sub_10092BEB4()
{
  unint64_t result = qword_100EA1E58;
  if (!qword_100EA1E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1E58);
  }
  return result;
}

unint64_t sub_10092BF00()
{
  unint64_t result = qword_100EA1E60;
  if (!qword_100EA1E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1E60);
  }
  return result;
}

uint64_t sub_10092BF4C()
{
  return EnvironmentValues.fontResolutionContext.getter();
}

unint64_t sub_10092BF7C()
{
  return sub_10024D5E4((uint64_t)&unk_100EA1F20);
}

unint64_t sub_10092BFBC()
{
  unint64_t result = qword_100EA1F30;
  if (!qword_100EA1F30)
  {
    sub_10018C6DC(&qword_100EA1DB8);
    sub_10024D5E4((uint64_t)&unk_100EA1F38);
    sub_10021C674();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1F30);
  }
  return result;
}

unint64_t sub_10092C060()
{
  unint64_t result = qword_100EA1F40;
  if (!qword_100EA1F40)
  {
    sub_10018C6DC(&qword_100EA1DD0);
    sub_10024D5E4((uint64_t)&unk_100EA1F48);
    sub_10021C674();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1F40);
  }
  return result;
}

uint64_t sub_10092C100()
{
  return swift_getWitnessTable();
}

unint64_t sub_10092C1DC()
{
  return sub_1000CE7D0((uint64_t)&unk_100EA1FA0);
}

unint64_t sub_10092C220()
{
  return sub_1000CE7D0((uint64_t)&unk_100EA1FA8);
}

unint64_t sub_10092C250()
{
  unint64_t result = qword_100EA1FB0;
  if (!qword_100EA1FB0)
  {
    sub_10018C6DC(&qword_100EA1E08);
    sub_10024D5E4((uint64_t)&unk_100EA1FB8);
    sub_10024D5E4((uint64_t)&qword_100E842A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1FB0);
  }
  return result;
}

uint64_t sub_10092C31C()
{
  type metadata accessor for HStack();

  return swift_getWitnessTable();
}

uint64_t sub_10092C364()
{
  return swift_getWitnessTable();
}

unint64_t sub_10092C41C()
{
  unint64_t result = qword_100EA1FD0;
  if (!qword_100EA1FD0)
  {
    sub_10018C6DC(&qword_100EA1E50);
    sub_10024D5E4((uint64_t)&unk_100EA1FD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA1FD0);
  }
  return result;
}

uint64_t sub_10092C4BC()
{
  return swift_getWitnessTable();
}

void *sub_10092C52C()
{
  return &protocol witness table for Spacer;
}

unint64_t sub_10092C538()
{
  return sub_10012F2D8((uint64_t)&unk_100EA1FE0);
}

uint64_t sub_10092C590@<X0>(uint64_t *a1@<X8>, double a2@<D0>)
{
  sub_10020D948(v2 + 16, (uint64_t)v6);
  swift_retain();
  return sub_100801228(v6, a1, a2);
}

uint64_t type metadata accessor for MoonScrubberModule()
{
  return self;
}

id sub_10092C618(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (objc_class *)type metadata accessor for CloseButton.Coordinator();
  uint64_t v5 = (char *)objc_allocWithZone(v4);
  uint64_t v6 = &v5[OBJC_IVAR____TtCV7Weather11CloseButton11Coordinator_parent];
  *(void *)uint64_t v6 = a1;
  *((void *)v6 + 1) = a2;
  v8.receiver = v5;
  v8.super_class = v4;
  swift_retain();
  return [super init];
}

uint64_t sub_10092C688()
{
  uint64_t v1 = *(void (**)(uint64_t))(v0 + OBJC_IVAR____TtCV7Weather11CloseButton11Coordinator_parent);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

id sub_10092C748()
{
  return sub_10092C90C(type metadata accessor for CloseButton.Coordinator);
}

uint64_t type metadata accessor for CloseButton.Coordinator()
{
  return self;
}

uint64_t sub_10092C798()
{
  [v0 sendActionsForControlEvents:64];
  return 1;
}

id sub_10092C7F4(double a1, double a2, double a3, double a4)
{
  v10.receiver = v4;
  v10.super_class = (Class)type metadata accessor for CloseButton.AccessibleCloseButton();
  return [super initWithFrame:a1, a2, a3, a4];
}

id sub_10092C87C(void *a1)
{
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for CloseButton.AccessibleCloseButton();
  [super initWithCoder:a1];

  return v3;
}

id sub_10092C8F4()
{
  return sub_10092C90C(type metadata accessor for CloseButton.AccessibleCloseButton);
}

id sub_10092C90C(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for CloseButton.AccessibleCloseButton()
{
  return self;
}

ValueMetadata *type metadata accessor for CloseButton()
{
  return &type metadata for CloseButton;
}

id sub_10092C978()
{
  type metadata accessor for CloseButton.AccessibleCloseButton();
  id v0 = [(id)swift_getObjCClassFromMetadata() buttonWithType:7];
  sub_10017DF08(&qword_100EA2108);
  UIViewRepresentableContext.coordinator.getter();
  [v0 addTarget:v2 action:"doAction:" forControlEvents:64];

  return v0;
}

id sub_10092CA10@<X0>(void *a1@<X8>)
{
  id result = sub_10092C618(*v1, v1[1]);
  *a1 = result;
  return result;
}

uint64_t sub_10092CA50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10092CB44();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_10092CAB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10092CB44();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_10092CB18()
{
}

unint64_t sub_10092CB44()
{
  unint64_t result = qword_100EA2110;
  if (!qword_100EA2110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2110);
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchTracker()
{
  return &type metadata for SearchTracker;
}

void *sub_10092CBA0(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = type metadata accessor for DetailCondition();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_9;
      case 2u:
        uint64_t v9 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        goto LABEL_9;
      case 3u:
        *a1 = *a2;
        uint64_t v10 = sub_10017DF08((uint64_t *)&unk_100EA0250);
        uint64_t v11 = *(int *)(v10 + 48);
        uint64_t v12 = (char *)a1 + v11;
        uint64_t v13 = (char *)a2 + v11;
        uint64_t v14 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
        *((unsigned char *)a1 + *(int *)(v10 + 64)) = *((unsigned char *)a2 + *(int *)(v10 + 64));
        goto LABEL_9;
      case 4u:
        uint64_t v15 = type metadata accessor for WeatherCondition();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_10092CDF0(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = type metadata accessor for DetailCondition();
      goto LABEL_6;
    case 2:
      uint64_t v3 = type metadata accessor for Location();
      goto LABEL_6;
    case 3:
      a1 += *(int *)(sub_10017DF08((uint64_t *)&unk_100EA0250) + 48);
      uint64_t v3 = type metadata accessor for WeatherMapOverlayKind();
      goto LABEL_6;
    case 4:
      uint64_t v3 = type metadata accessor for WeatherCondition();
LABEL_6:
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

void *sub_10092CEDC(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = type metadata accessor for DetailCondition();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_7;
    case 2u:
      uint64_t v7 = type metadata accessor for Location();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_7;
    case 3u:
      *a1 = *a2;
      uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100EA0250);
      uint64_t v9 = *(int *)(v8 + 48);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
      *((unsigned char *)a1 + *(int *)(v8 + 64)) = *((unsigned char *)a2 + *(int *)(v8 + 64));
      goto LABEL_7;
    case 4u:
      uint64_t v13 = type metadata accessor for WeatherCondition();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_10092D0E8(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10092D304((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = type metadata accessor for DetailCondition();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_8;
      case 2u:
        uint64_t v7 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_8;
      case 3u:
        *a1 = *a2;
        uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100EA0250);
        uint64_t v9 = *(int *)(v8 + 48);
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
        *((unsigned char *)a1 + *(int *)(v8 + 64)) = *((unsigned char *)a2 + *(int *)(v8 + 64));
        goto LABEL_8;
      case 4u:
        uint64_t v13 = type metadata accessor for WeatherCondition();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_10092D304(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PerformanceTestAction();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_10092D360(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = type metadata accessor for DetailCondition();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_7;
    case 2u:
      uint64_t v7 = type metadata accessor for Location();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      goto LABEL_7;
    case 3u:
      *a1 = *a2;
      uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100EA0250);
      uint64_t v9 = *(int *)(v8 + 48);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
      *((unsigned char *)a1 + *(int *)(v8 + 64)) = *((unsigned char *)a2 + *(int *)(v8 + 64));
      goto LABEL_7;
    case 4u:
      uint64_t v13 = type metadata accessor for WeatherCondition();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_10092D56C(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10092D304((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = type metadata accessor for DetailCondition();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        goto LABEL_8;
      case 2u:
        uint64_t v7 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        goto LABEL_8;
      case 3u:
        *a1 = *a2;
        uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100EA0250);
        uint64_t v9 = *(int *)(v8 + 48);
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
        *((unsigned char *)a1 + *(int *)(v8 + 64)) = *((unsigned char *)a2 + *(int *)(v8 + 64));
        goto LABEL_8;
      case 4u:
        uint64_t v13 = type metadata accessor for WeatherCondition();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_10092D788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_100BDD690();
  if ((v10 & 1) == 0) {
    return 0;
  }
  if (a2 == a5 && a3 == a6) {
    return 1;
  }

  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_10092D814(uint64_t *a1, uint64_t *a2)
{
  return sub_10092D788(*a1, a1[1], a1[2], *a2, a2[1], a2[2]);
}

uint64_t sub_10092D830@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  *a1 = *(void *)(v1 + 8);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

void *assignWithCopy for LocationViewRowViewModel(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for LocationViewRowViewModel(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10092D8EC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_10017DF08(&qword_100E663F0);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = (uint64_t *)(v8 - v7);
  uint64_t v10 = sub_10017DF08(&qword_100E66418);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = sub_10017DF08(&qword_100E66420);
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_1001626E0();
  uint64_t v19 = v18 - v17;
  uint64_t v20 = sub_10017DF08(&qword_100E66428);
  uint64_t v21 = sub_100109308(v20);
  __chkstk_darwin(v21);
  sub_1001626E0();
  uint64_t v24 = v23 - v22;
  uint64_t v25 = sub_10017DF08(&qword_100E66430);
  uint64_t v26 = sub_100109308(v25);
  __chkstk_darwin(v26);
  sub_1001626E0();
  uint64_t v29 = v28 - v27;
  uint64_t v30 = sub_10017DF08(&qword_100E66438);
  uint64_t v31 = sub_100109308(v30);
  __chkstk_darwin(v31);
  sub_1001626E0();
  uint64_t v34 = v33 - v32;
  uint64_t v35 = sub_10017DF08(&qword_100E66440);
  uint64_t v36 = sub_100109308(v35);
  __chkstk_darwin(v36);
  sub_1001626E0();
  uint64_t v39 = v38 - v37;
  sub_10056F9AC(a3, __dst);
  if ((~__dst[0] & 0xF000000000000006) != 0)
  {
    sub_1002A8CC8((uint64_t)__dst, (uint64_t)v93);
    type metadata accessor for ReportWeatherViewState._Storage();
    uint64_t v56 = swift_allocObject();
    sub_1002A8CC8((uint64_t)v93, v56 + 16);
    uint64_t v57 = type metadata accessor for AppConfigurationState();
    uint64_t v58 = sub_10017E2F4(v57);
    uint64_t v59 = sub_10018196C(v58);
    uint64_t v60 = sub_1001A26B4(v59);
    uint64_t v61 = sub_1001A1018(v60);
    uint64_t v62 = sub_10017AB90(v61);
    sub_1001807D8(v62);
    *uint64_t v9 = v56;
    uint64_t v91 = v39;
    uint64_t v63 = v34;
    uint64_t v64 = v29;
    uint64_t v65 = v24;
    uint64_t v66 = v19;
    uint64_t v67 = v14;
    uint64_t v68 = a2;
    uint64_t v69 = type metadata accessor for ModalViewState(0);
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v69);
    sub_10092DCCC((uint64_t *)a3);
    uint64_t v70 = swift_retain();
    uint64_t v90 = v68;
    uint64_t v14 = v67;
    uint64_t v19 = v66;
    uint64_t v24 = v65;
    uint64_t v29 = v64;
    uint64_t v34 = v63;
    uint64_t v39 = v91;
    uint64_t v55 = sub_1001882C8(v70, v71, v72, v73, v74, v75, v76, v77, v79, v80, v81, v82, v83, v84, v85, v86, v87, v88, v89,
            0,
            v90);
    swift_release();
  }
  else
  {
    uint64_t v40 = type metadata accessor for AppConfigurationState();
    uint64_t v41 = sub_10017E2F4(v40);
    uint64_t v42 = sub_10018196C(v41);
    uint64_t v43 = sub_1001A26B4(v42);
    uint64_t v44 = sub_1001A1018(v43);
    uint64_t v45 = sub_10017AB90(v44);
    sub_1001807D8(v45);
    uint64_t v46 = type metadata accessor for ModalViewState(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v47 = _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v46);
    uint64_t v55 = sub_1001882C8(v47, v48, v49, v50, v51, v52, v53, v54, v79, v80, v81, v82, v83, v84, v85, v86, v87, v88, v89,
            0,
            a2);
  }
  sub_1000F3400((uint64_t)v9, &qword_100E663F0);
  sub_1000F3400(v14, &qword_100E66418);
  sub_1000F3400(v19, &qword_100E66420);
  sub_1000F3400(v24, &qword_100E66428);
  sub_1000F3400(v29, &qword_100E66430);
  sub_1000F3400(v34, &qword_100E66438);
  sub_1000F3400(v39, &qword_100E66440);
  return v55;
}

uint64_t *sub_10092DCCC(uint64_t *a1)
{
  return a1;
}

uint64_t sub_10092DD20(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E663F0);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_100109314();
  uint64_t v68 = v4;
  uint64_t v5 = sub_10017DF08(&qword_100E66418);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v67 = v7;
  uint64_t v8 = sub_10017DF08(&qword_100E66420);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v66 = v10;
  uint64_t v11 = sub_10017DF08(&qword_100E66428);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_1001626E0();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = sub_10017DF08(&qword_100E66430);
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  sub_1001626E0();
  uint64_t v20 = v19 - v18;
  uint64_t v21 = sub_10017DF08(&qword_100E66438);
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_1001626E0();
  uint64_t v25 = v24 - v23;
  uint64_t v26 = sub_10017DF08(&qword_100E66440);
  uint64_t v27 = sub_100109308(v26);
  __chkstk_darwin(v27);
  sub_1001626E0();
  uint64_t v30 = v29 - v28;
  uint64_t v31 = sub_10017DF08(&qword_100E63730);
  uint64_t v32 = sub_100109308(v31);
  __chkstk_darwin(v32);
  sub_1001626E0();
  uint64_t v35 = v34 - v33;
  uint64_t v36 = type metadata accessor for EnvironmentState();
  __chkstk_darwin(v36);
  uint64_t v38 = (char *)&v66 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  uint64_t v41 = (char *)&v66 - v40;
  uint64_t v42 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess();
  sub_1000F1324(v42, (uint64_t)v38);
  uint64_t v43 = type metadata accessor for Locale();
  _s7Weather24LocationCompositionStateOwst_0(v35, 1, 1, v43);
  BOOL IsReduceMotionEnabled = UIAccessibilityIsReduceMotionEnabled();
  uint64_t v69 = 1;
  long long v70 = 0u;
  long long v71 = 0u;
  uint64_t v72 = 0;
  sub_1000F0AD4(2u, 5, 5, v35, 0, 0, IsReduceMotionEnabled, 2, v41, 2, 2, 2, 0, 1, 2, 2, (uint64_t)&v69);
  sub_1000F3400(v35, &qword_100E63730);
  sub_1000F12C8((uint64_t)v38);
  uint64_t v45 = type metadata accessor for AppConfigurationState();
  _s7Weather24LocationCompositionStateOwst_0(v30, 1, 1, v45);
  sub_1000F1324((uint64_t)v41, v25);
  _s7Weather24LocationCompositionStateOwst_0(v25, 0, 1, v36);
  uint64_t v46 = type metadata accessor for LocationsState();
  sub_100179C70(v20, v47, v48, v46);
  uint64_t v49 = type metadata accessor for NotificationsOptInState();
  sub_100179C70(v15, v50, v51, v49);
  uint64_t v52 = type metadata accessor for TimeState();
  uint64_t v53 = v66;
  uint64_t v56 = sub_100179C70(v66, v54, v55, v52);
  uint64_t v57 = type metadata accessor for ViewState(v56);
  uint64_t v58 = v67;
  uint64_t v61 = sub_100179C70(v67, v59, v60, v57);
  uint64_t v62 = type metadata accessor for ModalViewState(v61);
  uint64_t v63 = v68;
  _s7Weather24LocationCompositionStateOwst_0(v68, 1, 1, v62);
  uint64_t v64 = sub_1001659F0(0, 3, v30, v25, v20, 0, 0, 0, 0, v15, v53, v58, v63, 0, 0, 0, 0, 0, 0, 0, a1);
  sub_1000F3400(v63, &qword_100E663F0);
  sub_1000F3400(v58, &qword_100E66418);
  sub_1000F3400(v53, &qword_100E66420);
  sub_1000F3400(v15, &qword_100E66428);
  sub_1000F3400(v20, &qword_100E66430);
  sub_1000F3400(v25, &qword_100E66438);
  sub_1000F3400(v30, &qword_100E66440);
  sub_1000F12C8((uint64_t)v41);
  return v64;
}

void *sub_10092E1FC(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Location();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = (void *)((char *)v4 + v13);
    uint64_t v15 = (void *)((char *)a2 + v13);
    uint64_t v16 = (int *)type metadata accessor for WeatherData(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, (uint64_t)v16))
    {
      uint64_t v17 = sub_10017DF08(&qword_100E63850);
      memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
LABEL_27:
      uint64_t v53 = a3[7];
      uint64_t v54 = a3[8];
      uint64_t v55 = (void *)((char *)v4 + v53);
      uint64_t v56 = (void *)((char *)a2 + v53);
      uint64_t v57 = v56[1];
      *uint64_t v55 = *v56;
      v55[1] = v57;
      uint64_t v58 = (char *)v4 + v54;
      uint64_t v59 = (char *)a2 + v54;
      uint64_t v60 = type metadata accessor for WeatherMapOverlayKind();
      uint64_t v61 = *(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16);
      swift_bridgeObjectRetain();
      v61(v58, v59, v60);
      *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
      return v4;
    }
    uint64_t v19 = v15[1];
    void *v14 = *v15;
    v14[1] = v19;
    uint64_t v20 = v16[5];
    uint64_t v21 = (char *)v14 + v20;
    uint64_t v22 = (char *)v15 + v20;
    uint64_t v23 = type metadata accessor for Locale();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23))
    {
      uint64_t v24 = sub_10017DF08(&qword_100E63730);
      memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v23);
    }
    uint64_t v25 = v16[6];
    uint64_t v26 = (char *)v14 + v25;
    uint64_t v27 = (char *)v15 + v25;
    uint64_t v28 = type metadata accessor for WeatherDataModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    uint64_t v29 = v16[7];
    uint64_t v30 = (char *)v14 + v29;
    uint64_t v31 = (char *)v15 + v29;
    uint64_t v32 = sub_10017DF08(&qword_100E63738);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v32))
    {
      uint64_t v33 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      uint64_t v34 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v30, v31, v34);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v32);
    }
    uint64_t v35 = v16[8];
    uint64_t v36 = (void *)((char *)v14 + v35);
    uint64_t v37 = (void *)((char *)v15 + v35);
    uint64_t v38 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v41 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v41 - 8) + 16))(v36, v37, v41);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
        goto LABEL_17;
      }
      uint64_t v40 = v37[1];
      *uint64_t v36 = *v37;
      v36[1] = v40;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
LABEL_17:
    uint64_t v42 = v16[9];
    uint64_t v43 = (char *)v14 + v42;
    uint64_t v44 = (char *)v15 + v42;
    uint64_t v45 = type metadata accessor for WeatherDataOverrides();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45))
    {
      uint64_t v46 = sub_10017DF08(&qword_100E63740);
      memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      uint64_t v47 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v47))
      {
        uint64_t v48 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v43, v44, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v43, v44, v47);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v47);
      }
      uint64_t v49 = *(int *)(v45 + 20);
      uint64_t v50 = &v43[v49];
      uint64_t v51 = &v44[v49];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v51, 1, v47))
      {
        uint64_t v52 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v50, v51, *(void *)(*(void *)(v52 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v50, v51, v47);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v50, 0, 1, v47);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v45);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, (uint64_t)v16);
    goto LABEL_27;
  }
  uint64_t v18 = *a2;
  *uint64_t v4 = *a2;
  uint64_t v4 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return v4;
}

uint64_t sub_10092E7D8(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = (int *)type metadata accessor for WeatherData(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, (uint64_t)v7))
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = v6 + v7[5];
    uint64_t v9 = type metadata accessor for Locale();
    if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    }
    uint64_t v10 = v6 + v7[6];
    uint64_t v11 = type metadata accessor for WeatherDataModel();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    uint64_t v12 = v6 + v7[7];
    uint64_t v13 = sub_10017DF08(&qword_100E63738);
    if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v13))
    {
      uint64_t v14 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v12, v14);
    }
    uint64_t v15 = v6 + v7[8];
    type metadata accessor for WeatherData.WeatherStatisticsState(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v17 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v15, v17);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v18 = v6 + v7[9];
    uint64_t v19 = type metadata accessor for WeatherDataOverrides();
    if (!_s7Weather24LocationCompositionStateOwet_0(v18, 1, v19))
    {
      uint64_t v20 = type metadata accessor for Date();
      if (!_s7Weather24LocationCompositionStateOwet_0(v18, 1, v20)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v18, v20);
      }
      uint64_t v21 = v18 + *(int *)(v19 + 20);
      if (!_s7Weather24LocationCompositionStateOwet_0(v21, 1, v20)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v21, v20);
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v22 = a1 + a2[8];
  uint64_t v23 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8);

  return v24(v22, v23);
}

void *sub_10092EB08(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Location();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v15 = (int *)type metadata accessor for WeatherData(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, (uint64_t)v15))
  {
    uint64_t v16 = sub_10017DF08(&qword_100E63850);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_25;
  }
  uint64_t v17 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v17;
  uint64_t v18 = v15[5];
  uint64_t v19 = (char *)v13 + v18;
  uint64_t v20 = (char *)v14 + v18;
  uint64_t v21 = type metadata accessor for Locale();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21))
  {
    uint64_t v22 = sub_10017DF08(&qword_100E63730);
    memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
  }
  uint64_t v23 = v15[6];
  uint64_t v24 = (char *)v13 + v23;
  uint64_t v25 = (char *)v14 + v23;
  uint64_t v26 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
  uint64_t v27 = v15[7];
  uint64_t v28 = (char *)v13 + v27;
  uint64_t v29 = (char *)v14 + v27;
  uint64_t v30 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30))
  {
    uint64_t v31 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    uint64_t v32 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v28, v29, v32);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
  }
  uint64_t v33 = v15[8];
  uint64_t v34 = (void *)((char *)v13 + v33);
  uint64_t v35 = (void *)((char *)v14 + v33);
  uint64_t v36 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v39 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v39 - 8) + 16))(v34, v35, v39);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
      goto LABEL_15;
    }
    uint64_t v38 = v35[1];
    *uint64_t v34 = *v35;
    v34[1] = v38;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
LABEL_15:
  uint64_t v40 = v15[9];
  uint64_t v41 = (char *)v13 + v40;
  uint64_t v42 = (char *)v14 + v40;
  uint64_t v43 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43))
  {
    uint64_t v44 = sub_10017DF08(&qword_100E63740);
    memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    uint64_t v45 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v45))
    {
      uint64_t v46 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v41, v42, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v41, v42, v45);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v45);
    }
    uint64_t v47 = *(int *)(v43 + 20);
    uint64_t v48 = &v41[v47];
    uint64_t v49 = &v42[v47];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v45))
    {
      uint64_t v50 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v48, v49, v45);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v45);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v43);
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, (uint64_t)v15);
LABEL_25:
  uint64_t v51 = a3[7];
  uint64_t v52 = a3[8];
  uint64_t v53 = (void *)((char *)a1 + v51);
  uint64_t v54 = (void *)((char *)a2 + v51);
  uint64_t v55 = v54[1];
  void *v53 = *v54;
  v53[1] = v55;
  uint64_t v56 = (char *)a1 + v52;
  uint64_t v57 = (char *)a2 + v52;
  uint64_t v58 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v59 = *(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16);
  swift_bridgeObjectRetain();
  v59(v56, v57, v58);
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  return a1;
}

void *sub_10092F094(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = (int *)type metadata accessor for WeatherData(0);
  int v14 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, (uint64_t)v13);
  int v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, (uint64_t)v13);
  if (v14)
  {
    if (!v15)
    {
      void *v11 = *v12;
      v11[1] = v12[1];
      uint64_t v16 = v13[5];
      uint64_t v17 = (char *)v11 + v16;
      uint64_t v18 = (char *)v12 + v16;
      uint64_t v19 = type metadata accessor for Locale();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
      {
        uint64_t v20 = sub_10017DF08(&qword_100E63730);
        memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
      }
      uint64_t v31 = v13[6];
      uint64_t v32 = (char *)v11 + v31;
      uint64_t v33 = (char *)v12 + v31;
      uint64_t v34 = type metadata accessor for WeatherDataModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
      uint64_t v35 = v13[7];
      uint64_t v36 = (char *)v11 + v35;
      uint64_t v37 = (char *)v12 + v35;
      uint64_t v38 = sub_10017DF08(&qword_100E63738);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v38))
      {
        uint64_t v39 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        uint64_t v40 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v36, v37, v40);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v38);
      }
      uint64_t v41 = v13[8];
      uint64_t v42 = (void *)((char *)v11 + v41);
      uint64_t v43 = (void *)((char *)v12 + v41);
      uint64_t v44 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v46 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v46 - 8) + 16))(v42, v43, v46);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
          goto LABEL_23;
        }
        *uint64_t v42 = *v43;
        v42[1] = v43[1];
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
LABEL_23:
      uint64_t v47 = v13[9];
      uint64_t v48 = (char *)v11 + v47;
      uint64_t v49 = (char *)v12 + v47;
      uint64_t v50 = type metadata accessor for WeatherDataOverrides();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v50))
      {
        size_t v51 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63740) - 8) + 64);
        uint64_t v52 = v48;
        uint64_t v53 = v49;
LABEL_25:
        memcpy(v52, v53, v51);
LABEL_47:
        uint64_t v81 = (uint64_t)v11;
        uint64_t v82 = (uint64_t)v13;
LABEL_48:
        _s7Weather24LocationCompositionStateOwst_0(v81, 0, 1, v82);
        goto LABEL_49;
      }
      uint64_t v54 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v54))
      {
        uint64_t v55 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v48, v49, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v48, v49, v54);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v54);
      }
      uint64_t v75 = *(int *)(v50 + 20);
      uint64_t v76 = &v48[v75];
      uint64_t v77 = &v49[v75];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v77, 1, v54))
      {
        uint64_t v78 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v76, v77, v54);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v76, 0, 1, v54);
      }
      uint64_t v79 = (uint64_t)v48;
      uint64_t v80 = v50;
      goto LABEL_46;
    }
    goto LABEL_7;
  }
  if (v15)
  {
    sub_1001BC074((uint64_t)v11, (void (*)(void))type metadata accessor for WeatherData);
LABEL_7:
    uint64_t v21 = &qword_100E63850;
LABEL_8:
    size_t v22 = *(void *)(*(void *)(sub_10017DF08(v21) - 8) + 64);
    uint64_t v23 = v11;
    uint64_t v24 = v12;
    goto LABEL_9;
  }
  void *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = v13[5];
  uint64_t v26 = (char *)v11 + v25;
  uint64_t v27 = (char *)v12 + v25;
  uint64_t v28 = type metadata accessor for Locale();
  int v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v28);
  int v30 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  uint64_t v56 = *(void *)(v28 - 8);
  if (v30)
  {
    (*(void (**)(char *, uint64_t))(v56 + 8))(v26, v28);
LABEL_30:
    uint64_t v57 = sub_10017DF08(&qword_100E63730);
    memcpy(v26, v27, *(void *)(*(void *)(v57 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v56 + 24))(v26, v27, v28);
LABEL_31:
  uint64_t v58 = v13[6];
  uint64_t v59 = (char *)v11 + v58;
  uint64_t v60 = (char *)v12 + v58;
  uint64_t v61 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 24))(v59, v60, v61);
  uint64_t v62 = v13[7];
  uint64_t v63 = (char *)v11 + v62;
  uint64_t v64 = (char *)v12 + v62;
  uint64_t v65 = sub_10017DF08(&qword_100E63738);
  int v66 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 1, v65);
  int v67 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, v65);
  if (v66)
  {
    if (!v67)
    {
      uint64_t v68 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v63, v64, v68);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v63, 0, 1, v65);
      goto LABEL_37;
    }
    goto LABEL_36;
  }
  if (v67)
  {
    sub_1001781AC((uint64_t)v63, &qword_100E63738);
LABEL_36:
    uint64_t v69 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v63, v64, *(void *)(*(void *)(v69 - 8) + 64));
    goto LABEL_37;
  }
  uint64_t v97 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 24))(v63, v64, v97);
LABEL_37:
  if (a1 == a2) {
    goto LABEL_53;
  }
  uint64_t v70 = v13[8];
  long long v71 = (void *)((char *)v11 + v70);
  uint64_t v72 = (void *)((char *)v12 + v70);
  sub_1001BC074((uint64_t)v11 + v70, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
  uint64_t v73 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int v74 = swift_getEnumCaseMultiPayload();
  if (v74 == 1)
  {
    uint64_t v91 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v91 - 8) + 16))(v71, v72, v91);
    goto LABEL_51;
  }
  if (!v74)
  {
    *long long v71 = *v72;
    v71[1] = v72[1];
    swift_bridgeObjectRetain();
LABEL_51:
    swift_storeEnumTagMultiPayload();
    goto LABEL_53;
  }
  memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
LABEL_53:
  uint64_t v92 = v13[9];
  uint64_t v11 = (void *)((char *)v11 + v92);
  uint64_t v12 = (void *)((char *)v12 + v92);
  uint64_t v13 = (int *)type metadata accessor for WeatherDataOverrides();
  int v93 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, (uint64_t)v13);
  int v94 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, (uint64_t)v13);
  if (v93)
  {
    if (!v94)
    {
      uint64_t v95 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v95))
      {
        uint64_t v96 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v11, v12, *(void *)(*(void *)(v96 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v95 - 8) + 16))(v11, v12, v95);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v95);
      }
      uint64_t v101 = v13[5];
      char v102 = (char *)v11 + v101;
      uint64_t v103 = (uint64_t)v12 + v101;
      if (_s7Weather24LocationCompositionStateOwet_0(v103, 1, v95))
      {
        size_t v51 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
        uint64_t v52 = v102;
        uint64_t v53 = (const void *)v103;
        goto LABEL_25;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v95 - 8) + 16))(v102, v103, v95);
      uint64_t v79 = (uint64_t)v102;
      uint64_t v80 = v95;
LABEL_46:
      _s7Weather24LocationCompositionStateOwst_0(v79, 0, 1, v80);
      goto LABEL_47;
    }
    goto LABEL_59;
  }
  if (v94)
  {
    sub_1001BC074((uint64_t)v11, (void (*)(void))type metadata accessor for WeatherDataOverrides);
LABEL_59:
    uint64_t v21 = &qword_100E63740;
    goto LABEL_8;
  }
  uint64_t v98 = type metadata accessor for Date();
  int v99 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v98);
  int v100 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v98);
  if (!v99)
  {
    uint64_t v104 = *(void *)(v98 - 8);
    if (!v100)
    {
      (*(void (**)(void *, void *, uint64_t))(v104 + 24))(v11, v12, v98);
      goto LABEL_72;
    }
    (*(void (**)(void *, uint64_t))(v104 + 8))(v11, v98);
    goto LABEL_71;
  }
  if (v100)
  {
LABEL_71:
    uint64_t v105 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v11, v12, *(void *)(*(void *)(v105 - 8) + 64));
    goto LABEL_72;
  }
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v98 - 8) + 16))(v11, v12, v98);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v98);
LABEL_72:
  uint64_t v106 = v13[5];
  uint64_t v107 = (uint64_t)v11 + v106;
  uint64_t v108 = (uint64_t)v12 + v106;
  int v109 = _s7Weather24LocationCompositionStateOwet_0(v107, 1, v98);
  int v110 = _s7Weather24LocationCompositionStateOwet_0(v108, 1, v98);
  if (v109)
  {
    if (!v110)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v98 - 8) + 16))(v107, v108, v98);
      uint64_t v81 = v107;
      uint64_t v82 = v98;
      goto LABEL_48;
    }
  }
  else
  {
    uint64_t v111 = *(void *)(v98 - 8);
    if (!v110)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v111 + 24))(v107, v108, v98);
      goto LABEL_49;
    }
    (*(void (**)(uint64_t, uint64_t))(v111 + 8))(v107, v98);
  }
  size_t v22 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
  uint64_t v23 = (void *)v107;
  uint64_t v24 = (const void *)v108;
LABEL_9:
  memcpy(v23, v24, v22);
LABEL_49:
  uint64_t v83 = a3[7];
  uint64_t v84 = (void *)((char *)a1 + v83);
  uint64_t v85 = (void *)((char *)a2 + v83);
  *uint64_t v84 = *v85;
  v84[1] = v85[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v86 = a3[8];
  uint64_t v87 = (char *)a1 + v86;
  uint64_t v88 = (char *)a2 + v86;
  uint64_t v89 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 24))(v87, v88, v89);
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  return a1;
}

_OWORD *sub_10092FDD8(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (_OWORD *)((char *)a1 + v10);
  uint64_t v12 = (_OWORD *)((char *)a2 + v10);
  uint64_t v13 = (int *)type metadata accessor for WeatherData(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, (uint64_t)v13))
  {
    uint64_t v14 = sub_10017DF08(&qword_100E63850);
    memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    _OWORD *v11 = *v12;
    uint64_t v15 = v13[5];
    uint64_t v16 = (char *)v11 + v15;
    uint64_t v17 = (char *)v12 + v15;
    uint64_t v18 = type metadata accessor for Locale();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
    {
      uint64_t v19 = sub_10017DF08(&qword_100E63730);
      memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
    }
    uint64_t v20 = v13[6];
    uint64_t v21 = (char *)v11 + v20;
    size_t v22 = (char *)v12 + v20;
    uint64_t v23 = type metadata accessor for WeatherDataModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
    uint64_t v24 = v13[7];
    uint64_t v25 = (char *)v11 + v24;
    uint64_t v26 = (char *)v12 + v24;
    uint64_t v27 = sub_10017DF08(&qword_100E63738);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27))
    {
      uint64_t v28 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      uint64_t v29 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v25, v26, v29);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v27);
    }
    uint64_t v30 = v13[8];
    uint64_t v31 = (char *)v11 + v30;
    uint64_t v32 = (char *)v12 + v30;
    uint64_t v33 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v34 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v31, v32, v34);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
    }
    uint64_t v35 = v13[9];
    uint64_t v36 = (char *)v11 + v35;
    uint64_t v37 = (char *)v12 + v35;
    uint64_t v38 = type metadata accessor for WeatherDataOverrides();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v38))
    {
      uint64_t v39 = sub_10017DF08(&qword_100E63740);
      memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      uint64_t v40 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v40))
      {
        uint64_t v41 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v36, v37, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v36, v37, v40);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v40);
      }
      uint64_t v42 = *(int *)(v38 + 20);
      uint64_t v43 = &v36[v42];
      uint64_t v44 = &v37[v42];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v40))
      {
        uint64_t v45 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v43, v44, v40);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v40);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v38);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, (uint64_t)v13);
  }
  uint64_t v46 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  uint64_t v47 = (char *)a1 + v46;
  uint64_t v48 = (char *)a2 + v46;
  uint64_t v49 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  return a1;
}

void *sub_10093031C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = (int *)type metadata accessor for WeatherData(0);
  int v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, (uint64_t)v14);
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, (uint64_t)v14);
  if (v15)
  {
    if (!v16)
    {
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      uint64_t v17 = v14[5];
      uint64_t v18 = &v12[v17];
      uint64_t v19 = &v13[v17];
      uint64_t v20 = type metadata accessor for Locale();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20))
      {
        uint64_t v21 = sub_10017DF08(&qword_100E63730);
        memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v20);
      }
      uint64_t v33 = v14[6];
      uint64_t v34 = &v12[v33];
      uint64_t v35 = &v13[v33];
      uint64_t v36 = type metadata accessor for WeatherDataModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
      uint64_t v37 = v14[7];
      uint64_t v38 = &v12[v37];
      uint64_t v39 = &v13[v37];
      uint64_t v40 = sub_10017DF08(&qword_100E63738);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40))
      {
        uint64_t v41 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
      }
      else
      {
        uint64_t v42 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v38, v39, v42);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
      }
      uint64_t v43 = v14[8];
      uint64_t v44 = &v12[v43];
      uint64_t v45 = &v13[v43];
      uint64_t v46 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v47 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v44, v45, v47);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
      }
      uint64_t v48 = v14[9];
      uint64_t v49 = &v12[v48];
      uint64_t v50 = &v13[v48];
      uint64_t v51 = type metadata accessor for WeatherDataOverrides();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v51))
      {
        size_t v52 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63740) - 8) + 64);
        uint64_t v53 = v49;
        uint64_t v54 = v50;
LABEL_22:
        memcpy(v53, v54, v52);
LABEL_51:
        uint64_t v87 = (uint64_t)v12;
        uint64_t v88 = (uint64_t)v14;
LABEL_52:
        _s7Weather24LocationCompositionStateOwst_0(v87, 0, 1, v88);
        goto LABEL_53;
      }
      uint64_t v55 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v55))
      {
        uint64_t v56 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v49, v50, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v49, v50, v55);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, v55);
      }
      uint64_t v81 = *(int *)(v51 + 20);
      uint64_t v82 = &v49[v81];
      uint64_t v83 = &v50[v81];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v83, 1, v55))
      {
        uint64_t v84 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v82, v83, *(void *)(*(void *)(v84 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v82, v83, v55);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v82, 0, 1, v55);
      }
      uint64_t v85 = (uint64_t)v49;
      uint64_t v86 = v51;
      goto LABEL_50;
    }
    goto LABEL_7;
  }
  if (v16)
  {
    sub_1001BC074((uint64_t)v12, (void (*)(void))type metadata accessor for WeatherData);
LABEL_7:
    size_t v22 = &qword_100E63850;
LABEL_8:
    size_t v23 = *(void *)(*(void *)(sub_10017DF08(v22) - 8) + 64);
    uint64_t v24 = v12;
    uint64_t v25 = v13;
    goto LABEL_9;
  }
  uint64_t v26 = *((void *)v13 + 1);
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = v14[5];
  uint64_t v28 = &v12[v27];
  uint64_t v29 = &v13[v27];
  uint64_t v30 = type metadata accessor for Locale();
  int v31 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v30);
  int v32 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  uint64_t v57 = *(void *)(v30 - 8);
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v57 + 8))(v28, v30);
LABEL_27:
    uint64_t v58 = sub_10017DF08(&qword_100E63730);
    memcpy(v28, v29, *(void *)(*(void *)(v58 - 8) + 64));
    goto LABEL_28;
  }
  (*(void (**)(char *, char *, uint64_t))(v57 + 40))(v28, v29, v30);
LABEL_28:
  uint64_t v59 = v14[6];
  uint64_t v60 = &v12[v59];
  uint64_t v61 = &v13[v59];
  uint64_t v62 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 40))(v60, v61, v62);
  uint64_t v63 = v14[7];
  uint64_t v64 = &v12[v63];
  uint64_t v65 = &v13[v63];
  uint64_t v66 = sub_10017DF08(&qword_100E63738);
  int v67 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, v66);
  int v68 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v66);
  if (v67)
  {
    if (!v68)
    {
      uint64_t v69 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 32))(v64, v65, v69);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v64, 0, 1, v66);
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  if (v68)
  {
    sub_1001781AC((uint64_t)v64, &qword_100E63738);
LABEL_33:
    uint64_t v70 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v64, v65, *(void *)(*(void *)(v70 - 8) + 64));
    goto LABEL_34;
  }
  uint64_t v99 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 40))(v64, v65, v99);
LABEL_34:
  if (a1 != a2)
  {
    uint64_t v71 = v14[8];
    uint64_t v72 = &v12[v71];
    uint64_t v73 = &v13[v71];
    sub_1001BC074((uint64_t)&v12[v71], (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
    uint64_t v74 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v75 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v72, v73, v75);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
    }
  }
  uint64_t v76 = v14[9];
  v12 += v76;
  v13 += v76;
  uint64_t v14 = (int *)type metadata accessor for WeatherDataOverrides();
  int v77 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, (uint64_t)v14);
  int v78 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, (uint64_t)v14);
  if (v77)
  {
    if (!v78)
    {
      uint64_t v79 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v79))
      {
        uint64_t v80 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v12, v13, *(void *)(*(void *)(v80 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v12, v13, v79);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v79);
      }
      uint64_t v103 = v14[5];
      uint64_t v104 = &v12[v103];
      uint64_t v105 = (uint64_t)&v13[v103];
      if (_s7Weather24LocationCompositionStateOwet_0(v105, 1, v79))
      {
        size_t v52 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
        uint64_t v53 = v104;
        uint64_t v54 = (const void *)v105;
        goto LABEL_22;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v79 - 8) + 32))(v104, v105, v79);
      uint64_t v85 = (uint64_t)v104;
      uint64_t v86 = v79;
LABEL_50:
      _s7Weather24LocationCompositionStateOwst_0(v85, 0, 1, v86);
      goto LABEL_51;
    }
    goto LABEL_44;
  }
  if (v78)
  {
    sub_1001BC074((uint64_t)v12, (void (*)(void))type metadata accessor for WeatherDataOverrides);
LABEL_44:
    size_t v22 = &qword_100E63740;
    goto LABEL_8;
  }
  uint64_t v100 = type metadata accessor for Date();
  int v101 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v100);
  int v102 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v100);
  if (!v101)
  {
    uint64_t v106 = *(void *)(v100 - 8);
    if (!v102)
    {
      (*(void (**)(char *, char *, uint64_t))(v106 + 40))(v12, v13, v100);
      goto LABEL_66;
    }
    (*(void (**)(char *, uint64_t))(v106 + 8))(v12, v100);
    goto LABEL_65;
  }
  if (v102)
  {
LABEL_65:
    uint64_t v107 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v12, v13, *(void *)(*(void *)(v107 - 8) + 64));
    goto LABEL_66;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 32))(v12, v13, v100);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v100);
LABEL_66:
  uint64_t v108 = v14[5];
  uint64_t v109 = (uint64_t)&v12[v108];
  uint64_t v110 = (uint64_t)&v13[v108];
  int v111 = _s7Weather24LocationCompositionStateOwet_0(v109, 1, v100);
  int v112 = _s7Weather24LocationCompositionStateOwet_0(v110, 1, v100);
  if (v111)
  {
    if (!v112)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v100 - 8) + 32))(v109, v110, v100);
      uint64_t v87 = v109;
      uint64_t v88 = v100;
      goto LABEL_52;
    }
  }
  else
  {
    uint64_t v113 = *(void *)(v100 - 8);
    if (!v112)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v113 + 40))(v109, v110, v100);
      goto LABEL_53;
    }
    (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v109, v100);
  }
  size_t v23 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
  uint64_t v24 = (void *)v109;
  uint64_t v25 = (const void *)v110;
LABEL_9:
  memcpy(v24, v25, v23);
LABEL_53:
  uint64_t v89 = a3[7];
  uint64_t v90 = (void *)((char *)a1 + v89);
  uint64_t v91 = (void *)((char *)a2 + v89);
  uint64_t v93 = *v91;
  uint64_t v92 = v91[1];
  *uint64_t v90 = v93;
  v90[1] = v92;
  swift_bridgeObjectRelease();
  uint64_t v94 = a3[8];
  uint64_t v95 = (char *)a1 + v94;
  uint64_t v96 = (char *)a2 + v94;
  uint64_t v97 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 40))(v95, v96, v97);
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  return a1;
}

uint64_t sub_100930FD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100930FE4);
}

uint64_t sub_100930FE4(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for Location();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a3[5];
LABEL_10:
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v9, a2, v8);
  }
  sub_10017DF08(&qword_100E63850);
  sub_100162F30();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v9 = a3[6];
    goto LABEL_10;
  }
  if (a2 != 0x7FFFFFFF)
  {
    uint64_t v8 = type metadata accessor for WeatherMapOverlayKind();
    uint64_t v9 = a3[8];
    goto LABEL_10;
  }
  unint64_t v12 = *(void *)(a1 + a3[7] + 8);
  if (v12 >= 0xFFFFFFFF) {
    LODWORD(v12) = -1;
  }
  return (v12 + 1);
}

uint64_t sub_1009310C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009310D4);
}

void sub_1009310D4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  type metadata accessor for Location();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a4[5];
  }
  else
  {
    sub_10017DF08(&qword_100E63850);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v11 = a4[6];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(void *)(a1 + a4[7] + 8) = (a2 - 1);
        return;
      }
      uint64_t v10 = type metadata accessor for WeatherMapOverlayKind();
      uint64_t v11 = a4[8];
    }
  }

  _s7Weather24LocationCompositionStateOwst_0(a1 + v11, a2, a2, v10);
}

uint64_t type metadata accessor for ConditionDetailMapViewModel()
{
  uint64_t result = qword_100EA22B0;
  if (!qword_100EA22B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1009311F4()
{
  type metadata accessor for Location();
  if (v0 <= 0x3F)
  {
    sub_100224C28();
    if (v1 <= 0x3F)
    {
      type metadata accessor for WeatherMapOverlayKind();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_100931314(void *a1, void *a2)
{
  type metadata accessor for WeatherData(0);
  sub_100162E4C();
  __chkstk_darwin(v4);
  uint64_t v6 = (uint64_t *)((char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_10017DF08(&qword_100E75270);
  sub_100162E4C();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E63850);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (uint64_t *)((char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v36 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v36 - v18;
  uint64_t v20 = a1[1];
  uint64_t v21 = a2[1];
  if (!v20)
  {
    if (v21) {
      goto LABEL_28;
    }
    goto LABEL_10;
  }
  if (!v21) {
    goto LABEL_28;
  }
  BOOL v22 = *a1 == *a2 && v20 == v21;
  if (v22 || (char v23 = _stringCompareWithSmolCheck(_:_:expecting:)(), v24 = 0, (v23 & 1) != 0))
  {
LABEL_10:
    uint64_t v25 = (int *)type metadata accessor for ConditionDetailMapViewModel();
    if ((static Location.== infix(_:_:)() & 1) == 0) {
      goto LABEL_28;
    }
    sub_1004188C8((uint64_t)a1 + v25[6], (uint64_t)v19);
    sub_1004188C8((uint64_t)a2 + v25[6], (uint64_t)v17);
    uint64_t v26 = (uint64_t)&v10[*(int *)(v7 + 48)];
    sub_1004188C8((uint64_t)v19, (uint64_t)v10);
    sub_1004188C8((uint64_t)v17, v26);
    sub_1001630A0((uint64_t)v10);
    if (v22)
    {
      sub_1001781AC((uint64_t)v17, &qword_100E63850);
      sub_1001781AC((uint64_t)v19, &qword_100E63850);
      sub_1001630A0(v26);
      if (v22)
      {
        sub_1001781AC((uint64_t)v10, &qword_100E63850);
LABEL_21:
        uint64_t v29 = v25[7];
        uint64_t v30 = *(void *)((char *)a1 + v29);
        uint64_t v31 = *(void *)((char *)a1 + v29 + 8);
        int v32 = (void *)((char *)a2 + v29);
        if (v30 != *v32 || v31 != v32[1])
        {
          char v34 = _stringCompareWithSmolCheck(_:_:expecting:)();
          char v24 = 0;
          if ((v34 & 1) == 0) {
            return v24 & 1;
          }
        }
        if (static WeatherMapOverlayKind.== infix(_:_:)())
        {
          char v24 = *((unsigned char *)a1 + v25[9]) ^ *((unsigned char *)a2 + v25[9]) ^ 1;
          return v24 & 1;
        }
LABEL_28:
        char v24 = 0;
        return v24 & 1;
      }
    }
    else
    {
      sub_1004188C8((uint64_t)v10, (uint64_t)v14);
      sub_1001630A0(v26);
      if (!v27)
      {
        sub_100408768(v26, (uint64_t)v6);
        char v28 = sub_100A205E8(v14, v6);
        sub_1001BC074((uint64_t)v6, (void (*)(void))type metadata accessor for WeatherData);
        sub_1001781AC((uint64_t)v17, &qword_100E63850);
        sub_1001781AC((uint64_t)v19, &qword_100E63850);
        sub_1001BC074((uint64_t)v14, (void (*)(void))type metadata accessor for WeatherData);
        sub_1001781AC((uint64_t)v10, &qword_100E63850);
        if ((v28 & 1) == 0) {
          goto LABEL_28;
        }
        goto LABEL_21;
      }
      sub_1001781AC((uint64_t)v17, &qword_100E63850);
      sub_1001781AC((uint64_t)v19, &qword_100E63850);
      sub_1001BC074((uint64_t)v14, (void (*)(void))type metadata accessor for WeatherData);
    }
    sub_1001781AC((uint64_t)v10, &qword_100E75270);
    goto LABEL_28;
  }
  return v24 & 1;
}

uint64_t sub_1009316A8(uint64_t a1)
{
  uint64_t v20 = a1;
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v23 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v21 = *(void *)(v4 - 8);
  uint64_t v22 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchTime();
  uint64_t v19 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v18 - v12;
  sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
  uint64_t v14 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v8 + 8);
  v15(v10, v7);
  aBlock[4] = sub_100931C94;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10010A4D4;
  void aBlock[3] = &unk_100E2EF60;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100128E24((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10017DF08(&qword_100E75530);
  sub_100115EDC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v3, v1);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v22);
  return ((uint64_t (*)(char *, uint64_t))v15)(v13, v19);
}

void sub_100931A38()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Weather15SettingsMonitor_observer);
  *(void *)(v0 + OBJC_IVAR____TtC7Weather15SettingsMonitor_observer) = 0;
}

uint64_t SettingsMonitor.deinit()
{
  swift_release();
  sub_1001781AC(v0 + OBJC_IVAR____TtC7Weather15SettingsMonitor_lastTemperatureConfiguration, &qword_100E6F620);
  sub_1001781AC(v0 + OBJC_IVAR____TtC7Weather15SettingsMonitor_lastDistanceConfiguration, &qword_100E77758);
  sub_1001781AC(v0 + OBJC_IVAR____TtC7Weather15SettingsMonitor_lastWindSpeedConfiguration, qword_100E77770);
  sub_1001781AC(v0 + OBJC_IVAR____TtC7Weather15SettingsMonitor_lastPressureConfiguration, &qword_100E77768);
  sub_1001781AC(v0 + OBJC_IVAR____TtC7Weather15SettingsMonitor_lastPrecipitationConfiguration, &qword_100E77760);

  return v0;
}

uint64_t SettingsMonitor.__deallocating_deinit()
{
  SettingsMonitor.deinit();

  return swift_deallocClassInstance();
}

Swift::Void __swiftcall SettingsMonitor.applicationDidEnterBackground()()
{
  uint64_t v1 = sub_10017DF08(&qword_100E6F620);
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_1001626E0();
  uint64_t v5 = v4 - v3;
  type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  UnitManager.preferredTemperatureUnit.getter();
  swift_release();
  uint64_t v6 = v0 + OBJC_IVAR____TtC7Weather15SettingsMonitor_lastTemperatureConfiguration;
  swift_beginAccess();
  sub_100931C18(v5, v6);
  swift_endAccess();
  sub_100931A38();
}

uint64_t sub_100931C18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6F620);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100931C84()
{
  return type metadata accessor for SettingsMonitor();
}

uint64_t sub_100931C8C()
{
  return sub_1009316A8(v0);
}

uint64_t sub_100931C98(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_10017DF08(a3);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 24))(a2, a1);
  return a2;
}

void *sub_100931CF4(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v18 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
        uint64_t v19 = type metadata accessor for AirQualityDetailViewState();
        *((unsigned char *)a1 + *(int *)(v19 + 20)) = *((unsigned char *)a2 + *(int *)(v19 + 20));
        uint64_t v20 = *(int *)(v19 + 24);
        uint64_t v21 = (char *)a1 + v20;
        uint64_t v22 = (char *)a2 + v20;
        v21[32] = v22[32];
        long long v23 = *((_OWORD *)v22 + 1);
        *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
        *((_OWORD *)v21 + 1) = v23;
        break;
      case 2u:
        uint64_t v24 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
        uint64_t v25 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
        uint64_t v26 = (char *)a1 + v25;
        char v27 = (char *)a2 + v25;
        long long v28 = *((_OWORD *)v27 + 1);
        *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
        *((_OWORD *)v26 + 1) = v28;
        v26[32] = v27[32];
        break;
      case 3u:
        uint64_t v29 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(a1, a2, v29);
        uint64_t v30 = type metadata accessor for SunriseSunsetDetailViewState();
        uint64_t v31 = *(int *)(v30 + 20);
        int v32 = (char *)a1 + v31;
        uint64_t v33 = (char *)a2 + v31;
        long long v34 = *((_OWORD *)v33 + 1);
        *(_OWORD *)int v32 = *(_OWORD *)v33;
        *((_OWORD *)v32 + 1) = v34;
        v32[32] = v33[32];
        *((unsigned char *)a1 + *(int *)(v30 + 24)) = *((unsigned char *)a2 + *(int *)(v30 + 24));
        break;
      case 4u:
        uint64_t v35 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v35 - 8) + 16))(a1, a2, v35);
        uint64_t v36 = (int *)type metadata accessor for MoonDetailViewState();
        uint64_t v37 = v36[5];
        uint64_t v38 = (char *)a1 + v37;
        uint64_t v39 = (char *)a2 + v37;
        uint64_t v40 = type metadata accessor for MoonDetailSelectedDate();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40))
        {
          uint64_t v41 = sub_10017DF08(&qword_100E67240);
          memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          uint64_t v69 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v38, v39, v69);
          swift_storeEnumTagMultiPayload();
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
        }
        uint64_t v70 = v36[6];
        uint64_t v71 = (char *)a1 + v70;
        uint64_t v72 = (char *)a2 + v70;
        uint64_t v73 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v72, 1, v73))
        {
          uint64_t v74 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v71, v72, *(void *)(*(void *)(v74 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v71, 0, 1, v73);
        }
        uint64_t v89 = v36[7];
        uint64_t v90 = (char *)a1 + v89;
        uint64_t v91 = (char *)a2 + v89;
        long long v92 = *((_OWORD *)v91 + 1);
        *(_OWORD *)uint64_t v90 = *(_OWORD *)v91;
        *((_OWORD *)v90 + 1) = v92;
        v90[32] = v91[32];
        *((unsigned char *)a1 + v36[8]) = *((unsigned char *)a2 + v36[8]);
        break;
      case 5u:
        uint64_t v42 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v42 - 8) + 16))(a1, a2, v42);
        uint64_t v43 = (int *)type metadata accessor for AveragesDetailViewState();
        *((unsigned char *)a1 + v43[5]) = *((unsigned char *)a2 + v43[5]);
        uint64_t v44 = v43[6];
        uint64_t v45 = (void *)((char *)a1 + v44);
        uint64_t v46 = (void *)((char *)a2 + v44);
        uint64_t v47 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, (uint64_t)v47))
        {
          uint64_t v48 = sub_10017DF08(&qword_100E6B670);
          memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
        }
        else
        {
          *uint64_t v45 = *v46;
          uint64_t v75 = v47[5];
          uint64_t v76 = (char *)v45 + v75;
          int v77 = (char *)v46 + v75;
          uint64_t v78 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16))(v76, v77, v78);
          *(void *)((char *)v45 + v47[6]) = *(void *)((char *)v46 + v47[6]);
          *(void *)((char *)v45 + v47[7]) = *(void *)((char *)v46 + v47[7]);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, (uint64_t)v47);
        }
        uint64_t v79 = v43[7];
        uint64_t v80 = (char *)a1 + v79;
        uint64_t v81 = (char *)a2 + v79;
        long long v82 = *((_OWORD *)v81 + 1);
        *(_OWORD *)uint64_t v80 = *(_OWORD *)v81;
        *((_OWORD *)v80 + 1) = v82;
        v80[32] = v81[32];
        break;
      case 6u:
        uint64_t v49 = type metadata accessor for URL();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v49 - 8) + 16))(a1, a2, v49);
        break;
      case 7u:
        uint64_t v50 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v50 - 8) + 16))(a1, a2, v50);
        uint64_t v51 = type metadata accessor for HomeAndWorkRefinementViewState();
        uint64_t v52 = *(int *)(v51 + 20);
        uint64_t v53 = (char *)a1 + v52;
        uint64_t v54 = (char *)a2 + v52;
        uint64_t v55 = type metadata accessor for LocationOfInterest();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
        uint64_t v56 = *(int *)(v51 + 24);
        uint64_t v57 = (char *)a1 + v56;
        uint64_t v58 = (char *)a2 + v56;
        long long v59 = *((_OWORD *)v58 + 1);
        *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
        *((_OWORD *)v57 + 1) = v59;
        v57[32] = v58[32];
        break;
      default:
        uint64_t v6 = type metadata accessor for DetailCondition();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = (int *)type metadata accessor for ConditionDetailViewState();
        uint64_t v8 = v7[5];
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
        uint64_t v12 = v7[6];
        uint64_t v13 = (char *)a1 + v12;
        uint64_t v14 = (char *)a2 + v12;
        uint64_t v15 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
        {
          uint64_t v16 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
        }
        uint64_t v60 = v7[7];
        uint64_t v61 = (char *)a1 + v60;
        uint64_t v62 = (char *)a2 + v60;
        long long v63 = *((_OWORD *)v62 + 1);
        *(_OWORD *)uint64_t v61 = *(_OWORD *)v62;
        *((_OWORD *)v61 + 1) = v63;
        v61[32] = v62[32];
        uint64_t v64 = v7[8];
        uint64_t v65 = (void *)((char *)a1 + v64);
        uint64_t v66 = (void *)((char *)a2 + v64);
        int v67 = (int *)type metadata accessor for DetailChartSelection();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, (uint64_t)v67))
        {
          uint64_t v68 = sub_10017DF08(&qword_100E711F8);
          memcpy(v65, v66, *(void *)(*(void *)(v68 - 8) + 64));
        }
        else
        {
          uint64_t v83 = v66[1];
          void *v65 = *v66;
          v65[1] = v83;
          uint64_t v84 = v67[5];
          uint64_t v94 = (char *)v66 + v84;
          uint64_t v95 = (char *)v65 + v84;
          uint64_t v85 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
          swift_bridgeObjectRetain();
          v85(v95, v94, v15);
          v85((char *)v65 + v67[6], (char *)v66 + v67[6], v15);
          v85((char *)v65 + v67[7], (char *)v66 + v67[7], v15);
          *(void *)((char *)v65 + v67[8]) = *(void *)((char *)v66 + v67[8]);
          uint64_t v86 = v67[9];
          uint64_t v87 = (char *)v65 + v86;
          uint64_t v88 = (char *)v66 + v86;
          v87[8] = v88[8];
          *(void *)uint64_t v87 = *(void *)v88;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 0, 1, (uint64_t)v67);
        }
        *((unsigned char *)a1 + v7[9]) = *((unsigned char *)a2 + v7[9]);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100932628(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v4 = type metadata accessor for DetailCondition();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
      int v5 = (int *)type metadata accessor for ConditionDetailViewState();
      uint64_t v6 = a1 + v5[5];
      uint64_t v7 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
      uint64_t v8 = a1 + v5[6];
      uint64_t v9 = type metadata accessor for Date();
      if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v9)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
      }
      uint64_t v10 = a1 + v5[8];
      uint64_t v11 = (int *)type metadata accessor for DetailChartSelection();
      uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v10, 1, (uint64_t)v11);
      if (!result)
      {
        swift_bridgeObjectRelease();
        uint64_t v26 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
        v26(v10 + v11[5], v9);
        v26(v10 + v11[6], v9);
        uint64_t v12 = v10 + v11[7];
        uint64_t v13 = v9;
        uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))v26;
        break;
      }
      return result;
    case 1:
    case 2:
    case 3:
      uint64_t v3 = type metadata accessor for Location();
      goto LABEL_17;
    case 4:
      uint64_t v15 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a1, v15);
      uint64_t v16 = type metadata accessor for MoonDetailViewState();
      uint64_t v17 = a1 + *(int *)(v16 + 20);
      uint64_t v18 = type metadata accessor for MoonDetailSelectedDate();
      if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, v18)
        && swift_getEnumCaseMultiPayload() <= 2)
      {
        uint64_t v19 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v17, v19);
      }
      uint64_t v20 = a1 + *(int *)(v16 + 24);
      uint64_t v21 = type metadata accessor for Date();
      uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v20, 1, v21);
      if (result) {
        return result;
      }
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8);
      uint64_t v12 = v20;
      uint64_t v13 = v21;
      break;
    case 5:
      uint64_t v22 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(a1, v22);
      uint64_t v23 = a1 + *(int *)(type metadata accessor for AveragesDetailViewState() + 24);
      uint64_t v24 = type metadata accessor for DetailHeroChartLollipopPosition(0);
      uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v23, 1, v24);
      if (result) {
        return result;
      }
      a1 = v23 + *(int *)(v24 + 20);
      uint64_t v3 = type metadata accessor for Date();
LABEL_17:
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t v13 = v3;
      uint64_t v12 = a1;
      break;
    case 6:
      uint64_t v3 = type metadata accessor for URL();
      goto LABEL_17;
    case 7:
      uint64_t v25 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(a1, v25);
      a1 += *(int *)(type metadata accessor for HomeAndWorkRefinementViewState() + 20);
      uint64_t v3 = type metadata accessor for LocationOfInterest();
      goto LABEL_17;
    default:
      return result;
  }

  return v14(v12, v13);
}

uint64_t sub_100932A5C(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v15 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
      uint64_t v16 = type metadata accessor for AirQualityDetailViewState();
      *(unsigned char *)(a1 + *(int *)(v16 + 20)) = *(unsigned char *)(a2 + *(int *)(v16 + 20));
      uint64_t v17 = *(int *)(v16 + 24);
      uint64_t v18 = a1 + v17;
      uint64_t v19 = a2 + v17;
      *(unsigned char *)(v18 + 32) = *(unsigned char *)(v19 + 32);
      long long v20 = *(_OWORD *)(v19 + 16);
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
      *(_OWORD *)(v18 + 16) = v20;
      break;
    case 2u:
      uint64_t v21 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
      uint64_t v22 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
      uint64_t v23 = a1 + v22;
      uint64_t v24 = a2 + v22;
      long long v25 = *(_OWORD *)(v24 + 16);
      *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
      *(_OWORD *)(v23 + 16) = v25;
      *(unsigned char *)(v23 + 32) = *(unsigned char *)(v24 + 32);
      break;
    case 3u:
      uint64_t v26 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(a1, a2, v26);
      uint64_t v27 = type metadata accessor for SunriseSunsetDetailViewState();
      uint64_t v28 = *(int *)(v27 + 20);
      uint64_t v29 = a1 + v28;
      uint64_t v30 = a2 + v28;
      long long v31 = *(_OWORD *)(v30 + 16);
      *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
      *(_OWORD *)(v29 + 16) = v31;
      *(unsigned char *)(v29 + 32) = *(unsigned char *)(v30 + 32);
      *(unsigned char *)(a1 + *(int *)(v27 + 24)) = *(unsigned char *)(a2 + *(int *)(v27 + 24));
      break;
    case 4u:
      uint64_t v32 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16))(a1, a2, v32);
      uint64_t v33 = (int *)type metadata accessor for MoonDetailViewState();
      uint64_t v34 = v33[5];
      uint64_t v35 = (void *)(a1 + v34);
      uint64_t v36 = (const void *)(a2 + v34);
      uint64_t v37 = type metadata accessor for MoonDetailSelectedDate();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37))
      {
        uint64_t v38 = sub_10017DF08(&qword_100E67240);
        memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        swift_getEnumCaseMultiPayload();
        uint64_t v66 = type metadata accessor for Date();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v66 - 8) + 16))(v35, v36, v66);
        swift_storeEnumTagMultiPayload();
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v37);
      }
      uint64_t v67 = v33[6];
      uint64_t v68 = (void *)(a1 + v67);
      uint64_t v69 = (const void *)(a2 + v67);
      uint64_t v70 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v69, 1, v70))
      {
        uint64_t v71 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v68, v69, *(void *)(*(void *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v70 - 8) + 16))(v68, v69, v70);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v68, 0, 1, v70);
      }
      uint64_t v86 = v33[7];
      uint64_t v87 = a1 + v86;
      uint64_t v88 = a2 + v86;
      long long v89 = *(_OWORD *)(v88 + 16);
      *(_OWORD *)uint64_t v87 = *(_OWORD *)v88;
      *(_OWORD *)(v87 + 16) = v89;
      *(unsigned char *)(v87 + 32) = *(unsigned char *)(v88 + 32);
      *(unsigned char *)(a1 + v33[8]) = *(unsigned char *)(a2 + v33[8]);
      break;
    case 5u:
      uint64_t v39 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 16))(a1, a2, v39);
      uint64_t v40 = (int *)type metadata accessor for AveragesDetailViewState();
      *(unsigned char *)(a1 + v40[5]) = *(unsigned char *)(a2 + v40[5]);
      uint64_t v41 = v40[6];
      uint64_t v42 = (void *)(a1 + v41);
      uint64_t v43 = (void *)(a2 + v41);
      uint64_t v44 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, (uint64_t)v44))
      {
        uint64_t v45 = sub_10017DF08(&qword_100E6B670);
        memcpy(v42, v43, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        *uint64_t v42 = *v43;
        uint64_t v72 = v44[5];
        uint64_t v73 = (char *)v42 + v72;
        uint64_t v74 = (char *)v43 + v72;
        uint64_t v75 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16))(v73, v74, v75);
        *(void *)((char *)v42 + v44[6]) = *(void *)((char *)v43 + v44[6]);
        *(void *)((char *)v42 + v44[7]) = *(void *)((char *)v43 + v44[7]);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, (uint64_t)v44);
      }
      uint64_t v76 = v40[7];
      uint64_t v77 = a1 + v76;
      uint64_t v78 = a2 + v76;
      long long v79 = *(_OWORD *)(v78 + 16);
      *(_OWORD *)uint64_t v77 = *(_OWORD *)v78;
      *(_OWORD *)(v77 + 16) = v79;
      *(unsigned char *)(v77 + 32) = *(unsigned char *)(v78 + 32);
      break;
    case 6u:
      uint64_t v46 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 16))(a1, a2, v46);
      break;
    case 7u:
      uint64_t v47 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16))(a1, a2, v47);
      uint64_t v48 = type metadata accessor for HomeAndWorkRefinementViewState();
      uint64_t v49 = *(int *)(v48 + 20);
      uint64_t v50 = a1 + v49;
      uint64_t v51 = a2 + v49;
      uint64_t v52 = type metadata accessor for LocationOfInterest();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
      uint64_t v53 = *(int *)(v48 + 24);
      uint64_t v54 = a1 + v53;
      uint64_t v55 = a2 + v53;
      long long v56 = *(_OWORD *)(v55 + 16);
      *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
      *(_OWORD *)(v54 + 16) = v56;
      *(unsigned char *)(v54 + 32) = *(unsigned char *)(v55 + 32);
      break;
    default:
      uint64_t v4 = type metadata accessor for DetailCondition();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      int v5 = (int *)type metadata accessor for ConditionDetailViewState();
      uint64_t v6 = v5[5];
      uint64_t v7 = a1 + v6;
      uint64_t v8 = a2 + v6;
      uint64_t v9 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      uint64_t v10 = v5[6];
      uint64_t v11 = (void *)(a1 + v10);
      uint64_t v12 = (const void *)(a2 + v10);
      uint64_t v13 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
      {
        uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
      }
      uint64_t v57 = v5[7];
      uint64_t v58 = a1 + v57;
      uint64_t v59 = a2 + v57;
      long long v60 = *(_OWORD *)(v59 + 16);
      *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
      *(_OWORD *)(v58 + 16) = v60;
      *(unsigned char *)(v58 + 32) = *(unsigned char *)(v59 + 32);
      uint64_t v61 = v5[8];
      uint64_t v62 = (void *)(a1 + v61);
      long long v63 = (void *)(a2 + v61);
      uint64_t v64 = (int *)type metadata accessor for DetailChartSelection();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 1, (uint64_t)v64))
      {
        uint64_t v65 = sub_10017DF08(&qword_100E711F8);
        memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        uint64_t v80 = v63[1];
        void *v62 = *v63;
        v62[1] = v80;
        uint64_t v81 = v64[5];
        uint64_t v91 = (char *)v63 + v81;
        long long v92 = (char *)v62 + v81;
        long long v82 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
        swift_bridgeObjectRetain();
        v82(v92, v91, v13);
        v82((char *)v62 + v64[6], (char *)v63 + v64[6], v13);
        v82((char *)v62 + v64[7], (char *)v63 + v64[7], v13);
        *(void *)((char *)v62 + v64[8]) = *(void *)((char *)v63 + v64[8]);
        uint64_t v83 = v64[9];
        uint64_t v84 = (char *)v62 + v83;
        uint64_t v85 = (char *)v63 + v83;
        v84[8] = v85[8];
        *(void *)uint64_t v84 = *(void *)v85;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v62, 0, 1, (uint64_t)v64);
      }
      *(unsigned char *)(a1 + v5[9]) = *(unsigned char *)(a2 + v5[9]);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100933340(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_10011D54C(a1, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v15 = type metadata accessor for Location();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
        uint64_t v16 = type metadata accessor for AirQualityDetailViewState();
        *(unsigned char *)(a1 + *(int *)(v16 + 20)) = *(unsigned char *)(a2 + *(int *)(v16 + 20));
        uint64_t v17 = *(int *)(v16 + 24);
        uint64_t v18 = a1 + v17;
        uint64_t v19 = a2 + v17;
        char v20 = *(unsigned char *)(v19 + 32);
        long long v21 = *(_OWORD *)(v19 + 16);
        *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
        *(_OWORD *)(v18 + 16) = v21;
        *(unsigned char *)(v18 + 32) = v20;
        break;
      case 2u:
        uint64_t v22 = type metadata accessor for Location();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
        uint64_t v23 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
        uint64_t v24 = a1 + v23;
        long long v25 = (long long *)(a2 + v23);
        long long v26 = *v25;
        long long v27 = v25[1];
        *(unsigned char *)(v24 + 32) = *((unsigned char *)v25 + 32);
        *(_OWORD *)uint64_t v24 = v26;
        *(_OWORD *)(v24 + 16) = v27;
        break;
      case 3u:
        uint64_t v28 = type metadata accessor for Location();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(a1, a2, v28);
        uint64_t v29 = type metadata accessor for SunriseSunsetDetailViewState();
        uint64_t v30 = *(int *)(v29 + 20);
        uint64_t v31 = a1 + v30;
        uint64_t v32 = (long long *)(a2 + v30);
        long long v33 = *v32;
        long long v34 = v32[1];
        *(unsigned char *)(v31 + 32) = *((unsigned char *)v32 + 32);
        *(_OWORD *)uint64_t v31 = v33;
        *(_OWORD *)(v31 + 16) = v34;
        *(unsigned char *)(a1 + *(int *)(v29 + 24)) = *(unsigned char *)(a2 + *(int *)(v29 + 24));
        break;
      case 4u:
        uint64_t v35 = type metadata accessor for Location();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(a1, a2, v35);
        uint64_t v36 = (int *)type metadata accessor for MoonDetailViewState();
        uint64_t v37 = v36[5];
        uint64_t v38 = (void *)(a1 + v37);
        uint64_t v39 = (const void *)(a2 + v37);
        uint64_t v40 = type metadata accessor for MoonDetailSelectedDate();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40))
        {
          uint64_t v41 = sub_10017DF08(&qword_100E67240);
          memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          uint64_t v71 = type metadata accessor for Date();
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v71 - 8) + 16))(v38, v39, v71);
          swift_storeEnumTagMultiPayload();
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
        }
        uint64_t v72 = v36[6];
        uint64_t v73 = (void *)(a1 + v72);
        uint64_t v74 = (const void *)(a2 + v72);
        uint64_t v75 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v74, 1, v75))
        {
          uint64_t v76 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v73, v74, *(void *)(*(void *)(v76 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v75 - 8) + 16))(v73, v74, v75);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v73, 0, 1, v75);
        }
        uint64_t v83 = v36[7];
        uint64_t v84 = a1 + v83;
        uint64_t v85 = (long long *)(a2 + v83);
        long long v86 = *v85;
        long long v87 = v85[1];
        *(unsigned char *)(v84 + 32) = *((unsigned char *)v85 + 32);
        *(_OWORD *)uint64_t v84 = v86;
        *(_OWORD *)(v84 + 16) = v87;
        *(unsigned char *)(a1 + v36[8]) = *(unsigned char *)(a2 + v36[8]);
        break;
      case 5u:
        uint64_t v42 = type metadata accessor for Location();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(a1, a2, v42);
        uint64_t v43 = (int *)type metadata accessor for AveragesDetailViewState();
        *(unsigned char *)(a1 + v43[5]) = *(unsigned char *)(a2 + v43[5]);
        uint64_t v44 = v43[6];
        uint64_t v45 = (void *)(a1 + v44);
        uint64_t v46 = (void *)(a2 + v44);
        uint64_t v47 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, (uint64_t)v47))
        {
          uint64_t v48 = sub_10017DF08(&qword_100E6B670);
          memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
        }
        else
        {
          *uint64_t v45 = *v46;
          uint64_t v88 = v47[5];
          long long v89 = (char *)v45 + v88;
          uint64_t v90 = (char *)v46 + v88;
          uint64_t v91 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 16))(v89, v90, v91);
          *(void *)((char *)v45 + v47[6]) = *(void *)((char *)v46 + v47[6]);
          *(void *)((char *)v45 + v47[7]) = *(void *)((char *)v46 + v47[7]);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, (uint64_t)v47);
        }
        uint64_t v92 = v43[7];
        uint64_t v93 = a1 + v92;
        uint64_t v94 = (long long *)(a2 + v92);
        long long v95 = *v94;
        long long v96 = v94[1];
        *(unsigned char *)(v93 + 32) = *((unsigned char *)v94 + 32);
        *(_OWORD *)uint64_t v93 = v95;
        *(_OWORD *)(v93 + 16) = v96;
        break;
      case 6u:
        uint64_t v49 = type metadata accessor for URL();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16))(a1, a2, v49);
        break;
      case 7u:
        uint64_t v50 = type metadata accessor for Location();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16))(a1, a2, v50);
        uint64_t v51 = type metadata accessor for HomeAndWorkRefinementViewState();
        uint64_t v52 = *(int *)(v51 + 20);
        uint64_t v53 = a1 + v52;
        uint64_t v54 = a2 + v52;
        uint64_t v55 = type metadata accessor for LocationOfInterest();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
        uint64_t v56 = *(int *)(v51 + 24);
        uint64_t v57 = a1 + v56;
        uint64_t v58 = (long long *)(a2 + v56);
        long long v59 = *v58;
        long long v60 = v58[1];
        *(unsigned char *)(v57 + 32) = *((unsigned char *)v58 + 32);
        *(_OWORD *)uint64_t v57 = v59;
        *(_OWORD *)(v57 + 16) = v60;
        break;
      default:
        uint64_t v4 = type metadata accessor for DetailCondition();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        int v5 = (int *)type metadata accessor for ConditionDetailViewState();
        uint64_t v6 = v5[5];
        uint64_t v7 = a1 + v6;
        uint64_t v8 = a2 + v6;
        uint64_t v9 = type metadata accessor for Location();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
        uint64_t v10 = v5[6];
        uint64_t v11 = (void *)(a1 + v10);
        uint64_t v12 = (const void *)(a2 + v10);
        uint64_t v13 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
        {
          uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
        }
        uint64_t v61 = v5[7];
        uint64_t v62 = a1 + v61;
        long long v63 = (long long *)(a2 + v61);
        long long v64 = *v63;
        long long v65 = v63[1];
        *(unsigned char *)(v62 + 32) = *((unsigned char *)v63 + 32);
        *(_OWORD *)uint64_t v62 = v64;
        *(_OWORD *)(v62 + 16) = v65;
        uint64_t v66 = v5[8];
        uint64_t v67 = (void *)(a1 + v66);
        uint64_t v68 = (void *)(a2 + v66);
        uint64_t v69 = (int *)type metadata accessor for DetailChartSelection();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v68, 1, (uint64_t)v69))
        {
          uint64_t v70 = sub_10017DF08(&qword_100E711F8);
          memcpy(v67, v68, *(void *)(*(void *)(v70 - 8) + 64));
        }
        else
        {
          *uint64_t v67 = *v68;
          v67[1] = v68[1];
          uint64_t v77 = v69[5];
          uint64_t v98 = (char *)v68 + v77;
          uint64_t v99 = (char *)v67 + v77;
          uint64_t v78 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
          swift_bridgeObjectRetain();
          v78(v99, v98, v13);
          v78((char *)v67 + v69[6], (char *)v68 + v69[6], v13);
          v78((char *)v67 + v69[7], (char *)v68 + v69[7], v13);
          *(void *)((char *)v67 + v69[8]) = *(void *)((char *)v68 + v69[8]);
          uint64_t v79 = v69[9];
          uint64_t v80 = (char *)v67 + v79;
          uint64_t v81 = (char *)v68 + v79;
          char v82 = v81[8];
          *(void *)uint64_t v80 = *(void *)v81;
          v80[8] = v82;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v67, 0, 1, (uint64_t)v69);
        }
        *(unsigned char *)(a1 + v5[9]) = *(unsigned char *)(a2 + v5[9]);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100933C50(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v15 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
      uint64_t v16 = type metadata accessor for AirQualityDetailViewState();
      *(unsigned char *)(a1 + *(int *)(v16 + 20)) = *(unsigned char *)(a2 + *(int *)(v16 + 20));
      uint64_t v17 = *(int *)(v16 + 24);
      uint64_t v18 = a1 + v17;
      uint64_t v19 = a2 + v17;
      *(unsigned char *)(v18 + 32) = *(unsigned char *)(v19 + 32);
      long long v20 = *(_OWORD *)(v19 + 16);
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
      *(_OWORD *)(v18 + 16) = v20;
      break;
    case 2u:
      uint64_t v21 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
      uint64_t v22 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
      uint64_t v23 = a1 + v22;
      uint64_t v24 = a2 + v22;
      long long v25 = *(_OWORD *)(v24 + 16);
      *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
      *(_OWORD *)(v23 + 16) = v25;
      *(unsigned char *)(v23 + 32) = *(unsigned char *)(v24 + 32);
      break;
    case 3u:
      uint64_t v26 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(a1, a2, v26);
      uint64_t v27 = type metadata accessor for SunriseSunsetDetailViewState();
      uint64_t v28 = *(int *)(v27 + 20);
      uint64_t v29 = a1 + v28;
      uint64_t v30 = a2 + v28;
      long long v31 = *(_OWORD *)(v30 + 16);
      *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
      *(_OWORD *)(v29 + 16) = v31;
      *(unsigned char *)(v29 + 32) = *(unsigned char *)(v30 + 32);
      *(unsigned char *)(a1 + *(int *)(v27 + 24)) = *(unsigned char *)(a2 + *(int *)(v27 + 24));
      break;
    case 4u:
      uint64_t v32 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 32))(a1, a2, v32);
      long long v33 = (int *)type metadata accessor for MoonDetailViewState();
      uint64_t v34 = v33[5];
      uint64_t v35 = (void *)(a1 + v34);
      uint64_t v36 = (const void *)(a2 + v34);
      uint64_t v37 = type metadata accessor for MoonDetailSelectedDate();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37))
      {
        uint64_t v38 = sub_10017DF08(&qword_100E67240);
        memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        swift_getEnumCaseMultiPayload();
        uint64_t v66 = type metadata accessor for Date();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v66 - 8) + 32))(v35, v36, v66);
        swift_storeEnumTagMultiPayload();
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v37);
      }
      uint64_t v67 = v33[6];
      uint64_t v68 = (void *)(a1 + v67);
      uint64_t v69 = (const void *)(a2 + v67);
      uint64_t v70 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v69, 1, v70))
      {
        uint64_t v71 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v68, v69, *(void *)(*(void *)(v71 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v70 - 8) + 32))(v68, v69, v70);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v68, 0, 1, v70);
      }
      uint64_t v84 = v33[7];
      uint64_t v85 = a1 + v84;
      uint64_t v86 = a2 + v84;
      long long v87 = *(_OWORD *)(v86 + 16);
      *(_OWORD *)uint64_t v85 = *(_OWORD *)v86;
      *(_OWORD *)(v85 + 16) = v87;
      *(unsigned char *)(v85 + 32) = *(unsigned char *)(v86 + 32);
      *(unsigned char *)(a1 + v33[8]) = *(unsigned char *)(a2 + v33[8]);
      break;
    case 5u:
      uint64_t v39 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 32))(a1, a2, v39);
      uint64_t v40 = (int *)type metadata accessor for AveragesDetailViewState();
      *(unsigned char *)(a1 + v40[5]) = *(unsigned char *)(a2 + v40[5]);
      uint64_t v41 = v40[6];
      uint64_t v42 = (void *)(a1 + v41);
      uint64_t v43 = (void *)(a2 + v41);
      uint64_t v44 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, (uint64_t)v44))
      {
        uint64_t v45 = sub_10017DF08(&qword_100E6B670);
        memcpy(v42, v43, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        *uint64_t v42 = *v43;
        uint64_t v72 = v44[5];
        uint64_t v73 = (char *)v42 + v72;
        uint64_t v74 = (char *)v43 + v72;
        uint64_t v75 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
        *(void *)((char *)v42 + v44[6]) = *(void *)((char *)v43 + v44[6]);
        *(void *)((char *)v42 + v44[7]) = *(void *)((char *)v43 + v44[7]);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, (uint64_t)v44);
      }
      uint64_t v76 = v40[7];
      uint64_t v77 = a1 + v76;
      uint64_t v78 = a2 + v76;
      long long v79 = *(_OWORD *)(v78 + 16);
      *(_OWORD *)uint64_t v77 = *(_OWORD *)v78;
      *(_OWORD *)(v77 + 16) = v79;
      *(unsigned char *)(v77 + 32) = *(unsigned char *)(v78 + 32);
      break;
    case 6u:
      uint64_t v46 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(a1, a2, v46);
      break;
    case 7u:
      uint64_t v47 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 32))(a1, a2, v47);
      uint64_t v48 = type metadata accessor for HomeAndWorkRefinementViewState();
      uint64_t v49 = *(int *)(v48 + 20);
      uint64_t v50 = a1 + v49;
      uint64_t v51 = a2 + v49;
      uint64_t v52 = type metadata accessor for LocationOfInterest();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
      uint64_t v53 = *(int *)(v48 + 24);
      uint64_t v54 = a1 + v53;
      uint64_t v55 = a2 + v53;
      long long v56 = *(_OWORD *)(v55 + 16);
      *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
      *(_OWORD *)(v54 + 16) = v56;
      *(unsigned char *)(v54 + 32) = *(unsigned char *)(v55 + 32);
      break;
    default:
      uint64_t v4 = type metadata accessor for DetailCondition();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
      int v5 = (int *)type metadata accessor for ConditionDetailViewState();
      uint64_t v6 = v5[5];
      uint64_t v7 = a1 + v6;
      uint64_t v8 = a2 + v6;
      uint64_t v9 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      uint64_t v10 = v5[6];
      uint64_t v11 = (void *)(a1 + v10);
      uint64_t v12 = (const void *)(a2 + v10);
      uint64_t v13 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
      {
        uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
      }
      uint64_t v57 = v5[7];
      uint64_t v58 = a1 + v57;
      uint64_t v59 = a2 + v57;
      long long v60 = *(_OWORD *)(v59 + 16);
      *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
      *(_OWORD *)(v58 + 16) = v60;
      *(unsigned char *)(v58 + 32) = *(unsigned char *)(v59 + 32);
      uint64_t v61 = v5[8];
      uint64_t v62 = (_OWORD *)(a1 + v61);
      long long v63 = (_OWORD *)(a2 + v61);
      long long v64 = (int *)type metadata accessor for DetailChartSelection();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 1, (uint64_t)v64))
      {
        uint64_t v65 = sub_10017DF08(&qword_100E711F8);
        memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        _OWORD *v62 = *v63;
        uint64_t v80 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32);
        v80((char *)v62 + v64[5], (char *)v63 + v64[5], v13);
        v80((char *)v62 + v64[6], (char *)v63 + v64[6], v13);
        v80((char *)v62 + v64[7], (char *)v63 + v64[7], v13);
        *(void *)((char *)v62 + v64[8]) = *(void *)((char *)v63 + v64[8]);
        uint64_t v81 = v64[9];
        char v82 = (char *)v62 + v81;
        uint64_t v83 = (char *)v63 + v81;
        v82[8] = v83[8];
        *(void *)char v82 = *(void *)v83;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v62, 0, 1, (uint64_t)v64);
      }
      *(unsigned char *)(a1 + v5[9]) = *(unsigned char *)(a2 + v5[9]);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100934520(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_10011D54C(a1, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v15 = type metadata accessor for Location();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
        uint64_t v16 = type metadata accessor for AirQualityDetailViewState();
        *(unsigned char *)(a1 + *(int *)(v16 + 20)) = *(unsigned char *)(a2 + *(int *)(v16 + 20));
        uint64_t v17 = *(int *)(v16 + 24);
        uint64_t v18 = a1 + v17;
        uint64_t v19 = a2 + v17;
        *(unsigned char *)(v18 + 32) = *(unsigned char *)(v19 + 32);
        long long v20 = *(_OWORD *)(v19 + 16);
        *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
        *(_OWORD *)(v18 + 16) = v20;
        break;
      case 2u:
        uint64_t v21 = type metadata accessor for Location();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
        uint64_t v22 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
        uint64_t v23 = a1 + v22;
        uint64_t v24 = a2 + v22;
        long long v25 = *(_OWORD *)(v24 + 16);
        *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
        *(_OWORD *)(v23 + 16) = v25;
        *(unsigned char *)(v23 + 32) = *(unsigned char *)(v24 + 32);
        break;
      case 3u:
        uint64_t v26 = type metadata accessor for Location();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(a1, a2, v26);
        uint64_t v27 = type metadata accessor for SunriseSunsetDetailViewState();
        uint64_t v28 = *(int *)(v27 + 20);
        uint64_t v29 = a1 + v28;
        uint64_t v30 = a2 + v28;
        long long v31 = *(_OWORD *)(v30 + 16);
        *(_OWORD *)uint64_t v29 = *(_OWORD *)v30;
        *(_OWORD *)(v29 + 16) = v31;
        *(unsigned char *)(v29 + 32) = *(unsigned char *)(v30 + 32);
        *(unsigned char *)(a1 + *(int *)(v27 + 24)) = *(unsigned char *)(a2 + *(int *)(v27 + 24));
        break;
      case 4u:
        uint64_t v32 = type metadata accessor for Location();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 32))(a1, a2, v32);
        long long v33 = (int *)type metadata accessor for MoonDetailViewState();
        uint64_t v34 = v33[5];
        uint64_t v35 = (void *)(a1 + v34);
        uint64_t v36 = (const void *)(a2 + v34);
        uint64_t v37 = type metadata accessor for MoonDetailSelectedDate();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37))
        {
          uint64_t v38 = sub_10017DF08(&qword_100E67240);
          memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          uint64_t v66 = type metadata accessor for Date();
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v66 - 8) + 32))(v35, v36, v66);
          swift_storeEnumTagMultiPayload();
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v37);
        }
        uint64_t v67 = v33[6];
        uint64_t v68 = (void *)(a1 + v67);
        uint64_t v69 = (const void *)(a2 + v67);
        uint64_t v70 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v69, 1, v70))
        {
          uint64_t v71 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v68, v69, *(void *)(*(void *)(v71 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v70 - 8) + 32))(v68, v69, v70);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v68, 0, 1, v70);
        }
        uint64_t v76 = v33[7];
        uint64_t v77 = a1 + v76;
        uint64_t v78 = a2 + v76;
        long long v79 = *(_OWORD *)(v78 + 16);
        *(_OWORD *)uint64_t v77 = *(_OWORD *)v78;
        *(_OWORD *)(v77 + 16) = v79;
        *(unsigned char *)(v77 + 32) = *(unsigned char *)(v78 + 32);
        *(unsigned char *)(a1 + v33[8]) = *(unsigned char *)(a2 + v33[8]);
        break;
      case 5u:
        uint64_t v39 = type metadata accessor for Location();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 32))(a1, a2, v39);
        uint64_t v40 = (int *)type metadata accessor for AveragesDetailViewState();
        *(unsigned char *)(a1 + v40[5]) = *(unsigned char *)(a2 + v40[5]);
        uint64_t v41 = v40[6];
        uint64_t v42 = (void *)(a1 + v41);
        uint64_t v43 = (void *)(a2 + v41);
        uint64_t v44 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, (uint64_t)v44))
        {
          uint64_t v45 = sub_10017DF08(&qword_100E6B670);
          memcpy(v42, v43, *(void *)(*(void *)(v45 - 8) + 64));
        }
        else
        {
          *uint64_t v42 = *v43;
          uint64_t v80 = v44[5];
          uint64_t v81 = (char *)v42 + v80;
          char v82 = (char *)v43 + v80;
          uint64_t v83 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 32))(v81, v82, v83);
          *(void *)((char *)v42 + v44[6]) = *(void *)((char *)v43 + v44[6]);
          *(void *)((char *)v42 + v44[7]) = *(void *)((char *)v43 + v44[7]);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, (uint64_t)v44);
        }
        uint64_t v84 = v40[7];
        uint64_t v85 = a1 + v84;
        uint64_t v86 = a2 + v84;
        long long v87 = *(_OWORD *)(v86 + 16);
        *(_OWORD *)uint64_t v85 = *(_OWORD *)v86;
        *(_OWORD *)(v85 + 16) = v87;
        *(unsigned char *)(v85 + 32) = *(unsigned char *)(v86 + 32);
        break;
      case 6u:
        uint64_t v46 = type metadata accessor for URL();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(a1, a2, v46);
        break;
      case 7u:
        uint64_t v47 = type metadata accessor for Location();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 32))(a1, a2, v47);
        uint64_t v48 = type metadata accessor for HomeAndWorkRefinementViewState();
        uint64_t v49 = *(int *)(v48 + 20);
        uint64_t v50 = a1 + v49;
        uint64_t v51 = a2 + v49;
        uint64_t v52 = type metadata accessor for LocationOfInterest();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
        uint64_t v53 = *(int *)(v48 + 24);
        uint64_t v54 = a1 + v53;
        uint64_t v55 = a2 + v53;
        long long v56 = *(_OWORD *)(v55 + 16);
        *(_OWORD *)uint64_t v54 = *(_OWORD *)v55;
        *(_OWORD *)(v54 + 16) = v56;
        *(unsigned char *)(v54 + 32) = *(unsigned char *)(v55 + 32);
        break;
      default:
        uint64_t v4 = type metadata accessor for DetailCondition();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
        int v5 = (int *)type metadata accessor for ConditionDetailViewState();
        uint64_t v6 = v5[5];
        uint64_t v7 = a1 + v6;
        uint64_t v8 = a2 + v6;
        uint64_t v9 = type metadata accessor for Location();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
        uint64_t v10 = v5[6];
        uint64_t v11 = (void *)(a1 + v10);
        uint64_t v12 = (const void *)(a2 + v10);
        uint64_t v13 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
        {
          uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
        }
        uint64_t v57 = v5[7];
        uint64_t v58 = a1 + v57;
        uint64_t v59 = a2 + v57;
        long long v60 = *(_OWORD *)(v59 + 16);
        *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
        *(_OWORD *)(v58 + 16) = v60;
        *(unsigned char *)(v58 + 32) = *(unsigned char *)(v59 + 32);
        uint64_t v61 = v5[8];
        uint64_t v62 = (_OWORD *)(a1 + v61);
        long long v63 = (_OWORD *)(a2 + v61);
        long long v64 = (int *)type metadata accessor for DetailChartSelection();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 1, (uint64_t)v64))
        {
          uint64_t v65 = sub_10017DF08(&qword_100E711F8);
          memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
        }
        else
        {
          _OWORD *v62 = *v63;
          uint64_t v72 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32);
          v72((char *)v62 + v64[5], (char *)v63 + v64[5], v13);
          v72((char *)v62 + v64[6], (char *)v63 + v64[6], v13);
          v72((char *)v62 + v64[7], (char *)v63 + v64[7], v13);
          *(void *)((char *)v62 + v64[8]) = *(void *)((char *)v63 + v64[8]);
          uint64_t v73 = v64[9];
          uint64_t v74 = (char *)v62 + v73;
          uint64_t v75 = (char *)v63 + v73;
          v74[8] = v75[8];
          *(void *)uint64_t v74 = *(void *)v75;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v62, 0, 1, (uint64_t)v64);
        }
        *(unsigned char *)(a1 + v5[9]) = *(unsigned char *)(a2 + v5[9]);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_100934E14(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *(void *)a1 = *a2;
    a1 = &v7[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    type metadata accessor for PreviewLocation();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v8 = type metadata accessor for LocationOfInterest();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        break;
      case 2u:
        uint64_t v10 = *a2;
        uint64_t v9 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v9;
        uint64_t v11 = a2[3];
        *((void *)a1 + 2) = a2[2];
        *((void *)a1 + 3) = v11;
        uint64_t v12 = a2[5];
        *((void *)a1 + 4) = a2[4];
        *((void *)a1 + 5) = v12;
        *((void *)a1 + 6) = a2[6];
        uint64_t v13 = type metadata accessor for SearchLocation();
        uint64_t v14 = *(int *)(v13 + 32);
        __dst = &a1[v14];
        uint64_t v15 = (char *)a2 + v14;
        uint64_t v16 = type metadata accessor for Location();
        uint64_t v17 = v10;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
        {
          uint64_t v18 = sub_10017DF08(&qword_100E639E8);
          memcpy(__dst, v15, *(void *)(*(void *)(v18 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(__dst, v15, v16);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v16);
        }
        uint64_t v20 = *(int *)(v13 + 36);
        uint64_t v21 = &a1[v20];
        uint64_t v22 = (char *)a2 + v20;
        *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
        v21[16] = v22[16];
        break;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v19 = a2[3];
        *((void *)a1 + 2) = a2[2];
        *((void *)a1 + 3) = v19;
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v6 = type metadata accessor for Location();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        break;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v23 = *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20);
    uint64_t v24 = &a1[v23];
    long long v25 = (char **)((char *)a2 + v23);
    uint64_t v26 = type metadata accessor for LocationPreviewModalViewState(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v27 = type metadata accessor for URL();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v24, v25, v27);
        goto LABEL_43;
      case 1u:
        uint64_t v28 = type metadata accessor for DetailCondition();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v28 - 8) + 16))(v24, v25, v28);
        uint64_t v29 = (int *)type metadata accessor for ConditionDetailViewState();
        uint64_t v30 = v29[5];
        long long v31 = &v24[v30];
        uint64_t v32 = (char *)v25 + v30;
        uint64_t v33 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
        uint64_t v34 = v29[6];
        uint64_t v35 = &v24[v34];
        uint64_t v36 = (char *)v25 + v34;
        uint64_t v37 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37))
        {
          uint64_t v38 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v37);
        }
        uint64_t v88 = v29[7];
        long long v89 = &v24[v88];
        uint64_t v90 = (char *)v25 + v88;
        long long v91 = *((_OWORD *)v90 + 1);
        *(_OWORD *)long long v89 = *(_OWORD *)v90;
        *((_OWORD *)v89 + 1) = v91;
        v89[32] = v90[32];
        uint64_t v92 = v29[8];
        uint64_t v93 = &v24[v92];
        uint64_t v94 = (void *)((char *)v25 + v92);
        long long v95 = (int *)type metadata accessor for DetailChartSelection();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v94, 1, (uint64_t)v95))
        {
          uint64_t v96 = sub_10017DF08(&qword_100E711F8);
          memcpy(v93, v94, *(void *)(*(void *)(v96 - 8) + 64));
        }
        else
        {
          uint64_t v124 = v94[1];
          *(void *)uint64_t v93 = *v94;
          *((void *)v93 + 1) = v124;
          uint64_t v125 = v95[5];
          uint64_t v135 = (char *)v94 + v125;
          uint64_t v136 = &v93[v125];
          uint64_t v126 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16);
          swift_bridgeObjectRetain();
          v126(v136, v135, v37);
          v126(&v93[v95[6]], (char *)v94 + v95[6], v37);
          v126(&v93[v95[7]], (char *)v94 + v95[7], v37);
          *(void *)&v93[v95[8]] = *(void *)((char *)v94 + v95[8]);
          uint64_t v127 = v95[9];
          uint64_t v128 = &v93[v127];
          uint64_t v129 = (char *)v94 + v127;
          v128[8] = v129[8];
          *(void *)uint64_t v128 = *(void *)v129;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v93, 0, 1, (uint64_t)v95);
        }
        v24[v29[9]] = *((unsigned char *)v25 + v29[9]);
        goto LABEL_43;
      case 2u:
        uint64_t v39 = type metadata accessor for Location();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v39 - 8) + 16))(v24, v25, v39);
        uint64_t v40 = type metadata accessor for AirQualityDetailViewState();
        v24[*(int *)(v40 + 20)] = *((unsigned char *)v25 + *(int *)(v40 + 20));
        uint64_t v41 = *(int *)(v40 + 24);
        uint64_t v42 = &v24[v41];
        uint64_t v43 = (char *)v25 + v41;
        v42[32] = v43[32];
        long long v44 = *((_OWORD *)v43 + 1);
        *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
        *((_OWORD *)v42 + 1) = v44;
        goto LABEL_43;
      case 3u:
        uint64_t v45 = type metadata accessor for Location();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v45 - 8) + 16))(v24, v25, v45);
        uint64_t v46 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
        uint64_t v47 = &v24[v46];
        uint64_t v48 = (char *)v25 + v46;
        long long v49 = *((_OWORD *)v48 + 1);
        *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
        *((_OWORD *)v47 + 1) = v49;
        v47[32] = v48[32];
        goto LABEL_43;
      case 4u:
        uint64_t v50 = type metadata accessor for Location();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v50 - 8) + 16))(v24, v25, v50);
        uint64_t v51 = type metadata accessor for SunriseSunsetDetailViewState();
        uint64_t v52 = *(int *)(v51 + 20);
        uint64_t v53 = &v24[v52];
        uint64_t v54 = (char *)v25 + v52;
        long long v55 = *((_OWORD *)v54 + 1);
        *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
        *((_OWORD *)v53 + 1) = v55;
        v53[32] = v54[32];
        v24[*(int *)(v51 + 24)] = *((unsigned char *)v25 + *(int *)(v51 + 24));
        goto LABEL_43;
      case 5u:
        uint64_t v56 = type metadata accessor for Location();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v56 - 8) + 16))(v24, v25, v56);
        uint64_t v57 = (int *)type metadata accessor for MoonDetailViewState();
        uint64_t v58 = v57[5];
        uint64_t v59 = &v24[v58];
        long long v60 = (char *)v25 + v58;
        uint64_t v61 = type metadata accessor for MoonDetailSelectedDate();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v61))
        {
          uint64_t v62 = sub_10017DF08(&qword_100E67240);
          memcpy(v59, v60, *(void *)(*(void *)(v62 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          uint64_t v97 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 16))(v59, v60, v97);
          swift_storeEnumTagMultiPayload();
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, 0, 1, v61);
        }
        uint64_t v98 = v57[6];
        uint64_t v99 = &v24[v98];
        uint64_t v100 = (char *)v25 + v98;
        uint64_t v101 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v100, 1, v101))
        {
          uint64_t v102 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v99, v100, *(void *)(*(void *)(v102 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 16))(v99, v100, v101);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v99, 0, 1, v101);
        }
        uint64_t v130 = v57[7];
        uint64_t v131 = &v24[v130];
        uint64_t v132 = (char *)v25 + v130;
        long long v133 = *((_OWORD *)v132 + 1);
        *(_OWORD *)uint64_t v131 = *(_OWORD *)v132;
        *((_OWORD *)v131 + 1) = v133;
        v131[32] = v132[32];
        v24[v57[8]] = *((unsigned char *)v25 + v57[8]);
        goto LABEL_43;
      case 6u:
        uint64_t v63 = v25[1];
        *(void *)uint64_t v24 = *v25;
        *((void *)v24 + 1) = v63;
        uint64_t v64 = v25[3];
        *((void *)v24 + 2) = v25[2];
        *((void *)v24 + 3) = v64;
        uint64_t v65 = (int *)type metadata accessor for NewsArticle();
        uint64_t v66 = v65[6];
        uint64_t v67 = &v24[v66];
        uint64_t v68 = (char *)v25 + v66;
        uint64_t v69 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v68, 1, v69))
        {
          uint64_t v70 = sub_10017DF08(&qword_100E749B0);
          memcpy(v67, v68, *(void *)(*(void *)(v70 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v67, v68, v69);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v67, 0, 1, v69);
        }
        uint64_t v103 = v65[7];
        uint64_t v104 = &v24[v103];
        uint64_t v105 = (char *)v25 + v103;
        uint64_t v106 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 16))(v104, v105, v106);
        __dsta = *(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16);
        __dsta(&v24[v65[8]], (char *)v25 + v65[8], v69);
        uint64_t v107 = v65[9];
        uint64_t v108 = &v24[v107];
        uint64_t v109 = (char *)v25 + v107;
        uint64_t v110 = *(void *)((char *)v25 + v107 + 8);
        *(void *)uint64_t v108 = *(void *)((char *)v25 + v107);
        *((void *)v108 + 1) = v110;
        uint64_t v111 = *(void *)((char *)v25 + v107 + 24);
        *((void *)v108 + 2) = *(void *)((char *)v25 + v107 + 16);
        *((void *)v108 + 3) = v111;
        uint64_t v112 = *(int *)(type metadata accessor for NewsChannel() + 24);
        uint64_t v113 = &v108[v112];
        uint64_t v114 = &v109[v112];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v114, 1, v69))
        {
          uint64_t v115 = sub_10017DF08(&qword_100E749B0);
          memcpy(v113, v114, *(void *)(*(void *)(v115 - 8) + 64));
        }
        else
        {
          __dsta(v113, v114, v69);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v113, 0, 1, v69);
        }
        *(void *)&v24[v65[10]] = *(void *)((char *)v25 + v65[10]);
        *(void *)&v24[v65[11]] = *(void *)((char *)v25 + v65[11]);
        *(void *)&v24[v65[12]] = *(void *)((char *)v25 + v65[12]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_43;
      case 7u:
        uint64_t v71 = type metadata accessor for Location();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v71 - 8) + 16))(v24, v25, v71);
        uint64_t v72 = (int *)type metadata accessor for AveragesDetailViewState();
        v24[v72[5]] = *((unsigned char *)v25 + v72[5]);
        uint64_t v73 = v72[6];
        uint64_t v74 = &v24[v73];
        uint64_t v75 = (void *)((char *)v25 + v73);
        uint64_t v76 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v75, 1, (uint64_t)v76))
        {
          uint64_t v77 = sub_10017DF08(&qword_100E6B670);
          memcpy(v74, v75, *(void *)(*(void *)(v77 - 8) + 64));
        }
        else
        {
          *(void *)uint64_t v74 = *v75;
          uint64_t v116 = v76[5];
          uint64_t v117 = &v74[v116];
          uint64_t v118 = (char *)v75 + v116;
          uint64_t v119 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 16))(v117, v118, v119);
          *(void *)&v74[v76[6]] = *(void *)((char *)v75 + v76[6]);
          *(void *)&v74[v76[7]] = *(void *)((char *)v75 + v76[7]);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v74, 0, 1, (uint64_t)v76);
        }
        uint64_t v120 = v72[7];
        uint64_t v121 = &v24[v120];
        uint64_t v122 = (char *)v25 + v120;
        long long v123 = *((_OWORD *)v122 + 1);
        *(_OWORD *)uint64_t v121 = *(_OWORD *)v122;
        *((_OWORD *)v121 + 1) = v123;
        v121[32] = v122[32];
        goto LABEL_43;
      case 8u:
        uint64_t v78 = type metadata accessor for Location();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v78 - 8) + 16))(v24, v25, v78);
        uint64_t v79 = type metadata accessor for HomeAndWorkRefinementViewState();
        uint64_t v80 = *(int *)(v79 + 20);
        uint64_t v81 = &v24[v80];
        char v82 = (char *)v25 + v80;
        uint64_t v83 = type metadata accessor for LocationOfInterest();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16))(v81, v82, v83);
        uint64_t v84 = *(int *)(v79 + 24);
        uint64_t v85 = &v24[v84];
        uint64_t v86 = (char *)v25 + v84;
        long long v87 = *((_OWORD *)v86 + 1);
        *(_OWORD *)uint64_t v85 = *(_OWORD *)v86;
        *((_OWORD *)v85 + 1) = v87;
        v85[32] = v86[32];
LABEL_43:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_100935C10(id *a1)
{
  type metadata accessor for PreviewLocation();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v2 = type metadata accessor for Location();
      goto LABEL_4;
    case 1u:
      uint64_t v2 = type metadata accessor for LocationOfInterest();
LABEL_4:
      (*(void (**)(id *, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
      break;
    case 2u:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = (uint64_t)a1 + *(int *)(type metadata accessor for SearchLocation() + 32);
      uint64_t v4 = type metadata accessor for Location();
      if (!_s7Weather24LocationCompositionStateOwet_0(v3, 1, v4)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
      }
      break;
    case 3u:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  int v5 = (char *)a1 + *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20);
  type metadata accessor for LocationPreviewModalViewState(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v7 = type metadata accessor for URL();
      goto LABEL_31;
    case 1:
      uint64_t v8 = type metadata accessor for DetailCondition();
      (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v5, v8);
      uint64_t v9 = (int *)type metadata accessor for ConditionDetailViewState();
      uint64_t v10 = &v5[v9[5]];
      uint64_t v11 = type metadata accessor for Location();
      (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
      uint64_t v12 = (uint64_t)&v5[v9[6]];
      uint64_t v13 = type metadata accessor for Date();
      if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v13)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      }
      uint64_t v14 = (uint64_t)&v5[v9[8]];
      uint64_t v15 = (int *)type metadata accessor for DetailChartSelection();
      uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v14, 1, (uint64_t)v15);
      if (result) {
        return result;
      }
      swift_bridgeObjectRelease();
      uint64_t v38 = *(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
      v38(v14 + v15[5], v13);
      v38(v14 + v15[6], v13);
      uint64_t v16 = v14 + v15[7];
      uint64_t v17 = v13;
      uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t))v38;
      break;
    case 2:
    case 3:
    case 4:
      uint64_t v7 = type metadata accessor for Location();
      goto LABEL_31;
    case 5:
      uint64_t v19 = type metadata accessor for Location();
      (*(void (**)(char *, uint64_t))(*(void *)(v19 - 8) + 8))(v5, v19);
      uint64_t v20 = type metadata accessor for MoonDetailViewState();
      uint64_t v21 = (uint64_t)&v5[*(int *)(v20 + 20)];
      uint64_t v22 = type metadata accessor for MoonDetailSelectedDate();
      if (!_s7Weather24LocationCompositionStateOwet_0(v21, 1, v22)
        && swift_getEnumCaseMultiPayload() <= 2)
      {
        uint64_t v23 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v21, v23);
      }
      uint64_t v24 = (uint64_t)&v5[*(int *)(v20 + 24)];
      uint64_t v25 = type metadata accessor for Date();
      uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v24, 1, v25);
      if (result) {
        return result;
      }
      uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8);
      uint64_t v16 = v24;
      uint64_t v17 = v25;
      break;
    case 6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v26 = (int *)type metadata accessor for NewsArticle();
      uint64_t v27 = (uint64_t)&v5[v26[6]];
      uint64_t v28 = type metadata accessor for URL();
      if (!_s7Weather24LocationCompositionStateOwet_0(v27, 1, v28)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
      }
      uint64_t v29 = &v5[v26[7]];
      uint64_t v30 = type metadata accessor for Date();
      (*(void (**)(char *, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
      long long v31 = *(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8);
      v31(&v5[v26[8]], v28);
      uint64_t v32 = &v5[v26[9]];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v33 = (uint64_t)&v32[*(int *)(type metadata accessor for NewsChannel() + 24)];
      if (!_s7Weather24LocationCompositionStateOwet_0(v33, 1, v28)) {
        v31((char *)v33, v28);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 7:
      uint64_t v34 = type metadata accessor for Location();
      (*(void (**)(char *, uint64_t))(*(void *)(v34 - 8) + 8))(v5, v34);
      uint64_t v35 = (uint64_t)&v5[*(int *)(type metadata accessor for AveragesDetailViewState() + 24)];
      uint64_t v36 = type metadata accessor for DetailHeroChartLollipopPosition(0);
      uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v35, 1, v36);
      if (result) {
        return result;
      }
      int v5 = (char *)(v35 + *(int *)(v36 + 20));
      uint64_t v7 = type metadata accessor for Date();
LABEL_31:
      uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
      uint64_t v17 = v7;
      uint64_t v16 = (uint64_t)v5;
      break;
    case 8:
      uint64_t v37 = type metadata accessor for Location();
      (*(void (**)(char *, uint64_t))(*(void *)(v37 - 8) + 8))(v5, v37);
      v5 += *(int *)(type metadata accessor for HomeAndWorkRefinementViewState() + 20);
      uint64_t v7 = type metadata accessor for LocationOfInterest();
      goto LABEL_31;
    default:
      return result;
  }

  return v18(v16, v17);
}

void *sub_10093630C(void *a1, uint64_t a2)
{
  type metadata accessor for PreviewLocation();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v5 = type metadata accessor for LocationOfInterest();
      (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
      break;
    case 2u:
      uint64_t v7 = *(void **)a2;
      uint64_t v6 = *(void *)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v6;
      uint64_t v8 = *(void *)(a2 + 24);
      a1[2] = *(void *)(a2 + 16);
      a1[3] = v8;
      uint64_t v9 = *(void *)(a2 + 40);
      a1[4] = *(void *)(a2 + 32);
      a1[5] = v9;
      a1[6] = *(void *)(a2 + 48);
      uint64_t v10 = type metadata accessor for SearchLocation();
      uint64_t v11 = *(int *)(v10 + 32);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (const void *)(a2 + v11);
      uint64_t v14 = type metadata accessor for Location();
      id v15 = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
      {
        uint64_t v16 = sub_10017DF08(&qword_100E639E8);
        memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
      }
      uint64_t v18 = *(int *)(v10 + 36);
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = a2 + v18;
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      v19[16] = *(unsigned char *)(v20 + 16);
      break;
    case 3u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v17 = *(void *)(a2 + 24);
      a1[2] = *(void *)(a2 + 16);
      a1[3] = v17;
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v4 = type metadata accessor for Location();
      (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      break;
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20);
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  uint64_t v24 = type metadata accessor for LocationPreviewModalViewState(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v25 = type metadata accessor for URL();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v22, v23, v25);
      goto LABEL_41;
    case 1u:
      uint64_t v26 = type metadata accessor for DetailCondition();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v22, v23, v26);
      uint64_t v27 = (int *)type metadata accessor for ConditionDetailViewState();
      uint64_t v28 = v27[5];
      uint64_t v29 = (char *)v22 + v28;
      uint64_t v30 = (char *)v23 + v28;
      uint64_t v31 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
      uint64_t v32 = v27[6];
      uint64_t v33 = (char *)v22 + v32;
      uint64_t v34 = (char *)v23 + v32;
      uint64_t v35 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35))
      {
        uint64_t v36 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v33, v34, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v35);
      }
      uint64_t v86 = v27[7];
      long long v87 = (char *)v22 + v86;
      uint64_t v88 = (char *)v23 + v86;
      long long v89 = *((_OWORD *)v88 + 1);
      *(_OWORD *)long long v87 = *(_OWORD *)v88;
      *((_OWORD *)v87 + 1) = v89;
      v87[32] = v88[32];
      uint64_t v90 = v27[8];
      long long v91 = (void *)((char *)v22 + v90);
      uint64_t v92 = (void *)((char *)v23 + v90);
      uint64_t v93 = (int *)type metadata accessor for DetailChartSelection();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v92, 1, (uint64_t)v93))
      {
        uint64_t v94 = sub_10017DF08(&qword_100E711F8);
        memcpy(v91, v92, *(void *)(*(void *)(v94 - 8) + 64));
      }
      else
      {
        uint64_t v124 = v92[1];
        void *v91 = *v92;
        v91[1] = v124;
        uint64_t v125 = v93[5];
        uint64_t v135 = (char *)v92 + v125;
        char v137 = (char *)v91 + v125;
        uint64_t v126 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
        swift_bridgeObjectRetain();
        v126(v137, v135, v35);
        v126((char *)v91 + v93[6], (char *)v92 + v93[6], v35);
        v126((char *)v91 + v93[7], (char *)v92 + v93[7], v35);
        *(void *)((char *)v91 + v93[8]) = *(void *)((char *)v92 + v93[8]);
        uint64_t v127 = v93[9];
        uint64_t v128 = (char *)v91 + v127;
        uint64_t v129 = (char *)v92 + v127;
        v128[8] = v129[8];
        *(void *)uint64_t v128 = *(void *)v129;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v91, 0, 1, (uint64_t)v93);
      }
      *((unsigned char *)v22 + v27[9]) = *((unsigned char *)v23 + v27[9]);
      goto LABEL_41;
    case 2u:
      uint64_t v37 = type metadata accessor for Location();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v37 - 8) + 16))(v22, v23, v37);
      uint64_t v38 = type metadata accessor for AirQualityDetailViewState();
      *((unsigned char *)v22 + *(int *)(v38 + 20)) = *((unsigned char *)v23 + *(int *)(v38 + 20));
      uint64_t v39 = *(int *)(v38 + 24);
      uint64_t v40 = (char *)v22 + v39;
      uint64_t v41 = (char *)v23 + v39;
      v40[32] = v41[32];
      long long v42 = *((_OWORD *)v41 + 1);
      *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
      *((_OWORD *)v40 + 1) = v42;
      goto LABEL_41;
    case 3u:
      uint64_t v43 = type metadata accessor for Location();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v43 - 8) + 16))(v22, v23, v43);
      uint64_t v44 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
      uint64_t v45 = (char *)v22 + v44;
      uint64_t v46 = (char *)v23 + v44;
      long long v47 = *((_OWORD *)v46 + 1);
      *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
      *((_OWORD *)v45 + 1) = v47;
      v45[32] = v46[32];
      goto LABEL_41;
    case 4u:
      uint64_t v48 = type metadata accessor for Location();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v48 - 8) + 16))(v22, v23, v48);
      uint64_t v49 = type metadata accessor for SunriseSunsetDetailViewState();
      uint64_t v50 = *(int *)(v49 + 20);
      uint64_t v51 = (char *)v22 + v50;
      uint64_t v52 = (char *)v23 + v50;
      long long v53 = *((_OWORD *)v52 + 1);
      *(_OWORD *)uint64_t v51 = *(_OWORD *)v52;
      *((_OWORD *)v51 + 1) = v53;
      v51[32] = v52[32];
      *((unsigned char *)v22 + *(int *)(v49 + 24)) = *((unsigned char *)v23 + *(int *)(v49 + 24));
      goto LABEL_41;
    case 5u:
      uint64_t v54 = type metadata accessor for Location();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v54 - 8) + 16))(v22, v23, v54);
      long long v55 = (int *)type metadata accessor for MoonDetailViewState();
      uint64_t v56 = v55[5];
      uint64_t v57 = (char *)v22 + v56;
      uint64_t v58 = (char *)v23 + v56;
      uint64_t v59 = type metadata accessor for MoonDetailSelectedDate();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v58, 1, v59))
      {
        uint64_t v60 = sub_10017DF08(&qword_100E67240);
        memcpy(v57, v58, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        swift_getEnumCaseMultiPayload();
        uint64_t v95 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16))(v57, v58, v95);
        swift_storeEnumTagMultiPayload();
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v57, 0, 1, v59);
      }
      uint64_t v96 = v55[6];
      uint64_t v97 = (char *)v22 + v96;
      uint64_t v98 = (char *)v23 + v96;
      uint64_t v99 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v98, 1, v99))
      {
        uint64_t v100 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v97, v98, *(void *)(*(void *)(v100 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 16))(v97, v98, v99);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v97, 0, 1, v99);
      }
      uint64_t v130 = v55[7];
      uint64_t v131 = (char *)v22 + v130;
      uint64_t v132 = (char *)v23 + v130;
      long long v133 = *((_OWORD *)v132 + 1);
      *(_OWORD *)uint64_t v131 = *(_OWORD *)v132;
      *((_OWORD *)v131 + 1) = v133;
      v131[32] = v132[32];
      *((unsigned char *)v22 + v55[8]) = *((unsigned char *)v23 + v55[8]);
      goto LABEL_41;
    case 6u:
      long long v138 = a1;
      uint64_t v61 = v23[1];
      *uint64_t v22 = *v23;
      v22[1] = v61;
      uint64_t v62 = v23[3];
      v22[2] = v23[2];
      _OWORD v22[3] = v62;
      uint64_t v63 = (int *)type metadata accessor for NewsArticle();
      uint64_t v64 = v63[6];
      uint64_t v65 = (char *)v22 + v64;
      uint64_t v66 = (char *)v23 + v64;
      uint64_t v67 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, v67))
      {
        uint64_t v68 = sub_10017DF08(&qword_100E749B0);
        memcpy(v65, v66, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16))(v65, v66, v67);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 0, 1, v67);
      }
      uint64_t v101 = v63[7];
      uint64_t v102 = (char *)v22 + v101;
      uint64_t v103 = (char *)v23 + v101;
      uint64_t v104 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16))(v102, v103, v104);
      uint64_t v136 = *(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16);
      v136((char *)v22 + v63[8], (char *)v23 + v63[8], v67);
      uint64_t v105 = v63[9];
      uint64_t v106 = (void *)((char *)v22 + v105);
      uint64_t v107 = (char *)v23 + v105;
      uint64_t v108 = *(void *)((char *)v23 + v105 + 8);
      *uint64_t v106 = *(void *)((char *)v23 + v105);
      v106[1] = v108;
      uint64_t v109 = *(void *)((char *)v23 + v105 + 24);
      v106[2] = *(void *)((char *)v23 + v105 + 16);
      v106[3] = v109;
      uint64_t v110 = *(int *)(type metadata accessor for NewsChannel() + 24);
      uint64_t v111 = (char *)v106 + v110;
      uint64_t v112 = &v107[v110];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v112, 1, v67))
      {
        uint64_t v113 = sub_10017DF08(&qword_100E749B0);
        memcpy(v111, v112, *(void *)(*(void *)(v113 - 8) + 64));
      }
      else
      {
        v136(v111, v112, v67);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v111, 0, 1, v67);
      }
      a1 = v138;
      *(void *)((char *)v22 + v63[10]) = *(void *)((char *)v23 + v63[10]);
      *(void *)((char *)v22 + v63[11]) = *(void *)((char *)v23 + v63[11]);
      *(void *)((char *)v22 + v63[12]) = *(void *)((char *)v23 + v63[12]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_41;
    case 7u:
      uint64_t v69 = type metadata accessor for Location();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v69 - 8) + 16))(v22, v23, v69);
      uint64_t v70 = (int *)type metadata accessor for AveragesDetailViewState();
      *((unsigned char *)v22 + v70[5]) = *((unsigned char *)v23 + v70[5]);
      uint64_t v71 = v70[6];
      uint64_t v72 = (void *)((char *)v22 + v71);
      uint64_t v73 = (void *)((char *)v23 + v71);
      uint64_t v74 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v73, 1, (uint64_t)v74))
      {
        uint64_t v75 = sub_10017DF08(&qword_100E6B670);
        memcpy(v72, v73, *(void *)(*(void *)(v75 - 8) + 64));
      }
      else
      {
        *uint64_t v72 = *v73;
        uint64_t v114 = v74[5];
        uint64_t v115 = (char *)v72 + v114;
        uint64_t v116 = a1;
        uint64_t v117 = (char *)v73 + v114;
        uint64_t v118 = type metadata accessor for Date();
        uint64_t v119 = v117;
        a1 = v116;
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 16))(v115, v119, v118);
        *(void *)((char *)v72 + v74[6]) = *(void *)((char *)v73 + v74[6]);
        *(void *)((char *)v72 + v74[7]) = *(void *)((char *)v73 + v74[7]);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v72, 0, 1, (uint64_t)v74);
      }
      uint64_t v120 = v70[7];
      uint64_t v121 = (char *)v22 + v120;
      uint64_t v122 = (char *)v23 + v120;
      long long v123 = *((_OWORD *)v122 + 1);
      *(_OWORD *)uint64_t v121 = *(_OWORD *)v122;
      *((_OWORD *)v121 + 1) = v123;
      v121[32] = v122[32];
      goto LABEL_41;
    case 8u:
      uint64_t v76 = type metadata accessor for Location();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v76 - 8) + 16))(v22, v23, v76);
      uint64_t v77 = type metadata accessor for HomeAndWorkRefinementViewState();
      uint64_t v78 = *(int *)(v77 + 20);
      uint64_t v79 = (char *)v22 + v78;
      uint64_t v80 = (char *)v23 + v78;
      uint64_t v81 = type metadata accessor for LocationOfInterest();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16))(v79, v80, v81);
      uint64_t v82 = *(int *)(v77 + 24);
      uint64_t v83 = (char *)v22 + v82;
      uint64_t v84 = (char *)v23 + v82;
      long long v85 = *((_OWORD *)v84 + 1);
      *(_OWORD *)uint64_t v83 = *(_OWORD *)v84;
      *((_OWORD *)v83 + 1) = v85;
      v83[32] = v84[32];
LABEL_41:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
      break;
  }
  return a1;
}

void **sub_1009370D0(void **a1, void **a2)
{
  if (a1 != a2)
  {
    sub_10011D54C((uint64_t)a1, (void (*)(void))type metadata accessor for PreviewLocation);
    type metadata accessor for PreviewLocation();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v5 = type metadata accessor for LocationOfInterest();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
        break;
      case 2u:
        uint64_t v6 = *a2;
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        uint64_t v7 = type metadata accessor for SearchLocation();
        uint64_t v8 = *(int *)(v7 + 32);
        __dst = (char *)a1 + v8;
        uint64_t v9 = (char *)a2 + v8;
        uint64_t v10 = type metadata accessor for Location();
        id v11 = v6;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
        {
          uint64_t v12 = sub_10017DF08(&qword_100E639E8);
          memcpy(__dst, v9, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(__dst, v9, v10);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v10);
        }
        uint64_t v13 = *(int *)(v7 + 36);
        uint64_t v14 = (char *)a1 + v13;
        id v15 = (char *)a2 + v13;
        long long v16 = *(_OWORD *)v15;
        v14[16] = v15[16];
        *(_OWORD *)uint64_t v14 = v16;
        break;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v4 = type metadata accessor for Location();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v17 = type metadata accessor for LocationPreviewViewState(0);
  if (a1 != a2)
  {
    uint64_t v18 = *(int *)(v17 + 20);
    uint64_t v19 = (void **)((char *)a1 + v18);
    uint64_t v20 = (void **)((char *)a2 + v18);
    sub_10011D54C((uint64_t)a1 + v18, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
    uint64_t v21 = type metadata accessor for LocationPreviewModalViewState(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v22 = type metadata accessor for URL();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v19, v20, v22);
        goto LABEL_44;
      case 1u:
        uint64_t v23 = type metadata accessor for DetailCondition();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v19, v20, v23);
        uint64_t v24 = (int *)type metadata accessor for ConditionDetailViewState();
        uint64_t v25 = v24[5];
        uint64_t v26 = (char *)v19 + v25;
        uint64_t v27 = (char *)v20 + v25;
        uint64_t v28 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
        uint64_t v29 = v24[6];
        uint64_t v30 = (char *)v19 + v29;
        uint64_t v31 = (char *)v20 + v29;
        uint64_t v32 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v32))
        {
          uint64_t v33 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v32);
        }
        uint64_t v85 = v24[7];
        uint64_t v86 = (char *)v19 + v85;
        long long v87 = (char *)v20 + v85;
        long long v88 = *(_OWORD *)v87;
        long long v89 = *((_OWORD *)v87 + 1);
        v86[32] = v87[32];
        *(_OWORD *)uint64_t v86 = v88;
        *((_OWORD *)v86 + 1) = v89;
        uint64_t v90 = v24[8];
        long long v91 = (void *)((char *)v19 + v90);
        uint64_t v92 = (void *)((char *)v20 + v90);
        uint64_t v93 = (int *)type metadata accessor for DetailChartSelection();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v92, 1, (uint64_t)v93))
        {
          uint64_t v94 = sub_10017DF08(&qword_100E711F8);
          memcpy(v91, v92, *(void *)(*(void *)(v94 - 8) + 64));
        }
        else
        {
          void *v91 = *v92;
          v91[1] = v92[1];
          uint64_t v121 = v93[5];
          long long v133 = (char *)v92 + v121;
          uint64_t v134 = (char *)v91 + v121;
          uint64_t v122 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
          swift_bridgeObjectRetain();
          v122(v134, v133, v32);
          v122((char *)v91 + v93[6], (char *)v92 + v93[6], v32);
          v122((char *)v91 + v93[7], (char *)v92 + v93[7], v32);
          *(void *)((char *)v91 + v93[8]) = *(void *)((char *)v92 + v93[8]);
          uint64_t v123 = v93[9];
          uint64_t v124 = (char *)v91 + v123;
          uint64_t v125 = (char *)v92 + v123;
          char v126 = v125[8];
          *(void *)uint64_t v124 = *(void *)v125;
          v124[8] = v126;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v91, 0, 1, (uint64_t)v93);
        }
        *((unsigned char *)v19 + v24[9]) = *((unsigned char *)v20 + v24[9]);
        goto LABEL_44;
      case 2u:
        uint64_t v34 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 16))(v19, v20, v34);
        uint64_t v35 = type metadata accessor for AirQualityDetailViewState();
        *((unsigned char *)v19 + *(int *)(v35 + 20)) = *((unsigned char *)v20 + *(int *)(v35 + 20));
        uint64_t v36 = *(int *)(v35 + 24);
        uint64_t v37 = (char *)v19 + v36;
        uint64_t v38 = (char *)v20 + v36;
        char v39 = v38[32];
        long long v40 = *((_OWORD *)v38 + 1);
        *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
        *((_OWORD *)v37 + 1) = v40;
        v37[32] = v39;
        goto LABEL_44;
      case 3u:
        uint64_t v41 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v41 - 8) + 16))(v19, v20, v41);
        uint64_t v42 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
        uint64_t v43 = (char *)v19 + v42;
        uint64_t v44 = (char *)v20 + v42;
        long long v45 = *(_OWORD *)v44;
        long long v46 = *((_OWORD *)v44 + 1);
        v43[32] = v44[32];
        *(_OWORD *)uint64_t v43 = v45;
        *((_OWORD *)v43 + 1) = v46;
        goto LABEL_44;
      case 4u:
        uint64_t v47 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v47 - 8) + 16))(v19, v20, v47);
        uint64_t v48 = type metadata accessor for SunriseSunsetDetailViewState();
        uint64_t v49 = *(int *)(v48 + 20);
        uint64_t v50 = (char *)v19 + v49;
        uint64_t v51 = (char *)v20 + v49;
        long long v52 = *(_OWORD *)v51;
        long long v53 = *((_OWORD *)v51 + 1);
        v50[32] = v51[32];
        *(_OWORD *)uint64_t v50 = v52;
        *((_OWORD *)v50 + 1) = v53;
        *((unsigned char *)v19 + *(int *)(v48 + 24)) = *((unsigned char *)v20 + *(int *)(v48 + 24));
        goto LABEL_44;
      case 5u:
        uint64_t v54 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v54 - 8) + 16))(v19, v20, v54);
        long long v55 = (int *)type metadata accessor for MoonDetailViewState();
        uint64_t v56 = v55[5];
        uint64_t v57 = (char *)v19 + v56;
        uint64_t v58 = (char *)v20 + v56;
        uint64_t v59 = type metadata accessor for MoonDetailSelectedDate();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v58, 1, v59))
        {
          uint64_t v60 = sub_10017DF08(&qword_100E67240);
          memcpy(v57, v58, *(void *)(*(void *)(v60 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          uint64_t v95 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16))(v57, v58, v95);
          swift_storeEnumTagMultiPayload();
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v57, 0, 1, v59);
        }
        uint64_t v96 = v55[6];
        uint64_t v97 = (char *)v19 + v96;
        uint64_t v98 = (char *)v20 + v96;
        uint64_t v99 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v98, 1, v99))
        {
          uint64_t v100 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v97, v98, *(void *)(*(void *)(v100 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 16))(v97, v98, v99);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v97, 0, 1, v99);
        }
        uint64_t v127 = v55[7];
        uint64_t v128 = (char *)v19 + v127;
        uint64_t v129 = (char *)v20 + v127;
        long long v130 = *(_OWORD *)v129;
        long long v131 = *((_OWORD *)v129 + 1);
        v128[32] = v129[32];
        *(_OWORD *)uint64_t v128 = v130;
        *((_OWORD *)v128 + 1) = v131;
        *((unsigned char *)v19 + v55[8]) = *((unsigned char *)v20 + v55[8]);
        goto LABEL_44;
      case 6u:
        *uint64_t v19 = *v20;
        v19[1] = v20[1];
        long long v19[2] = v20[2];
        v19[3] = v20[3];
        uint64_t v61 = (int *)type metadata accessor for NewsArticle();
        uint64_t v62 = v61[6];
        uint64_t v63 = (char *)v19 + v62;
        uint64_t v64 = (char *)v20 + v62;
        uint64_t v65 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, v65))
        {
          uint64_t v66 = sub_10017DF08(&qword_100E749B0);
          memcpy(v63, v64, *(void *)(*(void *)(v66 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(v63, v64, v65);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v63, 0, 1, v65);
        }
        uint64_t v101 = v61[7];
        uint64_t v102 = (char *)v19 + v101;
        uint64_t v103 = (char *)v20 + v101;
        uint64_t v104 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16))(v102, v103, v104);
        __dsta = *(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16);
        __dsta((char *)v19 + v61[8], (char *)v20 + v61[8], v65);
        uint64_t v105 = v61[9];
        uint64_t v106 = (void *)((char *)v19 + v105);
        uint64_t v107 = (char *)v20 + v105;
        *uint64_t v106 = *(void *)((char *)v20 + v105);
        v106[1] = *(void *)((char *)v20 + v105 + 8);
        v106[2] = *(void *)((char *)v20 + v105 + 16);
        v106[3] = *(void *)((char *)v20 + v105 + 24);
        uint64_t v108 = *(int *)(type metadata accessor for NewsChannel() + 24);
        uint64_t v109 = (char *)v106 + v108;
        uint64_t v110 = &v107[v108];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v110, 1, v65))
        {
          uint64_t v111 = sub_10017DF08(&qword_100E749B0);
          memcpy(v109, v110, *(void *)(*(void *)(v111 - 8) + 64));
        }
        else
        {
          __dsta(v109, v110, v65);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v109, 0, 1, v65);
        }
        *(void *)((char *)v19 + v61[10]) = *(void *)((char *)v20 + v61[10]);
        *(void *)((char *)v19 + v61[11]) = *(void *)((char *)v20 + v61[11]);
        *(void *)((char *)v19 + v61[12]) = *(void *)((char *)v20 + v61[12]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_44;
      case 7u:
        uint64_t v67 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v67 - 8) + 16))(v19, v20, v67);
        uint64_t v68 = (int *)type metadata accessor for AveragesDetailViewState();
        *((unsigned char *)v19 + v68[5]) = *((unsigned char *)v20 + v68[5]);
        uint64_t v69 = v68[6];
        uint64_t v70 = (void *)((char *)v19 + v69);
        uint64_t v71 = (void *)((char *)v20 + v69);
        uint64_t v72 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, (uint64_t)v72))
        {
          uint64_t v73 = sub_10017DF08(&qword_100E6B670);
          memcpy(v70, v71, *(void *)(*(void *)(v73 - 8) + 64));
        }
        else
        {
          *uint64_t v70 = *v71;
          uint64_t v112 = v72[5];
          uint64_t v113 = (char *)v70 + v112;
          uint64_t v114 = (char *)v71 + v112;
          uint64_t v115 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 16))(v113, v114, v115);
          *(void *)((char *)v70 + v72[6]) = *(void *)((char *)v71 + v72[6]);
          *(void *)((char *)v70 + v72[7]) = *(void *)((char *)v71 + v72[7]);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, (uint64_t)v72);
        }
        uint64_t v116 = v68[7];
        uint64_t v117 = (char *)v19 + v116;
        uint64_t v118 = (char *)v20 + v116;
        long long v119 = *(_OWORD *)v118;
        long long v120 = *((_OWORD *)v118 + 1);
        v117[32] = v118[32];
        *(_OWORD *)uint64_t v117 = v119;
        *((_OWORD *)v117 + 1) = v120;
        goto LABEL_44;
      case 8u:
        uint64_t v74 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v74 - 8) + 16))(v19, v20, v74);
        uint64_t v75 = type metadata accessor for HomeAndWorkRefinementViewState();
        uint64_t v76 = *(int *)(v75 + 20);
        uint64_t v77 = (char *)v19 + v76;
        uint64_t v78 = (char *)v20 + v76;
        uint64_t v79 = type metadata accessor for LocationOfInterest();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16))(v77, v78, v79);
        uint64_t v80 = *(int *)(v75 + 24);
        uint64_t v81 = (char *)v19 + v80;
        uint64_t v82 = (char *)v20 + v80;
        long long v83 = *(_OWORD *)v82;
        long long v84 = *((_OWORD *)v82 + 1);
        v81[32] = v82[32];
        *(_OWORD *)uint64_t v81 = v83;
        *((_OWORD *)v81 + 1) = v84;
LABEL_44:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *sub_100937F10(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for PreviewLocation();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *(void *)a1 = *(void *)a2;
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    uint64_t v7 = type metadata accessor for SearchLocation();
    uint64_t v8 = *(int *)(v7 + 32);
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = type metadata accessor for Location();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_10017DF08(&qword_100E639E8);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v14 = *(int *)(v7 + 36);
    id v15 = &a1[v14];
    long long v16 = &a2[v14];
    *(_OWORD *)id v15 = *(_OWORD *)v16;
    v15[16] = v16[16];
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v13 = type metadata accessor for LocationOfInterest();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
      goto LABEL_12;
    }
    uint64_t v6 = type metadata accessor for Location();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  }
  swift_storeEnumTagMultiPayload();
LABEL_12:
  uint64_t v17 = *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20);
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = type metadata accessor for LocationPreviewModalViewState(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v21 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v18, v19, v21);
      goto LABEL_44;
    case 1u:
      uint64_t v22 = type metadata accessor for DetailCondition();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v18, v19, v22);
      uint64_t v23 = (int *)type metadata accessor for ConditionDetailViewState();
      uint64_t v24 = v23[5];
      uint64_t v25 = &v18[v24];
      uint64_t v26 = &v19[v24];
      uint64_t v27 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
      uint64_t v28 = v23[6];
      uint64_t v29 = &v18[v28];
      uint64_t v30 = &v19[v28];
      uint64_t v31 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31))
      {
        uint64_t v32 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
      }
      uint64_t v81 = v23[7];
      uint64_t v82 = &v18[v81];
      long long v83 = &v19[v81];
      long long v84 = *((_OWORD *)v83 + 1);
      *(_OWORD *)uint64_t v82 = *(_OWORD *)v83;
      *((_OWORD *)v82 + 1) = v84;
      v82[32] = v83[32];
      uint64_t v85 = v23[8];
      uint64_t v86 = &v18[v85];
      long long v87 = &v19[v85];
      long long v88 = (int *)type metadata accessor for DetailChartSelection();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v87, 1, (uint64_t)v88))
      {
        uint64_t v89 = sub_10017DF08(&qword_100E711F8);
        memcpy(v86, v87, *(void *)(*(void *)(v89 - 8) + 64));
      }
      else
      {
        *(_OWORD *)uint64_t v86 = *(_OWORD *)v87;
        uint64_t v117 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32);
        v117(&v86[v88[5]], &v87[v88[5]], v31);
        v117(&v86[v88[6]], &v87[v88[6]], v31);
        v117(&v86[v88[7]], &v87[v88[7]], v31);
        *(void *)&v86[v88[8]] = *(void *)&v87[v88[8]];
        uint64_t v118 = v88[9];
        long long v119 = &v86[v118];
        long long v120 = &v87[v118];
        v119[8] = v120[8];
        *(void *)long long v119 = *(void *)v120;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v86, 0, 1, (uint64_t)v88);
      }
      v18[v23[9]] = v19[v23[9]];
      goto LABEL_44;
    case 2u:
      uint64_t v33 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v18, v19, v33);
      uint64_t v34 = type metadata accessor for AirQualityDetailViewState();
      v18[*(int *)(v34 + 20)] = v19[*(int *)(v34 + 20)];
      uint64_t v35 = *(int *)(v34 + 24);
      uint64_t v36 = &v18[v35];
      uint64_t v37 = &v19[v35];
      v36[32] = v37[32];
      long long v38 = *((_OWORD *)v37 + 1);
      *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
      *((_OWORD *)v36 + 1) = v38;
      goto LABEL_44;
    case 3u:
      uint64_t v39 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v18, v19, v39);
      uint64_t v40 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
      uint64_t v41 = &v18[v40];
      uint64_t v42 = &v19[v40];
      long long v43 = *((_OWORD *)v42 + 1);
      *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
      *((_OWORD *)v41 + 1) = v43;
      v41[32] = v42[32];
      goto LABEL_44;
    case 4u:
      uint64_t v44 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v18, v19, v44);
      uint64_t v45 = type metadata accessor for SunriseSunsetDetailViewState();
      uint64_t v46 = *(int *)(v45 + 20);
      uint64_t v47 = &v18[v46];
      uint64_t v48 = &v19[v46];
      long long v49 = *((_OWORD *)v48 + 1);
      *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
      *((_OWORD *)v47 + 1) = v49;
      v47[32] = v48[32];
      v18[*(int *)(v45 + 24)] = v19[*(int *)(v45 + 24)];
      goto LABEL_44;
    case 5u:
      uint64_t v50 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v18, v19, v50);
      uint64_t v51 = (int *)type metadata accessor for MoonDetailViewState();
      uint64_t v52 = v51[5];
      long long v53 = &v18[v52];
      uint64_t v54 = &v19[v52];
      uint64_t v55 = type metadata accessor for MoonDetailSelectedDate();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v55))
      {
        uint64_t v56 = sub_10017DF08(&qword_100E67240);
        memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        swift_getEnumCaseMultiPayload();
        uint64_t v90 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 32))(v53, v54, v90);
        swift_storeEnumTagMultiPayload();
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v55);
      }
      uint64_t v91 = v51[6];
      uint64_t v92 = &v18[v91];
      uint64_t v93 = &v19[v91];
      uint64_t v94 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v93, 1, v94))
      {
        uint64_t v95 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v92, v93, *(void *)(*(void *)(v95 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 32))(v92, v93, v94);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v92, 0, 1, v94);
      }
      uint64_t v121 = v51[7];
      uint64_t v122 = &v18[v121];
      uint64_t v123 = &v19[v121];
      long long v124 = *((_OWORD *)v123 + 1);
      *(_OWORD *)uint64_t v122 = *(_OWORD *)v123;
      *((_OWORD *)v122 + 1) = v124;
      v122[32] = v123[32];
      v18[v51[8]] = v19[v51[8]];
      goto LABEL_44;
    case 6u:
      long long v57 = *((_OWORD *)v19 + 1);
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v57;
      uint64_t v58 = (int *)type metadata accessor for NewsArticle();
      uint64_t v59 = v58[6];
      uint64_t v60 = &v18[v59];
      uint64_t v61 = &v19[v59];
      uint64_t v62 = type metadata accessor for URL();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v62))
      {
        uint64_t v63 = sub_10017DF08(&qword_100E749B0);
        memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v62);
      }
      uint64_t v96 = v58[7];
      uint64_t v97 = &v18[v96];
      uint64_t v98 = &v19[v96];
      uint64_t v99 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 32))(v97, v98, v99);
      uint64_t v100 = *(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32);
      v100(&v18[v58[8]], &v19[v58[8]], v62);
      uint64_t v101 = v58[9];
      uint64_t v102 = &v18[v101];
      uint64_t v103 = &v19[v101];
      long long v104 = *(_OWORD *)&v19[v101 + 16];
      *(_OWORD *)uint64_t v102 = *(_OWORD *)&v19[v101];
      *((_OWORD *)v102 + 1) = v104;
      uint64_t v105 = *(int *)(type metadata accessor for NewsChannel() + 24);
      uint64_t v106 = &v102[v105];
      uint64_t v107 = &v103[v105];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v107, 1, v62))
      {
        uint64_t v108 = sub_10017DF08(&qword_100E749B0);
        memcpy(v106, v107, *(void *)(*(void *)(v108 - 8) + 64));
      }
      else
      {
        v100(v106, v107, v62);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v106, 0, 1, v62);
      }
      *(void *)&v18[v58[10]] = *(void *)&v19[v58[10]];
      *(void *)&v18[v58[11]] = *(void *)&v19[v58[11]];
      *(void *)&v18[v58[12]] = *(void *)&v19[v58[12]];
      goto LABEL_44;
    case 7u:
      uint64_t v64 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 32))(v18, v19, v64);
      uint64_t v65 = (int *)type metadata accessor for AveragesDetailViewState();
      v18[v65[5]] = v19[v65[5]];
      uint64_t v66 = v65[6];
      uint64_t v67 = &v18[v66];
      uint64_t v68 = &v19[v66];
      uint64_t v69 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v68, 1, (uint64_t)v69))
      {
        uint64_t v70 = sub_10017DF08(&qword_100E6B670);
        memcpy(v67, v68, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        *(void *)uint64_t v67 = *(void *)v68;
        uint64_t v109 = v69[5];
        uint64_t v110 = &v67[v109];
        uint64_t v111 = &v68[v109];
        uint64_t v112 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 32))(v110, v111, v112);
        *(void *)&v67[v69[6]] = *(void *)&v68[v69[6]];
        *(void *)&v67[v69[7]] = *(void *)&v68[v69[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v67, 0, 1, (uint64_t)v69);
      }
      uint64_t v113 = v65[7];
      uint64_t v114 = &v18[v113];
      uint64_t v115 = &v19[v113];
      long long v116 = *((_OWORD *)v115 + 1);
      *(_OWORD *)uint64_t v114 = *(_OWORD *)v115;
      *((_OWORD *)v114 + 1) = v116;
      v114[32] = v115[32];
      goto LABEL_44;
    case 8u:
      uint64_t v71 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v18, v19, v71);
      uint64_t v72 = type metadata accessor for HomeAndWorkRefinementViewState();
      uint64_t v73 = *(int *)(v72 + 20);
      uint64_t v74 = &v18[v73];
      uint64_t v75 = &v19[v73];
      uint64_t v76 = type metadata accessor for LocationOfInterest();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 32))(v74, v75, v76);
      uint64_t v77 = *(int *)(v72 + 24);
      uint64_t v78 = &v18[v77];
      uint64_t v79 = &v19[v77];
      long long v80 = *((_OWORD *)v79 + 1);
      *(_OWORD *)uint64_t v78 = *(_OWORD *)v79;
      *((_OWORD *)v78 + 1) = v80;
      v78[32] = v79[32];
LABEL_44:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_100938C24(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_10011D54C((uint64_t)a1, (void (*)(void))type metadata accessor for PreviewLocation);
    uint64_t v4 = type metadata accessor for PreviewLocation();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)a1 = *(void *)a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      uint64_t v7 = type metadata accessor for SearchLocation();
      uint64_t v8 = *(int *)(v7 + 32);
      uint64_t v9 = &a1[v8];
      uint64_t v10 = &a2[v8];
      uint64_t v11 = type metadata accessor for Location();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
      {
        uint64_t v12 = sub_10017DF08(&qword_100E639E8);
        memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
      }
      uint64_t v14 = *(int *)(v7 + 36);
      id v15 = &a1[v14];
      long long v16 = &a2[v14];
      *(_OWORD *)id v15 = *(_OWORD *)v16;
      v15[16] = v16[16];
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v13 = type metadata accessor for LocationOfInterest();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
        goto LABEL_13;
      }
      uint64_t v6 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_13:
  uint64_t v17 = type metadata accessor for LocationPreviewViewState(0);
  if (a1 != a2)
  {
    uint64_t v18 = *(int *)(v17 + 20);
    uint64_t v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    sub_10011D54C((uint64_t)&a1[v18], (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
    uint64_t v21 = type metadata accessor for LocationPreviewModalViewState(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v22 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v19, v20, v22);
        goto LABEL_46;
      case 1u:
        uint64_t v23 = type metadata accessor for DetailCondition();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v19, v20, v23);
        uint64_t v24 = (int *)type metadata accessor for ConditionDetailViewState();
        uint64_t v25 = v24[5];
        uint64_t v26 = &v19[v25];
        uint64_t v27 = &v20[v25];
        uint64_t v28 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
        uint64_t v29 = v24[6];
        uint64_t v30 = &v19[v29];
        uint64_t v31 = &v20[v29];
        uint64_t v32 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v32))
        {
          uint64_t v33 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v32);
        }
        uint64_t v82 = v24[7];
        long long v83 = &v19[v82];
        long long v84 = &v20[v82];
        long long v85 = *((_OWORD *)v84 + 1);
        *(_OWORD *)long long v83 = *(_OWORD *)v84;
        *((_OWORD *)v83 + 1) = v85;
        v83[32] = v84[32];
        uint64_t v86 = v24[8];
        long long v87 = &v19[v86];
        long long v88 = &v20[v86];
        uint64_t v89 = (int *)type metadata accessor for DetailChartSelection();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v88, 1, (uint64_t)v89))
        {
          uint64_t v90 = sub_10017DF08(&qword_100E711F8);
          memcpy(v87, v88, *(void *)(*(void *)(v90 - 8) + 64));
        }
        else
        {
          *(_OWORD *)long long v87 = *(_OWORD *)v88;
          uint64_t v118 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32);
          v118(&v87[v89[5]], &v88[v89[5]], v32);
          v118(&v87[v89[6]], &v88[v89[6]], v32);
          v118(&v87[v89[7]], &v88[v89[7]], v32);
          *(void *)&v87[v89[8]] = *(void *)&v88[v89[8]];
          uint64_t v119 = v89[9];
          long long v120 = &v87[v119];
          uint64_t v121 = &v88[v119];
          v120[8] = v121[8];
          *(void *)long long v120 = *(void *)v121;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v87, 0, 1, (uint64_t)v89);
        }
        v19[v24[9]] = v20[v24[9]];
        goto LABEL_46;
      case 2u:
        uint64_t v34 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v19, v20, v34);
        uint64_t v35 = type metadata accessor for AirQualityDetailViewState();
        v19[*(int *)(v35 + 20)] = v20[*(int *)(v35 + 20)];
        uint64_t v36 = *(int *)(v35 + 24);
        uint64_t v37 = &v19[v36];
        long long v38 = &v20[v36];
        v37[32] = v38[32];
        long long v39 = *((_OWORD *)v38 + 1);
        *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
        *((_OWORD *)v37 + 1) = v39;
        goto LABEL_46;
      case 3u:
        uint64_t v40 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v19, v20, v40);
        uint64_t v41 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
        uint64_t v42 = &v19[v41];
        long long v43 = &v20[v41];
        long long v44 = *((_OWORD *)v43 + 1);
        *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
        *((_OWORD *)v42 + 1) = v44;
        v42[32] = v43[32];
        goto LABEL_46;
      case 4u:
        uint64_t v45 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v19, v20, v45);
        uint64_t v46 = type metadata accessor for SunriseSunsetDetailViewState();
        uint64_t v47 = *(int *)(v46 + 20);
        uint64_t v48 = &v19[v47];
        long long v49 = &v20[v47];
        long long v50 = *((_OWORD *)v49 + 1);
        *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
        *((_OWORD *)v48 + 1) = v50;
        v48[32] = v49[32];
        v19[*(int *)(v46 + 24)] = v20[*(int *)(v46 + 24)];
        goto LABEL_46;
      case 5u:
        uint64_t v51 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v19, v20, v51);
        uint64_t v52 = (int *)type metadata accessor for MoonDetailViewState();
        uint64_t v53 = v52[5];
        uint64_t v54 = &v19[v53];
        uint64_t v55 = &v20[v53];
        uint64_t v56 = type metadata accessor for MoonDetailSelectedDate();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v55, 1, v56))
        {
          uint64_t v57 = sub_10017DF08(&qword_100E67240);
          memcpy(v54, v55, *(void *)(*(void *)(v57 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          uint64_t v91 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 32))(v54, v55, v91);
          swift_storeEnumTagMultiPayload();
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v54, 0, 1, v56);
        }
        uint64_t v92 = v52[6];
        uint64_t v93 = &v19[v92];
        uint64_t v94 = &v20[v92];
        uint64_t v95 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v94, 1, v95))
        {
          uint64_t v96 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v93, v94, *(void *)(*(void *)(v96 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 32))(v93, v94, v95);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v93, 0, 1, v95);
        }
        uint64_t v122 = v52[7];
        uint64_t v123 = &v19[v122];
        long long v124 = &v20[v122];
        long long v125 = *((_OWORD *)v124 + 1);
        *(_OWORD *)uint64_t v123 = *(_OWORD *)v124;
        *((_OWORD *)v123 + 1) = v125;
        v123[32] = v124[32];
        v19[v52[8]] = v20[v52[8]];
        goto LABEL_46;
      case 6u:
        long long v58 = *((_OWORD *)v20 + 1);
        *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
        *((_OWORD *)v19 + 1) = v58;
        uint64_t v59 = (int *)type metadata accessor for NewsArticle();
        uint64_t v60 = v59[6];
        uint64_t v61 = &v19[v60];
        uint64_t v62 = &v20[v60];
        uint64_t v63 = type metadata accessor for URL();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, v63))
        {
          uint64_t v64 = sub_10017DF08(&qword_100E749B0);
          memcpy(v61, v62, *(void *)(*(void *)(v64 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v61, v62, v63);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v61, 0, 1, v63);
        }
        uint64_t v97 = v59[7];
        uint64_t v98 = &v19[v97];
        uint64_t v99 = &v20[v97];
        uint64_t v100 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 32))(v98, v99, v100);
        uint64_t v101 = *(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32);
        v101(&v19[v59[8]], &v20[v59[8]], v63);
        uint64_t v102 = v59[9];
        uint64_t v103 = &v19[v102];
        long long v104 = &v20[v102];
        long long v105 = *(_OWORD *)&v20[v102 + 16];
        *(_OWORD *)uint64_t v103 = *(_OWORD *)&v20[v102];
        *((_OWORD *)v103 + 1) = v105;
        uint64_t v106 = *(int *)(type metadata accessor for NewsChannel() + 24);
        uint64_t v107 = &v103[v106];
        uint64_t v108 = &v104[v106];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v108, 1, v63))
        {
          uint64_t v109 = sub_10017DF08(&qword_100E749B0);
          memcpy(v107, v108, *(void *)(*(void *)(v109 - 8) + 64));
        }
        else
        {
          v101(v107, v108, v63);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v107, 0, 1, v63);
        }
        *(void *)&v19[v59[10]] = *(void *)&v20[v59[10]];
        *(void *)&v19[v59[11]] = *(void *)&v20[v59[11]];
        *(void *)&v19[v59[12]] = *(void *)&v20[v59[12]];
        goto LABEL_46;
      case 7u:
        uint64_t v65 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 32))(v19, v20, v65);
        uint64_t v66 = (int *)type metadata accessor for AveragesDetailViewState();
        v19[v66[5]] = v20[v66[5]];
        uint64_t v67 = v66[6];
        uint64_t v68 = &v19[v67];
        uint64_t v69 = &v20[v67];
        uint64_t v70 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v69, 1, (uint64_t)v70))
        {
          uint64_t v71 = sub_10017DF08(&qword_100E6B670);
          memcpy(v68, v69, *(void *)(*(void *)(v71 - 8) + 64));
        }
        else
        {
          *(void *)uint64_t v68 = *(void *)v69;
          uint64_t v110 = v70[5];
          uint64_t v111 = &v68[v110];
          uint64_t v112 = &v69[v110];
          uint64_t v113 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 32))(v111, v112, v113);
          *(void *)&v68[v70[6]] = *(void *)&v69[v70[6]];
          *(void *)&v68[v70[7]] = *(void *)&v69[v70[7]];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v68, 0, 1, (uint64_t)v70);
        }
        uint64_t v114 = v66[7];
        uint64_t v115 = &v19[v114];
        long long v116 = &v20[v114];
        long long v117 = *((_OWORD *)v116 + 1);
        *(_OWORD *)uint64_t v115 = *(_OWORD *)v116;
        *((_OWORD *)v115 + 1) = v117;
        v115[32] = v116[32];
        goto LABEL_46;
      case 8u:
        uint64_t v72 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 32))(v19, v20, v72);
        uint64_t v73 = type metadata accessor for HomeAndWorkRefinementViewState();
        uint64_t v74 = *(int *)(v73 + 20);
        uint64_t v75 = &v19[v74];
        uint64_t v76 = &v20[v74];
        uint64_t v77 = type metadata accessor for LocationOfInterest();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 32))(v75, v76, v77);
        uint64_t v78 = *(int *)(v73 + 24);
        uint64_t v79 = &v19[v78];
        long long v80 = &v20[v78];
        long long v81 = *((_OWORD *)v80 + 1);
        *(_OWORD *)uint64_t v79 = *(_OWORD *)v80;
        *((_OWORD *)v79 + 1) = v81;
        v79[32] = v80[32];
LABEL_46:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_100939980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for PreviewLocation();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    uint64_t v8 = type metadata accessor for LocationPreviewModalViewState(0);
    uint64_t v9 = a1 + *(int *)(a3 + 20);
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_1009399FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for PreviewLocation();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    uint64_t v10 = type metadata accessor for LocationPreviewModalViewState(0);
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  return _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

char *sub_100939A80(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *(void *)a1 = *a2;
    a1 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        type metadata accessor for PreviewLocation();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v23 = type metadata accessor for LocationOfInterest();
            (*(void (**)(char *, char **, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
            break;
          case 2u:
            uint64_t v25 = *a2;
            uint64_t v24 = a2[1];
            *(void *)a1 = *a2;
            *((void *)a1 + 1) = v24;
            uint64_t v26 = a2[3];
            *((void *)a1 + 2) = a2[2];
            *((void *)a1 + 3) = v26;
            uint64_t v27 = a2[5];
            *((void *)a1 + 4) = a2[4];
            *((void *)a1 + 5) = v27;
            *((void *)a1 + 6) = a2[6];
            uint64_t v28 = type metadata accessor for SearchLocation();
            uint64_t v29 = *(int *)(v28 + 32);
            __dst = &a1[v29];
            uint64_t v364 = v28;
            uint64_t v30 = (char *)a2 + v29;
            uint64_t v31 = type metadata accessor for Location();
            uint64_t v32 = v25;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31))
            {
              uint64_t v33 = sub_10017DF08(&qword_100E639E8);
              memcpy(__dst, v30, *(void *)(*(void *)(v33 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(__dst, v30, v31);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v31);
            }
            uint64_t v89 = *(int *)(v364 + 36);
            uint64_t v90 = &a1[v89];
            uint64_t v91 = (char *)a2 + v89;
            *(_OWORD *)uint64_t v90 = *(_OWORD *)v91;
            v90[16] = v91[16];
            break;
          case 3u:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            uint64_t v34 = a2[3];
            *((void *)a1 + 2) = a2[2];
            *((void *)a1 + 3) = v34;
            swift_bridgeObjectRetain();
            break;
          default:
            uint64_t v7 = type metadata accessor for Location();
            (*(void (**)(char *, char **, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
            break;
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v92 = *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20);
        uint64_t v93 = &a1[v92];
        uint64_t v94 = (char **)((char *)a2 + v92);
        uint64_t v95 = type metadata accessor for LocationPreviewModalViewState(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v96 = type metadata accessor for URL();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v96 - 8) + 16))(v93, v94, v96);
            goto LABEL_80;
          case 1u:
            uint64_t v97 = type metadata accessor for DetailCondition();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v97 - 8) + 16))(v93, v94, v97);
            uint64_t v98 = (int *)type metadata accessor for ConditionDetailViewState();
            uint64_t v99 = v98[5];
            uint64_t v100 = &v93[v99];
            uint64_t v101 = (char *)v94 + v99;
            uint64_t v102 = type metadata accessor for Location();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 16))(v100, v101, v102);
            uint64_t v103 = v98[6];
            long long v104 = &v93[v103];
            long long v105 = (char *)v94 + v103;
            uint64_t v106 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v105, 1, v106))
            {
              uint64_t v107 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v104, v105, *(void *)(*(void *)(v107 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 16))(v104, v105, v106);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v104, 0, 1, v106);
            }
            uint64_t v189 = v98[7];
            uint64_t v190 = &v93[v189];
            uint64_t v191 = (char *)v94 + v189;
            long long v192 = *((_OWORD *)v191 + 1);
            *(_OWORD *)uint64_t v190 = *(_OWORD *)v191;
            *((_OWORD *)v190 + 1) = v192;
            v190[32] = v191[32];
            uint64_t v193 = v98[8];
            uint64_t v194 = &v93[v193];
            uint64_t v195 = (void *)((char *)v94 + v193);
            uint64_t v196 = (int *)type metadata accessor for DetailChartSelection();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v195, 1, (uint64_t)v196))
            {
              uint64_t v197 = sub_10017DF08(&qword_100E711F8);
              memcpy(v194, v195, *(void *)(*(void *)(v197 - 8) + 64));
            }
            else
            {
              uint64_t v225 = v195[1];
              *(void *)uint64_t v194 = *v195;
              *((void *)v194 + 1) = v225;
              uint64_t v226 = v196[5];
              uint64_t v352 = (char *)v195 + v226;
              v356 = &v194[v226];
              uint64_t v227 = *(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 16);
              swift_bridgeObjectRetain();
              v227(v356, v352, v106);
              v227(&v194[v196[6]], (char *)v195 + v196[6], v106);
              v227(&v194[v196[7]], (char *)v195 + v196[7], v106);
              *(void *)&v194[v196[8]] = *(void *)((char *)v195 + v196[8]);
              uint64_t v228 = v196[9];
              uint64_t v229 = &v194[v228];
              uint64_t v230 = (char *)v195 + v228;
              v229[8] = v230[8];
              *(void *)uint64_t v229 = *(void *)v230;
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v194, 0, 1, (uint64_t)v196);
            }
            v93[v98[9]] = *((unsigned char *)v94 + v98[9]);
            goto LABEL_80;
          case 2u:
            uint64_t v108 = type metadata accessor for Location();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v108 - 8) + 16))(v93, v94, v108);
            uint64_t v109 = type metadata accessor for AirQualityDetailViewState();
            v93[*(int *)(v109 + 20)] = *((unsigned char *)v94 + *(int *)(v109 + 20));
            uint64_t v110 = *(int *)(v109 + 24);
            uint64_t v111 = &v93[v110];
            uint64_t v112 = (char *)v94 + v110;
            v111[32] = v112[32];
            long long v113 = *((_OWORD *)v112 + 1);
            *(_OWORD *)uint64_t v111 = *(_OWORD *)v112;
            *((_OWORD *)v111 + 1) = v113;
            goto LABEL_80;
          case 3u:
            uint64_t v114 = type metadata accessor for Location();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v114 - 8) + 16))(v93, v94, v114);
            uint64_t v115 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
            long long v116 = &v93[v115];
            long long v117 = (char *)v94 + v115;
            long long v118 = *((_OWORD *)v117 + 1);
            *(_OWORD *)long long v116 = *(_OWORD *)v117;
            *((_OWORD *)v116 + 1) = v118;
            v116[32] = v117[32];
            goto LABEL_80;
          case 4u:
            uint64_t v119 = type metadata accessor for Location();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v119 - 8) + 16))(v93, v94, v119);
            uint64_t v120 = type metadata accessor for SunriseSunsetDetailViewState();
            uint64_t v121 = *(int *)(v120 + 20);
            uint64_t v122 = &v93[v121];
            uint64_t v123 = (char *)v94 + v121;
            long long v124 = *((_OWORD *)v123 + 1);
            *(_OWORD *)uint64_t v122 = *(_OWORD *)v123;
            *((_OWORD *)v122 + 1) = v124;
            v122[32] = v123[32];
            v93[*(int *)(v120 + 24)] = *((unsigned char *)v94 + *(int *)(v120 + 24));
            goto LABEL_80;
          case 5u:
            uint64_t v125 = type metadata accessor for Location();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v125 - 8) + 16))(v93, v94, v125);
            char v126 = (int *)type metadata accessor for MoonDetailViewState();
            uint64_t v127 = v126[5];
            uint64_t v128 = &v93[v127];
            uint64_t v129 = (char *)v94 + v127;
            uint64_t v130 = type metadata accessor for MoonDetailSelectedDate();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v129, 1, v130))
            {
              uint64_t v131 = sub_10017DF08(&qword_100E67240);
              memcpy(v128, v129, *(void *)(*(void *)(v131 - 8) + 64));
            }
            else
            {
              swift_getEnumCaseMultiPayload();
              uint64_t v198 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v198 - 8) + 16))(v128, v129, v198);
              swift_storeEnumTagMultiPayload();
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v128, 0, 1, v130);
            }
            uint64_t v199 = v126[6];
            uint64_t v200 = &v93[v199];
            uint64_t v201 = (char *)v94 + v199;
            uint64_t v202 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v201, 1, v202))
            {
              uint64_t v203 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v200, v201, *(void *)(*(void *)(v203 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v202 - 8) + 16))(v200, v201, v202);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v200, 0, 1, v202);
            }
            uint64_t v231 = v126[7];
            uint64_t v232 = &v93[v231];
            uint64_t v233 = (char *)v94 + v231;
            long long v234 = *((_OWORD *)v233 + 1);
            *(_OWORD *)uint64_t v232 = *(_OWORD *)v233;
            *((_OWORD *)v232 + 1) = v234;
            v232[32] = v233[32];
            v93[v126[8]] = *((unsigned char *)v94 + v126[8]);
            goto LABEL_80;
          case 6u:
            uint64_t v132 = v94[1];
            *(void *)uint64_t v93 = *v94;
            *((void *)v93 + 1) = v132;
            uint64_t v133 = v94[3];
            *((void *)v93 + 2) = v94[2];
            *((void *)v93 + 3) = v133;
            uint64_t v134 = (int *)type metadata accessor for NewsArticle();
            uint64_t v135 = v134[6];
            __dstb = &v93[v135];
            uint64_t v136 = (char *)v94 + v135;
            uint64_t v137 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v136, 1, v137))
            {
              uint64_t v138 = sub_10017DF08(&qword_100E749B0);
              memcpy(__dstb, v136, *(void *)(*(void *)(v138 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 16))(__dstb, v136, v137);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstb, 0, 1, v137);
            }
            uint64_t v204 = v134[7];
            uint64_t v205 = &v93[v204];
            uint64_t v206 = (char *)v94 + v204;
            uint64_t v207 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v207 - 8) + 16))(v205, v206, v207);
            __dstc = *(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 16);
            __dstc(&v93[v134[8]], (char *)v94 + v134[8], v137);
            uint64_t v208 = v134[9];
            uint64_t v209 = &v93[v208];
            uint64_t v210 = (char *)v94 + v208;
            uint64_t v211 = *(void *)((char *)v94 + v208 + 8);
            *(void *)uint64_t v209 = *(void *)((char *)v94 + v208);
            *((void *)v209 + 1) = v211;
            uint64_t v212 = *(void *)((char *)v94 + v208 + 24);
            *((void *)v209 + 2) = *(void *)((char *)v94 + v208 + 16);
            *((void *)v209 + 3) = v212;
            uint64_t v213 = *(int *)(type metadata accessor for NewsChannel() + 24);
            uint64_t v214 = &v209[v213];
            uint64_t v215 = &v210[v213];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v215, 1, v137))
            {
              uint64_t v216 = sub_10017DF08(&qword_100E749B0);
              memcpy(v214, v215, *(void *)(*(void *)(v216 - 8) + 64));
            }
            else
            {
              __dstc(v214, v215, v137);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v214, 0, 1, v137);
            }
            *(void *)&v93[v134[10]] = *(void *)((char *)v94 + v134[10]);
            *(void *)&v93[v134[11]] = *(void *)((char *)v94 + v134[11]);
            *(void *)&v93[v134[12]] = *(void *)((char *)v94 + v134[12]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_80;
          case 7u:
            uint64_t v139 = type metadata accessor for Location();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v139 - 8) + 16))(v93, v94, v139);
            uint64_t v140 = (int *)type metadata accessor for AveragesDetailViewState();
            v93[v140[5]] = *((unsigned char *)v94 + v140[5]);
            uint64_t v141 = v140[6];
            uint64_t v142 = &v93[v141];
            uint64_t v143 = (void *)((char *)v94 + v141);
            uint64_t v144 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v143, 1, (uint64_t)v144))
            {
              uint64_t v145 = sub_10017DF08(&qword_100E6B670);
              memcpy(v142, v143, *(void *)(*(void *)(v145 - 8) + 64));
            }
            else
            {
              *(void *)uint64_t v142 = *v143;
              uint64_t v217 = v144[5];
              uint64_t v218 = &v142[v217];
              uint64_t v219 = (char *)v143 + v217;
              uint64_t v220 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v220 - 8) + 16))(v218, v219, v220);
              *(void *)&v142[v144[6]] = *(void *)((char *)v143 + v144[6]);
              *(void *)&v142[v144[7]] = *(void *)((char *)v143 + v144[7]);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v142, 0, 1, (uint64_t)v144);
            }
            uint64_t v221 = v140[7];
            uint64_t v222 = &v93[v221];
            uint64_t v223 = (char *)v94 + v221;
            long long v224 = *((_OWORD *)v223 + 1);
            *(_OWORD *)uint64_t v222 = *(_OWORD *)v223;
            *((_OWORD *)v222 + 1) = v224;
            v222[32] = v223[32];
            goto LABEL_80;
          case 8u:
            uint64_t v146 = type metadata accessor for Location();
            (*(void (**)(char *, void *, uint64_t))(*(void *)(v146 - 8) + 16))(v93, v94, v146);
            uint64_t v147 = type metadata accessor for HomeAndWorkRefinementViewState();
            uint64_t v148 = *(int *)(v147 + 20);
            uint64_t v149 = &v93[v148];
            uint64_t v150 = (char *)v94 + v148;
            uint64_t v151 = type metadata accessor for LocationOfInterest();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 16))(v149, v150, v151);
            uint64_t v152 = *(int *)(v147 + 24);
            uint64_t v153 = &v93[v152];
            uint64_t v154 = (char *)v94 + v152;
            long long v155 = *((_OWORD *)v154 + 1);
            *(_OWORD *)uint64_t v153 = *(_OWORD *)v154;
            *((_OWORD *)v153 + 1) = v155;
            v153[32] = v154[32];
LABEL_80:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v93, v94, *(void *)(*(void *)(v95 - 8) + 64));
            break;
        }
        goto LABEL_119;
      case 2u:
      case 3u:
        *(void *)a1 = *a2;
        swift_retain();
        goto LABEL_119;
      case 4u:
        uint64_t v9 = type metadata accessor for ModalViewState.MapViewModal(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v9))
        {
          uint64_t v10 = sub_10017DF08(&qword_100E663E8);
          memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
        }
        else
        {
          type metadata accessor for PreviewLocation();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v77 = type metadata accessor for LocationOfInterest();
              (*(void (**)(char *, char **, uint64_t))(*(void *)(v77 - 8) + 16))(a1, a2, v77);
              goto LABEL_32;
            case 2u:
              uint64_t v365 = v9;
              uint64_t v79 = *a2;
              uint64_t v78 = a2[1];
              *(void *)a1 = *a2;
              *((void *)a1 + 1) = v78;
              long long v80 = a2[3];
              *((void *)a1 + 2) = a2[2];
              *((void *)a1 + 3) = v80;
              long long v81 = a2[5];
              *((void *)a1 + 4) = a2[4];
              *((void *)a1 + 5) = v81;
              *((void *)a1 + 6) = a2[6];
              uint64_t v82 = type metadata accessor for SearchLocation();
              uint64_t v83 = *(int *)(v82 + 32);
              uint64_t v354 = (int *)v82;
              __dsta = &a1[v83];
              long long v84 = (char *)a2 + v83;
              uint64_t v85 = type metadata accessor for Location();
              uint64_t v86 = v79;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v84, 1, v85))
              {
                uint64_t v87 = sub_10017DF08(&qword_100E639E8);
                memcpy(__dsta, v84, *(void *)(*(void *)(v87 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 16))(__dsta, v84, v85);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v85);
              }
              uint64_t v235 = v354[9];
              uint64_t v236 = &a1[v235];
              uint64_t v237 = (char *)a2 + v235;
              *(_OWORD *)uint64_t v236 = *(_OWORD *)v237;
              v236[16] = v237[16];
              swift_storeEnumTagMultiPayload();
              uint64_t v9 = v365;
              goto LABEL_84;
            case 3u:
              *(_OWORD *)a1 = *(_OWORD *)a2;
              long long v88 = a2[3];
              *((void *)a1 + 2) = a2[2];
              *((void *)a1 + 3) = v88;
              swift_bridgeObjectRetain();
              goto LABEL_32;
            default:
              uint64_t v22 = type metadata accessor for Location();
              (*(void (**)(char *, char **, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
LABEL_32:
              swift_storeEnumTagMultiPayload();
LABEL_84:
              uint64_t v238 = *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20);
              uint64_t v239 = &a1[v238];
              uint64_t v240 = (char **)((char *)a2 + v238);
              uint64_t v241 = type metadata accessor for LocationPreviewModalViewState(0);
              switch(swift_getEnumCaseMultiPayload())
              {
                case 0u:
                  uint64_t v242 = type metadata accessor for URL();
                  (*(void (**)(char *, void *, uint64_t))(*(void *)(v242 - 8) + 16))(v239, v240, v242);
                  goto LABEL_117;
                case 1u:
                  uint64_t v366 = v9;
                  uint64_t v243 = type metadata accessor for DetailCondition();
                  (*(void (**)(char *, void *, uint64_t))(*(void *)(v243 - 8) + 16))(v239, v240, v243);
                  uint64_t v244 = type metadata accessor for ConditionDetailViewState();
                  uint64_t v245 = *(int *)(v244 + 20);
                  uint64_t v246 = &v239[v245];
                  uint64_t v247 = (char *)v240 + v245;
                  uint64_t v248 = type metadata accessor for Location();
                  uint64_t v249 = v246;
                  uint64_t v250 = (int *)v244;
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v248 - 8) + 16))(v249, v247, v248);
                  uint64_t v251 = *(int *)(v244 + 24);
                  uint64_t v252 = &v239[v251];
                  uint64_t v253 = (char *)v240 + v251;
                  uint64_t v254 = type metadata accessor for Date();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v253, 1, v254))
                  {
                    uint64_t v255 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                    memcpy(v252, v253, *(void *)(*(void *)(v255 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v254 - 8) + 16))(v252, v253, v254);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v252, 0, 1, v254);
                  }
                  uint64_t v304 = v250[7];
                  uint64_t v305 = &v239[v304];
                  uint64_t v306 = (char *)v240 + v304;
                  long long v307 = *((_OWORD *)v306 + 1);
                  *(_OWORD *)uint64_t v305 = *(_OWORD *)v306;
                  *((_OWORD *)v305 + 1) = v307;
                  v305[32] = v306[32];
                  uint64_t v308 = v250[8];
                  uint64_t v309 = &v239[v308];
                  uint64_t v310 = (void *)((char *)v240 + v308);
                  uint64_t v311 = (int *)type metadata accessor for DetailChartSelection();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v310, 1, (uint64_t)v311))
                  {
                    uint64_t v312 = sub_10017DF08(&qword_100E711F8);
                    memcpy(v309, v310, *(void *)(*(void *)(v312 - 8) + 64));
                  }
                  else
                  {
                    uint64_t v340 = v310[1];
                    *(void *)uint64_t v309 = *v310;
                    *((void *)v309 + 1) = v340;
                    uint64_t v341 = v311[5];
                    uint64_t v351 = (char *)v310 + v341;
                    uint64_t v353 = &v309[v341];
                    uint64_t v342 = *(void (**)(char *, char *, uint64_t))(*(void *)(v254 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v342(v353, v351, v254);
                    v342(&v309[v311[6]], (char *)v310 + v311[6], v254);
                    v342(&v309[v311[7]], (char *)v310 + v311[7], v254);
                    *(void *)&v309[v311[8]] = *(void *)((char *)v310 + v311[8]);
                    uint64_t v343 = v311[9];
                    uint64_t v344 = &v309[v343];
                    uint64_t v345 = (char *)v310 + v343;
                    v344[8] = v345[8];
                    *(void *)uint64_t v344 = *(void *)v345;
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v309, 0, 1, (uint64_t)v311);
                  }
                  uint64_t v9 = v366;
                  v239[v250[9]] = *((unsigned char *)v240 + v250[9]);
                  goto LABEL_117;
                case 2u:
                  uint64_t v256 = type metadata accessor for Location();
                  (*(void (**)(char *, void *, uint64_t))(*(void *)(v256 - 8) + 16))(v239, v240, v256);
                  uint64_t v257 = type metadata accessor for AirQualityDetailViewState();
                  v239[*(int *)(v257 + 20)] = *((unsigned char *)v240 + *(int *)(v257 + 20));
                  uint64_t v258 = *(int *)(v257 + 24);
                  v259 = &v239[v258];
                  uint64_t v260 = (char *)v240 + v258;
                  v259[32] = v260[32];
                  long long v261 = *((_OWORD *)v260 + 1);
                  *(_OWORD *)v259 = *(_OWORD *)v260;
                  *((_OWORD *)v259 + 1) = v261;
                  goto LABEL_117;
                case 3u:
                  uint64_t v262 = type metadata accessor for Location();
                  (*(void (**)(char *, void *, uint64_t))(*(void *)(v262 - 8) + 16))(v239, v240, v262);
                  uint64_t v263 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
                  uint64_t v264 = &v239[v263];
                  uint64_t v265 = (char *)v240 + v263;
                  long long v266 = *((_OWORD *)v265 + 1);
                  *(_OWORD *)uint64_t v264 = *(_OWORD *)v265;
                  *((_OWORD *)v264 + 1) = v266;
                  v264[32] = v265[32];
                  goto LABEL_117;
                case 4u:
                  uint64_t v267 = type metadata accessor for Location();
                  (*(void (**)(char *, void *, uint64_t))(*(void *)(v267 - 8) + 16))(v239, v240, v267);
                  uint64_t v268 = type metadata accessor for SunriseSunsetDetailViewState();
                  uint64_t v269 = *(int *)(v268 + 20);
                  uint64_t v270 = &v239[v269];
                  uint64_t v271 = (char *)v240 + v269;
                  long long v272 = *((_OWORD *)v271 + 1);
                  *(_OWORD *)uint64_t v270 = *(_OWORD *)v271;
                  *((_OWORD *)v270 + 1) = v272;
                  v270[32] = v271[32];
                  v239[*(int *)(v268 + 24)] = *((unsigned char *)v240 + *(int *)(v268 + 24));
                  goto LABEL_117;
                case 5u:
                  uint64_t v367 = v9;
                  uint64_t v273 = type metadata accessor for Location();
                  (*(void (**)(char *, void *, uint64_t))(*(void *)(v273 - 8) + 16))(v239, v240, v273);
                  uint64_t v274 = (int *)type metadata accessor for MoonDetailViewState();
                  uint64_t v275 = v274[5];
                  uint64_t v276 = &v239[v275];
                  uint64_t v277 = (char *)v240 + v275;
                  uint64_t v278 = type metadata accessor for MoonDetailSelectedDate();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v277, 1, v278))
                  {
                    uint64_t v279 = sub_10017DF08(&qword_100E67240);
                    memcpy(v276, v277, *(void *)(*(void *)(v279 - 8) + 64));
                  }
                  else
                  {
                    swift_getEnumCaseMultiPayload();
                    uint64_t v313 = type metadata accessor for Date();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v313 - 8) + 16))(v276, v277, v313);
                    swift_storeEnumTagMultiPayload();
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v276, 0, 1, v278);
                  }
                  uint64_t v314 = v274[6];
                  id v315 = &v239[v314];
                  v316 = (char *)v240 + v314;
                  uint64_t v317 = type metadata accessor for Date();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v316, 1, v317))
                  {
                    uint64_t v318 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                    memcpy(v315, v316, *(void *)(*(void *)(v318 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v317 - 8) + 16))(v315, v316, v317);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v315, 0, 1, v317);
                  }
                  uint64_t v346 = v274[7];
                  uint64_t v347 = &v239[v346];
                  uint64_t v348 = (char *)v240 + v346;
                  long long v349 = *((_OWORD *)v348 + 1);
                  *(_OWORD *)uint64_t v347 = *(_OWORD *)v348;
                  *((_OWORD *)v347 + 1) = v349;
                  v347[32] = v348[32];
                  v239[v274[8]] = *((unsigned char *)v240 + v274[8]);
                  goto LABEL_114;
                case 6u:
                  uint64_t v368 = v9;
                  uint64_t v280 = v240[1];
                  *(void *)uint64_t v239 = *v240;
                  *((void *)v239 + 1) = v280;
                  uint64_t v281 = v240[3];
                  *((void *)v239 + 2) = v240[2];
                  *((void *)v239 + 3) = v281;
                  uint64_t v282 = (int *)type metadata accessor for NewsArticle();
                  uint64_t v283 = v282[6];
                  v357 = &v239[v283];
                  v284 = (char *)v240 + v283;
                  uint64_t v285 = type metadata accessor for URL();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v284, 1, v285))
                  {
                    uint64_t v286 = sub_10017DF08(&qword_100E749B0);
                    memcpy(v357, v284, *(void *)(*(void *)(v286 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v285 - 8) + 16))(v357, v284, v285);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v357, 0, 1, v285);
                  }
                  uint64_t v319 = v282[7];
                  v320 = &v239[v319];
                  v321 = (char *)v240 + v319;
                  uint64_t v322 = type metadata accessor for Date();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v322 - 8) + 16))(v320, v321, v322);
                  uint64_t v358 = *(void (**)(char *, char *, uint64_t))(*(void *)(v285 - 8) + 16);
                  v358(&v239[v282[8]], (char *)v240 + v282[8], v285);
                  uint64_t v323 = v282[9];
                  uint64_t v324 = &v239[v323];
                  uint64_t v325 = (char *)v240 + v323;
                  uint64_t v326 = *(void *)((char *)v240 + v323 + 8);
                  *(void *)uint64_t v324 = *(void *)((char *)v240 + v323);
                  *((void *)v324 + 1) = v326;
                  uint64_t v327 = *(void *)((char *)v240 + v323 + 24);
                  *((void *)v324 + 2) = *(void *)((char *)v240 + v323 + 16);
                  *((void *)v324 + 3) = v327;
                  uint64_t v328 = *(int *)(type metadata accessor for NewsChannel() + 24);
                  uint64_t v329 = &v324[v328];
                  uint64_t v330 = &v325[v328];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v330, 1, v285))
                  {
                    uint64_t v331 = sub_10017DF08(&qword_100E749B0);
                    memcpy(v329, v330, *(void *)(*(void *)(v331 - 8) + 64));
                  }
                  else
                  {
                    v358(v329, v330, v285);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v329, 0, 1, v285);
                  }
                  uint64_t v9 = v368;
                  *(void *)&v239[v282[10]] = *(void *)((char *)v240 + v282[10]);
                  *(void *)&v239[v282[11]] = *(void *)((char *)v240 + v282[11]);
                  *(void *)&v239[v282[12]] = *(void *)((char *)v240 + v282[12]);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  goto LABEL_117;
                case 7u:
                  uint64_t v367 = v9;
                  uint64_t v287 = type metadata accessor for Location();
                  (*(void (**)(char *, void *, uint64_t))(*(void *)(v287 - 8) + 16))(v239, v240, v287);
                  uint64_t v288 = (int *)type metadata accessor for AveragesDetailViewState();
                  v239[v288[5]] = *((unsigned char *)v240 + v288[5]);
                  uint64_t v289 = v288[6];
                  uint64_t v290 = &v239[v289];
                  uint64_t v291 = (void *)((char *)v240 + v289);
                  uint64_t v292 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v291, 1, (uint64_t)v292))
                  {
                    uint64_t v293 = sub_10017DF08(&qword_100E6B670);
                    memcpy(v290, v291, *(void *)(*(void *)(v293 - 8) + 64));
                  }
                  else
                  {
                    *(void *)uint64_t v290 = *v291;
                    uint64_t v332 = v292[5];
                    uint64_t v333 = &v290[v332];
                    uint64_t v334 = (char *)v291 + v332;
                    uint64_t v335 = type metadata accessor for Date();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v335 - 8) + 16))(v333, v334, v335);
                    *(void *)&v290[v292[6]] = *(void *)((char *)v291 + v292[6]);
                    *(void *)&v290[v292[7]] = *(void *)((char *)v291 + v292[7]);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v290, 0, 1, (uint64_t)v292);
                  }
                  uint64_t v336 = v288[7];
                  uint64_t v337 = &v239[v336];
                  uint64_t v338 = (char *)v240 + v336;
                  long long v339 = *((_OWORD *)v338 + 1);
                  *(_OWORD *)uint64_t v337 = *(_OWORD *)v338;
                  *((_OWORD *)v337 + 1) = v339;
                  v337[32] = v338[32];
LABEL_114:
                  swift_storeEnumTagMultiPayload();
                  uint64_t v9 = v367;
                  break;
                case 8u:
                  uint64_t v294 = type metadata accessor for Location();
                  (*(void (**)(char *, void *, uint64_t))(*(void *)(v294 - 8) + 16))(v239, v240, v294);
                  uint64_t v295 = type metadata accessor for HomeAndWorkRefinementViewState();
                  uint64_t v296 = *(int *)(v295 + 20);
                  uint64_t v297 = &v239[v296];
                  uint64_t v298 = (char *)v240 + v296;
                  uint64_t v299 = type metadata accessor for LocationOfInterest();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v299 - 8) + 16))(v297, v298, v299);
                  uint64_t v300 = *(int *)(v295 + 24);
                  uint64_t v301 = &v239[v300];
                  uint64_t v302 = (char *)v240 + v300;
                  long long v303 = *((_OWORD *)v302 + 1);
                  *(_OWORD *)uint64_t v301 = *(_OWORD *)v302;
                  *((_OWORD *)v301 + 1) = v303;
                  v301[32] = v302[32];
LABEL_117:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v239, v240, *(void *)(*(void *)(v241 - 8) + 64));
                  break;
              }
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v9);
              break;
          }
        }
        goto LABEL_119;
      case 5u:
        type metadata accessor for ModalViewState.LocationDetailModal(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v35 = type metadata accessor for Location();
            (*(void (**)(char *, char **, uint64_t))(*(void *)(v35 - 8) + 16))(a1, a2, v35);
            uint64_t v36 = type metadata accessor for AirQualityDetailViewState();
            a1[*(int *)(v36 + 20)] = *((unsigned char *)a2 + *(int *)(v36 + 20));
            uint64_t v37 = *(int *)(v36 + 24);
            long long v38 = &a1[v37];
            long long v39 = (char *)a2 + v37;
            v38[32] = v39[32];
            long long v40 = *((_OWORD *)v39 + 1);
            *(_OWORD *)long long v38 = *(_OWORD *)v39;
            *((_OWORD *)v38 + 1) = v40;
            break;
          case 2u:
            uint64_t v41 = type metadata accessor for Location();
            (*(void (**)(char *, char **, uint64_t))(*(void *)(v41 - 8) + 16))(a1, a2, v41);
            uint64_t v42 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
            long long v43 = &a1[v42];
            long long v44 = (char *)a2 + v42;
            long long v45 = *((_OWORD *)v44 + 1);
            *(_OWORD *)long long v43 = *(_OWORD *)v44;
            *((_OWORD *)v43 + 1) = v45;
            v43[32] = v44[32];
            break;
          case 3u:
            uint64_t v46 = type metadata accessor for Location();
            (*(void (**)(char *, char **, uint64_t))(*(void *)(v46 - 8) + 16))(a1, a2, v46);
            uint64_t v47 = type metadata accessor for SunriseSunsetDetailViewState();
            uint64_t v48 = *(int *)(v47 + 20);
            long long v49 = &a1[v48];
            long long v50 = (char *)a2 + v48;
            long long v51 = *((_OWORD *)v50 + 1);
            *(_OWORD *)long long v49 = *(_OWORD *)v50;
            *((_OWORD *)v49 + 1) = v51;
            v49[32] = v50[32];
            a1[*(int *)(v47 + 24)] = *((unsigned char *)a2 + *(int *)(v47 + 24));
            break;
          case 4u:
            uint64_t v52 = type metadata accessor for Location();
            (*(void (**)(char *, char **, uint64_t))(*(void *)(v52 - 8) + 16))(a1, a2, v52);
            uint64_t v53 = (int *)type metadata accessor for MoonDetailViewState();
            uint64_t v54 = v53[5];
            uint64_t v55 = &a1[v54];
            uint64_t v56 = (char *)a2 + v54;
            uint64_t v57 = type metadata accessor for MoonDetailSelectedDate();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, v57))
            {
              uint64_t v58 = sub_10017DF08(&qword_100E67240);
              memcpy(v55, v56, *(void *)(*(void *)(v58 - 8) + 64));
            }
            else
            {
              swift_getEnumCaseMultiPayload();
              uint64_t v165 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v165 - 8) + 16))(v55, v56, v165);
              swift_storeEnumTagMultiPayload();
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v55, 0, 1, v57);
            }
            uint64_t v166 = v53[6];
            uint64_t v167 = &a1[v166];
            uint64_t v168 = (char *)a2 + v166;
            uint64_t v169 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v168, 1, v169))
            {
              uint64_t v170 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v167, v168, *(void *)(*(void *)(v170 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v169 - 8) + 16))(v167, v168, v169);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v167, 0, 1, v169);
            }
            uint64_t v185 = v53[7];
            int v186 = &a1[v185];
            int v187 = (char *)a2 + v185;
            long long v188 = *((_OWORD *)v187 + 1);
            *(_OWORD *)int v186 = *(_OWORD *)v187;
            *((_OWORD *)v186 + 1) = v188;
            v186[32] = v187[32];
            a1[v53[8]] = *((unsigned char *)a2 + v53[8]);
            break;
          case 5u:
            uint64_t v59 = type metadata accessor for Location();
            (*(void (**)(char *, char **, uint64_t))(*(void *)(v59 - 8) + 16))(a1, a2, v59);
            uint64_t v60 = (int *)type metadata accessor for AveragesDetailViewState();
            a1[v60[5]] = *((unsigned char *)a2 + v60[5]);
            uint64_t v61 = v60[6];
            uint64_t v62 = &a1[v61];
            uint64_t v63 = (char **)((char *)a2 + v61);
            uint64_t v64 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 1, (uint64_t)v64))
            {
              uint64_t v65 = sub_10017DF08(&qword_100E6B670);
              memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
            }
            else
            {
              *(void *)uint64_t v62 = *v63;
              uint64_t v171 = v64[5];
              uint64_t v172 = &v62[v171];
              uint64_t v173 = (char *)v63 + v171;
              uint64_t v174 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v174 - 8) + 16))(v172, v173, v174);
              *(void *)&v62[v64[6]] = *(void *)((char *)v63 + v64[6]);
              *(void *)&v62[v64[7]] = *(void *)((char *)v63 + v64[7]);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v62, 0, 1, (uint64_t)v64);
            }
            uint64_t v175 = v60[7];
            size_t v176 = &a1[v175];
            uint64_t v177 = (char *)a2 + v175;
            long long v178 = *((_OWORD *)v177 + 1);
            *(_OWORD *)size_t v176 = *(_OWORD *)v177;
            *((_OWORD *)v176 + 1) = v178;
            v176[32] = v177[32];
            break;
          case 6u:
            uint64_t v66 = type metadata accessor for URL();
            (*(void (**)(char *, char **, uint64_t))(*(void *)(v66 - 8) + 16))(a1, a2, v66);
            break;
          case 7u:
            uint64_t v67 = type metadata accessor for Location();
            (*(void (**)(char *, char **, uint64_t))(*(void *)(v67 - 8) + 16))(a1, a2, v67);
            uint64_t v68 = type metadata accessor for HomeAndWorkRefinementViewState();
            uint64_t v69 = *(int *)(v68 + 20);
            uint64_t v70 = &a1[v69];
            uint64_t v71 = (char *)a2 + v69;
            uint64_t v72 = type metadata accessor for LocationOfInterest();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v70, v71, v72);
            uint64_t v73 = *(int *)(v68 + 24);
            uint64_t v74 = &a1[v73];
            uint64_t v75 = (char *)a2 + v73;
            long long v76 = *((_OWORD *)v75 + 1);
            *(_OWORD *)uint64_t v74 = *(_OWORD *)v75;
            *((_OWORD *)v74 + 1) = v76;
            v74[32] = v75[32];
            break;
          default:
            uint64_t v11 = type metadata accessor for DetailCondition();
            (*(void (**)(char *, char **, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
            uint64_t v12 = (int *)type metadata accessor for ConditionDetailViewState();
            uint64_t v13 = v12[5];
            uint64_t v14 = &a1[v13];
            id v15 = (char *)a2 + v13;
            uint64_t v16 = type metadata accessor for Location();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
            uint64_t v17 = v12[6];
            uint64_t v18 = &a1[v17];
            uint64_t v19 = (char *)a2 + v17;
            uint64_t v20 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20))
            {
              uint64_t v21 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v20);
            }
            uint64_t v156 = v12[7];
            char v157 = &a1[v156];
            uint64_t v158 = (char *)a2 + v156;
            long long v159 = *((_OWORD *)v158 + 1);
            *(_OWORD *)char v157 = *(_OWORD *)v158;
            *((_OWORD *)v157 + 1) = v159;
            v157[32] = v158[32];
            uint64_t v160 = v12[8];
            uint64_t v161 = &a1[v160];
            uint64_t v162 = (char **)((char *)a2 + v160);
            uint64_t v163 = (int *)type metadata accessor for DetailChartSelection();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v162, 1, (uint64_t)v163))
            {
              uint64_t v164 = sub_10017DF08(&qword_100E711F8);
              memcpy(v161, v162, *(void *)(*(void *)(v164 - 8) + 64));
            }
            else
            {
              uint64_t v179 = v162[1];
              *(void *)uint64_t v161 = *v162;
              *((void *)v161 + 1) = v179;
              uint64_t v180 = v163[5];
              uint64_t v355 = (char *)v162 + v180;
              __dstd = &v161[v180];
              uint64_t v181 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
              swift_bridgeObjectRetain();
              v181(__dstd, v355, v20);
              v181(&v161[v163[6]], (char *)v162 + v163[6], v20);
              v181(&v161[v163[7]], (char *)v162 + v163[7], v20);
              *(void *)&v161[v163[8]] = *(void *)((char *)v162 + v163[8]);
              uint64_t v182 = v163[9];
              uint64_t v183 = &v161[v182];
              uint64_t v184 = (char *)v162 + v182;
              v183[8] = v184[8];
              *(void *)uint64_t v183 = *(void *)v184;
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v161, 0, 1, (uint64_t)v163);
            }
            a1[v12[9]] = *((unsigned char *)a2 + v12[9]);
            break;
        }
        swift_storeEnumTagMultiPayload();
LABEL_119:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

void **sub_10093C164(void **a1, void **a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10011D54C((uint64_t)a1, (void (*)(void))type metadata accessor for ModalViewState);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        type metadata accessor for PreviewLocation();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v21 = type metadata accessor for LocationOfInterest();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
            break;
          case 2u:
            uint64_t v22 = *a2;
            *a1 = *a2;
            a1[1] = a2[1];
            a1[2] = a2[2];
            a1[3] = a2[3];
            a1[4] = a2[4];
            a1[5] = a2[5];
            a1[6] = a2[6];
            uint64_t v23 = type metadata accessor for SearchLocation();
            uint64_t v24 = *(int *)(v23 + 32);
            __dst = (char *)a1 + v24;
            uint64_t v25 = (char *)a2 + v24;
            uint64_t v26 = type metadata accessor for Location();
            id v27 = v22;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26))
            {
              uint64_t v28 = sub_10017DF08(&qword_100E639E8);
              memcpy(__dst, v25, *(void *)(*(void *)(v28 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(__dst, v25, v26);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v26);
            }
            uint64_t v83 = *(int *)(v23 + 36);
            long long v84 = (char *)a1 + v83;
            uint64_t v85 = (char *)a2 + v83;
            long long v86 = *(_OWORD *)v85;
            v84[16] = v85[16];
            *(_OWORD *)long long v84 = v86;
            break;
          case 3u:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            a1[2] = a2[2];
            a1[3] = a2[3];
            swift_bridgeObjectRetain();
            break;
          default:
            uint64_t v6 = type metadata accessor for Location();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
            break;
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v87 = *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20);
        long long v88 = (void **)((char *)a1 + v87);
        uint64_t v89 = (void **)((char *)a2 + v87);
        uint64_t v90 = type metadata accessor for LocationPreviewModalViewState(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v91 = type metadata accessor for URL();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v91 - 8) + 16))(v88, v89, v91);
            goto LABEL_79;
          case 1u:
            uint64_t v92 = type metadata accessor for DetailCondition();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v92 - 8) + 16))(v88, v89, v92);
            uint64_t v93 = (int *)type metadata accessor for ConditionDetailViewState();
            uint64_t v94 = v93[5];
            uint64_t v95 = (char *)v88 + v94;
            uint64_t v96 = (char *)v89 + v94;
            uint64_t v97 = type metadata accessor for Location();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 16))(v95, v96, v97);
            uint64_t v98 = v93[6];
            uint64_t v99 = (char *)v88 + v98;
            uint64_t v100 = (char *)v89 + v98;
            uint64_t v101 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v100, 1, v101))
            {
              uint64_t v102 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v99, v100, *(void *)(*(void *)(v102 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 16))(v99, v100, v101);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v99, 0, 1, v101);
            }
            uint64_t v189 = v93[7];
            uint64_t v190 = (char *)v88 + v189;
            uint64_t v191 = (char *)v89 + v189;
            long long v192 = *(_OWORD *)v191;
            long long v193 = *((_OWORD *)v191 + 1);
            v190[32] = v191[32];
            *(_OWORD *)uint64_t v190 = v192;
            *((_OWORD *)v190 + 1) = v193;
            uint64_t v194 = v93[8];
            uint64_t v195 = (void *)((char *)v88 + v194);
            uint64_t v196 = (void *)((char *)v89 + v194);
            uint64_t v197 = (int *)type metadata accessor for DetailChartSelection();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v196, 1, (uint64_t)v197))
            {
              uint64_t v198 = sub_10017DF08(&qword_100E711F8);
              memcpy(v195, v196, *(void *)(*(void *)(v198 - 8) + 64));
            }
            else
            {
              *uint64_t v195 = *v196;
              v195[1] = v196[1];
              uint64_t v225 = v197[5];
              v356 = (char *)v196 + v225;
              int v362 = (char *)v195 + v225;
              uint64_t v226 = *(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 16);
              swift_bridgeObjectRetain();
              v226(v362, v356, v101);
              v226((char *)v195 + v197[6], (char *)v196 + v197[6], v101);
              v226((char *)v195 + v197[7], (char *)v196 + v197[7], v101);
              *(void *)((char *)v195 + v197[8]) = *(void *)((char *)v196 + v197[8]);
              uint64_t v227 = v197[9];
              uint64_t v228 = (char *)v195 + v227;
              uint64_t v229 = (char *)v196 + v227;
              char v230 = v229[8];
              *(void *)uint64_t v228 = *(void *)v229;
              v228[8] = v230;
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v195, 0, 1, (uint64_t)v197);
            }
            *((unsigned char *)v88 + v93[9]) = *((unsigned char *)v89 + v93[9]);
            goto LABEL_79;
          case 2u:
            uint64_t v103 = type metadata accessor for Location();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v103 - 8) + 16))(v88, v89, v103);
            uint64_t v104 = type metadata accessor for AirQualityDetailViewState();
            *((unsigned char *)v88 + *(int *)(v104 + 20)) = *((unsigned char *)v89 + *(int *)(v104 + 20));
            uint64_t v105 = *(int *)(v104 + 24);
            uint64_t v106 = (char *)v88 + v105;
            uint64_t v107 = (char *)v89 + v105;
            char v108 = v107[32];
            long long v109 = *((_OWORD *)v107 + 1);
            *(_OWORD *)uint64_t v106 = *(_OWORD *)v107;
            *((_OWORD *)v106 + 1) = v109;
            v106[32] = v108;
            goto LABEL_79;
          case 3u:
            uint64_t v110 = type metadata accessor for Location();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v110 - 8) + 16))(v88, v89, v110);
            uint64_t v111 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
            uint64_t v112 = (char *)v88 + v111;
            long long v113 = (char *)v89 + v111;
            long long v114 = *(_OWORD *)v113;
            long long v115 = *((_OWORD *)v113 + 1);
            v112[32] = v113[32];
            *(_OWORD *)uint64_t v112 = v114;
            *((_OWORD *)v112 + 1) = v115;
            goto LABEL_79;
          case 4u:
            uint64_t v116 = type metadata accessor for Location();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v116 - 8) + 16))(v88, v89, v116);
            uint64_t v117 = type metadata accessor for SunriseSunsetDetailViewState();
            uint64_t v118 = *(int *)(v117 + 20);
            uint64_t v119 = (char *)v88 + v118;
            uint64_t v120 = (char *)v89 + v118;
            long long v121 = *(_OWORD *)v120;
            long long v122 = *((_OWORD *)v120 + 1);
            v119[32] = v120[32];
            *(_OWORD *)uint64_t v119 = v121;
            *((_OWORD *)v119 + 1) = v122;
            *((unsigned char *)v88 + *(int *)(v117 + 24)) = *((unsigned char *)v89 + *(int *)(v117 + 24));
            goto LABEL_79;
          case 5u:
            uint64_t v123 = type metadata accessor for Location();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v123 - 8) + 16))(v88, v89, v123);
            long long v124 = (int *)type metadata accessor for MoonDetailViewState();
            uint64_t v125 = v124[5];
            char v126 = (char *)v88 + v125;
            uint64_t v127 = (char *)v89 + v125;
            uint64_t v128 = type metadata accessor for MoonDetailSelectedDate();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v127, 1, v128))
            {
              uint64_t v129 = sub_10017DF08(&qword_100E67240);
              memcpy(v126, v127, *(void *)(*(void *)(v129 - 8) + 64));
            }
            else
            {
              swift_getEnumCaseMultiPayload();
              uint64_t v199 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v199 - 8) + 16))(v126, v127, v199);
              swift_storeEnumTagMultiPayload();
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v126, 0, 1, v128);
            }
            uint64_t v200 = v124[6];
            uint64_t v201 = (char *)v88 + v200;
            uint64_t v202 = (char *)v89 + v200;
            uint64_t v203 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v202, 1, v203))
            {
              uint64_t v204 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v201, v202, *(void *)(*(void *)(v204 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v203 - 8) + 16))(v201, v202, v203);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v201, 0, 1, v203);
            }
            uint64_t v231 = v124[7];
            uint64_t v232 = (char *)v88 + v231;
            uint64_t v233 = (char *)v89 + v231;
            long long v234 = *(_OWORD *)v233;
            long long v235 = *((_OWORD *)v233 + 1);
            v232[32] = v233[32];
            *(_OWORD *)uint64_t v232 = v234;
            *((_OWORD *)v232 + 1) = v235;
            *((unsigned char *)v88 + v124[8]) = *((unsigned char *)v89 + v124[8]);
            goto LABEL_79;
          case 6u:
            *long long v88 = *v89;
            v88[1] = v89[1];
            v88[2] = v89[2];
            uint64_t v88[3] = v89[3];
            uint64_t v130 = (int *)type metadata accessor for NewsArticle();
            uint64_t v131 = v130[6];
            uint64_t v359 = (char *)v88 + v131;
            uint64_t v132 = (char *)v89 + v131;
            uint64_t v133 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v132, 1, v133))
            {
              uint64_t v134 = sub_10017DF08(&qword_100E749B0);
              memcpy(v359, v132, *(void *)(*(void *)(v134 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 16))(v359, v132, v133);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v359, 0, 1, v133);
            }
            uint64_t v205 = v130[7];
            uint64_t v206 = (char *)v88 + v205;
            uint64_t v207 = (char *)v89 + v205;
            uint64_t v208 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v208 - 8) + 16))(v206, v207, v208);
            uint64_t v361 = *(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 16);
            v361((char *)v88 + v130[8], (char *)v89 + v130[8], v133);
            uint64_t v209 = v130[9];
            uint64_t v210 = (void *)((char *)v88 + v209);
            uint64_t v211 = (char *)v89 + v209;
            *uint64_t v210 = *(void *)((char *)v89 + v209);
            v210[1] = *(void *)((char *)v89 + v209 + 8);
            v210[2] = *(void *)((char *)v89 + v209 + 16);
            v210[3] = *(void *)((char *)v89 + v209 + 24);
            uint64_t v212 = *(int *)(type metadata accessor for NewsChannel() + 24);
            uint64_t v213 = (char *)v210 + v212;
            uint64_t v214 = &v211[v212];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v214, 1, v133))
            {
              uint64_t v215 = sub_10017DF08(&qword_100E749B0);
              memcpy(v213, v214, *(void *)(*(void *)(v215 - 8) + 64));
            }
            else
            {
              v361(v213, v214, v133);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v213, 0, 1, v133);
            }
            *(void *)((char *)v88 + v130[10]) = *(void *)((char *)v89 + v130[10]);
            *(void *)((char *)v88 + v130[11]) = *(void *)((char *)v89 + v130[11]);
            *(void *)((char *)v88 + v130[12]) = *(void *)((char *)v89 + v130[12]);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_79;
          case 7u:
            uint64_t v135 = type metadata accessor for Location();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v135 - 8) + 16))(v88, v89, v135);
            uint64_t v136 = (int *)type metadata accessor for AveragesDetailViewState();
            *((unsigned char *)v88 + v136[5]) = *((unsigned char *)v89 + v136[5]);
            uint64_t v137 = v136[6];
            uint64_t v138 = (void *)((char *)v88 + v137);
            uint64_t v139 = (void *)((char *)v89 + v137);
            uint64_t v140 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v139, 1, (uint64_t)v140))
            {
              uint64_t v141 = sub_10017DF08(&qword_100E6B670);
              memcpy(v138, v139, *(void *)(*(void *)(v141 - 8) + 64));
            }
            else
            {
              void *v138 = *v139;
              uint64_t v216 = v140[5];
              uint64_t v217 = (char *)v138 + v216;
              uint64_t v218 = (char *)v139 + v216;
              uint64_t v219 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v219 - 8) + 16))(v217, v218, v219);
              *(void *)((char *)v138 + v140[6]) = *(void *)((char *)v139 + v140[6]);
              *(void *)((char *)v138 + v140[7]) = *(void *)((char *)v139 + v140[7]);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v138, 0, 1, (uint64_t)v140);
            }
            uint64_t v220 = v136[7];
            uint64_t v221 = (char *)v88 + v220;
            uint64_t v222 = (char *)v89 + v220;
            long long v223 = *(_OWORD *)v222;
            long long v224 = *((_OWORD *)v222 + 1);
            v221[32] = v222[32];
            *(_OWORD *)uint64_t v221 = v223;
            *((_OWORD *)v221 + 1) = v224;
            goto LABEL_79;
          case 8u:
            uint64_t v142 = type metadata accessor for Location();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v142 - 8) + 16))(v88, v89, v142);
            uint64_t v143 = type metadata accessor for HomeAndWorkRefinementViewState();
            uint64_t v144 = *(int *)(v143 + 20);
            uint64_t v145 = (char *)v88 + v144;
            uint64_t v146 = (char *)v89 + v144;
            uint64_t v147 = type metadata accessor for LocationOfInterest();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 16))(v145, v146, v147);
            uint64_t v148 = *(int *)(v143 + 24);
            uint64_t v149 = (char *)v88 + v148;
            uint64_t v150 = (char *)v89 + v148;
            long long v151 = *(_OWORD *)v150;
            long long v152 = *((_OWORD *)v150 + 1);
            v149[32] = v150[32];
            *(_OWORD *)uint64_t v149 = v151;
            *((_OWORD *)v149 + 1) = v152;
LABEL_79:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v88, v89, *(void *)(*(void *)(v90 - 8) + 64));
            break;
        }
        goto LABEL_118;
      case 2u:
      case 3u:
        *a1 = *a2;
        swift_retain();
        goto LABEL_118;
      case 4u:
        uint64_t v7 = type metadata accessor for ModalViewState.MapViewModal(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
        {
          uint64_t v8 = sub_10017DF08(&qword_100E663E8);
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        }
        else
        {
          type metadata accessor for PreviewLocation();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v75 = type metadata accessor for LocationOfInterest();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v75 - 8) + 16))(a1, a2, v75);
              goto LABEL_31;
            case 2u:
              __dsta = (void *)v7;
              long long v76 = *a2;
              *a1 = *a2;
              a1[1] = a2[1];
              a1[2] = a2[2];
              a1[3] = a2[3];
              a1[4] = a2[4];
              a1[5] = a2[5];
              a1[6] = a2[6];
              uint64_t v77 = type metadata accessor for SearchLocation();
              uint64_t v78 = *(int *)(v77 + 32);
              uint64_t v358 = (char *)a1 + v78;
              uint64_t v79 = (char *)a2 + v78;
              uint64_t v80 = type metadata accessor for Location();
              id v81 = v76;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v79, 1, v80))
              {
                uint64_t v82 = sub_10017DF08(&qword_100E639E8);
                memcpy(v358, v79, *(void *)(*(void *)(v82 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16))(v358, v79, v80);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v358, 0, 1, v80);
              }
              uint64_t v236 = *(int *)(v77 + 36);
              uint64_t v237 = (char *)a1 + v236;
              uint64_t v238 = (char *)a2 + v236;
              long long v239 = *(_OWORD *)v238;
              v237[16] = v238[16];
              *(_OWORD *)uint64_t v237 = v239;
              swift_storeEnumTagMultiPayload();
              uint64_t v7 = (uint64_t)__dsta;
              goto LABEL_83;
            case 3u:
              *(_OWORD *)a1 = *(_OWORD *)a2;
              a1[2] = a2[2];
              a1[3] = a2[3];
              swift_bridgeObjectRetain();
              goto LABEL_31;
            default:
              uint64_t v20 = type metadata accessor for Location();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
LABEL_31:
              swift_storeEnumTagMultiPayload();
LABEL_83:
              uint64_t v240 = *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20);
              uint64_t v241 = (void **)((char *)a1 + v240);
              uint64_t v242 = (void **)((char *)a2 + v240);
              uint64_t v243 = type metadata accessor for LocationPreviewModalViewState(0);
              switch(swift_getEnumCaseMultiPayload())
              {
                case 0u:
                  uint64_t v244 = type metadata accessor for URL();
                  (*(void (**)(void *, void *, uint64_t))(*(void *)(v244 - 8) + 16))(v241, v242, v244);
                  goto LABEL_116;
                case 1u:
                  __dstb = (void *)v7;
                  uint64_t v245 = type metadata accessor for DetailCondition();
                  (*(void (**)(void *, void *, uint64_t))(*(void *)(v245 - 8) + 16))(v241, v242, v245);
                  uint64_t v246 = type metadata accessor for ConditionDetailViewState();
                  uint64_t v247 = *(int *)(v246 + 20);
                  uint64_t v248 = (char *)v241 + v247;
                  uint64_t v249 = (char *)v242 + v247;
                  uint64_t v250 = type metadata accessor for Location();
                  uint64_t v251 = v248;
                  uint64_t v252 = (int *)v246;
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v250 - 8) + 16))(v251, v249, v250);
                  uint64_t v253 = *(int *)(v246 + 24);
                  uint64_t v254 = (char *)v241 + v253;
                  uint64_t v255 = (char *)v242 + v253;
                  uint64_t v256 = type metadata accessor for Date();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v255, 1, v256))
                  {
                    uint64_t v257 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                    memcpy(v254, v255, *(void *)(*(void *)(v257 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v256 - 8) + 16))(v254, v255, v256);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v254, 0, 1, v256);
                  }
                  uint64_t v308 = v252[7];
                  uint64_t v309 = (char *)v241 + v308;
                  uint64_t v310 = (char *)v242 + v308;
                  long long v311 = *(_OWORD *)v310;
                  long long v312 = *((_OWORD *)v310 + 1);
                  v309[32] = v310[32];
                  *(_OWORD *)uint64_t v309 = v311;
                  *((_OWORD *)v309 + 1) = v312;
                  uint64_t v313 = v252[8];
                  uint64_t v314 = (void *)((char *)v241 + v313);
                  id v315 = (void *)((char *)v242 + v313);
                  v316 = (int *)type metadata accessor for DetailChartSelection();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v315, 1, (uint64_t)v316))
                  {
                    uint64_t v317 = sub_10017DF08(&qword_100E711F8);
                    memcpy(v314, v315, *(void *)(*(void *)(v317 - 8) + 64));
                  }
                  else
                  {
                    void *v314 = *v315;
                    v314[1] = v315[1];
                    uint64_t v332 = v316[5];
                    uint64_t v355 = (char *)v315 + v332;
                    v357 = (char *)v314 + v332;
                    uint64_t v333 = *(void (**)(char *, char *, uint64_t))(*(void *)(v256 - 8) + 16);
                    swift_bridgeObjectRetain();
                    v333(v357, v355, v256);
                    v333((char *)v314 + v316[6], (char *)v315 + v316[6], v256);
                    v333((char *)v314 + v316[7], (char *)v315 + v316[7], v256);
                    *(void *)((char *)v314 + v316[8]) = *(void *)((char *)v315 + v316[8]);
                    uint64_t v334 = v316[9];
                    uint64_t v335 = (char *)v314 + v334;
                    uint64_t v336 = (char *)v315 + v334;
                    char v337 = v336[8];
                    *(void *)uint64_t v335 = *(void *)v336;
                    v335[8] = v337;
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v314, 0, 1, (uint64_t)v316);
                  }
                  *((unsigned char *)v241 + v252[9]) = *((unsigned char *)v242 + v252[9]);
                  goto LABEL_110;
                case 2u:
                  uint64_t v258 = type metadata accessor for Location();
                  (*(void (**)(void *, void *, uint64_t))(*(void *)(v258 - 8) + 16))(v241, v242, v258);
                  uint64_t v259 = type metadata accessor for AirQualityDetailViewState();
                  *((unsigned char *)v241 + *(int *)(v259 + 20)) = *((unsigned char *)v242 + *(int *)(v259 + 20));
                  uint64_t v260 = *(int *)(v259 + 24);
                  long long v261 = (char *)v241 + v260;
                  uint64_t v262 = (char *)v242 + v260;
                  char v263 = v262[32];
                  long long v264 = *((_OWORD *)v262 + 1);
                  *(_OWORD *)long long v261 = *(_OWORD *)v262;
                  *((_OWORD *)v261 + 1) = v264;
                  v261[32] = v263;
                  goto LABEL_116;
                case 3u:
                  uint64_t v265 = type metadata accessor for Location();
                  (*(void (**)(void *, void *, uint64_t))(*(void *)(v265 - 8) + 16))(v241, v242, v265);
                  uint64_t v266 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
                  uint64_t v267 = (char *)v241 + v266;
                  uint64_t v268 = (char *)v242 + v266;
                  long long v269 = *(_OWORD *)v268;
                  long long v270 = *((_OWORD *)v268 + 1);
                  v267[32] = v268[32];
                  *(_OWORD *)uint64_t v267 = v269;
                  *((_OWORD *)v267 + 1) = v270;
                  goto LABEL_116;
                case 4u:
                  uint64_t v271 = type metadata accessor for Location();
                  (*(void (**)(void *, void *, uint64_t))(*(void *)(v271 - 8) + 16))(v241, v242, v271);
                  uint64_t v272 = type metadata accessor for SunriseSunsetDetailViewState();
                  uint64_t v273 = *(int *)(v272 + 20);
                  uint64_t v274 = (char *)v241 + v273;
                  uint64_t v275 = (char *)v242 + v273;
                  long long v276 = *(_OWORD *)v275;
                  long long v277 = *((_OWORD *)v275 + 1);
                  v274[32] = v275[32];
                  *(_OWORD *)uint64_t v274 = v276;
                  *((_OWORD *)v274 + 1) = v277;
                  *((unsigned char *)v241 + *(int *)(v272 + 24)) = *((unsigned char *)v242 + *(int *)(v272 + 24));
                  goto LABEL_116;
                case 5u:
                  __dstb = (void *)v7;
                  uint64_t v278 = type metadata accessor for Location();
                  (*(void (**)(void *, void *, uint64_t))(*(void *)(v278 - 8) + 16))(v241, v242, v278);
                  uint64_t v279 = (int *)type metadata accessor for MoonDetailViewState();
                  uint64_t v280 = v279[5];
                  uint64_t v281 = (char *)v241 + v280;
                  uint64_t v282 = (char *)v242 + v280;
                  uint64_t v283 = type metadata accessor for MoonDetailSelectedDate();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v282, 1, v283))
                  {
                    uint64_t v284 = sub_10017DF08(&qword_100E67240);
                    memcpy(v281, v282, *(void *)(*(void *)(v284 - 8) + 64));
                  }
                  else
                  {
                    swift_getEnumCaseMultiPayload();
                    uint64_t v318 = type metadata accessor for Date();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v318 - 8) + 16))(v281, v282, v318);
                    swift_storeEnumTagMultiPayload();
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v281, 0, 1, v283);
                  }
                  uint64_t v319 = v279[6];
                  v320 = (char *)v241 + v319;
                  v321 = (char *)v242 + v319;
                  uint64_t v322 = type metadata accessor for Date();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v321, 1, v322))
                  {
                    uint64_t v323 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                    memcpy(v320, v321, *(void *)(*(void *)(v323 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v322 - 8) + 16))(v320, v321, v322);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v320, 0, 1, v322);
                  }
                  uint64_t v338 = v279[7];
                  long long v339 = (char *)v241 + v338;
                  uint64_t v340 = (char *)v242 + v338;
                  long long v341 = *(_OWORD *)v340;
                  long long v342 = *((_OWORD *)v340 + 1);
                  v339[32] = v340[32];
                  *(_OWORD *)long long v339 = v341;
                  *((_OWORD *)v339 + 1) = v342;
                  *((unsigned char *)v241 + v279[8]) = *((unsigned char *)v242 + v279[8]);
                  goto LABEL_110;
                case 6u:
                  __dstc = (void *)v7;
                  *uint64_t v241 = *v242;
                  v241[1] = v242[1];
                  v241[2] = v242[2];
                  v241[3] = v242[3];
                  uint64_t v285 = (int *)type metadata accessor for NewsArticle();
                  uint64_t v286 = v285[6];
                  uint64_t v363 = (char *)v241 + v286;
                  uint64_t v287 = (char *)v242 + v286;
                  uint64_t v288 = type metadata accessor for URL();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v287, 1, v288))
                  {
                    uint64_t v289 = sub_10017DF08(&qword_100E749B0);
                    memcpy(v363, v287, *(void *)(*(void *)(v289 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v288 - 8) + 16))(v363, v287, v288);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v363, 0, 1, v288);
                  }
                  uint64_t v343 = v285[7];
                  uint64_t v344 = (char *)v241 + v343;
                  uint64_t v345 = (char *)v242 + v343;
                  uint64_t v346 = type metadata accessor for Date();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v346 - 8) + 16))(v344, v345, v346);
                  uint64_t v365 = *(void (**)(char *, char *, uint64_t))(*(void *)(v288 - 8) + 16);
                  v365((char *)v241 + v285[8], (char *)v242 + v285[8], v288);
                  uint64_t v347 = v285[9];
                  uint64_t v348 = (void *)((char *)v241 + v347);
                  long long v349 = (char *)v242 + v347;
                  *uint64_t v348 = *(void *)((char *)v242 + v347);
                  v348[1] = *(void *)((char *)v242 + v347 + 8);
                  v348[2] = *(void *)((char *)v242 + v347 + 16);
                  v348[3] = *(void *)((char *)v242 + v347 + 24);
                  uint64_t v350 = *(int *)(type metadata accessor for NewsChannel() + 24);
                  uint64_t v351 = (char *)v348 + v350;
                  uint64_t v352 = &v349[v350];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v352, 1, v288))
                  {
                    uint64_t v353 = sub_10017DF08(&qword_100E749B0);
                    memcpy(v351, v352, *(void *)(*(void *)(v353 - 8) + 64));
                  }
                  else
                  {
                    v365(v351, v352, v288);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v351, 0, 1, v288);
                  }
                  uint64_t v7 = (uint64_t)__dstc;
                  *(void *)((char *)v241 + v285[10]) = *(void *)((char *)v242 + v285[10]);
                  *(void *)((char *)v241 + v285[11]) = *(void *)((char *)v242 + v285[11]);
                  *(void *)((char *)v241 + v285[12]) = *(void *)((char *)v242 + v285[12]);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  goto LABEL_116;
                case 7u:
                  __dstb = (void *)v7;
                  uint64_t v290 = type metadata accessor for Location();
                  (*(void (**)(void *, void *, uint64_t))(*(void *)(v290 - 8) + 16))(v241, v242, v290);
                  uint64_t v291 = (int *)type metadata accessor for AveragesDetailViewState();
                  *((unsigned char *)v241 + v291[5]) = *((unsigned char *)v242 + v291[5]);
                  uint64_t v292 = v291[6];
                  uint64_t v293 = (void *)((char *)v241 + v292);
                  uint64_t v294 = (void *)((char *)v242 + v292);
                  uint64_t v295 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v294, 1, (uint64_t)v295))
                  {
                    uint64_t v296 = sub_10017DF08(&qword_100E6B670);
                    memcpy(v293, v294, *(void *)(*(void *)(v296 - 8) + 64));
                  }
                  else
                  {
                    *uint64_t v293 = *v294;
                    uint64_t v324 = v295[5];
                    uint64_t v325 = (char *)v293 + v324;
                    uint64_t v364 = (char *)v294 + v324;
                    uint64_t v326 = type metadata accessor for Date();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v326 - 8) + 16))(v325, v364, v326);
                    *(void *)((char *)v293 + v295[6]) = *(void *)((char *)v294 + v295[6]);
                    *(void *)((char *)v293 + v295[7]) = *(void *)((char *)v294 + v295[7]);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v293, 0, 1, (uint64_t)v295);
                  }
                  uint64_t v327 = v291[7];
                  uint64_t v328 = (char *)v241 + v327;
                  uint64_t v329 = (char *)v242 + v327;
                  long long v330 = *(_OWORD *)v329;
                  long long v331 = *((_OWORD *)v329 + 1);
                  v328[32] = v329[32];
                  *(_OWORD *)uint64_t v328 = v330;
                  *((_OWORD *)v328 + 1) = v331;
LABEL_110:
                  swift_storeEnumTagMultiPayload();
                  uint64_t v7 = (uint64_t)__dstb;
                  break;
                case 8u:
                  uint64_t v297 = type metadata accessor for Location();
                  (*(void (**)(void *, void *, uint64_t))(*(void *)(v297 - 8) + 16))(v241, v242, v297);
                  uint64_t v298 = type metadata accessor for HomeAndWorkRefinementViewState();
                  uint64_t v299 = *(int *)(v298 + 20);
                  uint64_t v300 = (char *)v241 + v299;
                  uint64_t v301 = (char *)v242 + v299;
                  uint64_t v302 = type metadata accessor for LocationOfInterest();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v302 - 8) + 16))(v300, v301, v302);
                  uint64_t v303 = *(int *)(v298 + 24);
                  uint64_t v304 = (char *)v241 + v303;
                  uint64_t v305 = (char *)v242 + v303;
                  long long v306 = *(_OWORD *)v305;
                  long long v307 = *((_OWORD *)v305 + 1);
                  v304[32] = v305[32];
                  *(_OWORD *)uint64_t v304 = v306;
                  *((_OWORD *)v304 + 1) = v307;
LABEL_116:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v241, v242, *(void *)(*(void *)(v243 - 8) + 64));
                  break;
              }
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
              break;
          }
        }
        goto LABEL_118;
      case 5u:
        type metadata accessor for ModalViewState.LocationDetailModal(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v29 = type metadata accessor for Location();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v29 - 8) + 16))(a1, a2, v29);
            uint64_t v30 = type metadata accessor for AirQualityDetailViewState();
            *((unsigned char *)a1 + *(int *)(v30 + 20)) = *((unsigned char *)a2 + *(int *)(v30 + 20));
            uint64_t v31 = *(int *)(v30 + 24);
            uint64_t v32 = (char *)a1 + v31;
            uint64_t v33 = (char *)a2 + v31;
            char v34 = v33[32];
            long long v35 = *((_OWORD *)v33 + 1);
            *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
            *((_OWORD *)v32 + 1) = v35;
            v32[32] = v34;
            break;
          case 2u:
            uint64_t v36 = type metadata accessor for Location();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v36 - 8) + 16))(a1, a2, v36);
            uint64_t v37 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
            long long v38 = (char *)a1 + v37;
            long long v39 = (char *)a2 + v37;
            long long v40 = *(_OWORD *)v39;
            long long v41 = *((_OWORD *)v39 + 1);
            v38[32] = v39[32];
            *(_OWORD *)long long v38 = v40;
            *((_OWORD *)v38 + 1) = v41;
            break;
          case 3u:
            uint64_t v42 = type metadata accessor for Location();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v42 - 8) + 16))(a1, a2, v42);
            uint64_t v43 = type metadata accessor for SunriseSunsetDetailViewState();
            uint64_t v44 = *(int *)(v43 + 20);
            long long v45 = (char *)a1 + v44;
            uint64_t v46 = (char *)a2 + v44;
            long long v47 = *(_OWORD *)v46;
            long long v48 = *((_OWORD *)v46 + 1);
            v45[32] = v46[32];
            *(_OWORD *)long long v45 = v47;
            *((_OWORD *)v45 + 1) = v48;
            *((unsigned char *)a1 + *(int *)(v43 + 24)) = *((unsigned char *)a2 + *(int *)(v43 + 24));
            break;
          case 4u:
            uint64_t v49 = type metadata accessor for Location();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v49 - 8) + 16))(a1, a2, v49);
            long long v50 = (int *)type metadata accessor for MoonDetailViewState();
            uint64_t v51 = v50[5];
            uint64_t v52 = (char *)a1 + v51;
            uint64_t v53 = (char *)a2 + v51;
            uint64_t v54 = type metadata accessor for MoonDetailSelectedDate();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v54))
            {
              uint64_t v55 = sub_10017DF08(&qword_100E67240);
              memcpy(v52, v53, *(void *)(*(void *)(v55 - 8) + 64));
            }
            else
            {
              swift_getEnumCaseMultiPayload();
              uint64_t v163 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v163 - 8) + 16))(v52, v53, v163);
              swift_storeEnumTagMultiPayload();
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v54);
            }
            uint64_t v164 = v50[6];
            uint64_t v165 = (char *)a1 + v164;
            uint64_t v166 = (char *)a2 + v164;
            uint64_t v167 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v166, 1, v167))
            {
              uint64_t v168 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v165, v166, *(void *)(*(void *)(v168 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v167 - 8) + 16))(v165, v166, v167);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v165, 0, 1, v167);
            }
            uint64_t v184 = v50[7];
            uint64_t v185 = (char *)a1 + v184;
            int v186 = (char *)a2 + v184;
            long long v187 = *(_OWORD *)v186;
            long long v188 = *((_OWORD *)v186 + 1);
            v185[32] = v186[32];
            *(_OWORD *)uint64_t v185 = v187;
            *((_OWORD *)v185 + 1) = v188;
            *((unsigned char *)a1 + v50[8]) = *((unsigned char *)a2 + v50[8]);
            break;
          case 5u:
            uint64_t v56 = type metadata accessor for Location();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v56 - 8) + 16))(a1, a2, v56);
            uint64_t v57 = (int *)type metadata accessor for AveragesDetailViewState();
            *((unsigned char *)a1 + v57[5]) = *((unsigned char *)a2 + v57[5]);
            uint64_t v58 = v57[6];
            uint64_t v59 = (void **)((char *)a1 + v58);
            uint64_t v60 = (void **)((char *)a2 + v58);
            uint64_t v61 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, (uint64_t)v61))
            {
              uint64_t v62 = sub_10017DF08(&qword_100E6B670);
              memcpy(v59, v60, *(void *)(*(void *)(v62 - 8) + 64));
            }
            else
            {
              void *v59 = *v60;
              uint64_t v169 = v61[5];
              uint64_t v170 = (char *)v59 + v169;
              uint64_t v171 = (char *)v60 + v169;
              uint64_t v172 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v172 - 8) + 16))(v170, v171, v172);
              *(void *)((char *)v59 + v61[6]) = *(void *)((char *)v60 + v61[6]);
              *(void *)((char *)v59 + v61[7]) = *(void *)((char *)v60 + v61[7]);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, 0, 1, (uint64_t)v61);
            }
            uint64_t v173 = v57[7];
            uint64_t v174 = (char *)a1 + v173;
            uint64_t v175 = (char *)a2 + v173;
            long long v176 = *(_OWORD *)v175;
            long long v177 = *((_OWORD *)v175 + 1);
            v174[32] = v175[32];
            *(_OWORD *)uint64_t v174 = v176;
            *((_OWORD *)v174 + 1) = v177;
            break;
          case 6u:
            uint64_t v63 = type metadata accessor for URL();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v63 - 8) + 16))(a1, a2, v63);
            break;
          case 7u:
            uint64_t v64 = type metadata accessor for Location();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v64 - 8) + 16))(a1, a2, v64);
            uint64_t v65 = type metadata accessor for HomeAndWorkRefinementViewState();
            uint64_t v66 = *(int *)(v65 + 20);
            uint64_t v67 = (char *)a1 + v66;
            uint64_t v68 = (char *)a2 + v66;
            uint64_t v69 = type metadata accessor for LocationOfInterest();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v67, v68, v69);
            uint64_t v70 = *(int *)(v65 + 24);
            uint64_t v71 = (char *)a1 + v70;
            uint64_t v72 = (char *)a2 + v70;
            long long v73 = *(_OWORD *)v72;
            long long v74 = *((_OWORD *)v72 + 1);
            v71[32] = v72[32];
            *(_OWORD *)uint64_t v71 = v73;
            *((_OWORD *)v71 + 1) = v74;
            break;
          default:
            uint64_t v9 = type metadata accessor for DetailCondition();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
            uint64_t v10 = (int *)type metadata accessor for ConditionDetailViewState();
            uint64_t v11 = v10[5];
            uint64_t v12 = (char *)a1 + v11;
            uint64_t v13 = (char *)a2 + v11;
            uint64_t v14 = type metadata accessor for Location();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
            uint64_t v15 = v10[6];
            uint64_t v16 = (char *)a1 + v15;
            uint64_t v17 = (char *)a2 + v15;
            uint64_t v18 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
            {
              uint64_t v19 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
            }
            uint64_t v153 = v10[7];
            uint64_t v154 = (char *)a1 + v153;
            long long v155 = (char *)a2 + v153;
            long long v156 = *(_OWORD *)v155;
            long long v157 = *((_OWORD *)v155 + 1);
            v154[32] = v155[32];
            *(_OWORD *)uint64_t v154 = v156;
            *((_OWORD *)v154 + 1) = v157;
            uint64_t v158 = v10[8];
            long long v159 = (void **)((char *)a1 + v158);
            uint64_t v160 = (void **)((char *)a2 + v158);
            uint64_t v161 = (int *)type metadata accessor for DetailChartSelection();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v160, 1, (uint64_t)v161))
            {
              uint64_t v162 = sub_10017DF08(&qword_100E711F8);
              memcpy(v159, v160, *(void *)(*(void *)(v162 - 8) + 64));
            }
            else
            {
              void *v159 = *v160;
              v159[1] = v160[1];
              uint64_t v178 = v161[5];
              uint64_t v360 = (char *)v160 + v178;
              __dstd = (char *)v159 + v178;
              uint64_t v179 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
              swift_bridgeObjectRetain();
              v179(__dstd, v360, v18);
              v179((char *)v159 + v161[6], (char *)v160 + v161[6], v18);
              v179((char *)v159 + v161[7], (char *)v160 + v161[7], v18);
              *(void *)((char *)v159 + v161[8]) = *(void *)((char *)v160 + v161[8]);
              uint64_t v180 = v161[9];
              uint64_t v181 = (char *)v159 + v180;
              uint64_t v182 = (char *)v160 + v180;
              char v183 = v182[8];
              *(void *)uint64_t v181 = *(void *)v182;
              v181[8] = v183;
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v159, 0, 1, (uint64_t)v161);
            }
            *((unsigned char *)a1 + v10[9]) = *((unsigned char *)a2 + v10[9]);
            break;
        }
        swift_storeEnumTagMultiPayload();
LABEL_118:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void *sub_10093E784(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 5:
      type metadata accessor for ModalViewState.LocationDetailModal(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v33 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 32))(a1, a2, v33);
          uint64_t v34 = type metadata accessor for AirQualityDetailViewState();
          *((unsigned char *)a1 + *(int *)(v34 + 20)) = *((unsigned char *)a2 + *(int *)(v34 + 20));
          uint64_t v35 = *(int *)(v34 + 24);
          uint64_t v36 = (char *)a1 + v35;
          uint64_t v37 = (char *)a2 + v35;
          v36[32] = v37[32];
          long long v38 = *((_OWORD *)v37 + 1);
          *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
          *((_OWORD *)v36 + 1) = v38;
          break;
        case 2u:
          uint64_t v39 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v39 - 8) + 32))(a1, a2, v39);
          uint64_t v40 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
          long long v41 = (char *)a1 + v40;
          uint64_t v42 = (char *)a2 + v40;
          long long v43 = *((_OWORD *)v42 + 1);
          *(_OWORD *)long long v41 = *(_OWORD *)v42;
          *((_OWORD *)v41 + 1) = v43;
          v41[32] = v42[32];
          break;
        case 3u:
          uint64_t v44 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v44 - 8) + 32))(a1, a2, v44);
          uint64_t v45 = type metadata accessor for SunriseSunsetDetailViewState();
          uint64_t v46 = *(int *)(v45 + 20);
          long long v47 = (char *)a1 + v46;
          long long v48 = (char *)a2 + v46;
          long long v49 = *((_OWORD *)v48 + 1);
          *(_OWORD *)long long v47 = *(_OWORD *)v48;
          *((_OWORD *)v47 + 1) = v49;
          v47[32] = v48[32];
          *((unsigned char *)a1 + *(int *)(v45 + 24)) = *((unsigned char *)a2 + *(int *)(v45 + 24));
          break;
        case 4u:
          uint64_t v50 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v50 - 8) + 32))(a1, a2, v50);
          uint64_t v51 = (int *)type metadata accessor for MoonDetailViewState();
          uint64_t v52 = v51[5];
          uint64_t v53 = (char *)a1 + v52;
          uint64_t v54 = (char *)a2 + v52;
          uint64_t v55 = type metadata accessor for MoonDetailSelectedDate();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v55))
          {
            uint64_t v56 = sub_10017DF08(&qword_100E67240);
            memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
          }
          else
          {
            swift_getEnumCaseMultiPayload();
            uint64_t v158 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 32))(v53, v54, v158);
            swift_storeEnumTagMultiPayload();
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v55);
          }
          uint64_t v159 = v51[6];
          uint64_t v160 = (char *)a1 + v159;
          uint64_t v161 = (char *)a2 + v159;
          uint64_t v162 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v161, 1, v162))
          {
            uint64_t v163 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v160, v161, *(void *)(*(void *)(v163 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 32))(v160, v161, v162);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v160, 0, 1, v162);
          }
          uint64_t v176 = v51[7];
          long long v177 = (char *)a1 + v176;
          uint64_t v178 = (char *)a2 + v176;
          long long v179 = *((_OWORD *)v178 + 1);
          *(_OWORD *)long long v177 = *(_OWORD *)v178;
          *((_OWORD *)v177 + 1) = v179;
          v177[32] = v178[32];
          *((unsigned char *)a1 + v51[8]) = *((unsigned char *)a2 + v51[8]);
          break;
        case 5u:
          uint64_t v57 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v57 - 8) + 32))(a1, a2, v57);
          uint64_t v58 = (int *)type metadata accessor for AveragesDetailViewState();
          *((unsigned char *)a1 + v58[5]) = *((unsigned char *)a2 + v58[5]);
          uint64_t v59 = v58[6];
          uint64_t v60 = (void *)((char *)a1 + v59);
          uint64_t v61 = (void *)((char *)a2 + v59);
          uint64_t v62 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, (uint64_t)v62))
          {
            uint64_t v63 = sub_10017DF08(&qword_100E6B670);
            memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
          }
          else
          {
            void *v60 = *v61;
            uint64_t v164 = v62[5];
            uint64_t v165 = (char *)v60 + v164;
            uint64_t v166 = (char *)v61 + v164;
            uint64_t v167 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v167 - 8) + 32))(v165, v166, v167);
            *(void *)((char *)v60 + v62[6]) = *(void *)((char *)v61 + v62[6]);
            *(void *)((char *)v60 + v62[7]) = *(void *)((char *)v61 + v62[7]);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, (uint64_t)v62);
          }
          uint64_t v168 = v58[7];
          uint64_t v169 = (char *)a1 + v168;
          uint64_t v170 = (char *)a2 + v168;
          long long v171 = *((_OWORD *)v170 + 1);
          *(_OWORD *)uint64_t v169 = *(_OWORD *)v170;
          *((_OWORD *)v169 + 1) = v171;
          v169[32] = v170[32];
          break;
        case 6u:
          uint64_t v64 = type metadata accessor for URL();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v64 - 8) + 32))(a1, a2, v64);
          break;
        case 7u:
          uint64_t v65 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v65 - 8) + 32))(a1, a2, v65);
          uint64_t v66 = type metadata accessor for HomeAndWorkRefinementViewState();
          uint64_t v67 = *(int *)(v66 + 20);
          uint64_t v68 = (char *)a1 + v67;
          uint64_t v69 = (char *)a2 + v67;
          uint64_t v70 = type metadata accessor for LocationOfInterest();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v68, v69, v70);
          uint64_t v71 = *(int *)(v66 + 24);
          uint64_t v72 = (char *)a1 + v71;
          long long v73 = (char *)a2 + v71;
          long long v74 = *((_OWORD *)v73 + 1);
          *(_OWORD *)uint64_t v72 = *(_OWORD *)v73;
          *((_OWORD *)v72 + 1) = v74;
          v72[32] = v73[32];
          break;
        default:
          uint64_t v10 = type metadata accessor for DetailCondition();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
          uint64_t v11 = (int *)type metadata accessor for ConditionDetailViewState();
          uint64_t v12 = v11[5];
          uint64_t v13 = (char *)a1 + v12;
          uint64_t v14 = (char *)a2 + v12;
          uint64_t v15 = type metadata accessor for Location();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
          uint64_t v16 = v11[6];
          uint64_t v17 = (char *)a1 + v16;
          uint64_t v18 = (char *)a2 + v16;
          uint64_t v19 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
          {
            uint64_t v20 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
          }
          uint64_t v149 = v11[7];
          uint64_t v150 = (char *)a1 + v149;
          long long v151 = (char *)a2 + v149;
          long long v152 = *((_OWORD *)v151 + 1);
          *(_OWORD *)uint64_t v150 = *(_OWORD *)v151;
          *((_OWORD *)v150 + 1) = v152;
          v150[32] = v151[32];
          uint64_t v153 = v11[8];
          uint64_t v154 = (_OWORD *)((char *)a1 + v153);
          long long v155 = (_OWORD *)((char *)a2 + v153);
          long long v156 = (int *)type metadata accessor for DetailChartSelection();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v155, 1, (uint64_t)v156))
          {
            uint64_t v157 = sub_10017DF08(&qword_100E711F8);
            memcpy(v154, v155, *(void *)(*(void *)(v157 - 8) + 64));
          }
          else
          {
            *uint64_t v154 = *v155;
            uint64_t v172 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32);
            v172((char *)v154 + v156[5], (char *)v155 + v156[5], v19);
            v172((char *)v154 + v156[6], (char *)v155 + v156[6], v19);
            v172((char *)v154 + v156[7], (char *)v155 + v156[7], v19);
            *(void *)((char *)v154 + v156[8]) = *(void *)((char *)v155 + v156[8]);
            uint64_t v173 = v156[9];
            uint64_t v174 = (char *)v154 + v173;
            uint64_t v175 = (char *)v155 + v173;
            v174[8] = v175[8];
            *(void *)uint64_t v174 = *(void *)v175;
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v154, 0, 1, (uint64_t)v156);
          }
          *((unsigned char *)a1 + v11[9]) = *((unsigned char *)a2 + v11[9]);
          break;
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_122;
    case 4:
      uint64_t v21 = type metadata accessor for ModalViewState.MapViewModal(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v21))
      {
        uint64_t v22 = sub_10017DF08(&qword_100E663E8);
        memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
LABEL_122:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      uint64_t v23 = type metadata accessor for PreviewLocation();
      int v24 = swift_getEnumCaseMultiPayload();
      if (v24 == 2)
      {
        *a1 = *a2;
        *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
        *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
        uint64_t v75 = type metadata accessor for SearchLocation();
        uint64_t v76 = *(int *)(v75 + 32);
        uint64_t v77 = (char *)a1 + v76;
        uint64_t v78 = (char *)a2 + v76;
        uint64_t v79 = type metadata accessor for Location();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v78, 1, v79))
        {
          uint64_t v80 = sub_10017DF08(&qword_100E639E8);
          memcpy(v77, v78, *(void *)(*(void *)(v80 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v77, v78, v79);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v77, 0, 1, v79);
        }
        uint64_t v223 = *(int *)(v75 + 36);
        long long v224 = (char *)a1 + v223;
        uint64_t v225 = (char *)a2 + v223;
        *(_OWORD *)long long v224 = *(_OWORD *)v225;
        v224[16] = v225[16];
      }
      else if (v24 == 1)
      {
        uint64_t v81 = type metadata accessor for LocationOfInterest();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v81 - 8) + 32))(a1, a2, v81);
      }
      else
      {
        if (v24)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v23 - 8) + 64));
LABEL_88:
          uint64_t v226 = *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20);
          uint64_t v227 = (_OWORD *)((char *)a1 + v226);
          uint64_t v228 = (_OWORD *)((char *)a2 + v226);
          uint64_t v229 = type metadata accessor for LocationPreviewModalViewState(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v230 = type metadata accessor for URL();
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v230 - 8) + 32))(v227, v228, v230);
              goto LABEL_120;
            case 1u:
              uint64_t v231 = type metadata accessor for DetailCondition();
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v231 - 8) + 32))(v227, v228, v231);
              uint64_t v232 = (int *)type metadata accessor for ConditionDetailViewState();
              uint64_t v233 = v232[5];
              long long v234 = (char *)v227 + v233;
              long long v235 = (char *)v228 + v233;
              uint64_t v236 = type metadata accessor for Location();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v236 - 8) + 32))(v234, v235, v236);
              uint64_t v237 = v232[6];
              uint64_t v238 = (char *)v227 + v237;
              long long v239 = (char *)v228 + v237;
              uint64_t v240 = type metadata accessor for Date();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v239, 1, v240))
              {
                uint64_t v241 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v238, v239, *(void *)(*(void *)(v241 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v240 - 8) + 32))(v238, v239, v240);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v238, 0, 1, v240);
              }
              uint64_t v290 = v232[7];
              uint64_t v291 = (char *)v227 + v290;
              uint64_t v292 = (char *)v228 + v290;
              long long v293 = *((_OWORD *)v292 + 1);
              *(_OWORD *)uint64_t v291 = *(_OWORD *)v292;
              *((_OWORD *)v291 + 1) = v293;
              v291[32] = v292[32];
              uint64_t v338 = v232;
              uint64_t v294 = v232[8];
              uint64_t v295 = (_OWORD *)((char *)v227 + v294);
              uint64_t v296 = (_OWORD *)((char *)v228 + v294);
              uint64_t v297 = (int *)type metadata accessor for DetailChartSelection();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v296, 1, (uint64_t)v297))
              {
                uint64_t v298 = sub_10017DF08(&qword_100E711F8);
                memcpy(v295, v296, *(void *)(*(void *)(v298 - 8) + 64));
              }
              else
              {
                *uint64_t v295 = *v296;
                uint64_t v324 = v240;
                uint64_t v336 = v240;
                uint64_t v325 = (void (**)(char *, char *, uint64_t))(*(void *)(v240 - 8) + 32);
                uint64_t v326 = *v325;
                (*v325)((char *)v295 + v297[5], (char *)v296 + v297[5], v324);
                v326((char *)v295 + v297[6], (char *)v296 + v297[6], v336);
                v326((char *)v295 + v297[7], (char *)v296 + v297[7], v336);
                *(void *)((char *)v295 + v297[8]) = *(void *)((char *)v296 + v297[8]);
                uint64_t v327 = v297[9];
                uint64_t v328 = (char *)v295 + v327;
                uint64_t v329 = (char *)v296 + v327;
                v328[8] = v329[8];
                *(void *)uint64_t v328 = *(void *)v329;
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v295, 0, 1, (uint64_t)v297);
              }
              *((unsigned char *)v227 + v338[9]) = *((unsigned char *)v228 + v338[9]);
              goto LABEL_120;
            case 2u:
              uint64_t v242 = type metadata accessor for Location();
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v242 - 8) + 32))(v227, v228, v242);
              uint64_t v243 = type metadata accessor for AirQualityDetailViewState();
              *((unsigned char *)v227 + *(int *)(v243 + 20)) = *((unsigned char *)v228 + *(int *)(v243 + 20));
              uint64_t v244 = *(int *)(v243 + 24);
              uint64_t v245 = (char *)v227 + v244;
              uint64_t v246 = (char *)v228 + v244;
              v245[32] = v246[32];
              long long v247 = *((_OWORD *)v246 + 1);
              *(_OWORD *)uint64_t v245 = *(_OWORD *)v246;
              *((_OWORD *)v245 + 1) = v247;
              goto LABEL_120;
            case 3u:
              uint64_t v248 = type metadata accessor for Location();
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v248 - 8) + 32))(v227, v228, v248);
              uint64_t v249 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
              uint64_t v250 = (char *)v227 + v249;
              uint64_t v251 = (char *)v228 + v249;
              long long v252 = *((_OWORD *)v251 + 1);
              *(_OWORD *)uint64_t v250 = *(_OWORD *)v251;
              *((_OWORD *)v250 + 1) = v252;
              v250[32] = v251[32];
              goto LABEL_120;
            case 4u:
              uint64_t v253 = type metadata accessor for Location();
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v253 - 8) + 32))(v227, v228, v253);
              uint64_t v254 = type metadata accessor for SunriseSunsetDetailViewState();
              uint64_t v255 = *(int *)(v254 + 20);
              uint64_t v256 = (char *)v227 + v255;
              uint64_t v257 = (char *)v228 + v255;
              long long v258 = *((_OWORD *)v257 + 1);
              *(_OWORD *)uint64_t v256 = *(_OWORD *)v257;
              *((_OWORD *)v256 + 1) = v258;
              v256[32] = v257[32];
              *((unsigned char *)v227 + *(int *)(v254 + 24)) = *((unsigned char *)v228 + *(int *)(v254 + 24));
              goto LABEL_120;
            case 5u:
              uint64_t v259 = type metadata accessor for Location();
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v259 - 8) + 32))(v227, v228, v259);
              uint64_t v260 = (int *)type metadata accessor for MoonDetailViewState();
              uint64_t v261 = v260[5];
              uint64_t v262 = (char *)v227 + v261;
              char v263 = (char *)v228 + v261;
              uint64_t v264 = type metadata accessor for MoonDetailSelectedDate();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v263, 1, v264))
              {
                uint64_t v265 = sub_10017DF08(&qword_100E67240);
                memcpy(v262, v263, *(void *)(*(void *)(v265 - 8) + 64));
              }
              else
              {
                swift_getEnumCaseMultiPayload();
                uint64_t v299 = type metadata accessor for Date();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v299 - 8) + 32))(v262, v263, v299);
                swift_storeEnumTagMultiPayload();
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v262, 0, 1, v264);
              }
              uint64_t v300 = v260[6];
              uint64_t v301 = (char *)v227 + v300;
              uint64_t v302 = (char *)v228 + v300;
              uint64_t v303 = type metadata accessor for Date();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v302, 1, v303))
              {
                uint64_t v304 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v301, v302, *(void *)(*(void *)(v304 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v303 - 8) + 32))(v301, v302, v303);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v301, 0, 1, v303);
              }
              uint64_t v330 = v260[7];
              long long v331 = (char *)v227 + v330;
              uint64_t v332 = (char *)v228 + v330;
              long long v333 = *((_OWORD *)v332 + 1);
              *(_OWORD *)long long v331 = *(_OWORD *)v332;
              *((_OWORD *)v331 + 1) = v333;
              v331[32] = v332[32];
              *((unsigned char *)v227 + v260[8]) = *((unsigned char *)v228 + v260[8]);
              goto LABEL_120;
            case 6u:
              long long v266 = v228[1];
              *uint64_t v227 = *v228;
              v227[1] = v266;
              uint64_t v267 = (int *)type metadata accessor for NewsArticle();
              uint64_t v268 = v267[6];
              long long v269 = (char *)v227 + v268;
              long long v270 = (char *)v228 + v268;
              uint64_t v271 = type metadata accessor for URL();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v270, 1, v271))
              {
                uint64_t v272 = sub_10017DF08(&qword_100E749B0);
                memcpy(v269, v270, *(void *)(*(void *)(v272 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v271 - 8) + 32))(v269, v270, v271);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v269, 0, 1, v271);
              }
              uint64_t v305 = v267[7];
              long long v306 = (char *)v227 + v305;
              long long v307 = (char *)v228 + v305;
              uint64_t v308 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v308 - 8) + 32))(v306, v307, v308);
              uint64_t v309 = (void (**)(char *, char *, uint64_t))(*(void *)(v271 - 8) + 32);
              long long v339 = *v309;
              (*v309)((char *)v227 + v267[8], (char *)v228 + v267[8], v271);
              uint64_t v310 = v267[9];
              long long v311 = (_OWORD *)((char *)v227 + v310);
              long long v312 = (char *)v228 + v310;
              long long v313 = *(_OWORD *)((char *)v228 + v310 + 16);
              *long long v311 = *(_OWORD *)((char *)v228 + v310);
              v311[1] = v313;
              uint64_t v314 = *(int *)(type metadata accessor for NewsChannel() + 24);
              id v315 = (char *)v311 + v314;
              v316 = &v312[v314];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v316, 1, v271))
              {
                uint64_t v317 = sub_10017DF08(&qword_100E749B0);
                memcpy(v315, v316, *(void *)(*(void *)(v317 - 8) + 64));
              }
              else
              {
                v339(v315, v316, v271);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v315, 0, 1, v271);
              }
              *(void *)((char *)v227 + v267[10]) = *(void *)((char *)v228 + v267[10]);
              *(void *)((char *)v227 + v267[11]) = *(void *)((char *)v228 + v267[11]);
              *(void *)((char *)v227 + v267[12]) = *(void *)((char *)v228 + v267[12]);
              goto LABEL_120;
            case 7u:
              uint64_t v273 = type metadata accessor for Location();
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v273 - 8) + 32))(v227, v228, v273);
              uint64_t v274 = (int *)type metadata accessor for AveragesDetailViewState();
              *((unsigned char *)v227 + v274[5]) = *((unsigned char *)v228 + v274[5]);
              uint64_t v275 = v274[6];
              long long v276 = (void *)((char *)v227 + v275);
              long long v277 = (void *)((char *)v228 + v275);
              uint64_t v278 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v277, 1, (uint64_t)v278))
              {
                uint64_t v279 = sub_10017DF08(&qword_100E6B670);
                memcpy(v276, v277, *(void *)(*(void *)(v279 - 8) + 64));
              }
              else
              {
                *long long v276 = *v277;
                uint64_t v318 = v278[5];
                uint64_t v335 = (char *)v277 + v318;
                uint64_t v340 = (char *)v276 + v318;
                uint64_t v319 = type metadata accessor for Date();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v319 - 8) + 32))(v340, v335, v319);
                *(void *)((char *)v276 + v278[6]) = *(void *)((char *)v277 + v278[6]);
                *(void *)((char *)v276 + v278[7]) = *(void *)((char *)v277 + v278[7]);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v276, 0, 1, (uint64_t)v278);
              }
              uint64_t v320 = v274[7];
              v321 = (char *)v227 + v320;
              uint64_t v322 = (char *)v228 + v320;
              long long v323 = *((_OWORD *)v322 + 1);
              *(_OWORD *)v321 = *(_OWORD *)v322;
              *((_OWORD *)v321 + 1) = v323;
              v321[32] = v322[32];
              goto LABEL_120;
            case 8u:
              uint64_t v280 = type metadata accessor for Location();
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v280 - 8) + 32))(v227, v228, v280);
              uint64_t v281 = type metadata accessor for HomeAndWorkRefinementViewState();
              uint64_t v282 = *(int *)(v281 + 20);
              uint64_t v283 = (char *)v227 + v282;
              uint64_t v284 = (char *)v228 + v282;
              uint64_t v285 = type metadata accessor for LocationOfInterest();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v285 - 8) + 32))(v283, v284, v285);
              uint64_t v286 = *(int *)(v281 + 24);
              uint64_t v287 = (char *)v227 + v286;
              uint64_t v288 = (char *)v228 + v286;
              long long v289 = *((_OWORD *)v288 + 1);
              *(_OWORD *)uint64_t v287 = *(_OWORD *)v288;
              *((_OWORD *)v287 + 1) = v289;
              v287[32] = v288[32];
LABEL_120:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v227, v228, *(void *)(*(void *)(v229 - 8) + 64));
              break;
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v21);
          goto LABEL_122;
        }
        uint64_t v25 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 32))(a1, a2, v25);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_88;
    case 0:
      uint64_t v7 = type metadata accessor for PreviewLocation();
      int v8 = swift_getEnumCaseMultiPayload();
      if (v8 == 2)
      {
        *a1 = *a2;
        *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
        *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
        uint64_t v26 = type metadata accessor for SearchLocation();
        uint64_t v27 = *(int *)(v26 + 32);
        uint64_t v28 = (char *)a1 + v27;
        uint64_t v29 = (char *)a2 + v27;
        uint64_t v30 = type metadata accessor for Location();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30))
        {
          uint64_t v31 = sub_10017DF08(&qword_100E639E8);
          memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
        }
        uint64_t v82 = *(int *)(v26 + 36);
        uint64_t v83 = (char *)a1 + v82;
        long long v84 = (char *)a2 + v82;
        *(_OWORD *)uint64_t v83 = *(_OWORD *)v84;
        v83[16] = v84[16];
      }
      else if (v8 == 1)
      {
        uint64_t v32 = type metadata accessor for LocationOfInterest();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 32))(a1, a2, v32);
      }
      else
      {
        if (v8)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
          goto LABEL_38;
        }
        uint64_t v9 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      }
      swift_storeEnumTagMultiPayload();
LABEL_38:
      uint64_t v85 = *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20);
      long long v86 = (_OWORD *)((char *)a1 + v85);
      uint64_t v87 = (_OWORD *)((char *)a2 + v85);
      uint64_t v88 = type metadata accessor for LocationPreviewModalViewState(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v89 = type metadata accessor for URL();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v89 - 8) + 32))(v86, v87, v89);
          goto LABEL_83;
        case 1u:
          uint64_t v90 = type metadata accessor for DetailCondition();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v90 - 8) + 32))(v86, v87, v90);
          uint64_t v91 = (int *)type metadata accessor for ConditionDetailViewState();
          uint64_t v92 = v91[5];
          uint64_t v93 = (char *)v86 + v92;
          uint64_t v94 = (char *)v87 + v92;
          uint64_t v95 = type metadata accessor for Location();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 32))(v93, v94, v95);
          uint64_t v96 = v91[6];
          uint64_t v97 = (char *)v86 + v96;
          uint64_t v98 = (char *)v87 + v96;
          uint64_t v99 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v98, 1, v99))
          {
            uint64_t v100 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v97, v98, *(void *)(*(void *)(v100 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 32))(v97, v98, v99);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v97, 0, 1, v99);
          }
          uint64_t v180 = v91[7];
          uint64_t v181 = (char *)v86 + v180;
          uint64_t v182 = (char *)v87 + v180;
          long long v183 = *((_OWORD *)v182 + 1);
          *(_OWORD *)uint64_t v181 = *(_OWORD *)v182;
          *((_OWORD *)v181 + 1) = v183;
          v181[32] = v182[32];
          uint64_t v184 = v91[8];
          uint64_t v185 = (_OWORD *)((char *)v86 + v184);
          int v186 = (_OWORD *)((char *)v87 + v184);
          long long v187 = (int *)type metadata accessor for DetailChartSelection();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v186, 1, (uint64_t)v187))
          {
            uint64_t v188 = sub_10017DF08(&qword_100E711F8);
            memcpy(v185, v186, *(void *)(*(void *)(v188 - 8) + 64));
          }
          else
          {
            *uint64_t v185 = *v186;
            uint64_t v215 = *(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 32);
            v215((char *)v185 + v187[5], (char *)v186 + v187[5], v99);
            v215((char *)v185 + v187[6], (char *)v186 + v187[6], v99);
            v215((char *)v185 + v187[7], (char *)v186 + v187[7], v99);
            *(void *)((char *)v185 + v187[8]) = *(void *)((char *)v186 + v187[8]);
            uint64_t v216 = v187[9];
            uint64_t v217 = (char *)v185 + v216;
            uint64_t v218 = (char *)v186 + v216;
            v217[8] = v218[8];
            *(void *)uint64_t v217 = *(void *)v218;
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v185, 0, 1, (uint64_t)v187);
          }
          *((unsigned char *)v86 + v91[9]) = *((unsigned char *)v87 + v91[9]);
          goto LABEL_83;
        case 2u:
          uint64_t v101 = type metadata accessor for Location();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v101 - 8) + 32))(v86, v87, v101);
          uint64_t v102 = type metadata accessor for AirQualityDetailViewState();
          *((unsigned char *)v86 + *(int *)(v102 + 20)) = *((unsigned char *)v87 + *(int *)(v102 + 20));
          uint64_t v103 = *(int *)(v102 + 24);
          uint64_t v104 = (char *)v86 + v103;
          uint64_t v105 = (char *)v87 + v103;
          v104[32] = v105[32];
          long long v106 = *((_OWORD *)v105 + 1);
          *(_OWORD *)uint64_t v104 = *(_OWORD *)v105;
          *((_OWORD *)v104 + 1) = v106;
          goto LABEL_83;
        case 3u:
          uint64_t v107 = type metadata accessor for Location();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v107 - 8) + 32))(v86, v87, v107);
          uint64_t v108 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
          long long v109 = (char *)v86 + v108;
          uint64_t v110 = (char *)v87 + v108;
          long long v111 = *((_OWORD *)v110 + 1);
          *(_OWORD *)long long v109 = *(_OWORD *)v110;
          *((_OWORD *)v109 + 1) = v111;
          v109[32] = v110[32];
          goto LABEL_83;
        case 4u:
          uint64_t v112 = type metadata accessor for Location();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v112 - 8) + 32))(v86, v87, v112);
          uint64_t v113 = type metadata accessor for SunriseSunsetDetailViewState();
          uint64_t v114 = *(int *)(v113 + 20);
          long long v115 = (char *)v86 + v114;
          uint64_t v116 = (char *)v87 + v114;
          long long v117 = *((_OWORD *)v116 + 1);
          *(_OWORD *)long long v115 = *(_OWORD *)v116;
          *((_OWORD *)v115 + 1) = v117;
          v115[32] = v116[32];
          *((unsigned char *)v86 + *(int *)(v113 + 24)) = *((unsigned char *)v87 + *(int *)(v113 + 24));
          goto LABEL_83;
        case 5u:
          uint64_t v118 = type metadata accessor for Location();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v118 - 8) + 32))(v86, v87, v118);
          uint64_t v119 = (int *)type metadata accessor for MoonDetailViewState();
          uint64_t v120 = v119[5];
          long long v121 = (char *)v86 + v120;
          long long v122 = (char *)v87 + v120;
          uint64_t v123 = type metadata accessor for MoonDetailSelectedDate();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v122, 1, v123))
          {
            uint64_t v124 = sub_10017DF08(&qword_100E67240);
            memcpy(v121, v122, *(void *)(*(void *)(v124 - 8) + 64));
          }
          else
          {
            swift_getEnumCaseMultiPayload();
            uint64_t v189 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v189 - 8) + 32))(v121, v122, v189);
            swift_storeEnumTagMultiPayload();
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v121, 0, 1, v123);
          }
          uint64_t v190 = v119[6];
          uint64_t v191 = (char *)v86 + v190;
          long long v192 = (char *)v87 + v190;
          uint64_t v193 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v192, 1, v193))
          {
            uint64_t v194 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v191, v192, *(void *)(*(void *)(v194 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v193 - 8) + 32))(v191, v192, v193);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v191, 0, 1, v193);
          }
          uint64_t v219 = v119[7];
          uint64_t v220 = (char *)v86 + v219;
          uint64_t v221 = (char *)v87 + v219;
          long long v222 = *((_OWORD *)v221 + 1);
          *(_OWORD *)uint64_t v220 = *(_OWORD *)v221;
          *((_OWORD *)v220 + 1) = v222;
          v220[32] = v221[32];
          *((unsigned char *)v86 + v119[8]) = *((unsigned char *)v87 + v119[8]);
          goto LABEL_83;
        case 6u:
          long long v125 = v87[1];
          *long long v86 = *v87;
          v86[1] = v125;
          char v126 = (int *)type metadata accessor for NewsArticle();
          uint64_t v127 = v126[6];
          uint64_t v128 = (char *)v86 + v127;
          uint64_t v129 = (char *)v87 + v127;
          uint64_t v130 = type metadata accessor for URL();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v129, 1, v130))
          {
            uint64_t v131 = sub_10017DF08(&qword_100E749B0);
            memcpy(v128, v129, *(void *)(*(void *)(v131 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 32))(v128, v129, v130);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v128, 0, 1, v130);
          }
          uint64_t v195 = v126[7];
          uint64_t v196 = (char *)v86 + v195;
          uint64_t v197 = (char *)v87 + v195;
          uint64_t v198 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v198 - 8) + 32))(v196, v197, v198);
          uint64_t v199 = *(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 32);
          v199((char *)v86 + v126[8], (char *)v87 + v126[8], v130);
          uint64_t v200 = v126[9];
          uint64_t v201 = (_OWORD *)((char *)v86 + v200);
          uint64_t v202 = (char *)v87 + v200;
          long long v203 = *(_OWORD *)((char *)v87 + v200 + 16);
          *uint64_t v201 = *(_OWORD *)((char *)v87 + v200);
          v201[1] = v203;
          uint64_t v204 = *(int *)(type metadata accessor for NewsChannel() + 24);
          uint64_t v205 = (char *)v201 + v204;
          uint64_t v206 = &v202[v204];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v206, 1, v130))
          {
            uint64_t v207 = sub_10017DF08(&qword_100E749B0);
            memcpy(v205, v206, *(void *)(*(void *)(v207 - 8) + 64));
          }
          else
          {
            v199(v205, v206, v130);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v205, 0, 1, v130);
          }
          *(void *)((char *)v86 + v126[10]) = *(void *)((char *)v87 + v126[10]);
          *(void *)((char *)v86 + v126[11]) = *(void *)((char *)v87 + v126[11]);
          *(void *)((char *)v86 + v126[12]) = *(void *)((char *)v87 + v126[12]);
          goto LABEL_83;
        case 7u:
          uint64_t v132 = type metadata accessor for Location();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v132 - 8) + 32))(v86, v87, v132);
          uint64_t v133 = (int *)type metadata accessor for AveragesDetailViewState();
          *((unsigned char *)v86 + v133[5]) = *((unsigned char *)v87 + v133[5]);
          uint64_t v134 = v133[6];
          uint64_t v135 = (void *)((char *)v86 + v134);
          uint64_t v136 = (void *)((char *)v87 + v134);
          uint64_t v137 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v136, 1, (uint64_t)v137))
          {
            uint64_t v138 = sub_10017DF08(&qword_100E6B670);
            memcpy(v135, v136, *(void *)(*(void *)(v138 - 8) + 64));
          }
          else
          {
            *uint64_t v135 = *v136;
            uint64_t v208 = v137[5];
            uint64_t v209 = (char *)v135 + v208;
            char v337 = (char *)v136 + v208;
            uint64_t v210 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v210 - 8) + 32))(v209, v337, v210);
            *(void *)((char *)v135 + v137[6]) = *(void *)((char *)v136 + v137[6]);
            *(void *)((char *)v135 + v137[7]) = *(void *)((char *)v136 + v137[7]);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v135, 0, 1, (uint64_t)v137);
          }
          uint64_t v211 = v133[7];
          uint64_t v212 = (char *)v86 + v211;
          uint64_t v213 = (char *)v87 + v211;
          long long v214 = *((_OWORD *)v213 + 1);
          *(_OWORD *)uint64_t v212 = *(_OWORD *)v213;
          *((_OWORD *)v212 + 1) = v214;
          v212[32] = v213[32];
          goto LABEL_83;
        case 8u:
          uint64_t v139 = type metadata accessor for Location();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v139 - 8) + 32))(v86, v87, v139);
          uint64_t v140 = type metadata accessor for HomeAndWorkRefinementViewState();
          uint64_t v141 = *(int *)(v140 + 20);
          uint64_t v142 = (char *)v86 + v141;
          uint64_t v143 = (char *)v87 + v141;
          uint64_t v144 = type metadata accessor for LocationOfInterest();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 32))(v142, v143, v144);
          uint64_t v145 = *(int *)(v140 + 24);
          uint64_t v146 = (char *)v86 + v145;
          uint64_t v147 = (char *)v87 + v145;
          long long v148 = *((_OWORD *)v147 + 1);
          *(_OWORD *)uint64_t v146 = *(_OWORD *)v147;
          *((_OWORD *)v146 + 1) = v148;
          v146[32] = v147[32];
LABEL_83:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v86, v87, *(void *)(*(void *)(v88 - 8) + 64));
          break;
      }
      goto LABEL_122;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *sub_100940AF8(void *a1, void *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  sub_10011D54C((uint64_t)a1, (void (*)(void))type metadata accessor for ModalViewState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 5:
      type metadata accessor for ModalViewState.LocationDetailModal(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v33 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 32))(a1, a2, v33);
          uint64_t v34 = type metadata accessor for AirQualityDetailViewState();
          *((unsigned char *)a1 + *(int *)(v34 + 20)) = *((unsigned char *)a2 + *(int *)(v34 + 20));
          uint64_t v35 = *(int *)(v34 + 24);
          uint64_t v36 = (char *)a1 + v35;
          uint64_t v37 = (char *)a2 + v35;
          v36[32] = v37[32];
          long long v38 = *((_OWORD *)v37 + 1);
          *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
          *((_OWORD *)v36 + 1) = v38;
          break;
        case 2u:
          uint64_t v39 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v39 - 8) + 32))(a1, a2, v39);
          uint64_t v40 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
          long long v41 = (char *)a1 + v40;
          uint64_t v42 = (char *)a2 + v40;
          long long v43 = *((_OWORD *)v42 + 1);
          *(_OWORD *)long long v41 = *(_OWORD *)v42;
          *((_OWORD *)v41 + 1) = v43;
          v41[32] = v42[32];
          break;
        case 3u:
          uint64_t v44 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v44 - 8) + 32))(a1, a2, v44);
          uint64_t v45 = type metadata accessor for SunriseSunsetDetailViewState();
          uint64_t v46 = *(int *)(v45 + 20);
          long long v47 = (char *)a1 + v46;
          long long v48 = (char *)a2 + v46;
          long long v49 = *((_OWORD *)v48 + 1);
          *(_OWORD *)long long v47 = *(_OWORD *)v48;
          *((_OWORD *)v47 + 1) = v49;
          v47[32] = v48[32];
          *((unsigned char *)a1 + *(int *)(v45 + 24)) = *((unsigned char *)a2 + *(int *)(v45 + 24));
          break;
        case 4u:
          uint64_t v50 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v50 - 8) + 32))(a1, a2, v50);
          uint64_t v51 = (int *)type metadata accessor for MoonDetailViewState();
          uint64_t v52 = v51[5];
          uint64_t v53 = (char *)a1 + v52;
          uint64_t v54 = (char *)a2 + v52;
          uint64_t v55 = type metadata accessor for MoonDetailSelectedDate();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v55))
          {
            uint64_t v56 = sub_10017DF08(&qword_100E67240);
            memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
          }
          else
          {
            swift_getEnumCaseMultiPayload();
            uint64_t v158 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 32))(v53, v54, v158);
            swift_storeEnumTagMultiPayload();
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v55);
          }
          uint64_t v159 = v51[6];
          uint64_t v160 = (char *)a1 + v159;
          uint64_t v161 = (char *)a2 + v159;
          uint64_t v162 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v161, 1, v162))
          {
            uint64_t v163 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v160, v161, *(void *)(*(void *)(v163 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 32))(v160, v161, v162);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v160, 0, 1, v162);
          }
          uint64_t v176 = v51[7];
          long long v177 = (char *)a1 + v176;
          uint64_t v178 = (char *)a2 + v176;
          long long v179 = *((_OWORD *)v178 + 1);
          *(_OWORD *)long long v177 = *(_OWORD *)v178;
          *((_OWORD *)v177 + 1) = v179;
          v177[32] = v178[32];
          *((unsigned char *)a1 + v51[8]) = *((unsigned char *)a2 + v51[8]);
          break;
        case 5u:
          uint64_t v57 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v57 - 8) + 32))(a1, a2, v57);
          uint64_t v58 = (int *)type metadata accessor for AveragesDetailViewState();
          *((unsigned char *)a1 + v58[5]) = *((unsigned char *)a2 + v58[5]);
          uint64_t v59 = v58[6];
          uint64_t v60 = (void *)((char *)a1 + v59);
          uint64_t v61 = (void *)((char *)a2 + v59);
          uint64_t v62 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, (uint64_t)v62))
          {
            uint64_t v63 = sub_10017DF08(&qword_100E6B670);
            memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
          }
          else
          {
            void *v60 = *v61;
            uint64_t v164 = v62[5];
            uint64_t v165 = (char *)v60 + v164;
            uint64_t v166 = (char *)v61 + v164;
            uint64_t v167 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v167 - 8) + 32))(v165, v166, v167);
            *(void *)((char *)v60 + v62[6]) = *(void *)((char *)v61 + v62[6]);
            *(void *)((char *)v60 + v62[7]) = *(void *)((char *)v61 + v62[7]);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, (uint64_t)v62);
          }
          uint64_t v168 = v58[7];
          uint64_t v169 = (char *)a1 + v168;
          uint64_t v170 = (char *)a2 + v168;
          long long v171 = *((_OWORD *)v170 + 1);
          *(_OWORD *)uint64_t v169 = *(_OWORD *)v170;
          *((_OWORD *)v169 + 1) = v171;
          v169[32] = v170[32];
          break;
        case 6u:
          uint64_t v64 = type metadata accessor for URL();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v64 - 8) + 32))(a1, a2, v64);
          break;
        case 7u:
          uint64_t v65 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v65 - 8) + 32))(a1, a2, v65);
          uint64_t v66 = type metadata accessor for HomeAndWorkRefinementViewState();
          uint64_t v67 = *(int *)(v66 + 20);
          uint64_t v68 = (char *)a1 + v67;
          uint64_t v69 = (char *)a2 + v67;
          uint64_t v70 = type metadata accessor for LocationOfInterest();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v68, v69, v70);
          uint64_t v71 = *(int *)(v66 + 24);
          uint64_t v72 = (char *)a1 + v71;
          long long v73 = (char *)a2 + v71;
          long long v74 = *((_OWORD *)v73 + 1);
          *(_OWORD *)uint64_t v72 = *(_OWORD *)v73;
          *((_OWORD *)v72 + 1) = v74;
          v72[32] = v73[32];
          break;
        default:
          uint64_t v10 = type metadata accessor for DetailCondition();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
          uint64_t v11 = (int *)type metadata accessor for ConditionDetailViewState();
          uint64_t v12 = v11[5];
          uint64_t v13 = (char *)a1 + v12;
          uint64_t v14 = (char *)a2 + v12;
          uint64_t v15 = type metadata accessor for Location();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
          uint64_t v16 = v11[6];
          uint64_t v17 = (char *)a1 + v16;
          uint64_t v18 = (char *)a2 + v16;
          uint64_t v19 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
          {
            uint64_t v20 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
          }
          uint64_t v149 = v11[7];
          uint64_t v150 = (char *)a1 + v149;
          long long v151 = (char *)a2 + v149;
          long long v152 = *((_OWORD *)v151 + 1);
          *(_OWORD *)uint64_t v150 = *(_OWORD *)v151;
          *((_OWORD *)v150 + 1) = v152;
          v150[32] = v151[32];
          uint64_t v153 = v11[8];
          uint64_t v154 = (_OWORD *)((char *)a1 + v153);
          long long v155 = (_OWORD *)((char *)a2 + v153);
          long long v156 = (int *)type metadata accessor for DetailChartSelection();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v155, 1, (uint64_t)v156))
          {
            uint64_t v157 = sub_10017DF08(&qword_100E711F8);
            memcpy(v154, v155, *(void *)(*(void *)(v157 - 8) + 64));
          }
          else
          {
            *uint64_t v154 = *v155;
            uint64_t v172 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32);
            v172((char *)v154 + v156[5], (char *)v155 + v156[5], v19);
            v172((char *)v154 + v156[6], (char *)v155 + v156[6], v19);
            v172((char *)v154 + v156[7], (char *)v155 + v156[7], v19);
            *(void *)((char *)v154 + v156[8]) = *(void *)((char *)v155 + v156[8]);
            uint64_t v173 = v156[9];
            uint64_t v174 = (char *)v154 + v173;
            uint64_t v175 = (char *)v155 + v173;
            v174[8] = v175[8];
            *(void *)uint64_t v174 = *(void *)v175;
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v154, 0, 1, (uint64_t)v156);
          }
          *((unsigned char *)a1 + v11[9]) = *((unsigned char *)a2 + v11[9]);
          break;
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_123;
    case 4:
      uint64_t v21 = type metadata accessor for ModalViewState.MapViewModal(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v21))
      {
        uint64_t v22 = sub_10017DF08(&qword_100E663E8);
        memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
LABEL_123:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      uint64_t v23 = type metadata accessor for PreviewLocation();
      int v24 = swift_getEnumCaseMultiPayload();
      if (v24 == 2)
      {
        *a1 = *a2;
        *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
        *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
        uint64_t v75 = type metadata accessor for SearchLocation();
        uint64_t v76 = *(int *)(v75 + 32);
        uint64_t v77 = (char *)a1 + v76;
        uint64_t v78 = (char *)a2 + v76;
        uint64_t v79 = type metadata accessor for Location();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v78, 1, v79))
        {
          uint64_t v80 = sub_10017DF08(&qword_100E639E8);
          memcpy(v77, v78, *(void *)(*(void *)(v80 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v77, v78, v79);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v77, 0, 1, v79);
        }
        uint64_t v223 = *(int *)(v75 + 36);
        long long v224 = (char *)a1 + v223;
        uint64_t v225 = (char *)a2 + v223;
        *(_OWORD *)long long v224 = *(_OWORD *)v225;
        v224[16] = v225[16];
      }
      else if (v24 == 1)
      {
        uint64_t v81 = type metadata accessor for LocationOfInterest();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v81 - 8) + 32))(a1, a2, v81);
      }
      else
      {
        if (v24)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v23 - 8) + 64));
LABEL_89:
          uint64_t v226 = *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20);
          uint64_t v227 = (_OWORD *)((char *)a1 + v226);
          uint64_t v228 = (_OWORD *)((char *)a2 + v226);
          uint64_t v229 = type metadata accessor for LocationPreviewModalViewState(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v230 = type metadata accessor for URL();
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v230 - 8) + 32))(v227, v228, v230);
              goto LABEL_121;
            case 1u:
              uint64_t v231 = type metadata accessor for DetailCondition();
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v231 - 8) + 32))(v227, v228, v231);
              uint64_t v232 = (int *)type metadata accessor for ConditionDetailViewState();
              uint64_t v233 = v232[5];
              long long v234 = (char *)v227 + v233;
              long long v235 = (char *)v228 + v233;
              uint64_t v236 = type metadata accessor for Location();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v236 - 8) + 32))(v234, v235, v236);
              uint64_t v237 = v232[6];
              uint64_t v238 = (char *)v227 + v237;
              long long v239 = (char *)v228 + v237;
              uint64_t v240 = type metadata accessor for Date();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v239, 1, v240))
              {
                uint64_t v241 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v238, v239, *(void *)(*(void *)(v241 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v240 - 8) + 32))(v238, v239, v240);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v238, 0, 1, v240);
              }
              uint64_t v290 = v232[7];
              uint64_t v291 = (char *)v227 + v290;
              uint64_t v292 = (char *)v228 + v290;
              long long v293 = *((_OWORD *)v292 + 1);
              *(_OWORD *)uint64_t v291 = *(_OWORD *)v292;
              *((_OWORD *)v291 + 1) = v293;
              v291[32] = v292[32];
              uint64_t v338 = v232;
              uint64_t v294 = v232[8];
              uint64_t v295 = (_OWORD *)((char *)v227 + v294);
              uint64_t v296 = (_OWORD *)((char *)v228 + v294);
              uint64_t v297 = (int *)type metadata accessor for DetailChartSelection();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v296, 1, (uint64_t)v297))
              {
                uint64_t v298 = sub_10017DF08(&qword_100E711F8);
                memcpy(v295, v296, *(void *)(*(void *)(v298 - 8) + 64));
              }
              else
              {
                *uint64_t v295 = *v296;
                uint64_t v324 = v240;
                uint64_t v336 = v240;
                uint64_t v325 = (void (**)(char *, char *, uint64_t))(*(void *)(v240 - 8) + 32);
                uint64_t v326 = *v325;
                (*v325)((char *)v295 + v297[5], (char *)v296 + v297[5], v324);
                v326((char *)v295 + v297[6], (char *)v296 + v297[6], v336);
                v326((char *)v295 + v297[7], (char *)v296 + v297[7], v336);
                *(void *)((char *)v295 + v297[8]) = *(void *)((char *)v296 + v297[8]);
                uint64_t v327 = v297[9];
                uint64_t v328 = (char *)v295 + v327;
                uint64_t v329 = (char *)v296 + v327;
                v328[8] = v329[8];
                *(void *)uint64_t v328 = *(void *)v329;
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v295, 0, 1, (uint64_t)v297);
              }
              *((unsigned char *)v227 + v338[9]) = *((unsigned char *)v228 + v338[9]);
              goto LABEL_121;
            case 2u:
              uint64_t v242 = type metadata accessor for Location();
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v242 - 8) + 32))(v227, v228, v242);
              uint64_t v243 = type metadata accessor for AirQualityDetailViewState();
              *((unsigned char *)v227 + *(int *)(v243 + 20)) = *((unsigned char *)v228 + *(int *)(v243 + 20));
              uint64_t v244 = *(int *)(v243 + 24);
              uint64_t v245 = (char *)v227 + v244;
              uint64_t v246 = (char *)v228 + v244;
              v245[32] = v246[32];
              long long v247 = *((_OWORD *)v246 + 1);
              *(_OWORD *)uint64_t v245 = *(_OWORD *)v246;
              *((_OWORD *)v245 + 1) = v247;
              goto LABEL_121;
            case 3u:
              uint64_t v248 = type metadata accessor for Location();
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v248 - 8) + 32))(v227, v228, v248);
              uint64_t v249 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
              uint64_t v250 = (char *)v227 + v249;
              uint64_t v251 = (char *)v228 + v249;
              long long v252 = *((_OWORD *)v251 + 1);
              *(_OWORD *)uint64_t v250 = *(_OWORD *)v251;
              *((_OWORD *)v250 + 1) = v252;
              v250[32] = v251[32];
              goto LABEL_121;
            case 4u:
              uint64_t v253 = type metadata accessor for Location();
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v253 - 8) + 32))(v227, v228, v253);
              uint64_t v254 = type metadata accessor for SunriseSunsetDetailViewState();
              uint64_t v255 = *(int *)(v254 + 20);
              uint64_t v256 = (char *)v227 + v255;
              uint64_t v257 = (char *)v228 + v255;
              long long v258 = *((_OWORD *)v257 + 1);
              *(_OWORD *)uint64_t v256 = *(_OWORD *)v257;
              *((_OWORD *)v256 + 1) = v258;
              v256[32] = v257[32];
              *((unsigned char *)v227 + *(int *)(v254 + 24)) = *((unsigned char *)v228 + *(int *)(v254 + 24));
              goto LABEL_121;
            case 5u:
              uint64_t v259 = type metadata accessor for Location();
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v259 - 8) + 32))(v227, v228, v259);
              uint64_t v260 = (int *)type metadata accessor for MoonDetailViewState();
              uint64_t v261 = v260[5];
              uint64_t v262 = (char *)v227 + v261;
              char v263 = (char *)v228 + v261;
              uint64_t v264 = type metadata accessor for MoonDetailSelectedDate();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v263, 1, v264))
              {
                uint64_t v265 = sub_10017DF08(&qword_100E67240);
                memcpy(v262, v263, *(void *)(*(void *)(v265 - 8) + 64));
              }
              else
              {
                swift_getEnumCaseMultiPayload();
                uint64_t v299 = type metadata accessor for Date();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v299 - 8) + 32))(v262, v263, v299);
                swift_storeEnumTagMultiPayload();
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v262, 0, 1, v264);
              }
              uint64_t v300 = v260[6];
              uint64_t v301 = (char *)v227 + v300;
              uint64_t v302 = (char *)v228 + v300;
              uint64_t v303 = type metadata accessor for Date();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v302, 1, v303))
              {
                uint64_t v304 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v301, v302, *(void *)(*(void *)(v304 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v303 - 8) + 32))(v301, v302, v303);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v301, 0, 1, v303);
              }
              uint64_t v330 = v260[7];
              long long v331 = (char *)v227 + v330;
              uint64_t v332 = (char *)v228 + v330;
              long long v333 = *((_OWORD *)v332 + 1);
              *(_OWORD *)long long v331 = *(_OWORD *)v332;
              *((_OWORD *)v331 + 1) = v333;
              v331[32] = v332[32];
              *((unsigned char *)v227 + v260[8]) = *((unsigned char *)v228 + v260[8]);
              goto LABEL_121;
            case 6u:
              long long v266 = v228[1];
              *uint64_t v227 = *v228;
              v227[1] = v266;
              uint64_t v267 = (int *)type metadata accessor for NewsArticle();
              uint64_t v268 = v267[6];
              long long v269 = (char *)v227 + v268;
              long long v270 = (char *)v228 + v268;
              uint64_t v271 = type metadata accessor for URL();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v270, 1, v271))
              {
                uint64_t v272 = sub_10017DF08(&qword_100E749B0);
                memcpy(v269, v270, *(void *)(*(void *)(v272 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v271 - 8) + 32))(v269, v270, v271);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v269, 0, 1, v271);
              }
              uint64_t v305 = v267[7];
              long long v306 = (char *)v227 + v305;
              long long v307 = (char *)v228 + v305;
              uint64_t v308 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v308 - 8) + 32))(v306, v307, v308);
              uint64_t v309 = (void (**)(char *, char *, uint64_t))(*(void *)(v271 - 8) + 32);
              long long v339 = *v309;
              (*v309)((char *)v227 + v267[8], (char *)v228 + v267[8], v271);
              uint64_t v310 = v267[9];
              long long v311 = (_OWORD *)((char *)v227 + v310);
              long long v312 = (char *)v228 + v310;
              long long v313 = *(_OWORD *)((char *)v228 + v310 + 16);
              *long long v311 = *(_OWORD *)((char *)v228 + v310);
              v311[1] = v313;
              uint64_t v314 = *(int *)(type metadata accessor for NewsChannel() + 24);
              id v315 = (char *)v311 + v314;
              v316 = &v312[v314];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v316, 1, v271))
              {
                uint64_t v317 = sub_10017DF08(&qword_100E749B0);
                memcpy(v315, v316, *(void *)(*(void *)(v317 - 8) + 64));
              }
              else
              {
                v339(v315, v316, v271);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v315, 0, 1, v271);
              }
              *(void *)((char *)v227 + v267[10]) = *(void *)((char *)v228 + v267[10]);
              *(void *)((char *)v227 + v267[11]) = *(void *)((char *)v228 + v267[11]);
              *(void *)((char *)v227 + v267[12]) = *(void *)((char *)v228 + v267[12]);
              goto LABEL_121;
            case 7u:
              uint64_t v273 = type metadata accessor for Location();
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v273 - 8) + 32))(v227, v228, v273);
              uint64_t v274 = (int *)type metadata accessor for AveragesDetailViewState();
              *((unsigned char *)v227 + v274[5]) = *((unsigned char *)v228 + v274[5]);
              uint64_t v275 = v274[6];
              long long v276 = (void *)((char *)v227 + v275);
              long long v277 = (void *)((char *)v228 + v275);
              uint64_t v278 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v277, 1, (uint64_t)v278))
              {
                uint64_t v279 = sub_10017DF08(&qword_100E6B670);
                memcpy(v276, v277, *(void *)(*(void *)(v279 - 8) + 64));
              }
              else
              {
                *long long v276 = *v277;
                uint64_t v318 = v278[5];
                uint64_t v335 = (char *)v277 + v318;
                uint64_t v340 = (char *)v276 + v318;
                uint64_t v319 = type metadata accessor for Date();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v319 - 8) + 32))(v340, v335, v319);
                *(void *)((char *)v276 + v278[6]) = *(void *)((char *)v277 + v278[6]);
                *(void *)((char *)v276 + v278[7]) = *(void *)((char *)v277 + v278[7]);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v276, 0, 1, (uint64_t)v278);
              }
              uint64_t v320 = v274[7];
              v321 = (char *)v227 + v320;
              uint64_t v322 = (char *)v228 + v320;
              long long v323 = *((_OWORD *)v322 + 1);
              *(_OWORD *)v321 = *(_OWORD *)v322;
              *((_OWORD *)v321 + 1) = v323;
              v321[32] = v322[32];
              goto LABEL_121;
            case 8u:
              uint64_t v280 = type metadata accessor for Location();
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v280 - 8) + 32))(v227, v228, v280);
              uint64_t v281 = type metadata accessor for HomeAndWorkRefinementViewState();
              uint64_t v282 = *(int *)(v281 + 20);
              uint64_t v283 = (char *)v227 + v282;
              uint64_t v284 = (char *)v228 + v282;
              uint64_t v285 = type metadata accessor for LocationOfInterest();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v285 - 8) + 32))(v283, v284, v285);
              uint64_t v286 = *(int *)(v281 + 24);
              uint64_t v287 = (char *)v227 + v286;
              uint64_t v288 = (char *)v228 + v286;
              long long v289 = *((_OWORD *)v288 + 1);
              *(_OWORD *)uint64_t v287 = *(_OWORD *)v288;
              *((_OWORD *)v287 + 1) = v289;
              v287[32] = v288[32];
LABEL_121:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v227, v228, *(void *)(*(void *)(v229 - 8) + 64));
              break;
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v21);
          goto LABEL_123;
        }
        uint64_t v25 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 32))(a1, a2, v25);
      }
      swift_storeEnumTagMultiPayload();
      goto LABEL_89;
    case 0:
      uint64_t v7 = type metadata accessor for PreviewLocation();
      int v8 = swift_getEnumCaseMultiPayload();
      if (v8 == 2)
      {
        *a1 = *a2;
        *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
        *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
        *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
        uint64_t v26 = type metadata accessor for SearchLocation();
        uint64_t v27 = *(int *)(v26 + 32);
        uint64_t v28 = (char *)a1 + v27;
        uint64_t v29 = (char *)a2 + v27;
        uint64_t v30 = type metadata accessor for Location();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30))
        {
          uint64_t v31 = sub_10017DF08(&qword_100E639E8);
          memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
        }
        uint64_t v82 = *(int *)(v26 + 36);
        uint64_t v83 = (char *)a1 + v82;
        long long v84 = (char *)a2 + v82;
        *(_OWORD *)uint64_t v83 = *(_OWORD *)v84;
        v83[16] = v84[16];
      }
      else if (v8 == 1)
      {
        uint64_t v32 = type metadata accessor for LocationOfInterest();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 32))(a1, a2, v32);
      }
      else
      {
        if (v8)
        {
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
          goto LABEL_39;
        }
        uint64_t v9 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      }
      swift_storeEnumTagMultiPayload();
LABEL_39:
      uint64_t v85 = *(int *)(type metadata accessor for LocationPreviewViewState(0) + 20);
      long long v86 = (_OWORD *)((char *)a1 + v85);
      uint64_t v87 = (_OWORD *)((char *)a2 + v85);
      uint64_t v88 = type metadata accessor for LocationPreviewModalViewState(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v89 = type metadata accessor for URL();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v89 - 8) + 32))(v86, v87, v89);
          goto LABEL_84;
        case 1u:
          uint64_t v90 = type metadata accessor for DetailCondition();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v90 - 8) + 32))(v86, v87, v90);
          uint64_t v91 = (int *)type metadata accessor for ConditionDetailViewState();
          uint64_t v92 = v91[5];
          uint64_t v93 = (char *)v86 + v92;
          uint64_t v94 = (char *)v87 + v92;
          uint64_t v95 = type metadata accessor for Location();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 32))(v93, v94, v95);
          uint64_t v96 = v91[6];
          uint64_t v97 = (char *)v86 + v96;
          uint64_t v98 = (char *)v87 + v96;
          uint64_t v99 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v98, 1, v99))
          {
            uint64_t v100 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v97, v98, *(void *)(*(void *)(v100 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 32))(v97, v98, v99);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v97, 0, 1, v99);
          }
          uint64_t v180 = v91[7];
          uint64_t v181 = (char *)v86 + v180;
          uint64_t v182 = (char *)v87 + v180;
          long long v183 = *((_OWORD *)v182 + 1);
          *(_OWORD *)uint64_t v181 = *(_OWORD *)v182;
          *((_OWORD *)v181 + 1) = v183;
          v181[32] = v182[32];
          uint64_t v184 = v91[8];
          uint64_t v185 = (_OWORD *)((char *)v86 + v184);
          int v186 = (_OWORD *)((char *)v87 + v184);
          long long v187 = (int *)type metadata accessor for DetailChartSelection();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v186, 1, (uint64_t)v187))
          {
            uint64_t v188 = sub_10017DF08(&qword_100E711F8);
            memcpy(v185, v186, *(void *)(*(void *)(v188 - 8) + 64));
          }
          else
          {
            *uint64_t v185 = *v186;
            uint64_t v215 = *(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 32);
            v215((char *)v185 + v187[5], (char *)v186 + v187[5], v99);
            v215((char *)v185 + v187[6], (char *)v186 + v187[6], v99);
            v215((char *)v185 + v187[7], (char *)v186 + v187[7], v99);
            *(void *)((char *)v185 + v187[8]) = *(void *)((char *)v186 + v187[8]);
            uint64_t v216 = v187[9];
            uint64_t v217 = (char *)v185 + v216;
            uint64_t v218 = (char *)v186 + v216;
            v217[8] = v218[8];
            *(void *)uint64_t v217 = *(void *)v218;
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v185, 0, 1, (uint64_t)v187);
          }
          *((unsigned char *)v86 + v91[9]) = *((unsigned char *)v87 + v91[9]);
          goto LABEL_84;
        case 2u:
          uint64_t v101 = type metadata accessor for Location();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v101 - 8) + 32))(v86, v87, v101);
          uint64_t v102 = type metadata accessor for AirQualityDetailViewState();
          *((unsigned char *)v86 + *(int *)(v102 + 20)) = *((unsigned char *)v87 + *(int *)(v102 + 20));
          uint64_t v103 = *(int *)(v102 + 24);
          uint64_t v104 = (char *)v86 + v103;
          uint64_t v105 = (char *)v87 + v103;
          v104[32] = v105[32];
          long long v106 = *((_OWORD *)v105 + 1);
          *(_OWORD *)uint64_t v104 = *(_OWORD *)v105;
          *((_OWORD *)v104 + 1) = v106;
          goto LABEL_84;
        case 3u:
          uint64_t v107 = type metadata accessor for Location();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v107 - 8) + 32))(v86, v87, v107);
          uint64_t v108 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
          long long v109 = (char *)v86 + v108;
          uint64_t v110 = (char *)v87 + v108;
          long long v111 = *((_OWORD *)v110 + 1);
          *(_OWORD *)long long v109 = *(_OWORD *)v110;
          *((_OWORD *)v109 + 1) = v111;
          v109[32] = v110[32];
          goto LABEL_84;
        case 4u:
          uint64_t v112 = type metadata accessor for Location();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v112 - 8) + 32))(v86, v87, v112);
          uint64_t v113 = type metadata accessor for SunriseSunsetDetailViewState();
          uint64_t v114 = *(int *)(v113 + 20);
          long long v115 = (char *)v86 + v114;
          uint64_t v116 = (char *)v87 + v114;
          long long v117 = *((_OWORD *)v116 + 1);
          *(_OWORD *)long long v115 = *(_OWORD *)v116;
          *((_OWORD *)v115 + 1) = v117;
          v115[32] = v116[32];
          *((unsigned char *)v86 + *(int *)(v113 + 24)) = *((unsigned char *)v87 + *(int *)(v113 + 24));
          goto LABEL_84;
        case 5u:
          uint64_t v118 = type metadata accessor for Location();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v118 - 8) + 32))(v86, v87, v118);
          uint64_t v119 = (int *)type metadata accessor for MoonDetailViewState();
          uint64_t v120 = v119[5];
          long long v121 = (char *)v86 + v120;
          long long v122 = (char *)v87 + v120;
          uint64_t v123 = type metadata accessor for MoonDetailSelectedDate();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v122, 1, v123))
          {
            uint64_t v124 = sub_10017DF08(&qword_100E67240);
            memcpy(v121, v122, *(void *)(*(void *)(v124 - 8) + 64));
          }
          else
          {
            swift_getEnumCaseMultiPayload();
            uint64_t v189 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v189 - 8) + 32))(v121, v122, v189);
            swift_storeEnumTagMultiPayload();
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v121, 0, 1, v123);
          }
          uint64_t v190 = v119[6];
          uint64_t v191 = (char *)v86 + v190;
          long long v192 = (char *)v87 + v190;
          uint64_t v193 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v192, 1, v193))
          {
            uint64_t v194 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v191, v192, *(void *)(*(void *)(v194 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v193 - 8) + 32))(v191, v192, v193);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v191, 0, 1, v193);
          }
          uint64_t v219 = v119[7];
          uint64_t v220 = (char *)v86 + v219;
          uint64_t v221 = (char *)v87 + v219;
          long long v222 = *((_OWORD *)v221 + 1);
          *(_OWORD *)uint64_t v220 = *(_OWORD *)v221;
          *((_OWORD *)v220 + 1) = v222;
          v220[32] = v221[32];
          *((unsigned char *)v86 + v119[8]) = *((unsigned char *)v87 + v119[8]);
          goto LABEL_84;
        case 6u:
          long long v125 = v87[1];
          *long long v86 = *v87;
          v86[1] = v125;
          char v126 = (int *)type metadata accessor for NewsArticle();
          uint64_t v127 = v126[6];
          uint64_t v128 = (char *)v86 + v127;
          uint64_t v129 = (char *)v87 + v127;
          uint64_t v130 = type metadata accessor for URL();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v129, 1, v130))
          {
            uint64_t v131 = sub_10017DF08(&qword_100E749B0);
            memcpy(v128, v129, *(void *)(*(void *)(v131 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 32))(v128, v129, v130);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v128, 0, 1, v130);
          }
          uint64_t v195 = v126[7];
          uint64_t v196 = (char *)v86 + v195;
          uint64_t v197 = (char *)v87 + v195;
          uint64_t v198 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v198 - 8) + 32))(v196, v197, v198);
          uint64_t v199 = *(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 32);
          v199((char *)v86 + v126[8], (char *)v87 + v126[8], v130);
          uint64_t v200 = v126[9];
          uint64_t v201 = (_OWORD *)((char *)v86 + v200);
          uint64_t v202 = (char *)v87 + v200;
          long long v203 = *(_OWORD *)((char *)v87 + v200 + 16);
          *uint64_t v201 = *(_OWORD *)((char *)v87 + v200);
          v201[1] = v203;
          uint64_t v204 = *(int *)(type metadata accessor for NewsChannel() + 24);
          uint64_t v205 = (char *)v201 + v204;
          uint64_t v206 = &v202[v204];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v206, 1, v130))
          {
            uint64_t v207 = sub_10017DF08(&qword_100E749B0);
            memcpy(v205, v206, *(void *)(*(void *)(v207 - 8) + 64));
          }
          else
          {
            v199(v205, v206, v130);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v205, 0, 1, v130);
          }
          *(void *)((char *)v86 + v126[10]) = *(void *)((char *)v87 + v126[10]);
          *(void *)((char *)v86 + v126[11]) = *(void *)((char *)v87 + v126[11]);
          *(void *)((char *)v86 + v126[12]) = *(void *)((char *)v87 + v126[12]);
          goto LABEL_84;
        case 7u:
          uint64_t v132 = type metadata accessor for Location();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v132 - 8) + 32))(v86, v87, v132);
          uint64_t v133 = (int *)type metadata accessor for AveragesDetailViewState();
          *((unsigned char *)v86 + v133[5]) = *((unsigned char *)v87 + v133[5]);
          uint64_t v134 = v133[6];
          uint64_t v135 = (void *)((char *)v86 + v134);
          uint64_t v136 = (void *)((char *)v87 + v134);
          uint64_t v137 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v136, 1, (uint64_t)v137))
          {
            uint64_t v138 = sub_10017DF08(&qword_100E6B670);
            memcpy(v135, v136, *(void *)(*(void *)(v138 - 8) + 64));
          }
          else
          {
            *uint64_t v135 = *v136;
            uint64_t v208 = v137[5];
            uint64_t v209 = (char *)v135 + v208;
            char v337 = (char *)v136 + v208;
            uint64_t v210 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v210 - 8) + 32))(v209, v337, v210);
            *(void *)((char *)v135 + v137[6]) = *(void *)((char *)v136 + v137[6]);
            *(void *)((char *)v135 + v137[7]) = *(void *)((char *)v136 + v137[7]);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v135, 0, 1, (uint64_t)v137);
          }
          uint64_t v211 = v133[7];
          uint64_t v212 = (char *)v86 + v211;
          uint64_t v213 = (char *)v87 + v211;
          long long v214 = *((_OWORD *)v213 + 1);
          *(_OWORD *)uint64_t v212 = *(_OWORD *)v213;
          *((_OWORD *)v212 + 1) = v214;
          v212[32] = v213[32];
          goto LABEL_84;
        case 8u:
          uint64_t v139 = type metadata accessor for Location();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v139 - 8) + 32))(v86, v87, v139);
          uint64_t v140 = type metadata accessor for HomeAndWorkRefinementViewState();
          uint64_t v141 = *(int *)(v140 + 20);
          uint64_t v142 = (char *)v86 + v141;
          uint64_t v143 = (char *)v87 + v141;
          uint64_t v144 = type metadata accessor for LocationOfInterest();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 32))(v142, v143, v144);
          uint64_t v145 = *(int *)(v140 + 24);
          uint64_t v146 = (char *)v86 + v145;
          uint64_t v147 = (char *)v87 + v145;
          long long v148 = *((_OWORD *)v147 + 1);
          *(_OWORD *)uint64_t v146 = *(_OWORD *)v147;
          *((_OWORD *)v146 + 1) = v148;
          v146[32] = v147[32];
LABEL_84:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v86, v87, *(void *)(*(void *)(v88 - 8) + 64));
          break;
      }
      goto LABEL_123;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

BOOL sub_100942EB0(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for LocationPreviewViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_10016278C();
  sub_100119488();
  __chkstk_darwin(v6);
  int v8 = (char *)&v17 - v7;
  uint64_t v9 = sub_10017DF08(&qword_100EA2650);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_100125FF8();
  uint64_t v12 = v2 + *(int *)(v11 + 56);
  sub_10011A380(a1, v2, (void (*)(void))type metadata accessor for ModalViewState.MapViewModal);
  uint64_t v13 = sub_100152474();
  sub_10011A380(v13, v14, (void (*)(void))type metadata accessor for ModalViewState.MapViewModal);
  sub_100948F70(v2, (uint64_t)v8, (void (*)(void))type metadata accessor for LocationPreviewViewState);
  sub_100948F70(v12, v1, (void (*)(void))type metadata accessor for LocationPreviewViewState);
  BOOL v15 = (sub_10081C338((uint64_t)v8, v1) & 1) != 0
     && (sub_1004E6C48((uint64_t)&v8[*(int *)(v4 + 20)], v1 + *(int *)(v4 + 20)) & 1) != 0;
  sub_10011D54C(v1, (void (*)(void))type metadata accessor for LocationPreviewViewState);
  sub_10011D54C((uint64_t)v8, (void (*)(void))type metadata accessor for LocationPreviewViewState);
  return v15;
}

uint64_t sub_100943044(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6E6F697461636F6CLL && a2 == 0xEF77656976657250)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1009430F0()
{
  return 0x6E6F697461636F6CLL;
}

void sub_100943114()
{
  sub_10016314C();
  uint64_t v12 = v0;
  char v4 = v3;
  sub_10017DF08(&qword_100EA2790);
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_10016279C();
  type metadata accessor for LocationPreviewViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_100125FF8();
  uint64_t v7 = type metadata accessor for ModalViewState.MapViewModal(0);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_10012B938();
  sub_10017DF08(&qword_100EA2798);
  sub_100179C0C();
  __chkstk_darwin(v9);
  sub_10008B8C0();
  sub_1001B1E64(v4, v4[3]);
  sub_10094927C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10011A380(v12, v1, (void (*)(void))type metadata accessor for ModalViewState.MapViewModal);
  sub_100948F70(v1, v2, (void (*)(void))type metadata accessor for LocationPreviewViewState);
  sub_1009492C8();
  KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
  sub_100948E78(&qword_100EA27A0, (void (*)(uint64_t))type metadata accessor for LocationPreviewViewState);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  sub_100127C2C();
  sub_100162F0C();
  v10();
  sub_10011D54C(v2, (void (*)(void))type metadata accessor for LocationPreviewViewState);
  sub_1001A19CC();
  v11();
  sub_100163164();
}

void sub_100943370()
{
  sub_10016314C();
  char v3 = v2;
  uint64_t v30 = v4;
  uint64_t v32 = type metadata accessor for ModalViewState.MapViewModal(0);
  sub_100162E4C();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100EA2768);
  sub_100179C0C();
  uint64_t v31 = v9;
  __chkstk_darwin(v10);
  sub_100125FF8();
  uint64_t v11 = sub_10017DF08(&qword_100EA2770);
  sub_100179C0C();
  uint64_t v33 = v12;
  __chkstk_darwin(v13);
  sub_10011C760();
  sub_1001B1E64(v3, v3[3]);
  sub_10094927C();
  uint64_t v14 = (uint64_t)v3;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v0)
  {
    uint64_t v28 = v8;
    uint64_t v15 = KeyedDecodingContainer.allKeys.getter();
    uint64_t v16 = *(void *)(v15 + 16);
    uint64_t v29 = v3;
    if (v16
      && (sub_100723214(1, v16, v15, v15 + 32, 0, (2 * v16) | 1),
          uint64_t v18 = v17,
          unint64_t v20 = v19,
          swift_bridgeObjectRelease(),
          v18 == v20 >> 1))
    {
      sub_1009492C8();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      type metadata accessor for LocationPreviewViewState(0);
      sub_100948E78(&qword_100EA2788, (void (*)(uint64_t))type metadata accessor for LocationPreviewViewState);
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      uint64_t v14 = (uint64_t)v29;
      sub_100162F0C();
      v26();
      swift_unknownObjectRelease();
      sub_100162F0C();
      v27();
      sub_100948F70((uint64_t)v7, v30, (void (*)(void))type metadata accessor for ModalViewState.MapViewModal);
    }
    else
    {
      uint64_t v21 = v32;
      type metadata accessor for DecodingError();
      swift_allocError();
      uint64_t v23 = v22;
      sub_10017DF08(&qword_100E67280);
      *uint64_t v23 = v21;
      KeyedDecodingContainer.codingPath.getter();
      DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
      sub_100162880();
      (*(void (**)(uint64_t *))(v24 + 104))(v23);
      swift_willThrow();
      uint64_t v25 = v33;
      uint64_t v14 = (uint64_t)v29;
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v1, v11);
    }
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v14);
  sub_100163164();
}

void sub_100943730()
{
  sub_100162EA0();
  uint64_t v99 = v5;
  uint64_t v100 = v6;
  uint64_t v87 = type metadata accessor for HomeAndWorkRefinementViewState();
  sub_100162E4C();
  __chkstk_darwin(v7);
  uint64_t v94 = (uint64_t)&HourPrecipitationDetailViewState - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for URL();
  sub_100179C0C();
  uint64_t v95 = v10;
  uint64_t v96 = v9;
  __chkstk_darwin(v9);
  sub_10017225C(v11, HourPrecipitationDetailViewState);
  uint64_t v12 = type metadata accessor for AveragesDetailViewState();
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_10017B2CC(v14, HourPrecipitationDetailViewState);
  uint64_t v15 = type metadata accessor for MoonDetailViewState();
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_100182904(v17, HourPrecipitationDetailViewState);
  uint64_t v84 = type metadata accessor for SunriseSunsetDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v18);
  uint64_t v93 = (uint64_t)&HourPrecipitationDetailViewState - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  HourPrecipitationDetailViewuint64_t State = type metadata accessor for NextHourPrecipitationDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v20);
  uint64_t v92 = (uint64_t)&HourPrecipitationDetailViewState - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100129064();
  uint64_t v85 = type metadata accessor for AirQualityDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v22);
  uint64_t v88 = (uint64_t)&HourPrecipitationDetailViewState - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100129064();
  uint64_t v24 = type metadata accessor for ConditionDetailViewState();
  uint64_t v25 = sub_100109308(v24);
  __chkstk_darwin(v25);
  uint64_t v86 = (uint64_t)&HourPrecipitationDetailViewState - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100129064();
  type metadata accessor for ModalViewState.LocationDetailModal(v27);
  sub_100162E4C();
  __chkstk_darwin(v28);
  sub_100162EF8();
  uint64_t v98 = v29;
  sub_1001626D4();
  __chkstk_darwin(v30);
  sub_10017FF4C();
  uint64_t v32 = __chkstk_darwin(v31);
  uint64_t v34 = (char *)&HourPrecipitationDetailViewState - v33;
  __chkstk_darwin(v32);
  sub_100119488();
  __chkstk_darwin(v35);
  sub_100109770();
  uint64_t v97 = v36;
  sub_1001626D4();
  uint64_t v38 = __chkstk_darwin(v37);
  uint64_t v40 = (char *)&HourPrecipitationDetailViewState - v39;
  __chkstk_darwin(v38);
  sub_100181E70();
  __chkstk_darwin(v41);
  sub_100127588();
  uint64_t v42 = sub_10017DF08(&qword_100EA2658);
  uint64_t v43 = sub_100109308(v42);
  __chkstk_darwin(v43);
  sub_100162EB8();
  uint64_t v45 = v1 + *(int *)(v44 + 56);
  sub_10011A380(v99, v1, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
  sub_10011A380(v100, v45, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10011A380(v1, v4, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
      if (sub_100181488() != 1)
      {
        uint64_t v46 = type metadata accessor for AirQualityDetailViewState;
        uint64_t v47 = v4;
        goto LABEL_37;
      }
      uint64_t v63 = v88;
      sub_100948F70(v45, v88, (void (*)(void))type metadata accessor for AirQualityDetailViewState);
      if ((static Location.== infix(_:_:)() & 1) != 0
        && *(unsigned __int8 *)(v4 + *(int *)(v85 + 20)) == *(unsigned __int8 *)(v63 + *(int *)(v85 + 20)))
      {
        sub_10011C0DC();
        if ((v66 & 1) == 0 && (v65 & 1) == 0) {
          sub_100183B8C(v64);
        }
      }
      uint64_t v80 = type metadata accessor for AirQualityDetailViewState;
      sub_10011D54C(v63, (void (*)(void))type metadata accessor for AirQualityDetailViewState);
      uint64_t v81 = v4;
      goto LABEL_61;
    case 2u:
      sub_10011A380(v1, (uint64_t)v40, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
      if (sub_100181488() != 2)
      {
        uint64_t v46 = type metadata accessor for NextHourPrecipitationDetailViewState;
        uint64_t v47 = (uint64_t)v40;
        goto LABEL_37;
      }
      uint64_t v48 = v92;
      sub_100948F70(v45, v92, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailViewState);
      if (static Location.== infix(_:_:)())
      {
        uint64_t v49 = *(int *)(HourPrecipitationDetailViewState + 20);
        char v50 = v40[v49 + 32];
        uint64_t v51 = v48 + v49;
        if ((v50 & 1) == 0 && (*(unsigned char *)(v51 + 32) & 1) == 0) {
          sub_100183B8C((uint64_t *)v51);
        }
      }
      uint64_t v80 = type metadata accessor for NextHourPrecipitationDetailViewState;
      sub_10011D54C(v48, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailViewState);
      uint64_t v81 = (uint64_t)v40;
      goto LABEL_61;
    case 3u:
      uint64_t v52 = v97;
      sub_10011A380(v1, v97, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
      if (sub_100181488() != 3)
      {
        uint64_t v77 = type metadata accessor for SunriseSunsetDetailViewState;
        goto LABEL_34;
      }
      uint64_t v53 = v93;
      sub_100948F70(v45, v93, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewState);
      if ((static Location.== infix(_:_:)() & 1) == 0) {
        goto LABEL_52;
      }
      sub_10011C0DC();
      if (v56)
      {
        if (!v55) {
          goto LABEL_52;
        }
      }
      else if ((v55 & 1) != 0 || !sub_100183B8C(v54))
      {
        goto LABEL_52;
      }
      if (*(unsigned __int8 *)(v52 + *(int *)(v84 + 24)) == *(unsigned __int8 *)(v53 + *(int *)(v84 + 24)))
      {
        uint64_t v82 = type metadata accessor for SunriseSunsetDetailViewState;
        goto LABEL_57;
      }
LABEL_52:
      uint64_t v82 = type metadata accessor for SunriseSunsetDetailViewState;
      goto LABEL_57;
    case 4u:
      sub_10011A380(v1, v0, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
      if (sub_100181488() == 4)
      {
        uint64_t v57 = v45;
        uint64_t v58 = v91;
        sub_100948F70(v57, v91, (void (*)(void))type metadata accessor for MoonDetailViewState);
        sub_100411F88(v0, v58);
        sub_10011D54C(v58, (void (*)(void))type metadata accessor for MoonDetailViewState);
        sub_10011D54C(v0, (void (*)(void))type metadata accessor for MoonDetailViewState);
        uint64_t v59 = v1;
        goto LABEL_43;
      }
      uint64_t v46 = type metadata accessor for MoonDetailViewState;
      uint64_t v47 = v0;
      goto LABEL_37;
    case 5u:
      uint64_t v67 = sub_1001A69C0();
      sub_10011A380(v67, v68, v69);
      if (sub_100181488() == 5)
      {
        uint64_t v70 = v89;
        sub_100948F70(v45, v89, (void (*)(void))type metadata accessor for AveragesDetailViewState);
        uint64_t v71 = sub_100119464();
        sub_100381024(v71, v72);
        long long v73 = type metadata accessor for AveragesDetailViewState;
        sub_10011D54C(v70, (void (*)(void))type metadata accessor for AveragesDetailViewState);
        uint64_t v74 = (uint64_t)v34;
        goto LABEL_41;
      }
      uint64_t v46 = type metadata accessor for AveragesDetailViewState;
      uint64_t v47 = (uint64_t)v34;
      goto LABEL_37;
    case 6u:
      sub_10011A380(v1, v2, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
      if (sub_100181488() == 6)
      {
        uint64_t v75 = v95;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 32))(v90, v45, v96);
        sub_100152474();
        static URL.== infix(_:_:)();
        uint64_t v76 = *(void (**)(void))(v75 + 8);
        sub_1001791A0();
        v76();
        sub_1001791A0();
        v76();
        goto LABEL_42;
      }
      sub_10019D304();
      sub_100162F0C();
      v78();
      goto LABEL_38;
    case 7u:
      uint64_t v52 = v98;
      sub_10011A380(v1, v98, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
      if (sub_100181488() == 7)
      {
        uint64_t v53 = v94;
        sub_100948F70(v45, v94, (void (*)(void))type metadata accessor for HomeAndWorkRefinementViewState);
        if ((static Location.== infix(_:_:)() & 1) == 0 || (static LocationOfInterest.== infix(_:_:)() & 1) == 0) {
          goto LABEL_56;
        }
        sub_10011C0DC();
        if (v62)
        {
          if (!v61)
          {
LABEL_56:
            uint64_t v82 = type metadata accessor for HomeAndWorkRefinementViewState;
LABEL_57:
            uint64_t v80 = v82;
            sub_10011D54C(v53, (void (*)(void))v82);
            uint64_t v81 = v52;
LABEL_61:
            sub_10011D54C(v81, (void (*)(void))v80);
            sub_10011D54C(v1, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
            goto LABEL_62;
          }
        }
        else if ((v61 & 1) != 0 || !sub_100183B8C(v60))
        {
          goto LABEL_56;
        }
        uint64_t v82 = type metadata accessor for HomeAndWorkRefinementViewState;
        goto LABEL_57;
      }
      uint64_t v77 = type metadata accessor for HomeAndWorkRefinementViewState;
LABEL_34:
      uint64_t v46 = v77;
      uint64_t v47 = v52;
LABEL_37:
      sub_10011D54C(v47, (void (*)(void))v46);
LABEL_38:
      sub_100178110(v1, &qword_100EA2658);
LABEL_62:
      sub_100162694();
      return;
    default:
      sub_10011A380(v1, v3, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
      if (sub_100181488())
      {
        uint64_t v46 = type metadata accessor for ConditionDetailViewState;
        uint64_t v47 = v3;
        goto LABEL_37;
      }
      uint64_t v79 = v86;
      sub_100948F70(v45, v86, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      sub_1004D612C();
      long long v73 = type metadata accessor for ConditionDetailViewState;
      sub_10011D54C(v79, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      uint64_t v74 = v3;
LABEL_41:
      sub_10011D54C(v74, (void (*)(void))v73);
LABEL_42:
      uint64_t v59 = v1;
LABEL_43:
      sub_10011D54C(v59, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
      goto LABEL_62;
  }
}

uint64_t sub_100944228(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F697469646E6F63 && a2 == 0xEF6C69617465446ELL;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000100C95BC0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000100C95BE0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000100C95C00 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    BOOL v6 = a1 == 0x617465446E6F6F6DLL && a2 == 0xEA00000000006C69;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else
    {
      BOOL v7 = a1 == 0x7365676172657661 && a2 == 0xEE006C6961746544;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else
      {
        BOOL v8 = a1 == 0x63416F546C6C6163 && a2 == 0xEC0000006E6F6974;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 6;
        }
        else if (a1 == 0xD000000000000015 && a2 == 0x8000000100C95C30)
        {
          swift_bridgeObjectRelease();
          return 7;
        }
        else
        {
          char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v9) {
            return 7;
          }
          else {
            return 8;
          }
        }
      }
    }
  }
}

unint64_t sub_1009445B0(char a1)
{
  unint64_t result = 0x6F697469646E6F63;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0x617465446E6F6F6DLL;
      break;
    case 5:
      unint64_t result = 0x7365676172657661;
      break;
    case 6:
      unint64_t result = 0x63416F546C6C6163;
      break;
    case 7:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1009446EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, char a11, char a12, char a13, char a14, char a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  sub_10016314C();
  a26 = v32;
  a27 = v33;
  uint64_t v112 = v28;
  uint64_t v113 = v27;
  uint64_t v35 = v34;
  sub_10017DF08(&qword_100EA2720);
  sub_100179C0C();
  v108[1] = v37;
  v108[2] = v36;
  __chkstk_darwin(v36);
  v108[0] = (char *)v95 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100129064();
  uint64_t v105 = type metadata accessor for HomeAndWorkRefinementViewState();
  sub_100162E4C();
  __chkstk_darwin(v39);
  sub_100182904(v40, v95[0]);
  uint64_t v106 = sub_10017DF08(&qword_100EA2728);
  sub_100179C0C();
  uint64_t v104 = v41;
  __chkstk_darwin(v42);
  uint64_t v101 = (char *)v95 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100129064();
  type metadata accessor for URL();
  sub_100179C0C();
  uint64_t v102 = v45;
  uint64_t v103 = v44;
  __chkstk_darwin(v44);
  sub_100109314();
  uint64_t v100 = v46;
  sub_10017DF08(&qword_100EA2730);
  sub_100179C0C();
  uint64_t v98 = v48;
  uint64_t v99 = v47;
  __chkstk_darwin(v47);
  sub_100109314();
  uint64_t v97 = v49;
  sub_100129064();
  v95[21] = type metadata accessor for AveragesDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v50);
  sub_100109314();
  uint64_t v96 = v51;
  v95[22] = sub_10017DF08(&qword_100EA2738);
  sub_100179C0C();
  v95[20] = v52;
  __chkstk_darwin(v53);
  sub_100109314();
  v95[19] = v54;
  sub_100129064();
  v95[16] = type metadata accessor for MoonDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v55);
  sub_100109314();
  sub_100109338(v56);
  v95[17] = sub_10017DF08(&qword_100EA2740);
  sub_100179C0C();
  v95[15] = v57;
  __chkstk_darwin(v58);
  sub_100109314();
  v95[14] = v59;
  sub_100129064();
  v95[12] = type metadata accessor for SunriseSunsetDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v60);
  sub_100109314();
  sub_100109338(v61);
  v95[11] = sub_10017DF08(&qword_100EA2748);
  sub_100179C0C();
  v95[10] = v62;
  __chkstk_darwin(v63);
  sub_100109314();
  v95[9] = v64;
  sub_100129064();
  v95[7] = type metadata accessor for NextHourPrecipitationDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v65);
  sub_100109314();
  sub_100109338(v66);
  v95[6] = sub_10017DF08(&qword_100EA2750);
  sub_100179C0C();
  void v95[5] = v67;
  __chkstk_darwin(v68);
  sub_100109314();
  v95[4] = v69;
  sub_100129064();
  v95[2] = type metadata accessor for AirQualityDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v70);
  sub_100109314();
  sub_100109338(v71);
  v95[1] = sub_10017DF08(&qword_100EA2758);
  sub_100179C0C();
  v95[0] = v72;
  __chkstk_darwin(v73);
  sub_10012B938();
  type metadata accessor for ConditionDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v74);
  sub_1001724DC();
  sub_100162E4C();
  __chkstk_darwin(v75);
  sub_10016279C();
  sub_10017DF08(&qword_100EA2760);
  sub_100179C0C();
  uint64_t v110 = v77;
  uint64_t v111 = v76;
  __chkstk_darwin(v76);
  sub_100125FF8();
  sub_1001B1E64(v35, v35[3]);
  sub_100948FD0();
  uint64_t v109 = v30;
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10011A380(v113, v29, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1001EA9C8(v29, (void (*)(void))type metadata accessor for AirQualityDetailViewState, (uint64_t)v108);
      a11 = 1;
      sub_1009491E4();
      sub_1001A26EC();
      sub_100948E78(&qword_100E7C338, (void (*)(uint64_t))type metadata accessor for AirQualityDetailViewState);
      sub_100164BD4();
      sub_100162C5C();
      uint64_t v79 = sub_100180824();
      v80(v79);
      uint64_t v81 = type metadata accessor for AirQualityDetailViewState;
      goto LABEL_10;
    case 2u:
      sub_1001EA9C8(v29, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailViewState, (uint64_t)&v111);
      a12 = 2;
      sub_100949198();
      sub_1001A26EC();
      sub_100948E78(&qword_100E7C330, (void (*)(uint64_t))type metadata accessor for NextHourPrecipitationDetailViewState);
      sub_100164BD4();
      sub_100162C5C();
      uint64_t v82 = sub_100180824();
      v83(v82);
      uint64_t v81 = type metadata accessor for NextHourPrecipitationDetailViewState;
      goto LABEL_10;
    case 3u:
      sub_1001EA9C8(v29, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewState, (uint64_t)&a10);
      a13 = 3;
      sub_10094914C();
      sub_1001A26EC();
      sub_100948E78(&qword_100E7C328, (void (*)(uint64_t))type metadata accessor for SunriseSunsetDetailViewState);
      sub_100164BD4();
      sub_100162C5C();
      uint64_t v84 = sub_100180824();
      v85(v84);
      uint64_t v81 = type metadata accessor for SunriseSunsetDetailViewState;
      goto LABEL_10;
    case 4u:
      sub_1001EA9C8(v29, (void (*)(void))type metadata accessor for MoonDetailViewState, (uint64_t)&a22);
      a14 = 4;
      sub_100949100();
      sub_1001A26EC();
      sub_100948E78(&qword_100E7C318, (void (*)(uint64_t))type metadata accessor for MoonDetailViewState);
      sub_100164BD4();
      sub_100162C5C();
      uint64_t v86 = sub_100180824();
      v87(v86);
      uint64_t v81 = type metadata accessor for MoonDetailViewState;
      goto LABEL_10;
    case 5u:
      uint64_t v31 = v96;
      sub_100948F70(v29, v96, (void (*)(void))type metadata accessor for AveragesDetailViewState);
      a15 = 5;
      sub_1009490B4();
      sub_1001A26EC();
      sub_100948E78(&qword_100E7C310, (void (*)(uint64_t))type metadata accessor for AveragesDetailViewState);
      sub_100164BD4();
      sub_100162C5C();
      uint64_t v88 = sub_100180824();
      v89(v88);
      uint64_t v81 = type metadata accessor for AveragesDetailViewState;
      goto LABEL_10;
    case 6u:
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v102 + 32))(v100, v29, v103);
      a16 = 6;
      sub_100949068();
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      sub_100948E78(&qword_100E6A658, (void (*)(uint64_t))&type metadata accessor for URL);
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      sub_100162F0C();
      v90();
      sub_100164944();
      v91();
      goto LABEL_11;
    case 7u:
      uint64_t v31 = v107;
      sub_100948F70(v29, v107, (void (*)(void))type metadata accessor for HomeAndWorkRefinementViewState);
      a17 = 7;
      sub_10094901C();
      sub_1001A26EC();
      sub_100948E78(&qword_100E7C308, (void (*)(uint64_t))type metadata accessor for HomeAndWorkRefinementViewState);
      sub_100164BD4();
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      uint64_t v92 = sub_100180824();
      v93(v92);
      uint64_t v81 = type metadata accessor for HomeAndWorkRefinementViewState;
LABEL_10:
      sub_10011D54C(v31, (void (*)(void))v81);
LABEL_11:
      sub_10019D304();
      break;
    default:
      sub_100948F70(v29, v31, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      a10 = 0;
      sub_100949230();
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      sub_100948E78(&qword_100E7C340, (void (*)(uint64_t))type metadata accessor for ConditionDetailViewState);
      sub_100164BD4();
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      sub_10019D304();
      sub_100162F0C();
      v78();
      sub_10011D54C(v31, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      break;
  }
  sub_100162F0C();
  v94();
  sub_100163164();
}

void sub_100945304()
{
  sub_10016314C();
  uint64_t v137 = v1;
  BOOL v7 = v6;
  uint64_t v129 = v8;
  uint64_t v123 = sub_10017DF08(&qword_100EA2690);
  sub_100179C0C();
  uint64_t v131 = v9;
  __chkstk_darwin(v10);
  uint64_t v130 = (char *)&v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100EA2698);
  sub_100179C0C();
  uint64_t v121 = v13;
  uint64_t v122 = v12;
  __chkstk_darwin(v12);
  sub_10017225C(v14, v99);
  sub_10017DF08(&qword_100EA26A0);
  sub_100179C0C();
  uint64_t v119 = v16;
  uint64_t v120 = v15;
  __chkstk_darwin(v15);
  sub_100109314();
  uint64_t v135 = v17;
  uint64_t v118 = sub_10017DF08(&qword_100EA26A8);
  sub_100179C0C();
  uint64_t v117 = v18;
  __chkstk_darwin(v19);
  sub_10017B2CC(v20, v99);
  uint64_t v116 = sub_10017DF08(&qword_100EA26B0);
  sub_100179C0C();
  uint64_t v115 = v21;
  __chkstk_darwin(v22);
  uint64_t v128 = (char *)&v99 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_10017DF08(&qword_100EA26B8);
  sub_100179C0C();
  uint64_t v113 = v24;
  __chkstk_darwin(v25);
  sub_100109314();
  uint64_t v127 = v26;
  uint64_t v112 = sub_10017DF08(&qword_100EA26C0);
  sub_100179C0C();
  uint64_t v111 = v27;
  __chkstk_darwin(v28);
  char v126 = (char *)&v99 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_10017DF08(&qword_100EA26C8);
  sub_100179C0C();
  uint64_t v109 = v30;
  __chkstk_darwin(v31);
  long long v125 = (char *)&v99 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100EA26D0);
  sub_100179C0C();
  uint64_t v133 = v34;
  uint64_t v134 = v33;
  __chkstk_darwin(v33);
  uint64_t v132 = sub_1001724DC();
  sub_100162E4C();
  __chkstk_darwin(v35);
  sub_100162EF8();
  uint64_t v124 = v36;
  sub_1001626D4();
  __chkstk_darwin(v37);
  sub_100109770();
  uint64_t v108 = v38;
  sub_1001626D4();
  __chkstk_darwin(v39);
  sub_100109770();
  uint64_t v107 = v40;
  sub_1001626D4();
  __chkstk_darwin(v41);
  sub_100109770();
  uint64_t v106 = v42;
  sub_1001626D4();
  __chkstk_darwin(v43);
  sub_100119488();
  __chkstk_darwin(v44);
  sub_10017FF4C();
  __chkstk_darwin(v45);
  sub_100181E70();
  __chkstk_darwin(v46);
  sub_100164AF0();
  __chkstk_darwin(v47);
  uint64_t v49 = (char *)&v99 - v48;
  uint64_t v50 = v7[3];
  uint64_t v136 = v7;
  sub_1001B1E64(v7, v50);
  sub_100948FD0();
  uint64_t v51 = v137;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v51)
  {
    uint64_t v101 = v4;
    uint64_t v102 = v2;
    uint64_t v103 = v0;
    uint64_t v104 = v5;
    uint64_t v105 = v49;
    uint64_t v52 = v134;
    uint64_t v137 = v3;
    uint64_t v53 = KeyedDecodingContainer.allKeys.getter();
    uint64_t v54 = *(void *)(v53 + 16);
    if (v54
      && (uint64_t v100 = 0,
          uint64_t v55 = *(unsigned __int8 *)(v53 + 32),
          sub_100723214(1, v54, v53, v53 + 32, 0, (2 * v54) | 1),
          uint64_t v57 = v56,
          unint64_t v59 = v58,
          swift_bridgeObjectRelease(),
          v57 == v59 >> 1))
    {
      uint64_t v60 = v100;
      uint64_t v61 = (uint64_t)v130;
      switch(v55)
      {
        case 1:
          sub_1009491E4();
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          if (v60)
          {
            swift_unknownObjectRelease();
            uint64_t v70 = sub_100119464();
            goto LABEL_7;
          }
          type metadata accessor for AirQualityDetailViewState();
          sub_100948E78(&qword_100E7C2E8, (void (*)(uint64_t))type metadata accessor for AirQualityDetailViewState);
          uint64_t v74 = v101;
          sub_100188C20();
          sub_100162F0C();
          v90();
          swift_unknownObjectRelease();
          uint64_t v91 = sub_100176E60();
          v92(v91);
          swift_storeEnumTagMultiPayload();
          uint64_t v61 = v74;
          goto LABEL_21;
        case 2:
          sub_100949198();
          KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
          uint64_t v73 = (uint64_t)v105;
          if (v60)
          {
            swift_unknownObjectRelease();
            uint64_t v70 = sub_10019DF88();
            uint64_t v72 = v52;
            goto LABEL_7;
          }
          type metadata accessor for NextHourPrecipitationDetailViewState();
          sub_100948E78(&qword_100E7C2E0, (void (*)(uint64_t))type metadata accessor for NextHourPrecipitationDetailViewState);
          sub_100186CFC();
          sub_10019DA98();
          sub_1001CA924();
          uint64_t v93 = sub_100180824();
          v94(v93);
          swift_unknownObjectRelease();
          sub_1001A19CC();
          v95();
          sub_100187388();
          swift_storeEnumTagMultiPayload();
LABEL_22:
          sub_100948F70(v61, v73, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
          sub_100948F70(v73, v129, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
          break;
        case 3:
          sub_10094914C();
          sub_10017EB98();
          type metadata accessor for SunriseSunsetDetailViewState();
          sub_100948E78(&qword_100E7C2D8, (void (*)(uint64_t))type metadata accessor for SunriseSunsetDetailViewState);
          sub_100186CFC();
          sub_10019DA98();
          sub_1001CA924();
          uint64_t v75 = sub_100180824();
          v76(v75);
          swift_unknownObjectRelease();
          uint64_t v77 = sub_100189584();
          v78(v77);
          sub_100187388();
          goto LABEL_20;
        case 4:
          sub_100949100();
          sub_10017EB98();
          type metadata accessor for MoonDetailViewState();
          sub_100948E78(&qword_100E7C2D0, (void (*)(uint64_t))type metadata accessor for MoonDetailViewState);
          sub_100186CFC();
          sub_10019DA98();
          uint64_t v79 = sub_100180824();
          v80(v79);
          swift_unknownObjectRelease();
          sub_10019D304();
          sub_100162F0C();
          v81();
          sub_100187388();
          goto LABEL_20;
        case 5:
          sub_1009490B4();
          sub_10017EB98();
          type metadata accessor for AveragesDetailViewState();
          sub_100948E78(&qword_100E7C2C0, (void (*)(uint64_t))type metadata accessor for AveragesDetailViewState);
          sub_100186CFC();
          sub_10019DA98();
          sub_1001CA924();
          uint64_t v82 = sub_100180824();
          v83(v82);
          swift_unknownObjectRelease();
          uint64_t v84 = sub_100189584();
          v85(v84);
          sub_100187388();
          goto LABEL_20;
        case 6:
          sub_100949068();
          sub_10017EB98();
          type metadata accessor for URL();
          sub_100948E78(&qword_100E6A788, (void (*)(uint64_t))&type metadata accessor for URL);
          sub_100186CFC();
          sub_10019DA98();
          sub_1001CA924();
          uint64_t v86 = sub_100180824();
          v87(v86);
          swift_unknownObjectRelease();
          uint64_t v88 = sub_100189584();
          v89(v88);
          sub_100187388();
          goto LABEL_20;
        case 7:
          sub_10094901C();
          sub_10017EB98();
          type metadata accessor for HomeAndWorkRefinementViewState();
          sub_100948E78(&qword_100E7C2B8, (void (*)(uint64_t))type metadata accessor for HomeAndWorkRefinementViewState);
          sub_100188C20();
          sub_1001CA924();
          sub_1001791A0();
          v96();
          swift_unknownObjectRelease();
          uint64_t v97 = sub_100189584();
          v98(v97);
          uint64_t v61 = v124;
          sub_100187388();
          goto LABEL_20;
        default:
          sub_100949230();
          sub_10017EB98();
          type metadata accessor for ConditionDetailViewState();
          sub_100948E78(&qword_100E7C2F0, (void (*)(uint64_t))type metadata accessor for ConditionDetailViewState);
          sub_100186CFC();
          sub_10019DA98();
          sub_1001CA924();
          uint64_t v62 = sub_100180824();
          v63(v62);
          swift_unknownObjectRelease();
          uint64_t v64 = sub_100189584();
          v65(v64);
          sub_100187388();
LABEL_20:
          swift_storeEnumTagMultiPayload();
LABEL_21:
          uint64_t v73 = (uint64_t)v105;
          goto LABEL_22;
      }
    }
    else
    {
      uint64_t v66 = v132;
      type metadata accessor for DecodingError();
      swift_allocError();
      uint64_t v68 = v67;
      sub_10017DF08(&qword_100E67280);
      uint64_t *v68 = v66;
      KeyedDecodingContainer.codingPath.getter();
      DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
      sub_100162880();
      (*(void (**)(uint64_t *))(v69 + 104))(v68);
      swift_willThrow();
      swift_unknownObjectRelease();
      uint64_t v70 = sub_10019DF88();
      uint64_t v72 = v52;
LABEL_7:
      v71(v70, v72);
    }
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v136);
  sub_100163164();
}

uint64_t sub_1009460C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100943044(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1009460F0(uint64_t a1)
{
  unint64_t v2 = sub_10094927C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10094612C(uint64_t a1)
{
  unint64_t v2 = sub_10094927C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100946168(uint64_t a1)
{
  unint64_t v2 = sub_1009492C8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1009461A4(uint64_t a1)
{
  unint64_t v2 = sub_1009492C8();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1009461E4()
{
}

void sub_1009461FC()
{
}

uint64_t sub_100946214(uint64_t a1)
{
  unint64_t v2 = sub_1009491E4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100946250(uint64_t a1)
{
  unint64_t v2 = sub_1009491E4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10094628C(uint64_t a1)
{
  unint64_t v2 = sub_1009490B4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1009462C8(uint64_t a1)
{
  unint64_t v2 = sub_1009490B4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100946304(uint64_t a1)
{
  unint64_t v2 = sub_100949068();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100946340(uint64_t a1)
{
  unint64_t v2 = sub_100949068();

  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t sub_10094637C()
{
  return sub_1009445B0(*v0);
}

uint64_t sub_100946384@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100944228(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1009463AC(uint64_t a1)
{
  unint64_t v2 = sub_100948FD0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1009463E8(uint64_t a1)
{
  unint64_t v2 = sub_100948FD0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100946424(uint64_t a1)
{
  unint64_t v2 = sub_100949230();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100946460(uint64_t a1)
{
  unint64_t v2 = sub_100949230();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10094649C(uint64_t a1)
{
  unint64_t v2 = sub_10094901C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1009464D8(uint64_t a1)
{
  unint64_t v2 = sub_10094901C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100946514(uint64_t a1)
{
  unint64_t v2 = sub_100949100();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100946550(uint64_t a1)
{
  unint64_t v2 = sub_100949100();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10094658C(uint64_t a1)
{
  unint64_t v2 = sub_100949198();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1009465C8(uint64_t a1)
{
  unint64_t v2 = sub_100949198();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100946604(uint64_t a1)
{
  unint64_t v2 = sub_10094914C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100946640(uint64_t a1)
{
  unint64_t v2 = sub_10094914C();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100946680()
{
}

#error "1009466A4: call analysis failed (funcsize=6)"

void sub_1009466B0()
{
  sub_100162EA0();
  uint64_t v49 = v6;
  uint64_t v7 = type metadata accessor for ModalViewState.LocationDetailModal(0);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_100162EB8();
  uint64_t v9 = sub_10017DF08(&qword_100E663E8);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_10016278C();
  sub_100181E70();
  __chkstk_darwin(v11);
  sub_100127588();
  uint64_t v12 = type metadata accessor for LocationPreviewViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v13);
  uint64_t v14 = sub_100163E88();
  type metadata accessor for ModalViewState(v14);
  sub_100162E4C();
  __chkstk_darwin(v15);
  sub_10012B938();
  sub_10017DF08(&qword_100EA2678);
  sub_100179C0C();
  uint64_t v47 = v17;
  uint64_t v48 = v16;
  __chkstk_darwin(v16);
  sub_10016279C();
  sub_10011A380(v0, (uint64_t)v1, (void (*)(void))type metadata accessor for ModalViewState);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      char v24 = *v1;
      char v25 = v1[1];
      sub_10017DF08(&qword_100E635E0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100C251B0;
      uint64_t v27 = sub_10017E790(inited, 0xD000000000000019);
      *(void *)(v27 + 72) = &type metadata for NotificationSettingsViewState;
      *(unsigned char *)(v27 + 48) = v24;
      *(unsigned char *)(v27 + 49) = v25;
      Dictionary.init(dictionaryLiteral:)();
      goto LABEL_12;
    case 2u:
      uint64_t v28 = *(void *)v1;
      sub_10017DF08(&qword_100E635E0);
      uint64_t v29 = swift_initStackObject();
      *(_OWORD *)(v29 + 16) = xmmword_100C251B0;
      uint64_t v30 = sub_10017E790(v29, 0xD000000000000017);
      *(void *)(v30 + 72) = &unk_100E0F6E0;
      *(void *)(v30 + 48) = v28;
      swift_retain();
      Dictionary.init(dictionaryLiteral:)();
      goto LABEL_6;
    case 3u:
      uint64_t v31 = *(void *)v1;
      sub_10017DF08(&qword_100E635E0);
      uint64_t v32 = swift_initStackObject();
      *(_OWORD *)(v32 + 16) = xmmword_100C251B0;
      uint64_t v33 = sub_10017E790(v32, 0xD000000000000012);
      *(void *)(v33 + 72) = &unk_100E0F6B8;
      *(void *)(v33 + 48) = v31;
      swift_retain();
      Dictionary.init(dictionaryLiteral:)();
LABEL_6:
      ShortDescription.init(name:_:)();
      swift_release();
      goto LABEL_13;
    case 4u:
      uint64_t v34 = sub_100152474();
      sub_100426F98(v34, v35);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v36 = swift_initStackObject();
      *(_OWORD *)(v36 + 16) = xmmword_100C251B0;
      strcpy((char *)(v36 + 32), "mapViewModal");
      *(unsigned char *)(v36 + 45) = 0;
      *(_WORD *)(v36 + 46) = -5120;
      sub_100948F08(v3, v4);
      uint64_t v37 = type metadata accessor for ModalViewState.MapViewModal(0);
      if (_s7Weather24LocationCompositionStateOwet_0(v4, 1, v37) == 1)
      {
        sub_100178110(v4, &qword_100E663E8);
        long long v50 = 0u;
        long long v51 = 0u;
        uint64_t v39 = v48;
        uint64_t v38 = v49;
        uint64_t v40 = v47;
      }
      else
      {
        sub_100946EDC(v52);
        sub_10011D54C(v4, (void (*)(void))type metadata accessor for ModalViewState.MapViewModal);
        uint64_t v45 = v53;
        sub_1001B1E64(v52, v53);
        *((void *)&v51 + 1) = v45;
        sub_10023C310((uint64_t *)&v50);
        sub_100162880();
        (*(void (**)(void))(v46 + 16))();
        _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v52);
        uint64_t v39 = v48;
        uint64_t v38 = v49;
        uint64_t v40 = v47;
        if (*((void *)&v51 + 1))
        {
          sub_100098DB4(&v50, (_OWORD *)(v36 + 48));
          goto LABEL_18;
        }
      }
      *(void *)(v36 + 72) = &type metadata for String;
      *(void *)(v36 + 48) = 1701736302;
      *(void *)(v36 + 56) = 0xE400000000000000;
      sub_100178110((uint64_t)&v50, &qword_100EAC3D0);
LABEL_18:
      Dictionary.init(dictionaryLiteral:)();
      ShortDescription.init(name:_:)();
      sub_100178110(v3, &qword_100E663E8);
LABEL_14:
      v38[3] = v39;
      v38[4] = sub_100047B30(&qword_100EA2680, &qword_100EA2678);
      uint64_t v44 = sub_10023C310(v38);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v40 + 32))(v44, v2, v39);
      sub_100162694();
      return;
    case 5u:
      sub_100948F70((uint64_t)v1, v0, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v41 = swift_initStackObject();
      *(_OWORD *)(v41 + 16) = xmmword_100C251B0;
      *(void *)(v41 + 32) = 0x6C6961746564;
      *(void *)(v41 + 40) = 0xE600000000000000;
      sub_10094710C();
      uint64_t v42 = v53;
      sub_1001B1E64(v52, v53);
      *(void *)(v41 + 72) = v42;
      sub_10023C310((uint64_t *)(v41 + 48));
      sub_100162880();
      (*(void (**)(void))(v43 + 16))();
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v52);
      Dictionary.init(dictionaryLiteral:)();
      sub_1001912BC();
      sub_1001C8724();
      ShortDescription.init(name:_:)();
      uint64_t v22 = type metadata accessor for ModalViewState.LocationDetailModal;
      uint64_t v23 = v0;
      goto LABEL_10;
    case 6u:
    case 7u:
      Dictionary.init(dictionaryLiteral:)();
LABEL_12:
      ShortDescription.init(name:_:)();
      goto LABEL_13;
    default:
      sub_100948F70((uint64_t)v1, v5, (void (*)(void))type metadata accessor for LocationPreviewViewState);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v18 = swift_initStackObject();
      *(_OWORD *)(v18 + 16) = xmmword_100C251B0;
      sub_10012BA3C();
      *(void *)(v18 + 32) = v19;
      *(void *)(v18 + 40) = 0xEC00000065746174;
      *(void *)(v18 + 72) = v12;
      uint64_t v21 = sub_10023C310(v20);
      sub_10011A380(v5, (uint64_t)v21, (void (*)(void))type metadata accessor for LocationPreviewViewState);
      Dictionary.init(dictionaryLiteral:)();
      sub_1001912BC();
      ShortDescription.init(name:_:)();
      uint64_t v22 = type metadata accessor for LocationPreviewViewState;
      uint64_t v23 = v5;
LABEL_10:
      sub_10011D54C(v23, (void (*)(void))v22);
LABEL_13:
      uint64_t v39 = v48;
      uint64_t v38 = v49;
      uint64_t v40 = v47;
      goto LABEL_14;
  }
}

uint64_t sub_100946EDC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v4 = type metadata accessor for LocationPreviewViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v5);
  uint64_t v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for ModalViewState.MapViewModal(0);
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_100125FF8();
  sub_10011A380(v1, v2, (void (*)(void))type metadata accessor for ModalViewState.MapViewModal);
  sub_100948F70(v2, (uint64_t)v7, (void (*)(void))type metadata accessor for LocationPreviewViewState);
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C25ED0;
  *(void *)(inited + 32) = 1701869940;
  *(void *)(inited + 40) = 0xE400000000000000;
  *(void *)(inited + 48) = 0x6E6F697461636F6CLL;
  *(void *)(inited + 56) = 0xEF77656976657250;
  sub_10012BA3C();
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 80) = v10;
  *(void *)(inited + 88) = 0xEC00000065746174;
  *(void *)(inited + 120) = v4;
  uint64_t v12 = sub_10023C310(v11);
  sub_10011A380((uint64_t)v7, (uint64_t)v12, (void (*)(void))type metadata accessor for LocationPreviewViewState);
  Dictionary.init(dictionaryLiteral:)();
  sub_10011D54C((uint64_t)v7, (void (*)(void))type metadata accessor for LocationPreviewViewState);
  a1[3] = sub_10017DF08(&qword_100EA2660);
  a1[4] = sub_100047B30(&qword_100EA2668, &qword_100EA2660);
  sub_10023C310(a1);
  return ShortDescription.init(name:_:)();
}

void sub_10094710C()
{
  sub_100162EA0();
  uint64_t v71 = v0;
  uint64_t v75 = v4;
  uint64_t v66 = type metadata accessor for HomeAndWorkRefinementViewState();
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v70 = v6;
  type metadata accessor for URL();
  sub_100179C0C();
  uint64_t v68 = v8;
  uint64_t v69 = v7;
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v67 = v9;
  uint64_t v63 = type metadata accessor for AveragesDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v65 = v11;
  uint64_t v61 = type metadata accessor for MoonDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v64 = v13;
  uint64_t v14 = type metadata accessor for SunriseSunsetDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v15);
  sub_100109314();
  uint64_t v62 = v16;
  HourPrecipitationDetailViewuint64_t State = type metadata accessor for NextHourPrecipitationDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v18);
  sub_100163770();
  type metadata accessor for AirQualityDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for ConditionDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v23);
  uint64_t v24 = sub_100163E88();
  uint64_t v25 = type metadata accessor for ModalViewState.LocationDetailModal(v24);
  sub_100162E4C();
  __chkstk_darwin(v26);
  sub_10016279C();
  sub_10017DF08(&qword_100EA2678);
  sub_100179C0C();
  uint64_t v73 = v28;
  uint64_t v74 = v27;
  __chkstk_darwin(v27);
  sub_100109314();
  uint64_t v72 = v29;
  sub_10011A380(v71, v1, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
  sub_100127C2C();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100948F70(v1, (uint64_t)v21, (void (*)(void))type metadata accessor for AirQualityDetailViewState);
      sub_10017DF08(&qword_100E635E0);
      uint64_t inited = (__n128 *)swift_initStackObject();
      uint64_t v36 = sub_10019B6E8(inited, (__n128)xmmword_100C251B0);
      sub_10011A380((uint64_t)v21, (uint64_t)v36, (void (*)(void))type metadata accessor for AirQualityDetailViewState);
      Dictionary.init(dictionaryLiteral:)();
      sub_10018B1C0();
      uint64_t v25 = v72;
      ShortDescription.init(name:_:)();
      uint64_t v33 = type metadata accessor for AirQualityDetailViewState;
      uint64_t v34 = (uint64_t)v21;
      break;
    case 2u:
      sub_100948F70(v1, v2, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailViewState);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v37 = swift_initStackObject();
      *(_OWORD *)(v37 + 16) = xmmword_100C251B0;
      *(void *)(v37 + 32) = 0x6574617473;
      *(void *)(v37 + 40) = 0xE500000000000000;
      *(void *)(v37 + 72) = HourPrecipitationDetailViewState;
      uint64_t v38 = sub_10023C310((uint64_t *)(v37 + 48));
      sub_10011A380(v2, (uint64_t)v38, (void (*)(void))type metadata accessor for NextHourPrecipitationDetailViewState);
      Dictionary.init(dictionaryLiteral:)();
      sub_10018B1C0();
      sub_1001653AC();
      uint64_t v33 = type metadata accessor for NextHourPrecipitationDetailViewState;
      uint64_t v34 = v2;
      break;
    case 3u:
      uint64_t v39 = v62;
      sub_100948F70(v1, v62, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewState);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v40 = (__n128 *)swift_initStackObject();
      uint64_t v41 = sub_1001819B4(v40, (__n128)xmmword_100C251B0);
      v40[4].n128_u64[1] = v14;
      uint64_t v42 = sub_10023C310((uint64_t *)v41);
      sub_10011A380(v39, (uint64_t)v42, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewState);
      Dictionary.init(dictionaryLiteral:)();
      sub_10018B1C0();
      sub_1001653AC();
      uint64_t v43 = type metadata accessor for SunriseSunsetDetailViewState;
      goto LABEL_10;
    case 4u:
      uint64_t v39 = v64;
      sub_100948F70(v1, v64, (void (*)(void))type metadata accessor for MoonDetailViewState);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v44 = (__n128 *)swift_initStackObject();
      uint64_t v45 = sub_1001819B4(v44, (__n128)xmmword_100C251B0);
      v44[4].n128_u64[1] = v61;
      uint64_t v46 = sub_10023C310((uint64_t *)v45);
      sub_10011A380(v39, (uint64_t)v46, (void (*)(void))type metadata accessor for MoonDetailViewState);
      Dictionary.init(dictionaryLiteral:)();
      sub_100185E0C();
      ShortDescription.init(name:_:)();
      uint64_t v43 = type metadata accessor for MoonDetailViewState;
      goto LABEL_10;
    case 5u:
      uint64_t v39 = v65;
      sub_100948F70(v1, v65, (void (*)(void))type metadata accessor for AveragesDetailViewState);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v47 = (__n128 *)swift_initStackObject();
      uint64_t v48 = sub_1001819B4(v47, (__n128)xmmword_100C251B0);
      v47[4].n128_u64[1] = v63;
      uint64_t v49 = sub_10023C310((uint64_t *)v48);
      sub_10011A380(v39, (uint64_t)v49, (void (*)(void))type metadata accessor for AveragesDetailViewState);
      Dictionary.init(dictionaryLiteral:)();
      sub_100185E0C();
      sub_1001C8724();
      ShortDescription.init(name:_:)();
      uint64_t v43 = type metadata accessor for AveragesDetailViewState;
      goto LABEL_10;
    case 6u:
      uint64_t v51 = v67;
      uint64_t v50 = v68;
      uint64_t v52 = v69;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 32))(v67, v1, v69);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v53 = (__n128 *)swift_initStackObject();
      uint64_t v54 = sub_10019B6E8(v53, (__n128)xmmword_100C251B0);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v50 + 16))(v54, v51, v52);
      Dictionary.init(dictionaryLiteral:)();
      sub_100185E0C();
      ShortDescription.init(name:_:)();
      (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v51, v52);
      goto LABEL_12;
    case 7u:
      uint64_t v39 = v70;
      sub_100948F70(v1, v70, (void (*)(void))type metadata accessor for HomeAndWorkRefinementViewState);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v55 = (__n128 *)swift_initStackObject();
      uint64_t v56 = sub_1001819B4(v55, (__n128)xmmword_100C251B0);
      v55[4].n128_u64[1] = v66;
      uint64_t v57 = sub_10023C310((uint64_t *)v56);
      sub_10011A380(v39, (uint64_t)v57, (void (*)(void))type metadata accessor for HomeAndWorkRefinementViewState);
      Dictionary.init(dictionaryLiteral:)();
      sub_10018B1C0();
      sub_1001653AC();
      uint64_t v43 = type metadata accessor for HomeAndWorkRefinementViewState;
LABEL_10:
      uint64_t v33 = v43;
      uint64_t v34 = v39;
      break;
    default:
      sub_100948F70(v1, v3, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v30 = (__n128 *)swift_initStackObject();
      uint64_t v31 = sub_1001819B4(v30, (__n128)xmmword_100C251B0);
      v30[4].n128_u64[1] = v22;
      uint64_t v32 = sub_10023C310((uint64_t *)v31);
      sub_10011A380(v3, (uint64_t)v32, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      Dictionary.init(dictionaryLiteral:)();
      sub_100185E0C();
      ShortDescription.init(name:_:)();
      uint64_t v33 = type metadata accessor for ConditionDetailViewState;
      uint64_t v34 = v3;
      break;
  }
  sub_10011D54C(v34, (void (*)(void))v33);
LABEL_12:
  uint64_t v59 = v74;
  unint64_t v58 = v75;
  v75[3] = v74;
  v58[4] = sub_100047B30(&qword_100EA2680, &qword_100EA2678);
  uint64_t v60 = sub_10023C310(v58);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v73 + 32))(v60, v25, v59);
  sub_100162694();
}

void sub_100947AE0()
{
  sub_10016314C();
  uint64_t v46 = v0;
  uint64_t v4 = v3;
  uint64_t v44 = v5;
  uint64_t v42 = type metadata accessor for ModalViewState.LocationDetailModal(0);
  sub_100162E4C();
  __chkstk_darwin(v6);
  uint64_t v41 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100129064();
  uint64_t v39 = type metadata accessor for ModalViewState.MapViewModal(v8);
  sub_100162E4C();
  __chkstk_darwin(v9);
  uint64_t v40 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100129064();
  uint64_t v12 = type metadata accessor for LocationPreviewViewState(v11);
  sub_100162E4C();
  __chkstk_darwin(v13);
  sub_10016279C();
  sub_10017DF08(&qword_100EA27A8);
  sub_100179C0C();
  uint64_t v43 = v14;
  __chkstk_darwin(v15);
  sub_100162E88();
  type metadata accessor for ModalViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v16);
  sub_10011C760();
  uint64_t v17 = v4[3];
  uint64_t v45 = v4;
  sub_1001B1E64(v4, v17);
  sub_100949314();
  uint64_t v18 = v46;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v18)
  {
    uint64_t v20 = (uint64_t)v45;
  }
  else
  {
    uint64_t v38 = v12;
    uint64_t v19 = v44;
    uint64_t v46 = v2;
    sub_100949360();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    switch((char)v47)
    {
      case 1:
        LOBYTE(v47) = 1;
        sub_100948E78(&qword_100EA2788, (void (*)(uint64_t))type metadata accessor for LocationPreviewViewState);
        sub_100183654();
        sub_100188C20();
        sub_100164944();
        v21();
        uint64_t v20 = (uint64_t)v45;
        uint64_t v22 = v46;
        sub_100948F70(v1, (uint64_t)v46, (void (*)(void))type metadata accessor for LocationPreviewViewState);
        break;
      case 2:
        sub_100949444();
        sub_1001856C8();
        uint64_t v23 = sub_1001D2040();
        v24(v23);
        char v25 = BYTE1(v47);
        uint64_t v22 = v46;
        *uint64_t v46 = v47;
        v22[1] = v25;
        goto LABEL_13;
      case 3:
        sub_1009493F8();
        sub_1001856C8();
        uint64_t v26 = sub_1001D2040();
        v27(v26);
        uint64_t v22 = v46;
        *(void *)uint64_t v46 = v47;
        goto LABEL_13;
      case 4:
        sub_1009493AC();
        sub_1001856C8();
        uint64_t v28 = sub_1001D2040();
        v29(v28);
        uint64_t v22 = v46;
        *(void *)uint64_t v46 = v47;
        goto LABEL_13;
      case 5:
        LOBYTE(v47) = 5;
        sub_100948E78(&qword_100EA27C8, (void (*)(uint64_t))type metadata accessor for ModalViewState.MapViewModal);
        sub_100183654();
        uint64_t v31 = v39;
        uint64_t v30 = (uint64_t)v40;
        sub_100188C20();
        uint64_t v32 = sub_1001D2040();
        v33(v32);
        uint64_t v22 = v46;
        sub_100948F70(v30, (uint64_t)v46, (void (*)(void))type metadata accessor for ModalViewState.MapViewModal);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v31);
        uint64_t v19 = v44;
        uint64_t v20 = (uint64_t)v45;
        break;
      case 6:
        LOBYTE(v47) = 6;
        sub_100948E78(&qword_100EA27C0, (void (*)(uint64_t))type metadata accessor for ModalViewState.LocationDetailModal);
        sub_100183654();
        uint64_t v34 = (uint64_t)v41;
        sub_100188C20();
        uint64_t v36 = sub_1001D2040();
        v37(v36);
        uint64_t v22 = v46;
        sub_100948F70(v34, (uint64_t)v46, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
LABEL_13:
        uint64_t v20 = (uint64_t)v45;
        break;
      default:
        sub_100164944();
        v35();
        uint64_t v20 = (uint64_t)v45;
        uint64_t v22 = v46;
        break;
    }
    sub_1001A69C0();
    swift_storeEnumTagMultiPayload();
    sub_100948F70((uint64_t)v22, v19, (void (*)(void))type metadata accessor for ModalViewState);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v20);
  sub_100163164();
}

void sub_10094807C()
{
  sub_10016314C();
  type metadata accessor for ModalViewState.LocationDetailModal(0);
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v20 = v5;
  sub_10017DF08(&qword_100E663E8);
  sub_100162E4C();
  __chkstk_darwin(v6);
  uint64_t v7 = sub_100163770();
  type metadata accessor for LocationPreviewViewState(v7);
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_10008B8C0();
  type metadata accessor for ModalViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_10012B938();
  sub_10017DF08(&qword_100EA27E8);
  sub_100179C0C();
  uint64_t v21 = v10;
  __chkstk_darwin(v10);
  sub_100162E88();
  uint64_t v11 = (void *)sub_1001A69C0();
  sub_1001B1E64(v11, v12);
  sub_100949314();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v13 = sub_100127C2C();
  sub_10011A380(v13, v14, v15);
  sub_100152474();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100949490();
      sub_1001EC474();
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      if (!v0)
      {
        sub_100949618();
        sub_1001EC474();
        KeyedEncodingContainer.encode<A>(_:forKey:)();
      }
      uint64_t v16 = sub_10019DF88();
      uint64_t v17 = v21;
      goto LABEL_22;
    case 2u:
      sub_100949490();
      sub_10017F648();
      if (v0) {
        goto LABEL_13;
      }
      sub_1009495CC();
      goto LABEL_12;
    case 3u:
      sub_100949490();
      sub_10017F648();
      if (v0) {
        goto LABEL_13;
      }
      sub_100949580();
LABEL_12:
      sub_1001EC474();
      KeyedEncodingContainer.encode<A>(_:forKey:)();
LABEL_13:
      sub_1001A69C0();
      sub_100162F0C();
      v19();
      swift_release();
      goto LABEL_23;
    case 4u:
      sub_100426F98(v1, v2);
      sub_100949490();
      sub_10019AB04();
      if (!v0)
      {
        sub_1009494DC();
        sub_100183654();
        KeyedEncodingContainer.encode<A>(_:forKey:)();
      }
      sub_100178110(v2, &qword_100E663E8);
      goto LABEL_20;
    case 5u:
      sub_100948F70(v1, v20, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
      sub_100949490();
      sub_10019AB04();
      if (!v0)
      {
        sub_100948E78(&qword_100EA27F8, (void (*)(uint64_t))type metadata accessor for ModalViewState.LocationDetailModal);
        sub_100183654();
        KeyedEncodingContainer.encode<A>(_:forKey:)();
      }
      sub_10011D54C(v20, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
LABEL_20:
      uint64_t v16 = sub_10019DF88();
      uint64_t v17 = v1;
      goto LABEL_22;
    case 6u:
    case 7u:
      sub_100949490();
      sub_1001EC474();
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      uint64_t v16 = sub_10019DF88();
      uint64_t v17 = v21;
      goto LABEL_22;
    default:
      sub_100948F70(v1, v3, (void (*)(void))type metadata accessor for LocationPreviewViewState);
      sub_100949490();
      sub_10017F648();
      if (!v0)
      {
        sub_100948E78(&qword_100EA27A0, (void (*)(uint64_t))type metadata accessor for LocationPreviewViewState);
        sub_100183654();
        KeyedEncodingContainer.encode<A>(_:forKey:)();
      }
      sub_10011D54C(v3, (void (*)(void))type metadata accessor for LocationPreviewViewState);
      uint64_t v16 = sub_1001A69C0();
LABEL_22:
      v18(v16, v17);
LABEL_23:
      sub_100163164();
      return;
  }
}

unint64_t sub_10094860C(Swift::String string)
{
  uint64_t object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._uint64_t object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E081D0, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 7) {
    return 7;
  }
  else {
    return v3;
  }
}

unint64_t sub_10094865C(char a1)
{
  unint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 0x4D7765695670616DLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100948744(char a1)
{
  unint64_t result = 1701869940;
  switch(a1)
  {
    case 1:
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 0x4D7765695670616DLL;
      break;
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_10094882C(Swift::String string)
{
  uint64_t object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._uint64_t object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E08298, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 8) {
    return 8;
  }
  else {
    return v3;
  }
}

unint64_t sub_100948878(char a1)
{
  unint64_t result = 1701736302;
  switch(a1)
  {
    case 1:
      goto LABEL_6;
    case 2:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
    case 7:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x655774726F706572;
      break;
    case 5:
      unint64_t result = 7364973;
      break;
    case 6:
      sub_1001C8724();
LABEL_6:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10094897C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10088B6EC(*a1, *a2);
}

Swift::Int sub_100948988()
{
  return sub_100652728(*v0);
}

uint64_t sub_100948990(uint64_t a1)
{
  return sub_1002C30A4(a1, *v1);
}

Swift::Int sub_100948998(uint64_t a1)
{
  return sub_1002C436C(a1, *v1);
}

unint64_t sub_1009489A0@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10094860C(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_1009489D0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_10094865C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1009489FC()
{
  return sub_100948744(*v0);
}

uint64_t sub_100948A04@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100948658(a1);
  *a2 = result;
  return result;
}

uint64_t sub_100948A2C(uint64_t a1)
{
  unint64_t v2 = sub_100949314();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100948A68(uint64_t a1)
{
  unint64_t v2 = sub_100949314();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100948AA4()
{
  return sub_10088B4C8();
}

Swift::Int sub_100948AB0()
{
  return sub_100652740(*v0);
}

uint64_t sub_100948AB8()
{
  return sub_1002C2F94();
}

Swift::Int sub_100948AC0(uint64_t a1)
{
  return sub_1002C4384(a1, *v1);
}

unint64_t sub_100948AC8@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10094882C(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_100948AF8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_100948878(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100948B24()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100948B84()
{
  return RawRepresentable<>.encode(to:)();
}

void sub_100948BD8()
{
}

void sub_100948BF0()
{
}

uint64_t sub_100948C0C()
{
  sub_100948E78(&qword_100EA2828, (void (*)(uint64_t))type metadata accessor for ModalViewState);

  return ShortDescribable.description.getter();
}

uint64_t sub_100948C78()
{
  return sub_100948E78(&qword_100EA2628, (void (*)(uint64_t))type metadata accessor for ModalViewState);
}

void sub_100948CC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1008C1B40(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_100948CD8()
{
}

void sub_100948CF0()
{
}

uint64_t sub_100948D08()
{
  return sub_1008C5A6C();
}

void sub_100948D20()
{
}

void sub_100948D38()
{
}

uint64_t sub_100948D54()
{
  sub_100948E78(&qword_100EA2670, (void (*)(uint64_t))type metadata accessor for ModalViewState.MapViewModal);

  return ShortDescribable.description.getter();
}

uint64_t sub_100948DC4()
{
  sub_100948E78(&qword_100EA2688, (void (*)(uint64_t))type metadata accessor for ModalViewState.LocationDetailModal);

  return ShortDescribable.description.getter();
}

uint64_t sub_100948E30()
{
  return sub_100948E78(&qword_100EA2630, (void (*)(uint64_t))type metadata accessor for ModalViewState.LocationDetailModal);
}

uint64_t sub_100948E78(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100948EC0()
{
  return sub_100948E78(&qword_100EA2638, (void (*)(uint64_t))type metadata accessor for ModalViewState.MapViewModal);
}

uint64_t sub_100948F08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E663E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100948F70(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

unint64_t sub_100948FD0()
{
  unint64_t result = qword_100EA26D8;
  if (!qword_100EA26D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA26D8);
  }
  return result;
}

unint64_t sub_10094901C()
{
  unint64_t result = qword_100EA26E0;
  if (!qword_100EA26E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA26E0);
  }
  return result;
}

unint64_t sub_100949068()
{
  unint64_t result = qword_100EA26E8;
  if (!qword_100EA26E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA26E8);
  }
  return result;
}

unint64_t sub_1009490B4()
{
  unint64_t result = qword_100EA26F0;
  if (!qword_100EA26F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA26F0);
  }
  return result;
}

unint64_t sub_100949100()
{
  unint64_t result = qword_100EA26F8;
  if (!qword_100EA26F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA26F8);
  }
  return result;
}

unint64_t sub_10094914C()
{
  unint64_t result = qword_100EA2700;
  if (!qword_100EA2700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2700);
  }
  return result;
}

unint64_t sub_100949198()
{
  unint64_t result = qword_100EA2708;
  if (!qword_100EA2708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2708);
  }
  return result;
}

unint64_t sub_1009491E4()
{
  unint64_t result = qword_100EA2710;
  if (!qword_100EA2710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2710);
  }
  return result;
}

unint64_t sub_100949230()
{
  unint64_t result = qword_100EA2718;
  if (!qword_100EA2718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2718);
  }
  return result;
}

unint64_t sub_10094927C()
{
  unint64_t result = qword_100EA2778;
  if (!qword_100EA2778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2778);
  }
  return result;
}

unint64_t sub_1009492C8()
{
  unint64_t result = qword_100EA2780;
  if (!qword_100EA2780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2780);
  }
  return result;
}

unint64_t sub_100949314()
{
  unint64_t result = qword_100EA27B0;
  if (!qword_100EA27B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA27B0);
  }
  return result;
}

unint64_t sub_100949360()
{
  unint64_t result = qword_100EA27B8;
  if (!qword_100EA27B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA27B8);
  }
  return result;
}

unint64_t sub_1009493AC()
{
  unint64_t result = qword_100EA27D0;
  if (!qword_100EA27D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA27D0);
  }
  return result;
}

unint64_t sub_1009493F8()
{
  unint64_t result = qword_100EA27D8;
  if (!qword_100EA27D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA27D8);
  }
  return result;
}

unint64_t sub_100949444()
{
  unint64_t result = qword_100EA27E0;
  if (!qword_100EA27E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA27E0);
  }
  return result;
}

unint64_t sub_100949490()
{
  unint64_t result = qword_100EA27F0;
  if (!qword_100EA27F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA27F0);
  }
  return result;
}

unint64_t sub_1009494DC()
{
  unint64_t result = qword_100EA2800;
  if (!qword_100EA2800)
  {
    sub_10018C6DC(&qword_100E663E8);
    sub_100948E78(&qword_100EA2808, (void (*)(uint64_t))type metadata accessor for ModalViewState.MapViewModal);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2800);
  }
  return result;
}

unint64_t sub_100949580()
{
  unint64_t result = qword_100EA2810;
  if (!qword_100EA2810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2810);
  }
  return result;
}

unint64_t sub_1009495CC()
{
  unint64_t result = qword_100EA2818;
  if (!qword_100EA2818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2818);
  }
  return result;
}

unint64_t sub_100949618()
{
  unint64_t result = qword_100EA2820;
  if (!qword_100EA2820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2820);
  }
  return result;
}

ValueMetadata *type metadata accessor for ModalViewState.CodingType()
{
  return &type metadata for ModalViewState.CodingType;
}

unsigned char *storeEnumTagSinglePayload for ModalViewState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100949748);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ModalViewState.CodingKeys()
{
  return &type metadata for ModalViewState.CodingKeys;
}

ValueMetadata *type metadata accessor for ModalViewState.MapViewModal.CodingKeys()
{
  return &type metadata for ModalViewState.MapViewModal.CodingKeys;
}

ValueMetadata *type metadata accessor for ModalViewState.MapViewModal.LocationPreviewCodingKeys()
{
  return &type metadata for ModalViewState.MapViewModal.LocationPreviewCodingKeys;
}

unsigned char *_s7Weather14ModalViewStateO10CodingTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100949870);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ModalViewState.LocationDetailModal.CodingKeys()
{
  return &type metadata for ModalViewState.LocationDetailModal.CodingKeys;
}

ValueMetadata *type metadata accessor for ModalViewState.LocationDetailModal.ConditionDetailCodingKeys()
{
  return &type metadata for ModalViewState.LocationDetailModal.ConditionDetailCodingKeys;
}

ValueMetadata *type metadata accessor for ModalViewState.LocationDetailModal.AirQualityDetailCodingKeys()
{
  return &type metadata for ModalViewState.LocationDetailModal.AirQualityDetailCodingKeys;
}

ValueMetadata *type metadata accessor for ModalViewState.LocationDetailModal.NextHourPrecipitationDetailCodingKeys()
{
  return &type metadata for ModalViewState.LocationDetailModal.NextHourPrecipitationDetailCodingKeys;
}

ValueMetadata *type metadata accessor for ModalViewState.LocationDetailModal.SunriseSunsetDetailCodingKeys()
{
  return &type metadata for ModalViewState.LocationDetailModal.SunriseSunsetDetailCodingKeys;
}

ValueMetadata *type metadata accessor for ModalViewState.LocationDetailModal.MoonDetailCodingKeys()
{
  return &type metadata for ModalViewState.LocationDetailModal.MoonDetailCodingKeys;
}

ValueMetadata *type metadata accessor for ModalViewState.LocationDetailModal.AveragesDetailCodingKeys()
{
  return &type metadata for ModalViewState.LocationDetailModal.AveragesDetailCodingKeys;
}

ValueMetadata *type metadata accessor for ModalViewState.LocationDetailModal.CallToActionCodingKeys()
{
  return &type metadata for ModalViewState.LocationDetailModal.CallToActionCodingKeys;
}

unsigned char *_s7Weather14ModalViewStateO12MapViewModalO10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1009499B4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ModalViewState.LocationDetailModal.HomeAndWorkRefinementCodingKeys()
{
  return &type metadata for ModalViewState.LocationDetailModal.HomeAndWorkRefinementCodingKeys;
}

unint64_t sub_1009499F0()
{
  unint64_t result = qword_100EA2830;
  if (!qword_100EA2830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2830);
  }
  return result;
}

unint64_t sub_100949A40()
{
  unint64_t result = qword_100EA2838;
  if (!qword_100EA2838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2838);
  }
  return result;
}

unint64_t sub_100949A90()
{
  unint64_t result = qword_100EA2840;
  if (!qword_100EA2840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2840);
  }
  return result;
}

unint64_t sub_100949AE0()
{
  unint64_t result = qword_100EA2848;
  if (!qword_100EA2848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2848);
  }
  return result;
}

unint64_t sub_100949B30()
{
  unint64_t result = qword_100EA2850;
  if (!qword_100EA2850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2850);
  }
  return result;
}

unint64_t sub_100949B80()
{
  unint64_t result = qword_100EA2858;
  if (!qword_100EA2858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2858);
  }
  return result;
}

unint64_t sub_100949BD0()
{
  unint64_t result = qword_100EA2860;
  if (!qword_100EA2860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2860);
  }
  return result;
}

unint64_t sub_100949C20()
{
  unint64_t result = qword_100EA2868;
  if (!qword_100EA2868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2868);
  }
  return result;
}

unint64_t sub_100949C70()
{
  unint64_t result = qword_100EA2870;
  if (!qword_100EA2870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2870);
  }
  return result;
}

unint64_t sub_100949CC0()
{
  unint64_t result = qword_100EA2878;
  if (!qword_100EA2878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2878);
  }
  return result;
}

unint64_t sub_100949D10()
{
  unint64_t result = qword_100EA2880;
  if (!qword_100EA2880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2880);
  }
  return result;
}

unint64_t sub_100949D60()
{
  unint64_t result = qword_100EA2888;
  if (!qword_100EA2888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2888);
  }
  return result;
}

unint64_t sub_100949DB0()
{
  unint64_t result = qword_100EA2890;
  if (!qword_100EA2890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2890);
  }
  return result;
}

unint64_t sub_100949E00()
{
  unint64_t result = qword_100EA2898;
  if (!qword_100EA2898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2898);
  }
  return result;
}

unint64_t sub_100949E50()
{
  unint64_t result = qword_100EA28A0;
  if (!qword_100EA28A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA28A0);
  }
  return result;
}

unint64_t sub_100949EA0()
{
  unint64_t result = qword_100EA28A8;
  if (!qword_100EA28A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA28A8);
  }
  return result;
}

unint64_t sub_100949EF0()
{
  unint64_t result = qword_100EA28B0;
  if (!qword_100EA28B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA28B0);
  }
  return result;
}

unint64_t sub_100949F40()
{
  unint64_t result = qword_100EA28B8;
  if (!qword_100EA28B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA28B8);
  }
  return result;
}

unint64_t sub_100949F90()
{
  unint64_t result = qword_100EA28C0;
  if (!qword_100EA28C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA28C0);
  }
  return result;
}

unint64_t sub_100949FE0()
{
  unint64_t result = qword_100EA28C8;
  if (!qword_100EA28C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA28C8);
  }
  return result;
}

unint64_t sub_10094A030()
{
  unint64_t result = qword_100EA28D0;
  if (!qword_100EA28D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA28D0);
  }
  return result;
}

unint64_t sub_10094A080()
{
  unint64_t result = qword_100EA28D8;
  if (!qword_100EA28D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA28D8);
  }
  return result;
}

unint64_t sub_10094A0D0()
{
  unint64_t result = qword_100EA28E0;
  if (!qword_100EA28E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA28E0);
  }
  return result;
}

unint64_t sub_10094A120()
{
  unint64_t result = qword_100EA28E8;
  if (!qword_100EA28E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA28E8);
  }
  return result;
}

unint64_t sub_10094A170()
{
  unint64_t result = qword_100EA28F0;
  if (!qword_100EA28F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA28F0);
  }
  return result;
}

unint64_t sub_10094A1C0()
{
  unint64_t result = qword_100EA28F8;
  if (!qword_100EA28F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA28F8);
  }
  return result;
}

unint64_t sub_10094A210()
{
  unint64_t result = qword_100EA2900;
  if (!qword_100EA2900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2900);
  }
  return result;
}

unint64_t sub_10094A260()
{
  unint64_t result = qword_100EA2908;
  if (!qword_100EA2908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2908);
  }
  return result;
}

unint64_t sub_10094A2B0()
{
  unint64_t result = qword_100EA2910;
  if (!qword_100EA2910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2910);
  }
  return result;
}

unint64_t sub_10094A300()
{
  unint64_t result = qword_100EA2918;
  if (!qword_100EA2918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2918);
  }
  return result;
}

unint64_t sub_10094A350()
{
  unint64_t result = qword_100EA2920;
  if (!qword_100EA2920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2920);
  }
  return result;
}

unint64_t sub_10094A3A0()
{
  unint64_t result = qword_100EA2928;
  if (!qword_100EA2928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2928);
  }
  return result;
}

unint64_t sub_10094A3F0()
{
  unint64_t result = qword_100EA2930;
  if (!qword_100EA2930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2930);
  }
  return result;
}

unint64_t sub_10094A440()
{
  unint64_t result = qword_100EA2938;
  if (!qword_100EA2938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2938);
  }
  return result;
}

unint64_t sub_10094A490()
{
  unint64_t result = qword_100EA2940;
  if (!qword_100EA2940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2940);
  }
  return result;
}

unint64_t sub_10094A4E0()
{
  unint64_t result = qword_100EA2948;
  if (!qword_100EA2948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2948);
  }
  return result;
}

unint64_t sub_10094A530()
{
  unint64_t result = qword_100EA2950;
  if (!qword_100EA2950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2950);
  }
  return result;
}

unint64_t sub_10094A57C()
{
  unint64_t result = qword_100EA2958;
  if (!qword_100EA2958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2958);
  }
  return result;
}

uint64_t *sub_10094A5C8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = type metadata accessor for LocationModel();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_10094A6C4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LocationModel();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
  if (!result)
  {
    unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v4(a1, v2);
  }
  return result;
}

void *sub_10094A74C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for LocationModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *sub_10094A80C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for LocationModel();
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  return a1;
}

void *sub_10094A954(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for LocationModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *sub_10094AA14(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for LocationModel();
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  return a1;
}

uint64_t sub_10094AB5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10094AB70);
}

uint64_t sub_10094AB70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationModel();
  unsigned int v5 = _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_10094ABB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10094ABCC);
}

uint64_t sub_10094ABCC(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for LocationModel();

  return _s7Weather24LocationCompositionStateOwst_0(a1, v5, a3, v6);
}

uint64_t sub_10094AC28(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LocationModel();

  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
}

uint64_t sub_10094AC6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationModel();

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v4);
}

uint64_t sub_10094ACB8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E6572727563 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_10094ADA8(char a1)
{
  if (a1) {
    return 0x6E6F697461636F6CLL;
  }
  else {
    return 0x746E6572727563;
  }
}

uint64_t sub_10094ADE0(void *a1)
{
  sub_10017DF08(&qword_100EA2A10);
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_100109314();
  uint64_t v4 = type metadata accessor for LocationModel();
  sub_100179C0C();
  uint64_t v17 = v5;
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v16 = v7;
  sub_10017DF08(&qword_100EA2A18);
  sub_100179C0C();
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v9 = type metadata accessor for NotificationLocation();
  __chkstk_darwin(v9 - 8);
  sub_10012B938();
  sub_10017DF08(&qword_100EA2A20);
  sub_100179C0C();
  __chkstk_darwin(v10);
  sub_1001626E0();
  sub_1001B1E64(a1, a1[3]);
  sub_10094BA84();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10094BB68(v18, v1);
  if (_s7Weather24LocationCompositionStateOwet_0(v1, 1, v4) == 1)
  {
    sub_10094BB1C();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    sub_100162F0C();
    v11();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v16, v1, v4);
    sub_10094BAD0();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    sub_10094BBCC(&qword_100E7E550);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_100162F0C();
    v15();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v4);
  }
  uint64_t v12 = sub_100182CF0();
  return v13(v12);
}

uint64_t sub_10094B114@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v47 = sub_10017DF08(&qword_100EA29E0);
  sub_100179C0C();
  uint64_t v50 = v3;
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v54 = v5;
  sub_10017DF08(&qword_100EA29E8);
  sub_100179C0C();
  uint64_t v48 = v7;
  uint64_t v49 = v6;
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v52 = v8;
  uint64_t v9 = sub_10017DF08(&qword_100EA29F0);
  sub_100179C0C();
  uint64_t v53 = v10;
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = type metadata accessor for NotificationLocation();
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v44 - v19;
  sub_1001B1E64(a1, a1[3]);
  sub_10094BA84();
  uint64_t v21 = (uint64_t)v55;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v21) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  uint64_t v44 = v17;
  uint64_t v45 = v20;
  uint64_t v55 = a1;
  uint64_t v22 = KeyedDecodingContainer.allKeys.getter();
  uint64_t v23 = *(void *)(v22 + 16);
  uint64_t v24 = v9;
  uint64_t v46 = v14;
  if (!v23)
  {
    uint64_t v29 = v53;
LABEL_8:
    uint64_t v30 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v32 = v31;
    sub_10017DF08(&qword_100E67280);
    uint64_t *v32 = v15;
    uint64_t v33 = v46;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v30 - 8) + 104))(v32, enum case for DecodingError.typeMismatch(_:), v30);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v33, v24);
    a1 = v55;
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  int v56 = *(unsigned __int8 *)(v22 + 32);
  sub_100723214(1, v23, v22, v22 + 32, 0, (2 * v23) | 1);
  uint64_t v26 = v25;
  unint64_t v28 = v27;
  swift_bridgeObjectRelease();
  if (v26 != v28 >> 1)
  {
    uint64_t v29 = v53;
    uint64_t v24 = v9;
    goto LABEL_8;
  }
  if (v56)
  {
    char v58 = 1;
    sub_10094BAD0();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    uint64_t v35 = type metadata accessor for LocationModel();
    sub_10094BBCC(&qword_100E7E498);
    uint64_t v36 = (uint64_t)v44;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_100162F0C();
    v40();
    swift_unknownObjectRelease();
    uint64_t v41 = sub_1001A2714();
    v42(v41);
    _s7Weather24LocationCompositionStateOwst_0(v36, 0, 1, v35);
    uint64_t v43 = (uint64_t)v45;
    sub_1003CA45C(v36, (uint64_t)v45);
  }
  else
  {
    char v57 = 0;
    sub_10094BB1C();
    KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    sub_100162F0C();
    v37();
    swift_unknownObjectRelease();
    sub_100162F0C();
    v38();
    uint64_t v39 = type metadata accessor for LocationModel();
    uint64_t v43 = (uint64_t)v45;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 1, 1, v39);
  }
  sub_1003CA45C(v43, v51);
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v55);
}

uint64_t sub_10094B69C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for LocationModel();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = type metadata accessor for NotificationLocation();
  __chkstk_darwin(v12 - 8);
  sub_10012B938();
  uint64_t v13 = sub_10017DF08(&qword_100EA2A28);
  __chkstk_darwin(v13 - 8);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v18 = v15 - v14 + *(int *)(v17 + 56);
  sub_10094BB68(a1, v15 - v14);
  sub_10094BB68(a2, v18);
  sub_10017A364(v16);
  if (!v20)
  {
    sub_10094BB68(v16, v2);
    sub_10017A364(v18);
    if (!v20)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v11, v18, v5);
      char v19 = static LocationModel.== infix(_:_:)();
      uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
      v21(v11, v5);
      v21(v2, v5);
      sub_10094BC70(v16);
      return v19 & 1;
    }
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2, v5);
LABEL_9:
    sub_10094BC10(v16);
    char v19 = 0;
    return v19 & 1;
  }
  sub_10017A364(v18);
  if (!v20) {
    goto LABEL_9;
  }
  sub_10094BC70(v16);
  char v19 = 1;
  return v19 & 1;
}

uint64_t sub_10094B888()
{
  return sub_10094ADA8(*v0);
}

uint64_t sub_10094B890@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10094ACB8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10094B8B8(uint64_t a1)
{
  unint64_t v2 = sub_10094BA84();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10094B8F4(uint64_t a1)
{
  unint64_t v2 = sub_10094BA84();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10094B930(uint64_t a1)
{
  unint64_t v2 = sub_10094BB1C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10094B96C(uint64_t a1)
{
  unint64_t v2 = sub_10094BB1C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10094B9A8(uint64_t a1)
{
  unint64_t v2 = sub_10094BAD0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10094B9E4(uint64_t a1)
{
  unint64_t v2 = sub_10094BAD0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10094BA20@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10094B114(a1, a2);
}

uint64_t sub_10094BA38(void *a1)
{
  return sub_10094ADE0(a1);
}

void sub_10094BA50()
{
}

void sub_10094BA68()
{
}

unint64_t sub_10094BA84()
{
  unint64_t result = qword_100EA29F8;
  if (!qword_100EA29F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA29F8);
  }
  return result;
}

unint64_t sub_10094BAD0()
{
  unint64_t result = qword_100EA2A00;
  if (!qword_100EA2A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2A00);
  }
  return result;
}

unint64_t sub_10094BB1C()
{
  unint64_t result = qword_100EA2A08;
  if (!qword_100EA2A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2A08);
  }
  return result;
}

uint64_t sub_10094BB68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NotificationLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10094BBCC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for LocationModel();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10094BC10(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100EA2A28);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10094BC70(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NotificationLocation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for NotificationLocation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10094BD98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationLocation.CodingKeys()
{
  return &type metadata for NotificationLocation.CodingKeys;
}

ValueMetadata *type metadata accessor for NotificationLocation.CurrentCodingKeys()
{
  return &type metadata for NotificationLocation.CurrentCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for NotificationLocation.LocationCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10094BE7CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationLocation.LocationCodingKeys()
{
  return &type metadata for NotificationLocation.LocationCodingKeys;
}

unint64_t sub_10094BEB8()
{
  unint64_t result = qword_100EA2A30;
  if (!qword_100EA2A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2A30);
  }
  return result;
}

unint64_t sub_10094BF08()
{
  unint64_t result = qword_100EA2A38;
  if (!qword_100EA2A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2A38);
  }
  return result;
}

unint64_t sub_10094BF58()
{
  unint64_t result = qword_100EA2A40;
  if (!qword_100EA2A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2A40);
  }
  return result;
}

unint64_t sub_10094BFA8()
{
  unint64_t result = qword_100EA2A48;
  if (!qword_100EA2A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2A48);
  }
  return result;
}

unint64_t sub_10094BFF8()
{
  unint64_t result = qword_100EA2A50;
  if (!qword_100EA2A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2A50);
  }
  return result;
}

unint64_t sub_10094C048()
{
  unint64_t result = qword_100EA2A58;
  if (!qword_100EA2A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2A58);
  }
  return result;
}

unint64_t sub_10094C098()
{
  unint64_t result = qword_100EA2A60;
  if (!qword_100EA2A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2A60);
  }
  return result;
}

unint64_t sub_10094C0E8()
{
  unint64_t result = qword_100EA2A68;
  if (!qword_100EA2A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2A68);
  }
  return result;
}

ValueMetadata *type metadata accessor for Repeat()
{
  return &type metadata for Repeat;
}

uint64_t sub_10094C144()
{
  sub_1000A9DE8();
  v0[3] = v1;
  v0[4] = v2;
  v0[2] = v3;
  type metadata accessor for MainActor();
  v0[5] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[6] = v5;
  v0[7] = v4;
  return _swift_task_switch(sub_10094C1DC, v5, v4);
}

void sub_10094C1DC()
{
  if (qword_100E62870 != -1) {
LABEL_18:
  }
    swift_once();
  uint64_t v1 = type metadata accessor for Logger();
  sub_1002102B0(v1, (uint64_t)qword_100F52058);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Performing Repeat instruction", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[3];

  if (v5 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = v0[3];
    if (v6)
    {
      uint64_t v7 = 0;
      uint64_t v8 = (void *)v0[4];
      uint64_t v9 = v8[2];
      v0[8] = v9;
      while (1)
      {
        if (v6 == v7)
        {
          v0[9] = v6;
          __break(1u);
          goto LABEL_18;
        }
        if (v9) {
          break;
        }
        if (v6 == ++v7)
        {
          v0[9] = v6 - 1;
          goto LABEL_11;
        }
      }
      v0[9] = v7;
      v0[10] = 0;
      uint64_t v11 = v8 + 4;
      uint64_t v12 = v8[7];
      swift_bridgeObjectRetain();
      sub_1001B1E64(v11, v12);
      sub_1001802FC();
      uint64_t v13 = (void *)swift_task_alloc();
      v0[11] = v13;
      *uint64_t v13 = v0;
      v13[1] = sub_10094C410;
      uint64_t v14 = sub_10017D838();
      v15(v14);
    }
    else
    {
LABEL_11:
      swift_release();
      uint64_t v10 = (void (*)(void))v0[1];
      v10();
    }
  }
}

uint64_t sub_10094C410()
{
  sub_1000A9DE8();
  sub_100119470();
  uint64_t v2 = v1;
  *(void *)(v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 48);
    uint64_t v4 = *(void *)(v2 + 56);
    uint64_t v5 = sub_10094C684;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 48);
    uint64_t v4 = *(void *)(v2 + 56);
    uint64_t v5 = sub_10094C504;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_10094C504()
{
  uint64_t v1 = v0[10] + 1;
  uint64_t v2 = v0[4];
  if (v1 == v0[8])
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = v0[3];
    uint64_t v4 = v0[9] + 1;
    while (v3 != v4)
    {
      v0[9] = v4++;
      if (v0[8])
      {
        uint64_t v2 = swift_bridgeObjectRetain();
        uint64_t v1 = 0;
        goto LABEL_6;
      }
    }
    swift_release();
    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
  else
  {
LABEL_6:
    v0[10] = v1;
    sub_1001B1E64((void *)(v2 + 40 * v1 + 32), *(void *)(v2 + 40 * v1 + 56));
    sub_1001802FC();
    uint64_t v5 = (void *)swift_task_alloc();
    v0[11] = v5;
    void *v5 = v0;
    v5[1] = sub_10094C410;
    uint64_t v6 = sub_10017D838();
    return v7(v6);
  }
}

uint64_t sub_10094C684()
{
  sub_1000A9DE8();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10094C6E4()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100321064;
  return sub_10094C144();
}

ValueMetadata *type metadata accessor for VisibilityComparisonTextBuilder()
{
  return &type metadata for VisibilityComparisonTextBuilder;
}

NSObject *sub_10094C79C(uint64_t a1, uint64_t a2)
{
  uint64_t v53 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100E6B648);
  sub_100179C0C();
  uint64_t v54 = v4;
  __chkstk_darwin(v5);
  uint64_t v55 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  int v56 = (char *)&v50 - v8;
  __chkstk_darwin(v9);
  char v57 = (char *)&v50 - v10;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v50 - v12;
  uint64_t v14 = sub_10017DF08(&qword_100E6BCB0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  char v19 = (char *)&v50 - v18;
  uint64_t v20 = type metadata accessor for ConditionUnits();
  sub_100179C0C();
  uint64_t v22 = v21;
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v50 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = (int *)type metadata accessor for PastDataComparisonTextContext();
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v25, a1 + v26[9], v20);
  sub_10047AA38(a1 + v26[12], (uint64_t)v19);
  uint64_t v27 = type metadata accessor for ExtremaResult();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v27) != 1)
  {
    uint64_t v51 = v3;
    uint64_t v52 = v20;
    unint64_t v28 = v13;
    ExtremaResult.maxValue.getter();
    uint64_t v29 = *(void (**)(char *, uint64_t))(*(void *)(v27 - 8) + 8);
    v29(v19, v27);
    sub_10047AA38(a1 + v26[10], (uint64_t)v16);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v27) != 1)
    {
      ExtremaResult.maxValue.getter();
      v29(v16, v27);
      ConditionUnits.visibility.getter();
      sub_1002F8D98();
      Measurement.init(value:unit:)();
      ConditionUnits.visibility.getter();
      Measurement.init(value:unit:)();
      VisibilityFormatter.localizedMeasurement(for:useSmallUnits:)();
      VisibilityFormatter.localizedMeasurement(for:useSmallUnits:)();
      sub_100573ACC();
      uint64_t v31 = v51;
      char v34 = dispatch thunk of static Comparable.< infix(_:_:)();
      uint64_t v50 = v28;
      if (v34)
      {
        LocalizedStringKey.init(stringLiteral:)();
        Text.init(_:tableName:bundle:comment:)();
        sub_10019F500();
        uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 8);
      }
      else
      {
        static Measurement.< infix<A, B>(_:_:)();
        uint64_t v39 = (void (**)(uint64_t, uint64_t, uint64_t))(v54 + 8);
        LocalizedStringKey.init(stringLiteral:)();
        Text.init(_:tableName:bundle:comment:)();
        sub_10019F500();
        uint64_t v35 = *v39;
      }
      sub_100163918();
      v35(v36, v37, v38);
      sub_100163918();
      v35(v40, v41, v42);
      sub_100163918();
      v35(v43, v44, v45);
      sub_100163918();
      v35(v46, v47, v48);
      uint64_t v20 = v52;
      goto LABEL_13;
    }
    char v19 = v16;
    uint64_t v20 = v52;
  }
  sub_10047AAA0((uint64_t)v19);
  if (qword_100E627E8 != -1) {
    swift_once();
  }
  uint64_t v30 = type metadata accessor for Logger();
  sub_1002102B0(v30, (uint64_t)qword_100F51ED0);
  uint64_t v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v33 = 0;
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "Missing extrema values for building feels like comparison text", v33, 2u);
    swift_slowDealloc();
  }

  LocalizedStringKey.init(stringLiteral:)();
  Text.init(_:tableName:bundle:comment:)();
  sub_10019F500();
LABEL_13:
  (*(void (**)(char *, uint64_t))(v22 + 8))(v25, v20);
  return v31;
}

NSObject *sub_10094CD6C(uint64_t a1)
{
  return sub_10094C79C(a1, *v1);
}

void *sub_10094CD94()
{
  uint64_t v0 = type metadata accessor for TemperatureScaleConfiguration.Gradient();
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  static TemperatureScaleConfiguration.Gradient.default.getter();
  unint64_t result = sub_1001B6D94((uint64_t)v2);
  qword_100F52120 = (uint64_t)result;
  return result;
}

uint64_t sub_10094CE14(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6F7453726F6C6F63 && a2 == 0xEA00000000007370)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_10094CEA8()
{
  return 0x6F7453726F6C6F63;
}

uint64_t sub_10094CEC4(void *a1)
{
  sub_10017DF08(&qword_100EA2AA8);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10016279C();
  sub_1001B1E64(a1, a1[3]);
  sub_10094DE74();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10017DF08(&qword_100EA2A90);
  sub_10094DF0C(&qword_100EA2AB0, (void (*)(void))sub_10094DF7C);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  sub_100164F40();
  return v3();
}

void *sub_10094D008(void *a1)
{
  sub_10017DF08(&qword_100EA2A80);
  sub_100179C0C();
  __chkstk_darwin(v3);
  char v4 = sub_1001B1E64(a1, a1[3]);
  sub_10094DE74();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_10017DF08(&qword_100EA2A90);
    sub_10094DF0C(&qword_100EA2A98, (void (*)(void))sub_10094DEC0);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_100164F40();
    v5();
    char v4 = v7;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  return v4;
}

BOOL sub_10094D184(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  BOOL v8 = a1 == a5;
  if (a2 != a6) {
    BOOL v8 = 0;
  }
  if (a3 != a7) {
    BOOL v8 = 0;
  }
  return a4 == a8 && v8;
}

uint64_t sub_10094D1A8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 6579570 && a2 == 0xE300000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6E65657267 && a2 == 0xE500000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 1702194274 && a2 == 0xE400000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x6168706C61 && a2 == 0xE500000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_10094D328(char a1)
{
  uint64_t result = 6579570;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6E65657267;
      break;
    case 2:
      uint64_t result = 1702194274;
      break;
    case 3:
      uint64_t result = 0x6168706C61;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10094D3A4(void *a1)
{
  uint64_t v4 = sub_10017DF08(&qword_100EA2AD0);
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10012B938();
  sub_1001B1E64(a1, a1[3]);
  sub_10094DFC8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10019F518();
  if (!v1)
  {
    sub_10019F518();
    sub_10019F518();
    sub_10019F518();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

double sub_10094D504(void *a1)
{
  sub_10017DF08(&qword_100EA2AC0);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_1001B1E64(a1, a1[3]);
  sub_10094DFC8();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  sub_10017D854();
  double v4 = v3;
  sub_10017D854();
  sub_10017D854();
  sub_10017D854();
  sub_100164F40();
  v6();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  return v4;
}

BOOL sub_10094D6B0(double *a1, double *a2)
{
  if (*a1 == *a2 && (a1[1] == a2[1] ? (BOOL v2 = a1[2] == a2[2]) : (BOOL v2 = 0), v2 ? (v3 = a1[3] == a2[3]) : (v3 = 0), v3)) {
    return a1[4] == a2[4];
  }
  else {
    return 0;
  }
}

uint64_t sub_10094D6FC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726F6C6F63 && a2 == 0xE500000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_10094D7E4(char a1)
{
  if (a1) {
    return 0x6E6F697461636F6CLL;
  }
  else {
    return 0x726F6C6F63;
  }
}

uint64_t sub_10094D818(void *a1)
{
  sub_10017DF08(&qword_100EA2AF0);
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_10012B938();
  sub_1001B1E64(a1, a1[3]);
  sub_10094E014();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10094E0AC();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1) {
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  sub_100164F40();
  return v4();
}

uint64_t sub_10094D954@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_10017DF08(&qword_100EA2AD8);
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_1001B1E64(a1, a1[3]);
  sub_10094E014();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  sub_10094E060();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v7 = v6;
  uint64_t v8 = sub_10018083C();
  v9(v8);
  uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  *a2 = v11;
  a2[1] = v12;
  a2[2] = v13;
  a2[3] = v14;
  a2[4] = v7;
  return result;
}

uint64_t sub_10094DAF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10094CE14(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_10094DB24(uint64_t a1)
{
  unint64_t v2 = sub_10094DE74();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10094DB60(uint64_t a1)
{
  unint64_t v2 = sub_10094DE74();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_10094DB9C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_10094D008(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_10094DBC8(void *a1)
{
  return sub_10094CEC4(a1);
}

uint64_t sub_10094DBE4(void *a1, void *a2)
{
  return sub_10094CE10(*a1, *a2);
}

uint64_t sub_10094DBF0()
{
  return sub_10094D328(*v0);
}

uint64_t sub_10094DBF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10094D1A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10094DC20(uint64_t a1)
{
  unint64_t v2 = sub_10094DFC8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10094DC5C(uint64_t a1)
{
  unint64_t v2 = sub_10094DFC8();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_10094DC98(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v4 = sub_10094D504(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(void *)(a2 + 24) = v7;
  }
}

uint64_t sub_10094DCC8(void *a1)
{
  return sub_10094D3A4(a1);
}

BOOL sub_10094DCE8(double *a1, double *a2)
{
  return sub_10094D184(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t sub_10094DCFC()
{
  return sub_10094D7E4(*v0);
}

uint64_t sub_10094DD04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10094D6FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10094DD2C(uint64_t a1)
{
  unint64_t v2 = sub_10094E014();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10094DD68(uint64_t a1)
{
  unint64_t v2 = sub_10094E014();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_10094DDA4@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_10094D954(a1, v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_10094DDEC(void *a1)
{
  return sub_10094D818(a1);
}

void type metadata accessor for TemperatureGradient()
{
}

void type metadata accessor for TemperatureGradientColor()
{
}

uint64_t sub_10094DE20(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_10094DE40(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)double result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 40) = v3;
  return result;
}

unint64_t sub_10094DE74()
{
  unint64_t result = qword_100EA2A88;
  if (!qword_100EA2A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2A88);
  }
  return result;
}

unint64_t sub_10094DEC0()
{
  unint64_t result = qword_100EA2AA0;
  if (!qword_100EA2AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2AA0);
  }
  return result;
}

uint64_t sub_10094DF0C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(&qword_100EA2A90);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10094DF7C()
{
  unint64_t result = qword_100EA2AB8;
  if (!qword_100EA2AB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2AB8);
  }
  return result;
}

unint64_t sub_10094DFC8()
{
  unint64_t result = qword_100EA2AC8;
  if (!qword_100EA2AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2AC8);
  }
  return result;
}

unint64_t sub_10094E014()
{
  unint64_t result = qword_100EA2AE0;
  if (!qword_100EA2AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2AE0);
  }
  return result;
}

unint64_t sub_10094E060()
{
  unint64_t result = qword_100EA2AE8;
  if (!qword_100EA2AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2AE8);
  }
  return result;
}

unint64_t sub_10094E0AC()
{
  unint64_t result = qword_100EA2AF8;
  if (!qword_100EA2AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2AF8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TemperatureGradientColorStop.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10094E1C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TemperatureGradientColorStop.CodingKeys()
{
  return &type metadata for TemperatureGradientColorStop.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for TemperatureGradientColor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10094E2C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TemperatureGradientColor.CodingKeys()
{
  return &type metadata for TemperatureGradientColor.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for TemperatureGradient.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10094E39CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TemperatureGradient.CodingKeys()
{
  return &type metadata for TemperatureGradient.CodingKeys;
}

unint64_t sub_10094E3D8()
{
  unint64_t result = qword_100EA2B00;
  if (!qword_100EA2B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2B00);
  }
  return result;
}

unint64_t sub_10094E428()
{
  unint64_t result = qword_100EA2B08;
  if (!qword_100EA2B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2B08);
  }
  return result;
}

unint64_t sub_10094E478()
{
  unint64_t result = qword_100EA2B10;
  if (!qword_100EA2B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2B10);
  }
  return result;
}

unint64_t sub_10094E4C8()
{
  unint64_t result = qword_100EA2B18;
  if (!qword_100EA2B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2B18);
  }
  return result;
}

unint64_t sub_10094E518()
{
  unint64_t result = qword_100EA2B20;
  if (!qword_100EA2B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2B20);
  }
  return result;
}

unint64_t sub_10094E568()
{
  unint64_t result = qword_100EA2B28;
  if (!qword_100EA2B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2B28);
  }
  return result;
}

unint64_t sub_10094E5B8()
{
  unint64_t result = qword_100EA2B30;
  if (!qword_100EA2B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2B30);
  }
  return result;
}

unint64_t sub_10094E608()
{
  unint64_t result = qword_100EA2B38;
  if (!qword_100EA2B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2B38);
  }
  return result;
}

unint64_t sub_10094E658()
{
  unint64_t result = qword_100EA2B40;
  if (!qword_100EA2B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA2B40);
  }
  return result;
}

void *sub_10094E6A4(char a1, char a2, uint64_t a3)
{
  uint64_t v94 = a3;
  uint64_t v6 = type metadata accessor for TipPriorityQueue.GridEntry();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100162EF8();
  uint64_t v93 = v8;
  __chkstk_darwin(v9);
  uint64_t v92 = (uint64_t)&v71 - v10;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v71 - v12;
  uint64_t v14 = sub_10017DF08(&qword_100E64E80);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_10008B8C0();
  uint64_t v16 = type metadata accessor for LocationComponentViewModel();
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  char v19 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v71 - v21;
  uint64_t v23 = sub_10017DF08(&qword_100E6CCD8);
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_100162EF8();
  uint64_t v91 = v25;
  __chkstk_darwin(v26);
  unint64_t v28 = (char *)&v71 - v27;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v71 - v30;
  __chkstk_darwin(v32);
  char v34 = (char *)&v71 - v33;
  if (a1)
  {
    if (a1 == 1)
    {
      if (a2)
      {
        uint64_t v35 = &qword_100EA2F18;
        goto LABEL_11;
      }
    }
    else if (a2)
    {
      uint64_t v35 = &qword_100EA32E8;
      goto LABEL_11;
    }
    uint64_t v35 = &qword_100EA3100;
  }
  else if (a2)
  {
    uint64_t v35 = &qword_100EA2B48;
  }
  else
  {
    uint64_t v35 = &qword_100EA2D30;
  }
LABEL_11:
  char v36 = *((unsigned char *)v35 + 224);
  uint64_t v37 = *v35;
  uint64_t v77 = v35[1];
  uint64_t v78 = v37;
  uint64_t v76 = v35[2];
  uint64_t v75 = v35[3];
  uint64_t v38 = v35[8];
  uint64_t v81 = v35[9];
  uint64_t v82 = v38;
  uint64_t v39 = v35[10];
  uint64_t v79 = v35[11];
  uint64_t v80 = v39;
  uint64_t v74 = v35[24];
  uint64_t v73 = v35[25];
  uint64_t v72 = v35[26];
  uint64_t v71 = v35[27];
  uint64_t v40 = v35[49];
  uint64_t v85 = v35[50];
  uint64_t v86 = v40;
  uint64_t v41 = v35[51];
  uint64_t v83 = v35[52];
  uint64_t v84 = v41;
  uint64_t v42 = v35[57];
  uint64_t v89 = v35[58];
  uint64_t v90 = v42;
  uint64_t v43 = v94 + OBJC_IVAR____TtCV7Weather22ElevatedAqiNewsContent8_Storage_map;
  uint64_t v45 = v35[59];
  uint64_t v44 = v35[60];
  uint64_t v87 = v45;
  uint64_t v88 = v44;
  swift_beginAccess();
  sub_10006DF38(v43, v3, &qword_100E64E80);
  uint64_t v46 = type metadata accessor for LocationComponentContainerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0(v3, 1, v46) == 1)
  {
    sub_1001781AC(v3, &qword_100E64E80);
LABEL_16:
    uint64_t v47 = 1;
    goto LABEL_17;
  }
  sub_10031F6A8(v3 + *(int *)(v46 + 20), (uint64_t)v19, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  sub_10031F75C(v3, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_10031F6FC((uint64_t)v19, (uint64_t)v22, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  if (v36)
  {
    sub_10031F75C((uint64_t)v22, (void (*)(void))type metadata accessor for LocationComponentViewModel);
    goto LABEL_16;
  }
  sub_10031F6FC((uint64_t)v22, (uint64_t)v31, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v47 = 0;
  uint64_t v48 = &v31[*(int *)(v6 + 20)];
  uint64_t v49 = v73;
  *(void *)uint64_t v48 = v74;
  *((void *)v48 + 1) = v49;
  uint64_t v50 = v71;
  *((void *)v48 + 2) = v72;
  *((void *)v48 + 3) = v50;
LABEL_17:
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, v47, 1, v6);
  sub_10031F640((uint64_t)v31, (uint64_t)v34);
  sub_10031F6A8(v94 + *(int *)(v46 + 20) + OBJC_IVAR____TtCV7Weather22ElevatedAqiNewsContent8_Storage_airQuality, (uint64_t)v28, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v51 = &v28[*(int *)(v6 + 20)];
  uint64_t v52 = v77;
  *(void *)uint64_t v51 = v78;
  *((void *)v51 + 1) = v52;
  uint64_t v53 = v75;
  *((void *)v51 + 2) = v76;
  *((void *)v51 + 3) = v53;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v6);
  uint64_t v54 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
  sub_10031F6A8(v54, (uint64_t)v13, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v55 = &v13[*(int *)(v6 + 20)];
  uint64_t v56 = v81;
  *(void *)uint64_t v55 = v82;
  *((void *)v55 + 1) = v56;
  uint64_t v57 = v79;
  *((void *)v55 + 2) = v80;
  *((void *)v55 + 3) = v57;
  uint64_t v58 = v91;
  sub_10006DF38((uint64_t)v34, v91, &qword_100E6CCD8);
  uint64_t v59 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
  uint64_t v60 = v92;
  sub_10031F6A8(v59, v92, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v61 = (uint64_t *)(v60 + *(int *)(v6 + 20));
  uint64_t v62 = v85;
  *uint64_t v61 = v86;
  v61[1] = v62;
  uint64_t v63 = v83;
  v61[2] = v84;
  v61[3] = v63;
  uint64_t v64 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
  uint64_t v65 = v93;
  sub_10031F6A8(v64, v93, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v66 = (uint64_t *)(v65 + *(int *)(v6 + 20));
  uint64_t v67 = v89;
  uint64_t *v66 = v90;
  v66[1] = v67;
  uint64_t v68 = v88;
  v66[2] = v87;
  void v66[3] = v68;
  uint64_t v69 = sub_100AD6D18((uint64_t)v28, (uint64_t)v13, v58, v60, v65);
  sub_1001781AC((uint64_t)v34, &qword_100E6CCD8);
  return v69;
}

uint64_t sub_10094EC80(uint64_t a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E64E80);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_10008B8C0();
  uint64_t v10 = a1 + OBJC_IVAR____TtCV7Weather22ElevatedAqiNewsContent8_Storage_map;
  swift_beginAccess();
  sub_10006DF38(v10, v7, &qword_100E64E80);
  uint64_t v106 = a1;
  if (_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8) == 1)
  {
    sub_1001781AC(v7, &qword_100E64E80);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100C367B0;
    sub_10017DF08(&qword_100E6CCD0);
    unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v13 = *(void *)(v9 + 72);
    uint64_t v14 = (__n128 *)swift_allocObject();
    uint64_t v15 = sub_100183900(v14, (__n128)xmmword_100C251B0);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather22ElevatedAqiNewsContent8_Storage_airQuality, (uint64_t)v15 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 32) = sub_1001F24CC((uint64_t)v14);
    *(void *)(v11 + 40) = v16;
    *(void *)(v11 + 48) = v17;
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = v107;
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather22ElevatedAqiNewsContent8_Storage_newsArticle, v18 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 56) = sub_1001F24CC(v18);
    *(void *)(v11 + 64) = v19;
    *(void *)(v11 + 72) = v20;
    uint64_t v21 = (__n128 *)sub_100163204();
    sub_100183B78(v21);
    sub_10031F6A8(v22 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v23, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 80) = sub_1001F24CC((uint64_t)v21);
    *(void *)(v11 + 88) = v24;
    *(void *)(v11 + 96) = v25;
    uint64_t v26 = (__n128 *)sub_100163204();
    sub_100183B78(v26);
    sub_10031F6A8(v27 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v28, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 104) = sub_1001F24CC((uint64_t)v26);
    *(void *)(v11 + 112) = v29;
    *(void *)(v11 + 120) = v30;
    uint64_t v31 = v13;
    uint64_t v32 = (__n128 *)swift_allocObject();
    uint64_t v33 = (char *)sub_100183900(v32, (__n128)xmmword_100C25ED0) + v12;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
    sub_1001859A8((uint64_t)&v33[v31], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset);
    *(void *)(v11 + 128) = sub_1001F24CC((uint64_t)v32);
    *(void *)(v11 + 136) = v34;
    *(void *)(v11 + 144) = v35;
    char v36 = (__n128 *)swift_allocObject();
    sub_10016324C(v36);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_1001859A8((uint64_t)&v33[v31], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal);
    *(void *)(v11 + 152) = sub_1001F24CC((uint64_t)v32);
    *(void *)(v11 + 160) = v37;
    *(void *)(v11 + 168) = v38;
    uint64_t v39 = (__n128 *)swift_allocObject();
    sub_10016324C(v39);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_1001859A8((uint64_t)&v33[v31], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity);
    *(void *)(v11 + 176) = sub_1001F24CC((uint64_t)v32);
    *(void *)(v11 + 184) = v40;
    *(void *)(v11 + 192) = v41;
    uint64_t v42 = sub_100163204();
    *(_OWORD *)(v42 + 16) = v107;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_1001859A8(v42 + v12 + v31, OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure);
    *(void *)(v11 + 200) = sub_1001F24CC(v42);
    *(void *)(v11 + 208) = v43;
    *(void *)(v11 + 216) = v44;
    uint64_t v45 = (__n128 *)swift_allocObject();
    sub_100179F48(v45);
    uint64_t v47 = v46 + v12;
    uint64_t v48 = *(void *)(a1 + 16);
    sub_10031F6A8(v48 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v46 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v48 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v47 + v31, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 224) = sub_1001F24CC((uint64_t)v45);
    *(void *)(v11 + 232) = v49;
    *(void *)(v11 + 240) = v50;
  }
  else
  {
    sub_10031F6FC(v7, v1, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100C28110;
    sub_10017DF08(&qword_100E6CCD0);
    uint64_t v105 = *(void *)(v9 + 72);
    uint64_t v104 = v1;
    unint64_t v51 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v52 = (__n128 *)swift_allocObject();
    uint64_t v53 = sub_100183900(v52, (__n128)xmmword_100C251B0);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather22ElevatedAqiNewsContent8_Storage_airQuality, (uint64_t)v53 + v51, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 32) = sub_1001F24CC((uint64_t)v52);
    *(void *)(v11 + 40) = v54;
    *(void *)(v11 + 48) = v55;
    uint64_t v56 = sub_10017C984();
    *(_OWORD *)(v56 + 16) = v107;
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather22ElevatedAqiNewsContent8_Storage_newsArticle, v56 + v51, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 56) = sub_1001F24CC(v56);
    *(void *)(v11 + 64) = v57;
    *(void *)(v11 + 72) = v58;
    uint64_t v59 = (__n128 *)sub_10017C984();
    sub_10017E198(v59);
    sub_10031F6A8(v60 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v61, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 80) = sub_1001F24CC(v56);
    *(void *)(v11 + 88) = v62;
    *(void *)(v11 + 96) = v63;
    uint64_t v64 = (__n128 *)sub_10017C984();
    sub_10017E198(v64);
    sub_10031F6A8(v65 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v66, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 104) = sub_1001F24CC(v56);
    *(void *)(v11 + 112) = v67;
    *(void *)(v11 + 120) = v68;
    uint64_t v69 = sub_10017C984();
    *(_OWORD *)(v69 + 16) = v107;
    sub_10031F6A8(v1, v69 + v51, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 128) = sub_1001F24CC(v69);
    *(void *)(v11 + 136) = v70;
    *(void *)(v11 + 144) = v71;
    uint64_t v72 = (__n128 *)swift_allocObject();
    uint64_t v73 = (char *)sub_100183900(v72, (__n128)xmmword_100C25ED0) + v51;
    uint64_t v74 = a1;
    uint64_t v75 = *(void *)(a1 + 16);
    uint64_t v76 = v74;
    sub_10031F6A8(v75 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v73, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v75 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v73[v105], (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 152) = sub_1001F24CC((uint64_t)v72);
    *(void *)(v11 + 160) = v77;
    *(void *)(v11 + 168) = v78;
    uint64_t v79 = (__n128 *)swift_allocObject();
    sub_100179F48(v79);
    uint64_t v81 = v80 + v51;
    uint64_t v82 = *(void *)(v76 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_10031F6A8(v82 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, v81 + v105, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 176) = sub_1001F24CC((uint64_t)v79);
    *(void *)(v11 + 184) = v83;
    *(void *)(v11 + 192) = v84;
    uint64_t v85 = (__n128 *)swift_allocObject();
    sub_100179F48(v85);
    uint64_t v87 = v86 + v51;
    uint64_t v88 = *(void *)(v106 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_10031F6A8(v88 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, v87 + v105, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 200) = sub_1001F24CC((uint64_t)v85);
    *(void *)(v11 + 208) = v89;
    *(void *)(v11 + 216) = v90;
    uint64_t v91 = (__n128 *)swift_allocObject();
    sub_100179F48(v91);
    uint64_t v93 = v92 + v51;
    uint64_t v94 = *(void *)(v106 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_10031F6A8(v94 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, v93 + v105, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 224) = sub_1001F24CC((uint64_t)v91);
    *(void *)(v11 + 232) = v95;
    *(void *)(v11 + 240) = v96;
    uint64_t v97 = (__n128 *)swift_allocObject();
    sub_100179F48(v97);
    uint64_t v99 = v98 + v51;
    uint64_t v100 = *(void *)(v106 + 16);
    sub_10031F6A8(v100 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v98 + v51, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v100 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v99 + v105, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 248) = sub_1001F24CC((uint64_t)v97);
    *(void *)(v11 + 256) = v101;
    *(void *)(v11 + 264) = v102;
    sub_10031F75C(v104, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  }
  return v11;
}

void sub_10094F4F4(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = type metadata accessor for LocationComponentContainerViewModel();
  sub_100162E4C();
  uint64_t v6 = __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  uint64_t v7 = type metadata accessor for LocationViewComponent();
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_10017DF08(&qword_100E64E80);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = swift_retain();
  sub_1006E2E94(v17, a2);
  swift_release();
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather36LocationElevatedAqiNewsConfiguration8_Storage_map, v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v11);
  sub_10031F75C(v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  _s7Weather24LocationCompositionStateOwst_0(v16, 0, 1, v4);
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather36LocationElevatedAqiNewsConfiguration8_Storage_airQuality, v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v11);
  sub_10031F75C(v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather36LocationElevatedAqiNewsConfiguration8_Storage_newsArticle, v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v11);
  sub_10031F75C(v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_1002C5C20();
}

uint64_t sub_10094F720()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    sub_10088DB58();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10094F7A0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for Location.Identifier();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (qword_100E62630 != -1) {
      swift_once();
    }
    type metadata accessor for LocationViewerStoreObserver();
    sub_1001110D8(&qword_100EA3590, (void (*)(uint64_t))type metadata accessor for LocationViewerStoreObserver);
    Configurable.setting<A>(_:)();
    int v8 = v15[7];
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
    if (v8 == 1)
    {
      Location.Identifier.kind.getter();
      uint64_t v9 = Location.Identifier.Kind.rawValue.getter();
      uint64_t v11 = v10;
      if (v9 == Location.Identifier.Kind.rawValue.getter() && v11 == v12)
      {
        swift_bridgeObjectRelease_n();
        (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
LABEL_14:
        swift_retain();
        sub_10088DE58();
        swift_release();
        return swift_release();
      }
      char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
      if (v14) {
        goto LABEL_14;
      }
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
    }
    swift_retain();
    swift_bridgeObjectRetain();
    sub_10088DE58();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10094FA48()
{
  swift_release();
  sub_100178110(v0 + OBJC_IVAR____TtC7Weather27LocationViewerStoreObserver_lastViewedLocationIdentifier, &qword_100E6DC08);

  return swift_deallocClassInstance();
}

uint64_t sub_10094FABC()
{
  return type metadata accessor for LocationViewerStoreObserver();
}

uint64_t sub_10094FAC4()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10094FAFC()
{
  uint64_t v1 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10094FBBC()
{
  uint64_t v1 = *(void *)(type metadata accessor for Location.Identifier() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_10094F7A0(v2, v3);
}

uint64_t sub_10094FC4C()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10094FC8C()
{
  return sub_10094F720();
}

uint64_t sub_10094FC94()
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 32);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 72);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 112);
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 184);
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 232);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 272);
  return v0;
}

uint64_t sub_10094FD08()
{
  sub_10094FC94();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ToolbarSearchInteractor()
{
  return self;
}

uint64_t sub_10094FD60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MainAction();
  __chkstk_darwin(v4);
  uint64_t v6 = (void *)((char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v2 + 16);
  *uint64_t v6 = a2;
  type metadata accessor for SearchViewAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for ViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = 0;
  memset(v9, 0, sizeof(v9));
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1001AAF58((uint64_t)v6, (uint64_t)v9, v7);
  sub_100016E7C((uint64_t)v9);
  sub_1001ABE70((uint64_t)v6);
  return swift_release();
}

uint64_t sub_10094FE74()
{
  uint64_t v1 = type metadata accessor for MainAction();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(uint64_t (**)(uint64_t))(v0 + 16);
  swift_retain();
  swift_errorRetain();
  CodableError.init(_:)();
  type metadata accessor for SearchViewAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for ViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = 0;
  memset(v6, 0, sizeof(v6));
  sub_1001AAF58((uint64_t)v3, (uint64_t)v6, v4);
  sub_100016E7C((uint64_t)v6);
  sub_1001ABE70((uint64_t)v3);
  return swift_release();
}

void sub_10094FF98(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if (a2 == 1 && a4 == 1) {
    sub_1002DF11C(a1, a3);
  }
}

uint64_t sub_10094FFF4(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a1 + 16);
  v14[0] = *(_OWORD *)a1;
  v14[1] = v4;
  v14[2] = *(_OWORD *)(a1 + 32);
  long long v5 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v5;
  v13[2] = *(_OWORD *)(a2 + 32);
  if ((sub_10011C8A8((uint64_t)v14, (id *)v13) & 1) == 0) {
    goto LABEL_6;
  }
  sub_100951204((uint64_t *)(a1 + 48), (uint64_t)v12);
  sub_100951204((uint64_t *)(a2 + 48), (uint64_t)v11);
  sub_100951204(v12, (uint64_t)&v15);
  if (v16)
  {
    if (v16 == 1)
    {
      uint64_t v6 = v15;
      sub_100951204(v11, (uint64_t)&v17);
      if (v18 != 1 || (sub_1002DF11C(v6, v17), (v7 & 1) == 0))
      {
LABEL_6:
        char v8 = 0;
        return v8 & 1;
      }
LABEL_12:
      char v8 = ((*(unsigned char *)(a1 + 57) & 1) == 0) ^ *(unsigned char *)(a2 + 57);
      return v8 & 1;
    }
    sub_100951204(v11, (uint64_t)&v17);
    char v8 = 0;
    if (v18 == 2 && !v17) {
      goto LABEL_12;
    }
  }
  else
  {
    int v9 = v15;
    sub_100951204(v11, (uint64_t)&v17);
    char v8 = 0;
    if (!v18 && v9 == v17) {
      goto LABEL_12;
    }
  }
  return v8 & 1;
}

void sub_100950128(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_100950140(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  v5[0] = *a1;
  v5[1] = v2;
  v6[0] = a1[2];
  *(_OWORD *)((char *)v6 + 10) = *(_OWORD *)((char *)a1 + 42);
  long long v3 = a2[1];
  v7[0] = *a2;
  v7[1] = v3;
  v8[0] = a2[2];
  *(_OWORD *)((char *)v8 + 10) = *(_OWORD *)((char *)a2 + 42);
  return sub_10094FFF4((uint64_t)v5, (uint64_t)v7) & 1;
}

uint64_t sub_10095019C@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v117 = a2;
  uint64_t v119 = a1;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v110 = *(void *)(v2 - 8);
  uint64_t v111 = v2;
  __chkstk_darwin(v2);
  uint64_t v109 = (char *)&v98 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100129064();
  uint64_t v107 = type metadata accessor for ModalViewState.LocationDetailModal(v4);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100162EF8();
  uint64_t v102 = v6;
  sub_1001626D4();
  __chkstk_darwin(v7);
  uint64_t v105 = (_WORD *)((char *)&v98 - v8);
  sub_1001626D4();
  __chkstk_darwin(v9);
  sub_100128F8C();
  uint64_t v106 = v10;
  sub_100129064();
  uint64_t v11 = type metadata accessor for AveragesDetailViewState();
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_100162EF8();
  uint64_t v99 = v13;
  sub_1001626D4();
  __chkstk_darwin(v14);
  sub_100128F8C();
  uint64_t v101 = v15;
  uint64_t v16 = sub_100129064();
  uint64_t v115 = type metadata accessor for LocationPreviewModalViewState(v16);
  sub_100162E4C();
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v104 = v18;
  sub_1001626D4();
  __chkstk_darwin(v19);
  sub_100128F8C();
  uint64_t v114 = (_WORD *)v20;
  sub_100129064();
  uint64_t v21 = type metadata accessor for ConditionDetailViewState();
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_100162EF8();
  uint64_t v100 = (_WORD *)v23;
  sub_1001626D4();
  __chkstk_darwin(v24);
  sub_100128F8C();
  uint64_t v103 = v25;
  uint64_t v26 = sub_10017DF08(&qword_100E663E8);
  uint64_t v27 = sub_100109308(v26);
  __chkstk_darwin(v27);
  sub_100162EF8();
  uint64_t v108 = v28;
  sub_1001626D4();
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v98 - v30;
  uint64_t v32 = type metadata accessor for ModalViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v33);
  sub_100162EF8();
  uint64_t v112 = v34;
  sub_1001626D4();
  uint64_t v36 = __chkstk_darwin(v35);
  uint64_t v38 = (char *)&v98 - v37;
  __chkstk_darwin(v36);
  uint64_t v40 = (_WORD *)((char *)&v98 - v39);
  uint64_t v41 = type metadata accessor for LocationPreviewViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v42);
  sub_100162EF8();
  uint64_t v113 = v43;
  sub_1001626D4();
  uint64_t v45 = __chkstk_darwin(v44);
  uint64_t v47 = (char *)&v98 - v46;
  __chkstk_darwin(v45);
  uint64_t v49 = (char *)&v98 - v48;
  uint64_t v50 = sub_10017DF08(&qword_100EA3718);
  uint64_t v51 = sub_100109308(v50);
  uint64_t v52 = __chkstk_darwin(v51);
  uint64_t v54 = (char *)&v98 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v52);
  uint64_t v56 = (char *)&v98 - v55;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)&v98 - v55, 1, 1, v41);
  sub_1001781AC((uint64_t)v56, &qword_100EA3718);
  uint64_t v57 = &v119[OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView];
  sub_10011A3E0((uint64_t)&v119[OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView], (uint64_t)v40, (void (*)(void))type metadata accessor for ModalViewState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v118 = v56;
  if (EnumCaseMultiPayload)
  {
    sub_1009512E4((uint64_t)v40, (void (*)(void))type metadata accessor for ModalViewState);
    sub_10011A3E0((uint64_t)v57, (uint64_t)v38, (void (*)(void))type metadata accessor for ModalViewState);
    if (swift_getEnumCaseMultiPayload() != 4)
    {
      sub_1009512E4((uint64_t)v38, (void (*)(void))type metadata accessor for ModalViewState);
      goto LABEL_7;
    }
    sub_100426F98((uint64_t)v38, (uint64_t)v31);
    uint64_t v59 = (uint64_t)v31;
    uint64_t v60 = v108;
    sub_100426F98(v59, v108);
    uint64_t v61 = type metadata accessor for ModalViewState.MapViewModal(0);
    if (_s7Weather24LocationCompositionStateOwet_0(v60, 1, v61) == 1)
    {
      sub_1001781AC(v60, &qword_100E663E8);
LABEL_7:
      uint64_t v63 = 1;
      uint64_t v56 = v118;
      goto LABEL_10;
    }
    sub_100951284(v60, (uint64_t)v47, (void (*)(void))type metadata accessor for LocationPreviewViewState);
    uint64_t v62 = (uint64_t)v47;
    uint64_t v56 = v118;
  }
  else
  {
    sub_100951284((uint64_t)v40, (uint64_t)v49, (void (*)(void))type metadata accessor for LocationPreviewViewState);
    uint64_t v62 = (uint64_t)v49;
  }
  sub_100951284(v62, (uint64_t)v56, (void (*)(void))type metadata accessor for LocationPreviewViewState);
  uint64_t v63 = 0;
LABEL_10:
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v56, v63, 1, v41);
  sub_10095121C((uint64_t)v56, (uint64_t)v54);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v41) != 1)
  {
    uint64_t v73 = v113;
    sub_100951284((uint64_t)v54, v113, (void (*)(void))type metadata accessor for LocationPreviewViewState);
    uint64_t v74 = v73 + *(int *)(v41 + 20);
    uint64_t v40 = v114;
    sub_10011A3E0(v74, (uint64_t)v114, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v64 = v103;
      sub_100951284((uint64_t)v40, (uint64_t)v103, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      uint64_t v72 = v116;
      sub_100950C84((uint64_t)v64);
      sub_1001A2728();
      sub_1009512E4((uint64_t)v64, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      uint64_t v75 = type metadata accessor for LocationPreviewViewState;
      uint64_t v76 = v73;
      goto LABEL_23;
    }
    sub_1009512E4((uint64_t)v40, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
    uint64_t v77 = v74;
    uint64_t v78 = v104;
    sub_10011A3E0(v77, v104, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
    sub_1009512E4(v73, (void (*)(void))type metadata accessor for LocationPreviewViewState);
    if (swift_getEnumCaseMultiPayload() != 7)
    {
      sub_1009512E4(v78, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
      uint64_t v69 = v117;
      uint64_t v70 = v119;
      goto LABEL_29;
    }
    uint64_t v79 = v78;
    uint64_t v64 = v101;
    sub_100951284(v79, (uint64_t)v101, (void (*)(void))type metadata accessor for AveragesDetailViewState);
    uint64_t v72 = v116;
    sub_100950E6C((uint64_t)v64);
    sub_1001A2728();
    sub_1009512E4((uint64_t)v64, (void (*)(void))type metadata accessor for AveragesDetailViewState);
LABEL_20:
    uint64_t v69 = v117;
    uint64_t v70 = v119;
    goto LABEL_24;
  }
  sub_1001781AC((uint64_t)v54, &qword_100EA3718);
  uint64_t v64 = v112;
  sub_10011A3E0((uint64_t)v57, (uint64_t)v112, (void (*)(void))type metadata accessor for ModalViewState);
  if (swift_getEnumCaseMultiPayload() != 5)
  {
    sub_1009512E4((uint64_t)v64, (void (*)(void))type metadata accessor for ModalViewState);
    uint64_t v72 = 0;
    LOBYTE(v41) = 2;
    goto LABEL_20;
  }
  uint64_t v65 = (uint64_t)v64;
  uint64_t v64 = v106;
  sub_100951284(v65, (uint64_t)v106, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
  uint64_t v40 = v105;
  sub_10011A3E0((uint64_t)v64, (uint64_t)v105, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
  if (!swift_getEnumCaseMultiPayload())
  {
    uint64_t v80 = (uint64_t)v40;
    uint64_t v40 = v100;
    sub_100951284(v80, (uint64_t)v100, (void (*)(void))type metadata accessor for ConditionDetailViewState);
    uint64_t v72 = v116;
    sub_100950C84((uint64_t)v40);
    sub_1001A2728();
    sub_1009512E4((uint64_t)v40, (void (*)(void))type metadata accessor for ConditionDetailViewState);
    uint64_t v75 = type metadata accessor for ModalViewState.LocationDetailModal;
    uint64_t v76 = (uint64_t)v64;
LABEL_23:
    sub_1009512E4(v76, (void (*)(void))v75);
    uint64_t v69 = v117;
    uint64_t v70 = v119;
    if ((_BYTE)v41 != 0xFF) {
      goto LABEL_24;
    }
    goto LABEL_29;
  }
  sub_1009512E4((uint64_t)v40, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
  uint64_t v66 = (uint64_t)v64;
  uint64_t v67 = v102;
  sub_100951284(v66, v102, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
  int v68 = swift_getEnumCaseMultiPayload();
  uint64_t v69 = v117;
  uint64_t v70 = v119;
  if (v68 == 5)
  {
    uint64_t v71 = v67;
    uint64_t v64 = v99;
    sub_100951284(v71, (uint64_t)v99, (void (*)(void))type metadata accessor for AveragesDetailViewState);
    uint64_t v72 = v116;
    sub_100950E6C((uint64_t)v64);
    sub_1001A2728();
    sub_1009512E4((uint64_t)v64, (void (*)(void))type metadata accessor for AveragesDetailViewState);
LABEL_24:
    sub_100180870();
    uint64_t v81 = type metadata accessor for EnvironmentState();
    sub_10017ABE4(v81);
    uint64_t v82 = v64;
    uint64_t v83 = v40;
    id v84 = v70;
    uint64_t v85 = v56;
    uint64_t v86 = v57;
    if (static Settings.Features.homeAndWorkEnabled.getter()) {
      __int16 v87 = 256;
    }
    else {
      __int16 v87 = 0;
    }
    __int16 v88 = v87 & 0xFF00 | v41;
    goto LABEL_35;
  }
  sub_1009512E4(v67, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
LABEL_29:
  uint64_t v89 = v109;
  static Logger.locale.getter();
  uint64_t v64 = Logger.logObject.getter();
  os_log_type_t v90 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v64, v90))
  {
    uint64_t v40 = (_WORD *)swift_slowAlloc();
    _WORD *v40 = 0;
    _os_log_impl((void *)&_mh_execute_header, v64, v90, "Missing representation for unit selection", (uint8_t *)v40, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v110 + 8))(v89, v111);
  sub_100180870();
  uint64_t v91 = type metadata accessor for EnvironmentState();
  sub_10017ABE4(v91);
  uint64_t v92 = v64;
  uint64_t v93 = v40;
  id v94 = v70;
  uint64_t v95 = v56;
  uint64_t v96 = v57;
  if (static Settings.Features.homeAndWorkEnabled.getter()) {
    __int16 v88 = 257;
  }
  else {
    __int16 v88 = 1;
  }
  uint64_t v72 = &_swiftEmptySetSingleton;
LABEL_35:
  uint64_t result = sub_1001781AC((uint64_t)v118, &qword_100EA3718);
  *(void *)uint64_t v69 = v64;
  *(void *)(v69 + 8) = v40;
  *(void *)(v69 + 16) = v70;
  *(void *)(v69 + 24) = v56;
  *(void *)(v69 + 32) = v57;
  *(void *)(v69 + 40) = v32;
  *(void *)(v69 + 48) = v72;
  *(_WORD *)(v69 + 56) = v88;
  return result;
}

uint64_t sub_100950C84(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DetailCondition();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == enum case for DetailCondition.conditions(_:))
  {
    uint64_t v7 = sub_1003262DC((uint64_t)&off_100E06A48);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    return v7;
  }
  if (v6 == enum case for DetailCondition.humidity(_:)) {
    return 0;
  }
  if (v6 == enum case for DetailCondition.pressure(_:)) {
    return 2;
  }
  if (v6 == enum case for DetailCondition.precipitationTotal(_:)) {
    return 1;
  }
  if (v6 == enum case for DetailCondition.uvIndex(_:)) {
    return 0;
  }
  if (v6 == enum case for DetailCondition.visibility(_:)) {
    return 0;
  }
  if (v6 == enum case for DetailCondition.wind(_:)) {
    return 4;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_100950E6C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + *(int *)(type metadata accessor for AveragesDetailViewState() + 20))) {
    return 1;
  }
  else {
    return 3;
  }
}

uint64_t type metadata accessor for UnitsConfigurationInputFactory()
{
  return self;
}

uint64_t sub_100950ED0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 48);
  char v3 = *(unsigned char *)(a1 + 56);

  return sub_1002752B0(v2, v3);
}

uint64_t sub_100950F38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  int v6 = *(void **)(a2 + 16);
  uint64_t v7 = *(void **)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void **)(a2 + 32);
  uint64_t v9 = *(void **)(a2 + 40);
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  uint64_t v10 = *(void *)(a2 + 48);
  char v11 = *(unsigned char *)(a2 + 56);
  id v12 = v4;
  id v13 = v5;
  id v14 = v6;
  id v15 = v7;
  id v16 = v8;
  id v17 = v9;
  sub_10027517C(v10, v11);
  *(void *)(a1 + 48) = v10;
  *(unsigned char *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  return a1;
}

uint64_t sub_100950FD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  uint64_t v7 = *(void **)(a1 + 8);
  uint64_t v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  uint64_t v10 = *(void **)(a1 + 16);
  char v11 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v11;
  id v12 = v11;

  id v13 = *(void **)(a1 + 24);
  id v14 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v14;
  id v15 = v14;

  id v16 = *(void **)(a1 + 32);
  id v17 = *(void **)(a2 + 32);
  *(void *)(a1 + 32) = v17;
  id v18 = v17;

  uint64_t v19 = *(void **)(a1 + 40);
  uint64_t v20 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v20;
  id v21 = v20;

  uint64_t v22 = *(void *)(a2 + 48);
  char v23 = *(unsigned char *)(a2 + 56);
  sub_10027517C(v22, v23);
  uint64_t v24 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = v22;
  char v25 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v23;
  sub_1002752B0(v24, v25);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  return a1;
}

uint64_t sub_1009510AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  uint64_t v5 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);

  id v6 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  char v7 = *(unsigned char *)(a2 + 56);
  uint64_t v8 = *(void *)(a1 + 48);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  char v9 = *(unsigned char *)(a1 + 56);
  *(unsigned char *)(a1 + 56) = v7;
  sub_1002752B0(v8, v9);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  return a1;
}

uint64_t sub_100951140(uint64_t *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 58))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      uint64_t v3 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100951194(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 56) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 58) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 58) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

void type metadata accessor for UnitsConfigurationInput()
{
}

uint64_t sub_100951204(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  *(unsigned char *)(a2 + 8) = *((unsigned char *)a1 + 8);
  *(void *)a2 = v2;
  return a2;
}

uint64_t sub_10095121C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100EA3718);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100951284(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1009512E4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unsigned char *sub_10095133C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100951408);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

void type metadata accessor for UnitsConfigurationUnitType()
{
}

uint64_t sub_10095143C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_10027517C(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_100951484(uint64_t a1)
{
  return sub_1002752B0(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t sub_100951494(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_10027517C(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  *(void *)a1 = v3;
  char v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_1002752B0(v5, v6);
  return a1;
}

uint64_t sub_1009514E8(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1002752B0(v4, v5);
  return a1;
}

uint64_t sub_100951528(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFE && *(unsigned char *)(a1 + 9))
    {
      int v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 2) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_100951568(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1009515AC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1009515C4(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

void type metadata accessor for UnitsConfigurationInput.Representation()
{
}

unint64_t sub_1009515EC()
{
  unint64_t result = qword_100EA3720;
  if (!qword_100EA3720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA3720);
  }
  return result;
}

ValueMetadata *type metadata accessor for AppLifecycleState()
{
  return &type metadata for AppLifecycleState;
}

unint64_t sub_100951654()
{
  unint64_t result = qword_100EA3728;
  if (!qword_100EA3728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA3728);
  }
  return result;
}

unint64_t sub_1009516A0(void *a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100EA3738);
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  unint64_t v10 = (unint64_t)sub_1001B1E64(a1, a1[3]);
  sub_100951ED8();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_100951F24();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
    unint64_t v10 = v12;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  return v10;
}

uint64_t sub_1009517DC(void *a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100EA3750);
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  sub_1001B1E64(a1, a1[3]);
  sub_100951ED8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_100951F70();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v8, v2);
}

BOOL sub_10095193C(Swift::String string)
{
  uint64_t object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._uint64_t object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E08378, v2);
  swift_bridgeObjectRelease();
  return v3 != 0;
}

BOOL sub_100951984(Swift::String a1)
{
  return sub_10095193C(a1);
}

unint64_t sub_1009519A0(Swift::String string)
{
  uint64_t object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._uint64_t object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E083B0, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

uint64_t sub_1009519EC(char a1)
{
  if (!a1) {
    return 0x756F72676B636162;
  }
  if (a1 == 1) {
    return 0x756F726765726F66;
  }
  return 0x6E6968636E75616CLL;
}

BOOL sub_100951A48@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_10095193C(*a1);
  *a2 = result;
  return result;
}

BOOL sub_100951A7C@<W0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_100951984(a1);
  *a2 = result;
  return result;
}

uint64_t sub_100951AA8(uint64_t a1)
{
  unint64_t v2 = sub_100951ED8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100951AE4(uint64_t a1)
{
  unint64_t v2 = sub_100951ED8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100951B20(unsigned __int8 *a1, char *a2)
{
  return sub_10088AA08(*a1, *a2);
}

Swift::Int sub_100951B2C()
{
  return sub_1006527E8(*v0);
}

uint64_t sub_100951B34(uint64_t a1)
{
  return sub_1002C29D8(a1, *v1);
}

Swift::Int sub_100951B3C(uint64_t a1)
{
  return sub_1002C4530(a1, *v1);
}

unint64_t sub_100951B44@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1009519A0(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_100951B74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1009519EC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100951BA0()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100951C00()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t sub_100951C50@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1009516A0(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_100951C7C(void *a1)
{
  return sub_1009517DC(a1);
}

uint64_t sub_100951C98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_10017DF08(&qword_100EA3760);
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  Dictionary.init(dictionaryLiteral:)();
  ShortDescription.init(name:_:)();
  a1[3] = v2;
  a1[4] = sub_100951FBC();
  uint64_t v9 = sub_100170694(a1);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v4 + 32))(v9, v8, v2);
}

uint64_t sub_100951E44@<X0>(uint64_t *a1@<X8>)
{
  return sub_100951C98(a1);
}

uint64_t sub_100951E4C()
{
  sub_100952010();

  return ShortDescribable.description.getter();
}

unint64_t sub_100951E8C()
{
  unint64_t result = qword_100EA3730;
  if (!qword_100EA3730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA3730);
  }
  return result;
}

unint64_t sub_100951ED8()
{
  unint64_t result = qword_100EA3740;
  if (!qword_100EA3740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA3740);
  }
  return result;
}

unint64_t sub_100951F24()
{
  unint64_t result = qword_100EA3748;
  if (!qword_100EA3748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA3748);
  }
  return result;
}

unint64_t sub_100951F70()
{
  unint64_t result = qword_100EA3758;
  if (!qword_100EA3758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA3758);
  }
  return result;
}

unint64_t sub_100951FBC()
{
  unint64_t result = qword_100EA3768;
  if (!qword_100EA3768)
  {
    sub_10018C6DC(&qword_100EA3760);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA3768);
  }
  return result;
}

unint64_t sub_100952010()
{
  unint64_t result = qword_100EA3770;
  if (!qword_100EA3770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA3770);
  }
  return result;
}

unsigned char *_s7Weather17AppLifecycleStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100952128);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppLifecycleState.CodingType()
{
  return &type metadata for AppLifecycleState.CodingType;
}

unsigned char *storeEnumTagSinglePayload for AppLifecycleState.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1009521FCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AppLifecycleState.CodingKeys()
{
  return &type metadata for AppLifecycleState.CodingKeys;
}

unint64_t sub_100952238()
{
  unint64_t result = qword_100EA3778;
  if (!qword_100EA3778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA3778);
  }
  return result;
}

unint64_t sub_100952288()
{
  unint64_t result = qword_100EA3780;
  if (!qword_100EA3780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA3780);
  }
  return result;
}

unint64_t sub_1009522D8()
{
  unint64_t result = qword_100EA3788;
  if (!qword_100EA3788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA3788);
  }
  return result;
}

unint64_t sub_100952328()
{
  unint64_t result = qword_100EA3790;
  if (!qword_100EA3790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA3790);
  }
  return result;
}

unint64_t sub_100952374()
{
  unint64_t result = qword_100EA3798;
  if (!qword_100EA3798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA3798);
  }
  return result;
}

void sub_1009523C0()
{
}

void sub_1009523D4()
{
  sub_10010977C();
  sub_10017F66C();
  sub_10017DF08(&qword_100EA3A30);
  sub_10016389C();
  __chkstk_darwin(v0);
  sub_10012B938();
  sub_10095BF40((uint64_t)&unk_100E7D450);
  sub_1001653D0();
  sub_10095BEBC((uint64_t)&qword_100E7D470);
  sub_10018959C();
  sub_10018A08C();
  sub_100184D40();
  sub_100162714();
}

void sub_1009524B4()
{
  sub_10010977C();
  sub_10017F66C();
  sub_10017DF08(&qword_100EA3A18);
  sub_10016389C();
  __chkstk_darwin(v2);
  sub_10012B938();
  uint64_t v3 = sub_10017DF08(&qword_100E7D410);
  type metadata accessor for AxisGridLine();
  sub_10017C808();
  uint64_t v5 = v4;
  sub_100162808();
  v6();
  sub_10095BEBC((uint64_t)&qword_100E7D3F0);
  sub_10018959C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v0, v1, v3);
  sub_100184D40();
  sub_100162714();
}

void sub_1009525A8()
{
  sub_10010977C();
  sub_10017F66C();
  sub_10017DF08(&qword_100EA3A28);
  sub_10016389C();
  __chkstk_darwin(v0);
  sub_10012B938();
  sub_10095BF40((uint64_t)&unk_100E92BD0);
  sub_1001653D0();
  sub_10095BEBC((uint64_t)&qword_100E92C00);
  sub_10018959C();
  sub_10018A08C();
  sub_100184D40();
  sub_100162714();
}

void sub_100952688()
{
}

void sub_10095269C()
{
  sub_10010977C();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  sub_10017DF08(v6);
  sub_10016389C();
  __chkstk_darwin(v7);
  sub_10016279C();
  uint64_t v8 = sub_10017DF08(v3);
  type metadata accessor for AxisGridLine();
  sub_10017C808();
  uint64_t v10 = v9;
  sub_100162808();
  v11();
  uint64_t v12 = sub_10017DF08(&qword_100E7D490);
  type metadata accessor for AxisTick();
  uint64_t v13 = v1 + *(int *)(v0 + 56);
  sub_10017C808();
  uint64_t v15 = v14;
  sub_100162808();
  v16();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(v5, v1, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v5 + *(int *)(v0 + 56), v13, v12);
  sub_100162714();
}

uint64_t sub_1009527C8()
{
  sub_10017F66C();
  sub_10017DF08(&qword_100EA3A40);
  sub_10016389C();
  __chkstk_darwin(v4);
  sub_10012B938();
  sub_10095BF40((uint64_t)&unk_100E94E60);
  sub_1001653D0();
  sub_1007B2AA8();
  uint64_t v5 = v3 + *(int *)(v1 + 56);
  sub_1001262FC(*(void *)(v2 + 8), v5, &qword_100E94E88);
  sub_10018A08C();
  return sub_10020E72C(v5, v0 + *(int *)(v1 + 56), &qword_100E94E88);
}

void sub_1009528B0()
{
  sub_10010977C();
  sub_10017F66C();
  sub_10017DF08(&qword_100EA3A38);
  sub_10016389C();
  __chkstk_darwin(v3);
  sub_10012B938();
  sub_10095B9A0((uint64_t)&qword_100E94E28);
  sub_1001653D0();
  uint64_t v4 = sub_10017DF08(&qword_100E94E48);
  sub_10024D5E4((uint64_t)&unk_100E94E40);
  uint64_t v5 = v2 + *(int *)(v1 + 56);
  sub_10017C808();
  uint64_t v7 = v6;
  sub_100162808();
  v8();
  sub_10018A08C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v0 + *(int *)(v1 + 56), v5, v4);
  sub_100162714();
}

uint64_t sub_1009529DC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100EA3A10);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10095B9A0((uint64_t)&unk_100EA39E0);
  sub_1001262FC(*a1, (uint64_t)v7, &qword_100EA39E8);
  uint64_t v8 = sub_10017DF08(&qword_100EA39F8);
  sub_10024D5E4((uint64_t)&unk_100EA39F0);
  uint64_t v9 = &v7[*(int *)(v5 + 56)];
  uint64_t v10 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v9, a1[1], v8);
  sub_10095B9A0((uint64_t)&qword_100E94E28);
  uint64_t v11 = (uint64_t)&v7[*(int *)(v5 + 72)];
  sub_1001262FC(a1[2], v11, &qword_100E94E30);
  sub_10020E72C((uint64_t)v7, a2, &qword_100EA39E8);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2 + *(int *)(v5 + 56), v9, v8);
  return sub_10020E72C(v11, a2 + *(int *)(v5 + 72), &qword_100E94E30);
}

void sub_100952BD0()
{
  sub_100162EA0();
  uint64_t v74 = v1;
  uint64_t v68 = v2;
  uint64_t v66 = v3;
  uint64_t v5 = v4;
  type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v77 = v7;
  uint64_t v78 = v6;
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v72 = v8;
  sub_100129064();
  uint64_t v73 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v71 = v9;
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v70 = v11;
  sub_100129064();
  type metadata accessor for Calendar();
  sub_100179C0C();
  uint64_t v75 = v13;
  uint64_t v76 = v12;
  __chkstk_darwin(v12);
  uint64_t v67 = (char *)v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v69 = (char *)v61 - v16;
  sub_100129064();
  uint64_t v17 = type metadata accessor for ShadowModel();
  uint64_t v18 = sub_100109308(v17);
  __chkstk_darwin(v18);
  sub_100109314();
  uint64_t v65 = v19;
  sub_100129064();
  uint64_t v20 = type metadata accessor for SunriseSunsetDetailChartContentStyle.TwilightSunColors();
  uint64_t v21 = sub_100109308(v20);
  __chkstk_darwin(v21);
  sub_100109314();
  uint64_t v64 = v22;
  sub_100129064();
  uint64_t v63 = type metadata accessor for Color.RGBColorSpace();
  sub_100179C0C();
  uint64_t v24 = v23;
  __chkstk_darwin(v25);
  sub_100109370();
  sub_10017DF08((uint64_t *)&unk_100E73CA0);
  sub_100162E4C();
  __chkstk_darwin(v26);
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)v61 - v28;
  type metadata accessor for Date();
  uint64_t v30 = sub_100187394();
  sub_1001262FC(v30, v31, (uint64_t *)&unk_100E73CA0);
  State.init(wrappedValue:)();
  sub_100178110((uint64_t)v29, (uint64_t *)&unk_100E73CA0);
  uint64_t v32 = (int *)type metadata accessor for SunriseSunsetInteractiveChartView();
  uint64_t v33 = sub_100187394();
  sub_1001262FC(v33, v34, (uint64_t *)&unk_100E73CA0);
  State.init(wrappedValue:)();
  sub_100178110((uint64_t)v29, (uint64_t *)&unk_100E73CA0);
  uint64_t v35 = v32[7];
  uint64_t v79 = 0;
  State.init(wrappedValue:)();
  *(_OWORD *)(v5 + v35) = v80[0];
  uint64_t v36 = (uint64_t *)(v5 + v32[9]);
  *uint64_t v36 = swift_getKeyPath();
  sub_10017DF08(&qword_100E62CB8);
  swift_storeEnumTagMultiPayload();
  uint64_t v37 = v32[12];
  uint64_t v62 = v5;
  *(void *)(v5 + v37) = 0x4030000000000000;
  v61[1] = v5 + v32[13];
  uint64_t v38 = *(void (**)(void))(v24 + 104);
  ((void (*)(uint64_t, void, uint64_t))v38)(v0, enum case for Color.RGBColorSpace.sRGB(_:), v63);
  Color.init(_:red:green:blue:opacity:)();
  uint64_t v39 = sub_1001819D4();
  v38(v39);
  sub_10019B718();
  uint64_t v40 = sub_1001819D4();
  v38(v40);
  sub_10019B718();
  uint64_t v41 = sub_1001819D4();
  v38(v41);
  sub_10019B718();
  uint64_t v42 = sub_1001819D4();
  v38(v42);
  sub_10019B718();
  SunriseSunsetDetailChartContentStyle.TwilightSunColors.init(twilightCivil:twilightNautical:twilightAstronomical:)();
  static SunriseSunsetDetailChartContentStyle.defaultNightLineGradient.getter();
  static SunriseSunsetDetailChartContentStyle.defaultDayLineGradient.getter();
  static Image.sunriseSunsetDay.getter();
  static Image.sunriseSunsetNight.getter();
  static ShadowModel.clear.getter();
  SunriseSunsetDetailChartContentStyle.init(nightLineGradient:dayLineGradient:daySunImage:nightSunImage:dayNightLineWidth:horizonLineWidth:horizonLineColor:horizonLineShadow:sunImageWidth:nightSunColor:nightSunSymbolSize:twilightSunColors:twilightSunSymbolSize:)();
  uint64_t v43 = v62;
  *(void *)(v62 + v32[14]) = 0x4024000000000000;
  *(void *)(v43 + v32[15]) = 0x4030000000000000;
  *(void *)(v43 + v32[16]) = 0x4000000000000000;
  uint64_t v44 = v66;
  uint64_t v45 = *(void *)(v66 + 8);
  *(void *)&v80[0] = *(void *)v66;
  uint64_t v65 = v45;
  uint64_t v46 = v43 + v32[5];
  long long v47 = *(_OWORD *)(v66 + 16);
  *(_OWORD *)uint64_t v46 = *(_OWORD *)v66;
  *(_OWORD *)(v46 + 16) = v47;
  *(unsigned char *)(v46 + 32) = *(unsigned char *)(v44 + 32);
  uint64_t v48 = v68;
  sub_1001262FC(v68, v43 + v32[8], &qword_100EA37A0);
  id v49 = objc_allocWithZone((Class)UISelectionFeedbackGenerator);
  sub_1000618F8((uint64_t)v80);
  swift_retain();
  *(void *)(v43 + v32[10]) = [v49 init];
  uint64_t v50 = type metadata accessor for SunriseSunsetDetailChartViewModel();
  sub_10017C808();
  uint64_t v52 = v51;
  uint64_t v53 = v74;
  sub_100162808();
  v54();
  uint64_t v55 = v67;
  static Calendar.current.getter();
  SunriseSunsetDetailChartViewModel.location.getter();
  Location.timeZone.getter();
  sub_100162F0C();
  v56();
  uint64_t v57 = v69;
  Calendar.withTimeZone(_:)();
  sub_1002171E0((uint64_t)v80);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v53, v50);
  sub_100178110(v48, &qword_100EA37A0);
  sub_100162F0C();
  v58();
  uint64_t v60 = v75;
  uint64_t v59 = v76;
  (*(void (**)(char *, uint64_t))(v75 + 8))(v55, v76);
  (*(void (**)(uint64_t, char *, uint64_t))(v60 + 32))(v43 + v32[17], v57, v59);
  sub_100162694();
}

uint64_t type metadata accessor for SunriseSunsetInteractiveChartView()
{
  uint64_t result = qword_100EA3800;
  if (!qword_100EA3800) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_100953258(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v10 = sub_10017DF08(&qword_100E7DDF8);
    *(uint64_t *)((char *)a1 + *(int *)(v10 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(v10 + 28));
    uint64_t v11 = a3[5];
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v11;
    uint64_t v14 = (char *)a2 + v11;
    v13[32] = v14[32];
    uint64_t v15 = *((void *)v14 + 1);
    *(void *)uint64_t v13 = *(void *)v14;
    *((void *)v13 + 1) = v15;
    *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
    uint64_t v16 = (char *)a1 + v12;
    uint64_t v17 = (char *)a2 + v12;
    swift_retain();
    swift_retain();
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v7))
    {
      uint64_t v18 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v16, v17, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v7);
    }
    *(void *)&v16[*(int *)(v10 + 28)] = *(void *)&v17[*(int *)(v10 + 28)];
    uint64_t v19 = a3[7];
    uint64_t v20 = a3[8];
    uint64_t v21 = (uint64_t *)((char *)a1 + v19);
    uint64_t v22 = (uint64_t *)((char *)a2 + v19);
    uint64_t v23 = v22[1];
    *uint64_t v21 = *v22;
    v21[1] = v23;
    uint64_t v24 = (uint64_t *)((char *)a1 + v20);
    uint64_t v25 = (char *)a2 + v20;
    uint64_t v26 = *(uint64_t *)((char *)a2 + v20 + 8);
    *uint64_t v24 = *(uint64_t *)((char *)a2 + v20);
    v24[1] = v26;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v27 = *(int *)(sub_10017DF08(&qword_100EA37A0) + 32);
    uint64_t v28 = (char *)v24 + v27;
    uint64_t v29 = &v25[v27];
    uint64_t v30 = type metadata accessor for DetailChartDataElement();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30))
    {
      uint64_t v31 = sub_10017DF08(&qword_100E6B640);
      memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
    }
    uint64_t v32 = a3[9];
    uint64_t v33 = (uint64_t *)((char *)a1 + v32);
    uint64_t v34 = (uint64_t *)((char *)a2 + v32);
    sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v35 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    }
    else
    {
      void *v33 = *v34;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v36 = a3[10];
    uint64_t v37 = a3[11];
    uint64_t v38 = *(void **)((char *)a2 + v36);
    *(uint64_t *)((char *)a1 + v36) = (uint64_t)v38;
    uint64_t v39 = (char *)a1 + v37;
    uint64_t v40 = (char *)a2 + v37;
    uint64_t v41 = type metadata accessor for SunriseSunsetDetailChartViewModel();
    uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
    id v43 = v38;
    v42(v39, v40, v41);
    uint64_t v44 = a3[13];
    *(uint64_t *)((char *)a1 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    uint64_t v45 = (char *)a1 + v44;
    uint64_t v46 = (char *)a2 + v44;
    uint64_t v47 = type metadata accessor for SunriseSunsetDetailChartContentStyle();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
    uint64_t v48 = a3[15];
    *(uint64_t *)((char *)a1 + a3[14]) = *(uint64_t *)((char *)a2 + a3[14]);
    *(uint64_t *)((char *)a1 + v48) = *(uint64_t *)((char *)a2 + v48);
    uint64_t v49 = a3[17];
    *(uint64_t *)((char *)a1 + a3[16]) = *(uint64_t *)((char *)a2 + a3[16]);
    uint64_t v50 = (char *)a1 + v49;
    uint64_t v51 = (char *)a2 + v49;
    uint64_t v52 = type metadata accessor for Calendar();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
  }
  return a1;
}

uint64_t sub_100953714(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for Date();
  if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  sub_10017DF08(&qword_100E7DDF8);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v5 = a1 + a2[6];
  if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v5, v4);
  }
  swift_release();
  swift_release();
  uint64_t v6 = a1 + a2[8];
  swift_release();
  swift_release();
  uint64_t v7 = v6 + *(int *)(sub_10017DF08(&qword_100EA37A0) + 32);
  uint64_t v8 = type metadata accessor for DetailChartDataElement();
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  uint64_t v9 = a1 + a2[9];
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for LayoutDirection();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  }
  else
  {
    swift_release();
  }

  uint64_t v11 = a1 + a2[11];
  uint64_t v12 = type metadata accessor for SunriseSunsetDetailChartViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[13];
  uint64_t v14 = type metadata accessor for SunriseSunsetDetailChartContentStyle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = a1 + a2[17];
  uint64_t v16 = type metadata accessor for Calendar();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8);

  return v17(v15, v16);
}

char *sub_1009539F4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = sub_10017DF08(&qword_100E7DDF8);
  *(void *)&a1[*(int *)(v8 + 28)] = *(void *)&a2[*(int *)(v8 + 28)];
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  v11[32] = v12[32];
  uint64_t v13 = *((void *)v12 + 1);
  *(void *)uint64_t v11 = *(void *)v12;
  *((void *)v11 + 1) = v13;
  *((_OWORD *)v11 + 1) = *((_OWORD *)v12 + 1);
  uint64_t v14 = &a1[v10];
  uint64_t v15 = &a2[v10];
  swift_retain();
  swift_retain();
  swift_retain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v6))
  {
    uint64_t v16 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v14, v15, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v6);
  }
  *(void *)&v14[*(int *)(v8 + 28)] = *(void *)&v15[*(int *)(v8 + 28)];
  uint64_t v17 = a3[7];
  uint64_t v18 = a3[8];
  uint64_t v19 = &a1[v17];
  uint64_t v20 = &a2[v17];
  uint64_t v21 = *((void *)v20 + 1);
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = v21;
  uint64_t v22 = &a1[v18];
  uint64_t v23 = &a2[v18];
  uint64_t v24 = *(void *)&a2[v18 + 8];
  *(void *)uint64_t v22 = *(void *)&a2[v18];
  *((void *)v22 + 1) = v24;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v25 = *(int *)(sub_10017DF08(&qword_100EA37A0) + 32);
  uint64_t v26 = &v22[v25];
  uint64_t v27 = &v23[v25];
  uint64_t v28 = type metadata accessor for DetailChartDataElement();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28))
  {
    uint64_t v29 = sub_10017DF08(&qword_100E6B640);
    memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
  }
  uint64_t v30 = a3[9];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v33 = type metadata accessor for LayoutDirection();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
  }
  else
  {
    *(void *)uint64_t v31 = *(void *)v32;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v34 = a3[10];
  uint64_t v35 = a3[11];
  uint64_t v36 = *(void **)&a2[v34];
  *(void *)&a1[v34] = v36;
  uint64_t v37 = &a1[v35];
  uint64_t v38 = &a2[v35];
  uint64_t v39 = type metadata accessor for SunriseSunsetDetailChartViewModel();
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
  id v41 = v36;
  v40(v37, v38, v39);
  uint64_t v42 = a3[13];
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  id v43 = &a1[v42];
  uint64_t v44 = &a2[v42];
  uint64_t v45 = type metadata accessor for SunriseSunsetDetailChartContentStyle();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
  uint64_t v46 = a3[15];
  *(void *)&a1[a3[14]] = *(void *)&a2[a3[14]];
  *(void *)&a1[v46] = *(void *)&a2[v46];
  uint64_t v47 = a3[17];
  *(void *)&a1[a3[16]] = *(void *)&a2[a3[16]];
  uint64_t v48 = &a1[v47];
  uint64_t v49 = &a2[v47];
  uint64_t v50 = type metadata accessor for Calendar();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
  return a1;
}

char *sub_100953E60(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = sub_10017DF08(&qword_100E7DDF8);
  *(void *)&a1[*(int *)(v11 + 28)] = *(void *)&a2[*(int *)(v11 + 28)];
  swift_retain();
  swift_release();
  uint64_t v12 = a3[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)&a1[v12] = *(void *)&a2[v12];
  swift_retain();
  swift_release();
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_retain();
  swift_release();
  long long v15 = *((_OWORD *)v14 + 1);
  v13[32] = v14[32];
  *((_OWORD *)v13 + 1) = v15;
  uint64_t v16 = a3[6];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  LODWORD(v14) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&a1[v16], 1, v6);
  int v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v6);
  if (v14)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v17, v18, v6);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v20 = *(void *)(v6 - 8);
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v6);
LABEL_12:
    uint64_t v21 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v17, v18, v6);
LABEL_13:
  *(void *)&v17[*(int *)(v11 + 28)] = *(void *)&v18[*(int *)(v11 + 28)];
  swift_retain();
  swift_release();
  uint64_t v22 = a3[7];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  *(void *)uint64_t v23 = *(void *)v24;
  *((void *)v23 + 1) = *((void *)v24 + 1);
  swift_retain();
  swift_release();
  uint64_t v25 = a3[8];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  *(void *)&a1[v25] = *(void *)&a2[v25];
  swift_retain();
  swift_release();
  *((void *)v26 + 1) = *((void *)v27 + 1);
  swift_retain();
  swift_release();
  uint64_t v28 = *(int *)(sub_10017DF08(&qword_100EA37A0) + 32);
  uint64_t v29 = &v26[v28];
  uint64_t v30 = &v27[v28];
  uint64_t v31 = type metadata accessor for DetailChartDataElement();
  int v32 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v31);
  int v33 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  uint64_t v34 = *(void *)(v31 - 8);
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v29, v31);
LABEL_18:
    uint64_t v35 = sub_10017DF08(&qword_100E6B640);
    memcpy(v29, v30, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 24))(v29, v30, v31);
LABEL_19:
  if (a1 != a2)
  {
    uint64_t v36 = a3[9];
    uint64_t v37 = &a1[v36];
    uint64_t v38 = &a2[v36];
    sub_100178110((uint64_t)&a1[v36], &qword_100E62CB8);
    sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v39 = type metadata accessor for LayoutDirection();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    }
    else
    {
      *(void *)uint64_t v37 = *(void *)v38;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v40 = a3[10];
  id v41 = *(void **)&a2[v40];
  uint64_t v42 = *(void **)&a1[v40];
  *(void *)&a1[v40] = v41;
  id v43 = v41;

  uint64_t v44 = a3[11];
  uint64_t v45 = &a1[v44];
  uint64_t v46 = &a2[v44];
  uint64_t v47 = type metadata accessor for SunriseSunsetDetailChartViewModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 24))(v45, v46, v47);
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  uint64_t v48 = a3[13];
  uint64_t v49 = &a1[v48];
  uint64_t v50 = &a2[v48];
  uint64_t v51 = type metadata accessor for SunriseSunsetDetailChartContentStyle();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 24))(v49, v50, v51);
  *(void *)&a1[a3[14]] = *(void *)&a2[a3[14]];
  *(void *)&a1[a3[15]] = *(void *)&a2[a3[15]];
  *(void *)&a1[a3[16]] = *(void *)&a2[a3[16]];
  uint64_t v52 = a3[17];
  uint64_t v53 = &a1[v52];
  uint64_t v54 = &a2[v52];
  uint64_t v55 = type metadata accessor for Calendar();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 24))(v53, v54, v55);
  return a1;
}

char *sub_1009544D0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = sub_10017DF08(&qword_100E7DDF8);
  *(void *)&a1[*(int *)(v8 + 28)] = *(void *)&a2[*(int *)(v8 + 28)];
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  v11[32] = v12[32];
  long long v13 = *((_OWORD *)v12 + 1);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v13;
  uint64_t v14 = &a1[v10];
  long long v15 = &a2[v10];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v10], 1, v6))
  {
    uint64_t v16 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v14, v15, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v6);
  }
  *(void *)&v14[*(int *)(v8 + 28)] = *(void *)&v15[*(int *)(v8 + 28)];
  uint64_t v17 = a3[8];
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  uint64_t v18 = &a1[v17];
  int v19 = &a2[v17];
  uint64_t v20 = *(void *)&a2[v17];
  uint64_t v21 = *(void *)&a2[v17 + 8];
  *(void *)uint64_t v18 = v20;
  *((void *)v18 + 1) = v21;
  uint64_t v22 = *(int *)(sub_10017DF08(&qword_100EA37A0) + 32);
  uint64_t v23 = &v18[v22];
  uint64_t v24 = &v19[v22];
  uint64_t v25 = type metadata accessor for DetailChartDataElement();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25))
  {
    uint64_t v26 = sub_10017DF08(&qword_100E6B640);
    memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v25);
  }
  uint64_t v27 = a3[9];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  uint64_t v30 = sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v31 = type metadata accessor for LayoutDirection();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v28, v29, v31);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  }
  uint64_t v32 = a3[11];
  *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
  int v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v35 = type metadata accessor for SunriseSunsetDetailChartViewModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
  uint64_t v36 = a3[13];
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  uint64_t v39 = type metadata accessor for SunriseSunsetDetailChartContentStyle();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
  uint64_t v40 = a3[15];
  *(void *)&a1[a3[14]] = *(void *)&a2[a3[14]];
  *(void *)&a1[v40] = *(void *)&a2[v40];
  uint64_t v41 = a3[17];
  *(void *)&a1[a3[16]] = *(void *)&a2[a3[16]];
  uint64_t v42 = &a1[v41];
  id v43 = &a2[v41];
  uint64_t v44 = type metadata accessor for Calendar();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
  return a1;
}

char *sub_1009548F4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = sub_10017DF08(&qword_100E7DDF8);
  *(void *)&a1[*(int *)(v11 + 28)] = *(void *)&a2[*(int *)(v11 + 28)];
  swift_release();
  uint64_t v12 = a3[5];
  long long v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)&a1[v12] = *(void *)&a2[v12];
  swift_release();
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_release();
  *((_OWORD *)v13 + 1) = *((_OWORD *)v14 + 1);
  v13[32] = v14[32];
  uint64_t v15 = a3[6];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  int v18 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&a1[v15], 1, v6);
  int v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v6);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v16, v17, v6);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  uint64_t v20 = *(void *)(v6 - 8);
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v16, v6);
LABEL_12:
    uint64_t v21 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v16, v17, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 40))(v16, v17, v6);
LABEL_13:
  *(void *)&v16[*(int *)(v11 + 28)] = *(void *)&v17[*(int *)(v11 + 28)];
  swift_release();
  uint64_t v22 = a3[7];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v26 = *(void *)v24;
  uint64_t v25 = *((void *)v24 + 1);
  *(void *)uint64_t v23 = v26;
  *((void *)v23 + 1) = v25;
  swift_release();
  uint64_t v27 = a3[8];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  *(void *)&a1[v27] = *(void *)&a2[v27];
  swift_release();
  *((void *)v28 + 1) = *((void *)v29 + 1);
  swift_release();
  uint64_t v30 = *(int *)(sub_10017DF08(&qword_100EA37A0) + 32);
  uint64_t v31 = &v28[v30];
  uint64_t v32 = &v29[v30];
  uint64_t v33 = type metadata accessor for DetailChartDataElement();
  int v34 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v33);
  int v35 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v33);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v33);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  uint64_t v36 = *(void *)(v33 - 8);
  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v36 + 8))(v31, v33);
LABEL_18:
    uint64_t v37 = sub_10017DF08(&qword_100E6B640);
    memcpy(v31, v32, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v36 + 40))(v31, v32, v33);
LABEL_19:
  if (a1 != a2)
  {
    uint64_t v38 = a3[9];
    uint64_t v39 = &a1[v38];
    uint64_t v40 = &a2[v38];
    sub_100178110((uint64_t)&a1[v38], &qword_100E62CB8);
    uint64_t v41 = sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v42 = type metadata accessor for LayoutDirection();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v39, v40, v42);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
  }
  uint64_t v43 = a3[10];
  uint64_t v44 = *(void **)&a1[v43];
  *(void *)&a1[v43] = *(void *)&a2[v43];

  uint64_t v45 = a3[11];
  uint64_t v46 = &a1[v45];
  uint64_t v47 = &a2[v45];
  uint64_t v48 = type metadata accessor for SunriseSunsetDetailChartViewModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 40))(v46, v47, v48);
  uint64_t v49 = a3[13];
  *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
  uint64_t v50 = &a1[v49];
  uint64_t v51 = &a2[v49];
  uint64_t v52 = type metadata accessor for SunriseSunsetDetailChartContentStyle();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 40))(v50, v51, v52);
  uint64_t v53 = a3[15];
  *(void *)&a1[a3[14]] = *(void *)&a2[a3[14]];
  *(void *)&a1[v53] = *(void *)&a2[v53];
  uint64_t v54 = a3[17];
  *(void *)&a1[a3[16]] = *(void *)&a2[a3[16]];
  uint64_t v55 = &a1[v54];
  uint64_t v56 = &a2[v54];
  uint64_t v57 = type metadata accessor for Calendar();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 40))(v55, v56, v57);
  return a1;
}

uint64_t sub_100954F1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100954F30);
}

uint64_t sub_100954F30(uint64_t a1, uint64_t a2, int *a3)
{
  sub_10017DF08(&qword_100E7DDF8);
  sub_10017C808();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_17:
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  if (a2 != 0x7FFFFFFF)
  {
    sub_10017DF08(&qword_100EA37A0);
    sub_10017C808();
    if (*(_DWORD *)(v13 + 84) == a2)
    {
      uint64_t v8 = v12;
      uint64_t v14 = a3[8];
    }
    else
    {
      sub_10017DF08(&qword_100E63BF0);
      sub_10017C808();
      if (*(_DWORD *)(v16 + 84) == a2)
      {
        uint64_t v8 = v15;
        uint64_t v14 = a3[9];
      }
      else
      {
        type metadata accessor for SunriseSunsetDetailChartViewModel();
        sub_10017C808();
        if (*(_DWORD *)(v18 + 84) == a2)
        {
          uint64_t v8 = v17;
          uint64_t v14 = a3[11];
        }
        else
        {
          type metadata accessor for SunriseSunsetDetailChartContentStyle();
          sub_10017C808();
          if (*(_DWORD *)(v20 + 84) == a2)
          {
            uint64_t v8 = v19;
            uint64_t v14 = a3[13];
          }
          else
          {
            uint64_t v8 = type metadata accessor for Calendar();
            uint64_t v14 = a3[17];
          }
        }
      }
    }
    uint64_t v9 = a1 + v14;
    goto LABEL_17;
  }
  unint64_t v10 = *(void *)(a1 + a3[5] + 8);
  if (v10 >= 0xFFFFFFFF) {
    LODWORD(v10) = -1;
  }
  return (v10 + 1);
}

uint64_t sub_100955094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1009550A8);
}

void sub_1009550A8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_10017DF08(&qword_100E7DDF8);
  sub_10017C808();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(void *)(a1 + a4[5] + 8) = (a2 - 1);
      return;
    }
    sub_10017DF08(&qword_100EA37A0);
    sub_10017C808();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[8];
    }
    else
    {
      sub_10017DF08(&qword_100E63BF0);
      sub_10017C808();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[9];
      }
      else
      {
        type metadata accessor for SunriseSunsetDetailChartViewModel();
        sub_10017C808();
        if (*(_DWORD *)(v18 + 84) == a3)
        {
          uint64_t v10 = v17;
          uint64_t v14 = a4[11];
        }
        else
        {
          type metadata accessor for SunriseSunsetDetailChartContentStyle();
          sub_10017C808();
          if (*(_DWORD *)(v20 + 84) == a3)
          {
            uint64_t v10 = v19;
            uint64_t v14 = a4[13];
          }
          else
          {
            uint64_t v10 = type metadata accessor for Calendar();
            uint64_t v14 = a4[17];
          }
        }
      }
    }
    uint64_t v11 = a1 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

void sub_100955208()
{
  sub_100955438(319, (unint64_t *)&qword_100E7DE80, (uint64_t *)&unk_100E73CA0, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for State);
  if (v0 <= 0x3F)
  {
    sub_100955438(319, (unint64_t *)&unk_100EA3810, &qword_100E6B640, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Binding);
    if (v1 <= 0x3F)
    {
      sub_10000CE24();
      if (v2 <= 0x3F)
      {
        type metadata accessor for SunriseSunsetDetailChartViewModel();
        if (v3 <= 0x3F)
        {
          type metadata accessor for SunriseSunsetDetailChartContentStyle();
          if (v4 <= 0x3F)
          {
            type metadata accessor for Calendar();
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

void sub_100955438(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = sub_10018C6DC(a3);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_100955498()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1009554B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = v1;
  uint64_t v153 = a1;
  uint64_t v6 = type metadata accessor for SunriseSunsetInteractiveChartView();
  sub_100179C0C();
  uint64_t v150 = v7;
  __chkstk_darwin(v8);
  uint64_t v151 = v9;
  uint64_t v152 = (uint64_t)&v127 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100129064();
  uint64_t v149 = type metadata accessor for DynamicTypeSize();
  sub_100179C0C();
  uint64_t v148 = v10;
  __chkstk_darwin(v11);
  sub_100109314();
  uint64_t v147 = v12;
  sub_100129064();
  uint64_t v137 = type metadata accessor for PlotDimensionScaleRange();
  sub_100179C0C();
  uint64_t v135 = v13;
  __chkstk_darwin(v14);
  sub_100109314();
  sub_100109338(v15);
  uint64_t v16 = sub_10017DF08(&qword_100E7D238);
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  sub_100109370();
  uint64_t v18 = sub_10017DF08(&qword_100EA3870);
  sub_100179C0C();
  uint64_t v20 = v19;
  __chkstk_darwin(v21);
  sub_10016279C();
  uint64_t v22 = sub_10017DF08(&qword_100EA3878);
  uint64_t v23 = v22 - 8;
  __chkstk_darwin(v22);
  sub_1001626E0();
  uint64_t v26 = v25 - v24;
  uint64_t v130 = sub_10017DF08(&qword_100EA3880);
  sub_100162E4C();
  __chkstk_darwin(v27);
  sub_100125FF8();
  uint64_t v132 = sub_10017DF08(&qword_100EA3888);
  sub_100179C0C();
  uint64_t v131 = v28;
  __chkstk_darwin(v29);
  sub_100109314();
  sub_100109338(v30);
  uint64_t v134 = sub_10017DF08(&qword_100EA3890);
  sub_100179C0C();
  uint64_t v133 = v31;
  __chkstk_darwin(v32);
  sub_100109314();
  sub_100109338(v33);
  uint64_t v138 = sub_10017DF08(&qword_100EA3898);
  sub_100179C0C();
  uint64_t v136 = v34;
  __chkstk_darwin(v35);
  sub_100109314();
  sub_100109338(v36);
  uint64_t v140 = sub_10017DF08(&qword_100EA38A0);
  sub_100179C0C();
  uint64_t v139 = v37;
  __chkstk_darwin(v38);
  sub_100109314();
  sub_100109338(v39);
  uint64_t v142 = sub_10017DF08(&qword_100EA38A8);
  sub_100179C0C();
  uint64_t v141 = v40;
  __chkstk_darwin(v41);
  sub_100109314();
  sub_100109338(v42);
  uint64_t v144 = sub_10017DF08(&qword_100EA38B0);
  sub_100179C0C();
  uint64_t v143 = v43;
  __chkstk_darwin(v44);
  sub_100109314();
  sub_100109338(v45);
  uint64_t v146 = sub_10017DF08(&qword_100EA38B8);
  sub_100179C0C();
  uint64_t v145 = v46;
  __chkstk_darwin(v47);
  sub_100109314();
  sub_100109338(v48);
  uint64_t v156 = v5;
  type metadata accessor for SunriseSunsetDetailChartContent();
  sub_10095B1B8((uint64_t)&unk_100EA38C0);
  Chart.init(content:)();
  char v49 = static Edge.Set.bottom.getter();
  uint64_t v129 = *(int *)(v6 + 56);
  EdgeInsets.init(_all:)();
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  uint64_t v55 = v54;
  uint64_t v57 = v56;
  sub_100162808();
  v58();
  uint64_t v59 = v26 + *(int *)(v23 + 44);
  *(unsigned char *)uint64_t v59 = v49;
  *(void *)(v59 + 8) = v51;
  *(void *)(v59 + 16) = v53;
  *(void *)(v59 + 24) = v55;
  *(void *)(v59 + 32) = v57;
  *(unsigned char *)(v59 + 40) = 0;
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v2, v18);
  if (qword_100E62450 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_10058C858();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_1001262FC(v26, v3, &qword_100EA3878);
  uint64_t v60 = v130;
  uint64_t v61 = (_OWORD *)(v3 + *(int *)(v130 + 36));
  long long v62 = v165;
  *uint64_t v61 = v164;
  v61[1] = v62;
  void v61[2] = v166;
  sub_100178110(v26, &qword_100EA3878);
  uint64_t v157 = SunriseSunsetDetailChartViewModel.xDomain.getter();
  uint64_t v128 = type metadata accessor for ScaleType();
  _s7Weather24LocationCompositionStateOwst_0(v4, 1, 1, v128);
  uint64_t v63 = sub_10017DF08(&qword_100E66F68);
  uint64_t v155 = v5;
  uint64_t v64 = v63;
  uint64_t v65 = v4;
  unint64_t v66 = sub_10095B06C((uint64_t)&unk_100EA38C8);
  unint64_t v67 = sub_10095BA50((uint64_t)&unk_100E94D58);
  View.chartXScale<A>(domain:type:)();
  sub_100178110(v65, &qword_100E7D238);
  swift_bridgeObjectRelease();
  sub_100178110(v3, &qword_100EA3880);
  sub_10017DF08(&qword_100E6B6D0);
  uint64_t v68 = swift_allocObject();
  *(_OWORD *)(v68 + 16) = xmmword_100C25ED0;
  SunriseSunsetDetailChartViewModel.chartMinYValue.getter();
  *(void *)(v68 + 32) = v69;
  SunriseSunsetDetailChartViewModel.chartMaxYValue.getter();
  *(void *)(v68 + 40) = v70;
  uint64_t v163 = v68;
  static PositionScaleRange<>.plotDimension(startPadding:endPadding:)();
  _s7Weather24LocationCompositionStateOwst_0(v65, 1, 1, v128);
  uint64_t v71 = sub_10017DF08(&qword_100E94D60);
  uint64_t v157 = v60;
  uint64_t v158 = v64;
  unint64_t v159 = v66;
  unint64_t v160 = v67;
  uint64_t v72 = sub_100186D0C();
  unint64_t v73 = sub_10095BA50((uint64_t)&unk_100E94D68);
  uint64_t v74 = v132;
  uint64_t v75 = v137;
  View.chartYScale<A, B>(domain:range:type:)();
  sub_100178110(v65, &qword_100E7D238);
  sub_100162F0C();
  v76();
  swift_bridgeObjectRelease();
  sub_100162F0C();
  uint64_t v78 = v77();
  uint64_t v154 = &v127;
  __chkstk_darwin(v78);
  uint64_t v79 = sub_10017DF08(&qword_100EA38E0);
  uint64_t v157 = v74;
  uint64_t v158 = v71;
  unint64_t v159 = v75;
  unint64_t v160 = v72;
  unint64_t v161 = v73;
  uint64_t v162 = &protocol witness table for PlotDimensionScaleRange;
  uint64_t v80 = sub_100186D0C();
  uint64_t v81 = sub_10018C6DC(&qword_100EA38E8);
  uint64_t v82 = sub_10018C6DC(&qword_100EA38F0);
  unint64_t v83 = sub_10024D5E4((uint64_t)&unk_100EA38F8);
  unint64_t v84 = sub_10095AD90();
  uint64_t v157 = v81;
  uint64_t v158 = v82;
  unint64_t v159 = v83;
  unint64_t v160 = v84;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v86 = v134;
  View.chartXAxis<A>(content:)();
  sub_100162F0C();
  uint64_t v88 = v87();
  __chkstk_darwin(v88);
  sub_1001845C8();
  *(void *)(v90 - 16) = *(void *)(v89 - 256);
  uint64_t v91 = sub_10017DF08(&qword_100EA3918);
  uint64_t v157 = v86;
  uint64_t v158 = v79;
  unint64_t v159 = v80;
  unint64_t v160 = OpaqueTypeConformance2;
  uint64_t v92 = sub_100186D0C();
  uint64_t v93 = sub_10018C6DC(&qword_100EA3920);
  uint64_t v94 = sub_10018C6DC(&qword_100EA3928);
  unint64_t v95 = sub_10024D5E4((uint64_t)&unk_100EA3930);
  unint64_t v96 = sub_10095AE48();
  uint64_t v157 = v93;
  uint64_t v158 = v94;
  unint64_t v159 = v95;
  unint64_t v160 = v96;
  uint64_t v97 = swift_getOpaqueTypeConformance2();
  uint64_t v98 = v138;
  View.chartYAxis<A>(content:)();
  sub_100162F0C();
  v99();
  uint64_t v100 = v148;
  uint64_t v101 = v147;
  uint64_t v102 = v149;
  (*(void (**)(uint64_t, void, uint64_t))(v148 + 104))(v147, enum case for DynamicTypeSize.large(_:), v149);
  uint64_t v157 = v98;
  uint64_t v158 = v91;
  unint64_t v159 = v92;
  unint64_t v160 = v97;
  uint64_t v103 = sub_100186D0C();
  uint64_t v104 = v140;
  View.dynamicTypeSize(_:)();
  (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v101, v102);
  sub_100162F0C();
  uint64_t v106 = v105();
  __chkstk_darwin(v106);
  sub_1001845C8();
  uint64_t v108 = *(void *)(v107 - 256);
  *(void *)(v109 - 16) = v108;
  uint64_t v149 = sub_10017DF08(&qword_100E9A930);
  uint64_t v157 = v104;
  uint64_t v158 = v103;
  uint64_t v110 = sub_100186D0C();
  unint64_t v111 = sub_1008376C4();
  uint64_t v112 = v142;
  View.accessibilityRepresentation<A>(representation:)();
  sub_100162F0C();
  v113();
  uint64_t v114 = v108;
  uint64_t v115 = v152;
  sub_10095AEF0(v114, v152);
  uint64_t v116 = *(unsigned __int8 *)(v150 + 80);
  uint64_t v117 = (v116 + 16) & ~v116;
  v151 += v117;
  uint64_t v150 = v116 | 7;
  uint64_t v118 = swift_allocObject();
  sub_10095AF58(v115, v118 + v117);
  uint64_t v148 = static Alignment.center.getter();
  uint64_t v119 = sub_10017DF08(&qword_100EA3950);
  uint64_t v157 = v112;
  uint64_t v158 = v149;
  unint64_t v159 = v110;
  unint64_t v160 = v111;
  uint64_t v120 = sub_100186D0C();
  unint64_t v121 = sub_10095BF40((uint64_t)&unk_100EA3958);
  uint64_t v122 = v144;
  View.chartBackground<A>(alignment:content:)();
  swift_release();
  sub_100162F0C();
  v123();
  sub_10095AEF0(v155, v115);
  uint64_t v124 = swift_allocObject();
  sub_10095AF58(v115, v124 + v117);
  static Alignment.center.getter();
  sub_10017DF08(&qword_100EA3980);
  uint64_t v157 = v122;
  uint64_t v158 = v119;
  unint64_t v159 = v120;
  unint64_t v160 = v121;
  sub_100186D0C();
  sub_10095B0F4();
  View.chartOverlay<A>(alignment:content:)();
  swift_release();
  sub_100162F0C();
  return v125();
}

uint64_t sub_1009563D4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SunriseSunsetDetailChartContentStyle();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for SunriseSunsetDetailChartViewModel();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for SunriseSunsetInteractiveChartView();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1 + *(int *)(v10 + 44), v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1 + *(int *)(v10 + 52), v2);
  return SunriseSunsetDetailChartContent.init(model:style:sampleBlocks:)();
}

void sub_10095656C()
{
  sub_100162EA0();
  uint64_t v37 = v3;
  uint64_t v4 = type metadata accessor for AxisMarkPosition();
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v36 = v6;
  sub_100129064();
  uint64_t v7 = type metadata accessor for AxisMarkPreset();
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v35 = v9;
  sub_100129064();
  uint64_t v10 = type metadata accessor for SunriseSunsetInteractiveChartView();
  uint64_t v11 = v10 - 8;
  uint64_t v33 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v33 + 64);
  __chkstk_darwin(v10);
  uint64_t v31 = (uint64_t)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100E7D438);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_100109370();
  uint64_t v15 = type metadata accessor for Calendar.Component();
  sub_100179C0C();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  sub_100125FF8();
  uint64_t v19 = type metadata accessor for AxisMarkValues();
  uint64_t v20 = sub_100109308(v19);
  __chkstk_darwin(v20);
  sub_1001626E0();
  uint64_t v32 = sub_10017DF08(&qword_100EA38E8);
  sub_100179C0C();
  uint64_t v34 = v21;
  __chkstk_darwin(v22);
  sub_1001626E0();
  (*(void (**)(uint64_t, void, uint64_t))(v17 + 104))(v1, enum case for Calendar.Component.hour(_:), v15);
  uint64_t v23 = v0 + *(int *)(v11 + 76);
  uint64_t v24 = type metadata accessor for Calendar();
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v2, v23, v24);
  _s7Weather24LocationCompositionStateOwst_0(v2, 0, 1, v24);
  static AxisMarkValues.stride(by:count:roundLowerBound:roundUpperBound:calendar:)();
  sub_100178110(v2, &qword_100E7D438);
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v1, v15);
  uint64_t v26 = v31;
  sub_10095AEF0(v0, v31);
  unint64_t v27 = (*(unsigned __int8 *)(v33 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v28 = swift_allocObject();
  sub_10095AF58(v26, v28 + v27);
  static AxisMarkPreset.automatic.getter();
  static AxisMarkPosition.automatic.getter();
  sub_10017DF08(&qword_100EA39D0);
  sub_10095B898();
  AxisMarks.init(preset:position:values:content:)();
  sub_10017DF08(&qword_100EA38F0);
  sub_10024D5E4((uint64_t)&unk_100EA38F8);
  sub_10095AD90();
  AxisContent.compositingLayer<A>(style:)();
  sub_100162F0C();
  v29();
  sub_100162694();
}

void sub_100956970()
{
  sub_100162EA0();
  uint64_t v1 = type metadata accessor for AxisMarkPosition();
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_1001626E0();
  uint64_t v3 = type metadata accessor for AxisMarkPreset();
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_10016279C();
  uint64_t v5 = type metadata accessor for AxisMarkValues();
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v7 = sub_10017DF08(&qword_100EA3920);
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_10012B938();
  sub_100146A70();
  static AxisMarkValues.stride<A>(by:roundLowerBound:roundUpperBound:)();
  static AxisMarkPreset.automatic.getter();
  static AxisMarkPosition.automatic.getter();
  sub_10017DF08(&qword_100E94E30);
  sub_10095B9A0((uint64_t)&qword_100E94E28);
  AxisMarks.init(preset:position:values:content:)();
  sub_10017DF08(&qword_100EA3928);
  sub_10024D5E4((uint64_t)&unk_100EA3930);
  sub_10095AE48();
  AxisContent.compositingLayer<A>(style:)();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v0, v7);
  sub_100162694();
}

uint64_t sub_100956BC8@<X0>(void (*a1)(char *, uint64_t, uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v60 = a1;
  uint64_t v57 = a2;
  uint64_t v2 = type metadata accessor for AccessibilityCustomContentKey();
  __chkstk_darwin(v2 - 8);
  uint64_t v63 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for SunriseSunsetDetailChartViewModel.SunEventAccessibilityModel();
  uint64_t v58 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for AccessibilityCustomContentEntry();
  uint64_t v6 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v64 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for RoundedRectangle();
  uint64_t v59 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (_OWORD *)((char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_10017DF08(&qword_100E9A930);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v53 - v15;
  __chkstk_darwin(v17);
  uint64_t v54 = (char *)&v53 - v18;
  uint64_t v19 = (char *)v10 + *(int *)(v8 + 20);
  uint64_t v20 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v21 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v19, v20, v21);
  __asm { FMOV            V0.2D, #5.0 }
  *uint64_t v10 = _Q0;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v27 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v29 = v28;
  char v31 = v30 & 1;
  sub_10095B1B8((uint64_t)&qword_100E7B5E0);
  View.accessibilityLabel(_:)();
  sub_100191924(v27, v29, v31);
  swift_bridgeObjectRelease();
  sub_1004D2EC4((uint64_t)v10);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v32 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v34 = v33;
  char v36 = v35 & 1;
  uint64_t v55 = v16;
  uint64_t v56 = v11;
  ModifiedContent<>.accessibilityHint(_:)();
  sub_100191924(v32, v34, v36);
  swift_bridgeObjectRelease();
  sub_100178110((uint64_t)v13, &qword_100E9A930);
  type metadata accessor for SunriseSunsetInteractiveChartView();
  uint64_t v37 = SunriseSunsetDetailChartViewModel.sunEventAccessibilityModels.getter();
  uint64_t v38 = *(void *)(v37 + 16);
  if (v38)
  {
    unint64_t v67 = _swiftEmptyArrayStorage;
    sub_1007F3BD4();
    uint64_t v40 = v58 + 16;
    uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v58 + 16);
    uint64_t v41 = *(unsigned __int8 *)(v58 + 80);
    uint64_t v53 = v37;
    uint64_t v42 = v37 + ((v41 + 32) & ~v41);
    uint64_t v59 = *(void *)(v58 + 72);
    uint64_t v60 = v39;
    uint64_t v43 = (void (**)(char *, uint64_t))(v58 + 8);
    uint64_t v58 = v6 + 32;
    do
    {
      uint64_t v44 = v62;
      uint64_t v45 = v40;
      v60(v5, v42, v62);
      SunriseSunsetDetailChartViewModel.SunEventAccessibilityModel.label.getter();
      LocalizedStringKey.init(_:)();
      AccessibilityCustomContentKey.init(_:)();
      uint64_t v65 = SunriseSunsetDetailChartViewModel.SunEventAccessibilityModel.value.getter();
      uint64_t v66 = v46;
      sub_10014A85C();
      Text.init<A>(_:)();
      AccessibilityCustomContentEntry.init(_:value:importance:)();
      (*v43)(v5, v44);
      uint64_t v47 = v67;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1007F3BD4();
        uint64_t v47 = v67;
      }
      unint64_t v48 = v47[2];
      if (v48 >= v47[3] >> 1)
      {
        sub_1007F3BD4();
        uint64_t v47 = v67;
      }
      v47[2] = v48 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))((unint64_t)v47+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v48, v64, v61);
      unint64_t v67 = v47;
      v42 += v59;
      --v38;
      uint64_t v40 = v45;
    }
    while (v38);
  }
  swift_bridgeObjectRelease();
  uint64_t v49 = v57;
  uint64_t v51 = (uint64_t)v54;
  uint64_t v50 = (uint64_t)v55;
  ModifiedContent<>.accessibilityCustomContent(_:)();
  swift_bridgeObjectRelease();
  sub_100178110(v50, &qword_100E9A930);
  return sub_10020E72C(v51, v49, &qword_100E9A930);
}

uint64_t sub_100957224@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10017DF08(&qword_100E921F0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for SunriseSunsetChartBackground();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SunriseSunsetInteractiveChartView();
  SunriseSunsetDetailChartViewModel.chartBackground.getter();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_100178110((uint64_t)v4, &qword_100E921F0);
LABEL_6:
    sub_10095B810(v29);
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  v52[0] = 0;
  ChartProxy.position<A>(forY:)();
  if (v9)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    goto LABEL_6;
  }
  SunriseSunsetChartBackground.gradient.getter();
  LinearGradient.init(gradient:startPoint:endPoint:)();
  uint64_t v27 = v30;
  long long v25 = v31;
  uint64_t v10 = v32;
  uint64_t v11 = v33;
  ChartProxy.plotSize.getter();
  SunriseSunsetDetailChartContentStyle.horizonLineWidth.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v12 = v34;
  char v13 = v35;
  uint64_t v14 = v36;
  uint64_t v28 = a1;
  char v15 = v37;
  uint64_t v16 = v38;
  uint64_t v24 = v39;
  SunriseSunsetChartBackground.opacity.getter();
  uint64_t v40 = v27;
  long long v41 = v25;
  uint64_t v42 = v10;
  uint64_t v43 = v11;
  __int16 v44 = 256;
  uint64_t v45 = v12;
  char v46 = v13;
  uint64_t v47 = v14;
  char v48 = v15;
  a1 = v28;
  uint64_t v49 = v16;
  uint64_t v50 = v24;
  uint64_t v51 = v17;
  uint64_t v18 = static Alignment.topLeading.getter();
  LOBYTE(v22) = 0;
  LOBYTE(v21) = 1;
  sub_100BD84C8(v52, 0, 1, 0, 1, 0, 0, 0, 1, 0, v21, 0x7FF0000000000000, v22, v18, v19, v23, v24, v25, *((uint64_t *)&v25 + 1),
    v26,
    v27,
    v28,
    v29[0],
    v29[1],
    v29[2],
    v29[3],
    v29[4],
    v29[5],
    v29[6],
    v29[7],
    v29[8],
    v29[9],
    v29[10],
    v29[11],
    v29[12],
    v29[13],
    v29[14],
    v29[15],
    v29[16],
    v29[17],
    v29[18],
    v29[19],
    v29[20],
    v29[21],
    v29[22],
    v29[23],
    v29[24],
    v29[25],
    v29[26],
    v30,
    v31);
  sub_100295014((uint64_t)&v30);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  memcpy(v29, v52, sizeof(v29));
  LocationSearchEntityFromStringResolver.init()();
LABEL_7:
  sub_10020E72C((uint64_t)v29, (uint64_t)v52, &qword_100EA3950);
  return sub_10020E72C((uint64_t)v52, a1, &qword_100EA3950);
}

uint64_t sub_100957598(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100EA3998);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v6 = static Alignment.topLeading.getter();
  v6[1] = v7;
  uint64_t v8 = sub_10017DF08(&qword_100EA39A0);
  sub_1009576A8(a2, a1, (uint64_t)v6 + *(int *)(v8 + 44));
  static Alignment.topLeading.getter();
  sub_100BD85D0();
  return sub_100178110((uint64_t)v6, &qword_100EA3998);
}

uint64_t sub_1009576A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v89 = a3;
  uint64_t v5 = type metadata accessor for LocalCoordinateSpace();
  uint64_t v87 = *(void *)(v5 - 8);
  uint64_t v88 = v5;
  __chkstk_darwin(v5);
  uint64_t v86 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for ChartProxy();
  uint64_t v80 = *(void *)(v82 - 8);
  uint64_t v7 = *(void *)(v80 + 64);
  __chkstk_darwin(v82);
  uint64_t v79 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SunriseSunsetInteractiveChartView();
  uint64_t v71 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v72 = v9;
  uint64_t v75 = (uint64_t)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(double *)&uint64_t v76 = COERCE_DOUBLE(type metadata accessor for ChartDragGestureRecognizerRepresentable());
  uint64_t v74 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  unint64_t v73 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100EA39A8);
  uint64_t v77 = *(void *)(v11 - 8);
  uint64_t v78 = v11;
  __chkstk_darwin(v11);
  uint64_t v90 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100EA39B0);
  uint64_t v84 = *(void *)(v13 - 8);
  uint64_t v85 = v13;
  __chkstk_darwin(v13);
  unint64_t v83 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v81 = (char *)&v63 - v16;
  uint64_t v17 = a1 + *(int *)(v8 + 20);
  uint64_t v18 = *(void *)(v17 + 8);
  char v19 = *(unsigned char *)(v17 + 32);
  v117[0] = *(void *)v17;
  v117[1] = v18;
  long long v118 = *(_OWORD *)(v17 + 16);
  char v119 = v19;
  sub_10017DF08(&qword_100EA39B8);
  Binding.wrappedValue.getter();
  if (v101)
  {
    sub_10095B194(&v99);
    sub_10020E72C((uint64_t)&v99, (uint64_t)v117, &qword_100EA39C0);
  }
  else
  {
    double v20 = *(double *)&v99;
    double v21 = v100;
    SunriseSunsetDetailChartViewModel.chartMinYValue.getter();
    v117[0] = v22;
    ChartProxy.position<A>(forY:)();
    uint64_t v67 = v7;
    if (v23)
    {
      *(double *)&uint64_t v24 = 0.0;
      *(double *)&uint64_t v63 = 0.0;
      *(double *)&uint64_t v64 = 0.0;
      uint64_t v70 = 0;
      unint64_t v65 = 0;
      uint64_t v66 = 0;
      uint64_t v26 = 0;
      uint64_t v27 = 0;
      double v25 = 0.0;
    }
    else
    {
      *(double *)&uint64_t v24 = COERCE_DOUBLE(static Color.white.getter());
      static Alignment.center.getter();
      _FrameLayout.init(width:height:alignment:)();
      uint64_t v70 = v111;
      uint64_t v66 = v112;
      uint64_t v64 = v114;
      unint64_t v65 = v113;
      uint64_t v63 = 256;
      double v25 = v20;
      uint64_t v26 = v115;
      uint64_t v27 = v116;
    }
    uint64_t v28 = static Alignment.center.getter();
    uint64_t v30 = v29;
    sub_100958040((uint64_t)v91);
    double v31 = *(double *)(a1 + *(int *)(v8 + 60)) * 0.5;
    double v32 = v20 - v31;
    double v33 = v21 - v31;
    memcpy(v94, v91, sizeof(v94));
    v92[0] = v28;
    v92[1] = v30;
    memcpy(&v92[2], v91, 0x80uLL);
    *(double *)&v92[18] = v32;
    *(double *)&v92[19] = v33;
    LOBYTE(v92[20]) = 0;
    memcpy(&v98[7], v92, 0xA1uLL);
    v93[0] = v28;
    v93[1] = v30;
    double v95 = v32;
    double v96 = v33;
    char v97 = 0;
    swift_retain();
    sub_10095B780((uint64_t)v92);
    sub_10095B7B8((uint64_t)v93);
    swift_release();
    uint64_t v99 = v24;
    double v100 = *(double *)&v63;
    unint64_t v101 = (unint64_t)v70;
    unint64_t v102 = v66;
    unint64_t v103 = v65;
    uint64_t v104 = v64;
    uint64_t v105 = v26;
    uint64_t v106 = v27;
    double v107 = v25;
    uint64_t v108 = 0;
    char v109 = 0;
    memcpy(v110, v98, sizeof(v110));
    LocationSearchEntityFromStringResolver.init()();
    sub_10020E72C((uint64_t)&v99, (uint64_t)v117, &qword_100EA39C0);
    uint64_t v7 = v67;
  }
  uint64_t v68 = a1;
  *(double *)&uint64_t v99 = COERCE_DOUBLE(static Color.clear.getter());
  LOWORD(v100) = 256;
  BYTE2(v100) = 0;
  uint64_t v34 = a1;
  uint64_t v35 = v75;
  sub_10095AEF0(v34, v75);
  char v37 = v79;
  uint64_t v36 = v80;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v80 + 16);
  uint64_t v69 = a2;
  uint64_t v70 = v38;
  uint64_t v39 = v82;
  v38(v79, a2, v82);
  uint64_t v40 = *(unsigned __int8 *)(v71 + 80);
  uint64_t v41 = (v40 + 16) & ~v40;
  uint64_t v42 = *(unsigned __int8 *)(v36 + 80);
  uint64_t v43 = ((v72 + v42 + v41) & ~v42) + v7;
  uint64_t v71 = v41;
  uint64_t v72 = (v72 + v42 + v41) & ~v42;
  uint64_t v44 = v72;
  uint64_t v66 = v40 | v42 | 7;
  uint64_t v67 = v43;
  uint64_t v45 = swift_allocObject();
  sub_10095AF58(v35, v45 + v41);
  uint64_t v80 = *(void *)(v36 + 32);
  ((void (*)(uint64_t, char *, uint64_t))v80)(v45 + v44, v37, v39);
  char v46 = v73;
  ChartDragGestureRecognizerRepresentable.init(isRecognizedHandler:)();
  *(double *)&uint64_t v64 = COERCE_DOUBLE(sub_10017DF08(&qword_100E930C0));
  unint64_t v47 = sub_100780AFC();
  unint64_t v65 = sub_10095B1B8((uint64_t)&qword_100E930D0);
  uint64_t v48 = v76;
  View.gestureRecognizer<A>(_:)();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v46, v48);
  swift_release();
  sub_10095AEF0(v68, v35);
  v70(v37, v69, v39);
  uint64_t v49 = swift_allocObject();
  sub_10095AF58(v35, v49 + v71);
  ((void (*)(uint64_t, char *, uint64_t))v80)(v49 + v72, v37, v39);
  uint64_t v50 = v86;
  static CoordinateSpaceProtocol<>.local.getter();
  uint64_t v99 = v64;
  double v100 = *(double *)&v48;
  unint64_t v101 = v47;
  unint64_t v102 = v65;
  swift_getOpaqueTypeConformance2();
  uint64_t v51 = v83;
  uint64_t v52 = v78;
  uint64_t v53 = v88;
  uint64_t v54 = v90;
  View.onContinuousHover<A>(coordinateSpace:perform:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v50, v53);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v54, v52);
  uint64_t v56 = v84;
  uint64_t v55 = v85;
  uint64_t v57 = v81;
  (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v81, v51, v85);
  sub_10020E72C((uint64_t)v117, (uint64_t)v93, &qword_100EA39C0);
  uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v56 + 16);
  v58(v51, v57, v55);
  sub_10020E72C((uint64_t)v93, (uint64_t)v98, &qword_100EA39C0);
  uint64_t v59 = v89;
  sub_10020E72C((uint64_t)v98, v89, &qword_100EA39C0);
  uint64_t v60 = sub_10017DF08(&qword_100EA39C8);
  v58((char *)(v59 + *(int *)(v60 + 48)), v51, v55);
  sub_10095B6A0((uint64_t)v98);
  uint64_t v61 = *(void (**)(char *, uint64_t))(v56 + 8);
  v61(v57, v55);
  v61(v51, v55);
  sub_10020E72C((uint64_t)v93, (uint64_t)&v99, &qword_100EA39C0);
  return sub_10095B6A0((uint64_t)&v99);
}

double sub_100958040@<D0>(uint64_t a1@<X8>)
{
  id v2 = [self secondarySystemBackgroundColor];
  uint64_t v5 = Color.init(_:)();
  type metadata accessor for SunriseSunsetInteractiveChartView();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v3 = static Color.white.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  *(void *)a1 = v5;
  *(_WORD *)(a1 + 8) = 256;
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(unsigned char *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v3;
  *(_WORD *)(a1 + 72) = 256;
  *(void *)(a1 + 80) = v12;
  *(unsigned char *)(a1 + 88) = v13;
  *(void *)(a1 + 96) = v14;
  *(unsigned char *)(a1 + 104) = v15;
  double result = *(double *)&v16;
  *(_OWORD *)(a1 + 112) = v16;
  return result;
}

uint64_t sub_1009581AC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  char v15 = (char *)v28 - v14;
  uint64_t v16 = sub_10017DF08(&qword_100E6B640);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  double v21 = (char *)v28 - v20;
  if (a3)
  {
    char v23 = (uint64_t *)(a4 + *(int *)(type metadata accessor for SunriseSunsetInteractiveChartView() + 20));
    uint64_t v24 = v23[1];
    char v25 = *((unsigned char *)v23 + 32);
    uint64_t v30 = *v23;
    uint64_t v31 = v24;
    long long v32 = *((_OWORD *)v23 + 1);
    char v33 = v25;
    v28[0] = a1;
    v28[1] = a2;
    char v29 = 1;
    sub_10017DF08(&qword_100EA39B8);
    Binding.wrappedValue.setter();
    uint64_t v26 = type metadata accessor for DetailChartDataElement();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 1, 1, v26);
    sub_1001262FC((uint64_t)v21, (uint64_t)v18, &qword_100E6B640);
    sub_10017DF08(&qword_100EA37A0);
    Binding.wrappedValue.setter();
    sub_100178110((uint64_t)v21, &qword_100E6B640);
    uint64_t v27 = type metadata accessor for Date();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 1, 1, v27);
    sub_1001262FC((uint64_t)v15, (uint64_t)v12, (uint64_t *)&unk_100E73CA0);
    sub_10017DF08(&qword_100E7DDF8);
    State.wrappedValue.setter();
    return sub_100178110((uint64_t)v15, (uint64_t *)&unk_100E73CA0);
  }
  else
  {
    type metadata accessor for Date();
    ChartProxy.value<A>(atX:as:)();
    sub_1001262FC((uint64_t)v15, (uint64_t)v12, (uint64_t *)&unk_100E73CA0);
    sub_10017DF08(&qword_100E7DDF8);
    State.wrappedValue.setter();
    sub_100178110((uint64_t)v15, (uint64_t *)&unk_100E73CA0);
    return sub_100958468(a5);
  }
}

uint64_t sub_100958468(uint64_t a1)
{
  uint64_t v71 = a1;
  uint64_t v2 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  char v7 = (char *)&v59 - v6;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v72 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v59 - v12;
  uint64_t v14 = sub_10017DF08(&qword_100E6B640);
  __chkstk_darwin(v14 - 8);
  uint64_t v75 = (uint64_t)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v74 = (char *)&v59 - v17;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v59 - v19;
  uint64_t v21 = type metadata accessor for DetailChartDataElement();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = v1;
  sub_10095A3A0((uint64_t)v20);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21) == 1)
  {
    sub_100178110((uint64_t)v20, &qword_100E6B640);
LABEL_9:
    uint64_t v53 = (uint64_t)v74;
    uint64_t v54 = v75;
    uint64_t v55 = v73;
    uint64_t v56 = (uint64_t *)(v55 + *(int *)(type metadata accessor for SunriseSunsetInteractiveChartView() + 20));
    uint64_t v57 = v56[1];
    char v58 = *((unsigned char *)v56 + 32);
    uint64_t v79 = *v56;
    uint64_t v80 = v57;
    long long v81 = *((_OWORD *)v56 + 1);
    char v82 = v58;
    double v76 = 0.0;
    uint64_t v77 = 0;
    char v78 = 1;
    sub_10017DF08(&qword_100EA39B8);
    Binding.wrappedValue.setter();
    _s7Weather24LocationCompositionStateOwst_0(v53, 1, 1, v21);
    sub_1001262FC(v53, v54, &qword_100E6B640);
    sub_10017DF08(&qword_100EA37A0);
    Binding.wrappedValue.setter();
    return sub_100178110(v53, &qword_100E6B640);
  }
  uint64_t v68 = v10;
  uint64_t v69 = v7;
  uint64_t v70 = v4;
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v20, v21);
  DetailChartDataElement.date.getter();
  uint64_t v25 = v8;
  uint64_t v26 = v71;
  uint64_t v27 = ChartProxy.position<A>(forX:)();
  char v29 = v28;
  uint64_t v30 = v72 + 8;
  uint64_t v31 = *(void (**)(char *, uint64_t))(v72 + 8);
  v31(v13, v25);
  if ((v29 & 1) != 0
    || (uint64_t v67 = v31,
        DetailChartDataElement.value.getter(),
        uint64_t v79 = v32,
        uint64_t v33 = ChartProxy.position<A>(forY:)(),
        (v34 & 1) != 0))
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
    goto LABEL_9;
  }
  uint64_t v61 = v33;
  uint64_t v64 = v30;
  uint64_t v65 = v21;
  uint64_t v60 = v22;
  uint64_t v66 = v25;
  double v35 = *(double *)&v27;
  uint64_t v36 = v68;
  char v37 = v24;
  DetailChartDataElement.date.getter();
  uint64_t v38 = (int *)type metadata accessor for SunriseSunsetInteractiveChartView();
  uint64_t v39 = v73;
  uint64_t v40 = v38[10];
  [*(id *)(v73 + v40) prepare];
  uint64_t v41 = v39 + v38[6];
  uint64_t v42 = sub_10017DF08(&qword_100E7DDF8);
  uint64_t v43 = (uint64_t)v69;
  uint64_t v62 = v42;
  uint64_t v63 = v41;
  State.wrappedValue.getter();
  LOBYTE(v41) = SunriseSunsetDetailChartViewModel.shouldTriggerHaptic(currentDate:previousDate:)();
  sub_100178110(v43, (uint64_t *)&unk_100E73CA0);
  if (v41) {
    [*(id *)(v39 + v40) selectionChanged];
  }
  double v44 = sub_10095A6E0(v26, v35);
  uint64_t v45 = (uint64_t *)(v39 + v38[5]);
  uint64_t v46 = v45[1];
  char v47 = *((unsigned char *)v45 + 32);
  uint64_t v79 = *v45;
  uint64_t v80 = v46;
  long long v81 = *((_OWORD *)v45 + 1);
  char v82 = v47;
  double v76 = v44;
  uint64_t v77 = v61;
  char v78 = 0;
  sub_10017DF08(&qword_100EA39B8);
  Binding.wrappedValue.setter();
  uint64_t v48 = v60;
  uint64_t v49 = (uint64_t)v74;
  uint64_t v50 = v65;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v74, v37, v65);
  _s7Weather24LocationCompositionStateOwst_0(v49, 0, 1, v50);
  sub_1001262FC(v49, v75, &qword_100E6B640);
  sub_10017DF08(&qword_100EA37A0);
  Binding.wrappedValue.setter();
  sub_100178110(v49, &qword_100E6B640);
  uint64_t v51 = v66;
  (*(void (**)(uint64_t, char *, uint64_t))(v72 + 16))(v43, v36, v66);
  _s7Weather24LocationCompositionStateOwst_0(v43, 0, 1, v51);
  sub_1001262FC(v43, (uint64_t)v70, (uint64_t *)&unk_100E73CA0);
  State.wrappedValue.setter();
  sub_100178110(v43, (uint64_t *)&unk_100E73CA0);
  v67(v36, v51);
  return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v37, v50);
}

uint64_t sub_100958AE0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = sub_10017DF08(&qword_100E6B640);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v26 - v12;
  uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)v26 - v18;
  if (a3)
  {
    uint64_t v21 = (uint64_t *)(a4 + *(int *)(type metadata accessor for SunriseSunsetInteractiveChartView() + 20));
    uint64_t v22 = v21[1];
    char v23 = *((unsigned char *)v21 + 32);
    uint64_t v28 = *v21;
    uint64_t v29 = v22;
    long long v30 = *((_OWORD *)v21 + 1);
    char v31 = v23;
    v26[0] = 0;
    v26[1] = 0;
    char v27 = 1;
    sub_10017DF08(&qword_100EA39B8);
    Binding.wrappedValue.setter();
    uint64_t v24 = type metadata accessor for DetailChartDataElement();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 1, 1, v24);
    sub_1001262FC((uint64_t)v13, (uint64_t)v10, &qword_100E6B640);
    sub_10017DF08(&qword_100EA37A0);
    Binding.wrappedValue.setter();
    sub_100178110((uint64_t)v13, &qword_100E6B640);
    uint64_t v25 = type metadata accessor for Date();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 1, 1, v25);
    sub_1001262FC((uint64_t)v19, (uint64_t)v16, (uint64_t *)&unk_100E73CA0);
    sub_10017DF08(&qword_100E7DDF8);
    State.wrappedValue.setter();
    return sub_100178110((uint64_t)v19, (uint64_t *)&unk_100E73CA0);
  }
  else
  {
    type metadata accessor for Date();
    ChartProxy.value<A>(atX:as:)();
    sub_1001262FC((uint64_t)v19, (uint64_t)v16, (uint64_t *)&unk_100E73CA0);
    sub_10017DF08(&qword_100E7DDF8);
    State.wrappedValue.setter();
    sub_100178110((uint64_t)v19, (uint64_t *)&unk_100E73CA0);
    return sub_100958468(a5);
  }
}

uint64_t sub_100958D90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)&long long v86 = a2;
  uint64_t v92 = a3;
  uint64_t v4 = type metadata accessor for AxisGridLine();
  uint64_t v80 = *(void *)(v4 - 8);
  uint64_t v81 = v4;
  __chkstk_darwin(v4);
  uint64_t v79 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_10017DF08(&qword_100E7D410);
  uint64_t v78 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v77 = (char *)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E94E30);
  __chkstk_darwin(v7 - 8);
  uint64_t v91 = (uint64_t)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v89 = (char *)&v70 - v10;
  uint64_t v11 = type metadata accessor for AxisValueLabelOrientation();
  __chkstk_darwin(v11 - 8);
  *(void *)&long long v84 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for AxisValueLabelCollisionResolution();
  __chkstk_darwin(v13 - 8);
  unint64_t v83 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100EA39F8);
  uint64_t v93 = *(void *)(v15 - 8);
  uint64_t v94 = v15;
  __chkstk_darwin(v15);
  uint64_t v88 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  char v82 = (char *)&v70 - v18;
  __chkstk_darwin(v19);
  uint64_t v87 = (char *)&v70 - v20;
  uint64_t v21 = type metadata accessor for AxisTick.Length();
  __chkstk_darwin(v21 - 8);
  uint64_t v72 = (char *)&v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for AxisTick();
  uint64_t v75 = *(void *)(v23 - 8);
  uint64_t v76 = v23;
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_10017DF08(&qword_100E7D490);
  uint64_t v74 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v73 = (char *)&v70 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for AxisValue();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  char v31 = (char *)&v70 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_10017DF08(&qword_100EA39E8);
  __chkstk_darwin(v32 - 8);
  uint64_t v85 = (uint64_t)&v70 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)&v70 - v35;
  char v37 = AxisValue.isFirst.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v29 + 16))(v31, a1, v28);
  if (v37)
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
LABEL_4:
    uint64_t v39 = 1;
    goto LABEL_8;
  }
  char v38 = AxisValue.isLast.getter();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
  if (v38) {
    goto LABEL_4;
  }
  static AxisTick.Length.longestLabel.getter();
  if (qword_100E62450 != -1) {
    swift_once();
  }
  swift_beginAccess();
  memcpy(v107, &qword_100F51778, 0x1B0uLL);
  sub_100501A70((uint64_t)v107);
  char v40 = AxisValue.isLast.getter();
  sub_10058C988((v40 & 1) == 0, (double *)v96);
  long long v70 = v96[1];
  long long v71 = v96[0];
  uint64_t v41 = v97;
  sub_100501AF8((uint64_t)v107);
  long long v104 = v71;
  long long v105 = v70;
  uint64_t v106 = v41;
  AxisTick.init(centered:length:stroke:)();
  swift_beginAccess();
  uint64_t v42 = sub_10058C87C();
  swift_endAccess();
  v103[0] = v42;
  uint64_t v43 = v73;
  uint64_t v44 = v76;
  AxisMark.foregroundStyle<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v75 + 8))(v25, v44);
  (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v36, v43, v26);
  uint64_t v39 = 0;
LABEL_8:
  uint64_t v45 = (uint64_t)v87;
  uint64_t v46 = 1;
  uint64_t v87 = v36;
  uint64_t v47 = _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, v39, 1, v26);
  __chkstk_darwin(v47);
  static AxisValueLabelCollisionResolution.automatic.getter();
  static AxisValueLabelOrientation.automatic.getter();
  v69[2] = sub_10017DF08(&qword_100EA3A00);
  v69[3] = sub_10095BA50((uint64_t)&unk_100EA3A08);
  v69[0] = sub_10095BA48;
  v69[1] = v69;
  uint64_t v48 = v82;
  AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v93 + 32))(v45, v48, v94);
  char v49 = AxisValue.isFirst.getter();
  uint64_t v51 = (uint64_t)v89;
  uint64_t v50 = v90;
  uint64_t v52 = v45;
  if ((v49 & 1) == 0)
  {
    uint64_t v53 = v45;
    if (qword_100E62450 != -1) {
      swift_once();
    }
    swift_beginAccess();
    memcpy(v103, &qword_100F51778, sizeof(v103));
    sub_100501A70((uint64_t)v103);
    char v54 = AxisValue.isLast.getter();
    sub_10058C988((v54 & 1) == 0, (double *)v98);
    long long v86 = v98[0];
    long long v84 = v98[1];
    uint64_t v55 = v99;
    sub_100501AF8((uint64_t)v103);
    long long v100 = v86;
    long long v101 = v84;
    uint64_t v102 = v55;
    uint64_t v56 = v79;
    AxisGridLine.init(centered:stroke:)();
    swift_beginAccess();
    uint64_t v57 = sub_10058C87C();
    swift_endAccess();
    v95[0] = v57;
    char v58 = v77;
    uint64_t v59 = v81;
    AxisMark.foregroundStyle<A>(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v80 + 8))(v56, v59);
    (*(void (**)(uint64_t, char *, uint64_t))(v78 + 32))(v51, v58, v50);
    uint64_t v46 = 0;
    uint64_t v52 = v53;
  }
  _s7Weather24LocationCompositionStateOwst_0(v51, v46, 1, v50);
  uint64_t v60 = (uint64_t)v87;
  uint64_t v61 = v85;
  sub_1001262FC((uint64_t)v87, v85, &qword_100EA39E8);
  v95[0] = v61;
  uint64_t v62 = v51;
  uint64_t v63 = v93;
  uint64_t v64 = v94;
  uint64_t v65 = (uint64_t)v88;
  (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v88, v52, v94);
  v95[1] = v65;
  uint64_t v66 = v91;
  sub_1001262FC(v62, v91, &qword_100E94E30);
  v95[2] = v66;
  sub_1009529DC(v95, v92);
  sub_100178110(v62, &qword_100E94E30);
  uint64_t v67 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
  v67(v52, v64);
  sub_100178110(v60, &qword_100EA39E8);
  sub_100178110(v66, &qword_100E94E30);
  v67(v65, v64);
  return sub_100178110(v61, &qword_100EA39E8);
}

uint64_t sub_100959860@<X0>(void (*a1)(char *, unint64_t, uint64_t)@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v65 = a1;
  uint64_t v3 = type metadata accessor for TimeStyle();
  uint64_t v60 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v62 = (char *)v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E6B640);
  __chkstk_darwin(v5 - 8);
  uint64_t v61 = (char *)v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DetailChartDataElement();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v63 = v7;
  uint64_t v64 = v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v55 - v12;
  uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)v55 - v22;
  AxisValue.as<A>(_:)();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17) == 1)
  {
    uint64_t v24 = (uint64_t *)&unk_100E73CA0;
LABEL_14:
    uint64_t result = sub_100178110((uint64_t)v16, v24);
    uint64_t v40 = 0;
    uint64_t v41 = 0;
    uint64_t v42 = 0;
    uint64_t v43 = 0;
    goto LABEL_18;
  }
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  uint64_t v66 = v17;
  uint64_t v67 = v23;
  v25(v23, v16, v17);
  type metadata accessor for SunriseSunsetInteractiveChartView();
  uint64_t v26 = SunriseSunsetDetailChartViewModel.chartData.getter();
  uint64_t v27 = *(void *)(v26 + 16);
  uint64_t v57 = v3;
  uint64_t v58 = v18;
  uint64_t v59 = v13;
  if (v27)
  {
    v55[1] = v26;
    uint64_t v56 = a2;
    uint64_t v28 = v63;
    uint64_t v65 = *(void (**)(char *, unint64_t, uint64_t))(v64 + 16);
    unint64_t v29 = v26 + ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80));
    uint64_t v30 = (void (**)(char *, uint64_t))(v18 + 8);
    char v31 = (void (**)(char *, uint64_t))(v64 + 8);
    uint64_t v32 = *(void *)(v64 + 72);
    while (1)
    {
      v65(v10, v29, v28);
      uint64_t v33 = v28;
      DetailChartDataElement.date.getter();
      char v34 = static Date.== infix(_:_:)();
      (*v30)(v20, v66);
      if (v34) {
        break;
      }
      (*v31)(v10, v33);
      v29 += v32;
      --v27;
      uint64_t v28 = v33;
      if (!v27)
      {
        uint64_t v35 = 1;
        a2 = v56;
        uint64_t v36 = v64;
        uint64_t v13 = v59;
        goto LABEL_9;
      }
    }
    uint64_t v36 = v64;
    uint64_t v16 = v61;
    (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v61, v10, v33);
    uint64_t v35 = 0;
    uint64_t v28 = v33;
    uint64_t v13 = v59;
    a2 = v56;
  }
  else
  {
    uint64_t v35 = 1;
    uint64_t v28 = v63;
    uint64_t v36 = v64;
LABEL_9:
    uint64_t v16 = v61;
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, v35, 1, v28);
  swift_bridgeObjectRelease();
  BOOL v37 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v28) == 1;
  char v38 = v62;
  if (v37)
  {
    (*(void (**)(char *, uint64_t))(v58 + 8))(v67, v66);
    uint64_t v24 = &qword_100E6B640;
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v13, v16, v28);
  type metadata accessor for Style();
  static Style.componentTime.getter();
  DetailChartDataElement.dateLabel.getter();
  sub_10017BAF4();
  static NSDateFormatter.prevailingPeriodSymbols.getter();
  uint64_t v44 = v38;
  if (qword_100E62450 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_10058CA14();
  swift_endAccess();
  uint64_t v45 = TimeStyle.formatTime(_:periodSymbols:font:)();
  uint64_t v47 = v46;
  char v49 = v48;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  char v50 = v49 & 1;
  (*(void (**)(char *, uint64_t))(v60 + 8))(v44, v57);
  swift_beginAccess();
  uint64_t v51 = sub_10058CB40();
  swift_endAccess();
  uint64_t v68 = v51;
  uint64_t v40 = Text.foregroundStyle<A>(_:)();
  uint64_t v41 = v52;
  uint64_t v43 = v53;
  uint64_t v42 = v54 & 1;
  sub_100191924(v45, v47, v50);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v64 + 8))(v59, v63);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v58 + 8))(v67, v66);
LABEL_18:
  *a2 = v40;
  a2[1] = v41;
  a2[2] = v42;
  a2[3] = v43;
  return result;
}

void sub_100959ECC()
{
}

uint64_t sub_100959EE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v3 = type metadata accessor for AxisGridLine();
  uint64_t v22 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E7D410);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for AxisValue();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v14 = AxisValue.isLast.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
LABEL_5:
    uint64_t v15 = 1;
    uint64_t v16 = v23;
    return _s7Weather24LocationCompositionStateOwst_0(v16, v15, 1, v6);
  }
  AxisValue.as<A>(_:)();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if ((BYTE8(v28) & 1) == 0 && *(double *)&v28 == 0.0) {
    goto LABEL_5;
  }
  if (qword_100E62450 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_10058CC60();
  long long v20 = v26;
  long long v21 = v25;
  uint64_t v17 = v27;
  swift_endAccess();
  long long v28 = v21;
  long long v29 = v20;
  uint64_t v30 = v17;
  AxisGridLine.init(centered:stroke:)();
  swift_beginAccess();
  uint64_t v18 = sub_10058C87C();
  swift_endAccess();
  uint64_t v24 = v18;
  AxisMark.foregroundStyle<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v3);
  uint64_t v16 = v23;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v23, v9, v6);
  uint64_t v15 = 0;
  return _s7Weather24LocationCompositionStateOwst_0(v16, v15, 1, v6);
}

void sub_10095A270()
{
}

void sub_10095A284()
{
  sub_10010977C();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = type metadata accessor for BlendMode();
  sub_100179C0C();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_100125FF8();
  (*(void (**)(uint64_t, void, uint64_t))(v11 + 104))(v0, enum case for BlendMode.plusLighter(_:), v9);
  sub_10017DF08(v4);
  sub_100162808();
  v13();
  sub_10017DF08(v2);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v8, v6);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v0, v9);
  sub_100162714();
}

uint64_t sub_10095A3A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10017DF08(&qword_100E7DDF8);
  State.wrappedValue.getter();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v4, 1, v5) == 1)
  {
    sub_100178110((uint64_t)v4, (uint64_t *)&unk_100E73CA0);
    uint64_t v9 = type metadata accessor for DetailChartDataElement();
    return _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v9);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32))(v8, v4, v5);
    type metadata accessor for SunriseSunsetInteractiveChartView();
    uint64_t v11 = SunriseSunsetDetailChartViewModel.chartData.getter();
    __chkstk_darwin(v11);
    *(void *)&v12[-16] = v8;
    sub_100A970BC();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

BOOL sub_10095A5A4()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  DetailChartDataElement.date.getter();
  Date.distance(to:)();
  double v5 = v4;
  uint64_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  double v7 = fabs(v5);
  DetailChartDataElement.date.getter();
  Date.distance(to:)();
  double v9 = v8;
  v6(v3, v0);
  return v7 < fabs(v9);
}

double sub_10095A6E0(uint64_t a1, double a2)
{
  uint64_t v54 = a1;
  uint64_t v3 = sub_10017DF08(&qword_100E6B640);
  __chkstk_darwin(v3 - 8);
  uint64_t v56 = (uint64_t)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v60 = (uint64_t)&v51 - v6;
  uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v7 - 8);
  uint64_t v55 = (uint64_t)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v59 = (char *)&v51 - v10;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v57 = *(void *)(v11 - 8);
  uint64_t v58 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v51 - v15;
  uint64_t v17 = type metadata accessor for LayoutDirection();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  long long v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v51 - v22;
  type metadata accessor for SunriseSunsetInteractiveChartView();
  sub_1001FF23C();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, enum case for LayoutDirection.rightToLeft(_:), v17);
  char v24 = static LayoutDirection.== infix(_:_:)();
  long long v25 = *(void (**)(char *, uint64_t))(v18 + 8);
  v25(v20, v17);
  v25(v23, v17);
  if ((v24 & 1) == 0) {
    return a2;
  }
  uint64_t v27 = v58;
  uint64_t v26 = (uint64_t)v59;
  uint64_t v52 = v13;
  uint64_t v53 = v16;
  uint64_t v28 = v57;
  uint64_t v29 = SunriseSunsetDetailChartViewModel.chartData.getter();
  uint64_t v30 = v60;
  sub_100304160(v29, v60);
  swift_bridgeObjectRelease();
  uint64_t v31 = type metadata accessor for DetailChartDataElement();
  if (_s7Weather24LocationCompositionStateOwet_0(v30, 1, v31) == 1)
  {
    sub_100178110(v30, &qword_100E6B640);
    uint64_t v32 = v26;
    _s7Weather24LocationCompositionStateOwst_0(v26, 1, 1, v27);
LABEL_5:
    uint64_t v34 = v32;
LABEL_6:
    sub_100178110(v34, (uint64_t *)&unk_100E73CA0);
    return a2;
  }
  uint64_t v32 = v26;
  DetailChartDataElement.date.getter();
  uint64_t v33 = *(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8);
  v33(v30, v31);
  _s7Weather24LocationCompositionStateOwst_0(v26, 0, 1, v27);
  if (_s7Weather24LocationCompositionStateOwet_0(v26, 1, v27) == 1) {
    goto LABEL_5;
  }
  uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 32);
  v36(v53, v26, v27);
  uint64_t v37 = SunriseSunsetDetailChartViewModel.chartData.getter();
  uint64_t v38 = v56;
  sub_10043F6C8(v37, v56);
  swift_bridgeObjectRelease();
  if (_s7Weather24LocationCompositionStateOwet_0(v38, 1, v31) == 1)
  {
    sub_100178110(v38, &qword_100E6B640);
    uint64_t v39 = v55;
    _s7Weather24LocationCompositionStateOwst_0(v55, 1, 1, v27);
LABEL_11:
    (*(void (**)(char *, uint64_t))(v28 + 8))(v53, v27);
    uint64_t v34 = v39;
    goto LABEL_6;
  }
  uint64_t v39 = v55;
  DetailChartDataElement.date.getter();
  v33(v38, v31);
  _s7Weather24LocationCompositionStateOwst_0(v39, 0, 1, v27);
  if (_s7Weather24LocationCompositionStateOwet_0(v39, 1, v27) == 1) {
    goto LABEL_11;
  }
  uint64_t v40 = v52;
  v36(v52, v39, v27);
  uint64_t v41 = ChartProxy.position<A>(forX:)();
  if (v42)
  {
    char v49 = *(void (**)(char *, uint64_t))(v28 + 8);
    v49(v40, v27);
    char v50 = v53;
LABEL_20:
    v49(v50, v27);
    return a2;
  }
  double v43 = *(double *)&v41;
  uint64_t v44 = v53;
  double v45 = COERCE_DOUBLE(ChartProxy.position<A>(forX:)());
  if (v46)
  {
    char v49 = *(void (**)(char *, uint64_t))(v28 + 8);
    v49(v40, v27);
    char v50 = v44;
    goto LABEL_20;
  }
  if (v43 > v45) {
    double v47 = v43;
  }
  else {
    double v47 = v45;
  }
  char v48 = *(void (**)(char *, uint64_t))(v28 + 8);
  v48(v40, v27);
  v48(v44, v27);
  return v47 - a2;
}

uint64_t sub_10095ACC4()
{
  return sub_1009563D4(*(void *)(v0 + 16));
}

unint64_t sub_10095ACCC()
{
  unint64_t result = qword_100EA38D0;
  if (!qword_100EA38D0)
  {
    sub_10018C6DC(&qword_100EA3878);
    sub_10024D5E4((uint64_t)&unk_100EA38D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA38D0);
  }
  return result;
}

void sub_10095AD6C()
{
}

unint64_t sub_10095AD90()
{
  unint64_t result = qword_100EA3900;
  if (!qword_100EA3900)
  {
    sub_10018C6DC(&qword_100EA38F0);
    sub_10024D5E4((uint64_t)&unk_100EA3908);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA3900);
  }
  return result;
}

void sub_10095AE30()
{
}

unint64_t sub_10095AE48()
{
  unint64_t result = qword_100EA3938;
  if (!qword_100EA3938)
  {
    sub_10018C6DC(&qword_100EA3928);
    sub_10024D5E4((uint64_t)&unk_100EA3940);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA3938);
  }
  return result;
}

uint64_t sub_10095AEE8@<X0>(uint64_t a1@<X8>)
{
  return sub_100956BC8(*(void (**)(char *, uint64_t, uint64_t))(v1 + 16), a1);
}

uint64_t sub_10095AEF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SunriseSunsetInteractiveChartView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10095AF58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SunriseSunsetInteractiveChartView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10095AFBC()
{
  uint64_t v0 = type metadata accessor for SunriseSunsetInteractiveChartView();
  sub_1001627C0(v0);
  sub_10017F930();

  return sub_100957224(v1);
}

unint64_t sub_10095B00C()
{
  return sub_10095B06C((uint64_t)&unk_100EA3960);
}

unint64_t sub_10095B03C()
{
  return sub_10095B06C((uint64_t)&unk_100EA3970);
}

unint64_t sub_10095B06C(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    sub_100172370(0, v4);
    v2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_10095B0DC(uint64_t a1)
{
  return sub_10095B834(a1, (uint64_t (*)(uint64_t))sub_100957598);
}

unint64_t sub_10095B0F4()
{
  unint64_t result = qword_100EA3988;
  if (!qword_100EA3988)
  {
    sub_10018C6DC(&qword_100EA3980);
    sub_10024D5E4((uint64_t)&unk_100EA3990);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA3988);
  }
  return result;
}

void sub_10095B194(void *a1)
{
}

uint64_t sub_10095B1A0(uint64_t a1, uint64_t a2, char a3)
{
  return sub_10095B56C(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_1009581AC);
}

unint64_t sub_10095B1B8(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_10095B200()
{
  uint64_t v2 = (int *)type metadata accessor for SunriseSunsetInteractiveChartView();
  sub_100179EF0();
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v23 = *(void *)(v5 + 64);
  uint64_t v24 = type metadata accessor for ChartProxy();
  sub_100179C0C();
  uint64_t v7 = v6;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = v0 + v4;
  uint64_t v10 = type metadata accessor for Date();
  if (!sub_1001632AC(v10))
  {
    sub_100162880();
    (*(void (**)(unint64_t, uint64_t))(v11 + 8))(v0 + v4, v1);
  }
  sub_10017DF08(&qword_100E7DDF8);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v12 = v9 + v2[6];
  if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v1))
  {
    sub_100162880();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v1);
  }
  swift_release();
  swift_release();
  uint64_t v14 = v9 + v2[8];
  swift_release();
  swift_release();
  uint64_t v15 = v14 + *(int *)(sub_10017DF08(&qword_100EA37A0) + 32);
  uint64_t v16 = type metadata accessor for DetailChartDataElement();
  if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, v16))
  {
    sub_100162880();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  }
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for LayoutDirection();
    sub_100162E4C();
    sub_100162F0C();
    v18();
  }
  else
  {
    swift_release();
  }

  type metadata accessor for SunriseSunsetDetailChartViewModel();
  sub_100162E4C();
  sub_100162F0C();
  v19();
  type metadata accessor for SunriseSunsetDetailChartContentStyle();
  sub_100162E4C();
  sub_100162F0C();
  v20();
  type metadata accessor for Calendar();
  sub_100162E4C();
  sub_100162F0C();
  v21();
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + ((v4 + v23 + v8) & ~v8), v24);

  return swift_deallocObject();
}

uint64_t sub_10095B554(uint64_t a1, uint64_t a2, char a3)
{
  return sub_10095B56C(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_100958AE0);
}

uint64_t sub_10095B56C(uint64_t a1, uint64_t a2, char a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))
{
  uint64_t v7 = a3 & 1;
  uint64_t v8 = *(void *)(type metadata accessor for SunriseSunsetInteractiveChartView() - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = type metadata accessor for ChartProxy();
  sub_1001627C0(v11);
  uint64_t v13 = v4 + ((v9 + v10 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));

  return a4(a1, a2, v7, v4 + v9, v13);
}

uint64_t sub_10095B64C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  if (a14)
  {
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_10095B6A0(uint64_t a1)
{
  uint64_t v2 = sub_10017DFE0(a1);
  char v5 = *(unsigned char *)(v1 + 248);
  v3(v2, *(void *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96), *(void *)(v1 + 104), *(void *)(v1 + 112), *(void *)(v1 + 120), *(void *)(v1 + 128), *(void *)(v1 + 136), *(void *)(v1 + 144),
    *(void *)(v1 + 152),
    *(void *)(v1 + 160),
    *(void *)(v1 + 168),
    *(void *)(v1 + 176),
    *(void *)(v1 + 184),
    *(void *)(v1 + 192),
    *(void *)(v1 + 200),
    *(void *)(v1 + 208),
    *(void *)(v1 + 216),
    *(void *)(v1 + 224),
    *(void *)(v1 + 232),
    *(void *)(v1 + 240),
    v5);
  return v1;
}

uint64_t sub_10095B728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t result = a14;
  if (a14)
  {
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10095B780(uint64_t a1)
{
  return a1;
}

uint64_t sub_10095B7B8(uint64_t a1)
{
  return a1;
}

BOOL sub_10095B7F0()
{
  return sub_10095A5A4();
}

void sub_10095B810(void *a1)
{
}

uint64_t sub_10095B81C(uint64_t a1)
{
  return sub_10095B834(a1, (uint64_t (*)(uint64_t))sub_100958D90);
}

uint64_t sub_10095B834(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2 = type metadata accessor for SunriseSunsetInteractiveChartView();
  sub_1001627C0(v2);
  uint64_t v3 = sub_10017F930();

  return a2(v3);
}

unint64_t sub_10095B898()
{
  unint64_t result = qword_100EA39D8;
  if (!qword_100EA39D8)
  {
    sub_10018C6DC(&qword_100EA39D0);
    sub_10095B9A0((uint64_t)&unk_100EA39E0);
    sub_10024D5E4((uint64_t)&unk_100EA39F0);
    sub_10095B9A0((uint64_t)&qword_100E94E28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA39D8);
  }
  return result;
}

unint64_t sub_10095B9A0(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    sub_100172370(0, v4);
    v2(255);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_10095BA48@<X0>(uint64_t *a1@<X8>)
{
  return sub_100959860(*(void (**)(char *, unint64_t, uint64_t))(v1 + 24), a1);
}

unint64_t sub_10095BA50(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    sub_100172370(0, v3);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_10095BAA0()
{
  return sub_1001A2F20();
}

unint64_t sub_10095BEBC(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    sub_100172370(0, v4);
    sub_10024D5E4(v2);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_10095BF40(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    sub_100172370(0, v4);
    v2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

id sub_10095BF9C()
{
  uint64_t v1 = OBJC_IVAR____TtC7Weather38DebugSevereNotificationsViewController____lazy_storage___dateFormatter;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC7Weather38DebugSevereNotificationsViewController____lazy_storage___dateFormatter);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC7Weather38DebugSevereNotificationsViewController____lazy_storage___dateFormatter);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)NSDateFormatter) init];
    [v4 setDateStyle:1];
    [v4 setTimeStyle:1];
    char v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_10095C038(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC7Weather38DebugSevereNotificationsViewController____lazy_storage___dateFormatter] = 0;
  *(void *)&v1[OBJC_IVAR____TtC7Weather38DebugSevereNotificationsViewController_notifications] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for DebugSevereNotificationsViewController();
  return [super initWithStyle:2];
}

void sub_10095C088()
{
  *(void *)&v0[OBJC_IVAR____TtC7Weather38DebugSevereNotificationsViewController____lazy_storage___dateFormatter] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10095C108()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for DebugSevereNotificationsViewController();
  [super viewDidLoad];
  id v1 = [v0 tableView];
  if (v1)
  {
    uint64_t v2 = v1;
    sub_10056AF64();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    NSString v4 = String._bridgeToObjectiveC()();
    [v2 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v4];

    sub_10040BF9C(0xD000000000000014, 0x8000000100CA47E0, v0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10095C224()
{
  return *(void *)(*(void *)(v0 + OBJC_IVAR____TtC7Weather38DebugSevereNotificationsViewController_notifications)
                   + 16);
}

unint64_t sub_10095C25C(void *a1)
{
  uint64_t v3 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v3 - 8);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  type metadata accessor for UIListContentConfiguration();
  sub_100179C0C();
  uint64_t v44 = v8;
  uint64_t v45 = v7;
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = type metadata accessor for SevereNotificationEntity();
  sub_100179C0C();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  sub_1001626E0();
  uint64_t v18 = v17 - v16;
  NSString v19 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v21 = [a1 dequeueReusableCellWithIdentifier:v19 forIndexPath:isa];

  uint64_t v22 = *(void *)(v1 + OBJC_IVAR____TtC7Weather38DebugSevereNotificationsViewController_notifications);
  unint64_t result = IndexPath.row.getter();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (result >= *(void *)(v22 + 16))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v14 + 16))(v18, v22+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * result, v12);
  static UIListContentConfiguration.subtitleCell()();
  SevereNotificationEntity.id.getter();
  dispatch thunk of Column.value.getter();
  swift_release();
  UIListContentConfiguration.text.setter();
  uint64_t v24 = (void (*)(uint64_t))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.adjustsFontSizeToFitWidth.setter();
  uint64_t v25 = sub_10019EA30();
  v24(v25);
  uint64_t v26 = (void (*)(uint64_t))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.numberOfLines.setter();
  uint64_t v27 = sub_10019EA30();
  v26(v27);
  _StringGuts.grow(_:)(26);
  swift_bridgeObjectRelease();
  v46[0] = 0x203A65746144;
  v46[1] = 0xE600000000000000;
  id v28 = sub_10095BF9C();
  SevereNotificationEntity.date.getter();
  dispatch thunk of Column.value.getter();
  swift_release();
  uint64_t v29 = type metadata accessor for Date();
  unint64_t result = _s7Weather24LocationCompositionStateOwet_0(v6, 1, v29);
  if (result != 1)
  {
    Class v30 = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v6, v29);
    id v31 = [v28 stringFromDate:v30];

    uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v34 = v33;

    v35._uint64_t countAndFlagsBits = v32;
    v35._uint64_t object = v34;
    String.append(_:)(v35);
    swift_bridgeObjectRelease();
    v36._uint64_t object = (void *)0x8000000100C9E3C0;
    v36._uint64_t countAndFlagsBits = 0xD000000000000010;
    String.append(_:)(v36);
    SevereNotificationEntity.subscription.getter();
    dispatch thunk of Column.value.getter();
    swift_release();
    unint64_t v37 = sub_100633398(v46[5], v46[6]);
    uint64_t v39 = v38;
    swift_bridgeObjectRelease();
    v40._uint64_t countAndFlagsBits = v37;
    v40._uint64_t object = v39;
    String.append(_:)(v40);
    swift_bridgeObjectRelease();
    UIListContentConfiguration.secondaryText.setter();
    uint64_t v41 = (void (*)(uint64_t))UIListContentConfiguration.secondaryTextProperties.modify();
    UIListContentConfiguration.TextProperties.numberOfLines.setter();
    uint64_t v42 = sub_10019EA30();
    v41(v42);
    v46[3] = v45;
    v46[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
    double v43 = sub_100170694(v46);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v44 + 16))(v43, v11, v45);
    UITableViewCell.contentConfiguration.setter();
    [v21 setAccessoryType:1];
    (*(void (**)(uint64_t, uint64_t))(v44 + 8))(v11, v45);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v18, v12);
    return (unint64_t)v21;
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_10095C7E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SevereNotificationEntity();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = *(void *)&v0[OBJC_IVAR____TtC7Weather38DebugSevereNotificationsViewController_notifications];
  unint64_t v10 = IndexPath.row.getter();
  if ((v10 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v10 >= *(void *)(v9 + 16))
  {
LABEL_7:
    __break(1u);
    return;
  }
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v4 + 16))(v8, v9+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v10, v2);
  id v11 = objc_allocWithZone((Class)type metadata accessor for DebugSevereNotificationViewController());
  uint64_t v12 = (void *)sub_100569F00(v8);
  id v13 = [v1 navigationController];
  if (v13)
  {
    id v14 = v13;
    [v13 pushViewController:v12 animated:1];

    uint64_t v12 = v14;
  }
}

void sub_10095CA0C()
{
}

void sub_10095CA4C()
{
}

id sub_10095CAA4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DebugSevereNotificationsViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for DebugSevereNotificationsViewController()
{
  return self;
}

uint64_t LocalSearchRequestService.__allocating_init(appConfigurationManager:)(long long *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1001262E4(a1, v2 + 16);
  return v2;
}

uint64_t LocalSearchRequestService.init(appConfigurationManager:)(long long *a1)
{
  sub_1001262E4(a1, v1 + 16);
  return v1;
}

uint64_t LocalSearchRequestService.performLocalSearch(with:calloutTitle:)(uint64_t a1)
{
  id v3 = [objc_allocWithZone((Class)MKLocalSearchRequest) initWithCompletion:a1];
  sub_10017DF08(&qword_100E965D0);
  swift_allocObject();
  uint64_t v1 = Promise.init(resolver:)();

  return v1;
}

uint64_t LocalSearchRequestService.performLocalSearch(with:)(uint64_t a1, uint64_t a2)
{
  id v4 = [objc_allocWithZone((Class)MKLocalSearchRequest) init];
  sub_10095DFEC(a1, a2, v4);
  sub_10017DF08(&qword_100E965D0);
  swift_allocObject();
  uint64_t v5 = Promise.init(resolver:)();

  return v5;
}

void sub_10095CCFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  sub_10095DFEC(a6, a7, a5);
  id v14 = [objc_allocWithZone((Class)MKLocalSearch) initWithRequest:a5];
  uint64_t v15 = (void *)swift_allocObject();
  void v15[2] = a6;
  v15[3] = a7;
  v15[4] = a3;
  v15[5] = a4;
  v15[6] = a1;
  v15[7] = a2;
  v17[4] = sub_10095E0B0;
  v17[5] = v15;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_10095DF10;
  v17[3] = &unk_100E301A0;
  uint64_t v16 = _Block_copy(v17);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  [v14 startWithCompletionHandler:v16];
  _Block_release(v16);
}

void sub_10095CE4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10095CCFC(a1, a2, a3, a4, *(void **)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32));
}

void sub_10095CE58(void *a1, uint64_t a2, uint64_t a3, unint64_t a4, void (*a5)(void), uint64_t a6, void (*a7)(char *), uint64_t a8)
{
  uint64_t v124 = a8;
  long long v125 = a7;
  uint64_t v131 = a6;
  uint64_t v132 = a5;
  unint64_t v133 = a4;
  id v129 = a1;
  uint64_t v130 = a3;
  uint64_t v9 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v9 - 8);
  char v126 = (char *)v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = type metadata accessor for Location();
  uint64_t v123 = *(void *)(v127 - 8);
  __chkstk_darwin(v127);
  uint64_t v12 = (char *)v114 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v114 - v14;
  uint64_t v16 = sub_10017DF08(&qword_100E6D1D8);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)v114 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  id v21 = (char *)v114 - v20;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)v114 - v23;
  uint64_t v25 = type metadata accessor for TimeZone();
  uint64_t v128 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)v114 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  Class v30 = (char *)v114 - v29;
  uint64_t v31 = type metadata accessor for Logger();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v134 = v31;
  uint64_t v135 = v32;
  __chkstk_darwin(v31);
  __chkstk_darwin(v33);
  __chkstk_darwin(v34);
  *(void *)&double v40 = __chkstk_darwin(v35).n128_u64[0];
  if (a2)
  {
    uint64_t v41 = (char *)v114 - v37;
    swift_errorRetain();
    static Logger.geocode.getter();
    swift_errorRetain();
    unint64_t v42 = v133;
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    double v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)uint64_t v45 = 141558531;
      uint64_t v136 = 1752392040;
      v137[0] = v46;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v45 + 12) = 2085;
      swift_bridgeObjectRetain();
      uint64_t v136 = sub_10016414C(v130, v42, v137);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v45 + 22) = 2082;
      uint64_t v136 = a2;
      swift_errorRetain();
      sub_10017DF08(&qword_100E77F30);
      uint64_t v47 = String.init<A>(describing:)();
      uint64_t v136 = sub_10016414C(v47, v48, v137);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "Failed to geocode. searchString=%{sensitive,mask.hash}s, error=%{public}s", (uint8_t *)v45, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
    }

    (*(void (**)(char *, uint64_t))(v135 + 8))(v41, v134);
    sub_10095E0C0();
    uint64_t v65 = swift_allocError();
    uint64_t *v66 = a2;
    swift_errorRetain();
    ((void (*)(uint64_t))v132)(v65);
    swift_errorRelease();
LABEL_20:
    swift_errorRelease();
    return;
  }
  uint64_t v119 = (uint64_t)v18;
  unint64_t v121 = v21;
  uint64_t v117 = v12;
  uint64_t v120 = v30;
  uint64_t v122 = v25;
  long long v118 = v15;
  unint64_t v49 = v133;
  if (!v129)
  {
LABEL_16:
    uint64_t v67 = v36;
    static Logger.geocode.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v68 = Logger.logObject.getter();
    os_log_type_t v69 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v70 = swift_slowAlloc();
      uint64_t v71 = swift_slowAlloc();
      *(_DWORD *)uint64_t v70 = 141558275;
      uint64_t v136 = 1752392040;
      v137[0] = v71;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v70 + 12) = 2085;
      swift_bridgeObjectRetain();
      uint64_t v136 = sub_10016414C(v130, v49, v137);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v67, v134);
    sub_10095E0C0();
    swift_allocError();
    *uint64_t v72 = 0;
    v132();
    goto LABEL_20;
  }
  uint64_t v50 = v36;
  uint64_t v115 = v39;
  uint64_t v116 = v38;
  id v51 = [v129 mapItems:v40];
  sub_10095E10C();
  unint64_t v52 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v52 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v53 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v53 = *(void *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v54 = v122;
  uint64_t v55 = v128;
  if (!v53)
  {
    swift_bridgeObjectRelease();
    uint64_t v36 = v50;
    goto LABEL_16;
  }
  sub_100076028(0, (v52 & 0xC000000000000001) == 0, v52);
  if ((v52 & 0xC000000000000001) != 0) {
    id v56 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v56 = *(id *)(v52 + 32);
  }
  uint64_t v57 = v56;
  swift_bridgeObjectRelease();
  id v58 = [v57 placemark];
  id v59 = [v58 timeZone];

  if (!v59)
  {
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v121, 1, 1, v54);
    uint64_t v63 = v119;
    goto LABEL_22;
  }
  static TimeZone._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v55 + 32);
  uint64_t v61 = (uint64_t)v121;
  v60(v121, v27, v54);
  _s7Weather24LocationCompositionStateOwst_0(v61, 0, 1, v54);
  int v62 = _s7Weather24LocationCompositionStateOwet_0(v61, 1, v54);
  uint64_t v63 = v119;
  if (v62 == 1)
  {
LABEL_22:
    id v73 = [v57 timeZone];
    if (v73)
    {
      uint64_t v74 = v73;
      static TimeZone._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v75 = 0;
    }
    else
    {
      uint64_t v75 = 1;
    }
    uint64_t v64 = v120;
    _s7Weather24LocationCompositionStateOwst_0(v63, v75, 1, v54);
    sub_10095E14C(v63, (uint64_t)v24);
    sub_1004DBEBC((uint64_t)v121);
    goto LABEL_26;
  }
  v60(v24, v121, v54);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v54);
  uint64_t v64 = v120;
LABEL_26:
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v54) == 1)
  {
    sub_1004DBEBC((uint64_t)v24);
    uint64_t v76 = v115;
    static Logger.geocode.getter();
    swift_bridgeObjectRetain_n();
    uint64_t v77 = Logger.logObject.getter();
    os_log_type_t v78 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v77, v78))
    {
      uint64_t v79 = swift_slowAlloc();
      uint64_t v80 = swift_slowAlloc();
      *(_DWORD *)uint64_t v79 = 141558275;
      uint64_t v136 = 1752392040;
      v137[0] = v80;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v79 + 12) = 2085;
      swift_bridgeObjectRetain();
      uint64_t v136 = sub_10016414C(v130, v49, v137);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v77, v78, "Time zone missing while geocoding, searchString=%{sensitive,mask.hash}s.", (uint8_t *)v79, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v76, v134);
    sub_10095E0C0();
    swift_allocError();
    void *v113 = 1;
    v132();
    swift_errorRelease();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v64, v24, v54);
    id v81 = [v57 placemark];
    [v81 coordinate];

    uint64_t v82 = CLLocationCoordinate2D.id.getter();
    uint64_t v131 = v83;
    uint64_t v132 = (void (*)(void))v82;
    id v84 = [v57 wc_weatherDisplayName];
    id v129 = (id)static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v121 = (char *)v85;

    (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v27, v64, v54);
    uint64_t v86 = (uint64_t)v126;
    Date.init()();
    uint64_t v87 = type metadata accessor for Date();
    _s7Weather24LocationCompositionStateOwst_0(v86, 0, 1, v87);
    id v88 = [v57 placemark];
    uint64_t v119 = MKPlacemark.safeTitle.getter();
    uint64_t v115 = v89;

    id v90 = [v57 placemark];
    v114[1] = MKPlacemark.safeSubtitle.getter();
    uint64_t v91 = v57;
    v114[0] = v92;

    id v93 = [v57 wc_weatherLocationName];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v94 = [v57 wc_weatherLocationName];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v95 = [v57 wc_weatherDisplayName];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    static Location.sanitizedSecondaryName(_:name:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    double v96 = v118;
    Location.init(id:name:timeZone:coordinate:lastRefreshDate:searchTitle:searchSubtitle:preciseName:secondaryName:)();
    static Logger.geocode.getter();
    uint64_t v97 = v123;
    uint64_t v98 = v117;
    uint64_t v99 = v127;
    (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v117, v96, v127);
    swift_bridgeObjectRetain_n();
    id v100 = v91;
    long long v101 = Logger.logObject.getter();
    os_log_type_t v102 = static os_log_type_t.default.getter();
    int v103 = v102;
    if (os_log_type_enabled(v101, v102))
    {
      uint64_t v104 = swift_slowAlloc();
      uint64_t v105 = swift_slowAlloc();
      uint64_t v132 = (void (*)(void))v105;
      *(_DWORD *)uint64_t v104 = 141559299;
      uint64_t v136 = 1752392040;
      v137[0] = v105;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v104 + 12) = 2085;
      LODWORD(v131) = v103;
      swift_bridgeObjectRetain();
      uint64_t v136 = sub_10016414C(v130, v49, v137);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v104 + 22) = 2160;
      uint64_t v136 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v104 + 32) = 2081;
      uint64_t v106 = Location.id.getter();
      uint64_t v136 = sub_10016414C(v106, v107, v137);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v108 = *(void (**)(char *, uint64_t))(v97 + 8);
      v108(v98, v127);
      *(_WORD *)(v104 + 42) = 2160;
      uint64_t v136 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v104 + 52) = 2081;
      id v109 = [v100 wc_weatherLocationName];
      uint64_t v110 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v112 = v111;

      uint64_t v136 = sub_10016414C(v110, v112, v137);
      double v96 = v118;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v101, (os_log_type_t)v131, "Successfully geocoded location. searchString=%{sensitive,mask.hash}s, location=%{private,mask.hash}s, unsanitizedSecondaryName=%{private,mask.hash}s", (uint8_t *)v104, 0x3Eu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v99 = v127;
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      uint64_t v108 = *(void (**)(char *, uint64_t))(v97 + 8);
      v108(v98, v99);
    }
    (*(void (**)(uint64_t, uint64_t))(v135 + 8))(v116, v134);
    v125(v96);

    v108(v96, v99);
    (*(void (**)(char *, uint64_t))(v128 + 8))(v120, v122);
  }
}

void sub_10095DF10(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t LocalSearchRequestService.deinit()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  return v0;
}

uint64_t sub_10095DFBC(uint64_t a1, uint64_t a2)
{
  return LocalSearchRequestService.performLocalSearch(with:)(a1, a2);
}

uint64_t sub_10095DFD4(uint64_t a1)
{
  return LocalSearchRequestService.performLocalSearch(with:calloutTitle:)(a1);
}

void sub_10095DFEC(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  [a3 setNaturalLanguageQuery:v4];
}

uint64_t type metadata accessor for LocalSearchRequestService()
{
  return self;
}

uint64_t sub_10095E068()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_10095E0B0(void *a1, uint64_t a2)
{
  sub_10095CE58(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void (**)(void))(v2 + 32), *(void *)(v2 + 40), *(void (**)(char *))(v2 + 48), *(void *)(v2 + 56));
}

unint64_t sub_10095E0C0()
{
  unint64_t result = qword_100EA3B28;
  if (!qword_100EA3B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA3B28);
  }
  return result;
}

unint64_t sub_10095E10C()
{
  unint64_t result = qword_100EA3B30;
  if (!qword_100EA3B30)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100EA3B30);
  }
  return result;
}

uint64_t sub_10095E14C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6D1D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *initializeBufferWithCopyOfBuffer for LocalSearchRequestService.LocalSearchRequestError(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    swift_errorRetain();
  }
  *a1 = v3;
  return a1;
}

unint64_t destroy for LocalSearchRequestService.LocalSearchRequestError(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF) {
    return swift_errorRelease();
  }
  return result;
}

unint64_t *assignWithCopy for LocalSearchRequestService.LocalSearchRequestError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v3 >= 0xFFFFFFFF) {
      swift_errorRetain();
    }
    *a1 = v3;
  }
  else if (v3 < 0xFFFFFFFF)
  {
    swift_errorRelease();
    *a1 = *a2;
  }
  else
  {
    swift_errorRetain();
    *a1 = v3;
    swift_errorRelease();
  }
  return a1;
}

unint64_t *assignWithTake for LocalSearchRequestService.LocalSearchRequestError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v3 < 0xFFFFFFFF)
  {
    swift_errorRelease();
LABEL_6:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  swift_errorRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalSearchRequestService.LocalSearchRequestError(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for LocalSearchRequestService.LocalSearchRequestError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

void *sub_10095E3B0(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for LocalSearchRequestService.LocalSearchRequestError()
{
  return &type metadata for LocalSearchRequestService.LocalSearchRequestError;
}

uint64_t *sub_10095E3E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = type metadata accessor for AppConfiguration();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  return a1;
}

uint64_t sub_10095E498(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_10095E4FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_10095E560(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_10095E5C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AppConfiguration();

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_10095E60C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AppConfiguration();

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a3, v6);
}

void *sub_10095E664(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v8 = a3[6];
    uint64_t v9 = (char *)(a1 + v8);
    uint64_t v10 = (char *)a2 + v8;
    *(void *)(a1 + 40) = a2[5];
    uint64_t v11 = type metadata accessor for DetailChartDataElement();
    swift_retain();
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_10017DF08(&qword_100E6B640);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v14 = sub_10017DF08(&qword_100EA3BB8);
    *(void *)&v9[*(int *)(v14 + 28)] = *(void *)&v10[*(int *)(v14 + 28)];
    uint64_t v15 = a3[8];
    *(void *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    uint64_t v16 = (char *)v4 + v15;
    uint64_t v17 = (uint64_t)a2 + v15;
    long long v18 = *(_OWORD *)((char *)a2 + v15 + 24);
    *(_OWORD *)((char *)v4 + v15 + 24) = v18;
    uint64_t v19 = v18;
    uint64_t v20 = **(void (***)(char *, uint64_t, uint64_t))(v18 - 8);
    swift_retain();
    v20(v16, v17, v19);
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  }
  return v4;
}

uint64_t sub_10095E85C(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for DetailChartDataElement();
  if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  sub_10017DF08(&qword_100EA3BB8);
  swift_release();
  uint64_t v6 = a1 + *(int *)(a2 + 32);

  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v6);
}

uint64_t sub_10095E920(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = type metadata accessor for DetailChartDataElement();
  swift_retain();
  swift_retain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_10017DF08(&qword_100E6B640);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = sub_10017DF08(&qword_100EA3BB8);
  *(void *)&v8[*(int *)(v12 + 28)] = *(void *)&v9[*(int *)(v12 + 28)];
  uint64_t v13 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  long long v16 = *(_OWORD *)(a2 + v13 + 24);
  *(_OWORD *)(a1 + v13 + 24) = v16;
  uint64_t v17 = v16;
  long long v18 = **(void (***)(uint64_t, uint64_t, uint64_t))(v16 - 8);
  swift_retain();
  v18(v14, v15, v17);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_10095EAC8(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  long long v6 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = type metadata accessor for DetailChartDataElement();
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v14 = sub_10017DF08(&qword_100E6B640);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_7:
  uint64_t v15 = sub_10017DF08(&qword_100EA3BB8);
  *(void *)&v8[*(int *)(v15 + 28)] = *(void *)&v9[*(int *)(v15 + 28)];
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  sub_1000C1E18((uint64_t *)(a1 + a3[8]), (uint64_t *)(a2 + a3[8]));
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

_OWORD *sub_10095ECC8(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for DetailChartDataElement();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_10017DF08(&qword_100E6B640);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = sub_10017DF08(&qword_100EA3BB8);
  *(void *)&v8[*(int *)(v12 + 28)] = *(void *)&v9[*(int *)(v12 + 28)];
  uint64_t v13 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  *((void *)v14 + 4) = *((void *)v15 + 4);
  long long v16 = *((_OWORD *)v15 + 1);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *((_OWORD *)v14 + 1) = v16;
  *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  return a1;
}

uint64_t sub_10095EE00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)(a1 + v7);
  uint64_t v9 = (char *)(a2 + v7);
  uint64_t v10 = type metadata accessor for DetailChartDataElement();
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v14 = sub_10017DF08(&qword_100E6B640);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_7:
  uint64_t v15 = sub_10017DF08(&qword_100EA3BB8);
  *(void *)&v8[*(int *)(v15 + 28)] = *(void *)&v9[*(int *)(v15 + 28)];
  swift_release();
  uint64_t v16 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + v16);
  long long v19 = *(_OWORD *)(v18 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(_OWORD *)(v17 + 16) = v19;
  *(void *)(v17 + 32) = *(void *)(v18 + 32);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_10095EFF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10095F004);
}

uint64_t sub_10095F004()
{
  sub_100181828();
  if (v1) {
    return sub_10017AC08();
  }
  uint64_t v3 = v0;
  sub_10017DF08(&qword_100EA3BB8);
  uint64_t v4 = sub_10017F118(*(int *)(v3 + 24));

  return _s7Weather24LocationCompositionStateOwet_0(v4, v5, v6);
}

uint64_t sub_10095F074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10095F088);
}

void sub_10095F088()
{
  sub_100163298();
  if (v1)
  {
    sub_100185E34();
  }
  else
  {
    uint64_t v2 = v0;
    sub_10017DF08(&qword_100EA3BB8);
    uint64_t v3 = sub_1001A014C(*(int *)(v2 + 24));
    _s7Weather24LocationCompositionStateOwst_0(v3, v4, v5, v6);
  }
}

uint64_t sub_10095F0F4()
{
  return swift_getOpaqueTypeConformance2();
}

BOOL sub_10095F110()
{
  uint64_t v3 = sub_10017DF08(&qword_100E6B640);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_100162E88();
  type metadata accessor for SunriseSunsetDetailView(0);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_10012B938();
  sub_10017DF08(&qword_100E82C80);
  State.wrappedValue.getter();
  sub_100964C70(v1, v2, (void (*)(void))type metadata accessor for SunriseSunsetDetailView);
  if (v9)
  {
    sub_100964CC4(v2, (void (*)(void))type metadata accessor for SunriseSunsetDetailView);
    return 0;
  }
  else
  {
    sub_10017DF08(&qword_100EA3BB8);
    State.wrappedValue.getter();
    sub_100964CC4(v2, (void (*)(void))type metadata accessor for SunriseSunsetDetailView);
    uint64_t v7 = type metadata accessor for DetailChartDataElement();
    BOOL v6 = _s7Weather24LocationCompositionStateOwet_0(v0, 1, v7) != 1;
    sub_1001781AC(v0, &qword_100E6B640);
  }
  return v6;
}

uint64_t sub_10095F298()
{
  type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v42 = v4;
  uint64_t v43 = v3;
  __chkstk_darwin(v3);
  sub_1001A4900(v5, v39);
  uint64_t v6 = type metadata accessor for SunriseSunsetDetailViewModel();
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v40 = v8;
  uint64_t v9 = type metadata accessor for DetailChartDataElement();
  sub_100179C0C();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100E6B640);
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_100162E88();
  uint64_t v17 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v18 = sub_100109308(v17);
  __chkstk_darwin(v18);
  sub_1001626E0();
  uint64_t v21 = v20 - v19;
  uint64_t v22 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v24 = v23;
  __chkstk_darwin(v25);
  sub_10016278C();
  uint64_t v28 = v26 - v27;
  __chkstk_darwin(v29);
  uint64_t v30 = sub_10011BA50();
  type metadata accessor for SunriseSunsetDetailView(v30);
  uint64_t v41 = v1;
  sub_10017DF08(&qword_100EA3BB8);
  State.wrappedValue.getter();
  if (_s7Weather24LocationCompositionStateOwet_0(v0, 1, v9))
  {
    sub_1001781AC(v0, &qword_100E6B640);
    _s7Weather24LocationCompositionStateOwst_0(v21, 1, 1, v22);
    uint64_t v32 = v42;
    uint64_t v31 = v43;
    uint64_t v33 = v40;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v0, v9);
    sub_1001781AC(v0, &qword_100E6B640);
    DetailChartDataElement.date.getter();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v9);
    _s7Weather24LocationCompositionStateOwst_0(v21, 0, 1, v22);
    int v34 = _s7Weather24LocationCompositionStateOwet_0(v21, 1, v22);
    uint64_t v32 = v42;
    uint64_t v31 = v43;
    uint64_t v33 = v40;
    if (v34 != 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v2, v21, v22);
      uint64_t v28 = v2;
      goto LABEL_6;
    }
  }
  sub_1001781AC(v21, (uint64_t *)&unk_100E73CA0);
  Date.init()();
LABEL_6:
  swift_retain();
  sub_10025035C();
  uint64_t v35 = swift_release();
  uint64_t v36 = v44;
  sub_100749B64(v35);
  sub_100964CC4(v33, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewModel);
  uint64_t v37 = Date.formattedTime(timeZone:)();
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v36, v31);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v28, v22);
  return v37;
}

uint64_t sub_10095F634()
{
  uint64_t v3 = type metadata accessor for SunriseSunsetDetailViewModel();
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v60 = v5;
  uint64_t v6 = type metadata accessor for DetailChartDataElement();
  sub_100179C0C();
  uint64_t v57 = v7;
  __chkstk_darwin(v8);
  sub_10012B938();
  uint64_t v9 = sub_10017DF08(&qword_100E6B640);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_10016278C();
  uint64_t v13 = v11 - v12;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v52 - v15;
  uint64_t v17 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v18 = sub_100109308(v17);
  __chkstk_darwin(v18);
  uint64_t v19 = sub_1001835FC();
  sub_100179C0C();
  uint64_t v61 = v20;
  __chkstk_darwin(v21);
  sub_100162EF8();
  uint64_t v58 = v22;
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v52 - v24;
  type metadata accessor for SunriseSunsetDetailView(0);
  uint64_t v59 = v0;
  sub_10017DF08(&qword_100EA3BB8);
  State.wrappedValue.getter();
  uint64_t v56 = v6;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v6))
  {
    sub_1001781AC((uint64_t)v16, &qword_100E6B640);
    uint64_t v26 = v19;
    _s7Weather24LocationCompositionStateOwst_0(v2, 1, 1, v19);
LABEL_4:
    sub_1001781AC(v2, (uint64_t *)&unk_100E73CA0);
    uint64_t v32 = v60;
    uint64_t v33 = v61;
    uint64_t v34 = v26;
    goto LABEL_5;
  }
  uint64_t v54 = v13;
  uint64_t v55 = v25;
  uint64_t v27 = v56;
  uint64_t v28 = v57;
  uint64_t v53 = *(void (**)(uint64_t, char *, uint64_t))(v57 + 16);
  v53(v1, v16, v56);
  sub_1001781AC((uint64_t)v16, &qword_100E6B640);
  DetailChartDataElement.date.getter();
  uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v28 + 8);
  uint64_t v30 = v28 + 8;
  uint64_t v29 = v31;
  v31(v1, v27);
  _s7Weather24LocationCompositionStateOwst_0(v2, 0, 1, v19);
  uint64_t v26 = v19;
  if (_s7Weather24LocationCompositionStateOwet_0(v2, 1, v19) == 1) {
    goto LABEL_4;
  }
  uint64_t v57 = v30;
  uint64_t v33 = v61;
  uint64_t v40 = (uint64_t)v55;
  uint64_t v41 = v2;
  uint64_t v34 = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v61 + 32))(v55, v41, v26);
  uint64_t v42 = v54;
  State.wrappedValue.getter();
  if (_s7Weather24LocationCompositionStateOwet_0(v42, 1, v56))
  {
    sub_1001781AC(v42, &qword_100E6B640);
    uint64_t v43 = sub_1001A19DC();
    v44(v43);
    uint64_t v32 = v60;
  }
  else
  {
    uint64_t v45 = v1;
    uint64_t v46 = v1;
    uint64_t v47 = v56;
    v53(v46, (char *)v42, v56);
    sub_1001781AC(v42, &qword_100E6B640);
    DetailChartDataElement.value.getter();
    v29(v45, v47);
    swift_retain();
    uint64_t v32 = v60;
    sub_10025035C();
    swift_release();
    uint64_t v36 = sub_10074A948(v40);
    uint64_t v49 = v48;
    sub_100964CC4(v32, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewModel);
    uint64_t v50 = sub_1001A19DC();
    v51(v50);
    if (v49) {
      return v36;
    }
  }
LABEL_5:
  swift_retain();
  sub_10025035C();
  swift_release();
  uint64_t v35 = v58;
  Date.init()();
  uint64_t v36 = sub_10074A948(v35);
  uint64_t v38 = v37;
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v34);
  sub_100964CC4(v32, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewModel);
  if (!v38) {
    return 5849412;
  }
  return v36;
}

uint64_t sub_10095FAC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v44 = a1;
  uint64_t v5 = type metadata accessor for SunriseSunsetDetailViewModel();
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_1001A4900(v7, v41);
  uint64_t v8 = sub_10017DF08(&qword_100E79020);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_100162EF8();
  uint64_t v43 = v10;
  __chkstk_darwin(v11);
  sub_10011BA50();
  uint64_t v12 = type metadata accessor for DetailChartDataElement();
  sub_100179C0C();
  uint64_t v42 = v13;
  __chkstk_darwin(v14);
  sub_100162E88();
  uint64_t v15 = sub_10017DF08(&qword_100E6B640);
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_1001626E0();
  uint64_t v19 = v18 - v17;
  uint64_t v20 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v21 = sub_100109308(v20);
  __chkstk_darwin(v21);
  uint64_t v22 = sub_1001835FC();
  sub_100179C0C();
  uint64_t v24 = v23;
  __chkstk_darwin(v25);
  sub_10016278C();
  uint64_t v28 = v26 - v27;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v41 - v30;
  type metadata accessor for SunriseSunsetDetailView(0);
  uint64_t v45 = v2;
  sub_10017DF08(&qword_100EA3BB8);
  State.wrappedValue.getter();
  if (_s7Weather24LocationCompositionStateOwet_0(v19, 1, v12))
  {
    sub_1001781AC(v19, &qword_100E6B640);
    _s7Weather24LocationCompositionStateOwst_0(v4, 1, 1, v22);
LABEL_4:
    sub_1001781AC(v4, (uint64_t *)&unk_100E73CA0);
    uint64_t v33 = v46;
    goto LABEL_5;
  }
  uint64_t v41 = v3;
  uint64_t v32 = v42;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16))(v1, v19, v12);
  sub_1001781AC(v19, &qword_100E6B640);
  DetailChartDataElement.date.getter();
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v1, v12);
  _s7Weather24LocationCompositionStateOwst_0(v4, 0, 1, v22);
  if (_s7Weather24LocationCompositionStateOwet_0(v4, 1, v22) == 1) {
    goto LABEL_4;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 32))(v31, v4, v22);
  swift_retain();
  uint64_t v33 = v46;
  sub_10025035C();
  swift_release();
  uint64_t v38 = v41;
  sub_10074AD80((uint64_t)v31, v41);
  sub_100964CC4(v33, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewModel);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v31, v22);
  uint64_t v39 = type metadata accessor for AttributedString();
  if (_s7Weather24LocationCompositionStateOwet_0(v38, 1, v39) != 1)
  {
    sub_100162880();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40 + 32))(v44, v38, v39);
  }
  sub_1001781AC(v38, &qword_100E79020);
LABEL_5:
  swift_retain();
  sub_10025035C();
  swift_release();
  Date.init()();
  uint64_t v34 = v43;
  sub_10074AD80(v28, v43);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v28, v22);
  sub_100964CC4(v33, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewModel);
  uint64_t v35 = type metadata accessor for AttributedString();
  if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, v35) == 1)
  {
    AttributedString.init(stringLiteral:)();
    return sub_1001781AC(v34, &qword_100E79020);
  }
  else
  {
    sub_100162880();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 32))(v44, v34, v35);
  }
}

uint64_t sub_10095FF80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v90 = a1;
  uint64_t v91 = type metadata accessor for TaskPriority();
  sub_100179C0C();
  uint64_t v89 = v1;
  __chkstk_darwin(v2);
  sub_100109314();
  uint64_t v88 = v3;
  uint64_t v4 = sub_10017DF08(&qword_100EA3C68);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v85 = v6;
  uint64_t v7 = type metadata accessor for SunriseSunsetDetailView(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v79 = v7 - 8;
  uint64_t v87 = v8;
  uint64_t v86 = *(void *)(v8 + 64);
  __chkstk_darwin(v7 - 8);
  uint64_t v84 = (uint64_t)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v80 = v11;
  uint64_t v81 = v10;
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v74 = v13 - v12;
  uint64_t v14 = type metadata accessor for DetailType();
  sub_100179C0C();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  sub_100109314();
  uint64_t v76 = v18;
  uint64_t v19 = type metadata accessor for SunriseSunsetDetailViewModel();
  uint64_t v20 = sub_100109308(v19);
  __chkstk_darwin(v20);
  sub_100162EF8();
  uint64_t v82 = v21;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v74 - v23;
  uint64_t v25 = type metadata accessor for DetailViewVisibilityTrackerModel();
  uint64_t v26 = v25 - 8;
  __chkstk_darwin(v25);
  sub_1001626E0();
  uint64_t v29 = v28 - v27;
  uint64_t v30 = sub_10017DF08(&qword_100EA3C70);
  uint64_t v31 = (int *)(v30 - 8);
  __chkstk_darwin(v30);
  sub_10016278C();
  uint64_t v34 = (uint64_t *)(v32 - v33);
  __chkstk_darwin(v35);
  uint64_t v83 = (uint64_t)&v74 - v36;
  swift_retain();
  sub_10025035C();
  swift_release();
  uint64_t v37 = v76;
  uint64_t v38 = (*(uint64_t (**)(uint64_t, void, uint64_t))(v16 + 104))(v76, enum case for DetailType.sunriseSunset(_:), v14);
  sub_10074A2D8(v38);
  uint64_t v77 = type metadata accessor for SunriseSunsetDetailViewModel;
  sub_100964CC4((uint64_t)v24, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewModel);
  uint64_t v39 = *(int *)(v26 + 32);
  uint64_t v78 = v29;
  uint64_t v40 = v29 + v39;
  uint64_t v41 = enum case for DetailViewOrigin.component(_:);
  type metadata accessor for DetailViewOrigin();
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v42 + 104))(v40, v41);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v29, v37, v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 32))(v29 + *(int *)(v26 + 28), v74, v81);
  uint64_t v43 = v75;
  uint64_t v44 = (void *)(v75 + *(int *)(v79 + 40));
  uint64_t v45 = v44[3];
  uint64_t v46 = v44[4];
  sub_1001B1E64(v44, v45);
  v92[3] = v45;
  v92[4] = *(void *)(v46 + 8);
  sub_100170694(v92);
  sub_100162880();
  (*(void (**)(void))(v47 + 16))();
  uint64_t v48 = v43;
  swift_retain();
  sub_10025035C();
  swift_release();
  uint64_t v49 = sub_100749474();
  uint64_t v51 = v50;
  uint64_t v52 = v77;
  sub_100964CC4((uint64_t)v24, (void (*)(void))v77);
  swift_retain();
  uint64_t v53 = v82;
  sub_10025035C();
  swift_release();
  uint64_t v54 = sub_100749618();
  uint64_t v56 = v55;
  sub_100964CC4(v53, (void (*)(void))v52);
  uint64_t v57 = v84;
  sub_100964C70(v48, v84, (void (*)(void))type metadata accessor for SunriseSunsetDetailView);
  *uint64_t v34 = swift_getKeyPath();
  sub_10017DF08(&qword_100E65310);
  swift_storeEnumTagMultiPayload();
  uint64_t v58 = v78;
  sub_100964C70(v78, (uint64_t)v34 + v31[11], (void (*)(void))type metadata accessor for DetailViewVisibilityTrackerModel);
  sub_10020D948((uint64_t)v92, (uint64_t)v34 + v31[12]);
  uint64_t v59 = (uint64_t *)((char *)v34 + v31[13]);
  uint64_t *v59 = v49;
  v59[1] = v51;
  uint64_t v60 = (uint64_t *)((char *)v34 + v31[14]);
  uint64_t *v60 = v54;
  v60[1] = v56;
  *((unsigned char *)v34 + v31[15]) = 0;
  uint64_t v61 = (uint64_t *)((char *)v34 + v31[16]);
  *uint64_t v61 = 0;
  v61[1] = 0;
  *((unsigned char *)v34 + v31[17]) = 1;
  uint64_t v62 = v85;
  sub_100960690(v57, v85);
  sub_100964CC4(v57, (void (*)(void))type metadata accessor for SunriseSunsetDetailView);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v92);
  sub_100964CC4(v58, (void (*)(void))type metadata accessor for DetailViewVisibilityTrackerModel);
  sub_10024D364(v62, (uint64_t)v34 + v31[18], &qword_100EA3C68);
  uint64_t v63 = v83;
  sub_10024D364((uint64_t)v34, v83, &qword_100EA3C70);
  sub_100964C70(v48, v57, (void (*)(void))type metadata accessor for SunriseSunsetDetailView);
  unint64_t v64 = (*(unsigned __int8 *)(v87 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
  uint64_t v65 = swift_allocObject();
  sub_1009650FC(v57, v65 + v64, (void (*)(void))type metadata accessor for SunriseSunsetDetailView);
  uint64_t v66 = v88;
  static TaskPriority.userInitiated.getter();
  uint64_t v67 = sub_10017DF08(&qword_100EA3C88);
  uint64_t v68 = v90;
  os_log_type_t v69 = (char *)(v90 + *(int *)(v67 + 36));
  uint64_t v70 = type metadata accessor for _TaskModifier();
  uint64_t v71 = v89;
  uint64_t v72 = v91;
  (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(&v69[*(int *)(v70 + 20)], v66, v91);
  *(void *)os_log_type_t v69 = &unk_100EA3C80;
  *((void *)v69 + 1) = v65;
  sub_10006DF38(v63, v68, &qword_100EA3C70);
  (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v66, v72);
  return sub_1001781AC(v63, &qword_100EA3C70);
}

uint64_t sub_100960690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v51 = type metadata accessor for AutomationInfo(0);
  __chkstk_darwin(v51);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for ScrollIndicatorVisibility();
  uint64_t v45 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100EA3C90);
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_10017DF08(&qword_100E7A100);
  uint64_t v46 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v41 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E7A108);
  __chkstk_darwin(v12 - 8);
  uint64_t v49 = (uint64_t)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100EA3C98);
  __chkstk_darwin(v14);
  uint64_t v44 = (uint64_t)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v50 = (uint64_t)&v39 - v17;
  uint64_t v52 = sub_10017DF08(&qword_100EA3CA0);
  __chkstk_darwin(v52);
  uint64_t v19 = (uint64_t *)((char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = type metadata accessor for SunriseSunsetDetailViewModel();
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = a1;
  swift_retain();
  sub_10025035C();
  swift_release();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      *uint64_t v19 = static Color.clear.getter();
      swift_storeEnumTagMultiPayload();
      sub_100964F30();
      return _ConditionalContent<>.init(storage:)();
    }
    uint64_t v39 = v14;
    uint64_t v40 = a2;
    uint64_t v25 = _s10PolarModelVMa;
    uint64_t v26 = &qword_100E92130;
  }
  else
  {
    uint64_t v25 = _s11NormalModelVMa;
    uint64_t v39 = v14;
    uint64_t v40 = a2;
    uint64_t v26 = &qword_100E92128;
  }
  uint64_t v27 = sub_10017DF08(v26);
  sub_1001781AC((uint64_t)&v22[*(int *)(v27 + 48)], &qword_100E66E40);
  sub_100964CC4((uint64_t)v22, (void (*)(void))v25);
  uint64_t v28 = static Axis.Set.vertical.getter();
  __chkstk_darwin(v28);
  *(&v39 - 2) = v23;
  sub_10017DF08(&qword_100EA3CA8);
  sub_1001246C8(&qword_100EA3CB0, &qword_100EA3CA8);
  ScrollView.init(_:showsIndicators:content:)();
  static ScrollIndicatorVisibility.never.getter();
  unsigned __int8 v29 = static Axis.Set.vertical.getter();
  unsigned __int8 v30 = static Axis.Set.horizontal.getter();
  Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v29) {
    Axis.Set.init(rawValue:)();
  }
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v30) {
    Axis.Set.init(rawValue:)();
  }
  uint64_t v31 = v39;
  sub_1001246C8(&qword_100EA3CB8, &qword_100EA3C90);
  uint64_t v32 = v41;
  uint64_t v33 = v43;
  View.scrollIndicators(_:axes:)();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v7, v47);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v10, v33);
  type metadata accessor for AutomationViewInfo(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v34 = v49;
  sub_10048D5A4((uint64_t)v5, v49);
  sub_100964CC4((uint64_t)v5, (void (*)(void))type metadata accessor for AutomationInfo);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v32, v48);
  if (qword_100E625B0 != -1) {
    swift_once();
  }
  uint64_t v35 = qword_100F51B70;
  uint64_t v36 = v44;
  sub_10006DF38(v34, v44, &qword_100E7A108);
  *(void *)(v36 + *(int *)(v31 + 36)) = v35;
  swift_retain();
  sub_1001781AC(v34, &qword_100E7A108);
  uint64_t v37 = v50;
  sub_10024D364(v36, v50, &qword_100EA3C98);
  sub_10006DF38(v37, (uint64_t)v19, &qword_100EA3C98);
  swift_storeEnumTagMultiPayload();
  sub_100964F30();
  _ConditionalContent<>.init(storage:)();
  return sub_1001781AC(v37, &qword_100EA3C98);
}

uint64_t sub_100960DC4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  type metadata accessor for MainActor();
  *(void *)(v1 + 24) = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100960E5C, v3, v2);
}

uint64_t sub_100960E5C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  uint64_t v2 = type metadata accessor for SunriseSunsetDetailView(0);
  sub_1001B1E64((void *)(v1 + *(int *)(v2 + 32)), *(void *)(v1 + *(int *)(v2 + 32) + 24));
  sub_100319418();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100960EDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = static HorizontalAlignment.leading.getter();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  uint64_t v4 = sub_10017DF08(&qword_100EA3CD0);
  return sub_100960F28(a1, a2 + *(int *)(v4 + 44));
}

uint64_t sub_100960F28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v179 = a2;
  uint64_t v160 = sub_10017DF08(&qword_100E66E38);
  __chkstk_darwin(v160);
  uint64_t v162 = (uint64_t)&v144 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = sub_10017DF08(&qword_100EA3CD8);
  __chkstk_darwin(v176);
  uint64_t v161 = (uint64_t)&v144 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E66E40);
  __chkstk_darwin(v5 - 8);
  uint64_t v173 = (char *)&v144 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  __chkstk_darwin(v172);
  uint64_t v158 = (uint64_t)&v144 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v159 = (uint64_t)&v144 - v9;
  uint64_t v10 = sub_10017DF08(&qword_100EA3CE0);
  __chkstk_darwin(v10 - 8);
  uint64_t v178 = (uint64_t)&v144 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  long long v177 = (char *)&v144 - v13;
  uint64_t v169 = type metadata accessor for DetailNewsComponentView();
  __chkstk_darwin(v169);
  uint64_t v157 = (uint64_t *)((char *)&v144 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_10017DF08(&qword_100E66E28);
  __chkstk_darwin(v15 - 8);
  uint64_t v167 = (char *)&v144 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for SunriseSunsetDetailViewModel();
  __chkstk_darwin(v17 - 8);
  uint64_t v168 = (char *)&v144 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  long long v166 = (char *)&v144 - v20;
  uint64_t v165 = type metadata accessor for DetailComponentContainerViewModel();
  __chkstk_darwin(v165);
  uint64_t v156 = (uint64_t)&v144 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v155 = (uint64_t)&v144 - v23;
  uint64_t v24 = sub_10017DF08(&qword_100E66E30);
  __chkstk_darwin(v24 - 8);
  uint64_t v175 = (uint64_t)&v144 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v182 = (uint64_t)&v144 - v27;
  uint64_t v151 = type metadata accessor for QuaternaryDividerStyle();
  uint64_t v150 = *(void *)(v151 - 8);
  __chkstk_darwin(v151);
  uint64_t v147 = (char *)&v144 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = type metadata accessor for Divider();
  uint64_t v146 = *(void *)(v148 - 8);
  __chkstk_darwin(v148);
  uint64_t v145 = (char *)&v144 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = sub_10017DF08(&qword_100E77340);
  uint64_t v153 = *(void *)(v154 - 8);
  __chkstk_darwin(v154);
  uint64_t v152 = (char *)&v144 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = sub_10017DF08(&qword_100E77348);
  __chkstk_darwin(v163);
  uint64_t v149 = (char *)&v144 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_10017DF08(&qword_100EA3CE8);
  __chkstk_darwin(v32 - 8);
  uint64_t v174 = (uint64_t)&v144 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v183 = (uint64_t)&v144 - v35;
  uint64_t v36 = type metadata accessor for SunriseSunsetChartAndTable(0);
  uint64_t v37 = (int *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v39 = (char *)&v144 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v171 = (char *)(sub_10017DF08(&qword_100EA3CF0) - 8);
  __chkstk_darwin(v171);
  uint64_t v41 = (char *)&v144 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  uint64_t v181 = (uint64_t)&v144 - v43;
  uint64_t v44 = sub_10017DF08(&qword_100EA3CF8);
  __chkstk_darwin(v44 - 8);
  uint64_t v170 = (uint64_t)&v144 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46);
  uint64_t v48 = (uint64_t *)((char *)&v144 - v47);
  __chkstk_darwin(v49);
  uint64_t v51 = (char *)&v144 - v50;
  uint64_t *v48 = static Alignment.center.getter();
  v48[1] = v52;
  uint64_t v53 = sub_10017DF08(&qword_100EA3D00);
  sub_100962148(a1, (char *)v48 + *(int *)(v53 + 44));
  uint64_t v180 = v51;
  sub_10024D364((uint64_t)v48, (uint64_t)v51, &qword_100EA3CF8);
  char v54 = *(unsigned char *)(a1 + 32);
  uint64_t v55 = *(void *)(a1 + 40);
  long long v188 = *(_OWORD *)(a1 + 16);
  char v189 = v54;
  uint64_t v190 = v55;
  sub_10017DF08(&qword_100E82C80);
  State.projectedValue.getter();
  long long v164 = v184;
  uint64_t v56 = v185;
  uint64_t v57 = v186;
  char v58 = v187;
  uint64_t v59 = type metadata accessor for SunriseSunsetDetailView(0);
  sub_10017DF08(&qword_100EA3BB8);
  State.projectedValue.getter();
  swift_retain();
  sub_10025035C();
  swift_release();
  *(_OWORD *)uint64_t v39 = v164;
  *((void *)v39 + 2) = v56;
  *((void *)v39 + 3) = v57;
  v39[32] = v58;
  uint64_t v60 = 1;
  v39[v37[9]] = 1;
  *(void *)&v39[v37[10]] = 0x4028000000000000;
  *(void *)&v39[v37[11]] = 0x4030000000000000;
  char v61 = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v63 = v62;
  uint64_t v65 = v64;
  uint64_t v67 = v66;
  uint64_t v69 = v68;
  sub_100964C70((uint64_t)v39, (uint64_t)v41, (void (*)(void))type metadata accessor for SunriseSunsetChartAndTable);
  uint64_t v70 = &v41[*((int *)v171 + 11)];
  *uint64_t v70 = v61;
  *((void *)v70 + 1) = v63;
  *((void *)v70 + 2) = v65;
  *((void *)v70 + 3) = v67;
  *((void *)v70 + 4) = v69;
  v70[40] = 0;
  sub_100964CC4((uint64_t)v39, (void (*)(void))type metadata accessor for SunriseSunsetChartAndTable);
  long long v171 = v41;
  uint64_t v71 = (uint64_t)v41;
  uint64_t v72 = v163;
  sub_10024D364(v71, v181, &qword_100EA3CF0);
  *(void *)&long long v164 = v59;
  uint64_t v73 = *(int *)(v59 + 36);
  if (*(unsigned char *)(a1 + v73) == 1)
  {
    uint64_t v74 = v145;
    Divider.init()();
    uint64_t v75 = v147;
    static DividerStyle<>.quaternary.getter();
    sub_100965158(&qword_100E66F38, (void (*)(uint64_t))&type metadata accessor for Divider);
    sub_100965158(&qword_100E77488, (void (*)(uint64_t))&type metadata accessor for QuaternaryDividerStyle);
    uint64_t v76 = v152;
    uint64_t v77 = v148;
    uint64_t v78 = v151;
    View.dividerStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v150 + 8))(v75, v78);
    (*(void (**)(char *, uint64_t))(v146 + 8))(v74, v77);
    LOBYTE(v78) = static Edge.Set.top.getter();
    swift_beginAccess();
    sub_100592594();
    EdgeInsets.init(_all:)();
    uint64_t v80 = v79;
    uint64_t v82 = v81;
    uint64_t v84 = v83;
    uint64_t v86 = v85;
    uint64_t v87 = v153;
    uint64_t v88 = (uint64_t)v149;
    uint64_t v89 = v154;
    (*(void (**)(char *, char *, uint64_t))(v153 + 16))(v149, v76, v154);
    uint64_t v90 = v88 + *(int *)(v72 + 36);
    *(unsigned char *)uint64_t v90 = v78;
    *(void *)(v90 + 8) = v80;
    *(void *)(v90 + 16) = v82;
    *(void *)(v90 + 24) = v84;
    *(void *)(v90 + 32) = v86;
    *(unsigned char *)(v90 + 40) = 0;
    (*(void (**)(char *, uint64_t))(v87 + 8))(v76, v89);
    sub_10024D364(v88, v183, &qword_100E77348);
    uint64_t v60 = 0;
  }
  _s7Weather24LocationCompositionStateOwst_0(v183, v60, 1, v72);
  swift_retain();
  uint64_t v91 = (uint64_t)v166;
  sub_10025035C();
  uint64_t v92 = swift_release();
  uint64_t v93 = (uint64_t)v167;
  sub_10074A798(v92);
  sub_100964CC4(v91, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewModel);
  if (_s7Weather24LocationCompositionStateOwet_0(v93, 1, v165) == 1)
  {
    sub_1001781AC(v93, &qword_100E66E28);
    uint64_t v94 = 1;
    uint64_t v95 = (uint64_t)v177;
    uint64_t v96 = v182;
    uint64_t v97 = (uint64_t)v173;
    uint64_t v98 = v169;
  }
  else
  {
    uint64_t v99 = v93;
    uint64_t v100 = v155;
    sub_1009650FC(v99, v155, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
    uint64_t v101 = v156;
    sub_100964C70(v100, v156, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
    os_log_type_t v102 = (void *)(a1 + *(int *)(v164 + 32));
    uint64_t v103 = v102[3];
    uint64_t v104 = v102[4];
    uint64_t v105 = sub_1001B1E64(v102, v103);
    uint64_t v186 = v103;
    uint64_t v187 = *(void *)(v104 + 8);
    uint64_t v106 = sub_100170694((uint64_t *)&v184);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v103 - 8) + 16))(v106, v105, v103);
    sub_100964CC4(v100, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
    LOBYTE(v103) = *(unsigned char *)(a1 + v73);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v108 = (uint64_t)v157;
    *uint64_t v157 = KeyPath;
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    swift_storeEnumTagMultiPayload();
    uint64_t v98 = v169;
    sub_1009650FC(v101, v108 + *(int *)(v169 + 20), (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
    sub_1001262E4(&v184, v108 + *(int *)(v98 + 24));
    *(unsigned char *)(v108 + *(int *)(v98 + 28)) = v103;
    uint64_t v96 = v182;
    sub_1009650FC(v108, v182, (void (*)(void))type metadata accessor for DetailNewsComponentView);
    uint64_t v94 = 0;
    uint64_t v95 = (uint64_t)v177;
    uint64_t v97 = (uint64_t)v173;
  }
  _s7Weather24LocationCompositionStateOwst_0(v96, v94, 1, v98);
  swift_retain();
  uint64_t v109 = (uint64_t)v168;
  sub_10025035C();
  swift_release();
  sub_10074A688(v97);
  sub_100964CC4(v109, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewModel);
  if (_s7Weather24LocationCompositionStateOwet_0(v97, 1, v172) == 1)
  {
    sub_1001781AC(v97, &qword_100E66E40);
    uint64_t v110 = 1;
    uint64_t v111 = v176;
  }
  else
  {
    uint64_t v112 = v159;
    sub_1009650FC(v97, v159, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    uint64_t v113 = v158;
    sub_100964C70(v112, v158, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    unsigned __int8 v114 = (void *)(a1 + *(int *)(v164 + 32));
    uint64_t v115 = v114[3];
    uint64_t v116 = v114[4];
    uint64_t v117 = sub_1001B1E64(v114, v115);
    uint64_t v186 = v115;
    uint64_t v187 = *(void *)(v116 + 8);
    long long v118 = sub_100170694((uint64_t *)&v184);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v115 - 8) + 16))(v118, v117, v115);
    uint64_t v119 = v162;
    sub_100964C70(v113, v162, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    uint64_t v120 = (int *)v160;
    sub_10020D948((uint64_t)&v184, v119 + *(int *)(v160 + 40));
    *(unsigned char *)(v119 + v120[9]) = 0;
    unint64_t v121 = (void *)(v119 + v120[11]);
    *unint64_t v121 = 0;
    v121[1] = 0;
    uint64_t v122 = v120[12];
    swift_beginAccess();
    *(double *)(v119 + v122) = sub_100592380();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v184);
    sub_100964CC4(v113, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    LOBYTE(v117) = static Edge.Set.bottom.getter();
    sub_10059263C();
    EdgeInsets.init(_all:)();
    uint64_t v124 = v123;
    uint64_t v126 = v125;
    uint64_t v128 = v127;
    uint64_t v130 = v129;
    uint64_t v131 = v161;
    sub_10006DF38(v119, v161, &qword_100E66E38);
    uint64_t v111 = v176;
    uint64_t v132 = v131 + *(int *)(v176 + 36);
    *(unsigned char *)uint64_t v132 = (_BYTE)v117;
    *(void *)(v132 + 8) = v124;
    *(void *)(v132 + 16) = v126;
    *(void *)(v132 + 24) = v128;
    *(void *)(v132 + 32) = v130;
    *(unsigned char *)(v132 + 40) = 0;
    sub_1001781AC(v119, &qword_100E66E38);
    sub_100964CC4(v112, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    sub_10024D364(v131, v95, &qword_100EA3CD8);
    uint64_t v110 = 0;
  }
  _s7Weather24LocationCompositionStateOwst_0(v95, v110, 1, v111);
  uint64_t v133 = v170;
  sub_10006DF38((uint64_t)v180, v170, &qword_100EA3CF8);
  uint64_t v134 = v181;
  uint64_t v135 = (uint64_t)v171;
  sub_10006DF38(v181, (uint64_t)v171, &qword_100EA3CF0);
  uint64_t v136 = v174;
  sub_10006DF38(v183, v174, &qword_100EA3CE8);
  uint64_t v137 = v96;
  uint64_t v138 = v175;
  sub_10006DF38(v137, v175, &qword_100E66E30);
  uint64_t v139 = v178;
  sub_10006DF38(v95, v178, &qword_100EA3CE0);
  uint64_t v140 = v95;
  uint64_t v141 = v179;
  sub_10006DF38(v133, v179, &qword_100EA3CF8);
  uint64_t v142 = (int *)sub_10017DF08(&qword_100EA3D08);
  sub_10006DF38(v135, v141 + v142[12], &qword_100EA3CF0);
  sub_10006DF38(v136, v141 + v142[16], &qword_100EA3CE8);
  sub_10006DF38(v138, v141 + v142[20], &qword_100E66E30);
  sub_10006DF38(v139, v141 + v142[24], &qword_100EA3CE0);
  sub_1001781AC(v140, &qword_100EA3CE0);
  sub_1001781AC(v182, &qword_100E66E30);
  sub_1001781AC(v183, &qword_100EA3CE8);
  sub_1001781AC(v134, &qword_100EA3CF0);
  sub_1001781AC((uint64_t)v180, &qword_100EA3CF8);
  sub_1001781AC(v139, &qword_100EA3CE0);
  sub_1001781AC(v138, &qword_100E66E30);
  sub_1001781AC(v136, &qword_100EA3CE8);
  sub_1001781AC(v135, &qword_100EA3CF0);
  return sub_1001781AC(v133, &qword_100EA3CF8);
}

uint64_t sub_100962148@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v141 = a2;
  uint64_t v136 = (int *)type metadata accessor for SunriseSunsetDetailLollipopHeaderView(0);
  __chkstk_darwin(v136);
  uint64_t v137 = (uint64_t *)((char *)&v127 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v138 = sub_10017DF08(&qword_100EA3D10);
  __chkstk_darwin(v138);
  uint64_t v139 = (uint64_t)&v127 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = sub_10017DF08(&qword_100EA3D18);
  uint64_t v134 = *(void *)(v143 - 8);
  __chkstk_darwin(v143);
  uint64_t v133 = (uint64_t)&v127 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100EA3D20);
  __chkstk_darwin(v6 - 8);
  uint64_t v140 = (uint64_t)&v127 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v142 = (char *)&v127 - v9;
  uint64_t v153 = sub_10017DF08(&qword_100E651D0);
  __chkstk_darwin(v153);
  uint64_t v156 = (char *)&v127 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = type metadata accessor for AttributedString();
  uint64_t v158 = *(void *)(v155 - 8);
  __chkstk_darwin(v155);
  uint64_t v12 = (char *)&v127 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SunriseSunsetDetailViewModel();
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v127 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v127 - v17;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v127 - v20;
  uint64_t v22 = (int *)type metadata accessor for SunriseSunsetDetailHeaderView(0);
  __chkstk_darwin(v22);
  uint64_t v24 = (void (**)(char *, uint64_t, uint64_t))((char *)&v127 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v148 = sub_10017DF08(&qword_100EA3D28);
  uint64_t v147 = *(void *)(v148 - 8);
  __chkstk_darwin(v148);
  uint64_t v144 = (char *)&v127 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_10017DF08(&qword_100EA3D30);
  __chkstk_darwin(v146);
  uint64_t v145 = (char *)&v127 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = sub_10017DF08(&qword_100EA3D38);
  uint64_t v151 = *(void *)(v152 - 8);
  __chkstk_darwin(v152);
  uint64_t v150 = (char *)&v127 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v157 = (char *)&v127 - v29;
  uint64_t v154 = a1;
  swift_retain();
  sub_10025035C();
  swift_release();
  uint64_t v149 = (void (*)(char *, uint64_t, uint64_t))sub_1007492B8();
  uint64_t v31 = v30;
  uint64_t v135 = v21;
  sub_100964CC4((uint64_t)v21, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewModel);
  swift_retain();
  sub_10025035C();
  uint64_t v32 = swift_release();
  sub_1007497BC(v32);
  sub_100964CC4((uint64_t)v18, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewModel);
  swift_beginAccess();
  sub_100592594();
  uint64_t v34 = v33;
  swift_retain();
  sub_10025035C();
  uint64_t v35 = (uint64_t)v156;
  uint64_t v36 = swift_release();
  sub_100749990(v36, v37, v38, v39, v40, v41, v42, v43, v127, v128, v129, v130, (uint64_t)v131, v132, v133, v134, (uint64_t)v135, (uint64_t)v136);
  uint64_t v45 = v44;
  sub_100964CC4((uint64_t)v15, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewModel);
  uint64_t v46 = static HorizontalAlignment.leading.getter();
  *uint64_t v24 = v149;
  v24[1] = v31;
  uint64_t v47 = (char *)v24 + v22[5];
  uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v158 + 32);
  uint64_t v49 = (uint64_t)v12;
  v158 += 32;
  uint64_t v149 = v48;
  v48(v47, (uint64_t)v12, v155);
  *(void (**)(char *, uint64_t, uint64_t))((char *)v24 + v22[6]) = v34;
  *(void (**)(char *, uint64_t, uint64_t))((char *)v24 + v22[7]) = v45;
  *(void (**)(char *, uint64_t, uint64_t))((char *)v24 + v22[8]) = (void (*)(char *, uint64_t, uint64_t))v46;
  uint64_t v50 = enum case for DynamicTypeSize.accessibility1(_:);
  uint64_t v51 = type metadata accessor for DynamicTypeSize();
  uint64_t v52 = *(void *)(v51 - 8);
  uint64_t v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 104);
  uint64_t v54 = v52 + 104;
  v53(v35, v50, v51);
  uint64_t v55 = sub_100965158(&qword_100E651F0, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result)
  {
    uint64_t v129 = v55;
    uint64_t v130 = v54;
    uint64_t v131 = v53;
    HIDWORD(v132) = v50;
    sub_100965158(&qword_100EA3D40, (void (*)(uint64_t))type metadata accessor for SunriseSunsetDetailHeaderView);
    uint64_t v57 = sub_1001246C8((unint64_t *)&unk_100EAADB0, &qword_100E651D0);
    char v58 = v144;
    uint64_t v128 = v57;
    View.dynamicTypeSize<A>(_:)();
    sub_1001781AC(v35, &qword_100E651D0);
    sub_100964CC4((uint64_t)v24, (void (*)(void))type metadata accessor for SunriseSunsetDetailHeaderView);
    char v59 = static Edge.Set.horizontal.getter();
    uint64_t v60 = *(int *)(type metadata accessor for SunriseSunsetDetailView(0) + 28);
    uint64_t v61 = v154;
    EdgeInsets.init(_all:)();
    uint64_t v63 = v62;
    uint64_t v65 = v64;
    uint64_t v67 = v66;
    uint64_t v69 = v68;
    uint64_t v70 = v147;
    uint64_t v71 = (uint64_t)v145;
    uint64_t v72 = v148;
    (*(void (**)(char *, char *, uint64_t))(v147 + 16))(v145, v58, v148);
    uint64_t v73 = v71 + *(int *)(v146 + 36);
    *(unsigned char *)uint64_t v73 = v59;
    *(void *)(v73 + 8) = v63;
    *(void *)(v73 + 16) = v65;
    *(void *)(v73 + 24) = v67;
    *(void *)(v73 + 32) = v69;
    *(unsigned char *)(v73 + 40) = 0;
    (*(void (**)(char *, uint64_t))(v70 + 8))(v58, v72);
    sub_10095F110();
    sub_1009651E0();
    uint64_t v74 = v150;
    View.isHidden(_:defaultAccessibilityHidden:)();
    sub_1001781AC(v71, &qword_100EA3D30);
    uint64_t v75 = v151;
    uint64_t v76 = v152;
    (*(void (**)(char *, char *, uint64_t))(v151 + 32))(v157, v74, v152);
    char v77 = *(unsigned char *)(v61 + 32);
    uint64_t v78 = *(void *)(v61 + 40);
    long long v159 = *(_OWORD *)(v61 + 16);
    char v160 = v77;
    uint64_t v161 = v78;
    sub_10017DF08(&qword_100E82C80);
    State.wrappedValue.getter();
    if (v164)
    {
      uint64_t v79 = 1;
      uint64_t v80 = v143;
      uint64_t v81 = (uint64_t)v142;
LABEL_6:
      _s7Weather24LocationCompositionStateOwst_0(v81, v79, 1, v80);
      uint64_t v120 = *(void (**)(char *, char *, uint64_t))(v75 + 16);
      unint64_t v121 = v157;
      v120(v74, v157, v76);
      uint64_t v122 = v140;
      sub_10006DF38(v81, v140, &qword_100EA3D20);
      uint64_t v123 = v74;
      uint64_t v124 = v141;
      v120(v141, v123, v76);
      uint64_t v125 = sub_10017DF08(&qword_100EA3D50);
      sub_10006DF38(v122, (uint64_t)&v124[*(int *)(v125 + 48)], &qword_100EA3D20);
      sub_1001781AC(v81, &qword_100EA3D20);
      uint64_t v126 = *(void (**)(char *, uint64_t))(v75 + 8);
      v126(v121, v76);
      sub_1001781AC(v122, &qword_100EA3D20);
      return ((uint64_t (*)(char *, uint64_t))v126)(v123, v76);
    }
    uint64_t v82 = v162;
    uint64_t v83 = v163;
    uint64_t v84 = v154;
    uint64_t v85 = sub_10095F634();
    uint64_t v87 = v86;
    uint64_t v88 = sub_10095F298();
    uint64_t v90 = v89;
    sub_10095FAC8(v49);
    swift_retain();
    uint64_t v91 = (uint64_t)v135;
    sub_10025035C();
    uint64_t v92 = swift_release();
    sub_100749990(v92, v93, v94, v95, v96, v97, v98, v99, v127, v128, v129, v130, (uint64_t)v131, v132, v133, v134, (uint64_t)v135, (uint64_t)v136);
    uint64_t v101 = v100;
    sub_100964CC4(v91, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewModel);
    uint64_t v102 = static HorizontalAlignment.center.getter();
    uint64_t v103 = *(void *)(v84 + v60);
    uint64_t v104 = v137;
    uint64_t *v137 = v85;
    v104[1] = v87;
    v104[2] = v88;
    v104[3] = v90;
    uint64_t v105 = v136;
    v149((char *)v104 + v136[6], v49, v155);
    *(uint64_t *)((char *)v104 + v105[7]) = v101;
    *(uint64_t *)((char *)v104 + v105[8]) = v102;
    *(uint64_t *)((char *)v104 + v105[9]) = v103;
    uint64_t v106 = (uint64_t *)((char *)v104 + v105[10]);
    *uint64_t v106 = v82;
    v106[1] = v83;
    LOBYTE(v105) = static Edge.Set.horizontal.getter();
    EdgeInsets.init(_all:)();
    uint64_t v108 = v107;
    uint64_t v110 = v109;
    uint64_t v112 = v111;
    uint64_t v114 = v113;
    uint64_t v115 = v139;
    sub_100964C70((uint64_t)v104, v139, (void (*)(void))type metadata accessor for SunriseSunsetDetailLollipopHeaderView);
    uint64_t v116 = v115 + *(int *)(v138 + 36);
    *(unsigned char *)uint64_t v116 = (_BYTE)v105;
    *(void *)(v116 + 8) = v108;
    *(void *)(v116 + 16) = v110;
    *(void *)(v116 + 24) = v112;
    *(void *)(v116 + 32) = v114;
    *(unsigned char *)(v116 + 40) = 0;
    sub_100964CC4((uint64_t)v104, (void (*)(void))type metadata accessor for SunriseSunsetDetailLollipopHeaderView);
    uint64_t v117 = (uint64_t)v156;
    v131((uint64_t)v156, HIDWORD(v132), v51);
    uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
    if (result)
    {
      sub_10096530C();
      uint64_t v118 = v133;
      View.dynamicTypeSize<A>(_:)();
      sub_1001781AC(v117, &qword_100E651D0);
      sub_1001781AC(v115, &qword_100EA3D10);
      uint64_t v81 = (uint64_t)v142;
      uint64_t v119 = v118;
      uint64_t v80 = v143;
      (*(void (**)(char *, uint64_t, uint64_t))(v134 + 32))(v142, v119, v143);
      uint64_t v79 = 0;
      uint64_t v76 = v152;
      uint64_t v75 = v151;
      uint64_t v74 = v150;
      goto LABEL_6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100962E08()
{
  uint64_t v1 = sub_10017DF08(&qword_100EA3FB8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v3 = static HorizontalAlignment.center.getter();
  *((void *)v3 + 1) = 0;
  v3[16] = 0;
  uint64_t v4 = sub_10017DF08(&qword_100EA3FC0);
  sub_100962F80(v0, (uint64_t)&v3[*(int *)(v4 + 44)]);
  if (qword_100E62450 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_10058C830();
  sub_10058C87C();
  swift_endAccess();
  sub_1001246C8(&qword_100EA3FC8, &qword_100EA3FB8);
  View.overviewTableBackground(_:_:)();
  swift_release();
  return sub_1001781AC((uint64_t)v3, &qword_100EA3FB8);
}

uint64_t sub_100962F80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v3 = type metadata accessor for OverviewTableViewModel();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for OverviewTableView();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v11 = sub_10017DF08(&qword_100EA3FD0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v22 - v15;
  sub_100963218(a1);
  type metadata accessor for SunriseSunsetChartAndTable(0);
  sub_10074A4AC();
  OverviewTableView.init(model:rowVerticalPadding:rowHorizontalPadding:showDividerOnFirstRow:titleFont:valueFont:)();
  sub_10006DF38((uint64_t)v16, (uint64_t)v13, &qword_100EA3FD0);
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v17(v7, v10, v4);
  uint64_t v18 = v23;
  sub_10006DF38((uint64_t)v13, v23, &qword_100EA3FD0);
  uint64_t v19 = sub_10017DF08(&qword_100EA3FD8);
  v17((char *)(v18 + *(int *)(v19 + 48)), v7, v4);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v5 + 8);
  v20(v10, v4);
  sub_1001781AC((uint64_t)v16, &qword_100EA3FD0);
  v20(v7, v4);
  return sub_1001781AC((uint64_t)v13, &qword_100EA3FD0);
}

void sub_100963218(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SunriseSunsetDetailChartViewModel();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100EA37A0);
  __chkstk_darwin(v5);
  uint64_t v6 = *(void *)(a1 + 8);
  char v7 = *(unsigned char *)(a1 + 32);
  v8[0] = *(void *)a1;
  v8[1] = v6;
  long long v9 = *(_OWORD *)(a1 + 16);
  char v10 = v7;
  sub_10017DF08(&qword_100EA39B8);
  Binding.projectedValue.getter();
  type metadata accessor for SunriseSunsetChartAndTable(0);
  Binding.projectedValue.getter();
  sub_100749D38((uint64_t)v4);
  sub_100952BD0();
}

void *sub_100963368@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = static HorizontalAlignment.leading.getter();
  sub_1009633E4();
  memcpy(&__src[7], v4, 0x110uLL);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0x3FF0000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  return memcpy((void *)(a1 + 17), __src, 0x117uLL);
}

uint64_t sub_1009633E4()
{
  char v28 = static Axis.Set.horizontal.getter();
  sub_10096368C((uint64_t)&v48);
  uint64_t v22 = v49;
  uint64_t v23 = v48;
  char v21 = v50;
  long long v20 = *(_OWORD *)v51;
  uint64_t v19 = *(void *)&v51[16];
  char v18 = v52;
  uint64_t v27 = *(void *)&v53[16];
  char v25 = BYTE1(v54);
  char v26 = v54;
  char v24 = BYTE2(v54);
  long long v16 = *(_OWORD *)v53;
  char v17 = static Axis.Set.horizontal.getter();
  sub_100963AB0((uint64_t)&v48);
  uint64_t v0 = v48;
  uint64_t v1 = v49;
  char v2 = v50;
  uint64_t v3 = *(void *)&v51[16];
  char v4 = v52;
  uint64_t v5 = *(void *)&v53[16];
  char v6 = v54;
  char v7 = BYTE1(v54);
  char v8 = BYTE2(v54);
  long long v14 = *(_OWORD *)v53;
  long long v15 = *(_OWORD *)v51;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v58 = 0x4024000000000000;
  char v59 = 0;
  LOBYTE(v48) = v28;
  uint64_t v49 = v23;
  uint64_t v50 = v22;
  v51[0] = v21;
  *(_OWORD *)&v51[8] = v20;
  uint64_t v52 = v19;
  v53[0] = v18;
  *(_OWORD *)&v53[8] = v16;
  uint64_t v54 = v27;
  char v55 = v26;
  char v56 = v25;
  char v57 = v24;
  uint64_t v60 = &v58;
  uint64_t v61 = &v48;
  char v36 = v17;
  uint64_t v37 = v0;
  uint64_t v38 = v1;
  char v39 = v2;
  long long v40 = v15;
  uint64_t v41 = v3;
  char v42 = v4;
  long long v43 = v14;
  uint64_t v44 = v5;
  char v45 = v6;
  char v46 = v7;
  char v47 = v8;
  uint64_t v29 = 0;
  char v30 = 1;
  uint64_t v31 = v64;
  char v32 = v65;
  uint64_t v33 = v66;
  char v34 = v67;
  long long v35 = v68;
  uint64_t v62 = &v36;
  uint64_t v63 = &v29;
  sub_1004BA084();
  uint64_t v9 = *((void *)&v40 + 1);
  uint64_t v10 = v41;
  LOBYTE(v0) = v42;
  sub_100191924(v37, v38, v39);
  swift_bridgeObjectRelease();
  sub_100191924(v9, v10, v0);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)&v51[16];
  uint64_t v12 = v52;
  LOBYTE(v0) = v53[0];
  sub_100191924(v49, v50, v51[0]);
  swift_bridgeObjectRelease();
  sub_100191924(v11, v12, v0);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10096368C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Font.Leading();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Font.largeTitle.getter();
  static Font.Weight.medium.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v6 = enum case for Font.Leading.tight(_:);
  char v24 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v24(v5, enum case for Font.Leading.tight(_:), v2);
  Font.leading(_:)();
  swift_release();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v3 + 8);
  v23(v5, v2);
  uint64_t v7 = sub_100963944();
  uint64_t v25 = v8;
  uint64_t v26 = v7;
  char v10 = v9;
  uint64_t v27 = v11;
  swift_release();
  static Font.title2.getter();
  static Font.Weight.medium.getter();
  Font.weight(_:)();
  swift_release();
  v24(v5, v6, v2);
  Font.leading(_:)();
  swift_release();
  v23(v5, v2);
  uint64_t v12 = sub_100963944();
  uint64_t v14 = v13;
  LOBYTE(v5) = v15;
  uint64_t v17 = v16;
  swift_release();
  LOBYTE(v5) = v5 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  char v28 = v10 & 1;
  uint64_t v20 = v25;
  uint64_t v19 = v26;
  *(void *)a1 = v26;
  *(void *)(a1 + 8) = v20;
  *(unsigned char *)(a1 + 16) = v10 & 1;
  *(void *)(a1 + 24) = v27;
  *(void *)(a1 + 32) = v12;
  *(void *)(a1 + 40) = v14;
  *(unsigned char *)(a1 + 48) = (_BYTE)v5;
  *(void *)(a1 + 56) = v17;
  *(void *)(a1 + 64) = KeyPath;
  *(void *)(a1 + 72) = 2;
  *(unsigned char *)(a1 + 80) = 0;
  *(_WORD *)(a1 + 81) = 256;
  uint64_t v21 = v19;
  sub_100190CC4(v19, v20, v10 & 1);
  swift_bridgeObjectRetain();
  sub_100190CC4(v12, v14, (char)v5);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100191924(v12, v14, (char)v5);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100191924(v21, v20, v28);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100963944()
{
  uint64_t v0 = type metadata accessor for TimeStyle();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Style();
  static Style.componentTime.getter();
  type metadata accessor for SunriseSunsetDetailHeaderView(0);
  uint64_t v4 = TimeStyle.formatTime(_:periodSymbols:font:)();
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v9 = Text.monospacedDigit()();
  sub_100191924(v4, v6, v8);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_100963AB0@<X0>(uint64_t a1@<X8>)
{
  static Font.subheadline.getter();
  static Font.Weight.medium.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v2 = sub_100963C34();
  uint64_t v4 = v3;
  char v6 = v5;
  uint64_t v8 = v7;
  swift_release();
  char v9 = v6 & 1;
  static Font.footnote.getter();
  static Font.Weight.medium.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v10 = sub_100963C34();
  uint64_t v12 = v11;
  char v14 = v13;
  uint64_t v16 = v15;
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v9;
  *(void *)(a1 + 24) = v8;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v12;
  *(unsigned char *)(a1 + 48) = v14 & 1;
  *(void *)(a1 + 56) = v16;
  *(void *)(a1 + 64) = KeyPath;
  *(void *)(a1 + 72) = 2;
  *(unsigned char *)(a1 + 80) = 0;
  *(_WORD *)(a1 + 81) = 256;
  sub_100190CC4(v2, v4, v9);
  swift_bridgeObjectRetain();
  sub_100190CC4(v10, v12, v14 & 1);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100191924(v10, v12, v14 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100191924(v2, v4, v9);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100963C34()
{
  uint64_t v0 = type metadata accessor for AttributedString();
  __chkstk_darwin(v0 - 8);
  type metadata accessor for SunriseSunsetDetailHeaderView(0);
  AttributedString.with(font:)();
  uint64_t v1 = Text.init(_:)();
  uint64_t v3 = v2;
  char v5 = v4 & 1;
  static Color.secondary.getter();
  uint64_t v6 = Text.foregroundColor(_:)();
  uint64_t v8 = v7;
  char v10 = v9;
  swift_release();
  sub_100191924(v1, v3, v5);
  swift_bridgeObjectRelease();
  uint64_t v11 = Text.monospacedDigit()();
  sub_100191924(v6, v8, v10 & 1);
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_100963D94()
{
  uint64_t v1 = sub_10017DF08(&qword_100EA3F68);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v3 = static HorizontalAlignment.center.getter();
  *((void *)v3 + 1) = 0;
  v3[16] = 0;
  uint64_t v4 = sub_10017DF08(&qword_100EA3F70);
  sub_100963EA8(v0, &v3[*(int *)(v4 + 44)]);
  type metadata accessor for SunriseSunsetDetailLollipopHeaderView(0);
  sub_1001246C8(&qword_100EA3F78, &qword_100EA3F68);
  View.offsetXWithinBounds(_:)();
  return sub_1001781AC((uint64_t)v3, &qword_100EA3F68);
}

uint64_t sub_100963EA8@<X0>(char *a1@<X0>, void *a2@<X8>)
{
  uint64_t v119 = a2;
  uint64_t v115 = type metadata accessor for AttributedString();
  uint64_t v114 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  uint64_t v113 = (char *)&v100 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v116 = (char *)&v100 - v5;
  uint64_t v110 = type metadata accessor for Font.Leading();
  uint64_t v109 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v108 = (char *)&v100 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = type metadata accessor for TimeStyle();
  uint64_t v111 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  uint64_t v107 = (char *)&v100 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_10017DF08(&qword_100EA3F80);
  uint64_t v117 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v129 = (char *)&v100 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v126 = (char *)&v100 - v10;
  uint64_t v106 = type metadata accessor for CharacterSet();
  uint64_t v105 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v104 = (char *)&v100 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E63F80);
  __chkstk_darwin(v12 - 8);
  char v14 = (char *)&v100 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Font.TextStyle();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  char v18 = (char *)&v100 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10017DF08(&qword_100EA3F88);
  __chkstk_darwin(v19 - 8);
  uint64_t v128 = (uint64_t)&v100 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v102 = (char *)&v100 - v22;
  __chkstk_darwin(v23);
  uint64_t v127 = (uint64_t)&v100 - v24;
  uint64_t v120 = a1;
  uint64_t v25 = *(void *)a1;
  uint64_t v26 = *((void *)a1 + 1);
  uint64_t v130 = v25;
  uint64_t v131 = v26;
  unint64_t v100 = sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v27 = Text.init<A>(_:)();
  uint64_t v29 = v28;
  char v31 = v30 & 1;
  char v32 = *(void (**)(char *, void, uint64_t))(v16 + 104);
  uint64_t v124 = v16 + 104;
  uint64_t v125 = v32;
  uint64_t v121 = v15;
  v32(v18, enum case for Font.TextStyle.footnote(_:), v15);
  uint64_t v103 = type metadata accessor for Font.Design();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 1, 1, v103);
  uint64_t v101 = v18;
  static Font.system(_:design:weight:)();
  sub_1001781AC((uint64_t)v14, &qword_100E63F80);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v122 = v16 + 8;
  uint64_t v123 = v33;
  v33(v18, v15);
  static Font.Weight.medium.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v34 = Text.font(_:)();
  uint64_t v36 = v35;
  LOBYTE(v15) = v37;
  uint64_t v39 = v38;
  swift_release();
  sub_100191924(v27, v29, v31);
  swift_bridgeObjectRelease();
  uint64_t v40 = static Color.secondary.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v130 = v34;
  uint64_t v131 = v36;
  LOBYTE(v132) = v15 & 1;
  uint64_t v133 = v39;
  LOWORD(v134) = 257;
  uint64_t v135 = (char *)KeyPath;
  uint64_t v136 = v40;
  uint64_t v42 = *((void *)v120 + 1);
  uint64_t v142 = *(void *)v120;
  uint64_t v143 = v42;
  swift_bridgeObjectRetain();
  long long v43 = v104;
  static CharacterSet.whitespacesAndNewlines.getter();
  StringProtocol.trimmingCharacters(in:)();
  (*(void (**)(char *, uint64_t))(v105 + 8))(v43, v106);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10017DF08(&qword_100EA3F90);
  sub_10097B6CC();
  uint64_t v44 = (uint64_t)v102;
  View.accessibilityHidden(_:)();
  sub_100191924(v130, v131, (char)v132);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10024D364(v44, v127, &qword_100EA3F88);
  type metadata accessor for Style();
  char v45 = v107;
  static Style.componentTime.getter();
  uint64_t v106 = type metadata accessor for SunriseSunsetDetailLollipopHeaderView(0);
  char v46 = v101;
  uint64_t v47 = v121;
  v125(v101, enum case for Font.TextStyle.largeTitle(_:), v121);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 1, 1, v103);
  static Font.system(_:design:weight:)();
  sub_1001781AC((uint64_t)v14, &qword_100E63F80);
  v123(v46, v47);
  uint64_t v48 = v109;
  uint64_t v49 = v108;
  uint64_t v50 = v110;
  (*(void (**)(char *, void, uint64_t))(v109 + 104))(v108, enum case for Font.Leading.tight(_:), v110);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v50);
  static Font.Weight.bold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v51 = TimeStyle.formatTime(_:periodSymbols:font:)();
  uint64_t v53 = v52;
  LOBYTE(v26) = v54;
  uint64_t v56 = v55;
  swift_release();
  LOBYTE(v50) = v26 & 1;
  (*(void (**)(char *, uint64_t))(v111 + 8))(v45, v112);
  LOBYTE(v26) = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  uint64_t v58 = v57;
  uint64_t v60 = v59;
  uint64_t v62 = v61;
  uint64_t v64 = v63;
  uint64_t v65 = static Color.primary.getter();
  uint64_t v66 = swift_getKeyPath();
  uint64_t v130 = v51;
  uint64_t v131 = v53;
  LOBYTE(v132) = v50;
  uint64_t v133 = v56;
  LOBYTE(v134) = v26;
  uint64_t v135 = v58;
  uint64_t v136 = v60;
  uint64_t v137 = v62;
  uint64_t v138 = v64;
  char v139 = 0;
  uint64_t v140 = v66;
  uint64_t v141 = v65;
  sub_10017DF08(&qword_100EA3FA0);
  sub_10097B784();
  char v67 = v126;
  View.monospacedDigit()();
  sub_100191924(v51, v53, v50);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v68 = v114;
  uint64_t v69 = v113;
  uint64_t v70 = v115;
  (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v113, &v120[*(int *)(v106 + 24)], v115);
  uint64_t v71 = v121;
  v125(v46, enum case for Font.TextStyle.caption2(_:), v121);
  static Font.Weight.medium.getter();
  static Font.system(_:weight:)();
  v123(v46, v71);
  AttributedString.with(font:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v69, v70);
  uint64_t v72 = Text.init(_:)();
  uint64_t v74 = v73;
  LOBYTE(v68) = v75 & 1;
  static Color.secondary.getter();
  uint64_t v76 = Text.foregroundColor(_:)();
  uint64_t v78 = v77;
  LOBYTE(v48) = v79;
  swift_release();
  sub_100191924(v72, v74, v68);
  swift_bridgeObjectRelease();
  uint64_t v124 = Text.monospacedDigit()();
  uint64_t v123 = v80;
  uint64_t v125 = v81;
  LODWORD(v122) = v82 & 1;
  sub_100191924(v76, v78, v48 & 1);
  swift_bridgeObjectRelease();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v121 = v130;
  LODWORD(v120) = v131;
  uint64_t v116 = v132;
  LODWORD(v115) = v133;
  uint64_t v114 = v134;
  uint64_t v113 = v135;
  uint64_t v83 = v127;
  uint64_t v84 = v128;
  sub_10006DF38(v127, v128, &qword_100EA3F88);
  uint64_t v85 = v117;
  uint64_t v86 = *(void (**)(char *, char *, uint64_t))(v117 + 16);
  uint64_t v87 = v129;
  uint64_t v88 = v67;
  uint64_t v89 = v118;
  v86(v129, v88, v118);
  uint64_t v90 = v119;
  *uint64_t v119 = 0x4018000000000000;
  *((unsigned char *)v90 + 8) = 0;
  uint64_t v91 = (int *)sub_10017DF08(&qword_100EA3FB0);
  sub_10006DF38(v84, (uint64_t)v90 + v91[12], &qword_100EA3F88);
  v86((char *)v90 + v91[16], v87, v89);
  uint64_t v92 = (char *)v90 + v91[20];
  uint64_t v93 = v124;
  uint64_t v94 = (uint64_t)v123;
  *(void *)uint64_t v92 = v124;
  *((void *)v92 + 1) = v94;
  LOBYTE(v87) = v122;
  v92[16] = v122;
  *((void *)v92 + 3) = v125;
  uint64_t v95 = (char *)v90 + v91[24];
  *(void *)uint64_t v95 = 0;
  v95[8] = 1;
  *((void *)v95 + 2) = v121;
  v95[24] = (char)v120;
  *((void *)v95 + 4) = v116;
  v95[40] = v115;
  uint64_t v96 = v113;
  *((void *)v95 + 6) = v114;
  *((void *)v95 + 7) = v96;
  uint64_t v97 = v93;
  sub_100190CC4(v93, v94, (char)v87);
  uint64_t v98 = *(void (**)(char *, uint64_t))(v85 + 8);
  swift_bridgeObjectRetain();
  v98(v126, v89);
  sub_1001781AC(v83, &qword_100EA3F88);
  sub_100191924(v97, v94, (char)v87);
  swift_bridgeObjectRelease();
  v98(v129, v89);
  return sub_1001781AC(v128, &qword_100EA3F88);
}

uint64_t sub_100964C70(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_100964CC4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100964D1C()
{
  uint64_t v1 = type metadata accessor for SunriseSunsetDetailView(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_release();
  swift_release();
  uint64_t v3 = v2 + *(int *)(v1 + 24);
  uint64_t v4 = type metadata accessor for DetailChartDataElement();
  if (!_s7Weather24LocationCompositionStateOwet_0(v3, 1, v4))
  {
    sub_100162880();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  sub_10017DF08(&qword_100EA3BB8);
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v2 + *(int *)(v1 + 32));

  return swift_deallocObject();
}

uint64_t sub_100964E5C()
{
  uint64_t v2 = *(void *)(type metadata accessor for SunriseSunsetDetailView(0) - 8);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_1002205C0;
  return sub_100960DC4(v3);
}

uint64_t sub_100964F28@<X0>(uint64_t a1@<X8>)
{
  return sub_100960EDC(*(void *)(v1 + 16), a1);
}

unint64_t sub_100964F30()
{
  unint64_t result = qword_100EA3CC0;
  if (!qword_100EA3CC0)
  {
    sub_10018C6DC(&qword_100EA3C98);
    sub_100964FD0();
    sub_1001246C8(&qword_100E64438, &qword_100E64440);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA3CC0);
  }
  return result;
}

unint64_t sub_100964FD0()
{
  unint64_t result = qword_100EA3CC8;
  if (!qword_100EA3CC8)
  {
    sub_10018C6DC(&qword_100E7A108);
    sub_10018C6DC(&qword_100EA3C90);
    sub_1001246C8(&qword_100EA3CB8, &qword_100EA3C90);
    swift_getOpaqueTypeConformance2();
    sub_100965158((unint64_t *)&qword_100E66BF8, (void (*)(uint64_t))type metadata accessor for AutomationInfoViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA3CC8);
  }
  return result;
}

uint64_t type metadata accessor for SunriseSunsetChartAndTable(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EA3DC0);
}

uint64_t sub_1009650FC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t sub_100965158(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for SunriseSunsetDetailLollipopHeaderView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EA3E60);
}

uint64_t type metadata accessor for SunriseSunsetDetailHeaderView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EA3F08);
}

unint64_t sub_1009651E0()
{
  unint64_t result = qword_100EA3D48;
  if (!qword_100EA3D48)
  {
    sub_10018C6DC(&qword_100EA3D30);
    type metadata accessor for SunriseSunsetDetailHeaderView(255);
    sub_10018C6DC(&qword_100E651D0);
    sub_100965158(&qword_100EA3D40, (void (*)(uint64_t))type metadata accessor for SunriseSunsetDetailHeaderView);
    sub_1001246C8((unint64_t *)&unk_100EAADB0, &qword_100E651D0);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA3D48);
  }
  return result;
}

unint64_t sub_10096530C()
{
  unint64_t result = qword_100EA3D58;
  if (!qword_100EA3D58)
  {
    sub_10018C6DC(&qword_100EA3D10);
    sub_100965158(&qword_100EA3D60, (void (*)(uint64_t))type metadata accessor for SunriseSunsetDetailLollipopHeaderView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EA3D58);
  }
  return result;
}

uint64_t sub_1009653B8(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *a2;
  *(void *)a1 = *a2;
  if ((v4 & 0x20000) == 0)
  {
    uint64_t v6 = a3;
    uint64_t v7 = a2;
    *(void *)(a1 + 8) = a2[1];
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v8 = a3[5];
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = *(uint64_t *)((char *)a2 + v8 + 8);
    *uint64_t v9 = *(uint64_t *)((char *)a2 + v8);
    v9[1] = v11;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v12 = *(int *)(sub_10017DF08(&qword_100EA37A0) + 32);
    uint64_t v13 = (char *)v9 + v12;
    char v14 = (const void *)(v10 + v12);
    uint64_t v15 = type metadata accessor for DetailChartDataElement();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
    {
      uint64_t v16 = sub_10017DF08(&qword_100E6B640);
      memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
    }
    uint64_t v17 = v6[6];
    char v18 = (void *)(a1 + v17);
    uint64_t v19 = (uint64_t *)((char *)v7 + v17);
    uint64_t v20 = type metadata accessor for SunriseSunsetDetailViewModel();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload != 1)
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
LABEL_302:
        uint64_t v644 = v6[8];
        *(unsigned char *)(a1 + v6[7]) = *((unsigned char *)v7 + v6[7]);
        *(void *)(a1 + v644) = *(uint64_t *)((char *)v7 + v644);
        *(void *)(a1 + v6[9]) = *(uint64_t *)((char *)v7 + v6[9]);
        return a1;
      }
      uint64_t v731 = v6;
      uint64_t v726 = a1;
      uint64_t v728 = v7;
      uint64_t v22 = v19[1];
      *char v18 = *v19;
      v18[1] = v22;
      uint64_t v23 = v19[3];
      v18[2] = v19[2];
      v18[3] = v23;
      uint64_t v24 = v19[5];
      v18[4] = v19[4];
      v18[5] = v24;
      uint64_t v25 = (int *)_s11NormalModelVMa();
      uint64_t v26 = v25[7];
      uint64_t v27 = (char *)v18 + v26;
      uint64_t v733 = (char *)v18;
      uint64_t v28 = (char *)v19 + v26;
      uint64_t v29 = type metadata accessor for Date();
      char v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v30(v27, v28, v29);
      v30(&v733[v25[8]], (char *)v19 + v25[8], v29);
      uint64_t v700 = (void (*)(void *, char *, uint64_t))v30;
      uint64_t v702 = v29;
      v30(&v733[v25[9]], (char *)v19 + v25[9], v29);
      uint64_t v31 = v25[10];
      char v32 = &v733[v31];
      uint64_t v33 = (char *)v19 + v31;
      uint64_t v34 = type metadata accessor for TimeZone();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
      uint64_t v35 = v25[11];
      uint64_t v36 = &v733[v35];
      char v37 = (char *)v19 + v35;
      uint64_t v38 = type metadata accessor for AttributedString();
      v710 = *(void (**)(char *, char *))(*(void *)(v38 - 8) + 16);
      uint64_t v716 = v38;
      v710(v36, v37);
      *(void *)&v733[v25[12]] = *(void *)((char *)v19 + v25[12]);
      uint64_t v39 = v25[13];
      uint64_t v40 = &v733[v39];
      uint64_t v41 = (char *)v19 + v39;
      uint64_t v42 = type metadata accessor for SunriseSunsetDetailChartViewModel();
      long long v43 = *(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16);
      swift_bridgeObjectRetain();
      v43(v40, v41, v42);
      uint64_t v44 = v733;
      uint64_t v45 = v25[14];
      char v46 = &v733[v45];
      uint64_t v47 = (char *)v19 + v45;
      uint64_t v48 = type metadata accessor for Location();
      uint64_t v704 = *(void (**)(char *, char *))(*(void *)(v48 - 8) + 16);
      uint64_t v706 = v48;
      v704(v46, v47);
      uint64_t v49 = v25[15];
      uint64_t v50 = &v733[v49];
      uint64_t v51 = (char *)v19 + v49;
      uint64_t v52 = type metadata accessor for SunEvents();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v50, v51, v52);
      uint64_t v53 = v25[16];
      char v54 = &v733[v53];
      uint64_t v55 = (char *)v19 + v53;
      uint64_t v56 = type metadata accessor for OverviewTableViewModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
      uint64_t v57 = v25[17];
      uint64_t v58 = &v733[v57];
      uint64_t v59 = (char *)v19 + v57;
      uint64_t v60 = type metadata accessor for DaylightStringBuilder();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
      uint64_t v61 = v25[18];
      uint64_t v62 = &v733[v61];
      uint64_t v63 = (void *)((char *)v19 + v61);
      uint64_t v64 = type metadata accessor for DetailComponentContainerViewModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 1, v64))
      {
        uint64_t v65 = sub_10017DF08(&qword_100E66E28);
        memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
        a1 = v726;
        uint64_t v7 = v728;
      }
      else
      {
        uint64_t v113 = v63[1];
        if (v113)
        {
          char *v62 = *v63;
          v62[1] = v113;
          uint64_t v114 = v63[3];
          v62[2] = v63[2];
          v62[3] = v114;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v117 = *((_OWORD *)v63 + 1);
          *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
          *((_OWORD *)v62 + 1) = v117;
        }
        a1 = v726;
        uint64_t v720 = v64;
        uint64_t v118 = *(int *)(v64 + 20);
        uint64_t v119 = (void *)((char *)v62 + v118);
        uint64_t v120 = (void *)((char *)v63 + v118);
        uint64_t v121 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v122 = v120[1];
          *uint64_t v119 = *v120;
          v119[1] = v122;
          uint64_t v697 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v123 = v697[5];
          uint64_t v124 = (char *)v119 + v123;
          uint64_t v125 = (char *)v120 + v123;
          uint64_t v126 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v125, 1, v126))
          {
            uint64_t v127 = sub_10017DF08(&qword_100E749B0);
            memcpy(v124, v125, *(void *)(*(void *)(v127 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 16))(v124, v125, v126);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v124, 0, 1, v126);
          }
          uint64_t v139 = v697[6];
          uint64_t v140 = (void *)((char *)v119 + v139);
          uint64_t v141 = (void *)((char *)v120 + v139);
          uint64_t v142 = v141[1];
          void *v140 = *v141;
          v140[1] = v142;
          uint64_t v143 = v697[7];
          int v688 = (char *)v119 + v143;
          uint64_t v144 = (char *)v120 + v143;
          uint64_t v145 = *(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 16);
          swift_bridgeObjectRetain();
          v145(v688, v144, v126);
          uint64_t v146 = v697[8];
          uint64_t v147 = (char *)v119 + v146;
          uint64_t v148 = (char *)v120 + v146;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v120 + v146, 1, v126))
          {
            uint64_t v149 = sub_10017DF08(&qword_100E749B0);
            memcpy(v147, v148, *(void *)(*(void *)(v149 - 8) + 64));
          }
          else
          {
            v145(v147, v148, v126);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v147, 0, 1, v126);
          }
          uint64_t v44 = v733;
          a1 = v726;
          *((unsigned char *)v119 + v697[9]) = *((unsigned char *)v120 + v697[9]);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v119, v120, *(void *)(*(void *)(v121 - 8) + 64));
        }
        uint64_t v64 = v720;
        uint64_t v161 = *(int *)(v720 + 24);
        uint64_t v162 = (char *)v62 + v161;
        uint64_t v163 = (char *)v63 + v161;
        uint64_t v164 = type metadata accessor for DetailComponentAction();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v163, 1, v164))
        {
          uint64_t v165 = sub_10017DF08(&qword_100E73810);
          memcpy(v162, v163, *(void *)(*(void *)(v165 - 8) + 64));
        }
        else
        {
          uint64_t v166 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v166 - 8) + 16))(v162, v163, v166);
          uint64_t v167 = sub_10017DF08(&qword_100E66478);
          v162[*(int *)(v167 + 48)] = v163[*(int *)(v167 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v162, 0, 1, v164);
        }
        uint64_t v7 = v728;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v62, 0, 1, v720);
      }
      uint64_t v168 = *(int *)(sub_10017DF08(&qword_100E92128) + 48);
      uint64_t v169 = (void *)((char *)v44 + v168);
      uint64_t v170 = (unsigned __int8 *)v19 + v168;
      uint64_t v171 = type metadata accessor for ConditionDetailPlatterViewModel(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v170, 1, v171))
      {
        uint64_t v172 = sub_10017DF08(&qword_100E66E40);
        memcpy(v169, v170, *(void *)(*(void *)(v172 - 8) + 64));
        uint64_t v6 = v731;
LABEL_301:
        swift_storeEnumTagMultiPayload();
        goto LABEL_302;
      }
      uint64_t v173 = *(void *)v170;
      uint64_t v174 = *((void *)v170 + 1);
      unsigned __int8 v175 = v170[16];
      sub_10018F6EC(*(void *)v170, v174, v175);
      *uint64_t v169 = v173;
      v169[1] = v174;
      *((unsigned char *)v169 + 16) = v175;
      uint64_t v176 = *((void *)v170 + 4);
      v169[3] = *((void *)v170 + 3);
      v169[4] = v176;
      uint64_t v698 = (int *)v171;
      uint64_t v177 = *(int *)(v171 + 24);
      uint64_t v178 = (char *)v169 + v177;
      uint64_t v179 = &v170[v177];
      uint64_t v180 = type metadata accessor for WeatherDescription();
      swift_bridgeObjectRetain();
      uint64_t v690 = v180;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v179, 1, v180))
      {
        uint64_t v181 = sub_10017DF08(&qword_100E63758);
        memcpy(v178, v179, *(void *)(*(void *)(v181 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v180 - 8) + 16))(v178, v179, v180);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v178, 0, 1, v180);
      }
      uint64_t v182 = v698;
      uint64_t v183 = v698[7];
      long long v184 = (uint64_t *)((char *)v169 + v183);
      uint64_t v185 = &v170[v183];
      uint64_t v186 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
      __src = (char *)v185;
      uint64_t v721 = v64;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v218 = *((void *)v185 + 1);
          *long long v184 = *(void *)v185;
          v184[1] = v218;
          swift_bridgeObjectRetain();
          goto LABEL_167;
        case 2u:
          ((void (*)(void *, unsigned __int8 *, uint64_t))v710)(v184, v185, v716);
          goto LABEL_167;
        case 3u:
          uint64_t v219 = sub_10017DF08(&qword_100E73808);
          goto LABEL_67;
        case 4u:
          uint64_t v678 = v170;
          uint64_t v682 = v169;
          uint64_t v220 = *((void *)v185 + 1);
          if (v220)
          {
            *long long v184 = *(void *)v185;
            v184[1] = v220;
            uint64_t v221 = *((void *)v185 + 3);
            v184[2] = *((void *)__src + 2);
            v184[3] = v221;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v241 = *((_OWORD *)v185 + 1);
            *(_OWORD *)long long v184 = *(_OWORD *)v185;
            *((_OWORD *)v184 + 1) = v241;
          }
          uint64_t v242 = *(int *)(v64 + 20);
          uint64_t v243 = (void *)((char *)v184 + v242);
          uint64_t v244 = &__src[v242];
          uint64_t v245 = type metadata accessor for NewsArticleComponentViewModel(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v661 = v184;
            uint64_t v246 = *((void *)v244 + 1);
            *uint64_t v243 = *(void *)v244;
            v243[1] = v246;
            uint64_t v653 = v243;
            uint64_t v659 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
            uint64_t v247 = v659[5];
            uint64_t v248 = (char *)v243 + v247;
            uint64_t v249 = &v244[v247];
            uint64_t v250 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            uint64_t v673 = v186;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v249, 1, v250))
            {
              uint64_t v251 = sub_10017DF08(&qword_100E749B0);
              memcpy(v248, v249, *(void *)(*(void *)(v251 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v250 - 8) + 16))(v248, v249, v250);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v248, 0, 1, v250);
            }
            uint64_t v302 = v659[6];
            uint64_t v303 = (void *)((char *)v653 + v302);
            uint64_t v304 = &v244[v302];
            uint64_t v305 = *((void *)v304 + 1);
            *uint64_t v303 = *(void *)v304;
            v303[1] = v305;
            uint64_t v306 = v659[7];
            long long v307 = (char *)v653 + v306;
            uint64_t v308 = &v244[v306];
            uint64_t v309 = *(void (**)(char *, char *, uint64_t))(*(void *)(v250 - 8) + 16);
            swift_bridgeObjectRetain();
            v309(v307, v308, v250);
            uint64_t v310 = v659[8];
            long long v311 = (char *)v653 + v310;
            long long v312 = &v244[v310];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v244[v310], 1, v250))
            {
              uint64_t v313 = sub_10017DF08(&qword_100E749B0);
              memcpy(v311, v312, *(void *)(*(void *)(v313 - 8) + 64));
            }
            else
            {
              v309(v311, v312, v250);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v311, 0, 1, v250);
            }
            uint64_t v7 = v728;
            uint64_t v182 = v698;
            uint64_t v186 = v673;
            *((unsigned char *)v653 + v659[9]) = v244[v659[9]];
            swift_storeEnumTagMultiPayload();
            long long v184 = v661;
          }
          else
          {
            memcpy(v243, v244, *(void *)(*(void *)(v245 - 8) + 64));
          }
          uint64_t v326 = *(int *)(v64 + 24);
          uint64_t v327 = (char *)v184 + v326;
          uint64_t v328 = &__src[v326];
          uint64_t v329 = type metadata accessor for DetailComponentAction();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v328, 1, v329))
          {
            uint64_t v330 = sub_10017DF08(&qword_100E73810);
            memcpy(v327, v328, *(void *)(*(void *)(v330 - 8) + 64));
          }
          else
          {
            uint64_t v331 = type metadata accessor for URL();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v331 - 8) + 16))(v327, v328, v331);
            uint64_t v332 = sub_10017DF08(&qword_100E66478);
            v327[*(int *)(v332 + 48)] = v328[*(int *)(v332 + 48)];
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v327, 0, 1, v329);
          }
          uint64_t v170 = v678;
          uint64_t v169 = v682;
          goto LABEL_167;
        case 5u:
          uint64_t v679 = v170;
          uint64_t v683 = v169;
          uint64_t v670 = v186;
          if (*((void *)v185 + 3))
          {
            uint64_t v222 = *(void *)v185;
            uint64_t v223 = *((void *)__src + 1);
            char v224 = __src[16];
            sub_100190CC4(*(void *)__src, v223, v224);
            *long long v184 = v222;
            v184[1] = v223;
            *((unsigned char *)v184 + 16) = v224;
            v184[3] = *((void *)__src + 3);
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v252 = *((_OWORD *)v185 + 1);
            *(_OWORD *)long long v184 = *(_OWORD *)v185;
            *((_OWORD *)v184 + 1) = v252;
          }
          uint64_t v253 = *((void *)__src + 4);
          uint64_t v254 = *((void *)__src + 5);
          uint64_t v255 = *((void *)__src + 6);
          uint64_t v256 = *((void *)__src + 7);
          uint64_t v257 = *((void *)__src + 8);
          uint64_t v258 = *((void *)__src + 9);
          uint64_t v259 = *((void *)__src + 10);
          char v662 = __src[89];
          unsigned __int8 v260 = __src[88];
          sub_10033A9E8(v253, v254, v255, v256, v257, v258, v259, v260, v662);
          v184[4] = v253;
          v184[5] = v254;
          v184[6] = v255;
          v184[7] = v256;
          v184[8] = v257;
          v184[9] = v258;
          v184[10] = v259;
          *((unsigned char *)v184 + 88) = v260;
          *((unsigned char *)v184 + 89) = v662;
          uint64_t v7 = v728;
          goto LABEL_166;
        case 6u:
          uint64_t v219 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_67:
          uint64_t v187 = v219;
          uint64_t v188 = v219;
          goto LABEL_68;
        case 7u:
          uint64_t v658 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
          int v225 = swift_getEnumCaseMultiPayload();
          if (v225 != 1)
          {
            if (v225)
            {
              memcpy(v184, v185, *(void *)(*(void *)(v658 - 8) + 64));
            }
            else
            {
              uint64_t v226 = *((void *)v185 + 1);
              *long long v184 = *(void *)v185;
              v184[1] = v226;
              v184[2] = *((void *)v185 + 2);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
            }
            goto LABEL_167;
          }
          uint64_t v683 = v169;
          uint64_t v281 = *((void *)v185 + 1);
          *long long v184 = *(void *)__src;
          v184[1] = v281;
          uint64_t v282 = type metadata accessor for ConditionDetailMapViewModel();
          uint64_t v283 = *(int *)(v282 + 20);
          uint64_t v664 = v184;
          uint64_t v284 = (char *)v184 + v283;
          uint64_t v654 = &__src[v283];
          swift_bridgeObjectRetain();
          uint64_t v285 = v664;
          ((void (*)(char *, char *, uint64_t))v704)(v284, v654, v706);
          v655 = (int *)v282;
          uint64_t v286 = *(int *)(v282 + 24);
          uint64_t v287 = (void *)((char *)v664 + v286);
          uint64_t v288 = &__src[v286];
          uint64_t v289 = type metadata accessor for WeatherData(0);
          uint64_t v670 = v186;
          uint64_t v679 = v170;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v288, 1, v289))
          {
            uint64_t v290 = sub_10017DF08(&qword_100E63850);
            memcpy(v287, v288, *(void *)(*(void *)(v290 - 8) + 64));
            goto LABEL_165;
          }
          uint64_t v340 = v288;
          uint64_t v341 = *(void *)v288;
          uint64_t v342 = *((void *)v288 + 1);
          *uint64_t v287 = v341;
          v287[1] = v342;
          uint64_t v648 = (int *)v289;
          uint64_t v650 = (uint64_t)v287;
          uint64_t v343 = *(int *)(v289 + 20);
          uint64_t v344 = (char *)v287 + v343;
          uint64_t v647 = v340;
          uint64_t v345 = (char *)v340 + v343;
          uint64_t v346 = type metadata accessor for Locale();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v345, 1, v346))
          {
            uint64_t v347 = sub_10017DF08(&qword_100E63730);
            memcpy(v344, v345, *(void *)(*(void *)(v347 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v346 - 8) + 16))(v344, v345, v346);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v344, 0, 1, v346);
          }
          uint64_t v356 = v648[6];
          uint64_t v646 = v650 + v356;
          uint64_t v357 = (uint64_t)v647 + v356;
          uint64_t v358 = type metadata accessor for WeatherDataModel();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v358 - 8) + 16))(v646, v357, v358);
          uint64_t v359 = v648[7];
          uint64_t v360 = (void *)(v650 + v359);
          uint64_t v361 = (char *)v647 + v359;
          uint64_t v362 = sub_10017DF08(&qword_100E63738);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v361, 1, v362))
          {
            uint64_t v363 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v360, v361, *(void *)(*(void *)(v363 - 8) + 64));
          }
          else
          {
            v700(v360, v361, v702);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v360, 0, 1, v362);
          }
          uint64_t v374 = v648[8];
          uint64_t v375 = (void *)(v650 + v374);
          uint64_t v376 = (void *)((char *)v647 + v374);
          uint64_t v377 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          int v378 = swift_getEnumCaseMultiPayload();
          if (v378 == 1)
          {
            uint64_t v386 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v386 - 8) + 16))(v375, v376, v386);
            goto LABEL_143;
          }
          if (!v378)
          {
            uint64_t v379 = v376[1];
            *uint64_t v375 = *v376;
            v375[1] = v379;
            swift_bridgeObjectRetain();
LABEL_143:
            swift_storeEnumTagMultiPayload();
            goto LABEL_145;
          }
          memcpy(v375, v376, *(void *)(*(void *)(v377 - 8) + 64));
LABEL_145:
          uint64_t v387 = v648[9];
          uint64_t v388 = (char *)(v650 + v387);
          uint64_t v389 = (char *)v647 + v387;
          uint64_t v390 = type metadata accessor for WeatherDataOverrides();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v389, 1, v390))
          {
            uint64_t v391 = sub_10017DF08(&qword_100E63740);
            memcpy(v388, v389, *(void *)(*(void *)(v391 - 8) + 64));
          }
          else
          {
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v389, 1, v702))
            {
              uint64_t v392 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v388, v389, *(void *)(*(void *)(v392 - 8) + 64));
            }
            else
            {
              v700(v388, v389, v702);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v388, 0, 1, v702);
            }
            uint64_t v400 = *(int *)(v390 + 20);
            uint64_t v401 = &v388[v400];
            uint64_t v402 = &v389[v400];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v402, 1, v702))
            {
              uint64_t v403 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v401, v402, *(void *)(*(void *)(v403 - 8) + 64));
            }
            else
            {
              v700(v401, v402, v702);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v401, 0, 1, v702);
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v388, 0, 1, v390);
          }
          _s7Weather24LocationCompositionStateOwst_0(v650, 0, 1, (uint64_t)v648);
          uint64_t v285 = v664;
LABEL_165:
          uint64_t v408 = v655[7];
          uint64_t v409 = (void *)((char *)v285 + v408);
          uint64_t v410 = &__src[v408];
          uint64_t v411 = *((void *)v410 + 1);
          *uint64_t v409 = *(void *)v410;
          v409[1] = v411;
          uint64_t v412 = v655[8];
          uint64_t v413 = (char *)v664 + v412;
          v652 = &__src[v412];
          uint64_t v414 = type metadata accessor for WeatherMapOverlayKind();
          uint64_t v415 = *(void (**)(char *, char *, uint64_t))(*(void *)(v414 - 8) + 16);
          swift_bridgeObjectRetain();
          v415(v413, v652, v414);
          *((unsigned char *)v664 + v655[9]) = __src[v655[9]];
          swift_storeEnumTagMultiPayload();
LABEL_166:
          uint64_t v170 = v679;
          uint64_t v169 = v683;
          uint64_t v182 = v698;
          uint64_t v186 = v670;
LABEL_167:
          swift_storeEnumTagMultiPayload();
          uint64_t v416 = v182[8];
          uint64_t v417 = (uint64_t *)((char *)v169 + v416);
          uint64_t v418 = (char *)&v170[v416];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v170[v416], 1, v186))
          {
            uint64_t v419 = sub_10017DF08(&qword_100E73818);
            memcpy(v417, v418, *(void *)(*(void *)(v419 - 8) + 64));
            uint64_t v6 = v731;
LABEL_292:
            *((unsigned char *)v169 + v182[9]) = v170[v182[9]];
            *((unsigned char *)v169 + v182[10]) = v170[v182[10]];
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v169, 0, 1, (uint64_t)v182);
            goto LABEL_301;
          }
          break;
        default:
          uint64_t v187 = v690;
          uint64_t v188 = v690;
LABEL_68:
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v188 - 8) + 16))(v184, v185, v187);
          goto LABEL_167;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v422 = *((void *)v418 + 1);
          *uint64_t v417 = *(void *)v418;
          v417[1] = v422;
          swift_bridgeObjectRetain();
          goto LABEL_181;
        case 2u:
          ((void (*)(void *, char *, uint64_t))v710)(v417, v418, v716);
          goto LABEL_181;
        case 3u:
          uint64_t v423 = sub_10017DF08(&qword_100E73808);
          goto LABEL_179;
        case 4u:
          char v680 = v170;
          uint64_t v684 = v169;
          uint64_t v424 = *((void *)v418 + 1);
          if (v424)
          {
            *uint64_t v417 = *(void *)v418;
            v417[1] = v424;
            uint64_t v425 = *((void *)v418 + 3);
            v417[2] = *((void *)v418 + 2);
            v417[3] = v425;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v431 = *((_OWORD *)v418 + 1);
            *(_OWORD *)uint64_t v417 = *(_OWORD *)v418;
            *((_OWORD *)v417 + 1) = v431;
          }
          uint64_t v432 = *(int *)(v721 + 20);
          uint64_t v433 = (void *)((char *)v417 + v432);
          uint64_t v434 = &v418[v432];
          uint64_t v435 = type metadata accessor for NewsArticleComponentViewModel(0);
          __srcb = v417;
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v436 = *((void *)v434 + 1);
            *uint64_t v433 = *(void *)v434;
            v433[1] = v436;
            uint64_t v712 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
            uint64_t v437 = v712[5];
            uint64_t v438 = (char *)v433 + v437;
            uint64_t v439 = &v434[v437];
            uint64_t v440 = type metadata accessor for URL();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v439, 1, v440))
            {
              uint64_t v441 = sub_10017DF08(&qword_100E749B0);
              memcpy(v438, v439, *(void *)(*(void *)(v441 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v440 - 8) + 16))(v438, v439, v440);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v438, 0, 1, v440);
            }
            uint64_t v462 = v712[6];
            uint64_t v463 = (void *)((char *)v433 + v462);
            uint64_t v464 = &v434[v462];
            uint64_t v465 = *((void *)v464 + 1);
            *uint64_t v463 = *(void *)v464;
            v463[1] = v465;
            uint64_t v466 = v712[7];
            uint64_t v467 = (char *)v433 + v466;
            uint64_t v468 = &v434[v466];
            uint64_t v469 = *(void (**)(char *, char *, uint64_t))(*(void *)(v440 - 8) + 16);
            swift_bridgeObjectRetain();
            v469(v467, v468, v440);
            uint64_t v470 = v712[8];
            uint64_t v471 = (char *)v433 + v470;
            uint64_t v472 = &v434[v470];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v434[v470], 1, v440))
            {
              uint64_t v473 = sub_10017DF08(&qword_100E749B0);
              memcpy(v471, v472, *(void *)(*(void *)(v473 - 8) + 64));
            }
            else
            {
              v469(v471, v472, v440);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v471, 0, 1, v440);
            }
            uint64_t v182 = v698;
            *((unsigned char *)v433 + v712[9]) = v434[v712[9]];
            swift_storeEnumTagMultiPayload();
            uint64_t v417 = __srcb;
          }
          else
          {
            memcpy(v433, v434, *(void *)(*(void *)(v435 - 8) + 64));
          }
          uint64_t v474 = *(int *)(v721 + 24);
          uint64_t v475 = (char *)v417 + v474;
          uint64_t v476 = &v418[v474];
          uint64_t v477 = type metadata accessor for DetailComponentAction();
          uint64_t v7 = v728;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v476, 1, v477))
          {
            uint64_t v478 = sub_10017DF08(&qword_100E73810);
            memcpy(v475, v476, *(void *)(*(void *)(v478 - 8) + 64));
          }
          else
          {
            uint64_t v479 = type metadata accessor for URL();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v479 - 8) + 16))(v475, v476, v479);
            uint64_t v480 = sub_10017DF08(&qword_100E66478);
            v475[*(int *)(v480 + 48)] = v476[*(int *)(v480 + 48)];
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v475, 0, 1, v477);
          }
          uint64_t v6 = v731;
          uint64_t v170 = v680;
          uint64_t v169 = v684;
          uint64_t v417 = __srcb;
          goto LABEL_291;
        case 5u:
          uint64_t v681 = v170;
          uint64_t v685 = v169;
          uint64_t v674 = v186;
          if (*((void *)v418 + 3))
          {
            uint64_t v426 = *(void *)v418;
            uint64_t v427 = *((void *)v418 + 1);
            char v428 = v418[16];
            sub_100190CC4(*(void *)v418, v427, v428);
            *uint64_t v417 = v426;
            v417[1] = v427;
            *((unsigned char *)v417 + 16) = v428;
            v417[3] = *((void *)v418 + 3);
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v442 = *((_OWORD *)v418 + 1);
            *(_OWORD *)uint64_t v417 = *(_OWORD *)v418;
            *((_OWORD *)v417 + 1) = v442;
          }
          uint64_t v443 = *((void *)v418 + 4);
          uint64_t v444 = *((void *)v418 + 5);
          uint64_t v445 = *((void *)v418 + 6);
          uint64_t v446 = *((void *)v418 + 7);
          uint64_t v447 = *((void *)v418 + 8);
          uint64_t v448 = *((void *)v418 + 9);
          uint64_t v449 = *((void *)v418 + 10);
          char v723 = v418[89];
          uint64_t v450 = v418[88];
          sub_10033A9E8(v443, v444, v445, v446, v447, v448, v449, v450, v723);
          v417[4] = v443;
          v417[5] = v444;
          v417[6] = v445;
          v417[7] = v446;
          v417[8] = v447;
          v417[9] = v448;
          v417[10] = v449;
          *((unsigned char *)v417 + 88) = v450;
          *((unsigned char *)v417 + 89) = v723;
          uint64_t v7 = v728;
          uint64_t v6 = v731;
          goto LABEL_290;
        case 6u:
          uint64_t v423 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_179:
          uint64_t v420 = v423;
          uint64_t v421 = v423;
          goto LABEL_180;
        case 7u:
          uint64_t v722 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
          int v429 = swift_getEnumCaseMultiPayload();
          if (v429 != 1)
          {
            if (v429)
            {
              memcpy(v417, v418, *(void *)(*(void *)(v722 - 8) + 64));
            }
            else
            {
              uint64_t v430 = *((void *)v418 + 1);
              *uint64_t v417 = *(void *)v418;
              v417[1] = v430;
              v417[2] = *((void *)v418 + 2);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_storeEnumTagMultiPayload();
            }
            uint64_t v7 = v728;
LABEL_181:
            uint64_t v6 = v731;
LABEL_291:
            swift_storeEnumTagMultiPayload();
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v417, 0, 1, v186);
            goto LABEL_292;
          }
          uint64_t v685 = v169;
          uint64_t v451 = *((void *)v418 + 1);
          *uint64_t v417 = *(void *)v418;
          v417[1] = v451;
          uint64_t v452 = (int *)type metadata accessor for ConditionDetailMapViewModel();
          uint64_t v453 = v452[5];
          __srcc = v417;
          uint64_t v454 = (char *)v417 + v453;
          uint64_t v455 = &v418[v453];
          swift_bridgeObjectRetain();
          uint64_t v456 = __srcc;
          ((void (*)(char *, char *, uint64_t))v704)(v454, v455, v706);
          uint64_t v457 = v452[6];
          uint64_t v458 = (void *)((char *)__srcc + v457);
          uint64_t v459 = &v418[v457];
          uint64_t v460 = type metadata accessor for WeatherData(0);
          uint64_t v674 = v186;
          uint64_t v681 = v170;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v459, 1, v460))
          {
            uint64_t v461 = sub_10017DF08(&qword_100E63850);
            memcpy(v458, v459, *(void *)(*(void *)(v461 - 8) + 64));
            goto LABEL_289;
          }
          uint64_t v707 = v452;
          uint64_t v481 = v459;
          uint64_t v482 = *(void *)v459;
          uint64_t v483 = *((void *)v459 + 1);
          *uint64_t v458 = v482;
          v458[1] = v483;
          uint64_t v709 = v481;
          uint64_t v713 = (int *)v460;
          uint64_t v484 = *(int *)(v460 + 20);
          uint64_t v485 = (char *)v458 + v484;
          uint64_t v486 = (char *)v481 + v484;
          uint64_t v487 = type metadata accessor for Locale();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v486, 1, v487))
          {
            uint64_t v488 = sub_10017DF08(&qword_100E63730);
            memcpy(v485, v486, *(void *)(*(void *)(v488 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v487 - 8) + 16))(v485, v486, v487);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v485, 0, 1, v487);
          }
          uint64_t v570 = v713[6];
          uint64_t v571 = (char *)v458 + v570;
          uint64_t v572 = (uint64_t)v709 + v570;
          uint64_t v573 = type metadata accessor for WeatherDataModel();
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v573 - 8) + 16))(v571, v572, v573);
          uint64_t v574 = v713[7];
          uint64_t v575 = (char *)v458 + v574;
          uint64_t v576 = (char *)v709 + v574;
          uint64_t v577 = sub_10017DF08(&qword_100E63738);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v576, 1, v577))
          {
            uint64_t v578 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v575, v576, *(void *)(*(void *)(v578 - 8) + 64));
            uint64_t v579 = v702;
          }
          else
          {
            uint64_t v579 = v702;
            v700(v575, v576, v702);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v575, 0, 1, v577);
          }
          uint64_t v590 = v713[8];
          uint64_t v591 = (void *)((char *)v458 + v590);
          uint64_t v592 = (void *)((char *)v709 + v590);
          uint64_t v593 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          int v594 = swift_getEnumCaseMultiPayload();
          if (v594 == 1)
          {
            uint64_t v602 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v602 - 8) + 16))(v591, v592, v602);
          }
          else
          {
            if (v594)
            {
              memcpy(v591, v592, *(void *)(*(void *)(v593 - 8) + 64));
              goto LABEL_269;
            }
            uint64_t v595 = v592[1];
            *uint64_t v591 = *v592;
            v591[1] = v595;
            swift_bridgeObjectRetain();
          }
          swift_storeEnumTagMultiPayload();
LABEL_269:
          uint64_t v603 = v713[9];
          uint64_t v604 = (char *)v458 + v603;
          uint64_t v605 = (char *)v709 + v603;
          uint64_t v606 = type metadata accessor for WeatherDataOverrides();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v605, 1, v606))
          {
            uint64_t v607 = sub_10017DF08(&qword_100E63740);
            memcpy(v604, v605, *(void *)(*(void *)(v607 - 8) + 64));
          }
          else
          {
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v605, 1, v579))
            {
              uint64_t v608 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v604, v605, *(void *)(*(void *)(v608 - 8) + 64));
            }
            else
            {
              v700(v604, v605, v579);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v604, 0, 1, v579);
            }
            uint64_t v616 = *(int *)(v606 + 20);
            uint64_t v617 = &v604[v616];
            uint64_t v618 = &v605[v616];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v618, 1, v579))
            {
              uint64_t v619 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v617, v618, *(void *)(*(void *)(v619 - 8) + 64));
            }
            else
            {
              v700(v617, v618, v579);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v617, 0, 1, v579);
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v604, 0, 1, v606);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v458, 0, 1, (uint64_t)v713);
          uint64_t v456 = __srcc;
          uint64_t v452 = v707;
LABEL_289:
          uint64_t v623 = v452[7];
          uint64_t v624 = (void *)((char *)v456 + v623);
          uint64_t v625 = &v418[v623];
          uint64_t v626 = *((void *)v625 + 1);
          *uint64_t v624 = *(void *)v625;
          v624[1] = v626;
          uint64_t v627 = v452[8];
          uint64_t v628 = (char *)__srcc + v627;
          uint64_t v629 = &v418[v627];
          uint64_t v630 = v452;
          uint64_t v631 = type metadata accessor for WeatherMapOverlayKind();
          uint64_t v632 = *(void (**)(char *, char *, uint64_t))(*(void *)(v631 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v633 = v628;
          uint64_t v417 = __srcc;
          v632(v633, v629, v631);
          *((unsigned char *)__srcc + v630[9]) = v418[v630[9]];
          swift_storeEnumTagMultiPayload();
          uint64_t v7 = v728;
          uint64_t v6 = v731;
LABEL_290:
          uint64_t v170 = v681;
          uint64_t v169 = v685;
          uint64_t v182 = v698;
          uint64_t v186 = v674;
          goto LABEL_291;
        default:
          uint64_t v420 = v690;
          uint64_t v421 = v690;
LABEL_180:
          (*(void (**)(void *, char *, uint64_t))(*(void *)(v421 - 8) + 16))(v417, v418, v420);
          goto LABEL_181;
      }
    }
    uint64_t v732 = v6;
    uint64_t v729 = v7;
    uint64_t v66 = v19[1];
    *char v18 = *v19;
    v18[1] = v66;
    uint64_t v67 = v19[3];
    v18[2] = v19[2];
    v18[3] = v67;
    uint64_t v68 = (int *)_s10PolarModelVMa();
    uint64_t v69 = v68[6];
    uint64_t v70 = (char *)v18 + v69;
    uint64_t v71 = (char *)v19 + v69;
    uint64_t v72 = type metadata accessor for PolarType();
    uint64_t v734 = v18;
    uint64_t v73 = *(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v73(v70, v71, v72);
    uint64_t v74 = v68[7];
    char v75 = (char *)v734 + v74;
    uint64_t v76 = (char *)v19 + v74;
    uint64_t v77 = type metadata accessor for Date();
    uint64_t v699 = *(void (**)(char *, char *))(*(void *)(v77 - 8) + 16);
    uint64_t v701 = v77;
    v699(v75, v76);
    uint64_t v78 = v68[8];
    char v79 = (char *)v734 + v78;
    uint64_t v80 = (char *)v19 + v78;
    uint64_t v81 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16))(v79, v80, v81);
    uint64_t v82 = v68[9];
    uint64_t v83 = (char *)v734 + v82;
    uint64_t v84 = (char *)v19 + v82;
    uint64_t v85 = type metadata accessor for AttributedString();
    uint64_t v708 = *(void (**)(char *, char *))(*(void *)(v85 - 8) + 16);
    uint64_t v711 = v85;
    v708(v83, v84);
    *(void *)((char *)v734 + v68[10]) = *(void *)((char *)v19 + v68[10]);
    uint64_t v86 = v68[11];
    uint64_t v87 = (void *)((char *)v734 + v86);
    uint64_t v88 = (void *)((char *)v19 + v86);
    uint64_t v89 = v88[1];
    *uint64_t v87 = *v88;
    v87[1] = v89;
    uint64_t v90 = v68[12];
    uint64_t v91 = (char *)v734 + v90;
    uint64_t v92 = (char *)v19 + v90;
    uint64_t v93 = type metadata accessor for SunriseSunsetDetailChartViewModel();
    uint64_t v94 = *(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v94(v91, v92, v93);
    uint64_t v95 = v734;
    uint64_t v96 = v68[13];
    uint64_t v97 = (char *)v734 + v96;
    uint64_t v98 = (char *)v19 + v96;
    uint64_t v99 = type metadata accessor for Location();
    uint64_t v703 = *(void (**)(char *, char *))(*(void *)(v99 - 8) + 16);
    uint64_t v705 = v99;
    v703(v97, v98);
    uint64_t v100 = v68[14];
    uint64_t v101 = (char *)v734 + v100;
    uint64_t v102 = (char *)v19 + v100;
    uint64_t v103 = type metadata accessor for DaylightStringBuilder();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 16))(v101, v102, v103);
    uint64_t v104 = v68[15];
    uint64_t v105 = (char *)v734 + v104;
    uint64_t v106 = (char *)v19 + v104;
    uint64_t v107 = type metadata accessor for OverviewTableViewModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 16))(v105, v106, v107);
    uint64_t v108 = v68[16];
    uint64_t v109 = (void *)((char *)v734 + v108);
    uint64_t v110 = (void *)((char *)v19 + v108);
    uint64_t v111 = type metadata accessor for DetailComponentContainerViewModel();
    uint64_t v719 = v111;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v110, 1, v111))
    {
      uint64_t v112 = sub_10017DF08(&qword_100E66E28);
      memcpy(v109, v110, *(void *)(*(void *)(v112 - 8) + 64));
      uint64_t v7 = v729;
    }
    else
    {
      uint64_t v115 = v110[1];
      if (v115)
      {
        *uint64_t v109 = *v110;
        v109[1] = v115;
        uint64_t v116 = v110[3];
        v109[2] = v110[2];
        v109[3] = v116;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v128 = *((_OWORD *)v110 + 1);
        *(_OWORD *)uint64_t v109 = *(_OWORD *)v110;
        *((_OWORD *)v109 + 1) = v128;
      }
      uint64_t v129 = *(int *)(v111 + 20);
      uint64_t v130 = (void *)((char *)v109 + v129);
      uint64_t v131 = (void *)((char *)v110 + v129);
      uint64_t v132 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v133 = v131[1];
        *uint64_t v130 = *v131;
        v130[1] = v133;
        uint64_t v717 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v134 = v717[5];
        uint64_t v135 = (char *)v130 + v134;
        uint64_t v136 = (char *)v131 + v134;
        uint64_t v137 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        uint64_t v727 = a1;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v136, 1, v137))
        {
          uint64_t v138 = sub_10017DF08(&qword_100E749B0);
          memcpy(v135, v136, *(void *)(*(void *)(v138 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 16))(v135, v136, v137);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v135, 0, 1, v137);
        }
        uint64_t v150 = v717[6];
        uint64_t v151 = (void *)((char *)v130 + v150);
        uint64_t v152 = (void *)((char *)v131 + v150);
        uint64_t v153 = v152[1];
        *uint64_t v151 = *v152;
        v151[1] = v153;
        uint64_t v154 = v717[7];
        uint64_t v689 = (char *)v130 + v154;
        uint64_t v155 = (char *)v131 + v154;
        uint64_t v156 = *(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 16);
        swift_bridgeObjectRetain();
        v156(v689, v155, v137);
        uint64_t v157 = v717[8];
        uint64_t v158 = (char *)v130 + v157;
        long long v159 = (char *)v131 + v157;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v131 + v157, 1, v137))
        {
          uint64_t v160 = sub_10017DF08(&qword_100E749B0);
          memcpy(v158, v159, *(void *)(*(void *)(v160 - 8) + 64));
        }
        else
        {
          v156(v158, v159, v137);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v158, 0, 1, v137);
        }
        uint64_t v6 = v732;
        uint64_t v111 = v719;
        a1 = v727;
        *((unsigned char *)v130 + v717[9]) = *((unsigned char *)v131 + v717[9]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v130, v131, *(void *)(*(void *)(v132 - 8) + 64));
      }
      uint64_t v189 = *(int *)(v111 + 24);
      uint64_t v190 = (char *)v109 + v189;
      uint64_t v191 = (char *)v110 + v189;
      uint64_t v192 = type metadata accessor for DetailComponentAction();
      uint64_t v95 = v734;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v191, 1, v192))
      {
        uint64_t v193 = sub_10017DF08(&qword_100E73810);
        memcpy(v190, v191, *(void *)(*(void *)(v193 - 8) + 64));
      }
      else
      {
        uint64_t v194 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v194 - 8) + 16))(v190, v191, v194);
        uint64_t v195 = sub_10017DF08(&qword_100E66478);
        v190[*(int *)(v195 + 48)] = v191[*(int *)(v195 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v190, 0, 1, v192);
      }
      uint64_t v7 = v729;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v109, 0, 1, v111);
    }
    uint64_t v196 = *(int *)(sub_10017DF08(&qword_100E92130) + 48);
    uint64_t v197 = (void *)((char *)v95 + v196);
    uint64_t v198 = (void *)((char *)v19 + v196);
    uint64_t v199 = type metadata accessor for ConditionDetailPlatterViewModel(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v198, 1, v199))
    {
      uint64_t v200 = sub_10017DF08(&qword_100E66E40);
      memcpy(v197, v198, *(void *)(*(void *)(v200 - 8) + 64));
      goto LABEL_301;
    }
    uint64_t v201 = v198;
    uint64_t v202 = *v198;
    uint64_t v203 = v201[1];
    uint64_t v204 = (int *)v199;
    unsigned __int8 v205 = *((unsigned char *)v201 + 16);
    sub_10018F6EC(v202, v203, v205);
    *uint64_t v197 = v202;
    v197[1] = v203;
    *((unsigned char *)v197 + 16) = v205;
    uint64_t v206 = v201[4];
    v197[3] = v201[3];
    v197[4] = v206;
    uint64_t v718 = v204;
    uint64_t v207 = v204[6];
    uint64_t v208 = (char *)v197 + v207;
    uint64_t v691 = v201;
    uint64_t v209 = (char *)v201 + v207;
    uint64_t v210 = type metadata accessor for WeatherDescription();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v209, 1, v210))
    {
      uint64_t v211 = v210;
      uint64_t v212 = sub_10017DF08(&qword_100E63758);
      memcpy(v208, v209, *(void *)(*(void *)(v212 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v210 - 8) + 16))(v208, v209, v210);
      uint64_t v211 = v210;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v208, 0, 1, v210);
    }
    uint64_t v213 = v204[7];
    long long v214 = (uint64_t *)((char *)v197 + v213);
    uint64_t v215 = v201;
    uint64_t v216 = (uint64_t *)((char *)v201 + v213);
    uint64_t v217 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    __srca = v216;
    uint64_t v677 = v211;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v227 = v216[1];
        *long long v214 = *v216;
        v214[1] = v227;
        swift_bridgeObjectRetain();
        goto LABEL_82;
      case 2u:
        ((void (*)(uint64_t *, uint64_t *, uint64_t))v708)(v214, v216, v711);
        goto LABEL_82;
      case 3u:
        uint64_t v228 = sub_10017DF08(&qword_100E73808);
        goto LABEL_81;
      case 4u:
        uint64_t v229 = v216;
        uint64_t v230 = v216[1];
        uint64_t v671 = v197;
        if (v230)
        {
          *long long v214 = *v216;
          v214[1] = v230;
          uint64_t v231 = v214;
          uint64_t v232 = v216[3];
          v231[2] = v216[2];
          v231[3] = v232;
          swift_bridgeObjectRetain();
          long long v214 = v231;
          swift_bridgeObjectRetain();
          uint64_t v229 = v216;
        }
        else
        {
          long long v261 = *((_OWORD *)v216 + 1);
          *(_OWORD *)long long v214 = *(_OWORD *)v216;
          *((_OWORD *)v214 + 1) = v261;
        }
        uint64_t v262 = *(int *)(v719 + 20);
        char v263 = (uint64_t *)((char *)v214 + v262);
        uint64_t v264 = (uint64_t *)((char *)v229 + v262);
        uint64_t v265 = type metadata accessor for NewsArticleComponentViewModel(0);
        uint64_t v667 = v217;
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v663 = v214;
          uint64_t v266 = v264[1];
          *char v263 = *v264;
          v263[1] = v266;
          uint64_t v660 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v267 = v660[5];
          uint64_t v268 = (char *)v263 + v267;
          long long v269 = (char *)v264 + v267;
          uint64_t v270 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v269, 1, v270))
          {
            uint64_t v271 = sub_10017DF08(&qword_100E749B0);
            memcpy(v268, v269, *(void *)(*(void *)(v271 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v270 - 8) + 16))(v268, v269, v270);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v268, 0, 1, v270);
          }
          uint64_t v314 = v660[6];
          id v315 = (void *)((char *)v263 + v314);
          v316 = (void *)((char *)v264 + v314);
          uint64_t v317 = v316[1];
          *id v315 = *v316;
          v315[1] = v317;
          uint64_t v318 = v660[7];
          uint64_t v319 = (char *)v263 + v318;
          uint64_t v320 = (char *)v264 + v318;
          v321 = *(void (**)(char *, char *, uint64_t))(*(void *)(v270 - 8) + 16);
          swift_bridgeObjectRetain();
          v321(v319, v320, v270);
          uint64_t v322 = v660[8];
          long long v323 = (char *)v263 + v322;
          uint64_t v324 = (char *)v264 + v322;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v264 + v322, 1, v270))
          {
            uint64_t v325 = sub_10017DF08(&qword_100E749B0);
            memcpy(v323, v324, *(void *)(*(void *)(v325 - 8) + 64));
          }
          else
          {
            v321(v323, v324, v270);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v323, 0, 1, v270);
          }
          uint64_t v7 = v729;
          uint64_t v237 = v718;
          long long v214 = v663;
          *((unsigned char *)v263 + v660[9]) = *((unsigned char *)v264 + v660[9]);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v263, v264, *(void *)(*(void *)(v265 - 8) + 64));
          uint64_t v237 = v204;
        }
        uint64_t v333 = *(int *)(v719 + 24);
        uint64_t v334 = (char *)v214 + v333;
        uint64_t v335 = (char *)__srca + v333;
        uint64_t v336 = type metadata accessor for DetailComponentAction();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v335, 1, v336))
        {
          uint64_t v337 = sub_10017DF08(&qword_100E73810);
          memcpy(v334, v335, *(void *)(*(void *)(v337 - 8) + 64));
        }
        else
        {
          uint64_t v338 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v338 - 8) + 16))(v334, v335, v338);
          uint64_t v339 = sub_10017DF08(&qword_100E66478);
          v334[*(int *)(v339 + 48)] = v335[*(int *)(v339 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v334, 0, 1, v336);
        }
        uint64_t v217 = v667;
        uint64_t v197 = v671;
        uint64_t v215 = v201;
        goto LABEL_212;
      case 5u:
        uint64_t v666 = v217;
        uint64_t v672 = v197;
        uint64_t v233 = v216;
        if (v216[3])
        {
          uint64_t v235 = *v216;
          uint64_t v234 = v216[1];
          char v236 = *((unsigned char *)v216 + 16);
          sub_100190CC4(*v216, v234, v236);
          *long long v214 = v235;
          v214[1] = v234;
          *((unsigned char *)v214 + 16) = v236;
          v214[3] = v216[3];
          swift_bridgeObjectRetain();
          uint64_t v233 = v216;
        }
        else
        {
          long long v272 = *((_OWORD *)v216 + 1);
          *(_OWORD *)long long v214 = *(_OWORD *)v216;
          *((_OWORD *)v214 + 1) = v272;
        }
        uint64_t v274 = v233[4];
        uint64_t v273 = v233[5];
        uint64_t v275 = v233[6];
        uint64_t v276 = v233[7];
        uint64_t v277 = v233[8];
        uint64_t v278 = v233[9];
        uint64_t v279 = v233[10];
        char __srcd = *((unsigned char *)v233 + 89);
        unsigned __int8 v280 = *((unsigned char *)v233 + 88);
        sub_10033A9E8(v274, v273, v275, v276, v277, v278, v279, v280, __srcd);
        v214[4] = v274;
        v214[5] = v273;
        v214[6] = v275;
        v214[7] = v276;
        v214[8] = v277;
        v214[9] = v278;
        v214[10] = v279;
        *((unsigned char *)v214 + 88) = v280;
        *((unsigned char *)v214 + 89) = __srcd;
        uint64_t v7 = v729;
        goto LABEL_211;
      case 6u:
        uint64_t v228 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_81:
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v228 - 8) + 16))(v214, v216, v228);
        goto LABEL_82;
      case 7u:
        uint64_t v238 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
        int v239 = swift_getEnumCaseMultiPayload();
        if (v239 != 1)
        {
          if (v239)
          {
            memcpy(v214, v216, *(void *)(*(void *)(v238 - 8) + 64));
          }
          else
          {
            uint64_t v240 = v216[1];
            *long long v214 = *v216;
            v214[1] = v240;
            v214[2] = v216[2];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
LABEL_82:
          uint64_t v237 = v718;
LABEL_212:
          swift_storeEnumTagMultiPayload();
          uint64_t v497 = v237[8];
          uint64_t v498 = (uint64_t *)((char *)v197 + v497);
          uint64_t v499 = (char *)v215 + v497;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v215 + v497, 1, v217))
          {
            uint64_t v500 = sub_10017DF08(&qword_100E73818);
            memcpy(v498, v499, *(void *)(*(void *)(v500 - 8) + 64));
            uint64_t v6 = v732;
LABEL_300:
            *((unsigned char *)v197 + v237[9]) = *((unsigned char *)v215 + v237[9]);
            *((unsigned char *)v197 + v237[10]) = *((unsigned char *)v215 + v237[10]);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v197, 0, 1, (uint64_t)v237);
            goto LABEL_301;
          }
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              uint64_t v503 = *((void *)v499 + 1);
              *uint64_t v498 = *(void *)v499;
              v498[1] = v503;
              swift_bridgeObjectRetain();
              goto LABEL_226;
            case 2u:
              ((void (*)(void *, char *, uint64_t))v708)(v498, v499, v711);
              goto LABEL_226;
            case 3u:
              uint64_t v504 = sub_10017DF08(&qword_100E73808);
              goto LABEL_224;
            case 4u:
              uint64_t v505 = *((void *)v499 + 1);
              uint64_t v675 = v197;
              if (v505)
              {
                *uint64_t v498 = *(void *)v499;
                v498[1] = v505;
                v506 = v498;
                uint64_t v507 = *((void *)v499 + 3);
                v506[2] = *((void *)v499 + 2);
                v506[3] = v507;
                swift_bridgeObjectRetain();
                uint64_t v498 = v506;
                swift_bridgeObjectRetain();
              }
              else
              {
                long long v513 = *((_OWORD *)v499 + 1);
                *(_OWORD *)uint64_t v498 = *(_OWORD *)v499;
                *((_OWORD *)v498 + 1) = v513;
              }
              uint64_t v514 = *(int *)(v719 + 20);
              uint64_t v515 = (void *)((char *)v498 + v514);
              uint64_t v516 = &v499[v514];
              uint64_t v517 = type metadata accessor for NewsArticleComponentViewModel(0);
              uint64_t v669 = v217;
              uint64_t v686 = v498;
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                uint64_t v518 = *((void *)v516 + 1);
                *uint64_t v515 = *(void *)v516;
                v515[1] = v518;
                uint64_t v519 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
                uint64_t v520 = v519[5];
                uint64_t v521 = (char *)v515 + v520;
                uint64_t v522 = &v516[v520];
                uint64_t v523 = type metadata accessor for URL();
                swift_bridgeObjectRetain();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v522, 1, v523))
                {
                  uint64_t v524 = sub_10017DF08(&qword_100E749B0);
                  memcpy(v521, v522, *(void *)(*(void *)(v524 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v523 - 8) + 16))(v521, v522, v523);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v521, 0, 1, v523);
                }
                uint64_t v545 = v519[6];
                uint64_t v546 = (void *)((char *)v515 + v545);
                v547 = &v516[v545];
                uint64_t v548 = *((void *)v547 + 1);
                *uint64_t v546 = *(void *)v547;
                v546[1] = v548;
                uint64_t v549 = v519[7];
                uint64_t v550 = (char *)v515 + v549;
                uint64_t v551 = &v516[v549];
                uint64_t v552 = *(void (**)(char *, char *, uint64_t))(*(void *)(v523 - 8) + 16);
                swift_bridgeObjectRetain();
                v552(v550, v551, v523);
                uint64_t v553 = v519[8];
                uint64_t v554 = (char *)v515 + v553;
                uint64_t v555 = &v516[v553];
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v516[v553], 1, v523))
                {
                  uint64_t v556 = sub_10017DF08(&qword_100E749B0);
                  memcpy(v554, v555, *(void *)(*(void *)(v556 - 8) + 64));
                }
                else
                {
                  v552(v554, v555, v523);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v554, 0, 1, v523);
                }
                uint64_t v7 = v729;
                uint64_t v237 = v718;
                uint64_t v498 = v686;
                *((unsigned char *)v515 + v519[9]) = v516[v519[9]];
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(v515, v516, *(void *)(*(void *)(v517 - 8) + 64));
              }
              uint64_t v557 = *(int *)(v719 + 24);
              uint64_t v558 = (char *)v498 + v557;
              uint64_t v559 = &v499[v557];
              uint64_t v560 = type metadata accessor for DetailComponentAction();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v559, 1, v560))
              {
                uint64_t v561 = sub_10017DF08(&qword_100E73810);
                memcpy(v558, v559, *(void *)(*(void *)(v561 - 8) + 64));
              }
              else
              {
                uint64_t v562 = type metadata accessor for URL();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v562 - 8) + 16))(v558, v559, v562);
                uint64_t v563 = sub_10017DF08(&qword_100E66478);
                v558[*(int *)(v563 + 48)] = v559[*(int *)(v563 + 48)];
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v558, 0, 1, v560);
              }
              uint64_t v6 = v732;
              uint64_t v217 = v669;
              uint64_t v197 = v675;
              uint64_t v498 = v686;
              uint64_t v215 = v691;
              goto LABEL_299;
            case 5u:
              uint64_t v668 = v217;
              uint64_t v676 = v197;
              if (*((void *)v499 + 3))
              {
                uint64_t v509 = *(void *)v499;
                uint64_t v508 = *((void *)v499 + 1);
                char v510 = v499[16];
                sub_100190CC4(*(void *)v499, v508, v510);
                *uint64_t v498 = v509;
                v498[1] = v508;
                *((unsigned char *)v498 + 16) = v510;
                v498[3] = *((void *)v499 + 3);
                swift_bridgeObjectRetain();
              }
              else
              {
                long long v525 = *((_OWORD *)v499 + 1);
                *(_OWORD *)uint64_t v498 = *(_OWORD *)v499;
                *((_OWORD *)v498 + 1) = v525;
              }
              uint64_t v527 = *((void *)v499 + 4);
              uint64_t v526 = *((void *)v499 + 5);
              uint64_t v528 = *((void *)v499 + 6);
              uint64_t v529 = *((void *)v499 + 7);
              uint64_t v530 = *((void *)v499 + 8);
              uint64_t v531 = *((void *)v499 + 9);
              uint64_t v532 = *((void *)v499 + 10);
              char v724 = v499[89];
              uint64_t v533 = v499[88];
              sub_10033A9E8(v527, v526, v528, v529, v530, v531, v532, v533, v724);
              v498[4] = v527;
              v498[5] = v526;
              v498[6] = v528;
              v498[7] = v529;
              v498[8] = v530;
              v498[9] = v531;
              v498[10] = v532;
              *((unsigned char *)v498 + 88) = v533;
              *((unsigned char *)v498 + 89) = v724;
              uint64_t v7 = v729;
              goto LABEL_298;
            case 6u:
              uint64_t v504 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_224:
              uint64_t v501 = v504;
              uint64_t v502 = v504;
              goto LABEL_225;
            case 7u:
              uint64_t v730 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
              int v511 = swift_getEnumCaseMultiPayload();
              if (v511 != 1)
              {
                if (v511)
                {
                  memcpy(v498, v499, *(void *)(*(void *)(v730 - 8) + 64));
                }
                else
                {
                  uint64_t v512 = *((void *)v499 + 1);
                  *uint64_t v498 = *(void *)v499;
                  v498[1] = v512;
                  v498[2] = *((void *)v499 + 2);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_storeEnumTagMultiPayload();
                }
                uint64_t v6 = v732;
                goto LABEL_299;
              }
              uint64_t v668 = v217;
              uint64_t v676 = v197;
              uint64_t v687 = v498;
              uint64_t v534 = *((void *)v499 + 1);
              *uint64_t v687 = *(void *)v499;
              v687[1] = v534;
              uint64_t v535 = (int *)type metadata accessor for ConditionDetailMapViewModel();
              uint64_t v536 = v535[5];
              uint64_t v537 = (char *)v687 + v536;
              uint64_t v538 = &v499[v536];
              uint64_t v539 = v687;
              swift_bridgeObjectRetain();
              ((void (*)(char *, char *, uint64_t))v703)(v537, v538, v705);
              uint64_t v540 = v535[6];
              uint64_t v541 = (void *)((char *)v687 + v540);
              uint64_t v542 = &v499[v540];
              uint64_t v543 = type metadata accessor for WeatherData(0);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v542, 1, v543))
              {
                uint64_t v544 = sub_10017DF08(&qword_100E63850);
                memcpy(v541, v542, *(void *)(*(void *)(v544 - 8) + 64));
                goto LABEL_297;
              }
              uint64_t v564 = *((void *)v542 + 1);
              *uint64_t v541 = *(void *)v542;
              v541[1] = v564;
              uint64_t v725 = (int *)v543;
              uint64_t v565 = *(int *)(v543 + 20);
              uint64_t v566 = (char *)v541 + v565;
              uint64_t v714 = v542;
              uint64_t v567 = &v542[v565];
              uint64_t v568 = type metadata accessor for Locale();
              swift_bridgeObjectRetain();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v567, 1, v568))
              {
                uint64_t v569 = sub_10017DF08(&qword_100E63730);
                memcpy(v566, v567, *(void *)(*(void *)(v569 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v568 - 8) + 16))(v566, v567, v568);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v566, 0, 1, v568);
              }
              uint64_t v580 = v725[6];
              uint64_t v581 = (char *)v541 + v580;
              uint64_t v582 = (char *)v714 + v580;
              uint64_t v583 = type metadata accessor for WeatherDataModel();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v583 - 8) + 16))(v581, v582, v583);
              uint64_t v584 = v725[7];
              uint64_t v585 = (char *)v541 + v584;
              v586 = (char *)v714 + v584;
              uint64_t v587 = sub_10017DF08(&qword_100E63738);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v586, 1, v587))
              {
                uint64_t v588 = type metadata accessor for WeatherData.CachingState(0);
                memcpy(v585, v586, *(void *)(*(void *)(v588 - 8) + 64));
                uint64_t v589 = v701;
              }
              else
              {
                uint64_t v589 = v701;
                ((void (*)(char *, char *, uint64_t))v699)(v585, v586, v701);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v585, 0, 1, v587);
              }
              uint64_t v596 = v725[8];
              uint64_t v597 = (void *)((char *)v541 + v596);
              uint64_t v598 = (void *)((char *)v714 + v596);
              uint64_t v599 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
              int v600 = swift_getEnumCaseMultiPayload();
              if (v600 == 1)
              {
                uint64_t v609 = type metadata accessor for WeatherStatisticsModel();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v609 - 8) + 16))(v597, v598, v609);
              }
              else
              {
                if (v600)
                {
                  memcpy(v597, v598, *(void *)(*(void *)(v599 - 8) + 64));
LABEL_276:
                  uint64_t v610 = v725[9];
                  uint64_t v611 = (char *)v541 + v610;
                  uint64_t v612 = (char *)v714 + v610;
                  uint64_t v613 = type metadata accessor for WeatherDataOverrides();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v612, 1, v613))
                  {
                    uint64_t v614 = sub_10017DF08(&qword_100E63740);
                    memcpy(v611, v612, *(void *)(*(void *)(v614 - 8) + 64));
                  }
                  else
                  {
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v612, 1, v589))
                    {
                      uint64_t v615 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                      memcpy(v611, v612, *(void *)(*(void *)(v615 - 8) + 64));
                    }
                    else
                    {
                      ((void (*)(char *, char *, uint64_t))v699)(v611, v612, v589);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v611, 0, 1, v589);
                    }
                    uint64_t v620 = *(int *)(v613 + 20);
                    uint64_t v715 = &v611[v620];
                    uint64_t v621 = &v612[v620];
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v621, 1, v701))
                    {
                      uint64_t v622 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                      memcpy(v715, v621, *(void *)(*(void *)(v622 - 8) + 64));
                    }
                    else
                    {
                      ((void (*)(char *, char *, uint64_t))v699)(v715, v621, v701);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v715, 0, 1, v701);
                    }
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v611, 0, 1, v613);
                  }
                  uint64_t v539 = v687;
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v541, 0, 1, (uint64_t)v725);
LABEL_297:
                  uint64_t v634 = v535[7];
                  uint64_t v635 = (void *)((char *)v539 + v634);
                  uint64_t v636 = &v499[v634];
                  uint64_t v637 = *((void *)v636 + 1);
                  *uint64_t v635 = *(void *)v636;
                  v635[1] = v637;
                  uint64_t v638 = v535[8];
                  uint64_t v639 = (char *)v687 + v638;
                  uint64_t v640 = &v499[v638];
                  uint64_t v641 = type metadata accessor for WeatherMapOverlayKind();
                  uint64_t v642 = v535;
                  uint64_t v643 = *(void (**)(char *, char *, uint64_t))(*(void *)(v641 - 8) + 16);
                  uint64_t v498 = v687;
                  swift_bridgeObjectRetain();
                  v643(v639, v640, v641);
                  *((unsigned char *)v687 + v642[9]) = v499[v642[9]];
                  swift_storeEnumTagMultiPayload();
LABEL_298:
                  uint64_t v6 = v732;
                  uint64_t v217 = v668;
                  uint64_t v197 = v676;
                  uint64_t v215 = v691;
                  uint64_t v237 = v718;
LABEL_299:
                  swift_storeEnumTagMultiPayload();
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v498, 0, 1, v217);
                  goto LABEL_300;
                }
                uint64_t v601 = v598[1];
                *uint64_t v597 = *v598;
                v597[1] = v601;
                swift_bridgeObjectRetain();
              }
              swift_storeEnumTagMultiPayload();
              goto LABEL_276;
            default:
              uint64_t v501 = v677;
              uint64_t v502 = v677;
LABEL_225:
              (*(void (**)(void *, char *, uint64_t))(*(void *)(v502 - 8) + 16))(v498, v499, v501);
LABEL_226:
              uint64_t v6 = v732;
              goto LABEL_299;
          }
        }
        uint64_t v666 = v217;
        uint64_t v672 = v197;
        uint64_t v665 = v214;
        uint64_t v291 = v216[1];
        *uint64_t v665 = *v216;
        v665[1] = v291;
        uint64_t v292 = (int *)type metadata accessor for ConditionDetailMapViewModel();
        uint64_t v293 = v292[5];
        uint64_t v294 = (char *)v665 + v293;
        uint64_t v295 = (char *)v216 + v293;
        uint64_t v296 = v665;
        swift_bridgeObjectRetain();
        ((void (*)(char *, char *, uint64_t))v703)(v294, v295, v705);
        uint64_t v297 = v292[6];
        uint64_t v298 = (uint64_t *)((char *)v665 + v297);
        uint64_t v299 = (uint64_t *)((char *)__srca + v297);
        uint64_t v300 = type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v299, 1, v300))
        {
          uint64_t v301 = sub_10017DF08(&qword_100E63850);
          memcpy(v298, v299, *(void *)(*(void *)(v301 - 8) + 64));
          goto LABEL_210;
        }
        uint64_t v348 = v299;
        uint64_t v349 = *v299;
        uint64_t v350 = v299[1];
        *uint64_t v298 = v349;
        v298[1] = v350;
        uint64_t v651 = (int *)v300;
        uint64_t v656 = (uint64_t)v298;
        uint64_t v351 = *(int *)(v300 + 20);
        uint64_t v352 = (char *)v298 + v351;
        uint64_t v649 = v348;
        uint64_t v353 = (char *)v348 + v351;
        uint64_t v354 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v353, 1, v354))
        {
          uint64_t v355 = sub_10017DF08(&qword_100E63730);
          memcpy(v352, v353, *(void *)(*(void *)(v355 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v354 - 8) + 16))(v352, v353, v354);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v352, 0, 1, v354);
        }
        uint64_t v364 = v651[6];
        uint64_t v365 = v656 + v364;
        uint64_t v366 = (uint64_t)v649 + v364;
        uint64_t v367 = type metadata accessor for WeatherDataModel();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v367 - 8) + 16))(v365, v366, v367);
        uint64_t v368 = v651[7];
        uint64_t v369 = (void *)(v656 + v368);
        uint64_t v370 = (char *)v649 + v368;
        uint64_t v371 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v370, 1, v371))
        {
          uint64_t v372 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v369, v370, *(void *)(*(void *)(v372 - 8) + 64));
          uint64_t v373 = v701;
        }
        else
        {
          uint64_t v373 = v701;
          ((void (*)(void *, char *, uint64_t))v699)(v369, v370, v701);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v369, 0, 1, v371);
        }
        uint64_t v380 = v651[8];
        v381 = (void *)(v656 + v380);
        char v382 = (uint64_t *)((char *)v649 + v380);
        uint64_t v383 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int v384 = swift_getEnumCaseMultiPayload();
        if (v384 == 1)
        {
          uint64_t v393 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v393 - 8) + 16))(v381, v382, v393);
        }
        else
        {
          if (v384)
          {
            memcpy(v381, v382, *(void *)(*(void *)(v383 - 8) + 64));
            goto LABEL_152;
          }
          uint64_t v385 = v382[1];
          void *v381 = *v382;
          v381[1] = v385;
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
LABEL_152:
        uint64_t v394 = v651[9];
        uint64_t v395 = (char *)(v656 + v394);
        uint64_t v396 = (char *)v649 + v394;
        uint64_t v397 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v396, 1, v397))
        {
          uint64_t v398 = sub_10017DF08(&qword_100E63740);
          memcpy(v395, v396, *(void *)(*(void *)(v398 - 8) + 64));
        }
        else
        {
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v396, 1, v373))
          {
            uint64_t v399 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v395, v396, *(void *)(*(void *)(v399 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v699)(v395, v396, v373);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v395, 0, 1, v373);
          }
          uint64_t v404 = *(int *)(v397 + 20);
          uint64_t v405 = &v395[v404];
          id v406 = &v396[v404];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v406, 1, v373))
          {
            uint64_t v407 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v405, v406, *(void *)(*(void *)(v407 - 8) + 64));
          }
          else
          {
            ((void (*)(char *, char *, uint64_t))v699)(v405, v406, v373);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v405, 0, 1, v373);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v395, 0, 1, v397);
        }
        uint64_t v296 = v665;
        _s7Weather24LocationCompositionStateOwst_0(v656, 0, 1, (uint64_t)v651);
LABEL_210:
        uint64_t v489 = v292[7];
        uint64_t v490 = (uint64_t *)((char *)v296 + v489);
        uint64_t v491 = (uint64_t *)((char *)__srca + v489);
        uint64_t v492 = v491[1];
        *uint64_t v490 = *v491;
        v490[1] = v492;
        uint64_t v493 = v292[8];
        uint64_t v657 = (char *)v665 + v493;
        uint64_t v494 = (char *)__srca + v493;
        uint64_t v495 = type metadata accessor for WeatherMapOverlayKind();
        uint64_t v496 = *(void (**)(char *, char *, uint64_t))(*(void *)(v495 - 8) + 16);
        swift_bridgeObjectRetain();
        v496(v657, v494, v495);
        *((unsigned char *)v665 + v292[9]) = *((unsigned char *)__srca + v292[9]);
        swift_storeEnumTagMultiPayload();
LABEL_211:
        uint64_t v217 = v666;
        uint64_t v197 = v672;
        uint64_t v215 = v691;
        uint64_t v237 = v718;
        goto LABEL_212;
      default:
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v211 - 8) + 16))(v214, v216, v211);
        goto LABEL_82;
    }
  }
  a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return a1;
}