uint64_t sub_100782544(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  void (*v64)(char *, char *, uint64_t);
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  void (*v74)(char *, char *, uint64_t);
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  void (*v79)(char *, char *, uint64_t);
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  void *v109;
  uint64_t v110;
  void *v111;
  int *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  void (*v119)(char *, char *, uint64_t);
  uint64_t v120;
  char *v121;
  char *v122;
  int EnumCaseMultiPayload;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  int *v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  void (*v133)(char *, char *, uint64_t);
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  void *v158;
  void *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t result;
  char *v166;
  int *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  int *v171;
  uint64_t v172;

  v6 = type metadata accessor for DetailChartLollipopPoint();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for ChartProxy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[7];
  v167 = a3;
  v168 = a2;
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  v169 = a1;
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for ConditionDetailChartHeaderStringModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  v15 = type metadata accessor for ConditionDetailChartHeaderViewModel();
  *(unsigned char *)(v12 + *(int *)(v15 + 20)) = *(unsigned char *)(v13 + *(int *)(v15 + 20));
  *(unsigned char *)(v12 + *(int *)(v15 + 24)) = *(unsigned char *)(v13 + *(int *)(v15 + 24));
  v171 = (int *)type metadata accessor for DetailChartViewModel();
  v172 = v12;
  v16 = v171[5];
  v17 = (char *)(v12 + v16);
  v170 = v13;
  v18 = (char *)(v13 + v16);
  v19 = *((void *)v18 + 1);
  *(void *)v17 = *(void *)v18;
  *((void *)v17 + 1) = v19;
  v20 = (int *)type metadata accessor for ChartViewModel(0);
  v21 = v20[5];
  v22 = &v17[v21];
  v23 = &v18[v21];
  v24 = type metadata accessor for ChartKind();
  v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
  swift_bridgeObjectRetain();
  v25(v22, v23, v24);
  *(void *)&v17[v20[6]] = *(void *)&v18[v20[6]];
  v26 = v20[7];
  v27 = &v17[v26];
  v28 = &v18[v26];
  v29 = type metadata accessor for DetailChartExtrema();
  v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
  swift_bridgeObjectRetain();
  v30(v27, v28, v29);
  *(void *)&v17[v20[8]] = *(void *)&v18[v20[8]];
  *(void *)&v17[v20[9]] = *(void *)&v18[v20[9]];
  *(_OWORD *)&v17[v20[10]] = *(_OWORD *)&v18[v20[10]];
  v31 = v20[11];
  v32 = &v17[v31];
  v33 = &v18[v31];
  v34 = *(void **)v33;
  v35 = (void *)*((void *)v33 + 1);
  v36 = *((void *)v33 + 2);
  LOBYTE(v30) = v33[24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10027D4F8(v34, v35, v36, v30);
  *(void *)v32 = v34;
  *((void *)v32 + 1) = v35;
  *((void *)v32 + 2) = v36;
  v32[24] = (char)v30;
  v37 = v20[12];
  v38 = &v17[v37];
  v39 = &v18[v37];
  *(void *)&v17[v37] = *(void *)&v18[v37];
  v40 = *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  v41 = &v38[v40];
  v42 = &v39[v40];
  v43 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43))
  {
    v44 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v43);
  }
  v45 = v20[13];
  v46 = &v17[v45];
  v47 = &v18[v45];
  *(void *)v46 = *(void *)v47;
  v46[8] = v47[8];
  v48 = v20[14];
  v49 = &v17[v48];
  v50 = &v18[v48];
  v51 = sub_10017DF08(&qword_100E6BF10);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v51))
  {
    v52 = type metadata accessor for ChartViewModel.Background(0);
    memcpy(v49, v50, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    *(void *)v49 = *(void *)v50;
    v53 = *(int *)(v51 + 48);
    v54 = &v49[v53];
    v55 = &v50[v53];
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v55, 1, v43))
    {
      v56 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v54, v55, v43);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v54, 0, 1, v43);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, v51);
  }
  *(void *)&v17[v20[15]] = *(void *)&v18[v20[15]];
  v57 = v20[16];
  v58 = &v17[v57];
  v59 = &v18[v57];
  v60 = type metadata accessor for ChartDarkeningScrim();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
  *(void *)&v17[v20[17]] = *(void *)&v18[v20[17]];
  v61 = v20[18];
  v62 = &v17[v61];
  v63 = &v18[v61];
  v64 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
  swift_bridgeObjectRetain();
  v64(v62, v63, v43);
  v64(&v17[v20[19]], &v18[v20[19]], v43);
  v64(&v17[v20[20]], &v18[v20[20]], v43);
  v65 = v20[21];
  v66 = &v17[v65];
  v67 = &v18[v65];
  v68 = type metadata accessor for DetailChartDataElement();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v67, 1, v68))
  {
    v69 = sub_10017DF08(&qword_100E6B640);
    memcpy(v66, v67, *(void *)(*(void *)(v69 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v66, v67, v68);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v66, 0, 1, v68);
  }
  *(void *)&v17[v20[22]] = *(void *)&v18[v20[22]];
  v70 = v20[23];
  v71 = &v17[v70];
  v72 = &v18[v70];
  v73 = type metadata accessor for ChartPeakMarkStyle();
  v74 = *(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16);
  swift_bridgeObjectRetain();
  v74(v71, v72, v73);
  *(void *)&v17[v20[24]] = *(void *)&v18[v20[24]];
  *(void *)&v17[v20[25]] = *(void *)&v18[v20[25]];
  v75 = v20[26];
  v76 = &v17[v75];
  v77 = &v18[v75];
  v78 = type metadata accessor for ChartViewModelInterpolationMode();
  v79 = *(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16);
  swift_bridgeObjectRetain();
  v79(v76, v77, v78);
  v80 = v20[27];
  v81 = &v17[v80];
  v82 = &v18[v80];
  v83 = type metadata accessor for ChartPastDataTreatment();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16))(v81, v82, v83);
  v84 = v20[28];
  v85 = &v17[v84];
  v86 = &v18[v84];
  v87 = *((void *)v86 + 1);
  *(void *)v85 = *(void *)v86;
  *((void *)v85 + 1) = v87;
  v88 = v20[29];
  v89 = &v17[v88];
  v90 = &v18[v88];
  v91 = *((void *)v90 + 1);
  *(void *)v89 = *(void *)v90;
  *((void *)v89 + 1) = v91;
  v92 = v20[30];
  v93 = &v17[v92];
  v94 = &v18[v92];
  v95 = *((void *)v94 + 1);
  *(void *)v93 = *(void *)v94;
  *((void *)v93 + 1) = v95;
  v96 = v20[31];
  v97 = &v17[v96];
  v98 = &v18[v96];
  v99 = *((void *)v98 + 1);
  *(void *)v97 = *(void *)v98;
  *((void *)v97 + 1) = v99;
  v100 = v20[32];
  v101 = &v17[v100];
  v102 = &v18[v100];
  v103 = *((void *)v102 + 1);
  *(void *)v101 = *(void *)v102;
  *((void *)v101 + 1) = v103;
  v104 = v20[33];
  v105 = &v17[v104];
  v106 = &v18[v104];
  v107 = *((void *)v106 + 1);
  *(void *)v105 = *(void *)v106;
  *((void *)v105 + 1) = v107;
  v108 = v171[6];
  v109 = (void *)(v172 + v108);
  v110 = v170;
  v111 = (void *)(v170 + v108);
  v112 = (int *)type metadata accessor for LollipopViewModel();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v111, 1, (uint64_t)v112))
  {
    v113 = sub_10017DF08(&qword_100E82140);
    memcpy(v109, v111, *(void *)(*(void *)(v113 - 8) + 64));
    goto LABEL_22;
  }
  v114 = v111[1];
  *v109 = *v111;
  v109[1] = v114;
  v115 = v112[5];
  v116 = (char *)v109 + v115;
  v117 = (char *)v111 + v115;
  v118 = type metadata accessor for DetailChartDataPoint();
  v119 = *(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 16);
  swift_bridgeObjectRetain();
  v119(v116, v117, v118);
  *(void *)((char *)v109 + v112[6]) = *(void *)((char *)v111 + v112[6]);
  v120 = v112[7];
  v121 = (char *)v109 + v120;
  v122 = (char *)v111 + v120;
  type metadata accessor for LollipopDetailViewModel(0);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v128 = *((void *)v122 + 1);
    *(void *)v121 = *(void *)v122;
    *((void *)v121 + 1) = v128;
    v129 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
    v130 = v129[5];
    v166 = &v121[v130];
    v131 = &v122[v130];
    v132 = type metadata accessor for AttributedString();
    v133 = *(void (**)(char *, char *, uint64_t))(*(void *)(v132 - 8) + 16);
    swift_bridgeObjectRetain();
    v133(v166, v131, v132);
    v134 = v129[6];
    v135 = &v121[v134];
    v136 = &v122[v134];
    v137 = *((void *)v136 + 1);
    *(void *)v135 = *(void *)v136;
    *((void *)v135 + 1) = v137;
    v138 = v129[7];
    v139 = &v121[v138];
    v140 = &v122[v138];
    v141 = *((void *)v140 + 1);
    *(void *)v139 = *(void *)v140;
    *((void *)v139 + 1) = v141;
    v142 = v129[8];
    v143 = &v121[v142];
    v144 = &v122[v142];
    v145 = *((void *)v144 + 1);
    *(void *)v143 = *(void *)v144;
    *((void *)v143 + 1) = v145;
    v146 = v129[9];
    v147 = &v121[v146];
    v148 = &v122[v146];
    v149 = *((void *)v148 + 1);
    *(void *)v147 = *(void *)v148;
    *((void *)v147 + 1) = v149;
    v150 = v129[10];
    v151 = &v121[v150];
    v152 = &v122[v150];
    v153 = *((void *)v152 + 1);
    *(void *)v151 = *(void *)v152;
    *((void *)v151 + 1) = v153;
    v121[v129[11]] = v122[v129[11]];
    swift_bridgeObjectRetain();
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      v110 = v170;
      v154 = *((void *)v122 + 1);
      *(void *)v121 = *(void *)v122;
      *((void *)v121 + 1) = v154;
      v155 = *((void *)v122 + 3);
      *((void *)v121 + 2) = *((void *)v122 + 2);
      *((void *)v121 + 3) = v155;
      v156 = *((void *)v122 + 5);
      *((void *)v121 + 4) = *((void *)v122 + 4);
      *((void *)v121 + 5) = v156;
      goto LABEL_21;
    }
    v124 = *((void *)v122 + 1);
    *(void *)v121 = *(void *)v122;
    *((void *)v121 + 1) = v124;
    v125 = *((void *)v122 + 3);
    *((void *)v121 + 2) = *((void *)v122 + 2);
    *((void *)v121 + 3) = v125;
    v126 = *((void *)v122 + 5);
    *((void *)v121 + 4) = *((void *)v122 + 4);
    *((void *)v121 + 5) = v126;
    v127 = *((void *)v122 + 7);
    *((void *)v121 + 6) = *((void *)v122 + 6);
    *((void *)v121 + 7) = v127;
    v121[64] = v122[64];
    v121[65] = v122[65];
  }
  swift_bridgeObjectRetain();
  v110 = v170;
LABEL_21:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v109, 0, 1, (uint64_t)v112);
LABEL_22:
  v157 = v171[7];
  v158 = (void *)(v172 + v157);
  v159 = (void *)(v110 + v157);
  v160 = type metadata accessor for ConditionDetailChartFooterViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v159, 1, v160))
  {
    v161 = sub_10017DF08(&qword_100E820F0);
    memcpy(v158, v159, *(void *)(*(void *)(v161 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v162 = type metadata accessor for TemperatureChartKind();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v162 - 8) + 16))(v158, v159, v162);
    }
    else
    {
      v163 = v159[1];
      *v158 = *v159;
      v158[1] = v163;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v158, 0, 1, v160);
  }
  v164 = v167[9];
  result = v169;
  *(void *)(v169 + v167[8]) = *(void *)(v168 + v167[8]);
  *(void *)(v169 + v164) = *(void *)(v168 + v164);
  *(void *)(v169 + v167[10]) = *(void *)(v168 + v167[10]);
  return result;
}

uint64_t sub_1007830B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for DetailChartLollipopPoint();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for ChartProxy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  v201 = a3;
  uint64_t v202 = a2;
  uint64_t v11 = a3[7];
  uint64_t v203 = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for ConditionDetailChartHeaderStringModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = type metadata accessor for ConditionDetailChartHeaderViewModel();
  *(unsigned char *)(v12 + *(int *)(v15 + 20)) = *(unsigned char *)(v13 + *(int *)(v15 + 20));
  *(unsigned char *)(v12 + *(int *)(v15 + 24)) = *(unsigned char *)(v13 + *(int *)(v15 + 24));
  uint64_t v204 = v12;
  uint64_t v205 = type metadata accessor for DetailChartViewModel();
  uint64_t v16 = *(int *)(v205 + 20);
  v17 = (char *)(v12 + v16);
  uint64_t v18 = v13 + v16;
  *(void *)v17 = *(void *)(v13 + v16);
  *((void *)v17 + 1) = *(void *)(v13 + v16 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = (int *)type metadata accessor for ChartViewModel(0);
  uint64_t v20 = v19[5];
  v21 = &v17[v20];
  uint64_t v22 = v18 + v20;
  uint64_t v23 = type metadata accessor for ChartKind();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 24))(v21, v22, v23);
  *(void *)&v17[v19[6]] = *(void *)(v18 + v19[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = v19[7];
  v25 = &v17[v24];
  uint64_t v26 = v18 + v24;
  uint64_t v27 = type metadata accessor for DetailChartExtrema();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 24))(v25, v26, v27);
  *(void *)&v17[v19[8]] = *(void *)(v18 + v19[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v17[v19[9]] = *(void *)(v18 + v19[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = v19[10];
  v29 = &v17[v28];
  v30 = (void *)(v18 + v28);
  *(void *)v29 = *v30;
  *((void *)v29 + 1) = v30[1];
  uint64_t v31 = v19[11];
  v32 = &v17[v31];
  uint64_t v33 = v18 + v31;
  id v34 = *(id *)v33;
  v35 = *(void **)(v33 + 8);
  uint64_t v36 = *(void *)(v33 + 16);
  unsigned __int8 v37 = *(unsigned char *)(v33 + 24);
  sub_10027D4F8(*(id *)v33, v35, v36, v37);
  v38 = *(void **)v32;
  v39 = (void *)*((void *)v32 + 1);
  uint64_t v40 = *((void *)v32 + 2);
  *(void *)v32 = v34;
  *((void *)v32 + 1) = v35;
  *((void *)v32 + 2) = v36;
  unsigned __int8 v41 = v32[24];
  v32[24] = v37;
  sub_10027D954(v38, v39, v40, v41);
  uint64_t v42 = v19[12];
  v43 = &v17[v42];
  uint64_t v44 = v18 + v42;
  *(void *)&v17[v42] = *(void *)(v18 + v42);
  uint64_t v45 = *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  v46 = &v43[v45];
  v47 = (const void *)(v44 + v45);
  uint64_t v48 = type metadata accessor for Date();
  LODWORD(v43) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v48);
  int v49 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v48);
  if (v43)
  {
    uint64_t v50 = v13;
    if (!v49)
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v46, 0, 1, v48);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v51 = *(void *)(v48 - 8);
  uint64_t v50 = v13;
  if (v49)
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v46, v48);
LABEL_6:
    uint64_t v52 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v46, v47, *(void *)(*(void *)(v52 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, const void *, uint64_t))(v51 + 24))(v46, v47, v48);
LABEL_7:
  uint64_t v53 = v19[13];
  v54 = &v17[v53];
  v55 = (uint64_t *)(v18 + v53);
  uint64_t v56 = *v55;
  v54[8] = *((unsigned char *)v55 + 8);
  *(void *)v54 = v56;
  uint64_t v57 = v19[14];
  v58 = &v17[v57];
  v59 = (void *)(v18 + v57);
  uint64_t v60 = sub_10017DF08(&qword_100E6BF10);
  int v61 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v58, 1, v60);
  int v62 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v60);
  if (v61)
  {
    if (!v62)
    {
      *(void *)v58 = *v59;
      uint64_t v63 = *(int *)(v60 + 48);
      v64 = &v58[v63];
      v65 = (char *)v59 + v63;
      swift_retain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v48))
      {
        uint64_t v66 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v64, v65, v48);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v64, 0, 1, v48);
      }
      uint64_t v68 = v50;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v60);
      goto LABEL_20;
    }
LABEL_13:
    uint64_t v67 = type metadata accessor for ChartViewModel.Background(0);
    memcpy(v58, v59, *(void *)(*(void *)(v67 - 8) + 64));
    uint64_t v68 = v50;
LABEL_20:
    uint64_t v74 = v204;
    goto LABEL_21;
  }
  if (v62)
  {
    sub_10017DF4C((uint64_t)v58, &qword_100E6BF10);
    goto LABEL_13;
  }
  *(void *)v58 = *v59;
  swift_retain();
  swift_release();
  uint64_t v69 = *(int *)(v60 + 48);
  v70 = &v58[v69];
  v71 = (char *)v59 + v69;
  int v72 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v70, 1, v48);
  int v73 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v48);
  if (v72)
  {
    uint64_t v68 = v50;
    uint64_t v74 = v204;
    if (!v73)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v70, v71, v48);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v48);
      goto LABEL_21;
    }
    goto LABEL_47;
  }
  uint64_t v164 = *(void *)(v48 - 8);
  uint64_t v68 = v50;
  uint64_t v74 = v204;
  if (v73)
  {
    (*(void (**)(char *, uint64_t))(v164 + 8))(v70, v48);
LABEL_47:
    uint64_t v165 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v70, v71, *(void *)(*(void *)(v165 - 8) + 64));
    goto LABEL_21;
  }
  (*(void (**)(char *, char *, uint64_t))(v164 + 24))(v70, v71, v48);
LABEL_21:
  uint64_t v75 = v205;
  *(void *)&v17[v19[15]] = *(void *)(v18 + v19[15]);
  uint64_t v76 = v19[16];
  v77 = &v17[v76];
  uint64_t v78 = v18 + v76;
  uint64_t v79 = type metadata accessor for ChartDarkeningScrim();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v79 - 8) + 24))(v77, v78, v79);
  *(void *)&v17[v19[17]] = *(void *)(v18 + v19[17]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v80 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v48 - 8) + 24);
  v80(&v17[v19[18]], v18 + v19[18], v48);
  v80(&v17[v19[19]], v18 + v19[19], v48);
  v80(&v17[v19[20]], v18 + v19[20], v48);
  uint64_t v81 = v19[21];
  v82 = &v17[v81];
  v83 = (const void *)(v18 + v81);
  uint64_t v84 = type metadata accessor for DetailChartDataElement();
  LODWORD(v78) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v84);
  int v85 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v83, 1, v84);
  if (v78)
  {
    if (!v85)
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v84 - 8) + 16))(v82, v83, v84);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v82, 0, 1, v84);
      goto LABEL_27;
    }
    goto LABEL_26;
  }
  uint64_t v86 = *(void *)(v84 - 8);
  if (v85)
  {
    (*(void (**)(char *, uint64_t))(v86 + 8))(v82, v84);
LABEL_26:
    uint64_t v87 = sub_10017DF08(&qword_100E6B640);
    memcpy(v82, v83, *(void *)(*(void *)(v87 - 8) + 64));
    goto LABEL_27;
  }
  (*(void (**)(char *, const void *, uint64_t))(v86 + 24))(v82, v83, v84);
LABEL_27:
  *(void *)&v17[v19[22]] = *(void *)(v18 + v19[22]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v88 = v19[23];
  v89 = &v17[v88];
  uint64_t v90 = v18 + v88;
  uint64_t v91 = type metadata accessor for ChartPeakMarkStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v91 - 8) + 24))(v89, v90, v91);
  *(void *)&v17[v19[24]] = *(void *)(v18 + v19[24]);
  *(void *)&v17[v19[25]] = *(void *)(v18 + v19[25]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v92 = v19[26];
  v93 = &v17[v92];
  uint64_t v94 = v18 + v92;
  uint64_t v95 = type metadata accessor for ChartViewModelInterpolationMode();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v95 - 8) + 24))(v93, v94, v95);
  uint64_t v96 = v19[27];
  v97 = &v17[v96];
  uint64_t v98 = v18 + v96;
  uint64_t v99 = type metadata accessor for ChartPastDataTreatment();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v99 - 8) + 24))(v97, v98, v99);
  uint64_t v100 = v19[28];
  v101 = &v17[v100];
  v102 = (void *)(v18 + v100);
  *(void *)v101 = *v102;
  *((void *)v101 + 1) = v102[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v103 = v19[29];
  v104 = &v17[v103];
  v105 = (void *)(v18 + v103);
  *(void *)v104 = *v105;
  *((void *)v104 + 1) = v105[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v106 = v19[30];
  v107 = &v17[v106];
  v108 = (void *)(v18 + v106);
  *(void *)v107 = *v108;
  *((void *)v107 + 1) = v108[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v109 = v19[31];
  v110 = &v17[v109];
  v111 = (void *)(v18 + v109);
  *(void *)v110 = *v111;
  *((void *)v110 + 1) = v111[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v112 = v19[32];
  v113 = &v17[v112];
  v114 = (void *)(v18 + v112);
  *(void *)v113 = *v114;
  *((void *)v113 + 1) = v114[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v115 = v19[33];
  v116 = &v17[v115];
  v117 = (void *)(v18 + v115);
  uint64_t v118 = v117[1];
  *(void *)v116 = *v117;
  *((void *)v116 + 1) = v118;
  swift_retain();
  swift_release();
  uint64_t v119 = *(int *)(v205 + 24);
  v120 = (void *)(v74 + v119);
  v121 = (void *)(v68 + v119);
  v122 = (int *)type metadata accessor for LollipopViewModel();
  LODWORD(v97) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v120, 1, (uint64_t)v122);
  int v123 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v121, 1, (uint64_t)v122);
  if (v97)
  {
    if (!v123)
    {
      uint64_t v199 = v68;
      void *v120 = *v121;
      v120[1] = v121[1];
      uint64_t v124 = v122[5];
      v125 = (char *)v120 + v124;
      v126 = (char *)v121 + v124;
      uint64_t v127 = type metadata accessor for DetailChartDataPoint();
      v128 = *(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 16);
      swift_bridgeObjectRetain();
      v128(v125, v126, v127);
      *(void *)((char *)v120 + v122[6]) = *(void *)((char *)v121 + v122[6]);
      uint64_t v129 = v122[7];
      v130 = (char *)v120 + v129;
      v131 = (char *)v121 + v129;
      type metadata accessor for LollipopDetailViewModel(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(void *)v130 = *(void *)v131;
        *((void *)v130 + 1) = *((void *)v131 + 1);
        v144 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        uint64_t v145 = v144[5];
        v198 = &v130[v145];
        v146 = &v131[v145];
        uint64_t v147 = type metadata accessor for AttributedString();
        v148 = *(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 16);
        swift_bridgeObjectRetain();
        v148(v198, v146, v147);
        uint64_t v149 = v144[6];
        v150 = &v130[v149];
        v151 = &v131[v149];
        *(void *)v150 = *(void *)v151;
        *((void *)v150 + 1) = *((void *)v151 + 1);
        uint64_t v152 = v144[7];
        v153 = &v130[v152];
        v154 = &v131[v152];
        *(void *)v153 = *(void *)v154;
        *((void *)v153 + 1) = *((void *)v154 + 1);
        uint64_t v155 = v144[8];
        v156 = &v130[v155];
        v157 = &v131[v155];
        *(void *)v156 = *(void *)v157;
        *((void *)v156 + 1) = *((void *)v157 + 1);
        uint64_t v158 = v144[9];
        v159 = &v130[v158];
        v160 = &v131[v158];
        *(void *)v159 = *(void *)v160;
        *((void *)v159 + 1) = *((void *)v160 + 1);
        uint64_t v161 = v144[10];
        v162 = &v130[v161];
        v163 = &v131[v161];
        *(void *)v162 = *(void *)v163;
        *((void *)v162 + 1) = *((void *)v163 + 1);
        v130[v144[11]] = v131[v144[11]];
        swift_bridgeObjectRetain();
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          *(void *)v130 = *(void *)v131;
          *((void *)v130 + 1) = *((void *)v131 + 1);
          *((void *)v130 + 2) = *((void *)v131 + 2);
          *((void *)v130 + 3) = *((void *)v131 + 3);
          *((void *)v130 + 4) = *((void *)v131 + 4);
          *((void *)v130 + 5) = *((void *)v131 + 5);
          goto LABEL_44;
        }
        *(void *)v130 = *(void *)v131;
        *((void *)v130 + 1) = *((void *)v131 + 1);
        *((void *)v130 + 2) = *((void *)v131 + 2);
        *((void *)v130 + 3) = *((void *)v131 + 3);
        *((void *)v130 + 4) = *((void *)v131 + 4);
        *((void *)v130 + 5) = *((void *)v131 + 5);
        *((void *)v130 + 6) = *((void *)v131 + 6);
        *((void *)v130 + 7) = *((void *)v131 + 7);
        v130[64] = v131[64];
        v130[65] = v131[65];
      }
      swift_bridgeObjectRetain();
LABEL_44:
      uint64_t v135 = v202;
      uint64_t v134 = v203;
      uint64_t v68 = v199;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v120, 0, 1, (uint64_t)v122);
      uint64_t v74 = v204;
      uint64_t v75 = v205;
      goto LABEL_51;
    }
LABEL_34:
    uint64_t v133 = sub_10017DF08(&qword_100E82140);
    memcpy(v120, v121, *(void *)(*(void *)(v133 - 8) + 64));
    uint64_t v135 = v202;
    uint64_t v134 = v203;
    goto LABEL_51;
  }
  if (v123)
  {
    sub_100778234((uint64_t)v120, (void (*)(void))type metadata accessor for LollipopViewModel);
    goto LABEL_34;
  }
  void *v120 = *v121;
  v120[1] = v121[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v136 = v122[5];
  v137 = (char *)v120 + v136;
  v138 = (char *)v121 + v136;
  uint64_t v139 = type metadata accessor for DetailChartDataPoint();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v139 - 8) + 24))(v137, v138, v139);
  *(void *)((char *)v120 + v122[6]) = *(void *)((char *)v121 + v122[6]);
  uint64_t v135 = v202;
  uint64_t v134 = v203;
  if (v203 != v202)
  {
    uint64_t v140 = v122[7];
    uint64_t v141 = (uint64_t)v120 + v140;
    v142 = (char *)v121 + v140;
    sub_100778234(v141, (void (*)(void))type metadata accessor for LollipopDetailViewModel);
    type metadata accessor for LollipopDetailViewModel(0);
    int v143 = swift_getEnumCaseMultiPayload();
    if (v143 == 2)
    {
      *(void *)uint64_t v141 = *(void *)v142;
      *(void *)(v141 + 8) = *((void *)v142 + 1);
      v166 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v167 = v166[5];
      uint64_t v168 = v141 + v167;
      v169 = &v142[v167];
      uint64_t v200 = v68;
      uint64_t v170 = type metadata accessor for AttributedString();
      v171 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v170 - 8) + 16);
      swift_bridgeObjectRetain();
      v171(v168, v169, v170);
      uint64_t v135 = v202;
      uint64_t v134 = v203;
      uint64_t v172 = v166[6];
      v173 = (void *)(v141 + v172);
      v174 = &v142[v172];
      void *v173 = *(void *)v174;
      v173[1] = *((void *)v174 + 1);
      uint64_t v175 = v166[7];
      v176 = (void *)(v141 + v175);
      v177 = &v142[v175];
      void *v176 = *(void *)v177;
      v176[1] = *((void *)v177 + 1);
      uint64_t v178 = v166[8];
      v179 = (void *)(v141 + v178);
      v180 = &v142[v178];
      void *v179 = *(void *)v180;
      v179[1] = *((void *)v180 + 1);
      uint64_t v181 = v166[9];
      v182 = (void *)(v141 + v181);
      v183 = &v142[v181];
      void *v182 = *(void *)v183;
      v182[1] = *((void *)v183 + 1);
      uint64_t v184 = v166[10];
      v185 = (void *)(v141 + v184);
      v186 = &v142[v184];
      void *v185 = *(void *)v186;
      v185[1] = *((void *)v186 + 1);
      *(unsigned char *)(v141 + v166[11]) = v142[v166[11]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v75 = v205;
      swift_bridgeObjectRetain();
      uint64_t v74 = v204;
      swift_bridgeObjectRetain();
      uint64_t v68 = v200;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(void *)uint64_t v141 = *(void *)v142;
      *(void *)(v141 + 8) = *((void *)v142 + 1);
      *(void *)(v141 + 16) = *((void *)v142 + 2);
      *(void *)(v141 + 24) = *((void *)v142 + 3);
      *(void *)(v141 + 32) = *((void *)v142 + 4);
      *(void *)(v141 + 40) = *((void *)v142 + 5);
      if (v143 == 1)
      {
        *(void *)(v141 + 48) = *((void *)v142 + 6);
        *(void *)(v141 + 56) = *((void *)v142 + 7);
        *(unsigned char *)(v141 + 64) = v142[64];
        *(unsigned char *)(v141 + 65) = v142[65];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v75 = v205;
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_51:
  uint64_t v187 = *(int *)(v75 + 28);
  v188 = (void *)(v74 + v187);
  v189 = (void *)(v68 + v187);
  uint64_t v190 = type metadata accessor for ConditionDetailChartFooterViewModel();
  int v191 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v188, 1, v190);
  int v192 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v189, 1, v190);
  if (v191)
  {
    if (!v192)
    {
      v193 = v201;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v194 = type metadata accessor for TemperatureChartKind();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v194 - 8) + 16))(v188, v189, v194);
      }
      else
      {
        void *v188 = *v189;
        v188[1] = v189[1];
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v188, 0, 1, v190);
      goto LABEL_65;
    }
LABEL_57:
    uint64_t v195 = sub_10017DF08(&qword_100E820F0);
    memcpy(v188, v189, *(void *)(*(void *)(v195 - 8) + 64));
    v193 = v201;
    goto LABEL_65;
  }
  if (v192)
  {
    sub_100778234((uint64_t)v188, (void (*)(void))type metadata accessor for ConditionDetailChartFooterViewModel);
    goto LABEL_57;
  }
  v193 = v201;
  if (v134 != v135)
  {
    sub_100778234((uint64_t)v188, (void (*)(void))type metadata accessor for ConditionDetailChartFooterViewModel);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v196 = type metadata accessor for TemperatureChartKind();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v196 - 8) + 16))(v188, v189, v196);
    }
    else
    {
      void *v188 = *v189;
      v188[1] = v189[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_65:
  *(void *)(v134 + v193[8]) = *(void *)(v135 + v193[8]);
  *(void *)(v134 + v193[9]) = *(void *)(v135 + v193[9]);
  *(void *)(v134 + v193[10]) = *(void *)(v135 + v193[10]);
  return v134;
}

uint64_t sub_1007843E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for DetailChartLollipopPoint();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for ChartProxy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  v102 = a3;
  uint64_t v103 = a2;
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for ConditionDetailChartHeaderStringModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = type metadata accessor for ConditionDetailChartHeaderViewModel();
  *(unsigned char *)(v12 + *(int *)(v15 + 20)) = *(unsigned char *)(v13 + *(int *)(v15 + 20));
  *(unsigned char *)(v12 + *(int *)(v15 + 24)) = *(unsigned char *)(v13 + *(int *)(v15 + 24));
  uint64_t v104 = v13;
  uint64_t v105 = type metadata accessor for DetailChartViewModel();
  uint64_t v16 = *(int *)(v105 + 20);
  uint64_t v17 = v12 + v16;
  uint64_t v18 = v13 + v16;
  *(_OWORD *)(v12 + v16) = *(_OWORD *)(v13 + v16);
  v19 = (int *)type metadata accessor for ChartViewModel(0);
  uint64_t v20 = v19[5];
  uint64_t v21 = v17 + v20;
  uint64_t v22 = v18 + v20;
  uint64_t v23 = type metadata accessor for ChartKind();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  *(void *)(v17 + v19[6]) = *(void *)(v18 + v19[6]);
  uint64_t v24 = v19[7];
  uint64_t v25 = v17 + v24;
  uint64_t v26 = v18 + v24;
  uint64_t v27 = type metadata accessor for DetailChartExtrema();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
  *(void *)(v17 + v19[8]) = *(void *)(v18 + v19[8]);
  *(void *)(v17 + v19[9]) = *(void *)(v18 + v19[9]);
  *(_OWORD *)(v17 + v19[10]) = *(_OWORD *)(v18 + v19[10]);
  uint64_t v28 = v19[11];
  v29 = (_OWORD *)(v17 + v28);
  v30 = (_OWORD *)(v18 + v28);
  _OWORD *v29 = *v30;
  *(_OWORD *)((char *)v29 + 9) = *(_OWORD *)((char *)v30 + 9);
  uint64_t v31 = v19[12];
  uint64_t v32 = v17 + v31;
  uint64_t v33 = v18 + v31;
  *(void *)(v17 + v31) = *(void *)(v18 + v31);
  uint64_t v34 = *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  v35 = (void *)(v32 + v34);
  uint64_t v36 = (const void *)(v33 + v34);
  uint64_t v37 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37))
  {
    uint64_t v38 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v37);
  }
  uint64_t v39 = v19[13];
  uint64_t v40 = v17 + v39;
  uint64_t v41 = v18 + v39;
  *(void *)uint64_t v40 = *(void *)v41;
  *(unsigned char *)(v40 + 8) = *(unsigned char *)(v41 + 8);
  uint64_t v42 = v19[14];
  v43 = (void *)(v17 + v42);
  uint64_t v44 = (void *)(v18 + v42);
  uint64_t v45 = sub_10017DF08(&qword_100E6BF10);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45))
  {
    uint64_t v46 = type metadata accessor for ChartViewModel.Background(0);
    memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    void *v43 = *v44;
    uint64_t v47 = *(int *)(v45 + 48);
    uint64_t v48 = (char *)v43 + v47;
    int v49 = (char *)v44 + v47;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v37))
    {
      uint64_t v50 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v48, v49, v37);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v37);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v45);
  }
  *(void *)(v17 + v19[15]) = *(void *)(v18 + v19[15]);
  uint64_t v51 = v19[16];
  uint64_t v52 = v17 + v51;
  uint64_t v53 = v18 + v51;
  uint64_t v54 = type metadata accessor for ChartDarkeningScrim();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
  *(void *)(v17 + v19[17]) = *(void *)(v18 + v19[17]);
  v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 32);
  v55(v17 + v19[18], v18 + v19[18], v37);
  v55(v17 + v19[19], v18 + v19[19], v37);
  v55(v17 + v19[20], v18 + v19[20], v37);
  uint64_t v56 = v19[21];
  uint64_t v57 = (void *)(v17 + v56);
  v58 = (const void *)(v18 + v56);
  uint64_t v59 = type metadata accessor for DetailChartDataElement();
  uint64_t v60 = v105;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v58, 1, v59))
  {
    uint64_t v61 = sub_10017DF08(&qword_100E6B640);
    memcpy(v57, v58, *(void *)(*(void *)(v61 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v57, 0, 1, v59);
  }
  *(void *)(v17 + v19[22]) = *(void *)(v18 + v19[22]);
  uint64_t v62 = v19[23];
  uint64_t v63 = v17 + v62;
  uint64_t v64 = v18 + v62;
  uint64_t v65 = type metadata accessor for ChartPeakMarkStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 32))(v63, v64, v65);
  *(void *)(v17 + v19[24]) = *(void *)(v18 + v19[24]);
  *(void *)(v17 + v19[25]) = *(void *)(v18 + v19[25]);
  uint64_t v66 = v19[26];
  uint64_t v67 = v17 + v66;
  uint64_t v68 = v18 + v66;
  uint64_t v69 = type metadata accessor for ChartViewModelInterpolationMode();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 32))(v67, v68, v69);
  uint64_t v70 = v19[27];
  uint64_t v71 = v17 + v70;
  uint64_t v72 = v18 + v70;
  uint64_t v73 = type metadata accessor for ChartPastDataTreatment();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 32))(v71, v72, v73);
  *(_OWORD *)(v17 + v19[28]) = *(_OWORD *)(v18 + v19[28]);
  *(_OWORD *)(v17 + v19[29]) = *(_OWORD *)(v18 + v19[29]);
  *(_OWORD *)(v17 + v19[30]) = *(_OWORD *)(v18 + v19[30]);
  *(_OWORD *)(v17 + v19[31]) = *(_OWORD *)(v18 + v19[31]);
  *(_OWORD *)(v17 + v19[32]) = *(_OWORD *)(v18 + v19[32]);
  *(_OWORD *)(v17 + v19[33]) = *(_OWORD *)(v18 + v19[33]);
  uint64_t v74 = *(int *)(v105 + 24);
  uint64_t v75 = (_OWORD *)(v12 + v74);
  uint64_t v76 = (_OWORD *)(v104 + v74);
  v77 = (int *)type metadata accessor for LollipopViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v76, 1, (uint64_t)v77))
  {
    uint64_t v78 = sub_10017DF08(&qword_100E82140);
    memcpy(v75, v76, *(void *)(*(void *)(v78 - 8) + 64));
    v80 = v102;
    uint64_t v79 = v103;
  }
  else
  {
    *uint64_t v75 = *v76;
    uint64_t v81 = v77[5];
    v82 = (char *)v75 + v81;
    v83 = (char *)v76 + v81;
    uint64_t v84 = type metadata accessor for DetailChartDataPoint();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 32))(v82, v83, v84);
    *(void *)((char *)v75 + v77[6]) = *(void *)((char *)v76 + v77[6]);
    uint64_t v85 = v77[7];
    uint64_t v86 = (_OWORD *)((char *)v75 + v85);
    uint64_t v87 = (_OWORD *)((char *)v76 + v85);
    uint64_t v88 = type metadata accessor for LollipopDetailViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *uint64_t v86 = *v87;
      v89 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v90 = v89[5];
      uint64_t v91 = (char *)v86 + v90;
      v101 = (char *)v87 + v90;
      uint64_t v92 = type metadata accessor for AttributedString();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 32))(v91, v101, v92);
      *(_OWORD *)((char *)v86 + v89[6]) = *(_OWORD *)((char *)v87 + v89[6]);
      *(_OWORD *)((char *)v86 + v89[7]) = *(_OWORD *)((char *)v87 + v89[7]);
      *(_OWORD *)((char *)v86 + v89[8]) = *(_OWORD *)((char *)v87 + v89[8]);
      *(_OWORD *)((char *)v86 + v89[9]) = *(_OWORD *)((char *)v87 + v89[9]);
      *(_OWORD *)((char *)v86 + v89[10]) = *(_OWORD *)((char *)v87 + v89[10]);
      *((unsigned char *)v86 + v89[11]) = *((unsigned char *)v87 + v89[11]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v86, v87, *(void *)(*(void *)(v88 - 8) + 64));
    }
    v80 = v102;
    uint64_t v79 = v103;
    uint64_t v60 = v105;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v75, 0, 1, (uint64_t)v77);
  }
  uint64_t v93 = *(int *)(v60 + 28);
  uint64_t v94 = (void *)(v12 + v93);
  uint64_t v95 = (const void *)(v104 + v93);
  uint64_t v96 = type metadata accessor for ConditionDetailChartFooterViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, v96))
  {
    uint64_t v97 = sub_10017DF08(&qword_100E820F0);
    memcpy(v94, v95, *(void *)(*(void *)(v97 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v98 = type metadata accessor for TemperatureChartKind();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v98 - 8) + 32))(v94, v95, v98);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v94, v95, *(void *)(*(void *)(v96 - 8) + 64));
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v94, 0, 1, v96);
  }
  uint64_t v99 = v80[9];
  *(void *)(a1 + v80[8]) = *(void *)(v79 + v80[8]);
  *(void *)(a1 + v99) = *(void *)(v79 + v99);
  *(void *)(a1 + v80[10]) = *(void *)(v79 + v80[10]);
  return a1;
}

uint64_t sub_100784DE0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for DetailChartLollipopPoint();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for ChartProxy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[7];
  uint64_t v168 = a3;
  uint64_t v169 = a2;
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for ConditionDetailChartHeaderStringModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = type metadata accessor for ConditionDetailChartHeaderViewModel();
  *(unsigned char *)(v12 + *(int *)(v15 + 20)) = *(unsigned char *)(v13 + *(int *)(v15 + 20));
  *(unsigned char *)(v12 + *(int *)(v15 + 24)) = *(unsigned char *)(v13 + *(int *)(v15 + 24));
  uint64_t v170 = type metadata accessor for DetailChartViewModel();
  uint64_t v171 = v13;
  uint64_t v16 = *(int *)(v170 + 20);
  uint64_t v17 = (char *)(v12 + v16);
  uint64_t v18 = (char *)(v13 + v16);
  uint64_t v19 = *((void *)v18 + 1);
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = (int *)type metadata accessor for ChartViewModel(0);
  uint64_t v21 = v20[5];
  uint64_t v22 = &v17[v21];
  uint64_t v23 = &v18[v21];
  uint64_t v24 = type metadata accessor for ChartKind();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 40))(v22, v23, v24);
  *(void *)&v17[v20[6]] = *(void *)&v18[v20[6]];
  swift_bridgeObjectRelease();
  uint64_t v25 = v20[7];
  uint64_t v26 = &v17[v25];
  uint64_t v27 = &v18[v25];
  uint64_t v28 = type metadata accessor for DetailChartExtrema();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 40))(v26, v27, v28);
  *(void *)&v17[v20[8]] = *(void *)&v18[v20[8]];
  swift_bridgeObjectRelease();
  *(void *)&v17[v20[9]] = *(void *)&v18[v20[9]];
  swift_bridgeObjectRelease();
  *(_OWORD *)&v17[v20[10]] = *(_OWORD *)&v18[v20[10]];
  uint64_t v29 = v20[11];
  v30 = &v17[v29];
  uint64_t v31 = &v18[v29];
  uint64_t v32 = *((void *)v31 + 2);
  char v33 = v31[24];
  uint64_t v34 = *(void **)v30;
  v35 = (void *)*((void *)v30 + 1);
  uint64_t v36 = *((void *)v30 + 2);
  *(_OWORD *)v30 = *(_OWORD *)v31;
  *((void *)v30 + 2) = v32;
  unsigned __int8 v37 = v30[24];
  v30[24] = v33;
  sub_10027D954(v34, v35, v36, v37);
  uint64_t v38 = v20[12];
  uint64_t v39 = &v17[v38];
  uint64_t v40 = &v18[v38];
  *(void *)&v17[v38] = *(void *)&v18[v38];
  uint64_t v41 = *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  uint64_t v42 = &v39[v41];
  v43 = &v40[v41];
  uint64_t v44 = type metadata accessor for Date();
  LODWORD(v39) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v44);
  int v45 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v44);
  if (v39)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v44);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v46 = *(void *)(v44 - 8);
  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(v42, v44);
LABEL_6:
    uint64_t v47 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v42, v43, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v46 + 40))(v42, v43, v44);
LABEL_7:
  uint64_t v48 = v20[13];
  int v49 = &v17[v48];
  uint64_t v50 = &v18[v48];
  *(void *)int v49 = *(void *)v50;
  v49[8] = v50[8];
  uint64_t v51 = v20[14];
  uint64_t v52 = &v17[v51];
  uint64_t v53 = &v18[v51];
  uint64_t v54 = sub_10017DF08(&qword_100E6BF10);
  int v55 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v54);
  int v56 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v54);
  if (v55)
  {
    if (!v56)
    {
      *(void *)uint64_t v52 = *(void *)v53;
      uint64_t v57 = *(int *)(v54 + 48);
      v58 = &v52[v57];
      uint64_t v59 = &v53[v57];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v44))
      {
        uint64_t v60 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v58, v59, v44);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v44);
      }
      uint64_t v65 = (uint64_t)v52;
      uint64_t v66 = v54;
      goto LABEL_21;
    }
    goto LABEL_13;
  }
  if (v56)
  {
    sub_10017DF4C((uint64_t)v52, &qword_100E6BF10);
LABEL_13:
    uint64_t v61 = type metadata accessor for ChartViewModel.Background(0);
LABEL_14:
    memcpy(v52, v53, *(void *)(*(void *)(v61 - 8) + 64));
    goto LABEL_22;
  }
  *(void *)uint64_t v52 = *(void *)v53;
  swift_release();
  uint64_t v62 = *(int *)(v54 + 48);
  v52 += v62;
  v53 += v62;
  int v63 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v44);
  int v64 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v44);
  if (v63)
  {
    if (!v64)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v52, v53, v44);
      uint64_t v65 = (uint64_t)v52;
      uint64_t v66 = v44;
LABEL_21:
      _s7Weather24LocationCompositionStateOwst_0(v65, 0, 1, v66);
      goto LABEL_22;
    }
    goto LABEL_56;
  }
  uint64_t v167 = *(void *)(v44 - 8);
  if (v64)
  {
    (*(void (**)(char *, uint64_t))(v167 + 8))(v52, v44);
LABEL_56:
    uint64_t v61 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v167 + 40))(v52, v53, v44);
LABEL_22:
  *(void *)&v17[v20[15]] = *(void *)&v18[v20[15]];
  uint64_t v67 = v20[16];
  uint64_t v68 = &v17[v67];
  uint64_t v69 = &v18[v67];
  uint64_t v70 = type metadata accessor for ChartDarkeningScrim();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 40))(v68, v69, v70);
  *(void *)&v17[v20[17]] = *(void *)&v18[v20[17]];
  swift_bridgeObjectRelease();
  uint64_t v71 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 40);
  v71(&v17[v20[18]], &v18[v20[18]], v44);
  v71(&v17[v20[19]], &v18[v20[19]], v44);
  v71(&v17[v20[20]], &v18[v20[20]], v44);
  uint64_t v72 = v20[21];
  uint64_t v73 = &v17[v72];
  uint64_t v74 = &v18[v72];
  uint64_t v75 = type metadata accessor for DetailChartDataElement();
  LODWORD(v71) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v73, 1, v75);
  int v76 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v74, 1, v75);
  if (v71)
  {
    if (!v76)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v73, 0, 1, v75);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  uint64_t v77 = *(void *)(v75 - 8);
  if (v76)
  {
    (*(void (**)(char *, uint64_t))(v77 + 8))(v73, v75);
LABEL_27:
    uint64_t v78 = sub_10017DF08(&qword_100E6B640);
    memcpy(v73, v74, *(void *)(*(void *)(v78 - 8) + 64));
    goto LABEL_28;
  }
  (*(void (**)(char *, char *, uint64_t))(v77 + 40))(v73, v74, v75);
LABEL_28:
  *(void *)&v17[v20[22]] = *(void *)&v18[v20[22]];
  swift_bridgeObjectRelease();
  uint64_t v79 = v20[23];
  v80 = &v17[v79];
  uint64_t v81 = &v18[v79];
  uint64_t v82 = type metadata accessor for ChartPeakMarkStyle();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v82 - 8) + 40))(v80, v81, v82);
  *(void *)&v17[v20[24]] = *(void *)&v18[v20[24]];
  *(void *)&v17[v20[25]] = *(void *)&v18[v20[25]];
  swift_bridgeObjectRelease();
  uint64_t v83 = v20[26];
  uint64_t v84 = &v17[v83];
  uint64_t v85 = &v18[v83];
  uint64_t v86 = type metadata accessor for ChartViewModelInterpolationMode();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 40))(v84, v85, v86);
  uint64_t v87 = v20[27];
  uint64_t v88 = &v17[v87];
  v89 = &v18[v87];
  uint64_t v90 = type metadata accessor for ChartPastDataTreatment();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 40))(v88, v89, v90);
  uint64_t v91 = v20[28];
  uint64_t v92 = &v17[v91];
  uint64_t v93 = (uint64_t *)&v18[v91];
  uint64_t v95 = *v93;
  uint64_t v94 = v93[1];
  *(void *)uint64_t v92 = v95;
  *((void *)v92 + 1) = v94;
  swift_bridgeObjectRelease();
  uint64_t v96 = v20[29];
  uint64_t v97 = &v17[v96];
  uint64_t v98 = (uint64_t *)&v18[v96];
  uint64_t v100 = *v98;
  uint64_t v99 = v98[1];
  *(void *)uint64_t v97 = v100;
  *((void *)v97 + 1) = v99;
  swift_bridgeObjectRelease();
  uint64_t v101 = v20[30];
  v102 = &v17[v101];
  uint64_t v103 = (uint64_t *)&v18[v101];
  uint64_t v105 = *v103;
  uint64_t v104 = v103[1];
  *(void *)v102 = v105;
  *((void *)v102 + 1) = v104;
  swift_bridgeObjectRelease();
  uint64_t v106 = v20[31];
  v107 = &v17[v106];
  v108 = (uint64_t *)&v18[v106];
  uint64_t v110 = *v108;
  uint64_t v109 = v108[1];
  *(void *)v107 = v110;
  *((void *)v107 + 1) = v109;
  swift_bridgeObjectRelease();
  uint64_t v111 = v20[32];
  uint64_t v112 = &v17[v111];
  v113 = (uint64_t *)&v18[v111];
  uint64_t v115 = *v113;
  uint64_t v114 = v113[1];
  *(void *)uint64_t v112 = v115;
  *((void *)v112 + 1) = v114;
  swift_bridgeObjectRelease();
  *(_OWORD *)&v17[v20[33]] = *(_OWORD *)&v18[v20[33]];
  swift_release();
  uint64_t v117 = v170;
  uint64_t v116 = v171;
  uint64_t v118 = *(int *)(v170 + 24);
  uint64_t v119 = (void *)(v12 + v118);
  v120 = (void *)(v171 + v118);
  v121 = (int *)type metadata accessor for LollipopViewModel();
  LODWORD(v88) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v119, 1, (uint64_t)v121);
  int v122 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v120, 1, (uint64_t)v121);
  if (v88)
  {
    if (!v122)
    {
      *(_OWORD *)uint64_t v119 = *(_OWORD *)v120;
      uint64_t v123 = v121[5];
      uint64_t v124 = (char *)v119 + v123;
      v125 = (char *)v120 + v123;
      uint64_t v126 = type metadata accessor for DetailChartDataPoint();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 32))(v124, v125, v126);
      *(void *)((char *)v119 + v121[6]) = *(void *)((char *)v120 + v121[6]);
      uint64_t v127 = v121[7];
      v128 = (_OWORD *)((char *)v119 + v127);
      uint64_t v129 = (_OWORD *)((char *)v120 + v127);
      uint64_t v130 = type metadata accessor for LollipopDetailViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        _OWORD *v128 = *v129;
        v131 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        uint64_t v132 = v131[5];
        uint64_t v133 = (char *)v128 + v132;
        uint64_t v134 = (char *)v129 + v132;
        uint64_t v135 = type metadata accessor for AttributedString();
        uint64_t v136 = v133;
        v137 = v134;
        uint64_t v117 = v170;
        uint64_t v116 = v171;
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v135 - 8) + 32))(v136, v137, v135);
        *(_OWORD *)((char *)v128 + v131[6]) = *(_OWORD *)((char *)v129 + v131[6]);
        *(_OWORD *)((char *)v128 + v131[7]) = *(_OWORD *)((char *)v129 + v131[7]);
        *(_OWORD *)((char *)v128 + v131[8]) = *(_OWORD *)((char *)v129 + v131[8]);
        *(_OWORD *)((char *)v128 + v131[9]) = *(_OWORD *)((char *)v129 + v131[9]);
        *(_OWORD *)((char *)v128 + v131[10]) = *(_OWORD *)((char *)v129 + v131[10]);
        *((unsigned char *)v128 + v131[11]) = *((unsigned char *)v129 + v131[11]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v128, v129, *(void *)(*(void *)(v130 - 8) + 64));
      }
      uint64_t v139 = v169;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v119, 0, 1, (uint64_t)v121);
      goto LABEL_41;
    }
LABEL_34:
    uint64_t v138 = sub_10017DF08(&qword_100E82140);
    memcpy(v119, v120, *(void *)(*(void *)(v138 - 8) + 64));
    uint64_t v139 = v169;
    goto LABEL_41;
  }
  if (v122)
  {
    sub_100778234((uint64_t)v119, (void (*)(void))type metadata accessor for LollipopViewModel);
    goto LABEL_34;
  }
  uint64_t v140 = v120[1];
  *uint64_t v119 = *v120;
  v119[1] = v140;
  swift_bridgeObjectRelease();
  uint64_t v141 = v121[5];
  v142 = (char *)v119 + v141;
  int v143 = (char *)v120 + v141;
  uint64_t v144 = type metadata accessor for DetailChartDataPoint();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 40))(v142, v143, v144);
  *(void *)((char *)v119 + v121[6]) = *(void *)((char *)v120 + v121[6]);
  uint64_t v139 = v169;
  if (a1 != v169)
  {
    uint64_t v145 = v121[7];
    v146 = (_OWORD *)((char *)v119 + v145);
    uint64_t v147 = (_OWORD *)((char *)v120 + v145);
    sub_100778234((uint64_t)v146, (void (*)(void))type metadata accessor for LollipopDetailViewModel);
    uint64_t v148 = type metadata accessor for LollipopDetailViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      _OWORD *v146 = *v147;
      uint64_t v149 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v150 = v149[5];
      v151 = (char *)v146 + v150;
      uint64_t v152 = (char *)v147 + v150;
      uint64_t v153 = type metadata accessor for AttributedString();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v153 - 8) + 32))(v151, v152, v153);
      *(_OWORD *)((char *)v146 + v149[6]) = *(_OWORD *)((char *)v147 + v149[6]);
      *(_OWORD *)((char *)v146 + v149[7]) = *(_OWORD *)((char *)v147 + v149[7]);
      *(_OWORD *)((char *)v146 + v149[8]) = *(_OWORD *)((char *)v147 + v149[8]);
      *(_OWORD *)((char *)v146 + v149[9]) = *(_OWORD *)((char *)v147 + v149[9]);
      *(_OWORD *)((char *)v146 + v149[10]) = *(_OWORD *)((char *)v147 + v149[10]);
      uint64_t v154 = v149[11];
      uint64_t v139 = v169;
      *((unsigned char *)v146 + v154) = *((unsigned char *)v147 + v154);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v146, v147, *(void *)(*(void *)(v148 - 8) + 64));
    }
  }
LABEL_41:
  uint64_t v155 = *(int *)(v117 + 28);
  v156 = (void *)(v12 + v155);
  v157 = (const void *)(v116 + v155);
  uint64_t v158 = type metadata accessor for ConditionDetailChartFooterViewModel();
  int v159 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v156, 1, v158);
  int v160 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v157, 1, v158);
  if (v159)
  {
    if (!v160)
    {
      uint64_t v161 = v168;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v162 = type metadata accessor for TemperatureChartKind();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v162 - 8) + 32))(v156, v157, v162);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v156, v157, *(void *)(*(void *)(v158 - 8) + 64));
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v156, 0, 1, v158);
      goto LABEL_53;
    }
LABEL_47:
    uint64_t v163 = sub_10017DF08(&qword_100E820F0);
    memcpy(v156, v157, *(void *)(*(void *)(v163 - 8) + 64));
    uint64_t v161 = v168;
    goto LABEL_53;
  }
  if (v160)
  {
    sub_100778234((uint64_t)v156, (void (*)(void))type metadata accessor for ConditionDetailChartFooterViewModel);
    goto LABEL_47;
  }
  uint64_t v161 = v168;
  if (a1 != v139)
  {
    sub_100778234((uint64_t)v156, (void (*)(void))type metadata accessor for ConditionDetailChartFooterViewModel);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v164 = type metadata accessor for TemperatureChartKind();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v164 - 8) + 32))(v156, v157, v164);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v156, v157, *(void *)(*(void *)(v158 - 8) + 64));
    }
  }
LABEL_53:
  uint64_t v165 = v161[9];
  *(void *)(a1 + v161[8]) = *(void *)(v139 + v161[8]);
  *(void *)(a1 + v165) = *(void *)(v139 + v165);
  *(void *)(a1 + v161[10]) = *(void *)(v139 + v161[10]);
  return a1;
}

uint64_t sub_100785D74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100785D88);
}

uint64_t sub_100785D88()
{
  sub_100188B38();
  type metadata accessor for DetailChartLollipopPoint();
  sub_100162F30();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    uint64_t v5 = v3;
    uint64_t v6 = v1;
  }
  else
  {
    type metadata accessor for ChartProxy();
    sub_100162F30();
    if (*(_DWORD *)(v8 + 84) == v0)
    {
      uint64_t v5 = v7;
      uint64_t v9 = *(int *)(v2 + 20);
    }
    else
    {
      uint64_t v5 = type metadata accessor for DetailChartViewModel();
      uint64_t v9 = *(int *)(v2 + 28);
    }
    uint64_t v6 = v1 + v9;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v6, v0, v5);
}

uint64_t sub_100785E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100785E30);
}

uint64_t sub_100785E30()
{
  sub_100183C30();
  type metadata accessor for DetailChartLollipopPoint();
  sub_100162F30();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v1;
  }
  else
  {
    type metadata accessor for ChartProxy();
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == v3)
    {
      uint64_t v6 = v8;
      uint64_t v10 = *(int *)(v2 + 20);
    }
    else
    {
      uint64_t v6 = type metadata accessor for DetailChartViewModel();
      uint64_t v10 = *(int *)(v2 + 28);
    }
    uint64_t v7 = v1 + v10;
  }

  return _s7Weather24LocationCompositionStateOwst_0(v7, v0, v0, v6);
}

uint64_t sub_100785EC8()
{
  uint64_t result = type metadata accessor for DetailChartLollipopPoint();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ChartProxy();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for DetailChartViewModel();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

void *sub_100785FDC(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for DetailChartDataElement();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[7];
    *(void *)((char *)v4 + a3[6]) = *(void *)((char *)a2 + a3[6]);
    *((unsigned char *)v4 + v11) = *((unsigned char *)a2 + v11);
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  }
  return v4;
}

uint64_t sub_1007860D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = type metadata accessor for DetailChartDataElement();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

void *sub_100786140(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for DetailChartDataElement();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

void *sub_1007861EC(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for DetailChartDataElement();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

void *sub_10078629C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for DetailChartDataElement();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

void *sub_100786348(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for DetailChartDataElement();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_1007863F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100786408);
}

uint64_t sub_100786408()
{
  sub_100188B38();
  type metadata accessor for DetailChartDataElement();
  sub_100162F30();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    uint64_t v5 = v3;
    uint64_t v6 = v1 + *(int *)(v2 + 20);
    return _s7Weather24LocationCompositionStateOwet_0(v6, v0, v5);
  }
  else
  {
    unsigned int v8 = *(unsigned __int8 *)(v1 + *(int *)(v2 + 28));
    if (v8 >= 2) {
      return ((v8 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_10078649C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007864B0);
}

void sub_1007864B0()
{
  sub_100183C30();
  type metadata accessor for DetailChartDataElement();
  sub_100162F30();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v1 + *(int *)(v2 + 20);
    _s7Weather24LocationCompositionStateOwst_0(v7, v0, v0, v6);
  }
  else
  {
    *(unsigned char *)(v1 + *(int *)(v2 + 28)) = v0 + 1;
  }
}

uint64_t sub_10078652C()
{
  uint64_t result = type metadata accessor for DetailChartDataElement();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for DetailChart.MarkerView()
{
  return &type metadata for DetailChart.MarkerView;
}

unint64_t sub_1007865E8()
{
  unint64_t result = qword_100E932F0;
  if (!qword_100E932F0)
  {
    sub_10018C6DC(&qword_100E932F8);
    sub_10024D5E4((uint64_t)&unk_100E92FF0);
    sub_1005BF02C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E932F0);
  }
  return result;
}

uint64_t sub_100786688()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1007866A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1007866C0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1007866DC()
{
  unint64_t result = qword_100E93360;
  if (!qword_100E93360)
  {
    sub_10018C6DC(&qword_100E93368);
    sub_10024D5E4((uint64_t)&unk_100E93370);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E93360);
  }
  return result;
}

unint64_t sub_10078677C()
{
  return sub_10078096C((uint64_t)&unk_100E93380);
}

unint64_t sub_1007867C0()
{
  return sub_10078096C((uint64_t)&unk_100E93388);
}

unint64_t sub_1007867F0()
{
  unint64_t result = qword_100E93390;
  if (!qword_100E93390)
  {
    sub_10018C6DC(&qword_100E93310);
    sub_100786890();
    sub_10024D5E4((uint64_t)&qword_100E80330);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E93390);
  }
  return result;
}

unint64_t sub_100786890()
{
  unint64_t result = qword_100E93398;
  if (!qword_100E93398)
  {
    sub_10018C6DC(&qword_100E93308);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E93398);
  }
  return result;
}

unint64_t sub_100786940()
{
  unint64_t result = qword_100E933A0;
  if (!qword_100E933A0)
  {
    sub_10018C6DC(&qword_100E933A8);
    sub_1007869B4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E933A0);
  }
  return result;
}

unint64_t sub_1007869B4()
{
  unint64_t result = qword_100E933B0;
  if (!qword_100E933B0)
  {
    sub_10018C6DC(&qword_100E93330);
    sub_10024D5E4((uint64_t)&unk_100E933B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E933B0);
  }
  return result;
}

unint64_t sub_100786A4C()
{
  return sub_10024D5E4((uint64_t)&qword_100E7D920);
}

void sub_100786A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_100162EA0();
  a19 = v20;
  a20 = v21;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v26 = sub_10017DF08(qword_100E65268);
  uint64_t v27 = sub_100109308(v26);
  __chkstk_darwin(v27);
  sub_10016278C();
  uint64_t v30 = v28 - v29;
  __chkstk_darwin(v31);
  char v33 = (char *)&a9 - v32;
  Measurement<>.converted(rounded:)();
  uint64_t v34 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
  Measurement<>.converted(rounded:)();
  sub_100787968(v23, v30);
  uint64_t v35 = sub_10017DF08(&qword_100E65250);
  if (_s7Weather24LocationCompositionStateOwet_0(v30, 1, v35) == 1)
  {
    sub_100178110(v23, qword_100E65268);
    uint64_t v36 = *(void (**)(void))(*(void *)(v35 - 8) + 8);
    sub_100164FC8();
    v36();
    sub_100164FC8();
    v36();
    sub_100178110(v30, qword_100E65268);
    uint64_t v37 = 1;
  }
  else
  {
    Measurement<>.converted(rounded:)();
    sub_100178110(v23, qword_100E65268);
    uint64_t v38 = *(void (**)(void))(*(void *)(v35 - 8) + 8);
    sub_10017FAC0();
    v38();
    sub_10017FAC0();
    v38();
    sub_10017FAC0();
    v38();
    uint64_t v37 = 0;
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, v37, 1, v35);
  sub_10024D364((uint64_t)v33, v25 + *(int *)(v34 + 24), qword_100E65268);
  sub_100162694();
}

uint64_t sub_100786C7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, double *a4@<X8>)
{
  uint64_t v69 = a3;
  uint64_t v67 = a1;
  uint64_t v68 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
  sub_100162E4C();
  __chkstk_darwin(v8);
  uint64_t v9 = sub_100166B4C();
  uint64_t v76 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body(v9);
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_10016278C();
  uint64_t v13 = (double *)(v11 - v12);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (double *)((char *)&v63 - v16);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (double *)((char *)&v63 - v19);
  __chkstk_darwin(v18);
  uint64_t v22 = (double *)((char *)&v63 - v21);
  uint64_t v23 = type metadata accessor for ComparisonCapsuleViewModel.Row(0);
  sub_100179C0C();
  __chkstk_darwin(v24);
  sub_10016278C();
  uint64_t v75 = v25 - v26;
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v71 = (uint64_t)&v63 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  __chkstk_darwin(v30);
  sub_100119550();
  uint64_t v32 = __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v63 - v33;
  __chkstk_darwin(v32);
  uint64_t v38 = *(void *)(a2 + 16);
  if (!v38)
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v61 = 0;
    uint64_t v45 = 0;
    uint64_t v62 = 0;
    double v47 = 0.0;
    double v60 = 0.0;
    goto LABEL_30;
  }
  uint64_t v64 = v36;
  uint64_t v65 = (uint64_t)&v63 - v35;
  uint64_t v66 = a4;
  uint64_t v72 = a2 + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80));
  uint64_t v73 = v37;
  uint64_t v74 = v38;
  sub_1007896BC(v72, (uint64_t)v34, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
  uint64_t v70 = a2;
  uint64_t result = swift_bridgeObjectRetain();
  if (v74 != 1)
  {
    unint64_t v40 = 1;
    while (v40 < *(void *)(v70 + 16))
    {
      sub_1007896BC(v72 + *(void *)(v73 + 72) * v40, v4, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
      sub_1007896BC(v4 + *(int *)(v23 + 20), (uint64_t)v22, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        double v41 = *v22;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_10078971C((uint64_t)v22, v5, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature);
        sub_10017DF08(&qword_100E65250);
        Measurement.value.getter();
        double v41 = v42;
        sub_100787D20(v5, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature);
      }
      sub_1007896BC((uint64_t)&v34[*(int *)(v23 + 20)], (uint64_t)v20, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        double v43 = *v20;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        sub_10078971C((uint64_t)v20, v5, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature);
        sub_10017DF08(&qword_100E65250);
        Measurement.value.getter();
        double v43 = v44;
        sub_100787D20(v5, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature);
      }
      if (v41 >= v43)
      {
        uint64_t result = sub_100787D20(v4, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
      }
      else
      {
        sub_100787D20((uint64_t)v34, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
        uint64_t result = sub_10078971C(v4, (uint64_t)v34, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
      }
      if (v74 == ++v40) {
        goto LABEL_15;
      }
    }
    __break(1u);
    goto LABEL_32;
  }
LABEL_15:
  uint64_t v45 = v70;
  swift_bridgeObjectRelease();
  uint64_t v46 = v65;
  sub_10078971C((uint64_t)v34, v65, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
  double v47 = sub_100787D84();
  sub_100787D20(v46, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
  sub_1007896BC(v72, v71, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v48 = v73;
  a4 = v66;
  if (v74 == 1)
  {
LABEL_28:
    swift_bridgeObjectRelease();
    uint64_t v59 = v64;
    sub_10078971C(v71, v64, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
    double v60 = sub_100787EE0();
    uint64_t result = sub_100787D20(v59, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
    uint64_t v61 = v67;
    uint64_t v62 = v69;
LABEL_30:
    *(void *)a4 = v61;
    *((void *)a4 + 1) = v45;
    *((void *)a4 + 2) = v62;
    a4[3] = v47;
    a4[4] = v60;
    return result;
  }
  unint64_t v49 = 1;
  while (v49 < *(void *)(v45 + 16))
  {
    sub_1007896BC(v72 + *(void *)(v48 + 72) * v49, v75, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
    sub_1007896BC(v71 + *(int *)(v23 + 20), (uint64_t)v17, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      double v50 = *v17;
      double v51 = v17[1];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      double v52 = v50 + v51;
    }
    else
    {
      sub_10078971C((uint64_t)v17, v5, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature);
      sub_10017DF08(&qword_100E65250);
      Measurement.value.getter();
      double v52 = v53;
      sub_100787D20(v5, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature);
    }
    sub_1007896BC(v75 + *(int *)(v23 + 20), (uint64_t)v13, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      double v54 = *v13;
      double v55 = v13[1];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      double v56 = v54 + v55;
    }
    else
    {
      sub_10078971C((uint64_t)v13, v5, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature);
      sub_10017DF08(&qword_100E65250);
      Measurement.value.getter();
      double v56 = v57;
      sub_100787D20(v5, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature);
    }
    if (v52 >= v56)
    {
      uint64_t result = sub_100787D20(v75, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
    }
    else
    {
      uint64_t v58 = v71;
      sub_100787D20(v71, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
      uint64_t result = sub_10078971C(v75, v58, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
    }
    ++v49;
    uint64_t v48 = v73;
    if (v74 == v49) {
      goto LABEL_28;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_100787428(void *a1, void *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1])
  {
    _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = sub_1001190E0();
    if ((v6 & 1) == 0) {
      return result;
    }
  }
  uint64_t v7 = a1[3];
  uint64_t v8 = a2[3];
  if (!v7)
  {
    if (v8) {
      return 0;
    }
    goto LABEL_15;
  }
  if (!v8) {
    return 0;
  }
  BOOL v9 = a1[2] == a2[2] && v7 == v8;
  if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = sub_1001190E0(), (v10 & 1) != 0))
  {
LABEL_15:
    uint64_t v11 = a1[5];
    uint64_t v12 = a2[5];
    if (v11)
    {
      if (v12)
      {
        BOOL v13 = a1[4] == a2[4] && v11 == v12;
        if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          return 1;
        }
      }
    }
    else if (!v12)
    {
      return 1;
    }
    return 0;
  }
  return result;
}

void sub_1007874F0()
{
  sub_100162EA0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = sub_10017DF08(&qword_100E65250);
  sub_100179C0C();
  uint64_t v33 = v7;
  __chkstk_darwin(v8);
  sub_100162EB8();
  uint64_t v9 = sub_10017DF08(&qword_100E933C0);
  sub_100162E4C();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(qword_100E65268);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_10016278C();
  uint64_t v17 = v15 - v16;
  __chkstk_darwin(v18);
  sub_100119550();
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v30 - v20;
  sub_1001ABC4C(0, (unint64_t *)&qword_100E659A0);
  if (static Measurement.== infix<A, B>(_:_:)())
  {
    uint64_t v31 = v17;
    uint64_t v32 = v12;
    uint64_t v30 = v0;
    uint64_t v22 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
    if (static Measurement.== infix<A, B>(_:_:)())
    {
      sub_100787968(v5 + *(int *)(v22 + 24), (uint64_t)v21);
      sub_100787968(v3 + *(int *)(v22 + 24), v1);
      uint64_t v23 = (uint64_t)v32;
      uint64_t v24 = (uint64_t)&v32[*(int *)(v9 + 48)];
      sub_100787968((uint64_t)v21, (uint64_t)v32);
      sub_100787968(v1, v24);
      uint64_t v25 = v6;
      if (_s7Weather24LocationCompositionStateOwet_0(v23, 1, v6) == 1)
      {
        sub_100178110(v1, qword_100E65268);
        sub_100178110((uint64_t)v21, qword_100E65268);
        if (_s7Weather24LocationCompositionStateOwet_0(v24, 1, v6) == 1)
        {
          sub_100178110(v23, qword_100E65268);
          goto LABEL_10;
        }
      }
      else
      {
        uint64_t v26 = v31;
        sub_100787968(v23, v31);
        if (_s7Weather24LocationCompositionStateOwet_0(v24, 1, v25) != 1)
        {
          uint64_t v27 = v33;
          uint64_t v28 = v30;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 32))(v30, v24, v25);
          sub_1001246C8(&qword_100E933C8, &qword_100E65250);
          dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
          v29(v28, v25);
          sub_100178110(v1, qword_100E65268);
          sub_100178110((uint64_t)v21, qword_100E65268);
          v29(v26, v25);
          sub_100178110(v23, qword_100E65268);
          goto LABEL_10;
        }
        sub_100178110(v1, qword_100E65268);
        sub_100178110((uint64_t)v21, qword_100E65268);
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v26, v25);
      }
      sub_100178110(v23, &qword_100E933C0);
    }
  }
LABEL_10:
  sub_100162694();
}

uint64_t sub_100787888(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2 || *(double *)(a1 + 8) != *(double *)(a2 + 8)) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a2 + 24);
  if (!v4)
  {
    if (!v5)
    {
LABEL_14:
      if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40)) {
        return 1;
      }
      return _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    return 0;
  }
  if (!v5) {
    return 0;
  }
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16) && v4 == v5) {
    goto LABEL_14;
  }
  _stringCompareWithSmolCheck(_:_:expecting:)();
  uint64_t result = sub_1001190E0();
  if (v8) {
    goto LABEL_14;
  }
  return result;
}

uint64_t type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E93570);
}

uint64_t sub_100787968(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(qword_100E65268);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1007879D0()
{
  sub_100162EA0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_100162EB8();
  type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_10016278C();
  uint64_t v11 = (long long *)(v9 - v10);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v21 - v13;
  uint64_t v15 = sub_10017DF08(&qword_100E933D0);
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_100162E88();
  uint64_t v18 = (long long *)(v0 + *(int *)(v17 + 56));
  sub_1007896BC(v5, v0, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
  sub_1007896BC(v3, (uint64_t)v18, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1007896BC(v0, (uint64_t)v11, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
    long long v19 = v11[1];
    long long v21 = *v11;
    long long v22 = v19;
    long long v23 = v11[2];
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      long long v20 = v18[1];
      long long v24 = *v18;
      long long v25 = v20;
      long long v26 = v18[2];
      sub_100787888((uint64_t)&v21, (uint64_t)&v24);
      sub_10024D364((uint64_t)&v22, (uint64_t)v29, &qword_100E65F18);
      sub_1002F8DD8((uint64_t)v29);
      long long v30 = v23;
      sub_1002F8DD8((uint64_t)&v30);
      sub_10024D364((uint64_t)&v25, (uint64_t)v27, &qword_100E65F18);
      sub_1002F8DD8((uint64_t)v27);
      long long v28 = v26;
      sub_1002F8DD8((uint64_t)&v28);
LABEL_9:
      sub_100787D20(v0, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
      goto LABEL_10;
    }
    sub_10024D364((uint64_t)&v22, (uint64_t)&v30, &qword_100E65F18);
    sub_1002F8DD8((uint64_t)&v30);
    long long v24 = v23;
    sub_1002F8DD8((uint64_t)&v24);
  }
  else
  {
    sub_1007896BC(v0, (uint64_t)v14, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_10078971C((uint64_t)v18, v1, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature);
      sub_1007874F0();
      sub_100787D20(v1, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature);
      sub_100787D20((uint64_t)v14, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature);
      goto LABEL_9;
    }
    sub_100787D20((uint64_t)v14, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature);
  }
  sub_100178110(v0, &qword_100E933D0);
LABEL_10:
  sub_100162694();
}

uint64_t type metadata accessor for ComparisonCapsuleViewModel.Row.Body(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E934E0);
}

uint64_t sub_100787D20(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

double sub_100787D84()
{
  uint64_t v0 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
  uint64_t v1 = sub_100109308(v0);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
  sub_100162E4C();
  __chkstk_darwin(v4);
  uint64_t v6 = (double *)((char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_1001816FC();
  sub_1007896BC(v7, (uint64_t)v6, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    double v8 = *v6;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10078971C((uint64_t)v6, (uint64_t)v3, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature);
    sub_10017DF08(&qword_100E65250);
    Measurement.value.getter();
    double v8 = v9;
    sub_100787D20((uint64_t)v3, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature);
  }
  return v8;
}

double sub_100787EE0()
{
  type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
  sub_100162E4C();
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
  sub_100162E4C();
  __chkstk_darwin(v3);
  uint64_t v5 = (double *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1001816FC();
  sub_1007896BC(v6, (uint64_t)v5, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    double v7 = *v5;
    double v8 = v5[1];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v7 + v8;
  }
  else
  {
    sub_10078971C((uint64_t)v5, (uint64_t)v2, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature);
    sub_10017DF08(&qword_100E65250);
    Measurement.value.getter();
    double v9 = v10;
    sub_100787D20((uint64_t)v2, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature);
  }
  return v9;
}

void sub_100788050()
{
  sub_100162EA0();
  uint64_t v4 = type metadata accessor for WeatherFormatPlaceholder();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10019D854();
  sub_100179C0C();
  __chkstk_darwin(v8);
  uint64_t v9 = sub_100189380();
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_1001A47D0();
  sub_100162E4C();
  __chkstk_darwin(v11);
  uint64_t v12 = sub_100166B4C();
  uint64_t v13 = type metadata accessor for ComparisonCapsuleViewModel.Row(v12);
  sub_1007896BC(v0 + *(int *)(v13 + 20), v3, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10078971C(v3, v2, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature);
    static WeatherFormatStyle<>.weather.getter();
    uint64_t v14 = sub_100182BB8();
    v15(v14);
    type metadata accessor for UnitManager();
    static UnitManager.standard.getter();
    sub_10017DF08(&qword_100E65250);
    sub_10012BBE0();
    Measurement.formatted<A>(_:placeholder:unitManager:)();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
    sub_100164FC8();
    v16();
    sub_100787D20(v2, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature);
  }
  sub_100162694();
}

void sub_100788288()
{
  sub_100162EA0();
  type metadata accessor for WeatherFormatPlaceholder();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10019D854();
  sub_100179C0C();
  v13[1] = v2;
  __chkstk_darwin(v3);
  sub_100189380();
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_1001A47D0();
  sub_100162E4C();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1001816FC();
  sub_1007896BC(v8, (uint64_t)v7, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_10078971C((uint64_t)v7, v0, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature);
    static WeatherFormatStyle<>.weather.getter();
    uint64_t v9 = sub_100182BB8();
    v10(v9);
    type metadata accessor for UnitManager();
    static UnitManager.standard.getter();
    sub_10017DF08(&qword_100E65250);
    sub_10012BBE0();
    Measurement.formatted<A>(_:placeholder:unitManager:)();
    swift_release();
    sub_100164FC8();
    v11();
    sub_100162F0C();
    v12();
    sub_100787D20(v0, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature);
  }
  sub_100162694();
}

void sub_1007884D8()
{
  sub_100162EA0();
  type metadata accessor for WeatherFormatPlaceholder();
  sub_100179C0C();
  uint64_t v110 = v4;
  uint64_t v111 = v3;
  __chkstk_darwin(v3);
  sub_100109314();
  v122._object = v5;
  sub_100129064();
  uint64_t v109 = type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle();
  sub_100179C0C();
  uint64_t v108 = v6;
  __chkstk_darwin(v7);
  sub_100109314();
  v120._object = v8;
  uint64_t v9 = sub_10017DF08(qword_100E65268);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_100162E88();
  uint64_t v115 = sub_10017DF08(&qword_100E65250);
  sub_100179C0C();
  uint64_t v113 = v11;
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v112 = v13;
  uint64_t v14 = sub_100129064();
  type metadata accessor for ComparisonCapsuleViewModel.Row.Body(v14);
  sub_100162E4C();
  __chkstk_darwin(v15);
  uint64_t v16 = sub_100166B4C();
  uint64_t v17 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(v16);
  sub_100162E4C();
  __chkstk_darwin(v18);
  sub_100109314();
  uint64_t v114 = v19;
  uint64_t v20 = sub_100129064();
  *(void *)&long long v116 = type metadata accessor for ComparisonCapsuleViewModel.Row(v20);
  sub_100162E4C();
  __chkstk_darwin(v21);
  sub_10016278C();
  long long v24 = (uint64_t *)(v22 - v23);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v119._object - v26;
  uint64_t v28 = *(void *)(v1 + 32);
  uint64_t v29 = *(void *)(v1 + 40);
  uint64_t v117 = v1;
  sub_1007896BC(v1, (uint64_t)&v119._object - v26, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
  if (v29)
  {
    swift_bridgeObjectRetain();
    long long v24 = (uint64_t *)v27;
  }
  else
  {
    uint64_t v28 = *((void *)v27 + 2);
    uint64_t v30 = *((void *)v27 + 3);
    sub_10078971C((uint64_t)v27, (uint64_t)v24, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
    if (v30)
    {
      uint64_t v29 = v30;
    }
    else
    {
      uint64_t v28 = *v24;
      uint64_t v29 = v24[1];
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
  }
  sub_100787D20((uint64_t)v24, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
  sub_10012B78C();
  uint64_t v32 = v31;
  unint64_t v33 = *(void *)(v31 + 16);
  if (v33 >= *(void *)(v31 + 24) >> 1)
  {
    sub_1001D1D70();
    uint64_t v32 = v103;
  }
  *(void *)(v32 + 16) = v33 + 1;
  uint64_t v34 = v32 + 16 * v33;
  *(void *)(v34 + 32) = v28;
  *(void *)(v34 + 40) = v29;
  uint64_t v35 = v116;
  uint64_t v36 = v117;
  sub_1007896BC(v117 + *(int *)(v116 + 20), v2, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100787D20(v2, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
  }
  else
  {
    uint64_t v37 = v114;
    sub_10078971C(v2, v114, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature);
    sub_100787968(v37 + *(int *)(v17 + 24), v0);
    uint64_t v38 = v115;
    if (_s7Weather24LocationCompositionStateOwet_0(v0, 1, v115) == 1)
    {
      sub_100787D20(v37, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature);
      sub_100178110(v0, qword_100E65268);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v113 + 32))(v112, v0, v38);
      id v39 = [self mainBundle];
      sub_1001631D8();
      sub_100189FC8();
      v40._uint64_t countAndFlagsBits = 0;
      v40._object = (void *)0xE000000000000000;
      Swift::String v43 = NSLocalizedString(_:tableName:bundle:value:comment:)(v41, v42, (NSBundle)v39, v40, v119);
      v119._object = v43._object;
      uint64_t countAndFlagsBits = v43._countAndFlagsBits;

      sub_10017DF08(&qword_100E64020);
      uint64_t v44 = swift_allocObject();
      *(_OWORD *)(v44 + 16) = xmmword_100C251B0;
      static WeatherFormatStyle<>.weather.getter();
      uint64_t v45 = v110;
      uint64_t v46 = v111;
      object = v122._object;
      (*(void (**)(void *, void, uint64_t))(v110 + 104))(v122._object, enum case for WeatherFormatPlaceholder.none(_:), v111);
      type metadata accessor for UnitManager();
      static UnitManager.standard.getter();
      sub_10012BBE0();
      uint64_t v48 = Measurement.formatted<A>(_:placeholder:unitManager:)();
      uint64_t v50 = v49;
      swift_release();
      (*(void (**)(void *, uint64_t))(v45 + 8))(object, v46);
      sub_100162F0C();
      v53(v51, v52);
      *(void *)(v44 + 56) = &type metadata for String;
      *(void *)(v44 + 64) = sub_10012B7C0();
      *(void *)(v44 + 32) = v48;
      *(void *)(v44 + 40) = v50;
      uint64_t v54 = String.init(format:_:)();
      uint64_t v56 = v55;
      swift_bridgeObjectRelease();
      unint64_t v57 = *(void *)(v32 + 16);
      if (v57 >= *(void *)(v32 + 24) >> 1)
      {
        sub_1001D1D70();
        uint64_t v32 = v106;
      }
      uint64_t v36 = v117;
      *(void *)(v32 + 16) = v57 + 1;
      uint64_t v58 = v32 + 16 * v57;
      *(void *)(v58 + 32) = v54;
      *(void *)(v58 + 40) = v56;
      sub_100162F0C();
      v61(v59, v60);
      sub_100787D20(v114, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature);
      uint64_t v35 = v116;
    }
  }
  if (*(unsigned __int8 *)(v36 + *(int *)(v35 + 24)) > 2u)
  {
    sub_100788050();
    if (!v89) {
      goto LABEL_26;
    }
    uint64_t v90 = v88;
    uint64_t v91 = v89;
    id v92 = [self mainBundle:v120._object v108];
    sub_1001631D8();
    sub_100189FC8();
    v93._uint64_t countAndFlagsBits = 0;
    v93._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v94, v95, (NSBundle)v92, v93, v121);

    sub_10017DF08(&qword_100E64020);
    uint64_t v96 = swift_allocObject();
    *(_OWORD *)(v96 + 16) = xmmword_100C25ED0;
    *(void *)(v96 + 56) = &type metadata for String;
    unint64_t v97 = sub_10012B7C0();
    *(void *)(v96 + 64) = v97;
    *(void *)(v96 + 32) = v90;
    *(void *)(v96 + 40) = v91;
    sub_100788288();
    *(void *)(v96 + 96) = &type metadata for String;
    *(void *)(v96 + 104) = v97;
    *(void *)(v96 + 72) = v98;
    *(void *)(v96 + 80) = v99;
    uint64_t v85 = String.init(format:_:)();
    uint64_t v87 = v100;
    goto LABEL_23;
  }
  uint64_t v62 = self;
  id v63 = [v62 mainBundle:v120._object, v108];
  sub_1001631D8();
  sub_100189FC8();
  v64._uint64_t countAndFlagsBits = 0;
  v64._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v65, v66, (NSBundle)v63, v64, v120);

  sub_10017DF08(&qword_100E64020);
  uint64_t v67 = swift_allocObject();
  long long v116 = xmmword_100C251B0;
  *(_OWORD *)(v67 + 16) = xmmword_100C251B0;
  sub_100788288();
  uint64_t v69 = v68;
  uint64_t v71 = v70;
  *(void *)(v67 + 56) = &type metadata for String;
  unint64_t v72 = sub_10012B7C0();
  *(void *)(v67 + 64) = v72;
  *(void *)(v67 + 32) = v69;
  *(void *)(v67 + 40) = v71;
  uint64_t v73 = String.init(format:_:)();
  uint64_t v75 = v74;
  swift_bridgeObjectRelease();
  unint64_t v76 = *(void *)(v32 + 16);
  if (v76 >= *(void *)(v32 + 24) >> 1)
  {
    sub_10012B78C();
    uint64_t v32 = v105;
  }
  *(void *)(v32 + 16) = v76 + 1;
  uint64_t v77 = v32 + 16 * v76;
  *(void *)(v77 + 32) = v73;
  *(void *)(v77 + 40) = v75;
  uint64_t v78 = v117;
  sub_100788050();
  if (v79)
  {
    sub_1001849A8();
    id v80 = [v62 mainBundle];
    sub_1001631D8();
    sub_100189FC8();
    v81._uint64_t countAndFlagsBits = 0;
    v81._object = (void *)0xE000000000000000;
    v122._uint64_t countAndFlagsBits = 0x1000000000000077;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v82, v83, (NSBundle)v80, v81, v122);

    uint64_t v84 = swift_allocObject();
    *(_OWORD *)(v84 + 16) = v116;
    *(void *)(v84 + 56) = &type metadata for String;
    *(void *)(v84 + 64) = v72;
    *(void *)(v84 + 32) = v63;
    *(void *)(v84 + 40) = v78;
    uint64_t v85 = String.init(format:_:)();
    uint64_t v87 = v86;
LABEL_23:
    swift_bridgeObjectRelease();
    unint64_t v101 = *(void *)(v32 + 16);
    if (v101 >= *(void *)(v32 + 24) >> 1)
    {
      sub_1001D1D70();
      uint64_t v32 = v104;
    }
    *(void *)(v32 + 16) = v101 + 1;
    uint64_t v102 = v32 + 16 * v101;
    *(void *)(v102 + 32) = v85;
    *(void *)(v102 + 40) = v87;
  }
LABEL_26:
  uint64_t v118 = v32;
  sub_10017DF08(&qword_100E91BC0);
  sub_1001246C8((unint64_t *)&qword_100E73CB0, &qword_100E91BC0);
  BidirectionalCollection<>.joined(separator:)();
  sub_1001849A8();
  swift_bridgeObjectRelease();
  sub_100162694();
}

void sub_100788E30()
{
  sub_100162EA0();
  uint64_t v2 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v7 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v9 = v1[4];
  uint64_t v8 = v1[5];
  if (*v0 != *v1 || v0[1] != v1[1])
  {
    _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_1001190E0();
    if ((v11 & 1) == 0) {
      goto LABEL_25;
    }
  }
  if (!v4)
  {
    if (v6) {
      goto LABEL_25;
    }
LABEL_15:
    if (v5)
    {
      if (!v8) {
        goto LABEL_25;
      }
      if (v3 != v9 || v5 != v8)
      {
        _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_1001190E0();
        if ((v15 & 1) == 0) {
          goto LABEL_25;
        }
      }
    }
    else if (v8)
    {
      goto LABEL_25;
    }
    type metadata accessor for ComparisonCapsuleViewModel.Row(0);
    sub_1007879D0();
    goto LABEL_25;
  }
  if (v6)
  {
    if (v2 == v7 && v4 == v6) {
      goto LABEL_15;
    }
    _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_1001190E0();
    if (v13) {
      goto LABEL_15;
    }
  }
LABEL_25:
  sub_100162694();
}

uint64_t type metadata accessor for ComparisonCapsuleViewModel.Row(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E93430);
}

uint64_t sub_100788F74@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = LocationSearchEntity.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void *sub_100788F9C@<X0>(uint64_t *a1@<X8>)
{
  switch(*v1)
  {
    case 1:
      uint64_t result = (void *)static Color.primary.getter();
      uint64_t v4 = &unk_100E39010;
      uint64_t v5 = &off_100E39190;
      goto LABEL_7;
    case 2:
      uint64_t result = (void *)static Color.cyan.getter();
      uint64_t v4 = &unk_100E39038;
      uint64_t v5 = &off_100E39200;
LABEL_7:
      a1[3] = (uint64_t)v4;
      a1[4] = (uint64_t)v5;
      *a1 = (uint64_t)result;
      return result;
    case 3:
      sub_100B71034((uint64_t)__src);
      a1[3] = (uint64_t)&unk_100E390B8;
      a1[4] = (uint64_t)&off_100E39270;
      goto LABEL_5;
    default:
      sub_100B70F54((uint64_t)__src);
      a1[3] = (uint64_t)&unk_100E38FB8;
      a1[4] = (uint64_t)&off_100E39120;
LABEL_5:
      uint64_t v6 = swift_allocObject();
      *a1 = v6;
      return memcpy((void *)(v6 + 16), __src, 0x61uLL);
  }
}

BOOL sub_1007890A0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2
      && sub_100BDA9E8(*((void *)a1 + 1), *((void *)a2 + 1))
      && (sub_1001D4180(*((void *)a1 + 2), *((void *)a2 + 2)) & 1) != 0
      && *((double *)a1 + 3) == *((double *)a2 + 3)
      && *((double *)a1 + 4) == *((double *)a2 + 4);
}

void sub_100789120()
{
  sub_100162EA0();
  uint64_t v31 = v0;
  type metadata accessor for TimeStyle();
  sub_100179C0C();
  v30[2] = v3;
  v30[3] = v2;
  __chkstk_darwin(v2);
  sub_100109314();
  v30[1] = v4;
  sub_100129064();
  uint64_t v5 = type metadata accessor for WeatherFormatPlaceholder();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_100166B4C();
  uint64_t v9 = type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle();
  sub_100179C0C();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
  sub_100162E4C();
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_1001816FC();
  sub_1007896BC(v22, (uint64_t)v21, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = *((void *)v21 + 2);
    uint64_t v24 = *((void *)v21 + 3);
    swift_bridgeObjectRelease();
    if (!v24) {
      goto LABEL_8;
    }
  }
  else
  {
    sub_10078971C((uint64_t)v21, (uint64_t)v18, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature);
    static WeatherFormatStyle<>.weather.getter();
    (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v1, enum case for WeatherFormatPlaceholder.none(_:), v5);
    type metadata accessor for UnitManager();
    static UnitManager.standard.getter();
    sub_10017DF08(&qword_100E65250);
    sub_10012BBE0();
    uint64_t v23 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    uint64_t v25 = v11;
    uint64_t v24 = v26;
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v1, v5);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v9);
    sub_100787D20((uint64_t)v18, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature);
  }
  if (*v31 == 3)
  {
    type metadata accessor for Style();
    static Style.componentTime.getter();
    sub_1001ABC4C(0, (unint64_t *)&qword_100E65240);
    static NSDateFormatter.prevailingPeriodSymbols.getter();
    sub_100788F9C(v32);
    sub_1001B1E64(v32, v32[3]);
    uint64_t v27 = sub_10018209C();
    v28(v27);
    TimeStyle.formatTime(_:periodSymbols:font:)();
    sub_1001849A8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_100162F0C();
    v29();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v32);
  }
  else
  {
    v32[0] = v23;
    v32[1] = v24;
    sub_10014A85C();
    Text.init<A>(_:)();
    sub_1001849A8();
  }
LABEL_8:
  sub_100162694();
}

void sub_10078951C()
{
  sub_100162EA0();
  type metadata accessor for TimeStyle();
  sub_100179C0C();
  __chkstk_darwin(v1);
  if (*v0 == 3)
  {
    type metadata accessor for Style();
    static Style.componentTime.getter();
    sub_100788288();
    sub_1001ABC4C(0, (unint64_t *)&qword_100E65240);
    static NSDateFormatter.prevailingPeriodSymbols.getter();
    sub_100788F9C(v7);
    sub_1001B1E64(v7, v7[3]);
    uint64_t v2 = sub_10018209C();
    v3(v2);
    TimeStyle.formatTime(_:periodSymbols:font:)();
    sub_100162B6C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    sub_100164FC8();
    v4();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v7);
  }
  else
  {
    sub_100788288();
    v7[0] = v5;
    v7[1] = v6;
    sub_10014A85C();
    Text.init<A>(_:)();
    sub_100162B6C();
  }
  sub_100162694();
}

uint64_t sub_1007896BC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_10078971C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t sub_100789770(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1007897B8(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t sub_100789830(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

void type metadata accessor for ComparisonCapsuleViewModel()
{
}

void *sub_10078988C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    a1[4] = a2[4];
    a1[5] = v9;
    type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      uint64_t v13 = *((void *)v12 + 3);
      *((void *)v11 + 2) = *((void *)v12 + 2);
      *((void *)v11 + 3) = v13;
      uint64_t v14 = *((void *)v12 + 4);
      uint64_t v15 = *((void *)v12 + 5);
      *((void *)v11 + 4) = v14;
      *((void *)v11 + 5) = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v17 = sub_10017DF08(&qword_100E65250);
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
      v18(v11, v12, v17);
      uint64_t v19 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
      v18(&v11[*(int *)(v19 + 20)], &v12[*(int *)(v19 + 20)], v17);
      uint64_t v20 = *(int *)(v19 + 24);
      uint64_t v21 = &v11[v20];
      uint64_t v22 = &v12[v20];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v17))
      {
        uint64_t v23 = sub_10017DF08(qword_100E65268);
        memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        v18(v21, v22, v17);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v17);
      }
    }
    swift_storeEnumTagMultiPayload();
    *((unsigned char *)v4 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  }
  return v4;
}

uint64_t sub_100789AB4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = sub_10017DF08(&qword_100E65250);
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    ((void (*)(void *__return_ptr, uint64_t, uint64_t))v9)((void *)(v6 - 8), v4, v6);
    uint64_t v7 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
    v9(v4 + *(int *)(v7 + 20), v6);
    uint64_t v8 = v4 + *(int *)(v7 + 24);
    uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v8, 1, v6);
    if (!result)
    {
      return ((uint64_t (*)(uint64_t, uint64_t))v9)(v8, v6);
    }
  }
  return result;
}

void *sub_100789C18(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a2[5];
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  a1[4] = a2[4];
  a1[5] = v8;
  type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    uint64_t v12 = *((void *)v11 + 3);
    *((void *)v10 + 2) = *((void *)v11 + 2);
    *((void *)v10 + 3) = v12;
    uint64_t v13 = *((void *)v11 + 4);
    uint64_t v14 = *((void *)v11 + 5);
    *((void *)v10 + 4) = v13;
    *((void *)v10 + 5) = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v15 = sub_10017DF08(&qword_100E65250);
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
    v16(v10, v11, v15);
    uint64_t v17 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
    v16(&v10[*(int *)(v17 + 20)], &v11[*(int *)(v17 + 20)], v15);
    uint64_t v18 = *(int *)(v17 + 24);
    uint64_t v19 = &v10[v18];
    uint64_t v20 = &v11[v18];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v15))
    {
      uint64_t v21 = sub_10017DF08(qword_100E65268);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      v16(v19, v20, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v15);
    }
  }
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_100789DF0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_100787D20((uint64_t)a1 + v6, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
    type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v7 = *(void *)v8;
      *((void *)v7 + 1) = *((void *)v8 + 1);
      *((void *)v7 + 2) = *((void *)v8 + 2);
      *((void *)v7 + 3) = *((void *)v8 + 3);
      *((void *)v7 + 4) = *((void *)v8 + 4);
      *((void *)v7 + 5) = *((void *)v8 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v9 = sub_10017DF08(&qword_100E65250);
      uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
      v10(v7, v8, v9);
      uint64_t v11 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
      v10(&v7[*(int *)(v11 + 20)], &v8[*(int *)(v11 + 20)], v9);
      uint64_t v12 = *(int *)(v11 + 24);
      uint64_t v13 = &v7[v12];
      uint64_t v14 = &v8[v12];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v9))
      {
        uint64_t v15 = sub_10017DF08(qword_100E65268);
        memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        v10(v13, v14, v9);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v9);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *sub_10078A034(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = sub_10017DF08(&qword_100E65250);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32);
    v12(v8, v9, v11);
    uint64_t v13 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
    v12(&v8[*(int *)(v13 + 20)], &v9[*(int *)(v13 + 20)], v11);
    uint64_t v14 = *(int *)(v13 + 24);
    uint64_t v15 = &v8[v14];
    uint64_t v16 = &v9[v14];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v11))
    {
      uint64_t v17 = sub_10017DF08(qword_100E65268);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v12(v15, v16, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_10078A1E0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    sub_100787D20((uint64_t)a1 + v9, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
    uint64_t v12 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v13 = sub_10017DF08(&qword_100E65250);
      uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32);
      v14(v10, v11, v13);
      uint64_t v15 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
      v14(&v10[*(int *)(v15 + 20)], &v11[*(int *)(v15 + 20)], v13);
      uint64_t v16 = *(int *)(v15 + 24);
      uint64_t v17 = &v10[v16];
      uint64_t v18 = &v11[v16];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v13))
      {
        uint64_t v19 = sub_10017DF08(qword_100E65268);
        memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        v14(v17, v18, v13);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v13);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *((unsigned char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_10078A3D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10078A3E4);
}

uint64_t sub_10078A3E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_10078A46C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10078A480);
}

uint64_t sub_10078A480(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_10078A500()
{
  uint64_t result = type metadata accessor for ComparisonCapsuleViewModel.Row.Body(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_10078A5A0(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v6 = a2[3];
      *((void *)a1 + 2) = a2[2];
      *((void *)a1 + 3) = v6;
      uint64_t v7 = a2[4];
      uint64_t v8 = a2[5];
      *((void *)a1 + 4) = v7;
      *((void *)a1 + 5) = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v10 = sub_10017DF08(&qword_100E65250);
      uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
      v11(a1, (char *)a2, v10);
      uint64_t v12 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
      v11(&a1[*(int *)(v12 + 20)], (char *)a2 + *(int *)(v12 + 20), v10);
      uint64_t v13 = *(int *)(v12 + 24);
      uint64_t v14 = &a1[v13];
      uint64_t v15 = (char *)a2 + v13;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v10))
      {
        uint64_t v16 = sub_10017DF08(qword_100E65268);
        memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        v11(v14, v15, v10);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v10);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10078A774(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = sub_10017DF08(&qword_100E65250);
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    ((void (*)(void *__return_ptr, uint64_t, uint64_t))v6)((void *)(v3 - 8), a1, v3);
    uint64_t v4 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
    v6(a1 + *(int *)(v4 + 20), v3);
    uint64_t v5 = a1 + *(int *)(v4 + 24);
    uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v5, 1, v3);
    if (!result)
    {
      return ((uint64_t (*)(uint64_t, uint64_t))v6)(v5, v3);
    }
  }
  return result;
}

void *sub_10078A8A4(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v4 = a2[3];
    a1[2] = a2[2];
    a1[3] = v4;
    uint64_t v5 = a2[5];
    a1[4] = a2[4];
    a1[5] = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v6 = sub_10017DF08(&qword_100E65250);
    uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16);
    v7(a1, a2, v6);
    uint64_t v8 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
    v7((char *)a1 + *(int *)(v8 + 20), (char *)a2 + *(int *)(v8 + 20), v6);
    uint64_t v9 = *(int *)(v8 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v6))
    {
      uint64_t v12 = sub_10017DF08(qword_100E65268);
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      v7(v10, v11, v6);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v6);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_10078AA28(char *a1, char *a2)
{
  if (a1 != a2)
  {
    sub_100787D20((uint64_t)a1, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = *((void *)a2 + 1);
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *((void *)a1 + 3) = *((void *)a2 + 3);
      *((void *)a1 + 4) = *((void *)a2 + 4);
      *((void *)a1 + 5) = *((void *)a2 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v4 = sub_10017DF08(&qword_100E65250);
      uint64_t v5 = *(void (**)(char *, char *, uint64_t))(*(void *)(v4 - 8) + 16);
      v5(a1, a2, v4);
      uint64_t v6 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
      v5(&a1[*(int *)(v6 + 20)], &a2[*(int *)(v6 + 20)], v4);
      uint64_t v7 = *(int *)(v6 + 24);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v4))
      {
        uint64_t v10 = sub_10017DF08(qword_100E65268);
        memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        v5(v8, v9, v4);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v4);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_10078ABE8(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_10017DF08(&qword_100E65250);
    uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
    v7(a1, a2, v6);
    uint64_t v8 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
    v7(&a1[*(int *)(v8 + 20)], &a2[*(int *)(v8 + 20)], v6);
    uint64_t v9 = *(int *)(v8 + 24);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v6))
    {
      uint64_t v12 = sub_10017DF08(qword_100E65268);
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      v7(v10, v11, v6);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_10078AD58(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100787D20((uint64_t)a1, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_10017DF08(&qword_100E65250);
      uint64_t v7 = *(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32);
      v7(a1, a2, v6);
      uint64_t v8 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
      v7(&a1[*(int *)(v8 + 20)], &a2[*(int *)(v8 + 20)], v6);
      uint64_t v9 = *(int *)(v8 + 24);
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v6))
      {
        uint64_t v12 = sub_10017DF08(qword_100E65268);
        memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        v7(v10, v11, v6);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v6);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_10078AEEC()
{
  uint64_t result = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

char *sub_10078AF7C(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10017DF08(&qword_100E65250);
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    v8(&a1[*(int *)(a3 + 20)], (char *)a2 + *(int *)(a3 + 20), v7);
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = (char *)a2 + v9;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v7))
    {
      uint64_t v12 = sub_10017DF08(qword_100E65268);
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_10078B0E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E65250);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  v7(a1 + *(int *)(a2 + 20), v4);
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v5, 1, v4);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v7)(v5, v4);
  }
  return result;
}

char *sub_10078B1D0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E65250);
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v6))
  {
    uint64_t v11 = sub_10017DF08(qword_100E65268);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v6);
  }
  return a1;
}

char *sub_10078B2E8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E65250);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v8(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&a1[v9], 1, v6);
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v6);
  if (!v12)
  {
    if (!v13)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_10017DF08(qword_100E65268);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v6);
  return a1;
}

char *sub_10078B488(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E65250);
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v6))
  {
    uint64_t v11 = sub_10017DF08(qword_100E65268);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v6);
  }
  return a1;
}

char *sub_10078B5A0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E65250);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v8(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&a1[v9], 1, v6);
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v6);
  if (!v12)
  {
    if (!v13)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_10017DF08(qword_100E65268);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v6);
  return a1;
}

uint64_t sub_10078B740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10078B754);
}

uint64_t sub_10078B754(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10017DF08(&qword_100E65250);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    uint64_t v8 = sub_10017DF08(qword_100E65268);
    uint64_t v9 = a1 + *(int *)(a3 + 24);
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_10078B7D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10078B7EC);
}

uint64_t sub_10078B7EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_10017DF08(&qword_100E65250);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    uint64_t v10 = sub_10017DF08(qword_100E65268);
    uint64_t v11 = a1 + *(int *)(a4 + 24);
  }

  return _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

void sub_10078B878()
{
  sub_10078B940();
  if (v0 <= 0x3F)
  {
    sub_10078B9A8();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_10078B940()
{
  if (!qword_100E7DE68)
  {
    sub_1001ABC4C(255, (unint64_t *)&qword_100E659A0);
    unint64_t v0 = type metadata accessor for Measurement();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E7DE68);
    }
  }
}

void sub_10078B9A8()
{
  if (!qword_100E7DE70)
  {
    sub_10018C6DC(&qword_100E65250);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E7DE70);
    }
  }
}

unsigned char *sub_10078BA04(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10078BAD0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

void type metadata accessor for ComparisonCapsuleViewModel.Kind()
{
}

void type metadata accessor for ComparisonCapsuleViewModel.Row.Label()
{
}

uint64_t sub_10078BB10()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10078BB4C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_10078BB94(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10078BC14(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10078BC64(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10078BCA4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

void type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Bar()
{
}

unint64_t sub_10078BD00()
{
  unint64_t result = qword_100E935B0;
  if (!qword_100E935B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E935B0);
  }
  return result;
}

uint64_t ScrollView.wScrollsContentToBeginningInRightToLeft(_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(a2, v2, a1);
  return ScrollView.scrollsContentToBeginningInRightToLeft.setter();
}

uint64_t sub_10078BDC8@<X0>(char *a1@<X0>, void *a2@<X8>)
{
  sub_100A39674(*a1, v7);
  uint64_t v3 = v8;
  uint64_t v4 = v9;
  sub_1001B1E64(v7, v8);
  *a2 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  a2[1] = v5;
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v7);
}

uint64_t sub_10078BE40@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  *a2 = v2;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10078BE4C(uint64_t a1, uint64_t a2, char a3)
{
  int v49 = a3 & 1;
  uint64_t v48 = type metadata accessor for LocationModel();
  sub_100179C0C();
  uint64_t v7 = v6;
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v10);
  uint64_t v11 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MainAction();
  sub_100179C0C();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  double v47 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v44 - v17;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v44 - v20;
  uint64_t v50 = v13;
  uint64_t v51 = v22;
  if (a3)
  {
    uint64_t v24 = _swiftEmptyArrayStorage;
    uint64_t v31 = v52;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v18, a1, v48);
  }
  else
  {
    double v23 = *(double *)&a2;
    uint64_t v46 = a1;
    LocationModel.identifier.getter();
    type metadata accessor for ListViewAction();
    swift_storeEnumTagMultiPayload();
    type metadata accessor for ViewAction();
    swift_storeEnumTagMultiPayload();
    sub_10017E89C();
    uint64_t v24 = (void *)sub_1001A6D34(0, 1, 1, (uint64_t)_swiftEmptyArrayStorage);
    unint64_t v26 = v24[2];
    unint64_t v25 = v24[3];
    if (v26 >= v25 >> 1) {
      uint64_t v24 = (void *)sub_1001A6D34(v25 > 1, v26 + 1, 1, (uint64_t)v24);
    }
    v24[2] = v26 + 1;
    sub_10008FF6C((uint64_t)v21, (uint64_t)v24+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v26);
    id v44 = self;
    uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    uint64_t v27 = v46;
    uint64_t v28 = v48;
    v45((char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v46, v48);
    unint64_t v29 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v30 = swift_allocObject();
    uint64_t v31 = v52;
    *(void *)(v30 + 16) = v52;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v30 + v29, v11, v28);
    aBlock[4] = sub_10078DA20;
    uint64_t v54 = (void *)v30;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1003169EC;
    aBlock[3] = &unk_100E27148;
    uint64_t v32 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    id v33 = [v44 scheduledTimerWithTimeInterval:0 repeats:v32 block:v23];
    _Block_release(v32);

    v45(v18, v27, v28);
  }
  char v34 = v49 ^ 1;
  v18[*(int *)(sub_10017DF08(&qword_100E6F640) + 48)] = v34;
  type metadata accessor for ListViewAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for ViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v24 = (void *)sub_1001A6D34(0, v24[2] + 1, 1, (uint64_t)v24);
  }
  uint64_t v35 = (uint64_t)v47;
  unint64_t v37 = v24[2];
  unint64_t v36 = v24[3];
  if (v37 >= v36 >> 1) {
    uint64_t v24 = (void *)sub_100183EB0(v36);
  }
  v24[2] = v37 + 1;
  unint64_t v38 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
  uint64_t v39 = *(void *)(v50 + 72);
  sub_10008FF6C((uint64_t)v18, (uint64_t)v24 + v38 + v39 * v37);
  type metadata accessor for SearchViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  unint64_t v41 = v24[2];
  unint64_t v40 = v24[3];
  if (v41 >= v40 >> 1) {
    uint64_t v24 = (void *)sub_100183EB0(v40);
  }
  v24[2] = v41 + 1;
  sub_10008FF6C(v35, (uint64_t)v24 + v38 + v41 * v39);
  Swift::String_optional v42 = *(uint64_t (**)(uint64_t))(v31 + 16);
  uint64_t v57 = 0;
  memset(v56, 0, sizeof(v56));
  sub_1001AB0B0((uint64_t)v56, (uint64_t)aBlock);
  uint64_t v54 = v24;
  char v55 = 0;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1001AB2DC((uint64_t)aBlock, v42);
  sub_1001781AC((uint64_t)aBlock, &qword_100E63488);
  swift_bridgeObjectRelease();
  sub_1001781AC((uint64_t)v56, (uint64_t *)&unk_100EA01F0);
  return swift_release();
}

uint64_t sub_10078C388(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for MainAction();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(uint64_t (**)(uint64_t))(a2 + 16);
  swift_retain();
  LocationModel.identifier.getter();
  type metadata accessor for LocationViewerViewAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for ViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = 0;
  memset(v8, 0, sizeof(v8));
  sub_1001AAF58((uint64_t)v5, (uint64_t)v8, v6);
  sub_1001781AC((uint64_t)v8, (uint64_t *)&unk_100EA01F0);
  sub_1001ABE70((uint64_t)v5);
  return swift_release();
}

uint64_t sub_10078C4A4()
{
  return sub_10078C894();
}

uint64_t sub_10078C4AC()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 16);
  sub_10017DF08(&qword_100E63480);
  type metadata accessor for MainAction();
  sub_100179EF0();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100C25ED0;
  type metadata accessor for ListViewAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for ViewAction();
  swift_storeEnumTagMultiPayload();
  sub_10017E89C();
  type metadata accessor for NotificationsOptInAction();
  swift_storeEnumTagMultiPayload();
  uint64_t v3 = swift_storeEnumTagMultiPayload();
  sub_10019E9F4(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13[0], v14, v15, v16, v17, v18, v19, v20[0], v20[1], v21);
  uint64_t v18 = v2;
  sub_1001893A8();
  swift_bridgeObjectRetain();
  sub_1001AB2DC((uint64_t)v13, v1);
  sub_1001781AC((uint64_t)v13, &qword_100E63488);
  swift_bridgeObjectRelease();
  sub_1001781AC((uint64_t)v20, (uint64_t *)&unk_100EA01F0);
  return swift_release();
}

uint64_t sub_10078C634()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 16);
  sub_10017DF08(&qword_100E63480);
  type metadata accessor for MainAction();
  sub_100179EF0();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100C25ED0;
  type metadata accessor for ListViewAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for ViewAction();
  swift_storeEnumTagMultiPayload();
  sub_10017E89C();
  type metadata accessor for NotificationsOptInAction();
  swift_storeEnumTagMultiPayload();
  uint64_t v3 = swift_storeEnumTagMultiPayload();
  sub_10019E9F4(v3, v4, v5, v6, v7, v8, v9, v10, v12, v13[0], v14, v15, v16, v17, v18, v19, v20[0], v20[1], v21);
  uint64_t v18 = v2;
  sub_1001893A8();
  swift_bridgeObjectRetain();
  sub_1001AB2DC((uint64_t)v13, v1);
  sub_1001781AC((uint64_t)v13, &qword_100E63488);
  swift_bridgeObjectRelease();
  sub_1001781AC((uint64_t)v20, (uint64_t *)&unk_100EA01F0);
  return swift_release();
}

void sub_10078C794(unsigned __int8 a1)
{
  int v3 = a1;
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v4);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (v3)
  {
    if (sub_100A78058(a1))
    {
      uint64_t v7 = *(uint64_t (**)(uint64_t))(v1 + 16);
      type metadata accessor for LocationViewerViewAction();
      sub_10019F094();
      type metadata accessor for ViewAction();
      swift_storeEnumTagMultiPayload();
      sub_1001D1D94();
      sub_10017C9D8();
      sub_1001AAF58((uint64_t)v6, (uint64_t)v8, v7);
      sub_1001781AC((uint64_t)v8, (uint64_t *)&unk_100EA01F0);
      sub_1001ABE70((uint64_t)v6);
      swift_release();
    }
  }
}

uint64_t sub_10078C88C()
{
  return sub_10078C894();
}

uint64_t sub_10078C894()
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v2);
  sub_10012B938();
  int v3 = *(uint64_t (**)(uint64_t))(v0 + 16);
  type metadata accessor for ListViewAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for ViewAction();
  swift_storeEnumTagMultiPayload();
  sub_1001D1D94();
  sub_10017C9D8();
  sub_1001AAF58(v1, (uint64_t)v5, v3);
  sub_1001781AC((uint64_t)v5, (uint64_t *)&unk_100EA01F0);
  sub_1001ABE70(v1);
  return swift_release();
}

uint64_t sub_10078C974()
{
  uint64_t result = sub_100A78058(4);
  if (result)
  {
    uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 16);
    sub_10017DF08(&qword_100E63480);
    type metadata accessor for MainAction();
    sub_100179EF0();
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_100C251B0;
    type metadata accessor for ListViewAction();
    swift_storeEnumTagMultiPayload();
    type metadata accessor for ViewAction();
    swift_storeEnumTagMultiPayload();
    uint64_t v4 = swift_storeEnumTagMultiPayload();
    sub_10019E9F4(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13[0], v14, v15, v16, v17, v18, v19, v20[0], v20[1], v21);
    uint64_t v18 = v3;
    sub_1001893A8();
    swift_bridgeObjectRetain();
    sub_1001AB2DC((uint64_t)v13, v2);
    sub_1001781AC((uint64_t)v13, &qword_100E63488);
    swift_bridgeObjectRelease();
    sub_1001781AC((uint64_t)v20, (uint64_t *)&unk_100EA01F0);
    return swift_release();
  }
  return result;
}

uint64_t sub_10078CAB4(uint64_t a1, uint64_t a2)
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_10016279C();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v2 + 16);
  *uint64_t v3 = a1;
  v3[1] = a2;
  type metadata accessor for LocationsAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_10017C9D8();
  sub_1001AAF58((uint64_t)v3, (uint64_t)v9, v7);
  sub_1001781AC((uint64_t)v9, (uint64_t *)&unk_100EA01F0);
  sub_1001ABE70((uint64_t)v3);
  return swift_release();
}

uint64_t sub_10078CB8C()
{
  uint64_t v2 = type metadata accessor for IndexSet.Index();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_10012B938();
  IndexSet.startIndex.getter();
  uint64_t v6 = IndexSet.subscript.getter();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v2);
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v0 + 16);
  sub_10017DF08(&qword_100E63480);
  type metadata accessor for MainAction();
  sub_100179EF0();
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_100C25ED0;
  *(void *)(v10 + v9) = v6;
  type metadata accessor for LocationsAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for SearchViewAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for ViewAction();
  swift_storeEnumTagMultiPayload();
  sub_10017E89C();
  uint64_t v11 = sub_10019D87C();
  sub_1001AB0B0(v11, (uint64_t)v13);
  uint64_t v14 = v10;
  char v15 = 0;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1001AB2DC((uint64_t)v13, v7);
  sub_1001781AC((uint64_t)v13, &qword_100E63488);
  swift_bridgeObjectRelease();
  sub_1001781AC((uint64_t)v16, (uint64_t *)&unk_100EA01F0);
  return swift_release();
}

uint64_t sub_10078CD74(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v31 = *(void *)(v2 + 16);
  sub_10017DF08(&qword_100E63480);
  type metadata accessor for MainAction();
  sub_100179EF0();
  uint64_t v7 = *(void *)(v6 + 72);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_100C25ED0;
  type metadata accessor for ListViewAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for ViewAction();
  swift_storeEnumTagMultiPayload();
  sub_1001638D4();
  uint64_t v11 = (void *)(v10 + v9 + v7);
  if (v5)
  {
    *uint64_t v11 = a1;
    v11[1] = a2;
    type metadata accessor for SearchViewAction();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = sub_1001638D4();
    sub_10019E9F4(v12, v13, v14, v15, v16, v17, v18, v19, v31, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43);
    uint64_t v39 = v10;
    sub_1001893A8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001AB2DC((uint64_t)&v34, v32);
    sub_1001781AC((uint64_t)&v34, &qword_100E63488);
    swift_bridgeObjectRelease();
    sub_1001781AC((uint64_t)&v41, (uint64_t *)&unk_100EA01F0);
    swift_release();
    swift_beginAccess();
    sub_10020D948(v2 + 72, (uint64_t)&v34);
    uint64_t v20 = v37;
    uint64_t v21 = v38;
    sub_1001B1E64(&v34, v37);
    (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v21 + 32))(a1, a2, v20, v21);
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v34);
  }
  else
  {
    type metadata accessor for SearchViewAction();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v23 = sub_1001638D4();
    sub_10019E9F4(v23, v24, v25, v26, v27, v28, v29, v30, v31, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43);
    uint64_t v39 = v10;
    sub_1001893A8();
    swift_bridgeObjectRetain();
    sub_1001AB2DC((uint64_t)&v34, v33);
    sub_1001781AC((uint64_t)&v34, &qword_100E63488);
    swift_bridgeObjectRelease();
    sub_1001781AC((uint64_t)&v41, (uint64_t *)&unk_100EA01F0);
    return swift_release();
  }
}

uint64_t sub_10078CFF4(char a1)
{
  type metadata accessor for MainAction();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_10012B938();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v1 + 16);
  if (a1)
  {
    *uint64_t v2 = 1;
    type metadata accessor for ListViewAction();
    swift_storeEnumTagMultiPayload();
    type metadata accessor for ViewAction();
    swift_storeEnumTagMultiPayload();
    sub_1001D1D94();
    uint64_t v13 = 0;
    memset(v12, 0, sizeof(v12));
    swift_retain();
    sub_1001AAF58((uint64_t)v2, (uint64_t)v12, v7);
    sub_1001781AC((uint64_t)v12, (uint64_t *)&unk_100EA01F0);
    sub_1001ABE70((uint64_t)v2);
  }
  else
  {
    sub_10017DF08(&qword_100E63480);
    unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_100C25ED0;
    *(unsigned char *)(v9 + v8) = 0;
    type metadata accessor for ListViewAction();
    swift_storeEnumTagMultiPayload();
    type metadata accessor for ViewAction();
    swift_storeEnumTagMultiPayload();
    sub_1001D1D94();
    type metadata accessor for SearchViewAction();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_1001D1D94();
    uint64_t v10 = sub_10019D87C();
    sub_1001AB0B0(v10, (uint64_t)v12);
    uint64_t v14 = v9;
    char v15 = 0;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1001AB2DC((uint64_t)v12, v7);
    sub_1001781AC((uint64_t)v12, &qword_100E63488);
    swift_bridgeObjectRelease();
    sub_1001781AC((uint64_t)v16, (uint64_t *)&unk_100EA01F0);
  }
  return swift_release();
}

uint64_t sub_10078D214(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v3 = result & 0xFFFFFFFFFFFFLL;
  }
  if (v3)
  {
    uint64_t v5 = result;
    swift_beginAccess();
    sub_10020D948(v2 + 72, (uint64_t)v8);
    uint64_t v6 = v9;
    uint64_t v7 = v10;
    sub_1001B1E64(v8, v9);
    (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v7 + 32))(v5, a2, v6, v7);
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v8);
  }
  return result;
}

uint64_t sub_10078D2C8()
{
  return sub_10078C894();
}

uint64_t sub_10078D2D0()
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  sub_100179C0C();
  uint64_t v17 = v4;
  __chkstk_darwin(v5);
  sub_10012B938();
  uint64_t v16 = type metadata accessor for DispatchQoS();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_10016279C();
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(uint64_t (**)(uint64_t))(v0 + 16);
  *uint64_t v11 = 1;
  type metadata accessor for ViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = 0;
  long long aBlock = 0u;
  long long v19 = 0u;
  swift_retain();
  sub_1001AAF58((uint64_t)v11, (uint64_t)&aBlock, v12);
  sub_1001781AC((uint64_t)&aBlock, (uint64_t *)&unk_100EA01F0);
  sub_1001ABE70((uint64_t)v11);
  swift_release();
  sub_1001AB3E0();
  uint64_t v13 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v20 = sub_10078D974;
  uint64_t v21 = v0;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v19 = sub_10010A4D4;
  *((void *)&v19 + 1) = &unk_100E270F8;
  uint64_t v14 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  *(void *)&long long aBlock = _swiftEmptyArrayStorage;
  sub_100216874();
  sub_10017DF08(&qword_100E75530);
  sub_100115EDC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v2, v16);
}

uint64_t sub_10078D58C(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 16);
  sub_10017DF08(&qword_100E63480);
  uint64_t v2 = *(void *)(type metadata accessor for MainAction() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100C25ED0;
  *(unsigned char *)(v4 + v3) = 1;
  type metadata accessor for ListViewAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for ViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = 0;
  memset(v9, 0, sizeof(v9));
  sub_1001AB0B0((uint64_t)v9, (uint64_t)v6);
  uint64_t v7 = v4;
  char v8 = 0;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1001AB2DC((uint64_t)v6, v1);
  sub_1001781AC((uint64_t)v6, &qword_100E63488);
  swift_bridgeObjectRelease();
  sub_1001781AC((uint64_t)v9, (uint64_t *)&unk_100EA01F0);
  return swift_release();
}

uint64_t type metadata accessor for ListInteractor()
{
  return self;
}

void sub_10078D778()
{
  sub_1001B1E64((void *)(v0 + 32), *(void *)(v0 + 56));

  sub_10040C000();
}

uint64_t sub_10078D7BC(uint64_t a1, uint64_t a2)
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_1001A243C();
  *uint64_t v2 = a2;
  type metadata accessor for SearchViewAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for ViewAction();
  sub_10019F094();
  sub_10017E89C();
  sub_10017C9D8();
  swift_bridgeObjectRetain();
  sub_1001A47F8();
  sub_1001781AC((uint64_t)v6, (uint64_t *)&unk_100EA01F0);
  sub_1001ABE70((uint64_t)v2);
  return swift_release();
}

uint64_t sub_10078D888()
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v1);
  sub_1001A243C();
  swift_retain();
  swift_errorRetain();
  CodableError.init(_:)();
  type metadata accessor for SearchViewAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for ViewAction();
  sub_10019F094();
  sub_10017E89C();
  uint64_t v4 = 0;
  memset(v3, 0, sizeof(v3));
  sub_1001A47F8();
  sub_1001781AC((uint64_t)v3, (uint64_t *)&unk_100EA01F0);
  sub_1001ABE70(v0);
  return swift_release();
}

uint64_t sub_10078D974()
{
  return sub_10078D58C(v0);
}

uint64_t sub_10078D97C()
{
  uint64_t v1 = type metadata accessor for LocationModel();
  sub_100179C0C();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);

  return swift_deallocObject();
}

uint64_t sub_10078DA20(uint64_t a1)
{
  type metadata accessor for LocationModel();
  uint64_t v3 = *(void *)(v1 + 16);

  return sub_10078C388(a1, v3);
}

uint64_t sub_10078DA9C()
{
  return swift_deallocClassInstance();
}

uint64_t destroy for ReportWeatherConditionsView()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ReportWeatherConditionsView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  uint64_t v9 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
  uint64_t v10 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v10;
  uint64_t v11 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v11;
  *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
  uint64_t v12 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v12;
  uint64_t v13 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v13;
  *(_WORD *)(a1 + 208) = *(_WORD *)(a2 + 208);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ReportWeatherConditionsView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(unsigned char *)(a1 + 169) = *(unsigned char *)(a2 + 169);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(unsigned char *)(a1 + 209) = *(unsigned char *)(a2 + 209);
  return a1;
}

void *initializeWithTake for ReportWeatherConditionsView(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xD2uLL);
}

uint64_t assignWithTake for ReportWeatherConditionsView(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v9;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  uint64_t v10 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 168) = *(unsigned char *)(a2 + 168);
  *(unsigned char *)(a1 + 169) = *(unsigned char *)(a2 + 169);
  uint64_t v12 = *(void *)(a2 + 184);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 200);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = v13;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 208) = *(unsigned char *)(a2 + 208);
  *(unsigned char *)(a1 + 209) = *(unsigned char *)(a2 + 209);
  return a1;
}

uint64_t getEnumTagSinglePayload for ReportWeatherConditionsView(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 210))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ReportWeatherConditionsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 208) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 210) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 210) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReportWeatherConditionsView()
{
  return &type metadata for ReportWeatherConditionsView;
}

uint64_t sub_10078E048()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10078E064@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v33 = a5;
  uint64_t v29 = a3;
  int v35 = a2;
  uint64_t v40 = a7;
  uint64_t v10 = type metadata accessor for Optional();
  uint64_t v43 = a6;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v37 = v10;
  uint64_t v11 = type metadata accessor for TagValueTraitKey.Value();
  uint64_t v38 = *(void *)(v11 - 8);
  uint64_t v39 = v11;
  __chkstk_darwin(v11);
  uint64_t v31 = (char *)&v27 - v12;
  uint64_t v30 = type metadata accessor for TagValueTraitKey.Value();
  uint64_t v13 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  char v15 = (char *)&v27 - v14;
  type metadata accessor for TagValueTraitKey();
  swift_getWitnessTable();
  uint64_t v32 = type metadata accessor for _TraitWritingModifier();
  uint64_t v16 = type metadata accessor for ModifiedContent();
  uint64_t v34 = *(void *)(v16 - 8);
  __n128 v17 = __chkstk_darwin(v16);
  long long v19 = (char *)&v27 - v18;
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, __n128))(*(void *)(a4 - 8) + 16);
  uint64_t v28 = a1;
  v20(v15, a1, a4, v17);
  uint64_t v21 = 1;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, a4);
  uint64_t v22 = v33;
  View._trait<A>(_:_:)();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v30);
  uint64_t v23 = (uint64_t)v31;
  if (v35)
  {
    ((void (*)(char *, uint64_t, uint64_t))v20)(v31, v28, a4);
    _s7Weather24LocationCompositionStateOwst_0(v23, 0, 1, a4);
    uint64_t v21 = 0;
  }
  uint64_t v24 = swift_checkMetadataState();
  _s7Weather24LocationCompositionStateOwst_0(v23, v21, 1, v24);
  type metadata accessor for TagValueTraitKey();
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v41 = v22;
  uint64_t v42 = v25;
  swift_getWitnessTable();
  swift_getWitnessTable();
  View._trait<A>(_:_:)();
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v23, v39);
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v19, v16);
}

uint64_t sub_10078E47C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for AutomationInfo(0);
  __chkstk_darwin(v3);
  uint64_t v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_10017DF08(&qword_100E79EF8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v10 = [self mainBundle];
  v20._uint64_t countAndFlagsBits = 0xD000000000000053;
  v20._object = (void *)0x8000000100CB1CF0;
  v11._object = (void *)0x8000000100CB1CD0;
  v11._uint64_t countAndFlagsBits = 0xD000000000000012;
  v12._uint64_t countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  Swift::String v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v20);

  Swift::String v17 = v13;
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v16 = v1;
  sub_10017DF08(&qword_100E93740);
  sub_100622AC4();
  sub_1001246C8(&qword_100E93748, &qword_100E93740);
  Section<>.init(header:content:)();
  type metadata accessor for AutomationCellInfo(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_10048D450((uint64_t)v5, a1);
  sub_1003F8810((uint64_t)v5);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_10078E6F0(uint64_t a1)
{
  __chkstk_darwin(a1);
  unint64_t v2 = v1;
  uint64_t v56 = v3;
  memcpy(__dst, v1, sizeof(__dst));
  memcpy(v128, v2, 0xD2uLL);
  sub_10017DF08(qword_100E93750);
  Binding.projectedValue.getter();
  swift_getKeyPath();
  memcpy(v128, __src, 0xD2uLL);
  Binding.subscript.getter();
  swift_release();
  sub_1006229E0((uint64_t)__src);
  uint64_t v54 = v123[1];
  uint64_t v55 = v123[0];
  char v53 = v123[2];
  memcpy(v128, v2, 0xD2uLL);
  Binding.wrappedValue.getter();
  uint64_t v51 = v126[0];
  uint64_t v52 = v126[1];
  swift_bridgeObjectRetain();
  sub_1002E7344((uint64_t)v126);
  memcpy(v128, v2, 0xD2uLL);
  Binding.wrappedValue.getter();
  uint64_t v49 = v127[2];
  uint64_t v50 = v127[3];
  swift_bridgeObjectRetain();
  sub_1002E7344((uint64_t)v127);
  memcpy(v123, v2, 0xD2uLL);
  Binding.projectedValue.getter();
  swift_getKeyPath();
  memcpy(v123, v128, 0xD2uLL);
  Binding.subscript.getter();
  swift_release();
  sub_1006229E0((uint64_t)v128);
  uint64_t v47 = v115[1];
  uint64_t v48 = v115[0];
  unsigned __int8 v46 = v115[2];
  memcpy(v123, v2, 0xD2uLL);
  Binding.wrappedValue.getter();
  uint64_t v44 = v129[6];
  uint64_t v45 = v129[5];
  swift_bridgeObjectRetain();
  sub_1002E7344((uint64_t)v129);
  memcpy(v123, v2, 0xD2uLL);
  Binding.wrappedValue.getter();
  uint64_t v42 = v130[8];
  uint64_t v43 = v130[7];
  swift_bridgeObjectRetain();
  sub_1002E7344((uint64_t)v130);
  memcpy(v123, v2, 0xD2uLL);
  Binding.wrappedValue.getter();
  memcpy(v131, v115, 0xC2uLL);
  sub_1002E7344((uint64_t)v131);
  if (v131[72] == 1)
  {
    memcpy(v115, v2, 0xD2uLL);
    Binding.projectedValue.getter();
    swift_getKeyPath();
    memcpy(v115, v123, 0xD2uLL);
    Binding.subscript.getter();
    swift_release();
    sub_1006229E0((uint64_t)v123);
    uint64_t v40 = v107[1];
    uint64_t v41 = v107[0];
    uint64_t v39 = LOBYTE(v107[2]);
    if (qword_100E62510 != -1) {
      swift_once();
    }
    uint64_t v38 = qword_100F51A70;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v40 = 0;
    uint64_t v41 = 0;
    uint64_t v38 = 0;
    uint64_t v39 = 0;
  }
  memcpy(v115, __dst, 0xD2uLL);
  Binding.projectedValue.getter();
  swift_getKeyPath();
  memcpy(v115, v123, 0xD2uLL);
  Binding.subscript.getter();
  swift_release();
  sub_1006229E0((uint64_t)v123);
  uint64_t v36 = v107[1];
  uint64_t v37 = v107[0];
  char v35 = v107[2];
  memcpy(v115, __dst, 0xD2uLL);
  Binding.wrappedValue.getter();
  uint64_t v33 = v117;
  uint64_t v34 = v118;
  swift_bridgeObjectRetain();
  sub_1002E7344((uint64_t)v116);
  memcpy(v115, __dst, 0xD2uLL);
  Binding.wrappedValue.getter();
  uint64_t v31 = v120;
  uint64_t v32 = v121;
  swift_bridgeObjectRetain();
  sub_1002E7344((uint64_t)v119);
  memcpy(v115, __dst, 0xD2uLL);
  Binding.wrappedValue.getter();
  memcpy(v122, v107, 0xC2uLL);
  sub_1002E7344((uint64_t)v122);
  if (v122[112] == 1)
  {
    memcpy(v107, __dst, 0xD2uLL);
    Binding.projectedValue.getter();
    swift_getKeyPath();
    memcpy(v107, v115, 0xD2uLL);
    Binding.subscript.getter();
    swift_release();
    sub_1006229E0((uint64_t)v115);
    uint64_t v29 = v99[1];
    uint64_t v30 = v99[0];
    uint64_t v28 = LOBYTE(v99[2]);
    if (qword_100E62518 != -1) {
      swift_once();
    }
    uint64_t v27 = qword_100F51A78;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    uint64_t v27 = 0;
    uint64_t v28 = 0;
  }
  memcpy(v107, __dst, 0xD2uLL);
  Binding.projectedValue.getter();
  swift_getKeyPath();
  memcpy(v107, v115, 0xD2uLL);
  Binding.subscript.getter();
  swift_release();
  sub_1006229E0((uint64_t)v115);
  uint64_t v25 = v99[1];
  uint64_t v26 = v99[0];
  char v24 = (char)v99[2];
  memcpy(v107, __dst, 0xD2uLL);
  Binding.wrappedValue.getter();
  uint64_t v22 = v109;
  uint64_t v23 = v110;
  swift_bridgeObjectRetain();
  sub_1002E7344((uint64_t)v108);
  memcpy(v107, __dst, 0xD2uLL);
  Binding.wrappedValue.getter();
  uint64_t v20 = v112;
  uint64_t v21 = v113;
  swift_bridgeObjectRetain();
  sub_1002E7344((uint64_t)v111);
  memcpy(v107, __dst, 0xD2uLL);
  Binding.wrappedValue.getter();
  memcpy(v114, v99, 0xC2uLL);
  sub_1002E7344((uint64_t)v114);
  if (v114[152] == 1)
  {
    memcpy(v99, __dst, 0xD2uLL);
    Binding.projectedValue.getter();
    swift_getKeyPath();
    memcpy(v99, v107, 0xD2uLL);
    Binding.subscript.getter();
    swift_release();
    sub_1006229E0((uint64_t)v107);
    uint64_t v18 = v57[1];
    uint64_t v19 = v57[0];
    uint64_t v17 = LOBYTE(v57[2]);
    if (qword_100E62520 != -1) {
      swift_once();
    }
    uint64_t v16 = qword_100F51A80;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
  }
  memcpy(v99, __dst, 0xD2uLL);
  Binding.projectedValue.getter();
  swift_getKeyPath();
  memcpy(v99, v107, 0xD2uLL);
  Binding.subscript.getter();
  swift_release();
  sub_1006229E0((uint64_t)v107);
  uint64_t v4 = v57[0];
  uint64_t v5 = v57[1];
  char v6 = v57[2];
  memcpy(v99, __dst, 0xD2uLL);
  Binding.wrappedValue.getter();
  uint64_t v7 = v101;
  uint64_t v8 = v102;
  swift_bridgeObjectRetain();
  sub_1002E7344((uint64_t)v100);
  memcpy(v99, __dst, 0xD2uLL);
  Binding.wrappedValue.getter();
  uint64_t v9 = v104;
  uint64_t v10 = v105;
  swift_bridgeObjectRetain();
  sub_1002E7344((uint64_t)v103);
  memcpy(v99, __dst, 0xD2uLL);
  Binding.wrappedValue.getter();
  memcpy(v106, v57, 0xC2uLL);
  sub_1002E7344((uint64_t)v106);
  if (v106[192] == 1)
  {
    memcpy(v57, __dst, 0xD2uLL);
    Binding.projectedValue.getter();
    swift_getKeyPath();
    memcpy(v57, v99, 0xD2uLL);
    Binding.subscript.getter();
    swift_release();
    sub_1006229E0((uint64_t)v99);
    uint64_t v11 = v92;
    uint64_t v12 = v93;
    uint64_t v13 = v94;
    if (qword_100E62528 != -1) {
      swift_once();
    }
    uint64_t v14 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
  }
  v57[0] = v55;
  v57[1] = v54;
  LOBYTE(v57[2]) = v53;
  v57[3] = v51;
  v57[4] = v52;
  v57[5] = v49;
  v57[6] = v50;
  uint64_t v92 = v48;
  uint64_t v93 = v47;
  unsigned __int8 v94 = v46;
  uint64_t v95 = v45;
  uint64_t v96 = v44;
  uint64_t v97 = v43;
  uint64_t v98 = v42;
  uint64_t v88 = v41;
  uint64_t v89 = v40;
  uint64_t v90 = v39;
  uint64_t v91 = v38;
  v82[0] = v37;
  v82[1] = v36;
  char v83 = v35;
  v99[0] = v57;
  v99[1] = &v92;
  uint64_t v84 = v33;
  uint64_t v85 = v34;
  uint64_t v86 = v31;
  uint64_t v87 = v32;
  v99[2] = &v88;
  v99[3] = v82;
  uint64_t v78 = v30;
  uint64_t v79 = v29;
  uint64_t v80 = v28;
  uint64_t v81 = v27;
  v72[0] = v26;
  v72[1] = v25;
  char v73 = v24;
  uint64_t v74 = v22;
  uint64_t v75 = v23;
  uint64_t v76 = v20;
  uint64_t v77 = v21;
  v99[4] = (uint64_t *)&v78;
  v99[5] = v72;
  uint64_t v68 = v19;
  uint64_t v69 = v18;
  uint64_t v70 = v17;
  uint64_t v71 = v16;
  v62[0] = v4;
  v62[1] = v5;
  char v63 = v6;
  uint64_t v64 = v7;
  uint64_t v65 = v8;
  uint64_t v66 = v9;
  uint64_t v67 = v10;
  v99[6] = &v68;
  v99[7] = v62;
  uint64_t v58 = v11;
  uint64_t v59 = v12;
  uint64_t v60 = v13;
  uint64_t v61 = v14;
  v99[8] = &v58;
  sub_1004B952C(v99, v56);
  sub_10078F438(v58, v59);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_10078F438(v68, v69);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_10078F438((uint64_t)v78, (uint64_t)v79);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_10078F438(v88, v89);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_release();
}

uint64_t sub_10078F334@<X0>(uint64_t a1@<X8>)
{
  memcpy(__dst, v1, sizeof(__dst));
  return sub_10078E47C(a1);
}

uint64_t sub_10078F380()
{
  return sub_10078E6F0(*(void *)(v0 + 16));
}

void sub_10078F388(unsigned char *a1@<X8>)
{
}

uint64_t sub_10078F390(unsigned __int8 *a1)
{
  uint64_t v1 = sub_10017D448(a1);
  return sub_1006D7FC8(v1);
}

void sub_10078F3B4(unsigned char *a1@<X8>)
{
}

uint64_t sub_10078F3BC(unsigned __int8 *a1)
{
  uint64_t v1 = sub_10017D448(a1);
  return sub_1006D800C(v1);
}

void sub_10078F3E0(unsigned char *a1@<X8>)
{
}

uint64_t sub_10078F3E8(unsigned __int8 *a1)
{
  uint64_t v1 = sub_10017D448(a1);
  return sub_1006D8050(v1);
}

void sub_10078F40C(unsigned char *a1@<X8>)
{
}

uint64_t sub_10078F414(unsigned __int8 *a1)
{
  uint64_t v1 = sub_10017D448(a1);
  return sub_1006D8094(v1);
}

uint64_t sub_10078F438(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_release();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_10078F488()
{
  uint64_t result = type metadata accessor for Binding();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10078F524(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = ((v6 + 16) & ~v6) + *(void *)(v5 + 64);
  int v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  uint64_t v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v13 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v14 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v13 = *v14;
    uint64_t v15 = ((unint64_t)v13 + v6 + 8) & ~v6;
    uint64_t v16 = ((unint64_t)v14 + v6 + 8) & ~v6;
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    swift_retain();
    v17(v15, v16, v4);
    *(void *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10078F688(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 15;
  swift_release();
  swift_release();
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))(((v3 & 0xFFFFFFFFFFFFFFF8)
                                                                                            + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80)
                                                                                            + 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));

  return swift_bridgeObjectRelease();
}

void *sub_10078F738(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  uint64_t v7 = *(void *)(a3 + 16);
  int v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  uint64_t v9 = *(void *)(v7 - 8) + 16;
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v11 = ((unint64_t)v5 + v10 + 8) & ~v10;
  uint64_t v12 = ((unint64_t)v6 + v10 + 8) & ~v10;
  swift_retain();
  swift_retain();
  v8(v11, v12, v7);
  uint64_t v13 = ((v10 + 16) & ~v10) + *(void *)(v9 + 48) + 7;
  *(void *)(((unint64_t)a1 + v13) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v13) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_10078F82C(void *a1, void *a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v7 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 &= 0xFFFFFFFFFFFFFFF8;
  *uint64_t v7 = *(void *)v6;
  swift_retain();
  swift_release();
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))(((unint64_t)v7 + v10 + 8) & ~v10, (v10 + 8 + v6) & ~v10);
  uint64_t v11 = ((v10 + 16) & ~v10) + *(void *)(v9 + 40) + 7;
  *(void *)(((unint64_t)a1 + v11) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v11) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_10078F928(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))(((unint64_t)v5 + v9 + 8) & ~v9, ((unint64_t)v6 + v9 + 8) & ~v9);
  uint64_t v10 = ((v9 + 16) & ~v9) + *(void *)(v8 + 32) + 7;
  *(void *)(((unint64_t)a1 + v10) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v10) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_10078F9E8(void *a1, void *a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_release();
  uint64_t v7 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  v6 &= 0xFFFFFFFFFFFFFFF8;
  *uint64_t v7 = *(void *)v6;
  swift_release();
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, unint64_t))(v8 + 40))(((unint64_t)v7 + v10 + 8) & ~v10, (v10 + 8 + v6) & ~v10);
  uint64_t v11 = ((v10 + 16) & ~v10) + *(void *)(v9 + 24) + 7;
  *(void *)(((unint64_t)a1 + v11) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v11) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10078FACC(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v8 < a2)
  {
    unint64_t v9 = ((*(void *)(*(void *)(v4 - 8) + 64) + ((v7 + 16) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v10 = a2 - v8;
    uint64_t v11 = v9 & 0xFFFFFFF8;
    if ((v9 & 0xFFFFFFF8) != 0) {
      unsigned int v12 = 2;
    }
    else {
      unsigned int v12 = v10 + 1;
    }
    if (v12 >= 0x10000) {
      unsigned int v13 = 4;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v12 < 0x100) {
      unsigned int v13 = 1;
    }
    if (v12 >= 2) {
      uint64_t v14 = v13;
    }
    else {
      uint64_t v14 = 0;
    }
    switch(v14)
    {
      case 1:
        int v15 = *((unsigned __int8 *)a1 + v9);
        if (!v15) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v15 = *(unsigned __int16 *)((char *)a1 + v9);
        if (v15) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x10078FC1CLL);
      case 4:
        int v15 = *(_DWORD *)((char *)a1 + v9);
        if (!v15) {
          break;
        }
LABEL_22:
        int v17 = v15 - 1;
        if (v11)
        {
          int v17 = 0;
          LODWORD(v11) = *a1;
        }
        return v8 + (v11 | v17) + 1;
      default:
        break;
    }
  }
  uint64_t v18 = (unint64_t *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  if ((v6 & 0x80000000) != 0) {
    return _s7Weather24LocationCompositionStateOwet_0(((unint64_t)v18 + v7 + 8) & ~v7, v6, v4);
  }
  unint64_t v19 = *v18;
  if (v19 >= 0xFFFFFFFF) {
    LODWORD(v19) = -1;
  }
  return (v19 + 1);
}

void sub_10078FC30(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  size_t v11 = ((*(void *)(*(void *)(v6 - 8) + 64) + ((v10 + 16) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v9 >= a3)
  {
    int v15 = 0;
  }
  else
  {
    unsigned int v12 = a3 - v9;
    if (((*(_DWORD *)(*(void *)(v6 - 8) + 64) + ((v10 + 16) & ~v10) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
  }
  if (a2 > v9)
  {
    if (((*(_DWORD *)(*(void *)(v6 - 8) + 64) + ((v10 + 16) & ~v10) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v16 = a2 - v9;
    }
    else {
      int v16 = 1;
    }
    if (((*(_DWORD *)(*(void *)(v6 - 8) + 64) + ((v10 + 16) & ~v10) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v17 = ~v9 + a2;
      bzero(a1, v11);
      *(_DWORD *)a1 = v17;
    }
    switch(v15)
    {
      case 1:
        a1[v11] = v16;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v16;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v11] = v16;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_32;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x10078FE14);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_31;
    default:
LABEL_31:
      if (a2)
      {
LABEL_32:
        uint64_t v18 = (void *)((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8);
        if ((v8 & 0x80000000) != 0)
        {
          _s7Weather24LocationCompositionStateOwst_0(((unint64_t)v18 + v10 + 8) & ~v10, a2, v8, v6);
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v19 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v19 = (a2 - 1);
          }
          *uint64_t v18 = v19;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for ConditionPicker()
{
  return sub_100109098();
}

uint64_t destroy for ConditionToggle()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ConditionToggle(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ConditionToggle(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ConditionToggle(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ConditionToggle()
{
  return &type metadata for ConditionToggle;
}

unint64_t sub_10079002C()
{
  unint64_t result = qword_100E937D8;
  if (!qword_100E937D8)
  {
    sub_10018C6DC(&qword_100E79F00);
    sub_1007900A8();
    sub_100790154();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E937D8);
  }
  return result;
}

unint64_t sub_1007900A8()
{
  unint64_t result = qword_100E937E0;
  if (!qword_100E937E0)
  {
    sub_10018C6DC(&qword_100E79EF8);
    sub_100622AC4();
    sub_1001246C8(&qword_100E93748, &qword_100E93740);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E937E0);
  }
  return result;
}

unint64_t sub_100790154()
{
  unint64_t result = qword_100E66BF8;
  if (!qword_100E66BF8)
  {
    type metadata accessor for AutomationInfoViewModifier();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E66BF8);
  }
  return result;
}

uint64_t sub_1007901A4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1007901C0()
{
  return Toggle.init(isOn:label:)();
}

uint64_t sub_10079029C()
{
  return Label.init(title:icon:)();
}

uint64_t sub_100790314@<X0>(uint64_t a1@<X8>)
{
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_100790380@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_10017DF08(&qword_100E7DFA0);
  __chkstk_darwin(v2 - 8);
  char v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  Image.init(systemName:)();
  static Image.TemplateRenderingMode.macSafeOriginal.getter();
  uint64_t v5 = type metadata accessor for Image.TemplateRenderingMode();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 0, 1, v5);
  uint64_t v6 = Image.renderingMode(_:)();
  swift_release();
  uint64_t result = sub_100791618((uint64_t)v4);
  *a1 = v6;
  return result;
}

uint64_t sub_10079045C()
{
  type metadata accessor for Binding();

  return Binding.projectedValue.getter();
}

uint64_t sub_10079049C()
{
  return sub_1007901C0();
}

uint64_t sub_1007904E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10079052C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v74 = a2;
  uint64_t v75 = type metadata accessor for InlinePickerStyle();
  uint64_t v73 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  unint64_t v72 = (char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v68 = a1;
  uint64_t v5 = type metadata accessor for Binding();
  __chkstk_darwin(v5 - 8);
  uint64_t v70 = (char *)&v48 - v6;
  uint64_t v7 = type metadata accessor for Array();
  uint64_t v8 = *(void *)(a1 + 32);
  type metadata accessor for TagValueTraitKey();
  swift_getWitnessTable();
  type metadata accessor for _TraitWritingModifier();
  type metadata accessor for ModifiedContent();
  type metadata accessor for Optional();
  uint64_t v95 = v8;
  swift_getWitnessTable();
  type metadata accessor for TagValueTraitKey();
  swift_getWitnessTable();
  type metadata accessor for _TraitWritingModifier();
  uint64_t v9 = type metadata accessor for ModifiedContent();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v84 = (void *)v7;
  uint64_t v85 = v4;
  uint64_t v61 = v4;
  uint64_t v86 = v9;
  uint64_t v87 = (void *)WitnessTable;
  uint64_t v60 = v8;
  uint64_t v88 = v8;
  uint64_t v11 = type metadata accessor for ForEach();
  uint64_t v12 = swift_getWitnessTable();
  uint64_t v93 = &protocol witness table for Text;
  uint64_t v94 = v12;
  uint64_t v69 = &protocol conformance descriptor for <> ModifiedContent<A, B>;
  uint64_t v13 = swift_getWitnessTable();
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v91 = v13;
  uint64_t v92 = v14;
  uint64_t v90 = swift_getWitnessTable();
  uint64_t v65 = v11;
  uint64_t v62 = swift_getWitnessTable();
  uint64_t v84 = &type metadata for Text;
  uint64_t v85 = v4;
  uint64_t v86 = v11;
  uint64_t v87 = &protocol witness table for Text;
  uint64_t v88 = v8;
  uint64_t v89 = v62;
  uint64_t v15 = type metadata accessor for Picker();
  uint64_t v67 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v59 = (char *)&v48 - v16;
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v18 = v75;
  uint64_t v84 = (void *)v15;
  uint64_t v85 = v75;
  uint64_t v86 = v17;
  uint64_t v87 = &protocol witness table for InlinePickerStyle;
  uint64_t v19 = v17;
  uint64_t v51 = v17;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v54 = OpaqueTypeMetadata2;
  uint64_t v64 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v52 = (char *)&v48 - v21;
  uint64_t v84 = (void *)v15;
  uint64_t v85 = v18;
  uint64_t v86 = v19;
  uint64_t v87 = &protocol witness table for InlinePickerStyle;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v84 = (void *)OpaqueTypeMetadata2;
  uint64_t v85 = OpaqueTypeConformance2;
  uint64_t v57 = &opaque type descriptor for <<opaque return type of View.labelsHidden()>>;
  uint64_t v55 = swift_getOpaqueTypeMetadata2();
  uint64_t v58 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v48 = (char *)&v48 - v22;
  uint64_t v23 = type metadata accessor for ModifiedContent();
  uint64_t v63 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v49 = (char *)&v48 - v24;
  sub_10018C6DC((uint64_t *)&unk_100EAA770);
  uint64_t v25 = type metadata accessor for ModifiedContent();
  uint64_t v66 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v50 = (char *)&v48 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v56 = (uint64_t)&v48 - v28;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v29 = v68;
  uint64_t v30 = v71;
  sub_10079045C();
  uint64_t v31 = *(void *)(v29 + 24);
  uint64_t v76 = v61;
  uint64_t v77 = v31;
  uint64_t v78 = v60;
  uint64_t v79 = v30;
  uint64_t v32 = v59;
  Picker<>.init(_:selection:content:)();
  uint64_t v33 = v72;
  InlinePickerStyle.init()();
  uint64_t v34 = v52;
  uint64_t v35 = v75;
  View.pickerStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v33, v35);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v32, v15);
  uint64_t v36 = v48;
  uint64_t v37 = (void *)v54;
  uint64_t v38 = OpaqueTypeConformance2;
  View.labelsHidden()();
  (*(void (**)(char *, void *))(v64 + 8))(v34, v37);
  static Edge.Set.leading.getter();
  uint64_t v84 = v37;
  uint64_t v85 = v38;
  uint64_t v39 = swift_getOpaqueTypeConformance2();
  uint64_t v40 = v49;
  uint64_t v41 = v55;
  View.padding(_:_:)();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v36, v41);
  static Color.blue.getter();
  uint64_t v82 = v39;
  char v83 = &protocol witness table for _PaddingLayout;
  uint64_t v42 = swift_getWitnessTable();
  uint64_t v43 = (uint64_t)v50;
  View.accentColor(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v40, v23);
  uint64_t v44 = sub_1001246C8((unint64_t *)&qword_100E64F80, (uint64_t *)&unk_100EAA770);
  uint64_t v80 = v42;
  uint64_t v81 = v44;
  swift_getWitnessTable();
  uint64_t v45 = v56;
  sub_100121584(v43, v25, v56);
  unsigned __int8 v46 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
  v46(v43, v25);
  sub_100121584(v45, v25, v74);
  return ((uint64_t (*)(uint64_t, uint64_t))v46)(v45, v25);
}

uint64_t sub_100790F0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v29 = a5;
  uint64_t v9 = type metadata accessor for Array();
  type metadata accessor for TagValueTraitKey();
  swift_getWitnessTable();
  uint64_t v28 = type metadata accessor for _TraitWritingModifier();
  v25[2] = type metadata accessor for ModifiedContent();
  type metadata accessor for Optional();
  uint64_t v43 = a4;
  swift_getWitnessTable();
  type metadata accessor for TagValueTraitKey();
  swift_getWitnessTable();
  v25[3] = type metadata accessor for _TraitWritingModifier();
  uint64_t v10 = type metadata accessor for ModifiedContent();
  uint64_t v27 = v9;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v38 = v9;
  uint64_t v39 = a2;
  uint64_t v40 = v10;
  uint64_t v41 = WitnessTable;
  uint64_t v42 = a4;
  uint64_t v11 = type metadata accessor for ForEach();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v25 - v16;
  uint64_t v38 = *(void *)(a1 + *(int *)(type metadata accessor for ConditionPicker() + 44));
  uint64_t v30 = a2;
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  v25[1] = swift_getKeyPath();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = a2;
  v18[3] = a3;
  v18[4] = a4;
  swift_bridgeObjectRetain();
  uint64_t v19 = swift_getWitnessTable();
  uint64_t v36 = &protocol witness table for Text;
  uint64_t v37 = v19;
  uint64_t v20 = swift_getWitnessTable();
  uint64_t v21 = swift_getWitnessTable();
  uint64_t v34 = v20;
  uint64_t v35 = v21;
  uint64_t v24 = swift_getWitnessTable();
  ForEach<>.init(_:id:content:)();
  uint64_t v33 = v24;
  swift_getWitnessTable();
  sub_100121584((uint64_t)v14, v11, (uint64_t)v17);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v12 + 8);
  v22(v14, v11);
  sub_100121584((uint64_t)v17, v11, v29);
  return ((uint64_t (*)(char *, uint64_t))v22)(v17, v11);
}

uint64_t sub_1007912B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v29 = a4;
  uint64_t v26 = a3;
  type metadata accessor for TagValueTraitKey();
  swift_getWitnessTable();
  uint64_t v28 = type metadata accessor for _TraitWritingModifier();
  v25[1] = type metadata accessor for ModifiedContent();
  type metadata accessor for Optional();
  uint64_t v38 = a3;
  swift_getWitnessTable();
  type metadata accessor for TagValueTraitKey();
  swift_getWitnessTable();
  v25[2] = type metadata accessor for _TraitWritingModifier();
  uint64_t v7 = type metadata accessor for ModifiedContent();
  uint64_t v27 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v25 - v11;
  uint64_t v34 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v35 = v13;
  sub_10014A85C();
  uint64_t v14 = Text.init<A>(_:)();
  uint64_t v16 = v15;
  uint64_t v34 = v14;
  uint64_t v35 = v15;
  char v18 = v17 & 1;
  char v36 = v17 & 1;
  uint64_t v37 = v19;
  sub_10078E064(a1, 1, (uint64_t)&type metadata for Text, a2, (uint64_t)&protocol witness table for Text, v26, (uint64_t)v9);
  sub_100191924(v14, v16, v18);
  swift_bridgeObjectRelease();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v32 = &protocol witness table for Text;
  uint64_t v33 = WitnessTable;
  uint64_t v21 = swift_getWitnessTable();
  uint64_t v22 = swift_getWitnessTable();
  uint64_t v30 = v21;
  uint64_t v31 = v22;
  swift_getWitnessTable();
  sub_100121584((uint64_t)v9, v7, (uint64_t)v12);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v27 + 8);
  v23(v9, v7);
  sub_100121584((uint64_t)v12, v7, v29);
  return ((uint64_t (*)(char *, uint64_t))v23)(v12, v7);
}

uint64_t sub_1007915D8@<X0>(uint64_t a1@<X8>)
{
  return sub_100790F0C(v1[5], v1[2], v1[3], v1[4], a1);
}

uint64_t sub_1007915E4()
{
  return swift_deallocObject();
}

uint64_t sub_1007915F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1007912B8(a1, *(void *)(v2 + 16), *(void *)(v2 + 32), a2);
}

uint64_t sub_100791600()
{
  return sub_10079029C();
}

uint64_t sub_100791608@<X0>(uint64_t a1@<X8>)
{
  return sub_100790314(a1);
}

uint64_t sub_100791610@<X0>(uint64_t *a1@<X8>)
{
  return sub_100790380(a1);
}

uint64_t sub_100791618(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E7DFA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100791678()
{
  return swift_getWitnessTable();
}

uint64_t sub_1007919F8()
{
  return sub_1001246C8(&qword_100E937E8, &qword_100E6F7E0);
}

void *sub_100791A34(char a1, char a2, uint64_t a3)
{
  uint64_t v94 = a3;
  uint64_t v6 = type metadata accessor for TipPriorityQueue.GridEntry();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100162EF8();
  uint64_t v93 = v8;
  __chkstk_darwin(v9);
  uint64_t v92 = (uint64_t)&v71 - v10;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v71 - v12;
  uint64_t v14 = sub_10017DF08(&qword_100E64E80);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_10008B8C0();
  uint64_t v16 = type metadata accessor for LocationComponentViewModel();
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v71 - v21;
  uint64_t v23 = sub_10017DF08(&qword_100E6CCD8);
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_100162EF8();
  uint64_t v91 = v25;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v71 - v27;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v71 - v30;
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v71 - v33;
  if (a1)
  {
    if (a1 == 1)
    {
      if (a2)
      {
        uint64_t v35 = &qword_100E93C00;
        goto LABEL_11;
      }
    }
    else if (a2)
    {
      uint64_t v35 = &qword_100E94010;
      goto LABEL_11;
    }
    uint64_t v35 = &qword_100E93E08;
  }
  else if (a2)
  {
    uint64_t v35 = &qword_100E937F0;
  }
  else
  {
    uint64_t v35 = &qword_100E939F8;
  }
LABEL_11:
  char v36 = *((unsigned char *)v35 + 224);
  uint64_t v37 = *v35;
  uint64_t v77 = v35[1];
  uint64_t v78 = v37;
  uint64_t v76 = v35[2];
  uint64_t v75 = v35[3];
  uint64_t v38 = v35[8];
  uint64_t v81 = v35[9];
  uint64_t v82 = v38;
  uint64_t v39 = v35[10];
  uint64_t v79 = v35[11];
  uint64_t v80 = v39;
  uint64_t v74 = v35[24];
  uint64_t v73 = v35[25];
  uint64_t v72 = v35[26];
  uint64_t v71 = v35[27];
  uint64_t v40 = v35[53];
  uint64_t v85 = v35[54];
  uint64_t v86 = v40;
  uint64_t v41 = v35[55];
  uint64_t v83 = v35[56];
  uint64_t v84 = v41;
  uint64_t v42 = v35[61];
  uint64_t v89 = v35[62];
  uint64_t v90 = v42;
  uint64_t v43 = v94 + OBJC_IVAR____TtCV7Weather19SevereNhpAqiContent8_Storage_map;
  uint64_t v45 = v35[63];
  uint64_t v44 = v35[64];
  uint64_t v87 = v45;
  uint64_t v88 = v44;
  swift_beginAccess();
  sub_10006DF38(v43, v3, &qword_100E64E80);
  uint64_t v46 = type metadata accessor for LocationComponentContainerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0(v3, 1, v46) == 1)
  {
    sub_1001781AC(v3, &qword_100E64E80);
LABEL_16:
    uint64_t v47 = 1;
    goto LABEL_17;
  }
  sub_10031F6A8(v3 + *(int *)(v46 + 20), (uint64_t)v19, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  sub_10031F75C(v3, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_10031F6FC((uint64_t)v19, (uint64_t)v22, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  if (v36)
  {
    sub_10031F75C((uint64_t)v22, (void (*)(void))type metadata accessor for LocationComponentViewModel);
    goto LABEL_16;
  }
  sub_10031F6FC((uint64_t)v22, (uint64_t)v31, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v47 = 0;
  uint64_t v48 = &v31[*(int *)(v6 + 20)];
  uint64_t v49 = v73;
  *(void *)uint64_t v48 = v74;
  *((void *)v48 + 1) = v49;
  uint64_t v50 = v71;
  *((void *)v48 + 2) = v72;
  *((void *)v48 + 3) = v50;
LABEL_17:
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, v47, 1, v6);
  sub_10031F640((uint64_t)v31, (uint64_t)v34);
  sub_10031F6A8(v94 + *(int *)(v46 + 20) + OBJC_IVAR____TtCV7Weather19SevereNhpAqiContent8_Storage_airQuality, (uint64_t)v28, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v51 = &v28[*(int *)(v6 + 20)];
  uint64_t v52 = v77;
  *(void *)uint64_t v51 = v78;
  *((void *)v51 + 1) = v52;
  uint64_t v53 = v75;
  *((void *)v51 + 2) = v76;
  *((void *)v51 + 3) = v53;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v6);
  uint64_t v54 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
  sub_10031F6A8(v54, (uint64_t)v13, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v55 = &v13[*(int *)(v6 + 20)];
  uint64_t v56 = v81;
  *(void *)uint64_t v55 = v82;
  *((void *)v55 + 1) = v56;
  uint64_t v57 = v79;
  *((void *)v55 + 2) = v80;
  *((void *)v55 + 3) = v57;
  uint64_t v58 = v91;
  sub_10006DF38((uint64_t)v34, v91, &qword_100E6CCD8);
  uint64_t v59 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
  uint64_t v60 = v92;
  sub_10031F6A8(v59, v92, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v61 = (uint64_t *)(v60 + *(int *)(v6 + 20));
  uint64_t v62 = v85;
  *uint64_t v61 = v86;
  v61[1] = v62;
  uint64_t v63 = v83;
  v61[2] = v84;
  v61[3] = v63;
  uint64_t v64 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
  uint64_t v65 = v93;
  sub_10031F6A8(v64, v93, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v66 = (uint64_t *)(v65 + *(int *)(v6 + 20));
  uint64_t v67 = v89;
  *uint64_t v66 = v90;
  v66[1] = v67;
  uint64_t v68 = v88;
  v66[2] = v87;
  v66[3] = v68;
  uint64_t v69 = sub_100AD6D18((uint64_t)v28, (uint64_t)v13, v58, v60, v65);
  sub_1001781AC((uint64_t)v34, &qword_100E6CCD8);
  return v69;
}

uint64_t sub_100792010(uint64_t a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E64E80);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_10008B8C0();
  uint64_t v10 = a1 + OBJC_IVAR____TtCV7Weather19SevereNhpAqiContent8_Storage_map;
  swift_beginAccess();
  sub_10006DF38(v10, v7, &qword_100E64E80);
  uint64_t v111 = a1;
  if (_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8) == 1)
  {
    sub_1001781AC(v7, &qword_100E64E80);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100C28110;
    sub_10017DF08(&qword_100E6CCD0);
    unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v13 = *(void *)(v9 + 72);
    uint64_t v14 = (__n128 *)swift_allocObject();
    uint64_t v15 = sub_100183900(v14, (__n128)xmmword_100C251B0);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather19SevereNhpAqiContent8_Storage_severeAlert, (uint64_t)v15 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 32) = sub_1001F24CC((uint64_t)v14);
    *(void *)(v11 + 40) = v16;
    *(void *)(v11 + 48) = v17;
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = v112;
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather19SevereNhpAqiContent8_Storage_nextHourPrecipitation, v18 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 56) = sub_1001F24CC(v18);
    *(void *)(v11 + 64) = v19;
    *(void *)(v11 + 72) = v20;
    uint64_t v21 = (__n128 *)sub_100163204();
    sub_100163264(v21);
    sub_10031F6A8(v22 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v23, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 80) = sub_1001F24CC(v18);
    *(void *)(v11 + 88) = v24;
    *(void *)(v11 + 96) = v25;
    uint64_t v26 = (__n128 *)sub_100163204();
    sub_100163264(v26);
    sub_10031F6A8(v27 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v28, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 104) = sub_1001F24CC(v18);
    *(void *)(v11 + 112) = v29;
    *(void *)(v11 + 120) = v30;
    uint64_t v31 = sub_100163204();
    *(_OWORD *)(v31 + 16) = v112;
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather19SevereNhpAqiContent8_Storage_airQuality, v31 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 128) = sub_1001F24CC(v31);
    *(void *)(v11 + 136) = v32;
    *(void *)(v11 + 144) = v33;
    uint64_t v34 = v13;
    uint64_t v35 = (__n128 *)swift_allocObject();
    char v36 = (char *)sub_100183900(v35, (__n128)xmmword_100C25ED0) + v12;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
    sub_1001859A8((uint64_t)&v36[v34], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset);
    *(void *)(v11 + 152) = sub_1001F24CC((uint64_t)v35);
    *(void *)(v11 + 160) = v37;
    *(void *)(v11 + 168) = v38;
    uint64_t v39 = (__n128 *)swift_allocObject();
    sub_10016324C(v39);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_1001859A8((uint64_t)&v36[v34], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal);
    *(void *)(v11 + 176) = sub_1001F24CC((uint64_t)v35);
    *(void *)(v11 + 184) = v40;
    *(void *)(v11 + 192) = v41;
    uint64_t v42 = (__n128 *)swift_allocObject();
    sub_10016324C(v42);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_1001859A8((uint64_t)&v36[v34], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity);
    *(void *)(v11 + 200) = sub_1001F24CC((uint64_t)v35);
    *(void *)(v11 + 208) = v43;
    *(void *)(v11 + 216) = v44;
    uint64_t v45 = sub_100163204();
    *(_OWORD *)(v45 + 16) = v112;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_1001859A8(v45 + v12 + v34, OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure);
    *(void *)(v11 + 224) = sub_1001F24CC(v45);
    *(void *)(v11 + 232) = v46;
    *(void *)(v11 + 240) = v47;
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = v112;
    uint64_t v49 = *(void *)(a1 + 16);
    sub_10031F6A8(v49 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v48 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v49 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v48 + v12 + v34, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 248) = sub_1001F24CC(v48);
    *(void *)(v11 + 256) = v50;
    *(void *)(v11 + 264) = v51;
  }
  else
  {
    sub_10031F6FC(v7, v1, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100C31F20;
    sub_10017DF08(&qword_100E6CCD0);
    uint64_t v110 = *(void *)(v9 + 72);
    uint64_t v109 = v1;
    unint64_t v52 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v53 = (__n128 *)swift_allocObject();
    uint64_t v54 = sub_100183900(v53, (__n128)xmmword_100C251B0);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather19SevereNhpAqiContent8_Storage_severeAlert, (uint64_t)v54 + v52, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 32) = sub_1001F24CC((uint64_t)v53);
    *(void *)(v11 + 40) = v55;
    *(void *)(v11 + 48) = v56;
    uint64_t v57 = (__n128 *)sub_10017C984();
    sub_100179F54(v57);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather19SevereNhpAqiContent8_Storage_nextHourPrecipitation, v58, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 56) = sub_1001F24CC((uint64_t)v57);
    *(void *)(v11 + 64) = v59;
    *(void *)(v11 + 72) = v60;
    uint64_t v61 = (__n128 *)sub_10017C984();
    sub_10017E198(v61);
    sub_10031F6A8(v62 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v63, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 80) = sub_1001F24CC((uint64_t)v57);
    *(void *)(v11 + 88) = v64;
    *(void *)(v11 + 96) = v65;
    uint64_t v66 = (__n128 *)sub_10017C984();
    sub_10017E198(v66);
    sub_10031F6A8(v67 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v68, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 104) = sub_1001F24CC((uint64_t)v57);
    *(void *)(v11 + 112) = v69;
    *(void *)(v11 + 120) = v70;
    uint64_t v71 = (__n128 *)sub_10017C984();
    sub_100179F54(v71);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather19SevereNhpAqiContent8_Storage_airQuality, v72, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 128) = sub_1001F24CC((uint64_t)v71);
    *(void *)(v11 + 136) = v73;
    *(void *)(v11 + 144) = v74;
    uint64_t v75 = (__n128 *)sub_10017C984();
    sub_100179F54(v75);
    sub_10031F6A8(v1, v76, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 152) = sub_1001F24CC((uint64_t)v75);
    *(void *)(v11 + 160) = v77;
    *(void *)(v11 + 168) = v78;
    uint64_t v79 = (__n128 *)swift_allocObject();
    uint64_t v80 = (char *)sub_100183900(v79, (__n128)xmmword_100C25ED0) + v52;
    uint64_t v81 = a1;
    uint64_t v82 = *(void *)(a1 + 16);
    uint64_t v83 = v81;
    sub_10031F6A8(v82 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v80, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v82 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v80[v110], (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 176) = sub_1001F24CC((uint64_t)v79);
    *(void *)(v11 + 184) = v84;
    *(void *)(v11 + 192) = v85;
    uint64_t v86 = (__n128 *)swift_allocObject();
    sub_10017A334(v86);
    uint64_t v88 = v87 + v52;
    uint64_t v89 = *(void *)(v83 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_10031F6A8(v89 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, v88 + v110, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 200) = sub_1001F24CC((uint64_t)v79);
    *(void *)(v11 + 208) = v90;
    *(void *)(v11 + 216) = v91;
    uint64_t v92 = (__n128 *)swift_allocObject();
    sub_10017A334(v92);
    uint64_t v94 = v93 + v52;
    uint64_t v95 = *(void *)(v111 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_10031F6A8(v95 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, v94 + v110, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 224) = sub_1001F24CC((uint64_t)v79);
    *(void *)(v11 + 232) = v96;
    *(void *)(v11 + 240) = v97;
    uint64_t v98 = (__n128 *)swift_allocObject();
    sub_10017A334(v98);
    uint64_t v100 = v99 + v52;
    uint64_t v101 = *(void *)(v111 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_10031F6A8(v101 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, v100 + v110, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 248) = sub_1001F24CC((uint64_t)v79);
    *(void *)(v11 + 256) = v102;
    *(void *)(v11 + 264) = v103;
    uint64_t v104 = swift_allocObject();
    *(_OWORD *)(v104 + 16) = v112;
    uint64_t v105 = *(void *)(v111 + 16);
    sub_10031F6A8(v105 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v104 + v52, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v105 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v104 + v52 + v110, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 272) = sub_1001F24CC(v104);
    *(void *)(v11 + 280) = v106;
    *(void *)(v11 + 288) = v107;
    sub_10031F75C(v109, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  }
  return v11;
}

void sub_1007928D8(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = type metadata accessor for LocationComponentContainerViewModel();
  sub_100162E4C();
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v7 = __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  uint64_t v8 = type metadata accessor for LocationViewComponent();
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_10017DF08(&qword_100E64E80);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = swift_retain();
  sub_1006E2E94(v18, a2);
  swift_release();
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather33LocationSevereNhpAqiConfiguration8_Storage_map, v12, (void (*)(void))type metadata accessor for LocationViewComponent);
  uint64_t v19 = sub_10018297C();
  a2(v19);
  sub_100185204();
  _s7Weather24LocationCompositionStateOwst_0(v17, 0, 1, v4);
  sub_10016327C(OBJC_IVAR____TtCV7Weather33LocationSevereNhpAqiConfiguration8_Storage_airQuality);
  uint64_t v20 = sub_10018297C();
  a2(v20);
  sub_100185204();
  sub_10016327C(OBJC_IVAR____TtCV7Weather33LocationSevereNhpAqiConfiguration8_Storage_nextHourPrecipitation);
  uint64_t v21 = sub_10018297C();
  a2(v21);
  sub_100185204();
  sub_10016327C(OBJC_IVAR____TtCV7Weather33LocationSevereNhpAqiConfiguration8_Storage_severeAlert);
  uint64_t v22 = sub_10018297C();
  a2(v22);
  sub_100185204();
  sub_1002E2D14();
}

uint64_t sub_100792B10(uint64_t a1, char a2)
{
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v2 + 16);
  sub_10017DF08(&qword_100E63480);
  uint64_t v6 = *(void *)(type metadata accessor for MainAction() - 8);
  uint64_t v7 = *(void *)(v6 + 72);
  unint64_t v8 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100C25ED0;
  sub_100792DE0(a1, v9 + v8);
  type metadata accessor for MoonDetailViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  *(unsigned char *)(v9 + v8 + v7) = a2;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v15 = 0;
  memset(v14, 0, sizeof(v14));
  sub_1001AB0B0((uint64_t)v14, (uint64_t)v11);
  uint64_t v12 = v9;
  char v13 = 0;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1001AB2DC((uint64_t)v11, v5);
  sub_1000F3400((uint64_t)v11, &qword_100E63488);
  swift_bridgeObjectRelease();
  sub_1000F3400((uint64_t)v14, (uint64_t *)&unk_100EA01F0);
  return swift_release();
}

uint64_t sub_100792CC0(char a1)
{
  uint64_t v3 = type metadata accessor for MainAction();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v1 + 16);
  *uint64_t v5 = a1;
  type metadata accessor for MoonDetailViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = 0;
  memset(v8, 0, sizeof(v8));
  swift_retain();
  sub_1001AAF58((uint64_t)v5, (uint64_t)v8, v6);
  sub_1000F3400((uint64_t)v8, (uint64_t *)&unk_100EA01F0);
  sub_1001ABE70((uint64_t)v5);
  return swift_release();
}

uint64_t type metadata accessor for MoonScrubberInteractor()
{
  return self;
}

uint64_t sub_100792DE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MoonDetailSelectedDate();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100792E44()
{
  static AnyTransition.opacity.getter();
  if (qword_100E62330 != -1) {
    swift_once();
  }
  uint64_t v0 = AnyTransition.animation(_:)();
  uint64_t result = swift_release();
  qword_100F51B70 = v0;
  return result;
}

void *sub_100792EBC(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *a2;
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 16) & (unint64_t)~v6) + *(void *)(v5 + 64) > 0x18)
  {
    *a1 = v7;
    a1 = (void *)(v7 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v10 = a2[1];
    *a1 = v7;
    a1[1] = v10;
    uint64_t v11 = ((unint64_t)a1 + v6 + 16) & ~v6;
    uint64_t v12 = ((unint64_t)a2 + v6 + 16) & ~v6;
    char v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_unknownObjectRetain();
    v13(v11, v12, v4);
  }
  return a1;
}

_OWORD *sub_100792FC4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_100793034(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRelease();
  a1[1] = v6;
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1007930C0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v9 = a2 - v8;
  if (a2 <= v8) {
    goto LABEL_23;
  }
  uint64_t v10 = ((v7 + 16) & ~v7) + *(void *)(*(void *)(v4 - 8) + 64);
  char v11 = 8 * v10;
  if (v10 <= 3)
  {
    unsigned int v14 = ((v9 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_23:
      if ((v6 & 0x80000000) != 0) {
        return _s7Weather24LocationCompositionStateOwet_0(((unint64_t)a1 + v7 + 16) & ~v7, v6, v4);
      }
      uint64_t v16 = *(void *)a1;
      if (*(void *)a1 >= 0xFFFFFFFFuLL) {
        LODWORD(v16) = -1;
      }
      return (v16 + 1);
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_23;
  }
LABEL_15:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *a1;
        break;
      case 3:
        LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v8 + (v10 | v15) + 1;
}

void sub_100793250(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  size_t v11 = ((v10 + 16) & ~v10) + *(void *)(*(void *)(v6 - 8) + 64);
  char v12 = 8 * v11;
  BOOL v13 = a3 >= v9;
  unsigned int v14 = a3 - v9;
  if (v14 != 0 && v13)
  {
    if (v11 <= 3)
    {
      unsigned int v18 = ((v14 + ~(-1 << v12)) >> v12) + 1;
      if (HIWORD(v18))
      {
        int v15 = 4;
      }
      else if (v18 >= 0x100)
      {
        int v15 = 2;
      }
      else
      {
        int v15 = v18 > 1;
      }
    }
    else
    {
      int v15 = 1;
    }
  }
  else
  {
    int v15 = 0;
  }
  if (v9 < a2)
  {
    unsigned int v16 = ~v9 + a2;
    if (v11 < 4)
    {
      int v17 = (v16 >> v12) + 1;
      if (v11)
      {
        int v19 = v16 & ~(-1 << v12);
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v11);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v11] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v17;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v11] = v17;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x10079349CLL);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v8 & 0x80000000) != 0)
        {
          unint64_t v21 = (unint64_t)&a1[v10 + 16] & ~v10;
          _s7Weather24LocationCompositionStateOwst_0(v21, a2, v8, v6);
        }
        else
        {
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v20 = a2 ^ 0x80000000;
            *((void *)a1 + 1) = 0;
          }
          else
          {
            uint64_t v20 = (a2 - 1);
          }
          *(void *)a1 = v20;
        }
      }
      return;
  }
}

double sub_1007934C4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  *(void *)a5 = a1;
  *((void *)a5 + 1) = a2;
  uint64_t v8 = (int *)type metadata accessor for SlowDeviceGridView();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(&a5[v8[9]], a3, a4);
  unsigned int v9 = &a5[v8[10]];
  memset(v13, 0, sizeof(v13));
  uint64_t v14 = 255;
  long long v15 = 0u;
  long long v16 = 0u;
  sub_1007935CC((uint64_t)v13, v12);
  memcpy(v9, v12, 0x50uLL);
  uint64_t v10 = &a5[v8[11]];
  *(void *)uint64_t v10 = swift_getKeyPath();
  double result = 0.0;
  *(_OWORD *)(v10 + 8) = 0u;
  *(_OWORD *)(v10 + 24) = 0u;
  *(_OWORD *)(v10 + 40) = 0u;
  *(_OWORD *)(v10 + 56) = 0u;
  v10[72] = 0;
  return result;
}

double sub_1007935CC@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  sub_100793638(a1, (uint64_t)v8);
  sub_10017DF08(qword_100E94338);
  State.init(wrappedValue:)();
  double result = *(double *)&v9;
  long long v4 = v10;
  long long v5 = v11;
  long long v6 = v12;
  long long v7 = v13;
  *a2 = v9;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  a2[4] = v7;
  return result;
}

uint64_t sub_100793638(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(qword_100E94338);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_1007936A0(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64) + 7;
  uint64_t v8 = *a2;
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((((v7 + ((v6 + 16) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8) + 73 > 0x18)
  {
    *a1 = v8;
    uint64_t v27 = (void *)(v8 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v11 = a2[1];
    *a1 = v8;
    a1[1] = v11;
    uint64_t v12 = ((unint64_t)a1 + v6 + 16) & ~v6;
    uint64_t v13 = ((unint64_t)a2 + v6 + 16) & ~v6;
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_unknownObjectRetain();
    v14(v12, v13, v4);
    long long v15 = (void *)((v7 + v12) & 0xFFFFFFFFFFFFFFF8);
    long long v16 = (const void *)((v7 + v13) & 0xFFFFFFFFFFFFFFF8);
    memcpy(v15, v16, 0x50uLL);
    unint64_t v17 = ((unint64_t)v15 + 87) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v18 = ((unint64_t)v16 + 87) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v19 = *(void *)(v18 + 8);
    uint64_t v29 = *(void *)v18;
    uint64_t v20 = *(void *)(v18 + 16);
    uint64_t v21 = *(void *)(v18 + 24);
    uint64_t v22 = *(void *)(v18 + 32);
    uint64_t v23 = *(void *)(v18 + 40);
    uint64_t v30 = a1;
    uint64_t v25 = *(void *)(v18 + 48);
    uint64_t v24 = *(void *)(v18 + 56);
    uint64_t v26 = *(void *)(v18 + 64);
    LOBYTE(v16) = *(unsigned char *)(v18 + 72);
    swift_retain();
    sub_1001910C8(v29, v19, v20, v21, v22, v23, v25, v24, v26, (char)v16);
    *(void *)unint64_t v17 = v29;
    *(void *)(v17 + 8) = v19;
    *(void *)(v17 + 16) = v20;
    *(void *)(v17 + 24) = v21;
    *(void *)(v17 + 32) = v22;
    *(void *)(v17 + 40) = v23;
    *(void *)(v17 + 48) = v25;
    *(void *)(v17 + 56) = v24;
    uint64_t v27 = v30;
    *(void *)(v17 + 64) = v26;
    *(unsigned char *)(v17 + 72) = (_BYTE)v16;
  }
  return v27;
}

uint64_t sub_100793884(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = v4 + 8;
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v4 + 8))(v6);
  unint64_t v7 = (*(void *)(v5 + 56) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  unint64_t v8 = (v7 + 87) & 0xFFFFFFFFFFFFFFF8;
  return sub_10018CCC4(*(void *)v8, *(void *)(v8 + 8), *(void *)(v8 + 16), *(void *)(v8 + 24), *(void *)(v8 + 32), *(void *)(v8 + 40), *(void *)(v8 + 48), *(void *)(v8 + 56), *(void *)(v8 + 64), *(unsigned char *)(v8 + 72));
}

_OWORD *sub_100793944(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  uint64_t v5 = *(void *)(v3 - 8) + 16;
  uint64_t v6 = *(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 16) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 16) & ~v6;
  swift_unknownObjectRetain();
  v4(v7, v8, v3);
  uint64_t v9 = *(void *)(v5 + 48) + 7;
  long long v10 = (void *)((v9 + v7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (const void *)((v9 + v8) & 0xFFFFFFFFFFFFFFF8);
  memcpy(v10, v11, 0x50uLL);
  unint64_t v12 = ((unint64_t)v10 + 87) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = ((unint64_t)v11 + 87) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = *(void *)v13;
  uint64_t v15 = *(void *)(v13 + 8);
  uint64_t v16 = *(void *)(v13 + 16);
  uint64_t v17 = *(void *)(v13 + 24);
  uint64_t v18 = *(void *)(v13 + 32);
  uint64_t v19 = *(void *)(v13 + 40);
  uint64_t v20 = *(void *)(v13 + 48);
  uint64_t v24 = *(void *)(v13 + 56);
  uint64_t v21 = *(void *)(v13 + 64);
  char v22 = *(unsigned char *)(v13 + 72);
  swift_retain();
  sub_1001910C8(v14, v15, v16, v17, v18, v19, v20, v24, v21, v22);
  *(void *)unint64_t v12 = v14;
  *(void *)(v12 + 8) = v15;
  *(void *)(v12 + 16) = v16;
  *(void *)(v12 + 24) = v17;
  *(void *)(v12 + 32) = v18;
  *(void *)(v12 + 40) = v19;
  *(void *)(v12 + 48) = v20;
  *(void *)(v12 + 56) = v24;
  *(void *)(v12 + 64) = v21;
  *(unsigned char *)(v12 + 72) = v22;
  return a1;
}

void *sub_100793AA0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v39 = a1;
  a1[1] = v5;
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 24;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)a1 + v9 + 16) & ~v9;
  uint64_t v11 = ((unint64_t)a2 + v9 + 16) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 24))(v10, v11);
  uint64_t v12 = *(void *)(v8 + 40) + 7;
  unint64_t v13 = (char *)((v12 + v10) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = (const void *)((v12 + v11) & 0xFFFFFFFFFFFFFFF8);
  memcpy(v13, v14, 0x50uLL);
  swift_retain();
  swift_release();
  unint64_t v15 = (unint64_t)(v13 + 87);
  unint64_t v16 = ((unint64_t)v14 + 87) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = *(void *)v16;
  uint64_t v18 = *(void *)(v16 + 8);
  unint64_t v19 = v15 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = *(void *)(v16 + 16);
  uint64_t v21 = *(void *)(v16 + 24);
  uint64_t v22 = *(void *)(v16 + 32);
  uint64_t v23 = *(void *)(v16 + 40);
  uint64_t v24 = *(void *)(v16 + 48);
  uint64_t v25 = *(void *)(v16 + 56);
  uint64_t v26 = *(void *)(v16 + 64);
  char v38 = *(unsigned char *)(v16 + 72);
  sub_1001910C8(*(void *)v16, v18, v20, v21, v22, v23, v24, v25, v26, v38);
  uint64_t v27 = *(void *)v19;
  uint64_t v28 = *(void *)(v19 + 8);
  uint64_t v29 = *(void *)(v19 + 16);
  uint64_t v30 = *(void *)(v19 + 24);
  uint64_t v31 = *(void *)(v19 + 32);
  uint64_t v32 = *(void *)(v19 + 40);
  uint64_t v33 = *(void *)(v19 + 48);
  uint64_t v34 = *(void *)(v19 + 56);
  uint64_t v35 = *(void *)(v19 + 64);
  char v36 = *(unsigned char *)(v19 + 72);
  *(void *)unint64_t v19 = v17;
  *(void *)(v19 + 8) = v18;
  *(void *)(v19 + 16) = v20;
  *(void *)(v19 + 24) = v21;
  *(void *)(v19 + 32) = v22;
  *(void *)(v19 + 40) = v23;
  *(void *)(v19 + 48) = v24;
  *(void *)(v19 + 56) = v25;
  *(void *)(v19 + 64) = v26;
  *(unsigned char *)(v19 + 72) = v38;
  sub_10018CCC4(v27, v28, v29, v30, v31, v32, v33, v34, v35, v36);
  return v39;
}

_OWORD *sub_100793C3C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = v4 + 32;
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = ((unint64_t)a1 + v6 + 16) & ~v6;
  uint64_t v8 = ((unint64_t)a2 + v6 + 16) & ~v6;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v7, v8);
  uint64_t v9 = *(void *)(v5 + 32) + 7;
  uint64_t v10 = (void *)((v9 + v7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = (const void *)((v9 + v8) & 0xFFFFFFFFFFFFFFF8);
  memcpy(v10, v11, 0x50uLL);
  memcpy((void *)(((unint64_t)v10 + 87) & 0xFFFFFFFFFFFFFFF8), (const void *)(((unint64_t)v11 + 87) & 0xFFFFFFFFFFFFFFF8), 0x49uLL);
  return a1;
}

void *sub_100793CFC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRelease();
  a1[1] = v6;
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v8 = v7 + 40;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)a1 + v9 + 16) & ~v9;
  uint64_t v11 = ((unint64_t)a2 + v9 + 16) & ~v9;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v10, v11);
  uint64_t v12 = *(void *)(v8 + 24) + 7;
  unint64_t v13 = (void *)((v12 + v10) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = (const void *)((v12 + v11) & 0xFFFFFFFFFFFFFFF8);
  memcpy(v13, v14, 0x50uLL);
  swift_release();
  unint64_t v15 = ((unint64_t)v14 + 87) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = *(void *)(v15 + 64);
  char v17 = *(unsigned char *)(v15 + 72);
  unint64_t v18 = ((unint64_t)v13 + 87) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = *(void *)v18;
  uint64_t v20 = *(void *)(v18 + 8);
  uint64_t v21 = *(void *)(v18 + 16);
  uint64_t v22 = *(void *)(v18 + 24);
  uint64_t v23 = *(void *)(v18 + 32);
  uint64_t v24 = *(void *)(v18 + 40);
  uint64_t v25 = *(void *)(v18 + 48);
  uint64_t v26 = *(void *)(v18 + 56);
  uint64_t v27 = *(void *)(v18 + 64);
  char v28 = *(unsigned char *)(v18 + 72);
  long long v29 = *(_OWORD *)(v15 + 16);
  long long v30 = *(_OWORD *)(v15 + 32);
  long long v31 = *(_OWORD *)(v15 + 48);
  *(_OWORD *)unint64_t v18 = *(_OWORD *)v15;
  *(_OWORD *)(v18 + 16) = v29;
  *(_OWORD *)(v18 + 32) = v30;
  *(_OWORD *)(v18 + 48) = v31;
  *(void *)(v18 + 64) = v16;
  *(unsigned char *)(v18 + 72) = v17;
  sub_10018CCC4(v19, v20, v21, v22, v23, v24, v25, v26, v27, v28);
  return a1;
}

uint64_t sub_100793E24(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v5 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v8 < a2)
  {
    unint64_t v9 = ((((*(void *)(*(void *)(v4 - 8) + 64) + ((v7 + 16) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8)
       + 73;
    unsigned int v10 = (a2 - v8 + 255) >> (8 * v9);
    if (v9 < 4) {
      unsigned int v11 = v10 + 1;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = a1[v9];
        if (!a1[v9]) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)&a1[v9];
        if (*(_WORD *)&a1[v9]) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x100793F90);
      case 4:
        int v14 = *(_DWORD *)&a1[v9];
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = (v14 - 1) << (8 * v9);
        if (v9 >= 4) {
          int v16 = 0;
        }
        if (((((*(_DWORD *)(*(void *)(v4 - 8) + 64) + ((v7 + 16) & ~v7) + 7) & 0xFFFFFFF8) + 87) & 0xFFFFFFF8) == 0xFFFFFFB8) {
          int v17 = *a1;
        }
        else {
          int v17 = *(_DWORD *)a1;
        }
        return v8 + (v17 | v16) + 1;
      default:
        break;
    }
  }
  if ((v6 & 0x80000000) != 0) {
    return _s7Weather24LocationCompositionStateOwet_0((unint64_t)&a1[v7 + 16] & ~v7, v6, v4);
  }
  uint64_t v18 = *(void *)a1;
  if (*(void *)a1 >= 0xFFFFFFFFuLL) {
    LODWORD(v18) = -1;
  }
  return (v18 + 1);
}

void sub_100793FA4(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  if (v8 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v7 + 84);
  }
  uint64_t v10 = *(unsigned __int8 *)(v7 + 80);
  size_t v11 = ((((*(void *)(*(void *)(v6 - 8) + 64) + ((v10 + 16) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8)
      + 73;
  char v12 = 8 * v11;
  if (v9 >= a3)
  {
    int v16 = 0;
  }
  else
  {
    unsigned int v13 = (a3 - v9 + 255) >> v12;
    if (v11 <= 3) {
      unsigned int v14 = v13 + 1;
    }
    else {
      unsigned int v14 = 2;
    }
    if (v14 >= 0x10000) {
      int v15 = 4;
    }
    else {
      int v15 = 2;
    }
    if (v14 < 0x100) {
      int v15 = 1;
    }
    if (v14 >= 2) {
      int v16 = v15;
    }
    else {
      int v16 = 0;
    }
  }
  if (v9 < a2)
  {
    unsigned int v17 = (~v9 + a2) >> v12;
    if (v11 < 4) {
      int v18 = v17 + 1;
    }
    else {
      int v18 = 1;
    }
    if (v11 >= 4) {
      int v19 = ~v9 + a2;
    }
    else {
      int v19 = (~(_BYTE)v9 + a2);
    }
    bzero(a1, v11);
    if (v11 == 1) {
      *a1 = v19;
    }
    else {
      *(_DWORD *)a1 = v19;
    }
    switch(v16)
    {
      case 1:
        a1[v11] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v11] = v18;
        return;
      case 3:
        goto LABEL_47;
      case 4:
        *(_DWORD *)&a1[v11] = v18;
        return;
      default:
        return;
    }
  }
  switch(v16)
  {
    case 1:
      a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 2:
      *(_WORD *)&a1[v11] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_34;
    case 3:
LABEL_47:
      __break(1u);
      JUMPOUT(0x1007941B4);
    case 4:
      *(_DWORD *)&a1[v11] = 0;
      goto LABEL_33;
    default:
LABEL_33:
      if (a2)
      {
LABEL_34:
        if ((v8 & 0x80000000) != 0)
        {
          unint64_t v21 = (unint64_t)&a1[v10 + 16] & ~v10;
          _s7Weather24LocationCompositionStateOwst_0(v21, a2, v8, v6);
        }
        else
        {
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v20 = a2 ^ 0x80000000;
            *((void *)a1 + 1) = 0;
          }
          else
          {
            uint64_t v20 = (a2 - 1);
          }
          *(void *)a1 = v20;
        }
      }
      return;
  }
}

uint64_t sub_1007941DC()
{
  return swift_getWitnessTable();
}

uint64_t sub_100794274()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1007942B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v59 = a2;
  uint64_t v47 = a1;
  uint64_t v46 = *(void *)(a1 - 8);
  uint64_t v50 = *(void *)(v46 + 64);
  __chkstk_darwin(a1);
  uint64_t v60 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v5 + 16);
  type metadata accessor for Optional();
  uint64_t v70 = *(void *)(a1 + 24);
  uint64_t v7 = v70;
  swift_getWitnessTable();
  uint64_t v8 = type metadata accessor for ZStack();
  uint64_t v49 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v39 - v9;
  uint64_t v44 = v8;
  uint64_t v11 = type metadata accessor for ModifiedContent();
  uint64_t v53 = v11;
  uint64_t v58 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v45 = (char *)&v39 - v12;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v68 = WitnessTable;
  uint64_t v69 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v13 = swift_getWitnessTable();
  uint64_t v51 = v13;
  unint64_t v52 = sub_100211898();
  __dst[0] = v11;
  __dst[1] = &unk_100E33E60;
  __dst[2] = v13;
  __dst[3] = v52;
  uint64_t v55 = &opaque type descriptor for <<opaque return type of View.onChange<A>(of:initial:_:)>>;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v57 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v48 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v54 = (uint64_t)&v39 - v16;
  uint64_t v41 = v6;
  uint64_t v61 = v6;
  uint64_t v40 = v7;
  uint64_t v62 = v7;
  uint64_t v39 = v2;
  uint64_t v63 = v2;
  static Alignment.center.getter();
  ZStack.init(alignment:content:)();
  uint64_t v17 = v46;
  uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 16);
  int v18 = v60;
  uint64_t v19 = v2;
  uint64_t v20 = v47;
  v42(v60, v19, v47);
  unint64_t v21 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  v50 += v21;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v6;
  *(void *)(v22 + 24) = v7;
  uint64_t v46 = *(void *)(v17 + 32);
  uint64_t v23 = v18;
  uint64_t v24 = v20;
  ((void (*)(unint64_t, char *, uint64_t))v46)(v22 + v21, v23, v20);
  uint64_t v25 = v45;
  uint64_t v26 = v44;
  View.onAppear(perform:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v10, v26);
  uint64_t v27 = v39;
  memcpy(__dst, (const void *)(v39 + *(int *)(v20 + 44)), 0x49uLL);
  sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
  sub_1001BEAF4();
  sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
  char v28 = v60;
  v42(v60, v27, v24);
  uint64_t v29 = swift_allocObject();
  uint64_t v30 = v40;
  *(void *)(v29 + 16) = v41;
  *(void *)(v29 + 24) = v30;
  ((void (*)(unint64_t, char *, uint64_t))v46)(v29 + v21, v28, v24);
  uint64_t v31 = v53;
  uint64_t v32 = v51;
  unint64_t v33 = v52;
  variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral();
  uint64_t v34 = (uint64_t)v48;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v25, v31);
  uint64_t v64 = v31;
  uint64_t v65 = &unk_100E33E60;
  uint64_t v66 = v32;
  unint64_t v67 = v33;
  swift_getOpaqueTypeConformance2();
  uint64_t v35 = v54;
  uint64_t v36 = OpaqueTypeMetadata2;
  sub_100121584(v34, OpaqueTypeMetadata2, v54);
  uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
  v37(v34, v36);
  sub_100121584(v35, v36, v59);
  return ((uint64_t (*)(uint64_t, uint64_t))v37)(v35, v36);
}

uint64_t sub_1007949F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v26 = a4;
  uint64_t v25 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Optional();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v24 - v14;
  uint64_t v16 = type metadata accessor for SlowDeviceGridView();
  uint64_t v17 = (long long *)(a1 + *(int *)(v16 + 40));
  long long v18 = v17[1];
  long long v28 = *v17;
  long long v29 = v18;
  long long v19 = v17[3];
  long long v30 = v17[2];
  long long v31 = v19;
  long long v32 = v17[4];
  sub_10017DF08(&qword_100E943C0);
  State.wrappedValue.getter();
  if ((_BYTE)v33 == 0xFF)
  {
    uint64_t v20 = (uint64_t)v12;
    uint64_t v21 = 1;
  }
  else
  {
    sub_100121584(a1 + *(int *)(v16 + 36), a2, (uint64_t)v8);
    sub_100121584((uint64_t)v8, a2, (uint64_t)v12);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v8, a2);
    uint64_t v20 = (uint64_t)v12;
    uint64_t v21 = 0;
  }
  _s7Weather24LocationCompositionStateOwst_0(v20, v21, 1, a2);
  sub_1000CA354();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v10 + 8);
  v22(v12, v9);
  uint64_t v27 = a3;
  swift_getWitnessTable();
  sub_100121584((uint64_t)v15, v9, v26);
  return ((uint64_t (*)(char *, uint64_t))v22)(v15, v9);
}

uint64_t sub_100794C90(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SlowDeviceGridView();
  memcpy(__dst, (const void *)(a1 + *(int *)(v2 + 44)), 0x49uLL);
  sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_1001910C8);
  sub_1001BEAF4();
  sub_1001F4DEC((uint64_t)__dst, (void (*)(void, void, void, void, void, void, void, void, void, char))sub_10018CCC4);
  sub_10017DF08(&qword_100E943C0);
  return State.wrappedValue.setter();
}

uint64_t sub_100794D84()
{
  return State.wrappedValue.setter();
}

uint64_t sub_100794E68@<X0>(uint64_t a1@<X8>)
{
  return sub_1007949F4(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_100794E78()
{
  uint64_t v1 = type metadata accessor for SlowDeviceGridView();
  sub_1001627C0(v1);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return sub_100794C90(v3);
}

uint64_t sub_100794EE0()
{
  uint64_t v0 = type metadata accessor for SlowDeviceGridView();
  sub_1001627C0(v0);

  return sub_100794D84();
}

uint64_t sub_100794F5C()
{
  return swift_getOpaqueTypeConformance2();
}

char *sub_100795060(char *a1, char *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *(void *)a2;
    *(void *)uint64_t v4 = *(void *)a2;
    uint64_t v4 = (char *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v12(&v4[a3[6]], &a2[a3[6]], v11);
    v12(&v4[a3[7]], &a2[a3[7]], v11);
    uint64_t v13 = a3[9];
    *(void *)&v4[a3[8]] = *(void *)&a2[a3[8]];
    uint64_t v14 = &v4[v13];
    uint64_t v15 = &a2[v13];
    *(void *)uint64_t v14 = *(void *)v15;
    v14[8] = v15[8];
  }
  return v4;
}

uint64_t sub_1007951B4(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  v8(a1 + a2[6], v5);
  uint64_t v6 = a1 + a2[7];

  return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v5);
}

char *sub_100795280(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  v11(&a1[a3[7]], &a2[a3[7]], v10);
  uint64_t v12 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  char v13[8] = v14[8];
  return a1;
}

char *sub_100795384(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  uint64_t v11 = a3[9];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  char v14 = v13[8];
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v14;
  return a1;
}

char *sub_100795494(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  uint64_t v11 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  return a1;
}

char *sub_100795588(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  v11(&a1[a3[7]], &a2[a3[7]], v10);
  uint64_t v12 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  uint64_t v13 = &a1[v12];
  char v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  char v13[8] = v14[8];
  return a1;
}

uint64_t sub_100795684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100795698);
}

uint64_t sub_100795698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_100795720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100795734);
}

uint64_t sub_100795734(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_1007957B4(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v5 & 1) != 0))
  {
    uint64_t v7 = type metadata accessor for DetailChartSelection();
    if ((static Date.== infix(_:_:)() & 1) == 0
      || (static Date.== infix(_:_:)() & 1) == 0
      || (static Date.== infix(_:_:)() & 1) == 0
      || *(double *)((char *)a1 + *(int *)(v7 + 32)) != *(double *)((char *)a2 + *(int *)(v7 + 32)))
    {
      return 0;
    }
    uint64_t v8 = *(int *)(v7 + 36);
    uint64_t v9 = (double *)((char *)a1 + v8);
    char v10 = *((unsigned char *)a1 + v8 + 8);
    uint64_t v11 = (double *)((char *)a2 + v8);
    char v12 = *((unsigned char *)a2 + v8 + 8);
    if (v10)
    {
      if ((v12 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      if (*v9 != *v11) {
        char v12 = 1;
      }
      if (v12) {
        return 0;
      }
    }
    return 1;
  }
  return result;
}

uint64_t sub_1007958A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44497472616863 && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6574614479656BLL && a2 == 0xE700000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6F697463656C6573 && a2 == 0xED0000657461446ELL;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000014 && a2 == 0x8000000100CB1D80 {
             || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      }
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        BOOL v8 = a1 == 0x6F697469736F5078 && a2 == 0xE90000000000006ELL;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0xD000000000000012 && a2 == 0x8000000100CB1DA0)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v9) {
            return 5;
          }
          else {
            return 6;
          }
        }
      }
    }
  }
}

uint64_t sub_100795B44(char a1)
{
  uint64_t result = 0x44497472616863;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6574614479656BLL;
      break;
    case 2:
      uint64_t v3 = 0x7463656C6573;
      goto LABEL_6;
    case 3:
      uint64_t result = 0xD000000000000014;
      break;
    case 4:
      uint64_t v3 = 0x7469736F5078;
LABEL_6:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x6F69000000000000;
      break;
    case 5:
      uint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100795C24(void *a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E94480);
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  sub_1001B1E64(a1, a1[3]);
  sub_1007963F4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_1007964E8();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for DetailChartSelection();
    type metadata accessor for Date();
    sub_1001457CC(&qword_100E63968);
    sub_10017A86C();
    sub_10017A86C();
    sub_10017A86C();
    sub_1005671FC();
    sub_1001A2458();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_1001A2458();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_100795E58@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v40 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v38 = v4;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v37 = sub_10017DF08(&qword_100E94468);
  sub_100179C0C();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_1001626E0();
  uint64_t v42 = (int *)type metadata accessor for DetailChartSelection();
  __chkstk_darwin(v42);
  sub_1001626E0();
  uint64_t v39 = (void *)(v16 - v15);
  uint64_t v17 = a1[3];
  uint64_t v41 = a1;
  sub_1001B1E64(a1, v17);
  sub_1007963F4();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v41);
  }
  uint64_t v34 = v7;
  uint64_t v35 = v13;
  char v45 = 0;
  sub_100796440();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v18 = v44;
  uint64_t v19 = (uint64_t)v39;
  void *v39 = v43;
  *(void *)(v19 + 8) = v18;
  LOBYTE(v43) = 1;
  sub_1001457CC(&qword_100E63948);
  uint64_t v20 = v40;
  sub_10019F0B0();
  uint64_t v21 = v19 + v42[5];
  long long v32 = *(void (**)(uint64_t, char *, uint64_t))(v38 + 32);
  uint64_t v33 = v38 + 32;
  v32(v21, v11, v20);
  LOBYTE(v43) = 2;
  sub_10019F0B0();
  uint64_t v22 = sub_1001A0D58(v42[6]);
  v23(v22);
  LOBYTE(v43) = 3;
  sub_10019F0B0();
  uint64_t v24 = sub_1001A0D58(v42[7]);
  v25(v24);
  char v45 = 4;
  sub_100567158();
  sub_10017A890();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  *(void *)(v19 + v42[8]) = v43;
  char v45 = 5;
  sub_10017A890();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  uint64_t v26 = sub_10017D454();
  v27(v26);
  char v28 = v44;
  uint64_t v29 = v19 + v42[9];
  *(void *)uint64_t v29 = v43;
  *(unsigned char *)(v29 + 8) = v28;
  sub_1003217C8(v19, v36);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v41);
  return sub_10079648C(v19);
}

uint64_t sub_1007962E8()
{
  return sub_100795B44(*v0);
}

uint64_t sub_1007962F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1007958A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100796318(uint64_t a1)
{
  unint64_t v2 = sub_1007963F4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100796354(uint64_t a1)
{
  unint64_t v2 = sub_1007963F4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100796394@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100795E58(a1, a2);
}

uint64_t sub_1007963AC(void *a1)
{
  return sub_100795C24(a1);
}

void sub_1007963C4()
{
}

uint64_t sub_1007963DC()
{
  return sub_10089B538();
}

unint64_t sub_1007963F4()
{
  unint64_t result = qword_100E94470;
  if (!qword_100E94470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E94470);
  }
  return result;
}

unint64_t sub_100796440()
{
  unint64_t result = qword_100E94478;
  if (!qword_100E94478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E94478);
  }
  return result;
}

uint64_t sub_10079648C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DetailChartSelection();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1007964E8()
{
  unint64_t result = qword_100E94488;
  if (!qword_100E94488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E94488);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DetailChartSelection.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100796600);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DetailChartSelection.CodingKeys()
{
  return &type metadata for DetailChartSelection.CodingKeys;
}

unint64_t sub_10079663C()
{
  unint64_t result = qword_100E94490;
  if (!qword_100E94490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E94490);
  }
  return result;
}

unint64_t sub_10079668C()
{
  unint64_t result = qword_100E94498;
  if (!qword_100E94498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E94498);
  }
  return result;
}

unint64_t sub_1007966DC()
{
  unint64_t result = qword_100E944A0;
  if (!qword_100E944A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E944A0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for LocationViewComponent.ComponentType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xED)
  {
    if (a2 + 19 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 19) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 20;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x14;
  int v5 = v6 - 20;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for LocationViewComponent.ComponentType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 19 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 19) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xED) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEC)
  {
    unsigned int v6 = ((a2 - 237) >> 8) + 1;
    *unint64_t result = a2 + 19;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10079687CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 19;
        break;
    }
  }
  return result;
}

void *sub_1007968A4(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = type metadata accessor for AirQuality();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_85;
      case 1u:
        uint64_t v9 = type metadata accessor for CurrentWeather();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        uint64_t v10 = type metadata accessor for DailyForecastComponent();
        *(void *)((char *)a1 + *(int *)(v10 + 20)) = *(void *)((char *)a2 + *(int *)(v10 + 20));
        swift_bridgeObjectRetain();
        goto LABEL_85;
      case 2u:
        uint64_t v11 = a2[1];
        *a1 = *a2;
        a1[1] = v11;
        uint64_t v12 = a2[3];
        a1[2] = a2[2];
        a1[3] = v12;
        uint64_t v13 = a2[5];
        a1[4] = a2[4];
        a1[5] = v13;
        uint64_t v14 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
        uint64_t v15 = *(int *)(v14 + 28);
        uint64_t v16 = (void *)((char *)a1 + v15);
        uint64_t v17 = (void *)((char *)a2 + v15);
        uint64_t v18 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
        {
          uint64_t v19 = sub_10017DF08(&qword_100E63750);
          memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          uint64_t v151 = v17[1];
          *uint64_t v16 = *v17;
          v16[1] = v151;
          uint64_t v152 = *(int *)(v18 + 20);
          uint64_t v153 = (char *)v16 + v152;
          uint64_t v154 = (char *)v17 + v152;
          uint64_t v155 = type metadata accessor for TemperatureScaleConfiguration();
          v251 = *(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 16);
          swift_bridgeObjectRetain();
          v251(v153, v154, v155);
          v156 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
          *(void *)&v153[v156[5]] = *(void *)&v154[v156[5]];
          *(void *)&v153[v156[6]] = *(void *)&v154[v156[6]];
          *(void *)&v153[v156[7]] = *(void *)&v154[v156[7]];
          uint64_t v157 = v156[8];
          uint64_t v158 = &v153[v157];
          int v159 = &v154[v157];
          uint64_t v161 = *(void *)v159;
          uint64_t v160 = *((void *)v159 + 1);
          *(void *)uint64_t v158 = v161;
          *((void *)v158 + 1) = v160;
          v153[v156[9]] = v154[v156[9]];
          swift_bridgeObjectRetain();
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
        }
        uint64_t v162 = *(int *)(v14 + 32);
        uint64_t v163 = (void *)((char *)a1 + v162);
        uint64_t v164 = (void *)((char *)a2 + v162);
        uint64_t v165 = v164[1];
        void *v163 = *v164;
        v163[1] = v165;
        swift_bridgeObjectRetain();
        goto LABEL_85;
      case 3u:
        uint64_t v20 = type metadata accessor for CurrentWeather();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
        uint64_t v21 = (int *)type metadata accessor for HourlyForecastComponent();
        uint64_t v22 = v21[5];
        uint64_t v23 = (char *)a1 + v22;
        uint64_t v24 = (char *)a2 + v22;
        *(void *)((char *)a1 + v22) = *(void *)((char *)a2 + v22);
        uint64_t v25 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
        uint64_t v26 = &v23[v25];
        uint64_t v27 = &v24[v25];
        uint64_t v28 = type metadata accessor for WeatherDescription();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28))
        {
          uint64_t v29 = sub_10017DF08(&qword_100E63758);
          memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
        }
        uint64_t v166 = v21[6];
        uint64_t v167 = (char *)a1 + v166;
        uint64_t v168 = (char *)a2 + v166;
        uint64_t v169 = sub_10017DF08(&qword_100E66CC8);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v169 - 8) + 16))(v167, v168, v169);
        uint64_t v170 = v21[7];
        uint64_t v171 = (char *)a1 + v170;
        uint64_t v172 = (char *)a2 + v170;
        uint64_t v173 = sub_10017DF08(&qword_100E66CA0);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v173 - 8) + 16))(v171, v172, v173);
        uint64_t v174 = v21[8];
        uint64_t v175 = (char *)a1 + v174;
        v176 = (char *)a2 + v174;
        uint64_t v177 = type metadata accessor for WeatherChanges();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v176, 1, v177))
        {
          uint64_t v178 = sub_10017DF08(&qword_100E6D1C8);
          memcpy(v175, v176, *(void *)(*(void *)(v178 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v177 - 8) + 16))(v175, v176, v177);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v175, 0, 1, v177);
        }
        *((unsigned char *)a1 + v21[9]) = *((unsigned char *)a2 + v21[9]);
        *((unsigned char *)a1 + v21[10]) = *((unsigned char *)a2 + v21[10]);
        goto LABEL_85;
      case 4u:
        uint64_t v30 = type metadata accessor for CurrentWeather();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(a1, a2, v30);
        goto LABEL_85;
      case 5u:
        uint64_t v31 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(a1, a2, v31);
        uint64_t v32 = *(int *)(type metadata accessor for MapComponent() + 20);
        uint64_t v33 = (void *)((char *)a1 + v32);
        uint64_t v34 = (char *)a2 + v32;
        uint64_t v35 = *(void *)((char *)a2 + v32 + 8);
        *uint64_t v33 = *(void *)((char *)a2 + v32);
        v33[1] = v35;
        uint64_t v36 = (int *)type metadata accessor for WeatherData(0);
        uint64_t v37 = v36[5];
        uint64_t v38 = (char *)v33 + v37;
        uint64_t v39 = &v34[v37];
        uint64_t v40 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40))
        {
          uint64_t v41 = sub_10017DF08(&qword_100E63730);
          memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
        }
        uint64_t v179 = v36[6];
        v180 = (char *)v33 + v179;
        uint64_t v181 = &v34[v179];
        uint64_t v182 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 16))(v180, v181, v182);
        uint64_t v183 = v36[7];
        uint64_t v184 = (char *)v33 + v183;
        v185 = &v34[v183];
        uint64_t v186 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v185, 1, v186))
        {
          uint64_t v187 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v184, v185, *(void *)(*(void *)(v187 - 8) + 64));
        }
        else
        {
          uint64_t v197 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v197 - 8) + 16))(v184, v185, v197);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v184, 0, 1, v186);
        }
        uint64_t v198 = v36[8];
        uint64_t v199 = (void *)((char *)v33 + v198);
        uint64_t v200 = &v34[v198];
        uint64_t v201 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v211 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(void *, char *, uint64_t))(*(void *)(v211 - 8) + 16))(v199, v200, v211);
          goto LABEL_55;
        }
        if (!EnumCaseMultiPayload)
        {
          uint64_t v203 = *((void *)v200 + 1);
          *uint64_t v199 = *(void *)v200;
          v199[1] = v203;
          swift_bridgeObjectRetain();
LABEL_55:
          swift_storeEnumTagMultiPayload();
          goto LABEL_57;
        }
        memcpy(v199, v200, *(void *)(*(void *)(v201 - 8) + 64));
LABEL_57:
        uint64_t v212 = v36[9];
        v213 = (char *)v33 + v212;
        v214 = &v34[v212];
        uint64_t v215 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v214, 1, v215))
        {
          uint64_t v216 = sub_10017DF08(&qword_100E63740);
          memcpy(v213, v214, *(void *)(*(void *)(v216 - 8) + 64));
        }
        else
        {
          uint64_t v217 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v214, 1, v217))
          {
            uint64_t v218 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v213, v214, *(void *)(*(void *)(v218 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v217 - 8) + 16))(v213, v214, v217);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v213, 0, 1, v217);
          }
          uint64_t v242 = *(int *)(v215 + 20);
          v243 = &v213[v242];
          v244 = &v214[v242];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v244, 1, v217))
          {
            uint64_t v245 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v243, v244, *(void *)(*(void *)(v245 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v217 - 8) + 16))(v243, v244, v217);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v243, 0, 1, v217);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v213, 0, 1, v215);
        }
        goto LABEL_85;
      case 6u:
        uint64_t v42 = a2[1];
        *a1 = *a2;
        a1[1] = v42;
        uint64_t v43 = (int *)type metadata accessor for WeatherData(0);
        uint64_t v44 = v43[5];
        char v45 = (char *)a1 + v44;
        uint64_t v46 = (char *)a2 + v44;
        uint64_t v47 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v47))
        {
          uint64_t v48 = sub_10017DF08(&qword_100E63730);
          memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v47);
        }
        uint64_t v188 = v43[6];
        v189 = (char *)a1 + v188;
        uint64_t v190 = (char *)a2 + v188;
        uint64_t v191 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v191 - 8) + 16))(v189, v190, v191);
        uint64_t v192 = v43[7];
        v193 = (char *)a1 + v192;
        uint64_t v194 = (char *)a2 + v192;
        uint64_t v195 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v194, 1, v195))
        {
          uint64_t v196 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v193, v194, *(void *)(*(void *)(v196 - 8) + 64));
        }
        else
        {
          uint64_t v204 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v204 - 8) + 16))(v193, v194, v204);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v193, 0, 1, v195);
        }
        uint64_t v205 = v43[8];
        v206 = (void *)((char *)a1 + v205);
        v207 = (void *)((char *)a2 + v205);
        uint64_t v208 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int v209 = swift_getEnumCaseMultiPayload();
        if (v209 == 1)
        {
          uint64_t v219 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v219 - 8) + 16))(v206, v207, v219);
          goto LABEL_62;
        }
        if (!v209)
        {
          uint64_t v210 = v207[1];
          void *v206 = *v207;
          v206[1] = v210;
          swift_bridgeObjectRetain();
LABEL_62:
          swift_storeEnumTagMultiPayload();
          goto LABEL_64;
        }
        memcpy(v206, v207, *(void *)(*(void *)(v208 - 8) + 64));
LABEL_64:
        uint64_t v220 = v43[9];
        v221 = (char *)a1 + v220;
        v222 = (char *)a2 + v220;
        uint64_t v223 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v222, 1, v223))
        {
          uint64_t v224 = sub_10017DF08(&qword_100E63740);
          memcpy(v221, v222, *(void *)(*(void *)(v224 - 8) + 64));
        }
        else
        {
          uint64_t v225 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v222, 1, v225))
          {
            uint64_t v226 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v221, v222, *(void *)(*(void *)(v226 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v225 - 8) + 16))(v221, v222, v225);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v221, 0, 1, v225);
          }
          uint64_t v246 = *(int *)(v223 + 20);
          v247 = &v221[v246];
          v248 = &v222[v246];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v248, 1, v225))
          {
            uint64_t v249 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v247, v248, *(void *)(*(void *)(v249 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v225 - 8) + 16))(v247, v248, v225);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v247, 0, 1, v225);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v221, 0, 1, v223);
        }
LABEL_85:
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        type metadata accessor for ArticleModel();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v49 = a2[1];
          *a1 = *a2;
          a1[1] = v49;
          uint64_t v50 = a2[3];
          a1[2] = a2[2];
          a1[3] = v50;
          uint64_t v51 = (int *)type metadata accessor for NewsArticle();
          uint64_t v52 = v51[6];
          uint64_t v53 = (char *)a1 + v52;
          uint64_t v54 = (char *)a2 + v52;
          uint64_t v55 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v55))
          {
            uint64_t v56 = sub_10017DF08(&qword_100E749B0);
            memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v55);
          }
          uint64_t v227 = v51[7];
          v228 = (char *)a1 + v227;
          v229 = (char *)a2 + v227;
          uint64_t v230 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v230 - 8) + 16))(v228, v229, v230);
          v231 = (void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16);
          v252 = *v231;
          (*v231)((char *)a1 + v51[8], (char *)a2 + v51[8], v55);
          uint64_t v232 = v51[9];
          v233 = (void *)((char *)a1 + v232);
          v234 = (char *)a2 + v232;
          uint64_t v235 = *(void *)((char *)a2 + v232 + 8);
          void *v233 = *(void *)((char *)a2 + v232);
          v233[1] = v235;
          uint64_t v236 = *(void *)((char *)a2 + v232 + 24);
          v233[2] = *(void *)((char *)a2 + v232 + 16);
          v233[3] = v236;
          uint64_t v237 = *(int *)(type metadata accessor for NewsChannel() + 24);
          v238 = (char *)v233 + v237;
          v239 = &v234[v237];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v239, 1, v55))
          {
            uint64_t v240 = sub_10017DF08(&qword_100E749B0);
            memcpy(v238, v239, *(void *)(*(void *)(v240 - 8) + 64));
          }
          else
          {
            v252(v238, v239, v55);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v238, 0, 1, v55);
          }
          *(void *)((char *)a1 + v51[10]) = *(void *)((char *)a2 + v51[10]);
          *(void *)((char *)a1 + v51[11]) = *(void *)((char *)a2 + v51[11]);
          *(void *)((char *)a1 + v51[12]) = *(void *)((char *)a2 + v51[12]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v150 = type metadata accessor for Article();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v150 - 8) + 16))(a1, a2, v150);
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v241 = type metadata accessor for NewsArticleComponent();
        *((unsigned char *)a1 + *(int *)(v241 + 20)) = *((unsigned char *)a2 + *(int *)(v241 + 20));
        goto LABEL_85;
      case 8u:
        uint64_t v57 = type metadata accessor for CurrentWeather();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v57 - 8) + 16))(a1, a2, v57);
        uint64_t HourPrecipitationComponent = type metadata accessor for NextHourPrecipitationComponent();
        uint64_t v59 = *(int *)(HourPrecipitationComponent + 20);
        uint64_t v60 = (char *)a1 + v59;
        uint64_t v61 = (char *)a2 + v59;
        uint64_t v62 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v60, v61, v62);
        uint64_t v63 = *(int *)(HourPrecipitationComponent + 24);
        uint64_t v64 = (char *)a1 + v63;
        uint64_t v65 = (char *)a2 + v63;
        uint64_t v66 = sub_10017DF08(&qword_100E6E900);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16))(v64, v65, v66);
        goto LABEL_85;
      case 9u:
        uint64_t v67 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v67 - 8) + 16))(a1, a2, v67);
        goto LABEL_85;
      case 0xAu:
        uint64_t v68 = type metadata accessor for CurrentWeather();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v68 - 8) + 16))(a1, a2, v68);
        uint64_t v69 = *(int *)(type metadata accessor for PressureComponent() + 20);
        uint64_t v70 = (char *)a1 + v69;
        uint64_t v71 = (char *)a2 + v69;
        uint64_t v72 = type metadata accessor for PressureTrend();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v70, v71, v72);
        uint64_t v73 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
        uint64_t v74 = v73[5];
        uint64_t v75 = &v70[v74];
        uint64_t v76 = &v71[v74];
        uint64_t v78 = *(void *)v76;
        uint64_t v77 = *((void *)v76 + 1);
        *(void *)uint64_t v75 = v78;
        *((void *)v75 + 1) = v77;
        uint64_t v79 = v73[6];
        uint64_t v80 = &v70[v79];
        uint64_t v81 = &v71[v79];
        uint64_t v82 = *((void *)v81 + 1);
        *(void *)uint64_t v80 = *(void *)v81;
        *((void *)v80 + 1) = v82;
        uint64_t v83 = v73[7];
        uint64_t v84 = &v70[v83];
        uint64_t v85 = &v71[v83];
        uint64_t v86 = *((void *)v85 + 1);
        *(void *)uint64_t v84 = *(void *)v85;
        *((void *)v84 + 1) = v86;
        *(void *)&v70[v73[8]] = *(void *)&v71[v73[8]];
        uint64_t v87 = v73[9];
        uint64_t v88 = &v70[v87];
        uint64_t v89 = &v71[v87];
        uint64_t v90 = *((void *)v89 + 1);
        *(void *)uint64_t v88 = *(void *)v89;
        *((void *)v88 + 1) = v90;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_85;
      case 0xBu:
        uint64_t v91 = a2[1];
        *a1 = *a2;
        a1[1] = v91;
        uint64_t v92 = a2[3];
        a1[2] = a2[2];
        a1[3] = v92;
        uint64_t v93 = a2[5];
        a1[4] = a2[4];
        a1[5] = v93;
        uint64_t v94 = a2[7];
        a1[6] = a2[6];
        a1[7] = v94;
        uint64_t v95 = a2[9];
        a1[8] = a2[8];
        a1[9] = v95;
        uint64_t v96 = a2[11];
        a1[10] = a2[10];
        a1[11] = v96;
        uint64_t v97 = a2[12];
        uint64_t v98 = a2[13];
        a1[12] = v97;
        a1[13] = v98;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_85;
      case 0xDu:
        uint64_t v99 = a2[1];
        *a1 = *a2;
        a1[1] = v99;
        uint64_t v100 = *(int *)(type metadata accessor for SevereAlertComponent() + 24);
        uint64_t v101 = (char *)a1 + v100;
        uint64_t v102 = (char *)a2 + v100;
        uint64_t v103 = type metadata accessor for Date();
        uint64_t v104 = *(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 16);
        swift_bridgeObjectRetain();
        v104(v101, v102, v103);
        goto LABEL_85;
      case 0xEu:
        uint64_t v105 = type metadata accessor for SunriseSunsetModel();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v105 - 8) + 16))(a1, a2, v105);
        goto LABEL_85;
      case 0xFu:
        uint64_t v106 = type metadata accessor for HistoricalComparisons();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v106))
        {
          uint64_t v107 = sub_10017DF08(&qword_100E6B8B8);
          memcpy(a1, a2, *(void *)(*(void *)(v107 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v106 - 8) + 16))(a1, a2, v106);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v106);
        }
        goto LABEL_85;
      case 0x10u:
        uint64_t v108 = type metadata accessor for CurrentWeather();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v108 - 8) + 16))(a1, a2, v108);
        uint64_t v109 = (int *)type metadata accessor for UVIndexComponent();
        uint64_t v110 = v109[5];
        uint64_t v111 = (char *)a1 + v110;
        long long v112 = (char *)a2 + v110;
        uint64_t v113 = type metadata accessor for WeatherDescription();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 16))(v111, v112, v113);
        uint64_t v114 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
        uint64_t v115 = &v111[v114];
        long long v116 = &v112[v114];
        uint64_t v117 = *((void *)v116 + 1);
        *(void *)uint64_t v115 = *(void *)v116;
        *((void *)v115 + 1) = v117;
        uint64_t v118 = v109[6];
        Swift::String v119 = (char *)a1 + v118;
        uint64_t v120 = (char *)a2 + v118;
        swift_bridgeObjectRetain();
        uint64_t v121 = sub_10017DF08(&qword_100E66CA0);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 16))(v119, v120, v121);
        uint64_t v122 = v109[7];
        uint64_t v123 = (char *)a1 + v122;
        uint64_t v124 = (char *)a2 + v122;
        uint64_t v125 = sub_10017DF08(&qword_100E66CC8);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 16))(v123, v124, v125);
        goto LABEL_85;
      case 0x11u:
        uint64_t v126 = type metadata accessor for CurrentWeather();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v126 - 8) + 16))(a1, a2, v126);
        uint64_t v127 = *(int *)(type metadata accessor for VisibilityComponent() + 20);
        v128 = (void *)((char *)a1 + v127);
        uint64_t v129 = (void *)((char *)a2 + v127);
        uint64_t v130 = v129[1];
        void *v128 = *v129;
        v128[1] = v130;
        uint64_t v131 = v129[3];
        v128[2] = v129[2];
        v128[3] = v131;
        uint64_t v132 = v129[5];
        v128[4] = v129[4];
        v128[5] = v132;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_85;
      case 0x12u:
        uint64_t v133 = type metadata accessor for CurrentWeather();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v133 - 8) + 16))(a1, a2, v133);
        uint64_t v134 = *(int *)(type metadata accessor for WindComponent() + 20);
        uint64_t v135 = (char *)a1 + v134;
        uint64_t v136 = (char *)a2 + v134;
        uint64_t v137 = *((void *)v136 + 1);
        *(void *)uint64_t v135 = *(void *)v136;
        *((void *)v135 + 1) = v137;
        uint64_t v138 = *((void *)v136 + 3);
        *((void *)v135 + 2) = *((void *)v136 + 2);
        *((void *)v135 + 3) = v138;
        uint64_t v139 = *((void *)v136 + 5);
        *((void *)v135 + 4) = *((void *)v136 + 4);
        *((void *)v135 + 5) = v139;
        uint64_t v140 = *((void *)v136 + 7);
        *((void *)v135 + 6) = *((void *)v136 + 6);
        *((void *)v135 + 7) = v140;
        uint64_t v141 = *((void *)v136 + 9);
        *((void *)v135 + 8) = *((void *)v136 + 8);
        *((void *)v135 + 9) = v141;
        uint64_t v142 = *((void *)v136 + 11);
        *((void *)v135 + 10) = *((void *)v136 + 10);
        *((void *)v135 + 11) = v142;
        uint64_t v143 = *((void *)v136 + 13);
        *((void *)v135 + 12) = *((void *)v136 + 12);
        *((void *)v135 + 13) = v143;
        uint64_t v144 = *((void *)v136 + 15);
        *((void *)v135 + 14) = *((void *)v136 + 14);
        *((void *)v135 + 15) = v144;
        uint64_t v145 = *((void *)v136 + 17);
        *((void *)v135 + 16) = *((void *)v136 + 16);
        *((void *)v135 + 17) = v145;
        uint64_t v146 = *((void *)v136 + 19);
        *((void *)v135 + 18) = *((void *)v136 + 18);
        *((void *)v135 + 19) = v146;
        uint64_t v147 = *((void *)v136 + 21);
        *((void *)v135 + 20) = *((void *)v136 + 20);
        *((void *)v135 + 21) = v147;
        uint64_t v148 = *((void *)v136 + 23);
        *((void *)v135 + 22) = *((void *)v136 + 22);
        *((void *)v135 + 23) = v148;
        uint64_t v149 = *((void *)v136 + 25);
        *((void *)v135 + 24) = *((void *)v136 + 24);
        *((void *)v135 + 25) = v149;
        *((_OWORD *)v135 + 13) = *((_OWORD *)v136 + 13);
        *((void *)v135 + 28) = *((void *)v136 + 28);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_85;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
    }
  }
  return a1;
}

void *sub_100798268(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10079F01C((uint64_t)a1, (void (*)(void))type metadata accessor for LocationViewComponent);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = type metadata accessor for AirQuality();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_84;
      case 1u:
        uint64_t v7 = type metadata accessor for CurrentWeather();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        uint64_t v8 = type metadata accessor for DailyForecastComponent();
        *(void *)((char *)a1 + *(int *)(v8 + 20)) = *(void *)((char *)a2 + *(int *)(v8 + 20));
        swift_bridgeObjectRetain();
        goto LABEL_84;
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        uint64_t v9 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
        uint64_t v10 = *(int *)(v9 + 28);
        uint64_t v11 = (void *)((char *)a1 + v10);
        uint64_t v12 = (void *)((char *)a2 + v10);
        uint64_t v13 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
        {
          uint64_t v14 = sub_10017DF08(&qword_100E63750);
          memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          *uint64_t v11 = *v12;
          v11[1] = v12[1];
          uint64_t v111 = *(int *)(v13 + 20);
          long long v112 = (char *)v11 + v111;
          uint64_t v113 = (char *)v12 + v111;
          uint64_t v114 = type metadata accessor for TemperatureScaleConfiguration();
          uint64_t v204 = v9;
          uint64_t v115 = *(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 16);
          swift_bridgeObjectRetain();
          v115(v112, v113, v114);
          uint64_t v9 = v204;
          long long v116 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
          *(void *)&v112[v116[5]] = *(void *)&v113[v116[5]];
          *(void *)&v112[v116[6]] = *(void *)&v113[v116[6]];
          *(void *)&v112[v116[7]] = *(void *)&v113[v116[7]];
          uint64_t v117 = v116[8];
          uint64_t v118 = &v112[v117];
          Swift::String v119 = &v113[v117];
          *(void *)uint64_t v118 = *(void *)v119;
          *((void *)v118 + 1) = *((void *)v119 + 1);
          v112[v116[9]] = v113[v116[9]];
          swift_bridgeObjectRetain();
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
        }
        uint64_t v120 = *(int *)(v9 + 32);
        uint64_t v121 = (void *)((char *)a1 + v120);
        uint64_t v122 = (void *)((char *)a2 + v120);
        void *v121 = *v122;
        v121[1] = v122[1];
        swift_bridgeObjectRetain();
        goto LABEL_84;
      case 3u:
        uint64_t v15 = type metadata accessor for CurrentWeather();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
        uint64_t v16 = (int *)type metadata accessor for HourlyForecastComponent();
        uint64_t v17 = v16[5];
        uint64_t v18 = (char *)a1 + v17;
        uint64_t v19 = (char *)a2 + v17;
        *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
        uint64_t v20 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
        uint64_t v21 = &v18[v20];
        uint64_t v22 = &v19[v20];
        uint64_t v23 = type metadata accessor for WeatherDescription();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23))
        {
          uint64_t v24 = sub_10017DF08(&qword_100E63758);
          memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v23);
        }
        uint64_t v123 = v16[6];
        uint64_t v124 = (char *)a1 + v123;
        uint64_t v125 = (char *)a2 + v123;
        uint64_t v126 = sub_10017DF08(&qword_100E66CC8);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 16))(v124, v125, v126);
        uint64_t v127 = v16[7];
        v128 = (char *)a1 + v127;
        uint64_t v129 = (char *)a2 + v127;
        uint64_t v130 = sub_10017DF08(&qword_100E66CA0);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 16))(v128, v129, v130);
        uint64_t v131 = v16[8];
        uint64_t v132 = (char *)a1 + v131;
        uint64_t v133 = (char *)a2 + v131;
        uint64_t v134 = type metadata accessor for WeatherChanges();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v133, 1, v134))
        {
          uint64_t v135 = sub_10017DF08(&qword_100E6D1C8);
          memcpy(v132, v133, *(void *)(*(void *)(v135 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 16))(v132, v133, v134);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v132, 0, 1, v134);
        }
        *((unsigned char *)a1 + v16[9]) = *((unsigned char *)a2 + v16[9]);
        *((unsigned char *)a1 + v16[10]) = *((unsigned char *)a2 + v16[10]);
        goto LABEL_84;
      case 4u:
        uint64_t v25 = type metadata accessor for CurrentWeather();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
        goto LABEL_84;
      case 5u:
        uint64_t v26 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(a1, a2, v26);
        uint64_t v27 = *(int *)(type metadata accessor for MapComponent() + 20);
        uint64_t v28 = (void *)((char *)a1 + v27);
        uint64_t v29 = (char *)a2 + v27;
        *uint64_t v28 = *(void *)((char *)a2 + v27);
        v28[1] = *(void *)((char *)a2 + v27 + 8);
        uint64_t v30 = (int *)type metadata accessor for WeatherData(0);
        uint64_t v31 = v30[5];
        uint64_t v32 = (char *)v28 + v31;
        uint64_t v33 = &v29[v31];
        uint64_t v34 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34))
        {
          uint64_t v35 = sub_10017DF08(&qword_100E63730);
          memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
        }
        uint64_t v136 = v30[6];
        uint64_t v137 = (char *)v28 + v136;
        uint64_t v138 = &v29[v136];
        uint64_t v139 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v139 - 8) + 16))(v137, v138, v139);
        uint64_t v140 = v30[7];
        uint64_t v141 = (char *)v28 + v140;
        uint64_t v142 = &v29[v140];
        uint64_t v143 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v142, 1, v143))
        {
          uint64_t v144 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v141, v142, *(void *)(*(void *)(v144 - 8) + 64));
        }
        else
        {
          uint64_t v154 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v154 - 8) + 16))(v141, v142, v154);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v141, 0, 1, v143);
        }
        uint64_t v155 = v30[8];
        v156 = (void *)((char *)v28 + v155);
        uint64_t v157 = &v29[v155];
        uint64_t v158 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v166 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(void *, char *, uint64_t))(*(void *)(v166 - 8) + 16))(v156, v157, v166);
          goto LABEL_54;
        }
        if (!EnumCaseMultiPayload)
        {
          void *v156 = *(void *)v157;
          v156[1] = *((void *)v157 + 1);
          swift_bridgeObjectRetain();
LABEL_54:
          swift_storeEnumTagMultiPayload();
          goto LABEL_56;
        }
        memcpy(v156, v157, *(void *)(*(void *)(v158 - 8) + 64));
LABEL_56:
        uint64_t v167 = v30[9];
        uint64_t v168 = (char *)v28 + v167;
        uint64_t v169 = &v29[v167];
        uint64_t v170 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v169, 1, v170))
        {
          uint64_t v171 = sub_10017DF08(&qword_100E63740);
          memcpy(v168, v169, *(void *)(*(void *)(v171 - 8) + 64));
        }
        else
        {
          uint64_t v172 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v169, 1, v172))
          {
            uint64_t v173 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v168, v169, *(void *)(*(void *)(v173 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v172 - 8) + 16))(v168, v169, v172);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v168, 0, 1, v172);
          }
          uint64_t v195 = *(int *)(v170 + 20);
          uint64_t v196 = &v168[v195];
          uint64_t v197 = &v169[v195];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v197, 1, v172))
          {
            uint64_t v198 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v196, v197, *(void *)(*(void *)(v198 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v172 - 8) + 16))(v196, v197, v172);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v196, 0, 1, v172);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v168, 0, 1, v170);
        }
        goto LABEL_84;
      case 6u:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v36 = (int *)type metadata accessor for WeatherData(0);
        uint64_t v37 = v36[5];
        uint64_t v38 = (char *)a1 + v37;
        uint64_t v39 = (char *)a2 + v37;
        uint64_t v40 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40))
        {
          uint64_t v41 = sub_10017DF08(&qword_100E63730);
          memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
        }
        uint64_t v145 = v36[6];
        uint64_t v146 = (char *)a1 + v145;
        uint64_t v147 = (char *)a2 + v145;
        uint64_t v148 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 16))(v146, v147, v148);
        uint64_t v149 = v36[7];
        uint64_t v150 = (char *)a1 + v149;
        uint64_t v151 = (char *)a2 + v149;
        uint64_t v152 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v151, 1, v152))
        {
          uint64_t v153 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v150, v151, *(void *)(*(void *)(v153 - 8) + 64));
        }
        else
        {
          uint64_t v160 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 16))(v150, v151, v160);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v150, 0, 1, v152);
        }
        uint64_t v161 = v36[8];
        uint64_t v162 = (void *)((char *)a1 + v161);
        uint64_t v163 = (void *)((char *)a2 + v161);
        uint64_t v164 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int v165 = swift_getEnumCaseMultiPayload();
        if (v165 == 1)
        {
          uint64_t v174 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v174 - 8) + 16))(v162, v163, v174);
          goto LABEL_61;
        }
        if (!v165)
        {
          void *v162 = *v163;
          v162[1] = v163[1];
          swift_bridgeObjectRetain();
LABEL_61:
          swift_storeEnumTagMultiPayload();
          goto LABEL_63;
        }
        memcpy(v162, v163, *(void *)(*(void *)(v164 - 8) + 64));
LABEL_63:
        uint64_t v175 = v36[9];
        v176 = (char *)a1 + v175;
        uint64_t v177 = (char *)a2 + v175;
        uint64_t v178 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v177, 1, v178))
        {
          uint64_t v179 = sub_10017DF08(&qword_100E63740);
          memcpy(v176, v177, *(void *)(*(void *)(v179 - 8) + 64));
        }
        else
        {
          uint64_t v180 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v177, 1, v180))
          {
            uint64_t v181 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v176, v177, *(void *)(*(void *)(v181 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v180 - 8) + 16))(v176, v177, v180);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v176, 0, 1, v180);
          }
          uint64_t v199 = *(int *)(v178 + 20);
          uint64_t v200 = &v176[v199];
          uint64_t v201 = &v177[v199];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v201, 1, v180))
          {
            uint64_t v202 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v200, v201, *(void *)(*(void *)(v202 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v180 - 8) + 16))(v200, v201, v180);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v200, 0, 1, v180);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v176, 0, 1, v178);
        }
LABEL_84:
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        type metadata accessor for ArticleModel();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          a1[3] = a2[3];
          uint64_t v42 = (int *)type metadata accessor for NewsArticle();
          uint64_t v43 = v42[6];
          uint64_t v44 = (char *)a1 + v43;
          char v45 = (char *)a2 + v43;
          uint64_t v46 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v46))
          {
            uint64_t v47 = sub_10017DF08(&qword_100E749B0);
            memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v46);
          }
          uint64_t v182 = v42[7];
          uint64_t v183 = (char *)a1 + v182;
          uint64_t v184 = (char *)a2 + v182;
          uint64_t v185 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v185 - 8) + 16))(v183, v184, v185);
          uint64_t v186 = *(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16);
          v186((char *)a1 + v42[8], (char *)a2 + v42[8], v46);
          uint64_t v187 = v42[9];
          uint64_t v188 = (void *)((char *)a1 + v187);
          v189 = (char *)a2 + v187;
          void *v188 = *(void *)((char *)a2 + v187);
          v188[1] = *(void *)((char *)a2 + v187 + 8);
          v188[2] = *(void *)((char *)a2 + v187 + 16);
          v188[3] = *(void *)((char *)a2 + v187 + 24);
          uint64_t v190 = *(int *)(type metadata accessor for NewsChannel() + 24);
          uint64_t v191 = (char *)v188 + v190;
          uint64_t v192 = &v189[v190];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v192, 1, v46))
          {
            uint64_t v193 = sub_10017DF08(&qword_100E749B0);
            memcpy(v191, v192, *(void *)(*(void *)(v193 - 8) + 64));
          }
          else
          {
            v186(v191, v192, v46);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v191, 0, 1, v46);
          }
          *(void *)((char *)a1 + v42[10]) = *(void *)((char *)a2 + v42[10]);
          *(void *)((char *)a1 + v42[11]) = *(void *)((char *)a2 + v42[11]);
          *(void *)((char *)a1 + v42[12]) = *(void *)((char *)a2 + v42[12]);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v110 = type metadata accessor for Article();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v110 - 8) + 16))(a1, a2, v110);
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v194 = type metadata accessor for NewsArticleComponent();
        *((unsigned char *)a1 + *(int *)(v194 + 20)) = *((unsigned char *)a2 + *(int *)(v194 + 20));
        goto LABEL_84;
      case 8u:
        uint64_t v48 = type metadata accessor for CurrentWeather();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v48 - 8) + 16))(a1, a2, v48);
        uint64_t HourPrecipitationComponent = type metadata accessor for NextHourPrecipitationComponent();
        uint64_t v50 = *(int *)(HourPrecipitationComponent + 20);
        uint64_t v51 = (char *)a1 + v50;
        uint64_t v52 = (char *)a2 + v50;
        uint64_t v53 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
        uint64_t v54 = *(int *)(HourPrecipitationComponent + 24);
        uint64_t v55 = (char *)a1 + v54;
        uint64_t v56 = (char *)a2 + v54;
        uint64_t v57 = sub_10017DF08(&qword_100E6E900);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v55, v56, v57);
        goto LABEL_84;
      case 9u:
        uint64_t v58 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v58 - 8) + 16))(a1, a2, v58);
        goto LABEL_84;
      case 0xAu:
        uint64_t v59 = type metadata accessor for CurrentWeather();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v59 - 8) + 16))(a1, a2, v59);
        uint64_t v60 = *(int *)(type metadata accessor for PressureComponent() + 20);
        uint64_t v61 = (char *)a1 + v60;
        uint64_t v62 = (char *)a2 + v60;
        uint64_t v63 = type metadata accessor for PressureTrend();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
        uint64_t v64 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
        uint64_t v65 = v64[5];
        uint64_t v66 = &v61[v65];
        uint64_t v67 = &v62[v65];
        *(void *)uint64_t v66 = *(void *)v67;
        *((void *)v66 + 1) = *((void *)v67 + 1);
        uint64_t v68 = v64[6];
        uint64_t v69 = &v61[v68];
        uint64_t v70 = &v62[v68];
        *(void *)uint64_t v69 = *(void *)v70;
        *((void *)v69 + 1) = *((void *)v70 + 1);
        uint64_t v71 = v64[7];
        uint64_t v72 = &v61[v71];
        uint64_t v73 = &v62[v71];
        *(void *)uint64_t v72 = *(void *)v73;
        *((void *)v72 + 1) = *((void *)v73 + 1);
        *(void *)&v61[v64[8]] = *(void *)&v62[v64[8]];
        uint64_t v74 = v64[9];
        uint64_t v75 = &v61[v74];
        uint64_t v76 = &v62[v74];
        *(void *)uint64_t v75 = *(void *)v76;
        *((void *)v75 + 1) = *((void *)v76 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_84;
      case 0xBu:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        a1[7] = a2[7];
        a1[8] = a2[8];
        a1[9] = a2[9];
        a1[10] = a2[10];
        a1[11] = a2[11];
        a1[12] = a2[12];
        a1[13] = a2[13];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_84;
      case 0xDu:
        *a1 = *a2;
        a1[1] = a2[1];
        uint64_t v77 = *(int *)(type metadata accessor for SevereAlertComponent() + 24);
        uint64_t v78 = (char *)a1 + v77;
        uint64_t v79 = (char *)a2 + v77;
        uint64_t v80 = type metadata accessor for Date();
        uint64_t v81 = *(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16);
        swift_bridgeObjectRetain();
        v81(v78, v79, v80);
        goto LABEL_84;
      case 0xEu:
        uint64_t v82 = type metadata accessor for SunriseSunsetModel();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v82 - 8) + 16))(a1, a2, v82);
        goto LABEL_84;
      case 0xFu:
        uint64_t v83 = type metadata accessor for HistoricalComparisons();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v83))
        {
          uint64_t v84 = sub_10017DF08(&qword_100E6B8B8);
          memcpy(a1, a2, *(void *)(*(void *)(v84 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v83 - 8) + 16))(a1, a2, v83);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v83);
        }
        goto LABEL_84;
      case 0x10u:
        uint64_t v85 = type metadata accessor for CurrentWeather();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v85 - 8) + 16))(a1, a2, v85);
        uint64_t v86 = (int *)type metadata accessor for UVIndexComponent();
        uint64_t v87 = v86[5];
        uint64_t v88 = (char *)a1 + v87;
        uint64_t v89 = (char *)a2 + v87;
        uint64_t v90 = type metadata accessor for WeatherDescription();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16))(v88, v89, v90);
        uint64_t v91 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
        uint64_t v92 = &v88[v91];
        uint64_t v93 = &v89[v91];
        *(void *)uint64_t v92 = *(void *)v93;
        *((void *)v92 + 1) = *((void *)v93 + 1);
        uint64_t v94 = v86[6];
        uint64_t v95 = (char *)a1 + v94;
        uint64_t v96 = (char *)a2 + v94;
        swift_bridgeObjectRetain();
        uint64_t v97 = sub_10017DF08(&qword_100E66CA0);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 16))(v95, v96, v97);
        uint64_t v98 = v86[7];
        uint64_t v99 = (char *)a1 + v98;
        uint64_t v100 = (char *)a2 + v98;
        uint64_t v101 = sub_10017DF08(&qword_100E66CC8);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 16))(v99, v100, v101);
        goto LABEL_84;
      case 0x11u:
        uint64_t v102 = type metadata accessor for CurrentWeather();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v102 - 8) + 16))(a1, a2, v102);
        uint64_t v103 = *(int *)(type metadata accessor for VisibilityComponent() + 20);
        uint64_t v104 = (void *)((char *)a1 + v103);
        uint64_t v105 = (void *)((char *)a2 + v103);
        void *v104 = *v105;
        v104[1] = v105[1];
        v104[2] = v105[2];
        v104[3] = v105[3];
        v104[4] = v105[4];
        v104[5] = v105[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_84;
      case 0x12u:
        uint64_t v106 = type metadata accessor for CurrentWeather();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v106 - 8) + 16))(a1, a2, v106);
        uint64_t v107 = *(int *)(type metadata accessor for WindComponent() + 20);
        uint64_t v108 = (void *)((char *)a1 + v107);
        uint64_t v109 = (void *)((char *)a2 + v107);
        void *v108 = *v109;
        v108[1] = v109[1];
        v108[2] = v109[2];
        v108[3] = v109[3];
        v108[4] = v109[4];
        v108[5] = v109[5];
        v108[6] = v109[6];
        v108[7] = v109[7];
        v108[8] = v109[8];
        v108[9] = v109[9];
        v108[10] = v109[10];
        v108[11] = v109[11];
        v108[12] = v109[12];
        v108[13] = v109[13];
        v108[14] = v109[14];
        v108[15] = v109[15];
        v108[16] = v109[16];
        v108[17] = v109[17];
        v108[18] = v109[18];
        v108[19] = v109[19];
        v108[20] = v109[20];
        v108[21] = v109[21];
        v108[22] = v109[22];
        v108[23] = v109[23];
        v108[24] = v109[24];
        v108[25] = v109[25];
        v108[26] = v109[26];
        v108[27] = v109[27];
        v108[28] = v109[28];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_84;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

_OWORD *sub_100799CD4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = type metadata accessor for AirQuality();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_76;
    case 1u:
      uint64_t v7 = type metadata accessor for CurrentWeather();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v8 = type metadata accessor for DailyForecastComponent();
      *(void *)((char *)a1 + *(int *)(v8 + 20)) = *(void *)((char *)a2 + *(int *)(v8 + 20));
      goto LABEL_76;
    case 2u:
      long long v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      a1[2] = a2[2];
      uint64_t v10 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
      uint64_t v11 = *(int *)(v10 + 28);
      uint64_t v12 = (_OWORD *)((char *)a1 + v11);
      uint64_t v13 = (_OWORD *)((char *)a2 + v11);
      uint64_t v14 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
      {
        uint64_t v15 = sub_10017DF08(&qword_100E63750);
        memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        *uint64_t v12 = *v13;
        uint64_t v97 = *(int *)(v14 + 20);
        uint64_t v98 = (char *)v12 + v97;
        uint64_t v99 = (char *)v13 + v97;
        uint64_t v100 = type metadata accessor for TemperatureScaleConfiguration();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 32))(v98, v99, v100);
        uint64_t v101 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        *(void *)&v98[v101[5]] = *(void *)&v99[v101[5]];
        *(void *)&v98[v101[6]] = *(void *)&v99[v101[6]];
        *(void *)&v98[v101[7]] = *(void *)&v99[v101[7]];
        *(_OWORD *)&v98[v101[8]] = *(_OWORD *)&v99[v101[8]];
        v98[v101[9]] = v99[v101[9]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
      }
      *(_OWORD *)((char *)a1 + *(int *)(v10 + 32)) = *(_OWORD *)((char *)a2 + *(int *)(v10 + 32));
      goto LABEL_76;
    case 3u:
      uint64_t v16 = type metadata accessor for CurrentWeather();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
      uint64_t v17 = (int *)type metadata accessor for HourlyForecastComponent();
      uint64_t v18 = v17[5];
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      *(void *)((char *)a1 + v18) = *(void *)((char *)a2 + v18);
      uint64_t v21 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
      uint64_t v22 = &v19[v21];
      uint64_t v23 = &v20[v21];
      uint64_t v24 = type metadata accessor for WeatherDescription();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24))
      {
        uint64_t v25 = sub_10017DF08(&qword_100E63758);
        memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v24);
      }
      uint64_t v102 = v17[6];
      uint64_t v103 = (char *)a1 + v102;
      uint64_t v104 = (char *)a2 + v102;
      uint64_t v105 = sub_10017DF08(&qword_100E66CC8);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 32))(v103, v104, v105);
      uint64_t v106 = v17[7];
      uint64_t v107 = (char *)a1 + v106;
      uint64_t v108 = (char *)a2 + v106;
      uint64_t v109 = sub_10017DF08(&qword_100E66CA0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 32))(v107, v108, v109);
      uint64_t v110 = v17[8];
      uint64_t v111 = (char *)a1 + v110;
      long long v112 = (char *)a2 + v110;
      uint64_t v113 = type metadata accessor for WeatherChanges();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v112, 1, v113))
      {
        uint64_t v114 = sub_10017DF08(&qword_100E6D1C8);
        memcpy(v111, v112, *(void *)(*(void *)(v114 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 32))(v111, v112, v113);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v111, 0, 1, v113);
      }
      *((unsigned char *)a1 + v17[9]) = *((unsigned char *)a2 + v17[9]);
      *((unsigned char *)a1 + v17[10]) = *((unsigned char *)a2 + v17[10]);
      goto LABEL_76;
    case 4u:
      uint64_t v26 = type metadata accessor for CurrentWeather();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v26 - 8) + 32))(a1, a2, v26);
      goto LABEL_76;
    case 5u:
      uint64_t v27 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v27 - 8) + 32))(a1, a2, v27);
      uint64_t v28 = *(int *)(type metadata accessor for MapComponent() + 20);
      uint64_t v29 = (char *)a1 + v28;
      uint64_t v30 = (char *)a2 + v28;
      *(_OWORD *)((char *)a1 + v28) = *(_OWORD *)((char *)a2 + v28);
      uint64_t v31 = (int *)type metadata accessor for WeatherData(0);
      uint64_t v32 = v31[5];
      uint64_t v33 = &v29[v32];
      uint64_t v34 = &v30[v32];
      uint64_t v35 = type metadata accessor for Locale();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35))
      {
        uint64_t v36 = sub_10017DF08(&qword_100E63730);
        memcpy(v33, v34, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v35);
      }
      uint64_t v115 = v31[6];
      long long v116 = &v29[v115];
      uint64_t v117 = &v30[v115];
      uint64_t v118 = type metadata accessor for WeatherDataModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 32))(v116, v117, v118);
      uint64_t v119 = v31[7];
      uint64_t v120 = &v29[v119];
      uint64_t v121 = &v30[v119];
      uint64_t v122 = sub_10017DF08(&qword_100E63738);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v121, 1, v122))
      {
        uint64_t v123 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v120, v121, *(void *)(*(void *)(v123 - 8) + 64));
      }
      else
      {
        uint64_t v133 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 32))(v120, v121, v133);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v120, 0, 1, v122);
      }
      uint64_t v134 = v31[8];
      uint64_t v135 = &v29[v134];
      uint64_t v136 = &v30[v134];
      uint64_t v137 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v138 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 32))(v135, v136, v138);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v135, v136, *(void *)(*(void *)(v137 - 8) + 64));
      }
      uint64_t v139 = v31[9];
      uint64_t v140 = &v29[v139];
      uint64_t v141 = &v30[v139];
      uint64_t v142 = type metadata accessor for WeatherDataOverrides();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v141, 1, v142))
      {
        uint64_t v143 = sub_10017DF08(&qword_100E63740);
        memcpy(v140, v141, *(void *)(*(void *)(v143 - 8) + 64));
      }
      else
      {
        uint64_t v155 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v141, 1, v155))
        {
          uint64_t v156 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v140, v141, *(void *)(*(void *)(v156 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 32))(v140, v141, v155);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v140, 0, 1, v155);
        }
        uint64_t v173 = *(int *)(v142 + 20);
        uint64_t v174 = &v140[v173];
        uint64_t v175 = &v141[v173];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v175, 1, v155))
        {
          uint64_t v176 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v174, v175, *(void *)(*(void *)(v176 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 32))(v174, v175, v155);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v174, 0, 1, v155);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v140, 0, 1, v142);
      }
      goto LABEL_76;
    case 6u:
      *a1 = *a2;
      uint64_t v37 = (int *)type metadata accessor for WeatherData(0);
      uint64_t v38 = v37[5];
      uint64_t v39 = (char *)a1 + v38;
      uint64_t v40 = (char *)a2 + v38;
      uint64_t v41 = type metadata accessor for Locale();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
      {
        uint64_t v42 = sub_10017DF08(&qword_100E63730);
        memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
      }
      uint64_t v124 = v37[6];
      uint64_t v125 = (char *)a1 + v124;
      uint64_t v126 = (char *)a2 + v124;
      uint64_t v127 = type metadata accessor for WeatherDataModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 32))(v125, v126, v127);
      uint64_t v128 = v37[7];
      uint64_t v129 = (char *)a1 + v128;
      uint64_t v130 = (char *)a2 + v128;
      uint64_t v131 = sub_10017DF08(&qword_100E63738);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v130, 1, v131))
      {
        uint64_t v132 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v129, v130, *(void *)(*(void *)(v132 - 8) + 64));
      }
      else
      {
        uint64_t v144 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 32))(v129, v130, v144);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v129, 0, 1, v131);
      }
      uint64_t v145 = v37[8];
      uint64_t v146 = (char *)a1 + v145;
      uint64_t v147 = (char *)a2 + v145;
      uint64_t v148 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v149 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 32))(v146, v147, v149);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v146, v147, *(void *)(*(void *)(v148 - 8) + 64));
      }
      uint64_t v150 = v37[9];
      uint64_t v151 = (char *)a1 + v150;
      uint64_t v152 = (char *)a2 + v150;
      uint64_t v153 = type metadata accessor for WeatherDataOverrides();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v152, 1, v153))
      {
        uint64_t v154 = sub_10017DF08(&qword_100E63740);
        memcpy(v151, v152, *(void *)(*(void *)(v154 - 8) + 64));
      }
      else
      {
        uint64_t v157 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v152, 1, v157))
        {
          uint64_t v158 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v151, v152, *(void *)(*(void *)(v158 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 32))(v151, v152, v157);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v151, 0, 1, v157);
        }
        uint64_t v177 = *(int *)(v153 + 20);
        uint64_t v178 = &v151[v177];
        uint64_t v179 = &v152[v177];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v179, 1, v157))
        {
          uint64_t v180 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v178, v179, *(void *)(*(void *)(v180 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 32))(v178, v179, v157);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v178, 0, 1, v157);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v151, 0, 1, v153);
      }
      goto LABEL_76;
    case 7u:
      type metadata accessor for ArticleModel();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        long long v43 = a2[1];
        *a1 = *a2;
        a1[1] = v43;
        uint64_t v44 = (int *)type metadata accessor for NewsArticle();
        uint64_t v45 = v44[6];
        uint64_t v46 = (char *)a1 + v45;
        uint64_t v47 = (char *)a2 + v45;
        uint64_t v48 = type metadata accessor for URL();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v48))
        {
          uint64_t v49 = sub_10017DF08(&qword_100E749B0);
          memcpy(v46, v47, *(void *)(*(void *)(v49 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v46, 0, 1, v48);
        }
        uint64_t v159 = v44[7];
        uint64_t v160 = (char *)a1 + v159;
        uint64_t v161 = (char *)a2 + v159;
        uint64_t v162 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 32))(v160, v161, v162);
        uint64_t v163 = *(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32);
        v163((char *)a1 + v44[8], (char *)a2 + v44[8], v48);
        uint64_t v164 = v44[9];
        int v165 = (_OWORD *)((char *)a1 + v164);
        uint64_t v166 = (char *)a2 + v164;
        long long v167 = *(_OWORD *)((char *)a2 + v164 + 16);
        *int v165 = *(_OWORD *)((char *)a2 + v164);
        v165[1] = v167;
        uint64_t v168 = *(int *)(type metadata accessor for NewsChannel() + 24);
        uint64_t v169 = (char *)v165 + v168;
        uint64_t v170 = &v166[v168];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v170, 1, v48))
        {
          uint64_t v171 = sub_10017DF08(&qword_100E749B0);
          memcpy(v169, v170, *(void *)(*(void *)(v171 - 8) + 64));
        }
        else
        {
          v163(v169, v170, v48);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v169, 0, 1, v48);
        }
        *(void *)((char *)a1 + v44[10]) = *(void *)((char *)a2 + v44[10]);
        *(void *)((char *)a1 + v44[11]) = *(void *)((char *)a2 + v44[11]);
        *(void *)((char *)a1 + v44[12]) = *(void *)((char *)a2 + v44[12]);
      }
      else
      {
        uint64_t v96 = type metadata accessor for Article();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v96 - 8) + 32))(a1, a2, v96);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v172 = type metadata accessor for NewsArticleComponent();
      *((unsigned char *)a1 + *(int *)(v172 + 20)) = *((unsigned char *)a2 + *(int *)(v172 + 20));
      goto LABEL_76;
    case 8u:
      uint64_t v50 = type metadata accessor for CurrentWeather();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v50 - 8) + 32))(a1, a2, v50);
      uint64_t HourPrecipitationComponent = type metadata accessor for NextHourPrecipitationComponent();
      uint64_t v52 = *(int *)(HourPrecipitationComponent + 20);
      uint64_t v53 = (char *)a1 + v52;
      uint64_t v54 = (char *)a2 + v52;
      uint64_t v55 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
      uint64_t v56 = *(int *)(HourPrecipitationComponent + 24);
      uint64_t v57 = (char *)a1 + v56;
      uint64_t v58 = (char *)a2 + v56;
      uint64_t v59 = sub_10017DF08(&qword_100E6E900);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
      goto LABEL_76;
    case 9u:
      uint64_t v60 = type metadata accessor for Location();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v60 - 8) + 32))(a1, a2, v60);
      goto LABEL_76;
    case 0xAu:
      uint64_t v61 = type metadata accessor for CurrentWeather();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v61 - 8) + 32))(a1, a2, v61);
      uint64_t v62 = *(int *)(type metadata accessor for PressureComponent() + 20);
      uint64_t v63 = (char *)a1 + v62;
      uint64_t v64 = (char *)a2 + v62;
      uint64_t v65 = type metadata accessor for PressureTrend();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 32))(v63, v64, v65);
      uint64_t v66 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
      *(_OWORD *)&v63[v66[5]] = *(_OWORD *)&v64[v66[5]];
      *(_OWORD *)&v63[v66[6]] = *(_OWORD *)&v64[v66[6]];
      *(_OWORD *)&v63[v66[7]] = *(_OWORD *)&v64[v66[7]];
      *(void *)&v63[v66[8]] = *(void *)&v64[v66[8]];
      *(_OWORD *)&v63[v66[9]] = *(_OWORD *)&v64[v66[9]];
      goto LABEL_76;
    case 0xDu:
      *a1 = *a2;
      uint64_t v67 = *(int *)(type metadata accessor for SevereAlertComponent() + 24);
      uint64_t v68 = (char *)a1 + v67;
      uint64_t v69 = (char *)a2 + v67;
      uint64_t v70 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v68, v69, v70);
      goto LABEL_76;
    case 0xEu:
      uint64_t v71 = type metadata accessor for SunriseSunsetModel();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v71 - 8) + 32))(a1, a2, v71);
      goto LABEL_76;
    case 0xFu:
      uint64_t v72 = type metadata accessor for HistoricalComparisons();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v72))
      {
        uint64_t v73 = sub_10017DF08(&qword_100E6B8B8);
        memcpy(a1, a2, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v72 - 8) + 32))(a1, a2, v72);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v72);
      }
      goto LABEL_76;
    case 0x10u:
      uint64_t v74 = type metadata accessor for CurrentWeather();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v74 - 8) + 32))(a1, a2, v74);
      uint64_t v75 = (int *)type metadata accessor for UVIndexComponent();
      uint64_t v76 = v75[5];
      uint64_t v77 = (char *)a1 + v76;
      uint64_t v78 = (char *)a2 + v76;
      uint64_t v79 = type metadata accessor for WeatherDescription();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v77, v78, v79);
      uint64_t v80 = type metadata accessor for UVIndexComponentPreprocessedDataModel();
      *(_OWORD *)&v77[*(int *)(v80 + 20)] = *(_OWORD *)&v78[*(int *)(v80 + 20)];
      uint64_t v81 = v75[6];
      uint64_t v82 = (char *)a1 + v81;
      uint64_t v83 = (char *)a2 + v81;
      uint64_t v84 = sub_10017DF08(&qword_100E66CA0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 32))(v82, v83, v84);
      uint64_t v85 = v75[7];
      uint64_t v86 = (char *)a1 + v85;
      uint64_t v87 = (char *)a2 + v85;
      uint64_t v88 = sub_10017DF08(&qword_100E66CC8);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 32))(v86, v87, v88);
      goto LABEL_76;
    case 0x11u:
      uint64_t v89 = type metadata accessor for CurrentWeather();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v89 - 8) + 32))(a1, a2, v89);
      uint64_t v90 = *(int *)(type metadata accessor for VisibilityComponent() + 20);
      uint64_t v91 = (_OWORD *)((char *)a1 + v90);
      uint64_t v92 = (_OWORD *)((char *)a2 + v90);
      long long v93 = v92[1];
      *uint64_t v91 = *v92;
      v91[1] = v93;
      v91[2] = v92[2];
      goto LABEL_76;
    case 0x12u:
      uint64_t v94 = type metadata accessor for CurrentWeather();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v94 - 8) + 32))(a1, a2, v94);
      uint64_t v95 = type metadata accessor for WindComponent();
      memcpy((char *)a1 + *(int *)(v95 + 20), (char *)a2 + *(int *)(v95 + 20), 0xE8uLL);
LABEL_76:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *sub_10079B2D4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10079F01C((uint64_t)a1, (void (*)(void))type metadata accessor for LocationViewComponent);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = type metadata accessor for AirQuality();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        goto LABEL_77;
      case 1u:
        uint64_t v7 = type metadata accessor for CurrentWeather();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        uint64_t v8 = type metadata accessor for DailyForecastComponent();
        *(void *)((char *)a1 + *(int *)(v8 + 20)) = *(void *)((char *)a2 + *(int *)(v8 + 20));
        goto LABEL_77;
      case 2u:
        long long v9 = a2[1];
        *a1 = *a2;
        a1[1] = v9;
        a1[2] = a2[2];
        uint64_t v10 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
        uint64_t v11 = *(int *)(v10 + 28);
        uint64_t v12 = (_OWORD *)((char *)a1 + v11);
        uint64_t v13 = (_OWORD *)((char *)a2 + v11);
        uint64_t v14 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
        {
          uint64_t v15 = sub_10017DF08(&qword_100E63750);
          memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          *uint64_t v12 = *v13;
          uint64_t v97 = *(int *)(v14 + 20);
          uint64_t v98 = (char *)v12 + v97;
          uint64_t v99 = (char *)v13 + v97;
          uint64_t v100 = type metadata accessor for TemperatureScaleConfiguration();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 32))(v98, v99, v100);
          uint64_t v101 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
          *(void *)&v98[v101[5]] = *(void *)&v99[v101[5]];
          *(void *)&v98[v101[6]] = *(void *)&v99[v101[6]];
          *(void *)&v98[v101[7]] = *(void *)&v99[v101[7]];
          *(_OWORD *)&v98[v101[8]] = *(_OWORD *)&v99[v101[8]];
          v98[v101[9]] = v99[v101[9]];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
        }
        *(_OWORD *)((char *)a1 + *(int *)(v10 + 32)) = *(_OWORD *)((char *)a2 + *(int *)(v10 + 32));
        goto LABEL_77;
      case 3u:
        uint64_t v16 = type metadata accessor for CurrentWeather();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
        uint64_t v17 = (int *)type metadata accessor for HourlyForecastComponent();
        uint64_t v18 = v17[5];
        uint64_t v19 = (char *)a1 + v18;
        uint64_t v20 = (char *)a2 + v18;
        *(void *)((char *)a1 + v18) = *(void *)((char *)a2 + v18);
        uint64_t v21 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
        uint64_t v22 = &v19[v21];
        uint64_t v23 = &v20[v21];
        uint64_t v24 = type metadata accessor for WeatherDescription();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24))
        {
          uint64_t v25 = sub_10017DF08(&qword_100E63758);
          memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v24);
        }
        uint64_t v102 = v17[6];
        uint64_t v103 = (char *)a1 + v102;
        uint64_t v104 = (char *)a2 + v102;
        uint64_t v105 = sub_10017DF08(&qword_100E66CC8);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 32))(v103, v104, v105);
        uint64_t v106 = v17[7];
        uint64_t v107 = (char *)a1 + v106;
        uint64_t v108 = (char *)a2 + v106;
        uint64_t v109 = sub_10017DF08(&qword_100E66CA0);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 32))(v107, v108, v109);
        uint64_t v110 = v17[8];
        uint64_t v111 = (char *)a1 + v110;
        long long v112 = (char *)a2 + v110;
        uint64_t v113 = type metadata accessor for WeatherChanges();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v112, 1, v113))
        {
          uint64_t v114 = sub_10017DF08(&qword_100E6D1C8);
          memcpy(v111, v112, *(void *)(*(void *)(v114 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 32))(v111, v112, v113);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v111, 0, 1, v113);
        }
        *((unsigned char *)a1 + v17[9]) = *((unsigned char *)a2 + v17[9]);
        *((unsigned char *)a1 + v17[10]) = *((unsigned char *)a2 + v17[10]);
        goto LABEL_77;
      case 4u:
        uint64_t v26 = type metadata accessor for CurrentWeather();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v26 - 8) + 32))(a1, a2, v26);
        goto LABEL_77;
      case 5u:
        uint64_t v27 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v27 - 8) + 32))(a1, a2, v27);
        uint64_t v28 = *(int *)(type metadata accessor for MapComponent() + 20);
        uint64_t v29 = (char *)a1 + v28;
        uint64_t v30 = (char *)a2 + v28;
        *(_OWORD *)((char *)a1 + v28) = *(_OWORD *)((char *)a2 + v28);
        uint64_t v31 = (int *)type metadata accessor for WeatherData(0);
        uint64_t v32 = v31[5];
        uint64_t v33 = &v29[v32];
        uint64_t v34 = &v30[v32];
        uint64_t v35 = type metadata accessor for Locale();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35))
        {
          uint64_t v36 = sub_10017DF08(&qword_100E63730);
          memcpy(v33, v34, *(void *)(*(void *)(v36 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v35);
        }
        uint64_t v115 = v31[6];
        long long v116 = &v29[v115];
        uint64_t v117 = &v30[v115];
        uint64_t v118 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 32))(v116, v117, v118);
        uint64_t v119 = v31[7];
        uint64_t v120 = &v29[v119];
        uint64_t v121 = &v30[v119];
        uint64_t v122 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v121, 1, v122))
        {
          uint64_t v123 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v120, v121, *(void *)(*(void *)(v123 - 8) + 64));
        }
        else
        {
          uint64_t v133 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v133 - 8) + 32))(v120, v121, v133);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v120, 0, 1, v122);
        }
        uint64_t v134 = v31[8];
        uint64_t v135 = &v29[v134];
        uint64_t v136 = &v30[v134];
        uint64_t v137 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v138 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 32))(v135, v136, v138);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v135, v136, *(void *)(*(void *)(v137 - 8) + 64));
        }
        uint64_t v139 = v31[9];
        uint64_t v140 = &v29[v139];
        uint64_t v141 = &v30[v139];
        uint64_t v142 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v141, 1, v142))
        {
          uint64_t v143 = sub_10017DF08(&qword_100E63740);
          memcpy(v140, v141, *(void *)(*(void *)(v143 - 8) + 64));
        }
        else
        {
          uint64_t v155 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v141, 1, v155))
          {
            uint64_t v156 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v140, v141, *(void *)(*(void *)(v156 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 32))(v140, v141, v155);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v140, 0, 1, v155);
          }
          uint64_t v173 = *(int *)(v142 + 20);
          uint64_t v174 = &v140[v173];
          uint64_t v175 = &v141[v173];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v175, 1, v155))
          {
            uint64_t v176 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v174, v175, *(void *)(*(void *)(v176 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 32))(v174, v175, v155);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v174, 0, 1, v155);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v140, 0, 1, v142);
        }
        goto LABEL_77;
      case 6u:
        *a1 = *a2;
        uint64_t v37 = (int *)type metadata accessor for WeatherData(0);
        uint64_t v38 = v37[5];
        uint64_t v39 = (char *)a1 + v38;
        uint64_t v40 = (char *)a2 + v38;
        uint64_t v41 = type metadata accessor for Locale();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
        {
          uint64_t v42 = sub_10017DF08(&qword_100E63730);
          memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
        }
        uint64_t v124 = v37[6];
        uint64_t v125 = (char *)a1 + v124;
        uint64_t v126 = (char *)a2 + v124;
        uint64_t v127 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 32))(v125, v126, v127);
        uint64_t v128 = v37[7];
        uint64_t v129 = (char *)a1 + v128;
        uint64_t v130 = (char *)a2 + v128;
        uint64_t v131 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v130, 1, v131))
        {
          uint64_t v132 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v129, v130, *(void *)(*(void *)(v132 - 8) + 64));
        }
        else
        {
          uint64_t v144 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 32))(v129, v130, v144);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v129, 0, 1, v131);
        }
        uint64_t v145 = v37[8];
        uint64_t v146 = (char *)a1 + v145;
        uint64_t v147 = (char *)a2 + v145;
        uint64_t v148 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v149 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 32))(v146, v147, v149);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v146, v147, *(void *)(*(void *)(v148 - 8) + 64));
        }
        uint64_t v150 = v37[9];
        uint64_t v151 = (char *)a1 + v150;
        uint64_t v152 = (char *)a2 + v150;
        uint64_t v153 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v152, 1, v153))
        {
          uint64_t v154 = sub_10017DF08(&qword_100E63740);
          memcpy(v151, v152, *(void *)(*(void *)(v154 - 8) + 64));
        }
        else
        {
          uint64_t v157 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v152, 1, v157))
          {
            uint64_t v158 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v151, v152, *(void *)(*(void *)(v158 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 32))(v151, v152, v157);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v151, 0, 1, v157);
          }
          uint64_t v177 = *(int *)(v153 + 20);
          uint64_t v178 = &v151[v177];
          uint64_t v179 = &v152[v177];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v179, 1, v157))
          {
            uint64_t v180 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v178, v179, *(void *)(*(void *)(v180 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 32))(v178, v179, v157);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v178, 0, 1, v157);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v151, 0, 1, v153);
        }
        goto LABEL_77;
      case 7u:
        type metadata accessor for ArticleModel();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          long long v43 = a2[1];
          *a1 = *a2;
          a1[1] = v43;
          uint64_t v44 = (int *)type metadata accessor for NewsArticle();
          uint64_t v45 = v44[6];
          uint64_t v46 = (char *)a1 + v45;
          uint64_t v47 = (char *)a2 + v45;
          uint64_t v48 = type metadata accessor for URL();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v48))
          {
            uint64_t v49 = sub_10017DF08(&qword_100E749B0);
            memcpy(v46, v47, *(void *)(*(void *)(v49 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v46, 0, 1, v48);
          }
          uint64_t v159 = v44[7];
          uint64_t v160 = (char *)a1 + v159;
          uint64_t v161 = (char *)a2 + v159;
          uint64_t v162 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v162 - 8) + 32))(v160, v161, v162);
          uint64_t v163 = *(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32);
          v163((char *)a1 + v44[8], (char *)a2 + v44[8], v48);
          uint64_t v164 = v44[9];
          int v165 = (_OWORD *)((char *)a1 + v164);
          uint64_t v166 = (char *)a2 + v164;
          long long v167 = *(_OWORD *)((char *)a2 + v164 + 16);
          *int v165 = *(_OWORD *)((char *)a2 + v164);
          v165[1] = v167;
          uint64_t v168 = *(int *)(type metadata accessor for NewsChannel() + 24);
          uint64_t v169 = (char *)v165 + v168;
          uint64_t v170 = &v166[v168];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v170, 1, v48))
          {
            uint64_t v171 = sub_10017DF08(&qword_100E749B0);
            memcpy(v169, v170, *(void *)(*(void *)(v171 - 8) + 64));
          }
          else
          {
            v163(v169, v170, v48);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v169, 0, 1, v48);
          }
          *(void *)((char *)a1 + v44[10]) = *(void *)((char *)a2 + v44[10]);
          *(void *)((char *)a1 + v44[11]) = *(void *)((char *)a2 + v44[11]);
          *(void *)((char *)a1 + v44[12]) = *(void *)((char *)a2 + v44[12]);
        }
        else
        {
          uint64_t v96 = type metadata accessor for Article();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v96 - 8) + 32))(a1, a2, v96);
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v172 = type metadata accessor for NewsArticleComponent();
        *((unsigned char *)a1 + *(int *)(v172 + 20)) = *((unsigned char *)a2 + *(int *)(v172 + 20));
        goto LABEL_77;
      case 8u:
        uint64_t v50 = type metadata accessor for CurrentWeather();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v50 - 8) + 32))(a1, a2, v50);
        uint64_t HourPrecipitationComponent = type metadata accessor for NextHourPrecipitationComponent();
        uint64_t v52 = *(int *)(HourPrecipitationComponent + 20);
        uint64_t v53 = (char *)a1 + v52;
        uint64_t v54 = (char *)a2 + v52;
        uint64_t v55 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
        uint64_t v56 = *(int *)(HourPrecipitationComponent + 24);
        uint64_t v57 = (char *)a1 + v56;
        uint64_t v58 = (char *)a2 + v56;
        uint64_t v59 = sub_10017DF08(&qword_100E6E900);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
        goto LABEL_77;
      case 9u:
        uint64_t v60 = type metadata accessor for Location();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v60 - 8) + 32))(a1, a2, v60);
        goto LABEL_77;
      case 0xAu:
        uint64_t v61 = type metadata accessor for CurrentWeather();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v61 - 8) + 32))(a1, a2, v61);
        uint64_t v62 = *(int *)(type metadata accessor for PressureComponent() + 20);
        uint64_t v63 = (char *)a1 + v62;
        uint64_t v64 = (char *)a2 + v62;
        uint64_t v65 = type metadata accessor for PressureTrend();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 32))(v63, v64, v65);
        uint64_t v66 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
        *(_OWORD *)&v63[v66[5]] = *(_OWORD *)&v64[v66[5]];
        *(_OWORD *)&v63[v66[6]] = *(_OWORD *)&v64[v66[6]];
        *(_OWORD *)&v63[v66[7]] = *(_OWORD *)&v64[v66[7]];
        *(void *)&v63[v66[8]] = *(void *)&v64[v66[8]];
        *(_OWORD *)&v63[v66[9]] = *(_OWORD *)&v64[v66[9]];
        goto LABEL_77;
      case 0xDu:
        *a1 = *a2;
        uint64_t v67 = *(int *)(type metadata accessor for SevereAlertComponent() + 24);
        uint64_t v68 = (char *)a1 + v67;
        uint64_t v69 = (char *)a2 + v67;
        uint64_t v70 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v68, v69, v70);
        goto LABEL_77;
      case 0xEu:
        uint64_t v71 = type metadata accessor for SunriseSunsetModel();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v71 - 8) + 32))(a1, a2, v71);
        goto LABEL_77;
      case 0xFu:
        uint64_t v72 = type metadata accessor for HistoricalComparisons();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v72))
        {
          uint64_t v73 = sub_10017DF08(&qword_100E6B8B8);
          memcpy(a1, a2, *(void *)(*(void *)(v73 - 8) + 64));
        }
        else
        {
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v72 - 8) + 32))(a1, a2, v72);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v72);
        }
        goto LABEL_77;
      case 0x10u:
        uint64_t v74 = type metadata accessor for CurrentWeather();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v74 - 8) + 32))(a1, a2, v74);
        uint64_t v75 = (int *)type metadata accessor for UVIndexComponent();
        uint64_t v76 = v75[5];
        uint64_t v77 = (char *)a1 + v76;
        uint64_t v78 = (char *)a2 + v76;
        uint64_t v79 = type metadata accessor for WeatherDescription();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v77, v78, v79);
        uint64_t v80 = type metadata accessor for UVIndexComponentPreprocessedDataModel();
        *(_OWORD *)&v77[*(int *)(v80 + 20)] = *(_OWORD *)&v78[*(int *)(v80 + 20)];
        uint64_t v81 = v75[6];
        uint64_t v82 = (char *)a1 + v81;
        uint64_t v83 = (char *)a2 + v81;
        uint64_t v84 = sub_10017DF08(&qword_100E66CA0);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 32))(v82, v83, v84);
        uint64_t v85 = v75[7];
        uint64_t v86 = (char *)a1 + v85;
        uint64_t v87 = (char *)a2 + v85;
        uint64_t v88 = sub_10017DF08(&qword_100E66CC8);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 32))(v86, v87, v88);
        goto LABEL_77;
      case 0x11u:
        uint64_t v89 = type metadata accessor for CurrentWeather();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v89 - 8) + 32))(a1, a2, v89);
        uint64_t v90 = *(int *)(type metadata accessor for VisibilityComponent() + 20);
        uint64_t v91 = (_OWORD *)((char *)a1 + v90);
        uint64_t v92 = (_OWORD *)((char *)a2 + v90);
        long long v93 = v92[1];
        *uint64_t v91 = *v92;
        v91[1] = v93;
        v91[2] = v92[2];
        goto LABEL_77;
      case 0x12u:
        uint64_t v94 = type metadata accessor for CurrentWeather();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v94 - 8) + 32))(a1, a2, v94);
        uint64_t v95 = type metadata accessor for WindComponent();
        memcpy((char *)a1 + *(int *)(v95 + 20), (char *)a2 + *(int *)(v95 + 20), 0xE8uLL);
LABEL_77:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_10079C8F8(uint64_t a1, uint64_t a2)
{
  uint64_t v199 = a2;
  uint64_t v200 = a1;
  uint64_t v164 = type metadata accessor for WindComponent();
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v181 = v6;
  sub_100129064();
  uint64_t v163 = type metadata accessor for VisibilityComponent();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v197 = v8;
  sub_100129064();
  uint64_t v167 = type metadata accessor for UVIndexComponent();
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v182 = v10;
  sub_100129064();
  uint64_t v11 = type metadata accessor for AveragesComponent();
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v180 = v13;
  sub_100129064();
  type metadata accessor for SunriseSunsetModel();
  sub_100179C0C();
  uint64_t v183 = v15;
  uint64_t v184 = v14;
  __chkstk_darwin(v14);
  sub_100109314();
  uint64_t v178 = v16;
  sub_100129064();
  v159[0] = type metadata accessor for SevereAlertComponent();
  sub_100162E4C();
  __chkstk_darwin(v17);
  sub_100109314();
  uint64_t v179 = v18;
  sub_100129064();
  uint64_t v162 = type metadata accessor for PressureComponent();
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_100109314();
  uint64_t v176 = v20;
  sub_100129064();
  uint64_t v21 = type metadata accessor for NotificationsOptInComponent();
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_100109314();
  uint64_t v175 = v23;
  sub_100129064();
  uint64_t HourPrecipitationComponent = type metadata accessor for NextHourPrecipitationComponent();
  sub_100162E4C();
  __chkstk_darwin(v24);
  sub_100109314();
  uint64_t v177 = v25;
  sub_100129064();
  uint64_t v161 = type metadata accessor for NewsArticleComponent();
  sub_100162E4C();
  __chkstk_darwin(v26);
  sub_100109314();
  uint64_t v174 = v27;
  sub_100129064();
  uint64_t v28 = type metadata accessor for MoonComponent();
  uint64_t v29 = sub_100109308(v28);
  __chkstk_darwin(v29);
  sub_100109314();
  uint64_t v173 = (void *)v30;
  sub_100129064();
  uint64_t v160 = type metadata accessor for MapComponent();
  sub_100162E4C();
  __chkstk_darwin(v31);
  sub_100109314();
  uint64_t v172 = v32;
  sub_100129064();
  uint64_t v33 = type metadata accessor for HumidityComponent();
  uint64_t v34 = sub_100109308(v33);
  __chkstk_darwin(v34);
  sub_100109314();
  uint64_t v171 = v35;
  sub_100129064();
  uint64_t v36 = type metadata accessor for HourlyForecastComponent();
  uint64_t v37 = sub_100109308(v36);
  __chkstk_darwin(v37);
  sub_100109314();
  uint64_t v170 = v38;
  sub_100129064();
  uint64_t v39 = type metadata accessor for FeelsLikeComponent();
  uint64_t v40 = sub_100109308(v39);
  __chkstk_darwin(v40);
  sub_100109314();
  uint64_t v169 = v41;
  sub_100129064();
  v159[1] = type metadata accessor for DailyForecastComponent();
  sub_100162E4C();
  __chkstk_darwin(v42);
  sub_100109314();
  uint64_t v168 = v43;
  sub_100129064();
  uint64_t v44 = type metadata accessor for AirQualityComponent();
  uint64_t v45 = sub_100109308(v44);
  __chkstk_darwin(v45);
  sub_100109314();
  uint64_t v165 = v46;
  sub_100129064();
  type metadata accessor for LocationViewComponent();
  sub_100162E4C();
  __chkstk_darwin(v47);
  sub_100162EF8();
  uint64_t v195 = v48;
  sub_1001626D4();
  __chkstk_darwin(v49);
  sub_100109770();
  uint64_t v198 = v50;
  sub_1001626D4();
  __chkstk_darwin(v51);
  sub_100109770();
  uint64_t v196 = (char *)v52;
  sub_1001626D4();
  __chkstk_darwin(v53);
  sub_100109770();
  uint64_t v192 = v54;
  sub_1001626D4();
  __chkstk_darwin(v55);
  sub_100109770();
  uint64_t v191 = v56;
  sub_1001626D4();
  __chkstk_darwin(v57);
  sub_100109770();
  uint64_t v193 = v58;
  sub_1001626D4();
  __chkstk_darwin(v59);
  sub_100109770();
  uint64_t v187 = (unsigned char *)v60;
  sub_1001626D4();
  __chkstk_darwin(v61);
  sub_100109770();
  uint64_t v185 = (const void *)v62;
  sub_1001626D4();
  __chkstk_darwin(v63);
  sub_100109770();
  uint64_t v190 = v64;
  sub_1001626D4();
  __chkstk_darwin(v65);
  sub_100109770();
  uint64_t v188 = v66;
  sub_1001626D4();
  __chkstk_darwin(v67);
  sub_100109770();
  uint64_t v194 = (char *)v68;
  sub_1001626D4();
  __chkstk_darwin(v69);
  sub_100109770();
  uint64_t v189 = v70;
  sub_1001626D4();
  __chkstk_darwin(v71);
  sub_100164A00();
  __chkstk_darwin(v72);
  sub_100109770();
  uint64_t v186 = v73;
  sub_1001626D4();
  __chkstk_darwin(v74);
  uint64_t v76 = (char *)v159 - v75;
  __chkstk_darwin(v77);
  uint64_t v79 = (char *)v159 - v78;
  __chkstk_darwin(v80);
  sub_100119550();
  __chkstk_darwin(v81);
  sub_10017FF4C();
  __chkstk_darwin(v82);
  uint64_t v84 = (char *)v159 - v83;
  uint64_t v85 = sub_10017DF08(&qword_100E94568);
  uint64_t v86 = sub_100109308(v85);
  __chkstk_darwin(v86);
  uint64_t v88 = (char *)v159 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = (uint64_t)&v88[*(int *)(v89 + 56)];
  sub_1001DBA6C(v200, (uint64_t)v88);
  uint64_t v200 = v90;
  sub_1001DBA6C(v199, v90);
  uint64_t v91 = (uint64_t)v88;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1001DBA6C((uint64_t)v88, v2);
      if (sub_10018037C() != 1)
      {
        uint64_t v150 = type metadata accessor for DailyForecastComponent;
        goto LABEL_107;
      }
      uint64_t v93 = v168;
      sub_1001DA938((uint64_t)v79, v168, (void (*)(void))type metadata accessor for DailyForecastComponent);
      if (static CurrentWeather.== infix(_:_:)())
      {
        sub_100BDC6A0();
        if (v94)
        {
          uint64_t v95 = type metadata accessor for DailyForecastComponent;
          goto LABEL_125;
        }
      }
      uint64_t v108 = type metadata accessor for DailyForecastComponent;
      goto LABEL_120;
    case 2u:
      sub_1001DBA6C((uint64_t)v88, v3);
      if (sub_10018037C() == 2)
      {
        uint64_t v96 = v169;
        sub_1001DA938((uint64_t)v79, v169, (void (*)(void))type metadata accessor for FeelsLikeComponent);
        uint64_t v97 = (void *)sub_1001A1818();
        char v99 = sub_10088060C(v97, v98);
        uint64_t v100 = type metadata accessor for FeelsLikeComponent;
        goto LABEL_48;
      }
      uint64_t v151 = type metadata accessor for FeelsLikeComponent;
      goto LABEL_102;
    case 3u:
      sub_1001DBA6C((uint64_t)v88, (uint64_t)v79);
      uint64_t v101 = v200;
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        uint64_t v102 = v170;
        sub_1001DA938(v101, v170, (void (*)(void))type metadata accessor for HourlyForecastComponent);
        char v99 = sub_1009121B8((uint64_t)v79, v102);
        sub_10079F01C(v102, (void (*)(void))type metadata accessor for HourlyForecastComponent);
        uint64_t v103 = (uint64_t)v79;
        uint64_t v104 = type metadata accessor for HourlyForecastComponent;
        goto LABEL_50;
      }
      uint64_t v152 = type metadata accessor for HourlyForecastComponent;
      uint64_t v153 = (uint64_t)v79;
      goto LABEL_108;
    case 4u:
      sub_1001DBA6C((uint64_t)v88, (uint64_t)v76);
      if (sub_10018037C() == 4)
      {
        uint64_t v105 = v171;
        sub_1001DA938((uint64_t)v79, v171, (void (*)(void))type metadata accessor for HumidityComponent);
        char v99 = static CurrentWeather.== infix(_:_:)();
        uint64_t v106 = type metadata accessor for HumidityComponent;
        sub_10079F01C(v105, (void (*)(void))type metadata accessor for HumidityComponent);
        uint64_t v103 = (uint64_t)v76;
        goto LABEL_49;
      }
      uint64_t v152 = type metadata accessor for HumidityComponent;
      uint64_t v153 = (uint64_t)v76;
      goto LABEL_108;
    case 5u:
      uint64_t v2 = v186;
      sub_1001DBA6C((uint64_t)v88, v186);
      if (sub_10018037C() != 5)
      {
        uint64_t v150 = type metadata accessor for MapComponent;
        goto LABEL_107;
      }
      uint64_t v93 = v172;
      sub_1001DA938((uint64_t)v79, v172, (void (*)(void))type metadata accessor for MapComponent);
      if ((static WeatherMapOverlayKind.== infix(_:_:)() & 1) != 0
        && (sub_100A205E8((void *)(v2 + *(int *)(v160 + 20)), (void *)(v93 + *(int *)(v160 + 20))) & 1) != 0)
      {
        uint64_t v95 = type metadata accessor for MapComponent;
        goto LABEL_125;
      }
      uint64_t v108 = type metadata accessor for MapComponent;
      goto LABEL_120;
    case 6u:
      sub_1001DBA6C((uint64_t)v88, (uint64_t)v4);
      if (sub_10018037C() == 6)
      {
        uint64_t v107 = v173;
        sub_1001DA938((uint64_t)v79, (uint64_t)v173, (void (*)(void))type metadata accessor for MoonComponent);
        char v99 = sub_100A205E8(v4, v107);
        uint64_t v106 = type metadata accessor for MoonComponent;
        sub_10079F01C((uint64_t)v107, (void (*)(void))type metadata accessor for MoonComponent);
        uint64_t v103 = (uint64_t)v4;
        goto LABEL_49;
      }
      uint64_t v152 = type metadata accessor for MoonComponent;
      uint64_t v153 = (uint64_t)v4;
      goto LABEL_108;
    case 7u:
      uint64_t v2 = v189;
      sub_1001DBA6C((uint64_t)v88, v189);
      if (sub_10018037C() != 7)
      {
        uint64_t v150 = type metadata accessor for NewsArticleComponent;
        goto LABEL_107;
      }
      uint64_t v93 = v174;
      sub_1001DA938((uint64_t)v79, v174, (void (*)(void))type metadata accessor for NewsArticleComponent);
      if ((sub_10069C894(v2, v93) & 1) == 0
        || *(unsigned __int8 *)(v2 + *(int *)(v161 + 20)) != *(unsigned __int8 *)(v93 + *(int *)(v161 + 20)))
      {
        uint64_t v108 = type metadata accessor for NewsArticleComponent;
        goto LABEL_120;
      }
      uint64_t v95 = type metadata accessor for NewsArticleComponent;
      goto LABEL_125;
    case 8u:
      uint64_t v84 = v194;
      sub_1001DBA6C((uint64_t)v88, (uint64_t)v194);
      if (sub_10018037C() != 8)
      {
        uint64_t v92 = type metadata accessor for NextHourPrecipitationComponent;
        goto LABEL_104;
      }
      uint64_t v109 = v177;
      sub_1001DA938((uint64_t)v79, v177, (void (*)(void))type metadata accessor for NextHourPrecipitationComponent);
      if (static CurrentWeather.== infix(_:_:)() & 1) != 0 && (static Date.== infix(_:_:)())
      {
        sub_10019D890();
        type metadata accessor for MinuteWeather();
        sub_10079F160(&qword_100E72758, (void (*)(uint64_t))&type metadata accessor for MinuteWeather);
        sub_10079F160(&qword_100E72760, (void (*)(uint64_t))&type metadata accessor for MinuteWeather);
        sub_10079F160((unint64_t *)&unk_100E72768, (void (*)(uint64_t))&type metadata accessor for MinuteWeather);
        if (sub_10019FF80())
        {
          uint64_t v110 = type metadata accessor for NextHourPrecipitationComponent;
          goto LABEL_63;
        }
      }
      uint64_t v154 = type metadata accessor for NextHourPrecipitationComponent;
      goto LABEL_112;
    case 9u:
      uint64_t v3 = v188;
      sub_1001DBA6C((uint64_t)v88, v188);
      if (sub_10018037C() == 9)
      {
        uint64_t v96 = v175;
        sub_1001DA938((uint64_t)v79, v175, (void (*)(void))type metadata accessor for NotificationsOptInComponent);
        sub_1001A1818();
        char v99 = static Location.== infix(_:_:)();
        uint64_t v100 = type metadata accessor for NotificationsOptInComponent;
        goto LABEL_48;
      }
      uint64_t v151 = type metadata accessor for NotificationsOptInComponent;
      goto LABEL_102;
    case 0xAu:
      uint64_t v2 = v190;
      sub_1001DBA6C((uint64_t)v88, v190);
      if (sub_10018037C() != 10)
      {
        uint64_t v150 = type metadata accessor for PressureComponent;
        goto LABEL_107;
      }
      uint64_t v93 = v176;
      sub_1001DA938((uint64_t)v79, v176, (void (*)(void))type metadata accessor for PressureComponent);
      if ((static CurrentWeather.== infix(_:_:)() & 1) != 0
        && (sub_10040905C(v2 + *(int *)(v162 + 20), v93 + *(int *)(v162 + 20)) & 1) != 0)
      {
        uint64_t v95 = type metadata accessor for PressureComponent;
        goto LABEL_125;
      }
      uint64_t v108 = type metadata accessor for PressureComponent;
      goto LABEL_120;
    case 0xBu:
      uint64_t v111 = v185;
      sub_1001DBA6C((uint64_t)v88, (uint64_t)v185);
      memcpy(v201, v111, 0x70uLL);
      if (sub_10018037C() == 11)
      {
        memcpy(v202, v111, 0x70uLL);
        char v99 = sub_1008EDBE0(v201, v202);
        sub_100025C28((uint64_t)v201);
        sub_100025C28((uint64_t)v202);
        goto LABEL_51;
      }
      sub_100025C28((uint64_t)v201);
      goto LABEL_109;
    case 0xCu:
      uint64_t v112 = (uint64_t)v88;
      uint64_t v113 = v187;
      sub_1001DBA6C(v112, (uint64_t)v187);
      if (sub_10018037C() != 12) {
        goto LABEL_109;
      }
      char v114 = *v113 ^ *v79;
      sub_10079F01C(v91, (void (*)(void))type metadata accessor for LocationViewComponent);
      char v99 = v114 ^ 1;
      return v99 & 1;
    case 0xDu:
      uint64_t v2 = v193;
      sub_1001DBA6C((uint64_t)v88, v193);
      if (sub_10018037C() != 13)
      {
        uint64_t v150 = type metadata accessor for SevereAlertComponent;
        goto LABEL_107;
      }
      uint64_t v93 = v179;
      sub_1001DA938((uint64_t)v79, v179, (void (*)(void))type metadata accessor for SevereAlertComponent);
      sub_100BDC6F4();
      if (v115 & 1) != 0 && *(void *)(v2 + 8) == *(void *)(v93 + 8) && (static Date.== infix(_:_:)())
      {
        uint64_t v95 = type metadata accessor for SevereAlertComponent;
        goto LABEL_125;
      }
      uint64_t v108 = type metadata accessor for SevereAlertComponent;
      goto LABEL_120;
    case 0xEu:
      uint64_t v116 = v191;
      sub_1001DBA6C((uint64_t)v88, v191);
      if (sub_10018037C() == 14)
      {
        uint64_t v118 = v183;
        uint64_t v117 = v184;
        (*(void (**)(uint64_t, unsigned char *, uint64_t))(v183 + 32))(v178, v79, v184);
        char v99 = static SunriseSunsetModel.== infix(_:_:)();
        uint64_t v119 = *(void (**)(uint64_t))(v118 + 8);
        uint64_t v120 = sub_1001A1818();
        v119(v120);
        ((void (*)(uint64_t, uint64_t))v119)(v116, v117);
        goto LABEL_51;
      }
      (*(void (**)(uint64_t, uint64_t))(v183 + 8))(v116, v184);
      goto LABEL_109;
    case 0xFu:
      uint64_t v3 = v192;
      sub_1001DBA6C((uint64_t)v88, v192);
      if (sub_10018037C() == 15)
      {
        uint64_t v96 = v180;
        sub_1001DA938((uint64_t)v79, v180, (void (*)(void))type metadata accessor for AveragesComponent);
        uint64_t v121 = sub_1001A1818();
        char v99 = sub_100A33254(v121, v122);
        uint64_t v100 = type metadata accessor for AveragesComponent;
LABEL_48:
        uint64_t v106 = v100;
        sub_10079F01C(v96, (void (*)(void))v100);
        uint64_t v103 = v3;
        goto LABEL_49;
      }
      uint64_t v151 = type metadata accessor for AveragesComponent;
LABEL_102:
      uint64_t v152 = v151;
      uint64_t v153 = v3;
      goto LABEL_108;
    case 0x10u:
      uint64_t v84 = v196;
      sub_1001DBA6C((uint64_t)v88, (uint64_t)v196);
      if (sub_10018037C() != 16)
      {
        uint64_t v92 = type metadata accessor for UVIndexComponent;
        goto LABEL_104;
      }
      uint64_t v109 = v182;
      sub_1001DA938((uint64_t)v79, v182, (void (*)(void))type metadata accessor for UVIndexComponent);
      if (static CurrentWeather.== infix(_:_:)())
      {
        uint64_t v123 = *(int *)(v167 + 20);
        uint64_t v124 = &v84[v123];
        uint64_t v125 = v109 + v123;
        if (static WeatherDescription.== infix(_:_:)())
        {
          uint64_t v126 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
          uint64_t v127 = *(void *)&v124[v126];
          uint64_t v128 = *(void *)&v124[v126 + 8];
          uint64_t v129 = (void *)(v125 + v126);
          BOOL v130 = v127 == *v129 && v128 == v129[1];
          if (v130 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            sub_10019D890();
            type metadata accessor for DayWeather();
            sub_10079F160(&qword_100E71318, (void (*)(uint64_t))&type metadata accessor for DayWeather);
            sub_10079F160(&qword_100E71320, (void (*)(uint64_t))&type metadata accessor for DayWeather);
            sub_10079F160(&qword_100E71328, (void (*)(uint64_t))&type metadata accessor for DayWeather);
            if (sub_10019FF80())
            {
              sub_10019D890();
              type metadata accessor for HourWeather();
              sub_10079F160(&qword_100E712F0, (void (*)(uint64_t))&type metadata accessor for HourWeather);
              sub_10079F160(&qword_100E712F8, (void (*)(uint64_t))&type metadata accessor for HourWeather);
              sub_10079F160(&qword_100E71300, (void (*)(uint64_t))&type metadata accessor for HourWeather);
              if (sub_10019FF80())
              {
                uint64_t v110 = type metadata accessor for UVIndexComponent;
LABEL_63:
                uint64_t v131 = v110;
                sub_10079F01C(v109, (void (*)(void))v110);
                uint64_t v132 = (uint64_t)v84;
                goto LABEL_126;
              }
            }
          }
        }
      }
      uint64_t v154 = type metadata accessor for UVIndexComponent;
LABEL_112:
      uint64_t v155 = v154;
      sub_10079F01C(v109, (void (*)(void))v154);
      uint64_t v156 = (uint64_t)v84;
      goto LABEL_121;
    case 0x11u:
      uint64_t v133 = (uint64_t)v88;
      uint64_t v134 = v198;
      sub_1001DBA6C(v133, v198);
      if (sub_10018037C() != 17)
      {
        uint64_t v152 = type metadata accessor for VisibilityComponent;
        uint64_t v153 = v134;
        goto LABEL_108;
      }
      sub_1001DA938((uint64_t)v79, v197, (void (*)(void))type metadata accessor for VisibilityComponent);
      if (static CurrentWeather.== infix(_:_:)())
      {
        uint64_t v135 = *(int *)(v163 + 20);
        uint64_t v136 = *(void *)(v198 + v135);
        uint64_t v137 = *(void *)(v198 + v135 + 8);
        uint64_t v138 = *(void *)(v198 + v135 + 16);
        uint64_t v139 = *(void *)(v198 + v135 + 24);
        uint64_t v140 = *(void *)(v198 + v135 + 32);
        uint64_t v141 = *(void *)(v198 + v135 + 40);
        uint64_t v142 = (void *)(v197 + v135);
        uint64_t v143 = v142[2];
        uint64_t v144 = v142[3];
        uint64_t v145 = v142[4];
        uint64_t v146 = v142[5];
        BOOL v147 = v136 == *v142 && v137 == v142[1];
        if (v147 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          BOOL v148 = v138 == v143 && v139 == v144;
          if (v148 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            BOOL v149 = v140 == v145 && v141 == v146;
            if (v149 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              uint64_t v131 = type metadata accessor for VisibilityComponent;
              sub_10079F01C(v197, (void (*)(void))type metadata accessor for VisibilityComponent);
              uint64_t v132 = v198;
              goto LABEL_126;
            }
          }
        }
      }
      uint64_t v155 = type metadata accessor for VisibilityComponent;
      sub_10079F01C(v197, (void (*)(void))type metadata accessor for VisibilityComponent);
      uint64_t v156 = v198;
      goto LABEL_121;
    case 0x12u:
      uint64_t v2 = v195;
      sub_1001DBA6C((uint64_t)v88, v195);
      if (sub_10018037C() != 18)
      {
        uint64_t v150 = type metadata accessor for WindComponent;
LABEL_107:
        uint64_t v152 = v150;
        uint64_t v153 = v2;
        goto LABEL_108;
      }
      uint64_t v93 = v181;
      sub_1001DA938((uint64_t)v79, v181, (void (*)(void))type metadata accessor for WindComponent);
      if (static CurrentWeather.== infix(_:_:)())
      {
        memcpy(v201, (const void *)(v2 + *(int *)(v164 + 20)), sizeof(v201));
        memcpy(v202, (const void *)(v93 + *(int *)(v164 + 20)), 0xE8uLL);
        if (sub_100A3DD38((uint64_t)v201, (uint64_t)v202))
        {
          uint64_t v95 = type metadata accessor for WindComponent;
LABEL_125:
          uint64_t v131 = v95;
          sub_10079F01C(v93, (void (*)(void))v95);
          uint64_t v132 = v2;
LABEL_126:
          sub_10079F01C(v132, (void (*)(void))v131);
LABEL_127:
          sub_10079F01C(v91, (void (*)(void))type metadata accessor for LocationViewComponent);
          char v99 = 1;
          return v99 & 1;
        }
      }
      uint64_t v108 = type metadata accessor for WindComponent;
LABEL_120:
      uint64_t v155 = v108;
      sub_10079F01C(v93, (void (*)(void))v108);
      uint64_t v156 = v2;
LABEL_121:
      sub_10079F01C(v156, (void (*)(void))v155);
      sub_10079F01C(v91, (void (*)(void))type metadata accessor for LocationViewComponent);
      goto LABEL_122;
    case 0x13u:
      if (swift_getEnumCaseMultiPayload() == 19) {
        goto LABEL_127;
      }
      goto LABEL_109;
    default:
      sub_1001DBA6C((uint64_t)v88, (uint64_t)v84);
      if (sub_10018037C())
      {
        uint64_t v92 = type metadata accessor for AirQualityComponent;
LABEL_104:
        uint64_t v152 = v92;
        uint64_t v153 = (uint64_t)v84;
LABEL_108:
        sub_10079F01C(v153, (void (*)(void))v152);
LABEL_109:
        sub_10079EFBC(v91);
LABEL_122:
        char v99 = 0;
      }
      else
      {
        uint64_t v157 = v165;
        sub_1001DA938((uint64_t)v79, v165, (void (*)(void))type metadata accessor for AirQualityComponent);
        char v99 = static AirQuality.== infix(_:_:)();
        uint64_t v106 = type metadata accessor for AirQualityComponent;
        sub_10079F01C(v157, (void (*)(void))type metadata accessor for AirQualityComponent);
        uint64_t v103 = (uint64_t)v84;
LABEL_49:
        uint64_t v104 = v106;
LABEL_50:
        sub_10079F01C(v103, (void (*)(void))v104);
LABEL_51:
        sub_10079F01C(v91, (void (*)(void))type metadata accessor for LocationViewComponent);
      }
      return v99 & 1;
  }
}

uint64_t sub_10079DEC8()
{
  type metadata accessor for LocationViewComponent();
  sub_100162E4C();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001DBA6C(v0, (uint64_t)v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 10;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      sub_10079F01C((uint64_t)v3, (void (*)(void))type metadata accessor for LocationViewComponent);
      uint64_t result = 1;
      break;
    case 2:
      sub_10079F01C((uint64_t)v3, (void (*)(void))type metadata accessor for LocationViewComponent);
      uint64_t result = 2;
      break;
    case 3:
      sub_10079F01C((uint64_t)v3, (void (*)(void))type metadata accessor for LocationViewComponent);
      uint64_t result = 3;
      break;
    case 4:
      sub_10079F01C((uint64_t)v3, (void (*)(void))type metadata accessor for LocationViewComponent);
      uint64_t result = 4;
      break;
    case 5:
      sub_10079F01C((uint64_t)v3, (void (*)(void))type metadata accessor for LocationViewComponent);
      uint64_t result = 5;
      break;
    case 6:
      sub_10079F01C((uint64_t)v3, (void (*)(void))type metadata accessor for LocationViewComponent);
      uint64_t result = 6;
      break;
    case 7:
      sub_10079F01C((uint64_t)v3, (void (*)(void))type metadata accessor for LocationViewComponent);
      uint64_t result = 7;
      break;
    case 8:
      sub_10079F01C((uint64_t)v3, (void (*)(void))type metadata accessor for LocationViewComponent);
      uint64_t result = 8;
      break;
    case 9:
      sub_10079F01C((uint64_t)v3, (void (*)(void))type metadata accessor for LocationViewComponent);
      uint64_t result = 9;
      break;
    case 10:
      sub_10079F01C((uint64_t)v3, (void (*)(void))type metadata accessor for LocationViewComponent);
      uint64_t result = 11;
      break;
    case 11:
      sub_10079F01C((uint64_t)v3, (void (*)(void))type metadata accessor for LocationViewComponent);
      uint64_t result = 12;
      break;
    case 12:
      uint64_t result = 13;
      break;
    case 13:
      sub_10079F01C((uint64_t)v3, (void (*)(void))type metadata accessor for LocationViewComponent);
      uint64_t result = 14;
      break;
    case 14:
      sub_10079F01C((uint64_t)v3, (void (*)(void))type metadata accessor for LocationViewComponent);
      uint64_t result = 15;
      break;
    case 15:
      sub_10079F01C((uint64_t)v3, (void (*)(void))type metadata accessor for LocationViewComponent);
      uint64_t result = 16;
      break;
    case 16:
      sub_10079F01C((uint64_t)v3, (void (*)(void))type metadata accessor for LocationViewComponent);
      uint64_t result = 17;
      break;
    case 17:
      sub_10079F01C((uint64_t)v3, (void (*)(void))type metadata accessor for LocationViewComponent);
      uint64_t result = 18;
      break;
    case 18:
      sub_10079F01C((uint64_t)v3, (void (*)(void))type metadata accessor for LocationViewComponent);
      uint64_t result = 19;
      break;
    case 19:
      return result;
    default:
      sub_10079F01C((uint64_t)v3, (void (*)(void))type metadata accessor for LocationViewComponent);
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t sub_10079E254()
{
  unint64_t v0 = _findStringSwitchCaseWithCache(cases:string:cache:)();
  swift_bridgeObjectRelease();
  if (v0 >= 0x14) {
    return 20;
  }
  else {
    return v0;
  }
}

BOOL sub_10079E2F8(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E07E38, v2);
  swift_bridgeObjectRelease();
  return v3 != 0;
}

uint64_t sub_10079E348(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10088A5E0(*a1, *a2);
}

Swift::Int sub_10079E354()
{
  return sub_100652894(*v0);
}

uint64_t sub_10079E35C(uint64_t a1)
{
  return sub_1002C26B4(a1, *v1);
}

Swift::Int sub_10079E364(uint64_t a1)
{
  return sub_1002C4758(a1, *v1);
}

uint64_t sub_10079E36C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10079E254();
  *a1 = result;
  return result;
}

unint64_t sub_10079E39C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1001DEDB8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_10079E3C8()
{
  return RawRepresentable<>.init(from:)();
}

BOOL sub_10079E428@<W0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  BOOL result = sub_10079E2F8(*a1);
  *a2 = result;
  return result;
}

void sub_10079E460(void *a1@<X8>)
{
  *a1 = 1701869940;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_10079E474@<X0>(Swift::String a1@<X1:X0>, BOOL *a2@<X8>)
{
  uint64_t result = sub_10079E340(a1);
  *a2 = result != 0;
  return result;
}

uint64_t sub_10079E4A4(uint64_t a1)
{
  unint64_t v2 = sub_10079F074();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10079E4E0(uint64_t a1)
{
  unint64_t v2 = sub_10079F074();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10079E51C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v119 = a2;
  uint64_t v120 = sub_10017DF08(&qword_100E94570);
  sub_100179C0C();
  uint64_t v118 = v6;
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v125 = v8;
  sub_100129064();
  v117[17] = type metadata accessor for LocationViewComponent();
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v10);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v11);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v12);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v13);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v14);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v15);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v16);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v17);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v18);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v19);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v20);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v21);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v22);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)v117 - v24;
  __chkstk_darwin(v26);
  sub_10017FF4C();
  __chkstk_darwin(v27);
  sub_100164A00();
  __chkstk_darwin(v28);
  sub_100119550();
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)v117 - v30;
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)v117 - v33;
  uint64_t v35 = a1[3];
  uint64_t v121 = a1;
  sub_1001B1E64(a1, v35);
  sub_10079F074();
  uint64_t v36 = (uint64_t)v122;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v36)
  {
    uint64_t v43 = (uint64_t)v121;
  }
  else
  {
    v117[1] = v31;
    v117[2] = v3;
    v117[3] = v4;
    v117[4] = v2;
    v117[5] = v25;
    uint64_t v37 = v117[18];
    uint64_t v38 = (unsigned char *)v117[20];
    uint64_t v39 = (void *)v117[19];
    uint64_t v40 = v118;
    uint64_t v122 = v34;
    uint64_t v41 = v119;
    sub_10079F0C0();
    uint64_t v42 = v120;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v43 = (uint64_t)v121;
    switch(LOBYTE(v123[0]))
    {
      case 1:
        sub_10019F0D8();
        sub_1001A0D74();
        sub_1006858D8(v49, v50);
        uint64_t v51 = sub_1001880D4();
        v52(v51);
        sub_10017A8B0();
        goto LABEL_26;
      case 2:
        sub_10019F0D8();
        sub_1001A0D74();
        sub_1009E9A6C(v53, v54);
        uint64_t v55 = sub_1001880D4();
        v56(v55);
        sub_10017A8B0();
        goto LABEL_26;
      case 3:
        sub_10019F0D8();
        sub_1001A0D74();
        sub_100912710(v57, v58);
        uint64_t v59 = sub_1001880D4();
        v60(v59);
        sub_10017A8B0();
        goto LABEL_26;
      case 4:
        sub_10019F0D8();
        sub_1001A0D74();
        sub_100A18D38(v61, v62);
        uint64_t v63 = sub_1001880D4();
        v64(v63);
        sub_10017A8B0();
        goto LABEL_26;
      case 5:
        sub_10019F0D8();
        sub_1001A0D74();
        sub_1009D89BC(v65, v66);
        uint64_t v67 = sub_1001880D4();
        v68(v67);
        sub_10017A8B0();
        goto LABEL_26;
      case 6:
        sub_10019F0D8();
        sub_1001A0D74();
        sub_10037C970(v69, v70);
        uint64_t v71 = sub_1001880D4();
        v72(v71);
        sub_10017A8B0();
        goto LABEL_26;
      case 7:
        sub_10019F0D8();
        uint64_t v38 = (unsigned char *)v37;
        sub_10069AEFC(v123, v37);
        uint64_t v73 = sub_1001880D4();
        v74(v73);
        sub_10017A8B0();
        goto LABEL_26;
      case 8:
        sub_10019F0D8();
        sub_1001A0D74();
        sub_1007C068C(v75, v76);
        uint64_t v77 = sub_1001880D4();
        v78(v77);
        sub_10017A8B0();
        goto LABEL_26;
      case 9:
        sub_10019F0D8();
        sub_1001A0D74();
        sub_1003F5568(v79, v80);
        uint64_t v81 = sub_1001880D4();
        v82(v81);
        sub_10017A8B0();
        goto LABEL_26;
      case 0xA:
        (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v125, v42);
        uint64_t v83 = (uint64_t)v122;
        swift_storeEnumTagMultiPayload();
        goto LABEL_28;
      case 0xB:
        sub_10019F0D8();
        sub_1001A0D74();
        sub_1007D5F88(v84, v85);
        uint64_t v86 = sub_1001880D4();
        v87(v86);
        sub_10017A8B0();
        goto LABEL_26;
      case 0xC:
        sub_10019F0D8();
        sub_1008EDDC0(v123, (uint64_t)__src);
        uint64_t v88 = sub_1001880D4();
        v89(v88);
        memcpy(v39, __src, 0x70uLL);
        swift_storeEnumTagMultiPayload();
        uint64_t v90 = (uint64_t)v39;
        goto LABEL_27;
      case 0xD:
        uint64_t v91 = v38;
        sub_10019F0D8();
        char v92 = sub_100658790(v123);
        uint64_t v93 = sub_1001880D4();
        v94(v93);
        *uint64_t v91 = v92 & 1;
        swift_storeEnumTagMultiPayload();
        uint64_t v90 = (uint64_t)v91;
        goto LABEL_27;
      case 0xE:
        sub_10019F0D8();
        sub_1001A0D74();
        sub_100427E90(v95, v96);
        uint64_t v97 = sub_1001880D4();
        v98(v97);
        sub_10017A8B0();
        goto LABEL_26;
      case 0xF:
        sub_10019F0D8();
        sub_1001A0D74();
        SunriseSunsetModel.init(from:)();
        uint64_t v99 = sub_1001880D4();
        v100(v99);
        sub_10017A8B0();
        goto LABEL_26;
      case 0x10:
        sub_10019F0D8();
        sub_1001A0D74();
        sub_100A33558(v101, v102);
        uint64_t v103 = sub_1001880D4();
        v104(v103);
        sub_10017A8B0();
        goto LABEL_26;
      case 0x11:
        sub_10019F0D8();
        sub_1001A0D74();
        sub_100AE1B00(v105, v106);
        uint64_t v107 = sub_1001880D4();
        v108(v107);
        sub_10017A8B0();
        goto LABEL_26;
      case 0x12:
        sub_10019F0D8();
        sub_1001A0D74();
        sub_1004EFA3C(v109, v110);
        uint64_t v111 = sub_1001880D4();
        v112(v111);
        sub_10017A8B0();
        goto LABEL_26;
      case 0x13:
        sub_10019F0D8();
        sub_1001A0D74();
        sub_100BB3D84(v113, v114);
        uint64_t v115 = sub_1001880D4();
        v116(v115);
        sub_10017A8B0();
        goto LABEL_26;
      default:
        sub_10019F0D8();
        sub_1001A0D74();
        sub_1004F0398(v45, v46);
        uint64_t v47 = sub_1001880D4();
        v48(v47);
        sub_10017A8B0();
LABEL_26:
        swift_storeEnumTagMultiPayload();
        uint64_t v90 = (uint64_t)v38;
LABEL_27:
        uint64_t v83 = (uint64_t)v122;
        sub_1001DA938(v90, (uint64_t)v122, (void (*)(void))type metadata accessor for LocationViewComponent);
LABEL_28:
        sub_1001DA938(v83, v41, (void (*)(void))type metadata accessor for LocationViewComponent);
        break;
    }
  }
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v43);
}

uint64_t sub_10079EDF8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10079E51C(a1, a2);
}

uint64_t sub_10079EE10@<X0>(uint64_t *a1@<X8>)
{
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C251B0;
  *(void *)(inited + 32) = 1701869940;
  *(void *)(inited + 40) = 0xE400000000000000;
  char v3 = sub_10079DEC8();
  *(void *)(inited + 72) = &type metadata for LocationViewComponent.ComponentType;
  *(unsigned char *)(inited + 48) = v3;
  Dictionary.init(dictionaryLiteral:)();
  a1[3] = sub_10017DF08(&qword_100E94588);
  a1[4] = sub_10079F10C();
  sub_100170694(a1);
  type metadata accessor for LocationViewComponent();
  return ShortDescription.init(name:_:)();
}

uint64_t sub_10079EF08()
{
  sub_10079F160(&qword_100E94598, (void (*)(uint64_t))type metadata accessor for LocationViewComponent);

  return ShortDescribable.description.getter();
}

uint64_t sub_10079EF74()
{
  return sub_10079F160(&qword_100E94560, (void (*)(uint64_t))type metadata accessor for LocationViewComponent);
}

uint64_t sub_10079EFBC(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E94568);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10079F01C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unint64_t sub_10079F074()
{
  unint64_t result = qword_100E94578;
  if (!qword_100E94578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E94578);
  }
  return result;
}

unint64_t sub_10079F0C0()
{
  unint64_t result = qword_100E94580;
  if (!qword_100E94580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E94580);
  }
  return result;
}

unint64_t sub_10079F10C()
{
  unint64_t result = qword_100E94590;
  if (!qword_100E94590)
  {
    sub_10018C6DC(&qword_100E94588);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E94590);
  }
  return result;
}

uint64_t sub_10079F160(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10079F1A8()
{
  unint64_t result = qword_100E945A0;
  if (!qword_100E945A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E945A0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LocationViewComponent.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10079F290);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationViewComponent.CodingKeys()
{
  return &type metadata for LocationViewComponent.CodingKeys;
}

unint64_t sub_10079F2CC()
{
  unint64_t result = qword_100E945A8;
  if (!qword_100E945A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E945A8);
  }
  return result;
}

unint64_t sub_10079F31C()
{
  unint64_t result = qword_100E945B0;
  if (!qword_100E945B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E945B0);
  }
  return result;
}

unint64_t sub_10079F36C()
{
  unint64_t result = qword_100E945B8;
  if (!qword_100E945B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E945B8);
  }
  return result;
}

double sub_10079F3B8(char a1, char a2)
{
  if ((*(unsigned char *)(v2 + 97) & 1) == 0 || (double result = 16.0, (a2 & 1) == 0))
  {
    double result = -6.0;
    if (a1) {
      double result = -3.0;
    }
    if ((*(unsigned char *)(v2 + 96) & 1) == 0) {
      return 0.0;
    }
  }
  return result;
}

uint64_t sub_10079F3F0(char a1)
{
  if (v1[12])
  {
    if (a1 & 1) != 0 && (*((unsigned char *)v1 + 97))
    {
      id v5 = [self mainBundle];
      v13._object = (void *)0x8000000100CB1DC0;
      v6._uint64_t countAndFlagsBits = 0x4025202D206425;
      v6._object = (void *)0xE700000000000000;
      v7._uint64_t countAndFlagsBits = 0;
      v7._object = (void *)0xE000000000000000;
      v13._uint64_t countAndFlagsBits = 0xD000000000000049;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v13);

      sub_10017DF08(&qword_100E64020);
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_100C25ED0;
      uint64_t v9 = *v1;
      *(void *)(v8 + 56) = &type metadata for Int;
      *(void *)(v8 + 64) = &protocol witness table for Int;
      *(void *)(v8 + 32) = v9;
      uint64_t v11 = v1[4];
      uint64_t v10 = v1[5];
      *(void *)(v8 + 96) = &type metadata for String;
      *(void *)(v8 + 104) = sub_10012B7C0();
      *(void *)(v8 + 72) = v11;
      *(void *)(v8 + 80) = v10;
      swift_bridgeObjectRetain();
      uint64_t v2 = static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10017DF08(&qword_100E64020);
      uint64_t v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_100C251B0;
      uint64_t v4 = *v1;
      *(void *)(v3 + 56) = &type metadata for Int;
      *(void *)(v3 + 64) = &protocol witness table for Int;
      *(void *)(v3 + 32) = v4;
      uint64_t v2 = static String.localizedStringWithFormat(_:_:)();
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = v1[4];
    swift_bridgeObjectRetain();
  }
  return v2;
}

uint64_t sub_10079F5BC(char a1)
{
  if (*(unsigned char *)(v1 + 96) & 1) == 0 || (a1 & 1) != 0 && (*(unsigned char *)(v1 + 97)) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 32);
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_10079F60C(char a1)
{
  uint64_t v3 = type metadata accessor for Font.Leading();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = type metadata accessor for Font.TextStyle();
  sub_100179C0C();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  if (*(unsigned char *)(v1 + 96) & 1) == 0 || (*(unsigned char *)(v1 + 97) & 1) != 0 && (a1)
  {
    sub_1001649D0();
    v17();
    static Font.Weight.semibold.getter();
    static Font.system(_:weight:)();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v16, v10);
    sub_1001649D0();
    v18();
    uint64_t v19 = Font.leading(_:)();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
    static Font.headline.getter();
  }
  else
  {
    uint64_t v19 = static Font.largeTitle.getter();
    static Font.title2.getter();
  }
  return v19;
}

uint64_t sub_10079F7A8()
{
  uint64_t v0 = type metadata accessor for Font.Leading();
  sub_100179C0C();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = type metadata accessor for Font.TextStyle();
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  sub_1001649D0();
  v14();
  static Font.Weight.semibold.getter();
  static Font.system(_:weight:)();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v7);
  sub_1001649D0();
  v15();
  uint64_t v16 = Font.leading(_:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v0);
  static Font.footnote.getter();
  return v16;
}

uint64_t sub_10079F91C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v44 = sub_10017DF08(&qword_100E7B450);
  sub_100162E4C();
  __chkstk_darwin(v3);
  uint64_t v43 = (uint64_t)v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v42 = (uint64_t)v41 - v6;
  uint64_t v7 = sub_10017DF08(&qword_100E63730);
  __chkstk_darwin(v7 - 8);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = type metadata accessor for AttributedString();
  sub_100179C0C();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = sub_10017DF08(&qword_100E7B448);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v46 = (uint64_t)v41 - v22;
  uint64_t v23 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v23 - 8);
  sub_1001626E0();
  swift_bridgeObjectRetain();
  AttributeContainer.init()();
  uint64_t v45 = a1;
  AttributedString.init(_:attributes:)();
  long long v47 = *(_OWORD *)(v1 + 80);
  uint64_t v48 = 32;
  unint64_t v49 = 0xE100000000000000;
  sub_10014A85C();
  uint64_t v24 = (void *)StringProtocol.components<A>(separatedBy:)();
  if (!v24[2]) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v26 = v24[4];
  uint64_t v25 = v24[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v17, v45, v11);
  v41[2] = v26;
  *(void *)&long long v47 = v26;
  *((void *)&v47 + 1) = v25;
  uint64_t v27 = type metadata accessor for Locale();
  _s7Weather24LocationCompositionStateOwst_0(v10, 1, 1, v27);
  unint64_t v28 = sub_1007A0260();
  uint64_t v29 = v46;
  v41[1] = v28;
  AttributedStringProtocol.range<A>(of:options:locale:)();
  sub_1001781AC(v10, &qword_100E63730);
  uint64_t v30 = *(void (**)(uint64_t))(v13 + 8);
  uint64_t v31 = sub_10017A838();
  v30(v31);
  sub_1001262FC(v29, (uint64_t)v20, &qword_100E7B448);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v44) == 1)
  {
    sub_1001781AC(v46, &qword_100E7B448);
    swift_bridgeObjectRelease();
    uint64_t v32 = (uint64_t)v20;
  }
  else
  {
    uint64_t v34 = (uint64_t)v20;
    uint64_t v35 = v42;
    sub_1007A02B0(v34, v42);
    String.lowercased()();
    swift_bridgeObjectRelease();
    AttributeContainer.init()();
    AttributedString.init(_:attributes:)();
    sub_1005F3120();
    AttributedString.replaceSubrange<A, B>(_:with:)();
    uint64_t v36 = sub_10017A838();
    v30(v36);
    uint64_t v37 = v43;
    sub_1001262FC(v35, v43, &qword_100E7B450);
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    v41[-2] = v39;
    swift_getKeyPath();
    LOBYTE(v48) = 1;
    uint64_t v40 = (void (*)(long long *, void))AttributedString.subscript.modify();
    sub_1004C7B64();
    AttributedSubstring.subscript.setter();
    v40(&v47, 0);
    sub_1001781AC(v37, &qword_100E7B450);
    sub_1001781AC(v35, &qword_100E7B450);
    uint64_t v32 = v46;
  }
  return sub_1001781AC(v32, &qword_100E7B448);
}

uint64_t sub_10079FDE0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2
    || *(void *)(a1 + 8) != *(void *)(a2 + 8)
    || *(void *)(a1 + 16) != *(void *)(a2 + 16)
    || *(double *)(a1 + 24) != *(double *)(a2 + 24))
  {
    return 0;
  }
  BOOL v4 = *(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40);
  if (!v4 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  BOOL v5 = *(void *)(a1 + 48) == *(void *)(a2 + 48) && *(void *)(a1 + 56) == *(void *)(a2 + 56);
  if (!v5 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(void *)(a1 + 72);
  uint64_t v7 = *(void *)(a2 + 72);
  if (v6)
  {
    if (!v7) {
      return 0;
    }
    BOOL v8 = *(void *)(a1 + 64) == *(void *)(a2 + 64) && v6 == v7;
    if (!v8 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      return 0;
    }
  }
  else if (v7)
  {
    return 0;
  }
  BOOL v9 = *(void *)(a1 + 80) == *(void *)(a2 + 80) && *(void *)(a1 + 88) == *(void *)(a2 + 88);
  if (!v9 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
    || ((*(unsigned __int8 *)(a1 + 96) ^ *(unsigned __int8 *)(a2 + 96)) & 1) != 0
    || ((*(unsigned __int8 *)(a1 + 97) ^ *(unsigned __int8 *)(a2 + 97)) & 1) != 0)
  {
    return 0;
  }
  uint64_t v11 = *(void *)(a1 + 104);
  uint64_t v12 = *(void *)(a2 + 104);

  return sub_100BDD0CC(v11, v12);
}

uint64_t destroy for AirQualityComponentViewModel()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AirQualityComponentViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v3;
  uint64_t v4 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  uint64_t v5 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v5;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(_WORD *)(a1 + 96) = *(_WORD *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for AirQualityComponentViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AirQualityComponentViewModel(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(unsigned char *)(a1 + 97) = *(unsigned char *)(a2 + 97);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AirQualityComponentViewModel(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 112))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AirQualityComponentViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AirQualityComponentViewModel()
{
  return &type metadata for AirQualityComponentViewModel;
}

unint64_t sub_1007A0260()
{
  unint64_t result = qword_100E7B458;
  if (!qword_100E7B458)
  {
    type metadata accessor for AttributedString();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7B458);
  }
  return result;
}

uint64_t sub_1007A02B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E7B450);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1007A0324()
{
  return 8;
}

uint64_t sub_1007A0330()
{
  return swift_release();
}

uint64_t sub_1007A0338(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_1007A034C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1007A0358@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v49 = a1;
  uint64_t v47 = a3;
  uint64_t v51 = *v3;
  type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v45 = v6;
  uint64_t v46 = v5;
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v44 = v7;
  type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v54 = v9;
  uint64_t v55 = v8;
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v52 = v10;
  uint64_t HourPrecipitationChartPlacement = type metadata accessor for NextHourPrecipitationChartPlacement();
  sub_100179C0C();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NextHourPrecipitationChartViewModel();
  sub_100179C0C();
  uint64_t v56 = v18;
  uint64_t v57 = v17;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v3[5];
  uint64_t v48 = v3[6];
  sub_1001B1E64(v3 + 2, v21);
  uint64_t v22 = a2 + *(int *)(type metadata accessor for NextHourPrecipitationComponent() + 24);
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v16, enum case for NextHourPrecipitationChartPlacement.component(_:), HourPrecipitationChartPlacement);
  uint64_t v53 = v20;
  uint64_t v50 = v22;
  dispatch thunk of NextHourPrecipitationChartViewModelFactoryType.makeViewModel(for:precipitation:placement:currentTime:minutesToConsider:)();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v16, HourPrecipitationChartPlacement);
  if (qword_100E62A48 != -1) {
    swift_once();
  }
  sub_1007A0888();
  Configurable.setting<A>(_:)();
  if (v59)
  {
    unint64_t v23 = 0x8000000100CB1ED0;
    uint64_t v24 = 0xD000000000000015;
  }
  else
  {
    uint64_t v25 = v52;
    Date.init()();
    uint64_t v24 = NextHourPrecipitationStringBuilder.buildShortString(from:referenceDate:)();
    unint64_t v23 = v26;
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v25, v55);
    if (!v23)
    {
      uint64_t v24 = 0;
      unint64_t v23 = 0xE000000000000000;
    }
  }
  Configurable.setting<A>(_:)();
  if (v58)
  {
    uint64_t v27 = 0xD00000000000002DLL;
    unint64_t v28 = 0x8000000100CB1EA0;
  }
  else
  {
    uint64_t v29 = v44;
    Location.timeZone.getter();
    uint64_t v30 = v52;
    Date.init()();
    uint64_t v27 = NextHourPrecipitationStringBuilder.buildLongString(from:timeZone:referenceDate:)();
    unint64_t v28 = v31;
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v30, v55);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v29, v46);
    if (!v28)
    {
      uint64_t v27 = 0;
      unint64_t v28 = 0xE000000000000000;
    }
  }
  uint64_t v32 = v47;
  id v33 = [self mainBundle];
  v34._uint64_t countAndFlagsBits = 0xD000000000000017;
  v60._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
  v60._object = (void *)0x8000000100CB1E70;
  v34._object = (void *)0x8000000100CABE00;
  v35._uint64_t countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  Swift::String v36 = NSLocalizedString(_:tableName:bundle:value:comment:)(v34, (Swift::String_optional)0, (NSBundle)v33, v35, v60);

  *(void *)uint64_t v32 = v24;
  *(void *)(v32 + 8) = v23;
  *(void *)(v32 + 16) = 0;
  *(void *)(v32 + 24) = 0;
  *(Swift::String *)(v32 + 32) = v36;
  strcpy((char *)(v32 + 48), "umbrella.fill");
  *(_WORD *)(v32 + 62) = -4864;
  *(unsigned char *)(v32 + 64) = 0;
  type metadata accessor for LocationComponentHeaderViewModel(0);
  *(void *)(v32 + 72) = 0;
  *(void *)(v32 + 80) = 0;
  *(unsigned char *)(v32 + 88) = 0;
  swift_storeEnumTagMultiPayload();
  uint64_t v37 = (int *)type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v38 = (uint64_t *)(v32 + v37[5]);
  uint64_t *v38 = v27;
  v38[1] = v28;
  uint64_t HourPrecipitationComponentViewModel = type metadata accessor for NextHourPrecipitationComponentViewModel();
  (*(void (**)(char *, char *, uint64_t))(v56 + 32))((char *)v38 + *(int *)(HourPrecipitationComponentViewModel + 20), v53, v57);
  type metadata accessor for LocationComponentViewModel();
  swift_storeEnumTagMultiPayload();
  uint64_t v40 = v32 + v37[7];
  uint64_t v41 = type metadata accessor for LocationComponentAction(0);
  swift_storeEnumTagMultiPayload();
  uint64_t result = _s7Weather24LocationCompositionStateOwst_0(v40, 0, 1, v41);
  *(_WORD *)(v32 + v37[6]) = 256;
  return result;
}

unint64_t sub_1007A0888()
{
  unint64_t result = qword_100E94668;
  if (!qword_100E94668)
  {
    type metadata accessor for NextHourPrecipitationComponentViewModelFactory();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E94668);
  }
  return result;
}

uint64_t sub_1007A08D4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E947C0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v14)
  {
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E64B00);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (result)
    {
      uint64_t v5 = result;
      uint64_t v6 = sub_1000DF0C4((uint64_t)v13, v14);
      __n128 v7 = __chkstk_darwin(v6);
      uint64_t v9 = (uint64_t *)&v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
      (*(void (**)(uint64_t *, __n128))(v10 + 16))(v9, v7);
      uint64_t v11 = sub_1007A12D0(*v9, v5);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
      uint64_t result = type metadata accessor for SearchModule();
      a2[3] = result;
      a2[4] = (uint64_t)&off_100E155A8;
      *a2 = v11;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1007A0A58()
{
  sub_10017DF08(&qword_100E947B8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E947C0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E64B00);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E947C8);
  RegistrationContainer.register<A>(_:name:factory:)();

  return swift_release();
}

uint64_t sub_1007A0B64@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for Tracker();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    a2[3] = (uint64_t)&type metadata for SearchTracker;
    a2[4] = (uint64_t)&off_100E2EEB0;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1007A0BD4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v5 = v27;
  if (!v27)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v6 = v28;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E7CD08);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v26)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E947B8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v24)
  {
    uint64_t v7 = sub_1000DF0C4((uint64_t)v23, v24);
    __n128 v8 = __chkstk_darwin(v7);
    uint64_t v10 = (void *)((char *)&v22[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v11 + 16))(v10, v8);
    uint64_t v12 = *v10;
    v22[3] = &type metadata for SearchTracker;
    v22[4] = &off_100E2EEB0;
    v22[0] = v12;
    uint64_t v13 = type metadata accessor for SearchInteractor();
    uint64_t v14 = (void *)swift_allocObject();
    uint64_t v15 = sub_1000DF0C4((uint64_t)v22, (uint64_t)&type metadata for SearchTracker);
    __n128 v16 = __chkstk_darwin(v15);
    uint64_t v18 = (void *)((char *)&v22[-1] - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *, __n128))(v19 + 16))(v18, v16);
    uint64_t v20 = *v18;
    v14[12] = &type metadata for SearchTracker;
    v14[13] = &off_100E2EEB0;
    v14[9] = v20;
    _OWORD v14[2] = v5;
    v14[3] = v6;
    sub_1001262E4(&v25, (uint64_t)(v14 + 4));
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v22);
    uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v23);
    a2[3] = v13;
    a2[4] = &off_100E26CD0;
    *a2 = v14;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1007A0E8C(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v3 = v14;
  if (v14)
  {
    uint64_t v5 = v16;
    uint64_t v4 = v17;
    uint64_t v6 = v15;
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E947C8);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v13)
    {
      uint64_t v7 = *sub_1001B1E64(v12, v13);
      v11[3] = type metadata accessor for SearchViewModelFactory();
      v11[4] = &off_100E3BDA8;
      v11[0] = v7;
      sub_10020D948((uint64_t)v11, (uint64_t)v10);
      uint64_t v8 = swift_allocObject();
      sub_1001262E4(v10, v8 + 16);
      swift_retain();
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v11);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v12);
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = sub_1007A1168;
      *(void *)(v9 + 24) = v8;
      sub_10017DF08(&qword_100E64B00);
      swift_allocObject();
      return sub_10025AC40(v3, v6, v5, v4, sub_10025969C, 0, sub_100419B7C, 0, sub_1007A11A8, v9);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1007A1068@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1001B1E64(a2, a2[3]);
  sub_100C00338(a1, v6);
  return sub_1007A13EC((uint64_t)v6, a3);
}

uint64_t sub_1007A10C8@<X0>(void *a1@<X0>, void (*a2)(void *__return_ptr, void)@<X1>, uint64_t a3@<X8>)
{
  a2(v5, *a1);
  return sub_1007A13EC((uint64_t)v5, a3);
}

uint64_t sub_1007A1110@<X0>(uint64_t *a1@<X8>)
{
  return sub_1002229B8((uint64_t (*)(void))type metadata accessor for SearchViewModelFactory, (uint64_t)&off_100E3BDA8, a1);
}

uint64_t sub_1007A1130()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_1007A1168@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1007A1068(a1, (void *)(v2 + 16), a2);
}

uint64_t sub_1007A1170()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1007A11A8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1007A10C8(a1, *(void (**)(void *__return_ptr, void))(v2 + 16), a2);
}

uint64_t sub_1007A11B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v12 = type metadata accessor for SearchInteractor();
  uint64_t v13 = &off_100E26CD0;
  *(void *)&long long v11 = a1;
  if (qword_100E62788 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_1002102B0(v6, (uint64_t)qword_100F51DB0);
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Initializing Search module", v9, 2u);
    swift_slowDealloc();
  }

  sub_1001262E4(&v11, a3 + 16);
  *(void *)(a3 + 56) = a2;
  return a3;
}

uint64_t sub_1007A12D0(uint64_t a1, uint64_t a2)
{
  uint64_t v14 = type metadata accessor for SearchInteractor();
  uint64_t v15 = &off_100E26CD0;
  v13[0] = a1;
  type metadata accessor for SearchModule();
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = sub_1000DF0C4((uint64_t)v13, v14);
  __n128 v6 = __chkstk_darwin(v5);
  os_log_type_t v8 = (void *)((char *)&v13[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, __n128))(v9 + 16))(v8, v6);
  uint64_t v10 = sub_1007A11B0(*v8, a2, v4);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
  return v10;
}

uint64_t sub_1007A13EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E947D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1007A1454()
{
  uint64_t v4 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_10011C760();
  uint64_t v6 = sub_10017DF08(&qword_100E6D1D8);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_10016279C();
  uint64_t v8 = sub_10017DF08(&qword_100E639E8);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_100162758();
  __chkstk_darwin(v10);
  uint64_t v12 = &v23[-v11];
  uint64_t v13 = v0 + OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos8Fall2024____lazy_storage___currentLocation;
  sub_100126024();
  sub_1007A3B74(v13, (uint64_t)v12, &qword_100E639E8);
  uint64_t v14 = type metadata accessor for Location();
  sub_10012B520((uint64_t)v12, 1, v14);
  if (v15)
  {
    sub_100178254((uint64_t)v12, &qword_100E639E8);
    static Location.currentLocationID.getter();
    sub_10018C4F8();
    uint64_t v16 = type metadata accessor for TimeZone();
    uint64_t result = sub_10012B520(v2, 1, v16);
    if (v15)
    {
      __break(1u);
    }
    else
    {
      uint64_t v17 = type metadata accessor for Date();
      _s7Weather24LocationCompositionStateOwst_0(v3, 1, 1, v17);
      sub_100188774();
      sub_100163F80();
      sub_100162880();
      uint64_t v18 = sub_100188B4C();
      v19(v18);
      sub_10017B380();
      sub_100182350();
      sub_1007A3BC0(v1, v13, &qword_100E639E8);
      return swift_endAccess();
    }
  }
  else
  {
    sub_100162880();
    uint64_t v20 = sub_100183574();
    return v21(v20);
  }
  return result;
}

void sub_1007A16B0()
{
  sub_100165170();
  uint64_t v2 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_1001D1DAC();
  sub_10017C83C();
  __chkstk_darwin(v4);
  sub_100162F18();
  uint64_t v5 = sub_10017DF08(&qword_100E6D1D8);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_10011C760();
  uint64_t v7 = sub_10017DF08(&qword_100E639E8);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_100162824();
  __chkstk_darwin(v9);
  sub_100182F0C();
  sub_100183ED4();
  sub_1001820B0();
  uint64_t v10 = type metadata accessor for Location();
  sub_1001638F0(v10);
  if (!v11)
  {
    sub_100162880();
    uint64_t v23 = sub_100185C08();
    v24(v23);
LABEL_5:
    sub_100179F2C();
    return;
  }
  sub_100178254(v1, &qword_100E639E8);
  sub_100172420();
  sub_10019D8A0();
  if (!v11)
  {
    uint64_t v12 = CLLocationCoordinate2D.id.getter();
    uint64_t v14 = sub_10017D46C(v12, v13);
    v15(v14);
    uint64_t v16 = type metadata accessor for Date();
    _s7Weather24LocationCompositionStateOwst_0(v0, 1, 1, v16);
    sub_10019F0F4();
    sub_100185578();
    uint64_t v17 = sub_10018171C();
    v18(v17);
    sub_100162880();
    uint64_t v19 = sub_1001893C0();
    v20(v19);
    uint64_t v21 = sub_100180398();
    sub_10018B104(v21, v22, &qword_100E639E8);
    swift_endAccess();
    goto LABEL_5;
  }
  __break(1u);
}

void sub_1007A18E4()
{
  sub_100165170();
  uint64_t v2 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_1001D1DAC();
  sub_10017C83C();
  __chkstk_darwin(v4);
  sub_100162F18();
  uint64_t v5 = sub_10017DF08(&qword_100E6D1D8);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_10011C760();
  uint64_t v7 = sub_10017DF08(&qword_100E639E8);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_100162824();
  __chkstk_darwin(v9);
  sub_100182F0C();
  sub_100183ED4();
  sub_1001820B0();
  uint64_t v10 = type metadata accessor for Location();
  sub_1001638F0(v10);
  if (!v11)
  {
    sub_100162880();
    uint64_t v23 = sub_100185C08();
    v24(v23);
LABEL_5:
    sub_100179F2C();
    return;
  }
  sub_100178254(v1, &qword_100E639E8);
  sub_100172420();
  sub_10019D8A0();
  if (!v11)
  {
    uint64_t v12 = CLLocationCoordinate2D.id.getter();
    uint64_t v14 = sub_10017D46C(v12, v13);
    v15(v14);
    uint64_t v16 = type metadata accessor for Date();
    _s7Weather24LocationCompositionStateOwst_0(v0, 1, 1, v16);
    sub_10019F0F4();
    sub_100185578();
    uint64_t v17 = sub_10018171C();
    v18(v17);
    sub_100162880();
    uint64_t v19 = sub_1001893C0();
    v20(v19);
    uint64_t v21 = sub_100180398();
    sub_10018B104(v21, v22, &qword_100E639E8);
    swift_endAccess();
    goto LABEL_5;
  }
  __break(1u);
}

uint64_t sub_1007A1B10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_100109370();
  uint64_t v7 = sub_10017DF08(&qword_100E66430);
  sub_100162880();
  __chkstk_darwin(v8);
  sub_10016279C();
  uint64_t v9 = sub_10017DF08(&qword_100E94A40);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  char v15 = (char *)&v44 - v14;
  uint64_t v16 = v1 + OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos8Fall2024____lazy_storage___locations;
  sub_100126024();
  sub_1007A3B74(v16, (uint64_t)v15, &qword_100E94A40);
  uint64_t v53 = v7;
  sub_10012B520((uint64_t)v15, 1, v7);
  if (v17)
  {
    sub_100178254((uint64_t)v15, &qword_100E94A40);
    sub_1007A1454();
    uint64_t v18 = type metadata accessor for CurrentLocation();
    swift_storeEnumTagMultiPayload();
    sub_1001093B0();
    _s7Weather24LocationCompositionStateOwst_0(v19, v20, v21, v18);
    sub_10017DF08(&qword_100E94A48);
    type metadata accessor for SavedLocation();
    sub_10017FC70();
    uint64_t v52 = a1;
    uint64_t v51 = v2;
    uint64_t v50 = swift_allocObject();
    *(_OWORD *)(v50 + 16) = xmmword_100C25ED0;
    sub_1007A16B0();
    sub_100186B98();
    sub_1007A18E4();
    sub_100186B98();
    sub_10017DF08(&qword_100E92850);
    uint64_t v47 = v3;
    type metadata accessor for LocationModel();
    sub_10017C83C();
    uint64_t v49 = v12;
    uint64_t v23 = v22;
    unint64_t v26 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    uint64_t v45 = *(void *)(v24 + 72);
    uint64_t v25 = v45;
    uint64_t v27 = swift_allocObject();
    uint64_t v46 = v27;
    *(_OWORD *)(v27 + 16) = xmmword_100C33BA0;
    uint64_t v48 = v16;
    unint64_t v28 = v27 + v26;
    uint64_t v29 = v27 + v26 + *(int *)(sub_10017DF08(&qword_100E63878) + 48);
    sub_1007A1454();
    swift_storeEnumTagMultiPayload();
    type metadata accessor for LocationOfInterest();
    sub_10012B5A0(v29);
    uint64_t v30 = *(void (**)(void))(v23 + 104);
    sub_100187244();
    v30();
    uint64_t v31 = sub_10017DF08(&qword_100E63870);
    uint64_t v32 = v28 + v25 + *(int *)(v31 + 48);
    sub_1007A16B0();
    sub_100186B98();
    sub_10012B5A0(v32);
    sub_100187244();
    v30();
    uint64_t v33 = v28 + 2 * v45 + *(int *)(v31 + 48);
    sub_1007A18E4();
    sub_100186B98();
    uint64_t v34 = v33;
    a1 = v52;
    sub_10012B5A0(v34);
    sub_100187244();
    v30();
    type metadata accessor for LocationDisplayContext();
    Dictionary.init(dictionaryLiteral:)();
    Swift::String v35 = v51;
    sub_10019DF10();
    uint64_t v36 = type metadata accessor for LocationsState();
    sub_100182F60(v36);
    uint64_t v37 = (uint64_t)v35;
    char v15 = v35;
    uint64_t v38 = (uint64_t)v49;
    sub_1007A3B74(v37, (uint64_t)v49, &qword_100E66430);
    sub_1001093B0();
    _s7Weather24LocationCompositionStateOwst_0(v39, v40, v41, v53);
    uint64_t v42 = v48;
    sub_100182350();
    sub_1007A3BC0(v38, v42, &qword_100E94A40);
    swift_endAccess();
  }
  return sub_1007A3B28((uint64_t)v15, a1, &qword_100E66430);
}

uint64_t sub_1007A1F6C(uint64_t a1, unint64_t a2)
{
  type metadata accessor for DemoDataProvider();
  swift_allocObject();
  DemoDataProvider.init()();
  uint64_t v4 = DemoDataProvider.demoData(named:subdirectory:)();
  unint64_t v6 = v5;
  swift_release();
  if (v6 >> 60 == 15)
  {
    if (qword_100E627B0 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_1002102B0(v7, (uint64_t)qword_100F51E28);
    swift_bridgeObjectRetain_n();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      v12[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136446210;
      swift_bridgeObjectRetain();
      v12[4] = sub_10016414C(a1, a2, v12);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Could not load preset data with name = %{public}s", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  else
  {
    type metadata accessor for JSONDecoder();
    swift_allocObject();
    JSONDecoder.init()();
    sub_1002E8130();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    sub_1003FC164(v4, v6);
    swift_release();
    return v12[0];
  }
}

uint64_t sub_1007A2428()
{
  return _s5DemosO8Fall2024CMa(0);
}

uint64_t sub_1007A2430()
{
  return sub_10000C04C();
}

uint64_t sub_1007A2454@<X0>(uint64_t a1@<X8>)
{
  return sub_1007A1B10(a1);
}

uint64_t sub_1007A2478@<X0>(uint64_t a1@<X8>)
{
  return sub_1007A3364(&OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos8Fall2024____lazy_storage___timeState, a1);
}

uint64_t sub_1007A24AC(uint64_t a1, uint64_t a2)
{
  return sub_1007A3A5C(a1, a2, &OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos8Fall2024____lazy_storage___weatherDataState, 0x2D6F6D65642D6763, 0xEE00746573657270);
}

uint64_t sub_1007A24D8()
{
  return sub_1007A35F4(&OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos8Fall2024____lazy_storage___preset);
}

unint64_t sub_1007A2504()
{
  if (*(void *)(v0 + 24))
  {
    unint64_t v1 = *(void *)(v0 + 16);
  }
  else
  {
    unint64_t v1 = 0xD000000000000011;
    *(void *)(v0 + 16) = 0xD000000000000011;
    *(void *)(v0 + 24) = 0x8000000100CB21A0;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1007A2570()
{
  uint64_t v4 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_10011C760();
  uint64_t v6 = sub_10017DF08(&qword_100E6D1D8);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_10016279C();
  uint64_t v8 = sub_10017DF08(&qword_100E639E8);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_100162758();
  __chkstk_darwin(v10);
  uint64_t v12 = &v23[-v11];
  uint64_t v13 = v0 + OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos10Winter2024____lazy_storage___currentLocation;
  sub_100126024();
  sub_1007A3B74(v13, (uint64_t)v12, &qword_100E639E8);
  uint64_t v14 = type metadata accessor for Location();
  sub_10012B520((uint64_t)v12, 1, v14);
  if (v15)
  {
    sub_100178254((uint64_t)v12, &qword_100E639E8);
    static Location.currentLocationID.getter();
    sub_10018C4F8();
    uint64_t v16 = type metadata accessor for TimeZone();
    uint64_t result = sub_10012B520(v2, 1, v16);
    if (v15)
    {
      __break(1u);
    }
    else
    {
      static CLLocationCoordinate2D.losAngeles.getter();
      uint64_t v17 = type metadata accessor for Date();
      _s7Weather24LocationCompositionStateOwst_0(v3, 1, 1, v17);
      sub_100188774();
      sub_100163F80();
      sub_100162880();
      uint64_t v18 = sub_100188B4C();
      v19(v18);
      sub_10017B380();
      sub_100182350();
      sub_1007A3BC0(v1, v13, &qword_100E639E8);
      return swift_endAccess();
    }
  }
  else
  {
    sub_100162880();
    uint64_t v20 = sub_100183574();
    return v21(v20);
  }
  return result;
}

void sub_1007A27DC()
{
  sub_100165170();
  uint64_t v2 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_1001D1DAC();
  sub_10017C83C();
  __chkstk_darwin(v4);
  sub_100162F18();
  uint64_t v5 = sub_10017DF08(&qword_100E6D1D8);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_10011C760();
  uint64_t v7 = sub_10017DF08(&qword_100E639E8);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_100162824();
  __chkstk_darwin(v9);
  sub_100182F0C();
  sub_100183ED4();
  sub_1001820B0();
  uint64_t v10 = type metadata accessor for Location();
  sub_1001638F0(v10);
  if (!v11)
  {
    sub_100162880();
    uint64_t v23 = sub_100185C08();
    v24(v23);
LABEL_5:
    sub_100179F2C();
    return;
  }
  sub_100178254(v1, &qword_100E639E8);
  TimeZone.init(identifier:)();
  sub_10019D8A0();
  if (!v11)
  {
    static CLLocationCoordinate2D.amsterdam.getter();
    uint64_t v12 = CLLocationCoordinate2D.id.getter();
    uint64_t v14 = sub_10017D46C(v12, v13);
    v15(v14);
    uint64_t v16 = type metadata accessor for Date();
    _s7Weather24LocationCompositionStateOwst_0(v0, 1, 1, v16);
    sub_10019F0F4();
    sub_100185578();
    uint64_t v17 = sub_10018171C();
    v18(v17);
    sub_100162880();
    uint64_t v19 = sub_1001893C0();
    v20(v19);
    uint64_t v21 = sub_100180398();
    sub_10018B104(v21, v22, &qword_100E639E8);
    swift_endAccess();
    goto LABEL_5;
  }
  __break(1u);
}

void sub_1007A2A1C()
{
  sub_100165170();
  uint64_t v2 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_1001D1DAC();
  sub_10017C83C();
  __chkstk_darwin(v4);
  sub_100162F18();
  uint64_t v5 = sub_10017DF08(&qword_100E6D1D8);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_10011C760();
  uint64_t v7 = sub_10017DF08(&qword_100E639E8);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_100162824();
  __chkstk_darwin(v9);
  sub_100182F0C();
  sub_100183ED4();
  sub_1001820B0();
  uint64_t v10 = type metadata accessor for Location();
  sub_1001638F0(v10);
  if (!v11)
  {
    sub_100162880();
    uint64_t v23 = sub_100185C08();
    v24(v23);
LABEL_5:
    sub_100179F2C();
    return;
  }
  sub_100178254(v1, &qword_100E639E8);
  TimeZone.init(identifier:)();
  sub_10019D8A0();
  if (!v11)
  {
    static CLLocationCoordinate2D.london.getter();
    uint64_t v12 = CLLocationCoordinate2D.id.getter();
    uint64_t v14 = sub_10017D46C(v12, v13);
    v15(v14);
    uint64_t v16 = type metadata accessor for Date();
    _s7Weather24LocationCompositionStateOwst_0(v0, 1, 1, v16);
    sub_10019F0F4();
    sub_100185578();
    uint64_t v17 = sub_10018171C();
    v18(v17);
    sub_100162880();
    uint64_t v19 = sub_1001893C0();
    v20(v19);
    uint64_t v21 = sub_100180398();
    sub_10018B104(v21, v22, &qword_100E639E8);
    swift_endAccess();
    goto LABEL_5;
  }
  __break(1u);
}

void sub_1007A2C5C()
{
  sub_100165170();
  uint64_t v2 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_1001D1DAC();
  sub_10017C83C();
  __chkstk_darwin(v4);
  sub_100162F18();
  uint64_t v5 = sub_10017DF08(&qword_100E6D1D8);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_10011C760();
  uint64_t v7 = sub_10017DF08(&qword_100E639E8);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_100162824();
  __chkstk_darwin(v9);
  sub_100182F0C();
  sub_100183ED4();
  sub_1001820B0();
  uint64_t v10 = type metadata accessor for Location();
  sub_1001638F0(v10);
  if (!v11)
  {
    sub_100162880();
    uint64_t v23 = sub_100185C08();
    v24(v23);
LABEL_5:
    sub_100179F2C();
    return;
  }
  sub_100178254(v1, &qword_100E639E8);
  TimeZone.init(identifier:)();
  sub_10019D8A0();
  if (!v11)
  {
    static CLLocationCoordinate2D.tokyo.getter();
    uint64_t v12 = CLLocationCoordinate2D.id.getter();
    uint64_t v14 = sub_10017D46C(v12, v13);
    v15(v14);
    uint64_t v16 = type metadata accessor for Date();
    _s7Weather24LocationCompositionStateOwst_0(v0, 1, 1, v16);
    sub_10019F0F4();
    sub_100185578();
    uint64_t v17 = sub_10018171C();
    v18(v17);
    sub_100162880();
    uint64_t v19 = sub_1001893C0();
    v20(v19);
    uint64_t v21 = sub_100180398();
    sub_10018B104(v21, v22, &qword_100E639E8);
    swift_endAccess();
    goto LABEL_5;
  }
  __break(1u);
}

uint64_t sub_1007A2E94@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_100109370();
  uint64_t v7 = sub_10017DF08(&qword_100E66430);
  sub_100162880();
  __chkstk_darwin(v8);
  sub_10016279C();
  uint64_t v9 = sub_10017DF08(&qword_100E94A40);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  uint64_t v57 = (uint64_t)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v46 - v13;
  uint64_t v15 = v1 + OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos10Winter2024____lazy_storage___locations;
  sub_100126024();
  sub_1007A3B74(v15, (uint64_t)v14, &qword_100E94A40);
  sub_10012B520((uint64_t)v14, 1, v7);
  if (v16)
  {
    sub_100178254((uint64_t)v14, &qword_100E94A40);
    sub_1007A2570();
    uint64_t v17 = type metadata accessor for CurrentLocation();
    uint64_t v54 = v15;
    uint64_t v18 = v17;
    swift_storeEnumTagMultiPayload();
    sub_1001093B0();
    _s7Weather24LocationCompositionStateOwst_0(v19, v20, v21, v18);
    sub_10017DF08(&qword_100E94A48);
    uint64_t v48 = type metadata accessor for SavedLocation();
    sub_10017FC70();
    uint64_t v55 = a1;
    uint64_t v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_100C33BA0;
    sub_1007A27DC();
    sub_100186B98();
    sub_1007A2A1C();
    sub_100186B98();
    sub_1007A2C5C();
    sub_100186B98();
    sub_10017DF08(&qword_100E92850);
    uint64_t v56 = type metadata accessor for LocationModel();
    sub_10017C83C();
    uint64_t v52 = v3;
    uint64_t v23 = v22;
    unint64_t v25 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    uint64_t v26 = *(void *)(v24 + 72);
    uint64_t v27 = swift_allocObject();
    uint64_t v51 = v27;
    *(_OWORD *)(v27 + 16) = xmmword_100C31870;
    unint64_t v28 = v27 + v25;
    uint64_t v29 = *(int *)(sub_10017DF08(&qword_100E63878) + 48);
    uint64_t v50 = v2;
    uint64_t v30 = v28 + v29;
    sub_1007A2570();
    swift_storeEnumTagMultiPayload();
    type metadata accessor for LocationOfInterest();
    sub_100162B80(v30);
    uint64_t v31 = *(void (**)(void))(v23 + 104);
    sub_1001911E4();
    v31();
    uint64_t v47 = v26;
    uint64_t v32 = sub_10017DF08(&qword_100E63870);
    uint64_t v33 = *(int *)(v32 + 48);
    uint64_t v49 = v7;
    uint64_t v34 = v28 + v26 + v33;
    sub_1007A27DC();
    sub_100186B98();
    sub_100162B80(v34);
    sub_1001911E4();
    v31();
    uint64_t v35 = v28 + 2 * v26 + *(int *)(v32 + 48);
    sub_1007A2A1C();
    sub_100186B98();
    sub_100162B80(v35);
    sub_1001911E4();
    v31();
    uint64_t v36 = v28 + 3 * v47 + *(int *)(v32 + 48);
    sub_1007A2C5C();
    sub_100186B98();
    uint64_t v37 = v36;
    a1 = v55;
    sub_100162B80(v37);
    sub_1001911E4();
    v31();
    type metadata accessor for LocationDisplayContext();
    Dictionary.init(dictionaryLiteral:)();
    uint64_t v38 = v50;
    sub_10019DF10();
    uint64_t v39 = type metadata accessor for LocationsState();
    sub_100182F60(v39);
    uint64_t v40 = v57;
    sub_1007A3B74(v38, v57, &qword_100E66430);
    sub_1001093B0();
    _s7Weather24LocationCompositionStateOwst_0(v41, v42, v43, v49);
    uint64_t v44 = v54;
    sub_100182350();
    sub_1007A3BC0(v40, v44, &qword_100E94A40);
    swift_endAccess();
    uint64_t v14 = (char *)v38;
  }
  return sub_1007A3B28((uint64_t)v14, a1, &qword_100E66430);
}

uint64_t sub_1007A3364@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v7 = sub_10017DF08(&qword_100E66420);
  sub_100162880();
  __chkstk_darwin(v8);
  sub_10011C760();
  uint64_t v9 = sub_10017DF08(&qword_100E94A38);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_100162824();
  __chkstk_darwin(v11);
  uint64_t v13 = &v21[-v12];
  uint64_t v14 = v2 + *a1;
  sub_100126024();
  sub_1007A3B74(v14, (uint64_t)v13, &qword_100E94A38);
  sub_10012B520((uint64_t)v13, 1, v7);
  if (v15)
  {
    sub_100178254((uint64_t)v13, &qword_100E94A38);
    Date.init(timeIntervalSinceReferenceDate:)();
    uint64_t v16 = type metadata accessor for TimeState();
    _s7Weather24LocationCompositionStateOwst_0(v4, 0, 1, v16);
    sub_1007A3B74(v4, v3, &qword_100E66420);
    sub_1001093B0();
    _s7Weather24LocationCompositionStateOwst_0(v17, v18, v19, v7);
    sub_100182350();
    sub_1007A3BC0(v3, v14, &qword_100E94A38);
    swift_endAccess();
    uint64_t v13 = (unsigned char *)v4;
  }
  return sub_1007A3B28((uint64_t)v13, a2, &qword_100E66420);
}

uint64_t sub_1007A3518(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = (uint64_t *)(v3 + *a1);
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  uint64_t v7 = *v4;
  if (v6 == 1)
  {
    uint64_t v7 = sub_1007A1F6C(a2, a3);
    uint64_t v8 = v4[1];
    uint64_t v13 = *v4;
    *uint64_t v4 = v7;
    v4[1] = v9;
    v4[2] = v10;
    v4[3] = v11;
    sub_10016EC5C(v7, v9);
    sub_1000AEB6C(v13, v8);
  }
  sub_1007A3B18(v5, v6);
  return v7;
}

uint64_t sub_1007A35F4(void *a1)
{
  uint64_t v2 = *(void *)(v1 + *a1);
  uint64_t v3 = v2;
  if (v2 == 1)
  {
    *(void *)(v1 + *a1) = 0;
    sub_1000AEB7C(1);
    uint64_t v3 = 0;
  }
  sub_1007A3AB8(v2);
  return v3;
}

uint64_t sub_1007A3648()
{
  swift_bridgeObjectRelease();
  sub_100178254(v0 + OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos10Winter2024____lazy_storage___currentLocation, &qword_100E639E8);
  sub_1001844EC(OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos10Winter2024____lazy_storage___amsterdamLocation);
  sub_1001844EC(OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos10Winter2024____lazy_storage___londonLocation);
  sub_1001844EC(OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos10Winter2024____lazy_storage___tokyoLocation);
  sub_100178254(v0 + OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos10Winter2024____lazy_storage___locations, &qword_100E94A40);
  sub_100178254(v0 + OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos10Winter2024____lazy_storage___timeState, &qword_100E94A38);
  sub_1000AEB6C(*(void *)(v0 + OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos10Winter2024____lazy_storage___weatherDataState), *(void *)(v0 + OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos10Winter2024____lazy_storage___weatherDataState + 8));
  sub_1000AEB7C(*(void *)(v0 + OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos10Winter2024____lazy_storage___preset));
  return v0;
}

uint64_t sub_1007A3708()
{
  return sub_1007A3720((void (*)(void))sub_1007A3648);
}

uint64_t sub_1007A3720(void (*a1)(void))
{
  a1();

  return swift_deallocClassInstance();
}

uint64_t sub_1007A377C()
{
  return _s5DemosO10Winter2024CMa(0);
}

uint64_t _s5DemosO10Winter2024CMa(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E94970);
}

void sub_1007A37A4()
{
  sub_100011588();
  if (v0 <= 0x3F)
  {
    sub_100017E34(319, &qword_100E94848, &qword_100E66430);
    if (v1 <= 0x3F)
    {
      sub_100017E34(319, (unint64_t *)&unk_100E94850, &qword_100E66420);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t sub_1007A38EC()
{
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0;
  uint64_t v2 = type metadata accessor for Location();
  sub_10019B5F4(v2);
  sub_1001A33BC(OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos10Winter2024____lazy_storage___amsterdamLocation);
  sub_1001A33BC(OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos10Winter2024____lazy_storage___londonLocation);
  sub_1001A33BC(OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos10Winter2024____lazy_storage___tokyoLocation);
  uint64_t v3 = sub_10017DF08(&qword_100E66430);
  sub_1001633C8(v3);
  uint64_t v4 = sub_10017DF08(&qword_100E66420);
  sub_1001633C8(v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos10Winter2024____lazy_storage___weatherDataState;
  *(_OWORD *)uint64_t v5 = xmmword_100C3E060;
  *(void *)(v5 + 16) = 0;
  *(void *)(v5 + 24) = 0;
  *(void *)(v0 + OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos10Winter2024____lazy_storage___preset) = v1;
  return v0;
}

unint64_t sub_1007A39B4()
{
  return sub_1007A2504();
}

uint64_t sub_1007A39D8@<X0>(uint64_t a1@<X8>)
{
  return sub_1007A2E94(a1);
}

uint64_t sub_1007A39FC@<X0>(uint64_t a1@<X8>)
{
  return sub_1007A3364(&OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos10Winter2024____lazy_storage___timeState, a1);
}

uint64_t sub_1007A3A30(uint64_t a1, uint64_t a2)
{
  return sub_1007A3A5C(a1, a2, &OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos10Winter2024____lazy_storage___weatherDataState, 0x6F6D65642D636763, 0xEF7465736572702DLL);
}

uint64_t sub_1007A3A5C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5)
{
  return sub_1007A3518(a3, a4, a5);
}

uint64_t sub_1007A3A8C()
{
  return sub_1007A35F4(&OBJC_IVAR____TtCOO7Weather10DemoPreset5Demos10Winter2024____lazy_storage___preset);
}

uint64_t sub_1007A3AB8(uint64_t result)
{
  if (result != 1) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1007A3AC8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1007A3B18(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return sub_10016EC5C(a1, a2);
  }
  return a1;
}

uint64_t sub_1007A3B28(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100163E60(a1, a2, a3);
  sub_100162880();
  uint64_t v4 = sub_10016518C();
  v5(v4);
  return v3;
}

uint64_t sub_1007A3B74(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100163E60(a1, a2, a3);
  sub_100162880();
  uint64_t v4 = sub_10016518C();
  v5(v4);
  return v3;
}

uint64_t sub_1007A3BC0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100163E60(a1, a2, a3);
  sub_100162880();
  uint64_t v4 = sub_10016518C();
  v5(v4);
  return v3;
}

uint64_t Settings.TappableModulesTipStore.set<A>(setting:value:)()
{
  sub_1001359E4(&qword_100E94AF8);

  return Updatable.save<A>(setting:value:)();
}

uint64_t type metadata accessor for Settings.TappableModulesTipStore()
{
  return self;
}

uint64_t sub_1007A3D18()
{
  return sub_1001359E4(&qword_100E94B00);
}

uint64_t _s18TappableModulesTipV13TipsOverridesCMa(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E94BA0);
}

uint64_t sub_1007A3D6C()
{
  return sub_1007A3E70();
}

uint64_t sub_1007A3D7C(uint64_t a1)
{
  return sub_1001880EC(a1, 62, 0x8000000100CB2420, &qword_100F51B78);
}

uint64_t sub_1007A3D9C(uint64_t a1)
{
  return sub_1001880EC(a1, 65, 0x8000000100CB23D0, &qword_100F51B80);
}

uint64_t sub_1007A3DBC(uint64_t a1)
{
  return sub_1001880EC(a1, 55, 0x8000000100CB2390, &qword_100F51B88);
}

uint64_t sub_1007A3DDC(uint64_t a1)
{
  return sub_1001880EC(a1, 59, 0x8000000100CB2350, &qword_100F51B90);
}

uint64_t sub_1007A3DFC(uint64_t a1)
{
  return sub_1001880EC(a1, 59, 0x8000000100CB22D0, &qword_100F51B98);
}

uint64_t sub_1007A3E1C(uint64_t a1)
{
  return sub_1001880EC(a1, 56, 0x8000000100CB2310, &qword_100F51BA0);
}

uint64_t sub_1007A3E3C()
{
  return _s18TappableModulesTipV13TipsOverridesCMa(0);
}

uint64_t _s18TappableModulesTipV11TipsFiltersCMa(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E94BF0);
}

uint64_t sub_1007A3E64()
{
  return sub_1007A3E70();
}

uint64_t sub_1007A3E70()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1007A3EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = type metadata accessor for Access();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  swift_allocObject();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v11, a4, v5);
  uint64_t v12 = SettingGroup.init(key:defaultValue:access:)();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a4, v5);
  return v12;
}

uint64_t sub_1007A3FA4()
{
  SettingGroup.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1007A3FD4()
{
  return _s18TappableModulesTipV11TipsFiltersCMa(0);
}

uint64_t sub_1007A3FDC(uint64_t a1)
{
  return sub_1001880EC(a1, 49, 0x8000000100CB2490, &qword_100F51BD8);
}

uint64_t sub_1007A3FFC(uint64_t a1)
{
  return sub_1001880EC(a1, 53, 0x8000000100CB24D0, &qword_100F51BE0);
}

uint64_t sub_1007A401C(uint64_t a1)
{
  return sub_1001880EC(a1, 46, 0x8000000100CB2460, &qword_100F51BE8);
}

uint64_t sub_1007A403C(uint64_t a1)
{
  return sub_1001880EC(a1, 46, 0x8000000100CB26A0, &qword_100F51BF0);
}

uint64_t sub_1007A405C(uint64_t a1)
{
  return sub_1007A40C4(a1, (void (*)(void))_s18TappableModulesTipV13TipsOverridesCMa, (uint64_t (*)(void, void, void, uint64_t))sub_1007A3D78, &qword_100F51BF8);
}

uint64_t sub_1007A4090(uint64_t a1)
{
  return sub_1007A40C4(a1, (void (*)(void))_s18TappableModulesTipV11TipsFiltersCMa, (uint64_t (*)(void, void, void, uint64_t))sub_1007A3D78, &qword_100F51C00);
}

uint64_t sub_1007A40C4(uint64_t a1, void (*a2)(void), uint64_t (*a3)(void, void, void, uint64_t), uint64_t *a4)
{
  uint64_t v7 = type metadata accessor for Access();
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  a2(0);
  (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v13, enum case for Access.protected(_:), v7);
  uint64_t result = a3(0, 0, 0, v13);
  *a4 = result;
  return result;
}

char *sub_1007A419C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (char *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v34 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = (char *)(v34 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = (int *)type metadata accessor for ChartViewModel(0);
    uint64_t v9 = v8[5];
    uint64_t v10 = &v4[v9];
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for ChartKind();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    *(void *)&v4[v8[6]] = *(uint64_t *)((char *)a2 + v8[6]);
    uint64_t v14 = v8[7];
    char v15 = &v4[v14];
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = type metadata accessor for DetailChartExtrema();
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    v18(v15, v16, v17);
    *(void *)&v4[v8[8]] = *(uint64_t *)((char *)a2 + v8[8]);
    *(void *)&v4[v8[9]] = *(uint64_t *)((char *)a2 + v8[9]);
    *(_OWORD *)&v4[v8[10]] = *(_OWORD *)((char *)a2 + v8[10]);
    uint64_t v19 = v8[11];
    uint64_t v20 = &v4[v19];
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = *(void **)v21;
    uint64_t v23 = (void *)*((void *)v21 + 1);
    uint64_t v24 = *((void *)v21 + 2);
    unsigned __int8 v25 = v21[24];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10027D4F8(v22, v23, v24, v25);
    *(void *)uint64_t v20 = v22;
    *((void *)v20 + 1) = v23;
    *((void *)v20 + 2) = v24;
    v20[24] = v25;
    uint64_t v26 = v8[12];
    uint64_t v27 = &v4[v26];
    unint64_t v28 = (char *)a2 + v26;
    *(void *)&v4[v26] = *(uint64_t *)((char *)a2 + v26);
    uint64_t v29 = *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
    uint64_t v30 = &v27[v29];
    uint64_t v31 = &v28[v29];
    uint64_t v32 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v32))
    {
      uint64_t v33 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v32);
    }
    uint64_t v35 = v8[13];
    uint64_t v36 = &v4[v35];
    uint64_t v37 = (char *)a2 + v35;
    *(void *)uint64_t v36 = *(void *)v37;
    v36[8] = v37[8];
    uint64_t v38 = v8[14];
    uint64_t v39 = &v4[v38];
    uint64_t v40 = (uint64_t *)((char *)a2 + v38);
    uint64_t v41 = sub_10017DF08(&qword_100E6BF10);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
    {
      uint64_t v42 = type metadata accessor for ChartViewModel.Background(0);
      memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v39 = *v40;
      uint64_t v43 = *(int *)(v41 + 48);
      uint64_t v44 = &v39[v43];
      uint64_t v45 = (char *)v40 + v43;
      swift_retain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v32))
      {
        uint64_t v46 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v44, v45, v32);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v32);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
    }
    *(void *)&v4[v8[15]] = *(uint64_t *)((char *)a2 + v8[15]);
    uint64_t v47 = v8[16];
    uint64_t v48 = &v4[v47];
    uint64_t v49 = (char *)a2 + v47;
    uint64_t v50 = type metadata accessor for ChartDarkeningScrim();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
    *(void *)&v4[v8[17]] = *(uint64_t *)((char *)a2 + v8[17]);
    uint64_t v51 = v8[18];
    uint64_t v52 = &v4[v51];
    uint64_t v53 = (char *)a2 + v51;
    uint64_t v54 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
    swift_bridgeObjectRetain();
    v54(v52, v53, v32);
    v54(&v4[v8[19]], (char *)a2 + v8[19], v32);
    v54(&v4[v8[20]], (char *)a2 + v8[20], v32);
    uint64_t v55 = v8[21];
    uint64_t v56 = &v4[v55];
    uint64_t v57 = (char *)a2 + v55;
    uint64_t v58 = type metadata accessor for DetailChartDataElement();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v58))
    {
      uint64_t v59 = sub_10017DF08(&qword_100E6B640);
      memcpy(v56, v57, *(void *)(*(void *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v56, 0, 1, v58);
    }
    *(void *)&v4[v8[22]] = *(uint64_t *)((char *)a2 + v8[22]);
    uint64_t v60 = v8[23];
    uint64_t v61 = &v4[v60];
    uint64_t v62 = (char *)a2 + v60;
    uint64_t v63 = type metadata accessor for ChartPeakMarkStyle();
    uint64_t v64 = *(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16);
    swift_bridgeObjectRetain();
    v64(v61, v62, v63);
    *(void *)&v4[v8[24]] = *(uint64_t *)((char *)a2 + v8[24]);
    *(void *)&v4[v8[25]] = *(uint64_t *)((char *)a2 + v8[25]);
    uint64_t v65 = v8[26];
    uint64_t v66 = &v4[v65];
    uint64_t v67 = (char *)a2 + v65;
    uint64_t v68 = type metadata accessor for ChartViewModelInterpolationMode();
    uint64_t v69 = *(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16);
    swift_bridgeObjectRetain();
    v69(v66, v67, v68);
    uint64_t v70 = v8[27];
    uint64_t v71 = &v4[v70];
    uint64_t v72 = (char *)a2 + v70;
    uint64_t v73 = type metadata accessor for ChartPastDataTreatment();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
    uint64_t v74 = v8[28];
    uint64_t v75 = &v4[v74];
    uint64_t v76 = (uint64_t *)((char *)a2 + v74);
    uint64_t v77 = v76[1];
    *(void *)uint64_t v75 = *v76;
    *((void *)v75 + 1) = v77;
    uint64_t v78 = v8[29];
    uint64_t v79 = &v4[v78];
    uint64_t v80 = (uint64_t *)((char *)a2 + v78);
    uint64_t v125 = v80[1];
    *(void *)uint64_t v79 = *v80;
    *((void *)v79 + 1) = v125;
    uint64_t v81 = v8[30];
    uint64_t v82 = &v4[v81];
    uint64_t v83 = (uint64_t *)((char *)a2 + v81);
    uint64_t v84 = v83[1];
    *(void *)uint64_t v82 = *v83;
    *((void *)v82 + 1) = v84;
    uint64_t v85 = v8[31];
    uint64_t v86 = &v4[v85];
    uint64_t v87 = (uint64_t *)((char *)a2 + v85);
    uint64_t v88 = v87[1];
    *(void *)uint64_t v86 = *v87;
    *((void *)v86 + 1) = v88;
    uint64_t v89 = v8[32];
    uint64_t v90 = &v4[v89];
    uint64_t v91 = (uint64_t *)((char *)a2 + v89);
    uint64_t v92 = v91[1];
    *(void *)uint64_t v90 = *v91;
    *((void *)v90 + 1) = v92;
    uint64_t v93 = v8[33];
    char v94 = &v4[v93];
    uint64_t v95 = (uint64_t *)((char *)a2 + v93);
    uint64_t v96 = v95[1];
    *(void *)char v94 = *v95;
    *((void *)v94 + 1) = v96;
    uint64_t v97 = a3[5];
    uint64_t v98 = a3[6];
    uint64_t v99 = &v4[v97];
    uint64_t v100 = (_OWORD *)((char *)a2 + v97);
    long long v101 = v100[1];
    *(_OWORD *)uint64_t v99 = *v100;
    *((_OWORD *)v99 + 1) = v101;
    *(void *)&v4[v98] = *(uint64_t *)((char *)a2 + v98);
    uint64_t v102 = a3[7];
    uint64_t v103 = &v4[v102];
    uint64_t v126 = a3;
    uint64_t v104 = (char *)a2 + v102;
    long long v105 = *(_OWORD *)((char *)a2 + v102 + 24);
    *(_OWORD *)&v4[v102 + 24] = v105;
    uint64_t v106 = v105;
    uint64_t v124 = **(void (***)(char *, char *, uint64_t))(v105 - 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    v124(v103, v104, v106);
    uint64_t v107 = v126[8];
    uint64_t v108 = &v4[v107];
    uint64_t v109 = (char *)a2 + v107;
    uint64_t v110 = *(void *)v109;
    LOBYTE(v96) = v109[8];
    sub_100195B7C(*(void *)v109, v96);
    *(void *)uint64_t v108 = v110;
    v108[8] = v96;
    uint64_t v111 = v126[9];
    uint64_t v112 = &v4[v111];
    uint64_t v113 = (uint64_t *)((char *)a2 + v111);
    sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v114 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v114 - 8) + 16))(v112, v113, v114);
    }
    else
    {
      *(void *)uint64_t v112 = *v113;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v115 = v126[10];
    uint64_t v116 = &v4[v115];
    uint64_t v117 = (uint64_t *)((char *)a2 + v115);
    sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v118 = type metadata accessor for LayoutDirection();
      (*(void (**)(char *, void *, uint64_t))(*(void *)(v118 - 8) + 16))(v116, v117, v118);
    }
    else
    {
      *(void *)uint64_t v116 = *v117;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v119 = v126[11];
    uint64_t v120 = &v4[v119];
    uint64_t v121 = (char *)a2 + v119;
    uint64_t v122 = type metadata accessor for Text.Measurements();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 16))(v120, v121, v122);
  }
  return v4;
}

uint64_t sub_1007A4ABC(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = (int *)type metadata accessor for ChartViewModel(0);
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = type metadata accessor for ChartKind();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + v4[7];
  uint64_t v8 = type metadata accessor for DetailChartExtrema();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10027D954(*(void **)(a1 + v4[11]), *(void **)(a1 + v4[11] + 8), *(void *)(a1 + v4[11] + 16), *(unsigned char *)(a1 + v4[11] + 24));
  uint64_t v9 = a1 + v4[12];
  uint64_t v10 = v9 + *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  uint64_t v11 = type metadata accessor for Date();
  if (!_s7Weather24LocationCompositionStateOwet_0(v10, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  uint64_t v12 = a1 + v4[14];
  uint64_t v13 = sub_10017DF08(&qword_100E6BF10);
  if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v13))
  {
    swift_release();
    uint64_t v14 = v12 + *(int *)(v13 + 48);
    if (!_s7Weather24LocationCompositionStateOwet_0(v14, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v14, v11);
    }
  }
  uint64_t v15 = a1 + v4[16];
  uint64_t v16 = type metadata accessor for ChartDarkeningScrim();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
  v17(a1 + v4[18], v11);
  v17(a1 + v4[19], v11);
  v17(a1 + v4[20], v11);
  uint64_t v18 = a1 + v4[21];
  uint64_t v19 = type metadata accessor for DetailChartDataElement();
  if (!_s7Weather24LocationCompositionStateOwet_0(v18, 1, v19)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  }
  swift_bridgeObjectRelease();
  uint64_t v20 = a1 + v4[23];
  uint64_t v21 = type metadata accessor for ChartPeakMarkStyle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
  swift_bridgeObjectRelease();
  uint64_t v22 = a1 + v4[26];
  uint64_t v23 = type metadata accessor for ChartViewModelInterpolationMode();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
  uint64_t v24 = a1 + v4[27];
  uint64_t v25 = type metadata accessor for ChartPastDataTreatment();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + a2[7]);
  sub_10018F6D8(*(void *)(a1 + a2[8]), *(unsigned char *)(a1 + a2[8] + 8));
  uint64_t v26 = a1 + a2[9];
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v27 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
  }
  else
  {
    swift_release();
  }
  uint64_t v28 = a1 + a2[10];
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v29 = type metadata accessor for LayoutDirection();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v28, v29);
  }
  else
  {
    swift_release();
  }
  uint64_t v30 = a1 + a2[11];
  uint64_t v31 = type metadata accessor for Text.Measurements();
  uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8);

  return v32(v30, v31);
}

char *sub_1007A5030(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = (int *)type metadata accessor for ChartViewModel(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for ChartKind();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  *(void *)&a1[v7[6]] = *(void *)&a2[v7[6]];
  uint64_t v13 = v7[7];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = type metadata accessor for DetailChartExtrema();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
  swift_bridgeObjectRetain();
  v17(v14, v15, v16);
  *(void *)&a1[v7[8]] = *(void *)&a2[v7[8]];
  *(void *)&a1[v7[9]] = *(void *)&a2[v7[9]];
  *(_OWORD *)&a1[v7[10]] = *(_OWORD *)&a2[v7[10]];
  uint64_t v18 = v7[11];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = *(void **)v20;
  uint64_t v22 = (void *)*((void *)v20 + 1);
  uint64_t v23 = *((void *)v20 + 2);
  unsigned __int8 v24 = v20[24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10027D4F8(v21, v22, v23, v24);
  *(void *)uint64_t v19 = v21;
  *((void *)v19 + 1) = v22;
  *((void *)v19 + 2) = v23;
  v19[24] = v24;
  uint64_t v25 = v7[12];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  *(void *)&a1[v25] = *(void *)&a2[v25];
  uint64_t v28 = *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  uint64_t v29 = &v26[v28];
  uint64_t v30 = &v27[v28];
  uint64_t v31 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31))
  {
    uint64_t v32 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
  }
  uint64_t v33 = v7[13];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  *(void *)uint64_t v34 = *(void *)v35;
  v34[8] = v35[8];
  uint64_t v36 = v7[14];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  uint64_t v39 = sub_10017DF08(&qword_100E6BF10);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
  {
    uint64_t v40 = type metadata accessor for ChartViewModel.Background(0);
    memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v37 = *(void *)v38;
    uint64_t v41 = *(int *)(v39 + 48);
    uint64_t v42 = &v37[v41];
    uint64_t v43 = &v38[v41];
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v31))
    {
      uint64_t v44 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v42, v43, v31);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v31);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
  }
  *(void *)&a1[v7[15]] = *(void *)&a2[v7[15]];
  uint64_t v45 = v7[16];
  uint64_t v46 = &a1[v45];
  uint64_t v47 = &a2[v45];
  uint64_t v48 = type metadata accessor for ChartDarkeningScrim();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
  *(void *)&a1[v7[17]] = *(void *)&a2[v7[17]];
  uint64_t v49 = v7[18];
  uint64_t v50 = &a1[v49];
  uint64_t v51 = &a2[v49];
  uint64_t v52 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
  swift_bridgeObjectRetain();
  v52(v50, v51, v31);
  v52(&a1[v7[19]], &a2[v7[19]], v31);
  v52(&a1[v7[20]], &a2[v7[20]], v31);
  uint64_t v53 = v7[21];
  uint64_t v54 = &a1[v53];
  uint64_t v55 = &a2[v53];
  uint64_t v56 = type metadata accessor for DetailChartDataElement();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v55, 1, v56))
  {
    uint64_t v57 = sub_10017DF08(&qword_100E6B640);
    memcpy(v54, v55, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v54, 0, 1, v56);
  }
  *(void *)&a1[v7[22]] = *(void *)&a2[v7[22]];
  uint64_t v58 = v7[23];
  uint64_t v59 = &a1[v58];
  uint64_t v60 = &a2[v58];
  uint64_t v61 = type metadata accessor for ChartPeakMarkStyle();
  uint64_t v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16);
  swift_bridgeObjectRetain();
  v62(v59, v60, v61);
  *(void *)&a1[v7[24]] = *(void *)&a2[v7[24]];
  *(void *)&a1[v7[25]] = *(void *)&a2[v7[25]];
  uint64_t v63 = v7[26];
  uint64_t v64 = &a1[v63];
  uint64_t v65 = &a2[v63];
  uint64_t v66 = type metadata accessor for ChartViewModelInterpolationMode();
  uint64_t v67 = *(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16);
  swift_bridgeObjectRetain();
  v67(v64, v65, v66);
  uint64_t v68 = v7[27];
  uint64_t v69 = &a1[v68];
  uint64_t v70 = &a2[v68];
  uint64_t v71 = type metadata accessor for ChartPastDataTreatment();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v69, v70, v71);
  uint64_t v72 = v7[28];
  uint64_t v73 = &a1[v72];
  uint64_t v74 = &a2[v72];
  uint64_t v75 = *((void *)v74 + 1);
  *(void *)uint64_t v73 = *(void *)v74;
  *((void *)v73 + 1) = v75;
  uint64_t v76 = v7[29];
  uint64_t v77 = &a1[v76];
  uint64_t v78 = &a2[v76];
  uint64_t v123 = *((void *)v78 + 1);
  *(void *)uint64_t v77 = *(void *)v78;
  *((void *)v77 + 1) = v123;
  uint64_t v79 = v7[30];
  uint64_t v80 = &a1[v79];
  uint64_t v81 = &a2[v79];
  uint64_t v82 = *((void *)v81 + 1);
  *(void *)uint64_t v80 = *(void *)v81;
  *((void *)v80 + 1) = v82;
  uint64_t v83 = v7[31];
  uint64_t v84 = &a1[v83];
  uint64_t v85 = &a2[v83];
  uint64_t v86 = *((void *)v85 + 1);
  *(void *)uint64_t v84 = *(void *)v85;
  *((void *)v84 + 1) = v86;
  uint64_t v87 = v7[32];
  uint64_t v88 = &a1[v87];
  uint64_t v89 = &a2[v87];
  uint64_t v90 = *((void *)v89 + 1);
  *(void *)uint64_t v88 = *(void *)v89;
  *((void *)v88 + 1) = v90;
  uint64_t v91 = v7[33];
  uint64_t v92 = &a1[v91];
  uint64_t v93 = &a2[v91];
  uint64_t v94 = *((void *)v93 + 1);
  *(void *)uint64_t v92 = *(void *)v93;
  *((void *)v92 + 1) = v94;
  uint64_t v95 = a3[5];
  uint64_t v96 = a3[6];
  uint64_t v97 = &a1[v95];
  uint64_t v98 = &a2[v95];
  long long v99 = *((_OWORD *)v98 + 1);
  *(_OWORD *)uint64_t v97 = *(_OWORD *)v98;
  *((_OWORD *)v97 + 1) = v99;
  *(void *)&a1[v96] = *(void *)&a2[v96];
  uint64_t v100 = a3[7];
  long long v101 = &a1[v100];
  uint64_t v124 = a3;
  uint64_t v102 = &a2[v100];
  long long v103 = *(_OWORD *)&a2[v100 + 24];
  *(_OWORD *)&a1[v100 + 24] = v103;
  uint64_t v104 = v103;
  uint64_t v122 = **(void (***)(char *, char *, uint64_t))(v103 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  v122(v101, v102, v104);
  uint64_t v105 = v124[8];
  uint64_t v106 = &a1[v105];
  uint64_t v107 = &a2[v105];
  uint64_t v108 = *(void *)v107;
  LOBYTE(v94) = v107[8];
  sub_100195B7C(*(void *)v107, v94);
  *(void *)uint64_t v106 = v108;
  v106[8] = v94;
  uint64_t v109 = v124[9];
  uint64_t v110 = &a1[v109];
  uint64_t v111 = &a2[v109];
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v112 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16))(v110, v111, v112);
  }
  else
  {
    *(void *)uint64_t v110 = *(void *)v111;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v113 = v124[10];
  uint64_t v114 = &a1[v113];
  uint64_t v115 = &a2[v113];
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v116 = type metadata accessor for LayoutDirection();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 16))(v114, v115, v116);
  }
  else
  {
    *(void *)uint64_t v114 = *(void *)v115;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v117 = v124[11];
  uint64_t v118 = &a1[v117];
  uint64_t v119 = &a2[v117];
  uint64_t v120 = type metadata accessor for Text.Measurements();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 16))(v118, v119, v120);
  return a1;
}

char *sub_1007A5900(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for ChartViewModel(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for ChartKind();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = v6[7];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = type metadata accessor for DetailChartExtrema();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  *(void *)&a1[v6[8]] = *(void *)&a2[v6[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[v6[9]] = *(void *)&a2[v6[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = v6[10];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = *((void *)v17 + 1);
  uint64_t v18 = v6[11];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  id v21 = *(id *)v20;
  uint64_t v22 = (void *)*((void *)v20 + 1);
  uint64_t v23 = *((void *)v20 + 2);
  unsigned __int8 v24 = v20[24];
  sub_10027D4F8(*(id *)v20, v22, v23, v24);
  uint64_t v25 = *(void **)v19;
  uint64_t v26 = (void *)*((void *)v19 + 1);
  uint64_t v27 = *((void *)v19 + 2);
  *(void *)uint64_t v19 = v21;
  *((void *)v19 + 1) = v22;
  *((void *)v19 + 2) = v23;
  unsigned __int8 v28 = v19[24];
  v19[24] = v24;
  sub_10027D954(v25, v26, v27, v28);
  uint64_t v29 = v6[12];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  *(void *)&a1[v29] = *(void *)&a2[v29];
  uint64_t v32 = *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  uint64_t v33 = &v30[v32];
  uint64_t v34 = &v31[v32];
  uint64_t v35 = type metadata accessor for Date();
  int v36 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v35);
  int v37 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v35);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v38 = *(void *)(v35 - 8);
  if (v37)
  {
    (*(void (**)(char *, uint64_t))(v38 + 8))(v33, v35);
LABEL_6:
    uint64_t v39 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v33, v34, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v38 + 24))(v33, v34, v35);
LABEL_7:
  uint64_t v40 = v6[13];
  uint64_t v41 = &a1[v40];
  uint64_t v42 = &a2[v40];
  uint64_t v43 = *(void *)v42;
  v41[8] = v42[8];
  *(void *)uint64_t v41 = v43;
  uint64_t v44 = v6[14];
  uint64_t v45 = &a1[v44];
  uint64_t v46 = &a2[v44];
  uint64_t v47 = sub_10017DF08(&qword_100E6BF10);
  int v48 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v47);
  int v49 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v47);
  if (v48)
  {
    if (!v49)
    {
      *(void *)uint64_t v45 = *(void *)v46;
      uint64_t v50 = *(int *)(v47 + 48);
      uint64_t v51 = &v45[v50];
      uint64_t v52 = &v46[v50];
      swift_retain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v35))
      {
        uint64_t v53 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v51, v52, v35);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v51, 0, 1, v35);
      }
      uint64_t v62 = (uint64_t)v45;
      uint64_t v63 = v47;
      goto LABEL_21;
    }
    goto LABEL_13;
  }
  if (v49)
  {
    sub_10017DF4C((uint64_t)v45, &qword_100E6BF10);
LABEL_13:
    size_t v54 = *(void *)(*(void *)(type metadata accessor for ChartViewModel.Background(0) - 8) + 64);
    uint64_t v55 = v45;
    uint64_t v56 = v46;
LABEL_14:
    memcpy(v55, v56, v54);
    goto LABEL_22;
  }
  *(void *)uint64_t v45 = *(void *)v46;
  swift_retain();
  swift_release();
  uint64_t v57 = *(int *)(v47 + 48);
  uint64_t v58 = (uint64_t)&v45[v57];
  uint64_t v59 = (uint64_t)&v46[v57];
  int v60 = _s7Weather24LocationCompositionStateOwet_0(v58, 1, v35);
  int v61 = _s7Weather24LocationCompositionStateOwet_0(v59, 1, v35);
  if (v60)
  {
    if (!v61)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 16))(v58, v59, v35);
      uint64_t v62 = v58;
      uint64_t v63 = v35;
LABEL_21:
      _s7Weather24LocationCompositionStateOwst_0(v62, 0, 1, v63);
      goto LABEL_22;
    }
    goto LABEL_40;
  }
  uint64_t v130 = *(void *)(v35 - 8);
  if (v61)
  {
    (*(void (**)(uint64_t, uint64_t))(v130 + 8))(v58, v35);
LABEL_40:
    size_t v54 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
    uint64_t v55 = (void *)v58;
    uint64_t v56 = (const void *)v59;
    goto LABEL_14;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v130 + 24))(v58, v59, v35);
LABEL_22:
  *(void *)&a1[v6[15]] = *(void *)&a2[v6[15]];
  uint64_t v64 = v6[16];
  uint64_t v65 = &a1[v64];
  uint64_t v66 = &a2[v64];
  uint64_t v67 = type metadata accessor for ChartDarkeningScrim();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 24))(v65, v66, v67);
  *(void *)&a1[v6[17]] = *(void *)&a2[v6[17]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v68 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 24);
  v68(&a1[v6[18]], &a2[v6[18]], v35);
  v68(&a1[v6[19]], &a2[v6[19]], v35);
  v68(&a1[v6[20]], &a2[v6[20]], v35);
  uint64_t v69 = v6[21];
  uint64_t v70 = &a1[v69];
  uint64_t v71 = &a2[v69];
  uint64_t v72 = type metadata accessor for DetailChartDataElement();
  int v73 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v70, 1, v72);
  int v74 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v72);
  if (v73)
  {
    if (!v74)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v70, v71, v72);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v72);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  uint64_t v75 = *(void *)(v72 - 8);
  if (v74)
  {
    (*(void (**)(char *, uint64_t))(v75 + 8))(v70, v72);
LABEL_27:
    uint64_t v76 = sub_10017DF08(&qword_100E6B640);
    memcpy(v70, v71, *(void *)(*(void *)(v76 - 8) + 64));
    goto LABEL_28;
  }
  (*(void (**)(char *, char *, uint64_t))(v75 + 24))(v70, v71, v72);
LABEL_28:
  *(void *)&a1[v6[22]] = *(void *)&a2[v6[22]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v77 = v6[23];
  uint64_t v78 = &a1[v77];
  uint64_t v79 = &a2[v77];
  uint64_t v80 = type metadata accessor for ChartPeakMarkStyle();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 24))(v78, v79, v80);
  *(void *)&a1[v6[24]] = *(void *)&a2[v6[24]];
  *(void *)&a1[v6[25]] = *(void *)&a2[v6[25]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v81 = v6[26];
  uint64_t v82 = &a1[v81];
  uint64_t v83 = &a2[v81];
  uint64_t v84 = type metadata accessor for ChartViewModelInterpolationMode();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 24))(v82, v83, v84);
  uint64_t v85 = v6[27];
  uint64_t v86 = &a1[v85];
  uint64_t v87 = &a2[v85];
  uint64_t v88 = type metadata accessor for ChartPastDataTreatment();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 24))(v86, v87, v88);
  uint64_t v89 = v6[28];
  uint64_t v90 = &a1[v89];
  uint64_t v91 = &a2[v89];
  *(void *)uint64_t v90 = *(void *)v91;
  *((void *)v90 + 1) = *((void *)v91 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v92 = v6[29];
  uint64_t v93 = &a1[v92];
  uint64_t v94 = &a2[v92];
  *(void *)uint64_t v93 = *(void *)v94;
  *((void *)v93 + 1) = *((void *)v94 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v95 = v6[30];
  uint64_t v96 = &a1[v95];
  uint64_t v97 = &a2[v95];
  *(void *)uint64_t v96 = *(void *)v97;
  *((void *)v96 + 1) = *((void *)v97 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v98 = v6[31];
  long long v99 = &a1[v98];
  uint64_t v100 = &a2[v98];
  *(void *)long long v99 = *(void *)v100;
  *((void *)v99 + 1) = *((void *)v100 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v101 = v6[32];
  uint64_t v102 = &a1[v101];
  long long v103 = &a2[v101];
  *(void *)uint64_t v102 = *(void *)v103;
  *((void *)v102 + 1) = *((void *)v103 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v104 = v6[33];
  uint64_t v105 = &a1[v104];
  uint64_t v106 = &a2[v104];
  uint64_t v107 = *((void *)v106 + 1);
  *(void *)uint64_t v105 = *(void *)v106;
  *((void *)v105 + 1) = v107;
  swift_retain();
  swift_release();
  uint64_t v108 = a3[5];
  uint64_t v109 = &a1[v108];
  uint64_t v110 = &a2[v108];
  *(void *)uint64_t v109 = *(void *)v110;
  *((void *)v109 + 1) = *((void *)v110 + 1);
  *((void *)v109 + 2) = *((void *)v110 + 2);
  *((void *)v109 + 3) = *((void *)v110 + 3);
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  sub_1000C1E18((uint64_t *)&a1[a3[7]], (uint64_t *)&a2[a3[7]]);
  uint64_t v111 = a3[8];
  uint64_t v112 = &a1[v111];
  uint64_t v113 = &a2[v111];
  uint64_t v114 = *(void *)v113;
  LOBYTE(v86) = v113[8];
  sub_100195B7C(*(void *)v113, (char)v86);
  uint64_t v115 = *(void *)v112;
  char v116 = v112[8];
  *(void *)uint64_t v112 = v114;
  v112[8] = (char)v86;
  sub_10018F6D8(v115, v116);
  if (a1 != a2)
  {
    uint64_t v117 = a3[9];
    uint64_t v118 = &a1[v117];
    uint64_t v119 = &a2[v117];
    sub_10017DF4C((uint64_t)&a1[v117], &qword_100E66E50);
    sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v120 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 16))(v118, v119, v120);
    }
    else
    {
      *(void *)uint64_t v118 = *(void *)v119;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v121 = a3[10];
    uint64_t v122 = &a1[v121];
    uint64_t v123 = &a2[v121];
    sub_10017DF4C((uint64_t)&a1[v121], &qword_100E62CB8);
    sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v124 = type metadata accessor for LayoutDirection();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 16))(v122, v123, v124);
    }
    else
    {
      *(void *)uint64_t v122 = *(void *)v123;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v125 = a3[11];
  uint64_t v126 = &a1[v125];
  uint64_t v127 = &a2[v125];
  uint64_t v128 = type metadata accessor for Text.Measurements();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 24))(v126, v127, v128);
  return a1;
}

char *sub_1007A64B8(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = (int *)type metadata accessor for ChartViewModel(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for ChartKind();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
  uint64_t v11 = v6[7];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = type metadata accessor for DetailChartExtrema();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  *(void *)&a1[v6[8]] = *(void *)&a2[v6[8]];
  *(void *)&a1[v6[9]] = *(void *)&a2[v6[9]];
  *(_OWORD *)&a1[v6[10]] = *(_OWORD *)&a2[v6[10]];
  uint64_t v15 = v6[11];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 9) = *(_OWORD *)(v17 + 9);
  uint64_t v18 = v6[12];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  *(void *)&a1[v18] = *(void *)&a2[v18];
  uint64_t v21 = *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  uint64_t v22 = &v19[v21];
  uint64_t v23 = &v20[v21];
  uint64_t v24 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24))
  {
    uint64_t v25 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v24);
  }
  uint64_t v26 = v6[13];
  uint64_t v27 = &a1[v26];
  unsigned __int8 v28 = &a2[v26];
  *(void *)uint64_t v27 = *(void *)v28;
  v27[8] = v28[8];
  uint64_t v29 = v6[14];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  uint64_t v32 = sub_10017DF08(&qword_100E6BF10);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v32))
  {
    uint64_t v33 = type metadata accessor for ChartViewModel.Background(0);
    memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v30 = *(void *)v31;
    uint64_t v34 = *(int *)(v32 + 48);
    uint64_t v35 = &v30[v34];
    int v36 = &v31[v34];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v24))
    {
      uint64_t v37 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v35, v36, v24);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v24);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v32);
  }
  *(void *)&a1[v6[15]] = *(void *)&a2[v6[15]];
  uint64_t v38 = v6[16];
  uint64_t v39 = &a1[v38];
  uint64_t v40 = &a2[v38];
  uint64_t v41 = type metadata accessor for ChartDarkeningScrim();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
  *(void *)&a1[v6[17]] = *(void *)&a2[v6[17]];
  uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32);
  v42(&a1[v6[18]], &a2[v6[18]], v24);
  v42(&a1[v6[19]], &a2[v6[19]], v24);
  v42(&a1[v6[20]], &a2[v6[20]], v24);
  uint64_t v43 = v6[21];
  uint64_t v44 = &a1[v43];
  uint64_t v45 = &a2[v43];
  uint64_t v46 = type metadata accessor for DetailChartDataElement();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v46))
  {
    uint64_t v47 = sub_10017DF08(&qword_100E6B640);
    memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v46);
  }
  *(void *)&a1[v6[22]] = *(void *)&a2[v6[22]];
  uint64_t v48 = v6[23];
  int v49 = &a1[v48];
  uint64_t v50 = &a2[v48];
  uint64_t v51 = type metadata accessor for ChartPeakMarkStyle();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v49, v50, v51);
  *(void *)&a1[v6[24]] = *(void *)&a2[v6[24]];
  *(void *)&a1[v6[25]] = *(void *)&a2[v6[25]];
  uint64_t v52 = v6[26];
  uint64_t v53 = &a1[v52];
  size_t v54 = &a2[v52];
  uint64_t v55 = type metadata accessor for ChartViewModelInterpolationMode();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
  uint64_t v56 = v6[27];
  uint64_t v57 = &a1[v56];
  uint64_t v58 = &a2[v56];
  uint64_t v59 = type metadata accessor for ChartPastDataTreatment();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
  *(_OWORD *)&a1[v6[28]] = *(_OWORD *)&a2[v6[28]];
  *(_OWORD *)&a1[v6[29]] = *(_OWORD *)&a2[v6[29]];
  *(_OWORD *)&a1[v6[30]] = *(_OWORD *)&a2[v6[30]];
  *(_OWORD *)&a1[v6[31]] = *(_OWORD *)&a2[v6[31]];
  *(_OWORD *)&a1[v6[32]] = *(_OWORD *)&a2[v6[32]];
  *(_OWORD *)&a1[v6[33]] = *(_OWORD *)&a2[v6[33]];
  uint64_t v60 = a3[5];
  uint64_t v61 = a3[6];
  uint64_t v62 = &a1[v60];
  uint64_t v63 = &a2[v60];
  long long v64 = *((_OWORD *)v63 + 1);
  *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
  *((_OWORD *)v62 + 1) = v64;
  *(void *)&a1[v61] = *(void *)&a2[v61];
  uint64_t v65 = a3[7];
  uint64_t v66 = a3[8];
  uint64_t v67 = &a1[v65];
  uint64_t v68 = &a2[v65];
  long long v69 = *((_OWORD *)v68 + 1);
  *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
  *((_OWORD *)v67 + 1) = v69;
  *((void *)v67 + 4) = *((void *)v68 + 4);
  uint64_t v70 = &a1[v66];
  uint64_t v71 = &a2[v66];
  v70[8] = v71[8];
  *(void *)uint64_t v70 = *(void *)v71;
  uint64_t v72 = a3[9];
  int v73 = &a1[v72];
  int v74 = &a2[v72];
  uint64_t v75 = sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v76 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 32))(v73, v74, v76);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
  }
  uint64_t v77 = a3[10];
  uint64_t v78 = &a1[v77];
  uint64_t v79 = &a2[v77];
  uint64_t v80 = sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v81 = type metadata accessor for LayoutDirection();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 32))(v78, v79, v81);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v78, v79, *(void *)(*(void *)(v80 - 8) + 64));
  }
  uint64_t v82 = a3[11];
  uint64_t v83 = &a1[v82];
  uint64_t v84 = &a2[v82];
  uint64_t v85 = type metadata accessor for Text.Measurements();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 32))(v83, v84, v85);
  return a1;
}

char *sub_1007A6C74(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (int *)type metadata accessor for ChartViewModel(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for ChartKind();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  *(void *)&a1[v7[6]] = *(void *)&a2[v7[6]];
  swift_bridgeObjectRelease();
  uint64_t v12 = v7[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for DetailChartExtrema();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  *(void *)&a1[v7[8]] = *(void *)&a2[v7[8]];
  swift_bridgeObjectRelease();
  *(void *)&a1[v7[9]] = *(void *)&a2[v7[9]];
  swift_bridgeObjectRelease();
  *(_OWORD *)&a1[v7[10]] = *(_OWORD *)&a2[v7[10]];
  uint64_t v16 = v7[11];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = *((void *)v18 + 2);
  char v20 = v18[24];
  uint64_t v21 = *(void **)v17;
  uint64_t v22 = (void *)*((void *)v17 + 1);
  uint64_t v23 = *((void *)v17 + 2);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *((void *)v17 + 2) = v19;
  unsigned __int8 v24 = v17[24];
  v17[24] = v20;
  sub_10027D954(v21, v22, v23, v24);
  uint64_t v25 = v7[12];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  *(void *)&a1[v25] = *(void *)&a2[v25];
  uint64_t v28 = *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  uint64_t v29 = &v26[v28];
  uint64_t v30 = &v27[v28];
  uint64_t v31 = type metadata accessor for Date();
  int v32 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v31);
  int v33 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v34 = *(void *)(v31 - 8);
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v29, v31);
LABEL_6:
    uint64_t v35 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v29, v30, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 40))(v29, v30, v31);
LABEL_7:
  uint64_t v36 = v7[13];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  *(void *)uint64_t v37 = *(void *)v38;
  v37[8] = v38[8];
  uint64_t v39 = v7[14];
  uint64_t v40 = &a1[v39];
  uint64_t v41 = &a2[v39];
  uint64_t v42 = sub_10017DF08(&qword_100E6BF10);
  int v43 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v42);
  int v44 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v42);
  if (v43)
  {
    if (!v44)
    {
      *(void *)uint64_t v40 = *(void *)v41;
      uint64_t v45 = *(int *)(v42 + 48);
      uint64_t v46 = &v40[v45];
      uint64_t v47 = &v41[v45];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v31))
      {
        uint64_t v48 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v46, v47, v31);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v46, 0, 1, v31);
      }
      uint64_t v57 = (uint64_t)v40;
      uint64_t v58 = v42;
      goto LABEL_21;
    }
    goto LABEL_13;
  }
  if (v44)
  {
    sub_10017DF4C((uint64_t)v40, &qword_100E6BF10);
LABEL_13:
    size_t v49 = *(void *)(*(void *)(type metadata accessor for ChartViewModel.Background(0) - 8) + 64);
    uint64_t v50 = v40;
    uint64_t v51 = v41;
LABEL_14:
    memcpy(v50, v51, v49);
    goto LABEL_22;
  }
  *(void *)uint64_t v40 = *(void *)v41;
  swift_release();
  uint64_t v52 = *(int *)(v42 + 48);
  uint64_t v53 = (uint64_t)&v40[v52];
  uint64_t v54 = (uint64_t)&v41[v52];
  int v55 = _s7Weather24LocationCompositionStateOwet_0(v53, 1, v31);
  int v56 = _s7Weather24LocationCompositionStateOwet_0(v54, 1, v31);
  if (v55)
  {
    if (!v56)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 32))(v53, v54, v31);
      uint64_t v57 = v53;
      uint64_t v58 = v31;
LABEL_21:
      _s7Weather24LocationCompositionStateOwst_0(v57, 0, 1, v58);
      goto LABEL_22;
    }
    goto LABEL_39;
  }
  uint64_t v140 = *(void *)(v31 - 8);
  if (v56)
  {
    (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v53, v31);
LABEL_39:
    size_t v49 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
    uint64_t v50 = (void *)v53;
    uint64_t v51 = (const void *)v54;
    goto LABEL_14;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v140 + 40))(v53, v54, v31);
LABEL_22:
  *(void *)&a1[v7[15]] = *(void *)&a2[v7[15]];
  uint64_t v59 = v7[16];
  uint64_t v60 = &a1[v59];
  uint64_t v61 = &a2[v59];
  uint64_t v62 = type metadata accessor for ChartDarkeningScrim();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 40))(v60, v61, v62);
  *(void *)&a1[v7[17]] = *(void *)&a2[v7[17]];
  swift_bridgeObjectRelease();
  uint64_t v63 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 40);
  v63(&a1[v7[18]], &a2[v7[18]], v31);
  v63(&a1[v7[19]], &a2[v7[19]], v31);
  v63(&a1[v7[20]], &a2[v7[20]], v31);
  uint64_t v64 = v7[21];
  uint64_t v65 = &a1[v64];
  uint64_t v66 = &a2[v64];
  uint64_t v67 = type metadata accessor for DetailChartDataElement();
  int v68 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v67);
  int v69 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, v67);
  if (v68)
  {
    if (!v69)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 32))(v65, v66, v67);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 0, 1, v67);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  uint64_t v70 = *(void *)(v67 - 8);
  if (v69)
  {
    (*(void (**)(char *, uint64_t))(v70 + 8))(v65, v67);
LABEL_27:
    uint64_t v71 = sub_10017DF08(&qword_100E6B640);
    memcpy(v65, v66, *(void *)(*(void *)(v71 - 8) + 64));
    goto LABEL_28;
  }
  (*(void (**)(char *, char *, uint64_t))(v70 + 40))(v65, v66, v67);
LABEL_28:
  *(void *)&a1[v7[22]] = *(void *)&a2[v7[22]];
  swift_bridgeObjectRelease();
  uint64_t v72 = v7[23];
  int v73 = &a1[v72];
  int v74 = &a2[v72];
  uint64_t v75 = type metadata accessor for ChartPeakMarkStyle();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 40))(v73, v74, v75);
  *(void *)&a1[v7[24]] = *(void *)&a2[v7[24]];
  *(void *)&a1[v7[25]] = *(void *)&a2[v7[25]];
  swift_bridgeObjectRelease();
  uint64_t v76 = v7[26];
  uint64_t v77 = &a1[v76];
  uint64_t v78 = &a2[v76];
  uint64_t v79 = type metadata accessor for ChartViewModelInterpolationMode();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 40))(v77, v78, v79);
  uint64_t v80 = v7[27];
  uint64_t v81 = &a1[v80];
  uint64_t v82 = &a2[v80];
  uint64_t v83 = type metadata accessor for ChartPastDataTreatment();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 40))(v81, v82, v83);
  uint64_t v84 = v7[28];
  uint64_t v85 = &a1[v84];
  uint64_t v86 = (uint64_t *)&a2[v84];
  uint64_t v88 = *v86;
  uint64_t v87 = v86[1];
  *(void *)uint64_t v85 = v88;
  *((void *)v85 + 1) = v87;
  swift_bridgeObjectRelease();
  uint64_t v89 = v7[29];
  uint64_t v90 = &a1[v89];
  uint64_t v91 = (uint64_t *)&a2[v89];
  uint64_t v93 = *v91;
  uint64_t v92 = v91[1];
  *(void *)uint64_t v90 = v93;
  *((void *)v90 + 1) = v92;
  swift_bridgeObjectRelease();
  uint64_t v94 = v7[30];
  uint64_t v95 = &a1[v94];
  uint64_t v96 = (uint64_t *)&a2[v94];
  uint64_t v98 = *v96;
  uint64_t v97 = v96[1];
  *(void *)uint64_t v95 = v98;
  *((void *)v95 + 1) = v97;
  swift_bridgeObjectRelease();
  uint64_t v99 = v7[31];
  uint64_t v100 = &a1[v99];
  uint64_t v101 = (uint64_t *)&a2[v99];
  uint64_t v103 = *v101;
  uint64_t v102 = v101[1];
  *(void *)uint64_t v100 = v103;
  *((void *)v100 + 1) = v102;
  swift_bridgeObjectRelease();
  uint64_t v104 = v7[32];
  uint64_t v105 = &a1[v104];
  uint64_t v106 = (uint64_t *)&a2[v104];
  uint64_t v108 = *v106;
  uint64_t v107 = v106[1];
  *(void *)uint64_t v105 = v108;
  *((void *)v105 + 1) = v107;
  swift_bridgeObjectRelease();
  *(_OWORD *)&a1[v7[33]] = *(_OWORD *)&a2[v7[33]];
  swift_release();
  uint64_t v109 = a3[5];
  uint64_t v110 = a3[6];
  uint64_t v111 = &a1[v109];
  uint64_t v112 = &a2[v109];
  long long v113 = *((_OWORD *)v112 + 1);
  uint64_t v114 = *(void *)&a2[v110];
  *(_OWORD *)uint64_t v111 = *(_OWORD *)v112;
  *((_OWORD *)v111 + 1) = v113;
  *(void *)&a1[v110] = v114;
  uint64_t v115 = a3[7];
  char v116 = &a1[v115];
  uint64_t v117 = &a2[v115];
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&a1[v115]);
  long long v118 = *((_OWORD *)v117 + 1);
  *(_OWORD *)char v116 = *(_OWORD *)v117;
  *((_OWORD *)v116 + 1) = v118;
  *((void *)v116 + 4) = *((void *)v117 + 4);
  uint64_t v119 = a3[8];
  uint64_t v120 = &a1[v119];
  uint64_t v121 = &a2[v119];
  uint64_t v122 = *(void *)v121;
  LOBYTE(v121) = v121[8];
  uint64_t v123 = *(void *)v120;
  char v124 = v120[8];
  *(void *)uint64_t v120 = v122;
  v120[8] = (char)v121;
  sub_10018F6D8(v123, v124);
  if (a1 != a2)
  {
    uint64_t v125 = a3[9];
    uint64_t v126 = &a1[v125];
    uint64_t v127 = &a2[v125];
    sub_10017DF4C((uint64_t)&a1[v125], &qword_100E66E50);
    uint64_t v128 = sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v129 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 32))(v126, v127, v129);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v126, v127, *(void *)(*(void *)(v128 - 8) + 64));
    }
    uint64_t v130 = a3[10];
    uint64_t v131 = &a1[v130];
    uint64_t v132 = &a2[v130];
    sub_10017DF4C((uint64_t)&a1[v130], &qword_100E62CB8);
    uint64_t v133 = sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v134 = type metadata accessor for LayoutDirection();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 32))(v131, v132, v134);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v131, v132, *(void *)(*(void *)(v133 - 8) + 64));
    }
  }
  uint64_t v135 = a3[11];
  uint64_t v136 = &a1[v135];
  uint64_t v137 = &a2[v135];
  uint64_t v138 = type metadata accessor for Text.Measurements();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 40))(v136, v137, v138);
  return a1;
}

uint64_t sub_1007A776C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007A7780);
}

uint64_t sub_1007A7780()
{
  uint64_t v3 = sub_100188B38();
  type metadata accessor for ChartViewModel(v3);
  sub_100162F30();
  if (*(_DWORD *)(v5 + 84) == v0)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v1;
LABEL_13:
    return _s7Weather24LocationCompositionStateOwet_0(v7, v0, v6);
  }
  if (v0 != 0x7FFFFFFF)
  {
    sub_10017DF08(&qword_100E6D908);
    sub_100162F30();
    if (*(_DWORD *)(v11 + 84) == v0)
    {
      uint64_t v6 = v10;
      uint64_t v12 = v2[9];
    }
    else
    {
      sub_10017DF08(&qword_100E63BF0);
      sub_100162F30();
      if (*(_DWORD *)(v14 + 84) == v0)
      {
        uint64_t v6 = v13;
        uint64_t v12 = v2[10];
      }
      else
      {
        uint64_t v6 = type metadata accessor for Text.Measurements();
        uint64_t v12 = v2[11];
      }
    }
    uint64_t v7 = v1 + v12;
    goto LABEL_13;
  }
  unint64_t v8 = *(void *)(v1 + v2[7] + 24);
  if (v8 >= 0xFFFFFFFF) {
    LODWORD(v8) = -1;
  }
  return (v8 + 1);
}

uint64_t sub_1007A7878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007A788C);
}

void sub_1007A788C()
{
  uint64_t v4 = sub_100183C30();
  type metadata accessor for ChartViewModel(v4);
  sub_100162F30();
  if (*(_DWORD *)(v6 + 84) == v3)
  {
    uint64_t v7 = v5;
    uint64_t v8 = v1;
  }
  else
  {
    if (v3 == 0x7FFFFFFF)
    {
      *(void *)(v1 + v2[7] + 24) = (v0 - 1);
      return;
    }
    sub_10017DF08(&qword_100E6D908);
    sub_100162F30();
    if (*(_DWORD *)(v10 + 84) == v3)
    {
      uint64_t v7 = v9;
      uint64_t v11 = v2[9];
    }
    else
    {
      sub_10017DF08(&qword_100E63BF0);
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == v3)
      {
        uint64_t v7 = v12;
        uint64_t v11 = v2[10];
      }
      else
      {
        uint64_t v7 = type metadata accessor for Text.Measurements();
        uint64_t v11 = v2[11];
      }
    }
    uint64_t v8 = v1 + v11;
  }

  _s7Weather24LocationCompositionStateOwst_0(v8, v0, v0, v7);
}

uint64_t type metadata accessor for ChartView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E94C98);
}

void sub_1007A799C()
{
  type metadata accessor for ChartViewModel(319);
  if (v0 <= 0x3F)
  {
    sub_10001E8D0(319, (unint64_t *)&qword_100E6D980, (void (*)(uint64_t))&type metadata accessor for ColorSchemeContrast);
    if (v1 <= 0x3F)
    {
      sub_10001E8D0(319, (unint64_t *)&qword_100E63C70, (void (*)(uint64_t))&type metadata accessor for LayoutDirection);
      if (v2 <= 0x3F)
      {
        type metadata accessor for Text.Measurements();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

uint64_t sub_1007A7B40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ChartView(0);
  sub_100162E4C();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v22 - v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v22 - v12;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v22 - v15;
  char v17 = sub_10071B540(a1, a2);
  sub_1007B212C(a1, (uint64_t)v16, (void (*)(void))type metadata accessor for ChartView);
  sub_1007B212C(a2, (uint64_t)v13, (void (*)(void))type metadata accessor for ChartView);
  if ((v17 & 1) == 0)
  {
    sub_10014CED8((uint64_t)v13, (void (*)(void))type metadata accessor for ChartView);
    sub_10014CED8((uint64_t)v16, (void (*)(void))type metadata accessor for ChartView);
    sub_1007B212C(a1, (uint64_t)v10, (void (*)(void))type metadata accessor for ChartView);
    sub_1007B212C(a2, (uint64_t)v7, (void (*)(void))type metadata accessor for ChartView);
    goto LABEL_5;
  }
  double v18 = *(double *)&v16[*(int *)(v4 + 24)];
  sub_10014CED8((uint64_t)v16, (void (*)(void))type metadata accessor for ChartView);
  double v19 = *(double *)&v13[*(int *)(v4 + 24)];
  sub_10014CED8((uint64_t)v13, (void (*)(void))type metadata accessor for ChartView);
  sub_1007B212C(a1, (uint64_t)v10, (void (*)(void))type metadata accessor for ChartView);
  sub_1007B212C(a2, (uint64_t)v7, (void (*)(void))type metadata accessor for ChartView);
  if (v18 != v19)
  {
LABEL_5:
    char v20 = 0;
    goto LABEL_6;
  }
  char v20 = static EdgeInsets.== infix(_:_:)();
LABEL_6:
  sub_10014CED8((uint64_t)v7, (void (*)(void))type metadata accessor for ChartView);
  sub_10014CED8((uint64_t)v10, (void (*)(void))type metadata accessor for ChartView);
  return v20 & 1;
}

uint64_t sub_1007A7DB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v178 = a1;
  uint64_t v177 = type metadata accessor for DynamicTypeSize();
  sub_100179C0C();
  uint64_t v176 = v3;
  __chkstk_darwin(v4);
  sub_100109314();
  sub_100109328(v5);
  uint64_t v6 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v6 - 8);
  sub_100109314();
  uint64_t v8 = sub_100109328(v7);
  uint64_t v173 = type metadata accessor for AutomationInfo(v8);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_100109314();
  sub_100109328(v10);
  uint64_t v172 = type metadata accessor for AccessibilityChildBehavior();
  sub_100179C0C();
  uint64_t v171 = v11;
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v14 = sub_100109328(v13);
  uint64_t v170 = type metadata accessor for ChartView(v14);
  sub_100179C0C();
  uint64_t v157 = v15;
  __chkstk_darwin(v16);
  uint64_t v158 = v17;
  sub_100109328((uint64_t)v140 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v144 = type metadata accessor for PlotDimensionScaleRange();
  sub_100179C0C();
  uint64_t v143 = v18;
  __chkstk_darwin(v19);
  sub_100109314();
  sub_100109338(v20);
  uint64_t v21 = sub_10017DF08(&qword_100E7D238);
  __chkstk_darwin(v21 - 8);
  sub_1001626E0();
  uint64_t v24 = v23 - v22;
  uint64_t v25 = sub_10017DF08(&qword_100E94CE8);
  sub_100179C0C();
  uint64_t v27 = v26;
  __chkstk_darwin(v28);
  sub_1001626E0();
  uint64_t v31 = v30 - v29;
  uint64_t v141 = sub_10017DF08(&qword_100E94CF0);
  sub_100179C0C();
  v140[2] = v32;
  __chkstk_darwin(v33);
  sub_1001626E0();
  uint64_t v36 = v35 - v34;
  uint64_t v145 = sub_10017DF08(&qword_100E94CF8);
  sub_100179C0C();
  uint64_t v142 = v37;
  __chkstk_darwin(v38);
  sub_100109314();
  sub_100109338(v39);
  uint64_t v147 = sub_10017DF08(&qword_100E94D00);
  sub_100179C0C();
  uint64_t v146 = v40;
  __chkstk_darwin(v41);
  sub_100109314();
  sub_100109338(v42);
  uint64_t v149 = sub_10017DF08(&qword_100E94D08);
  sub_100179C0C();
  uint64_t v148 = v43;
  __chkstk_darwin(v44);
  sub_100109314();
  sub_100109338(v45);
  uint64_t v152 = sub_10017DF08(&qword_100E94D10);
  sub_100162E4C();
  __chkstk_darwin(v46);
  sub_100109314();
  sub_100109338(v47);
  uint64_t v154 = sub_10017DF08(&qword_100E94D18);
  sub_100179C0C();
  uint64_t v153 = v48;
  __chkstk_darwin(v49);
  sub_100109314();
  sub_100109338(v50);
  uint64_t v156 = sub_10017DF08(&qword_100E7A190);
  sub_100179C0C();
  uint64_t v155 = v51;
  __chkstk_darwin(v52);
  sub_100109314();
  sub_100109338(v53);
  uint64_t v159 = sub_10017DF08(&qword_100E7A198);
  sub_100162E4C();
  __chkstk_darwin(v54);
  sub_100109314();
  sub_100109338(v55);
  uint64_t v165 = sub_10017DF08(&qword_100E94D20);
  sub_100162E4C();
  __chkstk_darwin(v56);
  sub_100109314();
  sub_100109338(v57);
  uint64_t v169 = sub_10017DF08(&qword_100E94D28);
  sub_100179C0C();
  uint64_t v168 = v58;
  __chkstk_darwin(v59);
  sub_100109314();
  sub_100109338(v60);
  uint64_t v167 = sub_10017DF08(&qword_100E94D30);
  sub_100179C0C();
  uint64_t v166 = v61;
  __chkstk_darwin(v62);
  sub_100109314();
  sub_100109338(v63);
  uint64_t v163 = sub_10017DF08(&qword_100E94D38);
  sub_100162E4C();
  __chkstk_darwin(v64);
  sub_100109314();
  sub_100109338(v65);
  uint64_t v180 = v2;
  sub_10017DF08(&qword_100E94D40);
  sub_1007B0E8C();
  Chart.init(content:)();
  uint64_t v186 = sub_1007AA1F0(v2);
  uint64_t v66 = type metadata accessor for ScaleType();
  _s7Weather24LocationCompositionStateOwst_0(v24, 1, 1, v66);
  uint64_t v67 = sub_10017DF08(&qword_100E66F68);
  unint64_t v68 = sub_10024D5E4((uint64_t)&unk_100E94D50);
  unint64_t v69 = sub_1007B0F10((uint64_t)&unk_100E94D58);
  v140[1] = v36;
  View.chartXScale<A>(domain:type:)();
  sub_10017DF4C(v24, &qword_100E7D238);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v31, v25);
  sub_10017DF08(&qword_100E6B6D0);
  uint64_t v70 = swift_allocObject();
  *(_OWORD *)(v70 + 16) = xmmword_100C25ED0;
  uint64_t v71 = type metadata accessor for ChartViewModel(0);
  *(_OWORD *)(v70 + 32) = *(_OWORD *)(v2 + *(int *)(v71 + 40));
  uint64_t v185 = v70;
  uint64_t v150 = v71;
  uint64_t v72 = *(int *)(v71 + 32);
  uint64_t v179 = v2;
  if (*(void *)(v2 + v72))
  {
    if (qword_100E62450 != -1) {
      swift_once();
    }
    swift_beginAccess();
  }
  static PositionScaleRange<>.plotDimension(startPadding:endPadding:)();
  _s7Weather24LocationCompositionStateOwst_0(v24, 1, 1, v66);
  uint64_t v73 = sub_10017DF08(&qword_100E94D60);
  *(void *)&long long v187 = v25;
  *((void *)&v187 + 1) = v67;
  *(void *)&long long v188 = v68;
  *((void *)&v188 + 1) = v69;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  unint64_t v75 = sub_1007B0F10((uint64_t)&unk_100E94D68);
  uint64_t v76 = v141;
  uint64_t v77 = v144;
  View.chartYScale<A, B>(domain:range:type:)();
  sub_10017DF4C(v24, &qword_100E7D238);
  sub_10012BF98();
  sub_100162F0C();
  v78();
  swift_bridgeObjectRelease();
  sub_10012BF98();
  sub_100162F0C();
  uint64_t v80 = v79();
  uint64_t v143 = v140;
  __chkstk_darwin(v80);
  uint64_t v81 = sub_10017DF08(&qword_100E94D70);
  *(void *)&long long v187 = v76;
  *((void *)&v187 + 1) = v73;
  *(void *)&long long v188 = v77;
  *((void *)&v188 + 1) = OpaqueTypeConformance2;
  *(void *)&long long v189 = v75;
  *((void *)&v189 + 1) = &protocol witness table for PlotDimensionScaleRange;
  uint64_t v82 = swift_getOpaqueTypeConformance2();
  uint64_t v83 = sub_10018C6DC(&qword_100E94D78);
  uint64_t v84 = sub_10018C6DC(&qword_100E94D80);
  unint64_t v85 = sub_10024D5E4((uint64_t)&unk_100E94D88);
  unint64_t v86 = sub_1007B0FB8((uint64_t)&unk_100E94D90);
  *(void *)&long long v187 = v83;
  *((void *)&v187 + 1) = v84;
  *(void *)&long long v188 = v85;
  *((void *)&v188 + 1) = v86;
  uint64_t v87 = swift_getOpaqueTypeConformance2();
  uint64_t v88 = v145;
  View.chartXAxis<A>(content:)();
  sub_100162F0C();
  uint64_t v90 = v89();
  __chkstk_darwin(v90);
  uint64_t v91 = v179;
  uint64_t v144 = sub_10017DF08(&qword_100E94DA8);
  *(void *)&long long v187 = v88;
  *((void *)&v187 + 1) = v81;
  *(void *)&long long v188 = v82;
  *((void *)&v188 + 1) = v87;
  swift_getOpaqueTypeConformance2();
  uint64_t v92 = sub_10018C6DC(&qword_100E94DB0);
  uint64_t v93 = sub_10018C6DC(&qword_100E94DB8);
  unint64_t v94 = sub_10024D5E4((uint64_t)&unk_100E94DC0);
  unint64_t v95 = sub_1007B0FB8((uint64_t)&unk_100E94DC8);
  *(void *)&long long v187 = v92;
  *((void *)&v187 + 1) = v93;
  *(void *)&long long v188 = v94;
  *((void *)&v188 + 1) = v95;
  swift_getOpaqueTypeConformance2();
  View.chartYAxis<A>(content:)();
  sub_10012BF98();
  sub_100162F0C();
  v96();
  uint64_t v97 = v170;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v98 = v151;
  sub_10017FDA4();
  v99();
  uint64_t v100 = v152;
  uint64_t v101 = (_OWORD *)(v98 + *(int *)(v152 + 36));
  long long v102 = v188;
  _OWORD *v101 = v187;
  v101[1] = v102;
  v101[2] = v189;
  uint64_t v103 = sub_100165210();
  v104(v103);
  uint64_t v105 = v160;
  sub_1007B212C(v91, v160, (void (*)(void))type metadata accessor for ChartView);
  unint64_t v106 = (*(unsigned __int8 *)(v157 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v157 + 80);
  uint64_t v107 = swift_allocObject();
  sub_1007B1054(v105, v107 + v106);
  static Alignment.center.getter();
  uint64_t v108 = type metadata accessor for ChartBackgroundView(0);
  unint64_t v109 = sub_1007B10F0();
  unint64_t v110 = sub_1007B1450((uint64_t)&unk_100E94DE8);
  View.chartBackground<A>(alignment:content:)();
  swift_release();
  sub_10017DF4C(v98, &qword_100E94D10);
  uint64_t v111 = v179 + *(int *)(v97 + 32);
  uint64_t v112 = *(void *)v111;
  LOBYTE(v82) = *(unsigned char *)(v111 + 8);
  sub_100195B7C(*(void *)v111, v82);
  sub_100149AE8();
  LOBYTE(v91) = v113;
  sub_10018F6D8(v112, v82);
  if (v91) {
    static AccessibilityChildBehavior.contain.getter();
  }
  else {
    static AccessibilityChildBehavior.ignore.getter();
  }
  uint64_t v181 = v100;
  uint64_t v182 = v108;
  unint64_t v183 = v109;
  unint64_t v184 = v110;
  swift_getOpaqueTypeConformance2();
  View.accessibilityElement(children:)();
  sub_10012BF98();
  sub_100162F0C();
  v114();
  sub_100162F0C();
  v115();
  type metadata accessor for AutomationCellInfo(0);
  uint64_t v116 = v174;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v117 = v161;
  sub_10048D464(v116, v161);
  sub_10014CED8(v116, (void (*)(void))type metadata accessor for AutomationInfo);
  sub_10012BF98();
  sub_100162F0C();
  v118();
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v119._uint64_t countAndFlagsBits = 0x203A7472616843;
  v119._object = (void *)0xE700000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v119);
  uint64_t v120 = v150;
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(*(Swift::String *)(v179 + *(int *)(v150 + 112)));
  v121._uint64_t countAndFlagsBits = 0;
  v121._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v121);
  LocalizedStringKey.init(stringInterpolation:)();
  uint64_t v122 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v124 = v123;
  char v126 = v125 & 1;
  sub_1007B1F14();
  uint64_t v127 = v162;
  View.accessibilityLabel(_:)();
  sub_100191924(v122, v124, v126);
  swift_bridgeObjectRelease();
  sub_10017DF4C(v117, &qword_100E7A198);
  unint64_t v128 = sub_1007B2080();
  unint64_t v129 = sub_1007B1450((uint64_t)&unk_100E94E00);
  uint64_t v130 = v165;
  View.accessibilityChartDescriptor<A>(_:)();
  sub_10017DF4C(v127, &qword_100E94D20);
  uint64_t v131 = v176;
  uint64_t v132 = v175;
  uint64_t v133 = v177;
  (*(void (**)(uint64_t, void, uint64_t))(v176 + 104))(v175, enum case for DynamicTypeSize.large(_:), v177);
  uint64_t v181 = v130;
  uint64_t v182 = v120;
  unint64_t v183 = v128;
  unint64_t v184 = v129;
  swift_getOpaqueTypeConformance2();
  View.dynamicTypeSize(_:)();
  (*(void (**)(uint64_t, uint64_t))(v131 + 8))(v132, v133);
  sub_10012BF98();
  sub_100162F0C();
  v134();
  uint64_t v135 = v164;
  sub_10017FDA4();
  v136();
  *(_WORD *)(v135 + *(int *)(v163 + 36)) = 0;
  uint64_t v137 = sub_100165210();
  v138(v137);
  return sub_10020E72C(v135, v178, &qword_100E94D38);
}

uint64_t sub_1007A8F70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v135 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100E92D28);
  uint64_t v126 = *(void *)(v3 - 8);
  uint64_t v127 = v3;
  __chkstk_darwin(v3);
  char v125 = (char *)&v96 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = sub_10017DF08(&qword_100E94E98);
  uint64_t v124 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  uint64_t v123 = (char *)&v96 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E92D18);
  __chkstk_darwin(v6 - 8);
  uint64_t v134 = (uint64_t)&v96 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v132 = (char *)&v96 - v9;
  uint64_t v10 = sub_10017DF08(&qword_100E92CE8);
  __chkstk_darwin(v10 - 8);
  uint64_t v122 = (uint64_t)&v96 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = type metadata accessor for ChartPeakMarkStyle();
  uint64_t v97 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  uint64_t v100 = (char *)&v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = type metadata accessor for ChartPointMarkSeries();
  uint64_t v103 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  long long v102 = (char *)&v96 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = sub_10017DF08(&qword_100E94EA0);
  uint64_t v101 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  uint64_t v99 = (char *)&v96 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100E92D08);
  __chkstk_darwin(v15 - 8);
  uint64_t v120 = (uint64_t)&v96 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v96 - v18;
  uint64_t v119 = type metadata accessor for ChartViewModelInterpolationMode();
  uint64_t v118 = *(void *)(v119 - 8);
  __chkstk_darwin(v119);
  uint64_t v117 = (char *)&v96 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = type metadata accessor for Date();
  uint64_t v110 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  uint64_t v109 = (uint64_t)&v96 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_10017DF08(&qword_100E92CF0);
  uint64_t v115 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  uint64_t v112 = (char *)&v96 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = sub_10017DF08(&qword_100E92D50);
  uint64_t v113 = *(void *)(v114 - 8);
  __chkstk_darwin(v114);
  unint64_t v129 = (int *)((char *)&v96 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v24);
  unint64_t v128 = (char *)&v96 - v25;
  uint64_t v26 = sub_10017DF08(&qword_100E6BEC8);
  __chkstk_darwin(v26 - 8);
  uint64_t v28 = (void (**)(char *, char *, uint64_t))((char *)&v96 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v96 - v30;
  uint64_t v108 = sub_10017DF08(&qword_100E92CD8);
  uint64_t v107 = *(void (***)(char *, char *, uint64_t))(v108 - 8);
  __chkstk_darwin(v108);
  uint64_t v33 = (char *)&v96 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v106 = (char *)type metadata accessor for DetailChartGradientModel();
  uint64_t v105 = (uint64_t *)*((void *)v106 - 1);
  __chkstk_darwin(v106);
  uint64_t v35 = (char *)&v96 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for ChartKind();
  uint64_t v37 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v39 = (char *)&v96 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_10017DF08(&qword_100E92CC0);
  __chkstk_darwin(v40 - 8);
  uint64_t v131 = (uint64_t)&v96 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  uint64_t v130 = (char *)&v96 - v43;
  uint64_t v44 = (int *)type metadata accessor for ChartViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v39, a1 + v44[5], v36);
  int v45 = (*(uint64_t (**)(char *, uint64_t))(v37 + 88))(v39, v36);
  if (v45 == enum case for ChartKind.line(_:))
  {
    uint64_t v108 = (uint64_t)v19;
    (*(void (**)(char *, uint64_t))(v37 + 96))(v39, v36);
    uint64_t v46 = (uint64_t)&v39[*(int *)(sub_10017DF08(&qword_100E6BEF8) + 48)];
    sub_10020E72C((uint64_t)v39, (uint64_t)v31, &qword_100E6BEC8);
    sub_10020E72C(v46, (uint64_t)v28, &qword_100E6BEC8);
    uint64_t v47 = v109;
    uint64_t v48 = sub_1007AEF24((uint64_t)v31, (uint64_t)v28, a1, v109);
    uint64_t v105 = &v96;
    __chkstk_darwin(v48);
    uint64_t v107 = v28;
    *(&v96 - 4) = (uint64_t)v28;
    *(&v96 - 3) = a1;
    uint64_t v94 = v47;
    unint64_t v95 = v31;
    unint64_t v106 = v31;
    sub_10017DF08(&qword_100E94EA8);
    sub_1007B2BC0();
    uint64_t v49 = v112;
    Plot.init(content:)();
    (*(void (**)(uint64_t, uint64_t))(v110 + 8))(v47, v111);
    (*(void (**)(char *, uint64_t, uint64_t))(v118 + 16))(v117, a1 + v44[26], v119);
    InterpolationMethod.init(_:)();
    sub_10024D5E4((uint64_t)&unk_100E92CF8);
    uint64_t v50 = v129;
    uint64_t v51 = v116;
    ChartContent.interpolationMethod(_:)();
    (*(void (**)(char *, uint64_t))(v115 + 8))(v49, v51);
    uint64_t v52 = v113;
    uint64_t v53 = v128;
    uint64_t v54 = v114;
    (*(void (**)(char *, int *, uint64_t))(v113 + 32))(v128, v50, v114);
    uint64_t v55 = *(void *)(*(void *)(a1 + v44[22]) + 16);
    uint64_t v56 = v44;
    uint64_t v96 = a1;
    if (v55)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v100, a1 + v44[23], v98);
      uint64_t v57 = qword_100E62450;
      swift_bridgeObjectRetain();
      uint64_t v58 = (uint64_t)v130;
      if (v57 != -1) {
        swift_once();
      }
      swift_beginAccess();
      sub_10058CC34();
      sub_10058CA14();
      sub_10058CB40();
      swift_endAccess();
      uint64_t v59 = v102;
      ChartPointMarkSeries.init(markers:markStyle:symbolSize:labelFont:fallbackLabelColor:)();
      sub_1007B1450((uint64_t)&unk_100E92D10);
      uint64_t v60 = v99;
      uint64_t v61 = v104;
      ChartContent.accessibilityHidden(_:)();
      (*(void (**)(char *, uint64_t))(v103 + 8))(v59, v61);
      uint64_t v62 = v108;
      uint64_t v63 = v121;
      (*(void (**)(uint64_t, char *, uint64_t))(v101 + 32))(v108, v60, v121);
      uint64_t v64 = 0;
      uint64_t v56 = v44;
      uint64_t v53 = v128;
      uint64_t v65 = (uint64_t)v129;
    }
    else
    {
      uint64_t v65 = (uint64_t)v50;
      uint64_t v64 = 1;
      uint64_t v58 = (uint64_t)v130;
      uint64_t v62 = v108;
      uint64_t v63 = v121;
    }
    _s7Weather24LocationCompositionStateOwst_0(v62, v64, 1, v63);
    (*(void (**)(uint64_t, char *, uint64_t))(v52 + 16))(v65, v53, v54);
    uint64_t v136 = v65;
    uint64_t v75 = v52;
    uint64_t v76 = v53;
    uint64_t v77 = v120;
    sub_1005EFB58(v62, v120, &qword_100E92D08);
    uint64_t v137 = (void *)v77;
    uint64_t v78 = v122;
    sub_1007698A4((uint64_t)&v136, v122);
    sub_10017DF4C(v77, &qword_100E92D08);
    uint64_t v79 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
    v79(v65, v54);
    sub_1005EFB58(v78, v58, &qword_100E92CE8);
    sub_10017DF08(&qword_100E94EB8);
    swift_storeEnumTagMultiPayload();
    sub_10017DF4C(v78, &qword_100E92CE8);
    sub_10017DF4C(v62, &qword_100E92D08);
    v79((uint64_t)v76, v54);
    sub_10017DF4C((uint64_t)v107, &qword_100E6BEC8);
    sub_10017DF4C((uint64_t)v106, &qword_100E6BEC8);
    uint64_t v66 = v96;
  }
  else
  {
    unint64_t v129 = v44;
    if (v45 != enum case for ChartKind.bar(_:))
    {
      uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      return result;
    }
    uint64_t v66 = a1;
    (*(void (**)(char *, uint64_t))(v37 + 96))(v39, v36);
    uint64_t v67 = v105;
    uint64_t v68 = (uint64_t)v106;
    uint64_t v69 = ((uint64_t (*)(char *, char *, char *))v105[4])(v35, v39, v106);
    __chkstk_darwin(v69);
    uint64_t v94 = v66;
    unint64_t v95 = v35;
    sub_10017DF08(&qword_100E94ED0);
    uint64_t v70 = sub_10018C6DC(&qword_100E94ED8);
    uint64_t v71 = type metadata accessor for RectangleMark();
    unint64_t v72 = sub_1007B2CE4();
    uint64_t v136 = v70;
    uint64_t v137 = (void *)v71;
    unint64_t v138 = v72;
    uint64_t v139 = &protocol witness table for RectangleMark;
    swift_getOpaqueTypeConformance2();
    Plot.init(content:)();
    uint64_t v73 = (uint64_t)v107;
    uint64_t v58 = (uint64_t)v130;
    uint64_t v74 = v108;
    v107[2](v130, v33, v108);
    sub_10017DF08(&qword_100E94EB8);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v33, v74);
    ((void (*)(char *, uint64_t))v67[1])(v35, v68);
    uint64_t v56 = v129;
  }
  uint64_t v80 = v56[8];
  if (*(void *)(v66 + v80))
  {
    uint64_t v140 = *(void *)(v66 + v80);
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    sub_10017DF08(&qword_100E7D4B8);
    sub_10017DF08(&qword_100E94EC0);
    sub_10024D5E4((uint64_t)&unk_100E7D4C8);
    sub_1007B1450((uint64_t)&unk_100E94EC8);
    uint64_t v81 = sub_10018C6DC(&qword_100E92D38);
    uint64_t v82 = sub_10018C6DC(&qword_100E92D40);
    uint64_t v136 = type metadata accessor for PointMark();
    uint64_t v137 = &protocol witness table for PointMark;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v136 = v82;
    uint64_t v137 = &type metadata for Color;
    unint64_t v138 = OpaqueTypeConformance2;
    uint64_t v139 = &protocol witness table for Color;
    uint64_t v84 = swift_getOpaqueTypeConformance2();
    uint64_t v136 = v81;
    uint64_t v137 = &type metadata for Text;
    unint64_t v138 = v84;
    uint64_t v139 = &protocol witness table for Text;
    uint64_t v94 = swift_getOpaqueTypeConformance2();
    unint64_t v85 = v125;
    ForEach<>.init(_:id:content:)();
    sub_100773ABC();
    unint64_t v86 = v123;
    uint64_t v87 = v127;
    ChartContent.accessibilityHidden(_:)();
    (*(void (**)(char *, uint64_t))(v126 + 8))(v85, v87);
    uint64_t v89 = (uint64_t)v132;
    uint64_t v88 = v133;
    (*(void (**)(char *, char *, uint64_t))(v124 + 32))(v132, v86, v133);
    uint64_t v90 = 0;
  }
  else
  {
    uint64_t v90 = 1;
    uint64_t v89 = (uint64_t)v132;
    uint64_t v88 = v133;
  }
  _s7Weather24LocationCompositionStateOwst_0(v89, v90, 1, v88);
  uint64_t v91 = v131;
  sub_1005EFB58(v58, v131, &qword_100E92CC0);
  uint64_t v136 = v91;
  uint64_t v92 = v134;
  sub_1005EFB58(v89, v134, &qword_100E92D18);
  uint64_t v137 = (void *)v92;
  sub_1007699CC(&v136, v135);
  sub_10017DF4C(v89, &qword_100E92D18);
  sub_10017DF4C(v58, &qword_100E92CC0);
  sub_10017DF4C(v92, &qword_100E92D18);
  return sub_10017DF4C(v91, &qword_100E92CC0);
}

uint64_t sub_1007AA1F0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ChartDateStep();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v27 - v13;
  uint64_t v15 = (int *)type metadata accessor for ChartViewModel(0);
  sub_1007B212C(a1 + v15[12], (uint64_t)v8, (void (*)(void))type metadata accessor for ChartDateStep);
  uint64_t v16 = sub_10017DF08(&qword_100E6BF00);
  sub_10020E72C((uint64_t)&v8[*(int *)(v16 + 48)], (uint64_t)v14, (uint64_t *)&unk_100E73CA0);
  sub_1005EFB58((uint64_t)v14, (uint64_t)v11, (uint64_t *)&unk_100E73CA0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v2) == 1)
  {
    sub_10017DF4C((uint64_t)v14, (uint64_t *)&unk_100E73CA0);
    sub_10017DF4C((uint64_t)v11, (uint64_t *)&unk_100E73CA0);
    sub_10017DF08(&qword_100E6B688);
    uint64_t v17 = *(void *)(v3 + 72);
    unint64_t v18 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_100C25ED0;
    unint64_t v20 = v19 + v18;
    uint64_t v21 = *(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 16);
    v21(v20, a1 + v15[19], v2);
    v21(v20 + v17, a1 + v15[20], v2);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v11, v2);
    sub_10017DF08(&qword_100E6B688);
    uint64_t v28 = *(void *)(v3 + 72);
    unint64_t v22 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_100C25ED0;
    unint64_t v23 = v19 + v22;
    uint64_t v24 = a1;
    uint64_t v25 = *(void (**)(unint64_t, char *, uint64_t))(v3 + 16);
    v25(v23, v5, v2);
    v25(v23 + v28, (char *)(v24 + v15[20]), v2);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    sub_10017DF4C((uint64_t)v14, (uint64_t *)&unk_100E73CA0);
  }
  return v19;
}

uint64_t sub_1007AA544@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ChartView(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AxisMarkValues();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = type metadata accessor for AxisMarkPosition();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for AxisMarkPreset();
  __chkstk_darwin(v10 - 8);
  v30[1] = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E94D78);
  uint64_t v31 = *(void *)(v12 - 8);
  uint64_t v32 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ChartViewModel(0);
  p_types = &stru_100E61FF8.types;
  if (*(void *)(v2 + *(int *)(v15 + 32)))
  {
    if (qword_100E62450 != -1) {
      swift_once();
    }
    swift_beginAccess();
    double v17 = *(double *)&xmmword_100F51798 + *((double *)&xmmword_100F51798 + 1) + *((double *)&xmmword_100F51798 + 1);
    p_types = (char **)(&stru_100E61FF8 + 8);
  }
  else
  {
    double v17 = 0.0;
  }
  v30[0] = a1;
  if (p_types[138] != (char *)-1) {
    swift_once();
  }
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  sub_10017DF08(&qword_100E6BEF0);
  uint64_t v18 = swift_allocObject();
  __asm { FMOV            V1.2D, #2.0 }
  *(_OWORD *)(v18 + 16) = xmmword_100C25ED0;
  *(_OWORD *)(v18 + 32) = _Q1;
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  static AxisMarkPreset.extended.getter();
  static AxisMarkPosition.bottom.getter();
  sub_1007AAF28();
  sub_1007B212C(v2, (uint64_t)v7, (void (*)(void))type metadata accessor for ChartView);
  unint64_t v24 = (*(unsigned __int8 *)(v5 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v25 = swift_allocObject();
  long long v26 = v34;
  *(_OWORD *)(v25 + 16) = v33;
  *(_OWORD *)(v25 + 32) = v26;
  long long v27 = v37;
  *(_OWORD *)(v25 + 56) = v36;
  *(void *)(v25 + 48) = v35;
  *(_OWORD *)(v25 + 72) = v27;
  *(void *)(v25 + 88) = v38;
  *(double *)(v25 + 96) = v17;
  sub_1007B1054((uint64_t)v7, v25 + v24);
  sub_10017DF08(&qword_100E94E50);
  sub_1007B28B8();
  AxisMarks.init(preset:position:values:content:)();
  sub_10017DF08(&qword_100E94D80);
  sub_10024D5E4((uint64_t)&unk_100E94D88);
  sub_1007B0FB8((uint64_t)&unk_100E94D90);
  uint64_t v28 = v32;
  AxisContent.compositingLayer<A>(style:)();
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v14, v28);
}

uint64_t sub_1007AAA34@<X0>(uint64_t a1@<X8>)
{
  v16[1] = a1;
  uint64_t v2 = type metadata accessor for ChartView(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = type metadata accessor for AxisMarkValues();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for AxisMarkPosition();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for AxisMarkPreset();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_10017DF08(&qword_100E94DB0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static AxisMarkPreset.aligned.getter();
  static AxisMarkPosition.trailing.getter();
  uint64_t v12 = type metadata accessor for ChartViewModel(0);
  sub_1007AC650(*(void *)(v1 + *(int *)(v12 + 52)), *(unsigned char *)(v1 + *(int *)(v12 + 52) + 8));
  sub_1007B212C(v1, (uint64_t)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for ChartView);
  unint64_t v13 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v14 = swift_allocObject();
  sub_1007B1054((uint64_t)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13);
  sub_10017DF08(&qword_100E94E08);
  sub_1007B2C74((uint64_t)&unk_100E94E10);
  AxisMarks.init(preset:position:values:content:)();
  sub_10017DF08(&qword_100E94DB8);
  sub_10024D5E4((uint64_t)&unk_100E94DC0);
  sub_1007B0FB8((uint64_t)&unk_100E94DC8);
  AxisContent.compositingLayer<A>(style:)();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1007AADE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for ChartViewModel(0);
  sub_1007B212C(a2 + *(int *)(v6 + 56), a3, (void (*)(void))type metadata accessor for ChartViewModel.Background);
  uint64_t v7 = (int *)type metadata accessor for ChartBackgroundView(0);
  uint64_t v8 = a3 + v7[5];
  uint64_t v9 = type metadata accessor for ChartProxy();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v8, a1, v9);
  uint64_t v10 = a2 + *(int *)(v6 + 76);
  uint64_t v11 = a3 + v7[6];
  uint64_t v12 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v11, v10, v12);
  unint64_t v13 = (uint64_t *)(a3 + v7[7]);
  *unint64_t v13 = swift_getKeyPath();
  sub_10017DF08(&qword_100E62CB8);

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1007AAF28()
{
  uint64_t v1 = sub_10017DF08(&qword_100E7D438);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Calendar.Component();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ChartDateStep();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1007B212C(v0, (uint64_t)v10, (void (*)(void))type metadata accessor for ChartDateStep);
  uint64_t v11 = (uint64_t)&v10[*(int *)(sub_10017DF08(&qword_100E6BF00) + 48)];
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Calendar.Component.hour(_:), v4);
  uint64_t v12 = type metadata accessor for Calendar();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v3, 1, 1, v12);
  static AxisMarkValues.stride(by:count:roundLowerBound:roundUpperBound:calendar:)();
  sub_10017DF4C((uint64_t)v3, &qword_100E7D438);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_10017DF4C(v11, (uint64_t *)&unk_100E73CA0);
}

uint64_t sub_1007AB13C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v160 = a4;
  uint64_t v168 = a5;
  double v6 = *(double *)a2;
  unsigned int v7 = *(_DWORD *)(a2 + 8);
  LODWORD(v157) = *(_DWORD *)(a2 + 12);
  double v8 = *(double *)(a2 + 16);
  double v9 = *(double *)(a2 + 32);
  uint64_t v155 = *(void *)(a2 + 24);
  double v10 = *(double *)a3;
  unsigned int v154 = *(_DWORD *)(a3 + 8);
  unsigned int v153 = *(_DWORD *)(a3 + 12);
  double v11 = *(double *)(a3 + 16);
  double v12 = *(double *)(a3 + 32);
  uint64_t v152 = *(void *)(a3 + 24);
  uint64_t v13 = type metadata accessor for AxisValueLabelOrientation();
  __chkstk_darwin(v13 - 8);
  unint64_t v129 = (char *)&v125 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for AxisValueLabelCollisionResolution();
  __chkstk_darwin(v15 - 8);
  unint64_t v128 = (char *)&v125 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = sub_10017DF08(&qword_100E94E38);
  uint64_t v134 = *(void *)(v135 - 8);
  __chkstk_darwin(v135);
  uint64_t v132 = (char *)&v125 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = sub_10017DF08(&qword_100E94E48);
  uint64_t v133 = *(void *)(v167 - 8);
  __chkstk_darwin(v167);
  uint64_t v131 = (char *)&v125 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v130 = (char *)&v125 - v20;
  uint64_t v127 = type metadata accessor for TimeStyle();
  uint64_t v126 = *(void *)(v127 - 8);
  __chkstk_darwin(v127);
  uint64_t v156 = (char *)&v125 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10017DF08(&qword_100E6B640);
  __chkstk_darwin(v22 - 8);
  uint64_t v136 = (char *)&v125 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = type metadata accessor for DetailChartDataElement();
  uint64_t v161 = *(void *)(v158 - 8);
  __chkstk_darwin(v158);
  uint64_t v162 = (char *)&v125 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v159 = (char *)&v125 - v26;
  uint64_t v27 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v27 - 8);
  uint64_t v170 = (void (*)(char *, uint64_t, uint64_t))((char *)&v125 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v173 = type metadata accessor for Date();
  uint64_t v164 = *(void *)(v173 - 8);
  __chkstk_darwin(v173);
  uint64_t v171 = (char *)&v125 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v172 = (char *)&v125 - v31;
  uint64_t v32 = sub_10017DF08(&qword_100E94E88);
  __chkstk_darwin(v32 - 8);
  uint64_t v166 = (uint64_t)&v125 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v165 = (char *)&v125 - v35;
  uint64_t v36 = type metadata accessor for AxisTick.Length();
  __chkstk_darwin(v36 - 8);
  uint64_t v144 = (char *)&v125 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = type metadata accessor for AxisTick();
  uint64_t v147 = *(void *)(v148 - 8);
  __chkstk_darwin(v148);
  uint64_t v145 = (char *)&v125 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = sub_10017DF08(&qword_100E7D490);
  uint64_t v150 = *(void *)(v151 - 8);
  __chkstk_darwin(v151);
  uint64_t v149 = (char *)&v125 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40);
  uint64_t v146 = (char *)&v125 - v41;
  uint64_t v42 = type metadata accessor for AxisGridLine();
  uint64_t v137 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v44 = (char *)&v125 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = sub_10017DF08(&qword_100E7D410);
  uint64_t v138 = *(void *)(v139 - 8);
  __chkstk_darwin(v139);
  uint64_t v46 = (char *)&v125 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = sub_10017DF08(&qword_100E94E90);
  uint64_t v142 = *(void *)(v143 - 8);
  __chkstk_darwin(v143);
  uint64_t v141 = (char *)&v125 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v48);
  uint64_t v50 = (char *)&v125 - v49;
  __chkstk_darwin(v51);
  uint64_t v140 = (char *)&v125 - v52;
  uint64_t v53 = sub_10017DF08(&qword_100E94E68);
  __chkstk_darwin(v53 - 8);
  uint64_t v169 = (uint64_t)&v125 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v55);
  uint64_t v57 = (char *)&v125 - v56;
  char v58 = AxisValue.isFirst.getter();
  uint64_t v163 = v57;
  if (v58)
  {
    uint64_t v59 = sub_10017DF08(&qword_100E94E78);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v57, 1, 1, v59);
  }
  else
  {
    char v60 = AxisValue.isLast.getter();
    if ((v60 & 1) == 0) {
      double v6 = v10;
    }
    uint64_t v61 = a1;
    if (v60) {
      uint64_t v62 = v7;
    }
    else {
      uint64_t v62 = v154;
    }
    if (v60) {
      uint64_t v63 = v157;
    }
    else {
      uint64_t v63 = v153;
    }
    if (v60)
    {
      uint64_t v64 = v155;
    }
    else
    {
      double v8 = v11;
      uint64_t v64 = v152;
    }
    if ((v60 & 1) == 0) {
      double v9 = v12;
    }
    swift_bridgeObjectRetain();
    double v178 = v6;
    uint64_t v179 = v62 | (v63 << 32);
    double v180 = v8;
    uint64_t v181 = v64;
    double v182 = v9;
    swift_bridgeObjectRetain();
    AxisGridLine.init(centered:stroke:)();
    if (qword_100E62450 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v65 = sub_10058C87C();
    swift_endAccess();
    uint64_t v174 = v65;
    AxisMark.foregroundStyle<A>(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v137 + 8))(v44, v42);
    AxisValue.isLast.getter();
    uint64_t v174 = v42;
    uint64_t v175 = &type metadata for Color;
    uint64_t v176 = &protocol witness table for AxisGridLine;
    uint64_t v177 = &protocol witness table for Color;
    swift_getOpaqueTypeConformance2();
    uint64_t v66 = v139;
    AxisMark.offset(x:y:)();
    (*(void (**)(char *, uint64_t))(v138 + 8))(v46, v66);
    uint64_t v67 = v142;
    uint64_t v68 = v140;
    uint64_t v69 = v143;
    (*(void (**)(char *, char *, uint64_t))(v142 + 32))(v140, v50, v143);
    static AxisTick.Length.automatic.getter();
    uint64_t v70 = v145;
    AxisTick.init(centered:length:stroke:)();
    swift_beginAccess();
    uint64_t v71 = sub_10058C87C();
    swift_endAccess();
    uint64_t v174 = v71;
    unint64_t v72 = v149;
    uint64_t v157 = v61;
    uint64_t v73 = v148;
    AxisMark.foregroundStyle<A>(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v147 + 8))(v70, v73);
    uint64_t v74 = v150;
    uint64_t v75 = v146;
    uint64_t v76 = v151;
    (*(void (**)(char *, char *, uint64_t))(v150 + 32))(v146, v72, v151);
    uint64_t v77 = v141;
    (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v141, v68, v69);
    uint64_t v174 = (uint64_t)v77;
    (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v72, v75, v76);
    uint64_t v175 = v72;
    uint64_t v78 = v169;
    sub_100952688();
    uint64_t v79 = *(void (**)(char *, uint64_t))(v74 + 8);
    v79(v75, v76);
    uint64_t v80 = *(void (**)(char *, uint64_t))(v67 + 8);
    v80(v68, v69);
    v79(v72, v76);
    v80(v77, v69);
    uint64_t v81 = sub_10017DF08(&qword_100E94E78);
    _s7Weather24LocationCompositionStateOwst_0(v78, 0, 1, v81);
    uint64_t v57 = v163;
    sub_10020E72C(v78, (uint64_t)v163, &qword_100E94E68);
    a1 = v157;
  }
  uint64_t v82 = v162;
  uint64_t v83 = (uint64_t)v170;
  uint64_t v84 = v173;
  AxisValue.as<A>(_:)();
  if (_s7Weather24LocationCompositionStateOwet_0(v83, 1, v84) == 1)
  {
    sub_10017DF4C(v83, (uint64_t *)&unk_100E73CA0);
    uint64_t v85 = (uint64_t)v165;
LABEL_30:
    _s7Weather24LocationCompositionStateOwst_0(v85, 1, 1, v167);
    goto LABEL_34;
  }
  uint64_t v86 = v164;
  (*(void (**)(char *, uint64_t, uint64_t))(v164 + 32))(v172, v83, v84);
  uint64_t v87 = type metadata accessor for ChartViewModel(0);
  uint64_t v88 = *(void *)(v160 + *(int *)(v87 + 24));
  uint64_t v89 = *(void *)(v88 + 16);
  if (v89)
  {
    uint64_t v162 = (char *)v87;
    uint64_t v157 = a1;
    uint64_t v170 = *(void (**)(char *, uint64_t, uint64_t))(v161 + 16);
    uint64_t v90 = v88;
    uint64_t v91 = v88 + ((*(unsigned __int8 *)(v161 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v161 + 80));
    uint64_t v92 = (void (**)(char *, uint64_t))(v86 + 8);
    uint64_t v93 = (void (**)(char *, uint64_t))(v161 + 8);
    uint64_t v94 = *(void *)(v161 + 72);
    uint64_t v155 = v90;
    swift_bridgeObjectRetain();
    uint64_t v95 = v158;
    uint64_t v96 = v171;
    while (1)
    {
      v170(v82, v91, v95);
      uint64_t v97 = v82;
      DetailChartDataElement.date.getter();
      char v98 = static Date.== infix(_:_:)();
      (*v92)(v96, v173);
      if (v98) {
        break;
      }
      (*v93)(v97, v95);
      v91 += v94;
      --v89;
      uint64_t v82 = v97;
      if (!v89)
      {
        uint64_t v99 = 1;
        uint64_t v100 = v161;
        uint64_t v101 = (uint64_t)v136;
        goto LABEL_28;
      }
    }
    uint64_t v100 = v161;
    uint64_t v101 = (uint64_t)v136;
    (*(void (**)(char *, char *, uint64_t))(v161 + 32))(v136, v97, v95);
    uint64_t v99 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v99 = 1;
    uint64_t v95 = v158;
    uint64_t v100 = v161;
    uint64_t v101 = (uint64_t)v136;
  }
LABEL_28:
  _s7Weather24LocationCompositionStateOwst_0(v101, v99, 1, v95);
  swift_bridgeObjectRelease();
  int v102 = _s7Weather24LocationCompositionStateOwet_0(v101, 1, v95);
  uint64_t v103 = v156;
  if (v102 == 1)
  {
    (*(void (**)(char *, uint64_t))(v164 + 8))(v172, v173);
    sub_10017DF4C(v101, &qword_100E6B640);
    uint64_t v85 = (uint64_t)v165;
    uint64_t v57 = v163;
    goto LABEL_30;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v100 + 32))(v159, v101, v95);
  type metadata accessor for Style();
  static Style.componentTime.getter();
  DetailChartDataElement.dateLabel.getter();
  if (qword_100E62450 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_10058CA14();
  swift_endAccess();
  uint64_t v104 = TimeStyle.formatTime(_:periodSymbols:font:)();
  uint64_t v106 = v105;
  char v108 = v107;
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v126 + 8))(v103, v127);
  uint64_t v109 = AxisValue.isFirst.getter();
  __chkstk_darwin(v109);
  static AxisValueLabelCollisionResolution.automatic.getter();
  static AxisValueLabelOrientation.automatic.getter();
  uint64_t v124 = &protocol witness table for Text;
  uint64_t v122 = &v119;
  uint64_t v123 = &type metadata for Text;
  uint64_t v121 = sub_1007B2B7C;
  char v120 = 0;
  uint64_t v119 = 0x4024000000000000;
  uint64_t v110 = v132;
  AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:)();
  sub_10024D5E4((uint64_t)&unk_100E94E40);
  uint64_t v111 = v131;
  uint64_t v112 = v135;
  AxisMark.offset(x:y:)();
  sub_100191924(v104, v106, v108 & 1);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v134 + 8))(v110, v112);
  (*(void (**)(char *, uint64_t))(v100 + 8))(v159, v158);
  uint64_t v113 = *(void (**)(char *, char *, uint64_t))(v133 + 32);
  uint64_t v114 = v130;
  uint64_t v115 = v167;
  v113(v130, v111, v167);
  uint64_t v85 = (uint64_t)v165;
  v113(v165, v114, v115);
  _s7Weather24LocationCompositionStateOwst_0(v85, 0, 1, v115);
  (*(void (**)(char *, uint64_t))(v164 + 8))(v172, v173);
  uint64_t v57 = v163;
LABEL_34:
  uint64_t v116 = v169;
  sub_1005EFB58((uint64_t)v57, v169, &qword_100E94E68);
  uint64_t v174 = v116;
  uint64_t v117 = v166;
  sub_1005EFB58(v85, v166, &qword_100E94E88);
  uint64_t v175 = (void *)v117;
  sub_1009527C8();
  sub_10017DF4C(v85, &qword_100E94E88);
  sub_10017DF4C((uint64_t)v57, &qword_100E94E68);
  sub_10017DF4C(v117, &qword_100E94E88);
  return sub_10017DF4C(v116, &qword_100E94E68);
}

uint64_t sub_1007AC558@<X0>(uint64_t a1@<X8>)
{
  if (qword_100E62450 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_10058CB40();
  swift_endAccess();
  uint64_t v2 = Text.foregroundColor(_:)();
  uint64_t v4 = v3;
  char v6 = v5;
  uint64_t v8 = v7;
  uint64_t result = swift_release();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v6 & 1;
  *(void *)(a1 + 24) = v8;
  return result;
}

uint64_t sub_1007AC63C(uint64_t a1)
{
  return sub_1007AD470(a1, &qword_100E94D80, &qword_100E94DA0);
}

uint64_t sub_1007AC650(uint64_t a1, char a2)
{
  if (a2)
  {
    return static AxisMarkValues.automatic(desiredCount:roundLowerBound:roundUpperBound:)(a1, 0, 2, 2);
  }
  else
  {
    sub_100146A70();
    return static AxisMarkValues.stride<A>(by:roundLowerBound:roundUpperBound:)();
  }
}

uint64_t sub_1007AC6D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v112 = a2;
  uint64_t v113 = a3;
  uint64_t v4 = sub_10017DF08(&qword_100E94E08);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AxisValueLabelOrientation();
  __chkstk_darwin(v7 - 8);
  uint64_t v109 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AxisValueLabelCollisionResolution();
  __chkstk_darwin(v9 - 8);
  char v108 = (char *)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E94E38);
  uint64_t v111 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v110 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100E94E48);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v90 - v18;
  uint64_t v20 = sub_10017DF08(&qword_100E63DB8);
  __chkstk_darwin(v20 - 8);
  uint64_t v105 = (uint64_t)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = type metadata accessor for AxisGridLine();
  uint64_t v99 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  char v98 = (char *)&v90 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_10017DF08(&qword_100E7D410);
  uint64_t v97 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v96 = (char *)&v90 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = type metadata accessor for ChartView(0);
  __chkstk_darwin(v104);
  *(void *)&long long v102 = (char *)&v90 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for AxisValue();
  uint64_t v101 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v90 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_10017DF08(&qword_100E94E30);
  __chkstk_darwin(v28 - 8);
  uint64_t v107 = (uint64_t)&v90 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  *(void *)&long long v106 = (char *)&v90 - v31;
  AxisValue.as<A>(_:)();
  if (BYTE8(v121)) {
    goto LABEL_5;
  }
  uint64_t v90 = v11;
  uint64_t v91 = v19;
  uint64_t v92 = v16;
  uint64_t v93 = v14;
  uint64_t v94 = v13;
  uint64_t v95 = v6;
  double v32 = *(double *)&v121;
  uint64_t v33 = (int *)type metadata accessor for ChartViewModel(0);
  uint64_t v34 = v112;
  uint64_t v35 = v112 + v33[11];
  unint64_t v36 = *(void *)v35;
  unint64_t v37 = *(void *)(v35 + 8);
  unint64_t v38 = *(void *)(v35 + 16);
  uint64_t v39 = (void (*)(uint64_t, uint64_t))*(unsigned __int8 *)(v35 + 24);
  char v40 = AxisValue.isFirst.getter();
  char v41 = AxisValue.isLast.getter();
  uint64_t v42 = sub_1007E00C4(v40 & 1, v41 & 1, v36, v37, v38, v39, v32);
  if (!v43)
  {
LABEL_5:
    uint64_t v50 = sub_10017DF08(&qword_100E94E20);
    return _s7Weather24LocationCompositionStateOwst_0(v113, 1, 1, v50);
  }
  uint64_t v44 = v42;
  uint64_t v45 = v43;
  uint64_t v46 = *(void *)(v34 + v33[8]);
  uint64_t v47 = v101;
  (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v27, a1, v25);
  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v27, v25);
    uint64_t v48 = v102;
    sub_1007B212C(v34, v102, (void (*)(void))type metadata accessor for ChartView);
    uint64_t v49 = v90;
LABEL_9:
    sub_10014CED8(v48, (void (*)(void))type metadata accessor for ChartView);
    uint64_t v54 = v106;
    goto LABEL_10;
  }
  char v52 = AxisValue.isLast.getter();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v27, v25);
  uint64_t v48 = v102;
  sub_1007B212C(v34, v102, (void (*)(void))type metadata accessor for ChartView);
  uint64_t v49 = v90;
  if ((v52 & 1) == 0) {
    goto LABEL_9;
  }
  double v53 = *(double *)(v48 + v33[10] + 8);
  sub_10014CED8(v48, (void (*)(void))type metadata accessor for ChartView);
  uint64_t v54 = v106;
  if (v53 > v32)
  {
LABEL_10:
    if (qword_100E62450 != -1) {
      swift_once();
    }
    swift_beginAccess();
    sub_10058CC60();
    long long v106 = v118;
    long long v102 = v119;
    uint64_t v57 = v120;
    swift_endAccess();
    long long v121 = v106;
    long long v122 = v102;
    uint64_t v123 = v57;
    char v58 = v98;
    AxisGridLine.init(centered:stroke:)();
    swift_beginAccess();
    uint64_t v59 = sub_10058C87C();
    swift_endAccess();
    uint64_t v116 = v59;
    char v60 = v96;
    uint64_t v61 = v100;
    AxisMark.foregroundStyle<A>(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v99 + 8))(v58, v61);
    uint64_t v56 = v103;
    (*(void (**)(uint64_t, char *, uint64_t))(v97 + 32))(v54, v60, v103);
    uint64_t v55 = 0;
    goto LABEL_13;
  }
  uint64_t v55 = 1;
  uint64_t v56 = v103;
LABEL_13:
  _s7Weather24LocationCompositionStateOwst_0(v54, v55, 1, v56);
  uint64_t v116 = v44;
  uint64_t v117 = v45;
  sub_10014A85C();
  uint64_t v62 = Text.init<A>(_:)();
  uint64_t v64 = v63;
  char v66 = v65;
  uint64_t v68 = v67;
  if (qword_100E62450 != -1) {
    swift_once();
  }
  uint64_t v69 = type metadata accessor for Text.WritingMode();
  uint64_t v70 = v105;
  _s7Weather24LocationCompositionStateOwst_0(v105, 1, 1, v69);
  Text.Measurements.size(of:in:writingMode:)();
  sub_10017DF4C(v70, &qword_100E63DB8);
  uint64_t v71 = swift_beginAccess();
  __chkstk_darwin(v71);
  *(void *)&long long v106 = v68;
  uint64_t v72 = v62;
  static AxisValueLabelCollisionResolution.automatic.getter();
  uint64_t v112 = v64;
  static AxisValueLabelOrientation.automatic.getter();
  uint64_t v89 = &protocol witness table for Text;
  uint64_t v87 = &v84;
  uint64_t v88 = &type metadata for Text;
  uint64_t v86 = sub_1007B23B8;
  char v85 = 1;
  uint64_t v84 = 0;
  uint64_t v73 = v110;
  AxisValueLabel.init(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:content:)();
  sub_10024D5E4((uint64_t)&unk_100E94E40);
  uint64_t v74 = v92;
  AxisMark.offset(x:y:)();
  (*(void (**)(char *, uint64_t))(v111 + 8))(v73, v49);
  uint64_t v75 = v93;
  uint64_t v76 = v91;
  uint64_t v77 = v94;
  (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v91, v74, v94);
  uint64_t v78 = v54;
  uint64_t v79 = v54;
  uint64_t v80 = v107;
  sub_1005EFB58(v78, v107, &qword_100E94E30);
  uint64_t v114 = v80;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v74, v76, v77);
  uint64_t v115 = v74;
  uint64_t v81 = (uint64_t)v95;
  sub_1009528B0();
  sub_100191924(v72, v112, v66 & 1);
  swift_bridgeObjectRelease();
  uint64_t v82 = *(void (**)(char *, uint64_t))(v75 + 8);
  v82(v76, v77);
  sub_10017DF4C(v79, &qword_100E94E30);
  v82(v74, v77);
  sub_10017DF4C(v80, &qword_100E94E30);
  uint64_t v83 = sub_10017DF08(&qword_100E94E20);
  _s7Weather24LocationCompositionStateOwst_0(v81, 0, 1, v83);
  return sub_10020E72C(v81, v113, &qword_100E94E08);
}

uint64_t sub_1007AD2F8@<X0>(uint64_t a1@<X8>)
{
  if (qword_100E62450 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_10058CB40();
  swift_endAccess();
  uint64_t v2 = Text.foregroundColor(_:)();
  uint64_t v4 = v3;
  char v6 = v5;
  swift_release();
  swift_beginAccess();
  sub_10058CA14();
  swift_endAccess();
  uint64_t v7 = Text.font(_:)();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  swift_release();
  sub_100191924(v2, v4, v6 & 1);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v13;
  return result;
}

uint64_t sub_1007AD45C(uint64_t a1)
{
  return sub_1007AD470(a1, &qword_100E94DB8, &qword_100E94DD8);
}

uint64_t sub_1007AD470(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v5 = type metadata accessor for BlendMode();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v10 - v9, enum case for BlendMode.plusLighter(_:), v5);
  sub_10017DF08(a2);
  sub_10017FDA4();
  v12();
  sub_10017DF08(a3);
  sub_100162E4C();
  sub_100119108();
  v13();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
}

uint64_t sub_1007AD590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v3 = type metadata accessor for AnnotationOverflowResolution();
  uint64_t v42 = *(void *)(v3 - 8);
  uint64_t v43 = v3;
  __chkstk_darwin(v3);
  char v40 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AnnotationPosition();
  uint64_t v38 = *(void *)(v5 - 8);
  uint64_t v39 = v5;
  __chkstk_darwin(v5);
  unint64_t v37 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for Date();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E77EF8);
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for PointMark();
  uint64_t v30 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100E92D40);
  uint64_t v31 = *(void *)(v13 - 8);
  uint64_t v32 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E92D38);
  uint64_t v34 = *(void *)(v16 - 8);
  uint64_t v35 = v16;
  __chkstk_darwin(v16);
  uint64_t v33 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v36 = a1;
  DetailChartDataElement.date.getter();
  uint64_t v18 = v28;
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v8, v18);
  if (qword_100E62450 != -1) {
    swift_once();
  }
  swift_beginAccess();
  PointMark.init<A>(x:y:)();
  ChartContent.symbolSize(_:)();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v10);
  uint64_t v48 = static Color.clear.getter();
  uint64_t v44 = v10;
  uint64_t v45 = &protocol witness table for PointMark;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v20 = v32;
  uint64_t v21 = v33;
  ChartContent.foregroundStyle<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v20);
  uint64_t v22 = v37;
  static AnnotationPosition.bottom.getter();
  uint64_t v23 = v40;
  uint64_t v24 = static AnnotationOverflowResolution.automatic.getter();
  __chkstk_darwin(v24);
  static Alignment.center.getter();
  uint64_t v44 = v20;
  uint64_t v45 = &type metadata for Color;
  uint64_t v46 = OpaqueTypeConformance2;
  uint64_t v47 = &protocol witness table for Color;
  swift_getOpaqueTypeConformance2();
  uint64_t v25 = v35;
  ChartContent.annotation<A>(position:alignment:spacing:overflowResolution:content:)();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v23, v43);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v22, v39);
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v21, v25);
}

uint64_t sub_1007ADC00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for DetailChartDataElement.ValueLabel();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  DetailChartDataElement.valueLabel.getter();
  uint64_t v6 = static ChartValueLabel.with(label:)();
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  static Font.footnote.getter();
  uint64_t v11 = Text.font(_:)();
  uint64_t v13 = v12;
  char v15 = v14;
  uint64_t v17 = v16;
  swift_release();
  sub_100191924(v6, v8, v10);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v11;
  *(void *)(a1 + 8) = v13;
  *(unsigned char *)(a1 + 16) = v15 & 1;
  *(void *)(a1 + 24) = v17;
  return result;
}

uint64_t sub_1007ADD58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v32 = a3;
  uint64_t v5 = type metadata accessor for DetailChartGradientModel();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v8 = type metadata accessor for ChartView(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&KeyPath - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E94ED8);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v30 = v12;
  uint64_t v31 = v13;
  __chkstk_darwin(v12);
  uint64_t v29 = (char *)&KeyPath - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(int *)(type metadata accessor for ChartViewModel(0) + 24);
  uint64_t v28 = a1;
  uint64_t v38 = *(void *)(a1 + v15);
  uint64_t KeyPath = swift_getKeyPath();
  sub_1007B212C(a1, (uint64_t)v11, (void (*)(void))type metadata accessor for ChartView);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&KeyPath - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v5);
  unint64_t v16 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v17 = (v10 + *(unsigned __int8 *)(v6 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v18 = swift_allocObject();
  sub_1007B1054((uint64_t)v11, v18 + v16);
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v18 + v17, (char *)&KeyPath - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100E7D4B8);
  sub_10017DF08(&qword_100E94F00);
  sub_10024D5E4((uint64_t)&unk_100E7D4C8);
  sub_1007B1450((uint64_t)&unk_100E94EC8);
  uint64_t v19 = sub_10018C6DC(&qword_100E94EE8);
  uint64_t v20 = sub_10018C6DC(&qword_100E94EF0);
  unint64_t v21 = sub_10024D5E4((uint64_t)&unk_100E94EF8);
  unint64_t v22 = sub_10014A85C();
  uint64_t v34 = v20;
  uint64_t v35 = &type metadata for String;
  unint64_t v36 = v21;
  unint64_t v37 = v22;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v34 = v19;
  uint64_t v35 = &type metadata for String;
  unint64_t v36 = OpaqueTypeConformance2;
  unint64_t v37 = v22;
  swift_getOpaqueTypeConformance2();
  uint64_t v24 = v29;
  ForEach<>.init(_:id:content:)();
  uint64_t v33 = v28;
  type metadata accessor for RectangleMark();
  sub_1007B2CE4();
  uint64_t v25 = v30;
  ChartContent.mask<A>(content:)();
  return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v24, v25);
}

uint64_t sub_1007AE1BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v26 = a4;
  uint64_t v7 = sub_10017DF08(&qword_100E94EF0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E94EE8);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v24 = v11;
  uint64_t v25 = v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  sub_10017DF08(&qword_100E94F08);
  uint64_t v15 = sub_10018C6DC(&qword_100E94F10);
  uint64_t v32 = type metadata accessor for BarMark();
  uint64_t v33 = &protocol witness table for BarMark;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v32 = v15;
  uint64_t v33 = &type metadata for AnyShapeStyle;
  unint64_t v34 = OpaqueTypeConformance2;
  uint64_t v35 = &protocol witness table for AnyShapeStyle;
  swift_getOpaqueTypeConformance2();
  Plot.init(content:)();
  uint64_t v32 = DetailChartDataElement.accessibilityDateString.getter();
  uint64_t v33 = v17;
  unint64_t v18 = sub_10024D5E4((uint64_t)&unk_100E94EF8);
  unint64_t v19 = sub_10014A85C();
  ChartContent.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v30 = DetailChartDataElement.accessibilityValueDescription.getter();
  uint64_t v31 = v20;
  uint64_t v32 = v7;
  uint64_t v33 = &type metadata for String;
  unint64_t v34 = v18;
  uint64_t v35 = (void *)v19;
  swift_getOpaqueTypeConformance2();
  uint64_t v21 = v24;
  ChartContent.accessibilityValue<A>(_:)();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v14, v21);
}

uint64_t sub_1007AE4CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v51 = a3;
  uint64_t v52 = a2;
  uint64_t v53 = a4;
  uint64_t v5 = type metadata accessor for RoundedCornerStyle();
  uint64_t v49 = *(void *)(v5 - 8);
  uint64_t v50 = v5;
  __chkstk_darwin(v5);
  uint64_t v48 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E77ED8);
  __chkstk_darwin(v7 - 8);
  uint64_t v47 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E7D438);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for Calendar.Component();
  uint64_t v12 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for Date();
  uint64_t v39 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  unint64_t v16 = (char *)v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10017DF08(&qword_100E77EF8);
  __chkstk_darwin(v17 - 8);
  v37[1] = (char *)v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for BarMark();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v43 = v19;
  uint64_t v44 = v20;
  __chkstk_darwin(v19);
  char v40 = (char *)v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10017DF08(&qword_100E94F10);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v45 = v22;
  uint64_t v46 = v23;
  __chkstk_darwin(v22);
  uint64_t v42 = (char *)v37 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  DetailChartDataElement.date.getter();
  uint64_t v25 = v38;
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for Calendar.Component.hour(_:), v38);
  uint64_t v26 = type metadata accessor for Calendar();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 1, 1, v26);
  static PlottableValue.value<>(_:_:unit:calendar:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10017DF4C((uint64_t)v11, &qword_100E7D438);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v25);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v16, v41);
  LocalizedStringKey.init(stringLiteral:)();
  DetailChartDataElement.value.getter();
  uint64_t v54 = v27;
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v28 = v40;
  BarMark.init<A, B>(x:y:width:height:stacking:)();
  uint64_t v30 = v48;
  uint64_t v29 = v49;
  uint64_t v31 = v50;
  (*(void (**)(char *, void, uint64_t))(v49 + 104))(v48, enum case for RoundedCornerStyle.continuous(_:), v50);
  uint64_t v33 = v42;
  uint64_t v32 = v43;
  ChartContent.cornerRadius(_:style:)();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v31);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v28, v32);
  uint64_t v34 = sub_1007AEB2C(a1, v51);
  uint64_t v55 = &protocol witness table for BarMark;
  uint64_t v56 = v34;
  uint64_t v54 = v32;
  swift_getOpaqueTypeConformance2();
  uint64_t v35 = v45;
  ChartContent.foregroundStyle<A>(_:)();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v33, v35);
}

uint64_t sub_1007AEB2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DetailChartGradientModel();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = DetailChartDataElement.color.getter();
  if (v7)
  {
    v9[1] = v7;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
    LinearGradient.init(_:)();
  }
  return AnyShapeStyle.init<A>(_:)();
}

uint64_t sub_1007AEC40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  _OWORD v12[2] = a2;
  uint64_t v3 = sub_10017DF08(&qword_100E77ED8);
  __chkstk_darwin(v3 - 8);
  v12[1] = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  v12[0] = (char *)v12 - v6;
  uint64_t v7 = sub_10017DF08(&qword_100E77EF8);
  __chkstk_darwin(v7 - 8);
  __chkstk_darwin(v8);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v9 = type metadata accessor for ChartViewModel(0);
  type metadata accessor for Date();
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v10 = (uint64_t *)(a1 + *(int *)(v9 + 40));
  uint64_t v13 = *v10;
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v13 = v10[1];
  static PlottableValue.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return RectangleMark.init<A, B>(xStart:xEnd:yStart:yEnd:)();
}

uint64_t sub_1007AEF24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v33 = a3;
  uint64_t v34 = a4;
  uint64_t v6 = type metadata accessor for ChartLineStrokeStyle();
  uint64_t v31 = *(void *)(v6 - 8);
  uint64_t v32 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E6BEC8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v31 - v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v31 - v16;
  uint64_t v18 = type metadata accessor for ChartLineStyle();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005EFB58(a1, (uint64_t)v14, &qword_100E6BEC8);
  sub_1005EFB58(a2, (uint64_t)v11, &qword_100E6BEC8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v18) == 1)
  {
    sub_10020E72C((uint64_t)v11, (uint64_t)v17, &qword_100E6BEC8);
    sub_10017DF4C((uint64_t)v14, &qword_100E6BEC8);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18) == 1)
    {
      sub_10017DF4C((uint64_t)v17, &qword_100E6BEC8);
      goto LABEL_12;
    }
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  }
  else
  {
    sub_10017DF4C((uint64_t)v11, &qword_100E6BEC8);
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    v22(v17, v14, v18);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v18);
  }
  v22(v21, v17, v18);
  ChartLineStyle.strokeStyle.getter();
  uint64_t v24 = v31;
  uint64_t v23 = v32;
  int v25 = (*(uint64_t (**)(char *, uint64_t))(v31 + 88))(v8, v32);
  if (v25 == enum case for ChartLineStrokeStyle.dashed(_:))
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    (*(void (**)(char *, uint64_t))(v24 + 96))(v8, v23);
    uint64_t v26 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t))(*(void *)(v26 - 8) + 8))(v8, v26);
  }
  else
  {
    if (v25 == enum case for ChartLineStrokeStyle.solidFrom(_:))
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      (*(void (**)(char *, uint64_t))(v24 + 96))(v8, v23);
      uint64_t v27 = type metadata accessor for Date();
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v34, v8, v27);
    }
    if (v25 != enum case for ChartLineStrokeStyle.solid(_:))
    {
      uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      return result;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  }
LABEL_12:
  uint64_t v29 = v33 + *(int *)(type metadata accessor for ChartViewModel(0) + 76);
  uint64_t v30 = type metadata accessor for Date();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v34, v29, v30);
}

uint64_t sub_1007AF390@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v219 = a4;
  uint64_t v200 = a3;
  uint64_t v238 = a2;
  uint64_t v220 = a1;
  uint64_t v230 = a5;
  uint64_t v5 = type metadata accessor for ShadowModel();
  __chkstk_darwin(v5 - 8);
  v207 = (char *)&v189 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ColorSchemeContrast();
  __chkstk_darwin(v7 - 8);
  v206 = (char *)&v189 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ChartLineMark();
  uint64_t v209 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v208 = (char *)&v189 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v205 = (char *)&v189 - v12;
  uint64_t v233 = sub_10017DF08(&qword_100E94F18);
  __chkstk_darwin(v233);
  v228 = (char *)&v189 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v226 = (char *)&v189 - v15;
  uint64_t v237 = type metadata accessor for Date();
  v239 = *(void **)(v237 - 8);
  __chkstk_darwin(v237);
  uint64_t v217 = (char *)&v189 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v235 = (char *)&v189 - v18;
  uint64_t v224 = sub_10017DF08(&qword_100E94F20);
  __chkstk_darwin(v224);
  uint64_t v225 = (char *)&v189 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v227 = (uint64_t)&v189 - v21;
  uint64_t v22 = type metadata accessor for DetailChartExtrema();
  uint64_t v231 = *(void *)(v22 - 8);
  uint64_t v232 = v22;
  __chkstk_darwin(v22);
  uint64_t v236 = (char *)&v189 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v198 = type metadata accessor for ChartAreaSeries();
  uint64_t v197 = *(void *)(v198 - 8);
  __chkstk_darwin(v198);
  uint64_t v195 = (char *)&v189 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v216 = sub_10017DF08(&qword_100E94F28);
  uint64_t v196 = *(void *)(v216 - 8);
  __chkstk_darwin(v216);
  uint64_t v194 = (char *)&v189 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_10017DF08(&qword_100E6BED8);
  __chkstk_darwin(v26 - 8);
  uint64_t v199 = (char *)&v189 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v189 - v29;
  uint64_t v31 = type metadata accessor for ChartAreaStyle();
  uint64_t v215 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v223 = (char *)&v189 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v193 = (char *)&v189 - v34;
  __chkstk_darwin(v35);
  unint64_t v37 = (char *)&v189 - v36;
  uint64_t v38 = sub_10017DF08(&qword_100E92D60);
  __chkstk_darwin(v38 - 8);
  char v40 = (char *)&v189 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  uint64_t v204 = (uint64_t)&v189 - v42;
  __chkstk_darwin(v43);
  uint64_t v214 = (uint64_t)&v189 - v44;
  uint64_t v45 = sub_10017DF08(&qword_100E6BEC8);
  __chkstk_darwin(v45 - 8);
  uint64_t v218 = (char *)&v189 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v47);
  uint64_t v49 = (char *)&v189 - v48;
  uint64_t v50 = type metadata accessor for ChartLineStyle();
  uint64_t v234 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  v222 = (char *)&v189 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v52);
  uint64_t v201 = (char *)&v189 - v53;
  __chkstk_darwin(v54);
  uint64_t v56 = (char *)&v189 - v55;
  uint64_t v57 = sub_10017DF08(&qword_100E92D88);
  __chkstk_darwin(v57 - 8);
  uint64_t v212 = (uint64_t)&v189 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v59);
  uint64_t v211 = (uint64_t)&v189 - v60;
  __chkstk_darwin(v61);
  uint64_t v229 = (uint64_t)&v189 - v62;
  __chkstk_darwin(v63);
  char v65 = (char *)&v189 - v64;
  sub_1005EFB58(v220, (uint64_t)v49, &qword_100E6BEC8);
  int v66 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v50);
  uint64_t v210 = v9;
  v221 = v40;
  uint64_t v203 = v65;
  uint64_t v202 = v50;
  uint64_t v213 = v31;
  if (v66 == 1)
  {
    uint64_t v67 = v230;
    sub_10017DF4C((uint64_t)v49, &qword_100E6BEC8);
    uint64_t v68 = sub_10017DF08(&qword_100E92DA0);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 1, 1, v68);
    uint64_t v69 = (uint64_t)v65;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v234 + 32))(v56, v49, v50);
    ChartLineStyle.areaStyle.getter();
    int v70 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31);
    uint64_t v192 = v56;
    if (v70 == 1)
    {
      sub_10017DF4C((uint64_t)v30, &qword_100E6BED8);
      uint64_t v71 = 1;
      uint64_t v72 = v216;
      uint64_t v73 = v214;
    }
    else
    {
      uint64_t v74 = (int *)v37;
      (*(void (**)(char *, char *, uint64_t))(v215 + 32))(v37, v30, v31);
      uint64_t v75 = (int *)type metadata accessor for ChartViewModel(0);
      uint64_t v76 = v238;
      uint64_t v77 = *(void *)(v238 + v75[6]);
      (*(void (**)(char *, uint64_t, uint64_t))(v231 + 16))(v236, v238 + v75[7], v232);
      uint64_t v78 = (void (*)(char *, uint64_t, uint64_t))v239[2];
      v78(v235, v76 + v75[20], v237);
      sub_1007B1450((uint64_t)&qword_100E66CC0);
      swift_bridgeObjectRetain();
      uint64_t v79 = v200;
      uint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)();
      if ((result & 1) == 0)
      {
LABEL_20:
        __break(1u);
        goto LABEL_21;
      }
      uint64_t v191 = v74;
      uint64_t v220 = v77;
      uint64_t v81 = v233;
      uint64_t v82 = v226;
      uint64_t v83 = &v226[*(int *)(v233 + 48)];
      uint64_t v84 = v237;
      v78(v226, v79, v237);
      uint64_t v190 = v75;
      char v85 = (void (*)(char *, char *, uint64_t))v239[4];
      long long v189 = v83;
      v85(v83, v235, v84);
      uint64_t v86 = v228;
      uint64_t v87 = &v228[*(int *)(v81 + 48)];
      v78(v228, (uint64_t)v82, v84);
      v78(v87, (uint64_t)v83, v84);
      uint64_t v88 = (uint64_t)v225;
      v85(v225, v86, v84);
      uint64_t v89 = (void (*)(char *, uint64_t))v239[1];
      v89(v87, v84);
      uint64_t v90 = v89;
      uint64_t v91 = &v86[*(int *)(v81 + 48)];
      v85(v86, v82, v84);
      v85(v91, v189, v84);
      v85((char *)(v88 + *(int *)(v224 + 36)), v91, v84);
      v90(v86, v84);
      sub_10020E72C(v88, v227, &qword_100E94F20);
      uint64_t v92 = v215;
      uint64_t v93 = v191;
      uint64_t v94 = v213;
      (*(void (**)(char *, int *, uint64_t))(v215 + 16))(v193, v191, v213);
      ChartLineStyle.halfLineWidth.getter();
      uint64_t v95 = v195;
      ChartAreaSeries.init(chartData:dateExtrema:visibleDateRange:yAxisRange:areaStyle:halfLineWidth:useSecondValue:)();
      sub_1007B1450((uint64_t)&unk_100E92D70);
      uint64_t v96 = v194;
      uint64_t v97 = v198;
      ChartContent.accessibilityHidden(_:)();
      (*(void (**)(char *, uint64_t))(v197 + 8))(v95, v97);
      (*(void (**)(int *, uint64_t))(v92 + 8))(v93, v94);
      uint64_t v73 = v214;
      uint64_t v72 = v216;
      (*(void (**)(uint64_t, char *, uint64_t))(v196 + 32))(v214, v96, v216);
      uint64_t v71 = 0;
    }
    _s7Weather24LocationCompositionStateOwst_0(v73, v71, 1, v72);
    char v98 = (int *)type metadata accessor for ChartViewModel(0);
    uint64_t v99 = v238;
    uint64_t v100 = *(void *)(v238 + v98[6]);
    (*(void (**)(char *, uint64_t, uint64_t))(v231 + 16))(v236, v238 + v98[7], v232);
    uint64_t v101 = (void (*)(char *, uint64_t, uint64_t))v239[2];
    uint64_t v102 = v237;
    v101(v235, v99 + v98[19], v237);
    uint64_t v103 = v99 + v98[20];
    uint64_t v104 = v217;
    v101(v217, v103, v102);
    sub_1007B1450((uint64_t)&qword_100E66CC0);
    swift_bridgeObjectRetain();
    uint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)();
    if ((result & 1) == 0)
    {
      __break(1u);
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    uint64_t v191 = v98;
    uint64_t v105 = v233;
    long long v106 = v226;
    uint64_t v107 = &v226[*(int *)(v233 + 48)];
    char v108 = v104;
    uint64_t v109 = (void (*)(char *, char *, uint64_t))v239[4];
    uint64_t v220 = v100;
    uint64_t v110 = v237;
    v109(v226, v235, v237);
    uint64_t v190 = (int *)v107;
    v109(v107, v108, v110);
    uint64_t v111 = v228;
    uint64_t v112 = &v228[*(int *)(v105 + 48)];
    v101(v228, (uint64_t)v106, v110);
    v101(v112, (uint64_t)v107, v110);
    uint64_t v113 = (uint64_t)v225;
    v109(v225, v111, v110);
    uint64_t v114 = (void (*)(char *, uint64_t))v239[1];
    v114(v112, v110);
    uint64_t v115 = &v111[*(int *)(v233 + 48)];
    v109(v111, v106, v110);
    v109(v115, (char *)v190, v110);
    v109((char *)(v113 + *(int *)(v224 + 36)), v115, v110);
    v114(v111, v110);
    sub_10020E72C(v113, v227, &qword_100E94F20);
    uint64_t v116 = v192;
    uint64_t v117 = v202;
    (*(void (**)(char *, char *, uint64_t))(v234 + 16))(v201, v192, v202);
    type metadata accessor for ChartView(0);
    sub_10014BB38();
    static ShadowModel.clear.getter();
    long long v118 = v205;
    ChartLineMark.init(chartData:dateExtrema:xAxisRange:yAxisRange:lineStyle:colorSchemeContrast:shadow:useSecondValue:showAccessibilityLabels:)();
    uint64_t v119 = v214;
    uint64_t v120 = v204;
    sub_1005EFB58(v214, v204, &qword_100E92D60);
    uint64_t v240 = v120;
    uint64_t v121 = v209;
    long long v122 = v208;
    uint64_t v123 = v210;
    (*(void (**)(char *, char *, uint64_t))(v209 + 16))(v208, v118, v210);
    uint64_t v241 = (uint64_t)v122;
    uint64_t v124 = v229;
    sub_100769AA4(&v240, v229);
    uint64_t v125 = *(void (**)(char *, uint64_t))(v121 + 8);
    uint64_t v126 = v118;
    uint64_t v50 = v117;
    v125(v126, v123);
    sub_10017DF4C(v119, &qword_100E92D60);
    (*(void (**)(char *, uint64_t))(v234 + 8))(v116, v117);
    v125(v122, v123);
    sub_10017DF4C(v120, &qword_100E92D60);
    uint64_t v127 = sub_10017DF08(&qword_100E92DA0);
    _s7Weather24LocationCompositionStateOwst_0(v124, 0, 1, v127);
    uint64_t v69 = (uint64_t)v203;
    sub_10020E72C(v124, (uint64_t)v203, &qword_100E92D88);
    uint64_t v67 = v230;
    char v40 = v221;
  }
  uint64_t v128 = (uint64_t)v218;
  sub_1005EFB58(v219, (uint64_t)v218, &qword_100E6BEC8);
  int v129 = _s7Weather24LocationCompositionStateOwet_0(v128, 1, v50);
  uint64_t v130 = v223;
  if (v129 == 1)
  {
    sub_10017DF4C(v128, &qword_100E6BEC8);
    uint64_t v131 = sub_10017DF08(&qword_100E92DA0);
    uint64_t v132 = v211;
    _s7Weather24LocationCompositionStateOwst_0(v211, 1, 1, v131);
    uint64_t v133 = v229;
LABEL_17:
    sub_1005EFB58(v69, v133, &qword_100E92D88);
    uint64_t v240 = v133;
    uint64_t v188 = v212;
    sub_1005EFB58(v132, v212, &qword_100E92D88);
    uint64_t v241 = v188;
    sub_100769BD4(&v240, v67);
    sub_10017DF4C(v132, &qword_100E92D88);
    sub_10017DF4C(v69, &qword_100E92D88);
    sub_10017DF4C(v188, &qword_100E92D88);
    return sub_10017DF4C(v133, &qword_100E92D88);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v234 + 32))(v222, v128, v50);
  uint64_t v134 = (uint64_t)v199;
  ChartLineStyle.areaStyle.getter();
  uint64_t v135 = v213;
  if (_s7Weather24LocationCompositionStateOwet_0(v134, 1, v213) == 1)
  {
    sub_10017DF4C(v134, &qword_100E6BED8);
    uint64_t v136 = 1;
    uint64_t v137 = v216;
    goto LABEL_15;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v215 + 32))(v130, v134, v135);
  uint64_t v138 = (int *)type metadata accessor for ChartViewModel(0);
  uint64_t v139 = v238;
  uint64_t v140 = *(void *)(v238 + v138[6]);
  (*(void (**)(char *, uint64_t, uint64_t))(v231 + 16))(v236, v238 + v138[7], v232);
  uint64_t v219 = (uint64_t)v138;
  uint64_t v141 = (void (*)(char *, uint64_t, uint64_t))v239[2];
  v141(v235, v139 + v138[20], v237);
  sub_1007B1450((uint64_t)&qword_100E66CC0);
  uint64_t v220 = v140;
  swift_bridgeObjectRetain();
  uint64_t v142 = v200;
  uint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)();
  if (result)
  {
    uint64_t v143 = v233;
    uint64_t v144 = v226;
    uint64_t v145 = (uint64_t)&v226[*(int *)(v233 + 48)];
    uint64_t v146 = v237;
    v141(v226, v142, v237);
    uint64_t v147 = (void (*)(uint64_t, char *, uint64_t))v239[4];
    uint64_t v218 = (char *)v145;
    v147(v145, v235, v146);
    uint64_t v148 = v228;
    uint64_t v149 = &v228[*(int *)(v143 + 48)];
    v141(v228, (uint64_t)v144, v146);
    v141(v149, v145, v146);
    uint64_t v150 = (uint64_t)v225;
    v147((uint64_t)v225, v148, v146);
    uint64_t v151 = (void (*)(char *, uint64_t))v239[1];
    v151(v149, v146);
    uint64_t v152 = &v148[*(int *)(v143 + 48)];
    v147((uint64_t)v148, v144, v146);
    v147((uint64_t)v152, v218, v146);
    v147(v150 + *(int *)(v224 + 36), v152, v146);
    v151(v148, v146);
    sub_10020E72C(v150, v227, &qword_100E94F20);
    uint64_t v153 = v215;
    unsigned int v154 = v223;
    uint64_t v155 = v213;
    (*(void (**)(char *, char *, uint64_t))(v215 + 16))(v193, v223, v213);
    ChartLineStyle.halfLineWidth.getter();
    uint64_t v156 = v195;
    ChartAreaSeries.init(chartData:dateExtrema:visibleDateRange:yAxisRange:areaStyle:halfLineWidth:useSecondValue:)();
    sub_1007B1450((uint64_t)&unk_100E92D70);
    uint64_t v157 = v194;
    uint64_t v158 = v198;
    ChartContent.accessibilityHidden(_:)();
    (*(void (**)(char *, uint64_t))(v197 + 8))(v156, v158);
    (*(void (**)(char *, uint64_t))(v153 + 8))(v154, v155);
    char v40 = v221;
    uint64_t v137 = v216;
    (*(void (**)(char *, char *, uint64_t))(v196 + 32))(v221, v157, v216);
    uint64_t v136 = 0;
LABEL_15:
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, v136, 1, v137);
    uint64_t v159 = (int *)type metadata accessor for ChartViewModel(0);
    uint64_t v160 = v238;
    uint64_t v161 = *(void *)(v238 + v159[6]);
    (*(void (**)(char *, uint64_t, uint64_t))(v231 + 16))(v236, v238 + v159[7], v232);
    uint64_t v162 = (void (*)(char *, uint64_t, uint64_t))v239[2];
    uint64_t v163 = v237;
    v162(v235, v160 + v159[19], v237);
    uint64_t v232 = (uint64_t)v159;
    uint64_t v164 = v160 + v159[20];
    uint64_t v165 = v217;
    v162(v217, v164, v163);
    sub_1007B1450((uint64_t)&qword_100E66CC0);
    swift_bridgeObjectRetain();
    uint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)();
    if (result)
    {
      uint64_t v166 = v233;
      uint64_t v167 = v226;
      uint64_t v168 = &v226[*(int *)(v233 + 48)];
      uint64_t v169 = v239;
      uint64_t v231 = v161;
      uint64_t v170 = (void (*)(char *, char *, uint64_t))v239[4];
      uint64_t v171 = v237;
      v170(v226, v235, v237);
      uint64_t v223 = v168;
      v170(v168, v165, v171);
      uint64_t v172 = v169;
      uint64_t v173 = v228;
      uint64_t v174 = &v228[*(int *)(v166 + 48)];
      v162(v228, (uint64_t)v167, v171);
      v162(v174, (uint64_t)v168, v171);
      uint64_t v175 = (uint64_t)v225;
      v170(v225, v173, v171);
      uint64_t v176 = (void (*)(char *, uint64_t))v172[1];
      v176(v174, v171);
      uint64_t v177 = &v173[*(int *)(v233 + 48)];
      v170(v173, v167, v171);
      v170(v177, v223, v171);
      v170((char *)(v175 + *(int *)(v224 + 36)), v177, v171);
      v176(v173, v171);
      sub_10020E72C(v175, v227, &qword_100E94F20);
      double v178 = v222;
      uint64_t v179 = v202;
      (*(void (**)(char *, char *, uint64_t))(v234 + 16))(v201, v222, v202);
      type metadata accessor for ChartView(0);
      sub_10014BB38();
      static ShadowModel.clear.getter();
      double v180 = v205;
      ChartLineMark.init(chartData:dateExtrema:xAxisRange:yAxisRange:lineStyle:colorSchemeContrast:shadow:useSecondValue:showAccessibilityLabels:)();
      uint64_t v181 = (uint64_t)v221;
      uint64_t v182 = v204;
      sub_1005EFB58((uint64_t)v221, v204, &qword_100E92D60);
      uint64_t v240 = v182;
      uint64_t v183 = v209;
      unint64_t v184 = v208;
      uint64_t v185 = v210;
      (*(void (**)(char *, char *, uint64_t))(v209 + 16))(v208, v180, v210);
      uint64_t v241 = (uint64_t)v184;
      uint64_t v133 = v229;
      sub_100769AA4(&v240, v229);
      uint64_t v186 = *(void (**)(char *, uint64_t))(v183 + 8);
      v186(v180, v185);
      sub_10017DF4C(v181, &qword_100E92D60);
      (*(void (**)(char *, uint64_t))(v234 + 8))(v178, v179);
      v186(v184, v185);
      sub_10017DF4C(v182, &qword_100E92D60);
      uint64_t v187 = sub_10017DF08(&qword_100E92DA0);
      _s7Weather24LocationCompositionStateOwst_0(v133, 0, 1, v187);
      uint64_t v132 = v211;
      sub_10020E72C(v133, v211, &qword_100E92D88);
      uint64_t v67 = v230;
      uint64_t v69 = (uint64_t)v203;
      goto LABEL_17;
    }
    goto LABEL_19;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_1007B0E68()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1007B0E84@<X0>(uint64_t a1@<X8>)
{
  return sub_1007A8F70(*(void *)(v1 + 16), a1);
}

unint64_t sub_1007B0E8C()
{
  unint64_t result = qword_100E94D48;
  if (!qword_100E94D48)
  {
    sub_10018C6DC(&qword_100E94D40);
    sub_1007737BC();
    sub_100773A14();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E94D48);
  }
  return result;
}

unint64_t sub_1007B0F10(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    sub_10018C6DC(v3);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_1007B0F70@<X0>(uint64_t a1@<X8>)
{
  return sub_1007AA544(a1);
}

uint64_t sub_1007B0F94@<X0>(uint64_t a1@<X8>)
{
  return sub_1007AAA34(a1);
}

unint64_t sub_1007B0FB8(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    uint64_t v5 = v4;
    sub_10018C6DC(v3);
    sub_10024D5E4(v5);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_1007B1054(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ChartView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1007B10B8(uint64_t a1)
{
  return sub_1007B21A8(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1007AADE4);
}

uint64_t type metadata accessor for ChartBackgroundView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E94F88);
}

unint64_t sub_1007B10F0()
{
  unint64_t result = qword_100E94DE0;
  if (!qword_100E94DE0)
  {
    sub_10018C6DC(&qword_100E94D10);
    sub_10018C6DC(&qword_100E94D00);
    sub_10018C6DC(&qword_100E94DA8);
    sub_10018C6DC(&qword_100E94CF8);
    sub_10018C6DC(&qword_100E94D70);
    sub_10018C6DC(&qword_100E94CF0);
    sub_10018C6DC(&qword_100E94D60);
    type metadata accessor for PlotDimensionScaleRange();
    sub_10018C6DC(&qword_100E94CE8);
    sub_10018C6DC(&qword_100E66F68);
    sub_10024D5E4((uint64_t)&unk_100E94D50);
    sub_1007B0F10((uint64_t)&unk_100E94D58);
    swift_getOpaqueTypeConformance2();
    sub_1007B0F10((uint64_t)&unk_100E94D68);
    swift_getOpaqueTypeConformance2();
    sub_10018C6DC(&qword_100E94D78);
    sub_10018C6DC(&qword_100E94D80);
    sub_10024D5E4((uint64_t)&unk_100E94D88);
    sub_1007B0FB8((uint64_t)&unk_100E94D90);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_10018C6DC(&qword_100E94DB0);
    sub_10018C6DC(&qword_100E94DB8);
    sub_10024D5E4((uint64_t)&unk_100E94DC0);
    sub_1007B0FB8((uint64_t)&unk_100E94DC8);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E94DE0);
  }
  return result;
}

unint64_t sub_1007B1450(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

double sub_1007B1494@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (_OWORD *)((char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = (char *)v4 + *(int *)(v5 + 28);
  uint64_t v7 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v8 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(v6, v7, v8);
  __asm { FMOV            V0.2D, #8.0 }
  *uint64_t v4 = _Q0;
  RoundedRectangle.path(in:)();
  sub_10014CED8((uint64_t)v4, (void (*)(void))&type metadata accessor for RoundedRectangle);
  double result = *(double *)&v17;
  long long v15 = v18;
  *(_OWORD *)a1 = v17;
  *(_OWORD *)(a1 + 16) = v15;
  *(unsigned char *)(a1 + 32) = v19;
  return result;
}

double sub_1007B15C8@<D0>(uint64_t a1@<X8>)
{
  sub_1007B1494((uint64_t)v4);
  double result = *(double *)v4;
  long long v3 = v4[1];
  *(_OWORD *)a1 = v4[0];
  *(_OWORD *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_1007B1614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1007B4FCC();

  return static Shape._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1007B1678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1007B4FCC();

  return static Shape._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1007B16DC(uint64_t a1)
{
  unint64_t v2 = sub_1007B4FCC();

  return Shape.body.getter(a1, v2);
}

void *sub_1007B1728@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = static Alignment.center.getter();
  uint64_t v4 = v3;
  sub_1007B1784((uint64_t)__src);
  *a1 = v2;
  a1[1] = v4;
  return memcpy(a1 + 2, __src, 0xD0uLL);
}

uint64_t sub_1007B1784@<X0>(uint64_t a1@<X8>)
{
  sub_1007B1910(__src);
  if (qword_100E62450 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v2 = sub_10058C87C();
  swift_endAccess();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  uint64_t v3 = v13;
  uint64_t v4 = v15;
  uint64_t v5 = v16;
  uint64_t v6 = v17;
  uint64_t v7 = static Alignment.center.getter();
  uint64_t v9 = v8;
  memcpy(__dst, __src, sizeof(__dst));
  memcpy(v19, __src, 0x82uLL);
  memcpy((void *)a1, __src, 0x82uLL);
  uint64_t v10 = v14;
  *(void *)(a1 + 136) = v3;
  *(void *)(a1 + 144) = v10;
  *(void *)(a1 + 152) = v4;
  *(void *)(a1 + 160) = v5;
  *(void *)(a1 + 168) = v6;
  *(void *)(a1 + 176) = v2;
  *(_WORD *)(a1 + 184) = 256;
  *(void *)(a1 + 192) = v7;
  *(void *)(a1 + 200) = v9;
  sub_1007B4B0C((uint64_t)v19);
  memcpy(v20, __dst, 0x82uLL);
  return sub_1007B4B0C((uint64_t)v20);
}

void *sub_1007B1910@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v7 = type metadata accessor for ChartViewModel.Background(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (uint64_t *)&v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1007B212C(v2, (uint64_t)v9, (void (*)(void))type metadata accessor for ChartViewModel.Background);
  uint64_t v10 = sub_10017DF08(&qword_100E6BF10);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10) == 1)
  {
    sub_1007B4E9C((uint64_t)v19);
    sub_10020E72C((uint64_t)v19, (uint64_t)v17, &qword_100E94FE0);
    sub_10017DF08(&qword_100E94FE8);
    sub_1007B4D2C();
    _ConditionalContent<>.init(storage:)();
  }
  else
  {
    uint64_t v11 = *v9;
    sub_10020E72C((uint64_t)v9 + *(int *)(v10 + 48), (uint64_t)v6, (uint64_t *)&unk_100E73CA0);
    swift_retain();
    uint64_t v12 = static Alignment.center.getter();
    uint64_t v14 = v13;
    sub_1007B1BAC((uint64_t)v6, (uint64_t)__dst);
    *(void *)long long v18 = v11;
    *(_WORD *)&v18[8] = 256;
    *(void *)&v18[16] = v12;
    *(void *)&v18[24] = v14;
    *(_OWORD *)&v18[32] = __dst[0];
    *(_OWORD *)&v18[48] = __dst[1];
    *(_OWORD *)&v18[64] = __dst[2];
    *(_OWORD *)&v18[80] = __dst[3];
    *(_OWORD *)&v18[96] = __dst[4];
    *(_OWORD *)&v18[112] = __dst[5];
    v18[128] = __dst[6];
    memcpy(v19, v18, 0x81uLL);
    sub_1007B4C74((uint64_t)v19);
    sub_10020E72C((uint64_t)v19, (uint64_t)__dst, &qword_100E94FE0);
    sub_1007B4C80((uint64_t)v18);
    sub_10017DF08(&qword_100E94FE8);
    sub_1007B4D2C();
    _ConditionalContent<>.init(storage:)();
    swift_release();
    sub_1007B4DF0((uint64_t)v18);
    sub_10017DF4C((uint64_t)v6, (uint64_t *)&unk_100E73CA0);
    memcpy(__dst, v17, 0x82uLL);
  }
  return memcpy(a1, __dst, 0x82uLL);
}

double sub_1007B1BAC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005EFB58(a1, (uint64_t)v6, (uint64_t *)&unk_100E73CA0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7) == 1)
  {
    sub_10017DF4C((uint64_t)v6, (uint64_t *)&unk_100E73CA0);
LABEL_7:
    uint64_t v27 = static Color.white.getter();
    long long v28 = 0u;
    long long v29 = 0u;
    long long v30 = 0u;
    long long v31 = 0u;
    long long v32 = 0u;
    uint64_t v33 = 0;
    char v34 = 1;
    sub_10017DF08(&qword_100E95018);
    sub_10024D5E4((uint64_t)&unk_100E95020);
    _ConditionalContent<>.init(storage:)();
    goto LABEL_8;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  type metadata accessor for ChartBackgroundView(0);
  if (static Date.> infix(_:_:)() & 1) == 0 || (ChartProxy.position<A>(forX:)(), (v11))
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    goto LABEL_7;
  }
  uint64_t v26 = static VerticalAlignment.center.getter();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v24 = v43;
  uint64_t v25 = v42;
  uint64_t v12 = v44;
  uint64_t v13 = v45;
  uint64_t v14 = v46;
  uint64_t v15 = v47;
  uint64_t v16 = static Color.white.getter();
  uint64_t v27 = v26;
  long long v28 = xmmword_100C3E060;
  long long v29 = xmmword_100C3E060;
  *(void *)&long long v30 = v25;
  *((void *)&v30 + 1) = v24;
  *(void *)&long long v31 = v12;
  *((void *)&v31 + 1) = v13;
  *(void *)&long long v32 = v14;
  *((void *)&v32 + 1) = v15;
  uint64_t v33 = v16;
  char v34 = 0;
  sub_10017DF08(&qword_100E95018);
  sub_10024D5E4((uint64_t)&unk_100E95020);
  _ConditionalContent<>.init(storage:)();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
LABEL_8:
  double result = *(double *)&v35;
  long long v18 = v36;
  long long v19 = v37;
  long long v20 = v38;
  long long v21 = v39;
  long long v22 = v40;
  char v23 = v41;
  *(_OWORD *)a2 = v35;
  *(_OWORD *)(a2 + 16) = v18;
  *(_OWORD *)(a2 + 32) = v19;
  *(_OWORD *)(a2 + 48) = v20;
  *(_OWORD *)(a2 + 64) = v21;
  *(_OWORD *)(a2 + 80) = v22;
  *(unsigned char *)(a2 + 96) = v23;
  return result;
}

unint64_t sub_1007B1F14()
{
  unint64_t result = qword_100E94DF0;
  if (!qword_100E94DF0)
  {
    sub_10018C6DC(&qword_100E7A198);
    sub_10018C6DC(&qword_100E94D18);
    sub_10018C6DC(&qword_100E94D10);
    type metadata accessor for ChartBackgroundView(255);
    sub_1007B10F0();
    sub_1007B1450((uint64_t)&unk_100E94DE8);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1007B1450((uint64_t)&qword_100E66BF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E94DF0);
  }
  return result;
}

unint64_t sub_1007B2080()
{
  unint64_t result = qword_100E94DF8;
  if (!qword_100E94DF8)
  {
    sub_10018C6DC(&qword_100E94D20);
    sub_1007B1F14();
    sub_1007B1450((uint64_t)&qword_100EAACA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E94DF8);
  }
  return result;
}

uint64_t sub_1007B212C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  sub_100119108();
  v4();
  return a2;
}

uint64_t sub_1007B2190(uint64_t a1)
{
  return sub_1007B21A8(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1007AC6D4);
}

uint64_t sub_1007B21A8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = type metadata accessor for ChartView(0);
  sub_1001627C0(v4);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return a2(a1, v6);
}

unint64_t sub_1007B221C()
{
  unint64_t result = qword_100E94E18;
  if (!qword_100E94E18)
  {
    sub_10018C6DC(&qword_100E94E20);
    sub_1007B2300();
    sub_10018C6DC(&qword_100E94E38);
    sub_10024D5E4((uint64_t)&unk_100E94E40);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E94E18);
  }
  return result;
}

unint64_t sub_1007B2300()
{
  unint64_t result = qword_100E94E28;
  if (!qword_100E94E28)
  {
    sub_10018C6DC(&qword_100E94E30);
    type metadata accessor for AxisGridLine();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E94E28);
  }
  return result;
}

uint64_t sub_1007B23B8()
{
  return sub_1007B2B94((uint64_t (*)(void, void, void, void))sub_1007AD2F8);
}

uint64_t sub_1007B23D0()
{
  uint64_t v1 = type metadata accessor for ChartView(0);
  sub_100179EF0();
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = v0 + v3;
  swift_bridgeObjectRelease();
  uint64_t v5 = type metadata accessor for ChartViewModel(0);
  sub_100185C1C();
  type metadata accessor for ChartKind();
  sub_100179DC0();
  sub_100162F0C();
  v6();
  swift_bridgeObjectRelease();
  sub_100185C1C();
  type metadata accessor for DetailChartExtrema();
  sub_100179DC0();
  sub_100162F0C();
  v7();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100186BB0(v0 + v3 + *(int *)(v5 + 44));
  sub_10017DF08(&qword_100E6BF00);
  sub_10019D8D8();
  uint64_t v8 = type metadata accessor for Date();
  if (!sub_100163364())
  {
    sub_100162880();
    uint64_t v9 = sub_10019FFBC();
    v10(v9);
  }
  uint64_t v11 = sub_10017DF08(&qword_100E6BF10);
  if (!sub_1001810A0(v11))
  {
    swift_release();
    if (!sub_100163364())
    {
      sub_100162880();
      uint64_t v12 = sub_10019FFBC();
      v13(v12);
    }
  }
  sub_10019D8D8();
  type metadata accessor for ChartDarkeningScrim();
  sub_100179DC0();
  sub_100162F0C();
  v14();
  swift_bridgeObjectRelease();
  sub_100162880();
  uint64_t v16 = *(void (**)(void))(v15 + 8);
  sub_100163918();
  v16();
  sub_100163918();
  v16();
  sub_100163918();
  v16();
  sub_100185C1C();
  type metadata accessor for DetailChartDataElement();
  if (!sub_10019B61C(v8))
  {
    sub_100162880();
    sub_100162B9C();
    v17();
  }
  swift_bridgeObjectRelease();
  sub_100185C1C();
  type metadata accessor for ChartPeakMarkStyle();
  sub_100179DC0();
  sub_100162F0C();
  v18();
  swift_bridgeObjectRelease();
  sub_100185C1C();
  type metadata accessor for ChartViewModelInterpolationMode();
  sub_100179DC0();
  sub_100162F0C();
  v19();
  sub_100185C1C();
  type metadata accessor for ChartPastDataTreatment();
  sub_100179DC0();
  sub_100162F0C();
  v20();
  sub_100183F10();
  sub_100183F10();
  sub_100183F10();
  sub_100183F10();
  sub_100183F10();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v4 + *(int *)(v1 + 28));
  sub_10018F6D8(*(void *)(v4 + *(int *)(v1 + 32)), *(unsigned char *)(v4 + *(int *)(v1 + 32) + 8));
  sub_10017DF08(&qword_100E66E50);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for ColorSchemeContrast();
    sub_100179DC0();
    sub_100162F0C();
    v21();
  }
  else
  {
    swift_release();
  }
  sub_10017DF08(&qword_100E62CB8);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for LayoutDirection();
    sub_100179DC0();
    sub_100162F0C();
    v22();
  }
  else
  {
    swift_release();
  }
  type metadata accessor for Text.Measurements();
  sub_100179DC0();
  sub_100162F0C();
  v23();

  return swift_deallocObject();
}

uint64_t sub_1007B284C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for ChartView(0);
  sub_1001627C0(v5);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 104) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_1007AB13C(a1, v2 + 16, v2 + 56, v7, a2);
}

unint64_t sub_1007B28B8()
{
  unint64_t result = qword_100E94E58;
  if (!qword_100E94E58)
  {
    sub_10018C6DC(&qword_100E94E50);
    sub_1007B2C74((uint64_t)&unk_100E94E60);
    sub_1007B2AA8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E94E58);
  }
  return result;
}

unint64_t sub_1007B2974()
{
  unint64_t result = qword_100E94E70;
  if (!qword_100E94E70)
  {
    sub_10018C6DC(&qword_100E94E78);
    sub_10018C6DC(&qword_100E7D410);
    type metadata accessor for AxisGridLine();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    type metadata accessor for AxisTick();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E94E70);
  }
  return result;
}

unint64_t sub_1007B2AA8()
{
  unint64_t result = qword_100E94E80;
  if (!qword_100E94E80)
  {
    sub_10018C6DC(&qword_100E94E88);
    sub_10018C6DC(&qword_100E94E38);
    sub_10024D5E4((uint64_t)&unk_100E94E40);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E94E80);
  }
  return result;
}

uint64_t sub_1007B2B7C()
{
  return sub_1007B2B94((uint64_t (*)(void, void, void, void))sub_1007AC558);
}

uint64_t sub_1007B2B94(uint64_t (*a1)(void, void, void, void))
{
  return a1(*(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1007B2BB4@<X0>(uint64_t a1@<X8>)
{
  return sub_1007AF390(v1[2], v1[3], v1[4], v1[5], a1);
}

unint64_t sub_1007B2BC0()
{
  unint64_t result = qword_100E94EB0;
  if (!qword_100E94EB0)
  {
    sub_10018C6DC(&qword_100E94EA8);
    sub_1007B2C74((uint64_t)&unk_100E92D90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E94EB0);
  }
  return result;
}

unint64_t sub_1007B2C74(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    uint64_t v5 = v4;
    sub_10018C6DC(v3);
    v5();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_1007B2CDC@<X0>(uint64_t a1@<X8>)
{
  return sub_1007ADD58(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_1007B2CE4()
{
  unint64_t result = qword_100E94EE0;
  if (!qword_100E94EE0)
  {
    sub_10018C6DC(&qword_100E94ED8);
    sub_10018C6DC(&qword_100E94EE8);
    sub_10018C6DC(&qword_100E94EF0);
    sub_10024D5E4((uint64_t)&unk_100E94EF8);
    sub_10014A85C();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E94EE0);
  }
  return result;
}

uint64_t sub_1007B2E10()
{
  uint64_t v1 = type metadata accessor for ChartView(0);
  sub_100179EF0();
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v31 = *(void *)(v4 + 64);
  uint64_t v32 = type metadata accessor for DetailChartGradientModel();
  sub_100179C0C();
  uint64_t v6 = v5;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = v0 + ((v3 + 16) & ~v3);
  swift_bridgeObjectRelease();
  uint64_t v9 = (int *)type metadata accessor for ChartViewModel(0);
  sub_10019D8D8();
  type metadata accessor for ChartKind();
  sub_100179DC0();
  sub_100162F0C();
  v10();
  swift_bridgeObjectRelease();
  sub_10019D8D8();
  type metadata accessor for DetailChartExtrema();
  sub_100179DC0();
  sub_100162F0C();
  v11();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100186BB0(v8 + v9[11]);
  uint64_t v12 = v9[12];
  uint64_t v13 = v8 + v12 + *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
  uint64_t v14 = type metadata accessor for Date();
  if (!sub_10019B61C(v13))
  {
    sub_100162880();
    sub_100162B9C();
    v15();
  }
  uint64_t v16 = v8 + v9[14];
  uint64_t v17 = sub_10017DF08(&qword_100E6BF10);
  if (!_s7Weather24LocationCompositionStateOwet_0(v16, 1, v17))
  {
    swift_release();
    if (!sub_10019B61C(v16 + *(int *)(v17 + 48)))
    {
      sub_100162880();
      sub_100162B9C();
      v18();
    }
  }
  type metadata accessor for ChartDarkeningScrim();
  sub_100179DC0();
  sub_100162F0C();
  v19();
  swift_bridgeObjectRelease();
  sub_100162880();
  long long v21 = *(void (**)(void))(v20 + 8);
  sub_1001820CC();
  v21();
  sub_1001820CC();
  v21();
  sub_1001820CC();
  v21();
  sub_10019D8D8();
  uint64_t v22 = type metadata accessor for DetailChartDataElement();
  if (!sub_1001810A0(v22))
  {
    sub_100162880();
    (*(void (**)(uint64_t, void (*)(void)))(v23 + 8))(v14, v21);
  }
  swift_bridgeObjectRelease();
  sub_10019D8D8();
  type metadata accessor for ChartPeakMarkStyle();
  sub_100179DC0();
  sub_100162F0C();
  v24();
  swift_bridgeObjectRelease();
  sub_10019D8D8();
  type metadata accessor for ChartViewModelInterpolationMode();
  sub_100179DC0();
  sub_100162F0C();
  v25();
  sub_10019D8D8();
  type metadata accessor for ChartPastDataTreatment();
  sub_100179DC0();
  sub_100162F0C();
  v26();
  sub_100183F10();
  sub_100183F10();
  sub_100183F10();
  sub_100183F10();
  sub_100183F10();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v8 + *(int *)(v1 + 28));
  sub_10018F6D8(*(void *)(v8 + *(int *)(v1 + 32)), *(unsigned char *)(v8 + *(int *)(v1 + 32) + 8));
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for ColorSchemeContrast();
    sub_100179DC0();
    sub_100162F0C();
    v27();
  }
  else
  {
    swift_release();
  }
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for LayoutDirection();
    sub_100179DC0();
    sub_100162F0C();
    v28();
  }
  else
  {
    swift_release();
  }
  type metadata accessor for Text.Measurements();
  sub_100179DC0();
  sub_100162F0C();
  v29();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + ((((v3 + 16) & ~v3) + v31 + v7) & ~v7), v32);

  return swift_deallocObject();
}

uint64_t sub_1007B3320@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for ChartView(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = type metadata accessor for DetailChartGradientModel();
  sub_1001627C0(v8);
  uint64_t v10 = v2 + ((v6 + v7 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));

  return sub_1007AE1BC(a1, v2 + v6, v10, a2);
}

uint64_t sub_1007B33E4@<X0>(uint64_t a1@<X8>)
{
  return sub_1007AEC40(*(void *)(v1 + 16), a1);
}

uint64_t sub_1007B33EC@<X0>(uint64_t a1@<X8>)
{
  return sub_1007AE4CC(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_1007B33F8@<X0>(uint64_t a1@<X8>)
{
  return sub_1007ADC00(a1);
}

uint64_t *sub_1007B3400(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10017DF08(&qword_100E6BF10);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = type metadata accessor for ChartViewModel.Background(0);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      uint64_t v10 = *(int *)(v7 + 48);
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = type metadata accessor for Date();
      swift_retain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
      {
        uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v15 = a3[5];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = type metadata accessor for ChartProxy();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    uint64_t v19 = a3[6];
    uint64_t v20 = (char *)a1 + v19;
    long long v21 = (char *)a2 + v19;
    uint64_t v22 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    uint64_t v23 = a3[7];
    uint64_t v24 = (uint64_t *)((char *)a1 + v23);
    uint64_t v25 = (uint64_t *)((char *)a2 + v23);
    sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else
    {
      *uint64_t v24 = *v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1007B36D4(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6BF10);
  if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v4))
  {
    swift_release();
    uint64_t v5 = a1 + *(int *)(v4 + 48);
    uint64_t v6 = type metadata accessor for Date();
    if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
    }
  }
  uint64_t v7 = a1 + a2[5];
  uint64_t v8 = type metadata accessor for ChartProxy();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  uint64_t v9 = a1 + a2[6];
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = a1 + a2[7];
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for LayoutDirection();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
    return v13(v11, v12);
  }
  else
  {
    return swift_release();
  }
}

void *sub_1007B3894(void *a1, void *a2, int *a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E6BF10);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = type metadata accessor for ChartViewModel.Background(0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v8 = *(int *)(v6 + 48);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date();
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v13 = a3[5];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for ChartProxy();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = a3[6];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  uint64_t v21 = a3[7];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = type metadata accessor for LayoutDirection();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  }
  else
  {
    *uint64_t v22 = *v23;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1007B3B18(void *a1, void *a2, int *a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E6BF10);
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      *a1 = *a2;
      uint64_t v9 = *(int *)(v6 + 48);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for Date();
      swift_retain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
      {
        uint64_t v13 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
      }
      uint64_t v23 = (uint64_t)a1;
      uint64_t v24 = v6;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_10017DF4C((uint64_t)a1, &qword_100E6BF10);
LABEL_7:
    size_t v14 = *(void *)(*(void *)(type metadata accessor for ChartViewModel.Background(0) - 8) + 64);
    uint64_t v15 = a1;
    uint64_t v16 = a2;
LABEL_8:
    memcpy(v15, v16, v14);
    goto LABEL_15;
  }
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v17 = *(int *)(v6 + 48);
  uint64_t v18 = (uint64_t)a1 + v17;
  uint64_t v19 = (uint64_t)a2 + v17;
  uint64_t v20 = type metadata accessor for Date();
  int v21 = _s7Weather24LocationCompositionStateOwet_0(v18, 1, v20);
  int v22 = _s7Weather24LocationCompositionStateOwet_0(v19, 1, v20);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      uint64_t v23 = v18;
      uint64_t v24 = v20;
LABEL_14:
      _s7Weather24LocationCompositionStateOwst_0(v23, 0, 1, v24);
      goto LABEL_15;
    }
    goto LABEL_23;
  }
  uint64_t v38 = *(void *)(v20 - 8);
  if (v22)
  {
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v18, v20);
LABEL_23:
    size_t v14 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
    uint64_t v15 = (void *)v18;
    uint64_t v16 = (const void *)v19;
    goto LABEL_8;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 24))(v18, v19, v20);
LABEL_15:
  uint64_t v25 = a3[5];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = type metadata accessor for ChartProxy();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 24))(v26, v27, v28);
  uint64_t v29 = a3[6];
  long long v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 24))(v30, v31, v32);
  if (a1 != a2)
  {
    uint64_t v33 = a3[7];
    char v34 = (void *)((char *)a1 + v33);
    long long v35 = (void *)((char *)a2 + v33);
    sub_10017DF4C((uint64_t)a1 + v33, &qword_100E62CB8);
    sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v36 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
    }
    else
    {
      *char v34 = *v35;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1007B3F18(void *a1, void *a2, int *a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E6BF10);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = type metadata accessor for ChartViewModel.Background(0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v8 = *(int *)(v6 + 48);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v13 = a3[5];
  size_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for ChartProxy();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  uint64_t v17 = a3[6];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  uint64_t v21 = a3[7];
  int v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = type metadata accessor for LayoutDirection();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v22, v23, v25);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  return a1;
}

void *sub_1007B419C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E6BF10);
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      *a1 = *a2;
      uint64_t v9 = *(int *)(v6 + 48);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
      {
        uint64_t v13 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
      }
      uint64_t v23 = (uint64_t)a1;
      uint64_t v24 = v6;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_10017DF4C((uint64_t)a1, &qword_100E6BF10);
LABEL_7:
    size_t v14 = *(void *)(*(void *)(type metadata accessor for ChartViewModel.Background(0) - 8) + 64);
    uint64_t v15 = a1;
    uint64_t v16 = a2;
LABEL_8:
    memcpy(v15, v16, v14);
    goto LABEL_15;
  }
  *a1 = *a2;
  swift_release();
  uint64_t v17 = *(int *)(v6 + 48);
  uint64_t v18 = (uint64_t)a1 + v17;
  uint64_t v19 = (uint64_t)a2 + v17;
  uint64_t v20 = type metadata accessor for Date();
  int v21 = _s7Weather24LocationCompositionStateOwet_0(v18, 1, v20);
  int v22 = _s7Weather24LocationCompositionStateOwet_0(v19, 1, v20);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
      uint64_t v23 = v18;
      uint64_t v24 = v20;
LABEL_14:
      _s7Weather24LocationCompositionStateOwst_0(v23, 0, 1, v24);
      goto LABEL_15;
    }
    goto LABEL_22;
  }
  uint64_t v39 = *(void *)(v20 - 8);
  if (v22)
  {
    (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v18, v20);
LABEL_22:
    size_t v14 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
    uint64_t v15 = (void *)v18;
    uint64_t v16 = (const void *)v19;
    goto LABEL_8;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 40))(v18, v19, v20);
LABEL_15:
  uint64_t v25 = a3[5];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = type metadata accessor for ChartProxy();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 40))(v26, v27, v28);
  uint64_t v29 = a3[6];
  long long v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 40))(v30, v31, v32);
  if (a1 != a2)
  {
    uint64_t v33 = a3[7];
    char v34 = (char *)a1 + v33;
    long long v35 = (char *)a2 + v33;
    sub_10017DF4C((uint64_t)a1 + v33, &qword_100E62CB8);
    uint64_t v36 = sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v37 = type metadata accessor for LayoutDirection();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v34, v35, v37);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1007B4594(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007B45A8);
}

uint64_t sub_1007B45A8()
{
  uint64_t v3 = sub_100188B38();
  type metadata accessor for ChartViewModel.Background(v3);
  sub_100162F30();
  if (*(_DWORD *)(v5 + 84) == v0)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v1;
  }
  else
  {
    type metadata accessor for ChartProxy();
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == v0)
    {
      uint64_t v6 = v8;
      uint64_t v10 = v2[5];
    }
    else
    {
      type metadata accessor for Date();
      sub_100162F30();
      if (*(_DWORD *)(v12 + 84) == v0)
      {
        uint64_t v6 = v11;
        uint64_t v10 = v2[6];
      }
      else
      {
        uint64_t v6 = sub_10017DF08(&qword_100E63BF0);
        uint64_t v10 = v2[7];
      }
    }
    uint64_t v7 = v1 + v10;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v7, v0, v6);
}

uint64_t sub_1007B4664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007B4678);
}

uint64_t sub_1007B4678()
{
  uint64_t v4 = sub_100183C30();
  type metadata accessor for ChartViewModel.Background(v4);
  sub_100162F30();
  if (*(_DWORD *)(v6 + 84) == v3)
  {
    uint64_t v7 = v5;
    uint64_t v8 = v1;
  }
  else
  {
    type metadata accessor for ChartProxy();
    sub_100162F30();
    if (*(_DWORD *)(v10 + 84) == v3)
    {
      uint64_t v7 = v9;
      uint64_t v11 = v2[5];
    }
    else
    {
      type metadata accessor for Date();
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == v3)
      {
        uint64_t v7 = v12;
        uint64_t v11 = v2[6];
      }
      else
      {
        uint64_t v7 = sub_10017DF08(&qword_100E63BF0);
        uint64_t v11 = v2[7];
      }
    }
    uint64_t v8 = v1 + v11;
  }

  return _s7Weather24LocationCompositionStateOwst_0(v8, v0, v0, v7);
}

void sub_1007B4738()
{
  type metadata accessor for ChartViewModel.Background(319);
  if (v0 <= 0x3F)
  {
    type metadata accessor for ChartProxy();
    if (v1 <= 0x3F)
    {
      type metadata accessor for Date();
      if (v2 <= 0x3F)
      {
        sub_10001E8D0(319, (unint64_t *)&qword_100E63C70, (void (*)(uint64_t))&type metadata accessor for LayoutDirection);
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

unint64_t sub_1007B4898()
{
  unint64_t result = qword_100E94FC8;
  if (!qword_100E94FC8)
  {
    sub_10018C6DC(&qword_100E94D38);
    sub_10018C6DC(&qword_100E94D28);
    sub_10018C6DC(&qword_100E94D20);
    type metadata accessor for ChartViewModel(255);
    sub_1007B2080();
    sub_1007B1450((uint64_t)&unk_100E94E00);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_10024D5E4((uint64_t)&unk_100E94FD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E94FC8);
  }
  return result;
}

uint64_t sub_1007B49F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1007B4A14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, char a18)
{
  if (a18)
  {
    swift_retain();
    return sub_1007B4AF8();
  }
  return result;
}

uint64_t sub_1007B4AF8()
{
  return swift_retain();
}

uint64_t sub_1007B4B0C(uint64_t a1)
{
  uint64_t v2 = sub_10017DFE0(a1);
  v3(v2, *(void *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 96), *(void *)(v1 + 104), *(void *)(v1 + 112), *(void *)(v1 + 120), *(_WORD *)(v1 + 128));
  return v1;
}

uint64_t sub_1007B4B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, char a18)
{
  if (a18)
  {
    swift_release();
    return sub_1007B4C60();
  }
  return result;
}

uint64_t sub_1007B4C60()
{
  return swift_release();
}

uint64_t sub_1007B4C74(uint64_t result)
{
  *(unsigned char *)(result + 129) = 1;
  return result;
}

uint64_t sub_1007B4C80(uint64_t a1)
{
  return a1;
}

unint64_t sub_1007B4D2C()
{
  unint64_t result = qword_100E94FF0;
  if (!qword_100E94FF0)
  {
    sub_10018C6DC(&qword_100E94FE8);
    sub_10024D5E4((uint64_t)&unk_100E94FF8);
    sub_10024D5E4((uint64_t)&unk_100E95008);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E94FF0);
  }
  return result;
}

uint64_t sub_1007B4DF0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1007B4E9C(uint64_t result)
{
  *(unsigned char *)(result + 129) = 0;
  return result;
}

ValueMetadata *type metadata accessor for ChartBackgroundShape()
{
  return &type metadata for ChartBackgroundShape;
}

unint64_t sub_1007B4EB4()
{
  return sub_10024D5E4((uint64_t)&unk_100E95028);
}

unint64_t sub_1007B4EF0()
{
  return sub_10024D5E4((uint64_t)&unk_100E95038);
}

unint64_t sub_1007B4F30()
{
  unint64_t result = qword_100E95048;
  if (!qword_100E95048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E95048);
  }
  return result;
}

unint64_t sub_1007B4F80()
{
  unint64_t result = qword_100E95050;
  if (!qword_100E95050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E95050);
  }
  return result;
}

unint64_t sub_1007B4FCC()
{
  unint64_t result = qword_100E95058;
  if (!qword_100E95058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E95058);
  }
  return result;
}

void *sub_1007B5018(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = (int *)type metadata accessor for ScrubberDay(0);
    *(void *)((char *)a1 + v8[5]) = *(void *)((char *)a2 + v8[5]);
    uint64_t v9 = v8[6];
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    *((unsigned char *)a1 + v8[7]) = *((unsigned char *)a2 + v8[7]);
    uint64_t v13 = a3[6];
    *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
    *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
    uint64_t v14 = a3[7];
    uint64_t v15 = (void *)((char *)a1 + v14);
    uint64_t v16 = (void *)((char *)a2 + v14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1007B51D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for ScrubberDay(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 28);
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for LayoutDirection();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v5, v6);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_1007B52EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for ScrubberDay(0);
  *(void *)(a1 + v7[5]) = *(void *)(a2 + v7[5]);
  uint64_t v8 = v7[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  uint64_t v12 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = type metadata accessor for LayoutDirection();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    *uint64_t v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1007B544C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for ScrubberDay(0);
  *(void *)(a1 + v7[5]) = *(void *)(a2 + v7[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = v7[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  if (a1 != a2)
  {
    uint64_t v11 = a3[7];
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (void *)(a2 + v11);
    sub_1001781AC(a1 + v11, &qword_100E62CB8);
    sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1007B55E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for ScrubberDay(0);
  *(void *)(a1 + v7[5]) = *(void *)(a2 + v7[5]);
  *(_OWORD *)(a1 + v7[6]) = *(_OWORD *)(a2 + v7[6]);
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  uint64_t v8 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v9 = a3[7];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = type metadata accessor for LayoutDirection();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 32))(v10, v11, v13);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1007B5734(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for ScrubberDay(0);
  *(void *)(a1 + v7[5]) = *(void *)(a2 + v7[5]);
  swift_bridgeObjectRelease();
  uint64_t v8 = v7[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  uint64_t v13 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  if (a1 != a2)
  {
    uint64_t v14 = a3[7];
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (const void *)(a2 + v14);
    sub_1001781AC(a1 + v14, &qword_100E62CB8);
    uint64_t v17 = sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v18 - 8) + 32))(v15, v16, v18);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1007B58B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007B58CC);
}

uint64_t sub_1007B58CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for ScrubberDay(0);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    uint64_t v8 = sub_10017DF08(&qword_100E63BF0);
    uint64_t v9 = a1 + *(int *)(a3 + 28);
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_1007B594C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007B5960);
}

uint64_t sub_1007B5960(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for ScrubberDay(0);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    uint64_t v10 = sub_10017DF08(&qword_100E63BF0);
    uint64_t v11 = a1 + *(int *)(a4 + 28);
  }

  return _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for ScrubberDayView()
{
  uint64_t result = qword_100E950B8;
  if (!qword_100E950B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1007B5A30()
{
  type metadata accessor for ScrubberDay(319);
  if (v0 <= 0x3F)
  {
    sub_10000CE24();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1007B5B08()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1007B5B24()
{
  uint64_t v1 = type metadata accessor for LayoutDirection();
  sub_100179C0C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  type metadata accessor for ScrubberDayView();
  sub_1001FF23C();
  int v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 88))(v7, v1);
  if (v8 == enum case for LayoutDirection.leftToRight(_:))
  {
    uint64_t v9 = *(void *)(v0 + *(int *)(type metadata accessor for ScrubberDay(0) + 20));
    swift_bridgeObjectRetain();
  }
  else
  {
    int v10 = v8;
    int v11 = enum case for LayoutDirection.rightToLeft(_:);
    uint64_t v9 = *(void *)(v0 + *(int *)(type metadata accessor for ScrubberDay(0) + 20));
    if (v10 == v11)
    {
      swift_bridgeObjectRetain();
      sub_1002F7FD8();
      return v12;
    }
    else
    {
      uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
      swift_bridgeObjectRetain();
      v13(v7, v1);
    }
  }
  return v9;
}

uint64_t sub_1007B5C6C()
{
  type metadata accessor for ColorRenderingMode();
  sub_100179C0C();
  uint64_t v19 = v1;
  uint64_t v20 = v0;
  __chkstk_darwin(v0);
  sub_1001626E0();
  uint64_t v18 = v3 - v2;
  uint64_t v4 = type metadata accessor for ScrubberDayView();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_10017DF08(&qword_100E7FED0);
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  sub_10017DF08(&qword_100E950F8);
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_1001626E0();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = *(void *)(sub_1007B5B24() + 16);
  swift_bridgeObjectRelease();
  if (v16)
  {
    sub_1007B6CB8();
    swift_allocObject();
    sub_1007B6D0C();
    (*(void (**)(uint64_t, void, uint64_t))(v19 + 104))(v18, enum case for ColorRenderingMode.nonLinear(_:), v20);
    Canvas<>.init(opaque:colorMode:rendersAsynchronously:renderer:)();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v15, v11, v5);
    swift_storeEnumTagMultiPayload();
    sub_1007B6C64();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_1007B6C64();
    return _ConditionalContent<>.init(storage:)();
  }
}

uint64_t sub_1007B5F68(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v86 = a1;
  uint64_t v85 = type metadata accessor for GraphicsContext.Shading();
  uint64_t v6 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v84 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E7FA28);
  __chkstk_darwin(v8 - 8);
  uint64_t v72 = (uint64_t)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v68 - v11;
  uint64_t v91 = type metadata accessor for LayoutDirection();
  uint64_t v13 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v69 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  int v70 = (char *)&v68 - v16;
  __chkstk_darwin(v17);
  uint64_t v75 = (char *)&v68 - v18;
  __chkstk_darwin(v19);
  uint64_t v87 = (char *)&v68 - v20;
  uint64_t v83 = sub_10017DF08(&qword_100E95100);
  __chkstk_darwin(v83);
  int v22 = (uint64_t *)((char *)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v23);
  uint64_t v82 = (char *)&v68 - v24;
  __chkstk_darwin(v25);
  uint64_t v80 = (uint64_t *)((char *)&v68 - v26);
  uint64_t v71 = sub_1007B5B24();
  uint64_t v81 = *(void *)(v71 + 16);
  if (v81)
  {
    uint64_t v27 = 0;
    uint64_t v88 = type metadata accessor for ScrubberHour(0);
    uint64_t v28 = *(void *)(*(void *)(v88 - 8) + 72);
    unint64_t v73 = (*(unsigned __int8 *)(*(void *)(v88 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v88 - 8) + 80);
    unint64_t v29 = v71 + v73;
    uint64_t v90 = (uint64_t (**)(char *, uint64_t))(v13 + 88);
    int v89 = enum case for LayoutDirection.leftToRight(_:);
    int v78 = enum case for LayoutDirection.rightToLeft(_:);
    uint64_t v76 = (uint64_t (**)(char *, uint64_t))(v13 + 8);
    uint64_t v79 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v74 = v12;
    uint64_t v77 = v28;
    do
    {
      uint64_t v30 = v83;
      sub_1007B6CB8();
      uint64_t v31 = (uint64_t)v80;
      void *v80 = v27;
      sub_1007B6D0C();
      sub_1007B6D60(v31, (uint64_t)v22);
      uint64_t v32 = *v22;
      uint64_t v92 = *(int *)(v30 + 48);
      uint64_t v93 = v32;
      type metadata accessor for ScrubberDayView();
      uint64_t v33 = v87;
      sub_1001FF23C();
      char v34 = *v90;
      uint64_t v35 = (*v90)(v33, v91);
      if (v35 != v89)
      {
        if (v35 == v78)
        {
          uint64_t v36 = v75;
          sub_1001FF23C();
          int v37 = v34(v36, v91);
          if (v37 == v89)
          {
            uint64_t v38 = *(void *)(a2 + *(int *)(type metadata accessor for ScrubberDay(0) + 20));
            swift_bridgeObjectRetain();
          }
          else
          {
            int v39 = v37;
            uint64_t v38 = *(void *)(a2 + *(int *)(type metadata accessor for ScrubberDay(0) + 20));
            if (v39 == v78)
            {
              swift_bridgeObjectRetain();
              sub_1002F7FD8();
              uint64_t v38 = v40;
            }
            else
            {
              char v41 = *v76;
              swift_bridgeObjectRetain();
              v41(v75, v91);
            }
          }
          uint64_t v42 = (uint64_t)v74;
          if (*(void *)(v38 + 16))
          {
            sub_1007B6CB8();
            uint64_t v43 = 0;
          }
          else
          {
            uint64_t v43 = 1;
          }
          uint64_t v44 = v88;
          _s7Weather24LocationCompositionStateOwst_0(v42, v43, 1, v88);
          swift_bridgeObjectRelease();
          int v45 = _s7Weather24LocationCompositionStateOwet_0(v42, 1, v44);
          uint64_t v46 = v42;
          if (v45 != 1)
          {
            int v47 = *(unsigned __int8 *)(v42 + *(int *)(v44 + 20));
            uint64_t v35 = sub_1007B6DD8(v42);
            uint64_t v28 = v77;
            if (v47 != 1) {
              goto LABEL_29;
            }
            uint64_t v48 = v70;
            sub_1001FF23C();
            int v49 = v34(v48, v91);
            if (v49 == v89)
            {
              uint64_t v50 = *(void *)(a2 + *(int *)(type metadata accessor for ScrubberDay(0) + 20));
              swift_bridgeObjectRetain();
            }
            else
            {
              int v51 = v49;
              uint64_t v50 = *(void *)(a2 + *(int *)(type metadata accessor for ScrubberDay(0) + 20));
              if (v51 == v78)
              {
                swift_bridgeObjectRetain();
                sub_1002F7FD8();
                uint64_t v50 = v52;
              }
              else
              {
                uint64_t v53 = *v76;
                swift_bridgeObjectRetain();
                v53(v70, v91);
              }
            }
            if (*(void *)(v50 + 16))
            {
              uint64_t v54 = v72;
              sub_1007B6CB8();
              uint64_t v55 = 0;
            }
            else
            {
              uint64_t v55 = 1;
              uint64_t v54 = v72;
            }
            uint64_t v56 = v88;
            _s7Weather24LocationCompositionStateOwst_0(v54, v55, 1, v88);
            swift_bridgeObjectRelease();
            int v57 = _s7Weather24LocationCompositionStateOwet_0(v54, 1, v56);
            uint64_t v46 = v54;
            if (v57 != 1)
            {
              int v58 = *(unsigned __int8 *)(v72 + *(int *)(v56 + 20));
              uint64_t v35 = sub_1007B6DD8(v72);
              uint64_t v28 = v77;
              if (v58 == 1)
              {
                uint64_t v59 = v69;
                sub_1001FF23C();
                int v60 = v34(v59, v91);
                if (v60 == v89)
                {
                  uint64_t v35 = type metadata accessor for ScrubberDay(0);
                }
                else
                {
                  int v65 = v60;
                  type metadata accessor for ScrubberDay(0);
                  if (v65 == v78)
                  {
                    swift_bridgeObjectRetain();
                    sub_1002F7FD8();
                  }
                  else
                  {
                    int v66 = *v76;
                    swift_bridgeObjectRetain();
                    v66(v69, v91);
                  }
                  uint64_t v35 = swift_bridgeObjectRelease();
                }
              }
              goto LABEL_29;
            }
          }
          uint64_t v35 = sub_1001781AC(v46, &qword_100E7FA28);
          uint64_t v28 = v77;
        }
        else
        {
          uint64_t v35 = (*v76)(v87, v91);
        }
      }
LABEL_29:
      uint64_t v61 = (char *)v22 + v92;
      unint64_t v62 = __chkstk_darwin(v35).n128_u64[0];
      *(&v68 - 6) = v63;
      *(&v68 - 5) = 0;
      *(&v68 - 4) = v62;
      *((double *)&v68 - 3) = a4;
      *(&v68 - 2) = a2;
      Path.init(_:)();
      LODWORD(v61) = v61[*(int *)(v88 + 20)];
      swift_retain();
      if (v61 == 1)
      {
        static Color.white.getter();
      }
      else
      {
        static Color.gray.getter();
        Color.opacity(_:)();
        swift_release();
      }
      ++v27;
      uint64_t v64 = v84;
      static GraphicsContext.Shading.color(_:)();
      swift_release();
      GraphicsContext.fill(_:with:style:)();
      swift_release();
      sub_10020C4D4((uint64_t)v94);
      (*v79)(v64, v85);
      sub_1001781AC((uint64_t)v22, &qword_100E95100);
      v29 += v28;
    }
    while (v81 != v27);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1007B6908()
{
  uint64_t v0 = type metadata accessor for RoundedCornerStyle();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ScrubberDayView();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for RoundedCornerStyle.continuous(_:), v0);
  v5[0] = 0x3FF0000000000000;
  v5[1] = 0;
  v5[2] = 0;
  v5[3] = 0x3FF0000000000000;
  v5[4] = 0;
  v5[5] = 0;
  Path.addRoundedRect(in:cornerSize:style:transform:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1007B6A74()
{
  uint64_t v1 = (int *)(type metadata accessor for ScrubberDayView() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  type metadata accessor for Date();
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(v2);
  type metadata accessor for ScrubberDay(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = v2 + v1[9];
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for LayoutDirection();
    sub_100162E4C();
    (*(void (**)(uint64_t))(v5 + 8))(v4);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1007B6BDC(uint64_t a1, double a2, double a3)
{
  uint64_t v7 = *(void *)(type metadata accessor for ScrubberDayView() - 8);
  uint64_t v8 = v3 + ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));

  return sub_1007B5F68(a1, v8, a2, a3);
}

unint64_t sub_1007B6C64()
{
  unint64_t result = qword_100E7FEF8;
  if (!qword_100E7FEF8)
  {
    sub_10018C6DC(&qword_100E7FED0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7FEF8);
  }
  return result;
}

uint64_t sub_1007B6CB8()
{
  uint64_t v2 = sub_10017A8D4();
  v3(v2);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v0, v1);
  return v0;
}

uint64_t sub_1007B6D0C()
{
  uint64_t v2 = sub_10017A8D4();
  v3(v2);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v0, v1);
  return v0;
}

uint64_t sub_1007B6D60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E95100);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1007B6DC8()
{
  return sub_1007B6908();
}

uint64_t sub_1007B6DD8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ScrubberHour(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1007B6E38()
{
  unint64_t result = qword_100E95108;
  if (!qword_100E95108)
  {
    sub_10018C6DC(&qword_100E95110);
    sub_1007B6C64();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E95108);
  }
  return result;
}

uint64_t *sub_1007B6EB4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v52 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v52 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for PolarType();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = a3[7];
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = a3[8];
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    uint64_t v22 = a3[9];
    uint64_t v23 = (char *)v4 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = type metadata accessor for AttributedString();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
    uint64_t v26 = a3[11];
    *(uint64_t *)((char *)v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    uint64_t v27 = (uint64_t *)((char *)v4 + v26);
    uint64_t v28 = (uint64_t *)((char *)a2 + v26);
    uint64_t v29 = v28[1];
    *uint64_t v27 = *v28;
    v27[1] = v29;
    uint64_t v30 = a3[12];
    uint64_t v31 = (char *)v4 + v30;
    uint64_t v32 = (char *)a2 + v30;
    uint64_t v33 = type metadata accessor for SunriseSunsetDetailChartViewModel();
    char v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v34(v31, v32, v33);
    uint64_t v35 = a3[13];
    uint64_t v36 = (char *)v4 + v35;
    int v37 = (char *)a2 + v35;
    uint64_t v38 = type metadata accessor for Location();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
    uint64_t v39 = a3[14];
    uint64_t v40 = (char *)v4 + v39;
    char v41 = (char *)a2 + v39;
    uint64_t v42 = type metadata accessor for DaylightStringBuilder();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
    uint64_t v43 = a3[15];
    uint64_t v44 = (char *)v4 + v43;
    int v45 = (char *)a2 + v43;
    uint64_t v46 = type metadata accessor for OverviewTableViewModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
    uint64_t v47 = a3[16];
    uint64_t v48 = (uint64_t *)((char *)v4 + v47);
    int v49 = (uint64_t *)((char *)a2 + v47);
    uint64_t v50 = type metadata accessor for DetailComponentContainerViewModel();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v50))
    {
      uint64_t v51 = sub_10017DF08(&qword_100E66E28);
      memcpy(v48, v49, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      uint64_t v53 = v49[1];
      if (v53)
      {
        *uint64_t v48 = *v49;
        v48[1] = v53;
        uint64_t v54 = v49[3];
        v48[2] = v49[2];
        v48[3] = v54;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v55 = *((_OWORD *)v49 + 1);
        *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
        *((_OWORD *)v48 + 1) = v55;
      }
      uint64_t v56 = *(int *)(v50 + 20);
      int v57 = (void *)((char *)v48 + v56);
      int v58 = (void *)((char *)v49 + v56);
      uint64_t v59 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v60 = v58[1];
        *int v57 = *v58;
        v57[1] = v60;
        uint64_t v87 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v61 = v87[5];
        __dst = (char *)v57 + v61;
        unint64_t v62 = (char *)v58 + v61;
        uint64_t v63 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        uint64_t v84 = v50;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, v63))
        {
          uint64_t v64 = sub_10017DF08(&qword_100E749B0);
          memcpy(__dst, v62, *(void *)(*(void *)(v64 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16))(__dst, v62, v63);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v63);
        }
        uint64_t v65 = v87[6];
        int v66 = (void *)((char *)v57 + v65);
        uint64_t v67 = (void *)((char *)v58 + v65);
        uint64_t v68 = v67[1];
        *int v66 = *v67;
        v66[1] = v68;
        uint64_t v69 = v87[7];
        __dsta = (char *)v57 + v69;
        int v70 = (char *)v58 + v69;
        uint64_t v71 = *(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16);
        swift_bridgeObjectRetain();
        v71(__dsta, v70, v63);
        uint64_t v72 = v87[8];
        unint64_t v73 = (char *)v57 + v72;
        uint64_t v74 = (char *)v58 + v72;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v58 + v72, 1, v63))
        {
          uint64_t v75 = sub_10017DF08(&qword_100E749B0);
          memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
        }
        else
        {
          v71(v73, v74, v63);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v73, 0, 1, v63);
        }
        uint64_t v50 = v84;
        *((unsigned char *)v57 + v87[9]) = *((unsigned char *)v58 + v87[9]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
      }
      uint64_t v76 = *(int *)(v50 + 24);
      uint64_t v77 = (char *)v48 + v76;
      int v78 = (char *)v49 + v76;
      uint64_t v79 = type metadata accessor for DetailComponentAction();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v78, 1, v79))
      {
        uint64_t v80 = sub_10017DF08(&qword_100E73810);
        memcpy(v77, v78, *(void *)(*(void *)(v80 - 8) + 64));
      }
      else
      {
        uint64_t v81 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16))(v77, v78, v81);
        uint64_t v82 = sub_10017DF08(&qword_100E66478);
        v77[*(int *)(v82 + 48)] = v78[*(int *)(v82 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v77, 0, 1, v79);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v50);
    }
  }
  return v4;
}

uint64_t sub_1007B7588(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = type metadata accessor for PolarType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[7];
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + a2[8];
  uint64_t v9 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = a1 + a2[9];
  uint64_t v11 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = a1 + a2[12];
  uint64_t v13 = type metadata accessor for SunriseSunsetDetailChartViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  uint64_t v14 = a1 + a2[13];
  uint64_t v15 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  uint64_t v16 = a1 + a2[14];
  uint64_t v17 = type metadata accessor for DaylightStringBuilder();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  uint64_t v18 = a1 + a2[15];
  uint64_t v19 = type metadata accessor for OverviewTableViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
  uint64_t v20 = a1 + a2[16];
  uint64_t v21 = type metadata accessor for DetailComponentContainerViewModel();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v20, 1, v21);
  if (!result)
  {
    if (*(void *)(v20 + 8))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v23 = v20 + *(int *)(v21 + 20);
    type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v24 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v25 = v23 + v24[5];
      uint64_t v26 = type metadata accessor for URL();
      if (!_s7Weather24LocationCompositionStateOwet_0(v25, 1, v26)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
      }
      swift_bridgeObjectRelease();
      uint64_t v27 = *(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8);
      v27(v23 + v24[7], v26);
      uint64_t v28 = v23 + v24[8];
      if (!_s7Weather24LocationCompositionStateOwet_0(v28, 1, v26)) {
        v27(v28, v26);
      }
    }
    uint64_t v29 = v20 + *(int *)(v21 + 24);
    uint64_t v30 = type metadata accessor for DetailComponentAction();
    uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v29, 1, v30);
    if (!result)
    {
      uint64_t v31 = type metadata accessor for URL();
      uint64_t v32 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8);
      return v32(v29, v31);
    }
  }
  return result;
}

void *sub_1007B79B0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for PolarType();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = a3[8];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  uint64_t v21 = a3[9];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  uint64_t v24 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  uint64_t v25 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (void *)((char *)a2 + v25);
  uint64_t v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  uint64_t v29 = a3[12];
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = type metadata accessor for SunriseSunsetDetailChartViewModel();
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v33(v30, v31, v32);
  uint64_t v34 = a3[13];
  uint64_t v35 = (char *)a1 + v34;
  uint64_t v36 = (char *)a2 + v34;
  uint64_t v37 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
  uint64_t v38 = a3[14];
  uint64_t v39 = (char *)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  uint64_t v41 = type metadata accessor for DaylightStringBuilder();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
  uint64_t v42 = a3[15];
  uint64_t v43 = (char *)a1 + v42;
  uint64_t v44 = (char *)a2 + v42;
  uint64_t v45 = type metadata accessor for OverviewTableViewModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
  uint64_t v46 = a3[16];
  uint64_t v47 = (void *)((char *)a1 + v46);
  uint64_t v48 = (void *)((char *)a2 + v46);
  uint64_t v49 = type metadata accessor for DetailComponentContainerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v49))
  {
    uint64_t v50 = sub_10017DF08(&qword_100E66E28);
    memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
  }
  else
  {
    uint64_t v51 = v48[1];
    if (v51)
    {
      void *v47 = *v48;
      v47[1] = v51;
      uint64_t v52 = v48[3];
      v47[2] = v48[2];
      v47[3] = v52;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v53 = *((_OWORD *)v48 + 1);
      *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
      *((_OWORD *)v47 + 1) = v53;
    }
    uint64_t v54 = *(int *)(v49 + 20);
    long long v55 = (void *)((char *)v47 + v54);
    uint64_t v56 = (void *)((char *)v48 + v54);
    uint64_t v57 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v58 = v56[1];
      void *v55 = *v56;
      v55[1] = v58;
      uint64_t v85 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v59 = v85[5];
      __dst = (char *)v55 + v59;
      uint64_t v60 = (char *)v56 + v59;
      uint64_t v61 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      uint64_t v82 = v49;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v61))
      {
        uint64_t v62 = sub_10017DF08(&qword_100E749B0);
        memcpy(__dst, v60, *(void *)(*(void *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(__dst, v60, v61);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v61);
      }
      uint64_t v63 = v85[6];
      uint64_t v64 = (void *)((char *)v55 + v63);
      uint64_t v65 = (void *)((char *)v56 + v63);
      uint64_t v66 = v65[1];
      void *v64 = *v65;
      v64[1] = v66;
      uint64_t v67 = v85[7];
      __dsta = (char *)v55 + v67;
      uint64_t v68 = (char *)v56 + v67;
      uint64_t v69 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16);
      swift_bridgeObjectRetain();
      v69(__dsta, v68, v61);
      uint64_t v70 = v85[8];
      uint64_t v71 = (char *)v55 + v70;
      uint64_t v72 = (char *)v56 + v70;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v56 + v70, 1, v61))
      {
        uint64_t v73 = sub_10017DF08(&qword_100E749B0);
        memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
      }
      else
      {
        v69(v71, v72, v61);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v71, 0, 1, v61);
      }
      uint64_t v49 = v82;
      *((unsigned char *)v55 + v85[9]) = *((unsigned char *)v56 + v85[9]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
    }
    uint64_t v74 = *(int *)(v49 + 24);
    uint64_t v75 = (char *)v47 + v74;
    uint64_t v76 = (char *)v48 + v74;
    uint64_t v77 = type metadata accessor for DetailComponentAction();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v76, 1, v77))
    {
      uint64_t v78 = sub_10017DF08(&qword_100E73810);
      memcpy(v75, v76, *(void *)(*(void *)(v78 - 8) + 64));
    }
    else
    {
      uint64_t v79 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16))(v75, v76, v79);
      uint64_t v80 = sub_10017DF08(&qword_100E66478);
      v75[*(int *)(v80 + 48)] = v76[*(int *)(v80 + 48)];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v75, 0, 1, v77);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v49);
  }
  return a1;
}

void *sub_1007B8034(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for PolarType();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  uint64_t v18 = a3[9];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[11];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[12];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = type metadata accessor for SunriseSunsetDetailChartViewModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 24))(v26, v27, v28);
  uint64_t v29 = a3[13];
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 24))(v30, v31, v32);
  uint64_t v33 = a3[14];
  uint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  uint64_t v36 = type metadata accessor for DaylightStringBuilder();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 24))(v34, v35, v36);
  uint64_t v37 = a3[15];
  uint64_t v38 = (char *)a1 + v37;
  uint64_t v39 = (char *)a2 + v37;
  uint64_t v40 = type metadata accessor for OverviewTableViewModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 24))(v38, v39, v40);
  uint64_t v41 = a3[16];
  uint64_t v42 = (void *)((char *)a1 + v41);
  uint64_t v43 = (void *)((char *)a2 + v41);
  uint64_t v44 = type metadata accessor for DetailComponentContainerViewModel();
  int v45 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v44);
  int v46 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v44);
  if (v45)
  {
    if (!v46)
    {
      if (v43[1])
      {
        *uint64_t v42 = *v43;
        v42[1] = v43[1];
        v42[2] = v43[2];
        v42[3] = v43[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v51 = *((_OWORD *)v43 + 1);
        *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
        *((_OWORD *)v42 + 1) = v51;
      }
      uint64_t v52 = *(int *)(v44 + 20);
      long long v53 = (void *)((char *)v42 + v52);
      uint64_t v54 = (void *)((char *)v43 + v52);
      uint64_t v55 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *long long v53 = *v54;
        v53[1] = v54[1];
        uint64_t v125 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v56 = v125[5];
        __dst = (char *)v53 + v56;
        uint64_t v57 = (char *)v54 + v56;
        uint64_t v58 = type metadata accessor for URL();
        swift_bridgeObjectRetain();
        uint64_t v118 = v44;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v58))
        {
          uint64_t v59 = sub_10017DF08(&qword_100E749B0);
          memcpy(__dst, v57, *(void *)(*(void *)(v59 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(__dst, v57, v58);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v58);
        }
        uint64_t v60 = v125[6];
        uint64_t v61 = (void *)((char *)v53 + v60);
        uint64_t v62 = (void *)((char *)v54 + v60);
        *uint64_t v61 = *v62;
        v61[1] = v62[1];
        uint64_t v63 = v125[7];
        __dstd = (char *)v53 + v63;
        uint64_t v64 = (char *)v54 + v63;
        uint64_t v65 = v53;
        uint64_t v66 = v58;
        uint64_t v67 = *(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v68 = __dstd;
        __dsta = v67;
        v67(v68, v64, v66);
        uint64_t v69 = v66;
        uint64_t v70 = v65;
        uint64_t v71 = v125[8];
        uint64_t v72 = (char *)v65 + v71;
        uint64_t v73 = (char *)v54 + v71;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54 + v71, 1, v69))
        {
          uint64_t v74 = sub_10017DF08(&qword_100E749B0);
          memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
        }
        else
        {
          __dsta(v72, v73, v69);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v72, 0, 1, v69);
        }
        uint64_t v44 = v118;
        *((unsigned char *)v70 + v125[9]) = *((unsigned char *)v54 + v125[9]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      uint64_t v75 = *(int *)(v44 + 24);
      uint64_t v76 = (char *)v42 + v75;
      uint64_t v77 = (char *)v43 + v75;
      uint64_t v78 = type metadata accessor for DetailComponentAction();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v77, 1, v78))
      {
        uint64_t v79 = sub_10017DF08(&qword_100E73810);
        memcpy(v76, v77, *(void *)(*(void *)(v79 - 8) + 64));
      }
      else
      {
        uint64_t v80 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 16))(v76, v77, v80);
        uint64_t v81 = sub_10017DF08(&qword_100E66478);
        v76[*(int *)(v81 + 48)] = v77[*(int *)(v81 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v76, 0, 1, v78);
      }
      uint64_t v82 = (uint64_t)v42;
      uint64_t v83 = v44;
      goto LABEL_28;
    }
    goto LABEL_7;
  }
  if (v46)
  {
    sub_1007B8B9C((uint64_t)v42, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
LABEL_7:
    size_t v47 = *(void *)(*(void *)(sub_10017DF08(&qword_100E66E28) - 8) + 64);
    uint64_t v48 = v42;
    uint64_t v49 = v43;
    goto LABEL_8;
  }
  uint64_t v50 = v43[1];
  if (v42[1])
  {
    if (v50)
    {
      *uint64_t v42 = *v43;
      v42[1] = v43[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v42[2] = v43[2];
      v42[3] = v43[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1004B70A8((uint64_t)v42);
      long long v85 = *((_OWORD *)v43 + 1);
      *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
      *((_OWORD *)v42 + 1) = v85;
    }
  }
  else if (v50)
  {
    *uint64_t v42 = *v43;
    v42[1] = v43[1];
    v42[2] = v43[2];
    v42[3] = v43[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v86 = *((_OWORD *)v43 + 1);
    *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
    *((_OWORD *)v42 + 1) = v86;
  }
  if (a1 != a2)
  {
    uint64_t v87 = *(int *)(v44 + 20);
    uint64_t v88 = (void *)((char *)v42 + v87);
    int v89 = (void *)((char *)v43 + v87);
    sub_1007B8B9C((uint64_t)v42 + v87, (void (*)(void))type metadata accessor for NewsArticleComponentViewModel);
    uint64_t v90 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v88 = *v89;
      v88[1] = v89[1];
      uint64_t v126 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v91 = v126[5];
      __dstb = (char *)v88 + v91;
      uint64_t v92 = (char *)v89 + v91;
      uint64_t v93 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v92, 1, v93))
      {
        uint64_t v94 = sub_10017DF08(&qword_100E749B0);
        memcpy(__dstb, v92, *(void *)(*(void *)(v94 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 16))(__dstb, v92, v93);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstb, 0, 1, v93);
      }
      uint64_t v95 = v126[6];
      uint64_t v96 = (void *)((char *)v88 + v95);
      uint64_t v97 = (void *)((char *)v89 + v95);
      *uint64_t v96 = *v97;
      v96[1] = v97[1];
      uint64_t v98 = v126[7];
      __dste = (char *)v88 + v98;
      uint64_t v117 = (char *)v89 + v98;
      uint64_t v99 = v93;
      uint64_t v100 = *(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v101 = __dste;
      __dstc = v100;
      v100(v101, v117, v99);
      uint64_t v102 = v99;
      uint64_t v103 = v126[8];
      uint64_t v104 = (char *)v88 + v103;
      uint64_t v105 = (char *)v89 + v103;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v89 + v103, 1, v102))
      {
        uint64_t v106 = sub_10017DF08(&qword_100E749B0);
        memcpy(v104, v105, *(void *)(*(void *)(v106 - 8) + 64));
      }
      else
      {
        __dstc(v104, v105, v102);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v104, 0, 1, v102);
      }
      *((unsigned char *)v88 + v126[9]) = *((unsigned char *)v89 + v126[9]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v88, v89, *(void *)(*(void *)(v90 - 8) + 64));
    }
  }
  uint64_t v107 = *(int *)(v44 + 24);
  uint64_t v108 = (uint64_t)v42 + v107;
  uint64_t v109 = (uint64_t)v43 + v107;
  uint64_t v110 = type metadata accessor for DetailComponentAction();
  int v111 = _s7Weather24LocationCompositionStateOwet_0(v108, 1, v110);
  int v112 = _s7Weather24LocationCompositionStateOwet_0(v109, 1, v110);
  if (v111)
  {
    if (!v112)
    {
      uint64_t v113 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 16))(v108, v109, v113);
      uint64_t v114 = sub_10017DF08(&qword_100E66478);
      *(unsigned char *)(v108 + *(int *)(v114 + 48)) = *(unsigned char *)(v109 + *(int *)(v114 + 48));
      uint64_t v82 = v108;
      uint64_t v83 = v110;
LABEL_28:
      _s7Weather24LocationCompositionStateOwst_0(v82, 0, 1, v83);
      return a1;
    }
  }
  else
  {
    if (!v112)
    {
      uint64_t v115 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v115 - 8) + 24))(v108, v109, v115);
      uint64_t v116 = sub_10017DF08(&qword_100E66478);
      *(unsigned char *)(v108 + *(int *)(v116 + 48)) = *(unsigned char *)(v109 + *(int *)(v116 + 48));
      return a1;
    }
    sub_1007B8B9C(v108, (void (*)(void))type metadata accessor for DetailComponentAction);
  }
  size_t v47 = *(void *)(*(void *)(sub_10017DF08(&qword_100E73810) - 8) + 64);
  uint64_t v48 = (void *)v108;
  uint64_t v49 = (const void *)v109;
LABEL_8:
  memcpy(v48, v49, v47);
  return a1;
}

uint64_t sub_1007B8B9C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

_OWORD *sub_1007B8BF0(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for PolarType();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[8];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  uint64_t v19 = a3[9];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  *(_OWORD *)((char *)a1 + v23) = *(_OWORD *)((char *)a2 + v23);
  uint64_t v24 = a3[12];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = type metadata accessor for SunriseSunsetDetailChartViewModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
  uint64_t v28 = a3[13];
  uint64_t v29 = (char *)a1 + v28;
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
  uint64_t v32 = a3[14];
  uint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = (char *)a2 + v32;
  uint64_t v35 = type metadata accessor for DaylightStringBuilder();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
  uint64_t v36 = a3[15];
  uint64_t v37 = (char *)a1 + v36;
  uint64_t v38 = (char *)a2 + v36;
  uint64_t v39 = type metadata accessor for OverviewTableViewModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v37, v38, v39);
  uint64_t v40 = a3[16];
  uint64_t v41 = (_OWORD *)((char *)a1 + v40);
  uint64_t v42 = (_OWORD *)((char *)a2 + v40);
  uint64_t v43 = type metadata accessor for DetailComponentContainerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43))
  {
    uint64_t v44 = sub_10017DF08(&qword_100E66E28);
    memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    long long v45 = v42[1];
    *uint64_t v41 = *v42;
    v41[1] = v45;
    uint64_t v46 = *(int *)(v43 + 20);
    size_t v47 = (char *)v41 + v46;
    uint64_t v48 = (char *)v42 + v46;
    uint64_t v49 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)size_t v47 = *(_OWORD *)v48;
      uint64_t v71 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v50 = v71[5];
      long long v51 = &v47[v50];
      uint64_t v52 = &v48[v50];
      uint64_t v53 = type metadata accessor for URL();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v53))
      {
        uint64_t v54 = sub_10017DF08(&qword_100E749B0);
        memcpy(v51, v52, *(void *)(*(void *)(v54 - 8) + 64));
        uint64_t v55 = *(void *)(v53 - 8);
      }
      else
      {
        uint64_t v56 = v51;
        __dsta = v51;
        uint64_t v55 = *(void *)(v53 - 8);
        (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v56, v52, v53);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v53);
      }
      *(_OWORD *)&v47[v71[6]] = *(_OWORD *)&v48[v71[6]];
      uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v55 + 32);
      v57(&v47[v71[7]], &v48[v71[7]], v53);
      uint64_t v58 = v71[8];
      __dst = &v47[v58];
      uint64_t v59 = &v48[v58];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v48[v58], 1, v53))
      {
        uint64_t v60 = sub_10017DF08(&qword_100E749B0);
        memcpy(__dst, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        v57(__dst, v59, v53);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v53);
      }
      v47[v71[9]] = v48[v71[9]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v47, v48, *(void *)(*(void *)(v49 - 8) + 64));
    }
    uint64_t v61 = *(int *)(v43 + 24);
    uint64_t v62 = (char *)v41 + v61;
    uint64_t v63 = (char *)v42 + v61;
    uint64_t v64 = type metadata accessor for DetailComponentAction();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 1, v64))
    {
      uint64_t v65 = sub_10017DF08(&qword_100E73810);
      memcpy(v62, v63, *(void *)(*(void *)(v65 - 8) + 64));
    }
    else
    {
      uint64_t v66 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v62, v63, v66);
      uint64_t v67 = sub_10017DF08(&qword_100E66478);
      v62[*(int *)(v67 + 48)] = v63[*(int *)(v67 + 48)];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v62, 0, 1, v64);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v43);
  }
  return a1;
}

void *sub_1007B91DC(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for PolarType();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = a3[8];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  uint64_t v20 = a3[9];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 40))(v21, v22, v23);
  *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  swift_bridgeObjectRelease();
  uint64_t v24 = a3[11];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  void *v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[12];
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = type metadata accessor for SunriseSunsetDetailChartViewModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 40))(v30, v31, v32);
  uint64_t v33 = a3[13];
  uint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  uint64_t v36 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 40))(v34, v35, v36);
  uint64_t v37 = a3[14];
  uint64_t v38 = (char *)a1 + v37;
  uint64_t v39 = (char *)a2 + v37;
  uint64_t v40 = type metadata accessor for DaylightStringBuilder();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 40))(v38, v39, v40);
  uint64_t v41 = a3[15];
  uint64_t v42 = (char *)a1 + v41;
  uint64_t v43 = (char *)a2 + v41;
  uint64_t v44 = type metadata accessor for OverviewTableViewModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 40))(v42, v43, v44);
  uint64_t v45 = a3[16];
  uint64_t v46 = (uint64_t)a1 + v45;
  uint64_t v47 = (uint64_t)a2 + v45;
  uint64_t v48 = type metadata accessor for DetailComponentContainerViewModel();
  int v49 = _s7Weather24LocationCompositionStateOwet_0(v46, 1, v48);
  int v50 = _s7Weather24LocationCompositionStateOwet_0(v47, 1, v48);
  if (v49)
  {
    if (!v50)
    {
      long long v51 = *(_OWORD *)(v47 + 16);
      *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
      *(_OWORD *)(v46 + 16) = v51;
      uint64_t v52 = *(int *)(v48 + 20);
      uint64_t v53 = (char *)(v46 + v52);
      uint64_t v54 = (char *)(v47 + v52);
      uint64_t v55 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
        int v112 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v56 = v112[5];
        uint64_t v57 = &v53[v56];
        uint64_t v58 = &v54[v56];
        uint64_t v59 = type metadata accessor for URL();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v58, 1, v59))
        {
          uint64_t v60 = sub_10017DF08(&qword_100E749B0);
          memcpy(v57, v58, *(void *)(*(void *)(v60 - 8) + 64));
          uint64_t v61 = *(void *)(v59 - 8);
        }
        else
        {
          uint64_t v67 = v57;
          __dstb = v57;
          uint64_t v61 = *(void *)(v59 - 8);
          (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v67, v58, v59);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstb, 0, 1, v59);
        }
        *(_OWORD *)&v53[v112[6]] = *(_OWORD *)&v54[v112[6]];
        uint64_t v68 = *(void (**)(char *, char *, uint64_t))(v61 + 32);
        v68(&v53[v112[7]], &v54[v112[7]], v59);
        uint64_t v69 = v112[8];
        __dst = &v53[v69];
        uint64_t v70 = &v54[v69];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v54[v69], 1, v59))
        {
          uint64_t v71 = sub_10017DF08(&qword_100E749B0);
          memcpy(__dst, v70, *(void *)(*(void *)(v71 - 8) + 64));
        }
        else
        {
          v68(__dst, v70, v59);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v59);
        }
        v53[v112[9]] = v54[v112[9]];
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      uint64_t v72 = *(int *)(v48 + 24);
      uint64_t v73 = (void *)(v46 + v72);
      uint64_t v74 = (const void *)(v47 + v72);
      uint64_t v75 = type metadata accessor for DetailComponentAction();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v74, 1, v75))
      {
        uint64_t v76 = sub_10017DF08(&qword_100E73810);
        memcpy(v73, v74, *(void *)(*(void *)(v76 - 8) + 64));
      }
      else
      {
        uint64_t v77 = type metadata accessor for URL();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v77 - 8) + 32))(v73, v74, v77);
        uint64_t v78 = sub_10017DF08(&qword_100E66478);
        *((unsigned char *)v73 + *(int *)(v78 + 48)) = *((unsigned char *)v74 + *(int *)(v78 + 48));
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v73, 0, 1, v75);
      }
      uint64_t v79 = v46;
      uint64_t v80 = v48;
      goto LABEL_23;
    }
    goto LABEL_8;
  }
  if (v50)
  {
    sub_1007B8B9C(v46, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
LABEL_8:
    size_t v62 = *(void *)(*(void *)(sub_10017DF08(&qword_100E66E28) - 8) + 64);
    uint64_t v63 = (void *)v46;
    uint64_t v64 = (const void *)v47;
    goto LABEL_9;
  }
  if (!*(void *)(v46 + 8)) {
    goto LABEL_26;
  }
  uint64_t v65 = *(void *)(v47 + 8);
  if (!v65)
  {
    sub_1004B70A8(v46);
LABEL_26:
    long long v82 = *(_OWORD *)(v47 + 16);
    *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
    *(_OWORD *)(v46 + 16) = v82;
    goto LABEL_27;
  }
  *(void *)uint64_t v46 = *(void *)v47;
  *(void *)(v46 + 8) = v65;
  swift_bridgeObjectRelease();
  uint64_t v66 = *(void *)(v47 + 24);
  *(void *)(v46 + 16) = *(void *)(v47 + 16);
  *(void *)(v46 + 24) = v66;
  swift_bridgeObjectRelease();
LABEL_27:
  if (a1 != a2)
  {
    uint64_t v83 = *(int *)(v48 + 20);
    uint64_t v84 = (char *)(v46 + v83);
    long long v85 = (char *)(v47 + v83);
    sub_1007B8B9C(v46 + v83, (void (*)(void))type metadata accessor for NewsArticleComponentViewModel);
    uint64_t v86 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)uint64_t v84 = *(_OWORD *)v85;
      uint64_t v113 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v87 = v113[5];
      uint64_t v88 = &v84[v87];
      int v89 = &v85[v87];
      uint64_t v90 = type metadata accessor for URL();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v89, 1, v90))
      {
        uint64_t v91 = sub_10017DF08(&qword_100E749B0);
        memcpy(v88, v89, *(void *)(*(void *)(v91 - 8) + 64));
        uint64_t v92 = *(void *)(v90 - 8);
      }
      else
      {
        uint64_t v93 = v88;
        __dstc = v88;
        uint64_t v92 = *(void *)(v90 - 8);
        (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v93, v89, v90);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstc, 0, 1, v90);
      }
      *(_OWORD *)&v84[v113[6]] = *(_OWORD *)&v85[v113[6]];
      uint64_t v94 = *(void (**)(char *, char *, uint64_t))(v92 + 32);
      v94(&v84[v113[7]], &v85[v113[7]], v90);
      uint64_t v95 = v113[8];
      __dsta = &v84[v95];
      uint64_t v96 = &v85[v95];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v85[v95], 1, v90))
      {
        uint64_t v97 = sub_10017DF08(&qword_100E749B0);
        memcpy(__dsta, v96, *(void *)(*(void *)(v97 - 8) + 64));
      }
      else
      {
        v94(__dsta, v96, v90);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v90);
      }
      v84[v113[9]] = v85[v113[9]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v84, v85, *(void *)(*(void *)(v86 - 8) + 64));
    }
  }
  uint64_t v98 = *(int *)(v48 + 24);
  uint64_t v99 = v46 + v98;
  uint64_t v100 = v47 + v98;
  uint64_t v101 = type metadata accessor for DetailComponentAction();
  int v102 = _s7Weather24LocationCompositionStateOwet_0(v99, 1, v101);
  int v103 = _s7Weather24LocationCompositionStateOwet_0(v100, 1, v101);
  if (v102)
  {
    if (!v103)
    {
      uint64_t v104 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v104 - 8) + 32))(v99, v100, v104);
      uint64_t v105 = sub_10017DF08(&qword_100E66478);
      *(unsigned char *)(v99 + *(int *)(v105 + 48)) = *(unsigned char *)(v100 + *(int *)(v105 + 48));
      uint64_t v79 = v99;
      uint64_t v80 = v101;
LABEL_23:
      _s7Weather24LocationCompositionStateOwst_0(v79, 0, 1, v80);
      return a1;
    }
  }
  else
  {
    if (!v103)
    {
      uint64_t v106 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v106 - 8) + 40))(v99, v100, v106);
      uint64_t v107 = sub_10017DF08(&qword_100E66478);
      *(unsigned char *)(v99 + *(int *)(v107 + 48)) = *(unsigned char *)(v100 + *(int *)(v107 + 48));
      return a1;
    }
    sub_1007B8B9C(v99, (void (*)(void))type metadata accessor for DetailComponentAction);
  }
  size_t v62 = *(void *)(*(void *)(sub_10017DF08(&qword_100E73810) - 8) + 64);
  uint64_t v63 = (void *)v99;
  uint64_t v64 = (const void *)v100;
LABEL_9:
  memcpy(v63, v64, v62);
  return a1;
}

uint64_t sub_1007B9BE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007B9BFC);
}

uint64_t sub_1007B9BFC(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    type metadata accessor for PolarType();
    sub_10017C808();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a3[6];
    }
    else
    {
      type metadata accessor for Date();
      sub_10017C808();
      if (*(_DWORD *)(v13 + 84) == a2)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a3[7];
      }
      else
      {
        type metadata accessor for TimeZone();
        sub_10017C808();
        if (*(_DWORD *)(v15 + 84) == a2)
        {
          uint64_t v10 = v14;
          uint64_t v11 = a3[8];
        }
        else
        {
          type metadata accessor for AttributedString();
          sub_10017C808();
          if (*(_DWORD *)(v17 + 84) == a2)
          {
            uint64_t v10 = v16;
            uint64_t v11 = a3[9];
          }
          else
          {
            type metadata accessor for SunriseSunsetDetailChartViewModel();
            sub_10017C808();
            if (*(_DWORD *)(v19 + 84) == a2)
            {
              uint64_t v10 = v18;
              uint64_t v11 = a3[12];
            }
            else
            {
              type metadata accessor for Location();
              sub_10017C808();
              if (*(_DWORD *)(v21 + 84) == a2)
              {
                uint64_t v10 = v20;
                uint64_t v11 = a3[13];
              }
              else
              {
                type metadata accessor for DaylightStringBuilder();
                sub_10017C808();
                if (*(_DWORD *)(v23 + 84) == a2)
                {
                  uint64_t v10 = v22;
                  uint64_t v11 = a3[14];
                }
                else
                {
                  type metadata accessor for OverviewTableViewModel();
                  sub_10017C808();
                  if (*(_DWORD *)(v25 + 84) == a2)
                  {
                    uint64_t v10 = v24;
                    uint64_t v11 = a3[15];
                  }
                  else
                  {
                    uint64_t v10 = sub_10017DF08(&qword_100E66E28);
                    uint64_t v11 = a3[16];
                  }
                }
              }
            }
          }
        }
      }
    }
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v11, a2, v10);
  }
}

uint64_t sub_1007B9DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007B9DDC);
}

uint64_t sub_1007B9DDC(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    type metadata accessor for PolarType();
    sub_10017C808();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a4[6];
    }
    else
    {
      type metadata accessor for Date();
      sub_10017C808();
      if (*(_DWORD *)(v13 + 84) == a3)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a4[7];
      }
      else
      {
        type metadata accessor for TimeZone();
        sub_10017C808();
        if (*(_DWORD *)(v15 + 84) == a3)
        {
          uint64_t v10 = v14;
          uint64_t v11 = a4[8];
        }
        else
        {
          type metadata accessor for AttributedString();
          sub_10017C808();
          if (*(_DWORD *)(v17 + 84) == a3)
          {
            uint64_t v10 = v16;
            uint64_t v11 = a4[9];
          }
          else
          {
            type metadata accessor for SunriseSunsetDetailChartViewModel();
            sub_10017C808();
            if (*(_DWORD *)(v19 + 84) == a3)
            {
              uint64_t v10 = v18;
              uint64_t v11 = a4[12];
            }
            else
            {
              type metadata accessor for Location();
              sub_10017C808();
              if (*(_DWORD *)(v21 + 84) == a3)
              {
                uint64_t v10 = v20;
                uint64_t v11 = a4[13];
              }
              else
              {
                type metadata accessor for DaylightStringBuilder();
                sub_10017C808();
                if (*(_DWORD *)(v23 + 84) == a3)
                {
                  uint64_t v10 = v22;
                  uint64_t v11 = a4[14];
                }
                else
                {
                  type metadata accessor for OverviewTableViewModel();
                  sub_10017C808();
                  if (*(_DWORD *)(v25 + 84) == a3)
                  {
                    uint64_t v10 = v24;
                    uint64_t v11 = a4[15];
                  }
                  else
                  {
                    uint64_t v10 = sub_10017DF08(&qword_100E66E28);
                    uint64_t v11 = a4[16];
                  }
                }
              }
            }
          }
        }
      }
    }
    return _s7Weather24LocationCompositionStateOwst_0(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t _s10PolarModelVMa()
{
  uint64_t result = qword_100E95170;
  if (!qword_100E95170) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1007B9FEC()
{
  type metadata accessor for PolarType();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Date();
    if (v1 <= 0x3F)
    {
      type metadata accessor for TimeZone();
      if (v2 <= 0x3F)
      {
        type metadata accessor for AttributedString();
        if (v3 <= 0x3F)
        {
          type metadata accessor for SunriseSunsetDetailChartViewModel();
          if (v4 <= 0x3F)
          {
            type metadata accessor for Location();
            if (v5 <= 0x3F)
            {
              type metadata accessor for DaylightStringBuilder();
              if (v6 <= 0x3F)
              {
                type metadata accessor for OverviewTableViewModel();
                if (v7 <= 0x3F)
                {
                  sub_1007BA274();
                  if (v8 <= 0x3F) {
                    swift_initStructMetadata();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_1007BA274()
{
  if (!qword_100E69CE0)
  {
    type metadata accessor for DetailComponentContainerViewModel();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E69CE0);
    }
  }
}

uint64_t sub_1007BA2CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X7>, char *a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v18 = type metadata accessor for DaylightStringBuilder();
  uint64_t v47 = *(void *)(v18 - 8);
  uint64_t v48 = v18;
  __chkstk_darwin(v18);
  sub_1001626E0();
  uint64_t v46 = v20 - v19;
  *(void *)a6 = a1;
  *((void *)a6 + 1) = a2;
  *((void *)a6 + 2) = a3;
  *((void *)a6 + 3) = a4;
  uint64_t v21 = (int *)_s10PolarModelVMa();
  type metadata accessor for PolarType();
  sub_100181738();
  sub_10017C808();
  sub_100162808();
  v22();
  type metadata accessor for Date();
  sub_100181738();
  sub_10017C808();
  sub_100162808();
  v23();
  sub_1001A2474();
  type metadata accessor for TimeZone();
  sub_100181738();
  sub_10017C808();
  sub_10017E8C4();
  sub_100162808();
  v24();
  uint64_t v25 = &a6[v21[11]];
  *(void *)uint64_t v25 = a5;
  *((void *)v25 + 1) = a7;
  sub_1001A2474();
  type metadata accessor for AttributedString();
  sub_100181738();
  uint64_t v45 = v26;
  sub_10017C808();
  uint64_t v28 = v27;
  sub_10017E8C4();
  sub_100162808();
  v29();
  *(void *)&a6[v21[10]] = a9;
  sub_1001A2474();
  uint64_t v30 = type metadata accessor for SunriseSunsetDetailChartViewModel();
  sub_10017C808();
  uint64_t v32 = v31;
  sub_10017E8C4();
  sub_100162808();
  v33();
  sub_1001A2474();
  uint64_t v34 = type metadata accessor for Location();
  sub_10017C808();
  uint64_t v36 = v35;
  sub_10017E8C4();
  sub_100162808();
  v37();
  DaylightStringBuilder.init()();
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(a11, v30);
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(a10, v34);
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(a8, v45);
  sub_100162F0C();
  v38();
  sub_100162F0C();
  v39();
  sub_100162F0C();
  v40();
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(&a6[v21[14]], v46, v48);
  uint64_t v41 = &a6[v21[15]];
  type metadata accessor for OverviewTableViewModel();
  sub_100162E4C();
  (*(void (**)(char *, uint64_t))(v42 + 32))(v41, a12);
  return sub_1007BAB00(a13, (uint64_t)&a6[v21[16]]);
}

BOOL sub_1007BA648(void *a1, void *a2)
{
  type metadata accessor for DetailComponentContainerViewModel();
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_1001626E0();
  unint64_t v7 = (uint64_t *)(v6 - v5);
  uint64_t v8 = sub_10017DF08(&qword_100E6A5E8);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_10017DF08(&qword_100E66E28);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (uint64_t *)((char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v37 - v18;
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v37 - v20;
  BOOL v22 = *a1 == *a2 && a1[1] == a2[1];
  if (v22 || (char v23 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v23 & 1) != 0))
  {
    BOOL v25 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v25 || (char v26 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v26 & 1) != 0))
    {
      uint64_t v27 = (int *)_s10PolarModelVMa();
      sub_10017D498(v27[6]);
      if ((static PolarType.== infix(_:_:)() & 1) == 0) {
        return 0;
      }
      sub_10017D498(v27[7]);
      if ((static Date.== infix(_:_:)() & 1) == 0) {
        return 0;
      }
      sub_10017D498(v27[8]);
      if ((static TimeZone.== infix(_:_:)() & 1) == 0) {
        return 0;
      }
      sub_10017D498(v27[9]);
      if ((static AttributedString.== infix(_:_:)() & 1) == 0
        || (sub_1001508B0(*(void **)((char *)a1 + v27[10]), *(void **)((char *)a2 + v27[10])) & 1) == 0)
      {
        return 0;
      }
      uint64_t v28 = v27[11];
      uint64_t v29 = *(void *)((char *)a1 + v28);
      uint64_t v30 = *(void *)((char *)a1 + v28 + 8);
      uint64_t v31 = (void *)((char *)a2 + v28);
      BOOL v32 = v29 == *v31 && v30 == v31[1];
      if (v32 || (char v33 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v33 & 1) != 0))
      {
        sub_10017D498(v27[12]);
        if (static SunriseSunsetDetailChartViewModel.== infix(_:_:)())
        {
          sub_10017D498(v27[13]);
          if (static Location.== infix(_:_:)())
          {
            sub_10017D498(v27[14]);
            if (static DaylightStringBuilder.== infix(_:_:)())
            {
              sub_10017D498(v27[15]);
              if (static OverviewTableViewModel.== infix(_:_:)())
              {
                sub_1007BAA34((uint64_t)a1 + v27[16], (uint64_t)v21);
                sub_1007BAA34((uint64_t)a2 + v27[16], (uint64_t)v19);
                uint64_t v34 = v12 + *(int *)(v8 + 48);
                sub_1007BAA34((uint64_t)v21, v12);
                sub_1007BAA34((uint64_t)v19, v34);
                sub_100162F8C(v12);
                if (v22)
                {
                  sub_100178110((uint64_t)v19, &qword_100E66E28);
                  sub_100178110((uint64_t)v21, &qword_100E66E28);
                  sub_100162F8C(v34);
                  if (v22)
                  {
                    sub_100178110(v12, &qword_100E66E28);
                    return 1;
                  }
                }
                else
                {
                  sub_1007BAA34(v12, (uint64_t)v16);
                  sub_100162F8C(v34);
                  if (!v35)
                  {
                    sub_1007BAA9C(v34, (uint64_t)v7);
                    char v36 = sub_1004B7C2C(v16, v7);
                    sub_1007B8B9C((uint64_t)v7, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
                    sub_100178110((uint64_t)v19, &qword_100E66E28);
                    sub_100178110((uint64_t)v21, &qword_100E66E28);
                    sub_1007B8B9C((uint64_t)v16, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
                    sub_100178110(v12, &qword_100E66E28);
                    return (v36 & 1) != 0;
                  }
                  sub_100178110((uint64_t)v19, &qword_100E66E28);
                  sub_100178110((uint64_t)v21, &qword_100E66E28);
                  sub_1007B8B9C((uint64_t)v16, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
                }
                sub_100178110(v12, &qword_100E6A5E8);
              }
            }
          }
        }
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1007BAA34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E66E28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1007BAA9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DetailComponentContainerViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1007BAB00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E66E28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1007BAB68()
{
  uint64_t v0 = type metadata accessor for LocationViewModel();
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v8 - v4;
  swift_retain();
  sub_100133E68();
  swift_release();
  swift_retain();
  sub_100133E68();
  swift_release();
  char v6 = sub_1000C7464((uint64_t)v5, (uint64_t)v2);
  sub_1007BAC5C((uint64_t)v2);
  sub_1007BAC5C((uint64_t)v5);
  return v6 & 1;
}

uint64_t sub_1007BAC5C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LocationViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *initializeWithTake for LocationView(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x88uLL);
}

uint64_t assignWithTake for LocationView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_unknownObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 56);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 96);
  long long v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationView(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 136))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(void *)BOOL result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 136) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 136) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1007BAE10()
{
  sub_10017DF08(&qword_100E8F948);
  uint64_t result = Dictionary.init(dictionaryLiteral:)();
  qword_100F51C28 = result;
  return result;
}

uint64_t *sub_1007BAE58()
{
  if (qword_100E62648 != -1) {
    swift_once();
  }
  return &qword_100F51C28;
}

uint64_t sub_1007BAEA4(uint64_t *a1, void (*a2)(uint64_t *__return_ptr))
{
  a2(&v6);
  uint64_t v3 = v6;
  if (qword_100E62648 != -1) {
    swift_once();
  }
  sub_1002E70D4();
  if ((v4 & 1) == 0) {
    return sub_1007BB070(v3, (uint64_t)sub_1007BB90C, 0, a1);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1007BAF7C@<X0>(void *a1@<X8>)
{
  sub_1007BAE58();
  *a1 = qword_100F51C28;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1007BAFC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for Date();
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(a1, a3);

  return sub_100715AD0(a4, a2);
}

uint64_t sub_1007BB040(void *a1, uint64_t a2, uint64_t a3)
{
  *a1 = a3;
  swift_bridgeObjectRetain();
  return a2;
}

uint64_t sub_1007BB070(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *a4;
  *a4 = 0x8000000000000000;
  sub_1007BB0FC(a1, a2, a3, isUniquelyReferenced_nonNull_native, &v10);
  *a4 = v10;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1007BB0FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  sub_1007BB3F0(a1, a2, a3, &v36);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v7 = sub_1007BB794();
  if (v8)
  {
    uint64_t v9 = v7;
    uint64_t v10 = v8;
    while (1)
    {
      uint64_t v11 = (void *)*a5;
      unint64_t v13 = sub_1002109DC(v9);
      uint64_t v14 = v11[2];
      BOOL v15 = (v12 & 1) == 0;
      uint64_t v16 = v14 + v15;
      if (__OFADD__(v14, v15)) {
        break;
      }
      char v17 = v12;
      if (v11[3] >= v16)
      {
        if ((a4 & 1) == 0)
        {
          sub_10017DF08(&qword_100E951E8);
          _NativeDictionary.copy()();
        }
      }
      else
      {
        sub_100714CBC(v16, a4 & 1);
        unint64_t v18 = sub_1002109DC(v9);
        if ((v17 & 1) != (v19 & 1)) {
          goto LABEL_36;
        }
        unint64_t v13 = v18;
      }
      uint64_t v20 = (void *)*a5;
      if (v17)
      {
        uint64_t v21 = *(void *)(v20[7] + 8 * v13);
        uint64_t v22 = *(void *)(v10 + 16);
        uint64_t v23 = *(void *)(v21 + 16);
        if (__OFADD__(v23, v22)) {
          goto LABEL_31;
        }
        swift_bridgeObjectRetain();
        if (!swift_isUniquelyReferenced_nonNull_native() || v23 + v22 > *(void *)(v21 + 24) >> 1)
        {
          sub_1007EA1FC();
          uint64_t v21 = v24;
        }
        if (*(void *)(v10 + 16))
        {
          uint64_t v25 = *(void *)(v21 + 16);
          if ((*(void *)(v21 + 24) >> 1) - v25 < v22) {
            goto LABEL_34;
          }
          char v26 = (void *)(v21 + 16 * v25 + 32);
          if (v10 + 32 < (unint64_t)v26 + 16 * v22 && (unint64_t)v26 < v10 + 32 + 16 * v22) {
            goto LABEL_37;
          }
          memcpy(v26, (const void *)(v10 + 32), 16 * v22);
          if (v22)
          {
            uint64_t v28 = *(void *)(v21 + 16);
            BOOL v29 = __OFADD__(v28, v22);
            uint64_t v30 = v28 + v22;
            if (v29) {
              goto LABEL_35;
            }
            *(void *)(v21 + 16) = v30;
          }
        }
        else if (v22)
        {
          goto LABEL_33;
        }
        swift_bridgeObjectRelease();
        uint64_t v33 = v20[7];
        swift_bridgeObjectRelease();
        *(void *)(v33 + 8 * v13) = v21;
      }
      else
      {
        v20[(v13 >> 6) + 8] |= 1 << v13;
        *(void *)(v20[6] + 8 * v13) = v9;
        *(void *)(v20[7] + 8 * v13) = v10;
        uint64_t v31 = v20[2];
        BOOL v29 = __OFADD__(v31, 1);
        uint64_t v32 = v31 + 1;
        if (v29) {
          goto LABEL_32;
        }
        long long v20[2] = v32;
      }
      uint64_t v9 = sub_1007BB794();
      uint64_t v10 = v34;
      a4 = 1;
      if (!v34) {
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
LABEL_37:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
LABEL_29:
    swift_bridgeObjectRelease();
    swift_release();
    sub_10023B8FC();
    return swift_release();
  }
  return result;
}

uint64_t sub_1007BB3F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  *a4 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t result = a1 + 64;
  uint64_t v6 = v7;
  a4[1] = result;
  a4[2] = ~v4;
  if (-v4 < 64) {
    uint64_t v8 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v8 = -1;
  }
  a4[3] = 0;
  a4[4] = v8 & v6;
  a4[5] = a2;
  a4[6] = a3;
  return result;
}

uint64_t sub_1007BB42C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10017DF08(&qword_100E65700);
  sub_100162E4C();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E951F0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  char v12 = (char *)&v36 - v11;
  uint64_t v14 = *v1;
  uint64_t v13 = v1[1];
  uint64_t v15 = v1[2];
  int64_t v16 = v1[3];
  unint64_t v17 = v1[4];
  uint64_t v37 = v6;
  uint64_t v38 = v15;
  uint64_t v39 = v13;
  if (v17)
  {
    uint64_t v6 = (char *)a1;
    uint64_t v18 = (v17 - 1) & v17;
    unint64_t v19 = __clz(__rbit64(v17)) | (v16 << 6);
LABEL_3:
    uint64_t v20 = *(void *)(v14 + 48);
    type metadata accessor for Date();
    sub_100162E4C();
    (*(void (**)(char *, unint64_t))(v21 + 16))(v12, v20 + *(void *)(v21 + 72) * v19);
    uint64_t v22 = *(void *)(v14 + 56);
    uint64_t v23 = type metadata accessor for ElevationData();
    sub_100715AD0(v22 + *(void *)(*(void *)(v23 - 8) + 72) * v19, (uint64_t)&v12[*(int *)(v3 + 48)]);
    uint64_t v24 = 0;
LABEL_4:
    a1 = (uint64_t)v6;
    goto LABEL_5;
  }
  int64_t v31 = v16 + 1;
  if (__OFADD__(v16, 1))
  {
    __break(1u);
    goto LABEL_32;
  }
  int64_t v32 = (unint64_t)(v15 + 64) >> 6;
  if (v31 >= v32)
  {
    uint64_t v18 = 0;
    uint64_t v24 = 1;
    goto LABEL_5;
  }
  unint64_t v33 = *(void *)(v13 + 8 * v31);
  if (v33)
  {
    uint64_t v6 = (char *)a1;
LABEL_12:
    uint64_t v18 = (v33 - 1) & v33;
    unint64_t v19 = __clz(__rbit64(v33)) + (v31 << 6);
    int64_t v16 = v31;
    goto LABEL_3;
  }
  int64_t v34 = v16 + 2;
  if (v16 + 2 >= v32)
  {
    uint64_t v18 = 0;
    uint64_t v24 = 1;
    ++v16;
    goto LABEL_5;
  }
  unint64_t v33 = *(void *)(v13 + 8 * v34);
  if (v33)
  {
LABEL_16:
    uint64_t v6 = (char *)a1;
    int64_t v31 = v34;
    goto LABEL_12;
  }
  if (v16 + 3 >= v32) {
    goto LABEL_29;
  }
  unint64_t v33 = *(void *)(v13 + 8 * (v16 + 3));
  if (v33)
  {
    uint64_t v6 = (char *)a1;
    int64_t v31 = v16 + 3;
    goto LABEL_12;
  }
  int64_t v34 = v16 + 4;
  if (v16 + 4 < v32)
  {
    unint64_t v33 = *(void *)(v13 + 8 * v34);
    if (v33) {
      goto LABEL_16;
    }
    int64_t v31 = v16 + 5;
    if (v16 + 5 < v32)
    {
      uint64_t v6 = (char *)a1;
      unint64_t v33 = *(void *)(v13 + 8 * v31);
      if (v33) {
        goto LABEL_12;
      }
      int64_t v31 = v32 - 1;
      int64_t v35 = v16 + 6;
      while (v35 < v32)
      {
        unint64_t v33 = *(void *)(v13 + 8 * v35++);
        if (v33)
        {
          int64_t v31 = v35 - 1;
          goto LABEL_12;
        }
      }
LABEL_32:
      uint64_t v18 = 0;
      uint64_t v24 = 1;
      int64_t v16 = v31;
      goto LABEL_4;
    }
LABEL_29:
    uint64_t v18 = 0;
    uint64_t v24 = 1;
    int64_t v16 = v34;
    goto LABEL_5;
  }
  uint64_t v18 = 0;
  uint64_t v24 = 1;
  v16 += 3;
LABEL_5:
  uint64_t v25 = 1;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, v24, 1, v3);
  uint64_t v26 = v39;
  *uint64_t v1 = v14;
  v1[1] = v26;
  v1[2] = v38;
  v1[3] = v16;
  v1[4] = v18;
  uint64_t v27 = (void (*)(uint64_t))v1[5];
  sub_10020E72C((uint64_t)v12, (uint64_t)v9, &qword_100E951F0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v3) != 1)
  {
    uint64_t v28 = (uint64_t)v37;
    sub_10020E72C((uint64_t)v9, (uint64_t)v37, &qword_100E65700);
    v27(v28);
    sub_1007BB948(v28);
    uint64_t v25 = 0;
  }
  uint64_t v29 = sub_10017DF08(&qword_100E657C8);
  return _s7Weather24LocationCompositionStateOwst_0(a1, v25, 1, v29);
}

uint64_t sub_1007BB794()
{
  void (*v9)(uint64_t *__return_ptr, void *);
  uint64_t result;
  int64_t v11;
  int64_t v12;
  uint64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t v17;
  void v18[2];

  uint64_t v1 = *v0;
  int64_t v3 = v0[3];
  unint64_t v2 = v0[4];
  int64_t v4 = v3;
  if (v2)
  {
    uint64_t v5 = (v2 - 1) & v2;
    unint64_t v6 = __clz(__rbit64(v2)) | (v3 << 6);
LABEL_3:
    uint64_t v7 = *(void *)(*(void *)(v1 + 48) + 8 * v6);
    uint64_t v8 = *(void *)(*(void *)(v1 + 56) + 8 * v6);
    v0[3] = v4;
    v0[4] = v5;
    uint64_t v9 = (void (*)(uint64_t *__return_ptr, void *))v0[5];
    v18[0] = v7;
    v18[1] = v8;
    swift_bridgeObjectRetain();
    v9(&v17, v18);
    swift_bridgeObjectRelease();
    return v17;
  }
  uint64_t v11 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
  }
  else
  {
    char v12 = (unint64_t)(v0[2] + 64) >> 6;
    if (v11 < v12)
    {
      uint64_t v13 = v0[1];
      uint64_t v14 = *(void *)(v13 + 8 * v11);
      if (v14)
      {
LABEL_7:
        uint64_t v5 = (v14 - 1) & v14;
        unint64_t v6 = __clz(__rbit64(v14)) + (v11 << 6);
        int64_t v4 = v11;
        goto LABEL_3;
      }
      uint64_t v15 = v3 + 2;
      int64_t v4 = v3 + 1;
      if (v3 + 2 < v12)
      {
        uint64_t v14 = *(void *)(v13 + 8 * v15);
        if (v14)
        {
LABEL_10:
          uint64_t v11 = v15;
          goto LABEL_7;
        }
        int64_t v4 = v3 + 2;
        if (v3 + 3 < v12)
        {
          uint64_t v14 = *(void *)(v13 + 8 * (v3 + 3));
          if (v14)
          {
            uint64_t v11 = v3 + 3;
            goto LABEL_7;
          }
          uint64_t v15 = v3 + 4;
          int64_t v4 = v3 + 3;
          if (v3 + 4 < v12)
          {
            uint64_t v14 = *(void *)(v13 + 8 * v15);
            if (v14) {
              goto LABEL_10;
            }
            uint64_t v11 = v3 + 5;
            int64_t v4 = v3 + 4;
            if (v3 + 5 < v12)
            {
              uint64_t v14 = *(void *)(v13 + 8 * v11);
              if (v14) {
                goto LABEL_7;
              }
              int64_t v4 = v12 - 1;
              int64_t v16 = v3 + 6;
              while (v16 < v12)
              {
                uint64_t v14 = *(void *)(v13 + 8 * v16++);
                if (v14)
                {
                  uint64_t v11 = v16 - 1;
                  goto LABEL_7;
                }
              }
            }
          }
        }
      }
    }
    uint64_t result = 0;
    v0[3] = v4;
    v0[4] = 0;
  }
  return result;
}

uint64_t sub_1007BB90C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1007BB040(&v5, *a1, a1[1]);
  uint64_t v4 = v5;
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1007BB948(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E65700);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1007BB9A8()
{
}

void sub_1007BB9C0()
{
}

uint64_t sub_1007BB9D8()
{
  return static AirPollutantCategory.read(from:)();
}

uint64_t sub_1007BB9F0()
{
  return AirPollutantCategory.write(to:)();
}

uint64_t sub_1007BBA08()
{
  return static AirPollutantKind.read(from:)();
}

uint64_t sub_1007BBA20()
{
  return AirPollutantKind.write(to:)();
}

void sub_1007BBA38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1007BBA50()
{
}

void sub_1007BBA68()
{
}

void sub_1007BBA80()
{
}

void sub_1007BBA98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  static AirQuality.read(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_1007BBAB0()
{
}

uint64_t sub_1007BBAC8()
{
  return static AirQualityData.read(from:)();
}

void sub_1007BBAE0()
{
}

uint64_t sub_1007BBAF8()
{
  return static AirQualityPreviousDayComparison.read(from:)();
}

uint64_t sub_1007BBB10()
{
  return AirQualityPreviousDayComparison.write(to:)();
}

void sub_1007BBB28()
{
}

void sub_1007BBB40()
{
}

uint64_t sub_1007BBB58()
{
  return static AirQualityScaleCategory.read(from:)();
}

void sub_1007BBB70()
{
}

uint64_t sub_1007BBB88()
{
  return static AirQualityScaleGradient.read(from:)();
}

uint64_t sub_1007BBBA0()
{
  return AirQualityScaleGradient.write(to:)();
}

uint64_t sub_1007BBBB8()
{
  return static AirQualityScaleGradientStop.read(from:)();
}

uint64_t sub_1007BBBD0()
{
  return AirQualityScaleGradientStop.write(to:)();
}

void sub_1007BBBE8()
{
}

void sub_1007BBC00()
{
}

void sub_1007BBC18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1007BBC30()
{
}

uint64_t sub_1007BBC48()
{
  return static AvailableDataSets.read(from:)();
}

uint64_t sub_1007BBC60()
{
  return AvailableDataSets.write(to:)();
}

unint64_t sub_1007BBC7C()
{
  unint64_t result = qword_100E951F8;
  if (!qword_100E951F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E951F8);
  }
  return result;
}

unint64_t sub_1007BBCCC()
{
  unint64_t result = qword_100E95200;
  if (!qword_100E95200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E95200);
  }
  return result;
}

uint64_t sub_1007BBD18()
{
  return FixedSizeTypeBinaryCodable.write(to:)();
}

uint64_t sub_1007BBD60()
{
  return static FixedSizeTypeBinaryCodable.read(from:)();
}

uint64_t sub_1007BBDB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return static CurrentWeather.read(from:)(a1, a2);
}

void sub_1007BBDC8()
{
}

uint64_t sub_1007BBDE0()
{
  return static CloudCoverByAltitude.read(from:)();
}

uint64_t sub_1007BBDF8()
{
  return CloudCoverByAltitude.write(to:)();
}

void sub_1007BBE10()
{
}

void sub_1007BBE28()
{
}

uint64_t sub_1007BBE40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1008A1A74();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1007BBE6C()
{
  return sub_1008A1B14();
}

uint64_t sub_1007BBE88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return static DayWeather.read(from:)(a1, a2);
}

void sub_1007BBEA0()
{
}

uint64_t sub_1007BBEB8()
{
  return static Elevation.read(from:)();
}

uint64_t sub_1007BBED0()
{
  return Elevation.write(to:)();
}

void sub_1007BBEE8()
{
}

void sub_1007BBF00()
{
}

void sub_1007BBF18()
{
}

uint64_t sub_1007BBF30()
{
  return sub_1008A412C();
}

int *sub_1007BBF48()
{
  return sub_1008A4184();
}

uint64_t sub_1007BBF60()
{
  return sub_1008A437C();
}

void sub_1007BBF78()
{
}

void sub_1007BBF90()
{
}

uint64_t sub_1007BBFA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1008A4768();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1007BBFD4()
{
  return sub_1008A4808();
}

void sub_1007BBFF0()
{
}

#error "1007BC014: call analysis failed (funcsize=6)"

void sub_1007BC020()
{
}

uint64_t sub_1007BC038()
{
  return sub_1008A505C();
}

void sub_1007BC050()
{
}

uint64_t sub_1007BC068()
{
  return sub_1008A5574();
}

uint64_t sub_1007BC080@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return static HourWeather.read(from:)(a1, a2);
}

void sub_1007BC098()
{
}

void sub_1007BC0B0(void *a1@<X8>)
{
  sub_1008A6F90((uint64_t)v3);
  if (!v1) {
    memcpy(a1, v3, 0x70uLL);
  }
}

uint64_t sub_1007BC0FC()
{
  memcpy(v2, v0, sizeof(v2));
  return sub_1008A7138();
}

void sub_1007BC150()
{
}

void sub_1007BC168()
{
}

void sub_1007BC180()
{
}

void sub_1007BC198()
{
}

void sub_1007BC1B0()
{
}

void sub_1007BC1C8()
{
}

void sub_1007BC1E0()
{
}

void sub_1007BC1F8()
{
}

void sub_1007BC210()
{
}

void sub_1007BC228()
{
}

uint64_t sub_1007BC240()
{
  return static ArticlePlacementLocation.read(from:)();
}

uint64_t sub_1007BC258()
{
  return ArticlePlacementLocation.write(to:)();
}

uint64_t sub_1007BC270()
{
  return static News.read(from:)();
}

uint64_t sub_1007BC288()
{
  return News.write(to:)();
}

void sub_1007BC2A0()
{
}

void sub_1007BC2B8()
{
}

void sub_1007BC2D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1008A917C(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_1007BC2E8()
{
}

void sub_1007BC300()
{
}

void sub_1007BC318()
{
}

void sub_1007BC330()
{
}

void sub_1007BC348()
{
}

void sub_1007BC360()
{
}

void sub_1007BC378()
{
}

void sub_1007BC390(uint64_t a1)
{
}

void sub_1007BC3A8()
{
}

void sub_1007BC3C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1007BC3D8()
{
}

void sub_1007BC3F0()
{
}

void sub_1007BC408()
{
}

void sub_1007BC420()
{
}

void sub_1007BC438()
{
}

uint64_t sub_1007BC450()
{
  return static NextHourToken.read(from:)();
}

uint64_t sub_1007BC468()
{
  return NextHourToken.write(to:)();
}

void sub_1007BC480()
{
}

#error "1007BC4A4: call analysis failed (funcsize=6)"

uint64_t sub_1007BC4B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1008AC948();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1007BC4DC(uint64_t a1)
{
  return sub_1008ACA58(a1, *v1);
}

uint64_t sub_1007BC4F8()
{
  return static Precipitation.read(from:)();
}

uint64_t sub_1007BC510()
{
  return Precipitation.write(to:)();
}

void sub_1007BC528()
{
}

void sub_1007BC540()
{
}

void sub_1007BC558()
{
}

void sub_1007BC570()
{
}

void sub_1007BC588()
{
}

void sub_1007BC5A0()
{
}

void sub_1007BC5B8()
{
}

void sub_1007BC5D0()
{
}

uint64_t sub_1007BC5E8()
{
  return static PrecipitationShift.Kind.read(from:)();
}

uint64_t sub_1007BC600()
{
  return PrecipitationShift.Kind.write(to:)();
}

void sub_1007BC618(void *a1@<X8>)
{
  sub_1008AF374(v3);
  if (!v1) {
    memcpy(a1, v3, 0x70uLL);
  }
}

uint64_t sub_1007BC664()
{
  memcpy(v2, v0, sizeof(v2));
  return sub_1008AF454();
}

void sub_1007BC6B8(void *a1@<X8>)
{
  sub_1008AF52C(v3);
  if (!v1) {
    memcpy(a1, v3, 0x60uLL);
  }
}

uint64_t sub_1007BC704()
{
  memcpy(v2, v0, sizeof(v2));
  return sub_1008AF684();
}

void sub_1007BC758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1007BC770()
{
}

void sub_1007BC788()
{
}

void sub_1007BC7A0()
{
}

void sub_1007BC7B8()
{
}

void sub_1007BC7D0()
{
}

uint64_t sub_1007BC7E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1008B0180();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1007BC814()
{
  return sub_1008B01D4();
}

void sub_1007BC830(uint64_t a1@<X8>)
{
  double v3 = sub_1008B0228();
  if (!v1)
  {
    *(double *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = v6;
  }
}

uint64_t sub_1007BC860()
{
  return CGRect.write(to:)();
}

double sub_1007BC880@<D0>(uint64_t a1@<X8>)
{
  sub_1008B02F4((double *)v5);
  if (!v1)
  {
    double result = *(double *)v5;
    long long v4 = v5[1];
    *(_OWORD *)a1 = v5[0];
    *(_OWORD *)(a1 + 16) = v4;
    *(void *)(a1 + 32) = v6;
  }
  return result;
}

uint64_t sub_1007BC8C8()
{
  return sub_1008B037C();
}

uint64_t sub_1007BC904()
{
  return static UVIndex.read(from:)();
}

uint64_t sub_1007BC91C()
{
  return UVIndex.write(to:)();
}

void sub_1007BC934()
{
}

void sub_1007BC94C()
{
}

uint64_t sub_1007BC964@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = static Wind.CompassDirection.read(from:)();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1007BC990()
{
  return Wind.CompassDirection.write(to:)();
}

#error "1007BC9B8: call analysis failed (funcsize=6)"

void sub_1007BC9C4()
{
}

void sub_1007BC9DC()
{
}

void sub_1007BC9F4()
{
}

void sub_1007BCA0C()
{
}

void sub_1007BCA24()
{
}

uint64_t sub_1007BCA3C()
{
  return static WeatherCondition.read(from:)();
}

uint64_t sub_1007BCA54()
{
  return WeatherCondition.write(to:)();
}

void sub_1007BCA6C()
{
}

void sub_1007BCA84()
{
}

uint64_t sub_1007BCA9C()
{
  return static WeatherSeverity.read(from:)();
}

uint64_t sub_1007BCAB4()
{
  return WeatherSeverity.write(to:)();
}

uint64_t sub_1007BCACC()
{
  return static WeatherSeverityKind.read(from:)();
}

uint64_t sub_1007BCAE4()
{
  return WeatherSeverityKind.write(to:)();
}

void sub_1007BCAFC(uint64_t a1)
{
}

void sub_1007BCB14()
{
}

void sub_1007BCB2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1007BCB44()
{
}

void sub_1007BCB5C()
{
}

void sub_1007BCB74()
{
}

uint64_t sub_1007BCB8C()
{
  return static WeatherAvailability.AvailabilityKind.read(from:)();
}

uint64_t sub_1007BCBA4()
{
  return WeatherAvailability.AvailabilityKind.write(to:)();
}

void sub_1007BCBBC()
{
}

uint64_t sub_1007BCBD4(uint64_t a1)
{
  return sub_1008B3B48(a1);
}

double sub_1007BCBEC@<D0>(_OWORD *a1@<X8>)
{
  sub_1008B3BE8();
  if (!v1)
  {
    *a1 = v4;
    a1[1] = v5;
    double result = *(double *)&v6;
    a1[2] = v6;
  }
  return result;
}

uint64_t sub_1007BCC30()
{
  return sub_1008B3C78();
}

void sub_1007BCC6C()
{
}

void sub_1007BCC84()
{
}

void sub_1007BCC9C(void *a1@<X8>)
{
  sub_1008B3F84(__src);
  if (!v1) {
    memcpy(a1, __src, 0xE8uLL);
  }
}

uint64_t sub_1007BCCF0()
{
  memcpy(__dst, v0, sizeof(__dst));
  return sub_1008B4464();
}

uint64_t sub_1007BCD44()
{
  return sub_1008B4580();
}

uint64_t sub_1007BCD5C()
{
  return sub_1008B45C0();
}

void sub_1007BCD74()
{
}

void sub_1007BCD8C()
{
}

void sub_1007BCDA4()
{
}

void sub_1007BCDBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1007BCDD4()
{
}

uint64_t sub_1007BCDEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return static DayPartForecast.read(from:)(a1, a2);
}

void sub_1007BCE04()
{
}

void sub_1007BCE1C()
{
}

void sub_1007BCE34()
{
}

void sub_1007BCE4C()
{
}

void sub_1007BCE64()
{
}

uint64_t sub_1007BCE7C()
{
  return static Deviation.read(from:)();
}

uint64_t sub_1007BCE94()
{
  return Deviation.write(to:)();
}

uint64_t sub_1007BCEAC()
{
  return static HistoricalFacts.read(from:)();
}

uint64_t sub_1007BCEC4()
{
  return HistoricalFacts.write(to:)();
}

void sub_1007BCEDC()
{
}

void sub_1007BCEF4()
{
}

void sub_1007BCF0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1007BCF24()
{
}

void sub_1007BCF3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
}

void sub_1007BCF54()
{
}

void sub_1007BCF6C()
{
}

void sub_1007BCF84()
{
}

void sub_1007BCF9C()
{
}

void sub_1007BCFB4()
{
}

void sub_1007BCFCC()
{
}

void sub_1007BCFE4()
{
}

void sub_1007BCFFC()
{
}

void sub_1007BD014()
{
}

void sub_1007BD02C()
{
}

void sub_1007BD044()
{
}

void sub_1007BD05C()
{
}

void sub_1007BD074()
{
}

void sub_1007BD08C()
{
}

void sub_1007BD0A4()
{
}

void sub_1007BD0BC()
{
}

void sub_1007BD0D4()
{
}

void sub_1007BD0EC()
{
}

void sub_1007BD104()
{
}

unint64_t sub_1007BD11C()
{
  unint64_t result = qword_100E95208;
  if (!qword_100E95208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E95208);
  }
  return result;
}

void *assignWithTake for MainViewModelEnvironmentModifier(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

uint64_t sub_1007BD19C(unsigned __int8 *a1)
{
  return sub_1001CB20C(*a1);
}

uint64_t sub_1007BD1C4()
{
  uint64_t v0 = type metadata accessor for WeatherMapPresentationState(0);
  uint64_t v1 = v0 - 8;
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for MainViewModel(0);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_1001BFFC8();
  swift_release();
  sub_1001517B8((uint64_t)&v7[*(int *)(v5 + 44)], (uint64_t)v3, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
  sub_1001BFF18((uint64_t)v7, (void (*)(void))type metadata accessor for MainViewModel);
  int v8 = v3[*(int *)(v1 + 44)];
  sub_1001BFF18((uint64_t)v3, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
  if (v8 == 1)
  {
    if (qword_100E62320 != -1) {
      swift_once();
    }
    swift_retain();
  }
  else
  {
    static Animation.easeInOut.getter();
  }
  return Transaction.animation.setter();
}

uint64_t sub_1007BD374@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1001AEB00();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1007BD3A4(unsigned __int8 *a1)
{
  return sub_1001CB20C(*a1);
}

uint64_t sub_1007BD3CC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1007BD404()
{
  return sub_1007BD1C4();
}

BOOL sub_1007BD410(char *a1, char *a2)
{
  return sub_10011C864(*a1, *a2);
}

uint64_t sub_1007BD41C(void *a1)
{
  sub_10017DF08(&qword_100E95370);
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v4 = (uint64_t)sub_1001B1E64(a1, a1[3]);
  sub_1007BDB3C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v1)
  {
    sub_1007BDB88();
    sub_100180420();
    if (v11)
    {
      uint64_t v6 = sub_10019F130();
      v7(v6);
      uint64_t v4 = 4;
    }
    else
    {
      sub_1007BDBD4();
      sub_100180420();
      uint64_t v8 = sub_10019F130();
      v9(v8);
      uint64_t v4 = v10;
    }
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  return v4;
}

uint64_t sub_1007BD59C(void *a1, unsigned __int8 a2)
{
  int v4 = a2;
  uint64_t v5 = sub_10017DF08(&qword_100E95390);
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  sub_1001B1E64(a1, a1[3]);
  sub_1007BDB3C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  if (v4 == 4)
  {
    sub_1007BDC20();
LABEL_5:
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
  }
  sub_1007BDC20();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    sub_1007BDC6C();
    goto LABEL_5;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v11, v5);
}

uint64_t sub_1007BD728(Swift::String a1)
{
  v1._rawValue = &off_100E07E98;
  return sub_1007BD77C(a1, v1);
}

uint64_t sub_1007BD748(char a1)
{
  if (a1) {
    return 0x6361667265746E69;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_1007BD77C(Swift::String string, Swift::OpaquePointer cases)
{
  object = string._object;
  v3._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v3._object = object;
  Swift::Int v5 = _findStringSwitchCase(cases:string:)(cases, v3);
  swift_bridgeObjectRelease();
  if (v5 == 1) {
    unsigned int v6 = 1;
  }
  else {
    unsigned int v6 = 2;
  }
  if (v5) {
    return v6;
  }
  else {
    return 0;
  }
}

uint64_t sub_1007BD7CC(char a1)
{
  if (a1) {
    return 0x656E696C66666FLL;
  }
  else {
    return 0x6C62616863616572;
  }
}

uint64_t sub_1007BD808(char *a1, char *a2)
{
  return sub_10088B860(*a1, *a2);
}

Swift::Int sub_1007BD814()
{
  return sub_100652710();
}

uint64_t sub_1007BD81C()
{
  return sub_1002C31B4();
}

Swift::Int sub_1007BD824()
{
  return sub_1002C41F8();
}

uint64_t sub_1007BD82C@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_100E07E98;
  uint64_t result = sub_1007BD77C(*a1, v3);
  *a2 = result;
  return result;
}

uint64_t sub_1007BD864@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1007BD748(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1007BD890()
{
  return sub_1007BD748(*v0);
}

uint64_t sub_1007BD898@<X0>(Swift::String a1@<X1:X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1007BD728(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1007BD8C0(uint64_t a1)
{
  unint64_t v2 = sub_1007BDB3C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007BD8FC(uint64_t a1)
{
  unint64_t v2 = sub_1007BDB3C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1007BD938(char *a1, char *a2)
{
  return sub_10088B7C8(*a1, *a2);
}

Swift::Int sub_1007BD944()
{
  return sub_10065271C();
}

uint64_t sub_1007BD94C()
{
  return sub_1002C3144();
}

Swift::Int sub_1007BD954()
{
  return sub_1002C4264();
}

uint64_t sub_1007BD95C@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_100E07EE8;
  uint64_t result = sub_1007BD77C(*a1, v3);
  *a2 = result;
  return result;
}

uint64_t sub_1007BD994@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1007BD7CC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1007BD9C0()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1007BDA20()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1007BDA70@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1007BD41C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1007BDA9C(void *a1)
{
  return sub_1007BD59C(a1, *v1);
}

uint64_t sub_1007BDAB8()
{
  sub_1007BDCB8();

  return ShortDescribable.description.getter();
}

uint64_t sub_1007BDAF4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1008B9758();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1007BDB20(uint64_t a1)
{
  return sub_1008B9854(a1, *v1);
}

unint64_t sub_1007BDB3C()
{
  unint64_t result = qword_100E95378;
  if (!qword_100E95378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E95378);
  }
  return result;
}

unint64_t sub_1007BDB88()
{
  unint64_t result = qword_100E95380;
  if (!qword_100E95380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E95380);
  }
  return result;
}

unint64_t sub_1007BDBD4()
{
  unint64_t result = qword_100E95388;
  if (!qword_100E95388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E95388);
  }
  return result;
}

unint64_t sub_1007BDC20()
{
  unint64_t result = qword_100E95398;
  if (!qword_100E95398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E95398);
  }
  return result;
}

unint64_t sub_1007BDC6C()
{
  unint64_t result = qword_100E953A0;
  if (!qword_100E953A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E953A0);
  }
  return result;
}

unint64_t sub_1007BDCB8()
{
  unint64_t result = qword_100E953A8;
  if (!qword_100E953A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E953A8);
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkState.CodingType()
{
  return &type metadata for NetworkState.CodingType;
}

unsigned char *_s7Weather12NetworkStateO10CodingTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1007BDDE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkState.CodingKeys()
{
  return &type metadata for NetworkState.CodingKeys;
}

uint64_t getEnumTagSinglePayload for NetworkState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC)
  {
    unsigned int v2 = a2 + 4;
    if (a2 + 4 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 4;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 4;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1007BDEC8);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 4;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 4;
  unsigned int v9 = v7 - 4;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for NetworkState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 4;
  if (a3 + 4 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFC) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v7 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1007BDFB0);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

unint64_t sub_1007BDFDC()
{
  unint64_t result = qword_100E953B0;
  if (!qword_100E953B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E953B0);
  }
  return result;
}

unint64_t sub_1007BE02C()
{
  unint64_t result = qword_100E953B8;
  if (!qword_100E953B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E953B8);
  }
  return result;
}

unint64_t sub_1007BE07C()
{
  unint64_t result = qword_100E953C0;
  if (!qword_100E953C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E953C0);
  }
  return result;
}

unint64_t sub_1007BE0CC()
{
  unint64_t result = qword_100E953C8;
  if (!qword_100E953C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E953C8);
  }
  return result;
}

unint64_t sub_1007BE118()
{
  unint64_t result = qword_100E953D0;
  if (!qword_100E953D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E953D0);
  }
  return result;
}

uint64_t sub_1007BE164(uint64_t a1)
{
  uint64_t v114 = a1;
  uint64_t v1 = sub_10017DF08(&qword_100E663F0);
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_100109314();
  uint64_t v107 = v3;
  uint64_t v4 = sub_10017DF08(&qword_100E66418);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v110 = v6;
  uint64_t v7 = sub_10017DF08(&qword_100E66420);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v113 = v9;
  uint64_t v10 = sub_10017DF08(&qword_100E66428);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_100109314();
  uint64_t v106 = v12;
  uint64_t v13 = sub_10017DF08(&qword_100E66430);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_100109314();
  uint64_t v112 = v15;
  uint64_t v16 = sub_10017DF08(&qword_100E66438);
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  sub_100109314();
  uint64_t v111 = v18;
  uint64_t v19 = sub_10017DF08(&qword_100E66440);
  uint64_t v20 = sub_100109308(v19);
  __chkstk_darwin(v20);
  sub_100109314();
  uint64_t v109 = v21;
  uint64_t v22 = type metadata accessor for UUID();
  sub_100179C0C();
  uint64_t v108 = v23;
  __chkstk_darwin(v24);
  sub_1001626E0();
  uint64_t v27 = v26 - v25;
  uint64_t v28 = type metadata accessor for ModalViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v29);
  int64_t v31 = (char *)&v98 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  int64_t v34 = (char *)&v98 - v33;
  uint64_t v35 = sub_10017DF08(&qword_100E71640);
  uint64_t v36 = sub_100109308(v35);
  __chkstk_darwin(v36);
  sub_1001626E0();
  uint64_t v39 = v38 - v37;
  uint64_t v40 = type metadata accessor for PresentedLocation();
  sub_100162E4C();
  __chkstk_darwin(v41);
  sub_1001626E0();
  uint64_t v44 = v43 - v42;
  id v45 = [self currentDevice];
  id v46 = [v45 userInterfaceIdiom];

  if (v46) {
    return 1;
  }
  uint64_t v103 = v27;
  uint64_t v104 = v22;
  uint64_t v105 = v28;
  uint64_t v47 = v112;
  uint64_t v48 = v113;
  uint64_t v49 = v114;
  sub_100B3044C(v39);
  if (_s7Weather24LocationCompositionStateOwet_0(v39, 1, v40) == 1)
  {
    sub_1001781AC(v39, &qword_100E71640);
    return 1;
  }
  sub_1007BFBA8(v39, v44, (void (*)(void))type metadata accessor for PresentedLocation);
  sub_10011A20C(v49 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, (uint64_t)v34, (void (*)(void))type metadata accessor for ModalViewState);
  swift_storeEnumTagMultiPayload();
  sub_10011990C();
  char v51 = v50;
  sub_1007BF360((uint64_t)v31, (void (*)(void))type metadata accessor for ModalViewState);
  sub_1007BF360((uint64_t)v34, (void (*)(void))type metadata accessor for ModalViewState);
  if ((v51 & 1) == 0)
  {
    if (qword_100E627C8 != -1) {
      swift_once();
    }
    uint64_t v91 = type metadata accessor for Logger();
    sub_1002102B0(v91, (uint64_t)qword_100F51E70);
    uint64_t v92 = Logger.logObject.getter();
    os_log_type_t v93 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v92, v93))
    {
      uint64_t v94 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v94 = 0;
      _os_log_impl((void *)&_mh_execute_header, v92, v93, "DiscardNonePresentedLocationDataStateProcessor: A modal view is presented. Skip cleaning up state", v94, 2u);
      swift_slowDealloc();
    }

    sub_1007BF360(v44, (void (*)(void))type metadata accessor for PresentedLocation);
    return 1;
  }
  if (qword_100E627C8 != -1) {
    swift_once();
  }
  uint64_t v52 = type metadata accessor for Logger();
  sub_1002102B0(v52, (uint64_t)qword_100F51E70);
  uint64_t v53 = Logger.logObject.getter();
  os_log_type_t v54 = static os_log_type_t.default.getter();
  uint64_t v55 = v48;
  uint64_t v56 = v47;
  if (os_log_type_enabled(v53, v54))
  {
    uint64_t v57 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v57 = 0;
    _os_log_impl((void *)&_mh_execute_header, v53, v54, "Found presentedLocationIdentifier. Remove none-presented locations weather data.", v57, 2u);
    swift_slowDealloc();
  }

  uint64_t v58 = v49 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData;
  uint64_t v59 = *(void *)(v49 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  __chkstk_darwin(v60);
  uint64_t v97 = v44;
  swift_bridgeObjectRetain();
  uint64_t v101 = sub_1007BEB44((uint64_t)sub_1007BEB08, (uint64_t)&v96, v59, (uint64_t (*)(uint64_t))sub_1007BEFD8);
  uint64_t v61 = swift_bridgeObjectRelease();
  uint64_t v102 = v44;
  uint64_t v62 = *(void *)(v58 + 24);
  __chkstk_darwin(v61);
  uint64_t v97 = v63;
  swift_bridgeObjectRetain();
  uint64_t v100 = sub_1007BEB44((uint64_t)sub_1007BECA4, (uint64_t)&v96, v62, (uint64_t (*)(uint64_t))sub_1007BECE0);
  swift_bridgeObjectRelease();
  uint64_t v64 = v103;
  UUID.init()();
  uint64_t v99 = UUID.uuidString.getter();
  uint64_t v66 = v65;
  (*(void (**)(uint64_t, uint64_t))(v108 + 8))(v64, v104);
  uint64_t v67 = type metadata accessor for AppConfigurationState();
  uint64_t v68 = v109;
  sub_100179C70(v109, v69, v70, v67);
  uint64_t v71 = type metadata accessor for EnvironmentState();
  uint64_t v72 = v111;
  sub_100179C70(v111, v73, v74, v71);
  uint64_t v75 = type metadata accessor for LocationsState();
  sub_100179C70(v56, v76, v77, v75);
  uint64_t v78 = type metadata accessor for NotificationsOptInState();
  uint64_t v79 = v106;
  sub_100179C70(v106, v80, v81, v78);
  uint64_t v82 = type metadata accessor for TimeState();
  uint64_t v85 = sub_100179C70(v55, v83, v84, v82);
  uint64_t v86 = type metadata accessor for ViewState(v85);
  uint64_t v87 = v55;
  uint64_t v88 = v110;
  _s7Weather24LocationCompositionStateOwst_0(v110, 1, 1, v86);
  uint64_t v89 = v107;
  _s7Weather24LocationCompositionStateOwst_0(v107, 1, 1, v105);
  uint64_t v90 = sub_1001659F0(0, 3, v68, v72, v56, 0, 0, 0, 0, v79, v87, v88, v89, v99, v66, v101, v100, 0, 0,
          0,
          v49);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1001781AC(v89, &qword_100E663F0);
  sub_1001781AC(v88, &qword_100E66418);
  sub_1001781AC(v87, &qword_100E66420);
  sub_1001781AC(v79, &qword_100E66428);
  sub_1001781AC(v56, &qword_100E66430);
  sub_1001781AC(v111, &qword_100E66438);
  sub_1001781AC(v68, &qword_100E66440);
  sub_1007BF360(v102, (void (*)(void))type metadata accessor for PresentedLocation);
  return v90;
}

uint64_t sub_1007BEA00(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v9 = sub_10017DF08(a4);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = (void *)(v12 - v11);
  uint64_t v15 = *a1;
  uint64_t v14 = a1[1];
  *uint64_t v13 = v15;
  v13[1] = v14;
  sub_10011A20C(a2, v12 - v11 + *(int *)(v16 + 56), a5);
  swift_bridgeObjectRetain();
  if (v15 == Location.Identifier.id.getter() && v14 == v17) {
    char v19 = 1;
  }
  else {
    char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  sub_1001781AC((uint64_t)v13, a4);
  return v19 & 1;
}

uint64_t sub_1007BEB08(uint64_t *a1, uint64_t a2)
{
  return sub_1007BEA00(a1, a2, *(void *)(v2 + 16), &qword_100E6A488, (void (*)(void))type metadata accessor for LocationWeatherDataState) & 1;
}

uint64_t sub_1007BEB44(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v6 = v4;
  char v7 = *(unsigned char *)(a3 + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  if ((v7 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    sub_1007F3004(0, v8, (uint64_t *)((char *)&v14 - ((8 * v8 + 15) & 0x3FFFFFFFFFFFFFF0)));
    uint64_t v9 = sub_10017E8E4();
    uint64_t v10 = a4(v9);
    if (v4) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    uint64_t v11 = (void *)swift_slowAlloc();
    sub_1007F3004(0, v8, v11);
    uint64_t v12 = sub_10017E8E4();
    uint64_t v6 = a4(v12);
    swift_slowDealloc();
  }
  return v6;
}

uint64_t sub_1007BECA4(uint64_t *a1, uint64_t a2)
{
  return sub_1007BEA00(a1, a2, *(void *)(v2 + 16), &qword_100E6A470, (void (*)(void))type metadata accessor for LocationAvailableDataSetState) & 1;
}

void sub_1007BECE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, char *))
{
  int64_t v31 = a4;
  uint64_t v25 = a2;
  uint64_t v26 = a1;
  uint64_t v6 = type metadata accessor for LocationAvailableDataSetState(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = 0;
  uint64_t v11 = *(void *)(a3 + 64);
  uint64_t v27 = 0;
  uint64_t v28 = a3 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v29 = (unint64_t)(v12 + 63) >> 6;
  while (v14)
  {
    unint64_t v15 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    unint64_t v16 = v15 | (v10 << 6);
LABEL_17:
    uint64_t v20 = *(void *)(a3 + 56);
    uint64_t v21 = (void *)(*(void *)(a3 + 48) + 16 * v16);
    uint64_t v22 = v21[1];
    v30[0] = *v21;
    v30[1] = v22;
    sub_10011A20C(v20 + *(void *)(v7 + 72) * v16, (uint64_t)v9, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
    swift_bridgeObjectRetain();
    char v23 = v31(v30, v9);
    sub_1007BF360((uint64_t)v9, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
    swift_bridgeObjectRelease();
    if (v4) {
      return;
    }
    if (v23)
    {
      *(void *)(v26 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      BOOL v17 = __OFADD__(v27++, 1);
      if (v17) {
        goto LABEL_30;
      }
    }
  }
  BOOL v17 = __OFADD__(v10++, 1);
  if (v17)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v10 >= v29) {
    goto LABEL_27;
  }
  unint64_t v18 = *(void *)(v28 + 8 * v10);
  if (v18)
  {
LABEL_16:
    unint64_t v14 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
    goto LABEL_17;
  }
  int64_t v19 = v10 + 1;
  if (v10 + 1 >= v29) {
    goto LABEL_27;
  }
  unint64_t v18 = *(void *)(v28 + 8 * v19);
  if (v18) {
    goto LABEL_15;
  }
  int64_t v19 = v10 + 2;
  if (v10 + 2 >= v29) {
    goto LABEL_27;
  }
  unint64_t v18 = *(void *)(v28 + 8 * v19);
  if (v18) {
    goto LABEL_15;
  }
  int64_t v19 = v10 + 3;
  if (v10 + 3 >= v29)
  {
LABEL_27:
    sub_1007BF400(v26, v25, v27, a3, (uint64_t)type metadata accessor for LocationAvailableDataSetState, (uint64_t)&unk_100E953D8, (void (*)(void))type metadata accessor for LocationAvailableDataSetState, (void (*)(void))type metadata accessor for LocationAvailableDataSetState);
    return;
  }
  unint64_t v18 = *(void *)(v28 + 8 * v19);
  if (v18)
  {
LABEL_15:
    int64_t v10 = v19;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v29) {
      goto LABEL_27;
    }
    unint64_t v18 = *(void *)(v28 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

void sub_1007BEFD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, char *))
{
  int64_t v31 = a4;
  uint64_t v25 = a2;
  uint64_t v26 = a1;
  uint64_t v6 = type metadata accessor for LocationWeatherDataState(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = 0;
  uint64_t v11 = *(void *)(a3 + 64);
  uint64_t v27 = 0;
  uint64_t v28 = a3 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v29 = (unint64_t)(v12 + 63) >> 6;
  while (v14)
  {
    unint64_t v15 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    unint64_t v16 = v15 | (v10 << 6);
LABEL_17:
    uint64_t v20 = *(void *)(a3 + 56);
    uint64_t v21 = (void *)(*(void *)(a3 + 48) + 16 * v16);
    uint64_t v22 = v21[1];
    v30[0] = *v21;
    v30[1] = v22;
    sub_10011A20C(v20 + *(void *)(v7 + 72) * v16, (uint64_t)v9, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    swift_bridgeObjectRetain();
    char v23 = v31(v30, v9);
    sub_1007BF360((uint64_t)v9, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    swift_bridgeObjectRelease();
    if (v4) {
      return;
    }
    if (v23)
    {
      *(void *)(v26 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      BOOL v17 = __OFADD__(v27++, 1);
      if (v17) {
        goto LABEL_30;
      }
    }
  }
  BOOL v17 = __OFADD__(v10++, 1);
  if (v17)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v10 >= v29) {
    goto LABEL_27;
  }
  unint64_t v18 = *(void *)(v28 + 8 * v10);
  if (v18)
  {
LABEL_16:
    unint64_t v14 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
    goto LABEL_17;
  }
  int64_t v19 = v10 + 1;
  if (v10 + 1 >= v29) {
    goto LABEL_27;
  }
  unint64_t v18 = *(void *)(v28 + 8 * v19);
  if (v18) {
    goto LABEL_15;
  }
  int64_t v19 = v10 + 2;
  if (v10 + 2 >= v29) {
    goto LABEL_27;
  }
  unint64_t v18 = *(void *)(v28 + 8 * v19);
  if (v18) {
    goto LABEL_15;
  }
  int64_t v19 = v10 + 3;
  if (v10 + 3 >= v29)
  {
LABEL_27:
    sub_1007BF400(v26, v25, v27, a3, (uint64_t)type metadata accessor for LocationWeatherDataState, (uint64_t)&unk_100E953E0, (void (*)(void))type metadata accessor for LocationWeatherDataState, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    return;
  }
  unint64_t v18 = *(void *)(v28 + 8 * v19);
  if (v18)
  {
LABEL_15:
    int64_t v10 = v19;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v29) {
      goto LABEL_27;
    }
    unint64_t v18 = *(void *)(v28 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_16;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

void sub_1007BF2D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1007BF318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_1007BF360(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

void sub_1007BF3B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1007BF400(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void), void (*a8)(void))
{
  uint64_t v59 = a7;
  sub_100163928();
  unint64_t v14 = v13;
  uint64_t v16 = v15(0);
  uint64_t v17 = sub_100164920(v16);
  uint64_t v58 = v18;
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v61 = v19;
  __chkstk_darwin(v20);
  uint64_t v57 = (char *)&v53 - v21;
  if (!v11) {
    return;
  }
  if (v10[2] == v11)
  {
    swift_retain();
    return;
  }
  uint64_t v56 = a8;
  sub_10017DF08(v8);
  uint64_t v22 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v23 = v22;
  os_log_type_t v54 = v14;
  uint64_t v55 = v9;
  if (v9 < 1) {
    unint64_t v24 = 0;
  }
  else {
    unint64_t v24 = *v14;
  }
  uint64_t v25 = 0;
  uint64_t v26 = v22 + 64;
  uint64_t v27 = v56;
  uint64_t v28 = (uint64_t)v57;
  while (1)
  {
    if (v24)
    {
      unint64_t v29 = __clz(__rbit64(v24));
      v24 &= v24 - 1;
      uint64_t v60 = v25;
      unint64_t v30 = v29 | (v25 << 6);
      goto LABEL_25;
    }
    uint64_t v31 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      goto LABEL_39;
    }
    if (v31 >= v55) {
      return;
    }
    unint64_t v32 = v54[v31];
    uint64_t v33 = v25 + 1;
    if (!v32)
    {
      uint64_t v33 = v25 + 2;
      if (v25 + 2 >= v55) {
        return;
      }
      unint64_t v32 = v54[v33];
      if (!v32)
      {
        uint64_t v33 = v25 + 3;
        if (v25 + 3 >= v55) {
          return;
        }
        unint64_t v32 = v54[v33];
        if (!v32) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v24 = (v32 - 1) & v32;
    uint64_t v60 = v33;
    unint64_t v30 = __clz(__rbit64(v32)) + (v33 << 6);
LABEL_25:
    uint64_t v35 = v10[7];
    uint64_t v36 = v10;
    uint64_t v37 = (uint64_t *)(v10[6] + 16 * v30);
    uint64_t v38 = *v37;
    uint64_t v39 = v37[1];
    uint64_t v40 = *(void *)(v58 + 72);
    sub_10011A20C(v35 + v40 * v30, v28, v59);
    sub_1007BFBA8(v28, v61, v27);
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    Hasher._finalize()();
    sub_100181744();
    unint64_t v44 = (v43 << v41) & ~*(void *)(v26 + 8 * v42);
    if (!v44)
    {
      sub_100183E64();
      uint64_t v27 = v56;
      while (++v47 != v48 || (v46 & 1) == 0)
      {
        BOOL v49 = v47 == v48;
        if (v47 == v48) {
          uint64_t v47 = 0;
        }
        v46 |= v49;
        uint64_t v50 = *(void *)(v26 + 8 * v47);
        if (v50 != -1)
        {
          unint64_t v45 = __clz(__rbit64(~v50)) + (v47 << 6);
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    unint64_t v45 = __clz(__rbit64(v44)) | v41 & 0x7FFFFFFFFFFFFFC0;
    uint64_t v27 = v56;
LABEL_34:
    *(void *)(v26 + ((v45 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v45;
    char v51 = (void *)(*(void *)(v23 + 48) + 16 * v45);
    *char v51 = v38;
    v51[1] = v39;
    sub_1007BFBA8(v61, *(void *)(v23 + 56) + v45 * v40, v27);
    sub_10019FFE0();
    if (v52) {
      goto LABEL_38;
    }
    int64_t v10 = v36;
    uint64_t v25 = v60;
  }
  uint64_t v34 = v25 + 4;
  if (v25 + 4 >= v55) {
    return;
  }
  unint64_t v32 = v54[v34];
  if (v32)
  {
    uint64_t v33 = v25 + 4;
    goto LABEL_24;
  }
  while (1)
  {
    uint64_t v33 = v34 + 1;
    if (__OFADD__(v34, 1)) {
      break;
    }
    if (v33 >= v55) {
      return;
    }
    unint64_t v32 = v54[v33];
    ++v34;
    if (v32) {
      goto LABEL_24;
    }
  }
LABEL_40:
  __break(1u);
}

unint64_t sub_1007BF71C()
{
  unint64_t result = qword_100E63978;
  if (!qword_100E63978)
  {
    type metadata accessor for Date();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E63978);
  }
  return result;
}

void sub_1007BF76C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1007BF7B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void), void (*a8)(void))
{
  uint64_t v71 = a8;
  uint64_t v65 = a7;
  sub_100163928();
  uint64_t v57 = v12;
  uint64_t v14 = v13(0);
  uint64_t v15 = sub_100164920(v14);
  uint64_t v64 = v16;
  __chkstk_darwin(v15);
  sub_100162EF8();
  uint64_t v70 = v17;
  __chkstk_darwin(v18);
  uint64_t v63 = (uint64_t)&v56 - v19;
  uint64_t v69 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v66 = v20;
  uint64_t v22 = __chkstk_darwin(v21);
  unint64_t v24 = (char *)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v62 = (char *)&v56 - v25;
  if (!v11) {
    return;
  }
  if (v10[2] == v11)
  {
    swift_retain();
    return;
  }
  sub_10017DF08(v8);
  uint64_t v26 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v27 = v26;
  uint64_t v56 = v9;
  if (v9 < 1) {
    unint64_t v28 = 0;
  }
  else {
    unint64_t v28 = *v57;
  }
  uint64_t v29 = 0;
  uint64_t v59 = v66 + 32;
  uint64_t v60 = v66 + 16;
  uint64_t v30 = v26 + 64;
  uint64_t v61 = v24;
  uint64_t v58 = v10;
  uint64_t v31 = v69;
  while (1)
  {
    if (v28)
    {
      uint64_t v67 = (v28 - 1) & v28;
      uint64_t v68 = v29;
      unint64_t v32 = __clz(__rbit64(v28)) | (v29 << 6);
      goto LABEL_25;
    }
    uint64_t v33 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      goto LABEL_39;
    }
    if (v33 >= v56) {
      return;
    }
    unint64_t v34 = v57[v33];
    uint64_t v35 = v29 + 1;
    if (!v34)
    {
      uint64_t v35 = v29 + 2;
      if (v29 + 2 >= v56) {
        return;
      }
      unint64_t v34 = v57[v35];
      if (!v34)
      {
        uint64_t v35 = v29 + 3;
        if (v29 + 3 >= v56) {
          return;
        }
        unint64_t v34 = v57[v35];
        if (!v34) {
          break;
        }
      }
    }
LABEL_24:
    uint64_t v67 = (v34 - 1) & v34;
    uint64_t v68 = v35;
    unint64_t v32 = __clz(__rbit64(v34)) + (v35 << 6);
LABEL_25:
    uint64_t v37 = v66;
    uint64_t v38 = *(void *)(v66 + 72);
    uint64_t v39 = v62;
    (*(void (**)(char *, unint64_t, uint64_t))(v66 + 16))(v62, v10[6] + v38 * v32, v31);
    uint64_t v40 = *(void *)(v64 + 72);
    uint64_t v41 = v10[7] + v40 * v32;
    uint64_t v42 = v63;
    sub_10011A20C(v41, v63, v65);
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
    unint64_t v44 = v61;
    v43(v61, v39, v31);
    sub_1007BFBA8(v42, v70, v71);
    sub_1007BF71C();
    dispatch thunk of Hashable._rawHashValue(seed:)();
    sub_100181744();
    unint64_t v48 = (v47 << v45) & ~*(void *)(v30 + 8 * v46);
    if (!v48)
    {
      sub_100183E64();
      while (++v51 != v52 || (v50 & 1) == 0)
      {
        BOOL v53 = v51 == v52;
        if (v51 == v52) {
          uint64_t v51 = 0;
        }
        v50 |= v53;
        uint64_t v54 = *(void *)(v30 + 8 * v51);
        if (v54 != -1)
        {
          unint64_t v49 = __clz(__rbit64(~v54)) + (v51 << 6);
          goto LABEL_34;
        }
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    unint64_t v49 = __clz(__rbit64(v48)) | v45 & 0x7FFFFFFFFFFFFFC0;
LABEL_34:
    *(void *)(v30 + ((v49 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v49;
    v43((char *)(*(void *)(v27 + 48) + v49 * v38), v44, v69);
    sub_1007BFBA8(v70, *(void *)(v27 + 56) + v49 * v40, v71);
    sub_10019FFE0();
    if (v55) {
      goto LABEL_38;
    }
    int64_t v10 = v58;
    unint64_t v28 = v67;
    uint64_t v29 = v68;
  }
  uint64_t v36 = v29 + 4;
  if (v29 + 4 >= v56) {
    return;
  }
  unint64_t v34 = v57[v36];
  if (v34)
  {
    uint64_t v35 = v29 + 4;
    goto LABEL_24;
  }
  while (1)
  {
    uint64_t v35 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      break;
    }
    if (v35 >= v56) {
      return;
    }
    unint64_t v34 = v57[v35];
    ++v36;
    if (v34) {
      goto LABEL_24;
    }
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_1007BFBA8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1007BFC08(uint64_t a1, uint64_t a2)
{
  if (static Location.currentLocationID.getter() == a1 && v4 == a2)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  if (v6) {
    return 1;
  }
  if (qword_100E62998 != -1) {
    swift_once();
  }
  BOOL v7 = static WeatherLocation.currentLocationID == a1 && *(void *)algn_100F52218 == a2;
  if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
    return 1;
  }
  if (a1 == 0x69436C61636F6C5FLL && a2 == 0xEB000000005F7974) {
    return 1;
  }

  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

ValueMetadata *type metadata accessor for ChartOverlayLollipopViewModel()
{
  return &type metadata for ChartOverlayLollipopViewModel;
}

uint64_t *sub_1007BFD58(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for CurrentWeather();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    int64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_10017DF08(&qword_100E6E900);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t sub_1007BFEB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_10017DF08(&qword_100E6E900);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t sub_1007BFFA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_10017DF08(&qword_100E6E900);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t sub_1007C00B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_10017DF08(&qword_100E6E900);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t sub_1007C01C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_10017DF08(&qword_100E6E900);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t sub_1007C02CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_10017DF08(&qword_100E6E900);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_1007C03D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007C03EC);
}

uint64_t sub_1007C03EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for CurrentWeather();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    type metadata accessor for Date();
    sub_100162F30();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v12 = *(int *)(a3 + 20);
    }
    else
    {
      uint64_t v8 = sub_10017DF08(&qword_100E6E900);
      uint64_t v12 = *(int *)(a3 + 24);
    }
    uint64_t v9 = a1 + v12;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_1007C0490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007C04A4);
}

uint64_t sub_1007C04A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for CurrentWeather();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    type metadata accessor for Date();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = *(int *)(a4 + 20);
    }
    else
    {
      uint64_t v10 = sub_10017DF08(&qword_100E6E900);
      uint64_t v14 = *(int *)(a4 + 24);
    }
    uint64_t v11 = a1 + v14;
  }

  return _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t sub_1007C0550()
{
  if ((static CurrentWeather.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  type metadata accessor for NextHourPrecipitationComponent();
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  type metadata accessor for MinuteWeather();
  sub_10001A310(&qword_100E72758, (void (*)(uint64_t))&type metadata accessor for MinuteWeather);
  sub_10001A310(&qword_100E72760, (void (*)(uint64_t))&type metadata accessor for MinuteWeather);
  sub_10001A310((unint64_t *)&unk_100E72768, (void (*)(uint64_t))&type metadata accessor for MinuteWeather);

  return static Forecast.== infix(_:_:)();
}

uint64_t sub_1007C068C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = sub_10017DF08(&qword_100E6E900);
  sub_100179C0C();
  uint64_t v23 = v3;
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v26 = v5;
  type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v28 = v7;
  uint64_t v29 = v6;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = type metadata accessor for CurrentWeather();
  sub_100179C0C();
  uint64_t v27 = v12;
  __chkstk_darwin(v13);
  sub_100109314();
  uint64_t v30 = v14;
  sub_10017DF08(&qword_100E95490);
  sub_100179C0C();
  __chkstk_darwin(v15);
  sub_1001626E0();
  uint64_t HourPrecipitationComponent = type metadata accessor for NextHourPrecipitationComponent();
  __chkstk_darwin(HourPrecipitationComponent);
  sub_1001626E0();
  uint64_t v19 = v18 - v17;
  sub_1001B1E64(a1, a1[3]);
  sub_1007C1028();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v31) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  sub_10001A310(&qword_100E7CDD8, (void (*)(uint64_t))&type metadata accessor for CurrentWeather);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32))(v19, v30, v11);
  sub_10001A310(&qword_100E63948, (void (*)(uint64_t))&type metadata accessor for Date);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v19 + *(int *)(HourPrecipitationComponent + 20), v10, v29);
  sub_1007C1134(&qword_100E954A0);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v20 = sub_100180440();
  v21(v20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v19 + *(int *)(HourPrecipitationComponent + 24), v26, v25);
  sub_1007C1074(v19, a2);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  return sub_1007C10D8(v19);
}

uint64_t sub_1007C0AE8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x57746E6572727563 && a2 == 0xEE00726568746165;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x54746E6572727563 && a2 == 0xEB00000000656D69;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x7469706963657270 && a2 == 0xED00006E6F697461)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1007C0C98(char a1)
{
  if (!a1) {
    return 0x57746E6572727563;
  }
  if (a1 == 1) {
    return 0x54746E6572727563;
  }
  return 0x7469706963657270;
}

uint64_t sub_1007C0D10(void *a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E954A8);
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  sub_1001B1E64(a1, a1[3]);
  sub_1007C1028();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  type metadata accessor for CurrentWeather();
  sub_10001A310(&qword_100E7CDF0, (void (*)(uint64_t))&type metadata accessor for CurrentWeather);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for NextHourPrecipitationComponent();
    type metadata accessor for Date();
    sub_10001A310(&qword_100E63968, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_10017DF08(&qword_100E6E900);
    sub_1007C1134(&qword_100E954B0);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_1007C0F4C()
{
  return sub_1007C0C98(*v0);
}

uint64_t sub_1007C0F54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1007C0AE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1007C0F7C(uint64_t a1)
{
  unint64_t v2 = sub_1007C1028();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007C0FB8(uint64_t a1)
{
  unint64_t v2 = sub_1007C1028();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1007C0FF4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1007C068C(a1, a2);
}

uint64_t sub_1007C100C(void *a1)
{
  return sub_1007C0D10(a1);
}

unint64_t sub_1007C1028()
{
  unint64_t result = qword_100E95498;
  if (!qword_100E95498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E95498);
  }
  return result;
}

uint64_t sub_1007C1074(uint64_t a1, uint64_t a2)
{
  uint64_t HourPrecipitationComponent = type metadata accessor for NextHourPrecipitationComponent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(HourPrecipitationComponent - 8) + 16))(a2, a1, HourPrecipitationComponent);
  return a2;
}

uint64_t sub_1007C10D8(uint64_t a1)
{
  uint64_t HourPrecipitationComponent = type metadata accessor for NextHourPrecipitationComponent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(HourPrecipitationComponent - 8) + 8))(a1, HourPrecipitationComponent);
  return a1;
}

uint64_t sub_1007C1134(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(&qword_100E6E900);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NextHourPrecipitationComponent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1007C1248);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NextHourPrecipitationComponent.CodingKeys()
{
  return &type metadata for NextHourPrecipitationComponent.CodingKeys;
}

unint64_t sub_1007C1284()
{
  unint64_t result = qword_100E954B8;
  if (!qword_100E954B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E954B8);
  }
  return result;
}

unint64_t sub_1007C12D4()
{
  unint64_t result = qword_100E954C0;
  if (!qword_100E954C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E954C0);
  }
  return result;
}

unint64_t sub_1007C1324()
{
  unint64_t result = qword_100E954C8;
  if (!qword_100E954C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E954C8);
  }
  return result;
}

uint64_t sub_1007C1370()
{
  uint64_t v2 = type metadata accessor for Font.Leading();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_10011BFD8();
  uint64_t v6 = type metadata accessor for Font.TextStyle();
  sub_100179C0C();
  uint64_t v8 = v7;
  __n128 v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v0 + 48))
  {
    uint64_t v13 = *(void *)(v0 + 48);
  }
  else
  {
    (*(void (**)(char *, void, uint64_t, __n128))(v8 + 104))(v12, enum case for Font.TextStyle.title2(_:), v6, v10);
    static Font.Weight.medium.getter();
    static Font.system(_:weight:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v6);
    uint64_t v14 = sub_10017CE84();
    v15(v14);
    uint64_t v13 = Font.leading(_:)();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v2);
    swift_retain();
    swift_release();
    *(void *)(v0 + 48) = v13;
  }
  swift_retain();
  return v13;
}

double sub_1007C1504()
{
  if ((*(unsigned char *)(v0 + 40) & 1) == 0) {
    return *(double *)(v0 + 32);
  }
  *(void *)(v0 + 32) = 0x4000000000000000;
  *(unsigned char *)(v0 + 40) = 0;
  return 2.0;
}

uint64_t sub_1007C1528()
{
  uint64_t v2 = type metadata accessor for Font.TextStyle();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_10011BFD8();
  if (*(void *)(v0 + 56))
  {
    uint64_t v6 = *(void *)(v0 + 56);
  }
  else
  {
    uint64_t v7 = sub_10017CE84();
    v8(v7);
    static Font.Weight.medium.getter();
    uint64_t v6 = static Font.system(_:weight:)();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v2);
    swift_retain();
    swift_release();
    *(void *)(v0 + 56) = v6;
  }
  swift_retain();
  return v6;
}

double sub_1007C160C()
{
  if ((*(unsigned char *)(v0 + 24) & 1) == 0) {
    return *(double *)(v0 + 16);
  }
  *(void *)(v0 + 16) = 0x4024000000000000;
  *(unsigned char *)(v0 + 24) = 0;
  return 10.0;
}

double sub_1007C1630()
{
  if ((v0[8] & 1) == 0) {
    return *(double *)v0;
  }
  *(void *)uint64_t v0 = 0x4053800000000000;
  v0[8] = 0;
  return 78.0;
}

void sub_1007C165C(uint64_t *a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1003152E8();
    uint64_t v3 = v4;
  }
  uint64_t v5 = *(void *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_1007C2834(v6);
  *a1 = v3;
}

uint64_t sub_1007C1704()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC7Weather11LocalPreset____lazy_storage___preset;
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC7Weather11LocalPreset____lazy_storage___preset);
  uint64_t v4 = v3;
  if (v3 == 1)
  {
    type metadata accessor for Preset();
    swift_allocObject();
    uint64_t v4 = Preset.init(extends:apply:)();
    uint64_t v5 = *(void *)(v1 + v2);
    *(void *)(v1 + v2) = v4;
    swift_retain();
    sub_1000AEB7C(v5);
  }
  sub_1007A3AB8(v3);
  return v4;
}

uint64_t sub_1007C17AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10017DF08(&qword_100E94A40);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_10016278C();
  uint64_t v7 = v5 - v6;
  __chkstk_darwin(v8);
  __n128 v10 = &v17[-v9];
  uint64_t v11 = v1 + OBJC_IVAR____TtC7Weather11LocalPreset____lazy_storage___locations;
  swift_beginAccess();
  sub_1007C3E34(v11, (uint64_t)v10, &qword_100E94A40);
  uint64_t v12 = sub_10017DF08(&qword_100E66430);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v12) != 1) {
    return sub_1007C3E78((uint64_t)v10, a1, &qword_100E66430);
  }
  sub_1001781AC((uint64_t)v10, &qword_100E94A40);
  sub_1007C192C(a1);
  sub_1007C3E34(a1, v7, &qword_100E66430);
  sub_1001093B0();
  _s7Weather24LocationCompositionStateOwst_0(v13, v14, v15, v12);
  swift_beginAccess();
  sub_1002E7C4C(v7, v11, &qword_100E94A40);
  return swift_endAccess();
}

uint64_t sub_1007C192C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for PresetAppState();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E72B30);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1007C1AA8((uint64_t)v7);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v2))
  {
    sub_1001781AC((uint64_t)v7, &qword_100E72B30);
    uint64_t v8 = 1;
  }
  else
  {
    sub_1007C3EC8((uint64_t)v7, (uint64_t)v4, (void (*)(void))type metadata accessor for PresetAppState);
    sub_1001781AC((uint64_t)v7, &qword_100E72B30);
    sub_1007C3EC8((uint64_t)&v4[*(int *)(v2 + 20)], a1, (void (*)(void))type metadata accessor for LocationsState);
    sub_1003CCD14((uint64_t)v4);
    uint64_t v8 = 0;
  }
  uint64_t v9 = type metadata accessor for LocationsState();
  return _s7Weather24LocationCompositionStateOwst_0(a1, v8, 1, v9);
}

uint64_t sub_1007C1AA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10017DF08(&qword_100E95620);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v8 = &v12[-v7];
  uint64_t v9 = v1 + OBJC_IVAR____TtC7Weather11LocalPreset____lazy_storage___loadedData;
  swift_beginAccess();
  sub_1007C3E34(v9, (uint64_t)v8, &qword_100E95620);
  uint64_t v10 = sub_10017DF08(&qword_100E72B30);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10) != 1) {
    return sub_1007C3E78((uint64_t)v8, a1, &qword_100E72B30);
  }
  sub_1001781AC((uint64_t)v8, &qword_100E95620);
  sub_1007C23CC(v1, a1);
  sub_1007C3E34(a1, (uint64_t)v5, &qword_100E72B30);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 0, 1, v10);
  swift_beginAccess();
  sub_1002E7C4C((uint64_t)v5, v9, &qword_100E95620);
  return swift_endAccess();
}

uint64_t sub_1007C1C64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v45 = type metadata accessor for PresetAppState();
  sub_100162E4C();
  __chkstk_darwin(v2);
  sub_1001626E0();
  uint64_t v44 = v4 - v3;
  uint64_t v5 = sub_10017DF08(&qword_100E72B30);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v46 = v11;
  uint64_t v47 = v10;
  __chkstk_darwin(v10);
  sub_10016278C();
  uint64_t v14 = v12 - v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v43 - v16;
  uint64_t v18 = sub_10017DF08(&qword_100E66420);
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_1001626E0();
  uint64_t v22 = v21 - v20;
  uint64_t v23 = sub_10017DF08(&qword_100E94A38);
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_10016278C();
  uint64_t v27 = v25 - v26;
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v43 - v29;
  uint64_t v31 = v1 + OBJC_IVAR____TtC7Weather11LocalPreset____lazy_storage___timeState;
  swift_beginAccess();
  sub_1007C3E34(v31, (uint64_t)v30, &qword_100E94A38);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v18) == 1)
  {
    sub_1001781AC((uint64_t)v30, &qword_100E94A38);
    sub_1007C1AA8(v9);
    if (_s7Weather24LocationCompositionStateOwet_0(v9, 1, v45))
    {
      sub_1001781AC(v9, &qword_100E72B30);
      Date.init()();
      Date.timeIntervalSince1970.getter();
      uint64_t v33 = v46;
      uint64_t v32 = v47;
      (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v14, v47);
    }
    else
    {
      uint64_t v34 = v44;
      sub_1007C3EC8(v9, v44, (void (*)(void))type metadata accessor for PresetAppState);
      sub_1001781AC(v9, &qword_100E72B30);
      sub_1003CCD14(v34);
      uint64_t v33 = v46;
      uint64_t v32 = v47;
    }
    Date.init(timeIntervalSinceReferenceDate:)();
    (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v22, v17, v32);
    type metadata accessor for TimeState();
    sub_1001093B0();
    _s7Weather24LocationCompositionStateOwst_0(v35, v36, v37, v38);
    sub_1007C3E34(v22, v27, &qword_100E66420);
    sub_1001093B0();
    _s7Weather24LocationCompositionStateOwst_0(v39, v40, v41, v18);
    swift_beginAccess();
    sub_1002E7C4C(v27, v31, &qword_100E94A38);
    swift_endAccess();
  }
  else
  {
    uint64_t v22 = (uint64_t)v30;
  }
  return sub_1007C3E78(v22, v48, &qword_100E66420);
}

uint64_t sub_1007C1FE4()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC7Weather11LocalPreset____lazy_storage___weatherDataState);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC7Weather11LocalPreset____lazy_storage___weatherDataState);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC7Weather11LocalPreset____lazy_storage___weatherDataState + 8);
  uint64_t v4 = v2;
  if (v3 == 1)
  {
    uint64_t v4 = sub_1007C20C0();
    uint64_t v5 = v1[1];
    uint64_t v10 = *v1;
    *uint64_t v1 = v4;
    v1[1] = v6;
    v1[2] = v7;
    v1[3] = v8;
    sub_10016EC5C(v4, v6);
    sub_1000AEB6C(v10, v5);
  }
  sub_1007A3B18(v2, v3);
  return v4;
}

uint64_t sub_1007C20C0()
{
  uint64_t v0 = sub_10017DF08(&qword_100E72B30);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1007C1AA8((uint64_t)v2);
  uint64_t v3 = type metadata accessor for PresetAppState();
  uint64_t v4 = 0;
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v2, 1, v3))
  {
    uint64_t v4 = *(void *)&v2[*(int *)(v3 + 24)];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  sub_1001781AC((uint64_t)v2, &qword_100E72B30);
  return v4;
}

uint64_t sub_1007C21BC(void *a1)
{
  uint64_t v2 = type metadata accessor for WeatherMapOverlayServiceSource();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v7[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001B1E64(a1, a1[3]);
  static Settings.Maps.source.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v3 + 104))(v5, enum case for WeatherMapOverlayServiceSource.staging(_:), v2);
  sub_1007C27E4();
  dispatch thunk of PresetApplicatorType.set<A>(_:to:)();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1001B1E64(a1, a1[3]);
  static Settings.Maps.showDebugConsole.getter();
  v7[15] = 0;
  dispatch thunk of PresetApplicatorType.set<A>(_:to:)();
  swift_release();
  static Settings.Maps.overrides.getter();
  dispatch thunk of SettingGroup.setEnabled(_:)();
  swift_release();
  sub_1001B1E64(a1, a1[3]);
  if (qword_100E62618 != -1) {
    swift_once();
  }
  v7[14] = 1;
  return dispatch thunk of PresetApplicatorType.set<A>(_:to:)();
}

uint64_t sub_1007C23CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v3 = type metadata accessor for URL.DirectoryHint();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v21 - v12;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v21 - v15;
  sub_100047CB0();
  uint64_t v17 = *(void *)(a1 + 16);
  uint64_t v18 = *(void *)(a1 + 24);
  uint64_t v23 = v17;
  uint64_t v24 = v18;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for URL.DirectoryHint.inferFromPath(_:), v3);
  sub_10014A85C();
  swift_bridgeObjectRetain();
  URL.appending<A>(path:directoryHint:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v8 + 8);
  v19(v10, v7);
  URL.appendingPathExtension(_:)();
  v19(v13, v7);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v16, v7);
  sub_100630F78(v22);
  return ((uint64_t (*)(char *, uint64_t))v19)(v16, v7);
}

uint64_t sub_1007C2650()
{
  swift_bridgeObjectRelease();
  sub_1001781AC(v0 + OBJC_IVAR____TtC7Weather11LocalPreset____lazy_storage___locations, &qword_100E94A40);
  sub_1001781AC(v0 + OBJC_IVAR____TtC7Weather11LocalPreset____lazy_storage___timeState, &qword_100E94A38);
  sub_1000AEB6C(*(void *)(v0 + OBJC_IVAR____TtC7Weather11LocalPreset____lazy_storage___weatherDataState), *(void *)(v0 + OBJC_IVAR____TtC7Weather11LocalPreset____lazy_storage___weatherDataState + 8));
  sub_1000AEB7C(*(void *)(v0 + OBJC_IVAR____TtC7Weather11LocalPreset____lazy_storage___preset));
  sub_1001781AC(v0 + OBJC_IVAR____TtC7Weather11LocalPreset____lazy_storage___loadedData, &qword_100E95620);
  return v0;
}

uint64_t sub_1007C26E0()
{
  sub_1007C2650();
  sub_10017C924();

  return swift_deallocClassInstance();
}

uint64_t sub_1007C2718()
{
  return type metadata accessor for LocalPreset();
}

uint64_t sub_1007C2720()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1007C2754@<X0>(uint64_t a1@<X8>)
{
  return sub_1007C17AC(a1);
}

uint64_t sub_1007C2778@<X0>(uint64_t a1@<X8>)
{
  return sub_1007C1C64(a1);
}

uint64_t sub_1007C279C()
{
  return sub_1007C1FE4();
}

uint64_t sub_1007C27C0()
{
  return sub_1007C1704();
}

unint64_t sub_1007C27E4()
{
  unint64_t result = qword_100E95618;
  if (!qword_100E95618)
  {
    type metadata accessor for WeatherMapOverlayServiceSource();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E95618);
  }
  return result;
}

void sub_1007C2834(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v154 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v149 = (char *)&v140 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v163 = (char *)&v140 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v140 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v140 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v152 = (char *)&v140 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v151 = (char *)&v140 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v147 = (char *)&v140 - v20;
  __chkstk_darwin(v19);
  uint64_t v146 = (char *)&v140 - v21;
  uint64_t v167 = a1;
  Swift::Int v22 = a1[1];
  Swift::Int v23 = _minimumMergeRunLength(_:)(v22);
  if (v23 >= v22)
  {
    if (v22 < 0) {
      goto LABEL_155;
    }
    if (v22) {
      sub_1007C34CC(0, v22, 1, v167);
    }
    return;
  }
  Swift::Int v24 = v23;
  uint64_t v142 = sub_100AD54AC(v22 / 2);
  unint64_t v153 = v25;
  uint64_t v143 = v22;
  if (v22 <= 0) {
    goto LABEL_119;
  }
  Swift::Int v141 = v24;
  uint64_t v159 = v154 + 16;
  uint64_t v160 = (void (**)(char *, uint64_t))(v154 + 8);
  uint64_t v161 = v4;
  uint64_t v165 = (void (**)(char *, uint64_t, uint64_t))(v154 + 32);
  uint64_t v26 = (char *)_swiftEmptyArrayStorage;
  uint64_t v27 = 0;
  uint64_t v156 = v11;
  uint64_t v28 = v22;
  uint64_t v145 = v14;
  while (1)
  {
    uint64_t v29 = v27;
    if (v27 + 1 >= v28)
    {
      uint64_t v39 = v27 + 1;
      uint64_t v40 = v161;
      uint64_t v41 = v145;
    }
    else
    {
      uint64_t v164 = v28;
      uint64_t v30 = *v167;
      uint64_t v31 = *(void *)(v154 + 72);
      uint64_t v162 = v27 + 1;
      uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v154 + 16);
      uint64_t v33 = v161;
      v32(v146, v30 + v31 * (v27 + 1), v161);
      uint64_t v150 = v29;
      uint64_t v155 = (char *)v30;
      uint64_t v166 = v31;
      v32(v147, v30 + v31 * v29, v33);
      uint64_t v34 = URL.lastPathComponent.getter();
      uint64_t v36 = v35;
      if (v34 == URL.lastPathComponent.getter() && v36 == v37) {
        LODWORD(v158) = 0;
      }
      else {
        LODWORD(v158) = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v40 = v161;
      uint64_t v42 = *v160;
      (*v160)(v147, v161);
      v42(v146, v40);
      uint64_t v39 = v150 + 2;
      uint64_t v28 = v164;
      if (v150 + 2 < v164)
      {
        uint64_t v144 = v26;
        v162 *= v166;
        uint64_t v43 = v155;
        uint64_t v157 = v166 * v39;
        while (1)
        {
          v32(v151, (uint64_t)&v43[v157], v40);
          v32(v152, (uint64_t)&v43[v162], v40);
          uint64_t v44 = URL.lastPathComponent.getter();
          uint64_t v46 = v45;
          BOOL v48 = v44 == URL.lastPathComponent.getter() && v46 == v47;
          int v49 = v48 ? 0 : _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v40 = v161;
          v42(v152, v161);
          v42(v151, v40);
          if ((v158 ^ v49)) {
            break;
          }
          ++v39;
          v43 += v166;
          uint64_t v28 = v164;
          if (v39 >= v164)
          {
            uint64_t v39 = v164;
            uint64_t v26 = v144;
            goto LABEL_24;
          }
        }
        uint64_t v26 = v144;
        uint64_t v28 = v164;
      }
LABEL_24:
      uint64_t v41 = v145;
      uint64_t v29 = v150;
      if (v158)
      {
        if (v39 < v150) {
          goto LABEL_156;
        }
        if (v150 < v39)
        {
          uint64_t v144 = v26;
          uint64_t v50 = 0;
          uint64_t v51 = v166 * (v39 - 1);
          uint64_t v52 = v39 * v166;
          uint64_t v53 = v150;
          uint64_t v54 = v150 * v166;
          uint64_t v162 = v39;
          do
          {
            if (v53 != v39 + v50 - 1)
            {
              char v55 = v155;
              if (!v155) {
                goto LABEL_162;
              }
              uint64_t v56 = &v155[v54];
              uint64_t v157 = (uint64_t)&v155[v51];
              uint64_t v40 = v161;
              uint64_t v158 = (void (*)(char *, char *, uint64_t))*v165;
              v158(v149, &v155[v54], v161);
              if (v54 < v51 || v56 >= &v55[v52])
              {
                uint64_t v58 = v157;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v58 = v157;
                if (v54 != v51) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              v158((char *)v58, v149, v40);
              uint64_t v39 = v162;
            }
            ++v53;
            --v50;
            v51 -= v166;
            v52 -= v166;
            v54 += v166;
          }
          while (v53 < v39 + v50);
          uint64_t v26 = v144;
          uint64_t v41 = v145;
          uint64_t v29 = v150;
          uint64_t v28 = v164;
        }
      }
    }
    if (v39 < v28)
    {
      if (__OFSUB__(v39, v29)) {
        goto LABEL_154;
      }
      if (v39 - v29 < v141)
      {
        if (__OFADD__(v29, v141)) {
          goto LABEL_157;
        }
        if (v29 + v141 >= v28) {
          uint64_t v59 = v28;
        }
        else {
          uint64_t v59 = v29 + v141;
        }
        if (v59 < v29)
        {
LABEL_158:
          __break(1u);
          goto LABEL_159;
        }
        if (v39 != v59)
        {
          uint64_t v150 = v29;
          uint64_t v144 = v26;
          uint64_t v140 = v2;
          uint64_t v60 = *(void *)(v154 + 72);
          uint64_t v155 = *(char **)(v154 + 16);
          uint64_t v61 = v60 * (v39 - 1);
          uint64_t v157 = v60;
          uint64_t v166 = v39 * v60;
          uint64_t v148 = v59;
          do
          {
            uint64_t v62 = 0;
            uint64_t v63 = v150;
            uint64_t v162 = v39;
            uint64_t v158 = (void (*)(char *, char *, uint64_t))v61;
            while (1)
            {
              uint64_t v164 = v63;
              uint64_t v64 = *v167;
              uint64_t v65 = (void (*)(char *, uint64_t, uint64_t))v155;
              ((void (*)(char *, uint64_t, uint64_t))v155)(v41, v166 + v62 + *v167, v40);
              uint64_t v66 = v61 + v62 + v64;
              uint64_t v67 = v41;
              uint64_t v68 = v156;
              v65(v156, v66, v40);
              uint64_t v69 = URL.lastPathComponent.getter();
              uint64_t v71 = v70;
              if (v69 == URL.lastPathComponent.getter() && v71 == v72) {
                break;
              }
              char v74 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v75 = *v160;
              (*v160)(v68, v40);
              v75(v67, v40);
              uint64_t v41 = v67;
              if ((v74 & 1) == 0) {
                goto LABEL_61;
              }
              uint64_t v76 = *v167;
              uint64_t v61 = (uint64_t)v158;
              if (!*v167) {
                goto LABEL_160;
              }
              uint64_t v77 = (char *)v158 + v76 + v62;
              uint64_t v78 = *v165;
              uint64_t v79 = v161;
              (*v165)(v163, v76 + v166 + v62, v161);
              swift_arrayInitWithTakeFrontToBack();
              v78(v77, (uint64_t)v163, v79);
              v62 -= v157;
              uint64_t v63 = v164 + 1;
              uint64_t v80 = v162;
              uint64_t v40 = v79;
              if (v162 == v164 + 1) {
                goto LABEL_62;
              }
            }
            swift_bridgeObjectRelease_n();
            uint64_t v81 = *v160;
            (*v160)(v68, v40);
            v81(v67, v40);
            uint64_t v41 = v67;
LABEL_61:
            uint64_t v80 = v162;
            uint64_t v61 = (uint64_t)v158;
LABEL_62:
            uint64_t v39 = v80 + 1;
            v61 += v157;
            v166 += v157;
          }
          while (v39 != v148);
          uint64_t v39 = v148;
          uint64_t v2 = v140;
          uint64_t v26 = v144;
          uint64_t v29 = v150;
        }
      }
    }
    if (v39 < v29) {
      goto LABEL_153;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v26 = sub_1001AA1B0(0, *((void *)v26 + 2) + 1, 1, v26);
    }
    unint64_t v83 = *((void *)v26 + 2);
    unint64_t v82 = *((void *)v26 + 3);
    unint64_t v84 = v83 + 1;
    uint64_t v162 = v39;
    if (v83 >= v82 >> 1) {
      uint64_t v26 = sub_1001AA1B0((char *)(v82 > 1), v83 + 1, 1, v26);
    }
    *((void *)v26 + 2) = v84;
    uint64_t v85 = v26 + 32;
    uint64_t v86 = &v26[16 * v83 + 32];
    uint64_t v87 = v162;
    *(void *)uint64_t v86 = v29;
    *((void *)v86 + 1) = v87;
    if (v83) {
      break;
    }
    unint64_t v84 = 1;
LABEL_112:
    uint64_t v28 = v167[1];
    uint64_t v27 = v162;
    if (v162 >= v28) {
      goto LABEL_120;
    }
  }
  while (1)
  {
    unint64_t v88 = v84 - 1;
    if (v84 >= 4)
    {
      os_log_type_t v93 = &v85[16 * v84];
      uint64_t v94 = *((void *)v93 - 8);
      uint64_t v95 = *((void *)v93 - 7);
      BOOL v99 = __OFSUB__(v95, v94);
      uint64_t v96 = v95 - v94;
      if (v99) {
        goto LABEL_138;
      }
      uint64_t v98 = *((void *)v93 - 6);
      uint64_t v97 = *((void *)v93 - 5);
      BOOL v99 = __OFSUB__(v97, v98);
      uint64_t v91 = v97 - v98;
      char v92 = v99;
      if (v99) {
        goto LABEL_139;
      }
      unint64_t v100 = v84 - 2;
      uint64_t v101 = &v85[16 * v84 - 32];
      uint64_t v103 = *(void *)v101;
      uint64_t v102 = *((void *)v101 + 1);
      BOOL v99 = __OFSUB__(v102, v103);
      uint64_t v104 = v102 - v103;
      if (v99) {
        goto LABEL_140;
      }
      BOOL v99 = __OFADD__(v91, v104);
      uint64_t v105 = v91 + v104;
      if (v99) {
        goto LABEL_142;
      }
      if (v105 >= v96)
      {
        uint64_t v123 = &v85[16 * v88];
        uint64_t v125 = *(void *)v123;
        uint64_t v124 = *((void *)v123 + 1);
        BOOL v99 = __OFSUB__(v124, v125);
        uint64_t v126 = v124 - v125;
        if (v99) {
          goto LABEL_148;
        }
        BOOL v116 = v91 < v126;
        goto LABEL_101;
      }
    }
    else
    {
      if (v84 != 3)
      {
        uint64_t v117 = *((void *)v26 + 4);
        uint64_t v118 = *((void *)v26 + 5);
        BOOL v99 = __OFSUB__(v118, v117);
        uint64_t v110 = v118 - v117;
        char v111 = v99;
        goto LABEL_95;
      }
      uint64_t v90 = *((void *)v26 + 4);
      uint64_t v89 = *((void *)v26 + 5);
      BOOL v99 = __OFSUB__(v89, v90);
      uint64_t v91 = v89 - v90;
      char v92 = v99;
    }
    if (v92) {
      goto LABEL_141;
    }
    unint64_t v100 = v84 - 2;
    uint64_t v106 = &v85[16 * v84 - 32];
    uint64_t v108 = *(void *)v106;
    uint64_t v107 = *((void *)v106 + 1);
    BOOL v109 = __OFSUB__(v107, v108);
    uint64_t v110 = v107 - v108;
    char v111 = v109;
    if (v109) {
      goto LABEL_143;
    }
    uint64_t v112 = &v85[16 * v88];
    uint64_t v114 = *(void *)v112;
    uint64_t v113 = *((void *)v112 + 1);
    BOOL v99 = __OFSUB__(v113, v114);
    uint64_t v115 = v113 - v114;
    if (v99) {
      goto LABEL_145;
    }
    if (__OFADD__(v110, v115)) {
      goto LABEL_147;
    }
    if (v110 + v115 >= v91)
    {
      BOOL v116 = v91 < v115;
LABEL_101:
      if (v116) {
        unint64_t v88 = v100;
      }
      goto LABEL_103;
    }
LABEL_95:
    if (v111) {
      goto LABEL_144;
    }
    uint64_t v119 = &v85[16 * v88];
    uint64_t v121 = *(void *)v119;
    uint64_t v120 = *((void *)v119 + 1);
    BOOL v99 = __OFSUB__(v120, v121);
    uint64_t v122 = v120 - v121;
    if (v99) {
      goto LABEL_146;
    }
    if (v122 < v110) {
      goto LABEL_112;
    }
LABEL_103:
    unint64_t v127 = v88 - 1;
    if (v88 - 1 >= v84)
    {
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
LABEL_147:
      __break(1u);
LABEL_148:
      __break(1u);
      goto LABEL_149;
    }
    if (!*v167) {
      goto LABEL_161;
    }
    uint64_t v128 = v26;
    int v129 = &v85[16 * v127];
    uint64_t v130 = *(void *)v129;
    uint64_t v131 = &v85[16 * v88];
    uint64_t v132 = *((void *)v131 + 1);
    sub_1007C3844(*v167 + *(void *)(v154 + 72) * *(void *)v129, *v167 + *(void *)(v154 + 72) * *(void *)v131, *v167 + *(void *)(v154 + 72) * v132, v153);
    if (v2) {
      break;
    }
    if (v132 < v130) {
      goto LABEL_135;
    }
    if (v88 > *((void *)v128 + 2)) {
      goto LABEL_136;
    }
    *(void *)int v129 = v130;
    *(void *)&v85[16 * v127 + 8] = v132;
    unint64_t v133 = *((void *)v128 + 2);
    if (v88 >= v133) {
      goto LABEL_137;
    }
    uint64_t v26 = v128;
    unint64_t v84 = v133 - 1;
    memmove(&v85[16 * v88], v131 + 16, 16 * (v133 - 1 - v88));
    *((void *)v128 + 2) = v133 - 1;
    if (v133 <= 2) {
      goto LABEL_112;
    }
  }
LABEL_117:
  swift_bridgeObjectRelease();
  if (v143 >= -1) {
    goto LABEL_132;
  }
  __break(1u);
LABEL_119:
  uint64_t v26 = (char *)_swiftEmptyArrayStorage;
  unint64_t v84 = _swiftEmptyArrayStorage[2];
LABEL_120:
  if (v84 >= 2)
  {
    uint64_t v134 = *v167;
    while (1)
    {
      unint64_t v135 = v84 - 2;
      if (v84 < 2) {
        break;
      }
      if (!v134) {
        goto LABEL_163;
      }
      uint64_t v136 = *(void *)&v26[16 * v135 + 32];
      uint64_t v137 = *(void *)&v26[16 * v84 + 24];
      sub_1007C3844(v134 + *(void *)(v154 + 72) * v136, v134 + *(void *)(v154 + 72) * *(void *)&v26[16 * v84 + 16], v134 + *(void *)(v154 + 72) * v137, v153);
      if (v2) {
        goto LABEL_117;
      }
      if (v137 < v136) {
        goto LABEL_150;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v26 = sub_10031515C();
      }
      if (v135 >= *((void *)v26 + 2)) {
        goto LABEL_151;
      }
      uint64_t v138 = &v26[16 * v135 + 32];
      *(void *)uint64_t v138 = v136;
      *((void *)v138 + 1) = v137;
      unint64_t v139 = *((void *)v26 + 2);
      if (v84 > v139) {
        goto LABEL_152;
      }
      memmove(&v26[16 * v84 + 16], &v26[16 * v84 + 32], 16 * (v139 - v84));
      *((void *)v26 + 2) = v139 - 1;
      unint64_t v84 = v139 - 1;
      if (v139 <= 2) {
        goto LABEL_131;
      }
    }
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
    goto LABEL_158;
  }
LABEL_131:
  swift_bridgeObjectRelease();
  if (v143 >= -1)
  {
LABEL_132:
    *(void *)(v142 + 16) = 0;
    swift_bridgeObjectRelease();
    return;
  }
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
}

uint64_t sub_1007C34CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v46 = a4;
  uint64_t v36 = a1;
  uint64_t v41 = type metadata accessor for URL();
  uint64_t v6 = __chkstk_darwin(v41);
  uint64_t v44 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v34 - v9;
  uint64_t result = __chkstk_darwin(v8);
  uint64_t v14 = (char *)&v34 - v13;
  uint64_t v42 = a3;
  uint64_t v35 = a2;
  if (a3 != a2)
  {
    uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    uint64_t v38 = v12 + 16;
    uint64_t v15 = *(void *)(v12 + 72);
    uint64_t v39 = (void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v40 = v15;
    uint64_t v43 = (void (**)(char *, uint64_t, uint64_t))(v12 + 32);
    uint64_t v48 = v15 * (v42 - 1);
    uint64_t v47 = v15 * v42;
    while (2)
    {
      uint64_t v16 = 0;
      uint64_t v17 = v36;
      uint64_t v18 = v41;
      while (1)
      {
        uint64_t v19 = *v46;
        uint64_t v45 = v47 + v16;
        uint64_t v20 = v37;
        v37(v14, v47 + v16 + v19, v18);
        v20(v10, v48 + v16 + v19, v18);
        uint64_t v21 = URL.lastPathComponent.getter();
        Swift::Int v22 = v14;
        Swift::Int v23 = v10;
        uint64_t v25 = v24;
        if (v21 == URL.lastPathComponent.getter() && v25 == v26) {
          break;
        }
        char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v29 = *v39;
        (*v39)(v23, v18);
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v29)(v22, v18);
        uint64_t v10 = v23;
        uint64_t v14 = v22;
        if (v28)
        {
          uint64_t v30 = *v46;
          if (!*v46)
          {
            __break(1u);
            return result;
          }
          uint64_t v31 = v30 + v48 + v16;
          uint64_t v32 = *v43;
          uint64_t v18 = v41;
          (*v43)(v44, v30 + v47 + v16, v41);
          swift_arrayInitWithTakeFrontToBack();
          uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v32)(v31, v44, v18);
          v16 -= v40;
          ++v17;
          uint64_t v14 = v22;
          if (v42 != v17) {
            continue;
          }
        }
        goto LABEL_13;
      }
      swift_bridgeObjectRelease_n();
      uint64_t v33 = *v39;
      (*v39)(v23, v18);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v33)(v22, v18);
      uint64_t v10 = v23;
      uint64_t v14 = v22;
LABEL_13:
      v48 += v40;
      v47 += v40;
      if (++v42 != v35) {
        continue;
      }
      break;
    }
  }
  return result;
}

void sub_1007C3844(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v77 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v76 = (char *)&v66 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  __chkstk_darwin(v14);
  uint64_t v18 = *(void *)(v17 + 72);
  if (!v18)
  {
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  int64_t v19 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v18 == -1) {
    goto LABEL_89;
  }
  int64_t v21 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v18 == -1) {
    goto LABEL_90;
  }
  uint64_t v72 = (char *)&v66 - v15;
  uint64_t v73 = v16;
  uint64_t v23 = v19 / v18;
  uint64_t v24 = v21 / v18;
  uint64_t v75 = v18;
  if (v19 / v18 >= v21 / v18)
  {
    sub_1007EB358(a2, v21 / v18);
    uint64_t v25 = (char *)(a4 + v24 * v18);
    if (v24 * v18 >= 1 && a1 < a2)
    {
      uint64_t v73 = -v18;
      char v28 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
      uint64_t v74 = v9 + 16;
      uint64_t v69 = (void (**)(char *, uint64_t))(v9 + 8);
      uint64_t v70 = v28;
      unint64_t v67 = a4;
      unint64_t v71 = a1;
      do
      {
        unint64_t v29 = a3;
        unint64_t v78 = (unint64_t)v25;
        uint64_t v30 = v73;
        uint64_t v72 = &v25[v73];
        uint64_t v31 = v70;
        ((void (*)(char *))v70)(v76);
        v31(v77, a2 + v30, v8);
        uint64_t v32 = URL.lastPathComponent.getter();
        uint64_t v34 = v33;
        if (v32 == URL.lastPathComponent.getter() && v34 == v35) {
          char v37 = 0;
        }
        else {
          char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a3 = v29 + v73;
        uint64_t v38 = *v69;
        (*v69)(v77, v8);
        v38(v76, v8);
        unint64_t v39 = v71;
        if (v37)
        {
          if (v29 < a2 || a3 >= a2)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v29 != a2)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          a2 += v30;
          a4 = v67;
          uint64_t v18 = v75;
          uint64_t v25 = (char *)v78;
        }
        else if (v29 < v78 || a3 >= v78)
        {
          uint64_t v42 = v72;
          swift_arrayInitWithTakeFrontToBack();
          uint64_t v25 = v42;
          a4 = v67;
          uint64_t v18 = v75;
        }
        else
        {
          uint64_t v18 = v75;
          if (v29 == v78)
          {
            uint64_t v25 = v72;
          }
          else
          {
            uint64_t v43 = v72;
            swift_arrayInitWithTakeBackToFront();
            uint64_t v25 = v43;
          }
          a4 = v67;
        }
      }
      while ((unint64_t)v25 > a4 && a2 > v39);
    }
  }
  else
  {
    sub_1007EB358(a1, v19 / v18);
    uint64_t v25 = (char *)(a4 + v23 * v18);
    if (v23 * v18 >= 1 && a2 < a3)
    {
      uint64_t v47 = *(char **)(v9 + 16);
      uint64_t v74 = v9 + 16;
      uint64_t v76 = (char *)(v9 + 8);
      uint64_t v77 = v47;
      uint64_t v48 = v72;
      uint64_t v49 = v73;
      unint64_t v78 = a4 + v23 * v18;
      unint64_t v68 = a3;
      while (1)
      {
        uint64_t v50 = v77;
        ((void (*)(char *, unint64_t, uint64_t))v77)(v48, a2, v8);
        ((void (*)(uint64_t, unint64_t, uint64_t))v50)(v49, a4, v8);
        uint64_t v51 = URL.lastPathComponent.getter();
        uint64_t v52 = v8;
        uint64_t v54 = v53;
        if (v51 == URL.lastPathComponent.getter() && v54 == v55) {
          break;
        }
        uint64_t v57 = v49;
        char v58 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v59 = *(void (**)(char *, uint64_t))v76;
        (*(void (**)(uint64_t, uint64_t))v76)(v57, v52);
        v59(v48, v52);
        uint64_t v8 = v52;
        if ((v58 & 1) == 0) {
          goto LABEL_69;
        }
        uint64_t v18 = v75;
        unint64_t v60 = a2 + v75;
        BOOL v61 = a1 < a2 || a1 >= v60;
        unint64_t v62 = v68;
        if (!v61)
        {
          uint64_t v49 = v73;
          if (a1 != a2) {
            swift_arrayInitWithTakeBackToFront();
          }
          uint64_t v25 = (char *)v78;
          goto LABEL_79;
        }
        swift_arrayInitWithTakeFrontToBack();
LABEL_78:
        uint64_t v25 = (char *)v78;
        uint64_t v49 = v73;
LABEL_79:
        a1 += v18;
        BOOL v65 = a4 >= (unint64_t)v25 || v60 >= v62;
        a2 = v60;
        if (v65) {
          goto LABEL_52;
        }
      }
      swift_bridgeObjectRelease_n();
      uint64_t v63 = *(void (**)(char *, uint64_t))v76;
      (*(void (**)(uint64_t, uint64_t))v76)(v49, v52);
      v63(v48, v52);
      uint64_t v8 = v52;
LABEL_69:
      uint64_t v18 = v75;
      BOOL v64 = a1 < a4 || a1 >= a4 + v75;
      unint64_t v62 = v68;
      if (v64)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a1 != a4)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v60 = a2;
      a4 += v18;
      goto LABEL_78;
    }
  }
LABEL_52:
  uint64_t v45 = &v25[-a4];
  if (v18 != -1 || v45 != (char *)0x8000000000000000)
  {
    sub_1007EB358(a4, (uint64_t)v45 / v18);
    return;
  }
LABEL_91:
  __break(1u);
}

uint64_t sub_1007C3E34(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100163E60(a1, a2, a3);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return v3;
}

uint64_t sub_1007C3E78(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100163E60(a1, a2, a3);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(v3, v4);
  return v3;
}

uint64_t sub_1007C3EC8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_1007C3F1C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for MainAction();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v1 + 16);
  sub_100792DE0(a1, (uint64_t)v5);
  type metadata accessor for MoonDetailViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = 0;
  memset(v8, 0, sizeof(v8));
  swift_retain();
  sub_1001AAF58((uint64_t)v5, (uint64_t)v8, v6);
  sub_100016E7C((uint64_t)v8);
  sub_1001ABE70((uint64_t)v5);
  return swift_release();
}

uint64_t type metadata accessor for MoonDetailInteractor()
{
  return self;
}

double sub_1007C403C@<D0>(_OWORD *a1@<X8>)
{
  sub_1000EC078();
  *a1 = v3;
  a1[1] = v4;
  double result = *(double *)&v5;
  a1[2] = v5;
  return result;
}

double sub_1007C4084@<D0>(_OWORD *a1@<X8>)
{
  double result = sub_1007C403C(v5);
  if (!v1)
  {
    long long v4 = v5[1];
    *a1 = v5[0];
    a1[1] = v4;
    double result = *(double *)&v6;
    a1[2] = v6;
  }
  return result;
}

uint64_t sub_1007C40C8()
{
  uint64_t v9 = type metadata accessor for WeatherMetadata();
  uint64_t v6 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E66CC8);
  Forecast.forecast.getter();
  type metadata accessor for HourWeather();
  sub_1007CC5F0(&qword_100E95840, (void (*)(uint64_t))&type metadata accessor for HourWeather);
  sub_1007CC5F0(&qword_100E95848, (void (*)(uint64_t))&type metadata accessor for HourWeather);
  Array<A>.write(to:)();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v0)
  {
    uint64_t v7 = Forecast.minuteSummary.getter();
    uint64_t v8 = v4;
    sub_10017DF08(&qword_100E65F18);
    Optional<A>.write(to:)();
    swift_bridgeObjectRelease();
    uint64_t v7 = Forecast.minuteConditions.getter();
    sub_10017DF08(&qword_100E956D0);
    sub_1007C4828();
    sub_1007C4900();
    Optional<A>.write(to:)();
    swift_bridgeObjectRelease();
    uint64_t v7 = Forecast.minuteSummaries.getter();
    sub_10017DF08(&qword_100E95700);
    sub_1007C49D8();
    sub_1007C4AB0();
    Optional<A>.write(to:)();
    swift_bridgeObjectRelease();
    Forecast.metadata.getter();
    WeatherMetadata.write(to:)();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v2, v9);
  }
  return result;
}

uint64_t sub_1007C4390()
{
  uint64_t v9 = type metadata accessor for WeatherMetadata();
  uint64_t v6 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E66CA0);
  Forecast.forecast.getter();
  type metadata accessor for DayWeather();
  sub_1007CC5F0(&qword_100E95830, (void (*)(uint64_t))&type metadata accessor for DayWeather);
  sub_1007CC5F0(&qword_100E95838, (void (*)(uint64_t))&type metadata accessor for DayWeather);
  Array<A>.write(to:)();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v0)
  {
    uint64_t v7 = Forecast.minuteSummary.getter();
    uint64_t v8 = v4;
    sub_10017DF08(&qword_100E65F18);
    Optional<A>.write(to:)();
    swift_bridgeObjectRelease();
    uint64_t v7 = Forecast.minuteConditions.getter();
    sub_10017DF08(&qword_100E956D0);
    sub_1007C4828();
    sub_1007C4900();
    Optional<A>.write(to:)();
    swift_bridgeObjectRelease();
    uint64_t v7 = Forecast.minuteSummaries.getter();
    sub_10017DF08(&qword_100E95700);
    sub_1007C49D8();
    sub_1007C4AB0();
    Optional<A>.write(to:)();
    swift_bridgeObjectRelease();
    Forecast.metadata.getter();
    WeatherMetadata.write(to:)();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v2, v9);
  }
  return result;
}

void Forecast<>.write(to:)()
{
  sub_10016314C();
  type metadata accessor for WeatherMetadata();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_100125FF8();
  Forecast.forecast.getter();
  Array<A>.write(to:)();
  swift_bridgeObjectRelease();
  if (!v0)
  {
    sub_100172440();
    Forecast.minuteSummary.getter();
    sub_10017DF08(&qword_100E65F18);
    Optional<A>.write(to:)();
    swift_bridgeObjectRelease();
    sub_100172440();
    Forecast.minuteConditions.getter();
    sub_10017DF08(&qword_100E956D0);
    sub_1007C4828();
    sub_1007C4900();
    sub_100188B64();
    swift_bridgeObjectRelease();
    sub_100172440();
    Forecast.minuteSummaries.getter();
    sub_10017DF08(&qword_100E95700);
    sub_1007C49D8();
    sub_1007C4AB0();
    sub_100188B64();
    swift_bridgeObjectRelease();
    sub_100172440();
    Forecast.metadata.getter();
    WeatherMetadata.write(to:)();
    uint64_t v2 = sub_10019B634();
    v3(v2);
  }
  sub_100163164();
}

unint64_t sub_1007C4828()
{
  unint64_t result = qword_100E956D8;
  if (!qword_100E956D8)
  {
    sub_10018C6DC(&qword_100E956E0);
    sub_1007CC5F0(&qword_100E956E8, (void (*)(uint64_t))&type metadata accessor for MinuteCondition);
    sub_1007CC5F0(&qword_100E956F0, (void (*)(uint64_t))&type metadata accessor for MinuteCondition);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E956D8);
  }
  return result;
}

unint64_t sub_1007C4900()
{
  unint64_t result = qword_100E956F8;
  if (!qword_100E956F8)
  {
    sub_10018C6DC(&qword_100E956E0);
    sub_1007CC5F0(&qword_100E956E8, (void (*)(uint64_t))&type metadata accessor for MinuteCondition);
    sub_1007CC5F0(&qword_100E956F0, (void (*)(uint64_t))&type metadata accessor for MinuteCondition);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E956F8);
  }
  return result;
}

unint64_t sub_1007C49D8()
{
  unint64_t result = qword_100E95708;
  if (!qword_100E95708)
  {
    sub_10018C6DC(&qword_100E95710);
    sub_1007CC5F0(&qword_100E95718, (void (*)(uint64_t))&type metadata accessor for MinuteSummary);
    sub_1007CC5F0(&qword_100E95720, (void (*)(uint64_t))&type metadata accessor for MinuteSummary);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E95708);
  }
  return result;
}

unint64_t sub_1007C4AB0()
{
  unint64_t result = qword_100E95728;
  if (!qword_100E95728)
  {
    sub_10018C6DC(&qword_100E95710);
    sub_1007CC5F0(&qword_100E95718, (void (*)(uint64_t))&type metadata accessor for MinuteSummary);
    sub_1007CC5F0(&qword_100E95720, (void (*)(uint64_t))&type metadata accessor for MinuteSummary);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E95728);
  }
  return result;
}

uint64_t sub_1007C4B88()
{
  uint64_t v1 = type metadata accessor for WeatherMetadata();
  __chkstk_darwin(v1 - 8);
  type metadata accessor for HourWeather();
  sub_1007CC5F0(&qword_100E95840, (void (*)(uint64_t))&type metadata accessor for HourWeather);
  sub_1007CC5F0(&qword_100E95848, (void (*)(uint64_t))&type metadata accessor for HourWeather);
  uint64_t result = static Array<A>.read(from:)();
  if (!v0)
  {
    static Optional<A>.read(from:)();
    sub_10017DF08(&qword_100E956E0);
    sub_1007C4828();
    sub_1007C4900();
    static Optional<A>.read(from:)();
    sub_10017DF08(&qword_100E95710);
    sub_1007C49D8();
    sub_1007C4AB0();
    static Optional<A>.read(from:)();
    static WeatherMetadata.read(from:)();
    sub_1007CC5F0(&qword_100E712F0, (void (*)(uint64_t))&type metadata accessor for HourWeather);
    sub_1007CC5F0(&qword_100E712F8, (void (*)(uint64_t))&type metadata accessor for HourWeather);
    sub_1007CC5F0(&qword_100E71300, (void (*)(uint64_t))&type metadata accessor for HourWeather);
    return Forecast.init(_:minuteSummary:minuteConditions:minuteSummaries:metadata:)();
  }
  return result;
}

uint64_t sub_1007C4EA0()
{
  uint64_t v1 = type metadata accessor for WeatherMetadata();
  __chkstk_darwin(v1 - 8);
  type metadata accessor for DayWeather();
  sub_1007CC5F0(&qword_100E95830, (void (*)(uint64_t))&type metadata accessor for DayWeather);
  sub_1007CC5F0(&qword_100E95838, (void (*)(uint64_t))&type metadata accessor for DayWeather);
  uint64_t result = static Array<A>.read(from:)();
  if (!v0)
  {
    static Optional<A>.read(from:)();
    sub_10017DF08(&qword_100E956E0);
    sub_1007C4828();
    sub_1007C4900();
    static Optional<A>.read(from:)();
    sub_10017DF08(&qword_100E95710);
    sub_1007C49D8();
    sub_1007C4AB0();
    static Optional<A>.read(from:)();
    static WeatherMetadata.read(from:)();
    sub_1007CC5F0(&qword_100E71318, (void (*)(uint64_t))&type metadata accessor for DayWeather);
    sub_1007CC5F0(&qword_100E71320, (void (*)(uint64_t))&type metadata accessor for DayWeather);
    sub_1007CC5F0(&qword_100E71328, (void (*)(uint64_t))&type metadata accessor for DayWeather);
    return Forecast.init(_:minuteSummary:minuteConditions:minuteSummaries:metadata:)();
  }
  return result;
}

void static Forecast<>.read(from:)()
{
  sub_10016314C();
  uint64_t v1 = type metadata accessor for WeatherMetadata();
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_10016279C();
  static Array<A>.read(from:)();
  if (!v0)
  {
    static Optional<A>.read(from:)();
    sub_10017DF08(&qword_100E956E0);
    sub_1007C4828();
    sub_1007C4900();
    sub_1001C86C8();
    sub_10017DF08(&qword_100E95710);
    sub_1007C49D8();
    sub_1007C4AB0();
    sub_1001C86C8();
    static WeatherMetadata.read(from:)();
    Forecast.init(_:minuteSummary:minuteConditions:minuteSummaries:metadata:)();
  }
  sub_100163164();
}

uint64_t sub_1007C53A8(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1007C6150(a1, a2, a3, (uint64_t (*)(uint64_t, void, void, void, void, void, void))static Forecast<>.read(from:));
}

void sub_1007C53D4()
{
}

void Trend<>.write(to:)()
{
  sub_10016314C();
  type metadata accessor for Deviation();
  sub_100179C0C();
  uint64_t v9 = v2;
  uint64_t v10 = v3;
  __chkstk_darwin(v2);
  sub_10011C760();
  type metadata accessor for Measurement();
  sub_100179C0C();
  sub_100165058();
  __chkstk_darwin(v4);
  type metadata accessor for TrendBaseline();
  sub_100179C0C();
  sub_100165058();
  __chkstk_darwin(v5);
  Trend.baseline.getter();
  TrendBaseline<>.write(to:)();
  uint64_t v6 = sub_10017B3B8();
  v7(v6);
  if (!v0)
  {
    Trend.currentValue.getter();
    Measurement<>.write(to:)();
    sub_100176DC4();
    sub_100162F0C();
    v8();
    Trend.deviation.getter();
    Deviation.write(to:)();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v1, v9);
  }
  sub_100163164();
}

void TrendBaseline<>.write(to:)()
{
  sub_10016314C();
  uint64_t v2 = v1;
  type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v13 = v3;
  uint64_t v14 = v4;
  __chkstk_darwin(v3);
  sub_10011BA80(v5, v11);
  type metadata accessor for Measurement();
  sub_100179C0C();
  sub_100165058();
  __chkstk_darwin(v6);
  uint64_t v7 = type metadata accessor for TrendBaseline.Kind();
  sub_100179C0C();
  sub_100165058();
  __chkstk_darwin(v8);
  TrendBaseline.kind.getter();
  TrendBaseline.Kind<>.write(to:)(v2, v7);
  sub_10016285C();
  v9();
  if (!v0)
  {
    TrendBaseline.value.getter();
    Measurement<>.write(to:)();
    sub_100183588();
    sub_100162F0C();
    v10();
    sub_100172440();
    TrendBaseline.startDate.getter();
    Date.write(to:)();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  sub_100163164();
}

void Measurement<>.write(to:)()
{
  Measurement.value.getter();
  FixedSizeTypeBinaryCodable.write(to:)();
  if (!v0)
  {
    uint64_t v1 = (void *)Measurement.unit.getter();
    dispatch thunk of BinaryEncodable.write(to:)();
  }
}

void static Trend<>.read(from:)()
{
  sub_10016314C();
  uint64_t v1 = type metadata accessor for Deviation();
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  type metadata accessor for Measurement();
  sub_100179C0C();
  sub_100165058();
  __chkstk_darwin(v3);
  type metadata accessor for TrendBaseline();
  sub_100179C0C();
  sub_100165058();
  __chkstk_darwin(v4);
  sub_10019B194();
  static TrendBaseline<>.read(from:)();
  if (!v0)
  {
    static Measurement<>.read(from:)();
    static Deviation.read(from:)();
    Trend.init(baseline:currentValue:deviation:)();
  }
  sub_100163164();
}

void static TrendBaseline<>.read(from:)()
{
  sub_10016314C();
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_100166B4C();
  type metadata accessor for Measurement();
  sub_100179C0C();
  sub_100165058();
  __chkstk_darwin(v3);
  type metadata accessor for TrendBaseline.Kind();
  sub_100179C0C();
  sub_100165058();
  __chkstk_darwin(v4);
  sub_10019B194();
  sub_10019B634();
  static TrendBaseline.Kind<>.read(from:)(v5);
  if (!v0)
  {
    sub_10019B634();
    static Measurement<>.read(from:)();
    static Date.read(from:)();
    TrendBaseline.init(kind:value:startDate:)();
  }
  sub_100163164();
}

uint64_t static Measurement<>.read(from:)()
{
  uint64_t result = static FixedSizeTypeBinaryCodable.read(from:)();
  if (!v0)
  {
    dispatch thunk of static BinaryDecodable.read(from:)();
    return Measurement.init(value:unit:)();
  }
  return result;
}

void sub_1007C5CE8()
{
}

void sub_1007C5D0C()
{
}

uint64_t TrendBaseline.Kind<>.write(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 - 8);
  __n128 v4 = __chkstk_darwin(a1);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))(v6, v7, a2, v4);
  if ((*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v6, a2) == enum case for TrendBaseline.Kind.mean<A>(_:))
  {
    char v11 = 1;
    return FixedSizeTypeBinaryCodable.write(to:)();
  }
  else
  {
    type metadata accessor for BinaryDecoder.Error();
    sub_1007CC5F0(&qword_100E95730, (void (*)(uint64_t))&type metadata accessor for BinaryDecoder.Error);
    swift_allocError();
    sub_100162880();
    (*(void (**)(void))(v9 + 104))();
    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, a2);
  }
}

uint64_t static TrendBaseline.Kind<>.read(from:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_10017B3A0();
  if (!v1)
  {
    sub_1001D2538();
    if (v4)
    {
      uint64_t v5 = enum case for TrendBaseline.Kind.mean<A>(_:);
      type metadata accessor for TrendBaseline.Kind();
      sub_100162880();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 104))(a1, v5);
    }
    else
    {
      type metadata accessor for BinaryDecoder.Error();
      sub_1007CC5F0(&qword_100E95730, (void (*)(uint64_t))&type metadata accessor for BinaryDecoder.Error);
      uint64_t v7 = sub_10017D4A4();
      sub_100183208(v7, v8);
      sub_100180454();
      sub_10017A8E8();
      v9();
      return swift_willThrow();
    }
  }
  return result;
}

void sub_1007C602C()
{
}

void sub_1007C6050()
{
}

uint64_t sub_1007C6070@<X0>(uint64_t a1@<X8>)
{
  return static TrendBaseline.Kind<>.read(from:)(a1);
}

uint64_t sub_1007C608C(uint64_t a1, uint64_t a2)
{
  return TrendBaseline.Kind<>.write(to:)(a1, a2);
}

void DailyWeatherStatistics<>.write(to:)()
{
}

void static DailyWeatherStatistics<>.read(from:)()
{
}

uint64_t sub_1007C6124(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1007C6150(a1, a2, a3, (uint64_t (*)(uint64_t, void, void, void, void, void, void))static DailyWeatherStatistics<>.read(from:));
}

uint64_t sub_1007C6150(uint64_t a1, void *a2, uint64_t a3, uint64_t (*a4)(uint64_t, void, void, void, void, void, void))
{
  return a4(a1, a2[2], a2[3], a2[4], a2[5], *(void *)(a3 - 8), *(void *)(a3 - 16));
}

void sub_1007C6180()
{
}

void DailyWeatherSummary<>.write(to:)()
{
  sub_10016314C();
  uint64_t v2 = type metadata accessor for WeatherMetadata();
  sub_100179C0C();
  uint64_t v5 = v3;
  __chkstk_darwin(v4);
  sub_10016279C();
  DailyWeatherSummary.days.getter();
  Array<A>.write(to:)();
  swift_bridgeObjectRelease();
  if (!v0)
  {
    DailyWeatherSummary.metadata.getter();
    WeatherMetadata.write(to:)();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v2);
  }
  sub_100163164();
}

void static DailyWeatherSummary<>.read(from:)()
{
  sub_10016314C();
  uint64_t v1 = type metadata accessor for WeatherMetadata();
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_100162F18();
  static Array<A>.read(from:)();
  if (!v0)
  {
    static WeatherMetadata.read(from:)();
    DailyWeatherSummary.init(days:metadata:)();
  }
  sub_100163164();
}

uint64_t sub_1007C6394(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1007C6150(a1, a2, a3, (uint64_t (*)(uint64_t, void, void, void, void, void, void))static DailyWeatherSummary<>.read(from:));
}

void sub_1007C63C0()
{
}

void HourlyWeatherStatistics<>.write(to:)()
{
}

void static HourlyWeatherStatistics<>.read(from:)()
{
}

uint64_t sub_1007C6460(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1007C6150(a1, a2, a3, (uint64_t (*)(uint64_t, void, void, void, void, void, void))static HourlyWeatherStatistics<>.read(from:));
}

void sub_1007C648C()
{
}

void MonthlyWeatherStatistics<>.write(to:)()
{
}

void sub_1007C6500()
{
  sub_10016314C();
  uint64_t v18 = v2;
  int64_t v21 = v3;
  uint64_t v5 = v4;
  uint64_t v23 = v6;
  uint64_t v8 = v7;
  uint64_t v9 = type metadata accessor for WeatherMetadata();
  sub_100179C0C();
  uint64_t v19 = v10;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v20 = v14;
  __chkstk_darwin(v15);
  sub_10008B8C0();
  uint64_t v22 = v0;
  v5(v8);
  Array<A>.write(to:)();
  swift_bridgeObjectRelease();
  if (!v1)
  {
    v21(v8);
    Date.write(to:)();
    sub_100162F0C();
    v17(v16);
    v18(v8);
    WeatherMetadata.write(to:)();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v13, v9);
  }
  sub_100163164();
}

void static MonthlyWeatherStatistics<>.read(from:)()
{
}

void sub_1007C6704()
{
  sub_10016314C();
  uint64_t v16 = v3;
  uint64_t v17 = v4;
  uint64_t v14 = v5;
  uint64_t v15 = v6;
  uint64_t v8 = v7;
  uint64_t v9 = type metadata accessor for WeatherMetadata();
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_100162F18();
  type metadata accessor for Date();
  sub_100179C0C();
  __chkstk_darwin(v11);
  sub_100162EB8();
  uint64_t v12 = static Array<A>.read(from:)();
  if (!v1)
  {
    uint64_t v13 = v12;
    static Date.read(from:)();
    static WeatherMetadata.read(from:)();
    v17(v13, v0, v2, v8, v14, v15, v16);
  }
  sub_100163164();
}

uint64_t sub_1007C6870(uint64_t a1, void *a2, uint64_t a3)
{
  return sub_1007C6150(a1, a2, a3, (uint64_t (*)(uint64_t, void, void, void, void, void, void))static MonthlyWeatherStatistics<>.read(from:));
}

void sub_1007C689C()
{
}

void Percentiles<>.write(to:)()
{
  sub_10016314C();
  type metadata accessor for Measurement();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10016278C();
  __chkstk_darwin(v2);
  sub_100188DC0();
  __chkstk_darwin(v3);
  Percentiles.p10.getter();
  Measurement<>.write(to:)();
  if (v0)
  {
    uint64_t v4 = sub_10012B5E8();
    v8(v4, v7);
  }
  else
  {
    sub_10012B5E8();
    uint64_t v9 = v5;
    sub_10016285C();
    v6();
    Percentiles.p50.getter();
    sub_10019B634();
    Measurement<>.write(to:)();
    sub_10016285C();
    v9();
    Percentiles.p90.getter();
    sub_10019B634();
    Measurement<>.write(to:)();
    sub_10016285C();
    v9();
  }
  sub_100163164();
}

void static Percentiles<>.read(from:)()
{
  sub_10016314C();
  type metadata accessor for Measurement();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10016278C();
  __chkstk_darwin(v2);
  sub_100188DC0();
  __chkstk_darwin(v3);
  sub_100162BA8();
  if (!v0)
  {
    sub_100162BA8();
    sub_100162BA8();
    Percentiles.init(p10:p50:p90:)();
  }
  sub_100163164();
}

void sub_1007C6BD0()
{
}

void sub_1007C6BF0()
{
}

uint64_t sub_1007C6C0C(uint64_t a1)
{
  swift_retain();
  FixedSizeTypeBinaryCodable.write(to:)();
  if (v1) {
    return swift_release();
  }
  sub_1008923EC(a1);
  swift_release();
  type metadata accessor for ViewState(0);
  sub_10019D900();
  sub_1008BCA6C();
  sub_1001A4838();
  ListSessionTrigger.write(to:)();
  sub_10001EE2C();
  sub_1001A4838();
  ListSessionTrigger.write(to:)();
  sub_10017DF08(&qword_100E66408);
  sub_1007CC5F0(&qword_100E957D0, (void (*)(uint64_t))type metadata accessor for SearchViewState);
  sub_1007CC5F0(&qword_100E957D8, (void (*)(uint64_t))type metadata accessor for SearchViewState);
  sub_100182BD0();
  uint64_t v4 = sub_10019D900();
  sub_1008BCBF0(v4);
  uint64_t v5 = sub_10019D900();
  sub_100895C58(v5);
  sub_1001A4838();
  return FixedSizeTypeBinaryCodable.write(to:)();
}

void sub_1007C6DE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  sub_10016314C();
  uint64_t v19 = v18;
  uint64_t v50 = v20;
  uint64_t v21 = type metadata accessor for WeatherMapPresentationState(0);
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_100166B4C();
  type metadata accessor for DynamicTypeSize();
  sub_100179C0C();
  __chkstk_darwin(v23);
  sub_100162EB8();
  type metadata accessor for DisplayMetrics();
  sub_100162880();
  __chkstk_darwin(v24);
  sub_10008B8C0();
  uint64_t v25 = sub_10017DF08(&qword_100E66408);
  uint64_t v26 = sub_100109308(v25);
  __chkstk_darwin(v26);
  sub_100109370();
  uint64_t v27 = type metadata accessor for ViewState.SecondaryViewState(0);
  uint64_t v28 = sub_100109308(v27);
  __chkstk_darwin(v28);
  sub_100125FF8();
  uint64_t v29 = sub_1008BCC98();
  if (!v13)
  {
    uint64_t v47 = v17;
    uint64_t v48 = v16;
    uint64_t v49 = v29;
    sub_1001A2E20();
    sub_1008BCD84();
    sub_1001A2E20();
    char v30 = static ListSessionTrigger.read(from:)();
    sub_1001A2E20();
    char v31 = static ListSessionTrigger.read(from:)();
    type metadata accessor for SearchViewState(0);
    sub_1007CC5F0(&qword_100E957D0, (void (*)(uint64_t))type metadata accessor for SearchViewState);
    sub_1007CC5F0(&qword_100E957D8, (void (*)(uint64_t))type metadata accessor for SearchViewState);
    static Optional<A>.read(from:)();
    sub_1001A2E20();
    uint64_t v32 = static UIInterfaceOrientation.read(from:)();
    sub_1001A2E20();
    uint64_t v46 = static UIUserInterfaceSizeClass.read(from:)();
    sub_1001A2E20();
    char v51 = static NotificationAuthorizationState.read(from:)();
    sub_1001A2E20();
    int v45 = static ListSessionTrigger.read(from:)();
    sub_1001A2E20();
    int v44 = static WeatherChange.Direction.read(from:)();
    sub_1001A2E20();
    static DynamicTypeSize.read(from:)(v33);
    *(void *)uint64_t v47 = v32;
    *(void *)(v47 + 8) = v46;
    *(unsigned char *)(v47 + 16) = v51;
    *(unsigned char *)(v47 + 17) = v45 & 1;
    *(unsigned char *)(v47 + 18) = v44;
    sub_1001190D4();
    v34();
    sub_100895A28(v19, v35, v36, v37, v38, v39, v40, v41, v43, v44, v45, SBYTE2(v45), SHIBYTE(v45));
    static FixedSizeTypeBinaryCodable.read(from:)();
    *uint64_t v50 = v49;
    uint64_t v42 = (int *)type metadata accessor for ViewState(0);
    sub_10013F21C(v14, (uint64_t)v50 + v42[5], (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
    *((unsigned char *)v50 + v42[6]) = v30 & 1;
    *((unsigned char *)v50 + v42[7]) = v31 & 1;
    sub_1007CC424(v48, (uint64_t)v50 + v42[8], &qword_100E66408);
    sub_10013F21C(v47, (uint64_t)v50 + v42[9], (void (*)(void))type metadata accessor for DisplayMetrics);
    sub_10013F21C(v15, (uint64_t)v50 + v42[10], (void (*)(void))type metadata accessor for WeatherMapPresentationState);
    *((unsigned char *)v50 + v42[11]) = a13;
  }
  sub_100163164();
}

void sub_1007C72A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1007C6DE4(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

uint64_t sub_1007C72B8(uint64_t a1)
{
  return sub_1007C6C0C(a1);
}

void static WeatherAttribution.read(from:)()
{
  sub_10016314C();
  type metadata accessor for URL();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10016278C();
  __chkstk_darwin(v2);
  __chkstk_darwin(v3);
  __chkstk_darwin(v4);
  static String.read(from:)();
  if (!v0)
  {
    sub_1001D13F8();
    sub_1001D13F8();
    sub_1001D13F8();
    sub_1001D13F8();
    WeatherAttribution.init(serviceName:legalPageURL:squareMarkURL:combinedMarkDarkURL:combinedMarkLightURL:)();
  }
  sub_100163164();
}

void WeatherAttribution.write(to:)()
{
  sub_10016314C();
  uint64_t v1 = type metadata accessor for URL();
  sub_100179C0C();
  uint64_t v24 = v2;
  __chkstk_darwin(v3);
  sub_10016278C();
  uint64_t v6 = (char *)(v4 - v5);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v21 - v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v21 - v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v21 - v14;
  WeatherAttribution.serviceName.getter();
  String.write(to:)();
  if (v0)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v22 = v6;
    uint64_t v23 = v9;
    uint64_t v16 = v24;
    swift_bridgeObjectRelease();
    WeatherAttribution.legalPageURL.getter();
    URL.write(to:)();
    uint64_t v17 = *(void (**)(char *, uint64_t))(v16 + 8);
    uint64_t v18 = v1;
    v17(v15, v1);
    WeatherAttribution.squareMarkURL.getter();
    URL.write(to:)();
    v17(v12, v1);
    uint64_t v19 = v23;
    WeatherAttribution.combinedMarkDarkURL.getter();
    URL.write(to:)();
    v17(v19, v18);
    uint64_t v20 = v22;
    WeatherAttribution.combinedMarkLightURL.getter();
    URL.write(to:)();
    v17(v20, v18);
  }
  sub_100163164();
}

void sub_1007C76FC()
{
}

void sub_1007C7714()
{
}

void static WeatherDataModel.read(from:)()
{
  sub_10016314C();
  uint64_t v19 = v1;
  uint64_t v2 = sub_10017DF08(&qword_100E6B8A8);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_100109314();
  uint64_t v4 = sub_10017DF08(&qword_100E6B8B8);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_100109314();
  type metadata accessor for WeatherAvailability();
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_10011BA80(v7, v18);
  uint64_t v8 = sub_10017DF08(&qword_100E6D1C8);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v10 = sub_10017DF08(&qword_100E885C0);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_100109370();
  sub_10017DF08(&qword_100E66CA0);
  sub_100179C0C();
  __chkstk_darwin(v12);
  sub_100125FF8();
  sub_10017DF08(&qword_100E66CC8);
  sub_100179C0C();
  __chkstk_darwin(v13);
  sub_10011C760();
  uint64_t v14 = sub_10017DF08(&qword_100E6E8F8);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_10018257C();
  sub_100179C0C();
  __chkstk_darwin(v16);
  sub_100187254();
  static CurrentWeather.read(from:)(v19, v17);
  if (!v0)
  {
    sub_10017DF08(&qword_100E6E900);
    sub_1007C7E8C();
    sub_1007C7F64();
    static Optional<A>.read(from:)();
    sub_1007C4B88();
    sub_1007C4EA0();
    type metadata accessor for AirQuality();
    sub_1007CC5F0(&qword_100E95758, (void (*)(uint64_t))&type metadata accessor for AirQuality);
    sub_1007CC5F0(&qword_100E95760, (void (*)(uint64_t))&type metadata accessor for AirQuality);
    static Optional<A>.read(from:)();
    type metadata accessor for WeatherChanges();
    sub_1007CC5F0(&qword_100E95768, (void (*)(uint64_t))&type metadata accessor for WeatherChanges);
    sub_1007CC5F0(&qword_100E95770, (void (*)(uint64_t))&type metadata accessor for WeatherChanges);
    static Optional<A>.read(from:)();
    sub_10017DF08(&qword_100E755E0);
    sub_1007C803C();
    sub_1007C8114();
    static Optional<A>.read(from:)();
    static WeatherAvailability.read(from:)();
    type metadata accessor for HistoricalComparisons();
    sub_1007CC5F0(&qword_100E95798, (void (*)(uint64_t))&type metadata accessor for HistoricalComparisons);
    sub_1007CC5F0(&qword_100E957A0, (void (*)(uint64_t))&type metadata accessor for HistoricalComparisons);
    sub_1001D15D8();
    type metadata accessor for HistoricalFacts();
    sub_1007CC5F0(&qword_100E957A8, (void (*)(uint64_t))&type metadata accessor for HistoricalFacts);
    sub_1007CC5F0(&qword_100E957B0, (void (*)(uint64_t))&type metadata accessor for HistoricalFacts);
    sub_1001D15D8();
    WeatherDataModel.init(currentWeather:minuteForecast:hourlyForecast:dailyForecast:airQuality:weatherChanges:weatherAlerts:availability:historicalComparisons:historicalFacts:)();
  }
  sub_100163164();
}

unint64_t sub_1007C7E8C()
{
  unint64_t result = qword_100E95738;
  if (!qword_100E95738)
  {
    sub_10018C6DC(&qword_100E6E900);
    sub_1007CC5F0(&qword_100E95740, (void (*)(uint64_t))&type metadata accessor for MinuteWeather);
    sub_1007CC5F0(&qword_100E95748, (void (*)(uint64_t))&type metadata accessor for MinuteWeather);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E95738);
  }
  return result;
}

unint64_t sub_1007C7F64()
{
  unint64_t result = qword_100E95750;
  if (!qword_100E95750)
  {
    sub_10018C6DC(&qword_100E6E900);
    sub_1007CC5F0(&qword_100E95740, (void (*)(uint64_t))&type metadata accessor for MinuteWeather);
    sub_1007CC5F0(&qword_100E95748, (void (*)(uint64_t))&type metadata accessor for MinuteWeather);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E95750);
  }
  return result;
}

unint64_t sub_1007C803C()
{
  unint64_t result = qword_100E95778;
  if (!qword_100E95778)
  {
    sub_10018C6DC(&qword_100E755E0);
    sub_1007CC5F0(&qword_100E95780, (void (*)(uint64_t))&type metadata accessor for WeatherAlert);
    sub_1007CC5F0(&qword_100E95788, (void (*)(uint64_t))&type metadata accessor for WeatherAlert);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E95778);
  }
  return result;
}

unint64_t sub_1007C8114()
{
  unint64_t result = qword_100E95790;
  if (!qword_100E95790)
  {
    sub_10018C6DC(&qword_100E755E0);
    sub_1007CC5F0(&qword_100E95780, (void (*)(uint64_t))&type metadata accessor for WeatherAlert);
    sub_1007CC5F0(&qword_100E95788, (void (*)(uint64_t))&type metadata accessor for WeatherAlert);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E95790);
  }
  return result;
}

void WeatherDataModel.write(to:)()
{
  sub_10016314C();
  sub_10017DF08(&qword_100E6B8A8);
  sub_100162880();
  __chkstk_darwin(v2);
  sub_100109314();
  uint64_t v20 = v3;
  sub_10017DF08(&qword_100E6B8B8);
  sub_100162880();
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v21 = v5;
  type metadata accessor for WeatherAvailability();
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_100109314();
  sub_10017DF08(&qword_100E6D1C8);
  sub_100162880();
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v22 = v8;
  sub_10017DF08(&qword_100E885C0);
  sub_100162880();
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v23 = v10;
  sub_10017DF08(&qword_100E66CA0);
  sub_100179C0C();
  __chkstk_darwin(v11);
  sub_100109314();
  sub_10017DF08(&qword_100E66CC8);
  sub_100179C0C();
  __chkstk_darwin(v12);
  sub_10011C760();
  sub_10017DF08(&qword_100E6E8F8);
  sub_100162880();
  __chkstk_darwin(v13);
  sub_10018257C();
  sub_100179C0C();
  __chkstk_darwin(v14);
  sub_100187254();
  WeatherDataModel.currentWeather.getter();
  CurrentWeather.write(to:)();
  uint64_t v15 = sub_10019DF30();
  v16(v15);
  if (!v0)
  {
    WeatherDataModel.minuteForecast.getter();
    sub_1007C7E8C();
    sub_1007C7F64();
    Optional<A>.write(to:)();
    sub_1007CC3D4(v1, (uint64_t)&qword_100E6E8F8);
    WeatherDataModel.hourlyForecast.getter();
    sub_1007C40C8();
    sub_100210358();
    sub_100162F0C();
    v17();
    WeatherDataModel.dailyForecast.getter();
    sub_1007C4390();
    sub_100162F0C();
    v18();
    WeatherDataModel.airQuality.getter();
    sub_1007CC5F0(&qword_100E95758, (void (*)(uint64_t))&type metadata accessor for AirQuality);
    sub_1007CC5F0(&qword_100E95760, (void (*)(uint64_t))&type metadata accessor for AirQuality);
    sub_1001790D4();
    Optional<A>.write(to:)();
    sub_1007CC3D4(v23, (uint64_t)&qword_100E885C0);
    WeatherDataModel.weatherChanges.getter();
    sub_1007CC5F0(&qword_100E95768, (void (*)(uint64_t))&type metadata accessor for WeatherChanges);
    sub_1007CC5F0(&qword_100E95770, (void (*)(uint64_t))&type metadata accessor for WeatherChanges);
    sub_1001790D4();
    Optional<A>.write(to:)();
    sub_1007CC3D4(v22, (uint64_t)&qword_100E6D1C8);
    WeatherDataModel.weatherAlerts.getter();
    sub_10017DF08(&qword_100E957B8);
    sub_1007C803C();
    sub_1007C8114();
    Optional<A>.write(to:)();
    swift_bridgeObjectRelease();
    WeatherDataModel.availability.getter();
    WeatherAvailability.write(to:)();
    sub_100162F0C();
    v19();
    WeatherDataModel.historicalComparisons.getter();
    sub_1007CC5F0(&qword_100E95798, (void (*)(uint64_t))&type metadata accessor for HistoricalComparisons);
    sub_1007CC5F0(&qword_100E957A0, (void (*)(uint64_t))&type metadata accessor for HistoricalComparisons);
    sub_1001790D4();
    Optional<A>.write(to:)();
    sub_1007CC3D4(v21, (uint64_t)&qword_100E6B8B8);
    WeatherDataModel.historicalFacts.getter();
    sub_1007CC5F0(&qword_100E957A8, (void (*)(uint64_t))&type metadata accessor for HistoricalFacts);
    sub_1007CC5F0(&qword_100E957B0, (void (*)(uint64_t))&type metadata accessor for HistoricalFacts);
    sub_1001790D4();
    Optional<A>.write(to:)();
    sub_1007CC3D4(v20, (uint64_t)&qword_100E6B8A8);
  }
  sub_100163164();
}

void sub_1007C88D4()
{
}

void sub_1007C88EC()
{
}

uint64_t DynamicTypeSize.write(to:)()
{
  uint64_t v2 = type metadata accessor for DynamicTypeSize();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_100125FF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v0, v2);
  int v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 88))(v1, v2);
  if (v6 == enum case for DynamicTypeSize.xSmall(_:)
    || v6 == enum case for DynamicTypeSize.small(_:)
    || v6 == enum case for DynamicTypeSize.medium(_:)
    || v6 == enum case for DynamicTypeSize.large(_:)
    || v6 == enum case for DynamicTypeSize.xLarge(_:)
    || v6 == enum case for DynamicTypeSize.xxLarge(_:)
    || v6 == enum case for DynamicTypeSize.xxxLarge(_:)
    || v6 == enum case for DynamicTypeSize.accessibility1(_:)
    || v6 == enum case for DynamicTypeSize.accessibility2(_:)
    || v6 == enum case for DynamicTypeSize.accessibility3(_:)
    || v6 == enum case for DynamicTypeSize.accessibility4(_:)
    || v6 == enum case for DynamicTypeSize.accessibility5(_:))
  {
    return sub_100186BCC();
  }
  sub_100186BCC();
  sub_100164944();
  return v8();
}

uint64_t static DynamicTypeSize.read(from:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_10017B3A0();
  if (!v1)
  {
    switch(v10)
    {
      case 1:
        uint64_t v4 = (unsigned int *)&enum case for DynamicTypeSize.xSmall(_:);
        goto LABEL_16;
      case 2:
        uint64_t v4 = (unsigned int *)&enum case for DynamicTypeSize.small(_:);
        goto LABEL_16;
      case 3:
        uint64_t v4 = (unsigned int *)&enum case for DynamicTypeSize.medium(_:);
        goto LABEL_16;
      case 4:
        uint64_t v4 = (unsigned int *)&enum case for DynamicTypeSize.large(_:);
        goto LABEL_16;
      case 5:
        uint64_t v4 = (unsigned int *)&enum case for DynamicTypeSize.xLarge(_:);
        goto LABEL_16;
      case 6:
        uint64_t v4 = (unsigned int *)&enum case for DynamicTypeSize.xxLarge(_:);
        goto LABEL_16;
      case 7:
        uint64_t v4 = (unsigned int *)&enum case for DynamicTypeSize.xxxLarge(_:);
        goto LABEL_16;
      case 8:
        uint64_t v4 = (unsigned int *)&enum case for DynamicTypeSize.accessibility1(_:);
        goto LABEL_16;
      case 9:
        uint64_t v4 = (unsigned int *)&enum case for DynamicTypeSize.accessibility2(_:);
        goto LABEL_16;
      case 10:
        uint64_t v4 = (unsigned int *)&enum case for DynamicTypeSize.accessibility3(_:);
        goto LABEL_16;
      case 11:
        uint64_t v4 = (unsigned int *)&enum case for DynamicTypeSize.accessibility4(_:);
        goto LABEL_16;
      case 12:
        uint64_t v4 = (unsigned int *)&enum case for DynamicTypeSize.accessibility5(_:);
LABEL_16:
        uint64_t v8 = *v4;
        type metadata accessor for DynamicTypeSize();
        sub_100162880();
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 104))(a1, v8);
        break;
      default:
        type metadata accessor for BinaryDecoder.Error();
        sub_1007CC5F0(&qword_100E95730, (void (*)(uint64_t))&type metadata accessor for BinaryDecoder.Error);
        uint64_t v5 = sub_10017D4A4();
        sub_100183208(v5, v6);
        sub_100180454();
        sub_10017A8E8();
        v7();
        uint64_t result = swift_willThrow();
        break;
    }
  }
  return result;
}

uint64_t sub_1007C8E5C@<X0>(uint64_t a1@<X8>)
{
  return static DynamicTypeSize.read(from:)(a1);
}

uint64_t sub_1007C8E74()
{
  return DynamicTypeSize.write(to:)();
}

uint64_t sub_1007C8E8C()
{
  return static Measurement<>.read(from:)();
}

void sub_1007C8EAC()
{
}

uint64_t NSUnitAngle.write(to:)()
{
  sub_100185598();
  uint64_t v0 = self;
  id v1 = [v0 degrees];
  sub_1001A6930((uint64_t)v1, (unint64_t *)&qword_100E952D0);
  char v2 = sub_1001A184C();

  if (v2) {
    return sub_100186BCC();
  }
  id v3 = [v0 arcMinutes];
  char v4 = sub_1001A0DC8();

  if (v4) {
    return sub_100186BCC();
  }
  id v5 = [v0 arcSeconds];
  char v6 = sub_1001A0DC8();

  if (v6) {
    return sub_100186BCC();
  }
  id v7 = [v0 radians];
  char v8 = sub_1001A0DC8();

  if (v8) {
    return sub_100186BCC();
  }
  id v9 = [v0 gradians];
  char v10 = sub_1001A0DC8();

  if (v10) {
    return sub_100186BCC();
  }
  id v11 = [v0 revolutions];
  char v12 = sub_10018C51C();

  if (v12) {
    return sub_100186BCC();
  }
  type metadata accessor for BinaryDecoder.Error();
  sub_1007CC5F0(&qword_100E95730, (void (*)(uint64_t))&type metadata accessor for BinaryDecoder.Error);
  uint64_t v14 = sub_10017D4A4();
  sub_100183208(v14, v15);
  sub_100180454();
  sub_10017A8E8();
  v16();
  return swift_willThrow();
}

uint64_t static NSUnitAngle.read(from:)()
{
  uint64_t result = sub_10017B3A0();
  if (!v1)
  {
    sub_1001911F0();
    if (v3 >= 6)
    {
      type metadata accessor for BinaryDecoder.Error();
      sub_1007CC5F0(&qword_100E95730, (void (*)(uint64_t))&type metadata accessor for BinaryDecoder.Error);
      uint64_t v5 = sub_10017D4A4();
      sub_100183208(v5, v6);
      sub_100180454();
      sub_10017A8E8();
      v7();
      return swift_willThrow();
    }
    else
    {
      id v4 = [(id)sub_10018A3E0() *v0];
      return sub_100183F58((uint64_t)v4);
    }
  }
  return result;
}

uint64_t sub_1007C9248@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static NSUnitAngle.read(from:)();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1007C9274()
{
  return NSUnitAngle.write(to:)();
}

uint64_t NSUnitSpeed.write(to:)()
{
  sub_100185598();
  uint64_t v1 = self;
  id v2 = [v1 metersPerSecond];
  sub_1001A6930((uint64_t)v2, (unint64_t *)&qword_100E6BF18);
  char v3 = sub_1001A184C();

  if ((v3 & 1) == 0)
  {
    id v4 = [v1 kilometersPerHour];
    char v5 = sub_1001A0DC8();

    if ((v5 & 1) == 0)
    {
      id v6 = [v1 milesPerHour];
      char v7 = sub_1001A0DC8();

      if ((v7 & 1) == 0)
      {
        id v8 = [v1 knots];
        char v9 = sub_10018C51C();

        if ((v9 & 1) == 0)
        {
          id v10 = [v0 symbol];
          uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v13 = v12;

          if (v11 == 1747938669 && v13 == 0xE400000000000000)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if ((v15 & 1) == 0)
            {
              type metadata accessor for BinaryDecoder.Error();
              sub_1007CC5F0(&qword_100E95730, (void (*)(uint64_t))&type metadata accessor for BinaryDecoder.Error);
              uint64_t v16 = sub_10017D4A4();
              sub_100183208(v16, v17);
              sub_100180454();
              sub_10017A8E8();
              v18();
              return swift_willThrow();
            }
          }
        }
      }
    }
  }
  return sub_100186BCC();
}

uint64_t static NSUnitSpeed.read(from:)()
{
  uint64_t result = sub_10017B3A0();
  if (!v0)
  {
    switch(v9)
    {
      case 1:
        id v2 = [(id)swift_getObjCClassFromMetadata() metersPerSecond];
        goto LABEL_8;
      case 2:
        id v2 = [(id)swift_getObjCClassFromMetadata() kilometersPerHour];
        goto LABEL_8;
      case 3:
        id v2 = [(id)swift_getObjCClassFromMetadata() milesPerHour];
        goto LABEL_8;
      case 4:
        id v2 = [(id)swift_getObjCClassFromMetadata() knots];
LABEL_8:
        id v6 = v2;
        goto LABEL_10;
      case 5:
        id v7 = [objc_allocWithZone((Class)NSUnitConverterLinear) initWithCoefficient:0.00000027777];
        id v8 = objc_allocWithZone((Class)NSUnitSpeed);
        id v6 = sub_1007CC370(1747938669, 0xE400000000000000, v7);
LABEL_10:
        uint64_t result = sub_100183F58((uint64_t)v6);
        break;
      default:
        type metadata accessor for BinaryDecoder.Error();
        sub_1007CC5F0(&qword_100E95730, (void (*)(uint64_t))&type metadata accessor for BinaryDecoder.Error);
        uint64_t v3 = sub_10017D4A4();
        sub_100183208(v3, v4);
        sub_100180454();
        sub_10017A8E8();
        v5();
        uint64_t result = swift_willThrow();
        break;
    }
  }
  return result;
}

uint64_t sub_1007C96FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static NSUnitSpeed.read(from:)();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1007C9728()
{
  return NSUnitSpeed.write(to:)();
}

uint64_t NSUnitTemperature.write(to:)()
{
  sub_100185598();
  uint64_t v0 = self;
  id v1 = [v0 celsius];
  sub_1001A6930((uint64_t)v1, (unint64_t *)&qword_100E659A0);
  char v2 = sub_1001A184C();

  if (v2) {
    return sub_100186BCC();
  }
  id v3 = [v0 fahrenheit];
  char v4 = sub_1001A0DC8();

  if (v4) {
    return sub_100186BCC();
  }
  id v5 = [v0 kelvin];
  char v6 = sub_10018C51C();

  if (v6) {
    return sub_100186BCC();
  }
  type metadata accessor for BinaryDecoder.Error();
  sub_1007CC5F0(&qword_100E95730, (void (*)(uint64_t))&type metadata accessor for BinaryDecoder.Error);
  uint64_t v8 = sub_10017D4A4();
  sub_100183208(v8, v9);
  sub_100180454();
  sub_10017A8E8();
  v10();
  return swift_willThrow();
}

uint64_t static NSUnitTemperature.read(from:)()
{
  uint64_t result = sub_10017B3A0();
  if (!v1)
  {
    sub_1001911F0();
    if (v3 >= 3)
    {
      type metadata accessor for BinaryDecoder.Error();
      sub_1007CC5F0(&qword_100E95730, (void (*)(uint64_t))&type metadata accessor for BinaryDecoder.Error);
      uint64_t v5 = sub_10017D4A4();
      sub_100183208(v5, v6);
      sub_100180454();
      sub_10017A8E8();
      v7();
      return swift_willThrow();
    }
    else
    {
      id v4 = [(id)sub_10018A3E0() *v0];
      return sub_100183F58((uint64_t)v4);
    }
  }
  return result;
}

uint64_t sub_1007C99F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static NSUnitTemperature.read(from:)();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1007C9A20()
{
  return NSUnitTemperature.write(to:)();
}

uint64_t NSUnitLength.write(to:)()
{
  sub_100185598();
  uint64_t v0 = self;
  id v1 = [v0 megameters];
  sub_1001A6930((uint64_t)v1, (unint64_t *)&qword_100E6B678);
  char v2 = sub_1001A184C();

  if (v2) {
    return sub_100186BCC();
  }
  id v3 = [v0 kilometers];
  char v4 = sub_1001A0DC8();

  if (v4) {
    return sub_100186BCC();
  }
  id v5 = [v0 hectometers];
  char v6 = sub_1001A0DC8();

  if (v6) {
    return sub_100186BCC();
  }
  id v7 = [v0 decameters];
  char v8 = sub_1001A0DC8();

  if (v8) {
    return sub_100186BCC();
  }
  id v9 = [v0 meters];
  char v10 = sub_1001A0DC8();

  if (v10) {
    return sub_100186BCC();
  }
  id v11 = [v0 decimeters];
  char v12 = sub_1001A0DC8();

  if (v12) {
    return sub_100186BCC();
  }
  id v13 = [v0 centimeters];
  char v14 = sub_1001A0DC8();

  if (v14) {
    return sub_100186BCC();
  }
  id v15 = [v0 millimeters];
  char v16 = sub_1001A0DC8();

  if (v16) {
    return sub_100186BCC();
  }
  id v17 = [v0 micrometers];
  char v18 = sub_1001A0DC8();

  if (v18) {
    return sub_100186BCC();
  }
  id v19 = [v0 nanometers];
  char v20 = sub_1001A0DC8();

  if (v20) {
    return sub_100186BCC();
  }
  id v21 = [v0 picometers];
  char v22 = sub_1001A0DC8();

  if (v22) {
    return sub_100186BCC();
  }
  id v23 = [v0 inches];
  char v24 = sub_1001A0DC8();

  if (v24) {
    return sub_100186BCC();
  }
  id v25 = [v0 feet];
  char v26 = sub_1001A0DC8();

  if (v26) {
    return sub_100186BCC();
  }
  id v27 = [v0 yards];
  char v28 = sub_1001A0DC8();

  if (v28) {
    return sub_100186BCC();
  }
  id v29 = [v0 miles];
  char v30 = sub_1001A0DC8();

  if (v30) {
    return sub_100186BCC();
  }
  id v31 = [v0 scandinavianMiles];
  char v32 = sub_1001A0DC8();

  if (v32) {
    return sub_100186BCC();
  }
  id v33 = [v0 lightyears];
  char v34 = sub_1001A0DC8();

  if (v34) {
    return sub_100186BCC();
  }
  id v35 = [v0 nauticalMiles];
  char v36 = sub_1001A0DC8();

  if (v36) {
    return sub_100186BCC();
  }
  id v37 = [v0 fathoms];
  char v38 = sub_1001A0DC8();

  if (v38) {
    return sub_100186BCC();
  }
  id v39 = [v0 furlongs];
  char v40 = sub_1001A0DC8();

  if (v40) {
    return sub_100186BCC();
  }
  id v41 = [v0 astronomicalUnits];
  char v42 = sub_1001A0DC8();

  if (v42) {
    return sub_100186BCC();
  }
  id v43 = [v0 parsecs];
  char v44 = sub_10018C51C();

  if (v44) {
    return sub_100186BCC();
  }
  type metadata accessor for BinaryDecoder.Error();
  sub_1007CC5F0(&qword_100E95730, (void (*)(uint64_t))&type metadata accessor for BinaryDecoder.Error);
  uint64_t v46 = sub_10017D4A4();
  sub_100183208(v46, v47);
  sub_100180454();
  sub_10017A8E8();
  v48();
  return swift_willThrow();
}

uint64_t static NSUnitLength.read(from:)()
{
  uint64_t result = sub_10017B3A0();
  if (!v1)
  {
    sub_1001911F0();
    if (v3 >= 0x16)
    {
      type metadata accessor for BinaryDecoder.Error();
      sub_1007CC5F0(&qword_100E95730, (void (*)(uint64_t))&type metadata accessor for BinaryDecoder.Error);
      uint64_t v5 = sub_10017D4A4();
      sub_100183208(v5, v6);
      sub_100180454();
      sub_10017A8E8();
      v7();
      return swift_willThrow();
    }
    else
    {
      id v4 = [(id)sub_10018A3E0() *v0];
      return sub_100183F58((uint64_t)v4);
    }
  }
  return result;
}

uint64_t sub_1007CA04C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static NSUnitLength.read(from:)();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1007CA078()
{
  return NSUnitLength.write(to:)();
}

uint64_t NSUnitPressure.write(to:)()
{
  sub_100185598();
  uint64_t v0 = self;
  id v1 = [v0 newtonsPerMetersSquared];
  sub_1001A6930((uint64_t)v1, &qword_100E6BF30);
  char v2 = sub_1001A184C();

  if (v2) {
    return sub_100186BCC();
  }
  id v3 = [v0 gigapascals];
  char v4 = sub_1001A0DC8();

  if (v4) {
    return sub_100186BCC();
  }
  id v5 = [v0 megapascals];
  char v6 = sub_1001A0DC8();

  if (v6) {
    return sub_100186BCC();
  }
  id v7 = [v0 kilopascals];
  char v8 = sub_1001A0DC8();

  if (v8) {
    return sub_100186BCC();
  }
  id v9 = [v0 hectopascals];
  char v10 = sub_1001A0DC8();

  if (v10) {
    return sub_100186BCC();
  }
  id v11 = [v0 inchesOfMercury];
  char v12 = sub_1001A0DC8();

  if (v12) {
    return sub_100186BCC();
  }
  id v13 = [v0 bars];
  char v14 = sub_1001A0DC8();

  if (v14) {
    return sub_100186BCC();
  }
  id v15 = [v0 millibars];
  char v16 = sub_1001A0DC8();

  if (v16) {
    return sub_100186BCC();
  }
  id v17 = [v0 millimetersOfMercury];
  char v18 = sub_1001A0DC8();

  if (v18) {
    return sub_100186BCC();
  }
  id v19 = [v0 poundsForcePerSquareInch];
  char v20 = sub_10018C51C();

  if (v20) {
    return sub_100186BCC();
  }
  type metadata accessor for BinaryDecoder.Error();
  sub_1007CC5F0(&qword_100E95730, (void (*)(uint64_t))&type metadata accessor for BinaryDecoder.Error);
  uint64_t v22 = sub_10017D4A4();
  sub_100183208(v22, v23);
  sub_100180454();
  sub_10017A8E8();
  v24();
  return swift_willThrow();
}

uint64_t static NSUnitPressure.read(from:)()
{
  uint64_t result = sub_10017B3A0();
  if (!v1)
  {
    sub_1001911F0();
    if (v3 >= 0xA)
    {
      type metadata accessor for BinaryDecoder.Error();
      sub_1007CC5F0(&qword_100E95730, (void (*)(uint64_t))&type metadata accessor for BinaryDecoder.Error);
      uint64_t v5 = sub_10017D4A4();
      sub_100183208(v5, v6);
      sub_100180454();
      sub_10017A8E8();
      v7();
      return swift_willThrow();
    }
    else
    {
      id v4 = [(id)sub_10018A3E0() *v0];
      return sub_100183F58((uint64_t)v4);
    }
  }
  return result;
}

uint64_t sub_1007CA544@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static NSUnitPressure.read(from:)();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1007CA570()
{
  return NSUnitPressure.write(to:)();
}

uint64_t NSUnitDispersion.write(to:)()
{
  id v0 = [self partsPerMillion];
  sub_1001ABC4C(0, &qword_100E957C0);
  char v1 = static NSObject.== infix(_:_:)();

  if (v1) {
    return sub_100186BCC();
  }
  type metadata accessor for BinaryDecoder.Error();
  sub_1007CC5F0(&qword_100E95730, (void (*)(uint64_t))&type metadata accessor for BinaryDecoder.Error);
  uint64_t v3 = sub_10017D4A4();
  sub_100183208(v3, v4);
  sub_100180454();
  sub_10017A8E8();
  v5();
  return swift_willThrow();
}

uint64_t static NSUnitDispersion.read(from:)()
{
  uint64_t result = sub_10017B3A0();
  if (!v0)
  {
    sub_1001D2538();
    if (v2)
    {
      id v3 = [(id)swift_getObjCClassFromMetadata() partsPerMillion];
      return sub_100183F58((uint64_t)v3);
    }
    else
    {
      type metadata accessor for BinaryDecoder.Error();
      sub_1007CC5F0(&qword_100E95730, (void (*)(uint64_t))&type metadata accessor for BinaryDecoder.Error);
      uint64_t v4 = sub_10017D4A4();
      sub_100183208(v4, v5);
      sub_100180454();
      sub_10017A8E8();
      v6();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1007CA7B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static NSUnitDispersion.read(from:)();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1007CA7E0()
{
  return NSUnitDispersion.write(to:)();
}

uint64_t NSUnitConcentrationMass.write(to:)()
{
  sub_100185598();
  uint64_t v0 = self;
  id v1 = [v0 gramsPerLiter];
  sub_1001A6930((uint64_t)v1, &qword_100E957C8);
  char v2 = sub_1001A184C();

  if (v2) {
    return sub_100186BCC();
  }
  id v3 = [v0 milligramsPerDeciliter];
  char v4 = sub_10018C51C();

  if (v4) {
    return sub_100186BCC();
  }
  type metadata accessor for BinaryDecoder.Error();
  sub_1007CC5F0(&qword_100E95730, (void (*)(uint64_t))&type metadata accessor for BinaryDecoder.Error);
  uint64_t v6 = sub_10017D4A4();
  sub_100183208(v6, v7);
  sub_100180454();
  sub_10017A8E8();
  v8();
  return swift_willThrow();
}

uint64_t static NSUnitConcentrationMass.read(from:)()
{
  uint64_t result = sub_10017B3A0();
  if (!v0)
  {
    sub_1001D2538();
    if (v3)
    {
      char v4 = &selRef_gramsPerLiter;
    }
    else
    {
      if (v2 != 2)
      {
        type metadata accessor for BinaryDecoder.Error();
        sub_1007CC5F0(&qword_100E95730, (void (*)(uint64_t))&type metadata accessor for BinaryDecoder.Error);
        uint64_t v6 = sub_10017D4A4();
        sub_100183208(v6, v7);
        sub_100180454();
        sub_10017A8E8();
        v8();
        return swift_willThrow();
      }
      char v4 = &selRef_milligramsPerDeciliter;
    }
    id v5 = [(id)swift_getObjCClassFromMetadata() *v4];
    return sub_100183F58((uint64_t)v5);
  }
  return result;
}

uint64_t sub_1007CAA78@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static NSUnitConcentrationMass.read(from:)();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1007CAAA4()
{
  return NSUnitConcentrationMass.write(to:)();
}

uint64_t UIInterfaceOrientation.write(to:)(uint64_t a1, uint64_t a2)
{
  switch(a2)
  {
    case 1:
    case 2:
    case 3:
    case 4:
      uint64_t result = FixedSizeTypeBinaryCodable.write(to:)();
      break;
    default:
      type metadata accessor for BinaryDecoder.Error();
      sub_1007CC5F0(&qword_100E95730, (void (*)(uint64_t))&type metadata accessor for BinaryDecoder.Error);
      uint64_t v2 = sub_10017D4A4();
      sub_100183208(v2, v3);
      sub_100180454();
      sub_10017A8E8();
      v4();
      uint64_t result = swift_willThrow();
      break;
  }
  return result;
}

uint64_t static UIInterfaceOrientation.read(from:)()
{
  uint64_t result = sub_10017B3A0();
  if (!v0)
  {
    sub_1001911F0();
    if (v2 >= 4u)
    {
      type metadata accessor for BinaryDecoder.Error();
      sub_1007CC5F0(&qword_100E95730, (void (*)(uint64_t))&type metadata accessor for BinaryDecoder.Error);
      uint64_t v3 = sub_10017D4A4();
      sub_100183208(v3, v4);
      sub_100180454();
      sub_10017A8E8();
      v5();
      return swift_willThrow();
    }
    else
    {
      return qword_100C5CA38[(char)v2];
    }
  }
  return result;
}

uint64_t sub_1007CAD0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static UIInterfaceOrientation.read(from:)();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1007CAD38(uint64_t a1)
{
  return UIInterfaceOrientation.write(to:)(a1, *v1);
}

uint64_t UIUserInterfaceSizeClass.write(to:)(uint64_t a1, uint64_t a2)
{
  if (a2 == 1 || a2 == 2) {
    return FixedSizeTypeBinaryCodable.write(to:)();
  }
  type metadata accessor for BinaryDecoder.Error();
  sub_1007CC5F0(&qword_100E95730, (void (*)(uint64_t))&type metadata accessor for BinaryDecoder.Error);
  uint64_t v3 = sub_10017D4A4();
  sub_100183208(v3, v4);
  sub_100180454();
  sub_10017A8E8();
  v5();
  return swift_willThrow();
}

uint64_t static UIUserInterfaceSizeClass.read(from:)()
{
  uint64_t result = sub_10017B3A0();
  if (!v0)
  {
    sub_1001D2538();
    if (v3)
    {
      return 2;
    }
    else if (v2 == 2)
    {
      return 1;
    }
    else
    {
      type metadata accessor for BinaryDecoder.Error();
      sub_1007CC5F0(&qword_100E95730, (void (*)(uint64_t))&type metadata accessor for BinaryDecoder.Error);
      uint64_t v4 = sub_10017D4A4();
      sub_100183208(v4, v5);
      sub_100180454();
      sub_10017A8E8();
      v6();
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1007CAF2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = static UIUserInterfaceSizeClass.read(from:)();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1007CAF58(uint64_t a1)
{
  return UIUserInterfaceSizeClass.write(to:)(a1, *v1);
}

double static CGSize.read(from:)()
{
  static FixedSizeTypeBinaryCodable.read(from:)();
  if (!v0)
  {
    double v1 = v3;
    sub_1001820DC();
  }
  return v1;
}

uint64_t CGSize.write(to:)()
{
  uint64_t result = FixedSizeTypeBinaryCodable.write(to:)();
  if (!v0) {
    return sub_100184778();
  }
  return result;
}

void sub_1007CB048(uint64_t a1@<X8>)
{
  double v3 = static CGSize.read(from:)();
  if (!v1)
  {
    *(double *)a1 = v3;
    *(void *)(a1 + 8) = v4;
  }
}

uint64_t sub_1007CB074()
{
  return CGSize.write(to:)();
}

double static CGRect.read(from:)()
{
  static FixedSizeTypeBinaryCodable.read(from:)();
  if (!v0)
  {
    double v1 = v3;
    sub_1001820DC();
    sub_1001820DC();
    sub_1001820DC();
  }
  return v1;
}

uint64_t CGRect.write(to:)()
{
  uint64_t result = FixedSizeTypeBinaryCodable.write(to:)();
  if (!v0)
  {
    sub_100184778();
    sub_100184778();
    return sub_100184778();
  }
  return result;
}

void sub_1007CB1F4(uint64_t a1@<X8>)
{
  double v3 = static CGRect.read(from:)();
  if (!v1)
  {
    *(double *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = v6;
  }
}

void sub_1007CB224()
{
  sub_10016314C();
  UUID.write(to:)();
  if (!v1)
  {
    uint64_t v2 = type metadata accessor for PreprocessedWeatherData();
    type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
    sub_1007CC5F0(&qword_100E957E0, (void (*)(uint64_t))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
    sub_1007CC5F0(&qword_100E957E8, (void (*)(uint64_t))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
    sub_100166CB8();
    sub_10019D900();
    sub_1008A3F2C();
    type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(0);
    sub_1007CC5F0(&qword_100E957F0, (void (*)(uint64_t))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
    sub_1007CC5F0(&qword_100E957F8, (void (*)(uint64_t))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
    sub_100166CB8();
    type metadata accessor for HourlyForecastComponentPreprocessedDataModel();
    sub_10017DF08(&qword_100E63758);
    sub_1007CC5F0(&qword_100E95800, (void (*)(uint64_t))&type metadata accessor for WeatherDescription);
    sub_1007CC5F0(&qword_100E95808, (void (*)(uint64_t))&type metadata accessor for WeatherDescription);
    sub_100182BD0();
    sub_10019D900();
    sub_1008A7410();
    String.write(to:)();
    String.write(to:)();
    String.write(to:)();
    String.write(to:)();
    String.write(to:)();
    String.write(to:)();
    String.write(to:)();
    sub_10019D900();
    WeatherDescription.write(to:)();
    type metadata accessor for UVIndexComponentPreprocessedDataModel();
    String.write(to:)();
    String.write(to:)();
    String.write(to:)();
    String.write(to:)();
    sub_10019D900();
    sub_1008B3EB4();
    memcpy(__dst, (const void *)(v0 + *(int *)(v2 + 52)), sizeof(__dst));
    sub_1001A4838();
    sub_1008B4464();
    Date.write(to:)();
    type metadata accessor for WeatherConditionBackgroundTimeData();
    sub_10017DF08(&qword_100E63760);
    sub_1007CC5F0(&qword_100E95810, (void (*)(uint64_t))&type metadata accessor for Elevation);
    sub_1007CC5F0(&qword_100E95818, (void (*)(uint64_t))&type metadata accessor for Elevation);
    Optional<A>.write(to:)();
    sub_10017DF08(&qword_100E63768);
    sub_1007CC5F0(&qword_100E95820, (void (*)(uint64_t))&type metadata accessor for BackgroundMoonData);
    sub_1007CC5F0(&qword_100E95828, (void (*)(uint64_t))&type metadata accessor for BackgroundMoonData);
    sub_100182BD0();
    memcpy(v3, (const void *)(v0 + *(int *)(v2 + 60)), sizeof(v3));
    sub_1001A4838();
    sub_1008A7138();
  }
  sub_100163164();
}

void sub_1007CB770()
{
  sub_10016314C();
  uint64_t v87 = v0;
  uint64_t v78 = v5;
  uint64_t v6 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v80 = v8;
  sub_100129064();
  uint64_t v9 = type metadata accessor for WeatherConditionBackgroundPreprocessedDataModel();
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v79 = v11;
  sub_100129064();
  uint64_t v12 = type metadata accessor for PressureComponentPreprocessedDataModel();
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_100109314();
  uint64_t v81 = v14;
  sub_100129064();
  uint64_t v86 = type metadata accessor for WeatherDescription();
  sub_100179C0C();
  uint64_t v84 = v15;
  __chkstk_darwin(v16);
  sub_100109314();
  uint64_t v85 = v17;
  sub_100129064();
  uint64_t v82 = type metadata accessor for UVIndexComponentPreprocessedDataModel();
  sub_100162880();
  __chkstk_darwin(v18);
  sub_100109314();
  uint64_t v83 = v19;
  sub_100129064();
  uint64_t v20 = type metadata accessor for ListPreprocessedDataModel();
  uint64_t v21 = sub_100109308(v20);
  __chkstk_darwin(v21);
  sub_100125FF8();
  uint64_t v22 = sub_10017DF08(&qword_100E63758);
  uint64_t v23 = sub_100109308(v22);
  __chkstk_darwin(v23);
  sub_10008B8C0();
  uint64_t v24 = type metadata accessor for HourlyForecastComponentPreprocessedDataModel();
  sub_100162880();
  __chkstk_darwin(v25);
  sub_100166B4C();
  uint64_t v26 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  uint64_t v27 = sub_100109308(v26);
  __chkstk_darwin(v27);
  id v29 = (char *)v65 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for UUID();
  sub_100179C0C();
  uint64_t v32 = v31;
  __chkstk_darwin(v33);
  sub_100162F18();
  uint64_t v34 = v87;
  static FixedSizeTypeBinaryCodable.read(from:)();
  if (!v34)
  {
    uint64_t v71 = v24;
    uint64_t v72 = v2;
    uint64_t v73 = v1;
    uint64_t v74 = v4;
    uint64_t v75 = v29;
    uint64_t v76 = v30;
    uint64_t v87 = v3;
    uint64_t v77 = v32;
    type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
    sub_1007CC5F0(&qword_100E957E0, (void (*)(uint64_t))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
    sub_1007CC5F0(&qword_100E957E8, (void (*)(uint64_t))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
    uint64_t v35 = static Array<A>.read(from:)();
    sub_1008A3D24();
    type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(0);
    sub_1007CC5F0(&qword_100E957F0, (void (*)(uint64_t))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
    sub_1007CC5F0(&qword_100E957F8, (void (*)(uint64_t))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
    uint64_t v36 = static Array<A>.read(from:)();
    sub_1007CC5F0(&qword_100E95800, (void (*)(uint64_t))&type metadata accessor for WeatherDescription);
    sub_1007CC5F0(&qword_100E95808, (void (*)(uint64_t))&type metadata accessor for WeatherDescription);
    uint64_t v37 = v74;
    static Optional<A>.read(from:)();
    uint64_t v38 = v71;
    id v39 = v72;
    *uint64_t v72 = v36;
    sub_1007CC424(v37, (uint64_t)v39 + *(int *)(v38 + 20), &qword_100E63758);
    sub_1008A7250();
    sub_1008AF52C(v88);
    uint64_t v40 = v88[1];
    uint64_t v41 = v88[3];
    uint64_t v70 = v88[4];
    uint64_t v71 = v88[2];
    uint64_t v74 = v88[5];
    uint64_t v42 = v88[7];
    uint64_t v43 = v88[9];
    uint64_t v68 = v88[8];
    uint64_t v69 = v88[6];
    uint64_t v44 = v88[11];
    uint64_t v66 = v88[0];
    uint64_t v67 = v88[10];
    uint64_t v45 = static String.read(from:)();
    v91[0] = v66;
    v91[1] = v40;
    v65[1] = v40;
    v91[2] = v71;
    v91[3] = v41;
    v91[4] = v70;
    v91[5] = v74;
    v91[6] = v69;
    v91[7] = v42;
    uint64_t v70 = v43;
    uint64_t v71 = v42;
    v91[8] = v68;
    v91[9] = v43;
    v91[10] = v67;
    v91[11] = v44;
    uint64_t v68 = v46;
    uint64_t v69 = v44;
    v91[12] = v45;
    v91[13] = v46;
    static WeatherDescription.read(from:)();
    uint64_t v47 = static String.read(from:)();
    uint64_t v67 = 0;
    uint64_t v48 = v47;
    uint64_t v50 = v49;
    uint64_t v51 = v83;
    sub_1001190D4();
    v52();
    uint64_t v53 = (uint64_t *)(v51 + *(int *)(v82 + 20));
    *uint64_t v53 = v48;
    v53[1] = v50;
    uint64_t v54 = v67;
    uint64_t v55 = static String.read(from:)();
    if (v54)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10011E3B0(v83, (void (*)(void))type metadata accessor for UVIndexComponentPreprocessedDataModel);
      sub_10011E3B0(v73, (void (*)(void))type metadata accessor for ListPreprocessedDataModel);
      sub_10011E3B0((uint64_t)v72, (void (*)(void))type metadata accessor for HourlyForecastComponentPreprocessedDataModel);
      sub_10011E3B0((uint64_t)v75, (void (*)(void))type metadata accessor for FeelsLikeComponentPreprocessedDataModel);
      (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v87, v76);
    }
    else
    {
      uint64_t v57 = v55;
      uint64_t v58 = v56;
      uint64_t v59 = static String.read(from:)();
      uint64_t v86 = v60;
      uint64_t v61 = v59;
      uint64_t v84 = static String.read(from:)();
      uint64_t v85 = v62;
      sub_1001CA8AC();
      sub_1008B3CB8();
      sub_1001CA8AC();
      sub_1008B3F84(v63);
      sub_1001CA8AC();
      sub_1008B47B0();
      sub_10013F21C(v80, v79, (void (*)(void))type metadata accessor for WeatherConditionBackgroundTimeData);
      sub_1001CA8AC();
      sub_1008A6F90(v64);
      *(void *)&long long v92 = v57;
      *((void *)&v92 + 1) = v58;
      uint64_t v93 = v61;
      uint64_t v94 = v86;
      uint64_t v95 = v84;
      uint64_t v96 = v85;
      sub_1001E6F7C(v87, v35, (uint64_t)v75, (uint64_t)v72, v73, v91, v83, &v92, v78, v81, &v89, v79, &v90);
    }
  }
  sub_100163164();
}

void sub_1007CC340()
{
}

void sub_1007CC358()
{
}

id sub_1007CC370(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [v3 initWithSymbol:v5 converter:a3];

  return v6;
}

uint64_t sub_1007CC3D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t *)sub_100183208(a1, a2);
  sub_10017DF08(v3);
  sub_100162880();
  sub_100162F0C();
  v4();
  return v2;
}

uint64_t sub_1007CC424(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_10017DF08(a3);
  sub_100162880();
  sub_1001190D4();
  v4();
  return a2;
}

uint64_t sub_1007CC480(uint64_t a1)
{
  return a1;
}

uint64_t sub_1007CC4F8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1007CC5F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1007CC638(char a1, char a2, uint64_t a3)
{
  uint64_t v90 = a3;
  uint64_t v6 = type metadata accessor for TipPriorityQueue.GridEntry();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100162EF8();
  uint64_t v87 = v8;
  sub_1001626D4();
  __chkstk_darwin(v9);
  uint64_t v86 = (uint64_t)&v71 - v10;
  sub_1001626D4();
  __chkstk_darwin(v11);
  uint64_t v85 = (uint64_t)&v71 - v12;
  uint64_t v13 = sub_10017DF08(&qword_100E64E80);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_10017F948();
  uint64_t v15 = type metadata accessor for LocationComponentViewModel();
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_100162EF8();
  uint64_t v18 = v17;
  sub_1001626D4();
  __chkstk_darwin(v19);
  uint64_t v71 = (uint64_t)&v71 - v20;
  uint64_t v21 = sub_10017DF08(&qword_100E6CCD8);
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_100162EF8();
  uint64_t v84 = v23;
  sub_1001626D4();
  __chkstk_darwin(v24);
  uint64_t v83 = (uint64_t)&v71 - v25;
  sub_1001626D4();
  __chkstk_darwin(v26);
  uint64_t v89 = (uint64_t)&v71 - v27;
  sub_1001626D4();
  __chkstk_darwin(v28);
  uint64_t v82 = (uint64_t)&v71 - v29;
  uint64_t v88 = v6;
  if (a1)
  {
    if (a1 == 1)
    {
      if (a2)
      {
        uint64_t v30 = &qword_100E95C40;
        goto LABEL_11;
      }
    }
    else if (a2)
    {
      uint64_t v30 = &qword_100E96010;
      goto LABEL_11;
    }
    uint64_t v30 = &qword_100E95E28;
  }
  else if (a2)
  {
    uint64_t v30 = &qword_100E95870;
  }
  else
  {
    uint64_t v30 = &qword_100E95A58;
  }
LABEL_11:
  char v31 = *((unsigned char *)v30 + 160);
  uint64_t v32 = *v30;
  uint64_t v73 = v30[1];
  uint64_t v72 = v30[2];
  uint64_t v33 = v30[3];
  uint64_t v34 = v30[16];
  uint64_t v35 = v30[17];
  uint64_t v36 = v30[18];
  uint64_t v37 = v30[19];
  uint64_t v38 = v30[45];
  uint64_t v76 = v30[46];
  uint64_t v77 = v38;
  uint64_t v39 = v30[47];
  uint64_t v74 = v30[48];
  uint64_t v75 = v39;
  uint64_t v40 = v30[53];
  uint64_t v80 = v30[54];
  uint64_t v81 = v40;
  uint64_t v41 = v30[55];
  uint64_t v78 = v30[56];
  uint64_t v79 = v41;
  uint64_t v42 = v90 + OBJC_IVAR____TtCV7Weather22NoAqiSevereNewsContent8_Storage_map;
  swift_beginAccess();
  sub_10006DF38(v42, v3, &qword_100E64E80);
  uint64_t v43 = type metadata accessor for LocationComponentContainerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0(v3, 1, v43) == 1)
  {
    sub_1001781AC(v3, &qword_100E64E80);
LABEL_16:
    uint64_t v48 = 1;
    uint64_t v49 = v88;
    goto LABEL_17;
  }
  sub_10031F6A8(v3 + *(int *)(v43 + 20), v18, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  sub_10031F75C(v3, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  uint64_t v44 = v18;
  uint64_t v45 = v71;
  sub_10031F6FC(v44, v71, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  if (v31)
  {
    sub_10031F75C(v45, (void (*)(void))type metadata accessor for LocationComponentViewModel);
    goto LABEL_16;
  }
  uint64_t v46 = v45;
  uint64_t v47 = v89;
  sub_10031F6FC(v46, v89, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v48 = 0;
  uint64_t v49 = v88;
  uint64_t v50 = (uint64_t *)(v47 + *(int *)(v88 + 20));
  *uint64_t v50 = v34;
  v50[1] = v35;
  v50[2] = v36;
  v50[3] = v37;
LABEL_17:
  uint64_t v51 = v89;
  _s7Weather24LocationCompositionStateOwst_0(v89, v48, 1, v49);
  uint64_t v52 = v82;
  sub_10031F640(v51, v82);
  uint64_t v53 = v83;
  _s7Weather24LocationCompositionStateOwst_0(v83, 1, 1, v49);
  uint64_t v54 = sub_100163354(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
  uint64_t v55 = v85;
  sub_10031F6A8(v54, v85, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v56 = (uint64_t *)(v55 + *(int *)(v49 + 20));
  uint64_t v57 = v73;
  *uint64_t v56 = v32;
  v56[1] = v57;
  _OWORD v56[2] = v72;
  v56[3] = v33;
  uint64_t v58 = v84;
  sub_10006DF38(v52, v84, &qword_100E6CCD8);
  uint64_t v59 = sub_100163354(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
  uint64_t v60 = v86;
  sub_10031F6A8(v59, v86, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v61 = (uint64_t *)(v60 + *(int *)(v49 + 20));
  uint64_t v62 = v76;
  *uint64_t v61 = v77;
  v61[1] = v62;
  uint64_t v63 = v74;
  v61[2] = v75;
  v61[3] = v63;
  uint64_t v64 = sub_100163354(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
  uint64_t v65 = v87;
  sub_10031F6A8(v64, v87, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v66 = (uint64_t *)(v65 + *(int *)(v49 + 20));
  uint64_t v67 = v80;
  *uint64_t v66 = v81;
  v66[1] = v67;
  uint64_t v68 = v78;
  v66[2] = v79;
  v66[3] = v68;
  uint64_t v69 = sub_100AD6D18(v53, v55, v58, v60, v65);
  sub_1001781AC(v52, &qword_100E6CCD8);
  return v69;
}

uint64_t sub_1007CCBC4(uint64_t a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E64E80);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_10017F948();
  uint64_t v5 = type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = a1 + OBJC_IVAR____TtCV7Weather22NoAqiSevereNewsContent8_Storage_map;
  swift_beginAccess();
  sub_10006DF38(v10, v1, &qword_100E64E80);
  uint64_t v104 = a1;
  if (_s7Weather24LocationCompositionStateOwet_0(v1, 1, v5) == 1)
  {
    sub_1001781AC(v1, &qword_100E64E80);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100C367B0;
    sub_10017DF08(&qword_100E6CCD0);
    unint64_t v12 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v13 = *(void *)(v6 + 72);
    uint64_t v14 = (__n128 *)swift_allocObject();
    uint64_t v15 = sub_100183900(v14, (__n128)xmmword_100C251B0);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather22NoAqiSevereNewsContent8_Storage_severeAlert, (uint64_t)v15 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 32) = sub_1001F24CC((uint64_t)v14);
    *(void *)(v11 + 40) = v16;
    *(void *)(v11 + 48) = v17;
    uint64_t v18 = (__n128 *)swift_allocObject();
    sub_10017FBA8(v18);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather22NoAqiSevereNewsContent8_Storage_newsArticle, v19, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 56) = sub_1001F24CC((uint64_t)v14);
    *(void *)(v11 + 64) = v20;
    *(void *)(v11 + 72) = v21;
    uint64_t v22 = (__n128 *)sub_100181354();
    sub_10017FBA8(v22);
    sub_10031F6A8(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v23, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 80) = sub_1001F24CC((uint64_t)v14);
    *(void *)(v11 + 88) = v24;
    *(void *)(v11 + 96) = v25;
    uint64_t v26 = sub_100181354();
    *(_OWORD *)(v26 + 16) = v105;
    sub_10031F6A8(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v26 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 104) = sub_1001F24CC(v26);
    *(void *)(v11 + 112) = v27;
    *(void *)(v11 + 120) = v28;
    uint64_t v29 = v13;
    uint64_t v30 = (__n128 *)swift_allocObject();
    char v31 = (char *)sub_100183900(v30, (__n128)xmmword_100C25ED0) + v12;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
    sub_1001859A8((uint64_t)&v31[v29], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset);
    *(void *)(v11 + 128) = sub_1001F24CC((uint64_t)v30);
    *(void *)(v11 + 136) = v32;
    *(void *)(v11 + 144) = v33;
    uint64_t v34 = (__n128 *)swift_allocObject();
    sub_10016324C(v34);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_1001859A8((uint64_t)&v31[v29], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal);
    *(void *)(v11 + 152) = sub_1001F24CC((uint64_t)v30);
    *(void *)(v11 + 160) = v35;
    *(void *)(v11 + 168) = v36;
    uint64_t v37 = (__n128 *)sub_100181354();
    sub_10016324C(v37);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_1001859A8((uint64_t)&v31[v29], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity);
    *(void *)(v11 + 176) = sub_1001F24CC((uint64_t)v30);
    *(void *)(v11 + 184) = v38;
    *(void *)(v11 + 192) = v39;
    uint64_t v40 = sub_100181354();
    *(_OWORD *)(v40 + 16) = v105;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_1001859A8(v40 + v12 + v29, OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure);
    *(void *)(v11 + 200) = sub_1001F24CC(v40);
    *(void *)(v11 + 208) = v41;
    *(void *)(v11 + 216) = v42;
    uint64_t v43 = (__n128 *)sub_100181354();
    sub_100179F48(v43);
    uint64_t v45 = v44 + v12;
    uint64_t v46 = *(void *)(a1 + 16);
    sub_10031F6A8(v46 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v44 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v46 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v45 + v29, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 224) = sub_1001F24CC((uint64_t)v43);
    *(void *)(v11 + 232) = v47;
    *(void *)(v11 + 240) = v48;
  }
  else
  {
    sub_10031F6FC(v1, v9, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100C28110;
    sub_10017DF08(&qword_100E6CCD0);
    uint64_t v103 = *(void *)(v6 + 72);
    uint64_t v102 = v9;
    unint64_t v49 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v50 = (__n128 *)swift_allocObject();
    uint64_t v51 = sub_100183900(v50, (__n128)xmmword_100C251B0);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather22NoAqiSevereNewsContent8_Storage_severeAlert, (uint64_t)v51 + v49, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 32) = sub_1001F24CC((uint64_t)v50);
    *(void *)(v11 + 40) = v52;
    *(void *)(v11 + 48) = v53;
    uint64_t v54 = sub_10017C984();
    *(_OWORD *)(v54 + 16) = v105;
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather22NoAqiSevereNewsContent8_Storage_newsArticle, v54 + v49, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 56) = sub_1001F24CC(v54);
    *(void *)(v11 + 64) = v55;
    *(void *)(v11 + 72) = v56;
    uint64_t v57 = (__n128 *)sub_10017C984();
    sub_10017E198(v57);
    sub_10031F6A8(v58 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v59, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 80) = sub_1001F24CC(v54);
    *(void *)(v11 + 88) = v60;
    *(void *)(v11 + 96) = v61;
    uint64_t v62 = (__n128 *)sub_10017C984();
    sub_10017E198(v62);
    sub_10031F6A8(v63 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v64, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 104) = sub_1001F24CC(v54);
    *(void *)(v11 + 112) = v65;
    *(void *)(v11 + 120) = v66;
    uint64_t v67 = sub_10017C984();
    *(_OWORD *)(v67 + 16) = v105;
    sub_10031F6A8(v9, v67 + v49, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 128) = sub_1001F24CC(v67);
    *(void *)(v11 + 136) = v68;
    *(void *)(v11 + 144) = v69;
    uint64_t v70 = (__n128 *)swift_allocObject();
    uint64_t v71 = (char *)sub_100183900(v70, (__n128)xmmword_100C25ED0) + v49;
    uint64_t v72 = a1;
    uint64_t v73 = *(void *)(a1 + 16);
    uint64_t v74 = v72;
    sub_10031F6A8(v73 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v71, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v73 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v71[v103], (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 152) = sub_1001F24CC((uint64_t)v70);
    *(void *)(v11 + 160) = v75;
    *(void *)(v11 + 168) = v76;
    uint64_t v77 = (__n128 *)swift_allocObject();
    sub_100179F48(v77);
    uint64_t v79 = v78 + v49;
    uint64_t v80 = *(void *)(v74 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_10031F6A8(v80 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, v79 + v103, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 176) = sub_1001F24CC((uint64_t)v77);
    *(void *)(v11 + 184) = v81;
    *(void *)(v11 + 192) = v82;
    uint64_t v83 = (__n128 *)swift_allocObject();
    sub_100179F48(v83);
    uint64_t v85 = v84 + v49;
    uint64_t v86 = *(void *)(v104 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_10031F6A8(v86 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, v85 + v103, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 200) = sub_1001F24CC((uint64_t)v83);
    *(void *)(v11 + 208) = v87;
    *(void *)(v11 + 216) = v88;
    uint64_t v89 = (__n128 *)swift_allocObject();
    sub_100179F48(v89);
    uint64_t v91 = v90 + v49;
    uint64_t v92 = *(void *)(v104 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_10031F6A8(v92 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, v91 + v103, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 224) = sub_1001F24CC((uint64_t)v89);
    *(void *)(v11 + 232) = v93;
    *(void *)(v11 + 240) = v94;
    uint64_t v95 = (__n128 *)swift_allocObject();
    sub_100179F48(v95);
    uint64_t v97 = v96 + v49;
    uint64_t v98 = *(void *)(v104 + 16);
    sub_10031F6A8(v98 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v96 + v49, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v98 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v97 + v103, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 248) = sub_1001F24CC((uint64_t)v95);
    *(void *)(v11 + 256) = v99;
    *(void *)(v11 + 264) = v100;
    sub_10031F75C(v102, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  }
  return v11;
}

void sub_1007CD430(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = type metadata accessor for LocationComponentContainerViewModel();
  sub_100162E4C();
  uint64_t v6 = __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  uint64_t v7 = type metadata accessor for LocationViewComponent();
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_10017DF08(&qword_100E64E80);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = swift_retain();
  sub_1006E2E94(v17, a2);
  swift_release();
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather36LocationNoAqiSevereNewsConfiguration8_Storage_map, v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v11);
  sub_10031F75C(v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  _s7Weather24LocationCompositionStateOwst_0(v16, 0, 1, v4);
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather36LocationNoAqiSevereNewsConfiguration8_Storage_newsArticle, v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v11);
  sub_10031F75C(v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather36LocationNoAqiSevereNewsConfiguration8_Storage_severeAlert, v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v11);
  sub_10031F75C(v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_1002DCA90();
}

uint64_t sub_1007CD65C(uint64_t a1)
{
  return sub_10017D4C4(a1, (unsigned int *)&enum case for FeatureState.default(_:), 32, 0x8000000100CB3330, &qword_100F51C38);
}

unsigned char *storeEnumTagSinglePayload for UIKitFlags(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1007CD720);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for UIKitFlags()
{
  return &type metadata for UIKitFlags;
}

unint64_t sub_1007CD75C()
{
  unint64_t result = qword_100E961E0;
  if (!qword_100E961E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E961E0);
  }
  return result;
}

uint64_t *sub_1007CD7A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = sub_10017DF08(&qword_100E749B0);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
    }
  }
  return v3;
}

uint64_t sub_1007CD8F0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v7(v4, v5);
  }
  return result;
}

void *sub_1007CD994(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_10017DF08(&qword_100E749B0);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
  }
  return a1;
}

void *sub_1007CDA8C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = sub_10017DF08(&qword_100E749B0);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
  return a1;
}

_OWORD *sub_1007CDC2C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for URL();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8))
  {
    uint64_t v9 = sub_10017DF08(&qword_100E749B0);
    memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 0, 1, v8);
  }
  return a1;
}

void *sub_1007CDD04(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  int v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for URL();
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11);
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11);
  if (!v12)
  {
    uint64_t v14 = *(void *)(v11 - 8);
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v9, v10, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v11);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v15 = sub_10017DF08(&qword_100E749B0);
    memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
  return a1;
}

uint64_t sub_1007CDE84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007CDE98);
}

uint64_t sub_1007CDE98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10017DF08(&qword_100E749B0);
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_1007CDF24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007CDF38);
}

uint64_t sub_1007CDF38(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10017DF08(&qword_100E749B0);
    uint64_t v8 = v5 + *(int *)(a4 + 24);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_1007CDFBC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1701667182 && a2 == 0xE400000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x4C52556F676F6CLL && a2 == 0xE700000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1007CE0E4(char a1)
{
  if (!a1) {
    return 25705;
  }
  if (a1 == 1) {
    return 1701667182;
  }
  return 0x4C52556F676F6CLL;
}

uint64_t sub_1007CE128()
{
  return sub_1007CE0E4(*v0);
}

uint64_t sub_1007CE130@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1007CDFBC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1007CE158(uint64_t a1)
{
  unint64_t v2 = sub_1007CEA08();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007CE194(uint64_t a1)
{
  unint64_t v2 = sub_1007CEA08();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1007CE1D0()
{
}

uint64_t sub_1007CE1E8()
{
  return sub_1008BD3A0();
}

uint64_t sub_1007CE200(void *a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E96328);
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  sub_1001B1E64(a1, a1[3]);
  sub_1007CEA08();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    KeyedEncodingContainer.encode(_:forKey:)();
    type metadata accessor for NewsChannel();
    type metadata accessor for URL();
    sub_100333160(&qword_100E6A658);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_1007CE39C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E749B0);
  __chkstk_darwin(v4 - 8);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  sub_10017DF08(&qword_100E96318);
  sub_100179C0C();
  uint64_t v22 = v9;
  uint64_t v23 = v8;
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = type metadata accessor for NewsChannel();
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_1001626E0();
  uint64_t v17 = (uint64_t *)(v16 - v15);
  sub_1001B1E64(a1, a1[3]);
  sub_1007CEA08();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  uint64_t *v17 = KeyedDecodingContainer.decode(_:forKey:)();
  v17[1] = v18;
  v17[2] = KeyedDecodingContainer.decode(_:forKey:)();
  v17[3] = v19;
  type metadata accessor for URL();
  sub_100333160(&qword_100E6A788);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v12, v23);
  sub_1000F21C8(v7, (uint64_t)v17 + *(int *)(v13 + 24));
  sub_1007CEA54((uint64_t)v17, a2);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  return sub_1007CEAB8((uint64_t)v17);
}

BOOL sub_1007CE660(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for URL();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_10017DF08(&qword_100E6D578);
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_1001626E0();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = sub_10017DF08(&qword_100E749B0);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = (char *)&v36 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v36 - v23;
  BOOL v25 = *a1 == *a2 && a1[1] == a2[1];
  if (v25 || (char v26 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v26 & 1) != 0))
  {
    BOOL v28 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v28 || (char v29 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v29 & 1) != 0))
    {
      uint64_t v37 = v6;
      uint64_t v30 = type metadata accessor for NewsChannel();
      sub_1000F32E4((uint64_t)a1 + *(int *)(v30 + 24), (uint64_t)v24);
      sub_1000F32E4((uint64_t)a2 + *(int *)(v30 + 24), (uint64_t)v22);
      uint64_t v31 = v15 + *(int *)(v11 + 48);
      sub_1000F32E4((uint64_t)v24, v15);
      sub_1000F32E4((uint64_t)v22, v31);
      sub_100162F8C(v15);
      if (v25)
      {
        sub_1001781AC((uint64_t)v22, &qword_100E749B0);
        sub_1001781AC((uint64_t)v24, &qword_100E749B0);
        sub_100162F8C(v31);
        if (v25)
        {
          sub_1001781AC(v15, &qword_100E749B0);
          return 1;
        }
      }
      else
      {
        sub_1000F32E4(v15, (uint64_t)v19);
        sub_100162F8C(v31);
        if (!v32)
        {
          uint64_t v33 = v37;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 32))(v10, v31, v4);
          sub_100333160(qword_100E6D3E8);
          char v34 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
          v35(v10, v4);
          sub_1001781AC((uint64_t)v22, &qword_100E749B0);
          sub_1001781AC((uint64_t)v24, &qword_100E749B0);
          v35((uint64_t)v19, v4);
          sub_1001781AC(v15, &qword_100E749B0);
          return (v34 & 1) != 0;
        }
        sub_1001781AC((uint64_t)v22, &qword_100E749B0);
        sub_1001781AC((uint64_t)v24, &qword_100E749B0);
        (*(void (**)(char *, uint64_t))(v37 + 8))(v19, v4);
      }
      sub_1001781AC(v15, &qword_100E6D578);
      return 0;
    }
  }
  return result;
}

uint64_t sub_1007CE9D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1007CE39C(a1, a2);
}

uint64_t sub_1007CE9EC(void *a1)
{
  return sub_1007CE200(a1);
}

unint64_t sub_1007CEA08()
{
  unint64_t result = qword_100E96320;
  if (!qword_100E96320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96320);
  }
  return result;
}

uint64_t sub_1007CEA54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NewsChannel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1007CEAB8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NewsChannel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for NewsChannel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1007CEBE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NewsChannel.CodingKeys()
{
  return &type metadata for NewsChannel.CodingKeys;
}

unint64_t sub_1007CEC1C()
{
  unint64_t result = qword_100E96330;
  if (!qword_100E96330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96330);
  }
  return result;
}

unint64_t sub_1007CEC6C()
{
  unint64_t result = qword_100E96338;
  if (!qword_100E96338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96338);
  }
  return result;
}

unint64_t sub_1007CECBC()
{
  unint64_t result = qword_100E96340;
  if (!qword_100E96340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100E96340);
  }
  return result;
}

ValueMetadata *type metadata accessor for SunriseSunsetMonthlyViewModelFactory()
{
  return &type metadata for SunriseSunsetMonthlyViewModelFactory;
}

void sub_1007CED18(uint64_t *a1)
{
  uint64_t v2 = *(void *)(sub_10017DF08(&qword_100E96350) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1003152B8();
    uint64_t v3 = v4;
  }
  uint64_t v5 = *(void *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_1007D1C5C(v6);
  *a1 = v3;
}

uint64_t sub_1007CEDC4()
{
  sub_1000A9DE8();
  v1[6] = v2;
  v1[7] = v0;
  v1[4] = v3;
  v1[5] = v4;
  uint64_t v5 = sub_10017DF08(&qword_100E96350);
  v1[8] = v5;
  sub_100164920(v5);
  v1[9] = v6;
  v1[10] = sub_100162FDC();
  v1[11] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for WeatherDescription();
  v1[12] = v7;
  sub_100164920(v7);
  v1[13] = v8;
  v1[14] = sub_10017EF8C();
  uint64_t v9 = type metadata accessor for EdgeSunEvents(0);
  v1[15] = v9;
  sub_100109308(v9);
  v1[16] = sub_10017EF8C();
  uint64_t v10 = type metadata accessor for MaxDaylight(0);
  v1[17] = v10;
  sub_100109308(v10);
  v1[18] = sub_10017EF8C();
  uint64_t v11 = type metadata accessor for DaylightData(0);
  v1[19] = v11;
  sub_100109308(v11);
  v1[20] = sub_10017EF8C();
  uint64_t v12 = type metadata accessor for Date();
  v1[21] = v12;
  sub_100164920(v12);
  v1[22] = v13;
  v1[23] = sub_100162FDC();
  v1[24] = swift_task_alloc();
  v1[25] = swift_task_alloc();
  v1[26] = swift_task_alloc();
  v1[27] = swift_task_alloc();
  v1[28] = swift_task_alloc();
  v1[29] = swift_task_alloc();
  v1[30] = swift_task_alloc();
  uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  sub_100109308(v14);
  v1[31] = sub_100162FDC();
  v1[32] = swift_task_alloc();
  v1[33] = swift_task_alloc();
  v1[34] = swift_task_alloc();
  v1[35] = swift_task_alloc();
  uint64_t v15 = type metadata accessor for DateComponents();
  v1[36] = v15;
  sub_100164920(v15);
  v1[37] = v16;
  v1[38] = sub_10017EF8C();
  uint64_t v17 = type metadata accessor for Calendar();
  v1[39] = v17;
  sub_100164920(v17);
  v1[40] = v18;
  v1[41] = sub_100162FDC();
  v1[42] = swift_task_alloc();
  uint64_t v19 = type metadata accessor for TimeZone();
  v1[43] = v19;
  sub_100164920(v19);
  v1[44] = v20;
  v1[45] = sub_10017EF8C();
  return _swift_task_switch(sub_1007CF078, 0, 0);
}

uint64_t sub_1007CF078()
{
  uint64_t v1 = v0[45];
  uint64_t v2 = v0[35];
  uint64_t v3 = v0[33];
  uint64_t v4 = v0[21];
  type metadata accessor for SunriseSunsetProportionCalculator();
  uint64_t v5 = swift_allocObject();
  v0[46] = v5;
  Location.timeZone.getter();
  static Calendar.currentCalendar(with:)();
  sub_100BF12D4(v1);
  Calendar.date(from:)();
  sub_10006DF38(v2, v3, (uint64_t *)&unk_100E73CA0);
  uint64_t v110 = v5;
  if (_s7Weather24LocationCompositionStateOwet_0(v3, 1, v4) == 1)
  {
    sub_100178110(v0[33], (uint64_t *)&unk_100E73CA0);
    uint64_t v6 = 1;
  }
  else
  {
    uint64_t v7 = v0[33];
    uint64_t v8 = v0[21];
    uint64_t v9 = v0[22];
    static Calendar.current.getter();
    Date.wc_addDays(_:calendar:)();
    sub_100163348();
    v10();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    uint64_t v6 = 0;
  }
  uint64_t v11 = v0[35];
  uint64_t v12 = v0[32];
  uint64_t v13 = v0[21];
  _s7Weather24LocationCompositionStateOwst_0(v0[34], v6, 1, v13);
  sub_10017BAF4();
  BOOL v109 = (void *)static NSDateFormatter.shortMonthNameFormatter(with:)();
  v0[47] = v109;
  uint64_t v108 = (void *)static NSDateFormatter.longMonthNameFormatter(with:)();
  v0[48] = v108;
  sub_10006DF38(v11, v12, (uint64_t *)&unk_100E73CA0);
  if (_s7Weather24LocationCompositionStateOwet_0(v12, 1, v13) != 1)
  {
    uint64_t v14 = v0 + 31;
    uint64_t v15 = v0[31];
    uint64_t v16 = v0[34];
    uint64_t v17 = v0[21];
    uint64_t v18 = *(void (**)(void))(v0[22] + 32);
    sub_10018175C();
    v18();
    sub_10006DF38(v16, v15, (uint64_t *)&unk_100E73CA0);
    if (_s7Weather24LocationCompositionStateOwet_0(v15, 1, v17) == 1)
    {
      (*(void (**)(void, void))(v0[22] + 8))(v0[30], v0[21]);
      goto LABEL_8;
    }
    char v32 = (uint64_t *)v0[20];
    uint64_t v33 = v0[7];
    uint64_t v34 = v0[5];
    sub_10018175C();
    v18();
    sub_1001B1E64((void *)(v33 + 40), *(void *)(v33 + 64));
    sub_1009A08A8(v34, v32);
    v0[49] = 0;
    sub_1007D2C8C(v0[20] + *(int *)(v0[19] + 20), v0[18], (void (*)(void))type metadata accessor for MaxDaylight);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v51 = v0[30];
      uint64_t v103 = v0[28];
      uint64_t v53 = v0[21];
      uint64_t v52 = v0[22];
      sub_10017DF08(&qword_100E96358);
      sub_10018175C();
      v18();
      sub_10018175C();
      v18();
      uint64_t v54 = *(void (**)(void))(v52 + 16);
      ((void (*)(uint64_t, uint64_t, uint64_t))v54)(v103, v51, v53);
      Date.timeIntervalSince(_:)();
      double v56 = v55;
      if ((~*(void *)&v55 & 0x7FF0000000000000) != 0)
      {
        if (v55 > -9.22337204e18)
        {
          if (v55 < 9.22337204e18)
          {
            Date.timeIntervalSince(_:)();
            double v58 = v57;
            uint64_t v59 = (void *)static NSDateFormatter.timeDurationWithZeroPaddingFormatter.getter();
            id v60 = [v59 stringFromTimeInterval:v58];

            if (v60)
            {
              uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
              object = v61;

              uint64_t v63 = static Date.formattedShortMonthAndDayRange(date1:date2:timeZone:)();
              if (v64)
              {
                uint64_t v65 = v63;
                uint64_t v66 = v64;
                uint64_t v67 = (uint64_t)v56;
                uint64_t v68 = *(void (**)(void))(v0[22] + 8);
                sub_100183F78();
                v68();
                goto LABEL_33;
              }
              swift_bridgeObjectRelease();
            }
            uint64_t v90 = v0[22];
            uint64_t v91 = v0[20];
            sub_1007D1B10();
            swift_allocError();
            swift_willThrow();
            uint64_t v92 = *(void (**)(void))(v90 + 8);
            sub_10019F148();
            v92();
            sub_10019F148();
            v92();
            sub_10019F148();
            v92();
            sub_10019F148();
            v92();
            sub_1007D3104(v91, (void (*)(void))type metadata accessor for DaylightData);
            sub_10019F148();
            v92();
            goto LABEL_14;
          }
LABEL_42:
          __break(1u);
          return withTaskGroup<A, B>(of:returning:isolation:body:)();
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
    }
    else
    {
      uint64_t v69 = v0[18];
      uint64_t v70 = v0[16];
      uint64_t v99 = v69 + *(int *)(sub_10017DF08(&qword_100E96378) + 80);
      sub_10018175C();
      v18();
      sub_10018175C();
      v18();
      sub_10018175C();
      v18();
      sub_1007D3158(v99, v70, (void (*)(void))type metadata accessor for EdgeSunEvents);
      uint64_t v71 = Date.secondsSinceMidnight(calendar:)();
      uint64_t v72 = Date.secondsSinceMidnight(calendar:)();
      uint64_t v73 = v71 - v72;
      if (!__OFSUB__(v71, v72))
      {
        uint64_t v74 = *(void (**)(void))(v0[22] + 16);
        sub_100162808();
        v74();
        Date.timeIntervalSince(_:)();
        uint64_t v75 = Date.formattedShortMonthAndDay(timeZone:)();
        uint64_t v66 = v76;
        Swift::String_optional v77 = Double.formatTimeDuration()();
        uint64_t countAndFlagsBits = v77.value._countAndFlagsBits;
        if (v77.value._object)
        {
          object = v77.value._object;
          uint64_t v104 = v73;
          uint64_t v78 = v0[22];
          sub_1007D3104(v0[16], (void (*)(void))type metadata accessor for EdgeSunEvents);
          uint64_t v68 = *(void (**)(void))(v78 + 8);
          sub_100183F78();
          v68();
          uint64_t v65 = v75;
          uint64_t v54 = v74;
          sub_100183F78();
          v68();
          uint64_t v67 = v104;
LABEL_33:
          sub_100183F78();
          v68();
          v0[54] = v65;
          v0[55] = v66;
          v0[52] = countAndFlagsBits;
          v0[53] = object;
          v0[50] = v68;
          v0[51] = v54;
          uint64_t v79 = v0[45];
          uint64_t v80 = v0[30];
          uint64_t v81 = v0[28];
          uint64_t v82 = v0[20];
          sub_1007BF71C();
          v0[3] = Dictionary.init(dictionaryLiteral:)();
          sub_10017DF08(&qword_100E65748);
          uint64_t v83 = (void *)swift_task_alloc();
          v0[56] = v83;
          v83[2] = v82;
          v83[3] = v110;
          v83[4] = v79;
          v83[5] = v67;
          v83[6] = v81;
          v83[7] = v108;
          v83[8] = v109;
          v83[9] = v80;
          v83[10] = v0 + 3;
          uint64_t v84 = (void *)swift_task_alloc();
          v0[57] = v84;
          *uint64_t v84 = v0;
          v84[1] = sub_1007CFE44;
          sub_1001A2480();
          return withTaskGroup<A, B>(of:returning:isolation:body:)();
        }
        uint64_t v86 = v0[22];
        uint64_t v87 = v0[20];
        uint64_t v88 = v0[16];
        swift_bridgeObjectRelease();
        sub_1007D1B10();
        swift_allocError();
        swift_willThrow();
        sub_1007D3104(v88, (void (*)(void))type metadata accessor for EdgeSunEvents);
        uint64_t v89 = *(void (**)(void))(v86 + 8);
        sub_10019F148();
        v89();
        sub_10019F148();
        v89();
        sub_10019F148();
        v89();
        sub_10019F148();
        v89();
        sub_10019F148();
        v89();
        sub_1007D3104(v87, (void (*)(void))type metadata accessor for DaylightData);
        sub_10019F148();
        v89();
LABEL_14:
        if (qword_100E627E8 != -1) {
          swift_once();
        }
        uint64_t v35 = type metadata accessor for Logger();
        sub_1002102B0(v35, (uint64_t)qword_100F51ED0);
        swift_errorRetain();
        swift_errorRetain();
        uint64_t v36 = Logger.logObject.getter();
        os_log_type_t v37 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v36, v37))
        {
          uint64_t v38 = (uint8_t *)swift_slowAlloc();
          uint64_t v39 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v38 = 138412290;
          swift_errorRetain();
          uint64_t v40 = _swift_stdlib_bridgeErrorToNSError();
          v0[2] = v40;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          void *v39 = v40;
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v36, v37, "Failed to generate SunriseSunsetMonthlyViewModel error:%@", v38, 0xCu);
          sub_10017DF08(&qword_100EAC3F0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_errorRelease();
          swift_errorRelease();
        }

        uint64_t v41 = v0[44];
        uint64_t v102 = v0[43];
        uint64_t v106 = v0[45];
        uint64_t v42 = v0[40];
        uint64_t v97 = v0[39];
        uint64_t v98 = v0[42];
        uint64_t v43 = v0[37];
        uint64_t v44 = v0[35];
        uint64_t v94 = v0[36];
        uint64_t v96 = v0[38];
        uint64_t v45 = v0[34];
        uint64_t v46 = (void *)v0[4];
        WeatherDescription.init(stringLiteral:)();
        swift_release();

        swift_errorRelease();
        sub_100178110(v45, (uint64_t *)&unk_100E73CA0);
        sub_100178110(v44, (uint64_t *)&unk_100E73CA0);
        (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v96, v94);
        (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v98, v97);
        void *v46 = _swiftEmptyArrayStorage;
        type metadata accessor for SunriseSunsetMonthlyViewModel();
        sub_10018175C();
        v47();
        (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v106, v102);
        goto LABEL_20;
      }
    }
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v14 = v0 + 32;
LABEL_8:
  sub_100178110(*v14, (uint64_t *)&unk_100E73CA0);
  if (qword_100E627E8 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_1002102B0(v19, (uint64_t)qword_100F51ED0);
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Failed to generate midnight", v22, 2u);
    swift_slowDealloc();
  }
  uint64_t v23 = v0[44];
  uint64_t v101 = v0[43];
  uint64_t v105 = v0[45];
  uint64_t v24 = v0[37];
  uint64_t v25 = v0[35];
  uint64_t v93 = v0[36];
  uint64_t v95 = v0[38];
  uint64_t v26 = v0[34];
  uint64_t v28 = v0[13];
  uint64_t v27 = v0[14];
  uint64_t v100 = v0[12];
  char v29 = (char *)v0[4];

  WeatherDescription.init(stringLiteral:)();
  swift_release();

  sub_100178110(v26, (uint64_t *)&unk_100E73CA0);
  sub_100178110(v25, (uint64_t *)&unk_100E73CA0);
  (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v95, v93);
  sub_100163348();
  v30();
  *(void *)char v29 = _swiftEmptyArrayStorage;
  uint64_t v31 = type metadata accessor for SunriseSunsetMonthlyViewModel();
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(&v29[*(int *)(v31 + 20)], v27, v100);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v105, v101);
LABEL_20:
  sub_10017E920();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1001627B4();
  return v48();
}

uint64_t sub_1007CFE44()
{
  sub_1000A9DE8();
  sub_100119470();
  uint64_t v1 = *v0;
  sub_100179D88();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1007CFF2C, 0, 0);
}

uint64_t sub_1007CFF2C()
{
  uint64_t v74 = v0;
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[49];
  swift_bridgeObjectRetain_n();
  uint64_t v3 = sub_100903740(v1);
  swift_bridgeObjectRelease();
  v73[0] = (uint64_t)v3;
  sub_1007CED18(v73);
  if (v2)
  {
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = (void *)v73[0];
    int64_t v6 = *(void *)(v73[0] + 16);
    if (v6)
    {
      uint64_t v7 = v0[9];
      uint64_t v61 = v0[8];
      v73[0] = (uint64_t)_swiftEmptyArrayStorage;
      sub_1007F3278(0, v6, 0);
      uint64_t v8 = (uint64_t)v5 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      uint64_t v60 = *(void *)(v7 + 72);
      uint64_t v63 = v0;
      do
      {
        int64_t v72 = v6;
        uint64_t v9 = (void (*)(void))v0[51];
        uint64_t v64 = (void (*)(uint64_t, uint64_t))v0[50];
        uint64_t v10 = v0[21];
        uint64_t v12 = v0[10];
        uint64_t v11 = v0[11];
        sub_10006DF38(v8, v11, &qword_100E96350);
        uint64_t v13 = *(int *)(v61 + 48);
        uint64_t v14 = (uint64_t *)(v12 + v13);
        uint64_t v15 = (uint64_t *)(v11 + v13);
        sub_100162808();
        v9();
        uint64_t v16 = v15[1];
        uint64_t v17 = v15[3];
        uint64_t v18 = v15[4];
        uint64_t v19 = v15[5];
        uint64_t v20 = v15[6];
        uint64_t v21 = v15[7];
        uint64_t v22 = v15[8];
        uint64_t v23 = v15[9];
        uint64_t v70 = v15[2];
        uint64_t v71 = *v15;
        *uint64_t v14 = *v15;
        v14[1] = v16;
        _OWORD v14[2] = v70;
        v14[3] = v17;
        uint64_t v66 = v20;
        uint64_t v68 = v18;
        v14[4] = v18;
        v14[5] = v19;
        v14[6] = v20;
        v14[7] = v21;
        v14[8] = v22;
        v14[9] = v23;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v64(v12, v10);
        sub_100178110(v11, &qword_100E96350);
        uint64_t v24 = (void *)v73[0];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1007F3278(0, v24[2] + 1, 1);
          uint64_t v24 = (void *)v73[0];
        }
        unint64_t v26 = v24[2];
        unint64_t v25 = v24[3];
        uint64_t v0 = v63;
        if (v26 >= v25 >> 1)
        {
          sub_1007F3278((char *)(v25 > 1), v26 + 1, 1);
          uint64_t v24 = (void *)v73[0];
        }
        v24[2] = v26 + 1;
        uint64_t v27 = &v24[10 * v26];
        v27[4] = v71;
        v27[5] = v16;
        v27[6] = v70;
        v27[7] = v17;
        v27[8] = v68;
        v27[9] = v19;
        v27[10] = v66;
        v27[11] = v21;
        v27[12] = v22;
        v27[13] = v23;
        v8 += v60;
        int64_t v6 = v72 - 1;
      }
      while (v72 != 1);
      swift_release();
    }
    else
    {
      swift_release();
      uint64_t v24 = _swiftEmptyArrayStorage;
    }
    uint64_t v28 = v0[53];
    uint64_t v49 = v0[54];
    uint64_t v50 = v0[55];
    uint64_t v47 = v0[52];
    double v57 = (void (*)(uint64_t, uint64_t))v0[50];
    double v55 = (void *)v0[47];
    uint64_t v53 = (void *)v0[48];
    uint64_t v56 = v0[35];
    uint64_t v54 = v0[34];
    uint64_t v69 = v0[30];
    uint64_t v52 = v0[29];
    uint64_t v65 = v0[28];
    uint64_t v51 = v0[21];
    uint64_t v67 = v0[20];
    uint64_t v48 = v0[14];
    uint64_t v59 = v0[13];
    uint64_t v62 = v0[12];
    double v58 = (char *)v0[4];
    id v29 = [self mainBundle];
    v30._uint64_t countAndFlagsBits = 0xD000000000000030;
    v76._uint64_t countAndFlagsBits = 0xD000000000000102;
    v76._object = (void *)0x8000000100CB3400;
    v30._object = (void *)0x8000000100CB33A0;
    v31._object = (void *)0x8000000100CB33E0;
    v31._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v30, (Swift::String_optional)0, (NSBundle)v29, v31, v76);

    sub_10017DF08(&qword_100E6E908);
    uint64_t v32 = type metadata accessor for WeatherDescription.Argument();
    sub_100179C0C();
    uint64_t v34 = v33;
    uint64_t v36 = *(void *)(v35 + 72);
    unint64_t v37 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_100C25ED0;
    uint64_t v39 = (void *)(v38 + v37);
    void *v39 = v47;
    v39[1] = v28;
    uint64_t v40 = *(void (**)(void))(v34 + 104);
    ((void (*)(void *, void, uint64_t))v40)(v39, enum case for WeatherDescription.Argument.time(_:), v32);
    uint64_t v41 = (void *)((char *)v39 + v36);
    *uint64_t v41 = v49;
    v41[1] = v50;
    v40();
    WeatherDescription.init(format:_:)();
    swift_release();

    v57(v52, v51);
    sub_100178110(v54, (uint64_t *)&unk_100E73CA0);
    sub_100178110(v56, (uint64_t *)&unk_100E73CA0);
    sub_100162F0C();
    v42();
    sub_100162F0C();
    v43();
    *(void *)double v58 = v24;
    uint64_t v44 = type metadata accessor for SunriseSunsetMonthlyViewModel();
    (*(void (**)(char *, uint64_t, uint64_t))(v59 + 32))(&v58[*(int *)(v44 + 20)], v48, v62);
    v57(v65, v51);
    sub_1007D3104(v67, (void (*)(void))type metadata accessor for DaylightData);
    v57(v69, v51);
    sub_100162F0C();
    v45();
    swift_bridgeObjectRelease();
    sub_10017E920();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1001627B4();
    return v46();
  }
}

uint64_t sub_1007D0658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 96) = v13;
  *(_OWORD *)(v8 + 80) = v12;
  *(void *)(v8 + 64) = a7;
  *(void *)(v8 + 72) = a8;
  *(void *)(v8 + 48) = a5;
  *(void *)(v8 + 56) = a6;
  *(void *)(v8 + 32) = a3;
  *(void *)(v8 + 40) = a4;
  *(void *)(v8 + 24) = a2;
  *(void *)(v8 + 104) = sub_10017DF08(&qword_100E65748);
  *(void *)(v8 + 112) = swift_task_alloc();
  *(void *)(v8 + 120) = swift_task_alloc();
  *(void *)(v8 + 128) = swift_task_alloc();
  sub_10017DF08(&qword_100E96380);
  *(void *)(v8 + 136) = swift_task_alloc();
  uint64_t v9 = sub_10017DF08(&qword_100E96388);
  *(void *)(v8 + 144) = v9;
  *(void *)(v8 + 152) = *(void *)(v9 - 8);
  *(void *)(v8 + 160) = swift_task_alloc();
  return _swift_task_switch(sub_1007D07BC, 0, 0);
}

uint64_t sub_1007D07BC()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = **(void **)(v0 + 32);
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 40);
  long long v6 = *(_OWORD *)(v0 + 64);
  long long v7 = *(_OWORD *)(v0 + 80);
  *(void *)(v4 + 16) = v2;
  *(_OWORD *)(v4 + 24) = v5;
  *(void *)(v4 + 40) = v1;
  *(_OWORD *)(v4 + 48) = v6;
  *(_OWORD *)(v4 + 64) = v7;
  swift_bridgeObjectRetain();
  sub_10031FA90((void (*)(char *))sub_1007D2C58, v4, v3);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  TaskGroup.makeAsyncIterator()();
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1007D08EC;
  uint64_t v9 = sub_1001A4844();
  return TaskGroup.Iterator.next(isolation:)(v9);
}

uint64_t sub_1007D08EC()
{
  sub_1000A9DE8();
  sub_100119470();
  uint64_t v1 = *v0;
  sub_100179D88();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1007D09B8, 0, 0);
}

uint64_t sub_1007D09B8()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[13];
  if (_s7Weather24LocationCompositionStateOwet_0(v1, 1, v2) == 1)
  {
    (*(void (**)(void, void))(v0[19] + 8))(v0[20], v0[18]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1001627B4();
    sub_1001A2480();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v5 = v0[16];
  uint64_t v46 = v0[14];
  uint64_t v47 = (uint64_t *)v0[12];
  uint64_t v6 = *(int *)(v2 + 48);
  uint64_t v7 = *(void *)(v1 + v6);
  uint64_t v49 = *(void *)(v1 + v6 + 8);
  uint64_t v9 = *(void *)(v1 + v6 + 16);
  uint64_t v8 = *(void *)(v1 + v6 + 24);
  uint64_t v52 = v0[15];
  uint64_t v53 = *(void *)(v1 + v6 + 32);
  uint64_t v54 = *(void *)(v1 + v6 + 40);
  uint64_t v55 = *(void *)(v1 + v6 + 48);
  uint64_t v56 = *(void *)(v1 + v6 + 56);
  uint64_t v10 = (void *)(v5 + v6);
  uint64_t v12 = *(void *)(v1 + v6 + 64);
  uint64_t v11 = *(void *)(v1 + v6 + 72);
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32))(v5, v1, v13);
  uint64_t v48 = v7;
  *uint64_t v10 = v7;
  v10[1] = v49;
  uint64_t v50 = v9;
  long long v10[2] = v9;
  v10[3] = v8;
  v10[4] = v53;
  v10[5] = v54;
  v10[6] = v55;
  v10[7] = v56;
  v10[8] = v12;
  v10[9] = v11;
  uint64_t v15 = (void *)(v52 + *(int *)(v2 + 48));
  uint64_t v45 = v14;
  uint64_t v16 = *(void (**)(void))(v14 + 16);
  v16();
  *uint64_t v15 = v7;
  v15[1] = v49;
  v15[2] = v9;
  v15[3] = v8;
  v15[4] = v53;
  v15[5] = v54;
  v15[6] = v55;
  v15[7] = v56;
  v15[8] = v12;
  v15[9] = v11;
  uint64_t v17 = (void *)(v46 + *(int *)(v2 + 48));
  uint64_t v51 = v13;
  uint64_t v18 = v16;
  v16();
  void *v17 = v7;
  v17[1] = v49;
  v17[2] = v9;
  v17[3] = v8;
  v17[4] = v53;
  v17[5] = v54;
  v17[6] = v55;
  v17[7] = v56;
  v17[8] = v12;
  v17[9] = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v20 = *v47;
  v0[2] = *v47;
  uint64_t *v47 = 0x8000000000000000;
  unint64_t v21 = sub_100246B34();
  uint64_t v23 = *(void *)(v20 + 16);
  BOOL v24 = (v22 & 1) == 0;
  Swift::Int v25 = v23 + v24;
  if (__OFADD__(v23, v24))
  {
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v26 = v21;
  char v27 = v22;
  sub_10017DF08(&qword_100E96390);
  if (!_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v25))
  {
LABEL_12:
    uint64_t v32 = v0[2];
    if (v27)
    {
      uint64_t v33 = (void *)(*(void *)(v32 + 56) + 80 * v26);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *uint64_t v33 = v48;
      v33[1] = v49;
      v33[2] = v50;
      v33[3] = v8;
      v33[4] = v53;
      v33[5] = v54;
      v33[6] = v55;
      v33[7] = v56;
      v33[8] = v12;
      v33[9] = v11;
      uint64_t v34 = v45;
      goto LABEL_16;
    }
    *(void *)(v32 + 8 * (v26 >> 6) + 64) |= 1 << v26;
    uint64_t v34 = v14;
    sub_100162808();
    v18();
    uint64_t v35 = (void *)(*(void *)(v32 + 56) + 80 * v26);
    void *v35 = v48;
    v35[1] = v49;
    v35[2] = v50;
    v35[3] = v8;
    v35[4] = v53;
    v35[5] = v54;
    v35[6] = v55;
    v35[7] = v56;
    v35[8] = v12;
    v35[9] = v11;
    uint64_t v36 = *(void *)(v32 + 16);
    BOOL v37 = __OFADD__(v36, 1);
    uint64_t v38 = v36 + 1;
    if (!v37)
    {
      *(void *)(v32 + 16) = v38;
LABEL_16:
      uint64_t v40 = v0[15];
      uint64_t v39 = v0[16];
      uint64_t v41 = v0[14];
      *(void *)v0[12] = v32;
      swift_bridgeObjectRelease();
      uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
      v42(v40, v51);
      sub_100178110(v39, &qword_100E65748);
      v42(v41, v51);
      uint64_t v43 = (void *)swift_task_alloc();
      v0[21] = v43;
      void *v43 = v0;
      v43[1] = sub_1007D08EC;
      sub_1001A4844();
      sub_1001A2480();
      return TaskGroup.Iterator.next(isolation:)();
    }
LABEL_20:
    __break(1u);
    return TaskGroup.Iterator.next(isolation:)();
  }
  unint64_t v28 = sub_100246B34();
  if ((v27 & 1) == (v29 & 1))
  {
    unint64_t v26 = v28;
    goto LABEL_12;
  }
  sub_1001A2480();
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_1007D0EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, void *a7, void *a8, uint64_t a9)
{
  uint64_t v63 = a2;
  uint64_t v61 = a7;
  uint64_t v62 = a8;
  unint64_t v58 = a6;
  uint64_t v59 = a3;
  uint64_t v60 = a5;
  uint64_t v55 = a4;
  uint64_t v53 = a1;
  uint64_t v57 = a9;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v67 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v66 = (char *)&v47 - v13;
  uint64_t v14 = type metadata accessor for TimeZone();
  uint64_t v64 = *(void *)(v14 - 8);
  uint64_t v65 = v14;
  uint64_t v54 = *(void *)(v64 + 64);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = v16;
  uint64_t v17 = sub_10017DF08(&qword_100E6CD88);
  uint64_t v18 = v17 - 8;
  uint64_t v52 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v52 + 64);
  __chkstk_darwin(v17);
  uint64_t v20 = sub_10017DF08(&qword_100E634B0);
  __chkstk_darwin(v20 - 8);
  char v22 = (char *)&v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = v22;
  uint64_t v23 = type metadata accessor for TaskPriority();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 1, 1, v23);
  uint64_t v24 = *(int *)(v18 + 56);
  uint64_t v51 = (uint64_t)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = v51 + v24;
  uint64_t v26 = v53 + v24;
  uint64_t v48 = v10;
  uint64_t v49 = v9;
  char v27 = *(void (**)(uint64_t))(v10 + 16);
  v27(v51);
  sub_1007D2C8C(v26, v25, (void (*)(void))type metadata accessor for MonthSunAverage);
  uint64_t v28 = v64;
  (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v16, v55, v65);
  ((void (*)(char *, unint64_t, uint64_t))v27)(v66, v58, v9);
  ((void (*)(char *, uint64_t, uint64_t))v27)(v67, v57, v9);
  unint64_t v29 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  unint64_t v30 = (v19 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (*(unsigned __int8 *)(v28 + 80) + v30 + 8) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  unint64_t v58 = (v54 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v32 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v33 = (v32 + 8 + v58) & ~v32;
  unint64_t v34 = (v11 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v34 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = (v32 + 8 + v35) & ~v32;
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = 0;
  *(void *)(v37 + 24) = 0;
  sub_10024D364(v51, v37 + v29, &qword_100E6CD88);
  *(void *)(v37 + v30) = v59;
  (*(void (**)(unint64_t, char *, uint64_t))(v64 + 32))(v37 + v31, v50, v65);
  *(void *)(v37 + v58) = v60;
  uint64_t v38 = v37 + v33;
  uint64_t v39 = v49;
  uint64_t v40 = *(void (**)(uint64_t, char *, uint64_t))(v48 + 32);
  v40(v38, v66, v49);
  uint64_t v42 = v61;
  uint64_t v41 = v62;
  *(void *)(v37 + v34) = v61;
  *(void *)(v37 + v35) = v41;
  v40(v37 + v36, v67, v39);
  swift_retain();
  id v43 = v42;
  id v44 = v41;
  uint64_t v45 = (uint64_t)v56;
  sub_10028CEA8((uint64_t)v56, (uint64_t)&unk_100E963A8, v37);
  return sub_100178110(v45, &qword_100E634B0);
}

uint64_t sub_1007D1314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 80) = v13;
  *(_OWORD *)(v8 + 64) = v12;
  *(void *)(v8 + 48) = a7;
  *(void *)(v8 + 56) = a8;
  *(void *)(v8 + 32) = a5;
  *(void *)(v8 + 40) = a6;
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a4;
  sub_10017DF08((uint64_t *)&unk_100E73CA0);
  *(void *)(v8 + 88) = swift_task_alloc();
  *(void *)(v8 + 96) = swift_task_alloc();
  type metadata accessor for MonthSunAverage(0);
  *(void *)(v8 + 104) = swift_task_alloc();
  *(void *)(v8 + 112) = swift_task_alloc();
  *(void *)(v8 + 120) = sub_10017DF08(&qword_100E6CD88);
  *(void *)(v8 + 128) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for Date();
  *(void *)(v8 + 136) = v9;
  *(void *)(v8 + 144) = *(void *)(v9 - 8);
  *(void *)(v8 + 152) = swift_task_alloc();
  *(void *)(v8 + 160) = swift_task_alloc();
  *(void *)(v8 + 168) = swift_task_alloc();
  return _swift_task_switch(sub_1007D14BC, 0, 0);
}

uint64_t sub_1007D14BC()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = (void *)v0[18];
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[16];
  uint64_t v80 = v0[14];
  id v82 = (id)v0[13];
  uint64_t v5 = (void *)v0[3];
  uint64_t v6 = *(int *)(v3 + 48);
  uint64_t v7 = v4 + v6;
  uint64_t v8 = (uint64_t)v5 + v6;
  uint64_t v9 = (void (*)(uint64_t, void *))v2[2];
  uint64_t v10 = (void *)v0[17];
  v9(v4, v5);
  sub_1007D2C8C(v8, v7, (void (*)(void))type metadata accessor for MonthSunAverage);
  uint64_t v89 = (void (*)(void))v2[4];
  ((void (*)(uint64_t, uint64_t, void *))v89)(v1, v4, v10);
  sub_1007D3104(v7, (void (*)(void))type metadata accessor for MonthSunAverage);
  uint64_t v86 = v3;
  uint64_t v11 = v4 + *(int *)(v3 + 48);
  uint64_t v90 = (void (*)(uint64_t, uint64_t, uint64_t))v9;
  ((void (*)(uint64_t, void *, void *))v9)(v4, v5, v10);
  uint64_t v87 = v8;
  sub_1007D2C8C(v8, v11, (void (*)(void))type metadata accessor for MonthSunAverage);
  sub_1007D3158(v11, v80, (void (*)(void))type metadata accessor for MonthSunAverage);
  uint64_t v88 = (void (*)(uint64_t, uint64_t))v2[1];
  sub_100163348();
  v12();
  uint64_t v13 = v82;
  sub_1007D2C8C(v80, (uint64_t)v82, (void (*)(void))type metadata accessor for MonthSunAverage);
  uint64_t v14 = sub_10017DF08(&qword_100E963A0);
  int v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 2, v14);
  if (v15)
  {
    if (v15 == 1)
    {
      v16.super.Class isa = sub_10019D910().super.isa;
      id v17 = sub_1001A33DC((uint64_t)v16.super.isa);

      uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v81 = v19;
      id v83 = (id)v18;

      v20.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
      id v21 = sub_100184B3C((uint64_t)v20.super.isa);

      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v77 = v23;
      id v78 = (id)v22;

      uint64_t v24 = Date.formattedTime(timeZone:)();
      uint64_t v74 = v25;
      uint64_t v75 = v24;
      uint64_t v26 = Date.formattedTime(timeZone:)();
      uint64_t v72 = v27;
      uint64_t v73 = v26;
      double v28 = 0.0;
      uint64_t v29 = 0;
    }
    else
    {
      v51.super.Class isa = sub_10019D910().super.isa;
      id v52 = sub_1001A33DC((uint64_t)v51.super.isa);

      uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v81 = v54;
      id v83 = (id)v53;

      v55.super.Class isa = Date._bridgeToObjectiveC()().super.isa;
      id v56 = sub_100184B3C((uint64_t)v55.super.isa);

      uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v77 = v58;
      id v78 = (id)v57;

      uint64_t v59 = Date.formattedTime(timeZone:)();
      uint64_t v74 = v60;
      uint64_t v75 = v59;
      uint64_t v61 = Date.formattedTime(timeZone:)();
      uint64_t v72 = v62;
      uint64_t v73 = v61;
      uint64_t v29 = 0;
      double v28 = 1.0;
    }
  }
  else
  {
    uint64_t v10 = v85;
    uint64_t v30 = v85[20];
    uint64_t v31 = v85[19];
    uint64_t v32 = v85[17];
    uint64_t v33 = v85[12];
    uint64_t v34 = v85[11];
    id v79 = (id)v85[9];
    id v84 = (id)v85[8];
    uint64_t v35 = v85[5];
    uint64_t v36 = v85[13] + *(int *)(v14 + 48);
    uint64_t v76 = v85[6];
    v89(v30);
    ((void (*)(uint64_t, uint64_t, uint64_t))v89)(v31, v36, v32);
    v90(v33, v30, v32);
    sub_1001855A8();
    v90(v34, v31, v32);
    _s7Weather24LocationCompositionStateOwst_0(v34, 0, 1, v32);
    sub_10031561C(v33, v34, v35, v76);
    double v28 = v37;
    sub_100178110(v34, (uint64_t *)&unk_100E73CA0);
    sub_100178110(v33, (uint64_t *)&unk_100E73CA0);
    v90(v33, v30, v32);
    sub_1001855A8();
    sub_100315E94(v33);
    uint64_t v29 = v38;
    sub_100178110(v33, (uint64_t *)&unk_100E73CA0);
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    id v40 = [v84 stringFromDate:isa];

    uint64_t v41 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v81 = v42;
    id v83 = (id)v41;

    Class v43 = Date._bridgeToObjectiveC()().super.isa;
    id v44 = [v79 stringFromDate:v43];

    uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v77 = v46;
    id v78 = (id)v45;

    uint64_t v47 = Date.formattedTime(timeZone:)();
    uint64_t v74 = v48;
    uint64_t v75 = v47;
    uint64_t v49 = Date.formattedTime(timeZone:)();
    uint64_t v72 = v50;
    uint64_t v73 = v49;
    v88(v31, v32);
    v88(v30, v32);
  }
  uint64_t v63 = v10[21];
  uint64_t v65 = v10[16];
  uint64_t v64 = v10[17];
  uint64_t v66 = v10[2];
  sub_1007D3104(v10[14], (void (*)(void))type metadata accessor for MonthSunAverage);
  v88(v63, v64);
  uint64_t v67 = (double *)(v66 + *(int *)(sub_10017DF08(&qword_100E65748) + 48));
  uint64_t v68 = v65 + *(int *)(v86 + 48);
  sub_100162808();
  v69();
  sub_1007D2C8C(v87, v68, (void (*)(void))type metadata accessor for MonthSunAverage);
  ((void (*)(uint64_t, uint64_t, uint64_t))v89)(v66, v65, v64);
  *(void *)uint64_t v67 = v83;
  *((void *)v67 + 1) = v81;
  *((void *)v67 + 2) = v78;
  *((void *)v67 + 3) = v77;
  *((void *)v67 + 4) = v75;
  *((void *)v67 + 5) = v74;
  *((void *)v67 + 6) = v73;
  *((void *)v67 + 7) = v72;
  v67[8] = v28;
  *((void *)v67 + 9) = v29;
  sub_1007D3104(v68, (void (*)(void))type metadata accessor for MonthSunAverage);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1001627B4();
  return v70();
}

unint64_t sub_1007D1B10()
{
  unint64_t result = qword_100E96360;
  if (!qword_100E96360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100E96360);
  }
  return result;
}

uint64_t sub_1007D1B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v10 = v2[6];
  uint64_t v11 = v2[7];
  long long v12 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v12;
  *long long v12 = v3;
  v12[1] = sub_100218DF8;
  return sub_1007D0658(a1, a2, v6, v7, v8, v9, v10, v11);
}

void sub_1007D1C5C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10017DF08(&qword_100E96350);
  uint64_t v129 = *(void *)(v4 - 8);
  uint64_t v130 = v4;
  __chkstk_darwin(v4);
  uint64_t v126 = (uint64_t)&v119 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v136 = (uint64_t)&v119 - v7;
  __chkstk_darwin(v8);
  uint64_t v133 = (uint64_t)&v119 - v9;
  __chkstk_darwin(v10);
  uint64_t v132 = (uint64_t)&v119 - v11;
  Swift::Int v12 = a1[1];
  Swift::Int v13 = _minimumMergeRunLength(_:)(v12);
  if (v13 >= v12)
  {
    if ((v12 & 0x8000000000000000) == 0)
    {
      if (v12) {
        sub_1007D25EC(0, v12, 1, a1);
      }
      return;
    }
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
    goto LABEL_146;
  }
  Swift::Int v14 = v13;
  uint64_t v122 = sub_100AD5330(v12 / 2);
  uint64_t v123 = v12;
  unint64_t v128 = v15;
  if (v12 <= 0)
  {
    id v17 = (char *)_swiftEmptyArrayStorage;
    unint64_t v60 = _swiftEmptyArrayStorage[2];
LABEL_104:
    if (v60 < 2) {
      goto LABEL_118;
    }
    uint64_t v111 = *a1;
    while (1)
    {
      unint64_t v112 = v60 - 2;
      if (v60 < 2) {
        break;
      }
      if (!v111) {
        goto LABEL_150;
      }
      uint64_t v113 = v17;
      uint64_t v114 = v17 + 32;
      uint64_t v115 = *(void *)&v17[16 * v112 + 32];
      uint64_t v116 = *(void *)&v17[16 * v60 + 24];
      sub_1007D2860(v111 + *(void *)(v129 + 72) * v115, v111 + *(void *)(v129 + 72) * *(void *)&v114[16 * v60 - 16], v111 + *(void *)(v129 + 72) * v116, v128);
      if (v2) {
        goto LABEL_116;
      }
      if (v116 < v115) {
        goto LABEL_137;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v113 = sub_10031515C();
      }
      if (v112 >= *((void *)v113 + 2)) {
        goto LABEL_138;
      }
      uint64_t v117 = &v113[16 * v112 + 32];
      *(void *)uint64_t v117 = v115;
      *((void *)v117 + 1) = v116;
      unint64_t v118 = *((void *)v113 + 2);
      if (v60 > v118) {
        goto LABEL_139;
      }
      id v17 = v113;
      memmove(&v113[16 * v60 + 16], &v113[16 * v60 + 32], 16 * (v118 - v60));
      *((void *)v113 + 2) = v118 - 1;
      unint64_t v60 = v118 - 1;
      if (v118 <= 2) {
        goto LABEL_118;
      }
    }
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
    goto LABEL_142;
  }
  Swift::Int v121 = v14;
  Swift::Int v16 = 0;
  id v17 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v18 = v12;
  unint64_t v135 = a1;
  while (1)
  {
    Swift::Int v19 = v16;
    Swift::Int v20 = v16 + 1;
    Swift::Int v127 = v16;
    if (v16 + 1 >= v18)
    {
      Swift::Int v37 = v16 + 1;
    }
    else
    {
      uint64_t v124 = v2;
      uint64_t v21 = *a1;
      uint64_t v22 = *(void *)(v129 + 72);
      uint64_t v23 = v132;
      sub_10006DF38(*a1 + v22 * v20, v132, &qword_100E96350);
      uint64_t v24 = v21 + v22 * v19;
      uint64_t v25 = v133;
      sub_10006DF38(v24, v133, &qword_100E96350);
      LODWORD(v134) = static Date.< infix(_:_:)();
      uint64_t v26 = v25;
      Swift::Int v19 = v127;
      sub_100178110(v26, &qword_100E96350);
      sub_100178110(v23, &qword_100E96350);
      Swift::Int v27 = v19 + 2;
      uint64_t v137 = v22;
      uint64_t v131 = v21;
      if (v19 + 2 >= v18)
      {
        Swift::Int v30 = v19 + 2;
        uint64_t v36 = v22;
      }
      else
      {
        uint64_t v28 = v22 * v20;
        uint64_t v29 = v21;
        Swift::Int v30 = v27;
        uint64_t v31 = v22 * v27;
        while (1)
        {
          Swift::Int v32 = v18;
          uint64_t v33 = v132;
          sub_10006DF38(v29 + v31, v132, &qword_100E96350);
          uint64_t v34 = v133;
          sub_10006DF38(v29 + v28, v133, &qword_100E96350);
          int v35 = static Date.< infix(_:_:)();
          sub_100178110(v34, &qword_100E96350);
          sub_100178110(v33, &qword_100E96350);
          if ((v134 ^ v35)) {
            break;
          }
          uint64_t v36 = v137;
          v29 += v137;
          ++v30;
          Swift::Int v18 = v32;
          if (v30 >= v32)
          {
            Swift::Int v30 = v32;
            a1 = v135;
            Swift::Int v19 = v127;
            goto LABEL_13;
          }
        }
        a1 = v135;
        Swift::Int v19 = v127;
        Swift::Int v18 = v32;
        uint64_t v36 = v137;
      }
LABEL_13:
      if (v134)
      {
        if (v30 < v19) {
          goto LABEL_143;
        }
        Swift::Int v37 = v30;
        if (v19 < v30)
        {
          Swift::Int v134 = v18;
          uint64_t v120 = v17;
          uint64_t v38 = 0;
          uint64_t v39 = v36 * (v30 - 1);
          uint64_t v40 = v30 * v36;
          uint64_t v41 = v19 * v36;
          uint64_t v42 = v131;
          do
          {
            if (v19 != v37 + v38 - 1)
            {
              if (!v42) {
                goto LABEL_149;
              }
              sub_10024D364(v42 + v41, v126, &qword_100E96350);
              if (v41 < v39 || v42 + v41 >= (unint64_t)(v42 + v40))
              {
                swift_arrayInitWithTakeFrontToBack();
              }
              else if (v41 != v39)
              {
                swift_arrayInitWithTakeBackToFront();
              }
              sub_10024D364(v126, v42 + v39, &qword_100E96350);
              a1 = v135;
              Swift::Int v37 = v30;
              uint64_t v36 = v137;
            }
            ++v19;
            --v38;
            v39 -= v36;
            v40 -= v36;
            v41 += v36;
          }
          while (v19 < v37 + v38);
          id v17 = v120;
          uint64_t v2 = v124;
          Swift::Int v19 = v127;
          Swift::Int v18 = v134;
          goto LABEL_32;
        }
      }
      else
      {
        Swift::Int v37 = v30;
      }
      uint64_t v2 = v124;
    }
LABEL_32:
    if (v37 < v18)
    {
      if (__OFSUB__(v37, v19)) {
        goto LABEL_141;
      }
      if (v37 - v19 < v121)
      {
        if (__OFADD__(v19, v121)) {
          goto LABEL_144;
        }
        if (v19 + v121 >= v18) {
          Swift::Int v44 = v18;
        }
        else {
          Swift::Int v44 = v19 + v121;
        }
        if (v44 < v19) {
          goto LABEL_145;
        }
        if (v37 != v44)
        {
          uint64_t v120 = v17;
          uint64_t v124 = v2;
          Swift::Int v125 = v44;
          uint64_t v45 = *(void *)(v129 + 72);
          uint64_t v137 = v45 * (v37 - 1);
          uint64_t v131 = v45;
          Swift::Int v46 = v37 * v45;
          do
          {
            uint64_t v47 = 0;
            Swift::Int v134 = v37;
            while (1)
            {
              uint64_t v48 = *a1;
              Swift::Int v49 = v46;
              uint64_t v50 = v46 + v47 + *a1;
              NSDate v51 = a1;
              uint64_t v52 = v132;
              sub_10006DF38(v50, v132, &qword_100E96350);
              uint64_t v53 = v133;
              sub_10006DF38(v137 + v47 + v48, v133, &qword_100E96350);
              LOBYTE(v48) = static Date.< infix(_:_:)();
              sub_100178110(v53, &qword_100E96350);
              sub_100178110(v52, &qword_100E96350);
              if ((v48 & 1) == 0) {
                break;
              }
              uint64_t v54 = *v51;
              if (!*v51) {
                goto LABEL_147;
              }
              Swift::Int v46 = v49;
              uint64_t v55 = v54 + v137 + v47;
              sub_10024D364(v54 + v49 + v47, v136, &qword_100E96350);
              swift_arrayInitWithTakeFrontToBack();
              sub_10024D364(v136, v55, &qword_100E96350);
              v47 -= v131;
              ++v19;
              Swift::Int v56 = v134;
              a1 = v135;
              if (v134 == v19) {
                goto LABEL_48;
              }
            }
            Swift::Int v56 = v134;
            a1 = v51;
            Swift::Int v46 = v49;
LABEL_48:
            Swift::Int v37 = v56 + 1;
            v137 += v131;
            v46 += v131;
            Swift::Int v19 = v127;
          }
          while (v37 != v125);
          Swift::Int v37 = v125;
          uint64_t v2 = v124;
          id v17 = v120;
        }
      }
    }
    if (v37 < v19) {
      goto LABEL_140;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v134 = v37;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      id v17 = sub_1001AA1B0(0, *((void *)v17 + 2) + 1, 1, v17);
    }
    unint64_t v59 = *((void *)v17 + 2);
    unint64_t v58 = *((void *)v17 + 3);
    unint64_t v60 = v59 + 1;
    if (v59 >= v58 >> 1) {
      id v17 = sub_1001AA1B0((char *)(v58 > 1), v59 + 1, 1, v17);
    }
    *((void *)v17 + 2) = v60;
    uint64_t v61 = v17 + 32;
    uint64_t v62 = &v17[16 * v59 + 32];
    Swift::Int v63 = v134;
    *(void *)uint64_t v62 = v19;
    *((void *)v62 + 1) = v63;
    if (v59) {
      break;
    }
    unint64_t v60 = 1;
LABEL_98:
    Swift::Int v18 = a1[1];
    Swift::Int v16 = v134;
    if (v134 >= v18) {
      goto LABEL_104;
    }
  }
  while (1)
  {
    unint64_t v64 = v60 - 1;
    if (v60 >= 4)
    {
      uint64_t v69 = &v61[16 * v60];
      uint64_t v70 = *((void *)v69 - 8);
      uint64_t v71 = *((void *)v69 - 7);
      BOOL v75 = __OFSUB__(v71, v70);
      uint64_t v72 = v71 - v70;
      if (v75) {
        goto LABEL_125;
      }
      uint64_t v74 = *((void *)v69 - 6);
      uint64_t v73 = *((void *)v69 - 5);
      BOOL v75 = __OFSUB__(v73, v74);
      uint64_t v67 = v73 - v74;
      char v68 = v75;
      if (v75) {
        goto LABEL_126;
      }
      unint64_t v76 = v60 - 2;
      uint64_t v77 = &v61[16 * v60 - 32];
      uint64_t v79 = *(void *)v77;
      uint64_t v78 = *((void *)v77 + 1);
      BOOL v75 = __OFSUB__(v78, v79);
      uint64_t v80 = v78 - v79;
      if (v75) {
        goto LABEL_127;
      }
      BOOL v75 = __OFADD__(v67, v80);
      uint64_t v81 = v67 + v80;
      if (v75) {
        goto LABEL_129;
      }
      if (v81 >= v72)
      {
        uint64_t v99 = &v61[16 * v64];
        uint64_t v101 = *(void *)v99;
        uint64_t v100 = *((void *)v99 + 1);
        BOOL v75 = __OFSUB__(v100, v101);
        uint64_t v102 = v100 - v101;
        if (v75) {
          goto LABEL_135;
        }
        BOOL v92 = v67 < v102;
        goto LABEL_87;
      }
    }
    else
    {
      if (v60 != 3)
      {
        uint64_t v93 = *((void *)v17 + 4);
        uint64_t v94 = *((void *)v17 + 5);
        BOOL v75 = __OFSUB__(v94, v93);
        uint64_t v86 = v94 - v93;
        char v87 = v75;
        goto LABEL_81;
      }
      uint64_t v66 = *((void *)v17 + 4);
      uint64_t v65 = *((void *)v17 + 5);
      BOOL v75 = __OFSUB__(v65, v66);
      uint64_t v67 = v65 - v66;
      char v68 = v75;
    }
    if (v68) {
      goto LABEL_128;
    }
    unint64_t v76 = v60 - 2;
    id v82 = &v61[16 * v60 - 32];
    uint64_t v84 = *(void *)v82;
    uint64_t v83 = *((void *)v82 + 1);
    BOOL v85 = __OFSUB__(v83, v84);
    uint64_t v86 = v83 - v84;
    char v87 = v85;
    if (v85) {
      goto LABEL_130;
    }
    uint64_t v88 = &v61[16 * v64];
    uint64_t v90 = *(void *)v88;
    uint64_t v89 = *((void *)v88 + 1);
    BOOL v75 = __OFSUB__(v89, v90);
    uint64_t v91 = v89 - v90;
    if (v75) {
      goto LABEL_132;
    }
    if (__OFADD__(v86, v91)) {
      goto LABEL_134;
    }
    if (v86 + v91 >= v67)
    {
      BOOL v92 = v67 < v91;
LABEL_87:
      if (v92) {
        unint64_t v64 = v76;
      }
      goto LABEL_89;
    }
LABEL_81:
    if (v87) {
      goto LABEL_131;
    }
    uint64_t v95 = &v61[16 * v64];
    uint64_t v97 = *(void *)v95;
    uint64_t v96 = *((void *)v95 + 1);
    BOOL v75 = __OFSUB__(v96, v97);
    uint64_t v98 = v96 - v97;
    if (v75) {
      goto LABEL_133;
    }
    if (v98 < v86) {
      goto LABEL_98;
    }
LABEL_89:
    unint64_t v103 = v64 - 1;
    if (v64 - 1 >= v60)
    {
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
      goto LABEL_136;
    }
    uint64_t v104 = *a1;
    if (!*a1) {
      goto LABEL_148;
    }
    uint64_t v105 = v17;
    uint64_t v106 = &v61[16 * v103];
    uint64_t v107 = *(void *)v106;
    uint64_t v108 = &v61[16 * v64];
    uint64_t v109 = *((void *)v108 + 1);
    sub_1007D2860(v104 + *(void *)(v129 + 72) * *(void *)v106, v104 + *(void *)(v129 + 72) * *(void *)v108, v104 + *(void *)(v129 + 72) * v109, v128);
    if (v2) {
      break;
    }
    if (v109 < v107) {
      goto LABEL_122;
    }
    if (v64 > *((void *)v105 + 2)) {
      goto LABEL_123;
    }
    *(void *)uint64_t v106 = v107;
    *(void *)&v61[16 * v103 + 8] = v109;
    unint64_t v110 = *((void *)v105 + 2);
    if (v64 >= v110) {
      goto LABEL_124;
    }
    id v17 = v105;
    unint64_t v60 = v110 - 1;
    memmove(&v61[16 * v64], v108 + 16, 16 * (v110 - 1 - v64));
    *((void *)v105 + 2) = v110 - 1;
    a1 = v135;
    if (v110 <= 2) {
      goto LABEL_98;
    }
  }
LABEL_116:
  swift_bridgeObjectRelease();
  if (v123 >= -1) {
    goto LABEL_119;
  }
  __break(1u);
LABEL_118:
  swift_bridgeObjectRelease();
  if (v123 >= -1)
  {
LABEL_119:
    *(void *)(v122 + 16) = 0;
    swift_bridgeObjectRelease();
    return;
  }
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
}

void sub_1007D25EC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v24 = a1;
  uint64_t v25 = sub_10017DF08(&qword_100E96350);
  __chkstk_darwin(v25);
  uint64_t v29 = (uint64_t)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v26 = (uint64_t)&v22 - v9;
  __chkstk_darwin(v10);
  Swift::Int v13 = (char *)&v22 - v12;
  uint64_t v28 = a3;
  uint64_t v23 = a2;
  if (a3 != a2)
  {
    uint64_t v14 = *(void *)(v11 + 72);
    uint64_t v31 = v14 * (v28 - 1);
    uint64_t v27 = v14;
    uint64_t v30 = v14 * v28;
    while (2)
    {
      uint64_t v15 = 0;
      uint64_t v16 = v24;
      do
      {
        uint64_t v17 = *a4;
        sub_10006DF38(v30 + v15 + *a4, (uint64_t)v13, &qword_100E96350);
        uint64_t v18 = v26;
        sub_10006DF38(v31 + v15 + v17, v26, &qword_100E96350);
        LOBYTE(v17) = static Date.< infix(_:_:)();
        sub_100178110(v18, &qword_100E96350);
        sub_100178110((uint64_t)v13, &qword_100E96350);
        if ((v17 & 1) == 0) {
          break;
        }
        uint64_t v19 = *a4;
        if (!*a4)
        {
          __break(1u);
          return;
        }
        Swift::Int v20 = a4;
        uint64_t v21 = v19 + v31 + v15;
        sub_10024D364(v19 + v30 + v15, v29, &qword_100E96350);
        swift_arrayInitWithTakeFrontToBack();
        sub_10024D364(v29, v21, &qword_100E96350);
        v15 -= v27;
        ++v16;
        a4 = v20;
      }
      while (v28 != v16);
      v31 += v27;
      v30 += v27;
      if (++v28 != v23) {
        continue;
      }
      break;
    }
  }
}

void sub_1007D2860(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v51 = sub_10017DF08(&qword_100E96350);
  __chkstk_darwin(v51);
  uint64_t v52 = (uint64_t)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v45 - v10;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_75:
    __break(1u);
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  int64_t v14 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_75;
  }
  int64_t v16 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_76;
  }
  uint64_t v18 = v14 / v13;
  uint64_t v19 = v16 / v13;
  uint64_t v46 = v13;
  if (v14 / v13 >= v16 / v13)
  {
    sub_1007EB020(a2, v16 / v13);
    unint64_t v20 = a4 + v19 * v13;
    if (v19 * v13 < 1 || a1 >= a2) {
      goto LABEL_69;
    }
    unint64_t v48 = a1;
    uint64_t v49 = -v13;
    unint64_t v47 = a4;
    while (1)
    {
      unint64_t v30 = a3;
      uint64_t v31 = v49;
      a3 += v49;
      unint64_t v50 = v20 + v49;
      unint64_t v32 = v20;
      sub_10006DF38(v20 + v49, (uint64_t)v11, &qword_100E96350);
      unint64_t v33 = a2 + v31;
      uint64_t v34 = a2 + v31;
      uint64_t v35 = (uint64_t)v11;
      uint64_t v36 = v52;
      sub_10006DF38(v34, v52, &qword_100E96350);
      char v37 = static Date.< infix(_:_:)();
      uint64_t v38 = v36;
      uint64_t v11 = (char *)v35;
      sub_100178110(v38, &qword_100E96350);
      sub_100178110(v35, &qword_100E96350);
      if (v37)
      {
        unint64_t v20 = v32;
        if (v30 >= a2 && a3 < a2)
        {
          unint64_t v41 = v48;
          if (v30 != a2) {
            swift_arrayInitWithTakeBackToFront();
          }
          a2 = v33;
          a4 = v47;
          goto LABEL_64;
        }
        swift_arrayInitWithTakeFrontToBack();
        a2 = v33;
      }
      else if (v30 < v32 || a3 >= v32)
      {
        unint64_t v20 = v50;
        swift_arrayInitWithTakeFrontToBack();
      }
      else
      {
        unint64_t v20 = v50;
        if (v30 != v32) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      a4 = v47;
      unint64_t v41 = v48;
LABEL_64:
      if (v20 <= a4 || a2 <= v41)
      {
        uint64_t v13 = v46;
        goto LABEL_69;
      }
    }
  }
  sub_1007EB020(a1, v14 / v13);
  unint64_t v20 = a4 + v18 * v13;
  unint64_t v50 = a3;
  if (v18 * v13 >= 1 && a2 < a3)
  {
    uint64_t v22 = v52;
    do
    {
      sub_10006DF38(a2, (uint64_t)v11, &qword_100E96350);
      sub_10006DF38(a4, v22, &qword_100E96350);
      char v23 = static Date.< infix(_:_:)();
      sub_100178110(v22, &qword_100E96350);
      sub_100178110((uint64_t)v11, &qword_100E96350);
      if (v23)
      {
        unint64_t v24 = a2 + v13;
        if (a1 < a2 || a1 >= v24)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a2)
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      else
      {
        unint64_t v26 = a4 + v13;
        if (a1 < a4 || a1 >= v26)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (a1 != a4)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        unint64_t v24 = a2;
        a4 = v26;
        uint64_t v13 = v46;
      }
      a1 += v13;
      BOOL v28 = a4 >= v20 || v24 >= v50;
      a2 = v24;
    }
    while (!v28);
  }
LABEL_69:
  int64_t v43 = v20 - a4;
  if (v13 != -1 || v43 != 0x8000000000000000)
  {
    sub_1007EB020(a4, v43 / v13);
    return;
  }
LABEL_77:
  __break(1u);
}

uint64_t sub_1007D2C58(uint64_t a1)
{
  return sub_1007D0EA8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void **)(v1 + 56), *(void **)(v1 + 64), *(void *)(v1 + 72));
}

uint64_t sub_1007D2C8C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_1007D2CE0()
{
  uint64_t v1 = (int *)(sub_10017DF08(&qword_100E6CD88) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v19 = *(void *)(*(void *)v1 + 64);
  type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v18 = *(void *)(v5 + 64);
  uint64_t v6 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v8 = v7;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = *(void *)(v10 + 64);
  swift_unknownObjectRelease();
  uint64_t v12 = *(void (**)(void))(v8 + 8);
  sub_1001D1DE8();
  v12();
  uint64_t v13 = v0 + v2 + v1[14];
  uint64_t v14 = sub_10017DF08(&qword_100E963A0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v13, 2, v14))
  {
    sub_1001D1DE8();
    v12();
    ((void (*)(uint64_t, uint64_t))v12)(v13 + *(int *)(v14 + 48), v6);
  }
  unint64_t v15 = (v11
       + ((v9 + 8 + ((v18 + ((((v19 + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + v4 + 8) & ~v4) + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v9)
       + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  sub_100162F0C();
  v16();
  sub_1001D1DE8();
  v12();

  sub_1001D1DE8();
  v12();

  return swift_deallocObject();
}

uint64_t sub_1007D2F2C(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E6CD88);
  sub_100164920(v2);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v6 = (*(void *)(v5 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = type metadata accessor for TimeZone();
  sub_100164920(v7);
  unint64_t v9 = (v6 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v11 = (*(void *)(v10 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = type metadata accessor for Date();
  sub_100164920(v12);
  unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 8 + v11) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = *(void *)(v1 + 16);
  uint64_t v16 = *(void *)(v1 + 24);
  uint64_t v17 = *(void *)(v1 + v6);
  uint64_t v18 = *(void *)(v1 + v11);
  uint64_t v19 = v1 + v14;
  unint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v22 + 16) = v20;
  *unint64_t v20 = v22;
  v20[1] = sub_100214FB0;
  return sub_1007D1314(a1, v15, v16, v1 + v4, v17, v1 + v9, v18, v19);
}

uint64_t sub_1007D3104(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_1007D3158(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for SunriseSunsetMonthlyViewModelFactory.FactoryError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1007D3248);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SunriseSunsetMonthlyViewModelFactory.FactoryError()
{
  return &type metadata for SunriseSunsetMonthlyViewModelFactory.FactoryError;
}

unint64_t sub_1007D3284()
{
  unint64_t result = qword_100E963B0;
  if (!qword_100E963B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E963B0);
  }
  return result;
}

uint64_t sub_1007D32D0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E96460);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v21)
  {
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E64B30);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (result)
    {
      uint64_t v5 = result;
      uint64_t v6 = sub_1000DF0C4((uint64_t)v20, v21);
      __chkstk_darwin(v6);
      uint64_t v8 = (void *)((char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v9 + 16))(v8);
      uint64_t v10 = *v8;
      uint64_t v11 = type metadata accessor for NotificationsOptInInteractor();
      v19[3] = v11;
      v19[4] = &off_100E15018;
      v19[0] = v10;
      uint64_t v12 = type metadata accessor for NotificationsOptInModule();
      uint64_t v13 = (void *)swift_allocObject();
      uint64_t v14 = sub_1000DF0C4((uint64_t)v19, v11);
      __chkstk_darwin(v14);
      uint64_t v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v17 + 16))(v16);
      uint64_t v18 = *v16;
      v13[5] = v11;
      v13[6] = &off_100E15018;
      _OWORD v13[2] = v18;
      v13[7] = v5;
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v19);
      uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v20);
      a2[3] = v12;
      a2[4] = &off_100E3B208;
      *a2 = v13;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1007D353C@<X0>(uint64_t *a1@<X8>)
{
  return sub_10021B534((uint64_t (*)(void))type metadata accessor for NotificationsOptInStatusFactory, (uint64_t)&off_100E1F2E8, a1);
}

uint64_t sub_1007D355C()
{
  sub_10017DF08(&qword_100E96460);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E96468);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E64B30);
  RegistrationContainer.register<A>(_:name:factory:)();

  return swift_release();
}

uint64_t sub_1007D3630@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v12)
  {
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v10)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B60);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v9)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E96470);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v7)
  {
    uint64_t v5 = type metadata accessor for NotificationsOptInInteractor();
    swift_allocObject();
    uint64_t result = (uint64_t)sub_1003F6064(v12, v13, v14, v15, v10, v11, &v8, &v6);
    a2[3] = v5;
    a2[4] = (uint64_t)&off_100E15018;
    *a2 = result;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1007D37D8@<X0>(uint64_t *a1@<X8>)
{
  return sub_10021B534((uint64_t (*)(void))type metadata accessor for NotificationsOptInInputFactory, (uint64_t)&off_100E25598, a1);
}

uint64_t sub_1007D37F8(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v3 = v20;
  if (!v20)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = v22;
  uint64_t v4 = v23;
  uint64_t v6 = v21;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E96468);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v19)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v7 = *sub_1001B1E64(v18, v19);
  uint64_t v16 = type metadata accessor for NotificationsOptInInputFactory();
  uint64_t v17 = &off_100E25598;
  v15[0] = v7;
  sub_10020D948((uint64_t)v15, (uint64_t)v14);
  uint64_t v8 = swift_allocObject();
  sub_1001262E4(v14, v8 + 16);
  swift_retain();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v15);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v18);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1007D3B98;
  *(void *)(v9 + 24) = v8;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DE68);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v19)
  {
    uint64_t v10 = *sub_1001B1E64(v18, v19);
    uint64_t v16 = type metadata accessor for NotificationsOptInViewModelFactory();
    uint64_t v17 = &off_100E2BA78;
    v15[0] = v10;
    sub_10020D948((uint64_t)v15, (uint64_t)v14);
    uint64_t v11 = swift_allocObject();
    sub_1001262E4(v14, v11 + 16);
    swift_retain();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v15);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v18);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = sub_1007D3BA0;
    *(void *)(v12 + 24) = v11;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = sub_1007D3BA8;
    *(void *)(v13 + 24) = v12;
    sub_10017DF08(&qword_100E64B30);
    swift_allocObject();
    return sub_10025ADEC(v3, v6, v5, v4, sub_10025969C, 0, sub_100137F50, v9, sub_1007D3C0C, v13);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1007D3AD4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_10070E274(a1, a3);
}

uint64_t sub_1007D3B20(uint64_t a1, void *a2)
{
  return sub_10087ACD0(a1) & 0xFF01FFFFLL;
}

uint64_t sub_1007D3B60()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_1007D3B98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1007D3AD4(a1, (void *)(v2 + 16), a2);
}

uint64_t sub_1007D3BA0(uint64_t a1)
{
  return sub_1007D3B20(a1, (void *)(v1 + 16));
}

uint64_t sub_1007D3BA8()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 0xFF01FFFFLL;
}

uint64_t sub_1007D3BD4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1007D3C0C@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_1007D3C48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v4 = type metadata accessor for SearchLocation();
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_100185A80(v6, v48);
  uint64_t v7 = type metadata accessor for Location.Identifier();
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v51 = v9;
  sub_100129064();
  type metadata accessor for LocationModel();
  sub_100179C0C();
  uint64_t v53 = v11;
  uint64_t v54 = v10;
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v52 = v12;
  uint64_t v55 = type metadata accessor for LocationOfInterest();
  sub_100179C0C();
  uint64_t v49 = v13;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10017DF08(&qword_100E63508);
  uint64_t v18 = sub_100109308(v17);
  __chkstk_darwin(v18);
  sub_100162F18();
  type metadata accessor for Location();
  sub_100179C0C();
  __chkstk_darwin(v19);
  sub_10016278C();
  __chkstk_darwin(v20);
  type metadata accessor for PreviewLocation();
  sub_100162E4C();
  __chkstk_darwin(v21);
  sub_10016278C();
  uint64_t v24 = v22 - v23;
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v48 - v26;
  uint64_t v56 = a1;
  sub_10018D06C(a1, (uint64_t)&v48 - v26, (void (*)(void))type metadata accessor for PreviewLocation);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v44 = v49;
      uint64_t v45 = v55;
      sub_1001627D4();
      v46();
      LocationOfInterest.location.getter();
      sub_100162808();
      v47();
      _s7Weather24LocationCompositionStateOwst_0(v2, 0, 1, v45);
      LocationModel.init(location:locationOfInterest:)();
      sub_10018CFC4(v56, (void (*)(void))type metadata accessor for PreviewLocation);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v16, v45);
      break;
    case 2u:
      uint64_t v33 = v50;
      sub_10017DE2C((uint64_t)v27, v50, (void (*)(void))type metadata accessor for SearchLocation);
      uint64_t v34 = sub_10017DF08(&qword_100E63870);
      uint64_t v35 = v52;
      uint64_t v36 = v52 + *(int *)(v34 + 48);
      uint64_t v37 = v56;
      sub_10018D06C(v56, v24, (void (*)(void))type metadata accessor for PreviewLocation);
      sub_10081B8DC();
      sub_10081BCB4();
      sub_10081BFBC();
      sub_1001A1868();
      sub_10018CFC4(v24, (void (*)(void))type metadata accessor for PreviewLocation);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      SavedLocation.Placeholder.init(identifier:searchTitle:searchSubtitle:)();
      sub_10018CFC4(v37, (void (*)(void))type metadata accessor for PreviewLocation);
      uint64_t v38 = type metadata accessor for SearchLocation;
      uint64_t v39 = v33;
      goto LABEL_5;
    case 3u:
      swift_bridgeObjectRelease();
      uint64_t v40 = sub_10017DF08(&qword_100E63870);
      uint64_t v35 = v52;
      uint64_t v36 = v52 + *(int *)(v40 + 48);
      uint64_t v41 = v56;
      sub_10018D06C(v56, v24, (void (*)(void))type metadata accessor for PreviewLocation);
      sub_10081B8DC();
      sub_10081BCB4();
      sub_10081BFBC();
      sub_1001A1868();
      sub_10018CFC4(v24, (void (*)(void))type metadata accessor for PreviewLocation);
      SavedLocation.Placeholder.init(identifier:searchTitle:searchSubtitle:)();
      uint64_t v39 = v41;
      uint64_t v38 = type metadata accessor for PreviewLocation;
LABEL_5:
      sub_10018CFC4(v39, (void (*)(void))v38);
      type metadata accessor for SavedLocation();
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0(v36, 1, 1, v55);
      uint64_t v43 = v53;
      uint64_t v42 = v54;
      (*(void (**)(uint64_t, void, uint64_t))(v53 + 104))(v35, enum case for LocationModel.saved(_:), v54);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v43 + 32))(v57, v35, v42);
      break;
    default:
      sub_1001627D4();
      v28();
      sub_100162808();
      v29();
      _s7Weather24LocationCompositionStateOwst_0(v2, 1, 1, v55);
      LocationModel.init(location:locationOfInterest:)();
      sub_10018CFC4(v56, (void (*)(void))type metadata accessor for PreviewLocation);
      uint64_t v30 = sub_100181E80();
      uint64_t result = v31(v30);
      break;
  }
  return result;
}

uint64_t sub_1007D423C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  uint64_t v7 = type metadata accessor for LocationModel();
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_100162F18();
  uint64_t v11 = sub_10017DF08(&qword_100EAC4A0);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_10016278C();
  uint64_t v15 = v13 - v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v32 - v17;
  uint64_t v19 = *(void *)(a3 + 16);
  if (v19)
  {
    uint64_t v33 = (char *)&v32 - v17;
    uint64_t v34 = v15;
    uint64_t v35 = v9;
    uint64_t v36 = a4;
    uint64_t v20 = *(void (**)(uint64_t, unint64_t, uint64_t))(v9 + 16);
    unint64_t v21 = a3 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v22 = *(void *)(v9 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      v20(v4, v21, v7);
      if (sub_10017BB34(v4, v37, a3, v38)) {
        break;
      }
      uint64_t v23 = sub_1001855C8();
      v24(v23);
      v21 += v22;
      if (!--v19)
      {
        swift_bridgeObjectRelease();
        uint64_t v25 = 1;
        uint64_t v9 = v35;
        uint64_t v18 = v33;
        uint64_t v15 = v34;
        goto LABEL_8;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v9 = v35;
    uint64_t v18 = v33;
    sub_1001627D4();
    v26();
    uint64_t v25 = 0;
    uint64_t v15 = v34;
  }
  else
  {
    uint64_t v25 = 1;
  }
LABEL_8:
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, v25, 1, v7);
  sub_10006DF38((uint64_t)v18, v15, &qword_100EAC4A0);
  sub_10012B520(v15, 1, v7);
  if (v27)
  {
    sub_100178110((uint64_t)v18, &qword_100EAC4A0);
    sub_100178110(v15, &qword_100EAC4A0);
    type metadata accessor for LocationOfInterest();
    uint64_t v28 = sub_10011C004();
    return _s7Weather24LocationCompositionStateOwst_0(v28, v29, 1, v30);
  }
  else
  {
    LocationModel.locationOfInterest.getter();
    sub_100178110((uint64_t)v18, &qword_100EAC4A0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v15, v7);
  }
}

BOOL sub_1007D44BC()
{
  return sub_1000AA078();
}

uint64_t sub_1007D44E4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_100B2CC68(a1, a2);
  uint64_t v7 = v2[5];
  uint64_t v6 = v2[6];
  sub_1001B1E64(v2 + 2, v7);
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, v7, v6);
  sub_10017DF08(&qword_100E6BBD0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100C31780;
  *(void *)(v9 + 32) = v5;
  *(void *)(v9 + 40) = v8;
  uint64_t v12 = v9;
  specialized Array._endMutation()();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v12;
  type metadata accessor for WireframeInterestToken();
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 32) = 0;
  *(void *)(result + 16) = sub_1007D4794;
  *(void *)(result + 24) = v10;
  return result;
}

void sub_1007D45EC()
{
}

BOOL sub_1007D4610()
{
  return sub_1007D44BC();
}

uint64_t sub_1007D4638(uint64_t a1, uint64_t a2)
{
  return sub_1007D44E4(a1, a2);
}

void sub_1007D465C()
{
}

uint64_t sub_1007D4680(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v2 = result;
    if (!result) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v2) {
      goto LABEL_9;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v2; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    sub_100B2D3B8();
    swift_release();
  }
LABEL_9:

  return swift_bridgeObjectRelease();
}

uint64_t sub_1007D475C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1007D4794()
{
  return sub_1007D4680(*(void *)(v0 + 16));
}

uint64_t sub_1007D479C(void *a1)
{
  uint64_t v4 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_100162E88();
  uint64_t v6 = sub_10017DF08(&qword_100E6D1D8);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_10012B938();
  uint64_t v8 = type metadata accessor for Location();
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_100162EB8();
  sub_10017E954();
  uint64_t v10 = type metadata accessor for TimeZone();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v2, 1, v10);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    [a1 coordinate];
    uint64_t v12 = type metadata accessor for Date();
    _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, v12);
    sub_1001880F4();
    Location.init(id:name:timeZone:coordinate:lastRefreshDate:searchTitle:searchSubtitle:preciseName:)();
    sub_10017DF08(&qword_100E965D0);
    sub_100181044();
    return sub_1001A0DE0();
  }
  return result;
}

uint64_t sub_1007D4900()
{
  uint64_t v2 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_100162E88();
  uint64_t v4 = sub_10017DF08(&qword_100E6D1D8);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_100179CB8();
  uint64_t v6 = type metadata accessor for Location.Identifier();
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  uint64_t v8 = type metadata accessor for Location();
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_10012B938();
  SavedLocation.Placeholder.identifier.getter();
  sub_10017E954();
  uint64_t v10 = type metadata accessor for TimeZone();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v1, 1, v10);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v12 = type metadata accessor for Date();
    _s7Weather24LocationCompositionStateOwst_0(v0, 1, 1, v12);
    Location.init(identifier:timeZone:lastRefreshDate:searchTitle:searchSubtitle:preciseName:)();
    sub_10017DF08(&qword_100E965D0);
    sub_100181044();
    return Promise.init(value:)();
  }
  return result;
}

uint64_t sub_1007D4AA4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Location();
  __chkstk_darwin(v3);
  sub_100162EB8();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v1, a1);
  sub_10017DF08(&qword_100E965D0);
  sub_100181044();
  return sub_1001A0DE0();
}

uint64_t sub_1007D4B5C()
{
  uint64_t v2 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_100162E88();
  uint64_t v4 = sub_10017DF08(&qword_100E6D1D8);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_100179CB8();
  uint64_t v6 = type metadata accessor for Location();
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_100162EB8();
  sub_10017E954();
  uint64_t v8 = type metadata accessor for TimeZone();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v1, 1, v8);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = type metadata accessor for Date();
    _s7Weather24LocationCompositionStateOwst_0(v0, 1, 1, v10);
    sub_1001880F4();
    Location.init(id:name:timeZone:coordinate:lastRefreshDate:searchTitle:searchSubtitle:preciseName:)();
    sub_10017DF08(&qword_100E965D0);
    sub_100181044();
    return sub_1001A0DE0();
  }
  return result;
}

uint64_t type metadata accessor for StubGeocodeManager()
{
  return self;
}

uint64_t sub_1007D4CCC(void *a1)
{
  return sub_1007D479C(a1);
}

uint64_t sub_1007D4CE8()
{
  return sub_1007D4B5C();
}

uint64_t sub_1007D4D04()
{
  return sub_1007D4900();
}

uint64_t sub_1007D4D24(uint64_t a1)
{
  return sub_1007D4AA4(a1);
}

uint64_t *sub_1007D4D44(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    a1[1] = a2[1];
    uint64_t v7 = a3[6];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = sub_10017DF08(&qword_100E749B0);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
    }
    uint64_t v13 = a3[7];
    uint64_t v14 = a3[8];
    uint64_t v15 = (uint64_t *)((char *)v4 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    *(uint64_t *)((char *)v4 + v14) = *(uint64_t *)((char *)a2 + v14);
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1007D4EB8(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for URL();
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(void *, const void *, uint64_t))(v12 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = sub_10017DF08(&qword_100E749B0);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  *uint64_t v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1007D5088(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for URL();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_10017DF08(&qword_100E749B0);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v11 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  return a1;
}

uint64_t sub_1007D518C(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = type metadata accessor for URL();
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(void *, const void *, uint64_t))(v12 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = sub_10017DF08(&qword_100E749B0);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (uint64_t *)(a2 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *uint64_t v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_release();
  return a1;
}

uint64_t sub_1007D533C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10017DF08(&qword_100E749B0);
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_1007D53C8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10017DF08(&qword_100E749B0);
    uint64_t v8 = v5 + *(int *)(a4 + 24);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

id sub_1007D544C()
{
  if (!*v0)
  {
    sub_1001B71C4();
    static Color.primary.getter();
    return (id)UIColor.init(_:)();
  }
  if (*v0 == 1)
  {
    BOOL v1 = UIAccessibilityDarkerSystemColorsEnabled();
    uint64_t v2 = self;
    if (!v1)
    {
      id v3 = [v2 secondaryLabelColor];
      goto LABEL_10;
    }
  }
  else
  {
    BOOL v5 = UIAccessibilityDarkerSystemColorsEnabled();
    uint64_t v2 = self;
    if (!v5)
    {
      id v3 = [v2 tertiaryLabelColor];
      goto LABEL_10;
    }
  }
  id v3 = [v2 labelColor];
LABEL_10:

  return v3;
}

id sub_1007D5524()
{
  if (*v0)
  {
    if (*v0 == 1)
    {
      BOOL v1 = self;
      uint64_t v2 = &UIFontTextStyleCaption2;
    }
    else
    {
      id v3 = [self currentDevice];
      id v4 = [v3 userInterfaceIdiom];

      BOOL v1 = self;
      if (v4) {
        uint64_t v2 = &UIFontTextStyleFootnote;
      }
      else {
        uint64_t v2 = &UIFontTextStyleCaption2;
      }
    }
  }
  else
  {
    BOOL v1 = self;
    uint64_t v2 = &UIFontTextStyleFootnote;
  }
  id v5 = [v1 preferredFontForTextStyle:*v2];

  return v5;
}

unsigned char *storeEnumTagSinglePayload for LearnMoreAttributorViewModel.PresentationContext(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1007D56DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LearnMoreAttributorViewModel.PresentationContext()
{
  return &type metadata for LearnMoreAttributorViewModel.PresentationContext;
}

unint64_t sub_1007D5718()
{
  unint64_t result = qword_100E96680;
  if (!qword_100E96680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96680);
  }
  return result;
}

uint64_t *sub_1007D5764(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v30 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for CurrentWeather();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    int v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for PressureTrend();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
    uint64_t v13 = v12[5];
    uint64_t v14 = &v9[v13];
    uint64_t v15 = &v10[v13];
    uint64_t v17 = *(void *)v15;
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = v17;
    *((void *)v14 + 1) = v16;
    uint64_t v18 = v12[6];
    uint64_t v19 = &v9[v18];
    uint64_t v20 = &v10[v18];
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    uint64_t v22 = v12[7];
    uint64_t v23 = &v9[v22];
    uint64_t v24 = &v10[v22];
    uint64_t v25 = *((void *)v24 + 1);
    *(void *)uint64_t v23 = *(void *)v24;
    *((void *)v23 + 1) = v25;
    *(void *)&v9[v12[8]] = *(void *)&v10[v12[8]];
    uint64_t v26 = v12[9];
    char v27 = &v9[v26];
    uint64_t v28 = &v10[v26];
    uint64_t v29 = *((void *)v28 + 1);
    *(void *)char v27 = *(void *)v28;
    *((void *)v27 + 1) = v29;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1007D58F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
  uint64_t v12 = v11[5];
  uint64_t v13 = (void *)(v8 + v12);
  uint64_t v14 = (uint64_t *)(v9 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  uint64_t v17 = v11[6];
  uint64_t v18 = (void *)(v8 + v17);
  uint64_t v19 = (void *)(v9 + v17);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  uint64_t v21 = v11[7];
  uint64_t v22 = (void *)(v8 + v21);
  uint64_t v23 = (void *)(v9 + v21);
  uint64_t v24 = v23[1];
  *uint64_t v22 = *v23;
  v22[1] = v24;
  *(void *)(v8 + v11[8]) = *(void *)(v9 + v11[8]);
  uint64_t v25 = v11[9];
  uint64_t v26 = (void *)(v8 + v25);
  char v27 = (void *)(v9 + v25);
  uint64_t v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1007D5A3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
  uint64_t v12 = v11[5];
  uint64_t v13 = (void *)(v8 + v12);
  uint64_t v14 = (void *)(v9 + v12);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = v11[6];
  uint64_t v16 = (void *)(v8 + v15);
  uint64_t v17 = (void *)(v9 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = v11[7];
  uint64_t v19 = (void *)(v8 + v18);
  uint64_t v20 = (void *)(v9 + v18);
  void *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + v11[8]) = *(void *)(v9 + v11[8]);
  uint64_t v21 = v11[9];
  uint64_t v22 = (void *)(v8 + v21);
  uint64_t v23 = (void *)(v9 + v21);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1007D5BC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
  *(_OWORD *)(v8 + v11[5]) = *(_OWORD *)(v9 + v11[5]);
  *(_OWORD *)(v8 + v11[6]) = *(_OWORD *)(v9 + v11[6]);
  *(_OWORD *)(v8 + v11[7]) = *(_OWORD *)(v9 + v11[7]);
  *(void *)(v8 + v11[8]) = *(void *)(v9 + v11[8]);
  *(_OWORD *)(v8 + v11[9]) = *(_OWORD *)(v9 + v11[9]);
  return a1;
}

uint64_t sub_1007D5CC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
  uint64_t v12 = v11[5];
  uint64_t v13 = (void *)(v8 + v12);
  uint64_t v14 = (uint64_t *)(v9 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = v11[6];
  uint64_t v18 = (void *)(v8 + v17);
  uint64_t v19 = (uint64_t *)(v9 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = v11[7];
  uint64_t v23 = (void *)(v8 + v22);
  uint64_t v24 = (uint64_t *)(v9 + v22);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  *uint64_t v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  *(void *)(v8 + v11[8]) = *(void *)(v9 + v11[8]);
  uint64_t v27 = v11[9];
  uint64_t v28 = (void *)(v8 + v27);
  uint64_t v29 = (uint64_t *)(v9 + v27);
  uint64_t v31 = *v29;
  uint64_t v30 = v29[1];
  *uint64_t v28 = v31;
  v28[1] = v30;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1007D5E00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007D5E14);
}

uint64_t sub_1007D5E14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for CurrentWeather();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    uint64_t v8 = type metadata accessor for PressureComponentPreprocessedDataModel();
    uint64_t v9 = a1 + *(int *)(a3 + 20);
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_1007D5E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007D5EA4);
}

uint64_t sub_1007D5EA4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for CurrentWeather();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    uint64_t v10 = type metadata accessor for PressureComponentPreprocessedDataModel();
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  return _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t sub_1007D5F28(uint64_t a1, uint64_t a2)
{
  if ((static CurrentWeather.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for PressureComponent() + 20);

  return sub_10040905C(a1 + v4, a2 + v4);
}

uint64_t sub_1007D5F88@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = type metadata accessor for PressureComponentPreprocessedDataModel();
  __chkstk_darwin(v21);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  uint64_t v23 = type metadata accessor for CurrentWeather();
  sub_100179C0C();
  uint64_t v20 = v7;
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v22 = v10 - v9;
  sub_10017DF08(&qword_100E96718);
  sub_100179C0C();
  __chkstk_darwin(v11);
  sub_10012B938();
  uint64_t v12 = type metadata accessor for PressureComponent();
  __chkstk_darwin(v12);
  sub_1001626E0();
  uint64_t v15 = v14 - v13;
  sub_1001B1E64(a1, a1[3]);
  sub_1007D6530();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  sub_1007D66A0(&qword_100E7CDD8, (void (*)(uint64_t))&type metadata accessor for CurrentWeather);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v15, v22, v23);
  sub_1007D66A0(&qword_100E96728, (void (*)(uint64_t))type metadata accessor for PressureComponentPreprocessedDataModel);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v16 = sub_10019F158();
  v17(v16);
  sub_1007D657C(v6, v15 + *(int *)(v12 + 20));
  sub_1007D65E0(v15, a2);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  return sub_1007D6644(v15);
}

uint64_t sub_1007D62BC(void *a1)
{
  uint64_t v4 = sub_10017DF08(&qword_100E96730);
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10012B938();
  sub_1001B1E64(a1, a1[3]);
  sub_1007D6530();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  type metadata accessor for CurrentWeather();
  sub_1007D66A0(&qword_100E7CDF0, (void (*)(uint64_t))&type metadata accessor for CurrentWeather);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for PressureComponent();
    type metadata accessor for PressureComponentPreprocessedDataModel();
    sub_1007D66A0(&qword_100E96738, (void (*)(uint64_t))type metadata accessor for PressureComponentPreprocessedDataModel);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t sub_1007D6484(uint64_t a1)
{
  unint64_t v2 = sub_1007D6530();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007D64C0(uint64_t a1)
{
  unint64_t v2 = sub_1007D6530();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1007D64FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1007D5F88(a1, a2);
}

uint64_t sub_1007D6514(void *a1)
{
  return sub_1007D62BC(a1);
}

unint64_t sub_1007D6530()
{
  unint64_t result = qword_100E96720;
  if (!qword_100E96720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96720);
  }
  return result;
}

uint64_t sub_1007D657C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PressureComponentPreprocessedDataModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1007D65E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PressureComponent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1007D6644(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PressureComponent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1007D66A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PressureComponent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1007D67B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PressureComponent.CodingKeys()
{
  return &type metadata for PressureComponent.CodingKeys;
}

unint64_t sub_1007D67F0()
{
  unint64_t result = qword_100E96740;
  if (!qword_100E96740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96740);
  }
  return result;
}

unint64_t sub_1007D6840()
{
  unint64_t result = qword_100E96748;
  if (!qword_100E96748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96748);
  }
  return result;
}

unint64_t sub_1007D6890()
{
  unint64_t result = qword_100E96750;
  if (!qword_100E96750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96750);
  }
  return result;
}

void *sub_1007D68DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v5 = a1 + 48;
    do
    {
      v5 += 24;
      sub_1001B1E64((void *)(a2 + 24), *(void *)(a2 + 48));
      dispatch thunk of GeocodeManagerType.reverseGeocode(coordinate:)();
      sub_10017DF08(&qword_100E968A8);
      swift_allocObject();
      Promise.init(value:)();
      unsigned int v6 = (void *)zalgo.getter();
      when2<A, B>(on:_:_:)();
      swift_release();
      swift_release();

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v3;
    }
    while (v3);
  }
  swift_release();
  return _swiftEmptyArrayStorage;
}

void *sub_1007D6A64(uint64_t a1)
{
  uint64_t v17 = type metadata accessor for DebugLocationManager.DebugLocation();
  uint64_t v3 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    uint64_t v13 = v1;
    uint64_t v18 = _swiftEmptyArrayStorage;
    sub_1007F3AEC();
    uint64_t v7 = v18;
    uint64_t v16 = sub_10017DF08(&qword_100E968A0);
    uint64_t v8 = a1
       + ((*(unsigned __int8 *)(*(void *)(v16 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v16 - 8) + 80));
    uint64_t v15 = *(void *)(*(void *)(v16 - 8) + 72);
    uint64_t v14 = type metadata accessor for Location();
    uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
    do
    {
      uint64_t v10 = *(void *)(v8 + *(int *)(v16 + 48) + 16);
      v9(&v5[*(int *)(v17 + 20)], v8, v14);
      *(void *)uint64_t v5 = v10;
      uint64_t v18 = v7;
      unint64_t v11 = v7[2];
      if (v11 >= v7[3] >> 1)
      {
        sub_1007F3AEC();
        uint64_t v7 = v18;
      }
      v7[2] = v11 + 1;
      sub_1007D81A0((uint64_t)v5, (uint64_t)v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(void *)(v3 + 72) * v11);
      v8 += v15;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t sub_1007D6C9C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656475746974616CLL && a2 == 0xE800000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x7469736E65746E69 && a2 == 0xE900000000000079)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1007D6DFC(char a1)
{
  if (!a1) {
    return 0x656475746974616CLL;
  }
  if (a1 == 1) {
    return 0x64757469676E6F6CLL;
  }
  return 0x7469736E65746E69;
}

uint64_t sub_1007D6E58(void *a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E968C0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  BOOL v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001B1E64(a1, a1[3]);
  sub_1007D8224();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    v8[14] = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
    v8[13] = 2;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

double sub_1007D6FF8(void *a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E968B0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(a1, a1[3]);
  sub_1007D8224();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  char v12 = 0;
  KeyedDecodingContainer.decode(_:forKey:)();
  double v7 = v6;
  char v11 = 1;
  KeyedDecodingContainer.decode(_:forKey:)();
  char v10 = 2;
  KeyedDecodingContainer.decode(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  return v7;
}

uint64_t sub_1007D71D0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x736D726F7473 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1007D7250()
{
  return 0x736D726F7473;
}

uint64_t sub_1007D7264(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E968F0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  double v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(a1, a1[3]);
  sub_1007D8270();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v9[1] = a2;
  sub_10017DF08(&qword_100E968D8);
  sub_1007D8308(&qword_100E968F8, (void (*)(void))sub_1007D8378);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void *sub_1007D73E4(void *a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E968C8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v7 = sub_1001B1E64(a1, a1[3]);
  sub_1007D8270();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_10017DF08(&qword_100E968D8);
    sub_1007D8308(&qword_100E968E0, (void (*)(void))sub_1007D82BC);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    double v7 = (void *)v9[1];
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  return v7;
}

uint64_t sub_1007D758C()
{
  return sub_1007D6DFC(*v0);
}

uint64_t sub_1007D7594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1007D6C9C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1007D75BC(uint64_t a1)
{
  unint64_t v2 = sub_1007D8224();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007D75F8(uint64_t a1)
{
  unint64_t v2 = sub_1007D8224();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1007D7634(void *a1@<X0>, uint64_t a2@<X8>)
{
  double v4 = sub_1007D6FF8(a1);
  if (!v2)
  {
    *(double *)a2 = v4;
    *(void *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
  }
}

uint64_t sub_1007D7664(void *a1)
{
  return sub_1007D6E58(a1);
}

uint64_t sub_1007D7688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1007D71D0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1007D76B4(uint64_t a1)
{
  unint64_t v2 = sub_1007D8270();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007D76F0(uint64_t a1)
{
  unint64_t v2 = sub_1007D8270();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_1007D772C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1007D73E4(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1007D7758(void *a1)
{
  return sub_1007D7264(a1, *v1);
}

uint64_t sub_1007D7774(uint64_t a1)
{
  sub_10017DF08(&qword_100E96890);
  swift_allocObject();
  *(void *)(v1 + 16) = AsyncObservable.init(value:)();
  sub_10020D948(a1, v1 + 24);
  sub_1007D77FC();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  return v1;
}

void sub_1007D77FC()
{
  uint64_t v0 = type metadata accessor for Date();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for NetworkProxy();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  double v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E749B0);
  __chkstk_darwin(v5 - 8);
  double v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.init(string:)();
  uint64_t v8 = type metadata accessor for URL();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8) == 1)
  {
    __break(1u);
  }
  else
  {
    sub_10017DF08(&qword_100E96898);
    Dictionary.init(dictionaryLiteral:)();
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for NetworkProxy.none(_:), v1);
    Date.init()();
    uint64_t v9 = (void *)NetworkOperation.__allocating_init(endpoint:parameters:headers:networkProxy:earliestBeginDate:)();
    swift_allocObject();
    swift_weakInit();
    dispatch thunk of AsyncOperation.completion.setter();
    [v9 start];
  }
}

uint64_t sub_1007D7A60(uint64_t a1)
{
  uint64_t v1 = *(void *)a1;
  char v2 = *(unsigned char *)(a1 + 8);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    if ((v2 & 1) == 0)
    {
      swift_retain();
      sub_1007D816C(v1, 0);
      sub_1007D68DC(v1, v4);
      sub_1007D8178(v1, 0);
      uint64_t v5 = (void *)zalgo.getter();
      sub_10017DF08(&qword_100E968A0);
      when<A>(on:_:)();

      swift_bridgeObjectRelease();
      swift_retain();
      uint64_t v6 = (void *)zalgo.getter();
      Promise.then<A>(on:closure:)();
      swift_release();
      swift_release();

      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1007D7B88(uint64_t *a1)
{
  return swift_release();
}

uint64_t sub_1007D7BFC()
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 24);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DebugLocationManager()
{
  return self;
}

uint64_t *sub_1007D7C60(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    double v7 = (char *)a2 + v5;
    uint64_t v8 = type metadata accessor for Location();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_1007D7D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = type metadata accessor for Location();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

void *sub_1007D7D94(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

void *sub_1007D7E10(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

void *sub_1007D7E8C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_1007D7F08(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1007D7F84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007D7F98);
}

uint64_t sub_1007D7F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = type metadata accessor for Location();

  return _s7Weather24LocationCompositionStateOwet_0(v4, a2, v5);
}

uint64_t sub_1007D7FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007D7FF8);
}

uint64_t sub_1007D7FF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = type metadata accessor for Location();

  return _s7Weather24LocationCompositionStateOwst_0(v5, a2, a2, v6);
}

uint64_t type metadata accessor for DebugLocationManager.DebugLocation()
{
  uint64_t result = qword_100E96858;
  if (!qword_100E96858) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1007D8090()
{
  uint64_t result = type metadata accessor for Location();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1007D812C()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1007D8164(uint64_t a1)
{
  return sub_1007D7A60(a1);
}

uint64_t sub_1007D816C(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRetain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1007D8178(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1007D8184(uint64_t *a1)
{
  return sub_1007D7B88(a1);
}

uint64_t sub_1007D81A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DebugLocationManager.DebugLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for DebugLocationManager.InterestingStorms.Storm()
{
  return &type metadata for DebugLocationManager.InterestingStorms.Storm;
}

ValueMetadata *type metadata accessor for DebugLocationManager.InterestingStorms()
{
  return &type metadata for DebugLocationManager.InterestingStorms;
}

unint64_t sub_1007D8224()
{
  unint64_t result = qword_100E968B8;
  if (!qword_100E968B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E968B8);
  }
  return result;
}

unint64_t sub_1007D8270()
{
  unint64_t result = qword_100E968D0;
  if (!qword_100E968D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E968D0);
  }
  return result;
}

unint64_t sub_1007D82BC()
{
  unint64_t result = qword_100E968E8;
  if (!qword_100E968E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E968E8);
  }
  return result;
}

uint64_t sub_1007D8308(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(&qword_100E968D8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1007D8378()
{
  unint64_t result = qword_100E96900;
  if (!qword_100E96900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96900);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DebugLocationManager.InterestingStorms.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1007D8460);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugLocationManager.InterestingStorms.CodingKeys()
{
  return &type metadata for DebugLocationManager.InterestingStorms.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for DebugLocationManager.InterestingStorms.Storm.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1007D8564);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugLocationManager.InterestingStorms.Storm.CodingKeys()
{
  return &type metadata for DebugLocationManager.InterestingStorms.Storm.CodingKeys;
}

unint64_t sub_1007D85A0()
{
  unint64_t result = qword_100E96908;
  if (!qword_100E96908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96908);
  }
  return result;
}

unint64_t sub_1007D85F0()
{
  unint64_t result = qword_100E96910;
  if (!qword_100E96910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96910);
  }
  return result;
}

unint64_t sub_1007D8640()
{
  unint64_t result = qword_100E96918;
  if (!qword_100E96918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96918);
  }
  return result;
}

unint64_t sub_1007D8690()
{
  unint64_t result = qword_100E96920;
  if (!qword_100E96920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96920);
  }
  return result;
}

unint64_t sub_1007D86E0()
{
  unint64_t result = qword_100E96928;
  if (!qword_100E96928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96928);
  }
  return result;
}

unint64_t sub_1007D8730()
{
  unint64_t result = qword_100E96930;
  if (!qword_100E96930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96930);
  }
  return result;
}

uint64_t *sub_1007D877C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v10 = type metadata accessor for Location.Identifier();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v11 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
      }
      uint64_t v8 = type metadata accessor for LocationModel();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1007D891C(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1007D8A88((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = type metadata accessor for Location.Identifier();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v9 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
      }
      uint64_t v7 = type metadata accessor for LocationModel();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1007D8A88(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LocationViewerViewAction();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1007D8AE4(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = type metadata accessor for Location.Identifier();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v9 = type metadata accessor for WeatherMapOverlayKind();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    uint64_t v7 = type metadata accessor for LocationModel();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1007D8C40(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1007D8A88((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = type metadata accessor for Location.Identifier();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v9 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
      }
      uint64_t v7 = type metadata accessor for LocationModel();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1007D8DAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v32 = v4;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = type metadata accessor for WeatherMapOverlayKind();
  sub_100179C0C();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_1001626E0();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = type metadata accessor for LocationViewerViewAction();
  __chkstk_darwin(v16);
  sub_1001626E0();
  uint64_t v19 = v18 - v17;
  uint64_t v33 = sub_10017DF08(&qword_100E969E8);
  sub_100179C0C();
  uint64_t v21 = v20;
  __chkstk_darwin(v22);
  sub_1001626E0();
  uint64_t v25 = v24 - v23;
  sub_1007D9450(v2, v19);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32))(v15, v19, v9);
      sub_10017DF08(&qword_100E635E0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100C251B0;
      *(void *)(inited + 32) = 0x4B79616C7265766FLL;
      *(void *)(inited + 40) = 0xEB00000000646E69;
      *(void *)(inited + 72) = v9;
      uint64_t v27 = sub_100170694((uint64_t *)(inited + 48));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v11 + 16))(v27, v15, v9);
      Dictionary.init(dictionaryLiteral:)();
      sub_100180464();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v15, v9);
      break;
    case 2u:
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v8, v19, v3);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v28 = swift_initStackObject();
      *(_OWORD *)(v28 + 16) = xmmword_100C251B0;
      *(void *)(v28 + 32) = 0x6E6F697461636F6CLL;
      *(void *)(v28 + 40) = 0xE800000000000000;
      *(void *)(v28 + 72) = v3;
      uint64_t v29 = sub_100170694((uint64_t *)(v28 + 48));
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v32 + 16))(v29, v8, v3);
      Dictionary.init(dictionaryLiteral:)();
      sub_100180464();
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v8, v3);
      break;
    case 3u:
    case 6u:
    case 9u:
      Dictionary.init(dictionaryLiteral:)();
      goto LABEL_7;
    case 4u:
    case 5u:
    case 7u:
    case 8u:
      Dictionary.init(dictionaryLiteral:)();
      sub_10017D4FC();
LABEL_7:
      ShortDescription.init(name:_:)();
      break;
    default:
      Dictionary.init(dictionaryLiteral:)();
      sub_10017D4FC();
      ShortDescription.init(name:_:)();
      sub_1007D8A88(v19);
      break;
  }
  a1[3] = v33;
  a1[4] = sub_1007D94B4();
  uint64_t v30 = sub_100170694(a1);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v21 + 32))(v30, v25, v33);
}

uint64_t sub_1007D93C4()
{
  sub_1007D9508(&qword_100E969F8);

  return ShortDescribable.description.getter();
}

uint64_t sub_1007D941C()
{
  return sub_1007D9508(&qword_100E969E0);
}

uint64_t sub_1007D9450(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationViewerViewAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1007D94B4()
{
  unint64_t result = qword_100E969F0;
  if (!qword_100E969F0)
  {
    sub_10018C6DC(&qword_100E969E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E969F0);
  }
  return result;
}

uint64_t sub_1007D9508(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for LocationViewerViewAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1007D954C(unint64_t a1, uint64_t a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_100195B7C(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = *(void *)(a2 + 16);
    char v10 = *(unsigned char *)(a2 + 24);
    sub_100195B7C(v9, v10);
    *(void *)(a1 + 16) = v9;
    *(unsigned char *)(a1 + 24) = v10;
    uint64_t v11 = a3[6];
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (void *)(a2 + v11);
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v16 = a3[7];
    uint64_t v17 = (void *)(a1 + v16);
    uint64_t v18 = (void *)(a2 + v16);
    uint64_t v19 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v20 = v18[1];
      void *v17 = *v18;
      v17[1] = v20;
      uint64_t v39 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v21 = v39[5];
      uint64_t v22 = (char *)v17 + v21;
      uint64_t v23 = (char *)v18 + v21;
      uint64_t v24 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24))
      {
        uint64_t v25 = sub_10017DF08(&qword_100E749B0);
        memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v24);
      }
      uint64_t v26 = v39[6];
      uint64_t v27 = (void *)((char *)v17 + v26);
      uint64_t v28 = (void *)((char *)v18 + v26);
      uint64_t v29 = v28[1];
      *uint64_t v27 = *v28;
      v27[1] = v29;
      uint64_t v30 = v39[7];
      uint64_t v31 = (char *)v17 + v30;
      uint64_t v32 = (char *)v18 + v30;
      uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
      swift_bridgeObjectRetain();
      v33(v31, v32, v24);
      uint64_t v34 = v39[8];
      uint64_t v35 = (char *)v17 + v34;
      uint64_t v36 = (char *)v18 + v34;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18 + v34, 1, v24))
      {
        uint64_t v37 = sub_10017DF08(&qword_100E749B0);
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        v33(v35, v36, v24);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v24);
      }
      *((unsigned char *)v17 + v39[9]) = *((unsigned char *)v18 + v39[9]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  }
  return a1;
}

uint64_t sub_1007D98D8(uint64_t a1, uint64_t a2)
{
  sub_10018F6D8(*(void *)a1, *(unsigned char *)(a1 + 8));
  sub_10018F6D8(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  type metadata accessor for NewsArticleComponentViewModel(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    swift_bridgeObjectRelease();
    char v8 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
    uint64_t v9 = v6 + v8[5];
    uint64_t v10 = type metadata accessor for URL();
    if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v10)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    }
    swift_bridgeObjectRelease();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    v12(v6 + v8[7], v10);
    uint64_t v11 = v6 + v8[8];
    uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v11, 1, v10);
    if (!result)
    {
      return v12(v11, v10);
    }
  }
  return result;
}

uint64_t sub_1007D9ABC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = *(void *)(a2 + 16);
  char v9 = *(unsigned char *)(a2 + 24);
  sub_100195B7C(v8, v9);
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v9;
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  }
  else
  {
    *uint64_t v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  uint64_t v17 = type metadata accessor for NewsArticleComponentViewModel(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v37 = a3;
    uint64_t v18 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v18;
    uint64_t v38 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
    uint64_t v19 = v38[5];
    uint64_t v20 = (char *)v15 + v19;
    uint64_t v21 = (char *)v16 + v19;
    uint64_t v22 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
    {
      uint64_t v23 = sub_10017DF08(&qword_100E749B0);
      memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
    }
    uint64_t v24 = v38[6];
    uint64_t v25 = (void *)((char *)v15 + v24);
    uint64_t v26 = (void *)((char *)v16 + v24);
    uint64_t v27 = v26[1];
    void *v25 = *v26;
    v25[1] = v27;
    uint64_t v28 = v38[7];
    uint64_t v29 = (char *)v15 + v28;
    uint64_t v30 = (char *)v16 + v28;
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
    swift_bridgeObjectRetain();
    v31(v29, v30, v22);
    uint64_t v32 = v38[8];
    uint64_t v33 = (char *)v15 + v32;
    uint64_t v34 = (char *)v16 + v32;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16 + v32, 1, v22))
    {
      uint64_t v35 = sub_10017DF08(&qword_100E749B0);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      v31(v33, v34, v22);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v22);
    }
    a3 = v37;
    *((unsigned char *)v15 + v38[9]) = *((unsigned char *)v16 + v38[9]);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1007D9DF4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10018F6D8(v8, v9);
  uint64_t v10 = *(void *)(a2 + 16);
  char v11 = *(unsigned char *)(a2 + 24);
  sub_100195B7C(v10, v11);
  uint64_t v12 = *(void *)(a1 + 16);
  char v13 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v10;
  *(unsigned char *)(a1 + 24) = v11;
  sub_10018F6D8(v12, v13);
  if (a1 != a2)
  {
    uint64_t v14 = a3[6];
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    sub_100178110(a1 + v14, &qword_100E63BC8);
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = a3[7];
    uint64_t v19 = (void *)(a1 + v18);
    uint64_t v20 = (void *)(a2 + v18);
    sub_1007DFC60(a1 + v18, (void (*)(void))type metadata accessor for NewsArticleComponentViewModel);
    uint64_t v21 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v39 = a3;
      void *v19 = *v20;
      v19[1] = v20[1];
      uint64_t v40 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v22 = v40[5];
      uint64_t v23 = (char *)v19 + v22;
      uint64_t v24 = (char *)v20 + v22;
      uint64_t v25 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25))
      {
        uint64_t v26 = sub_10017DF08(&qword_100E749B0);
        memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v25);
      }
      uint64_t v27 = v40[6];
      uint64_t v28 = (void *)((char *)v19 + v27);
      uint64_t v29 = (void *)((char *)v20 + v27);
      *uint64_t v28 = *v29;
      v28[1] = v29[1];
      uint64_t v30 = v40[7];
      uint64_t v31 = (char *)v19 + v30;
      uint64_t v32 = (char *)v20 + v30;
      uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
      swift_bridgeObjectRetain();
      v33(v31, v32, v25);
      uint64_t v34 = v40[8];
      uint64_t v35 = (char *)v19 + v34;
      uint64_t v36 = (char *)v20 + v34;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20 + v34, 1, v25))
      {
        uint64_t v37 = sub_10017DF08(&qword_100E749B0);
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        v33(v35, v36, v25);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v25);
      }
      a3 = v39;
      *((unsigned char *)v19 + v40[9]) = *((unsigned char *)v20 + v40[9]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
  }
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1007DA188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 24);
  char v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = *(int *)(v3 + 28);
  uint64_t v12 = (char *)(a1 + v11);
  char v13 = (char *)(a2 + v11);
  uint64_t v14 = type metadata accessor for NewsArticleComponentViewModel(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v27 = v3;
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    uint64_t v28 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
    uint64_t v15 = v28[5];
    uint64_t v16 = &v12[v15];
    uint64_t v17 = &v13[v15];
    uint64_t v18 = type metadata accessor for URL();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
    {
      uint64_t v19 = sub_10017DF08(&qword_100E749B0);
      memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
      uint64_t v20 = *(void *)(v18 - 8);
    }
    else
    {
      uint64_t v20 = *(void *)(v18 - 8);
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v16, v17, v18);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
    }
    *(_OWORD *)&v12[v28[6]] = *(_OWORD *)&v13[v28[6]];
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v21(&v12[v28[7]], &v13[v28[7]], v18);
    uint64_t v22 = v28[8];
    uint64_t v23 = &v12[v22];
    uint64_t v24 = &v13[v22];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v13[v22], 1, v18))
    {
      uint64_t v25 = sub_10017DF08(&qword_100E749B0);
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      v21(v23, v24, v18);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v18);
    }
    v12[v28[9]] = v13[v28[9]];
    swift_storeEnumTagMultiPayload();
    uint64_t v3 = v27;
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  *(unsigned char *)(a1 + *(int *)(v3 + 32)) = *(unsigned char *)(a2 + *(int *)(v3 + 32));
  return a1;
}

uint64_t sub_1007DA4A4(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10018F6D8(v8, v9);
  char v10 = *((unsigned char *)a2 + 24);
  uint64_t v11 = *(void *)(a1 + 16);
  char v12 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = a2[2];
  *(unsigned char *)(a1 + 24) = v10;
  sub_10018F6D8(v11, v12);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v13 = a3[6];
    uint64_t v14 = (void *)(a1 + v13);
    uint64_t v15 = (char *)a2 + v13;
    sub_100178110(a1 + v13, &qword_100E63BC8);
    uint64_t v16 = sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    uint64_t v18 = a3[7];
    uint64_t v19 = (char *)(a1 + v18);
    uint64_t v20 = (char *)a2 + v18;
    sub_1007DFC60(a1 + v18, (void (*)(void))type metadata accessor for NewsArticleComponentViewModel);
    uint64_t v21 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v34 = a3;
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      uint64_t v35 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v22 = v35[5];
      uint64_t v23 = &v19[v22];
      uint64_t v24 = &v20[v22];
      uint64_t v25 = type metadata accessor for URL();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25))
      {
        uint64_t v26 = sub_10017DF08(&qword_100E749B0);
        memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
        uint64_t v27 = *(void *)(v25 - 8);
      }
      else
      {
        uint64_t v27 = *(void *)(v25 - 8);
        (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v23, v24, v25);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v25);
      }
      *(_OWORD *)&v19[v35[6]] = *(_OWORD *)&v20[v35[6]];
      uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
      v28(&v19[v35[7]], &v20[v35[7]], v25);
      uint64_t v29 = v35[8];
      uint64_t v30 = &v19[v29];
      uint64_t v31 = &v20[v29];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v20[v29], 1, v25))
      {
        uint64_t v32 = sub_10017DF08(&qword_100E749B0);
        memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        v28(v30, v31, v25);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v25);
      }
      a3 = v34;
      v19[v35[9]] = v20[v35[9]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
  }
  *(unsigned char *)(a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_1007DA808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007DA81C);
}

uint64_t sub_1007DA81C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_10017DF08((uint64_t *)&unk_100EAA530);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 24);
    }
    else
    {
      uint64_t v10 = type metadata accessor for NewsArticleComponentViewModel(0);
      uint64_t v11 = *(int *)(a3 + 28);
    }
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v11, a2, v10);
  }
}

uint64_t sub_1007DA8C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007DA8D8);
}

uint64_t sub_1007DA8D8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = -(char)a2;
  }
  else
  {
    sub_10017DF08((uint64_t *)&unk_100EAA530);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 24);
    }
    else
    {
      uint64_t v10 = type metadata accessor for NewsArticleComponentViewModel(0);
      uint64_t v11 = *(int *)(a4 + 28);
    }
    return _s7Weather24LocationCompositionStateOwst_0(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_1007DA980()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1007DA99C(unint64_t a1, void (*a2)(void *__return_ptr), uint64_t a3, void (*a4)(void))
{
  uint64_t v7 = sub_10017DF08(&qword_100E96BC0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v19[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E96C10);
  __chkstk_darwin(v10);
  char v12 = (char *)&v19[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (WeatherAsyncImagePhase.image.getter(a1))
  {
    a2(v19);
    uint64_t v13 = v19[1];
    char v14 = v21;
    char v15 = v22;
    long long v16 = v20;
    long long v18 = v20;
    *(void *)char v12 = v19[0];
    *((void *)v12 + 1) = v13;
    *((_OWORD *)v12 + 1) = v16;
    v12[32] = v14;
    v12[33] = v15;
    swift_storeEnumTagMultiPayload();
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    sub_10017DF08(&qword_100E96C18);
    sub_1007DFAD0(&qword_100E96C20, &qword_100E96C18, (void (*)(void))sub_10033979C);
    sub_1007DFAD0(&qword_100E96BF8, &qword_100E96BC0, (void (*)(void))sub_1007DFCBC);
    _ConditionalContent<>.init(storage:)();
    swift_release_n();
    swift_release_n();
    swift_release_n();
    return swift_release();
  }
  else
  {
    a4();
    sub_10006DF38((uint64_t)v9, (uint64_t)v12, &qword_100E96BC0);
    swift_storeEnumTagMultiPayload();
    sub_10017DF08(&qword_100E96C18);
    sub_1007DFAD0(&qword_100E96C20, &qword_100E96C18, (void (*)(void))sub_10033979C);
    sub_1007DFAD0(&qword_100E96BF8, &qword_100E96BC0, (void (*)(void))sub_1007DFCBC);
    _ConditionalContent<>.init(storage:)();
    return sub_100178110((uint64_t)v9, &qword_100E96BC0);
  }
}

uint64_t sub_1007DACA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10017DF08(&qword_100E749B0);
  __chkstk_darwin(v3 - 8);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  type metadata accessor for AutomationInfo(0);
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v10 = (uint64_t *)(v9 - v8);
  uint64_t v37 = type metadata accessor for AccessibilityChildBehavior();
  sub_100179C0C();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  sub_10017DF08(&qword_100E96AA0);
  sub_100162E4C();
  __chkstk_darwin(v17);
  sub_10016279C();
  sub_10017DF08(&qword_100E7A0C0);
  sub_100179C0C();
  __chkstk_darwin(v18);
  sub_100162E88();
  sub_10017DF08(&qword_100E7A0C8);
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_100109314();
  uint64_t v35 = v20;
  uint64_t v21 = sub_10017DF08(&qword_100E96AA8);
  __chkstk_darwin(v21 - 8);
  sub_100109314();
  uint64_t v36 = v22;
  *(void *)uint64_t v2 = static VerticalAlignment.center.getter();
  *(void *)(v2 + 8) = 0;
  *(unsigned char *)(v2 + 16) = 1;
  uint64_t v23 = sub_10017DF08(&qword_100E96AB0);
  sub_1007DB0E8(v1, v2 + *(int *)(v23 + 44));
  static AccessibilityChildBehavior.combine.getter();
  sub_1001246C8(&qword_100E96AB8, &qword_100E96AA0);
  View.accessibilityElement(children:)();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v16, v37);
  sub_100178110(v2, &qword_100E96AA0);
  type metadata accessor for NewsArticleComponentView();
  sub_100361F10(v6);
  uint64_t v24 = type metadata accessor for URL();
  if (_s7Weather24LocationCompositionStateOwet_0(v6, 1, v24) == 1)
  {
    sub_100178110(v6, &qword_100E749B0);
    uint64_t v25 = 0;
    uint64_t v26 = 0;
  }
  else
  {
    uint64_t v25 = URL.lastPathComponent.getter();
    uint64_t v26 = v27;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v6, v24);
  }
  uint64_t v28 = sub_100362174();
  uint64_t v30 = v29;
  uint64_t v31 = sub_100362068();
  *uint64_t v10 = v25;
  v10[1] = v26;
  long long v10[2] = v28;
  v10[3] = v30;
  v10[4] = v31;
  v10[5] = v32;
  type metadata accessor for AutomationCellInfo(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_10048D478((uint64_t)v10, v35);
  sub_1007DFC60((uint64_t)v10, (void (*)(void))type metadata accessor for AutomationInfo);
  sub_100162F0C();
  v33();
  sub_1007DE494();
  sub_1007DF850();
  sub_10014A85C();
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  sub_100178110(v35, &qword_100E7A0C8);
  return sub_10020E72C(v36, a1, &qword_100E96AA8);
}

uint64_t sub_1007DB0E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v81 = a2;
  uint64_t v3 = type metadata accessor for RoundedRectangle() - 8;
  uint64_t v70 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E96AC8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E96AD0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E96AD8);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v82 = (uint64_t)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_10017DF08(&qword_100E96AE0) - 8;
  __chkstk_darwin(v74);
  uint64_t v73 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_10017DF08(&qword_100E96AE8) - 8;
  __chkstk_darwin(v78);
  uint64_t v75 = (uint64_t)&v69 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_10017DF08(&qword_100E96AF0) - 8;
  __chkstk_darwin(v80);
  uint64_t v77 = (uint64_t)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v79 = (uint64_t)&v69 - v19;
  uint64_t v20 = sub_10017DF08(&qword_100E96AF8);
  __chkstk_darwin(v20 - 8);
  uint64_t v76 = (uint64_t)&v69 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v69 - v23;
  *(void *)uint64_t v24 = static HorizontalAlignment.leading.getter();
  *((void *)v24 + 1) = 0;
  v24[16] = 1;
  uint64_t v25 = sub_10017DF08(&qword_100E96B00);
  sub_1007DB820(a1, (uint64_t)&v24[*(int *)(v25 + 44)]);
  sub_1007DDFEC((uint64_t)v8);
  static Alignment.center.getter();
  sub_100BD83E8();
  sub_100178110((uint64_t)v8, &qword_100E96AC8);
  uint64_t v26 = &v5[*(int *)(v3 + 28)];
  uint64_t v27 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v28 = type metadata accessor for RoundedCornerStyle();
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104);
  v29(v26, v27, v28);
  __asm { FMOV            V0.2D, #8.0 }
  long long v69 = _Q0;
  *(_OWORD *)uint64_t v5 = _Q0;
  uint64_t v35 = v82;
  uint64_t v36 = v82 + *(int *)(v13 + 44);
  sub_100126E6C((uint64_t)v5, v36, (void (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v36 + *(int *)(sub_10017DF08(&qword_100E744A8) + 36)) = 256;
  sub_10006DF38((uint64_t)v11, v35, &qword_100E96AD0);
  sub_1007DFC60((uint64_t)v5, (void (*)(void))&type metadata accessor for RoundedRectangle);
  sub_100178110((uint64_t)v11, &qword_100E96AD0);
  uint64_t v37 = static Alignment.center.getter();
  uint64_t v71 = v38;
  uint64_t v72 = v37;
  uint64_t v39 = (uint64_t)v73;
  uint64_t v40 = (uint64_t)&v73[*(int *)(v74 + 44)];
  v29(&v5[*(int *)(v70 + 28)], v27, v28);
  *(_OWORD *)uint64_t v5 = v69;
  static Color.white.getter();
  uint64_t v41 = Color.opacity(_:)();
  swift_release();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  sub_100126E6C((uint64_t)v5, v40, (void (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v42 = v40 + *(int *)(sub_10017DF08(&qword_100E7D380) + 36);
  long long v43 = v84;
  *(_OWORD *)uint64_t v42 = v83;
  *(_OWORD *)(v42 + 16) = v43;
  *(void *)(v42 + 32) = v85;
  uint64_t v44 = sub_10017DF08(&qword_100E7D388);
  *(void *)(v40 + *(int *)(v44 + 52)) = v41;
  *(_WORD *)(v40 + *(int *)(v44 + 56)) = 256;
  uint64_t v45 = static Alignment.center.getter();
  uint64_t v47 = v46;
  uint64_t v48 = (uint64_t *)(v40 + *(int *)(sub_10017DF08(&qword_100E7D390) + 36));
  *uint64_t v48 = v45;
  v48[1] = v47;
  sub_1007DFC60((uint64_t)v5, (void (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v49 = (uint64_t *)(v40 + *(int *)(sub_10017DF08(&qword_100E83CD0) + 36));
  uint64_t v50 = v71;
  *uint64_t v49 = v72;
  v49[1] = v50;
  sub_10020E72C(v82, v39, &qword_100E96AD8);
  uint64_t v51 = v75;
  sub_10006DF38(v39, v75, &qword_100E96AE0);
  uint64_t v52 = v51 + *(int *)(v78 + 44);
  *(void *)uint64_t v52 = 0x3FF0000000000000;
  *(_WORD *)(v52 + 8) = 0;
  sub_100178110(v39, &qword_100E96AE0);
  LOBYTE(v45) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v54 = v53;
  uint64_t v56 = v55;
  uint64_t v58 = v57;
  uint64_t v60 = v59;
  uint64_t v61 = v77;
  sub_10006DF38(v51, v77, &qword_100E96AE8);
  uint64_t v62 = v61 + *(int *)(v80 + 44);
  *(unsigned char *)uint64_t v62 = v45;
  *(void *)(v62 + 8) = v54;
  *(void *)(v62 + 16) = v56;
  *(void *)(v62 + 24) = v58;
  *(void *)(v62 + 32) = v60;
  *(unsigned char *)(v62 + 40) = 0;
  sub_100178110(v51, &qword_100E96AE8);
  uint64_t v63 = v79;
  sub_10020E72C(v61, v79, &qword_100E96AF0);
  uint64_t v64 = v76;
  sub_10006DF38((uint64_t)v24, v76, &qword_100E96AF8);
  sub_10006DF38(v63, v61, &qword_100E96AF0);
  uint64_t v65 = v81;
  sub_10006DF38(v64, v81, &qword_100E96AF8);
  uint64_t v66 = sub_10017DF08(&qword_100E96B08);
  uint64_t v67 = v65 + *(int *)(v66 + 48);
  *(void *)uint64_t v67 = 0x4030000000000000;
  *(unsigned char *)(v67 + 8) = 0;
  sub_10006DF38(v61, v65 + *(int *)(v66 + 64), &qword_100E96AF0);
  sub_100178110(v63, &qword_100E96AF0);
  sub_100178110((uint64_t)v24, &qword_100E96AF8);
  sub_100178110(v61, &qword_100E96AF0);
  return sub_100178110(v64, &qword_100E96AF8);
}

uint64_t sub_1007DB820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v88 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100E7B650);
  __chkstk_darwin(v3 - 8);
  uint64_t v89 = (uint64_t)&v74 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v87 = (uint64_t)&v74 - v6;
  uint64_t v82 = sub_10017DF08(&qword_100E651D0);
  __chkstk_darwin(v82);
  uint64_t v94 = (uint64_t)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E96B30);
  __chkstk_darwin(v8 - 8);
  uint64_t v91 = (uint64_t)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_10017DF08(&qword_100E96B38);
  __chkstk_darwin(v92);
  uint64_t v93 = (uint64_t)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_10017DF08(&qword_100E7B648);
  uint64_t v85 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  long long v84 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v80 = (char *)&v74 - v13;
  __chkstk_darwin(v14);
  long long v83 = (char *)&v74 - v15;
  uint64_t v16 = sub_10017DF08(&qword_100E96B40);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10017DF08(&qword_100E7B640);
  __chkstk_darwin(v19);
  uint64_t v81 = (uint64_t)&v74 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v74 - v22;
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v74 - v25;
  uint64_t v27 = type metadata accessor for Font.TextStyle();
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v74 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v31 - 8);
  uint64_t v32 = type metadata accessor for NewsArticleComponentView();
  uint64_t v97 = 0;
  uint64_t v96 = 0;
  uint64_t v33 = 0;
  uint64_t v95 = 0;
  uint64_t v90 = *(int *)(v32 + 32);
  if (*(unsigned char *)(a1 + v90) == 1)
  {
    LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v34._uint64_t countAndFlagsBits = 0;
    v34._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v34);
    Image.init(_internalSystemName:)();
    uint64_t v79 = a1;
    LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
    swift_release();
    v35._uint64_t countAndFlagsBits = 0x7377654E20;
    v35._object = (void *)0xE500000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v35);
    LocalizedStringKey.init(stringInterpolation:)();
    uint64_t v36 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v38 = v37;
    uint64_t v77 = v23;
    uint64_t v78 = v26;
    char v40 = v39 & 1;
    (*(void (**)(char *, void, uint64_t))(v28 + 104))(v30, enum case for Font.TextStyle.title3(_:), v27);
    static Font.Weight.semibold.getter();
    static Font.system(_:weight:)();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
    uint64_t v97 = Text.font(_:)();
    uint64_t v96 = v41;
    char v43 = v42;
    uint64_t v95 = v44;
    swift_release();
    uint64_t v33 = v43 & 1;
    char v45 = v40;
    uint64_t v26 = v78;
    sub_100191924(v36, v38, v45);
    uint64_t v23 = v77;
    swift_bridgeObjectRelease();
  }
  uint64_t v79 = v33;
  sub_1007DC288((uint64_t)v18);
  char v46 = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  uint64_t v54 = v53;
  sub_10006DF38((uint64_t)v18, (uint64_t)v23, &qword_100E96B40);
  uint64_t v55 = &v23[*(int *)(v19 + 36)];
  char *v55 = v46;
  *((void *)v55 + 1) = v48;
  *((void *)v55 + 2) = v50;
  *((void *)v55 + 3) = v52;
  *((void *)v55 + 4) = v54;
  v55[40] = 0;
  sub_100178110((uint64_t)v18, &qword_100E96B40);
  sub_10020E72C((uint64_t)v23, (uint64_t)v26, &qword_100E7B640);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v90 = v118;
  LODWORD(v78) = v119;
  uint64_t v56 = v120;
  LODWORD(v77) = v121;
  uint64_t v76 = v122;
  uint64_t v75 = v123;
  uint64_t v57 = v91;
  sub_1007DC6A4(v91);
  if (sub_1007DD028()) {
    uint64_t v58 = 2;
  }
  else {
    uint64_t v58 = 3;
  }
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v60 = v93;
  sub_10006DF38(v57, v93, &qword_100E96B30);
  uint64_t v61 = (uint64_t)v26;
  uint64_t v62 = v60 + *(int *)(v92 + 36);
  *(void *)uint64_t v62 = KeyPath;
  *(void *)(v62 + 8) = v58;
  *(unsigned char *)(v62 + 16) = 0;
  sub_100178110(v57, &qword_100E96B30);
  uint64_t v63 = v94;
  sub_1007DD318(v94);
  type metadata accessor for DynamicTypeSize();
  sub_1007E007C(&qword_100E651F0, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result)
  {
    sub_1007DF964();
    sub_1001246C8((unint64_t *)&unk_100EAADB0, &qword_100E651D0);
    uint64_t v65 = v80;
    View.dynamicTypeSize<A>(_:)();
    sub_100178110(v63, &qword_100E651D0);
    sub_100178110(v60, &qword_100E96B38);
    uint64_t v66 = v85;
    uint64_t v67 = v83;
    uint64_t v68 = v86;
    (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v83, v65, v86);
    uint64_t v69 = v87;
    sub_1007DD76C(v87);
    uint64_t v108 = v97;
    uint64_t v109 = v96;
    uint64_t v110 = v79;
    uint64_t v111 = v95;
    unint64_t v112 = &v108;
    uint64_t v70 = v81;
    sub_10006DF38(v61, v81, &qword_100E7B640);
    uint64_t v100 = 0;
    char v101 = 1;
    uint64_t v102 = v90;
    char v103 = (char)v78;
    uint64_t v104 = v56;
    char v105 = (char)v77;
    uint64_t v106 = v76;
    uint64_t v107 = v75;
    uint64_t v113 = v70;
    uint64_t v114 = &v100;
    uint64_t v71 = v84;
    (*(void (**)(char *, char *, uint64_t))(v66 + 16))(v84, v67, v68);
    uint64_t v98 = 0;
    char v99 = 1;
    uint64_t v115 = v71;
    uint64_t v116 = &v98;
    uint64_t v72 = v89;
    sub_10006DF38(v69, v89, &qword_100E7B650);
    uint64_t v117 = v72;
    sub_1004B9854();
    sub_100178110(v69, &qword_100E7B650);
    uint64_t v73 = *(void (**)(char *, uint64_t))(v66 + 8);
    v73(v67, v68);
    sub_100178110(v61, &qword_100E7B640);
    sub_100178110(v72, &qword_100E7B650);
    v73(v71, v68);
    sub_100178110(v70, &qword_100E7B640);
    return sub_100147E60(v108, v109, v110, v111);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1007DC288@<X0>(uint64_t a1@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v1 = sub_10017DF08(&qword_100E96BB0);
  __chkstk_darwin(v1 - 8);
  uint64_t v44 = (uint64_t)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_10017DF08(&qword_100E96B40) - 8;
  __chkstk_darwin(v46);
  uint64_t v45 = (uint64_t)&v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100E744A8);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for RoundedRectangle();
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (_OWORD *)((char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_10017DF08(&qword_100E96BB8);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (uint64_t *)((char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_10017DF08(&qword_100E96BC0);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Color.white.getter();
  uint64_t v20 = Color.opacity(_:)();
  swift_release();
  uint64_t v21 = (char *)v11 + *(int *)(v9 + 28);
  uint64_t v22 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v23 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v21, v22, v23);
  __asm { FMOV            V0.2D, #4.0 }
  *uint64_t v11 = _Q0;
  sub_100126E6C((uint64_t)v11, (uint64_t)v7, (void (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)&v7[*(int *)(v5 + 44)] = 256;
  sub_10006DF38((uint64_t)v7, (uint64_t)v15 + *(int *)(v13 + 44), &qword_100E744A8);
  *uint64_t v15 = v20;
  swift_retain();
  sub_100178110((uint64_t)v7, &qword_100E744A8);
  sub_1007DFC60((uint64_t)v11, (void (*)(void))&type metadata accessor for RoundedRectangle);
  swift_release();
  LOBYTE(v7) = static Edge.Set.trailing.getter();
  EdgeInsets.init(_all:)();
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  sub_10006DF38((uint64_t)v15, (uint64_t)v19, &qword_100E96BB8);
  uint64_t v37 = &v19[*(int *)(v17 + 44)];
  *uint64_t v37 = (char)v7;
  *((void *)v37 + 1) = v30;
  *((void *)v37 + 2) = v32;
  *((void *)v37 + 3) = v34;
  *((void *)v37 + 4) = v36;
  v37[40] = 0;
  sub_100178110((uint64_t)v15, &qword_100E96BB8);
  uint64_t v38 = v44;
  sub_1007DEB24(v47, (uint64_t)v19, v44);
  static Alignment.leading.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v39 = v45;
  sub_10006DF38(v38, v45, &qword_100E96BB0);
  char v40 = (_OWORD *)(v39 + *(int *)(v46 + 44));
  long long v41 = v50;
  *char v40 = v49;
  v40[1] = v41;
  v40[2] = v51;
  sub_100178110(v38, &qword_100E96BB0);
  sub_10020E72C(v39, v48, &qword_100E96B40);
  return sub_100178110((uint64_t)v19, &qword_100E96BC0);
}

uint64_t sub_1007DC6A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v90 = a1;
  uint64_t v1 = type metadata accessor for Font.Leading();
  uint64_t v84 = *(void *)(v1 - 8);
  uint64_t v85 = (char *)v1;
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v78 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for NewsArticleComponentContentViewModel(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v91 = sub_10017DF08(&qword_100E96B90);
  __chkstk_darwin(v91);
  uint64_t v93 = (uint64_t *)((char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v92 = sub_10017DF08(&qword_100E96B60);
  __chkstk_darwin(v92);
  uint64_t v9 = (char *)&v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_10017DF08(&qword_100E96B98);
  __chkstk_darwin(v86);
  uint64_t v88 = (uint64_t)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v78 - v12;
  uint64_t v81 = sub_10017DF08(&qword_100E744A8);
  __chkstk_darwin(v81);
  uint64_t v15 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v16);
  uint64_t v18 = (_OWORD *)((char *)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v80 = sub_10017DF08(&qword_100E96BA0);
  __chkstk_darwin(v80);
  uint64_t v83 = (uint64_t)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v82 = (uint64_t)&v78 - v21;
  __chkstk_darwin(v22);
  uint64_t v87 = (uint64_t)&v78 - v23;
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v78 - v25;
  uint64_t v27 = type metadata accessor for NewsArticleComponentViewModel(0);
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v78 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for NewsArticleComponentView();
  sub_100126E6C((uint64_t)&v89[*(int *)(v30 + 28)], (uint64_t)v29, (void (*)(void))type metadata accessor for NewsArticleComponentViewModel);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100363160((uint64_t)v29, (uint64_t)v6);
    uint64_t v31 = v6[1];
    uint64_t v94 = *v6;
    uint64_t v95 = v31;
    sub_10014A85C();
    swift_bridgeObjectRetain();
    uint64_t v32 = Text.init<A>(_:)();
    uint64_t v34 = v33;
    char v36 = v35 & 1;
    static Font.subheadline.getter();
    uint64_t v38 = v84;
    uint64_t v37 = (uint64_t)v85;
    (*(void (**)(char *, void, char *))(v84 + 104))(v3, enum case for Font.Leading.tight(_:), v85);
    Font.leading(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v3, v37);
    uint64_t v39 = Text.font(_:)();
    uint64_t v41 = v40;
    LOBYTE(v37) = v42;
    uint64_t v44 = v43;
    swift_release();
    sub_100191924(v32, v34, v36);
    swift_bridgeObjectRelease();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v46 = v93;
    uint64_t *v93 = v39;
    v46[1] = v41;
    *((unsigned char *)v46 + 16) = v37 & 1;
    v46[3] = v44;
    v46[4] = KeyPath;
    *((_WORD *)v46 + 20) = 0;
    *((unsigned char *)v46 + 42) = 1;
    swift_storeEnumTagMultiPayload();
    sub_10017DF08(&qword_100E77CD8);
    sub_1001246C8(&qword_100E96B58, &qword_100E96B60);
    sub_1007DFAD0(&qword_100E77CD0, &qword_100E77CD8, (void (*)(void))sub_1004743DC);
    _ConditionalContent<>.init(storage:)();
    return sub_1007DFC60((uint64_t)v6, (void (*)(void))type metadata accessor for NewsArticleComponentContentViewModel);
  }
  else
  {
    static Color.white.getter();
    uint64_t v48 = Color.opacity(_:)();
    swift_release();
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v49 = v94;
    uint64_t v89 = v9;
    char v50 = v95;
    uint64_t v85 = v13;
    uint64_t v51 = v96;
    char v52 = v97;
    uint64_t v84 = v98;
    uint64_t v79 = v99;
    uint64_t v53 = (char *)v18 + *(int *)(v16 + 20);
    uint64_t v54 = enum case for RoundedCornerStyle.continuous(_:);
    uint64_t v55 = type metadata accessor for RoundedCornerStyle();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v55 - 8) + 104))(v53, v54, v55);
    __asm { FMOV            V0.2D, #4.0 }
    *uint64_t v18 = _Q0;
    sub_100126E6C((uint64_t)v18, (uint64_t)v15, (void (*)(void))&type metadata accessor for RoundedRectangle);
    *(_WORD *)&v15[*(int *)(v81 + 36)] = 256;
    sub_10006DF38((uint64_t)v15, (uint64_t)&v26[*(int *)(v80 + 36)], &qword_100E744A8);
    *(void *)uint64_t v26 = v48;
    *((void *)v26 + 1) = v49;
    v26[16] = v50;
    *((void *)v26 + 3) = v51;
    v26[32] = v52;
    uint64_t v61 = v79;
    *((void *)v26 + 5) = v84;
    *((void *)v26 + 6) = v61;
    swift_retain();
    sub_100178110((uint64_t)v15, &qword_100E744A8);
    sub_1007DFC60((uint64_t)v18, (void (*)(void))&type metadata accessor for RoundedRectangle);
    swift_release();
    uint64_t v62 = v87;
    sub_10006DF38((uint64_t)v26, v87, &qword_100E96BA0);
    LOBYTE(v53) = static Edge.Set.trailing.getter();
    EdgeInsets.init(_all:)();
    uint64_t v64 = v63;
    uint64_t v66 = v65;
    uint64_t v68 = v67;
    uint64_t v70 = v69;
    uint64_t v71 = (uint64_t)v85;
    sub_10006DF38((uint64_t)v26, (uint64_t)v85, &qword_100E96BA0);
    uint64_t v72 = v71 + *(int *)(v86 + 36);
    *(unsigned char *)uint64_t v72 = (_BYTE)v53;
    *(void *)(v72 + 8) = v64;
    *(void *)(v72 + 16) = v66;
    *(void *)(v72 + 24) = v68;
    *(void *)(v72 + 32) = v70;
    *(unsigned char *)(v72 + 40) = 0;
    uint64_t v73 = v82;
    sub_10006DF38((uint64_t)v26, v82, &qword_100E96BA0);
    uint64_t v74 = v83;
    sub_10006DF38(v62, v83, &qword_100E96BA0);
    uint64_t v75 = v88;
    sub_10006DF38(v71, v88, &qword_100E96B98);
    uint64_t v76 = (uint64_t)v89;
    sub_10006DF38(v73, (uint64_t)v89, &qword_100E96BA0);
    uint64_t v77 = sub_10017DF08(&qword_100E96BA8);
    sub_10006DF38(v74, v76 + *(int *)(v77 + 48), &qword_100E96BA0);
    sub_10006DF38(v75, v76 + *(int *)(v77 + 64), &qword_100E96B98);
    sub_100178110(v75, &qword_100E96B98);
    sub_100178110(v74, &qword_100E96BA0);
    sub_100178110(v73, &qword_100E96BA0);
    sub_10006DF38(v76, (uint64_t)v93, &qword_100E96B60);
    swift_storeEnumTagMultiPayload();
    sub_10017DF08(&qword_100E77CD8);
    sub_1001246C8(&qword_100E96B58, &qword_100E96B60);
    sub_1007DFAD0(&qword_100E77CD0, &qword_100E77CD8, (void (*)(void))sub_1004743DC);
    _ConditionalContent<>.init(storage:)();
    sub_100178110(v76, &qword_100E96B60);
    sub_100178110(v71, &qword_100E96B98);
    sub_100178110(v62, &qword_100E96BA0);
    return sub_100178110((uint64_t)v26, &qword_100E96BA0);
  }
}

uint64_t sub_1007DD028()
{
  uint64_t v1 = v0;
  uint64_t v27 = type metadata accessor for ContentSizeCategory();
  uint64_t v2 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v26 - v6;
  uint64_t v8 = type metadata accessor for NewsArticleComponentView();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v26 - v12;
  uint64_t v14 = *(void *)(v1 + 16);
  char v15 = *(unsigned char *)(v1 + 24);
  sub_100195B7C(v14, v15);
  sub_1005D1EBC();
  int v17 = v16;
  sub_10018F6D8(v14, v15);
  sub_100126E6C(v1, (uint64_t)v13, (void (*)(void))type metadata accessor for NewsArticleComponentView);
  if (v17 != 1)
  {
    sub_1007DFC60((uint64_t)v13, (void (*)(void))type metadata accessor for NewsArticleComponentView);
    sub_100126E6C(v1, (uint64_t)v10, (void (*)(void))type metadata accessor for NewsArticleComponentView);
    goto LABEL_5;
  }
  sub_10014E6E8();
  uint64_t v18 = v27;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for ContentSizeCategory.medium(_:), v27);
  BOOL v19 = sub_1007DE734((uint64_t)v7, (uint64_t)v4);
  uint64_t v20 = *(void (**)(char *, uint64_t))(v2 + 8);
  v20(v4, v18);
  v20(v7, v18);
  sub_1007DFC60((uint64_t)v13, (void (*)(void))type metadata accessor for NewsArticleComponentView);
  sub_100126E6C(v1, (uint64_t)v10, (void (*)(void))type metadata accessor for NewsArticleComponentView);
  if (!v19)
  {
LABEL_5:
    char v24 = 0;
    goto LABEL_6;
  }
  uint64_t v21 = *(void *)v10;
  char v22 = v10[8];
  sub_100195B7C(*(void *)v10, v22);
  sub_100149AE8();
  char v24 = v23;
  sub_10018F6D8(v21, v22);
LABEL_6:
  sub_1007DFC60((uint64_t)v10, (void (*)(void))type metadata accessor for NewsArticleComponentView);
  return v24 & 1;
}

uint64_t sub_1007DD318@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v46 = a1;
  uint64_t v3 = type metadata accessor for ContentSizeCategory();
  uint64_t v44 = *(void *)(v3 - 8);
  uint64_t v45 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v43 - v7;
  uint64_t v9 = type metadata accessor for NewsArticleComponentView();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v43 - v13;
  __chkstk_darwin(v15);
  int v17 = (char *)&v43 - v16;
  uint64_t v18 = *(void *)(v2 + 16);
  char v19 = *(unsigned char *)(v2 + 24);
  sub_100195B7C(v18, v19);
  sub_1005D1EBC();
  int v21 = v20;
  sub_10018F6D8(v18, v19);
  sub_100126E6C(v2, (uint64_t)v17, (void (*)(void))type metadata accessor for NewsArticleComponentView);
  if (v21 != 1)
  {
    sub_1007DFC60((uint64_t)v17, (void (*)(void))type metadata accessor for NewsArticleComponentView);
    uint64_t v26 = v46;
LABEL_5:
    uint64_t v28 = *(void *)(v2 + 16);
    char v29 = *(unsigned char *)(v2 + 24);
    sub_100195B7C(v28, v29);
    sub_1005D1EBC();
    unsigned int v31 = v30;
    sub_10018F6D8(v28, v29);
    sub_100126E6C(v2, (uint64_t)v14, (void (*)(void))type metadata accessor for NewsArticleComponentView);
    if (v31 >= 2)
    {
      sub_10014E6E8();
      uint64_t v33 = v44;
      uint64_t v32 = v45;
      (*(void (**)(char *, void, uint64_t))(v44 + 104))(v5, enum case for ContentSizeCategory.extraExtraLarge(_:), v45);
      BOOL v34 = sub_1007DE734((uint64_t)v8, (uint64_t)v5);
      char v35 = *(void (**)(char *, uint64_t))(v33 + 8);
      v35(v5, v32);
      v35(v8, v32);
      sub_1007DFC60((uint64_t)v14, (void (*)(void))type metadata accessor for NewsArticleComponentView);
      sub_100126E6C(v2, (uint64_t)v11, (void (*)(void))type metadata accessor for NewsArticleComponentView);
      if (v34)
      {
        uint64_t v36 = *(void *)v11;
        char v37 = v11[8];
        sub_100195B7C(*(void *)v11, v37);
        sub_100149AE8();
        char v39 = v38;
        sub_10018F6D8(v36, v37);
        sub_1007DFC60((uint64_t)v11, (void (*)(void))type metadata accessor for NewsArticleComponentView);
        if (v39)
        {
          uint64_t v27 = (unsigned int *)&enum case for DynamicTypeSize.xxLarge(_:);
          goto LABEL_12;
        }
LABEL_11:
        uint64_t v27 = (unsigned int *)&enum case for DynamicTypeSize.accessibility5(_:);
        goto LABEL_12;
      }
    }
    else
    {
      sub_1007DFC60((uint64_t)v14, (void (*)(void))type metadata accessor for NewsArticleComponentView);
      sub_100126E6C(v2, (uint64_t)v11, (void (*)(void))type metadata accessor for NewsArticleComponentView);
    }
    sub_1007DFC60((uint64_t)v11, (void (*)(void))type metadata accessor for NewsArticleComponentView);
    goto LABEL_11;
  }
  uint64_t v22 = *(void *)v17;
  char v23 = v17[8];
  sub_100195B7C(*(void *)v17, v23);
  sub_100149AE8();
  char v25 = v24;
  sub_10018F6D8(v22, v23);
  sub_1007DFC60((uint64_t)v17, (void (*)(void))type metadata accessor for NewsArticleComponentView);
  uint64_t v26 = v46;
  if ((v25 & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v27 = (unsigned int *)&enum case for DynamicTypeSize.large(_:);
LABEL_12:
  uint64_t v40 = *v27;
  uint64_t v41 = type metadata accessor for DynamicTypeSize();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 104))(v26, v40, v41);
}

uint64_t sub_1007DD76C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v69 = a1;
  uint64_t v2 = type metadata accessor for BlendMode();
  uint64_t v64 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_10017DF08(&qword_100E651D0);
  __chkstk_darwin(v62);
  uint64_t v68 = (uint64_t)v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Font.Leading();
  uint64_t v65 = *(void *)(v6 - 8);
  uint64_t v66 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_10017DF08(&qword_100E863B0);
  uint64_t v59 = *(void *)(v10 - 8);
  uint64_t v60 = v10;
  __chkstk_darwin(v10);
  uint64_t v57 = (char *)v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_10017DF08(&qword_100E96B68);
  __chkstk_darwin(v56);
  uint64_t v61 = (char *)v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100E96B70);
  __chkstk_darwin(v13);
  uint64_t v58 = (char *)v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v63 = (uint64_t)v51 - v16;
  uint64_t v17 = sub_10017DF08(&qword_100E96B78);
  __chkstk_darwin(v17);
  char v19 = (char *)v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for NewsArticleComponentViewModel(0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *(int *)(type metadata accessor for NewsArticleComponentView() + 28);
  uint64_t v67 = v1;
  sub_100126E6C(v1 + v23, (uint64_t)v22, (void (*)(void))type metadata accessor for NewsArticleComponentViewModel);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v51[1] = v17;
    char v52 = v19;
    uint64_t v53 = v13;
    uint64_t v54 = v4;
    uint64_t v55 = v2;
    LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v24._uint64_t countAndFlagsBits = 0x206E69206E65704FLL;
    v24._object = (void *)0xED0000207377654ELL;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v24);
    Image.init(systemName:)();
    LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
    swift_release();
    v25._uint64_t countAndFlagsBits = 0;
    v25._object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v25);
    LocalizedStringKey.init(stringInterpolation:)();
    uint64_t v26 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v28 = v27;
    char v30 = v29 & 1;
    static Font.caption.getter();
    uint64_t v32 = v65;
    uint64_t v31 = v66;
    (*(void (**)(char *, void, uint64_t))(v65 + 104))(v8, enum case for Font.Leading.tight(_:), v66);
    Font.leading(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v31);
    uint64_t v33 = Text.font(_:)();
    uint64_t v35 = v34;
    LOBYTE(v31) = v36;
    uint64_t v38 = v37;
    swift_release();
    sub_100191924(v26, v28, v30);
    swift_bridgeObjectRelease();
    uint64_t v70 = v33;
    uint64_t v71 = v35;
    char v72 = v31 & 1;
    uint64_t v73 = v38;
    uint64_t v39 = v68;
    sub_1007DD318(v68);
    type metadata accessor for DynamicTypeSize();
    sub_1007E007C(&qword_100E651F0, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
    uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
    if (result)
    {
      sub_1001246C8((unint64_t *)&unk_100EAADB0, &qword_100E651D0);
      uint64_t v41 = v57;
      View.dynamicTypeSize<A>(_:)();
      sub_100178110(v39, &qword_100E651D0);
      sub_100191924(v70, v71, v72);
      swift_bridgeObjectRelease();
      int v42 = static HierarchicalShapeStyle.tertiary.getter();
      uint64_t v44 = v59;
      uint64_t v43 = v60;
      uint64_t v45 = (uint64_t)v61;
      (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v61, v41, v60);
      *(_DWORD *)(v45 + *(int *)(v56 + 36)) = v42;
      (*(void (**)(char *, uint64_t))(v44 + 8))(v41, v43);
      uint64_t v46 = v64;
      uint64_t v48 = v54;
      uint64_t v47 = v55;
      (*(void (**)(char *, void, uint64_t))(v64 + 104))(v54, enum case for BlendMode.plusLighter(_:), v55);
      uint64_t v49 = (uint64_t)v58;
      (*(void (**)(char *, char *, uint64_t))(v46 + 16))(&v58[*(int *)(v53 + 36)], v48, v47);
      sub_10006DF38(v45, v49, &qword_100E96B68);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v48, v47);
      sub_100178110(v45, &qword_100E96B68);
      uint64_t v50 = v63;
      sub_10020E72C(v49, v63, &qword_100E96B70);
      sub_10006DF38(v50, (uint64_t)v52, &qword_100E96B70);
      swift_storeEnumTagMultiPayload();
      sub_1007DFAD0(&qword_100E96B80, &qword_100E96B70, (void (*)(void))sub_1007DFB4C);
      _ConditionalContent<>.init(storage:)();
      sub_100178110(v50, &qword_100E96B70);
      return sub_1007DFC60((uint64_t)v22, (void (*)(void))type metadata accessor for NewsArticleComponentViewModel);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_1007DFAD0(&qword_100E96B80, &qword_100E96B70, (void (*)(void))sub_1007DFB4C);
    return _ConditionalContent<>.init(storage:)();
  }
  return result;
}

uint64_t sub_1007DDFEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v40 = a1;
  uint64_t v37 = sub_10017DF08(&qword_100E96B10);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100162EF8();
  uint64_t v35 = v4;
  __chkstk_darwin(v5);
  uint64_t v7 = (uint64_t *)((char *)&v33 - v6);
  uint64_t v8 = sub_10017DF08(&qword_100E749B0);
  __chkstk_darwin(v8 - 8);
  sub_100162EF8();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v33 - v12;
  uint64_t v14 = (int *)sub_10017DF08(&qword_100E96B18);
  sub_100162E4C();
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v36 = (uint64_t)&v33 - v19;
  uint64_t v20 = type metadata accessor for NewsArticleComponentContentViewModel(0);
  sub_100162E4C();
  __chkstk_darwin(v21);
  sub_100109314();
  uint64_t v23 = v22;
  uint64_t v39 = sub_10017DF08(&qword_100E96B20);
  sub_100162E4C();
  __chkstk_darwin(v24);
  sub_10016279C();
  type metadata accessor for NewsArticleComponentViewModel(0);
  sub_100162E4C();
  __chkstk_darwin(v25);
  sub_100162E88();
  uint64_t v26 = type metadata accessor for NewsArticleComponentView();
  sub_100126E6C(v38 + *(int *)(v26 + 28), v1, (void (*)(void))type metadata accessor for NewsArticleComponentViewModel);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v34 = v23;
    sub_100363160(v1, v23);
    sub_10006DF38(v23 + *(int *)(v20 + 20), (uint64_t)v13, &qword_100E749B0);
    sub_10006DF38((uint64_t)v13, v10, &qword_100E749B0);
    uint64_t v27 = type metadata accessor for URL();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 1, 1, v27);
    *uint64_t v7 = 0;
    uint64_t v28 = v37;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7 + *(int *)(v37 + 36), 1, 1, v27);
    *(void *)((char *)v7 + *(int *)(v28 + 40)) = 0x8000000000000000;
    sub_10006DF38((uint64_t)v7, v35, &qword_100E96B10);
    State.init(wrappedValue:)();
    sub_100178110((uint64_t)v7, &qword_100E96B10);
    sub_100330DA8(v10, (uint64_t)v17);
    *(void *)&v17[v14[9]] = 0x3FF0000000000000;
    *(void *)&v17[v14[10]] = 0;
    char v29 = (void *(**)@<X0>(unint64_t@<X0>, void *@<X8>))&v17[v14[11]];
    char *v29 = sub_10032E304;
    v29[1] = 0;
    sub_100178110((uint64_t)v13, &qword_100E749B0);
    uint64_t v30 = v36;
    sub_10020E72C((uint64_t)v17, v36, &qword_100E96B18);
    sub_10006DF38(v30, (uint64_t)v2, &qword_100E96B18);
    swift_storeEnumTagMultiPayload();
    sub_1001246C8(&qword_100E96B28, &qword_100E96B18);
    _ConditionalContent<>.init(storage:)();
    sub_100178110(v30, &qword_100E96B18);
    return sub_1007DFC60(v34, (void (*)(void))type metadata accessor for NewsArticleComponentContentViewModel);
  }
  else
  {
    static Color.white.getter();
    uint64_t v32 = Color.opacity(_:)();
    swift_release();
    *uint64_t v2 = v32;
    swift_storeEnumTagMultiPayload();
    sub_1001246C8(&qword_100E96B28, &qword_100E96B18);
    return _ConditionalContent<>.init(storage:)();
  }
}

uint64_t sub_1007DE494()
{
  type metadata accessor for NewsArticleComponentView();
  uint64_t v0 = sub_100362174();
  uint64_t v2 = v1;
  uint64_t v3 = sub_100362068();
  uint64_t v5 = v4;
  id v6 = [self mainBundle];
  v24._object = (void *)0x8000000100CB36F0;
  v7._uint64_t countAndFlagsBits = 0x206E69206E65704FLL;
  v7._object = (void *)0xEC0000007377654ELL;
  v8._uint64_t countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v24._uint64_t countAndFlagsBits = 0xD000000000000071;
  Swift::String v9 = NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v24);

  if (!v2)
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
    if (!v5) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  swift_bridgeObjectRetain();
  sub_10012B78C();
  uint64_t v11 = v10;
  unint64_t v12 = v10[2];
  if (v12 >= v10[3] >> 1)
  {
    sub_10012B78C();
    uint64_t v11 = v21;
  }
  v11[2] = v12 + 1;
  uint64_t v13 = &v11[2 * v12];
  v13[4] = v0;
  v13[5] = v2;
  if (v5)
  {
LABEL_7:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_10017A8F8();
      uint64_t v11 = v22;
    }
    unint64_t v14 = v11[2];
    if (v14 >= v11[3] >> 1)
    {
      sub_10012B78C();
      uint64_t v11 = v23;
    }
    v11[2] = v14 + 1;
    uint64_t v15 = &v11[2 * v14];
    v15[4] = v3;
    v15[5] = v5;
  }
LABEL_12:
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_10017A8F8();
    uint64_t v11 = v19;
  }
  unint64_t v16 = v11[2];
  if (v16 >= v11[3] >> 1)
  {
    sub_10012B78C();
    uint64_t v11 = v20;
  }
  v11[2] = v16 + 1;
  *(Swift::String *)&v11[2 * v16 + 4] = v9;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10017DF08(&qword_100E91BC0);
  sub_1001246C8((unint64_t *)&qword_100E73CB0, &qword_100E91BC0);
  uint64_t v17 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  return v17;
}

BOOL sub_1007DE734(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = a2;
  uint64_t v3 = type metadata accessor for ContentSizeCategory();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  Swift::String v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v10 = __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v21 - v11;
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16);
  v13((char *)&v21 - v11, a1, v3, v10);
  unint64_t v14 = *(uint64_t (**)(char *, uint64_t))(v5 + 88);
  int v15 = v14(v12, v3);
  unint64_t v16 = 0;
  int v17 = enum case for ContentSizeCategory.extraSmall(_:);
  if (v15 != enum case for ContentSizeCategory.extraSmall(_:))
  {
    if (v15 == enum case for ContentSizeCategory.small(_:))
    {
      unint64_t v16 = 1;
      goto LABEL_24;
    }
    if (v15 == enum case for ContentSizeCategory.medium(_:))
    {
      unint64_t v16 = 2;
      goto LABEL_24;
    }
    if (v15 == enum case for ContentSizeCategory.large(_:)) {
      goto LABEL_7;
    }
    if (v15 == enum case for ContentSizeCategory.extraLarge(_:))
    {
      unint64_t v16 = 4;
    }
    else if (v15 == enum case for ContentSizeCategory.extraExtraLarge(_:))
    {
      unint64_t v16 = 5;
    }
    else if (v15 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
    {
      unint64_t v16 = 6;
    }
    else if (v15 == enum case for ContentSizeCategory.accessibilityMedium(_:))
    {
      unint64_t v16 = 7;
    }
    else if (v15 == enum case for ContentSizeCategory.accessibilityLarge(_:))
    {
      unint64_t v16 = 8;
    }
    else if (v15 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
    {
      unint64_t v16 = 9;
    }
    else if (v15 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
    {
      unint64_t v16 = 10;
    }
    else
    {
      if (v15 != enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v12, v3);
LABEL_7:
        unint64_t v16 = 3;
        goto LABEL_24;
      }
      unint64_t v16 = 11;
    }
  }
LABEL_24:
  ((void (*)(char *, uint64_t, uint64_t))v13)(v8, v22, v3);
  int v18 = v14(v8, v3);
  if (v18 == v17)
  {
    unint64_t v19 = 0;
  }
  else if (v18 == enum case for ContentSizeCategory.small(_:))
  {
    unint64_t v19 = 1;
  }
  else if (v18 == enum case for ContentSizeCategory.medium(_:))
  {
    unint64_t v19 = 2;
  }
  else
  {
    if (v18 != enum case for ContentSizeCategory.large(_:))
    {
      if (v18 == enum case for ContentSizeCategory.extraLarge(_:))
      {
        unint64_t v19 = 4;
        return v16 >= v19;
      }
      if (v18 == enum case for ContentSizeCategory.extraExtraLarge(_:))
      {
        unint64_t v19 = 5;
        return v16 >= v19;
      }
      if (v18 == enum case for ContentSizeCategory.extraExtraExtraLarge(_:))
      {
        unint64_t v19 = 6;
        return v16 >= v19;
      }
      if (v18 == enum case for ContentSizeCategory.accessibilityMedium(_:))
      {
        unint64_t v19 = 7;
        return v16 >= v19;
      }
      if (v18 == enum case for ContentSizeCategory.accessibilityLarge(_:))
      {
        unint64_t v19 = 8;
        return v16 >= v19;
      }
      if (v18 == enum case for ContentSizeCategory.accessibilityExtraLarge(_:))
      {
        unint64_t v19 = 9;
        return v16 >= v19;
      }
      if (v18 == enum case for ContentSizeCategory.accessibilityExtraExtraLarge(_:))
      {
        unint64_t v19 = 10;
        return v16 >= v19;
      }
      if (v18 == enum case for ContentSizeCategory.accessibilityExtraExtraExtraLarge(_:))
      {
        unint64_t v19 = 11;
        return v16 >= v19;
      }
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
    }
    unint64_t v19 = 3;
  }
  return v16 >= v19;
}

uint64_t sub_1007DEB24@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v92 = a2;
  uint64_t v94 = a1;
  uint64_t v96 = a3;
  uint64_t v82 = sub_10017DF08(&qword_100E96BC8);
  __chkstk_darwin(v82);
  uint64_t v81 = (uint64_t)v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v80 = (void *)((char *)v73 - v5);
  uint64_t v89 = sub_10017DF08(&qword_100E96BD0);
  __chkstk_darwin(v89);
  uint64_t v79 = (uint64_t)v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v83 = (uint64_t)v73 - v8;
  uint64_t v86 = sub_10017DF08(&qword_100E96BD8);
  __chkstk_darwin(v86);
  uint64_t v88 = (void *)((char *)v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v77 = type metadata accessor for Font.Leading();
  uint64_t v76 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v75 = (char *)v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E749B0);
  __chkstk_darwin(v11 - 8);
  uint64_t v78 = (uint64_t)v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v87 = (uint64_t)v73 - v14;
  __chkstk_darwin(v15);
  uint64_t v85 = (uint64_t)v73 - v16;
  uint64_t v93 = type metadata accessor for URL();
  uint64_t v91 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v90 = (char *)v73 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_10017DF08(&qword_100E96BE0);
  __chkstk_darwin(v95);
  unint64_t v19 = (char *)v73 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = type metadata accessor for NewsArticleComponentContentViewModel(0);
  __chkstk_darwin(v84);
  uint64_t v21 = (char *)v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10017DF08(&qword_100E96BE8);
  __chkstk_darwin(v22);
  Swift::String v24 = (char *)v73 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10017DF08(&qword_100E96BC0);
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(void *)(v26 + 64);
  __chkstk_darwin(v25);
  uint64_t v28 = type metadata accessor for NewsArticleComponentViewModel(0);
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)v73 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for NewsArticleComponentView();
  sub_100126E6C((uint64_t)&v94[*(int *)(v31 + 28)], (uint64_t)v30, (void (*)(void))type metadata accessor for NewsArticleComponentViewModel);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v73[0] = v26;
    uint64_t v32 = v90;
    uint64_t v33 = v91;
    v73[1] = v22;
    v73[2] = v25;
    uint64_t v74 = v24;
    uint64_t v94 = v19;
    sub_100363160((uint64_t)v30, (uint64_t)v21);
    uint64_t v35 = v84;
    uint64_t v34 = v85;
    sub_10006DF38((uint64_t)&v21[*(int *)(v84 + 32)], v85, &qword_100E749B0);
    uint64_t v36 = (uint64_t)v21;
    if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, v93) == 1)
    {
      sub_100178110(v34, &qword_100E749B0);
      uint64_t v37 = &v21[*(int *)(v35 + 24)];
      uint64_t v38 = *((void *)v37 + 1);
      uint64_t v97 = *(void *)v37;
      uint64_t v98 = v38;
      sub_10014A85C();
      swift_bridgeObjectRetain();
      uint64_t v39 = Text.init<A>(_:)();
      uint64_t v41 = v40;
      char v43 = v42 & 1;
      static Font.headline.getter();
      uint64_t v44 = v76;
      uint64_t v45 = v75;
      uint64_t v46 = v77;
      (*(void (**)(char *, void, uint64_t))(v76 + 104))(v75, enum case for Font.Leading.tight(_:), v77);
      Font.leading(_:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v46);
      uint64_t v47 = Text.font(_:)();
      uint64_t v49 = v48;
      LOBYTE(v44) = v50;
      uint64_t v52 = v51;
      swift_release();
      sub_100191924(v39, v41, v43);
      swift_bridgeObjectRelease();
      uint64_t v53 = v88;
      *uint64_t v88 = v47;
      v53[1] = v49;
      *((unsigned char *)v53 + 16) = v44 & 1;
      v53[3] = v52;
      uint64_t v54 = v36;
      swift_storeEnumTagMultiPayload();
      sub_1001246C8(&qword_100E96BF0, &qword_100E96BD0);
      uint64_t v55 = (uint64_t)v94;
      _ConditionalContent<>.init(storage:)();
    }
    else
    {
      uint64_t v57 = v33;
      uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 32);
      uint64_t v59 = v93;
      v58(v32, v34, v93);
      uint64_t v60 = *(void (**)(uint64_t, char *, uint64_t))(v57 + 16);
      uint64_t v61 = v87;
      v60(v87, v32, v59);
      _s7Weather24LocationCompositionStateOwst_0(v61, 0, 1, v59);
      sub_10006DF38(v92, (uint64_t)v73 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_100E96BC0);
      uint64_t v62 = *(unsigned __int8 *)(v73[0] + 80);
      uint64_t v92 = v36;
      uint64_t v63 = (v62 + 16) & ~v62;
      uint64_t v64 = swift_allocObject();
      sub_10020E72C((uint64_t)v73 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), v64 + v63, &qword_100E96BC0);
      uint64_t v65 = v78;
      sub_10006DF38(v61, v78, &qword_100E749B0);
      uint64_t v66 = (uint64_t (*)(unint64_t))swift_allocObject();
      *((void *)v66 + 2) = sub_1007DF640;
      *((void *)v66 + 3) = 0;
      *((void *)v66 + 4) = sub_1007DFF00;
      *((void *)v66 + 5) = v64;
      uint64_t v67 = v79;
      _s7Weather24LocationCompositionStateOwst_0(v79, 1, 1, v59);
      uint64_t v68 = (int *)v89;
      uint64_t v69 = (uint64_t)v80;
      void *v80 = 0;
      uint64_t v70 = v82;
      _s7Weather24LocationCompositionStateOwst_0(v69 + *(int *)(v82 + 36), 1, 1, v59);
      *(void *)(v69 + *(int *)(v70 + 40)) = 0x8000000000000000;
      sub_10006DF38(v69, v81, &qword_100E96BC8);
      uint64_t v54 = v92;
      State.init(wrappedValue:)();
      sub_100178110(v69, &qword_100E96BC8);
      sub_100330DA8(v65, v67);
      *(void *)(v67 + v68[9]) = 0x3FF0000000000000;
      *(void *)(v67 + v68[10]) = 0;
      uint64_t v71 = (uint64_t (**)(unint64_t))(v67 + v68[11]);
      char *v71 = sub_1007DFFB8;
      v71[1] = v66;
      sub_100178110(v87, &qword_100E749B0);
      uint64_t v72 = v83;
      sub_10020E72C(v67, v83, &qword_100E96BD0);
      sub_10006DF38(v72, (uint64_t)v88, &qword_100E96BD0);
      swift_storeEnumTagMultiPayload();
      sub_1001246C8(&qword_100E96BF0, &qword_100E96BD0);
      uint64_t v55 = (uint64_t)v94;
      _ConditionalContent<>.init(storage:)();
      sub_100178110(v72, &qword_100E96BD0);
      (*(void (**)(char *, uint64_t))(v91 + 8))(v90, v59);
    }
    sub_10006DF38(v55, (uint64_t)v74, &qword_100E96BE0);
    swift_storeEnumTagMultiPayload();
    sub_1007DFAD0(&qword_100E96BF8, &qword_100E96BC0, (void (*)(void))sub_1007DFCBC);
    sub_1007DFD5C();
    _ConditionalContent<>.init(storage:)();
    sub_100178110(v55, &qword_100E96BE0);
    return sub_1007DFC60(v54, (void (*)(void))type metadata accessor for NewsArticleComponentContentViewModel);
  }
  else
  {
    sub_10006DF38(v92, (uint64_t)v73 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_100E96BC0);
    sub_10006DF38((uint64_t)v73 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v24, &qword_100E96BC0);
    swift_storeEnumTagMultiPayload();
    sub_1007DFAD0(&qword_100E96BF8, &qword_100E96BC0, (void (*)(void))sub_1007DFCBC);
    sub_1007DFD5C();
    _ConditionalContent<>.init(storage:)();
    return sub_100178110((uint64_t)v73 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_100E96BC0);
  }
}

uint64_t sub_1007DF640@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10017DF08(&qword_100E7DFA0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Image.ResizingMode();
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v6 + 104))(v9, enum case for Image.ResizingMode.stretch(_:), v5, v7);
  Image.resizable(capInsets:resizingMode:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t v10 = enum case for Image.TemplateRenderingMode.template(_:);
  uint64_t v11 = type metadata accessor for Image.TemplateRenderingMode();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104))(v4, v10, v11);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 0, 1, v11);
  uint64_t v12 = Image.renderingMode(_:)();
  swift_release();
  sub_100178110((uint64_t)v4, &qword_100E7DFA0);
  uint64_t v13 = static Color.white.getter();
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = v12;
  *(void *)(a1 + 8) = result;
  *(void *)(a1 + 16) = v13;
  *(void *)(a1 + 24) = 0;
  *(_WORD *)(a1 + 32) = 1;
  return result;
}

unint64_t sub_1007DF850()
{
  unint64_t result = qword_100E96AC0;
  if (!qword_100E96AC0)
  {
    sub_10018C6DC(&qword_100E7A0C8);
    sub_10018C6DC(&qword_100E96AA0);
    sub_1001246C8(&qword_100E96AB8, &qword_100E96AA0);
    swift_getOpaqueTypeConformance2();
    sub_1007E007C((unint64_t *)&qword_100E66BF8, (void (*)(uint64_t))type metadata accessor for AutomationInfoViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96AC0);
  }
  return result;
}

unint64_t sub_1007DF964()
{
  unint64_t result = qword_100E96B48;
  if (!qword_100E96B48)
  {
    sub_10018C6DC(&qword_100E96B38);
    sub_1007DFA04();
    sub_1001246C8(&qword_100E6DE30, &qword_100E6DE38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96B48);
  }
  return result;
}

unint64_t sub_1007DFA04()
{
  unint64_t result = qword_100E96B50;
  if (!qword_100E96B50)
  {
    sub_10018C6DC(&qword_100E96B30);
    sub_1001246C8(&qword_100E96B58, &qword_100E96B60);
    sub_1007DFAD0(&qword_100E77CD0, &qword_100E77CD8, (void (*)(void))sub_1004743DC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96B50);
  }
  return result;
}

uint64_t sub_1007DFAD0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1007DFB4C()
{
  unint64_t result = qword_100E96B88;
  if (!qword_100E96B88)
  {
    sub_10018C6DC(&qword_100E96B68);
    sub_10018C6DC(&qword_100E651D0);
    sub_1001246C8((unint64_t *)&unk_100EAADB0, &qword_100E651D0);
    swift_getOpaqueTypeConformance2();
    sub_1001246C8(&qword_100E63EC8, &qword_100E63ED0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96B88);
  }
  return result;
}

uint64_t sub_1007DFC60(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

unint64_t sub_1007DFCBC()
{
  unint64_t result = qword_100E96C00;
  if (!qword_100E96C00)
  {
    sub_10018C6DC(&qword_100E96BB8);
    sub_1001246C8(&qword_100E79F38, &qword_100E744A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96C00);
  }
  return result;
}

unint64_t sub_1007DFD5C()
{
  unint64_t result = qword_100E96C08;
  if (!qword_100E96C08)
  {
    sub_10018C6DC(&qword_100E96BE0);
    sub_1001246C8(&qword_100E96BF0, &qword_100E96BD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96C08);
  }
  return result;
}

uint64_t sub_1007DFDFC()
{
  sub_10017DF08(&qword_100E96BC0);
  swift_release();
  sub_10017DF08(&qword_100E96BB8);
  type metadata accessor for RoundedRectangle();
  type metadata accessor for RoundedCornerStyle();
  sub_100162E4C();
  sub_100162F0C();
  v0();

  return swift_deallocObject();
}

uint64_t sub_1007DFF00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_10017DF08(&qword_100E96BC0) - 8);
  return sub_10006DF38(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1, &qword_100E96BC0);
}

uint64_t sub_1007DFF78()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1007DFFB8(unint64_t a1)
{
  return sub_1007DA99C(a1, *(void (**)(void *__return_ptr))(v1 + 16), *(void *)(v1 + 24), *(void (**)(void))(v1 + 32));
}

unint64_t sub_1007DFFD0()
{
  unint64_t result = qword_100E96C28;
  if (!qword_100E96C28)
  {
    sub_10018C6DC(&qword_100E96AA8);
    sub_1007DF850();
    sub_1007E007C((unint64_t *)&qword_100EAACA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96C28);
  }
  return result;
}

uint64_t sub_1007E007C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1007E00C4(int a1, int a2, unint64_t a3, unint64_t a4, unint64_t a5, void (*a6)(uint64_t, uint64_t), double a7)
{
  unint64_t v118 = a4;
  unsigned __int8 v119 = a6;
  unint64_t v116 = a5;
  unint64_t v117 = a3;
  int v104 = a2;
  int v115 = a1;
  uint64_t v101 = sub_10017DF08(&qword_100E7DC30);
  sub_100179C0C();
  uint64_t v100 = v8;
  __chkstk_darwin(v9);
  sub_100162EF8();
  uint64_t v102 = v10;
  __chkstk_darwin(v11);
  uint64_t v99 = (char *)v95 - v12;
  type metadata accessor for NumberFormatStyleConfiguration.Precision();
  sub_100179C0C();
  uint64_t v110 = v14;
  uint64_t v111 = v13;
  __chkstk_darwin(v13);
  sub_100109314();
  uint64_t v109 = v15;
  uint64_t v16 = type metadata accessor for Locale();
  __chkstk_darwin(v16 - 8);
  sub_100109314();
  uint64_t v113 = v17;
  sub_10017DF08(&qword_100E6ED20);
  sub_100179C0C();
  uint64_t v106 = v19;
  uint64_t v107 = v18;
  __chkstk_darwin(v18);
  sub_100162EF8();
  uint64_t v112 = v20;
  __chkstk_darwin(v21);
  char v105 = (char *)v95 - v22;
  uint64_t v23 = type metadata accessor for WeatherFormatPlaceholder();
  sub_100179C0C();
  uint64_t v114 = v24;
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)v95 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle();
  sub_100179C0C();
  uint64_t v103 = v29;
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)v95 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)v95 - v34;
  uint64_t v36 = sub_10017DF08(&qword_100E65250);
  sub_100179C0C();
  uint64_t v38 = v37;
  __chkstk_darwin(v39);
  sub_10017DF08(&qword_100E96CD8);
  sub_100179C0C();
  uint64_t v108 = v40;
  __chkstk_darwin(v41);
  __chkstk_darwin(v42);
  uint64_t v44 = (char *)v95 - v43;
  __chkstk_darwin(v45);
  uint64_t v49 = (char *)v95 - v48;
  if (!(v119 >> 6))
  {
    uint64_t v101 = (uint64_t)v35;
    v95[1] = v38;
    uint64_t v99 = (char *)v36;
    uint64_t v102 = v27;
    uint64_t v97 = v23;
    uint64_t v98 = v47;
    uint64_t v100 = v46;
    id v51 = (id)v118;
    uint64_t v96 = v28;
    if (v118)
    {
      sub_1001ABC4C(0, &qword_100E96CC8);
      id v52 = v51;
      id v53 = (id)v117;
      id v54 = v52;
      char v55 = static NSObject.== infix(_:_:)();
      uint64_t v56 = v101;
      if (v55)
      {

        double v57 = a7;
      }
      else
      {
        id v65 = v54;
        Measurement.init(value:unit:)();
        uint64_t v66 = v100;
        Measurement<>.converted(to:)();
        uint64_t v67 = *(void (**)(char *, uint64_t))(v108 + 8);
        v67(v44, v66);
        Measurement.value.getter();
        double v57 = v68;

        v67(v49, v66);
      }
      id v62 = (id)v117;
      uint64_t v64 = v114;
    }
    else
    {
      id v62 = (id)v117;
      id v63 = (id)v117;
      double v57 = a7;
      uint64_t v64 = v114;
      uint64_t v56 = v101;
    }
    uint64_t v69 = v102;
    char v70 = v115;
    uint64_t v71 = v32;
    switch((char)v119)
    {
      case 1:
        goto LABEL_22;
      case 2:
        char v70 = v104;
        goto LABEL_22;
      case 3:
        char v70 = v104;
        if (v115) {
          goto LABEL_23;
        }
LABEL_22:
        if (v70)
        {
LABEL_23:
          uint64_t v72 = v64;
          sub_1001ABC4C(0, &qword_100E96CC8);
          id v73 = v62;
          Measurement.init(value:unit:)();
          self;
          if (swift_dynamicCastObjCClass())
          {
            sub_1001ABC4C(0, (unint64_t *)&qword_100E659A0);
            id v74 = v73;
            Measurement.init(value:unit:)();
            static WeatherFormatStyle<>.weather.getter();
            NSUnitTemperature.BaseWeatherFormatStyle.secondary.getter();
            unsigned __int8 v119 = *(void (**)(uint64_t, uint64_t))(v103 + 8);
            v119(v56, v96);
            (*(void (**)(char *, void, uint64_t))(v72 + 104))(v69, enum case for WeatherFormatPlaceholder.none(_:), v97);
            type metadata accessor for UnitManager();
            static UnitManager.standard.getter();
            sub_10012BBE0();
            uint64_t v50 = Measurement.formatted<A>(_:placeholder:unitManager:)();

            swift_release();
            (*(void (**)(char *, uint64_t))(v72 + 8))(v69, v97);
            v119((uint64_t)v71, v96);
            sub_100162F0C();
            v75();
          }
          else
          {
            id v81 = [objc_allocWithZone((Class)NSMeasurementFormatter) init];
            [v81 setUnitOptions:5];
            id v82 = [v81 numberFormatter];
            if (!v82)
            {
LABEL_45:
              __break(1u);
              JUMPOUT(0x1007E0D24);
            }
            uint64_t v83 = v82;
            [v82 setMaximumFractionDigits:v116];

            uint64_t v50 = NSMeasurementFormatter.string<A>(from:)();
          }
          sub_100162F0C();
          v84();
          return v50;
        }
LABEL_25:
        double v120 = v57;
        static Locale.autoupdatingCurrent.getter();
        sub_100146A70();
        uint64_t v76 = v112;
        FloatingPointFormatStyle.init(locale:)();
        if ((v116 & 0x8000000000000000) == 0)
        {
          uint64_t v121 = 0;
          unint64_t v122 = v116;
          sub_10017DF08(&qword_100E96CE0);
          sub_1001246C8(&qword_100E96CE8, &qword_100E96CE0);
          sub_10019F174();
          uint64_t v77 = v105;
          uint64_t v78 = v107;
          FloatingPointFormatStyle.precision(_:)();
          sub_100162F0C();
          v79();
          uint64_t v80 = *(void (**)(uint64_t, uint64_t))(v106 + 8);
          v80(v76, v78);
          sub_1001246C8(&qword_100E6ED28, &qword_100E6ED20);
          BinaryFloatingPoint.formatted<A>(_:)();

          v80((uint64_t)v77, v78);
          return v121;
        }
        break;
      case 4:
        goto LABEL_25;
      default:
        goto LABEL_23;
    }
    goto LABEL_42;
  }
  if (v119 >> 6 == 1)
  {
    if (a7 > 1.0) {
      return 0;
    }
    unint64_t v59 = v117;
    char v60 = v115;
    uint64_t v61 = v112;
    switch((char)v118)
    {
      case 1:
        goto LABEL_31;
      case 2:
        char v60 = v104;
        goto LABEL_31;
      case 3:
        char v60 = v104;
        if (v115) {
          goto LABEL_32;
        }
LABEL_31:
        if ((v60 & 1) == 0)
        {
LABEL_34:
          double v120 = a7;
          static Locale.autoupdatingCurrent.getter();
          sub_100146A70();
          FloatingPointFormatStyle.init(locale:)();
          if ((v59 & 0x8000000000000000) == 0)
          {
            uint64_t v121 = 0;
            unint64_t v122 = v59;
            sub_10017DF08(&qword_100E96CE0);
            sub_1001246C8(&qword_100E96CE8, &qword_100E96CE0);
            sub_10019F174();
            uint64_t v90 = v105;
            uint64_t v91 = v107;
            FloatingPointFormatStyle.precision(_:)();
            sub_100162F0C();
            v92();
            uint64_t v93 = *(void (**)(uint64_t, uint64_t))(v106 + 8);
            v93(v61, v91);
            sub_1001246C8(&qword_100E6ED28, &qword_100E6ED20);
            BinaryFloatingPoint.formatted<A>(_:)();
            v93((uint64_t)v90, v91);
            return v121;
          }
          goto LABEL_44;
        }
LABEL_32:
        double v120 = a7;
        static Locale.autoupdatingCurrent.getter();
        sub_100146A70();
        uint64_t v85 = v102;
        FloatingPointFormatStyle.Percent.init(locale:)();
        if ((v59 & 0x8000000000000000) == 0)
        {
          uint64_t v121 = 0;
          unint64_t v122 = v59;
          sub_10017DF08(&qword_100E96CE0);
          sub_1001246C8(&qword_100E96CE8, &qword_100E96CE0);
          static NumberFormatStyleConfiguration.Precision.fractionLength<A>(_:)();
          uint64_t v86 = v99;
          uint64_t v87 = v101;
          FloatingPointFormatStyle.Percent.precision(_:)();
          sub_100162F0C();
          v88();
          uint64_t v89 = *(void (**)(char *, uint64_t))(v100 + 8);
          v89(v85, v87);
          sub_1001246C8((unint64_t *)&qword_100E7DC38, &qword_100E7DC30);
          BinaryFloatingPoint.formatted<A>(_:)();
          v89(v86, v87);
          return v121;
        }
        break;
      case 4:
        goto LABEL_34;
      default:
        goto LABEL_32;
    }
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  uint64_t v50 = 0;
  if (!(v116 | v118 | v117) && v119 == 128)
  {
    double v58 = round(a7);
    if ((~*(void *)&v58 & 0x7FF0000000000000) != 0)
    {
      if (v58 > -9.22337204e18)
      {
        if (v58 < 9.22337204e18)
        {
          uint64_t v121 = (uint64_t)v58;
          sub_10035E0C4();
          return BinaryInteger.formatted()()._countAndFlagsBits;
        }
        goto LABEL_41;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  return v50;
}

BOOL sub_1007E0D4C(unint64_t a1, unint64_t a2, uint64_t a3, unsigned __int8 a4, unint64_t a5, unint64_t a6, uint64_t a7, unsigned __int8 a8)
{
  int v14 = a4;
  int v15 = a8;
  if (a4 >> 6)
  {
    if (a4 >> 6 != 1)
    {
      if (a3 | a2 | a1 || a4 != 128)
      {
        if ((a8 & 0xC0) != 0x80) {
          return 0;
        }
        BOOL v25 = a8 == 128 && a5 == 1;
        if (!v25 || a7 | a6) {
          return 0;
        }
      }
      else if ((a8 & 0xC0) != 0x80 || a7 | a6 | a5 || a8 != 128)
      {
        return 0;
      }
      return 1;
    }
    if ((a8 & 0xC0) == 0x40) {
      return a1 == a5 && a6 == a2;
    }
    return 0;
  }
  if (a8 >= 0x40u) {
    return 0;
  }
  sub_1001ABC4C(0, (unint64_t *)&qword_100E65130);
  id v26 = (id)a6;
  id v17 = (id)a1;
  id v18 = (id)a5;
  id v19 = (id)a2;
  char v20 = static NSObject.== infix(_:_:)();

  if ((v20 & 1) == 0)
  {

    uint64_t v21 = v26;
    goto LABEL_29;
  }
  uint64_t v21 = v26;
  if (!a2)
  {
    if (!a6)
    {
      if (a3 != a7) {
        return 0;
      }
      return v14 == v15;
    }
LABEL_29:

    return 0;
  }
  if (!a6)
  {

    return 0;
  }
  sub_1001ABC4C(0, &qword_100E96CC8);
  id v22 = v19;
  id v23 = v26;
  char v24 = static NSObject.== infix(_:_:)();

  BOOL result = 0;
  if ((v24 & 1) != 0 && a3 == a7) {
    return v14 == v15;
  }
  return result;
}

BOOL sub_1007E0F48(uint64_t a1, char a2, uint64_t a3, char a4)
{
  BOOL v4 = *(double *)&a1 == *(double *)&a3;
  if (a4) {
    BOOL v4 = 0;
  }
  if (a2) {
    return a4 & (a1 == a3);
  }
  else {
    return v4;
  }
}

BOOL sub_1007E0F7C(uint64_t a1, uint64_t a2)
{
  return sub_1007E0F48(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)a2, *(unsigned char *)(a2 + 8));
}

BOOL sub_1007E0F98(uint64_t a1, uint64_t a2)
{
  return sub_1007E0D4C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned char *)(a2 + 24));
}

uint64_t sub_1007E0FBC(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_1007E0FC4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

void type metadata accessor for ChartTickValueKind()
{
}

void sub_1007E0FDC(uint64_t a1)
{
}

uint64_t sub_1007E0FF0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  BOOL v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_10027D4F8(*(id *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t sub_1007E1050(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  BOOL v4 = *(void **)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
  sub_10027D4F8(*(id *)a2, v4, v5, v6);
  __n128 v7 = *(void **)a1;
  uint64_t v8 = *(void **)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  unsigned __int8 v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_10027D954(v7, v8, v9, v10);
  return a1;
}

uint64_t sub_1007E10C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void **)a1;
  __n128 v7 = *(void **)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_10027D954(v5, v7, v6, v8);
  return a1;
}

uint64_t sub_1007E1110(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x1E && *(unsigned char *)(a1 + 25))
    {
      unsigned int v2 = *(_DWORD *)a1 + 29;
    }
    else
    {
      unsigned int v2 = ((*(unsigned __int8 *)(a1 + 24) >> 1) & 0x1C | (*(unsigned __int8 *)(a1 + 24) >> 6)) ^ 0x1F;
      if (v2 >= 0x1D) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t sub_1007E115C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x1D)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)BOOL result = a2 - 30;
    if (a3 >= 0x1E) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0x1E) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2)
    {
      *(void *)BOOL result = 0;
      *(void *)(result + 8) = 0;
      *(void *)(result + 16) = 0;
      *(unsigned char *)(result + 24) = 8 * (((-a2 >> 2) & 7) - 8 * a2);
    }
  }
  return result;
}

uint64_t sub_1007E11B8(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 24);
  int v2 = (char)v1;
  unsigned int v3 = v1 >> 6;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_1007E11D8(uint64_t result)
{
  *(unsigned char *)(result + 24) &= 0x3Fu;
  return result;
}

uint64_t sub_1007E11E8(uint64_t result, unsigned int a2)
{
  if (a2 < 2)
  {
    char v2 = *(unsigned char *)(result + 24) & 7 | ((_BYTE)a2 << 6);
  }
  else
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)BOOL result = a2 - 2;
    char v2 = 0x80;
  }
  *(unsigned char *)(result + 24) = v2;
  return result;
}

void type metadata accessor for ChartAxisLabelFormatter()
{
}

unsigned char *sub_1007E1220(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *BOOL result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1007E12ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *BOOL result = a2 + 4;
        break;
    }
  }
  return result;
}

void type metadata accessor for ChartAxisUnitVisibility()
{
}

unint64_t sub_1007E1324()
{
  unint64_t result = qword_100E96CD0;
  if (!qword_100E96CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96CD0);
  }
  return result;
}

char *sub_1007E1370(char *a1, char *a2, int *a3)
{
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v5 = *(void *)a2;
  *(void *)a1 = *(void *)a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (char *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    unsigned __int8 v10 = &a2[v8];
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_10017DF08(&qword_100E65250);
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    v12(&a1[a3[6]], &a2[a3[6]], v11);
    v12(&a1[a3[7]], &a2[a3[7]], v11);
    uint64_t v13 = a3[8];
    uint64_t v14 = a3[9];
    int v15 = &a1[v13];
    uint64_t v16 = &a2[v13];
    uint64_t v17 = *((void *)v16 + 1);
    *(void *)int v15 = *(void *)v16;
    *((void *)v15 + 1) = v17;
    id v18 = &a1[v14];
    id v19 = &a2[v14];
    uint64_t v20 = *((void *)v19 + 1);
    *(void *)id v18 = *(void *)v19;
    *((void *)v18 + 1) = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

char *sub_1007E14C0(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  __n128 v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_10017DF08(&qword_100E65250);
  unsigned __int8 v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  uint64_t v11 = a3[8];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[9];
  int v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  *(void *)int v15 = *(void *)v16;
  *((void *)v15 + 1) = *((void *)v16 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_1007E15FC(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[5];
  __n128 v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_10017DF08(&qword_100E65250);
  unsigned __int8 v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  uint64_t v11 = a3[9];
  *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
  *(_OWORD *)&a1[v11] = *(_OWORD *)&a2[v11];
  return a1;
}

char *sub_1007E16E4(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  __n128 v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_10017DF08(&qword_100E65250);
  unsigned __int8 v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  uint64_t v11 = a3[8];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = (uint64_t *)&a2[v11];
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *(void *)uint64_t v12 = v15;
  *((void *)v12 + 1) = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[9];
  uint64_t v17 = &a1[v16];
  id v18 = (uint64_t *)&a2[v16];
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *(void *)uint64_t v17 = v20;
  *((void *)v17 + 1) = v19;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1007E17F8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_100163020(*a1);
  }
  uint64_t v7 = sub_10017DF08(&qword_100E65250);
  uint64_t v8 = (uint64_t)a1 + *(int *)(a3 + 20);

  return _s7Weather24LocationCompositionStateOwet_0(v8, a2, v7);
}

uint64_t sub_1007E1878(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007E188C);
}

void *sub_1007E188C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10017DF08(&qword_100E65250);
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 20);
    return (void *)_s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_1007E1910()
{
  sub_100BDC6A0();
  if ((v0 & 1) == 0) {
    return 0;
  }
  type metadata accessor for DailyForecastComponentViewModel(0);
  sub_1001433AC();
  if ((sub_1001A3400() & 1) == 0 || (sub_1001A3400() & 1) == 0 || (sub_1001A3400() & 1) == 0) {
    return 0;
  }
  sub_10017FC4C();
  BOOL v3 = v3 && v1 == v2;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = sub_1001190E0(), (v5 & 1) != 0))
  {
    sub_10017FC4C();
    if (v3 && v6 == v7)
    {
      return 1;
    }
    else
    {
      return _stringCompareWithSmolCheck(_:_:expecting:)();
    }
  }
  return result;
}

uint64_t sub_1007E1A1C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702125924 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6C6562614C796164 && a2 == 0xE800000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x8000000100CB38C0 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v7 = a1 == 0x656E6F5A656D6974 && a2 == 0xE800000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        BOOL v8 = a1 == 0x706D6554776F6CLL && a2 == 0xE700000000000000;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          BOOL v9 = a1 == 0x706D655468676968 && a2 == 0xE800000000000000;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            BOOL v10 = a1 == 0x6F697469646E6F63 && a2 == 0xED00006E6F63496ELL;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else if (a1 == 0xD000000000000014 && a2 == 0x8000000100CAF750 {
                   || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            }
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else if (a1 == 0xD000000000000013 && a2 == 0x8000000100CAF770 {
                   || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            }
            {
              swift_bridgeObjectRelease();
              return 8;
            }
            else if (a1 == 0xD00000000000001DLL && a2 == 0x8000000100CB38E0 {
                   || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            }
            {
              swift_bridgeObjectRelease();
              return 9;
            }
            else if (a1 == 0xD000000000000017 && a2 == 0x8000000100CB3900 {
                   || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            }
            {
              swift_bridgeObjectRelease();
              return 10;
            }
            else
            {
              BOOL v11 = a1 == 0x7469706963657270 && a2 == 0xED00006E6F697461;
              if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 11;
              }
              else
              {
                BOOL v12 = a1 == 0x67696C7961447369 && a2 == 0xEA00000000007468;
                if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 12;
                }
                else
                {
                  BOOL v13 = a1 == 0x54706D6554776F6CLL && a2 == 0xEB00000000747865;
                  if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 13;
                  }
                  else
                  {
                    BOOL v14 = a1 == 0x706D655468676968 && a2 == 0xEC00000074786554;
                    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 14;
                    }
                    else if (a1 == 0xD000000000000018 && a2 == 0x8000000100C9EA60 {
                           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                    }
                    {
                      swift_bridgeObjectRelease();
                      return 15;
                    }
                    else if (a1 == 0xD000000000000013 && a2 == 0x8000000100CB3920)
                    {
                      swift_bridgeObjectRelease();
                      return 16;
                    }
                    else
                    {
                      char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
                      swift_bridgeObjectRelease();
                      if (v15) {
                        return 16;
                      }
                      else {
                        return 17;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

unint64_t sub_1007E20E4(char a1)
{
  unint64_t result = 1702125924;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C6562614C796164;
      break;
    case 2:
      unint64_t result = 0xD000000000000012;
      break;
    case 3:
      unint64_t result = 0x656E6F5A656D6974;
      break;
    case 4:
      unint64_t result = 0x706D6554776F6CLL;
      break;
    case 5:
    case 14:
      unint64_t result = 0x706D655468676968;
      break;
    case 6:
      unint64_t result = 0x6F697469646E6F63;
      break;
    case 7:
      unint64_t result = 0xD000000000000014;
      break;
    case 8:
    case 16:
      unint64_t result = 0xD000000000000013;
      break;
    case 9:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 10:
      unint64_t result = 0xD000000000000017;
      break;
    case 11:
      unint64_t result = 0x7469706963657270;
      break;
    case 12:
      unint64_t result = 0x67696C7961447369;
      break;
    case 13:
      unint64_t result = 0x54706D6554776F6CLL;
      break;
    case 15:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1007E22F8()
{
  sub_10016314C();
  BOOL v3 = v2;
  uint64_t v4 = sub_10017DF08(&qword_100E96EF0);
  sub_10017C83C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10016279C();
  sub_1001B1E64(v3, v3[3]);
  sub_1007E53A0();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  type metadata accessor for Date();
  sub_1001A4CBC(&qword_100E63968, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_10018359C();
  sub_100187270();
  if (!v0)
  {
    BOOL v8 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
    sub_100182BF4(v8[5]);
    sub_10016384C(1);
    sub_100182BF4(v8[6]);
    sub_10016384C(2);
    type metadata accessor for TimeZone();
    sub_1001A4CBC(&qword_100E8F6C8, (void (*)(uint64_t))&type metadata accessor for TimeZone);
    sub_100165240();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_10017DF08(&qword_100E65250);
    sub_1007E428C(&qword_100E96DE0);
    sub_100187270();
    sub_100187270();
    sub_100182BF4(v8[10]);
    sub_100166CE0(6);
    sub_100182BF4(v8[11]);
    sub_100166CE0(7);
    KeyedEncodingContainer.encode(_:forKey:)();
    sub_10017F0F4(9);
    sub_100182BF4(v8[14]);
    sub_10016384C(10);
    type metadata accessor for Precipitation();
    sub_1001A4CBC(&qword_100E8F6F8, (void (*)(uint64_t))&type metadata accessor for Precipitation);
    sub_100165240();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    sub_10017F0F4(12);
    sub_100182BF4(v8[17]);
    sub_10016384C(13);
    sub_100182BF4(v8[18]);
    sub_10016384C(14);
    sub_100182BF4(v8[19]);
    sub_10016384C(15);
    sub_1007E5438();
    sub_100187270();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  sub_100163164();
}

uint64_t sub_1007E26E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  type metadata accessor for Date();
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v34 + 32))(a9, a1);
  uint64_t v35 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  uint64_t v36 = (void *)(a9 + v35[5]);
  *uint64_t v36 = a2;
  v36[1] = a3;
  uint64_t v37 = (void *)(a9 + v35[6]);
  *uint64_t v37 = a4;
  v37[1] = a5;
  uint64_t v38 = a9 + v35[7];
  type metadata accessor for TimeZone();
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v39 + 32))(v38, a6);
  uint64_t v40 = a9 + v35[8];
  uint64_t v41 = sub_10017DF08(&qword_100E65250);
  sub_100162E4C();
  uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 32);
  v43(v40, a7, v41);
  v43(a9 + v35[9], a8, v41);
  uint64_t v44 = (void *)(a9 + v35[10]);
  *uint64_t v44 = a11;
  v44[1] = a12;
  uint64_t v45 = (void *)(a9 + v35[11]);
  *uint64_t v45 = a13;
  v45[1] = a14;
  *(double *)(a9 + v35[12]) = a10;
  *(unsigned char *)(a9 + v35[13]) = a15;
  uint64_t v46 = (void *)(a9 + v35[14]);
  void *v46 = a16;
  v46[1] = a17;
  uint64_t result = sub_1007E4144(a18, a9 + v35[15]);
  *(unsigned char *)(a9 + v35[16]) = a19;
  uint64_t v48 = (void *)(a9 + v35[17]);
  *uint64_t v48 = a20;
  v48[1] = a21;
  uint64_t v49 = (void *)(a9 + v35[18]);
  *uint64_t v49 = a22;
  v49[1] = a23;
  uint64_t v50 = (void *)(a9 + v35[19]);
  *uint64_t v50 = a24;
  v50[1] = a25;
  *(void *)(a9 + v35[20]) = a26;
  return result;
}

void sub_1007E2964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_10016314C();
  uint64_t v111 = v10;
  BOOL v13 = v12;
  uint64_t v100 = v14;
  uint64_t v15 = sub_10017DF08(&qword_100E6B8C8);
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_100109314();
  uint64_t v106 = v17;
  uint64_t v105 = sub_10017DF08(&qword_100E65250);
  sub_10017C83C();
  uint64_t v113 = v18;
  __chkstk_darwin(v19);
  sub_100162EF8();
  uint64_t v110 = v20;
  sub_1001626D4();
  __chkstk_darwin(v21);
  id v23 = (char *)v99 - v22;
  type metadata accessor for TimeZone();
  sub_10017C83C();
  uint64_t v102 = v25;
  uint64_t v103 = v24;
  __chkstk_darwin(v24);
  sub_1001626E0();
  uint64_t v26 = type metadata accessor for Date();
  sub_10017C83C();
  uint64_t v104 = v27;
  __chkstk_darwin(v28);
  sub_1001626E0();
  uint64_t v107 = sub_10017DF08(&qword_100E96ED8);
  sub_10017C83C();
  uint64_t v30 = v29;
  __chkstk_darwin(v31);
  sub_10016279C();
  uint64_t v114 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  sub_100162E4C();
  __chkstk_darwin(v32);
  sub_100109314();
  uint64_t v112 = v33;
  uint64_t v34 = v13[3];
  uint64_t v108 = v13;
  sub_1001B1E64(v13, v34);
  sub_1007E53A0();
  uint64_t v109 = v11;
  uint64_t v35 = v111;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  uint64_t v101 = v26;
  if (v35)
  {
    uint64_t v111 = v35;
    LODWORD(v109) = 0;
    unsigned int v38 = 0;
  }
  else
  {
    uint64_t v36 = v23;
    uint64_t v37 = v110;
    v99[1] = v30;
    sub_1001A4CBC(&qword_100E63948, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10018359C();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v55 = v112;
    sub_1001627D4();
    v56();
    sub_100188B8C(1);
    uint64_t v57 = KeyedDecodingContainer.decode(_:forKey:)();
    double v58 = v114;
    unint64_t v59 = (uint64_t *)(v55 + v114[5]);
    uint64_t *v59 = v57;
    v59[1] = v60;
    sub_100188B8C(2);
    uint64_t v61 = KeyedDecodingContainer.decode(_:forKey:)();
    id v62 = (uint64_t *)(v55 + v58[6]);
    *id v62 = v61;
    v62[1] = v63;
    sub_1001A4CBC(&qword_100E8F6B0, (void (*)(uint64_t))&type metadata accessor for TimeZone);
    sub_10018359C();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_1001627D4();
    v64();
    sub_1007E428C(&qword_100E96DC0);
    uint64_t v65 = v105;
    sub_1001911FC();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v66 = v36;
    uint64_t v67 = *(void (**)(uint64_t, char *, uint64_t))(v113 + 32);
    v67(v55 + v114[8], v66, v65);
    sub_1001911FC();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    double v68 = v37;
    uint64_t v69 = v114;
    v67(v55 + v114[9], v68, v65);
    sub_100184B7C(6);
    uint64_t v70 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    uint64_t v71 = (uint64_t *)v69[10];
    uint64_t *v71 = v70;
    v71[1] = v72;
    sub_100184B7C(7);
    uint64_t v73 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    id v74 = (uint64_t *)v69[11];
    *id v74 = v73;
    v74[1] = v75;
    sub_100184B7C(8);
    KeyedDecodingContainer.decode(_:forKey:)();
    *(void *)v114[12] = v76;
    sub_100188B8C(9);
    char v77 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v111 = 0;
    *(unsigned char *)(v112 + v114[13]) = v77 & 1;
    uint64_t v78 = sub_1001893F0(10);
    uint64_t v111 = 0;
    sub_100164B14(v78, v79, v114[14]);
    type metadata accessor for Precipitation();
    sub_1001A4CBC(&qword_100E8F6E8, (void (*)(uint64_t))&type metadata accessor for Precipitation);
    sub_10018359C();
    uint64_t v80 = v111;
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v111 = v80;
    if (v80)
    {
      uint64_t v81 = sub_10019F198();
      v82(v81);
      LODWORD(v109) = 0;
      unsigned int v38 = 1279;
    }
    else
    {
      sub_1007E4144(v106, v112 + v114[15]);
      LOBYTE(a10) = 12;
      uint64_t v83 = v111;
      char v84 = KeyedDecodingContainer.decode(_:forKey:)();
      uint64_t v111 = v83;
      if (!v83)
      {
        *(unsigned char *)(v112 + v114[16]) = v84 & 1;
        uint64_t v87 = sub_1001893F0(13);
        LODWORD(v110) = 1;
        uint64_t v111 = 0;
        sub_100164B14(v87, v88, v114[17]);
        uint64_t v89 = sub_1001893F0(14);
        uint64_t v111 = 0;
        sub_100164B14(v89, v90, v114[18]);
        uint64_t v91 = sub_1001893F0(15);
        uint64_t v111 = 0;
        sub_100164B14(v91, v92, v114[19]);
        char v115 = 16;
        sub_1007E53EC();
        uint64_t v93 = v111;
        KeyedDecodingContainer.decode<A>(_:forKey:)();
        uint64_t v111 = v93;
        if (!v93)
        {
          uint64_t v96 = sub_10019F198();
          v97(v96);
          uint64_t v98 = v112;
          *(void *)(v112 + v114[20]) = a10;
          sub_10014334C(v98, v100, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
          _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v108);
          sub_100142930(v98, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
          goto LABEL_34;
        }
        uint64_t v94 = sub_10019F198();
        v95(v94);
        LODWORD(v106) = 1;
        LODWORD(v107) = 1;
        _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v108);
        LOBYTE(v51) = 1;
        int v40 = 1;
        int v41 = 1;
        int v42 = 1;
        int v43 = 1;
        int v44 = 1;
        int v45 = 1;
        int v46 = 1;
        LODWORD(v109) = 1;
        uint64_t v39 = v112;
        goto LABEL_12;
      }
      uint64_t v85 = sub_10019F198();
      v86(v85);
      unsigned int v38 = 3327;
      LODWORD(v109) = 1;
    }
  }
  uint64_t v39 = v112;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v108);
  int v40 = (v38 >> 2) & 1;
  int v41 = (v38 >> 3) & 1;
  int v42 = (v38 >> 4) & 1;
  int v43 = (v38 >> 5) & 1;
  int v44 = (v38 >> 6) & 1;
  int v45 = (v38 >> 7) & 1;
  int v46 = (v38 >> 10) & 1;
  if ((v38 & 1) == 0)
  {
    LODWORD(v107) = 0;
    LODWORD(v106) = 0;
    LODWORD(v110) = 0;
    if ((v38 & 2) == 0) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
  LODWORD(v110) = 0;
  LODWORD(v106) = 0;
  LODWORD(v107) = 0;
  int v51 = (v38 >> 1) & 1;
LABEL_12:
  sub_100162F0C();
  v52();
  if ((v51 & 1) == 0)
  {
LABEL_6:
    uint64_t v47 = v114;
    if (v40) {
      goto LABEL_7;
    }
    goto LABEL_14;
  }
LABEL_13:
  uint64_t v47 = v114;
  sub_10017E98C();
  if (v40)
  {
LABEL_7:
    sub_10017E98C();
    if ((v41 & 1) == 0) {
      goto LABEL_8;
    }
    goto LABEL_15;
  }
LABEL_14:
  if (!v41)
  {
LABEL_8:
    uint64_t v48 = v113;
    if (v42) {
      goto LABEL_9;
    }
    goto LABEL_16;
  }
LABEL_15:
  sub_100162F0C();
  v53();
  uint64_t v48 = v113;
  if (v42)
  {
LABEL_9:
    uint64_t v49 = *(void (**)(void))(v48 + 8);
    uint64_t v50 = v105;
    sub_10016285C();
    v49();
    if (v43)
    {
LABEL_18:
      ((void (*)(uint64_t, uint64_t))v49)(v39 + v47[9], v50);
      int v54 = (int)v110;
      if (v44) {
        goto LABEL_19;
      }
      goto LABEL_27;
    }
    goto LABEL_26;
  }
LABEL_16:
  if (v43)
  {
    uint64_t v49 = *(void (**)(void))(v48 + 8);
    uint64_t v50 = v105;
    goto LABEL_18;
  }
LABEL_26:
  int v54 = (int)v110;
  if (v44)
  {
LABEL_19:
    sub_10017E98C();
    if ((v45 & 1) == 0) {
      goto LABEL_20;
    }
    goto LABEL_28;
  }
LABEL_27:
  if (!v45)
  {
LABEL_20:
    if (v46) {
      goto LABEL_21;
    }
    goto LABEL_29;
  }
LABEL_28:
  sub_10017E98C();
  if (v46)
  {
LABEL_21:
    sub_10017E98C();
    if ((v109 & 1) == 0) {
      goto LABEL_22;
    }
    goto LABEL_30;
  }
LABEL_29:
  if (!v109)
  {
LABEL_22:
    if (v54) {
      goto LABEL_23;
    }
    goto LABEL_31;
  }
LABEL_30:
  sub_100178110(v39 + v47[15], &qword_100E6B8C8);
  if (v54)
  {
LABEL_23:
    sub_10017E98C();
    if ((v106 & 1) == 0) {
      goto LABEL_24;
    }
    goto LABEL_32;
  }
LABEL_31:
  if (!v106)
  {
LABEL_24:
    if (!v107) {
      goto LABEL_34;
    }
    goto LABEL_33;
  }
LABEL_32:
  sub_10017E98C();
  if (v107) {
LABEL_33:
  }
    sub_10017E98C();
LABEL_34:
  sub_100163164();
}

unint64_t sub_1007E33AC()
{
  return sub_1007E20E4(*v0);
}

uint64_t sub_1007E33B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1007E1A1C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1007E33DC(uint64_t a1)
{
  unint64_t v2 = sub_1007E53A0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007E3418(uint64_t a1)
{
  unint64_t v2 = sub_1007E53A0();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1007E3454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1007E2964(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_1007E346C()
{
}

uint64_t sub_1007E3488(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6365726F46796164 && a2 == 0xEC00000073747361;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x54746E6572727563 && a2 == 0xEB00000000706D65;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x5478614D6B656577 && a2 == 0xEB00000000706D65;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x546E694D6B656577 && a2 == 0xEB00000000706D65;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x48747365676E6F6CLL && a2 == 0xEF706D6554686769;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0x4C747365676E6F6CLL && a2 == 0xEE00706D6554776FLL)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v11) {
              return 5;
            }
            else {
              return 6;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1007E3790(char a1)
{
  uint64_t result = 0x6365726F46796164;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x54746E6572727563;
      break;
    case 2:
      uint64_t result = 0x5478614D6B656577;
      break;
    case 3:
      uint64_t result = 0x546E694D6B656577;
      break;
    case 4:
      uint64_t result = 0x48747365676E6F6CLL;
      break;
    case 5:
      uint64_t result = 0x4C747365676E6F6CLL;
      break;
    default:
      return result;
  }
  return result;
}

void sub_1007E387C()
{
  sub_10016314C();
  BOOL v2 = v1;
  uint64_t v3 = sub_10017DF08(&qword_100E96DC8);
  sub_10017C83C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  sub_1001B1E64(v2, v2[3]);
  sub_1007E41AC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10017DF08(&qword_100E96DA8);
  sub_1007E41F8(&qword_100E96DD0, &qword_100E96DD8);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v0)
  {
    type metadata accessor for DailyForecastComponentViewModel(0);
    sub_10017DF08(&qword_100E65250);
    sub_1007E428C(&qword_100E96DE0);
    sub_100185C58();
    sub_100185C58();
    sub_100185C58();
    KeyedEncodingContainer.encode(_:forKey:)();
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
  sub_100163164();
}

void sub_1007E3AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_10016314C();
  uint64_t v48 = v10;
  BOOL v12 = v11;
  uint64_t v42 = v13;
  sub_10017DF08(&qword_100E65250);
  sub_10017C83C();
  uint64_t v45 = v15;
  uint64_t v46 = v14;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  __chkstk_darwin(v19);
  uint64_t v43 = sub_10017DF08(&qword_100E96D98);
  sub_10017C83C();
  uint64_t v21 = v20;
  __chkstk_darwin(v22);
  sub_1001626E0();
  uint64_t v25 = v24 - v23;
  uint64_t v49 = type metadata accessor for DailyForecastComponentViewModel(0);
  sub_100162E4C();
  __chkstk_darwin(v26);
  sub_100109314();
  uint64_t v28 = v27;
  uint64_t v29 = v12[3];
  uint64_t v47 = v12;
  sub_1001B1E64(v12, v29);
  sub_1007E41AC();
  uint64_t v44 = v25;
  uint64_t v30 = v48;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v30)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v47);
  }
  else
  {
    v41[2] = v17;
    uint64_t v48 = v21;
    sub_10017DF08(&qword_100E96DA8);
    char v55 = 0;
    sub_1007E41F8(&qword_100E96DB0, &qword_100E96DB8);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *uint64_t v28 = a10;
    char v54 = 1;
    sub_1007E428C(&qword_100E96DC0);
    sub_10017F55C();
    uint64_t v31 = *(void (**)(void))(v45 + 32);
    v41[1] = v45 + 32;
    sub_1001627D4();
    v32();
    char v53 = 2;
    sub_10017F55C();
    sub_1001627D4();
    v31();
    char v52 = 3;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_1001627D4();
    v31();
    char v51 = 4;
    uint64_t v33 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v34 = (void *)((char *)v28 + *(int *)(v49 + 32));
    *uint64_t v34 = v33;
    v34[1] = v35;
    char v50 = 5;
    uint64_t v36 = KeyedDecodingContainer.decode(_:forKey:)();
    uint64_t v38 = v37;
    sub_100162F0C();
    v39();
    int v40 = (void *)((char *)v28 + *(int *)(v49 + 36));
    *int v40 = v36;
    v40[1] = v38;
    sub_10014334C((uint64_t)v28, v42, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v47);
    sub_100142930((uint64_t)v28, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel);
  }
  sub_100163164();
}

uint64_t sub_1007E4068()
{
  return sub_1007E3790(*v0);
}

uint64_t sub_1007E4070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1007E3488(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1007E4098(uint64_t a1)
{
  unint64_t v2 = sub_1007E41AC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007E40D4(uint64_t a1)
{
  unint64_t v2 = sub_1007E41AC();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1007E4110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_1007E3AE0(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_1007E4128()
{
}

uint64_t sub_1007E4144(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6B8C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1007E41AC()
{
  unint64_t result = qword_100E96DA0;
  if (!qword_100E96DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96DA0);
  }
  return result;
}

uint64_t sub_1007E41F8(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(&qword_100E96DA8);
    sub_1001A4CBC(a2, (void (*)(uint64_t))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1007E428C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(&qword_100E65250);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DailyForecastComponentViewModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1007E43A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DailyForecastComponentViewModel.CodingKeys()
{
  return &type metadata for DailyForecastComponentViewModel.CodingKeys;
}

char *sub_1007E43D8(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v44 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v44 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = &a1[v8];
    char v11 = &a2[v8];
    uint64_t v12 = *((void *)v11 + 1);
    *(void *)uint64_t v10 = *(void *)v11;
    *((void *)v10 + 1) = v12;
    uint64_t v13 = &a1[v9];
    uint64_t v14 = &a2[v9];
    uint64_t v15 = *((void *)v14 + 1);
    *(void *)uint64_t v13 = *(void *)v14;
    *((void *)v13 + 1) = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = &a1[v16];
    uint64_t v18 = &a2[v16];
    uint64_t v19 = type metadata accessor for TimeZone();
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v20(v17, v18, v19);
    uint64_t v21 = a3[8];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    uint64_t v24 = sub_10017DF08(&qword_100E65250);
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
    v25(v22, v23, v24);
    v25(&a1[a3[9]], &a2[a3[9]], v24);
    uint64_t v26 = a3[10];
    uint64_t v27 = a3[11];
    uint64_t v28 = &a1[v26];
    uint64_t v29 = &a2[v26];
    uint64_t v30 = *((void *)v29 + 1);
    *(void *)uint64_t v28 = *(void *)v29;
    *((void *)v28 + 1) = v30;
    uint64_t v31 = &a1[v27];
    uint64_t v32 = &a2[v27];
    uint64_t v33 = *((void *)v32 + 1);
    *(void *)uint64_t v31 = *(void *)v32;
    *((void *)v31 + 1) = v33;
    uint64_t v34 = a3[13];
    *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
    a1[v34] = a2[v34];
    uint64_t v35 = a3[14];
    uint64_t v36 = a3[15];
    uint64_t v37 = &a1[v35];
    uint64_t v38 = &a2[v35];
    uint64_t v39 = *((void *)v38 + 1);
    *(void *)uint64_t v37 = *(void *)v38;
    *((void *)v37 + 1) = v39;
    int v40 = &a1[v36];
    int v41 = &a2[v36];
    uint64_t v42 = type metadata accessor for Precipitation();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v42))
    {
      uint64_t v43 = sub_10017DF08(&qword_100E6B8C8);
      memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v42);
    }
    uint64_t v45 = a3[17];
    a1[a3[16]] = a2[a3[16]];
    uint64_t v46 = &a1[v45];
    uint64_t v47 = &a2[v45];
    uint64_t v48 = *((void *)v47 + 1);
    *(void *)uint64_t v46 = *(void *)v47;
    *((void *)v46 + 1) = v48;
    uint64_t v49 = a3[18];
    uint64_t v50 = a3[19];
    char v51 = &a1[v49];
    char v52 = &a2[v49];
    uint64_t v53 = *((void *)v52 + 1);
    *(void *)char v51 = *(void *)v52;
    *((void *)v51 + 1) = v53;
    char v54 = &a1[v50];
    char v55 = &a2[v50];
    uint64_t v56 = *((void *)v55 + 1);
    *(void *)char v54 = *(void *)v55;
    *((void *)v54 + 1) = v56;
    *(void *)&a1[a3[20]] = *(void *)&a2[a3[20]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1007E4708(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  char v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *char v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = a3[8];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_10017DF08(&qword_100E65250);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 24);
  v21(v18, v19, v20);
  v21(a1 + a3[9], a2 + a3[9], v20);
  uint64_t v22 = a3[10];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[11];
  uint64_t v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  *uint64_t v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v28 = a3[14];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (void *)(a2 + v28);
  void *v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[15];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (const void *)(a2 + v31);
  uint64_t v34 = type metadata accessor for Precipitation();
  LODWORD(v21) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v34);
  int v35 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34);
  if (!v21)
  {
    uint64_t v36 = *(void *)(v34 - 8);
    if (!v35)
    {
      (*(void (**)(void *, const void *, uint64_t))(v36 + 24))(v32, v33, v34);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v36 + 8))(v32, v34);
    goto LABEL_6;
  }
  if (v35)
  {
LABEL_6:
    uint64_t v37 = sub_10017DF08(&qword_100E6B8C8);
    memcpy(v32, v33, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
LABEL_7:
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  uint64_t v38 = a3[17];
  uint64_t v39 = (void *)(a1 + v38);
  int v40 = (void *)(a2 + v38);
  void *v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v41 = a3[18];
  uint64_t v42 = (void *)(a1 + v41);
  uint64_t v43 = (void *)(a2 + v41);
  *uint64_t v42 = *v43;
  v42[1] = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v44 = a3[19];
  uint64_t v45 = (void *)(a1 + v44);
  uint64_t v46 = (void *)(a2 + v44);
  *uint64_t v45 = *v46;
  v45[1] = v46[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1007E4B00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = a3[8];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_10017DF08(&qword_100E65250);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v16(a1 + a3[9], a2 + a3[9], v15);
  uint64_t v17 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  uint64_t v18 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v18) = *(unsigned char *)(a2 + v18);
  uint64_t v19 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (const void *)(a2 + v19);
  uint64_t v22 = type metadata accessor for Precipitation();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
  {
    uint64_t v23 = sub_10017DF08(&qword_100E6B8C8);
    memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
  }
  uint64_t v24 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(_OWORD *)(a1 + v24) = *(_OWORD *)(a2 + v24);
  uint64_t v25 = a3[19];
  *(_OWORD *)(a1 + a3[18]) = *(_OWORD *)(a2 + a3[18]);
  *(_OWORD *)(a1 + v25) = *(_OWORD *)(a2 + v25);
  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  return a1;
}

uint64_t sub_1007E4D50(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[7];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  uint64_t v21 = a3[8];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_10017DF08(&qword_100E65250);
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 40);
  v25(v22, v23, v24);
  v25(a1 + a3[9], a2 + a3[9], v24);
  uint64_t v26 = a3[10];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (uint64_t *)(a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *uint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[11];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (uint64_t *)(a2 + v31);
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  void *v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v36) = *(unsigned char *)(a2 + v36);
  uint64_t v37 = a3[14];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (uint64_t *)(a2 + v37);
  uint64_t v41 = *v39;
  uint64_t v40 = v39[1];
  void *v38 = v41;
  v38[1] = v40;
  swift_bridgeObjectRelease();
  uint64_t v42 = a3[15];
  uint64_t v43 = (void *)(a1 + v42);
  uint64_t v44 = (const void *)(a2 + v42);
  uint64_t v45 = type metadata accessor for Precipitation();
  LODWORD(v25) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v45);
  int v46 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45);
  if (!v25)
  {
    uint64_t v47 = *(void *)(v45 - 8);
    if (!v46)
    {
      (*(void (**)(void *, const void *, uint64_t))(v47 + 40))(v43, v44, v45);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v47 + 8))(v43, v45);
    goto LABEL_6;
  }
  if (v46)
  {
LABEL_6:
    uint64_t v48 = sub_10017DF08(&qword_100E6B8C8);
    memcpy(v43, v44, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v45);
LABEL_7:
  uint64_t v49 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  uint64_t v50 = (void *)(a1 + v49);
  char v51 = (uint64_t *)(a2 + v49);
  uint64_t v53 = *v51;
  uint64_t v52 = v51[1];
  *uint64_t v50 = v53;
  v50[1] = v52;
  swift_bridgeObjectRelease();
  uint64_t v54 = a3[18];
  char v55 = (void *)(a1 + v54);
  uint64_t v56 = (uint64_t *)(a2 + v54);
  uint64_t v58 = *v56;
  uint64_t v57 = v56[1];
  void *v55 = v58;
  v55[1] = v57;
  swift_bridgeObjectRelease();
  uint64_t v59 = a3[19];
  uint64_t v60 = (void *)(a1 + v59);
  uint64_t v61 = (uint64_t *)(a2 + v59);
  uint64_t v63 = *v61;
  uint64_t v62 = v61[1];
  *uint64_t v60 = v63;
  v60[1] = v62;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[20]) = *(void *)(a2 + a3[20]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1007E50B8(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    if (a2 == 0x7FFFFFFF) {
      return sub_100163020(*(void *)(a1 + a3[5] + 8));
    }
    type metadata accessor for TimeZone();
    sub_100162F30();
    if (*(_DWORD *)(v12 + 84) == a2)
    {
      uint64_t v8 = v11;
      uint64_t v13 = a3[7];
    }
    else
    {
      sub_10017DF08(&qword_100E65250);
      sub_100162F30();
      if (*(_DWORD *)(v15 + 84) == a2)
      {
        uint64_t v8 = v14;
        uint64_t v13 = a3[8];
      }
      else
      {
        uint64_t v8 = sub_10017DF08(&qword_100E6B8C8);
        uint64_t v13 = a3[15];
      }
    }
    uint64_t v9 = a1 + v13;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

void sub_1007E51B0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(void *)(a1 + a4[5] + 8) = (a2 - 1);
      return;
    }
    type metadata accessor for TimeZone();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[7];
    }
    else
    {
      sub_10017DF08(&qword_100E65250);
      sub_100162F30();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[8];
      }
      else
      {
        uint64_t v10 = sub_10017DF08(&qword_100E6B8C8);
        uint64_t v14 = a4[15];
      }
    }
    uint64_t v11 = a1 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

unint64_t sub_1007E52B4()
{
  unint64_t result = qword_100E96EC0;
  if (!qword_100E96EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96EC0);
  }
  return result;
}

unint64_t sub_1007E5304()
{
  unint64_t result = qword_100E96EC8;
  if (!qword_100E96EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96EC8);
  }
  return result;
}

unint64_t sub_1007E5354()
{
  unint64_t result = qword_100E96ED0;
  if (!qword_100E96ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96ED0);
  }
  return result;
}

unint64_t sub_1007E53A0()
{
  unint64_t result = qword_100E96EE0;
  if (!qword_100E96EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96EE0);
  }
  return result;
}

unint64_t sub_1007E53EC()
{
  unint64_t result = qword_100E96EE8;
  if (!qword_100E96EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96EE8);
  }
  return result;
}

unint64_t sub_1007E5438()
{
  unint64_t result = qword_100E96EF8;
  if (!qword_100E96EF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96EF8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DailyForecastComponentViewModel.DayForecastViewModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *unint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1007E5550);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel.CodingKeys()
{
  return &type metadata for DailyForecastComponentViewModel.DayForecastViewModel.CodingKeys;
}

unint64_t sub_1007E558C()
{
  unint64_t result = qword_100E96F00;
  if (!qword_100E96F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96F00);
  }
  return result;
}

unint64_t sub_1007E55DC()
{
  unint64_t result = qword_100E96F08;
  if (!qword_100E96F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96F08);
  }
  return result;
}

unint64_t sub_1007E562C()
{
  unint64_t result = qword_100E96F10;
  if (!qword_100E96F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96F10);
  }
  return result;
}

void sub_1007E5678(uint64_t a1)
{
  uint64_t v26 = a1 + 56;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 56);
  int64_t v31 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v5 = 0;
  uint64_t v25 = _swiftEmptyArrayStorage;
  while (v4)
  {
    unint64_t v6 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v7 = v6 | (v5 << 6);
LABEL_22:
    uint64_t v11 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v7);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    static LocationSearchEntity.makeFromIdentifier(_:)(v12, v13, (uint64_t)v27);
    uint64_t v15 = v27[0];
    uint64_t v14 = v27[1];
    uint64_t v16 = v27[2];
    uint64_t v17 = v27[3];
    char v18 = v28;
    swift_bridgeObjectRelease();
    sub_10033A154((uint64_t)v27, (uint64_t)v29);
    if (v30)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100126428(0, v25[2] + 1, 1, (uint64_t)v25, &qword_100E96F28, (uint64_t)&type metadata for LocationSearchEntity, (void (*)(void, uint64_t, char *, uint64_t, uint64_t))sub_100015EA4, (void (*)(uint64_t, uint64_t, char *))sub_10012C33C);
        uint64_t v25 = v23;
      }
      unint64_t v20 = v25[2];
      unint64_t v19 = v25[3];
      unint64_t v21 = v20 + 1;
      if (v20 >= v19 >> 1)
      {
        sub_100126428(v19 > 1, v20 + 1, 1, (uint64_t)v25, &qword_100E96F28, (uint64_t)&type metadata for LocationSearchEntity, (void (*)(void, uint64_t, char *, uint64_t, uint64_t))sub_100015EA4, (void (*)(uint64_t, uint64_t, char *))sub_10012C33C);
        unint64_t v21 = v20 + 1;
        uint64_t v25 = v24;
      }
      v25[2] = v21;
      uint64_t v22 = &v25[5 * v20];
      v22[4] = v15;
      void v22[5] = v14;
      v22[6] = v16;
      v22[7] = v17;
      *((unsigned char *)v22 + 64) = v18 & 1;
    }
  }
  int64_t v8 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    goto LABEL_30;
  }
  if (v8 >= v31) {
    goto LABEL_28;
  }
  unint64_t v9 = *(void *)(v26 + 8 * v8);
  ++v5;
  if (v9) {
    goto LABEL_21;
  }
  int64_t v5 = v8 + 1;
  if (v8 + 1 >= v31) {
    goto LABEL_28;
  }
  unint64_t v9 = *(void *)(v26 + 8 * v5);
  if (v9) {
    goto LABEL_21;
  }
  int64_t v5 = v8 + 2;
  if (v8 + 2 >= v31) {
    goto LABEL_28;
  }
  unint64_t v9 = *(void *)(v26 + 8 * v5);
  if (v9) {
    goto LABEL_21;
  }
  int64_t v5 = v8 + 3;
  if (v8 + 3 >= v31) {
    goto LABEL_28;
  }
  unint64_t v9 = *(void *)(v26 + 8 * v5);
  if (v9)
  {
LABEL_21:
    unint64_t v4 = (v9 - 1) & v9;
    unint64_t v7 = __clz(__rbit64(v9)) + (v5 << 6);
    goto LABEL_22;
  }
  int64_t v10 = v8 + 4;
  if (v10 >= v31)
  {
LABEL_28:
    swift_release();
    return;
  }
  unint64_t v9 = *(void *)(v26 + 8 * v10);
  if (v9)
  {
    int64_t v5 = v10;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v5 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v5 >= v31) {
      goto LABEL_28;
    }
    unint64_t v9 = *(void *)(v26 + 8 * v5);
    ++v10;
    if (v9) {
      goto LABEL_21;
    }
  }
LABEL_30:
  __break(1u);
}

void sub_1007E595C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for LocationEntity();
  __chkstk_darwin(v5);
  uint64_t v33 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v24 - v10;
  uint64_t v34 = (char *)_swiftEmptyArrayStorage;
  uint64_t v32 = *(void *)(a1 + 16);
  if (v32)
  {
    unint64_t v12 = 0;
    uint64_t v24 = v2;
    uint64_t v25 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v30 = v8 + 16;
    int64_t v31 = (void (**)(char *, char *, uint64_t))(v8 + 32);
    uint64_t v26 = v5;
    uint64_t v27 = a2;
    uint64_t v28 = a1;
    uint64_t v29 = v8;
    while (v12 < *(void *)(a1 + 16))
    {
      unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v14 = *(void *)(v8 + 72);
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v8 + 16))(v11, a1 + v13 + v14 * v12, v5, v9);
      uint64_t v15 = LocationEntity.id.getter();
      uint64_t v16 = a2;
      sub_100215FB4(v15, v17, a2);
      uint64_t v18 = v5;
      char v20 = v19;
      swift_bridgeObjectRelease();
      if (v20)
      {
        unint64_t v21 = *v31;
        (*v31)(v33, v11, v18);
        uint64_t v22 = v34;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1007F3B70();
          uint64_t v22 = v34;
        }
        unint64_t v23 = *((void *)v22 + 2);
        if (v23 >= *((void *)v22 + 3) >> 1)
        {
          sub_1007F3B70();
          uint64_t v22 = v34;
        }
        *((void *)v22 + 2) = v23 + 1;
        uint64_t v5 = v26;
        v21(&v22[v13 + v23 * v14], v33, v26);
        uint64_t v34 = v22;
        a2 = v27;
        a1 = v28;
      }
      else
      {
        (*v25)(v11, v18);
        uint64_t v5 = v18;
        a2 = v16;
      }
      ++v12;
      uint64_t v8 = v29;
      if (v32 == v12) {
        goto LABEL_12;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_12:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_1007E5BFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  uint64_t v5 = type metadata accessor for LocationEntity();
  __chkstk_darwin(v5);
  uint64_t v28 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v20 - v10;
  uint64_t v35 = (char *)_swiftEmptyArrayStorage;
  uint64_t v27 = *(void *)(a1 + 16);
  if (v27)
  {
    unint64_t v12 = 0;
    uint64_t v23 = a1;
    uint64_t v24 = v8 + 16;
    v20[1] = v3;
    unint64_t v21 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v25 = v8;
    uint64_t v26 = (void (**)(char *, char *, uint64_t))(v8 + 32);
    uint64_t v22 = v5;
    while (v12 < *(void *)(a1 + 16))
    {
      unint64_t v13 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v14 = *(void *)(v8 + 72);
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v8 + 16))(v11, a1 + v13 + v14 * v12, v5, v9);
      uint64_t v33 = LocationEntity.name.getter();
      uint64_t v34 = v15;
      uint64_t v31 = v29;
      uint64_t v32 = v30;
      sub_1002AE218();
      sub_1002AE264();
      char v16 = BidirectionalCollection<>.starts<A>(with:)();
      swift_bridgeObjectRelease();
      if (v16)
      {
        uint64_t v17 = *v26;
        (*v26)(v28, v11, v5);
        uint64_t v18 = v35;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1007F3B70();
          uint64_t v18 = v35;
        }
        unint64_t v19 = *((void *)v18 + 2);
        if (v19 >= *((void *)v18 + 3) >> 1)
        {
          sub_1007F3B70();
          uint64_t v18 = v35;
        }
        *((void *)v18 + 2) = v19 + 1;
        uint64_t v5 = v22;
        v17(&v18[v13 + v19 * v14], v28, v22);
        uint64_t v35 = v18;
        a1 = v23;
      }
      else
      {
        (*v21)(v11, v5);
      }
      ++v12;
      uint64_t v8 = v25;
      if (v27 == v12) {
        goto LABEL_12;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_12:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_1007E5EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = type metadata accessor for LocationEntity();
  uint64_t v5 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v29 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v30 = _swiftEmptyArrayStorage;
  uint64_t v28 = *(void *)(a1 + 16);
  if (v28)
  {
    unint64_t v11 = 0;
    uint64_t v22 = a2;
    uint64_t v23 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v26 = (void (**)(char *, char *, uint64_t))(v5 + 32);
    uint64_t v27 = v5 + 16;
    uint64_t v21 = a1;
    uint64_t v12 = v24;
    while (v11 < *(void *)(a1 + 16))
    {
      unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      uint64_t v14 = *(void *)(v5 + 72);
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16))(v10, a1 + v13 + v14 * v11, v12, v8);
      char v15 = sub_1007E8BAC((uint64_t)v10, a2);
      if (v2)
      {
        (*v23)(v10, v12);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        return;
      }
      if (v15)
      {
        uint64_t v25 = *v26;
        v25(v29, v10, v12);
        char v16 = v30;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1007F3B70();
          char v16 = v30;
        }
        unint64_t v17 = v16[2];
        if (v17 >= v16[3] >> 1)
        {
          sub_1007F3B70();
          char v16 = v30;
        }
        void v16[2] = v17 + 1;
        unint64_t v18 = (unint64_t)v16 + v13 + v17 * v14;
        uint64_t v19 = v24;
        v25((char *)v18, v29, v24);
        uint64_t v30 = v16;
        uint64_t v12 = v19;
        a1 = v21;
        a2 = v22;
      }
      else
      {
        (*v23)(v10, v12);
      }
      if (v28 == ++v11) {
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_1007E6184()
{
  sub_100162EA0();
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for ListViewTipManager.LocationNameAndLocationOfInterestType(0);
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  __n128 v8 = (uint64_t *)((char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  unint64_t v11 = (uint64_t *)((char *)&v34 - v10);
  __chkstk_darwin(v12);
  uint64_t v14 = (uint64_t *)((char *)&v34 - v13);
  __chkstk_darwin(v15);
  unint64_t v17 = (uint64_t *)((char *)&v34 - v16);
  sub_100109818(&qword_100E97218, (void (*)(uint64_t))type metadata accessor for ListViewTipManager.LocationNameAndLocationOfInterestType);
  uint64_t v41 = v3;
  unint64_t v18 = (void *)Set.init(minimumCapacity:)();
  uint64_t v37 = *(void *)(v2 + 16);
  if (!v37)
  {
LABEL_30:
    swift_bridgeObjectRelease();
    sub_100162694();
    return;
  }
  unint64_t v19 = 0;
  sub_100129058();
  uint64_t v35 = v2;
  uint64_t v36 = v2 + v20;
  uint64_t v34 = v5;
  while (1)
  {
    if (v19 >= *(void *)(v2 + 16))
    {
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    uint64_t v21 = *(void *)(v5 + 72);
    unint64_t v40 = v19;
    sub_1007F4D20(v36 + v21 * v19, (uint64_t)v17);
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    sub_10018B270();
    uint64_t v22 = type metadata accessor for LocationOfInterestType();
    uint64_t v38 = sub_100109818(&qword_100E63510, (void (*)(uint64_t))&type metadata accessor for LocationOfInterestType);
    uint64_t v39 = v22;
    dispatch thunk of Hashable.hash(into:)();
    Hasher._finalize()();
    sub_10018C534();
    if (v23)
    {
      while (1)
      {
        sub_1007F4D20(v18[6] + v0 * v21, (uint64_t)v8);
        BOOL v24 = *v8 == *v17 && v8[1] == v17[1];
        if (v24 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          sub_10018B270();
          if (static LocationOfInterestType.== infix(_:_:)()) {
            break;
          }
        }
        sub_1007F4D84((uint64_t)v8);
        sub_1001EC444();
        if ((v25 & 1) == 0) {
          goto LABEL_12;
        }
      }
      sub_1007F4D84((uint64_t)v8);
      goto LABEL_29;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1007F4D20((uint64_t)v17, (uint64_t)v14);
    uint64_t v42 = v18;
    if (v18[3] <= v18[2]) {
      break;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_1007F0B50();
    }
LABEL_27:
    unint64_t v18 = v42;
    *(void *)((char *)v42 + ((v0 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v0;
    sub_10023B7B4((uint64_t)v14, v18[6] + v0 * v21);
    uint64_t v31 = v18[2];
    BOOL v32 = __OFADD__(v31, 1);
    uint64_t v33 = v31 + 1;
    if (v32) {
      goto LABEL_32;
    }
    v18[2] = v33;
LABEL_29:
    swift_bridgeObjectRelease();
    unint64_t v19 = v40 + 1;
    sub_1007F4D84((uint64_t)v17);
    uint64_t v5 = v34;
    uint64_t v2 = v35;
    if (v19 == v37) {
      goto LABEL_30;
    }
  }
  if (isUniquelyReferenced_nonNull_native) {
    sub_1007ED7F0();
  }
  else {
    sub_1007F1634();
  }
  uint64_t v27 = v42;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  sub_10018B270();
  dispatch thunk of Hashable.hash(into:)();
  Hasher._finalize()();
  sub_10018C534();
  if ((v28 & 1) == 0) {
    goto LABEL_27;
  }
  while (1)
  {
    sub_1007F4D20(v27[6] + v0 * v21, (uint64_t)v11);
    BOOL v29 = *v11 == *v14 && v11[1] == v14[1];
    if (v29 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      sub_10018B270();
      if (static LocationOfInterestType.== infix(_:_:)()) {
        break;
      }
    }
    sub_1007F4D84((uint64_t)v11);
    sub_1001EC444();
    if ((v30 & 1) == 0) {
      goto LABEL_27;
    }
  }
LABEL_33:
  sub_1007F4D84((uint64_t)v11);
  ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
}

void sub_1007E65B4()
{
  sub_100162EA0();
  sub_100127C8C();
  type metadata accessor for LocationOfInterestType();
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_100162824();
  __chkstk_darwin(v5);
  sub_10011C078();
  sub_100109818(&qword_100E63510, (void (*)(uint64_t))&type metadata accessor for LocationOfInterestType);
  sub_10018C860();
  uint64_t v6 = *(void *)(v0 + 16);
  if (v6)
  {
    sub_1001A1890();
    do
    {
      uint64_t v7 = sub_10018729C();
      v2(v7);
      uint64_t v8 = sub_1007F4E88();
      sub_1007EC034(v8, v9);
      uint64_t v10 = sub_1001825A4();
      v11(v10);
      v1 += v3;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100182F1C();
  }
  sub_100162694();
}

void sub_1007E66C0()
{
  sub_100162EA0();
  sub_100127C8C();
  type metadata accessor for Location();
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_100162824();
  __chkstk_darwin(v5);
  sub_10011C078();
  sub_100109818(&qword_100E639A0, (void (*)(uint64_t))&type metadata accessor for Location);
  sub_10018C860();
  uint64_t v6 = *(void *)(v0 + 16);
  if (v6)
  {
    sub_1001A1890();
    do
    {
      uint64_t v7 = sub_10018729C();
      v2(v7);
      uint64_t v8 = sub_1007F4E88();
      sub_1007EC734(v8, v9);
      uint64_t v10 = sub_1001825A4();
      v11(v10);
      v1 += v3;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100182F1C();
  }
  sub_100162694();
}

void sub_1007E67CC()
{
  sub_100162EA0();
  sub_100127C8C();
  type metadata accessor for DetailChartCondition();
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_100162824();
  __chkstk_darwin(v5);
  sub_10011C078();
  sub_100109818(&qword_100E63988, (void (*)(uint64_t))&type metadata accessor for DetailChartCondition);
  sub_10018C860();
  uint64_t v6 = *(void *)(v0 + 16);
  if (v6)
  {
    sub_1001A1890();
    do
    {
      uint64_t v7 = sub_10018729C();
      v2(v7);
      uint64_t v8 = sub_1007F4E88();
      sub_1007ECAF8(v8, v9);
      uint64_t v10 = sub_1001825A4();
      v11(v10);
      v1 += v3;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100182F1C();
  }
  sub_100162694();
}

uint64_t LocationSearchEntityQuery.init()()
{
  sub_10017DF08(&qword_100E62D00);
  sub_100127C8C();
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t v0 = AppDependency.__allocating_init(key:manager:)();
  sub_10017DF08(&qword_100E62D08);
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  type metadata accessor for LocationSearcher();
  *(void *)(swift_allocObject() + 16) = 0;
  return v0;
}

uint64_t LocationSearchEntityQuery.entities(for:)()
{
  sub_1000A9DE8();
  v0[30] = v1;
  v0[31] = v2;
  uint64_t v3 = type metadata accessor for LocationEntity();
  v0[32] = v3;
  sub_100164920(v3);
  v0[33] = v4;
  v0[34] = sub_10017EF8C();
  sub_100127A5C();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_1007E6A2C()
{
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_100012CD8(v2);
  v1[29] = _swiftEmptyArrayStorage;
  v1[35] = v3;
  uint64_t v4 = v3 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(v3 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(v3 + 56);
  int64_t v8 = (unint64_t)(63 - v6) >> 6;
  uint64_t v9 = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v11 << 6);
      goto LABEL_24;
    }
    unint64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if ((uint64_t)v14 >= v8) {
      goto LABEL_33;
    }
    ++v11;
    if (!*(void *)(v4 + 8 * v14))
    {
      int64_t v11 = v14 + 1;
      if ((uint64_t)(v14 + 1) >= v8) {
        goto LABEL_33;
      }
      if (!*(void *)(v4 + 8 * v11))
      {
        int64_t v11 = v14 + 2;
        if ((uint64_t)(v14 + 2) >= v8) {
          goto LABEL_33;
        }
        if (!*(void *)(v4 + 8 * v11))
        {
          int64_t v11 = v14 + 3;
          if ((uint64_t)(v14 + 3) >= v8) {
            goto LABEL_33;
          }
          if (!*(void *)(v4 + 8 * v11))
          {
            int64_t v11 = v14 + 4;
            if ((uint64_t)(v14 + 4) >= v8) {
              goto LABEL_33;
            }
            if (!*(void *)(v4 + 8 * v11)) {
              break;
            }
          }
        }
      }
    }
LABEL_23:
    sub_100128A7C();
    unint64_t v7 = v17 & v16;
    unint64_t v13 = v18 + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v13);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    if (v21 == static Location.currentLocationID.getter() && v20 == v22)
    {
      swift_bridgeObjectRelease();
LABEL_31:
      swift_release();
      uint64_t v0 = (uint64_t)(v1 + 12);
      static LocationSearchEntity.makeCurrentLocation()((uint64_t)(v1 + 12));
      sub_100126428(0, 1, 1, (uint64_t)_swiftEmptyArrayStorage, &qword_100E96F28, (uint64_t)&type metadata for LocationSearchEntity, (void (*)(void, uint64_t, char *, uint64_t, uint64_t))sub_100015EA4, (void (*)(uint64_t, uint64_t, char *))sub_10012C33C);
      uint64_t v10 = v24;
      unint64_t v7 = *(void *)(v24 + 16);
      unint64_t v14 = *(void *)(v24 + 24);
      uint64_t v3 = v7 + 1;
      if (v7 < v14 >> 1)
      {
LABEL_32:
        *(void *)(v10 + 16) = v3;
        unint64_t v25 = v10 + 40 * v7;
        long long v26 = *(_OWORD *)v0;
        long long v27 = *(_OWORD *)(v0 + 16);
        *(unsigned char *)(v25 + 64) = *(unsigned char *)(v0 + 32);
        *(_OWORD *)(v25 + 32) = v26;
        *(_OWORD *)(v25 + 48) = v27;
        v1[29] = v10;
        goto LABEL_34;
      }
LABEL_38:
      sub_100126428(v14 > 1, v3, 1, v10, &qword_100E96F28, (uint64_t)&type metadata for LocationSearchEntity, (void (*)(void, uint64_t, char *, uint64_t, uint64_t))sub_100015EA4, (void (*)(uint64_t, uint64_t, char *))sub_10012C33C);
      uint64_t v10 = v29;
      goto LABEL_32;
    }
    uint64_t v0 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t v9 = swift_bridgeObjectRelease();
    if (v0) {
      goto LABEL_31;
    }
  }
  int64_t v15 = v14 + 5;
  if (v15 >= v8)
  {
LABEL_33:
    swift_release();
LABEL_34:
    AppDependency.wrappedValue.getter();
    sub_1001A6948();
    char v28 = (void *)swift_task_alloc();
    v1[36] = v28;
    *char v28 = v1;
    v28[1] = sub_1007E6D7C;
    uint64_t v9 = sub_100191210();
    return dispatch thunk of LocationEntityManagerType.savedLocations.getter(v9);
  }
  if (*(void *)(v4 + 8 * v15))
  {
    int64_t v11 = v15;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v11 >= v8) {
      goto LABEL_33;
    }
    ++v15;
    if (*(void *)(v4 + 8 * v11)) {
      goto LABEL_23;
    }
  }
  __break(1u);
  return dispatch thunk of LocationEntityManagerType.savedLocations.getter(v9);
}

uint64_t sub_1007E6D7C()
{
  sub_1000A9DE8();
  sub_100119470();
  sub_10018AA7C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 296) = v3;
  swift_task_dealloc();
  sub_100127A5C();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_1007E6E4C()
{
  uint64_t v1 = *(void *)(v0 + 296);
  uint64_t v2 = *(void *)(v0 + 280);
  swift_bridgeObjectRetain();
  sub_1007E595C(v1, v2);
  uint64_t v4 = v3;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  int64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (long long *)(v0 + 56);
    uint64_t v7 = *(void *)(v0 + 264);
    uint64_t v8 = (char *)sub_10019B8C0((uint64_t)_swiftEmptyArrayStorage);
    sub_1007F3B50(v8, v5, 0);
    v7 += 16;
    sub_100129058();
    uint64_t v10 = v4 + v9;
    uint64_t v37 = *(void *)(v7 + 56);
    uint64_t v38 = v11;
    uint64_t v36 = (void (**)(uint64_t, uint64_t))(v7 - 8);
    do
    {
      uint64_t v12 = *(void *)(v0 + 272);
      uint64_t v39 = *(void *)(v0 + 256);
      int64_t v40 = v5;
      v38(v12, v10);
      uint64_t v13 = LocationEntity.id.getter();
      sub_100214DA8(v13, v14);
      *(void *)(v0 + 168) = v16;
      *(void *)(v0 + 176) = v15;
      sub_10014A85C();
      sub_1001BFD1C();
      sub_10018AF10();
      uint64_t v17 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
      uint64_t v19 = v18;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_100127A14();
      swift_bridgeObjectRelease();
      *(void *)(v0 + 184) = LocationEntity.name.getter();
      *(void *)(v0 + 192) = v20;
      *(void *)(v0 + 200) = 58;
      *(void *)(v0 + 208) = 0xE100000000000000;
      *(void *)(v0 + 216) = 0;
      *(void *)(v0 + 224) = 0xE000000000000000;
      sub_10018AF10();
      uint64_t v21 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
      char v23 = v22;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v24._uint64_t countAndFlagsBits = v21;
      v24._object = v23;
      String.append(_:)(v24);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      LocationEntity.name.getter();
      unint64_t v25 = (void *)LocationEntity.placemark.getter();
      LocationSearchEntity.init(id:name:placemark:isLocal:)(v17, v19, v25, 0, (uint64_t)v6);
      (*v36)(v12, v39);
      uint64_t v26 = v41;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10012B9CC(*(void *)(v41 + 16));
        uint64_t v26 = v41;
      }
      unint64_t v28 = *(void *)(v26 + 16);
      unint64_t v27 = *(void *)(v26 + 24);
      if (v28 >= v27 >> 1)
      {
        sub_1007F3B50((char *)(v27 > 1), v28 + 1, 1);
        uint64_t v26 = v41;
      }
      *(void *)(v26 + 16) = v28 + 1;
      uint64_t v29 = v26 + 40 * v28;
      long long v30 = *v6;
      long long v31 = *(_OWORD *)(v0 + 72);
      *(unsigned char *)(v29 + 64) = *(unsigned char *)(v0 + 88);
      *(_OWORD *)(v29 + 32) = v30;
      *(_OWORD *)(v29 + 48) = v31;
      v10 += v37;
      --v5;
    }
    while (v40 != 1);
  }
  swift_bridgeObjectRelease();
  uint64_t v32 = *(void *)(v0 + 280);
  sub_10037FE58();
  sub_1007E5678(v32);
  swift_bridgeObjectRelease();
  sub_10037FE58();
  swift_task_dealloc();
  uint64_t v33 = sub_1001820F8();
  return v34(v33);
}

uint64_t LocationSearchEntityQuery.suggestedEntities()()
{
  sub_1000A9DE8();
  v0[29] = v1;
  uint64_t v2 = type metadata accessor for LocationEntity();
  v0[30] = v2;
  sub_100164920(v2);
  v0[31] = v3;
  v0[32] = sub_10017EF8C();
  sub_100127A5C();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_1007E7230()
{
  sub_100109790();
  AppDependency.wrappedValue.getter();
  sub_1001A6948();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1007E72DC;
  uint64_t v2 = sub_100191210();
  return dispatch thunk of LocationEntityManagerType.savedLocations.getter(v2);
}

uint64_t sub_1007E72DC()
{
  sub_1000A9DE8();
  sub_100119470();
  sub_10018AA7C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 272) = v3;
  swift_task_dealloc();
  sub_100127A5C();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_1007E73AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, unint64_t a10, unint64_t a11, unint64_t a12, uint64_t a13, long long *a14, void (**a15)(uint64_t, uint64_t), uint64_t a16, void (*a17)(uint64_t, uint64_t), uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int64_t a26,void *a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  sub_1001DE20C();
  uint64_t v33 = *(void *)(v32 + 272);
  int64_t v34 = *(void *)(v33 + 16);
  if (v34)
  {
    a23 = v32 + 152;
    a24 = v32 + 136;
    a21 = v32 + 184;
    a22 = v32 + 168;
    a19 = v32 + 216;
    a20 = v32 + 200;
    uint64_t v35 = *(void *)(v32 + 248);
    a27 = _swiftEmptyArrayStorage;
    sub_1007F3B50(0, v34, 0);
    v35 += 16;
    sub_100129058();
    uint64_t v37 = v33 + v36;
    a16 = *(void *)(v35 + 56);
    a17 = v38;
    a18 = v35;
    a14 = (long long *)(v32 + 96);
    a15 = (void (**)(uint64_t, uint64_t))(v35 - 8);
    do
    {
      uint64_t v39 = *(void *)(v32 + 256);
      a25 = *(void *)(v32 + 240);
      a26 = v34;
      a17(v39, v37);
      *(void *)(v32 + 136) = LocationEntity.id.getter();
      *(void *)(v32 + 144) = v40;
      *(void *)(v32 + 152) = 44;
      *(void *)(v32 + 160) = 0xE100000000000000;
      *(void *)(v32 + 168) = 58;
      *(void *)(v32 + 176) = 0xE100000000000000;
      unint64_t v41 = sub_10014A85C();
      sub_1001BFD1C();
      sub_10018E04C();
      uint64_t v42 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
      uint64_t v44 = v43;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v45._uint64_t countAndFlagsBits = 58;
      v45._object = (void *)0xE100000000000000;
      String.append(_:)(v45);
      swift_bridgeObjectRelease();
      *(void *)(v32 + 184) = LocationEntity.name.getter();
      *(void *)(v32 + 192) = v46;
      *(void *)(v32 + 200) = 58;
      *(void *)(v32 + 208) = 0xE100000000000000;
      *(void *)(v32 + 216) = 0;
      *(void *)(v32 + 224) = 0xE000000000000000;
      a11 = v41;
      a12 = v41;
      a9 = &type metadata for String;
      a10 = v41;
      sub_10018E04C();
      uint64_t v47 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
      uint64_t v49 = v48;
      swift_bridgeObjectRelease();
      a29 = v44;
      swift_bridgeObjectRetain();
      v50._uint64_t countAndFlagsBits = v47;
      v50._object = v49;
      String.append(_:)(v50);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      LocationEntity.name.getter();
      char v51 = (void *)LocationEntity.placemark.getter();
      LocationSearchEntity.init(id:name:placemark:isLocal:)(v42, v44, v51, 0, (uint64_t)a14);
      (*a15)(v39, a25);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_1007F3B50(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v53 = _swiftEmptyArrayStorage[2];
      unint64_t v52 = _swiftEmptyArrayStorage[3];
      if (v53 >= v52 >> 1) {
        sub_1007F3B50((char *)(v52 > 1), v53 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v53 + 1;
      uint64_t v54 = &_swiftEmptyArrayStorage[5 * v53];
      long long v55 = *a14;
      long long v56 = *(_OWORD *)(v32 + 112);
      *((unsigned char *)v54 + 64) = *(unsigned char *)(v32 + 128);
      *((_OWORD *)v54 + 2) = v55;
      *((_OWORD *)v54 + 3) = v56;
      v37 += a16;
      int64_t v34 = a26 - 1;
    }
    while (a26 != 1);
  }
  swift_bridgeObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v32 + 16);
  sub_10017DF08(&qword_100E96F28);
  uint64_t v57 = swift_allocObject();
  *(_OWORD *)(v57 + 16) = xmmword_100C251B0;
  static LocationSearchEntity.makeCurrentLocation()(v32 + 56);
  long long v58 = *(_OWORD *)(v32 + 72);
  *(_OWORD *)(v57 + 32) = *(_OWORD *)(v32 + 56);
  *(_OWORD *)(v57 + 48) = v58;
  *(unsigned char *)(v57 + 64) = *(unsigned char *)(v32 + 88);
  sub_10037FE58();
  swift_task_dealloc();
  sub_1001820F8();
  sub_100188788();
  return v61(v59, v60, v61, v62, v63, v64, v65, v66, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           v57,
           a29,
           a30,
           a31,
           a32);
}

uint64_t LocationSearchEntityQuery.entities(matching:)()
{
  sub_1000A9DE8();
  v0[32] = v1;
  v0[33] = v2;
  v0[30] = v3;
  v0[31] = v4;
  v0[29] = v5;
  uint64_t v6 = type metadata accessor for LocationEntity();
  v0[34] = v6;
  sub_100164920(v6);
  v0[35] = v7;
  v0[36] = sub_10017EF8C();
  sub_100127A5C();
  return _swift_task_switch(v8, v9, v10);
}

uint64_t sub_1007E77A8()
{
  sub_100109790();
  AppDependency.wrappedValue.getter();
  sub_1001A6948();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 296) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1007E7854;
  uint64_t v2 = sub_100191210();
  return dispatch thunk of LocationEntityManagerType.savedLocations.getter(v2);
}

uint64_t sub_1007E7854()
{
  sub_1000A9DE8();
  sub_100119470();
  sub_10018AA7C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 304) = v3;
  swift_task_dealloc();
  sub_100127A5C();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_1007E7924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  sub_1001DE20C();
  uint64_t v33 = v32[38];
  uint64_t v35 = v32[29];
  uint64_t v34 = v32[30];
  swift_bridgeObjectRetain();
  sub_1007E5BFC(v33, v35, v34);
  uint64_t v37 = v36;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)(v32 + 7));
  int64_t v38 = *(void *)(v37 + 16);
  if (v38)
  {
    uint64_t v39 = v32[35];
    uint64_t v40 = (char *)sub_10019B8C0((uint64_t)_swiftEmptyArrayStorage);
    sub_1007F3B50(v40, v38, 0);
    uint64_t v41 = v39 + 16;
    sub_100129058();
    uint64_t v85 = *(void *)(v41 + 56);
    uint64_t v86 = v42;
    uint64_t v84 = v37;
    do
    {
      int64_t v87 = v38;
      uint64_t v43 = sub_1001EA994();
      v44(v43);
      uint64_t v45 = LocationEntity.id.getter();
      sub_100214DA8(v45, v46);
      v32[27] = v48;
      v32[28] = v47;
      unint64_t v49 = sub_10014A85C();
      sub_1001BFD1C();
      sub_1001A4878();
      uint64_t v50 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
      uint64_t v52 = v51;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_100127A14();
      swift_bridgeObjectRelease();
      v32[21] = LocationEntity.name.getter();
      v32[22] = v53;
      v32[23] = 58;
      v32[24] = 0xE100000000000000;
      v32[25] = 0;
      v32[26] = 0xE000000000000000;
      unint64_t v82 = v49;
      unint64_t v83 = v49;
      unint64_t v81 = v49;
      sub_1001A4878();
      uint64_t v54 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
      long long v56 = v55;
      swift_bridgeObjectRelease();
      uint64_t v89 = v50;
      swift_bridgeObjectRetain();
      v57._uint64_t countAndFlagsBits = v54;
      v57._object = v56;
      String.append(_:)(v57);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      LocationEntity.name.getter();
      long long v58 = (void *)LocationEntity.placemark.getter();
      sub_1001835A8(v58);
      uint64_t v59 = sub_1001260C8();
      v60(v59);
      uint64_t v61 = a26;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10012B9CC(*(void *)(a26 + 16));
        uint64_t v61 = a26;
      }
      unint64_t v62 = *(void *)(v61 + 24);
      if (*(void *)(v61 + 16) >= v62 >> 1) {
        sub_1001D4060(v62);
      }
      sub_100184514();
      --v38;
    }
    while (v87 != 1);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    sub_1001820F8();
    sub_100188788();
    return v65(v63, v64, v65, v66, v67, v68, v69, v70, &type metadata for String, v81, v82, v83, v84, v41 - 8, v85, v86, v41, v32 + 27, v32 + 25,
             v32 + 23,
             v32 + 21,
             v32 + 19,
             v32 + 17,
             a24,
             1,
             a26,
             v89,
             v52,
             a29,
             a30,
             a31,
             a32);
  }
  else
  {
    swift_bridgeObjectRelease();
    AppDependency.wrappedValue.getter();
    sub_1001B1E64(v32 + 2, v32[5]);
    uint64_t v88 = (char *)&dword_100E96F38 + dword_100E96F38;
    uint64_t v72 = (void *)swift_task_alloc();
    v32[39] = v72;
    *uint64_t v72 = v32;
    v72[1] = sub_1007E7C58;
    sub_100188788();
    return v77(v73, v74, v75, v76, v77, v78, v79, v80, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             v88,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32);
  }
}

uint64_t sub_1007E7C58()
{
  sub_100109790();
  uint64_t v2 = v1;
  sub_10018AA7C();
  *uint64_t v4 = v3;
  uint64_t v5 = v3 + 16;
  uint64_t v6 = *v0;
  sub_10018AA7C();
  *uint64_t v7 = v6;
  swift_task_dealloc();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v5);
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(uint64_t))(v6 + 8);
  return v8(v2);
}

uint64_t sub_1007E7D7C()
{
  uint64_t v0 = sub_10017DF08(&qword_100E96F40);
  sub_100097814(v0, static LocationSearchEntityQuery.properties);
  sub_1002102B0(v0, (uint64_t)static LocationSearchEntityQuery.properties);
  sub_100232310();
  return EntityQueryProperties.init(properties:)();
}

uint64_t sub_1007E7E00()
{
  sub_10017DF08(&qword_100E97248);
  swift_getKeyPath();
  EntityQueryProperty.__allocating_init<>(_:comparators:)();
  sub_100232310();
  uint64_t v0 = static EntityQueryPropertiesBuilder.buildExpression(_:)();
  swift_release();
  sub_10017DF08(&qword_100E6BBD0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100C31F30;
  *(void *)(v1 + 32) = v0;
  specialized Array._endMutation()();
  swift_retain();
  uint64_t v2 = static EntityQueryPropertiesBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  swift_release();
  return v2;
}

uint64_t sub_1007E7EFC()
{
  uint64_t v0 = sub_10017DF08(&qword_100E97250);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E97258);
  swift_allocObject();
  ContainsComparator.init<>(mappingTransform:)();
  sub_100232310();
  static EntityQueryComparatorsBuilder.buildExpression(_:)();
  swift_release();
  sub_10017DF08(&qword_100E97260);
  unint64_t v4 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100C251B0;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 16))(v5 + v4, v3, v0);
  sub_10017DF08(&qword_100E62C80);
  sub_10033A0A8();
  uint64_t v6 = static EntityQueryComparatorsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v6;
}

uint64_t sub_1007E80F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  return swift_bridgeObjectRetain();
}

uint64_t LocationSearchEntityQuery.properties.unsafeMutableAddressor()
{
  return sub_100070A44(&qword_100E62680, &qword_100E96F40, (uint64_t)static LocationSearchEntityQuery.properties);
}

uint64_t static LocationSearchEntityQuery.properties.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1007E84C0(&qword_100E62680, &qword_100E96F40, (uint64_t)static LocationSearchEntityQuery.properties, a1);
}

uint64_t static LocationSearchEntityQuery.properties.setter(uint64_t a1)
{
  return sub_1007E8598(a1, &qword_100E62680, &qword_100E96F40, (uint64_t)static LocationSearchEntityQuery.properties);
}

uint64_t (*static LocationSearchEntityQuery.properties.modify())()
{
  if (qword_100E62680 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_10017DF08(&qword_100E96F40);
  sub_1002102B0(v0, (uint64_t)static LocationSearchEntityQuery.properties);
  sub_10017FEE0();
  return j__swift_endAccess_0;
}

uint64_t sub_1007E8210()
{
  uint64_t v0 = sub_10017DF08(&qword_100E96F48);
  sub_100097814(v0, static LocationSearchEntityQuery.sortingOptions);
  sub_1002102B0(v0, (uint64_t)static LocationSearchEntityQuery.sortingOptions);
  sub_100232310();
  return EntityQuerySortingOptions.init(content:)();
}

uint64_t sub_1007E828C()
{
  uint64_t v0 = sub_10017DF08(&qword_100E97230);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v12 - v5;
  swift_getKeyPath();
  sub_100232310();
  sub_1007F4E24();
  EntityQuerySortableByProperty.init<A>(_:)();
  static EntityQuerySortingOptionsBuilder.buildExpression(_:)();
  uint64_t v7 = *(void (**)(char *, uint64_t))(v1 + 8);
  v7(v3, v0);
  sub_10017DF08(&qword_100E97240);
  unint64_t v8 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100C251B0;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 16))(v9 + v8, v6, v0);
  uint64_t v10 = static EntityQuerySortingOptionsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  v7(v6, v0);
  return v10;
}

uint64_t LocationSearchEntityQuery.sortingOptions.unsafeMutableAddressor()
{
  return sub_100070A44(&qword_100E62688, &qword_100E96F48, (uint64_t)static LocationSearchEntityQuery.sortingOptions);
}

uint64_t static LocationSearchEntityQuery.sortingOptions.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1007E84C0(&qword_100E62688, &qword_100E96F48, (uint64_t)static LocationSearchEntityQuery.sortingOptions, a1);
}

uint64_t sub_1007E84C0@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_10017DF08(a2);
  uint64_t v8 = sub_1002102B0(v7, a3);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a4, v8, v7);
}

uint64_t static LocationSearchEntityQuery.sortingOptions.setter(uint64_t a1)
{
  return sub_1007E8598(a1, &qword_100E62688, &qword_100E96F48, (uint64_t)static LocationSearchEntityQuery.sortingOptions);
}

uint64_t sub_1007E8598(uint64_t a1, void *a2, uint64_t *a3, uint64_t a4)
{
  if (*a2 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_10017DF08(a3);
  uint64_t v8 = sub_1002102B0(v7, a4);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 24))(v8, a1, v7);
  swift_endAccess();
  sub_100183F94();
  return v9();
}

uint64_t (*static LocationSearchEntityQuery.sortingOptions.modify())()
{
  if (qword_100E62688 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_10017DF08(&qword_100E96F48);
  sub_1002102B0(v0, (uint64_t)static LocationSearchEntityQuery.sortingOptions);
  sub_10017FEE0();
  return j_j__swift_endAccess_0;
}

uint64_t LocationSearchEntityQuery.entities(matching:mode:sortedBy:limit:)()
{
  sub_1000A9DE8();
  v0[24] = v1;
  v0[25] = v2;
  uint64_t v3 = type metadata accessor for LocationEntity();
  v0[26] = v3;
  sub_100164920(v3);
  v0[27] = v4;
  v0[28] = sub_10017EF8C();
  sub_100127A5C();
  return _swift_task_switch(v5, v6, v7);
}

uint64_t sub_1007E878C()
{
  sub_100109790();
  AppDependency.wrappedValue.getter();
  sub_1001A6948();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1007E8838;
  uint64_t v2 = sub_100191210();
  return dispatch thunk of LocationEntityManagerType.savedLocations.getter(v2);
}

uint64_t sub_1007E8838()
{
  sub_1000A9DE8();
  sub_100119470();
  sub_10018AA7C();
  *uint64_t v2 = v1;
  *uint64_t v2 = *v0;
  *(void *)(v1 + 240) = v3;
  swift_task_dealloc();
  sub_100127A5C();
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_1007E8908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, unint64_t a10, unint64_t a11, unint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18, void *a19, void *a20,void *a21,void *a22,void *a23,uint64_t a24,int64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  sub_1001DE20C();
  uint64_t v33 = v32[30];
  uint64_t v34 = v32[24];
  swift_bridgeObjectRetain();
  sub_1007E5EC0(v33, v34);
  uint64_t v36 = v35;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)(v32 + 2));
  int64_t v37 = *(void *)(v36 + 16);
  if (v37)
  {
    a22 = v32 + 14;
    a23 = v32 + 12;
    a20 = v32 + 18;
    a21 = v32 + 16;
    a18 = v32 + 22;
    a19 = v32 + 20;
    uint64_t v38 = v32[27];
    uint64_t v39 = (char *)sub_10019B8C0((uint64_t)_swiftEmptyArrayStorage);
    sub_1007F3B50(v39, v37, 0);
    v38 += 16;
    sub_100129058();
    a15 = *(void *)(v38 + 56);
    a16 = v40;
    a17 = v38;
    a13 = v36;
    a14 = v38 - 8;
    do
    {
      a25 = v37;
      uint64_t v41 = sub_1001EA994();
      v42(v41);
      v32[12] = LocationEntity.id.getter();
      v32[13] = v43;
      v32[14] = 44;
      v32[15] = 0xE100000000000000;
      v32[16] = 58;
      v32[17] = 0xE100000000000000;
      unint64_t v44 = sub_10014A85C();
      sub_1001BFD1C();
      sub_1001A4878();
      uint64_t v45 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
      uint64_t v47 = v46;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_100127A14();
      swift_bridgeObjectRelease();
      v32[18] = LocationEntity.name.getter();
      v32[19] = v48;
      v32[20] = 58;
      v32[21] = 0xE100000000000000;
      v32[22] = 0;
      v32[23] = 0xE000000000000000;
      a11 = v44;
      a12 = v44;
      a9 = &type metadata for String;
      a10 = v44;
      sub_1001A4878();
      uint64_t v49 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
      uint64_t v51 = v50;
      swift_bridgeObjectRelease();
      a27 = v45;
      a28 = v47;
      swift_bridgeObjectRetain();
      v52._uint64_t countAndFlagsBits = v49;
      v52._object = v51;
      String.append(_:)(v52);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      LocationEntity.name.getter();
      uint64_t v53 = (void *)LocationEntity.placemark.getter();
      sub_1001835A8(v53);
      uint64_t v54 = sub_1001260C8();
      v55(v54);
      uint64_t v56 = a26;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10012B9CC(*(void *)(a26 + 16));
        uint64_t v56 = a26;
      }
      unint64_t v57 = *(void *)(v56 + 24);
      if (*(void *)(v56 + 16) >= v57 >> 1) {
        sub_1001D4060(v57);
      }
      sub_100184514();
      --v37;
    }
    while (a25 != 1);
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  sub_1001820F8();
  sub_100188788();
  return v60(v58, v59, v60, v61, v62, v63, v64, v65, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32);
}

uint64_t sub_1007E8BAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = v2 - 1;
    uint64_t v5 = a2 + 40;
    do
    {
      uint64_t v19 = v4;
      swift_bridgeObjectRetain();
      LocationEntity.id.getter();
      sub_10014A85C();
      uint64_t v6 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
      uint64_t v8 = v7;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v9._uint64_t countAndFlagsBits = 58;
      v9._object = (void *)0xE100000000000000;
      String.append(_:)(v9);
      swift_bridgeObjectRelease();
      LocationEntity.name.getter();
      uint64_t v10 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
      uint64_t v12 = v11;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      v13._uint64_t countAndFlagsBits = v10;
      v13._object = v12;
      String.append(_:)(v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      LocationEntity.name.getter();
      uint64_t v14 = (void *)LocationEntity.placemark.getter();
      LocationSearchEntity.init(id:name:placemark:isLocal:)(v6, v8, v14, 0, (uint64_t)&v17);
      EntityProperty.wrappedValue.getter();
      char v15 = StringProtocol.contains<A>(_:)();
      swift_bridgeObjectRelease();
      long long v18 = v17;
      sub_1002F8DD8((uint64_t)&v18);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v4 = v19 - 1;
      if ((v15 & 1) == 0) {
        break;
      }
      v5 += 16;
    }
    while (v19);
    swift_bridgeObjectRelease();
  }
  else
  {
    char v15 = 1;
  }
  return v15 & 1;
}

uint64_t sub_1007E8E38(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1007E8EFC;
  return LocationSearchEntityQuery.entities(matching:)();
}

uint64_t sub_1007E8EFC()
{
  sub_100109790();
  uint64_t v3 = v2;
  sub_100119470();
  uint64_t v5 = v4;
  sub_10018AA7C();
  *uint64_t v6 = v5;
  uint64_t v7 = *v1;
  sub_10018AA7C();
  *uint64_t v8 = v7;
  swift_task_dealloc();
  if (!v0) {
    **(void **)(v5 + 16) = v3;
  }
  Swift::String v9 = *(uint64_t (**)(void))(v7 + 8);
  return v9();
}

uint64_t sub_1007E8FDC@<X0>(uint64_t a1@<X8>)
{
  return sub_1007E901C(LocationSearchEntityQuery.properties.unsafeMutableAddressor, &qword_100E96F40, a1);
}

uint64_t sub_1007E8FFC@<X0>(uint64_t a1@<X8>)
{
  return sub_1007E901C(LocationSearchEntityQuery.sortingOptions.unsafeMutableAddressor, &qword_100E96F48, a1);
}

uint64_t sub_1007E901C@<X0>(uint64_t (*a1)(void)@<X2>, uint64_t *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1();
  swift_beginAccess();
  sub_10017DF08(a2);
  sub_100162E4C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(a3, v5);
}

uint64_t sub_1007E90A4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1007F4E84;
  return LocationSearchEntityQuery.entities(matching:mode:sortedBy:limit:)();
}

uint64_t sub_1007E9144@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = LocationSearchEntityQuery.init()();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_1007E9170()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1007E920C;
  return LocationSearchEntityQuery.entities(for:)();
}

uint64_t sub_1007E920C()
{
  sub_1000A9DE8();
  uint64_t v3 = v2;
  sub_100119470();
  uint64_t v4 = *v1;
  sub_10018AA7C();
  *uint64_t v5 = v4;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v4 + 8);
  if (!v0) {
    uint64_t v6 = v3;
  }
  return v7(v6);
}

uint64_t sub_1007E92E0(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1007F4E84;
  return LocationSearchEntityQuery.suggestedEntities()();
}

uint64_t sub_1007E9378(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_1002F0D70();
  *uint64_t v5 = v2;
  v5[1] = sub_1007E942C;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_1007E942C()
{
  sub_1000A9DE8();
  sub_100119470();
  uint64_t v1 = *v0;
  sub_10018AA7C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v1 + 8);
  return v3();
}

uint64_t sub_1007E94F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_1007E942C;
  return DynamicOptionsProvider.defaultResult()(a1, a2, a3);
}

uint64_t sub_1007E95B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&unk_100E970E8, (uint64_t (*)(void))&type metadata accessor for LocationOfInterest, (void (*)(void))&type metadata accessor for LocationOfInterest);
}

uint64_t sub_1007E95F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&unk_100E96FC8, (uint64_t (*)(void))type metadata accessor for ArticleModel, (void (*)(void))type metadata accessor for ArticleModel);
}

void sub_1007E9640()
{
}

uint64_t sub_1007E9674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&qword_100E6ED18, type metadata accessor for ComparisonCapsuleViewModel.Row, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
}

uint64_t sub_1007E96BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&unk_100E97020, (uint64_t (*)(void))&type metadata accessor for DetailChartDataElement, (void (*)(void))&type metadata accessor for DetailChartDataElement);
}

void sub_1007E9704()
{
}

uint64_t sub_1007E9738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&unk_100E6B688, (uint64_t (*)(void))&type metadata accessor for Date, (void (*)(void))&type metadata accessor for Date);
}

uint64_t sub_1007E9780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&unk_100E971B0, (uint64_t (*)(void))&type metadata accessor for HourTemperatureStatistics, (void (*)(void))&type metadata accessor for HourTemperatureStatistics);
}

uint64_t sub_1007E97C8()
{
  return sub_10012A068();
}

uint64_t sub_1007E97DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&unk_100E92020, (uint64_t (*)(void))&type metadata accessor for HistoricalFact, (void (*)(void))&type metadata accessor for HistoricalFact);
}

void sub_1007E9824()
{
}

uint64_t sub_1007E9858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&unk_100E96FF0, (uint64_t (*)(void))&type metadata accessor for OverviewTableRowViewModel, (void (*)(void))&type metadata accessor for OverviewTableRowViewModel);
}

void sub_1007E98A0()
{
}

void sub_1007E98D4()
{
  sub_100162BC8();
  if (v4)
  {
    sub_10017E9A4();
    if (v5 != v6)
    {
      sub_100183F88();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1001A24A0();
    }
  }
  sub_100185C7C();
  if (v3)
  {
    sub_10017DF08(v7);
    uint64_t v8 = (void *)sub_10016EEEC();
    sub_100163FA0(v8);
  }
  if (v2)
  {
    uint64_t v9 = sub_100176DD8();
    v1(v9);
    sub_1001855E0();
  }
  else
  {
    uint64_t v10 = sub_100109410();
    v0(v10);
  }
}

void sub_1007E9984()
{
}

void sub_1007E99B8()
{
  sub_10018C55C();
  if (v2)
  {
    sub_10017E9A4();
    if (v3 != v4)
    {
      sub_100183F88();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1001A24A0();
    }
  }
  sub_1001A2E3C();
  if (v1)
  {
    sub_10017DF08(&qword_100E971D0);
    char v5 = (const void *)sub_1001D0EEC();
    size_t v6 = j__malloc_size(v5);
    sub_1001D1410(v6 - 32);
  }
  if (v0)
  {
    uint64_t v7 = (char *)sub_10018A3F8();
    sub_100129FF8(v7, v8, v9);
    sub_1001855E0();
  }
  else
  {
    uint64_t v10 = sub_10019DF5C();
    sub_1007EA904(v10, v11, v12, v13);
  }
}

uint64_t sub_1007E9A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&unk_100E6ECB8, type metadata accessor for ConditionDetailPlatterViewModel, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
}

uint64_t sub_1007E9AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&unk_100E97038, (uint64_t (*)(void))&type metadata accessor for HourWeather, (void (*)(void))&type metadata accessor for HourWeather);
}

void sub_1007E9AF4(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

uint64_t sub_1007E9B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&unk_100E97060, type metadata accessor for ConditionDetailChartInputs, (void (*)(void))type metadata accessor for ConditionDetailChartInputs);
}

uint64_t sub_1007E9B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&unk_100E97058, type metadata accessor for ConditionDetailChartInput, (void (*)(void))type metadata accessor for ConditionDetailChartInput);
}

uint64_t sub_1007E9BC0()
{
  return sub_10012A068();
}

uint64_t sub_1007E9BD4()
{
  return sub_10012A068();
}

uint64_t sub_1007E9BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&unk_100E97028, (uint64_t (*)(void))type metadata accessor for DetailChartsViewModel, (void (*)(void))type metadata accessor for DetailChartsViewModel);
}

uint64_t sub_1007E9C30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&unk_100E8AB00, type metadata accessor for UnitsConfigurationViewModel.Temperature, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Temperature);
}

uint64_t sub_1007E9C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&unk_100E97080, type metadata accessor for DayPickerViewModel.CalendarDayViewModel, (void (*)(void))type metadata accessor for DayPickerViewModel.CalendarDayViewModel);
}

void sub_1007E9CC0()
{
}

void sub_1007E9CF4(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

void sub_1007E9D30()
{
}

uint64_t sub_1007E9D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&unk_100E97268, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (void (*)(void))&type metadata accessor for URLQueryItem);
}

void sub_1007E9DAC(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

uint64_t sub_1007E9DE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&unk_100E97018, (uint64_t (*)(void))&type metadata accessor for InterpolationElement, (void (*)(void))&type metadata accessor for InterpolationElement);
}

uint64_t sub_1007E9E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&unk_100E76AF8, (uint64_t (*)(void))&type metadata accessor for URLHandlerPattern, (void (*)(void))&type metadata accessor for URLHandlerPattern);
}

uint64_t sub_1007E9E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&unk_100E7FA50, type metadata accessor for ScrubberHour, (void (*)(void))type metadata accessor for ScrubberHour);
}

uint64_t sub_1007E9EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&unk_100E971B8, type metadata accessor for ScrubberDay, (void (*)(void))type metadata accessor for ScrubberDay);
}

void sub_1007E9F08(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

uint64_t sub_1007E9F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&unk_100E92850, (uint64_t (*)(void))&type metadata accessor for LocationModel, (void (*)(void))&type metadata accessor for LocationModel);
}

uint64_t sub_1007E9F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&unk_100E97108, type metadata accessor for LocationWeatherDataState, (void (*)(void))type metadata accessor for LocationWeatherDataState);
}

uint64_t sub_1007E9FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&unk_100E96FC0, (uint64_t (*)(void))&type metadata accessor for ArticlePlacement, (void (*)(void))&type metadata accessor for ArticlePlacement);
}

uint64_t sub_1007EA01C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&unk_100E97138, type metadata accessor for WeatherData, (void (*)(void))type metadata accessor for WeatherData);
}

void sub_1007EA064()
{
  sub_10018C55C();
  if (v2)
  {
    sub_10017E9A4();
    if (v3 != v4)
    {
      sub_100183F88();
      if (v3)
      {
        __break(1u);
        return;
      }
      sub_1001A24A0();
    }
  }
  sub_1001A2E3C();
  if (v1)
  {
    sub_10017DF08(&qword_100E97300);
    char v5 = (const void *)sub_1001D0EEC();
    size_t v6 = j__malloc_size(v5);
    sub_1001D1410(v6 - 32);
  }
  if (v0)
  {
    uint64_t v7 = (char *)sub_10018A3F8();
    sub_1007EB4F8(v7, v8, v9);
    sub_1001855E0();
  }
  else
  {
    uint64_t v10 = sub_10019DF5C();
    sub_1007EABF4(v10, v11, v12, v13);
  }
}

void sub_1007EA110()
{
}

void sub_1007EA144()
{
  sub_100162BC8();
  if (v4)
  {
    sub_10017E9A4();
    if (v5 != v6)
    {
      sub_100183F88();
      if (v5)
      {
        __break(1u);
        return;
      }
      sub_1001A24A0();
    }
  }
  sub_100185C7C();
  if (v3)
  {
    sub_10017DF08(v7);
    uint64_t v8 = (const void *)sub_1001D0EEC();
    size_t v9 = j__malloc_size(v8);
    sub_10012B654(v9 - 32);
  }
  if (v2)
  {
    uint64_t v10 = sub_100176DD8();
    v1(v10);
    sub_1001855E0();
  }
  else
  {
    uint64_t v11 = sub_100109410();
    v0(v11);
  }
}

void sub_1007EA1FC()
{
}

void sub_1007EA230(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

uint64_t sub_1007EA26C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&unk_100E97110, type metadata accessor for ListLocationViewModel, (void (*)(void))type metadata accessor for ListLocationViewModel);
}

uint64_t sub_1007EA2B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&unk_100E970D0, (uint64_t (*)(void))type metadata accessor for NewsArticle, (void (*)(void))type metadata accessor for NewsArticle);
}

uint64_t sub_1007EA2FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&unk_100E97010, (uint64_t (*)(void))type metadata accessor for DetailChartViewModel, (void (*)(void))type metadata accessor for DetailChartViewModel);
}

uint64_t sub_1007EA344()
{
  return sub_10012A068();
}

uint64_t sub_1007EA358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&qword_100E972E8, (uint64_t (*)(void))&type metadata accessor for VFXEffectViewID, (void (*)(void))&type metadata accessor for VFXEffectViewID);
}

uint64_t sub_1007EA3A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10018ACAC(a1, a2, a3, a4, (uint64_t)&qword_100E97078, (uint64_t (*)(void))&type metadata accessor for DayWeather, (void (*)(void))&type metadata accessor for DayWeather);
}

void sub_1007EA3E8(char a1, uint64_t a2, char a3, uint64_t a4)
{
}

uint64_t sub_1007EA424(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_1007EA524(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    unint64_t v6 = &__dst[8 * v4];
    if (v5 >= v6 || &v5[8 * v4] <= __dst)
    {
      memcpy(__dst, v5, 8 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1007EA618(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_1007EA710(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 40 * a1 + 32);
    uint64_t v6 = 5 * v4;
    uint64_t v7 = &__dst[8 * v6];
    if (v5 >= v7 || &v5[8 * v6] <= __dst)
    {
      memcpy(__dst, v5, 8 * v6);
      swift_bridgeObjectRelease();
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1007EA80C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1007EA904(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1007EA9FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1007EAAFC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_1007EABF4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 4 * a1 + 32);
    unint64_t v6 = &__dst[4 * v4];
    if (v5 >= v6 || &v5[4 * v4] <= __dst)
    {
      memcpy(__dst, v5, 4 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1007EACE8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_1007EADE4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    unint64_t v6 = &__dst[16 * v4];
    if (v5 >= v6 || &v5[16 * v4] <= __dst)
    {
      memcpy(__dst, v5, 16 * v4);
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_1007EAED8(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (__dst != __src || &__src[40 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 40 * a2);
  }
  return __src;
}

void sub_1007EAF78(uint64_t a1, uint64_t a2)
{
}

char *sub_1007EAF84(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (__dst != __src || &__src[80 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 80 * a2);
  }
  return __src;
}

void sub_1007EB020(uint64_t a1, uint64_t a2)
{
}

void sub_1007EB02C(uint64_t a1, uint64_t a2)
{
}

char *sub_1007EB044(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (__dst != __src || &__src[24 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 24 * a2);
  }
  return __src;
}

void sub_1007EB0DC(uint64_t a1, uint64_t a2)
{
}

char *sub_1007EB0F4(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_100187288();
    uint64_t result = (char *)sub_10017A91C();
    __break(1u);
  }
  else if (a3 != result || &result[40 * a2] <= a3)
  {
    return (char *)sub_1001A0DFC(a3, result);
  }
  return result;
}

char *sub_1007EB158(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_100187288();
    uint64_t result = (char *)sub_10017A91C();
    __break(1u);
  }
  else if (a3 != result || &result[32 * a2] <= a3)
  {
    return (char *)sub_1001A0DFC(a3, result);
  }
  return result;
}

char *sub_1007EB1B4(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (__dst != __src || &__src[120 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 120 * a2);
  }
  return __src;
}

char *sub_1007EB24C(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    sub_100187288();
    __src = (char *)sub_10017A91C();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

char *sub_1007EB2BC(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (__dst != __src || &__src[88 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 88 * a2);
  }
  return __src;
}

void sub_1007EB358(uint64_t a1, uint64_t a2)
{
}

char *sub_1007EB370(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (__dst != __src || &__src[32 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 32 * a2);
  }
  return __src;
}

void sub_1007EB404(uint64_t a1, uint64_t a2)
{
}

void sub_1007EB41C(uint64_t a1, uint64_t a2)
{
}

void sub_1007EB434(uint64_t a1, uint64_t a2)
{
}

void sub_1007EB44C(uint64_t a1, uint64_t a2)
{
}

void sub_1007EB464(uint64_t a1, uint64_t a2)
{
}

void sub_1007EB47C(uint64_t a1, uint64_t a2)
{
}

char *sub_1007EB494(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_100187288();
    uint64_t result = (char *)sub_10017A91C();
    __break(1u);
  }
  else if (a3 != result || &result[24 * a2] <= a3)
  {
    return (char *)sub_1001A0DFC(a3, result);
  }
  return result;
}

char *sub_1007EB4F8(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else if (__dst != __src || &__src[4 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 4 * a2);
  }
  return __src;
}

void sub_1007EB58C(uint64_t a1, uint64_t a2)
{
}

char *sub_1007EB5A4(char *result, uint64_t a2, char *a3)
{
  if (a2 < 0)
  {
    sub_100187288();
    uint64_t result = (char *)sub_10017A91C();
    __break(1u);
  }
  else if (a3 != result || &result[8 * a2] <= a3)
  {
    return (char *)sub_1001A0DFC(a3, result);
  }
  return result;
}

uint64_t sub_1007EB600(uint64_t a1, uint64_t a2)
{
  return sub_10018BE08(a1, a2);
}

uint64_t sub_1007EB618(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 80 * a2 > a1 ? (BOOL v3 = a1 + 80 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_1007EB6FC(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_100187288();
    sub_1001D1DF8();
LABEL_11:
    uint64_t result = sub_100163950();
    __break(1u);
    return result;
  }
  sub_100188B9C();
  if (v4 + 8 * v3 > v2 && v2 + 8 * v3 > v4)
  {
    sub_100187288();
    sub_100181768();
    goto LABEL_11;
  }
  sub_1007F4CE0();
  sub_100182C00();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1007EB7B4(uint64_t a1, uint64_t a2)
{
  return sub_10018BE08(a1, a2);
}

uint64_t sub_1007EB7CC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 24 * a2 > a1 ? (BOOL v3 = a1 + 24 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_1007EB8B0(uint64_t a1, uint64_t a2)
{
  return sub_10018BE08(a1, a2);
}

uint64_t sub_1007EB8C8(uint64_t a1, uint64_t a2)
{
  return sub_10018BE08(a1, a2);
}

uint64_t sub_1007EB8E0(uint64_t a1, uint64_t a2)
{
  return sub_10018BE08(a1, a2);
}

uint64_t sub_1007EB8F8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 32 * a2 > a1 ? (BOOL v3 = a1 + 32 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_1007EB9D8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 120 * a2 > a1 ? (BOOL v3 = a1 + 120 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

void *sub_1007EBAC0(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0 || (&__dst[8 * a2] > __src ? (BOOL v3 = &__src[8 * a2] > __dst) : (BOOL v3 = 0), v3))
  {
    uint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return memcpy(__dst, __src, 8 * a2);
  }
  return result;
}

uint64_t sub_1007EBB9C(uint64_t a1, uint64_t a2)
{
  return sub_10018BE08(a1, a2);
}

uint64_t sub_1007EBBB4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 88 * a2 > a1 ? (BOOL v3 = a1 + 88 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_1007EBC9C(uint64_t a1, uint64_t a2)
{
  return sub_1007EBCFC(a1, a2);
}

uint64_t sub_1007EBCA8(uint64_t a1, uint64_t a2)
{
  return sub_10018BE08(a1, a2);
}

uint64_t sub_1007EBCC0(uint64_t a1, uint64_t a2)
{
  return sub_10018BE08(a1, a2);
}

uint64_t sub_1007EBCD8(uint64_t a1, uint64_t a2)
{
  return sub_10018BE08(a1, a2);
}

uint64_t sub_1007EBCF0(uint64_t a1, uint64_t a2)
{
  return sub_1007EBCFC(a1, a2);
}

uint64_t sub_1007EBCFC(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_100187288();
    sub_1001D1DF8();
LABEL_11:
    uint64_t result = sub_100163950();
    __break(1u);
    return result;
  }
  sub_100188B9C();
  if (v4 + 40 * v3 > v2 && v2 + 40 * v3 > v4)
  {
    sub_100187288();
    sub_100181768();
    goto LABEL_11;
  }
  sub_10017DF08(v5);
  sub_100182C00();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1007EBDB8(uint64_t a1, uint64_t a2)
{
  return sub_10018BE08(a1, a2);
}

uint64_t sub_1007EBDD0(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    sub_100187288();
    sub_1001D1DF8();
LABEL_11:
    uint64_t result = sub_100163950();
    __break(1u);
    return result;
  }
  sub_100188B9C();
  if (v4 + 24 * v3 > v2 && v2 + 24 * v3 > v4)
  {
    sub_100187288();
    sub_100181768();
    goto LABEL_11;
  }
  sub_10017DF08(v5);
  sub_100182C00();

  return swift_arrayInitWithCopy();
}

uint64_t sub_1007EBE8C(uint64_t a1, uint64_t a2)
{
  return sub_10018BE08(a1, a2);
}

uint64_t sub_1007EBEA4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a2 < 0 || (a3 + 16 * a2 > a1 ? (BOOL v3 = a1 + 16 * a2 > a3) : (BOOL v3 = 0), v3))
  {
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    return swift_arrayInitWithCopy();
  }
  return result;
}

uint64_t sub_1007EBF84()
{
  sub_1001EA87C();
  if (v3 < 0)
  {
    sub_100187288();
    sub_1001D1DF8();
LABEL_11:
    uint64_t result = sub_100163950();
    __break(1u);
    return result;
  }
  if (v2 + 40 * v1 > v0 && v0 + 40 * v1 > v2)
  {
    sub_100187288();
    sub_100181768();
    goto LABEL_11;
  }

  return swift_arrayInitWithCopy();
}

uint64_t sub_1007EC034(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for LocationOfInterestType();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  size_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_100109818(&qword_100E63510, (void (*)(uint64_t))&type metadata accessor for LocationOfInterestType);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    unint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    long long v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_100109818(&qword_100E63530, (void (*)(uint64_t))&type metadata accessor for LocationOfInterestType);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::String v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1007EF634((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

#error "1007EC548: call analysis failed (funcsize=116)"

#error "1007EC714: call analysis failed (funcsize=93)"

uint64_t sub_1007EC734(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Location();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  size_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_100109818(&qword_100E639A0, (void (*)(uint64_t))&type metadata accessor for Location);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    unint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    long long v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_100109818((unint64_t *)&qword_100E639A8, (void (*)(uint64_t))&type metadata accessor for Location);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::String v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1007EFD60((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1007ECAF8(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DetailChartCondition();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  size_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_100109818(&qword_100E63988, (void (*)(uint64_t))&type metadata accessor for DetailChartCondition);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    unint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    long long v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_100109818((unint64_t *)&qword_100E63990, (void (*)(uint64_t))&type metadata accessor for DetailChartCondition);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::String v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1007F00BC((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1007ECE1C(unsigned __int8 *a1, unsigned __int8 a2)
{
  uint64_t v5 = *v2;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a2);
  Swift::Int v6 = Hasher._finalize()();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    swift_isUniquelyReferenced_nonNull_native();
    sub_1001A4B8C();
    sub_1007F0378(a2, v8, v12);
    *unint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(unsigned __int8 *)(v9 + v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int8 *)(v9 + v8) != a2);
  }
  uint64_t result = 0;
  a2 = *(unsigned char *)(*(void *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = a2;
  return result;
}

#error "1007ED0E8: call analysis failed (funcsize=105)"

#error "1007ED36C: call analysis failed (funcsize=119)"

uint64_t sub_1007ED3F8()
{
  uint64_t v1 = v0;
  uint64_t v42 = type metadata accessor for LocationOfInterestType();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_10017DF08(&qword_100E97208);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    int64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    uint64_t v14 = v41;
    uint64_t v15 = v42;
    if (!v10) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v16 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    int64_t v40 = v13;
    for (unint64_t i = v16 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v20 << 6))
    {
      uint64_t v22 = v4;
      uint64_t v23 = *(void *)(v4 + 48);
      uint64_t v24 = *(void *)(v39 + 72);
      unint64_t v25 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v25(v14, v23 + v24 * i, v15);
      uint64_t v6 = v38;
      sub_100109818(&qword_100E63510, (void (*)(uint64_t))&type metadata accessor for LocationOfInterestType);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v26 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) == 0)
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v26) >> 6;
        while (++v28 != v31 || (v30 & 1) == 0)
        {
          BOOL v32 = v28 == v31;
          if (v28 == v31) {
            unint64_t v28 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v28);
          if (v33 != -1)
          {
            unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v11 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v25)(*(void *)(v6 + 48) + v29 * v24, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v22;
      int64_t v13 = v40;
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v18 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_38;
      }
      if (v18 >= v36) {
        goto LABEL_32;
      }
      unint64_t v19 = v37[v18];
      int64_t v20 = v13 + 1;
      if (!v19)
      {
        int64_t v20 = v13 + 2;
        if (v13 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v19 = v37[v20];
        if (!v19)
        {
          int64_t v20 = v13 + 3;
          if (v13 + 3 >= v36) {
            goto LABEL_32;
          }
          unint64_t v19 = v37[v20];
          if (!v19)
          {
            uint64_t v21 = v13 + 4;
            if (v13 + 4 >= v36)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v35;
              uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
              if (v34 > 63) {
                sub_1007F3004(0, (unint64_t)(v34 + 63) >> 6, v37);
              }
              else {
                *int64_t v37 = -1 << v34;
              }
              *(void *)(v4 + 16) = 0;
              break;
            }
            unint64_t v19 = v37[v21];
            if (!v19)
            {
              while (1)
              {
                int64_t v20 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_39;
                }
                if (v20 >= v36) {
                  goto LABEL_32;
                }
                unint64_t v19 = v37[v20];
                ++v21;
                if (v19) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v20 = v13 + 4;
          }
        }
      }
LABEL_20:
      unint64_t v10 = (v19 - 1) & v19;
      int64_t v40 = v20;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

void sub_1007ED7F0()
{
  sub_100162EA0();
  type metadata accessor for ListViewTipManager.LocationNameAndLocationOfInterestType(0);
  sub_100179C0C();
  uint64_t v29 = v1;
  __chkstk_darwin(v2);
  sub_1001626E0();
  uint64_t v5 = v4 - v3;
  uint64_t v6 = (void *)*v0;
  sub_10017DF08(&qword_100E97210);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  if (v6[2])
  {
    sub_1001D15F8();
    unint64_t v28 = v6 + 7;
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    uint64_t v10 = v9 & v6[7];
    sub_10019AE8C();
    uint64_t v27 = v11;
    uint64_t v12 = v7 + 56;
    swift_retain();
    uint64_t v13 = 0;
    if (!v10) {
      goto LABEL_7;
    }
LABEL_6:
    sub_100129004();
    for (uint64_t i = v14 | (v13 << 6); ; uint64_t i = v18 + (v13 << 6))
    {
      uint64_t v19 = *(void *)(v29 + 72);
      sub_10023B7B4(v6[6] + v19 * i, v5);
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      type metadata accessor for LocationOfInterestType();
      sub_100109818(&qword_100E63510, (void (*)(uint64_t))&type metadata accessor for LocationOfInterestType);
      dispatch thunk of Hashable.hash(into:)();
      unint64_t v20 = Hasher._finalize()() & ~(-1 << *(unsigned char *)(v7 + 32));
      if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) == 0)
      {
        sub_100183E64();
        while (++v23 != v24 || (v22 & 1) == 0)
        {
          BOOL v25 = v23 == v24;
          if (v23 == v24) {
            uint64_t v23 = 0;
          }
          v22 |= v25;
          if (*(void *)(v12 + 8 * v23) != -1)
          {
            sub_10020FA10();
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return;
      }
      sub_1007F4EAC();
LABEL_30:
      *(void *)(v12 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      sub_10023B7B4(v5, *(void *)(v7 + 48) + v21 * v19);
      ++*(void *)(v7 + 16);
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      uint64_t v16 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_38;
      }
      if (v16 >= v27) {
        goto LABEL_32;
      }
      ++v13;
      if (!v28[v16])
      {
        uint64_t v13 = v16 + 1;
        if (v16 + 1 >= v27) {
          goto LABEL_32;
        }
        if (!v28[v13])
        {
          uint64_t v13 = v16 + 2;
          if (v16 + 2 >= v27) {
            goto LABEL_32;
          }
          if (!v28[v13])
          {
            uint64_t v17 = v16 + 3;
            if (v17 >= v27)
            {
LABEL_32:
              swift_release();
              sub_1001D15F8();
              if (v26 > 63) {
                sub_1007F3004(0, (unint64_t)(v26 + 63) >> 6, v28);
              }
              else {
                *unint64_t v28 = -1 << v26;
              }
              void v6[2] = 0;
              break;
            }
            if (!v28[v17])
            {
              while (1)
              {
                uint64_t v13 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_39;
                }
                if (v13 >= v27) {
                  goto LABEL_32;
                }
                ++v17;
                if (v28[v13]) {
                  goto LABEL_20;
                }
              }
            }
            uint64_t v13 = v17;
          }
        }
      }
LABEL_20:
      sub_1000A9E10();
    }
  }
  swift_release();
  *unint64_t v0 = v7;
  sub_100162694();
}

uint64_t sub_1007EDB58()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10017DF08(&qword_100E970A8);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    swift_retain();
    int64_t v11 = 0;
    if (!v8) {
      goto LABEL_7;
    }
    while (2)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v11 << 6);
LABEL_21:
      char v17 = *(unsigned char *)(*(void *)(v2 + 48) + v13);
      Hasher.init(_seed:)();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      Swift::Int v18 = Hasher._finalize()();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_30;
      }
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
LABEL_30:
      *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(unsigned char *)(*(void *)(v4 + 48) + v22) = v17;
      ++*(void *)(v4 + 16);
      if (v8) {
        continue;
      }
      break;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_38;
    }
    if (v14 < v9)
    {
      unint64_t v15 = v6[v14];
      ++v11;
      if (v15) {
        goto LABEL_20;
      }
      int64_t v11 = v14 + 1;
      if (v14 + 1 < v9)
      {
        unint64_t v15 = v6[v11];
        if (v15) {
          goto LABEL_20;
        }
        int64_t v11 = v14 + 2;
        if (v14 + 2 < v9)
        {
          unint64_t v15 = v6[v11];
          if (v15) {
            goto LABEL_20;
          }
          int64_t v16 = v14 + 3;
          if (v16 < v9)
          {
            unint64_t v15 = v6[v16];
            if (v15)
            {
              int64_t v11 = v16;
LABEL_20:
              unint64_t v8 = (v15 - 1) & v15;
              unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v11 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                break;
              }
              if (v11 >= v9) {
                goto LABEL_32;
              }
              unint64_t v15 = v6[v11];
              ++v16;
              if (v15) {
                goto LABEL_20;
              }
            }
LABEL_39:
            __break(1u);
            JUMPOUT(0x1007EDEA4);
          }
        }
      }
    }
LABEL_32:
    swift_release();
    uint64_t v1 = v0;
    uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
    if (v27 > 63) {
      sub_1007F3004(0, (unint64_t)(v27 + 63) >> 6, (void *)(v2 + 56));
    }
    else {
      *uint64_t v6 = -1 << v27;
    }
    *(void *)(v2 + 16) = 0;
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1007EDEB4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10017DF08(&qword_100E6D110);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    char v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    if (!v7) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      char v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
      uint64_t v18 = *v17;
      uint64_t v19 = v17[1];
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          BOOL v26 = v22 == v25;
          if (v22 == v25) {
            unint64_t v22 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      unint64_t v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
      *unint64_t v28 = v18;
      v28[1] = v19;
      ++*(void *)(v4 + 16);
      if (v7) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v14 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_38;
      }
      if (v14 >= v8) {
        goto LABEL_32;
      }
      unint64_t v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        int64_t v11 = v14 + 1;
        if (v14 + 1 >= v8) {
          goto LABEL_32;
        }
        unint64_t v15 = v30[v11];
        if (!v15)
        {
          int64_t v11 = v14 + 2;
          if (v14 + 2 >= v8) {
            goto LABEL_32;
          }
          unint64_t v15 = v30[v11];
          if (!v15)
          {
            int64_t v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v0;
              uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
              if (v29 > 63) {
                sub_1007F3004(0, (unint64_t)(v29 + 63) >> 6, v30);
              }
              else {
                void *v30 = -1 << v29;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                int64_t v11 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_39;
                }
                if (v11 >= v8) {
                  goto LABEL_32;
                }
                unint64_t v15 = v30[v11];
                ++v16;
                if (v15) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v11 = v16;
          }
        }
      }
LABEL_20:
      unint64_t v7 = (v15 - 1) & v15;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1007EE190()
{
  uint64_t v1 = v0;
  uint64_t v43 = type metadata accessor for Location();
  uint64_t v2 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v42 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_10017DF08(&qword_100E96FE0);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v38 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    int64_t v36 = v0;
    int64_t v37 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v40 = v2;
    uint64_t v11 = v5 + 56;
    swift_retain();
    int64_t v12 = 0;
    uint64_t v39 = v6;
    unint64_t v13 = v42;
    uint64_t v14 = v43;
    if (!v10) {
      goto LABEL_7;
    }
    while (2)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      int64_t v41 = v12;
      unint64_t v16 = v15 | (v12 << 6);
LABEL_21:
      uint64_t v21 = v4;
      uint64_t v22 = *(void *)(v4 + 48);
      uint64_t v23 = *(void *)(v40 + 72);
      char v24 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 32);
      v24(v13, v22 + v23 * v16, v14);
      uint64_t v6 = v39;
      sub_100109818(&qword_100E639A0, (void (*)(uint64_t))&type metadata accessor for Location);
      uint64_t v25 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v26 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v27 = v25 & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_30;
      }
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
        BOOL v32 = v28 == v31;
        if (v28 == v31) {
          unint64_t v28 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v11 + 8 * v28);
      }
      while (v33 == -1);
      unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
LABEL_30:
      *(void *)(v11 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
      v24((char *)(*(void *)(v6 + 48) + v29 * v23), (unint64_t)v42, v43);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v21;
      int64_t v12 = v41;
      if (v10) {
        continue;
      }
      break;
    }
LABEL_7:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_38;
    }
    if (v17 < v37)
    {
      unint64_t v18 = v38[v17];
      int64_t v19 = v12 + 1;
      if (v18) {
        goto LABEL_20;
      }
      int64_t v19 = v12 + 2;
      if (v12 + 2 < v37)
      {
        unint64_t v18 = v38[v19];
        if (v18) {
          goto LABEL_20;
        }
        int64_t v19 = v12 + 3;
        if (v12 + 3 < v37)
        {
          unint64_t v18 = v38[v19];
          if (v18) {
            goto LABEL_20;
          }
          uint64_t v20 = v12 + 4;
          if (v12 + 4 < v37)
          {
            unint64_t v18 = v38[v20];
            if (v18)
            {
              int64_t v19 = v12 + 4;
LABEL_20:
              unint64_t v10 = (v18 - 1) & v18;
              int64_t v41 = v19;
              unint64_t v16 = __clz(__rbit64(v18)) + (v19 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v19 = v20 + 1;
              if (__OFADD__(v20, 1)) {
                break;
              }
              if (v19 >= v37) {
                goto LABEL_32;
              }
              unint64_t v18 = v38[v19];
              ++v20;
              if (v18) {
                goto LABEL_20;
              }
            }
LABEL_39:
            __break(1u);
            JUMPOUT(0x1007EE588);
          }
        }
      }
    }
LABEL_32:
    swift_release();
    uint64_t v1 = v36;
    uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
    if (v34 > 63) {
      sub_1007F3004(0, (unint64_t)(v34 + 63) >> 6, v38);
    }
    else {
      void *v38 = -1 << v34;
    }
    *(void *)(v4 + 16) = 0;
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1007EE5D8()
{
  uint64_t v1 = v0;
  uint64_t v42 = type metadata accessor for DetailChartCondition();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  int64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_10017DF08(&qword_100E97050);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    int64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    uint64_t v14 = v41;
    uint64_t v15 = v42;
    if (!v10) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v16 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    int64_t v40 = v13;
    for (unint64_t i = v16 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v20 << 6))
    {
      uint64_t v22 = v4;
      uint64_t v23 = *(void *)(v4 + 48);
      uint64_t v24 = *(void *)(v39 + 72);
      uint64_t v25 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v25(v14, v23 + v24 * i, v15);
      uint64_t v6 = v38;
      sub_100109818(&qword_100E63988, (void (*)(uint64_t))&type metadata accessor for DetailChartCondition);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v26 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) == 0)
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v26) >> 6;
        while (++v28 != v31 || (v30 & 1) == 0)
        {
          BOOL v32 = v28 == v31;
          if (v28 == v31) {
            unint64_t v28 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v28);
          if (v33 != -1)
          {
            unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v11 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v25)(*(void *)(v6 + 48) + v29 * v24, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v22;
      int64_t v13 = v40;
      if (v10) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v18 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_38;
      }
      if (v18 >= v36) {
        goto LABEL_32;
      }
      unint64_t v19 = v37[v18];
      int64_t v20 = v13 + 1;
      if (!v19)
      {
        int64_t v20 = v13 + 2;
        if (v13 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v19 = v37[v20];
        if (!v19)
        {
          int64_t v20 = v13 + 3;
          if (v13 + 3 >= v36) {
            goto LABEL_32;
          }
          unint64_t v19 = v37[v20];
          if (!v19)
          {
            uint64_t v21 = v13 + 4;
            if (v13 + 4 >= v36)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v35;
              uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
              if (v34 > 63) {
                sub_1007F3004(0, (unint64_t)(v34 + 63) >> 6, v37);
              }
              else {
                *int64_t v37 = -1 << v34;
              }
              *(void *)(v4 + 16) = 0;
              break;
            }
            unint64_t v19 = v37[v21];
            if (!v19)
            {
              while (1)
              {
                int64_t v20 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_39;
                }
                if (v20 >= v36) {
                  goto LABEL_32;
                }
                unint64_t v19 = v37[v20];
                ++v21;
                if (v19) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v20 = v13 + 4;
          }
        }
      }
LABEL_20:
      unint64_t v10 = (v19 - 1) & v19;
      int64_t v40 = v20;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1007EE9D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10017DF08(&qword_100E972D0);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    if (!v9) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v12 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    for (unint64_t i = v12 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v5 << 6))
    {
      Swift::UInt v17 = *(unsigned __int8 *)(*(void *)(v2 + 48) + i);
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v17);
      uint64_t result = Hasher._finalize()();
      uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v19 = result & ~v18;
      unint64_t v20 = v19 >> 6;
      if (((-1 << v19) & ~*(void *)(v11 + 8 * (v19 >> 6))) == 0)
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v18) >> 6;
        while (++v20 != v23 || (v22 & 1) == 0)
        {
          BOOL v24 = v20 == v23;
          if (v20 == v23) {
            unint64_t v20 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v20);
          if (v25 != -1)
          {
            unint64_t v21 = __clz(__rbit64(~v25)) + (v20 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      *(unsigned char *)(*(void *)(v4 + 48) + v21) = v17;
      ++*(void *)(v4 + 16);
      if (v9) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v14 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        goto LABEL_38;
      }
      if (v14 >= v10) {
        goto LABEL_32;
      }
      unint64_t v15 = v6[v14];
      ++v5;
      if (!v15)
      {
        int64_t v5 = v14 + 1;
        if (v14 + 1 >= v10) {
          goto LABEL_32;
        }
        unint64_t v15 = v6[v5];
        if (!v15)
        {
          int64_t v5 = v14 + 2;
          if (v14 + 2 >= v10) {
            goto LABEL_32;
          }
          unint64_t v15 = v6[v5];
          if (!v15)
          {
            int64_t v16 = v14 + 3;
            if (v16 >= v10)
            {
LABEL_32:
              uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
              if (v26 > 63) {
                sub_1007F3004(0, (unint64_t)(v26 + 63) >> 6, (void *)(v2 + 56));
              }
              else {
                *uint64_t v6 = -1 << v26;
              }
              uint64_t v1 = v0;
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v15 = v6[v16];
            if (!v15)
            {
              while (1)
              {
                int64_t v5 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_39;
                }
                if (v5 >= v10) {
                  goto LABEL_32;
                }
                unint64_t v15 = v6[v5];
                ++v16;
                if (v15) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v5 = v16;
          }
        }
      }
LABEL_20:
      unint64_t v9 = (v15 - 1) & v15;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1007EEC78()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10017DF08(&qword_100E972E0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    swift_retain();
    int64_t v11 = 0;
    if (!v8) {
      goto LABEL_7;
    }
    while (2)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v11 << 6);
LABEL_21:
      char v17 = *(unsigned char *)(*(void *)(v2 + 48) + v13);
      Hasher.init(_seed:)();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      Swift::Int v18 = Hasher._finalize()();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_30;
      }
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
LABEL_30:
      *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(unsigned char *)(*(void *)(v4 + 48) + v22) = v17;
      ++*(void *)(v4 + 16);
      if (v8) {
        continue;
      }
      break;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_38;
    }
    if (v14 < v9)
    {
      unint64_t v15 = v6[v14];
      ++v11;
      if (v15) {
        goto LABEL_20;
      }
      int64_t v11 = v14 + 1;
      if (v14 + 1 < v9)
      {
        unint64_t v15 = v6[v11];
        if (v15) {
          goto LABEL_20;
        }
        int64_t v11 = v14 + 2;
        if (v14 + 2 < v9)
        {
          unint64_t v15 = v6[v11];
          if (v15) {
            goto LABEL_20;
          }
          int64_t v16 = v14 + 3;
          if (v16 < v9)
          {
            unint64_t v15 = v6[v16];
            if (v15)
            {
              int64_t v11 = v16;
LABEL_20:
              unint64_t v8 = (v15 - 1) & v15;
              unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v11 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                break;
              }
              if (v11 >= v9) {
                goto LABEL_32;
              }
              unint64_t v15 = v6[v11];
              ++v16;
              if (v15) {
                goto LABEL_20;
              }
            }
LABEL_39:
            __break(1u);
            JUMPOUT(0x1007EEFCCLL);
          }
        }
      }
    }
LABEL_32:
    swift_release();
    uint64_t v1 = v0;
    uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
    if (v27 > 63) {
      sub_1007F3004(0, (unint64_t)(v27 + 63) >> 6, (void *)(v2 + 56));
    }
    else {
      *uint64_t v6 = -1 << v27;
    }
    *(void *)(v2 + 16) = 0;
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1007EEFE4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10017DF08(&qword_100E972D8);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    swift_retain();
    int64_t v11 = 0;
    if (!v8) {
      goto LABEL_7;
    }
    while (2)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v11 << 6);
LABEL_21:
      char v17 = *(unsigned char *)(*(void *)(v2 + 48) + v13);
      Hasher.init(_seed:)();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      Swift::Int v18 = Hasher._finalize()();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_30;
      }
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
LABEL_38:
          __break(1u);
          goto LABEL_39;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
LABEL_30:
      *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(unsigned char *)(*(void *)(v4 + 48) + v22) = v17;
      ++*(void *)(v4 + 16);
      if (v8) {
        continue;
      }
      break;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_38;
    }
    if (v14 < v9)
    {
      unint64_t v15 = v6[v14];
      ++v11;
      if (v15) {
        goto LABEL_20;
      }
      int64_t v11 = v14 + 1;
      if (v14 + 1 < v9)
      {
        unint64_t v15 = v6[v11];
        if (v15) {
          goto LABEL_20;
        }
        int64_t v11 = v14 + 2;
        if (v14 + 2 < v9)
        {
          unint64_t v15 = v6[v11];
          if (v15) {
            goto LABEL_20;
          }
          int64_t v16 = v14 + 3;
          if (v16 < v9)
          {
            unint64_t v15 = v6[v16];
            if (v15)
            {
              int64_t v11 = v16;
LABEL_20:
              unint64_t v8 = (v15 - 1) & v15;
              unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v11 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                break;
              }
              if (v11 >= v9) {
                goto LABEL_32;
              }
              unint64_t v15 = v6[v11];
              ++v16;
              if (v15) {
                goto LABEL_20;
              }
            }
LABEL_39:
            __break(1u);
            JUMPOUT(0x1007EF35CLL);
          }
        }
      }
    }
LABEL_32:
    swift_release();
    uint64_t v1 = v0;
    uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
    if (v27 > 63) {
      sub_1007F3004(0, (unint64_t)(v27 + 63) >> 6, (void *)(v2 + 56));
    }
    else {
      *uint64_t v6 = -1 << v27;
    }
    *(void *)(v2 + 16) = 0;
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1007EF37C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10017DF08(&qword_100E972F0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    if (!v8) {
      goto LABEL_7;
    }
LABEL_6:
    unint64_t v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (unint64_t i = v13 | (v12 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v12 << 6))
    {
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * i);
      Hasher.init(_seed:)();
      Namespace.ID.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) == 0)
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v19) >> 6;
        while (++v21 != v24 || (v23 & 1) == 0)
        {
          BOOL v25 = v21 == v24;
          if (v21 == v24) {
            unint64_t v21 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v21);
          if (v26 != -1)
          {
            unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(void *)(*(void *)(v4 + 48) + 8 * v22) = v18;
      ++*(void *)(v4 + 16);
      if (v8) {
        goto LABEL_6;
      }
LABEL_7:
      int64_t v15 = v12 + 1;
      if (__OFADD__(v12, 1)) {
        goto LABEL_38;
      }
      if (v15 >= v9) {
        goto LABEL_32;
      }
      unint64_t v16 = v6[v15];
      ++v12;
      if (!v16)
      {
        int64_t v12 = v15 + 1;
        if (v15 + 1 >= v9) {
          goto LABEL_32;
        }
        unint64_t v16 = v6[v12];
        if (!v16)
        {
          int64_t v12 = v15 + 2;
          if (v15 + 2 >= v9) {
            goto LABEL_32;
          }
          unint64_t v16 = v6[v12];
          if (!v16)
          {
            int64_t v17 = v15 + 3;
            if (v17 >= v9)
            {
LABEL_32:
              swift_release();
              uint64_t v1 = v0;
              uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
              if (v27 > 63) {
                sub_1007F3004(0, (unint64_t)(v27 + 63) >> 6, (void *)(v2 + 56));
              }
              else {
                *uint64_t v6 = -1 << v27;
              }
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v16 = v6[v17];
            if (!v16)
            {
              while (1)
              {
                int64_t v12 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_39;
                }
                if (v12 >= v9) {
                  goto LABEL_32;
                }
                unint64_t v16 = v6[v12];
                ++v17;
                if (v16) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v12 = v17;
          }
        }
      }
LABEL_20:
      unint64_t v8 = (v16 - 1) & v16;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1007EF634(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = type metadata accessor for LocationOfInterestType();
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  unint64_t v29 = v3;
  uint64_t v30 = v7;
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1007ED3F8();
  }
  else
  {
    if (v12 > v11)
    {
      sub_1007F0F1C();
      goto LABEL_12;
    }
    sub_1007F1288();
  }
  uint64_t v13 = *v3;
  sub_100109818(&qword_100E63510, (void (*)(uint64_t))&type metadata accessor for LocationOfInterestType);
  uint64_t v14 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    unint64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    uint64_t v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v10, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_100109818(&qword_100E63530, (void (*)(uint64_t))&type metadata accessor for LocationOfInterestType);
      char v22 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v10, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, __n128))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6, v8);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_1007EF8F0(char a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1007EDB58();
    }
    else
    {
      if (v7 > v6)
      {
        sub_10014F1FC(&qword_100E970A8);
        goto LABEL_24;
      }
      sub_1007F1974();
    }
    uint64_t v8 = *v3;
    Hasher.init(_seed:)();
    sub_1002C2374();
    Swift::Int v9 = Hasher._finalize()();
    uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
    a2 = v9 & ~v10;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v11 = ~v10;
      while (1)
      {
        unint64_t v12 = 0xEA00000000007974;
        uint64_t v13 = 0x696C617551726961;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            uint64_t v13 = 0x7469706963657270;
            unint64_t v12 = 0xED00006E6F697461;
            break;
          case 2:
            uint64_t v13 = 0x74617265706D6574;
            unint64_t v12 = 0xEB00000000657275;
            break;
          case 3:
            unint64_t v12 = 0xE400000000000000;
            uint64_t v13 = 1684957559;
            break;
          default:
            break;
        }
        uint64_t v14 = 0x696C617551726961;
        unint64_t v15 = 0xEA00000000007974;
        switch(a1)
        {
          case 1:
            uint64_t v14 = 0x7469706963657270;
            unint64_t v15 = 0xED00006E6F697461;
            break;
          case 2:
            uint64_t v14 = 0x74617265706D6574;
            unint64_t v15 = 0xEB00000000657275;
            break;
          case 3:
            unint64_t v15 = 0xE400000000000000;
            uint64_t v14 = 1684957559;
            break;
          default:
            break;
        }
        if (v13 == v14 && v12 == v15) {
          break;
        }
        char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v17) {
          goto LABEL_28;
        }
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_24;
        }
      }
LABEL_27:
      swift_bridgeObjectRelease_n();
LABEL_28:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
      JUMPOUT(0x1007EFBA4);
    }
  }
LABEL_24:
  uint64_t v18 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v18 + 48) + a2) = a1;
  uint64_t v19 = *(void *)(v18 + 16);
  BOOL v20 = __OFADD__(v19, 1);
  uint64_t v21 = v19 + 1;
  if (v20)
  {
    __break(1u);
    goto LABEL_27;
  }
  *(void *)(v18 + 16) = v21;
}

Swift::Int sub_1007EFBC4(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1007EDEB4();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_1007F0D30();
      goto LABEL_22;
    }
    sub_1007F1C9C();
  }
  uint64_t v11 = *v4;
  Hasher.init(_seed:)();
  String.hash(into:)();
  uint64_t result = Hasher._finalize()();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  Swift::Int *v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_1007EFD60(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = type metadata accessor for Location();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 <= v10 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1007EE190();
    }
    else
    {
      if (v11 > v10)
      {
        sub_1007F0F1C();
        goto LABEL_12;
      }
      sub_1007F1F48();
    }
    uint64_t v12 = *v3;
    sub_100109818(&qword_100E639A0, (void (*)(uint64_t))&type metadata accessor for Location);
    uint64_t v13 = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
    a2 = v13 & ~v14;
    uint64_t v30 = v12;
    uint64_t v15 = v12 + 56;
    if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v16 = ~v14;
      uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
      uint64_t v18 = v7 + 16;
      uint64_t v17 = v19;
      uint64_t v20 = *(void *)(v18 + 56);
      while (1)
      {
        v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
        sub_100109818((unint64_t *)&qword_100E639A8, (void (*)(uint64_t))&type metadata accessor for Location);
        char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
        (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
        if (v21) {
          break;
        }
        a2 = (a2 + 1) & v16;
        if (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_12;
        }
      }
LABEL_15:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
      JUMPOUT(0x1007F001CLL);
    }
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (v26)
  {
    __break(1u);
    goto LABEL_15;
  }
  *(void *)(v23 + 16) = v27;
  return result;
}

uint64_t sub_1007F00BC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = type metadata accessor for DetailChartCondition();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1007EE5D8();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1007F0F1C();
      goto LABEL_12;
    }
    sub_1007F2344();
  }
  uint64_t v12 = *v3;
  sub_100109818(&qword_100E63988, (void (*)(uint64_t))&type metadata accessor for DetailChartCondition);
  uint64_t v13 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_100109818((unint64_t *)&qword_100E63990, (void (*)(uint64_t))&type metadata accessor for DetailChartCondition);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_1007F0378(unsigned __int8 a1, unint64_t a2, char a3)
{
  Swift::UInt v5 = a1;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1007EE9D0();
  }
  else
  {
    if (v7 > v6)
    {
      sub_10014F1FC(&qword_100E972D0);
      goto LABEL_14;
    }
    sub_1007F26F0();
  }
  uint64_t v8 = *v3;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v5);
  Swift::Int v9 = Hasher._finalize()();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v11 = *(void *)(v8 + 48);
    if (*(unsigned __int8 *)(v11 + a2) == v5)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v12 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v12;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v11 + a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v13 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v13 + 48) + a2) = v5;
  uint64_t v14 = *(void *)(v13 + 16);
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    *(void *)(v13 + 16) = v16;
  }
}

void sub_1007F04D8(char a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1007EEC78();
    }
    else
    {
      if (v7 > v6)
      {
        sub_10014F1FC(&qword_100E972E0);
        goto LABEL_28;
      }
      sub_1007F2968();
    }
    uint64_t v8 = *v3;
    Hasher.init(_seed:)();
    sub_100653F10(a1);
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v9 = Hasher._finalize()();
    uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
    a2 = v9 & ~v10;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v11 = ~v10;
      while (1)
      {
        unint64_t v12 = 0xE800000000000000;
        uint64_t v13 = 0x73776F626E696172;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            uint64_t v13 = 0x6E696E746867696CLL;
            unint64_t v12 = 0xE900000000000067;
            break;
          case 2:
            unint64_t v12 = 0xE400000000000000;
            uint64_t v13 = 1818845544;
            break;
          case 3:
            unint64_t v12 = 0xE500000000000000;
            uint64_t v13 = 0x656B6F6D73;
            break;
          case 4:
            unint64_t v12 = 0xE300000000000000;
            uint64_t v13 = 6778726;
            break;
          case 5:
            unint64_t v12 = 0xE400000000000000;
            uint64_t v13 = 1702519144;
            break;
          default:
            break;
        }
        unint64_t v14 = 0xE800000000000000;
        uint64_t v15 = 0x73776F626E696172;
        switch(a1)
        {
          case 1:
            uint64_t v15 = 0x6E696E746867696CLL;
            unint64_t v14 = 0xE900000000000067;
            break;
          case 2:
            unint64_t v14 = 0xE400000000000000;
            uint64_t v15 = 1818845544;
            break;
          case 3:
            unint64_t v14 = 0xE500000000000000;
            uint64_t v15 = 0x656B6F6D73;
            break;
          case 4:
            unint64_t v14 = 0xE300000000000000;
            uint64_t v15 = 6778726;
            break;
          case 5:
            unint64_t v14 = 0xE400000000000000;
            uint64_t v15 = 1702519144;
            break;
          default:
            break;
        }
        if (v13 == v15 && v12 == v14) {
          break;
        }
        char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v17) {
          goto LABEL_32;
        }
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_28;
        }
      }
LABEL_31:
      swift_bridgeObjectRelease_n();
LABEL_32:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
      JUMPOUT(0x1007F07B8);
    }
  }
LABEL_28:
  uint64_t v18 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v18 + 48) + a2) = a1;
  uint64_t v19 = *(void *)(v18 + 16);
  BOOL v20 = __OFADD__(v19, 1);
  uint64_t v21 = v19 + 1;
  if (v20)
  {
    __break(1u);
    goto LABEL_31;
  }
  *(void *)(v18 + 16) = v21;
}

void sub_1007F07E8(char a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1007EEFE4();
    }
    else
    {
      if (v7 > v6)
      {
        sub_10014F1FC(&qword_100E972D8);
        goto LABEL_34;
      }
      sub_1007F2CA0();
    }
    uint64_t v8 = *v3;
    Hasher.init(_seed:)();
    sub_100654004(a1);
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v9 = Hasher._finalize()();
    uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
    a2 = v9 & ~v10;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v11 = ~v10;
      while (1)
      {
        unint64_t v12 = 0xE800000000000000;
        unint64_t v13 = 0x746E617361656C70;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            unint64_t v13 = 0x617361656C706E75;
            unint64_t v12 = 0xEA0000000000746ELL;
            break;
          case 2:
            unint64_t v12 = 0xE300000000000000;
            unint64_t v13 = 7630696;
            break;
          case 3:
            unint64_t v12 = 0xE600000000000000;
            unint64_t v13 = 0x796C6C696863;
            break;
          case 4:
            unint64_t v12 = 0xE500000000000000;
            uint64_t v14 = 1734833517;
            goto LABEL_18;
          case 5:
            unint64_t v12 = 0xE300000000000000;
            unint64_t v13 = 7959140;
            break;
          case 6:
            unint64_t v12 = 0xE500000000000000;
            uint64_t v14 = 1684957559;
LABEL_18:
            unint64_t v13 = v14 & 0xFFFF0000FFFFFFFFLL | 0x7900000000;
            break;
          case 7:
            unint64_t v12 = 0xE400000000000000;
            unint64_t v13 = 1835819363;
            break;
          default:
            break;
        }
        unint64_t v15 = 0xE800000000000000;
        unint64_t v16 = 0x746E617361656C70;
        switch(a1)
        {
          case 1:
            unint64_t v16 = 0x617361656C706E75;
            unint64_t v15 = 0xEA0000000000746ELL;
            break;
          case 2:
            unint64_t v15 = 0xE300000000000000;
            unint64_t v16 = 7630696;
            break;
          case 3:
            unint64_t v15 = 0xE600000000000000;
            unint64_t v16 = 0x796C6C696863;
            break;
          case 4:
            unint64_t v15 = 0xE500000000000000;
            uint64_t v17 = 1734833517;
            goto LABEL_27;
          case 5:
            unint64_t v15 = 0xE300000000000000;
            unint64_t v16 = 7959140;
            break;
          case 6:
            unint64_t v15 = 0xE500000000000000;
            uint64_t v17 = 1684957559;
LABEL_27:
            unint64_t v16 = v17 & 0xFFFF0000FFFFFFFFLL | 0x7900000000;
            break;
          case 7:
            unint64_t v15 = 0xE400000000000000;
            unint64_t v16 = 1835819363;
            break;
          default:
            break;
        }
        if (v13 == v16 && v12 == v15) {
          break;
        }
        char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v19) {
          goto LABEL_38;
        }
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_34;
        }
      }
LABEL_37:
      swift_bridgeObjectRelease_n();
LABEL_38:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
      JUMPOUT(0x1007F0B10);
    }
  }
LABEL_34:
  uint64_t v20 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v20 + 48) + a2) = a1;
  uint64_t v21 = *(void *)(v20 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
    __break(1u);
    goto LABEL_37;
  }
  *(void *)(v20 + 16) = v23;
}

void sub_1007F0B50()
{
  sub_100162EA0();
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ListViewTipManager.LocationNameAndLocationOfInterestType(0);
  uint64_t v3 = sub_100164920(v2);
  uint64_t v5 = v4;
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  sub_10017DF08(&qword_100E97210);
  Swift::Int v9 = (void *)*v0;
  uint64_t v10 = static _SetStorage.copy(original:)();
  if (!v9[2])
  {
LABEL_26:
    swift_release();
    *uint64_t v1 = v10;
    sub_100162694();
    return;
  }
  sub_1001D15F8();
  uint64_t v11 = v9 + 7;
  sub_10019AE8C();
  if ((void *)v10 != v9 || v12 >= &v9[v13 + 7]) {
    memmove(v12, v9 + 7, 8 * v13);
  }
  int64_t v15 = 0;
  *(void *)(v10 + 16) = v9[2];
  sub_1001D15F8();
  sub_100199BC4();
  unint64_t v18 = v17 & v16;
  int64_t v20 = (unint64_t)(v19 + 63) >> 6;
  if ((v17 & v16) == 0) {
    goto LABEL_10;
  }
LABEL_9:
  unint64_t v21 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  for (unint64_t i = v21 | (v15 << 6); ; unint64_t i = v27 + (v15 << 6))
  {
    unint64_t v28 = *(void *)(v5 + 72) * i;
    sub_1007F4D20(v9[6] + v28, v8);
    sub_10023B7B4(v8, *(void *)(v10 + 48) + v28);
    if (v18) {
      goto LABEL_9;
    }
LABEL_10:
    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v20) {
      goto LABEL_26;
    }
    ++v15;
    if (!v11[v23])
    {
      int64_t v15 = v23 + 1;
      if (v23 + 1 >= v20) {
        goto LABEL_26;
      }
      if (!v11[v15])
      {
        int64_t v15 = v23 + 2;
        if (v23 + 2 >= v20) {
          goto LABEL_26;
        }
        if (!v11[v15]) {
          break;
        }
      }
    }
LABEL_23:
    sub_100128A7C();
    unint64_t v18 = v26 & v25;
  }
  int64_t v24 = v23 + 3;
  if (v24 >= v20) {
    goto LABEL_26;
  }
  if (v11[v24])
  {
    int64_t v15 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v15 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v15 >= v20) {
      goto LABEL_26;
    }
    ++v24;
    if (v11[v15]) {
      goto LABEL_23;
    }
  }
LABEL_28:
  __break(1u);
}

void *sub_1007F0D30()
{
  uint64_t v1 = v0;
  sub_10017DF08(&qword_100E6D110);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = *(void *)(v2 + 56);
  uint64_t v12 = -1;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  unint64_t v13 = v12 & v11;
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0) {
    goto LABEL_12;
  }
LABEL_11:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v15 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    int64_t v20 = (void *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v21 = v20[1];
    BOOL v22 = (void *)(*(void *)(v4 + 48) + 16 * i);
    *BOOL v22 = *v20;
    v22[1] = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_11;
    }
LABEL_12:
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_25:
    unint64_t v13 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_1007F0EE4()
{
}

void sub_1007F0EF0()
{
}

void sub_1007F0EFC()
{
}

void sub_1007F0F1C()
{
  sub_100162EA0();
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  uint64_t v5 = v4(0);
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v29 - v9;
  sub_10017DF08(v2);
  uint64_t v11 = *v0;
  uint64_t v12 = static _SetStorage.copy(original:)();
  if (!*(void *)(v11 + 16))
  {
    swift_release();
LABEL_28:
    *uint64_t v3 = v12;
    sub_100162694();
    return;
  }
  sub_1001D15F8();
  sub_10019AE8C();
  uint64_t v30 = v3;
  uint64_t v31 = v15;
  uint64_t v16 = &v15[8 * v14];
  if (v12 != v11 || v13 >= v16) {
    memmove(v13, v31, 8 * v14);
  }
  uint64_t v18 = 0;
  *(void *)(v12 + 16) = *(void *)(v11 + 16);
  sub_1001D15F8();
  sub_100199BC4();
  uint64_t v21 = v20 & v19;
  sub_10019AE8C();
  uint64_t v32 = v22;
  if (!v21) {
    goto LABEL_10;
  }
LABEL_9:
  sub_100129004();
  for (uint64_t i = v23 | (v18 << 6); ; uint64_t i = v27 + (v18 << 6))
  {
    uint64_t v28 = *(void *)(v7 + 72) * i;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, *(void *)(v11 + 48) + v28, v5);
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(*(void *)(v12 + 48) + v28, v10, v5);
    if (v21) {
      goto LABEL_9;
    }
LABEL_10:
    uint64_t v25 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v25 >= v32) {
      goto LABEL_26;
    }
    ++v18;
    if (!*((void *)v31 + v25))
    {
      uint64_t v18 = v25 + 1;
      if (v25 + 1 >= v32) {
        goto LABEL_26;
      }
      if (!*((void *)v31 + v18))
      {
        uint64_t v18 = v25 + 2;
        if (v25 + 2 >= v32) {
          goto LABEL_26;
        }
        if (!*((void *)v31 + v18)) {
          break;
        }
      }
    }
LABEL_23:
    sub_1000A9E10();
  }
  uint64_t v26 = v25 + 3;
  if (v26 >= v32)
  {
LABEL_26:
    swift_release();
    uint64_t v3 = v30;
    goto LABEL_28;
  }
  if (*((void *)v31 + v26))
  {
    uint64_t v18 = v26;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v18 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v18 >= v32) {
      goto LABEL_26;
    }
    ++v26;
    if (*((void *)v31 + v18)) {
      goto LABEL_23;
    }
  }
LABEL_30:
  __break(1u);
}

void sub_1007F1164()
{
  uint64_t v2 = v0;
  sub_10017DF08(&qword_100E972F0);
  uint64_t v3 = *v0;
  uint64_t v4 = static _SetStorage.copy(original:)();
  if (*(void *)(v3 + 16))
  {
    uint64_t v5 = (void *)sub_100164B20();
    if (v8) {
      BOOL v9 = (unint64_t)v5 >= v7;
    }
    else {
      BOOL v9 = 1;
    }
    if (v9) {
      memmove(v5, v1, 8 * v6);
    }
    sub_1001A341C();
    if (!v12) {
      goto LABEL_10;
    }
LABEL_9:
    sub_1001502B8();
    while (1)
    {
      *(void *)(*(void *)(v4 + 48) + 8 * v14) = *(void *)(*(void *)(v3 + 48) + 8 * v14);
      if (v13) {
        goto LABEL_9;
      }
LABEL_10:
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1))
      {
        __break(1u);
        goto LABEL_27;
      }
      if (v15 >= v10) {
        goto LABEL_25;
      }
      if (!*((void *)v1 + v15))
      {
        if (v11 + 2 >= v10) {
          goto LABEL_25;
        }
        if (!*((void *)v1 + v11 + 2))
        {
          if (v11 + 3 >= v10) {
            goto LABEL_25;
          }
          if (!*((void *)v1 + v11 + 3))
          {
            uint64_t v16 = v11 + 4;
            if (v11 + 4 >= v10) {
              goto LABEL_25;
            }
            if (!*((void *)v1 + v16)) {
              break;
            }
          }
        }
      }
LABEL_22:
      sub_1001194BC();
    }
    while (1)
    {
      uint64_t v17 = v16 + 1;
      if (__OFADD__(v16, 1)) {
        break;
      }
      if (v17 >= v10) {
        goto LABEL_25;
      }
      ++v16;
      if (*((void *)v1 + v17)) {
        goto LABEL_22;
      }
    }
LABEL_27:
    __break(1u);
  }
  else
  {
LABEL_25:
    swift_release();
    *uint64_t v2 = v4;
  }
}

uint64_t sub_1007F1288()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for LocationOfInterestType();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_10017DF08(&qword_100E97208);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  uint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  if (!v12) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v17 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v17 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    uint64_t v22 = v6;
    uint64_t v23 = *(void *)(v6 + 48);
    uint64_t v24 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v23 + v24 * i, v2);
    sub_100109818(&qword_100E63510, (void (*)(uint64_t))&type metadata accessor for LocationOfInterestType);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v25 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6))) == 0)
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      while (++v27 != v30 || (v29 & 1) == 0)
      {
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v27);
        if (v32 != -1)
        {
          unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v13 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v28 * v24, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v22;
    if (v12) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v19 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      goto LABEL_36;
    }
    if (v19 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v19);
    ++v16;
    if (!v20)
    {
      int64_t v16 = v19 + 1;
      if (v19 + 1 >= v36) {
        goto LABEL_32;
      }
      unint64_t v20 = *(void *)(v35 + 8 * v16);
      if (!v20)
      {
        int64_t v16 = v19 + 2;
        if (v19 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v20 = *(void *)(v35 + 8 * v16);
        if (!v20) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v20 - 1) & v20;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v36)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_34;
  }
  unint64_t v20 = *(void *)(v35 + 8 * v21);
  if (v20)
  {
    int64_t v16 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v16 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v16);
    ++v21;
    if (v20) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_1007F1634()
{
  sub_100162EA0();
  uint64_t v1 = v0;
  type metadata accessor for ListViewTipManager.LocationNameAndLocationOfInterestType(0);
  sub_100179C0C();
  uint64_t v31 = v2;
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = (void *)*v0;
  sub_10017DF08(&qword_100E97210);
  uint64_t v8 = static _SetStorage.resize(original:capacity:move:)();
  if (!v7[2])
  {
    swift_release();
LABEL_34:
    *uint64_t v1 = v8;
    sub_100162694();
    return;
  }
  sub_1001D15F8();
  char v29 = v7 + 7;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v7[7];
  sub_10019AE8C();
  uint64_t v30 = v12;
  uint64_t v13 = v8 + 56;
  swift_retain();
  uint64_t v14 = 0;
  if (!v11) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v15 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v15 | (v14 << 6); ; unint64_t i = v21 + (v14 << 6))
  {
    uint64_t v22 = *(void *)(v31 + 72);
    sub_1007F4D20(v7[6] + v22 * i, v6);
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    type metadata accessor for LocationOfInterestType();
    sub_100109818(&qword_100E63510, (void (*)(uint64_t))&type metadata accessor for LocationOfInterestType);
    dispatch thunk of Hashable.hash(into:)();
    unint64_t v23 = Hasher._finalize()() & ~(-1 << *(unsigned char *)(v8 + 32));
    if (((-1 << v23) & ~*(void *)(v13 + 8 * (v23 >> 6))) == 0)
    {
      sub_100183E64();
      while (++v26 != v27 || (v25 & 1) == 0)
      {
        BOOL v28 = v26 == v27;
        if (v26 == v27) {
          uint64_t v26 = 0;
        }
        v25 |= v28;
        if (*(void *)(v13 + 8 * v26) != -1)
        {
          sub_10020FA10();
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    sub_1007F4EAC();
LABEL_30:
    *(void *)(v13 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    sub_10023B7B4(v6, *(void *)(v8 + 48) + v24 * v22);
    ++*(void *)(v8 + 16);
    if (v11) {
      goto LABEL_6;
    }
LABEL_7:
    uint64_t v17 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      goto LABEL_36;
    }
    if (v17 >= v30) {
      goto LABEL_32;
    }
    ++v14;
    if (!v29[v17])
    {
      uint64_t v14 = v17 + 1;
      if (v17 + 1 >= v30) {
        goto LABEL_32;
      }
      if (!v29[v14])
      {
        uint64_t v14 = v17 + 2;
        if (v17 + 2 >= v30) {
          goto LABEL_32;
        }
        if (!v29[v14]) {
          break;
        }
      }
    }
LABEL_20:
    sub_100128A7C();
    unint64_t v11 = v20 & v19;
  }
  uint64_t v18 = v17 + 3;
  if (v18 >= v30)
  {
LABEL_32:
    swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  if (v29[v18])
  {
    uint64_t v14 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    uint64_t v14 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v14 >= v30) {
      goto LABEL_32;
    }
    ++v18;
    if (v29[v14]) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
}

uint64_t sub_1007F1974()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10017DF08(&qword_100E970A8);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = v2 + 56;
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    swift_retain();
    int64_t v11 = 0;
    if (!v8) {
      goto LABEL_7;
    }
    while (2)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v11 << 6);
LABEL_21:
      char v17 = *(unsigned char *)(*(void *)(v2 + 48) + v13);
      Hasher.init(_seed:)();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      Swift::Int v18 = Hasher._finalize()();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_30;
      }
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
LABEL_36:
          __break(1u);
          goto LABEL_37;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
LABEL_30:
      *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(unsigned char *)(*(void *)(v4 + 48) + v22) = v17;
      ++*(void *)(v4 + 16);
      if (v8) {
        continue;
      }
      break;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v14 < v9)
    {
      unint64_t v15 = *(void *)(v6 + 8 * v14);
      ++v11;
      if (v15) {
        goto LABEL_20;
      }
      int64_t v11 = v14 + 1;
      if (v14 + 1 < v9)
      {
        unint64_t v15 = *(void *)(v6 + 8 * v11);
        if (v15) {
          goto LABEL_20;
        }
        int64_t v11 = v14 + 2;
        if (v14 + 2 < v9)
        {
          unint64_t v15 = *(void *)(v6 + 8 * v11);
          if (v15) {
            goto LABEL_20;
          }
          int64_t v16 = v14 + 3;
          if (v16 < v9)
          {
            unint64_t v15 = *(void *)(v6 + 8 * v16);
            if (v15)
            {
              int64_t v11 = v16;
LABEL_20:
              unint64_t v8 = (v15 - 1) & v15;
              unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v11 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                break;
              }
              if (v11 >= v9) {
                goto LABEL_32;
              }
              unint64_t v15 = *(void *)(v6 + 8 * v11);
              ++v16;
              if (v15) {
                goto LABEL_20;
              }
            }
LABEL_37:
            __break(1u);
            JUMPOUT(0x1007F1C8CLL);
          }
        }
      }
    }
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
  }
  else
  {
    uint64_t result = swift_release();
  }
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1007F1C9C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10017DF08(&qword_100E6D110);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  if (!v8) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    char v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    BOOL v28 = (void *)(*(void *)(v4 + 48) + 16 * v23);
    *BOOL v28 = v18;
    v28[1] = v19;
    ++*(void *)(v4 + 16);
    if (v8) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v29) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v29) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v11);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v8 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1007F1F48()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Location();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_10017DF08(&qword_100E96FE0);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (*(void *)(v6 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v10 = *(void *)(v6 + 56);
    uint64_t v35 = v0;
    uint64_t v36 = v6 + 56;
    if (v9 < 64) {
      uint64_t v11 = ~(-1 << v9);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & v10;
    int64_t v37 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v38 = v3 + 16;
    uint64_t v13 = v7 + 56;
    uint64_t v39 = v3;
    int64_t v14 = (void (**)(unint64_t, char *, uint64_t))(v3 + 32);
    swift_retain();
    int64_t v15 = 0;
    if (!v12) {
      goto LABEL_7;
    }
    while (2)
    {
      unint64_t v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v17 = v16 | (v15 << 6);
LABEL_21:
      uint64_t v21 = v6;
      uint64_t v22 = *(void *)(v6 + 48);
      uint64_t v23 = *(void *)(v39 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v39 + 16))(v5, v22 + v23 * v17, v2);
      sub_100109818(&qword_100E639A0, (void (*)(uint64_t))&type metadata accessor for Location);
      uint64_t v24 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v25 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v26 = v24 & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_30;
      }
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
LABEL_36:
          __break(1u);
          goto LABEL_37;
        }
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v27);
      }
      while (v32 == -1);
      unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
LABEL_30:
      *(void *)(v13 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
      (*v14)(*(void *)(v8 + 48) + v28 * v23, v5, v2);
      ++*(void *)(v8 + 16);
      uint64_t v6 = v21;
      if (v12) {
        continue;
      }
      break;
    }
LABEL_7:
    int64_t v18 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      goto LABEL_36;
    }
    if (v18 < v37)
    {
      unint64_t v19 = *(void *)(v36 + 8 * v18);
      ++v15;
      if (v19) {
        goto LABEL_20;
      }
      int64_t v15 = v18 + 1;
      if (v18 + 1 < v37)
      {
        unint64_t v19 = *(void *)(v36 + 8 * v15);
        if (v19) {
          goto LABEL_20;
        }
        int64_t v15 = v18 + 2;
        if (v18 + 2 < v37)
        {
          unint64_t v19 = *(void *)(v36 + 8 * v15);
          if (v19) {
            goto LABEL_20;
          }
          int64_t v20 = v18 + 3;
          if (v20 < v37)
          {
            unint64_t v19 = *(void *)(v36 + 8 * v20);
            if (v19)
            {
              int64_t v15 = v20;
LABEL_20:
              unint64_t v12 = (v19 - 1) & v19;
              unint64_t v17 = __clz(__rbit64(v19)) + (v15 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v15 = v20 + 1;
              if (__OFADD__(v20, 1)) {
                break;
              }
              if (v15 >= v37) {
                goto LABEL_32;
              }
              unint64_t v19 = *(void *)(v36 + 8 * v15);
              ++v20;
              if (v19) {
                goto LABEL_20;
              }
            }
LABEL_37:
            __break(1u);
            JUMPOUT(0x1007F22F4);
          }
        }
      }
    }
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v35;
  }
  else
  {
    uint64_t result = swift_release();
  }
  *uint64_t v1 = v8;
  return result;
}

uint64_t sub_1007F2344()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DetailChartCondition();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_10017DF08(&qword_100E97050);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  if (!v12) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v17 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (unint64_t i = v17 | (v16 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v16 << 6))
  {
    uint64_t v22 = v6;
    uint64_t v23 = *(void *)(v6 + 48);
    uint64_t v24 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v23 + v24 * i, v2);
    sub_100109818(&qword_100E63988, (void (*)(uint64_t))&type metadata accessor for DetailChartCondition);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v25 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6))) == 0)
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      while (++v27 != v30 || (v29 & 1) == 0)
      {
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v27);
        if (v32 != -1)
        {
          unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v13 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v28 * v24, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v22;
    if (v12) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v19 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      goto LABEL_36;
    }
    if (v19 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v19);
    ++v16;
    if (!v20)
    {
      int64_t v16 = v19 + 1;
      if (v19 + 1 >= v36) {
        goto LABEL_32;
      }
      unint64_t v20 = *(void *)(v35 + 8 * v16);
      if (!v20)
      {
        int64_t v16 = v19 + 2;
        if (v19 + 2 >= v36) {
          goto LABEL_32;
        }
        unint64_t v20 = *(void *)(v35 + 8 * v16);
        if (!v20) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v12 = (v20 - 1) & v20;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v36)
  {
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_34;
  }
  unint64_t v20 = *(void *)(v35 + 8 * v21);
  if (v20)
  {
    int64_t v16 = v21;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v16 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_32;
    }
    unint64_t v20 = *(void *)(v35 + 8 * v16);
    ++v21;
    if (v20) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1007F26F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10017DF08(&qword_100E972D0);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_34:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  if (!v9) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v12 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v12 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    Swift::UInt v17 = *(unsigned __int8 *)(*(void *)(v2 + 48) + i);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v17);
    uint64_t result = Hasher._finalize()();
    uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v19 = result & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v11 + 8 * (v19 >> 6))) == 0)
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        BOOL v24 = v20 == v23;
        if (v20 == v23) {
          unint64_t v20 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v20);
        if (v25 != -1)
        {
          unint64_t v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v11 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(void *)(v11 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(unsigned char *)(*(void *)(v4 + 48) + v21) = v17;
    ++*(void *)(v4 + 16);
    if (v9) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1)) {
      goto LABEL_36;
    }
    if (v14 >= v10) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v14);
    ++v5;
    if (!v15)
    {
      int64_t v5 = v14 + 1;
      if (v14 + 1 >= v10) {
        goto LABEL_32;
      }
      unint64_t v15 = *(void *)(v6 + 8 * v5);
      if (!v15)
      {
        int64_t v5 = v14 + 2;
        if (v14 + 2 >= v10) {
          goto LABEL_32;
        }
        unint64_t v15 = *(void *)(v6 + 8 * v5);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v15 - 1) & v15;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v10)
  {
LABEL_32:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v5 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v5 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_32;
    }
    unint64_t v15 = *(void *)(v6 + 8 * v5);
    ++v16;
    if (v15) {
      goto LABEL_20;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1007F2968()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10017DF08(&qword_100E972E0);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = v2 + 56;
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    swift_retain();
    int64_t v11 = 0;
    if (!v8) {
      goto LABEL_7;
    }
    while (2)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v11 << 6);
LABEL_21:
      char v17 = *(unsigned char *)(*(void *)(v2 + 48) + v13);
      Hasher.init(_seed:)();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      Swift::Int v18 = Hasher._finalize()();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_30;
      }
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
LABEL_36:
          __break(1u);
          goto LABEL_37;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
LABEL_30:
      *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(unsigned char *)(*(void *)(v4 + 48) + v22) = v17;
      ++*(void *)(v4 + 16);
      if (v8) {
        continue;
      }
      break;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v14 < v9)
    {
      unint64_t v15 = *(void *)(v6 + 8 * v14);
      ++v11;
      if (v15) {
        goto LABEL_20;
      }
      int64_t v11 = v14 + 1;
      if (v14 + 1 < v9)
      {
        unint64_t v15 = *(void *)(v6 + 8 * v11);
        if (v15) {
          goto LABEL_20;
        }
        int64_t v11 = v14 + 2;
        if (v14 + 2 < v9)
        {
          unint64_t v15 = *(void *)(v6 + 8 * v11);
          if (v15) {
            goto LABEL_20;
          }
          int64_t v16 = v14 + 3;
          if (v16 < v9)
          {
            unint64_t v15 = *(void *)(v6 + 8 * v16);
            if (v15)
            {
              int64_t v11 = v16;
LABEL_20:
              unint64_t v8 = (v15 - 1) & v15;
              unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v11 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                break;
              }
              if (v11 >= v9) {
                goto LABEL_32;
              }
              unint64_t v15 = *(void *)(v6 + 8 * v11);
              ++v16;
              if (v15) {
                goto LABEL_20;
              }
            }
LABEL_37:
            __break(1u);
            JUMPOUT(0x1007F2C88);
          }
        }
      }
    }
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
  }
  else
  {
    uint64_t result = swift_release();
  }
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1007F2CA0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10017DF08(&qword_100E972D8);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = v2 + 56;
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    swift_retain();
    int64_t v11 = 0;
    if (!v8) {
      goto LABEL_7;
    }
    while (2)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v11 << 6);
LABEL_21:
      char v17 = *(unsigned char *)(*(void *)(v2 + 48) + v13);
      Hasher.init(_seed:)();
      String.hash(into:)();
      swift_bridgeObjectRelease();
      Swift::Int v18 = Hasher._finalize()();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = v18 & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v10 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_30;
      }
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
LABEL_36:
          __break(1u);
          goto LABEL_37;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
LABEL_30:
      *(void *)(v10 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(unsigned char *)(*(void *)(v4 + 48) + v22) = v17;
      ++*(void *)(v4 + 16);
      if (v8) {
        continue;
      }
      break;
    }
LABEL_7:
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_36;
    }
    if (v14 < v9)
    {
      unint64_t v15 = *(void *)(v6 + 8 * v14);
      ++v11;
      if (v15) {
        goto LABEL_20;
      }
      int64_t v11 = v14 + 1;
      if (v14 + 1 < v9)
      {
        unint64_t v15 = *(void *)(v6 + 8 * v11);
        if (v15) {
          goto LABEL_20;
        }
        int64_t v11 = v14 + 2;
        if (v14 + 2 < v9)
        {
          unint64_t v15 = *(void *)(v6 + 8 * v11);
          if (v15) {
            goto LABEL_20;
          }
          int64_t v16 = v14 + 3;
          if (v16 < v9)
          {
            unint64_t v15 = *(void *)(v6 + 8 * v16);
            if (v15)
            {
              int64_t v11 = v16;
LABEL_20:
              unint64_t v8 = (v15 - 1) & v15;
              unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v11 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                break;
              }
              if (v11 >= v9) {
                goto LABEL_32;
              }
              unint64_t v15 = *(void *)(v6 + 8 * v11);
              ++v16;
              if (v15) {
                goto LABEL_20;
              }
            }
LABEL_37:
            __break(1u);
            JUMPOUT(0x1007F2FE4);
          }
        }
      }
    }
LABEL_32:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
  }
  else
  {
    uint64_t result = swift_release();
  }
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1007F3004(uint64_t result, uint64_t a2, void *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

void sub_1007F3020()
{
  sub_10018A6B4();
  *unint64_t v0 = v1;
}

void sub_1007F3084()
{
  sub_10018A6B4();
  *unint64_t v0 = v1;
}

void sub_1007F30E8()
{
  sub_10018A6B4();
  *unint64_t v0 = v1;
}

void sub_1007F314C()
{
  sub_10018A6B4();
  *unint64_t v0 = v1;
}

void sub_1007F31B0()
{
  sub_10018A6B4();
  *unint64_t v0 = v1;
}

void sub_1007F3214()
{
  sub_10018A6B4();
  *unint64_t v0 = v1;
}

char *sub_1007F3278(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1007F3DDC(a1, a2, a3, *v3);
  *uint64_t v3 = (uint64_t)result;
  return result;
}

void sub_1007F3298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1000D6574(a1, a2, a3, *v3, (uint64_t)&unk_100E97330, (void (*)(uint64_t))sub_1007EB044, (void (*)(uint64_t))sub_1007EB7CC);
  *uint64_t v3 = v4;
}

void sub_1007F32E8()
{
  sub_10018A6B4();
  *unint64_t v0 = v1;
}

void sub_1007F334C()
{
  sub_10018A6B4();
  *unint64_t v0 = v1;
}

void sub_1007F33B0()
{
  sub_10018A6B4();
  *unint64_t v0 = v1;
}

void sub_1007F3414()
{
  sub_10018A6B4();
  *unint64_t v0 = v1;
}

void sub_1007F3478()
{
  sub_100150CD0();
  *unint64_t v0 = v1;
}

void sub_1007F34A8()
{
  sub_1001DD5D0();
  *unint64_t v0 = v1;
}

void sub_1007F34D0()
{
  sub_10018A6B4();
  *unint64_t v0 = v1;
}

char *sub_1007F3534(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1007F4008(a1, a2, a3, *v3);
  *uint64_t v3 = (uint64_t)result;
  return result;
}

char *sub_1007F3554(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1007F40F4(a1, a2, a3, *v3);
  *uint64_t v3 = (uint64_t)result;
  return result;
}

char *sub_1007F3574(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1007F41D8(a1, a2, a3, *v3);
  *uint64_t v3 = (uint64_t)result;
  return result;
}

void sub_1007F3594()
{
  sub_100150CD0();
  *unint64_t v0 = v1;
}

void sub_1007F35C4()
{
  sub_10018A6B4();
  *unint64_t v0 = v1;
}

void sub_1007F3628()
{
  sub_10018A6B4();
  *unint64_t v0 = v1;
}

void sub_1007F368C()
{
  sub_10018A6B4();
  *unint64_t v0 = v1;
}

void sub_1007F36F0()
{
  sub_10018A6B4();
  *unint64_t v0 = v1;
}

void sub_1007F3754()
{
  sub_10018A6B4();
  *unint64_t v0 = v1;
}

void sub_1007F37B8()
{
  sub_100150CD0();
  *unint64_t v0 = v1;
}

void sub_1007F37E8()
{
  sub_10018A6B4();
  *unint64_t v0 = v1;
}

void sub_1007F384C()
{
  sub_1007F4320();
  *unint64_t v0 = v1;
}

void sub_1007F387C()
{
  sub_1007F4320();
  *unint64_t v0 = v1;
}

void sub_1007F38AC()
{
  sub_10018A6B4();
  *unint64_t v0 = v1;
}

void sub_1007F3910()
{
  sub_10018A6B4();
  *unint64_t v0 = v1;
}

void sub_1007F3974()
{
  sub_1007F4320();
  *unint64_t v0 = v1;
}

void sub_1007F39A4()
{
  sub_1007F4320();
  *unint64_t v0 = v1;
}

char *sub_1007F39D4(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1007F4554(a1, a2, a3, *v3);
  *uint64_t v3 = (uint64_t)result;
  return result;
}

void sub_1007F39F4()
{
  sub_10018A6B4();
  *unint64_t v0 = v1;
}

void sub_1007F3A58()
{
  sub_100150CD0();
  *unint64_t v0 = v1;
}

void sub_1007F3A88()
{
  sub_10018A6B4();
  *unint64_t v0 = v1;
}

void sub_1007F3AEC()
{
  sub_10018A6B4();
  *unint64_t v0 = v1;
}

char *sub_1007F3B50(char *a1, int64_t a2, char a3)
{
  uint64_t result = sub_1007F4680(a1, a2, a3, *v3);
  *uint64_t v3 = (uint64_t)result;
  return result;
}

void sub_1007F3B70()
{
  sub_10018A6B4();
  *unint64_t v0 = v1;
}

void sub_1007F3BD4()
{
  sub_10018A6B4();
  *unint64_t v0 = v1;
}

void sub_1007F3C38()
{
  sub_10018A6B4();
  *unint64_t v0 = v1;
}

void sub_1007F3C9C()
{
  sub_10018A6B4();
  *unint64_t v0 = v1;
}

void sub_1007F3D00()
{
  sub_10018A6B4();
  *unint64_t v0 = v1;
}

void sub_1007F3D64()
{
  sub_10018A6B4();
  *unint64_t v0 = v1;
}

void sub_1007F3DC8()
{
}

char *sub_1007F3DDC(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10017DF08(&qword_100E97310);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_1007EAF84(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1007EB618((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

void sub_1007F3EC8()
{
}

void sub_1007F3EDC()
{
}

void sub_1007F3F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_1007F3F58()
{
  sub_10018C55C();
  if (v3)
  {
    sub_10017E9A4();
    if (v4 != v5)
    {
      sub_100183F88();
      if (v4)
      {
        __break(1u);
        return;
      }
      sub_1001A24A0();
    }
  }
  sub_1001A2E3C();
  if (v2)
  {
    sub_10017DF08(&qword_100E6D1B8);
    unint64_t v6 = (const void *)sub_1001D0EEC();
    size_t v7 = j__malloc_size(v6);
    sub_1001D1410(v7 - 32);
  }
  uint64_t v8 = (char *)sub_10018A3F8();
  if (v1)
  {
    sub_1007EB158(v8, v9, v10);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    sub_1007EB8F8((unint64_t)v8, v9, (unint64_t)v10);
  }
  swift_release();
}

char *sub_1007F4008(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10017DF08(&qword_100E97178);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 120);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_1007EB1B4(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1007EB9D8((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

char *sub_1007F40F4(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10017DF08(&qword_100E6BEF0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 8);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_10012C2A8(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1007EBAC0(v13, v8, v12);
  }
  swift_release();
  return v10;
}

char *sub_1007F41D8(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10017DF08(&qword_100E97030);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 88);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_1007EB2BC(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1007EBBB4((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

void sub_1007F42C4()
{
}

void sub_1007F430C()
{
}

void sub_1007F4320()
{
  sub_100188DD4();
  if (v4)
  {
    sub_10017E9A4();
    if (v6 != v7)
    {
      sub_100183F88();
      if (v6)
      {
        __break(1u);
        return;
      }
      sub_1001A24A0();
    }
  }
  else
  {
    uint64_t v5 = v2;
  }
  uint64_t v8 = *(void *)(v0 + 16);
  if (v5 <= v8) {
    uint64_t v9 = *(void *)(v0 + 16);
  }
  else {
    uint64_t v9 = v5;
  }
  if (v9)
  {
    sub_10017DF08(v3);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    sub_10018A284(v11 - 32);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v12 = (char *)(v0 + 32);
  if (v1)
  {
    sub_1007EB494(v12, v8, v10 + 32);
    *(void *)(v0 + 16) = 0;
  }
  else
  {
    sub_1007EBDD0((uint64_t)v12, v8);
  }
  swift_release();
}

void sub_1007F43EC()
{
}

void sub_1007F4434()
{
}

void sub_1007F447C()
{
}

void sub_1007F44C4()
{
}

void sub_1007F450C()
{
}

char *sub_1007F4554(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10017DF08(&qword_100E97130);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = (char *)(a4 + 32);
  if (v5)
  {
    sub_100129FF8(v13, v8, v12);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1007EBEA4((unint64_t)v13, v8, (unint64_t)v12);
  }
  swift_release();
  return v10;
}

void sub_1007F4638()
{
}

char *sub_1007F4680(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10017DF08(&qword_100E96F28);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  if (v5)
  {
    sub_10012C33C((char *)(a4 + 32), v8, v10 + 32);
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1007EBF84();
  }
  swift_release();
  return v10;
}

uint64_t sub_1007F476C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[9] = a2;
  v4[10] = a4;
  v4[8] = a1;
  v4[5] = type metadata accessor for LocalSearchRequestManager();
  v4[6] = &off_100E2E138;
  _OWORD v4[2] = a3;
  swift_retain();
  return _swift_task_switch(sub_1007F47FC, 0, 0);
}

uint64_t sub_1007F47FC()
{
  uint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v3 = v0[8];
  char v4 = (void *)swift_task_alloc();
  v0[11] = v4;
  _OWORD v4[2] = v1;
  v4[3] = v3;
  v4[4] = v2;
  v4[5] = v0 + 2;
  char v5 = (void *)swift_task_alloc();
  v0[12] = v5;
  sub_10017DF08(qword_100E96F98);
  *char v5 = v0;
  v5[1] = sub_1007F4910;
  sub_100127A5C();
  return withCheckedContinuation<A>(isolation:function:_:)();
}

uint64_t sub_1007F4910()
{
  sub_1000A9DE8();
  sub_100119470();
  uint64_t v1 = *v0;
  sub_10018AA7C();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100127A5C();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_1007F49F8()
{
  sub_1000A9DE8();
  uint64_t v1 = *(void *)(v0 + 56);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

unint64_t sub_1007F4A60()
{
  unint64_t result = qword_100E96F68;
  if (!qword_100E96F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96F68);
  }
  return result;
}

unint64_t sub_1007F4AB0()
{
  unint64_t result = qword_100E96F70[0];
  if (!qword_100E96F70[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100E96F70);
  }
  return result;
}

unint64_t sub_1007F4B04()
{
  unint64_t result = qword_100E96F88;
  if (!qword_100E96F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96F88);
  }
  return result;
}

unint64_t sub_1007F4B54()
{
  unint64_t result = qword_100E96F90;
  if (!qword_100E96F90)
  {
    sub_10018C6DC(qword_100E96F98);
    sub_1002F0EBC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E96F90);
  }
  return result;
}

void *assignWithCopy for LocationSearchEntityQuery(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationViewRowViewModel(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationViewRowViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationSearchEntityQuery()
{
  return &type metadata for LocationSearchEntityQuery;
}

ValueMetadata *type metadata accessor for LocationSearchEntityQuery.ComparatorMappingType()
{
  return &type metadata for LocationSearchEntityQuery.ComparatorMappingType;
}

unint64_t sub_1007F4CE0()
{
  unint64_t result = qword_100E97160;
  if (!qword_100E97160)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100E97160);
  }
  return result;
}

uint64_t sub_1007F4D20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ListViewTipManager.LocationNameAndLocationOfInterestType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1007F4D84(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ListViewTipManager.LocationNameAndLocationOfInterestType(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1007F4DE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = LocationSearchEntity.$name.getter();
  *a1 = result;
  return result;
}

unint64_t sub_1007F4E24()
{
  unint64_t result = qword_100E97238;
  if (!qword_100E97238)
  {
    sub_10018C6DC(&qword_100E62C80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E97238);
  }
  return result;
}

uint64_t sub_1007F4E78(uint64_t a1)
{
  return sub_10085D9DC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1007F4E88()
{
  return v0;
}

uint64_t sub_1007F4E98()
{
  return 0;
}

void *sub_1007F4EC0(char a1, char a2, uint64_t a3)
{
  uint64_t v94 = a3;
  uint64_t v6 = type metadata accessor for TipPriorityQueue.GridEntry();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100162EF8();
  uint64_t v93 = v8;
  __chkstk_darwin(v9);
  uint64_t v92 = (uint64_t)&v71 - v10;
  __chkstk_darwin(v11);
  unint64_t v13 = (char *)&v71 - v12;
  uint64_t v14 = sub_10017DF08(&qword_100E64E80);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_10008B8C0();
  uint64_t v16 = type metadata accessor for LocationComponentViewModel();
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  unint64_t v22 = (char *)&v71 - v21;
  uint64_t v23 = sub_10017DF08(&qword_100E6CCD8);
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_100162EF8();
  uint64_t v91 = v25;
  __chkstk_darwin(v26);
  unint64_t v28 = (char *)&v71 - v27;
  __chkstk_darwin(v29);
  BOOL v31 = (char *)&v71 - v30;
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v71 - v33;
  if (a1)
  {
    if (a1 == 1)
    {
      if (a2)
      {
        uint64_t v35 = &qword_100E97750;
        goto LABEL_11;
      }
    }
    else if (a2)
    {
      uint64_t v35 = &qword_100E97B60;
      goto LABEL_11;
    }
    uint64_t v35 = &qword_100E97958;
  }
  else if (a2)
  {
    uint64_t v35 = &qword_100E97340;
  }
  else
  {
    uint64_t v35 = &qword_100E97548;
  }
LABEL_11:
  char v36 = *((unsigned char *)v35 + 224);
  uint64_t v37 = *v35;
  uint64_t v77 = v35[1];
  uint64_t v78 = v37;
  uint64_t v76 = v35[2];
  uint64_t v75 = v35[3];
  uint64_t v38 = v35[8];
  uint64_t v81 = v35[9];
  uint64_t v82 = v38;
  uint64_t v39 = v35[10];
  uint64_t v79 = v35[11];
  uint64_t v80 = v39;
  uint64_t v74 = v35[24];
  uint64_t v73 = v35[25];
  uint64_t v72 = v35[26];
  uint64_t v71 = v35[27];
  uint64_t v40 = v35[53];
  uint64_t v85 = v35[54];
  uint64_t v86 = v40;
  uint64_t v41 = v35[55];
  uint64_t v83 = v35[56];
  uint64_t v84 = v41;
  uint64_t v42 = v35[61];
  uint64_t v89 = v35[62];
  uint64_t v90 = v42;
  uint64_t v43 = v94 + OBJC_IVAR____TtCV7Weather20NhpMinorAlertContent8_Storage_map;
  uint64_t v45 = v35[63];
  uint64_t v44 = v35[64];
  uint64_t v87 = v45;
  uint64_t v88 = v44;
  swift_beginAccess();
  sub_10006DF38(v43, v3, &qword_100E64E80);
  uint64_t v46 = type metadata accessor for LocationComponentContainerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0(v3, 1, v46) == 1)
  {
    sub_1001781AC(v3, &qword_100E64E80);
LABEL_16:
    uint64_t v47 = 1;
    goto LABEL_17;
  }
  sub_10031F6A8(v3 + *(int *)(v46 + 20), (uint64_t)v19, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  sub_10031F75C(v3, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_10031F6FC((uint64_t)v19, (uint64_t)v22, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  if (v36)
  {
    sub_10031F75C((uint64_t)v22, (void (*)(void))type metadata accessor for LocationComponentViewModel);
    goto LABEL_16;
  }
  sub_10031F6FC((uint64_t)v22, (uint64_t)v31, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v47 = 0;
  uint64_t v48 = &v31[*(int *)(v6 + 20)];
  uint64_t v49 = v73;
  *(void *)uint64_t v48 = v74;
  *((void *)v48 + 1) = v49;
  uint64_t v50 = v71;
  *((void *)v48 + 2) = v72;
  *((void *)v48 + 3) = v50;
LABEL_17:
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, v47, 1, v6);
  sub_10031F640((uint64_t)v31, (uint64_t)v34);
  sub_10031F6A8(v94 + *(int *)(v46 + 20) + OBJC_IVAR____TtCV7Weather20NhpMinorAlertContent8_Storage_airQuality, (uint64_t)v28, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v51 = &v28[*(int *)(v6 + 20)];
  uint64_t v52 = v77;
  *(void *)uint64_t v51 = v78;
  *((void *)v51 + 1) = v52;
  uint64_t v53 = v75;
  *((void *)v51 + 2) = v76;
  *((void *)v51 + 3) = v53;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v6);
  uint64_t v54 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
  sub_10031F6A8(v54, (uint64_t)v13, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  long long v55 = &v13[*(int *)(v6 + 20)];
  uint64_t v56 = v81;
  *(void *)long long v55 = v82;
  *((void *)v55 + 1) = v56;
  uint64_t v57 = v79;
  *((void *)v55 + 2) = v80;
  *((void *)v55 + 3) = v57;
  uint64_t v58 = v91;
  sub_10006DF38((uint64_t)v34, v91, &qword_100E6CCD8);
  uint64_t v59 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
  uint64_t v60 = v92;
  sub_10031F6A8(v59, v92, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v61 = (uint64_t *)(v60 + *(int *)(v6 + 20));
  uint64_t v62 = v85;
  *uint64_t v61 = v86;
  v61[1] = v62;
  uint64_t v63 = v83;
  v61[2] = v84;
  v61[3] = v63;
  uint64_t v64 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
  uint64_t v65 = v93;
  sub_10031F6A8(v64, v93, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v66 = (uint64_t *)(v65 + *(int *)(v6 + 20));
  uint64_t v67 = v89;
  *uint64_t v66 = v90;
  v66[1] = v67;
  uint64_t v68 = v88;
  v66[2] = v87;
  v66[3] = v68;
  uint64_t v69 = sub_100AD6D18((uint64_t)v28, (uint64_t)v13, v58, v60, v65);
  sub_1001781AC((uint64_t)v34, &qword_100E6CCD8);
  return v69;
}

uint64_t sub_1007F549C(uint64_t a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E64E80);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_10008B8C0();
  uint64_t v10 = a1 + OBJC_IVAR____TtCV7Weather20NhpMinorAlertContent8_Storage_map;
  swift_beginAccess();
  sub_10006DF38(v10, v7, &qword_100E64E80);
  uint64_t v111 = a1;
  if (_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8) == 1)
  {
    sub_1001781AC(v7, &qword_100E64E80);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100C28110;
    sub_10017DF08(&qword_100E6CCD0);
    unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v13 = *(void *)(v9 + 72);
    uint64_t v14 = (__n128 *)swift_allocObject();
    uint64_t v15 = sub_100183900(v14, (__n128)xmmword_100C251B0);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather20NhpMinorAlertContent8_Storage_nextHourPrecipitation, (uint64_t)v15 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 32) = sub_1001F24CC((uint64_t)v14);
    *(void *)(v11 + 40) = v16;
    *(void *)(v11 + 48) = v17;
    uint64_t v18 = (__n128 *)swift_allocObject();
    sub_100163264(v18);
    sub_10031F6A8(v19 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v20, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 56) = sub_1001F24CC((uint64_t)v14);
    *(void *)(v11 + 64) = v21;
    *(void *)(v11 + 72) = v22;
    uint64_t v23 = (__n128 *)sub_100163204();
    sub_100163264(v23);
    sub_10031F6A8(v24 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v25, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 80) = sub_1001F24CC((uint64_t)v14);
    *(void *)(v11 + 88) = v26;
    *(void *)(v11 + 96) = v27;
    uint64_t v28 = sub_100163204();
    *(_OWORD *)(v28 + 16) = v112;
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather20NhpMinorAlertContent8_Storage_airQuality, v28 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 104) = sub_1001F24CC(v28);
    *(void *)(v11 + 112) = v29;
    *(void *)(v11 + 120) = v30;
    uint64_t v31 = sub_100163204();
    *(_OWORD *)(v31 + 16) = v112;
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather20NhpMinorAlertContent8_Storage_severeAlert, v31 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 128) = sub_1001F24CC(v31);
    *(void *)(v11 + 136) = v32;
    *(void *)(v11 + 144) = v33;
    uint64_t v34 = v13;
    uint64_t v35 = (__n128 *)swift_allocObject();
    char v36 = (char *)sub_100183900(v35, (__n128)xmmword_100C25ED0) + v12;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
    sub_1001859A8((uint64_t)&v36[v34], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset);
    *(void *)(v11 + 152) = sub_1001F24CC((uint64_t)v35);
    *(void *)(v11 + 160) = v37;
    *(void *)(v11 + 168) = v38;
    uint64_t v39 = (__n128 *)swift_allocObject();
    sub_10016324C(v39);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_1001859A8((uint64_t)&v36[v34], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal);
    *(void *)(v11 + 176) = sub_1001F24CC((uint64_t)v35);
    *(void *)(v11 + 184) = v40;
    *(void *)(v11 + 192) = v41;
    uint64_t v42 = (__n128 *)swift_allocObject();
    sub_10016324C(v42);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_1001859A8((uint64_t)&v36[v34], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity);
    *(void *)(v11 + 200) = sub_1001F24CC((uint64_t)v35);
    *(void *)(v11 + 208) = v43;
    *(void *)(v11 + 216) = v44;
    uint64_t v45 = sub_100163204();
    *(_OWORD *)(v45 + 16) = v112;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_1001859A8(v45 + v12 + v34, OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure);
    *(void *)(v11 + 224) = sub_1001F24CC(v45);
    *(void *)(v11 + 232) = v46;
    *(void *)(v11 + 240) = v47;
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = v112;
    uint64_t v49 = *(void *)(a1 + 16);
    sub_10031F6A8(v49 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v48 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v49 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v48 + v12 + v34, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 248) = sub_1001F24CC(v48);
    *(void *)(v11 + 256) = v50;
    *(void *)(v11 + 264) = v51;
  }
  else
  {
    sub_10031F6FC(v7, v1, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100C31F20;
    sub_10017DF08(&qword_100E6CCD0);
    uint64_t v110 = *(void *)(v9 + 72);
    uint64_t v109 = v1;
    unint64_t v52 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v53 = (__n128 *)swift_allocObject();
    uint64_t v54 = sub_100183900(v53, (__n128)xmmword_100C251B0);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather20NhpMinorAlertContent8_Storage_nextHourPrecipitation, (uint64_t)v54 + v52, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 32) = sub_1001F24CC((uint64_t)v53);
    *(void *)(v11 + 40) = v55;
    *(void *)(v11 + 48) = v56;
    uint64_t v57 = (__n128 *)sub_10017C984();
    sub_10017E198(v57);
    sub_10031F6A8(v58 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v59, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 56) = sub_1001F24CC((uint64_t)v53);
    *(void *)(v11 + 64) = v60;
    *(void *)(v11 + 72) = v61;
    uint64_t v62 = (__n128 *)sub_10017C984();
    sub_10017E198(v62);
    sub_10031F6A8(v63 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v64, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 80) = sub_1001F24CC((uint64_t)v53);
    *(void *)(v11 + 88) = v65;
    *(void *)(v11 + 96) = v66;
    uint64_t v67 = (__n128 *)sub_10017C984();
    sub_100179F54(v67);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather20NhpMinorAlertContent8_Storage_airQuality, v68, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 104) = sub_1001F24CC((uint64_t)v67);
    *(void *)(v11 + 112) = v69;
    *(void *)(v11 + 120) = v70;
    uint64_t v71 = (__n128 *)sub_10017C984();
    sub_100179F54(v71);
    sub_10031F6A8(v1, v72, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 128) = sub_1001F24CC((uint64_t)v71);
    *(void *)(v11 + 136) = v73;
    *(void *)(v11 + 144) = v74;
    uint64_t v75 = (__n128 *)sub_10017C984();
    sub_100179F54(v75);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather20NhpMinorAlertContent8_Storage_severeAlert, v76, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 152) = sub_1001F24CC((uint64_t)v75);
    *(void *)(v11 + 160) = v77;
    *(void *)(v11 + 168) = v78;
    uint64_t v79 = (__n128 *)swift_allocObject();
    uint64_t v80 = (char *)sub_100183900(v79, (__n128)xmmword_100C25ED0) + v52;
    uint64_t v81 = a1;
    uint64_t v82 = *(void *)(a1 + 16);
    uint64_t v83 = v81;
    sub_10031F6A8(v82 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v80, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v82 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v80[v110], (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 176) = sub_1001F24CC((uint64_t)v79);
    *(void *)(v11 + 184) = v84;
    *(void *)(v11 + 192) = v85;
    uint64_t v86 = (__n128 *)swift_allocObject();
    sub_10017A334(v86);
    uint64_t v88 = v87 + v52;
    uint64_t v89 = *(void *)(v83 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_10031F6A8(v89 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, v88 + v110, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 200) = sub_1001F24CC((uint64_t)v79);
    *(void *)(v11 + 208) = v90;
    *(void *)(v11 + 216) = v91;
    uint64_t v92 = (__n128 *)swift_allocObject();
    sub_10017A334(v92);
    uint64_t v94 = v93 + v52;
    uint64_t v95 = *(void *)(v111 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_10031F6A8(v95 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, v94 + v110, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 224) = sub_1001F24CC((uint64_t)v79);
    *(void *)(v11 + 232) = v96;
    *(void *)(v11 + 240) = v97;
    uint64_t v98 = (__n128 *)swift_allocObject();
    sub_10017A334(v98);
    uint64_t v100 = v99 + v52;
    uint64_t v101 = *(void *)(v111 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_10031F6A8(v101 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, v100 + v110, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 248) = sub_1001F24CC((uint64_t)v79);
    *(void *)(v11 + 256) = v102;
    *(void *)(v11 + 264) = v103;
    uint64_t v104 = swift_allocObject();
    *(_OWORD *)(v104 + 16) = v112;
    uint64_t v105 = *(void *)(v111 + 16);
    sub_10031F6A8(v105 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v104 + v52, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v105 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v104 + v52 + v110, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 272) = sub_1001F24CC(v104);
    *(void *)(v11 + 280) = v106;
    *(void *)(v11 + 288) = v107;
    sub_10031F75C(v109, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  }
  return v11;
}

void sub_1007F5D64(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = type metadata accessor for LocationComponentContainerViewModel();
  sub_100162E4C();
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v7 = __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  uint64_t v8 = type metadata accessor for LocationViewComponent();
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_10017DF08(&qword_100E64E80);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = swift_retain();
  sub_1006E2E94(v18, a2);
  swift_release();
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather34LocationNhpMinorAlertConfiguration8_Storage_map, v12, (void (*)(void))type metadata accessor for LocationViewComponent);
  uint64_t v19 = sub_10018297C();
  a2(v19);
  sub_100185204();
  _s7Weather24LocationCompositionStateOwst_0(v17, 0, 1, v4);
  sub_10016327C(OBJC_IVAR____TtCV7Weather34LocationNhpMinorAlertConfiguration8_Storage_airQuality);
  uint64_t v20 = sub_10018297C();
  a2(v20);
  sub_100185204();
  sub_10016327C(OBJC_IVAR____TtCV7Weather34LocationNhpMinorAlertConfiguration8_Storage_nextHourPrecipitation);
  uint64_t v21 = sub_10018297C();
  a2(v21);
  sub_100185204();
  sub_10016327C(OBJC_IVAR____TtCV7Weather34LocationNhpMinorAlertConfiguration8_Storage_severeAlert);
  uint64_t v22 = sub_10018297C();
  a2(v22);
  sub_100185204();
  sub_1002DBA78();
}

void *sub_1007F5F9C(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v3 = a2;
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v6 = a3;
    *(void *)a1 = *a2;
    *(_DWORD *)(a1 + 8) = *((_DWORD *)a2 + 2);
    uint64_t v7 = a3[8];
    uint64_t v8 = (char *)(a1 + v7);
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = (int *)type metadata accessor for ListLocationViewModel(0);
    uint64_t v132 = v6;
    uint64_t v133 = v3;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, (uint64_t)v10))
    {
      uint64_t v11 = sub_10017DF08(&qword_100E85F58);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      uint64_t v13 = type metadata accessor for LocationModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v8, v9, v13);
      uint64_t v14 = v10[5];
      uint64_t v15 = &v8[v14];
      uint64_t v16 = &v9[v14];
      *(void *)uint64_t v15 = *(void *)v16;
      v15[8] = v16[8];
      uint64_t v17 = v10[6];
      uint64_t v18 = &v8[v17];
      uint64_t v19 = &v9[v17];
      uint64_t v20 = *((void *)v19 + 1);
      *(void *)uint64_t v18 = *(void *)v19;
      *((void *)v18 + 1) = v20;
      uint64_t v21 = v10[7];
      uint64_t v22 = &v8[v21];
      uint64_t v23 = &v9[v21];
      type metadata accessor for ListLocationRowPrimaryText(0);
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v24 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24))
        {
          uint64_t v25 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v24);
        }
      }
      else
      {
        uint64_t v26 = *((void *)v23 + 1);
        *(void *)uint64_t v22 = *(void *)v23;
        *((void *)v22 + 1) = v26;
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v27 = v10[8];
      uint64_t v28 = &v8[v27];
      uint64_t v29 = &v9[v27];
      uint64_t v30 = *(void *)v29;
      uint64_t v31 = *((void *)v29 + 1);
      uint64_t v32 = *((void *)v29 + 2);
      uint64_t v33 = *((void *)v29 + 3);
      uint64_t v34 = (uint64_t)v8;
      char v35 = v29[32];
      sub_100193004(*(void *)v29, v31, v32, v33, v35);
      *(void *)uint64_t v28 = v30;
      *((void *)v28 + 1) = v31;
      *((void *)v28 + 2) = v32;
      *((void *)v28 + 3) = v33;
      v28[32] = v35;
      *(unsigned char *)(v34 + v10[9]) = v9[v10[9]];
      uint64_t v36 = v10[10];
      uint64_t v37 = (void *)(v34 + v36);
      uint64_t v38 = &v9[v36];
      uint64_t v39 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
      {
        uint64_t v40 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
      }
      uint64_t v41 = v10[11];
      uint64_t v42 = (void *)(v34 + v41);
      uint64_t v43 = &v9[v41];
      uint64_t v44 = type metadata accessor for TimeZone();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v44))
      {
        uint64_t v45 = sub_10017DF08(&qword_100E6D1D8);
        memcpy(v42, v43, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v44);
      }
      uint64_t v46 = v10[12];
      uint64_t v47 = (void *)(v34 + v46);
      uint64_t v48 = &v9[v46];
      __dsta = (void *)*((void *)v48 + 1);
      void *v47 = *(void *)v48;
      v47[1] = __dsta;
      uint64_t v49 = v10[13];
      uint64_t v50 = (void *)(v34 + v49);
      uint64_t v51 = &v9[v49];
      uint64_t v129 = *((void *)v51 + 1);
      *uint64_t v50 = *(void *)v51;
      v50[1] = v129;
      *(unsigned char *)(v34 + v10[14]) = v9[v10[14]];
      uint64_t v52 = v10[15];
      uint64_t v53 = (void *)(v34 + v52);
      uint64_t v54 = &v9[v52];
      uint64_t v128 = *((void *)v54 + 1);
      *uint64_t v53 = *(void *)v54;
      v53[1] = v128;
      uint64_t v55 = v10[16];
      uint64_t v56 = (void *)(v34 + v55);
      uint64_t v57 = &v9[v55];
      uint64_t v127 = *((void *)v57 + 1);
      *uint64_t v56 = *(void *)v57;
      v56[1] = v127;
      uint64_t v58 = v10[17];
      uint64_t v59 = (void *)(v34 + v58);
      uint64_t v60 = &v9[v58];
      uint64_t v61 = *((void *)v60 + 1);
      void *v59 = *(void *)v60;
      v59[1] = v61;
      uint64_t v62 = v10[18];
      uint64_t v63 = (void *)(v34 + v62);
      uint64_t v64 = &v9[v62];
      uint64_t v65 = *((void *)v64 + 1);
      *uint64_t v63 = *(void *)v64;
      v63[1] = v65;
      uint64_t v66 = v10[19];
      uint64_t v67 = (void *)(v34 + v66);
      uint64_t v68 = &v9[v66];
      uint64_t v69 = *((void *)v68 + 1);
      *uint64_t v67 = *(void *)v68;
      v67[1] = v69;
      uint64_t v70 = v10[20];
      uint64_t v71 = (void *)(v34 + v70);
      uint64_t v72 = &v9[v70];
      uint64_t v73 = *((void *)v72 + 1);
      void *v71 = *(void *)v72;
      v71[1] = v73;
      *(unsigned char *)(v34 + v10[21]) = v9[v10[21]];
      uint64_t v74 = v10[22];
      Swift::Int v125 = &v9[v74];
      uint64_t v126 = v34 + v74;
      uint64_t v75 = type metadata accessor for WeatherConditionBackgroundModel();
      uint64_t v124 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v75 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v124(v126, v125, v75);
      *(unsigned char *)(v34 + v10[23]) = v9[v10[23]];
      *(unsigned char *)(v34 + v10[24]) = v9[v10[24]];
      uint64_t v76 = v10[25];
      uint64_t v77 = (void *)(v34 + v76);
      uint64_t v78 = &v9[v76];
      uint64_t v79 = *((void *)v78 + 1);
      void *v77 = *(void *)v78;
      v77[1] = v79;
      *(void *)(v34 + v10[26]) = *(void *)&v9[v10[26]];
      swift_bridgeObjectRetain();
      _s7Weather24LocationCompositionStateOwst_0(v34, 0, 1, (uint64_t)v10);
      uint64_t v6 = v132;
      uint64_t v3 = v133;
    }
    uint64_t v80 = v6[10];
    *(void *)((char *)v4 + v6[9]) = *(uint64_t *)((char *)v3 + v6[9]);
    uint64_t v81 = (void *)((char *)v4 + v80);
    uint64_t v82 = (uint64_t *)((char *)v3 + v80);
    uint64_t v83 = v82[1];
    *uint64_t v81 = *v82;
    v81[1] = v83;
    uint64_t v84 = v6[11];
    uint64_t v85 = v6[12];
    uint64_t v86 = (void *)((char *)v4 + v84);
    uint64_t v87 = (uint64_t *)((char *)v3 + v84);
    uint64_t v88 = v87[1];
    *uint64_t v86 = *v87;
    v86[1] = v88;
    *((unsigned char *)v4 + v85) = *((unsigned char *)v3 + v85);
    uint64_t v89 = v6[14];
    *((unsigned char *)v4 + v6[13]) = *((unsigned char *)v3 + v6[13]);
    uint64_t v90 = v3;
    uint64_t v91 = (char *)v4 + v89;
    uint64_t v92 = (uint64_t)v90 + v89;
    *uint64_t v91 = *((unsigned char *)v90 + v89);
    *((void *)v91 + 1) = *(uint64_t *)((char *)v90 + v89 + 8);
    uint64_t v93 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
    uint64_t v94 = v93[6];
    __dst = &v91[v94];
    uint64_t v95 = (const void *)(v92 + v94);
    uint64_t v96 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, v96))
    {
      uint64_t v97 = sub_10017DF08(&qword_100E749B0);
      memcpy(__dst, v95, *(void *)(*(void *)(v97 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v96 - 8) + 16))(__dst, v95, v96);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v96);
    }
    uint64_t v98 = v93[7];
    uint64_t v99 = &v91[v98];
    uint64_t v100 = (void *)(v92 + v98);
    uint64_t v101 = v100[1];
    *(void *)uint64_t v99 = *v100;
    *((void *)v99 + 1) = v101;
    *(void *)&v91[v93[8]] = *(void *)(v92 + v93[8]);
    uint64_t v102 = v132[16];
    *(void *)((char *)v4 + v132[15]) = *(uint64_t *)((char *)v133 + v132[15]);
    *((unsigned char *)v4 + v102) = *((unsigned char *)v133 + v102);
    uint64_t v103 = v132[17];
    uint64_t v104 = v132[18];
    uint64_t v105 = (void *)((char *)v4 + v103);
    uint64_t v106 = (uint64_t *)((char *)v133 + v103);
    uint64_t v107 = v106[1];
    void *v105 = *v106;
    v105[1] = v107;
    *((unsigned char *)v4 + v104) = *((unsigned char *)v133 + v104);
    uint64_t v108 = v132[20];
    *((unsigned char *)v4 + v132[19]) = *((unsigned char *)v133 + v132[19]);
    uint64_t v109 = (void *)((char *)v4 + v108);
    uint64_t v110 = (uint64_t *)((char *)v133 + v108);
    uint64_t v111 = type metadata accessor for ContentStatusBanner();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v110, 1, v111))
    {
      uint64_t v112 = sub_10017DF08(&qword_100E63A10);
      memcpy(v109, v110, *(void *)(*(void *)(v112 - 8) + 64));
    }
    else
    {
      *(unsigned char *)uint64_t v109 = *(unsigned char *)v110;
      uint64_t v113 = v110 + 1;
      unint64_t v114 = v110[2];
      if (v114 >= 2)
      {
        v109[1] = *v113;
        v109[2] = v114;
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v109 + 1) = *(_OWORD *)v113;
      }
      uint64_t v115 = *(int *)(v111 + 24);
      unint64_t v116 = (char *)v109 + v115;
      unint64_t v117 = (char *)v110 + v115;
      uint64_t v118 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v117, 1, v118))
      {
        uint64_t v119 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v116, v117, *(void *)(*(void *)(v119 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 16))(v116, v117, v118);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v116, 0, 1, v118);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v109, 0, 1, v111);
    }
    uint64_t v120 = v132[22];
    *((unsigned char *)v4 + v132[21]) = *((unsigned char *)v133 + v132[21]);
    uint64_t v121 = (char *)v4 + v120;
    unint64_t v122 = (char *)v133 + v120;
    char *v121 = *v122;
    *(_WORD *)(v121 + 1) = *(_WORD *)(v122 + 1);
    *((void *)v121 + 1) = *((void *)v122 + 1);
  }
  swift_retain();
  return v4;
}

uint64_t sub_1007F6884(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[8];
  int v5 = (int *)type metadata accessor for ListLocationViewModel(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, (uint64_t)v5))
  {
    uint64_t v6 = type metadata accessor for LocationModel();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
    swift_bridgeObjectRelease();
    uint64_t v7 = v4 + v5[7];
    type metadata accessor for ListLocationRowPrimaryText(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = type metadata accessor for Date();
      if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v9 = v4 + v5[8];
    sub_100191D78(*(void *)v9, *(void *)(v9 + 8), *(void *)(v9 + 16), *(void *)(v9 + 24), *(unsigned char *)(v9 + 32));
    uint64_t v10 = v4 + v5[10];
    uint64_t v11 = type metadata accessor for Date();
    if (!_s7Weather24LocationCompositionStateOwet_0(v10, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    }
    uint64_t v12 = v4 + v5[11];
    uint64_t v13 = type metadata accessor for TimeZone();
    if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = v4 + v5[22];
    uint64_t v15 = type metadata accessor for WeatherConditionBackgroundModel();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = a1 + a2[14];
  swift_bridgeObjectRelease();
  uint64_t v17 = v16 + *(int *)(type metadata accessor for LearnMoreAttributorViewModel() + 24);
  uint64_t v18 = type metadata accessor for URL();
  if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, v18)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v19 = a1 + a2[20];
  uint64_t v20 = type metadata accessor for ContentStatusBanner();
  if (!_s7Weather24LocationCompositionStateOwet_0(v19, 1, v20))
  {
    if (*(void *)(v19 + 16) >= 2uLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v21 = v19 + *(int *)(v20 + 24);
    uint64_t v22 = type metadata accessor for Date();
    if (!_s7Weather24LocationCompositionStateOwet_0(v21, 1, v22)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
    }
  }

  return swift_release();
}

uint64_t sub_1007F6CC4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v6 = a3[8];
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for ListLocationViewModel(0);
  uint64_t v129 = v4;
  uint64_t v130 = a1;
  uint64_t v128 = v3;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, (uint64_t)v9))
  {
    uint64_t v10 = sub_10017DF08(&qword_100E85F58);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = type metadata accessor for LocationModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v7, v8, v11);
    uint64_t v12 = v9[5];
    uint64_t v13 = &v7[v12];
    uint64_t v14 = &v8[v12];
    *(void *)uint64_t v13 = *(void *)v14;
    char v13[8] = v14[8];
    uint64_t v15 = v9[6];
    uint64_t v16 = &v7[v15];
    uint64_t v17 = &v8[v15];
    uint64_t v18 = *((void *)v17 + 1);
    *(void *)uint64_t v16 = *(void *)v17;
    *((void *)v16 + 1) = v18;
    uint64_t v19 = v9[7];
    uint64_t v20 = &v7[v19];
    uint64_t v21 = &v8[v19];
    type metadata accessor for ListLocationRowPrimaryText(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
      {
        uint64_t v23 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
      }
    }
    else
    {
      uint64_t v24 = *((void *)v21 + 1);
      *(void *)uint64_t v20 = *(void *)v21;
      *((void *)v20 + 1) = v24;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v25 = v9[8];
    uint64_t v26 = &v7[v25];
    uint64_t v27 = &v8[v25];
    uint64_t v28 = *(void *)v27;
    uint64_t v29 = *((void *)v27 + 1);
    uint64_t v30 = *((void *)v27 + 2);
    uint64_t v31 = *((void *)v27 + 3);
    char v32 = v27[32];
    sub_100193004(*(void *)v27, v29, v30, v31, v32);
    *(void *)uint64_t v26 = v28;
    *((void *)v26 + 1) = v29;
    *((void *)v26 + 2) = v30;
    *((void *)v26 + 3) = v31;
    v26[32] = v32;
    v7[v9[9]] = v8[v9[9]];
    uint64_t v33 = v9[10];
    uint64_t v34 = &v7[v33];
    char v35 = &v8[v33];
    uint64_t v36 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v36))
    {
      uint64_t v37 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v36);
    }
    uint64_t v38 = v9[11];
    uint64_t v39 = &v7[v38];
    uint64_t v40 = &v8[v38];
    uint64_t v41 = type metadata accessor for TimeZone();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
    {
      uint64_t v42 = sub_10017DF08(&qword_100E6D1D8);
      memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
    }
    uint64_t v43 = v9[12];
    uint64_t v44 = &v7[v43];
    uint64_t v45 = &v8[v43];
    uint64_t v127 = *((void *)v45 + 1);
    *(void *)uint64_t v44 = *(void *)v45;
    *((void *)v44 + 1) = v127;
    uint64_t v46 = v9[13];
    uint64_t v47 = &v7[v46];
    uint64_t v48 = &v8[v46];
    uint64_t v126 = *((void *)v48 + 1);
    *(void *)uint64_t v47 = *(void *)v48;
    *((void *)v47 + 1) = v126;
    v7[v9[14]] = v8[v9[14]];
    uint64_t v49 = v9[15];
    uint64_t v50 = &v7[v49];
    uint64_t v51 = &v8[v49];
    uint64_t v125 = *((void *)v51 + 1);
    *(void *)uint64_t v50 = *(void *)v51;
    *((void *)v50 + 1) = v125;
    uint64_t v52 = v9[16];
    uint64_t v53 = &v7[v52];
    uint64_t v54 = &v8[v52];
    uint64_t v124 = *((void *)v54 + 1);
    *(void *)uint64_t v53 = *(void *)v54;
    *((void *)v53 + 1) = v124;
    uint64_t v55 = v9[17];
    uint64_t v56 = &v7[v55];
    uint64_t v57 = &v8[v55];
    uint64_t v58 = *((void *)v57 + 1);
    *(void *)uint64_t v56 = *(void *)v57;
    *((void *)v56 + 1) = v58;
    uint64_t v59 = v9[18];
    uint64_t v60 = &v7[v59];
    uint64_t v61 = &v8[v59];
    uint64_t v62 = *((void *)v61 + 1);
    *(void *)uint64_t v60 = *(void *)v61;
    *((void *)v60 + 1) = v62;
    uint64_t v63 = v9[19];
    uint64_t v64 = &v7[v63];
    uint64_t v65 = &v8[v63];
    uint64_t v66 = *((void *)v65 + 1);
    *(void *)uint64_t v64 = *(void *)v65;
    *((void *)v64 + 1) = v66;
    uint64_t v67 = v9[20];
    uint64_t v68 = &v7[v67];
    uint64_t v69 = &v8[v67];
    uint64_t v70 = *((void *)v69 + 1);
    *(void *)uint64_t v68 = *(void *)v69;
    *((void *)v68 + 1) = v70;
    v7[v9[21]] = v8[v9[21]];
    uint64_t v71 = v9[22];
    unint64_t v122 = &v8[v71];
    uint64_t v123 = &v7[v71];
    uint64_t v72 = type metadata accessor for WeatherConditionBackgroundModel();
    uint64_t v73 = *(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v73(v123, v122, v72);
    v7[v9[23]] = v8[v9[23]];
    v7[v9[24]] = v8[v9[24]];
    uint64_t v74 = v9[25];
    uint64_t v75 = &v7[v74];
    uint64_t v76 = &v8[v74];
    uint64_t v77 = *((void *)v76 + 1);
    *(void *)uint64_t v75 = *(void *)v76;
    *((void *)v75 + 1) = v77;
    *(void *)&v7[v9[26]] = *(void *)&v8[v9[26]];
    swift_bridgeObjectRetain();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, (uint64_t)v9);
    uint64_t v4 = v129;
    uint64_t v3 = v128;
  }
  uint64_t v78 = v3[10];
  *(void *)(a1 + v3[9]) = *(void *)(v4 + v3[9]);
  uint64_t v79 = (void *)(a1 + v78);
  uint64_t v80 = (void *)(v4 + v78);
  uint64_t v81 = v80[1];
  *uint64_t v79 = *v80;
  v79[1] = v81;
  uint64_t v82 = v3[11];
  uint64_t v83 = v3[12];
  uint64_t v84 = (void *)(a1 + v82);
  uint64_t v85 = (void *)(v4 + v82);
  uint64_t v86 = v85[1];
  *uint64_t v84 = *v85;
  v84[1] = v86;
  *(unsigned char *)(a1 + v83) = *(unsigned char *)(v4 + v83);
  uint64_t v87 = v3[14];
  *(unsigned char *)(a1 + v3[13]) = *(unsigned char *)(v4 + v3[13]);
  uint64_t v88 = a1 + v87;
  uint64_t v89 = v4 + v87;
  *(unsigned char *)uint64_t v88 = *(unsigned char *)v89;
  *(void *)(v88 + 8) = *(void *)(v89 + 8);
  uint64_t v90 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
  uint64_t v91 = v90[6];
  uint64_t v92 = (void *)(v88 + v91);
  uint64_t v93 = (const void *)(v89 + v91);
  uint64_t v94 = type metadata accessor for URL();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v93, 1, v94))
  {
    uint64_t v95 = sub_10017DF08(&qword_100E749B0);
    memcpy(v92, v93, *(void *)(*(void *)(v95 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v94 - 8) + 16))(v92, v93, v94);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v92, 0, 1, v94);
  }
  uint64_t v96 = v90[7];
  uint64_t v97 = (void *)(v88 + v96);
  uint64_t v98 = (void *)(v89 + v96);
  uint64_t v99 = v98[1];
  void *v97 = *v98;
  v97[1] = v99;
  *(void *)(v88 + v90[8]) = *(void *)(v89 + v90[8]);
  uint64_t v100 = v128[16];
  *(void *)(v130 + v128[15]) = *(void *)(v129 + v128[15]);
  *(unsigned char *)(v130 + v100) = *(unsigned char *)(v129 + v100);
  uint64_t v101 = v128[17];
  uint64_t v102 = v128[18];
  uint64_t v103 = (void *)(v130 + v101);
  uint64_t v104 = (void *)(v129 + v101);
  uint64_t v105 = v104[1];
  *uint64_t v103 = *v104;
  v103[1] = v105;
  *(unsigned char *)(v130 + v102) = *(unsigned char *)(v129 + v102);
  uint64_t v106 = v128[20];
  *(unsigned char *)(v130 + v128[19]) = *(unsigned char *)(v129 + v128[19]);
  uint64_t v107 = (void *)(v130 + v106);
  uint64_t v108 = (void *)(v129 + v106);
  uint64_t v109 = type metadata accessor for ContentStatusBanner();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v108, 1, v109))
  {
    uint64_t v110 = sub_10017DF08(&qword_100E63A10);
    memcpy(v107, v108, *(void *)(*(void *)(v110 - 8) + 64));
  }
  else
  {
    *(unsigned char *)uint64_t v107 = *(unsigned char *)v108;
    uint64_t v111 = v108 + 1;
    unint64_t v112 = v108[2];
    if (v112 >= 2)
    {
      v107[1] = *v111;
      v107[2] = v112;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v107 + 1) = *(_OWORD *)v111;
    }
    uint64_t v113 = *(int *)(v109 + 24);
    unint64_t v114 = (char *)v107 + v113;
    uint64_t v115 = (char *)v108 + v113;
    uint64_t v116 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v115, 1, v116))
    {
      uint64_t v117 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v114, v115, *(void *)(*(void *)(v117 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 16))(v114, v115, v116);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v114, 0, 1, v116);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v107, 0, 1, v109);
  }
  uint64_t v118 = v128[22];
  *(unsigned char *)(v130 + v128[21]) = *(unsigned char *)(v129 + v128[21]);
  uint64_t v119 = v130 + v118;
  uint64_t v120 = v129 + v118;
  *(unsigned char *)uint64_t v119 = *(unsigned char *)v120;
  *(_WORD *)(v119 + 1) = *(_WORD *)(v120 + 1);
  *(void *)(v119 + 8) = *(void *)(v120 + 8);
  swift_retain();
  return v130;
}

uint64_t sub_1007F7550(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v3 = a3;
  uint64_t v6 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 9) = *((unsigned char *)a2 + 9);
  *(unsigned char *)(a1 + 10) = *((unsigned char *)a2 + 10);
  *(unsigned char *)(a1 + 11) = *((unsigned char *)a2 + 11);
  uint64_t v7 = a3[8];
  uint64_t v8 = (unsigned char *)(a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = (int *)type metadata accessor for ListLocationViewModel(0);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, (uint64_t)v10);
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, (uint64_t)v10);
  if (!v11)
  {
    if (v12)
    {
      sub_1007F87E4((uint64_t)v8, (void (*)(void))type metadata accessor for ListLocationViewModel);
      goto LABEL_8;
    }
    uint64_t v28 = type metadata accessor for LocationModel();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v28 - 8) + 24))(v8, v9, v28);
    uint64_t v29 = v10[5];
    uint64_t v30 = &v8[v29];
    uint64_t v31 = &v9[v29];
    char v32 = v31[8];
    *(void *)uint64_t v30 = *(void *)v31;
    v30[8] = v32;
    uint64_t v33 = v10[6];
    uint64_t v34 = &v8[v33];
    char v35 = &v9[v33];
    *uint64_t v34 = *v35;
    v34[1] = v35[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if ((uint64_t *)a1 != a2)
    {
      uint64_t v36 = v10[7];
      uint64_t v37 = &v8[v36];
      uint64_t v38 = &v9[v36];
      sub_1007F87E4((uint64_t)&v8[v36], (void (*)(void))type metadata accessor for ListLocationRowPrimaryText);
      type metadata accessor for ListLocationRowPrimaryText(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v39 = v3;
        uint64_t v40 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v40))
        {
          uint64_t v41 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v40 - 8) + 16))(v37, v38, v40);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v40);
        }
        uint64_t v3 = v39;
      }
      else
      {
        *uint64_t v37 = *v38;
        v37[1] = v38[1];
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
    }
    v206 = v3;
    uint64_t v90 = v10[8];
    uint64_t v91 = &v8[v90];
    uint64_t v92 = &v9[v90];
    uint64_t v93 = *(void *)v92;
    uint64_t v94 = *((void *)v92 + 1);
    uint64_t v95 = *((void *)v92 + 2);
    uint64_t v96 = *((void *)v92 + 3);
    char v204 = v92[32];
    sub_100193004(*(void *)v92, v94, v95, v96, v204);
    uint64_t v97 = *(void *)v91;
    uint64_t v98 = *((void *)v91 + 1);
    uint64_t v99 = *((void *)v91 + 2);
    uint64_t v100 = *((void *)v91 + 3);
    *(void *)uint64_t v91 = v93;
    *((void *)v91 + 1) = v94;
    *((void *)v91 + 2) = v95;
    *((void *)v91 + 3) = v96;
    char v101 = v91[32];
    v91[32] = v204;
    sub_100191D78(v97, v98, v99, v100, v101);
    v8[v10[9]] = v9[v10[9]];
    uint64_t v102 = v10[10];
    uint64_t v103 = &v8[v102];
    uint64_t v104 = &v9[v102];
    uint64_t v105 = type metadata accessor for Date();
    LODWORD(v91) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v103, 1, v105);
    int v106 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v104, 1, v105);
    if (v91)
    {
      if (!v106)
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 16))(v103, v104, v105);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v103, 0, 1, v105);
        goto LABEL_32;
      }
    }
    else
    {
      uint64_t v107 = *(void *)(v105 - 8);
      if (!v106)
      {
        (*(void (**)(char *, char *, uint64_t))(v107 + 24))(v103, v104, v105);
LABEL_32:
        uint64_t v3 = v206;
        uint64_t v109 = v10[11];
        uint64_t v110 = &v8[v109];
        uint64_t v111 = &v9[v109];
        uint64_t v112 = type metadata accessor for TimeZone();
        int v113 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v110, 1, v112);
        int v114 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v111, 1, v112);
        if (v113)
        {
          if (!v114)
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16))(v110, v111, v112);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v110, 0, 1, v112);
LABEL_38:
            uint64_t v117 = v10[12];
            uint64_t v118 = &v8[v117];
            uint64_t v119 = &v9[v117];
            *uint64_t v118 = *v119;
            v118[1] = v119[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v120 = v10[13];
            uint64_t v121 = &v8[v120];
            unint64_t v122 = &v9[v120];
            void *v121 = *v122;
            v121[1] = v122[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v8[v10[14]] = v9[v10[14]];
            uint64_t v123 = v10[15];
            uint64_t v124 = &v8[v123];
            uint64_t v125 = &v9[v123];
            *uint64_t v124 = *v125;
            v124[1] = v125[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v126 = v10[16];
            uint64_t v127 = &v8[v126];
            uint64_t v128 = &v9[v126];
            *uint64_t v127 = *v128;
            v127[1] = v128[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v129 = v10[17];
            uint64_t v130 = &v8[v129];
            uint64_t v131 = &v9[v129];
            void *v130 = *v131;
            v130[1] = v131[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v132 = v10[18];
            uint64_t v133 = &v8[v132];
            Swift::Int v134 = &v9[v132];
            *uint64_t v133 = *v134;
            v133[1] = v134[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v135 = v10[19];
            uint64_t v136 = &v8[v135];
            uint64_t v137 = &v9[v135];
            *uint64_t v136 = *v137;
            v136[1] = v137[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v138 = v10[20];
            unint64_t v139 = &v8[v138];
            uint64_t v140 = &v9[v138];
            *unint64_t v139 = *v140;
            v139[1] = v140[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v8[v10[21]] = v9[v10[21]];
            uint64_t v141 = v10[22];
            uint64_t v142 = &v8[v141];
            uint64_t v143 = &v9[v141];
            uint64_t v144 = type metadata accessor for WeatherConditionBackgroundModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v144 - 8) + 24))(v142, v143, v144);
            v8[v10[23]] = v9[v10[23]];
            v8[v10[24]] = v9[v10[24]];
            uint64_t v145 = v10[25];
            uint64_t v146 = &v8[v145];
            uint64_t v147 = &v9[v145];
            void *v146 = *v147;
            v146[1] = v147[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *(void *)&v8[v10[26]] = *(void *)&v9[v10[26]];
            goto LABEL_39;
          }
        }
        else
        {
          uint64_t v115 = *(void *)(v112 - 8);
          if (!v114)
          {
            (*(void (**)(char *, char *, uint64_t))(v115 + 24))(v110, v111, v112);
            goto LABEL_38;
          }
          (*(void (**)(char *, uint64_t))(v115 + 8))(v110, v112);
        }
        uint64_t v116 = sub_10017DF08(&qword_100E6D1D8);
        memcpy(v110, v111, *(void *)(*(void *)(v116 - 8) + 64));
        goto LABEL_38;
      }
      (*(void (**)(char *, uint64_t))(v107 + 8))(v103, v105);
    }
    uint64_t v108 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v103, v104, *(void *)(*(void *)(v108 - 8) + 64));
    goto LABEL_32;
  }
  if (v12)
  {
LABEL_8:
    uint64_t v27 = sub_10017DF08(&qword_100E85F58);
    memcpy(v8, v9, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_39;
  }
  uint64_t v13 = type metadata accessor for LocationModel();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 16))(v8, v9, v13);
  uint64_t v14 = v10[5];
  uint64_t v15 = &v8[v14];
  uint64_t v16 = &v9[v14];
  char v17 = v16[8];
  *(void *)uint64_t v15 = *(void *)v16;
  v15[8] = v17;
  uint64_t v18 = v10[6];
  uint64_t v19 = &v8[v18];
  uint64_t v20 = &v9[v18];
  void *v19 = *v20;
  v19[1] = v20[1];
  uint64_t v21 = v10[7];
  uint64_t v22 = &v8[v21];
  uint64_t v23 = &v9[v21];
  type metadata accessor for ListLocationRowPrimaryText(0);
  swift_bridgeObjectRetain();
  uint64_t v205 = v3;
  uint64_t v24 = v9;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v25))
    {
      uint64_t v26 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 16))(v22, v23, v25);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v25);
    }
  }
  else
  {
    *uint64_t v22 = *v23;
    v22[1] = v23[1];
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v42 = v10[8];
  uint64_t v43 = &v8[v42];
  uint64_t v203 = (uint64_t)v8;
  uint64_t v44 = v24;
  uint64_t v45 = &v24[v42];
  uint64_t v46 = *(void *)v45;
  uint64_t v47 = *((void *)v45 + 1);
  uint64_t v48 = *((void *)v45 + 2);
  uint64_t v49 = *((void *)v45 + 3);
  char v50 = v45[32];
  sub_100193004(*(void *)v45, v47, v48, v49, v50);
  *(void *)uint64_t v43 = v46;
  *((void *)v43 + 1) = v47;
  *((void *)v43 + 2) = v48;
  *((void *)v43 + 3) = v49;
  v43[32] = v50;
  *(unsigned char *)(v203 + v10[9]) = v44[v10[9]];
  uint64_t v51 = v10[10];
  uint64_t v52 = (void *)(v203 + v51);
  uint64_t v53 = &v44[v51];
  uint64_t v54 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v54))
  {
    uint64_t v55 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v52, v53, *(void *)(*(void *)(v55 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, unsigned char *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v54);
  }
  uint64_t v56 = v10[11];
  uint64_t v57 = (void *)(v203 + v56);
  uint64_t v58 = &v44[v56];
  uint64_t v59 = type metadata accessor for TimeZone();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v58, 1, v59))
  {
    uint64_t v60 = sub_10017DF08(&qword_100E6D1D8);
    memcpy(v57, v58, *(void *)(*(void *)(v60 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, unsigned char *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v57, 0, 1, v59);
  }
  uint64_t v61 = v10[12];
  uint64_t v62 = (void *)(v203 + v61);
  uint64_t v63 = &v44[v61];
  *uint64_t v62 = *v63;
  v62[1] = v63[1];
  uint64_t v64 = v10[13];
  uint64_t v65 = (void *)(v203 + v64);
  uint64_t v66 = &v44[v64];
  void *v65 = *v66;
  v65[1] = v66[1];
  *(unsigned char *)(v203 + v10[14]) = v44[v10[14]];
  uint64_t v67 = v10[15];
  uint64_t v68 = (void *)(v203 + v67);
  uint64_t v69 = &v44[v67];
  *uint64_t v68 = *v69;
  v68[1] = v69[1];
  uint64_t v70 = v10[16];
  uint64_t v71 = (void *)(v203 + v70);
  uint64_t v72 = &v44[v70];
  void *v71 = *v72;
  v71[1] = v72[1];
  uint64_t v73 = v10[17];
  uint64_t v74 = (void *)(v203 + v73);
  uint64_t v75 = &v44[v73];
  *uint64_t v74 = *v75;
  v74[1] = v75[1];
  uint64_t v76 = v10[18];
  uint64_t v77 = (void *)(v203 + v76);
  uint64_t v78 = &v44[v76];
  void *v77 = *v78;
  v77[1] = v78[1];
  uint64_t v79 = v10[19];
  uint64_t v80 = (void *)(v203 + v79);
  uint64_t v81 = &v44[v79];
  void *v80 = *v81;
  v80[1] = v81[1];
  uint64_t v82 = v10[20];
  uint64_t v83 = (void *)(v203 + v82);
  uint64_t v84 = &v44[v82];
  void *v83 = *v84;
  v83[1] = v84[1];
  *(unsigned char *)(v203 + v10[21]) = v44[v10[21]];
  uint64_t v85 = v10[22];
  uint64_t v201 = &v44[v85];
  uint64_t v202 = v203 + v85;
  uint64_t v86 = type metadata accessor for WeatherConditionBackgroundModel();
  uint64_t v200 = *(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v86 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v200(v202, v201, v86);
  *(unsigned char *)(v203 + v10[23]) = v44[v10[23]];
  *(unsigned char *)(v203 + v10[24]) = v44[v10[24]];
  uint64_t v87 = v10[25];
  uint64_t v88 = (void *)(v203 + v87);
  uint64_t v89 = &v44[v87];
  *uint64_t v88 = *v89;
  v88[1] = v89[1];
  *(void *)(v203 + v10[26]) = *(void *)&v44[v10[26]];
  swift_bridgeObjectRetain();
  _s7Weather24LocationCompositionStateOwst_0(v203, 0, 1, (uint64_t)v10);
  uint64_t v3 = v205;
LABEL_39:
  *(void *)(a1 + v3[9]) = *(uint64_t *)((char *)a2 + v3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v148 = v3[10];
  uint64_t v149 = (void *)(a1 + v148);
  uint64_t v150 = (uint64_t *)((char *)a2 + v148);
  *uint64_t v149 = *v150;
  v149[1] = v150[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v151 = v3[11];
  uint64_t v152 = (void *)(a1 + v151);
  unint64_t v153 = (uint64_t *)((char *)a2 + v151);
  *uint64_t v152 = *v153;
  v152[1] = v153[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v3[12]) = *((unsigned char *)a2 + v3[12]);
  *(unsigned char *)(a1 + v3[13]) = *((unsigned char *)a2 + v3[13]);
  uint64_t v154 = v3[14];
  uint64_t v155 = a1 + v154;
  uint64_t v156 = (uint64_t)a2 + v154;
  *(unsigned char *)uint64_t v155 = *((unsigned char *)a2 + v154);
  *(void *)(v155 + 8) = *(uint64_t *)((char *)a2 + v154 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v157 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
  uint64_t v158 = v157[6];
  uint64_t v159 = (void *)(v155 + v158);
  uint64_t v160 = (const void *)(v156 + v158);
  uint64_t v161 = type metadata accessor for URL();
  int v162 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v159, 1, v161);
  int v163 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v160, 1, v161);
  if (v162)
  {
    if (!v163)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v161 - 8) + 16))(v159, v160, v161);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v159, 0, 1, v161);
      goto LABEL_45;
    }
    goto LABEL_44;
  }
  uint64_t v164 = *(void *)(v161 - 8);
  if (v163)
  {
    (*(void (**)(void *, uint64_t))(v164 + 8))(v159, v161);
LABEL_44:
    uint64_t v165 = sub_10017DF08(&qword_100E749B0);
    memcpy(v159, v160, *(void *)(*(void *)(v165 - 8) + 64));
    goto LABEL_45;
  }
  (*(void (**)(void *, const void *, uint64_t))(v164 + 24))(v159, v160, v161);
LABEL_45:
  uint64_t v166 = v157[7];
  uint64_t v167 = (void *)(v155 + v166);
  uint64_t v168 = (void *)(v156 + v166);
  *uint64_t v167 = *v168;
  v167[1] = v168[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v155 + v157[8]) = *(void *)(v156 + v157[8]);
  swift_retain();
  swift_release();
  *(void *)(a1 + v3[15]) = *(uint64_t *)((char *)a2 + v3[15]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v3[16]) = *((unsigned char *)a2 + v3[16]);
  uint64_t v169 = v3[17];
  uint64_t v170 = (void *)(a1 + v169);
  uint64_t v171 = (uint64_t *)((char *)a2 + v169);
  *uint64_t v170 = *v171;
  v170[1] = v171[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v3[18]) = *((unsigned char *)a2 + v3[18]);
  *(unsigned char *)(a1 + v3[19]) = *((unsigned char *)a2 + v3[19]);
  uint64_t v172 = v3[20];
  uint64_t v173 = a1 + v172;
  uint64_t v174 = (uint64_t)a2 + v172;
  uint64_t v175 = type metadata accessor for ContentStatusBanner();
  int v176 = _s7Weather24LocationCompositionStateOwet_0(v173, 1, v175);
  int v177 = _s7Weather24LocationCompositionStateOwet_0(v174, 1, v175);
  if (v176)
  {
    if (!v177)
    {
      *(unsigned char *)uint64_t v173 = *(unsigned char *)v174;
      if (*(void *)(v174 + 16) >= 2uLL)
      {
        *(void *)(v173 + 8) = *(void *)(v174 + 8);
        *(void *)(v173 + 16) = *(void *)(v174 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v173 + 8) = *(_OWORD *)(v174 + 8);
      }
      uint64_t v182 = *(int *)(v175 + 24);
      uint64_t v183 = (void *)(v173 + v182);
      unint64_t v184 = (const void *)(v174 + v182);
      uint64_t v185 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v184, 1, v185))
      {
        uint64_t v186 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v183, v184, *(void *)(*(void *)(v186 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v185 - 8) + 16))(v183, v184, v185);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v183, 0, 1, v185);
      }
      uint64_t v187 = v173;
      uint64_t v188 = v175;
      goto LABEL_62;
    }
    goto LABEL_51;
  }
  if (v177)
  {
    sub_1007F87E4(v173, (void (*)(void))type metadata accessor for ContentStatusBanner);
LABEL_51:
    size_t v178 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63A10) - 8) + 64);
    uint64_t v179 = (void *)v173;
    double v180 = (const void *)v174;
    goto LABEL_52;
  }
  *(unsigned char *)uint64_t v173 = *(unsigned char *)v174;
  unint64_t v181 = *(void *)(v174 + 16);
  if (*(void *)(v173 + 16) >= 2uLL)
  {
    if (v181 >= 2)
    {
      *(void *)(v173 + 8) = *(void *)(v174 + 8);
      *(void *)(v173 + 16) = *(void *)(v174 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_68;
    }
    sub_10027B4D4(v173 + 8);
    goto LABEL_66;
  }
  if (v181 < 2)
  {
LABEL_66:
    *(_OWORD *)(v173 + 8) = *(_OWORD *)(v174 + 8);
    goto LABEL_68;
  }
  *(void *)(v173 + 8) = *(void *)(v174 + 8);
  *(void *)(v173 + 16) = *(void *)(v174 + 16);
  swift_bridgeObjectRetain();
LABEL_68:
  uint64_t v193 = *(int *)(v175 + 24);
  uint64_t v194 = v173 + v193;
  uint64_t v195 = v174 + v193;
  uint64_t v196 = type metadata accessor for Date();
  int v197 = _s7Weather24LocationCompositionStateOwet_0(v194, 1, v196);
  int v198 = _s7Weather24LocationCompositionStateOwet_0(v195, 1, v196);
  if (v197)
  {
    if (!v198)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v196 - 8) + 16))(v194, v195, v196);
      uint64_t v187 = v194;
      uint64_t v188 = v196;
LABEL_62:
      _s7Weather24LocationCompositionStateOwst_0(v187, 0, 1, v188);
      goto LABEL_63;
    }
  }
  else
  {
    uint64_t v199 = *(void *)(v196 - 8);
    if (!v198)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v199 + 24))(v194, v195, v196);
      goto LABEL_63;
    }
    (*(void (**)(uint64_t, uint64_t))(v199 + 8))(v194, v196);
  }
  size_t v178 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
  uint64_t v179 = (void *)v194;
  double v180 = (const void *)v195;
LABEL_52:
  memcpy(v179, v180, v178);
LABEL_63:
  *(unsigned char *)(a1 + v3[21]) = *((unsigned char *)a2 + v3[21]);
  uint64_t v189 = v3[22];
  uint64_t v190 = a1 + v189;
  uint64_t v191 = (uint64_t)a2 + v189;
  *(unsigned char *)uint64_t v190 = *(unsigned char *)v191;
  *(unsigned char *)(v190 + 1) = *(unsigned char *)(v191 + 1);
  *(unsigned char *)(v190 + 2) = *(unsigned char *)(v191 + 2);
  *(void *)(v190 + 8) = *(void *)(v191 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1007F87E4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1007F883C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  uint64_t v6 = a3[8];
  uint64_t v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for ListLocationViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, (uint64_t)v9))
  {
    uint64_t v10 = sub_10017DF08(&qword_100E85F58);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = type metadata accessor for LocationModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v7, v8, v11);
    uint64_t v12 = v9[5];
    uint64_t v13 = &v7[v12];
    uint64_t v14 = &v8[v12];
    *(void *)uint64_t v13 = *(void *)v14;
    char v13[8] = v14[8];
    *(_OWORD *)&v7[v9[6]] = *(_OWORD *)&v8[v9[6]];
    uint64_t v15 = v9[7];
    uint64_t v16 = &v7[v15];
    char v17 = &v8[v15];
    uint64_t v18 = type metadata accessor for ListLocationRowPrimaryText(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v19))
      {
        uint64_t v20 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v16, v17, v19);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v19);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    uint64_t v21 = v9[8];
    uint64_t v22 = &v7[v21];
    uint64_t v23 = &v8[v21];
    long long v24 = *((_OWORD *)v23 + 1);
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    *((_OWORD *)v22 + 1) = v24;
    v22[32] = v23[32];
    v7[v9[9]] = v8[v9[9]];
    uint64_t v25 = v9[10];
    uint64_t v26 = &v7[v25];
    uint64_t v27 = &v8[v25];
    uint64_t v28 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28))
    {
      uint64_t v29 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
    }
    uint64_t v30 = v9[11];
    uint64_t v31 = &v7[v30];
    char v32 = &v8[v30];
    uint64_t v33 = type metadata accessor for TimeZone();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v33))
    {
      uint64_t v34 = sub_10017DF08(&qword_100E6D1D8);
      memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v33);
    }
    *(_OWORD *)&v7[v9[12]] = *(_OWORD *)&v8[v9[12]];
    *(_OWORD *)&v7[v9[13]] = *(_OWORD *)&v8[v9[13]];
    v7[v9[14]] = v8[v9[14]];
    *(_OWORD *)&v7[v9[15]] = *(_OWORD *)&v8[v9[15]];
    *(_OWORD *)&v7[v9[16]] = *(_OWORD *)&v8[v9[16]];
    *(_OWORD *)&v7[v9[17]] = *(_OWORD *)&v8[v9[17]];
    *(_OWORD *)&v7[v9[18]] = *(_OWORD *)&v8[v9[18]];
    *(_OWORD *)&v7[v9[19]] = *(_OWORD *)&v8[v9[19]];
    *(_OWORD *)&v7[v9[20]] = *(_OWORD *)&v8[v9[20]];
    v7[v9[21]] = v8[v9[21]];
    uint64_t v35 = v9[22];
    uint64_t v36 = &v7[v35];
    uint64_t v37 = &v8[v35];
    uint64_t v38 = type metadata accessor for WeatherConditionBackgroundModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
    v7[v9[23]] = v8[v9[23]];
    v7[v9[24]] = v8[v9[24]];
    *(_OWORD *)&v7[v9[25]] = *(_OWORD *)&v8[v9[25]];
    *(void *)&v7[v9[26]] = *(void *)&v8[v9[26]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, (uint64_t)v9);
  }
  uint64_t v39 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v39) = *(_OWORD *)(a2 + v39);
  uint64_t v40 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v40) = *(unsigned char *)(a2 + v40);
  uint64_t v41 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  *(unsigned char *)uint64_t v42 = *(unsigned char *)(a2 + v41);
  *(void *)(v42 + 8) = *(void *)(a2 + v41 + 8);
  uint64_t v44 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
  uint64_t v45 = v44[6];
  uint64_t v46 = (void *)(v42 + v45);
  uint64_t v47 = (const void *)(v43 + v45);
  uint64_t v48 = type metadata accessor for URL();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v48))
  {
    uint64_t v49 = sub_10017DF08(&qword_100E749B0);
    memcpy(v46, v47, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v46, 0, 1, v48);
  }
  *(_OWORD *)(v42 + v44[7]) = *(_OWORD *)(v43 + v44[7]);
  *(void *)(v42 + v44[8]) = *(void *)(v43 + v44[8]);
  uint64_t v50 = a3[16];
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  *(unsigned char *)(a1 + v50) = *(unsigned char *)(a2 + v50);
  uint64_t v51 = a3[18];
  *(_OWORD *)(a1 + a3[17]) = *(_OWORD *)(a2 + a3[17]);
  *(unsigned char *)(a1 + v51) = *(unsigned char *)(a2 + v51);
  uint64_t v52 = a3[20];
  *(unsigned char *)(a1 + a3[19]) = *(unsigned char *)(a2 + a3[19]);
  uint64_t v53 = (unsigned char *)(a1 + v52);
  uint64_t v54 = (unsigned char *)(a2 + v52);
  uint64_t v55 = type metadata accessor for ContentStatusBanner();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v55))
  {
    uint64_t v56 = sub_10017DF08(&qword_100E63A10);
    memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    *uint64_t v53 = *v54;
    *(_OWORD *)(v53 + 8) = *(_OWORD *)(v54 + 8);
    uint64_t v57 = *(int *)(v55 + 24);
    uint64_t v58 = &v53[v57];
    uint64_t v59 = &v54[v57];
    uint64_t v60 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v60))
    {
      uint64_t v61 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v58, v59, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v60 - 8) + 32))(v58, v59, v60);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v60);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v55);
  }
  uint64_t v62 = a3[22];
  *(unsigned char *)(a1 + a3[21]) = *(unsigned char *)(a2 + a3[21]);
  *(_OWORD *)(a1 + v62) = *(_OWORD *)(a2 + v62);
  return a1;
}

uint64_t sub_1007F8F40(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(_WORD *)(a1 + 10) = *(_WORD *)(a2 + 10);
  uint64_t v6 = a3[8];
  uint64_t v7 = (unsigned char *)(a1 + v6);
  uint64_t v8 = (unsigned char *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for ListLocationViewModel(0);
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, (uint64_t)v9);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, (uint64_t)v9);
  if (!v10)
  {
    if (v11)
    {
      sub_1007F87E4((uint64_t)v7, (void (*)(void))type metadata accessor for ListLocationViewModel);
      goto LABEL_8;
    }
    uint64_t v23 = type metadata accessor for LocationModel();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 40))(v7, v8, v23);
    uint64_t v24 = v9[5];
    uint64_t v25 = &v7[v24];
    uint64_t v26 = &v8[v24];
    *(void *)uint64_t v25 = *(void *)v26;
    v25[8] = v26[8];
    uint64_t v27 = v9[6];
    uint64_t v28 = &v7[v27];
    uint64_t v29 = (uint64_t *)&v8[v27];
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    *uint64_t v28 = v31;
    v28[1] = v30;
    swift_bridgeObjectRelease();
    if (a1 != a2)
    {
      uint64_t v32 = v9[7];
      uint64_t v33 = &v7[v32];
      uint64_t v34 = &v8[v32];
      sub_1007F87E4((uint64_t)&v7[v32], (void (*)(void))type metadata accessor for ListLocationRowPrimaryText);
      uint64_t v35 = type metadata accessor for ListLocationRowPrimaryText(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v36 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v36))
        {
          uint64_t v37 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v33, v34, v36);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v36);
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
      }
    }
    uint64_t v56 = v9[8];
    uint64_t v57 = &v7[v56];
    uint64_t v58 = &v8[v56];
    char v59 = v58[32];
    uint64_t v60 = *(void *)v57;
    uint64_t v61 = *((void *)v57 + 1);
    uint64_t v62 = *((void *)v57 + 2);
    uint64_t v63 = *((void *)v57 + 3);
    long long v64 = *((_OWORD *)v58 + 1);
    *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
    *((_OWORD *)v57 + 1) = v64;
    char v65 = v57[32];
    v57[32] = v59;
    sub_100191D78(v60, v61, v62, v63, v65);
    v7[v9[9]] = v8[v9[9]];
    uint64_t v66 = v9[10];
    uint64_t v67 = &v7[v66];
    uint64_t v68 = &v8[v66];
    uint64_t v69 = type metadata accessor for Date();
    int v70 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v67, 1, v69);
    int v71 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v68, 1, v69);
    if (v70)
    {
      if (!v71)
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 32))(v67, v68, v69);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v67, 0, 1, v69);
        goto LABEL_32;
      }
    }
    else
    {
      uint64_t v72 = *(void *)(v69 - 8);
      if (!v71)
      {
        (*(void (**)(char *, char *, uint64_t))(v72 + 40))(v67, v68, v69);
LABEL_32:
        uint64_t v74 = v9[11];
        uint64_t v75 = &v7[v74];
        uint64_t v76 = &v8[v74];
        uint64_t v77 = type metadata accessor for TimeZone();
        int v78 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v75, 1, v77);
        int v79 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v76, 1, v77);
        if (v78)
        {
          if (!v79)
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 32))(v75, v76, v77);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v75, 0, 1, v77);
LABEL_38:
            uint64_t v82 = v9[12];
            uint64_t v83 = &v7[v82];
            uint64_t v84 = (uint64_t *)&v8[v82];
            uint64_t v86 = *v84;
            uint64_t v85 = v84[1];
            void *v83 = v86;
            v83[1] = v85;
            swift_bridgeObjectRelease();
            uint64_t v87 = v9[13];
            uint64_t v88 = &v7[v87];
            uint64_t v89 = (uint64_t *)&v8[v87];
            uint64_t v91 = *v89;
            uint64_t v90 = v89[1];
            *uint64_t v88 = v91;
            v88[1] = v90;
            swift_bridgeObjectRelease();
            v7[v9[14]] = v8[v9[14]];
            uint64_t v92 = v9[15];
            uint64_t v93 = &v7[v92];
            uint64_t v94 = (uint64_t *)&v8[v92];
            uint64_t v96 = *v94;
            uint64_t v95 = v94[1];
            void *v93 = v96;
            v93[1] = v95;
            swift_bridgeObjectRelease();
            uint64_t v97 = v9[16];
            uint64_t v98 = &v7[v97];
            uint64_t v99 = (uint64_t *)&v8[v97];
            uint64_t v101 = *v99;
            uint64_t v100 = v99[1];
            *uint64_t v98 = v101;
            v98[1] = v100;
            swift_bridgeObjectRelease();
            uint64_t v102 = v9[17];
            uint64_t v103 = &v7[v102];
            uint64_t v104 = (uint64_t *)&v8[v102];
            uint64_t v106 = *v104;
            uint64_t v105 = v104[1];
            *uint64_t v103 = v106;
            v103[1] = v105;
            swift_bridgeObjectRelease();
            uint64_t v107 = v9[18];
            uint64_t v108 = &v7[v107];
            uint64_t v109 = (uint64_t *)&v8[v107];
            uint64_t v111 = *v109;
            uint64_t v110 = v109[1];
            void *v108 = v111;
            v108[1] = v110;
            swift_bridgeObjectRelease();
            uint64_t v112 = v9[19];
            int v113 = &v7[v112];
            int v114 = (uint64_t *)&v8[v112];
            uint64_t v116 = *v114;
            uint64_t v115 = v114[1];
            void *v113 = v116;
            v113[1] = v115;
            swift_bridgeObjectRelease();
            uint64_t v117 = v9[20];
            uint64_t v118 = &v7[v117];
            uint64_t v119 = (uint64_t *)&v8[v117];
            uint64_t v121 = *v119;
            uint64_t v120 = v119[1];
            *uint64_t v118 = v121;
            v118[1] = v120;
            swift_bridgeObjectRelease();
            v7[v9[21]] = v8[v9[21]];
            uint64_t v122 = v9[22];
            uint64_t v123 = &v7[v122];
            uint64_t v124 = &v8[v122];
            uint64_t v125 = type metadata accessor for WeatherConditionBackgroundModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 40))(v123, v124, v125);
            v7[v9[23]] = v8[v9[23]];
            v7[v9[24]] = v8[v9[24]];
            uint64_t v126 = v9[25];
            uint64_t v127 = &v7[v126];
            uint64_t v128 = (uint64_t *)&v8[v126];
            uint64_t v130 = *v128;
            uint64_t v129 = v128[1];
            *uint64_t v127 = v130;
            v127[1] = v129;
            swift_bridgeObjectRelease();
            *(void *)&v7[v9[26]] = *(void *)&v8[v9[26]];
            goto LABEL_39;
          }
        }
        else
        {
          uint64_t v80 = *(void *)(v77 - 8);
          if (!v79)
          {
            (*(void (**)(char *, char *, uint64_t))(v80 + 40))(v75, v76, v77);
            goto LABEL_38;
          }
          (*(void (**)(char *, uint64_t))(v80 + 8))(v75, v77);
        }
        uint64_t v81 = sub_10017DF08(&qword_100E6D1D8);
        memcpy(v75, v76, *(void *)(*(void *)(v81 - 8) + 64));
        goto LABEL_38;
      }
      (*(void (**)(char *, uint64_t))(v72 + 8))(v67, v69);
    }
    uint64_t v73 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v67, v68, *(void *)(*(void *)(v73 - 8) + 64));
    goto LABEL_32;
  }
  if (v11)
  {
LABEL_8:
    uint64_t v22 = sub_10017DF08(&qword_100E85F58);
    memcpy(v7, v8, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_39;
  }
  uint64_t v12 = type metadata accessor for LocationModel();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 32))(v7, v8, v12);
  uint64_t v13 = v9[5];
  uint64_t v14 = &v7[v13];
  uint64_t v15 = &v8[v13];
  *(void *)uint64_t v14 = *(void *)v15;
  v14[8] = v15[8];
  *(_OWORD *)&v7[v9[6]] = *(_OWORD *)&v8[v9[6]];
  uint64_t v16 = v9[7];
  char v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  uint64_t v19 = type metadata accessor for ListLocationRowPrimaryText(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v20))
    {
      uint64_t v21 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v20);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  uint64_t v38 = v9[8];
  uint64_t v39 = &v7[v38];
  uint64_t v40 = &v8[v38];
  long long v41 = *((_OWORD *)v40 + 1);
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  *((_OWORD *)v39 + 1) = v41;
  v39[32] = v40[32];
  v7[v9[9]] = v8[v9[9]];
  uint64_t v42 = v9[10];
  uint64_t v43 = &v7[v42];
  uint64_t v44 = &v8[v42];
  uint64_t v45 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45))
  {
    uint64_t v46 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v45);
  }
  uint64_t v47 = v9[11];
  uint64_t v48 = &v7[v47];
  uint64_t v49 = &v8[v47];
  uint64_t v50 = type metadata accessor for TimeZone();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v50))
  {
    uint64_t v51 = sub_10017DF08(&qword_100E6D1D8);
    memcpy(v48, v49, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v50);
  }
  *(_OWORD *)&v7[v9[12]] = *(_OWORD *)&v8[v9[12]];
  *(_OWORD *)&v7[v9[13]] = *(_OWORD *)&v8[v9[13]];
  v7[v9[14]] = v8[v9[14]];
  *(_OWORD *)&v7[v9[15]] = *(_OWORD *)&v8[v9[15]];
  *(_OWORD *)&v7[v9[16]] = *(_OWORD *)&v8[v9[16]];
  *(_OWORD *)&v7[v9[17]] = *(_OWORD *)&v8[v9[17]];
  *(_OWORD *)&v7[v9[18]] = *(_OWORD *)&v8[v9[18]];
  *(_OWORD *)&v7[v9[19]] = *(_OWORD *)&v8[v9[19]];
  *(_OWORD *)&v7[v9[20]] = *(_OWORD *)&v8[v9[20]];
  v7[v9[21]] = v8[v9[21]];
  uint64_t v52 = v9[22];
  uint64_t v53 = &v7[v52];
  uint64_t v54 = &v8[v52];
  uint64_t v55 = type metadata accessor for WeatherConditionBackgroundModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
  v7[v9[23]] = v8[v9[23]];
  v7[v9[24]] = v8[v9[24]];
  *(_OWORD *)&v7[v9[25]] = *(_OWORD *)&v8[v9[25]];
  *(void *)&v7[v9[26]] = *(void *)&v8[v9[26]];
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, (uint64_t)v9);
LABEL_39:
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  uint64_t v131 = a3[10];
  uint64_t v132 = (void *)(a1 + v131);
  uint64_t v133 = (uint64_t *)(a2 + v131);
  uint64_t v135 = *v133;
  uint64_t v134 = v133[1];
  *uint64_t v132 = v135;
  v132[1] = v134;
  swift_bridgeObjectRelease();
  uint64_t v136 = a3[11];
  uint64_t v137 = (void *)(a1 + v136);
  uint64_t v138 = (uint64_t *)(a2 + v136);
  uint64_t v140 = *v138;
  uint64_t v139 = v138[1];
  void *v137 = v140;
  v137[1] = v139;
  swift_bridgeObjectRelease();
  uint64_t v141 = a3[13];
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v141) = *(unsigned char *)(a2 + v141);
  uint64_t v142 = a3[14];
  uint64_t v143 = a1 + v142;
  uint64_t v144 = a2 + v142;
  *(unsigned char *)uint64_t v143 = *(unsigned char *)(a2 + v142);
  *(void *)(v143 + 8) = *(void *)(a2 + v142 + 8);
  swift_bridgeObjectRelease();
  uint64_t v145 = (int *)type metadata accessor for LearnMoreAttributorViewModel();
  uint64_t v146 = v145[6];
  uint64_t v147 = (void *)(v143 + v146);
  uint64_t v148 = (const void *)(v144 + v146);
  uint64_t v149 = type metadata accessor for URL();
  int v150 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v147, 1, v149);
  int v151 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v148, 1, v149);
  if (v150)
  {
    if (!v151)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v149 - 8) + 32))(v147, v148, v149);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v147, 0, 1, v149);
      goto LABEL_45;
    }
    goto LABEL_44;
  }
  uint64_t v152 = *(void *)(v149 - 8);
  if (v151)
  {
    (*(void (**)(void *, uint64_t))(v152 + 8))(v147, v149);
LABEL_44:
    uint64_t v153 = sub_10017DF08(&qword_100E749B0);
    memcpy(v147, v148, *(void *)(*(void *)(v153 - 8) + 64));
    goto LABEL_45;
  }
  (*(void (**)(void *, const void *, uint64_t))(v152 + 40))(v147, v148, v149);
LABEL_45:
  uint64_t v154 = v145[7];
  uint64_t v155 = (void *)(v143 + v154);
  uint64_t v156 = (uint64_t *)(v144 + v154);
  uint64_t v158 = *v156;
  uint64_t v157 = v156[1];
  *uint64_t v155 = v158;
  v155[1] = v157;
  swift_bridgeObjectRelease();
  *(void *)(v143 + v145[8]) = *(void *)(v144 + v145[8]);
  swift_release();
  *(void *)(a1 + a3[15]) = *(void *)(a2 + a3[15]);
  swift_bridgeObjectRelease();
  uint64_t v159 = a3[17];
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  uint64_t v160 = (void *)(a1 + v159);
  uint64_t v161 = (uint64_t *)(a2 + v159);
  uint64_t v163 = *v161;
  uint64_t v162 = v161[1];
  void *v160 = v163;
  v160[1] = v162;
  swift_bridgeObjectRelease();
  uint64_t v164 = a3[19];
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  *(unsigned char *)(a1 + v164) = *(unsigned char *)(a2 + v164);
  uint64_t v165 = a3[20];
  uint64_t v166 = a1 + v165;
  uint64_t v167 = a2 + v165;
  uint64_t v168 = type metadata accessor for ContentStatusBanner();
  int v169 = _s7Weather24LocationCompositionStateOwet_0(v166, 1, v168);
  int v170 = _s7Weather24LocationCompositionStateOwet_0(v167, 1, v168);
  if (v169)
  {
    if (!v170)
    {
      *(unsigned char *)uint64_t v166 = *(unsigned char *)v167;
      *(_OWORD *)(v166 + 8) = *(_OWORD *)(v167 + 8);
      uint64_t v171 = *(int *)(v168 + 24);
      uint64_t v172 = (void *)(v166 + v171);
      uint64_t v173 = (const void *)(v167 + v171);
      uint64_t v174 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v173, 1, v174))
      {
        uint64_t v175 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v172, v173, *(void *)(*(void *)(v175 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v174 - 8) + 32))(v172, v173, v174);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v172, 0, 1, v174);
      }
      uint64_t v181 = v166;
      uint64_t v182 = v168;
      goto LABEL_60;
    }
    goto LABEL_51;
  }
  if (v170)
  {
    sub_1007F87E4(v166, (void (*)(void))type metadata accessor for ContentStatusBanner);
LABEL_51:
    size_t v176 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63A10) - 8) + 64);
    int v177 = (void *)v166;
    size_t v178 = (const void *)v167;
    goto LABEL_52;
  }
  *(unsigned char *)uint64_t v166 = *(unsigned char *)v167;
  uint64_t v179 = (void *)(v167 + 8);
  if (*(void *)(v166 + 16) >= 2uLL)
  {
    unint64_t v180 = *(void *)(v167 + 16);
    if (v180 >= 2)
    {
      *(void *)(v166 + 8) = *v179;
      *(void *)(v166 + 16) = v180;
      swift_bridgeObjectRelease();
      goto LABEL_63;
    }
    sub_10027B4D4(v166 + 8);
  }
  *(_OWORD *)(v166 + 8) = *(_OWORD *)v179;
LABEL_63:
  uint64_t v187 = *(int *)(v168 + 24);
  uint64_t v188 = v166 + v187;
  uint64_t v189 = v167 + v187;
  uint64_t v190 = type metadata accessor for Date();
  int v191 = _s7Weather24LocationCompositionStateOwet_0(v188, 1, v190);
  int v192 = _s7Weather24LocationCompositionStateOwet_0(v189, 1, v190);
  if (v191)
  {
    if (!v192)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v190 - 8) + 32))(v188, v189, v190);
      uint64_t v181 = v188;
      uint64_t v182 = v190;
LABEL_60:
      _s7Weather24LocationCompositionStateOwst_0(v181, 0, 1, v182);
      goto LABEL_61;
    }
  }
  else
  {
    uint64_t v193 = *(void *)(v190 - 8);
    if (!v192)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v193 + 40))(v188, v189, v190);
      goto LABEL_61;
    }
    (*(void (**)(uint64_t, uint64_t))(v193 + 8))(v188, v190);
  }
  size_t v176 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
  int v177 = (void *)v188;
  size_t v178 = (const void *)v189;
LABEL_52:
  memcpy(v177, v178, v176);
LABEL_61:
  uint64_t v183 = a3[22];
  *(unsigned char *)(a1 + a3[21]) = *(unsigned char *)(a2 + a3[21]);
  uint64_t v184 = a1 + v183;
  uint64_t v185 = a2 + v183;
  *(unsigned char *)uint64_t v184 = *(unsigned char *)v185;
  *(unsigned char *)(v184 + 1) = *(unsigned char *)(v185 + 1);
  *(unsigned char *)(v184 + 2) = *(unsigned char *)(v185 + 2);
  *(void *)(v184 + 8) = *(void *)(v185 + 8);
  swift_release();
  return a1;
}

uint64_t sub_1007F9ED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007F9EE8);
}

uint64_t sub_1007F9EE8(uint64_t a1, uint64_t a2, int *a3)
{
  sub_10017DF08(&qword_100E85F58);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a3[8];
    goto LABEL_10;
  }
  if (a2 != 0x7FFFFFFF)
  {
    type metadata accessor for LearnMoreAttributorViewModel();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a2)
    {
      uint64_t v8 = v12;
      uint64_t v9 = a3[14];
    }
    else
    {
      uint64_t v8 = sub_10017DF08(&qword_100E63A10);
      uint64_t v9 = a3[20];
    }
LABEL_10:
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v9, a2, v8);
  }
  unint64_t v10 = *(void *)(a1 + a3[9]);
  if (v10 >= 0xFFFFFFFF) {
    LODWORD(v10) = -1;
  }
  return (v10 + 1);
}

void sub_1007F9FC4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_10017DF08(&qword_100E85F58);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a4[8];
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(void *)(a1 + a4[9]) = (a2 - 1);
      return;
    }
    type metadata accessor for LearnMoreAttributorViewModel();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v11 = a4[14];
    }
    else
    {
      uint64_t v10 = sub_10017DF08(&qword_100E63A10);
      uint64_t v11 = a4[20];
    }
  }

  _s7Weather24LocationCompositionStateOwst_0(a1 + v11, a2, a2, v10);
}

void *sub_1007FA09C()
{
  uint64_t v1 = type metadata accessor for ListLocationViewModel(0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  sub_1001626E0();
  uint64_t v5 = v4 - v3;
  uint64_t v6 = sub_10017DF08(&qword_100E85F58);
  __chkstk_darwin(v6 - 8);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = type metadata accessor for ListViewModel();
  sub_1001262FC(v0 + *(int *)(v10 + 32), v9, &qword_100E85F58);
  sub_10012B520(v9, 1, v1);
  if (v11)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
  }
  else
  {
    sub_10016EBB8(v9, v5, (void (*)(void))type metadata accessor for ListLocationViewModel);
    sub_10017DF08(&qword_100E97110);
    unint64_t v12 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    uint64_t v13 = (void *)swift_allocObject();
    *((_OWORD *)v13 + 1) = xmmword_100C251B0;
    sub_10016EBB8(v5, (uint64_t)v13 + v12, (void (*)(void))type metadata accessor for ListLocationViewModel);
  }
  uint64_t v14 = swift_bridgeObjectRetain();
  sub_10037FF08(v14);
  return v13;
}

BOOL sub_1007FA254(uint64_t a1, uint64_t a2)
{
  uint64_t v99 = type metadata accessor for ContentStatusBanner();
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v95 = (unsigned __int8 *)v5;
  uint64_t v6 = sub_10017DF08(&qword_100E64F30);
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v100 = v8;
  uint64_t v9 = sub_10017DF08(&qword_100E63A10);
  __chkstk_darwin(v9 - 8);
  uint64_t v96 = (unsigned __int8 *)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v97 = (uint64_t)&v93 - v12;
  __chkstk_darwin(v13);
  uint64_t v98 = (uint64_t)&v93 - v14;
  uint64_t v15 = type metadata accessor for ListLocationViewModel(0);
  sub_100162E4C();
  __chkstk_darwin(v16);
  sub_1001626E0();
  uint64_t v19 = v18 - v17;
  uint64_t v20 = sub_10017DF08(&qword_100E97E50);
  sub_100162E4C();
  __chkstk_darwin(v21);
  sub_1001626E0();
  uint64_t v24 = v23 - v22;
  uint64_t v25 = sub_10017DF08(&qword_100E85F58);
  __chkstk_darwin(v25 - 8);
  uint64_t v27 = (char *)&v93 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v93 - v29;
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)&v93 - v32;
  char v34 = *(unsigned char *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    if ((*(unsigned char *)(a2 + 8) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*(void *)a1 != *(void *)a2) {
      char v34 = 1;
    }
    if (v34) {
      return 0;
    }
  }
  if (*(unsigned __int8 *)(a1 + 9) != *(unsigned __int8 *)(a2 + 9)
    || *(unsigned __int8 *)(a1 + 10) != *(unsigned __int8 *)(a2 + 10)
    || (sub_100222164(*(unsigned char *)(a1 + 11), *(unsigned char *)(a2 + 11)) & 1) == 0)
  {
    return 0;
  }
  uint64_t v93 = v6;
  uint64_t v35 = type metadata accessor for ListViewModel();
  sub_1001262FC(a1 + *(int *)(v35 + 32), (uint64_t)v33, &qword_100E85F58);
  uint64_t v94 = (int *)v35;
  sub_1001262FC(a2 + *(int *)(v35 + 32), (uint64_t)v30, &qword_100E85F58);
  uint64_t v36 = v24 + *(int *)(v20 + 48);
  sub_1001262FC((uint64_t)v33, v24, &qword_100E85F58);
  sub_1001262FC((uint64_t)v30, v36, &qword_100E85F58);
  sub_10012B520(v24, 1, v15);
  if (v37)
  {
    sub_1001781AC((uint64_t)v30, &qword_100E85F58);
    sub_1001781AC((uint64_t)v33, &qword_100E85F58);
    sub_10012B520(v36, 1, v15);
    if (v37)
    {
      sub_1001781AC(v24, &qword_100E85F58);
      goto LABEL_21;
    }
LABEL_18:
    uint64_t v38 = &qword_100E97E50;
    uint64_t v39 = v24;
LABEL_19:
    sub_1001781AC(v39, v38);
    return 0;
  }
  sub_1001262FC(v24, (uint64_t)v27, &qword_100E85F58);
  sub_10012B520(v36, 1, v15);
  if (v37)
  {
    sub_1001781AC((uint64_t)v30, &qword_100E85F58);
    sub_1001781AC((uint64_t)v33, &qword_100E85F58);
    sub_1007F87E4((uint64_t)v27, (void (*)(void))type metadata accessor for ListLocationViewModel);
    goto LABEL_18;
  }
  sub_10016EBB8(v36, v19, (void (*)(void))type metadata accessor for ListLocationViewModel);
  sub_100B755A4();
  char v41 = v40;
  sub_1007F87E4(v19, (void (*)(void))type metadata accessor for ListLocationViewModel);
  sub_1001781AC((uint64_t)v30, &qword_100E85F58);
  sub_1001781AC((uint64_t)v33, &qword_100E85F58);
  sub_1007F87E4((uint64_t)v27, (void (*)(void))type metadata accessor for ListLocationViewModel);
  sub_1001781AC(v24, &qword_100E85F58);
  if ((v41 & 1) == 0) {
    return 0;
  }
LABEL_21:
  uint64_t v42 = v94;
  sub_100BDD63C();
  if ((v43 & 1) == 0) {
    return 0;
  }
  uint64_t v44 = v42[10];
  uint64_t v45 = *(void *)(a1 + v44);
  uint64_t v46 = *(void *)(a1 + v44 + 8);
  uint64_t v47 = (void *)(a2 + v44);
  if (v45 != *v47 || v46 != v47[1])
  {
    char v49 = _stringCompareWithSmolCheck(_:_:expecting:)();
    BOOL v50 = 0;
    if ((v49 & 1) == 0) {
      return v50;
    }
  }
  sub_10017CDEC();
  if (v51)
  {
    if (!v52) {
      return 0;
    }
    if (*v53 != *v54 || v51 != v52)
    {
      char v56 = _stringCompareWithSmolCheck(_:_:expecting:)();
      BOOL v50 = 0;
      if ((v56 & 1) == 0) {
        return v50;
      }
    }
  }
  else if (v52)
  {
    return 0;
  }
  sub_10011C778();
  if (!v37) {
    return 0;
  }
  sub_10011C778();
  if (!v37) {
    return 0;
  }
  if ((sub_10004D0EC((unsigned __int8 *)(a1 + v42[14]), (unsigned __int8 *)(a2 + v42[14])) & 1) == 0) {
    return 0;
  }
  sub_1002E6C54();
  if ((v57 & 1) == 0) {
    return 0;
  }
  sub_10011C778();
  if (!v37) {
    return 0;
  }
  sub_10017CDEC();
  if (v59)
  {
    if (!v60) {
      return 0;
    }
    BOOL v63 = *v61 == *v62 && v59 == v60;
    uint64_t v42 = v94;
    if (!v63)
    {
      char v64 = _stringCompareWithSmolCheck(_:_:expecting:)();
      BOOL v50 = 0;
      if ((v64 & 1) == 0) {
        return v50;
      }
    }
  }
  else if (v60)
  {
    return 0;
  }
  uint64_t v65 = v42[18];
  char v66 = *(unsigned char *)(a2 + v65);
  unint64_t v67 = LocationAuthorizationState.rawValue.getter(*(unsigned char *)(a1 + v65));
  uint64_t v69 = v68;
  if (v67 == LocationAuthorizationState.rawValue.getter(v66) && v69 == v70)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v72 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL v50 = 0;
    if ((v72 & 1) == 0) {
      return v50;
    }
  }
  sub_10011C778();
  if (!v37) {
    return 0;
  }
  uint64_t v73 = v94;
  uint64_t v74 = v98;
  sub_1001262FC(a1 + v94[20], v98, &qword_100E63A10);
  uint64_t v75 = v97;
  sub_1001262FC(a2 + v73[20], v97, &qword_100E63A10);
  uint64_t v76 = v100;
  uint64_t v77 = v100 + *(int *)(v93 + 48);
  sub_1001262FC(v74, v100, &qword_100E63A10);
  sub_1001262FC(v75, v77, &qword_100E63A10);
  sub_10012B520(v76, 1, v99);
  if (!v37)
  {
    sub_1001262FC(v100, (uint64_t)v96, &qword_100E63A10);
    sub_10012B520(v77, 1, v99);
    if (!v78)
    {
      int v79 = v95;
      sub_10016EBB8(v77, (uint64_t)v95, (void (*)(void))type metadata accessor for ContentStatusBanner);
      uint64_t v80 = v96;
      BOOL v81 = sub_1001C6EF8(v96, v79);
      sub_1007F87E4((uint64_t)v79, (void (*)(void))type metadata accessor for ContentStatusBanner);
      sub_1001781AC(v97, &qword_100E63A10);
      sub_1001781AC(v98, &qword_100E63A10);
      sub_1007F87E4((uint64_t)v80, (void (*)(void))type metadata accessor for ContentStatusBanner);
      sub_1001781AC(v100, &qword_100E63A10);
      if (!v81) {
        return 0;
      }
      goto LABEL_73;
    }
    sub_1001781AC(v97, &qword_100E63A10);
    sub_1001781AC(v98, &qword_100E63A10);
    sub_1007F87E4((uint64_t)v96, (void (*)(void))type metadata accessor for ContentStatusBanner);
    goto LABEL_71;
  }
  sub_1001781AC(v97, &qword_100E63A10);
  sub_1001781AC(v98, &qword_100E63A10);
  sub_10012B520(v77, 1, v99);
  if (!v37)
  {
LABEL_71:
    uint64_t v38 = &qword_100E64F30;
    uint64_t v39 = v100;
    goto LABEL_19;
  }
  sub_1001781AC(v100, &qword_100E63A10);
LABEL_73:
  sub_10011C778();
  if (!v37) {
    return 0;
  }
  uint64_t v82 = v94[22];
  int v83 = *(unsigned __int8 *)(a1 + v82);
  int v84 = *(unsigned __int8 *)(a1 + v82 + 1);
  int v85 = *(unsigned __int8 *)(a1 + v82 + 2);
  uint64_t v86 = *(void *)(a1 + v82 + 8);
  uint64_t v87 = (unsigned __int8 *)(a2 + v82);
  int v88 = *v87;
  int v89 = v87[2];
  uint64_t v90 = *((void *)v87 + 1);
  if (v84) {
    int v91 = 256;
  }
  else {
    int v91 = 0;
  }
  if (v87[1]) {
    int v92 = 256;
  }
  else {
    int v92 = 0;
  }
  return sub_100487A8C(v91 | v83 | (v85 << 16), v86, v92 | v88 | (v89 << 16), v90);
}

uint64_t sub_1007FAAC4@<X0>(uint64_t *a1@<X8>)
{
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C34240;
  sub_100162AD8();
  *(void *)(v4 + 32) = 0xD000000000000013;
  *(void *)(v4 + 40) = v5;
  char v6 = *(unsigned char *)(v1 + 8);
  *(void *)(v4 + 48) = *(void *)v1;
  *(unsigned char *)(v4 + 56) = v6;
  *(void *)(v4 + 72) = &unk_100E25E00;
  *(void *)(v4 + 80) = 0xD000000000000018;
  sub_100162AD8();
  *(void *)(v7 + 88) = v8;
  *(unsigned char *)(v7 + 96) = *(unsigned char *)(v1 + 9);
  *(void *)(v7 + 120) = &type metadata for Bool;
  *(void *)(v7 + 128) = 0xD00000000000001CLL;
  sub_100162AD8();
  *(void *)(v9 + 136) = v10;
  if (*(unsigned char *)(v1 + 10))
  {
    if (*(unsigned char *)(v1 + 10) == 1)
    {
      unint64_t v11 = 0xEE006465696E6544;
      unint64_t v12 = 0x6E6F697461636F6CLL;
    }
    else
    {
      sub_100162AD8();
      unint64_t v12 = 0xD000000000000013;
    }
  }
  else
  {
    unint64_t v11 = 0xE600000000000000;
    unint64_t v12 = 0x6E6564646968;
  }
  *(void *)(inited + 144) = v12;
  *(void *)(inited + 152) = v11;
  *(void *)(inited + 168) = &type metadata for String;
  *(void *)(inited + 176) = 0x6863726165537369;
  *(void *)(inited + 184) = 0xEB00000000676E69;
  uint64_t v13 = (int *)type metadata accessor for ListViewModel();
  *(unsigned char *)(inited + 192) = *(unsigned char *)(v1 + v13[12]);
  *(void *)(inited + 216) = &type metadata for Bool;
  *(void *)(inited + 224) = 0x72656767697274;
  *(void *)(inited + 232) = 0xE700000000000000;
  *(unsigned char *)(inited + 240) = *(unsigned char *)(v1 + v13[16]);
  *(void *)(inited + 264) = &type metadata for ListSessionTrigger;
  *(void *)(inited + 272) = 0x697469736E617274;
  *(void *)(inited + 280) = 0xEF6449676E696E6FLL;
  uint64_t v14 = (uint64_t *)(v1 + v13[17]);
  unint64_t v15 = v14[1];
  if (v15) {
    uint64_t v16 = *v14;
  }
  else {
    uint64_t v16 = 0;
  }
  unint64_t v17 = 0xE000000000000000;
  if (v15) {
    unint64_t v17 = v15;
  }
  *(void *)(inited + 288) = v16;
  *(void *)(inited + 296) = v17;
  *(void *)(inited + 312) = &type metadata for String;
  *(void *)(inited + 320) = 0xD000000000000016;
  sub_100162AD8();
  *(void *)(inited + 328) = v18;
  *(unsigned char *)(inited + 336) = *(unsigned char *)(v1 + v13[18]);
  *(void *)(inited + 360) = &type metadata for LocationAuthorizationState;
  *(void *)(inited + 368) = 0xD00000000000001FLL;
  sub_100162AD8();
  *(void *)(inited + 376) = v19;
  LOBYTE(v19) = *(unsigned char *)(v1 + v13[19]);
  *(void *)(inited + 408) = &type metadata for Bool;
  *(unsigned char *)(inited + 384) = v19;
  swift_bridgeObjectRetain();
  Dictionary.init(dictionaryLiteral:)();
  a1[3] = sub_10017DF08(&qword_100E97E58);
  a1[4] = sub_1007FAE10();
  sub_100170694(a1);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_1007FAD84()
{
  sub_1007FAE64(&qword_100E97E68);

  return ShortDescribable.description.getter();
}

uint64_t sub_1007FADDC()
{
  return sub_1007FAE64(&qword_100E97E48);
}

unint64_t sub_1007FAE10()
{
  unint64_t result = qword_100E97E60;
  if (!qword_100E97E60)
  {
    sub_10018C6DC(&qword_100E97E58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E97E60);
  }
  return result;
}

uint64_t sub_1007FAE64(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ListViewModel();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1007FAEC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SavedLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1007FAF28(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(&qword_100E97F18);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1007FAF70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100656C54(a1, a2);
}

uint64_t sub_1007FAF94(unint64_t a1, uint64_t a2)
{
  void (*v10)(unint64_t *__return_ptr, unint64_t *, uint64_t);
  unint64_t v11;
  unint64_t v13;
  unint64_t v14;

  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v7 = v5 + 40;
    uint64_t v8 = v6 - 1;
    unint64_t v9 = 1;
    while (1)
    {
      uint64_t v10 = *(void (**)(unint64_t *__return_ptr, unint64_t *, uint64_t))(v7 - 8);
      uint64_t v13 = a1;
      swift_retain();
      v10(&v14, &v13, a2);
      swift_release();
      unint64_t v11 = v14;
      if (v14 != 1)
      {
        if (!v14)
        {
          swift_release();
          swift_bridgeObjectRelease();
          sub_1007FD218(v9);
          return 0;
        }
        swift_release();
        sub_1007FD218(v9);
        a1 = v11;
        unint64_t v9 = v11;
      }
      sub_1007FD208(v11);
      if (!v8)
      {
        swift_release();
        swift_bridgeObjectRelease();
        return v9;
      }
      v7 += 16;
      --v8;
    }
  }
  return 1;
}

void sub_1007FB0B8()
{
  type metadata accessor for URL();
  sub_10017C83C();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_10016279C();
  UnfairLock.lock()();
  uint64_t v4 = self;
  id v5 = [v4 defaultManager];
  sub_1007FC544(v0);
  URL.path.getter();
  uint64_t v6 = *(void (**)(void))(v2 + 8);
  sub_100164F40();
  v6();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v8 = [v5 fileExistsAtPath:v7];

  if (v8)
  {
    id v9 = [v4 defaultManager];
    sub_1007FC544(v0);
    URL._bridgeToObjectiveC()(v10);
    unint64_t v12 = v11;
    sub_100164F40();
    v6();
    id v32 = 0;
    unsigned int v13 = [v9 removeItemAtURL:v12 error:&v32];

    id v14 = v32;
    if (v13)
    {
      if (qword_100E627C8 != -1) {
        swift_once();
      }
      uint64_t v15 = type metadata accessor for Logger();
      sub_1002102B0(v15, (uint64_t)qword_100F51E70);
      uint64_t v16 = Logger.logObject.getter();
      os_log_type_t v17 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v18 = 0;
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "Removed state file", v18, 2u);
        swift_slowDealloc();
      }
    }
    else
    {
      uint64_t v19 = v14;
      uint64_t v20 = (void *)_convertNSErrorToError(_:)();

      swift_willThrow();
      id v32 = v20;
      sub_10017DF08(&qword_100E77F30);
      sub_1001ABC4C(0, &qword_100E981D0);
      swift_dynamicCast();
      if (qword_100E627C8 != -1) {
        swift_once();
      }
      uint64_t v21 = type metadata accessor for Logger();
      sub_1002102B0(v21, (uint64_t)qword_100F51E70);
      id v22 = v31;
      uint64_t v23 = Logger.logObject.getter();
      os_log_type_t v24 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = (uint8_t *)swift_slowAlloc();
        uint64_t v33 = swift_slowAlloc();
        *(_DWORD *)uint64_t v25 = 136446210;
        id v26 = v22;
        id v27 = [v26 description];
        uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v30 = v29;

        sub_10016414C(v28, v30, &v33);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "Failed to delete state file with error: %{public}s", v25, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      swift_errorRelease();
    }
  }
  UnfairLock.unlock()();
}

uint64_t sub_1007FB54C()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  NSString v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1001AB118();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    id v17 = *(id *)(Strong + 80);
    swift_release();
    uint64_t v10 = swift_allocObject();
    uint64_t v16 = v1;
    uint64_t v18 = v4;
    uint64_t v11 = v10;
    swift_beginAccess();
    swift_weakLoadStrong();
    swift_weakInit();
    swift_release();
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v11;
    *(void *)(v12 + 24) = v8;
    aBlock[4] = sub_1007FD1FC;
    void aBlock[5] = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10010A4D4;
    aBlock[3] = &unk_100E28BF8;
    unsigned int v13 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    static DispatchQoS.unspecified.getter();
    uint64_t v19 = _swiftEmptyArrayStorage;
    sub_1001A58D4((unint64_t *)&qword_100EA0200, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10017DF08(&qword_100E75530);
    sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    id v14 = v17;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v13);

    (*(void (**)(char *, uint64_t))(v16 + 8))(v3, v0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v18);
    swift_release();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1007FB8DC(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = sub_10017DF08(&qword_100E981C0);
  __chkstk_darwin(v3);
  uint64_t v5 = (uint64_t *)((char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_10017DF08(&qword_100E981C8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for MainStateProcessingContext();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v13 = result;
    id v14 = *(void (**)(uint64_t))(result + 40);
    uint64_t v15 = swift_retain();
    v14(v15);
    swift_release();
    sub_1001666D4((uint64_t)v11, (uint64_t)v8);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v9);
    unint64_t v16 = sub_1007FAF94(a2, (uint64_t)v8);
    sub_1001781AC((uint64_t)v8, &qword_100E981C8);
    if (v16 == 1)
    {
      uint64_t v17 = *(void *)(v13 + 64);
      uint64_t v18 = *(void *)(v13 + 72);
      sub_1001666D4((uint64_t)v11, (uint64_t)v5 + *(int *)(v3 + 72));
      v5[1] = v18;
      _OWORD v5[2] = a2;
      *uint64_t v5 = v17;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_1007FC6FC();
      swift_release();
      sub_1001781AC((uint64_t)v5, &qword_100E981C0);
    }
    else if (v16)
    {
      uint64_t v19 = *(void *)(v13 + 64);
      uint64_t v20 = *(void *)(v13 + 72);
      sub_1001666D4((uint64_t)v11, (uint64_t)v5 + *(int *)(v3 + 72));
      v5[1] = v20;
      _OWORD v5[2] = v16;
      *uint64_t v5 = v19;
      sub_1007FD208(v16);
      sub_1007FD208(v16);
      swift_bridgeObjectRetain();
      sub_1007FC6FC();
      swift_release();
      sub_1001781AC((uint64_t)v5, &qword_100E981C0);
      sub_1007FD218(v16);
      sub_1007FD218(v16);
    }
    else
    {
      sub_1007FB0B8();
      swift_release();
    }
    return sub_100158F34((uint64_t)v11, (void (*)(void))type metadata accessor for MainStateProcessingContext);
  }
  return result;
}

uint64_t sub_1007FBBCC@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  if (qword_100E624D8 != -1) {
    swift_once();
  }
  char v2 = SettingReader.isEnabled(_:with:)();
  uint64_t result = swift_release();
  *(void *)(a1 + 24) = &type metadata for AutomationInfoSetting;
  *(void *)(a1 + 32) = &off_100E2C0F8;
  *(unsigned char *)a1 = v2 & 1;
  return result;
}

uint64_t sub_1007FBC70()
{
  return sub_1004D783C();
}

uint64_t sub_1007FBC98@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for WeatherService();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v5 = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98008);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v13)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B60);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v11)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6FC60);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v9)
  {
    uint64_t v6 = type metadata accessor for GeocodeWeatherService();
    swift_allocObject();
    uint64_t v7 = sub_100B48CA8(v5, &v12, &v10, &v8);
    a2[3] = v6;
    uint64_t result = sub_1001A58D4(&qword_100E98180, 255, (void (*)(uint64_t))type metadata accessor for GeocodeWeatherService);
    a2[4] = result;
    *a2 = v7;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

char *sub_1007FBE60(void *a1)
{
  void (*v7)(uint64_t *__return_ptr);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = (char *)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v7)
  {
    __break(1u);
    goto LABEL_6;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = (char *)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v5)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B60);
  uint64_t result = (char *)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v4[3])
  {
    id v3 = objc_allocWithZone((Class)type metadata accessor for DebugOfflineViewController());
    return sub_100405BA4(v7, v8, v9, v10, v5, v6, v4);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1007FBFA0(uint64_t a1)
{
  uint64_t v24 = a1;
  uint64_t v25 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  id v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E76CF8);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v24 - v12;
  type metadata accessor for MockServer();
  static MockServer.shared.getter();
  uint64_t v14 = MockServer.listeningPort.getter();
  char v16 = v15;
  swift_release();
  if (v16)
  {
    EndpointConfiguration.weatherDataURL.getter();
    URLComponents.init(url:resolvingAgainstBaseURL:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    static Logger.automation.getter();
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v19 = 0;
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "Failed to get port from mock server", v19, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v25);
    sub_10006DF38((uint64_t)v13, (uint64_t)v11, &qword_100E76CF8);
    uint64_t v20 = type metadata accessor for URLComponents();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v20) == 1)
    {
      sub_1001781AC((uint64_t)v13, &qword_100E76CF8);
      sub_1001781AC((uint64_t)v11, &qword_100E76CF8);
      return 0;
    }
    else
    {
      uint64_t v14 = URLComponents.port.getter();
      char v22 = v21;
      sub_1001781AC((uint64_t)v13, &qword_100E76CF8);
      (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v11, v20);
      if (v22) {
        return 0;
      }
    }
  }
  return v14;
}

uint64_t sub_1007FC2F0()
{
  return GeocodeStore.init()();
}

uint64_t sub_1007FC328(void *a1)
{
  return sub_10000F374(a1, (void (*)(void))type metadata accessor for VisibleLocationWeatherLoadMonitor, (void (*)(uint64_t))type metadata accessor for VisibleLocationWeatherLoadStoreObserver);
}

uint64_t sub_1007FC354@<X0>(unsigned char *a1@<X8>)
{
  type metadata accessor for Capabilities();
  uint64_t result = static Capabilities.isInternalBuild()();
  if (result)
  {
    if (qword_100E62470 != -1) {
      swift_once();
    }
    sub_1001A58D4(&qword_100E980F0, v3, (void (*)(uint64_t))type metadata accessor for MainAssembly);
    uint64_t result = Configurable.setting<A>(_:)();
    char v4 = v5;
  }
  else
  {
    char v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_1007FC458@<X0>(unsigned char *a1@<X8>)
{
  return sub_1007FC354(a1);
}

uint64_t sub_1007FC47C(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 24) == 2) {
    return 1;
  }
  uint64_t v1 = a1;
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1002D8B5C();
    uint64_t v3 = v2;
    swift_release();
    uint64_t v1 = v3;
  }
  *(unsigned char *)(v1 + 24) = 2;
  return v1;
}

uint64_t sub_1007FC4E4(uint64_t a1)
{
  swift_retain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1002D8B5C();
    uint64_t v3 = v2;
    swift_release();
    a1 = v3;
  }
  *(void *)(a1 + 16) = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1007FC544@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10017DF08(&qword_100E749B0);
  __chkstk_darwin(v3 - 8);
  char v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v8 = &v12[-v7];
  uint64_t v9 = v1 + qword_100EB1940;
  swift_beginAccess();
  sub_10006DF38(v9, (uint64_t)v8, &qword_100E749B0);
  uint64_t v10 = type metadata accessor for URL();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10) != 1) {
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, v8, v10);
  }
  sub_1001781AC((uint64_t)v8, &qword_100E749B0);
  sub_100B2D664();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v5, a1, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 0, 1, v10);
  swift_beginAccess();
  sub_100330DA8((uint64_t)v5, v9);
  return swift_endAccess();
}

void sub_1007FC6FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v24 - v7;
  uint64_t v9 = *(void *)(v0 + qword_100EB1960);
  UnfairLock.lock()();
  if (*(unsigned char *)(v1 + 16) == 1)
  {
    uint64_t v30 = v9;
    *(unsigned char *)(v1 + qword_100EB1958) = 1;
    type metadata accessor for BinaryEncoder();
    sub_10017DF08(&qword_100E981C0);
    sub_1001246C8(&qword_100E981D8, &qword_100E981C0);
    sub_1001246C8(&qword_100E981E0, &qword_100E981C0);
    uint64_t v10 = static BinaryEncoder.encode<A>(_:)();
    uint64_t v29 = v3;
    uint64_t v11 = *(void (**)(uint64_t, unint64_t, char *))(v1 + qword_100EB1968);
    unint64_t v13 = v12;
    uint64_t v14 = v10;
    swift_retain();
    sub_1007FC544((uint64_t)v8);
    v11(v14, v13, v8);
    uint64_t v28 = *(void (**)(char *, uint64_t))(v29 + 8);
    v29 += 8;
    v28(v8, v2);
    swift_release();
    if (qword_100E627C8 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_1002102B0(v15, (uint64_t)qword_100F51E70);
    swift_retain_n();
    uint64_t v16 = v14;
    sub_1007FD228(v14, v13);
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    int v19 = v18;
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v32 = v27;
      *(_DWORD *)uint64_t v20 = 134349314;
      int v25 = v19;
      uint64_t v31 = Data.count.getter() / 1024;
      unint64_t v26 = v13;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_100318440(v16, v13);
      *(_WORD *)(v20 + 12) = 2082;
      uint64_t v24 = v20 + 14;
      sub_1007FC544((uint64_t)v5);
      sub_1001A58D4(&qword_100E6D580, 255, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v23 = v22;
      v28(v5, v2);
      uint64_t v31 = sub_10016414C(v21, v23, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v25, "Save state to disk with size %{public}ld kb to file %{public}s", (uint8_t *)v20, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_100318440(v16, v26);
    }
    else
    {
      sub_100318440(v16, v13);
      sub_100318440(v16, v13);

      swift_release_n();
    }
  }
  UnfairLock.unlock()();
}

uint64_t sub_1007FCD44(uint64_t a1, unint64_t *a2)
{
  return sub_1007FB8DC(a1, *a2);
}

uint64_t sub_1007FCD4C(uint64_t a1)
{
  sub_10018048C(a1);
  uint64_t result = sub_1000F0AB0();
  *uint64_t v1 = result;
  return result;
}

uint64_t sub_1007FCD74@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1000DA114(a1, a2, a3, a4);
}

uint64_t sub_1007FCD7C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_1007FC4DC(*a1, a2, *a3);
  *a4 = result;
  return result;
}

uint64_t sub_1007FCDAC()
{
  type metadata accessor for EndpointConfiguration();
  sub_100162E4C();
  (*(void (**)(unint64_t))(v1 + 8))(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));

  return swift_deallocObject();
}

uint64_t sub_1007FCE34()
{
  uint64_t v1 = *(void *)(type metadata accessor for EndpointConfiguration() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_1007FBFA0(v2);
}

uint64_t sub_1007FCE98(uint64_t a1)
{
  uint64_t v2 = sub_10018048C(a1);
  uint64_t result = sub_1007FC53C(v2);
  *uint64_t v1 = result;
  return result;
}

uint64_t sub_1007FCEC0(uint64_t a1)
{
  uint64_t v2 = sub_10018048C(a1);
  uint64_t result = sub_1007FC4E4(v2);
  *uint64_t v1 = result;
  return result;
}

uint64_t sub_1007FCEE8(uint64_t a1)
{
  uint64_t v2 = sub_10018048C(a1);
  uint64_t result = sub_1007FC4E0(v2);
  *uint64_t v1 = result;
  return result;
}

uint64_t sub_1007FCF10()
{
  return swift_deallocObject();
}

uint64_t sub_1007FCF20@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1007FCD7C(a1, a2, (void *)(v3 + 16), a3);
}

uint64_t sub_1007FCF28(uint64_t a1)
{
  uint64_t v2 = sub_10018048C(a1);
  uint64_t result = sub_1007FC47C(v2);
  *uint64_t v1 = result;
  return result;
}

uint64_t sub_1007FCF50(uint64_t a1)
{
  uint64_t v2 = sub_10018048C(a1);
  uint64_t result = sub_1007FC478(v2);
  *uint64_t v1 = result;
  return result;
}

uint64_t sub_1007FCF78(uint64_t a1)
{
  uint64_t v2 = sub_10018048C(a1);
  uint64_t result = sub_1007FC474(v2);
  *uint64_t v1 = result;
  return result;
}

uint64_t sub_1007FCFA0(uint64_t a1)
{
  uint64_t v2 = sub_10018048C(a1);
  uint64_t result = sub_1007FC470(v2);
  *uint64_t v1 = result;
  return result;
}

uint64_t sub_1007FCFC8(uint64_t a1)
{
  uint64_t v2 = sub_10018048C(a1);
  uint64_t result = sub_1007FC46C(v2);
  *uint64_t v1 = result;
  return result;
}

uint64_t sub_1007FCFF0(uint64_t a1)
{
  uint64_t v2 = sub_10018048C(a1);
  uint64_t result = sub_1007FC468(v2);
  *uint64_t v1 = result;
  return result;
}

uint64_t sub_1007FD018(uint64_t a1)
{
  uint64_t v2 = sub_10018048C(a1);
  uint64_t result = sub_1007FC464(v2);
  *uint64_t v1 = result;
  return result;
}

uint64_t sub_1007FD040(uint64_t a1)
{
  uint64_t v2 = sub_10018048C(a1);
  uint64_t result = sub_1007FC460(v2);
  *uint64_t v1 = result;
  return result;
}

uint64_t sub_1007FD068()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_1007FD0A0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1007FD0D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1007FAF70(a1, a2);
}

uint64_t sub_1007FD0E8()
{
  return 24;
}

__n128 sub_1007FD0F4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_1007FD108()
{
  swift_release();
  if (*(void *)(v0 + 48)) {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 24);
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1007FD168()
{
  return sub_1007FBC70();
}

uint64_t sub_1007FD174()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1007FD1B0()
{
  return sub_1007FB54C();
}

uint64_t sub_1007FD1BC()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1007FD1FC()
{
  return sub_1007FCD44(*(void *)(v0 + 16), (unint64_t *)(v0 + 24));
}

unint64_t sub_1007FD208(unint64_t result)
{
  if (result >= 2) {
    return swift_retain();
  }
  return result;
}

unint64_t sub_1007FD218(unint64_t result)
{
  if (result >= 2) {
    return swift_release();
  }
  return result;
}

uint64_t sub_1007FD228(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_1007FD280()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1007FD2DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  BOOL v9 = (a1 & 0xFE) != 2;
  BOOL v10 = (a1 & 1) == 0;
  char v12 = v9 && v10;
  BOOL v11 = !v9 || !v10;
  unint64_t v13 = 0xD00000000000001DLL;
  if (!v11) {
    unint64_t v13 = 0xD00000000000001ELL;
  }
  unint64_t v29 = v13;
  unint64_t v14 = 0x8000000100C97430;
  if (!v11) {
    unint64_t v14 = 0x8000000100C97450;
  }
  unint64_t v28 = v14;
  if (v11) {
    double v15 = 33.0;
  }
  else {
    double v15 = 40.0;
  }
  uint64_t v16 = sub_100323474();
  uint64_t v18 = v17;
  uint64_t v19 = sub_100323514(*(unsigned __int8 *)(v6 + 16), a1, v12);
  uint64_t v21 = v20;
  uint64_t v22 = sub_10032362C();
  uint64_t v24 = v23;
  char v25 = *(unsigned char *)(v6 + 17);
  unint64_t v26 = (uint64_t *)(a6 + *(int *)(type metadata accessor for TipView(0) + 32));
  *unint64_t v26 = swift_getKeyPath();
  sub_10017DF08(&qword_100E62CB8);
  swift_storeEnumTagMultiPayload();
  *(void *)(a6 + 32) = v29;
  *(void *)(a6 + 40) = v28;
  *(unsigned char *)(a6 + 48) = v12 & 1;
  *(void *)(a6 + 56) = v16;
  *(void *)(a6 + 64) = v18;
  *(void *)(a6 + 72) = v19;
  *(void *)(a6 + 80) = v21;
  *(void *)(a6 + 88) = v22;
  *(void *)(a6 + 96) = v24;
  *(unsigned char *)a6 = v25;
  *(double *)(a6 + 8) = v15;
  *(void *)(a6 + 16) = 0;
  *(_WORD *)(a6 + 24) = 0;
  *(void *)(a6 + 104) = a2;
  *(void *)(a6 + 112) = a3;
  *(void *)(a6 + 120) = a4;
  *(void *)(a6 + 128) = a5;
  swift_retain();

  return swift_retain();
}

uint64_t sub_1007FD470()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NotificationsOptInTipViewFactory()
{
  return self;
}

uint64_t sub_1007FD4AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4) {
    return 1;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

uint64_t sub_1007FD4C8()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1007FD524(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6156676E69727473 && a2 == 0xEB0000000065756CLL)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1007FD5C4()
{
  return 0x6156676E69727473;
}

uint64_t sub_1007FD5E4(void *a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E982B8);
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(a1, a1[3]);
  sub_1007FDA9C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encode(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v2);
}

Swift::Int sub_1007FD6F8()
{
  return Hasher._finalize()();
}

uint64_t sub_1007FD758(void *a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E982A8);
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t)sub_1001B1E64(a1, a1[3]);
  sub_1007FDA9C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v1)
  {
    uint64_t v9 = KeyedDecodingContainer.decode(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  return v9;
}

uint64_t sub_1007FD88C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1007FD524(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1007FD8B8(uint64_t a1)
{
  unint64_t v2 = sub_1007FDA9C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1007FD8F4(uint64_t a1)
{
  unint64_t v2 = sub_1007FDA9C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1007FD930@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1008BD428();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
  }
  return result;
}

uint64_t sub_1007FD95C()
{
  return sub_1008BD440();
}

uint64_t sub_1007FD978@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1007FD758(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1007FD9A4(void *a1)
{
  return sub_1007FD5E4(a1);
}

uint64_t sub_1007FD9C0(uint64_t *a1, uint64_t *a2)
{
  return sub_1007FD4AC(*a1, a1[1], *a2, a2[1]);
}

Swift::Int sub_1007FD9D4()
{
  return sub_1007FD6F8();
}

uint64_t sub_1007FD9DC()
{
  return sub_1007FD4C8();
}

ValueMetadata *type metadata accessor for ConditionsChartID()
{
  return &type metadata for ConditionsChartID;
}

unint64_t sub_1007FD9F8()
{
  unint64_t result = qword_100E982A0;
  if (!qword_100E982A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E982A0);
  }
  return result;
}

Swift::Int sub_1007FDA44()
{
  return Hasher._finalize()();
}

unint64_t sub_1007FDA9C()
{
  unint64_t result = qword_100E982B0;
  if (!qword_100E982B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E982B0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ConditionsChartID.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1007FDB84);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ConditionsChartID.CodingKeys()
{
  return &type metadata for ConditionsChartID.CodingKeys;
}

unint64_t sub_1007FDBC0()
{
  unint64_t result = qword_100E982C0;
  if (!qword_100E982C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E982C0);
  }
  return result;
}

unint64_t sub_1007FDC10()
{
  unint64_t result = qword_100E982C8;
  if (!qword_100E982C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E982C8);
  }
  return result;
}

unint64_t sub_1007FDC60()
{
  unint64_t result = qword_100E982D0;
  if (!qword_100E982D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E982D0);
  }
  return result;
}

unint64_t sub_1007FDCAC()
{
  unint64_t result = qword_100E62F98;
  if (!qword_100E62F98)
  {
    type metadata accessor for OpenExternalURLOptionsKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E62F98);
  }
  return result;
}

uint64_t sub_1007FDCFC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DetailComponentAction();
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10059E8C8(a1, (uint64_t)v4);
  LOBYTE(a1) = v4[*(int *)(sub_10017DF08(&qword_100E66478) + 48)];
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  if ((a1 & 1) == 0)
  {
    id v9 = [self sharedApplication];
    URL._bridgeToObjectiveC()(v10);
    char v12 = v11;
    type metadata accessor for OpenExternalURLOptionsKey(0);
    sub_1007FDCAC();
    Dictionary.init(dictionaryLiteral:)();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v9 openURL:v12 options:isa completionHandler:0];
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1007FDF04(uint64_t a1)
{
  return sub_1007FDCFC(a1);
}

uint64_t sub_1007FDF28(uint64_t a1, uint64_t a2)
{
  if ((sub_100889CEC(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for DetailViewVisibilityTrackerModel();
  if ((static Location.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(int *)(v4 + 24);

  return sub_100889D34(a1 + v5, a2 + v5);
}

uint64_t *sub_1007FDFB0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for DetailType();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    id v9 = (char *)a1 + v8;
    BOOL v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Location();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = *(int *)(a3 + 24);
    unint64_t v13 = (char *)a1 + v12;
    unint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = type metadata accessor for DetailViewOrigin();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  }
  return a1;
}

uint64_t sub_1007FE108(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DetailType();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = type metadata accessor for DetailViewOrigin();
  id v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t sub_1007FE1F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DetailType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for DetailViewOrigin();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

uint64_t sub_1007FE300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DetailType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for DetailViewOrigin();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

uint64_t sub_1007FE408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DetailType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for DetailViewOrigin();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

uint64_t sub_1007FE510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DetailType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for DetailViewOrigin();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_1007FE618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1007FE62C);
}

uint64_t sub_1007FE62C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for DetailType();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    type metadata accessor for Location();
    sub_100162F30();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v12 = *(int *)(a3 + 20);
    }
    else
    {
      uint64_t v8 = type metadata accessor for DetailViewOrigin();
      uint64_t v12 = *(int *)(a3 + 24);
    }
    uint64_t v9 = a1 + v12;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_1007FE6CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1007FE6E0);
}

uint64_t sub_1007FE6E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for DetailType();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    type metadata accessor for Location();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = *(int *)(a4 + 20);
    }
    else
    {
      uint64_t v10 = type metadata accessor for DetailViewOrigin();
      uint64_t v14 = *(int *)(a4 + 24);
    }
    uint64_t v11 = a1 + v14;
  }

  return _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for DetailViewVisibilityTrackerModel()
{
  uint64_t result = qword_100E98330;
  if (!qword_100E98330) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1007FE7D0()
{
  uint64_t result = type metadata accessor for DetailType();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Location();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for DetailViewOrigin();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1007FE8D8()
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v1);
  sub_1001626E0();
  uint64_t v4 = v3 - v2;
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 16);
  *(unsigned char *)(v3 - v2) = 0;
  swift_storeEnumTagMultiPayload();
  sub_10017CC38();
  sub_1001AAF58(v4, (uint64_t)v7, v5);
  sub_100016E7C((uint64_t)v7);
  sub_1001ABE70(v4);
  return swift_release();
}

uint64_t sub_1007FE984(uint64_t a1)
{
  return sub_1007FE9AC(a1, &qword_100E77758, (unsigned int *)&enum case for ConfiguredUnit.distance(_:));
}

uint64_t sub_1007FE998(uint64_t a1)
{
  return sub_1007FE9AC(a1, &qword_100E77760, (unsigned int *)&enum case for ConfiguredUnit.precipitation(_:));
}

uint64_t sub_1007FE9AC(uint64_t a1, uint64_t *a2, unsigned int *a3)
{
  uint64_t v7 = type metadata accessor for ConfiguredUnit();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_1001626E0();
  uint64_t v15 = v14 - v13;
  uint64_t v18 = *(uint64_t (**)(uint64_t))(v3 + 16);
  sub_1001262FC(a1, v11, a2);
  (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v11, *a3, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v15, v11, v7);
  type metadata accessor for ConfiguredUnitsAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for EnvironmentAction();
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  swift_retain();
  v16(v11, v7);
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = 0;
  memset(v19, 0, sizeof(v19));
  sub_1001AAF58(v15, (uint64_t)v19, v18);
  sub_100016E7C((uint64_t)v19);
  sub_1001ABE70(v15);
  return swift_release();
}

uint64_t sub_1007FEB98(uint64_t a1)
{
  return sub_1007FE9AC(a1, &qword_100E77768, (unsigned int *)&enum case for ConfiguredUnit.pressure(_:));
}

uint64_t sub_1007FEBAC(uint64_t a1)
{
  return sub_1007FE9AC(a1, &qword_100E6F620, (unsigned int *)&enum case for ConfiguredUnit.temperature(_:));
}

uint64_t sub_1007FEBC0(uint64_t a1)
{
  return sub_1007FE9AC(a1, qword_100E77770, (unsigned int *)&enum case for ConfiguredUnit.windSpeed(_:));
}

uint64_t sub_1007FEBD4()
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v1);
  sub_1001626E0();
  uint64_t v4 = v3 - v2;
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 16);
  type metadata accessor for ConfiguredUnitsAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for EnvironmentAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_10017CC38();
  sub_1001AAF58(v4, (uint64_t)v7, v5);
  sub_100016E7C((uint64_t)v7);
  sub_1001ABE70(v4);
  return swift_release();
}

uint64_t type metadata accessor for UnitsConfigurationInteractor()
{
  return self;
}

uint64_t sub_1007FECD4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E984B0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v21)
  {
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E64B88);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (result)
    {
      uint64_t v5 = result;
      uint64_t v6 = sub_1000DF0C4((uint64_t)v20, v21);
      __chkstk_darwin(v6);
      uint64_t v8 = (void *)((char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v9 + 16))(v8);
      uint64_t v10 = *v8;
      uint64_t v11 = type metadata accessor for AveragesDetailInteractor();
      v19[3] = v11;
      v19[4] = &off_100E269E0;
      v19[0] = v10;
      uint64_t v12 = type metadata accessor for AveragesDetailModule();
      uint64_t v13 = (void *)swift_allocObject();
      uint64_t v14 = sub_1000DF0C4((uint64_t)v19, v11);
      __chkstk_darwin(v14);
      uint64_t v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v17 + 16))(v16);
      uint64_t v18 = *v16;
      v13[5] = v11;
      v13[6] = &off_100E269E0;
      _OWORD v13[2] = v18;
      v13[7] = v5;
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v19);
      uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v20);
      a2[3] = v12;
      a2[4] = &off_100E1CB70;
      *a2 = v13;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1007FEF40()
{
  sub_10017DF08(&qword_100E984A8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E984B0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E984B8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E984C0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E984C8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E984D0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E984D8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E984E0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E984E8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E984F0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E984F8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E98500);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E98508);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E98510);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E98518);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E98520);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E98528);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E98530);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E98538);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E8DDF8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E98540);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E98548);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E98550);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E64B88);
  RegistrationContainer.register<A>(_:name:factory:)();

  return swift_release();
}

uint64_t sub_1007FF4E0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for Tracker();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    uint64_t v5 = result;
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E647E0);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v8)
    {
      a2[3] = (uint64_t)&type metadata for AveragesDetailTracker;
      a2[4] = (uint64_t)&off_100E26208;
      uint64_t v6 = swift_allocObject();
      *a2 = v6;
      *(void *)(v6 + 16) = v5;
      return sub_1001262E4(&v7, v6 + 24);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1007FF5CC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v5 = v25;
  if (v25)
  {
    uint64_t v21 = v26;
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E984A8);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v24)
    {
      uint64_t v6 = sub_1000DF0C4((uint64_t)v23, v24);
      __chkstk_darwin(v6);
      uint64_t v8 = (_OWORD *)((char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(_OWORD *))(v9 + 16))(v8);
      v22[3] = &type metadata for AveragesDetailTracker;
      v22[4] = &off_100E26208;
      uint64_t v10 = (_OWORD *)swift_allocObject();
      v22[0] = v10;
      long long v11 = v8[1];
      v10[1] = *v8;
      long long v10[2] = v11;
      v10[3] = v8[2];
      uint64_t v12 = type metadata accessor for AveragesDetailInteractor();
      uint64_t v13 = (void *)swift_allocObject();
      uint64_t v14 = sub_1000DF0C4((uint64_t)v22, (uint64_t)&type metadata for AveragesDetailTracker);
      __chkstk_darwin(v14);
      uint64_t v16 = (_OWORD *)((char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(_OWORD *))(v17 + 16))(v16);
      v13[7] = &type metadata for AveragesDetailTracker;
      char v13[8] = &off_100E26208;
      uint64_t v18 = (_OWORD *)swift_allocObject();
      long long v19 = v16[1];
      v18[1] = *v16;
      v18[2] = v19;
      void v18[3] = v16[2];
      _OWORD v13[2] = v5;
      void v13[3] = v21;
      v13[4] = v18;
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v22);
      uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v23);
      a2[3] = v12;
      a2[4] = &off_100E269E0;
      *a2 = v13;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1007FF880@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E984C0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v31)
  {
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E984E0);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v29)
    {
      uint64_t v5 = sub_1000DF0C4((uint64_t)v30, v31);
      v25[2] = v25;
      __chkstk_darwin(v5);
      uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v8 + 16))(v7);
      uint64_t v9 = sub_1000DF0C4((uint64_t)v28, v29);
      v25[1] = v25;
      __chkstk_darwin(v9);
      long long v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v12 + 16))(v11);
      v27[3] = &type metadata for PrecipitationAveragesDetailInputFactory;
      void v27[4] = &off_100E11E10;
      v27[0] = swift_allocObject();
      memcpy((void *)(v27[0] + 16), v7, 0x78uLL);
      v26[3] = &type metadata for TemperatureAveragesDetailInputFactory;
      v26[4] = &off_100E10A48;
      v26[0] = swift_allocObject();
      memcpy((void *)(v26[0] + 16), v11, 0x78uLL);
      uint64_t v13 = type metadata accessor for AveragesDetailInputFactory();
      uint64_t v14 = (void *)swift_allocObject();
      uint64_t v15 = sub_1000DF0C4((uint64_t)v27, (uint64_t)&type metadata for PrecipitationAveragesDetailInputFactory);
      __chkstk_darwin(v15);
      uint64_t v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v18 + 16))(v17);
      uint64_t v19 = sub_1000DF0C4((uint64_t)v26, (uint64_t)&type metadata for TemperatureAveragesDetailInputFactory);
      __chkstk_darwin(v19);
      uint64_t v21 = (char *)v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v22 + 16))(v21);
      v14[5] = &type metadata for PrecipitationAveragesDetailInputFactory;
      v14[6] = &off_100E11E10;
      uint64_t v23 = swift_allocObject();
      long long v14[2] = v23;
      memcpy((void *)(v23 + 16), v17, 0x78uLL);
      v14[10] = &type metadata for TemperatureAveragesDetailInputFactory;
      v14[11] = &off_100E10A48;
      uint64_t v24 = swift_allocObject();
      v14[7] = v24;
      memcpy((void *)(v24 + 16), v21, 0x78uLL);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v26);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v27);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v28);
      uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v30);
      a2[3] = v13;
      a2[4] = &off_100E19670;
      *a2 = v14;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1007FFD1C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E984C8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v11)
  {
    __break(1u);
    goto LABEL_6;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E984D0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v9)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E984D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v7)
  {
    a2[3] = (uint64_t)&type metadata for PrecipitationAveragesDetailInputFactory;
    a2[4] = (uint64_t)&off_100E11E10;
    uint64_t v5 = swift_allocObject();
    *a2 = v5;
    sub_1001262E4(&v10, v5 + 16);
    sub_1001262E4(&v8, v5 + 56);
    return sub_1001262E4(&v6, v5 + 96);
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_1007FFE68(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for PrecipitationAveragesHeroChartInputFactory;
  *(void *)(a1 + 32) = &off_100E138A0;
}

void sub_1007FFE80(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for MonthlyAveragesChartInputFactory;
  *(void *)(a1 + 32) = &off_100E35878;
}

void sub_1007FFE98(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for HistoricalFactsPlatterInputFactory;
  *(void *)(a1 + 32) = &off_100E26458;
}

uint64_t sub_1007FFEB0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E984D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v11)
  {
    __break(1u);
    goto LABEL_6;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E984E8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v9)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E984D0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v7)
  {
    a2[3] = (uint64_t)&type metadata for TemperatureAveragesDetailInputFactory;
    a2[4] = (uint64_t)&off_100E10A48;
    uint64_t v5 = swift_allocObject();
    *a2 = v5;
    sub_1001262E4(&v10, v5 + 16);
    sub_1001262E4(&v8, v5 + 56);
    return sub_1001262E4(&v6, v5 + 96);
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_1007FFFFC(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for TemperatureAveragesHeroChartInputFactory;
  *(void *)(a1 + 32) = &off_100E135E0;
}

void sub_100800014(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for HistoricalFactsPlatterViewModelFactory;
  *(void *)(a1 + 32) = &off_100E326F8;
}

uint64_t sub_10080002C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98500);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v31)
  {
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E98530);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v29)
    {
      uint64_t v5 = sub_1000DF0C4((uint64_t)v30, v31);
      v25[2] = v25;
      __chkstk_darwin(v5);
      uint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v8 + 16))(v7);
      uint64_t v9 = sub_1000DF0C4((uint64_t)v28, v29);
      v25[1] = v25;
      __chkstk_darwin(v9);
      uint64_t v11 = (char *)v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v12 + 16))(v11);
      v27[3] = &type metadata for PrecipitationAveragesDetailViewModelFactory;
      void v27[4] = &off_100E2C270;
      v27[0] = swift_allocObject();
      memcpy((void *)(v27[0] + 16), v7, 0xC8uLL);
      v26[3] = &type metadata for TemperatureAveragesDetailViewModelFactory;
      v26[4] = &off_100E19968;
      v26[0] = swift_allocObject();
      memcpy((void *)(v26[0] + 16), v11, 0xC8uLL);
      uint64_t v13 = type metadata accessor for AveragesDetailViewModelFactory();
      uint64_t v14 = (void *)swift_allocObject();
      uint64_t v15 = sub_1000DF0C4((uint64_t)v27, (uint64_t)&type metadata for PrecipitationAveragesDetailViewModelFactory);
      __chkstk_darwin(v15);
      uint64_t v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v18 + 16))(v17);
      uint64_t v19 = sub_1000DF0C4((uint64_t)v26, (uint64_t)&type metadata for TemperatureAveragesDetailViewModelFactory);
      __chkstk_darwin(v19);
      uint64_t v21 = (char *)v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v22 + 16))(v21);
      v14[5] = &type metadata for PrecipitationAveragesDetailViewModelFactory;
      v14[6] = &off_100E2C270;
      uint64_t v23 = swift_allocObject();
      long long v14[2] = v23;
      memcpy((void *)(v23 + 16), v17, 0xC8uLL);
      v14[10] = &type metadata for TemperatureAveragesDetailViewModelFactory;
      v14[11] = &off_100E19968;
      uint64_t v24 = swift_allocObject();
      v14[7] = v24;
      memcpy((void *)(v24 + 16), v21, 0xC8uLL);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v26);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v27);
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v28);
      uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v30);
      a2[3] = v13;
      a2[4] = &off_100E31480;
      *a2 = v14;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1008004C8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E984F0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v15)
  {
    __break(1u);
    goto LABEL_8;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98510);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v13)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98518);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v11)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98520);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v9)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v7)
  {
    a2[3] = (uint64_t)&type metadata for PrecipitationAveragesDetailViewModelFactory;
    a2[4] = (uint64_t)&off_100E2C270;
    uint64_t v5 = swift_allocObject();
    *a2 = v5;
    sub_1001262E4(&v14, v5 + 16);
    sub_1001262E4(&v12, v5 + 56);
    sub_1001262E4(&v10, v5 + 96);
    sub_1001262E4(&v8, v5 + 136);
    return sub_1001262E4(&v6, v5 + 176);
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1008006AC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for UnitManager();
  uint64_t result = static UnitManager.standard.getter();
  *a1 = result;
  a1[1] = (uint64_t)&protocol witness table for UnitManager;
  return result;
}

uint64_t sub_1008006E8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98508);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v5 = v10;
  if (v10)
  {
    uint64_t v6 = v11;
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E8DDF8);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v9)
    {
      a2[3] = &type metadata for PrecipitationAveragesHeroChartViewModelFactory;
      a2[4] = &off_100E10930;
      uint64_t v7 = (void *)swift_allocObject();
      *a2 = v7;
      type metadata accessor for WeatherService();
      v7[9] = static WeatherService.statisticsPastDaysToFetch.getter();
      v7[2] = v5;
      uint64_t v7[3] = v6;
      return sub_1001262E4(&v8, (uint64_t)(v7 + 4));
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100800800(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for PrecipitationAveragesSummaryStringBuilder;
  *(void *)(a1 + 32) = &off_100E31EA0;
}

uint64_t sub_100800818@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98528);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v6)
  {
    a2[3] = (uint64_t)&type metadata for PrecipitationMonthlyAveragesChartViewModelFactory;
    a2[4] = (uint64_t)&off_100E379C8;
    uint64_t v4 = swift_allocObject();
    *a2 = v4;
    return sub_1001262E4(&v5, v4 + 16);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1008008BC(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for PrecipitationMonthlyAveragesSummaryStringBuilder;
  *(void *)(a1 + 32) = &off_100E26668;
}

uint64_t sub_1008008D4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E984F0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v15)
  {
    __break(1u);
    goto LABEL_8;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98538);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v13)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98540);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v11)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98548);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v9)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v7)
  {
    a2[3] = (uint64_t)&type metadata for TemperatureAveragesDetailViewModelFactory;
    a2[4] = (uint64_t)&off_100E19968;
    uint64_t v5 = swift_allocObject();
    *a2 = v5;
    sub_1001262E4(&v14, v5 + 16);
    sub_1001262E4(&v12, v5 + 56);
    sub_1001262E4(&v10, v5 + 96);
    sub_1001262E4(&v8, v5 + 136);
    return sub_1001262E4(&v6, v5 + 176);
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100800AB8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6FC60);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v10)
  {
    __break(1u);
    goto LABEL_6;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E72950);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v5 = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E8DDF8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v8)
  {
    a2[3] = (uint64_t)&type metadata for TemperatureAveragesHeroChartViewModelFactory;
    a2[4] = (uint64_t)&off_100E3B1C0;
    uint64_t v6 = swift_allocObject();
    *a2 = v6;
    sub_1001262E4(&v9, v6 + 16);
    *(void *)(v6 + 56) = v5;
    return sub_1001262E4(&v7, v6 + 64);
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_100800BF8(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for TemperatureAveragesSummaryStringBuilder;
  *(void *)(a1 + 32) = &off_100E314B0;
}

uint64_t sub_100800C10@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E98550);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v6)
  {
    a2[3] = (uint64_t)&type metadata for TemperatureMonthlyAveragesChartViewModelFactory;
    a2[4] = (uint64_t)&off_100E0C618;
    uint64_t v4 = swift_allocObject();
    *a2 = v4;
    return sub_1001262E4(&v5, v4 + 16);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100800CB4(uint64_t a1@<X8>)
{
  *(void *)(a1 + 24) = &type metadata for TemperatureMonthlyAveragesSummaryStringBuilder;
  *(void *)(a1 + 32) = &off_100E1CAB8;
}

uint64_t sub_100800CCC(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v3 = v19;
  if (!v19)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = v21;
  uint64_t v4 = v22;
  uint64_t v6 = v20;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E984B8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v7 = *sub_1001B1E64(v17, v18);
  uint64_t v15 = type metadata accessor for AveragesDetailInputFactory();
  uint64_t v16 = &off_100E19670;
  v14[0] = v7;
  sub_10020D948((uint64_t)v14, (uint64_t)v13);
  uint64_t v8 = swift_allocObject();
  sub_1001262E4(v13, v8 + 16);
  swift_retain();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v14);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v17);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_1008010A4;
  *(void *)(v9 + 24) = v8;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E984F8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v18)
  {
    uint64_t v10 = *sub_1001B1E64(v17, v18);
    uint64_t v15 = type metadata accessor for AveragesDetailViewModelFactory();
    uint64_t v16 = &off_100E31480;
    v14[0] = v10;
    sub_10020D948((uint64_t)v14, (uint64_t)v13);
    uint64_t v11 = swift_allocObject();
    sub_1001262E4(v13, v11 + 16);
    swift_retain();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v14);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v17);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = sub_1008010E4;
    *(void *)(v12 + 24) = v11;
    sub_10017DF08(&qword_100E64B88);
    swift_allocObject();
    return sub_10025AF80(v3, v6, v5, v4, sub_10025969C, 0, sub_100137F50, v9, sub_1008010EC, v12);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100800F80@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_100502288(a1, a3);
}

uint64_t sub_100800FCC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  return sub_10099A844(a1, a3);
}

uint64_t sub_100801018@<X0>(void (*a1)(void)@<X1>, uint64_t a2@<X8>)
{
  a1();
  uint64_t v3 = type metadata accessor for AveragesDetailViewModel();

  return _s7Weather24LocationCompositionStateOwst_0(a2, 0, 1, v3);
}

uint64_t sub_10080106C()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_1008010A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100800F80(a1, (void *)(v2 + 16), a2);
}

uint64_t sub_1008010AC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008010E4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_100800FCC(a1, (void *)(v2 + 16), a2);
}

uint64_t sub_1008010EC@<X0>(uint64_t a1@<X8>)
{
  return sub_100801018(*(void (**)(void))(v1 + 16), a1);
}

uint64_t sub_1008010F4()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 64);

  return swift_deallocObject();
}

uint64_t sub_100801140()
{
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 32);

  return swift_deallocObject();
}

uint64_t sub_10080118C()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 56);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 96);

  return swift_deallocObject();
}

uint64_t sub_1008011D4()
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 24);

  return swift_deallocObject();
}

uint64_t sub_100801228@<X0>(long long *a1@<X1>, uint64_t *a2@<X8>, double a3@<D0>)
{
  sub_10017DF08(&qword_100E668C0);
  sub_100162E4C();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v21 - v10;
  uint64_t v12 = (int *)type metadata accessor for MoonScrubberView();
  uint64_t v13 = type metadata accessor for ScrubberDateSelection();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 1, 1, v13);
  sub_1002AFBCC((uint64_t)v11, (uint64_t)v8);
  State.init(wrappedValue:)();
  sub_1001781AC((uint64_t)v11, &qword_100E668C0);
  uint64_t v14 = v12[8];
  type metadata accessor for MoonScrubberStorage();
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = v15 + OBJC_IVAR____TtC7Weather19MoonScrubberStorage_selectedDate;
  uint64_t v17 = type metadata accessor for MoonDetailSelectedDate();
  _s7Weather24LocationCompositionStateOwst_0(v16, 1, 1, v17);
  uint64_t v18 = v15 + OBJC_IVAR____TtC7Weather19MoonScrubberStorage_offset;
  *(void *)uint64_t v18 = 0;
  *(unsigned char *)(v18 + 8) = 1;
  *(uint64_t *)((char *)a2 + v14) = v15;
  sub_10017DF08(&qword_100E64BC0);
  sub_1001246C8(&qword_100E64BC8, &qword_100E64BC0);
  *a2 = ObservedObject.init(wrappedValue:)();
  a2[1] = v19;
  uint64_t result = sub_1001262E4(a1, (uint64_t)a2 + v12[6]);
  *(double *)((char *)a2 + v12[7]) = a3;
  return result;
}

uint64_t type metadata accessor for MoonScrubberView()
{
  uint64_t result = qword_100E985B8;
  if (!qword_100E985B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_100801458(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for ScrubberDateSelection();
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_10017DF08(&qword_100E668C0);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v14 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v14))
      {
        memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v9, v10, v14);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v14);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v15 = sub_10017DF08(&qword_100E98558);
    *(void *)&v9[*(int *)(v15 + 28)] = *(void *)&v10[*(int *)(v15 + 28)];
    uint64_t v16 = a3[6];
    uint64_t v17 = (char *)v4 + v16;
    uint64_t v18 = (char *)a2 + v16;
    long long v19 = *(_OWORD *)((char *)a2 + v16 + 24);
    *(_OWORD *)((char *)v4 + v16 + 24) = v19;
    uint64_t v20 = v19;
    uint64_t v21 = **(void (***)(char *, char *, uint64_t))(v19 - 8);
    swift_retain();
    v21(v17, v18, v20);
    uint64_t v22 = a3[8];
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)v4 + v22) = *(uint64_t *)((char *)a2 + v22);
  }
  swift_retain();
  return v4;
}

uint64_t sub_10080168C(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for ScrubberDateSelection();
  if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5))
  {
    uint64_t v6 = type metadata accessor for Date();
    if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
    }
  }
  sub_10017DF08(&qword_100E98558);
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + *(int *)(a2 + 24));

  return swift_release();
}

void *sub_100801770(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for ScrubberDateSelection();
  swift_retain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_10017DF08(&qword_100E668C0);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v12))
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v8, v9, v12);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v12);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v13 = sub_10017DF08(&qword_100E98558);
  *(void *)&v8[*(int *)(v13 + 28)] = *(void *)&v9[*(int *)(v13 + 28)];
  uint64_t v14 = a3[6];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  long long v17 = *(_OWORD *)((char *)a2 + v14 + 24);
  *(_OWORD *)((char *)a1 + v14 + 24) = v17;
  uint64_t v18 = v17;
  long long v19 = **(void (***)(char *, char *, uint64_t))(v17 - 8);
  swift_retain();
  v19(v15, v16, v18);
  uint64_t v20 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v20) = *(void *)((char *)a2 + v20);
  swift_retain();
  return a1;
}

void *sub_100801958(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ScrubberDateSelection();
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  if (v10)
  {
    if (!v11)
    {
      uint64_t v12 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v12))
      {
        memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v7, v8, v12);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v12);
      }
      uint64_t v17 = (uint64_t)v7;
      uint64_t v18 = v9;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v11)
  {
    sub_100802FD8((uint64_t)v7, (void (*)(void))type metadata accessor for ScrubberDateSelection);
LABEL_7:
    size_t v13 = *(void *)(*(void *)(sub_10017DF08(&qword_100E668C0) - 8) + 64);
    goto LABEL_8;
  }
  uint64_t v14 = type metadata accessor for Date();
  int v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v14);
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v14);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
      uint64_t v17 = (uint64_t)v7;
      uint64_t v18 = v14;
LABEL_14:
      _s7Weather24LocationCompositionStateOwst_0(v17, 0, 1, v18);
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v21 = *(void *)(v14 - 8);
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 24))(v7, v8, v14);
      goto LABEL_15;
    }
    (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v14);
  }
  size_t v13 = *(void *)(*(void *)(v9 - 8) + 64);
LABEL_8:
  memcpy(v7, v8, v13);
LABEL_15:
  uint64_t v19 = sub_10017DF08(&qword_100E98558);
  *(void *)&v7[*(int *)(v19 + 28)] = *(void *)&v8[*(int *)(v19 + 28)];
  swift_retain();
  swift_release();
  sub_1000C1E18((void *)((char *)a1 + a3[6]), (void *)((char *)a2 + a3[6]));
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_100801C54(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ScrubberDateSelection();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_10017DF08(&qword_100E668C0);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    uint64_t v11 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v11))
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v7, v8, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v11);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v12 = sub_10017DF08(&qword_100E98558);
  *(void *)&v7[*(int *)(v12 + 28)] = *(void *)&v8[*(int *)(v12 + 28)];
  uint64_t v13 = a3[6];
  uint64_t v14 = a3[7];
  int v15 = (char *)a1 + v13;
  int v16 = (char *)a2 + v13;
  *((void *)v15 + 4) = *((void *)v16 + 4);
  long long v17 = *((_OWORD *)v16 + 1);
  *(_OWORD *)int v15 = *(_OWORD *)v16;
  *((_OWORD *)v15 + 1) = v17;
  *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
  *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  return a1;
}

void *sub_100801DE8(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for ScrubberDateSelection();
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (v11)
  {
    if (!v12)
    {
      uint64_t v13 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v13))
      {
        memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v8, v9, v13);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v13);
      }
      uint64_t v18 = (uint64_t)v8;
      uint64_t v19 = v10;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v12)
  {
    sub_100802FD8((uint64_t)v8, (void (*)(void))type metadata accessor for ScrubberDateSelection);
LABEL_7:
    size_t v14 = *(void *)(*(void *)(sub_10017DF08(&qword_100E668C0) - 8) + 64);
    goto LABEL_8;
  }
  uint64_t v15 = type metadata accessor for Date();
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v15);
  int v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v15);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v8, v9, v15);
      uint64_t v18 = (uint64_t)v8;
      uint64_t v19 = v15;
LABEL_14:
      _s7Weather24LocationCompositionStateOwst_0(v18, 0, 1, v19);
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v27 = *(void *)(v15 - 8);
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 40))(v8, v9, v15);
      goto LABEL_15;
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v15);
  }
  size_t v14 = *(void *)(*(void *)(v10 - 8) + 64);
LABEL_8:
  memcpy(v8, v9, v14);
LABEL_15:
  uint64_t v20 = sub_10017DF08(&qword_100E98558);
  *(void *)&v8[*(int *)(v20 + 28)] = *(void *)&v9[*(int *)(v20 + 28)];
  swift_release();
  uint64_t v21 = a3[6];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1 + v21);
  long long v24 = *((_OWORD *)v23 + 1);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *((_OWORD *)v22 + 1) = v24;
  *((void *)v22 + 4) = *((void *)v23 + 4);
  uint64_t v25 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)((char *)a1 + v25) = *(void *)((char *)a2 + v25);
  swift_release();
  return a1;
}

uint64_t sub_1008020D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1008020E8);
}

uint64_t sub_1008020E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10017DF08(&qword_100E98558);
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_100802174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100802188);
}

uint64_t sub_100802188(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10017DF08(&qword_100E98558);
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

void sub_10080220C()
{
  sub_1008022C8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1008022C8()
{
  if (!qword_100E985C8)
  {
    sub_10018C6DC(&qword_100E668C0);
    unint64_t v0 = type metadata accessor for State();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E985C8);
    }
  }
}

uint64_t sub_100802324()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100802340@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v72 = a1;
  uint64_t v71 = sub_10017DF08(&qword_100E651D0);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100109314();
  uint64_t v89 = v4;
  sub_100129064();
  uint64_t v5 = type metadata accessor for MoonScrubberView();
  uint64_t v93 = *(void *)(v5 - 8);
  uint64_t v6 = (int *)(v5 - 8);
  uint64_t v92 = *(void *)(v93 + 64);
  __chkstk_darwin(v5 - 8);
  uint64_t v91 = (uint64_t)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_10017DF08(&qword_100E668C0);
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v90 = v9;
  uint64_t v10 = sub_10017DF08(&qword_100E63BF0);
  __chkstk_darwin(v10 - 8);
  sub_100109314();
  int v88 = v11;
  uint64_t v12 = sub_10017DF08(&qword_100E98608);
  __chkstk_darwin(v12 - 8);
  sub_100109314();
  uint64_t v86 = v13;
  sub_100129064();
  type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v84 = v15;
  uint64_t v85 = v14;
  __chkstk_darwin(v14);
  sub_100109314();
  uint64_t v83 = v16;
  sub_100129064();
  uint64_t v81 = type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v79 = v17;
  __chkstk_darwin(v18);
  sub_100109314();
  uint64_t v80 = v19;
  sub_100129064();
  uint64_t v20 = type metadata accessor for MoonScrubberViewModel();
  uint64_t v21 = (int *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v68 - v25;
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v68 - v28;
  uint64_t v75 = type metadata accessor for ScrubberViewModel(0) - 8;
  __chkstk_darwin(v75);
  sub_100109314();
  uint64_t v74 = v30;
  uint64_t v31 = sub_100129064();
  uint64_t v77 = type metadata accessor for ScrubberView(v31);
  sub_100162E4C();
  __chkstk_darwin(v32);
  sub_100109314();
  uint64_t v82 = v33;
  uint64_t v70 = sub_10017DF08(&qword_100E98610);
  sub_100179C0C();
  uint64_t v69 = v34;
  __chkstk_darwin(v35);
  sub_100109314();
  uint64_t v76 = v36;
  uint64_t v38 = v6[8];
  uint64_t v37 = v6[9];
  uint64_t v73 = v6;
  double v39 = *(double *)(v1 + v37);
  sub_10020D948(v1 + v38, (uint64_t)&v94);
  uint64_t v78 = *(void *)(v1 + v6[10]);
  swift_retain();
  swift_retain();
  sub_10024FF3C();
  swift_release();
  uint64_t v40 = *(void *)&v29[v21[10]];
  swift_bridgeObjectRetain();
  sub_100802FD8((uint64_t)v29, (void (*)(void))type metadata accessor for MoonScrubberViewModel);
  sub_10017A940();
  sub_10024FF3C();
  swift_release();
  uint64_t v41 = *(void *)&v26[v21[11]];
  swift_bridgeObjectRetain();
  sub_100802FD8((uint64_t)v26, (void (*)(void))type metadata accessor for MoonScrubberViewModel);
  sub_10017A940();
  sub_10024FF3C();
  swift_release();
  uint64_t v42 = v79;
  uint64_t v44 = v80;
  uint64_t v43 = v81;
  (*(void (**)(uint64_t, char *, uint64_t))(v79 + 16))(v80, &v23[v21[12]], v81);
  sub_100802FD8((uint64_t)v23, (void (*)(void))type metadata accessor for MoonScrubberViewModel);
  uint64_t v45 = v74;
  *(void *)uint64_t v74 = v40;
  *((void *)v45 + 1) = v41;
  uint64_t v46 = v89;
  uint64_t v47 = (uint64_t)v45;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(&v45[*(int *)(v75 + 32)], v44, v43);
  sub_10017A940();
  sub_10024FF3C();
  swift_release();
  uint64_t v48 = v21[9];
  uint64_t v49 = v87;
  uint64_t v50 = v83;
  (*(void (**)(uint64_t, char *, uint64_t))(v84 + 16))(v83, &v29[v48], v85);
  sub_100802FD8((uint64_t)v29, (void (*)(void))type metadata accessor for MoonScrubberViewModel);
  sub_10017DF08(&qword_100E98558);
  uint64_t v51 = v86;
  State.projectedValue.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v53 = (uint64_t)v88;
  *int v88 = KeyPath;
  sub_10017DF08(&qword_100E62CB8);
  swift_storeEnumTagMultiPayload();
  uint64_t v54 = v82;
  sub_100B3596C(&v94, v78, v47, v50, v51, v53, v82, v39);
  sub_10017A940();
  sub_10024FF3C();
  swift_release();
  uint64_t v55 = v90;
  sub_1002AFBCC((uint64_t)v29, v90);
  sub_100802FD8((uint64_t)v29, (void (*)(void))type metadata accessor for MoonScrubberViewModel);
  uint64_t v56 = v91;
  sub_100802C88(v2, v91);
  unint64_t v57 = (*(unsigned __int8 *)(v93 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80);
  uint64_t v58 = swift_allocObject();
  sub_100802E50(v56, v58 + v57);
  uint64_t v59 = sub_100803030(&qword_100E98618, (void (*)(uint64_t))type metadata accessor for ScrubberView);
  unint64_t v60 = sub_100802F34();
  uint64_t v61 = v76;
  uint64_t v62 = v77;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_1001781AC(v55, &qword_100E668C0);
  sub_100802FD8(v54, (void (*)(void))type metadata accessor for ScrubberView);
  uint64_t v63 = enum case for DynamicTypeSize.xxLarge(_:);
  uint64_t v64 = type metadata accessor for DynamicTypeSize();
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 104))(v46, v63, v64);
  sub_100803030(&qword_100E651F0, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result)
  {
    *(void *)&long long v94 = v62;
    *((void *)&v94 + 1) = v49;
    uint64_t v95 = v59;
    unint64_t v96 = v60;
    swift_getOpaqueTypeConformance2();
    sub_1001246C8((unint64_t *)&unk_100EAADB0, &qword_100E651D0);
    uint64_t v67 = v70;
    View.dynamicTypeSize<A>(_:)();
    sub_1001781AC(v46, &qword_100E651D0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v69 + 8))(v61, v67);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100802B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10017DF08(&qword_100E668C0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v10 - v7;
  sub_1002AFBCC(a2, (uint64_t)&v10 - v7);
  type metadata accessor for MoonScrubberView();
  sub_1002AFBCC((uint64_t)v8, (uint64_t)v5);
  sub_10017DF08(&qword_100E98558);
  State.wrappedValue.setter();
  return sub_1001781AC((uint64_t)v8, &qword_100E668C0);
}

uint64_t sub_100802C88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MoonScrubberView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100802CEC()
{
  uint64_t v1 = type metadata accessor for MoonScrubberView();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_release();
  uint64_t v3 = v2 + *(int *)(v1 + 20);
  uint64_t v4 = type metadata accessor for ScrubberDateSelection();
  if (!_s7Weather24LocationCompositionStateOwet_0(v3, 1, v4))
  {
    uint64_t v5 = type metadata accessor for Date();
    if (!_s7Weather24LocationCompositionStateOwet_0(v3, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v3, v5);
    }
  }
  sub_10017DF08(&qword_100E98558);
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v2 + *(int *)(v1 + 24));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100802E50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MoonScrubberView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100802EB4(uint64_t a1, uint64_t a2)
{
  type metadata accessor for MoonScrubberView();

  return sub_100802B8C(a1, a2);
}

unint64_t sub_100802F34()
{
  unint64_t result = qword_100E98620;
  if (!qword_100E98620)
  {
    sub_10018C6DC(&qword_100E668C0);
    sub_100803030(&qword_100E98628, (void (*)(uint64_t))type metadata accessor for ScrubberDateSelection);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E98620);
  }
  return result;
}

uint64_t sub_100802FD8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100803030(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100803078()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for NotificationSevereToggleView()
{
  return &type metadata for NotificationSevereToggleView;
}

uint64_t sub_1008031B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1008031CC()
{
  int v1 = *(unsigned __int8 *)(v0 + 80);
  sub_10080372C(v0, (uint64_t)v8);
  int v2 = v8[81];
  sub_1008037A4((uint64_t)v8);
  sub_10080372C(v0, (uint64_t)__src);
  if (v1 == 1 || v2 == 0)
  {
    memcpy(__dst, __src, sizeof(__dst));
    char v4 = (__src[82] | __dst[34]) ^ 1;
    sub_1008037A4((uint64_t)__dst);
  }
  else
  {
    sub_1008037A4((uint64_t)__src);
    char v4 = 1;
  }
  return v4 & 1;
}

uint64_t sub_100803268@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v2 = sub_10017DF08(&qword_100E85CA8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&__src[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E85CB0);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&__src[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10080372C(v1, (uint64_t)__src);
  type metadata accessor for MainActor();
  uint64_t v10 = static MainActor.shared.getter();
  int v11 = (void *)swift_allocObject();
  v11[2] = v10;
  v11[3] = &protocol witness table for MainActor;
  memcpy(v11 + 4, __src, 0x68uLL);
  sub_10080372C(v1, (uint64_t)__src);
  uint64_t v12 = static MainActor.shared.getter();
  uint64_t v13 = (void *)swift_allocObject();
  long long v13[2] = v12;
  void v13[3] = &protocol witness table for MainActor;
  memcpy(v13 + 4, __src, 0x68uLL);
  Binding.init(get:set:)();
  sub_10017DF08(&qword_100E7A000);
  sub_1005F9F5C();
  Toggle.init(isOn:label:)();
  uint64_t v14 = static Font.body.getter();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v9, v5, v2);
  uint64_t v16 = (uint64_t *)&v9[*(int *)(v7 + 44)];
  *uint64_t v16 = KeyPath;
  v16[1] = v14;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  LOBYTE(v14) = sub_1008031CC();
  uint64_t v17 = swift_getKeyPath();
  uint64_t v18 = swift_allocObject();
  *(unsigned char *)(v18 + 16) = v14 & 1;
  uint64_t v19 = v22;
  sub_100635918((uint64_t)v9, v22);
  uint64_t v20 = (uint64_t *)(v19 + *(int *)(sub_10017DF08(&qword_100E85CB8) + 36));
  *uint64_t v20 = v17;
  v20[1] = (uint64_t)sub_10021277C;
  void v20[2] = v18;
  return sub_100635980((uint64_t)v9);
}

uint64_t sub_10080357C@<X0>(uint64_t a1@<X2>, unsigned char *a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 96);
  v8[0] = *(unsigned char *)(a1 + 88);
  uint64_t v9 = v4;
  sub_10017DF08(&qword_100E65950);
  State.wrappedValue.getter();
  int v5 = v10;
  sub_10080372C(a1, (uint64_t)v8);
  if (v5 == 1) {
    char v6 = sub_1008031CC() ^ 1;
  }
  else {
    char v6 = 0;
  }
  uint64_t result = sub_1008037A4((uint64_t)v8);
  *a2 = v6 & 1;
  return result;
}

void sub_100803614(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_100803698@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t result = Text.init(_:tableName:bundle:comment:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  *(_WORD *)(a1 + 32) = 256;
  return result;
}

uint64_t sub_10080372C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100803768@<X0>(unsigned char *a1@<X8>)
{
  return sub_10080357C(v1 + 32, a1);
}

void sub_100803778(uint64_t a1)
{
  sub_100803614(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), v1 + 32);
}

uint64_t sub_100803794()
{
  return swift_deallocObject();
}

uint64_t sub_1008037A4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1008037D4(uint64_t a1, uint64_t *a2, unsigned char *a3, unsigned char *a4, uint64_t *a5, unsigned char *a6, unsigned char *a7)
{
  uint64_t v72 = a6;
  uint64_t v73 = a7;
  uint64_t v68 = a3;
  uint64_t v69 = a4;
  uint64_t v74 = type metadata accessor for NotificationSubscription.Location();
  uint64_t v10 = *(void *)(v74 - 8);
  uint64_t v11 = __chkstk_darwin(v74);
  uint64_t v71 = (char *)v67 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v70 = (char *)v67 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)v67 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)v67 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)v67 - v21;
  if (NotificationSubscription.precipitationEnabled.getter())
  {
    v67[0] = a5;
    v67[1] = v7;
    NotificationSubscription.location.getter();
    sub_10062E0C0();
    uint64_t v23 = *(void *)(*a2 + 16);
    sub_100289750(v23);
    uint64_t v24 = *a2;
    *(void *)(v24 + 16) = v23 + 1;
    uint64_t v25 = v74;
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v24+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v23, v22, v74);
    NotificationSubscription.location.getter();
    NotificationSubscription.Location.kind.getter();
    uint64_t v26 = *(void (**)(char *, uint64_t))(v10 + 8);
    v26(v20, v25);
    uint64_t v27 = Location.Identifier.Kind.rawValue.getter();
    uint64_t v29 = v28;
    if (v27 == Location.Identifier.Kind.rawValue.getter() && v29 == v30)
    {
      swift_bridgeObjectRelease_n();
      char v34 = 1;
      uint64_t v33 = v68;
    }
    else
    {
      char v32 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v33 = v68;
      char v34 = v32 | *v68;
    }
    *uint64_t v33 = v34 & 1;
    NotificationSubscription.location.getter();
    NotificationSubscription.Location.kind.getter();
    v26(v17, v74);
    uint64_t v35 = Location.Identifier.Kind.rawValue.getter();
    uint64_t v37 = v36;
    if (v35 == Location.Identifier.Kind.rawValue.getter() && v37 == v38)
    {
      swift_bridgeObjectRelease_n();
      char v42 = 1;
      a5 = (uint64_t *)v67[0];
      uint64_t v41 = v69;
    }
    else
    {
      char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v41 = v69;
      char v42 = v40 | *v69;
      a5 = (uint64_t *)v67[0];
    }
    *uint64_t v41 = v42 & 1;
  }
  uint64_t result = NotificationSubscription.severeEnabled.getter();
  if (result)
  {
    NotificationSubscription.location.getter();
    sub_10062E0C0();
    uint64_t v44 = *(void *)(*a5 + 16);
    sub_100289750(v44);
    uint64_t v45 = *a5;
    *(void *)(v45 + 16) = v44 + 1;
    unint64_t v46 = v45
        + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
        + *(void *)(v10 + 72) * v44;
    uint64_t v47 = v74;
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v46, v22, v74);
    uint64_t v48 = v70;
    NotificationSubscription.location.getter();
    NotificationSubscription.Location.kind.getter();
    uint64_t v49 = *(void (**)(char *, uint64_t))(v10 + 8);
    v49(v48, v47);
    uint64_t v50 = Location.Identifier.Kind.rawValue.getter();
    uint64_t v52 = v51;
    if (v50 == Location.Identifier.Kind.rawValue.getter() && v52 == v53)
    {
      swift_bridgeObjectRelease_n();
      char v57 = 1;
      uint64_t v56 = v72;
    }
    else
    {
      char v55 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v56 = v72;
      char v57 = v55 | *v72;
    }
    *uint64_t v56 = v57 & 1;
    uint64_t v58 = v71;
    NotificationSubscription.location.getter();
    NotificationSubscription.Location.kind.getter();
    v49(v58, v74);
    uint64_t v59 = Location.Identifier.Kind.rawValue.getter();
    uint64_t v61 = v60;
    if (v59 == Location.Identifier.Kind.rawValue.getter() && v61 == v62)
    {
      uint64_t result = swift_bridgeObjectRelease_n();
      char v66 = 1;
      uint64_t v65 = v73;
    }
    else
    {
      char v64 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v65 = v73;
      char v66 = v64 | *v73;
    }
    unsigned char *v65 = v66 & 1;
  }
  return result;
}

uint64_t NotificationSubscriptionMonitor.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 64);
  swift_release();

  return v0;
}

uint64_t NotificationSubscriptionMonitor.__deallocating_deinit()
{
  NotificationSubscriptionMonitor.deinit();

  return swift_deallocClassInstance();
}

void NotificationSubscriptionMonitor.subscribed(_:locationIdentifier:)()
{
}

uint64_t sub_100803D94()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

void sub_100803DCC()
{
  sub_1000163D4(v0, "Self deallocated in NotificationSubscriptionMonitor.subscribed");
}

void NotificationSubscriptionMonitor.unsubscribed(_:locationIdentifier:)()
{
}

void sub_100803E10()
{
  sub_100162EA0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  type metadata accessor for DispatchWorkItemFlags();
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_10017FB48();
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_10019F1B4();
  swift_allocObject();
  sub_100181790();
  v12[4] = v4;
  uint64_t v13 = v0;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  _OWORD v12[2] = sub_10010A4D4;
  void v12[3] = v2;
  uint64_t v7 = _Block_copy(v12);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  sub_100128CBC((unint64_t *)&qword_100EA0200, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10017DF08(&qword_100E75530);
  sub_10012470C((unint64_t *)&qword_100EA0210, &qword_100E75530);
  sub_10017D50C();
  sub_1001A24B0();
  _Block_release(v7);
  uint64_t v8 = sub_1001A0E30();
  v9(v8);
  uint64_t v10 = sub_10017A958();
  v11(v10);
  swift_release();
  swift_release();
  sub_100162694();
}

void sub_100803FD8()
{
  sub_1000163D4(v0, "Self deallocated in NotificationSubscriptionMonitor.unsubscribed");
}

void NotificationSubscriptionMonitor.notificationAvailabilityChange(_:)()
{
  sub_100162EA0();
  type metadata accessor for DispatchWorkItemFlags();
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_10017FB48();
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10019F1B4();
  swift_allocObject();
  sub_100181790();
  v8[4] = sub_1008041D4;
  uint64_t v9 = v0;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  _OWORD v8[2] = sub_10010A4D4;
  void v8[3] = &unk_100E29160;
  uint64_t v3 = _Block_copy(v8);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  sub_100128CBC((unint64_t *)&qword_100EA0200, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10017DF08(&qword_100E75530);
  sub_10012470C((unint64_t *)&qword_100EA0210, &qword_100E75530);
  sub_10017D50C();
  sub_1001A24B0();
  _Block_release(v3);
  uint64_t v4 = sub_1001A0E30();
  v5(v4);
  uint64_t v6 = sub_10017A958();
  v7(v6);
  swift_release();
  swift_release();
  sub_100162694();
}

void sub_1008041D4()
{
  sub_1000163D4(v0, "Self deallocated in NotificationSubscriptionMonitor.notificationAvailabilityChange");
}

uint64_t sub_100804200(uint64_t a1)
{
  return NotificationSubscriptionManagerObserver.migrationStatusChange(status:)(a1, *v1);
}

uint64_t sub_100804230()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100804268()
{
  return swift_deallocObject();
}

uint64_t sub_100804278()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1008042F0(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E663E0);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = sub_10017DF08(&qword_100E663D8);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v79 = v9;
  uint64_t v10 = sub_10017DF08(&qword_100E663F0);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = sub_10017DF08(&qword_100E66418);
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_1001626E0();
  uint64_t v19 = v18 - v17;
  uint64_t v20 = sub_10017DF08(&qword_100E66420);
  uint64_t v21 = sub_100109308(v20);
  __chkstk_darwin(v21);
  sub_100109314();
  uint64_t v80 = v22;
  uint64_t v23 = sub_10017DF08(&qword_100E66428);
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_100109314();
  uint64_t v84 = v25;
  uint64_t v26 = sub_10017DF08(&qword_100E66430);
  uint64_t v27 = sub_100109308(v26);
  __chkstk_darwin(v27);
  sub_100109314();
  uint64_t v83 = v28;
  uint64_t v29 = sub_10017DF08(&qword_100E66438);
  uint64_t v30 = sub_100109308(v29);
  __chkstk_darwin(v30);
  sub_100109314();
  uint64_t v82 = v31;
  uint64_t v32 = sub_10017DF08(&qword_100E66440);
  uint64_t v33 = sub_100109308(v32);
  __chkstk_darwin(v33);
  sub_100109314();
  uint64_t v81 = v34;
  uint64_t v35 = type metadata accessor for ModalViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v36);
  sub_1001626E0();
  uint64_t v39 = v38 - v37;
  uint64_t v40 = type metadata accessor for LocationPreviewViewState(0);
  uint64_t v41 = sub_100109308(v40);
  __chkstk_darwin(v41);
  sub_100109314();
  uint64_t v78 = v42;
  uint64_t v43 = type metadata accessor for ViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v44);
  sub_1001626E0();
  uint64_t v47 = (void *)(v46 - v45);
  sub_1001139C8(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v46 - v45, (void (*)(void))type metadata accessor for ViewState);
  uint64_t v48 = *v47;
  if (*(void *)((char *)v47 + *(int *)(v43 + 36) + 8) == 1)
  {
    uint64_t v49 = v6;
    uint64_t v50 = v19;
    uint64_t v51 = v14;
    uint64_t v52 = a1;
    uint64_t v53 = self;
    swift_retain();
    id v54 = [v53 currentDevice];
    [v54 userInterfaceIdiom];

    a1 = v52;
    uint64_t v14 = v51;
    uint64_t v19 = v50;
    uint64_t v6 = v49;
    if (*((unsigned char *)v47 + *(int *)(v43 + 28)) == 1)
    {
      swift_release();
      char v55 = type metadata accessor for ViewState;
      uint64_t v56 = (uint64_t)v47;
      goto LABEL_8;
    }
  }
  else
  {
    swift_retain();
  }
  sub_10013F0C0((uint64_t)v47, (void (*)(void))type metadata accessor for ViewState);
  if (*(unsigned char *)(v48 + 64) != 1)
  {
    swift_release();
    return 1;
  }
  sub_1001139C8(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, v39, (void (*)(void))type metadata accessor for ModalViewState);
  if (!swift_getEnumCaseMultiPayload())
  {
    sub_1002C0A9C(v39, v78);
    uint64_t v59 = type metadata accessor for AppConfigurationState();
    sub_100179C70(v81, v60, v61, v59);
    uint64_t v62 = type metadata accessor for EnvironmentState();
    sub_100179C70(v82, v63, v64, v62);
    uint64_t v65 = type metadata accessor for LocationsState();
    sub_100179C70(v83, v66, v67, v65);
    uint64_t v68 = type metadata accessor for NotificationsOptInState();
    sub_100179C70(v84, v69, v70, v68);
    uint64_t v71 = type metadata accessor for TimeState();
    _s7Weather24LocationCompositionStateOwst_0(v80, 1, 1, v71);
    _s7Weather24LocationCompositionStateOwst_0(v19, 1, 1, v43);
    uint64_t v72 = type metadata accessor for PreviewLocation();
    uint64_t v75 = sub_100179C70(v79, v73, v74, v72);
    uint64_t v76 = a1;
    uint64_t v77 = type metadata accessor for LocationPreviewModalViewState(v75);
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0(v6, 0, 1, v77);
    sub_1004E4A98(v79, v6, v14);
    sub_1001781AC(v6, &qword_100E663E0);
    sub_1001781AC(v79, &qword_100E663D8);
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0(v14, 0, 1, v35);
    uint64_t v57 = sub_1001659F0(0, 3, v81, v82, v83, 0, 0, 0, 0, v84, v80, v19, v14, 0, 0, 0, 0, 0, 0,
            0,
            v76);
    swift_release();
    sub_1001781AC(v14, &qword_100E663F0);
    sub_1001781AC(v19, &qword_100E66418);
    sub_1001781AC(v80, &qword_100E66420);
    sub_1001781AC(v84, &qword_100E66428);
    sub_1001781AC(v83, &qword_100E66430);
    sub_1001781AC(v82, &qword_100E66438);
    sub_1001781AC(v81, &qword_100E66440);
    sub_10013F0C0(v78, (void (*)(void))type metadata accessor for LocationPreviewViewState);
    return v57;
  }
  swift_release();
  char v55 = type metadata accessor for ModalViewState;
  uint64_t v56 = v39;
LABEL_8:
  sub_10013F0C0(v56, (void (*)(void))v55);
  return 1;
}

uint64_t sub_1008049A0(uint64_t a1, uint64_t a2)
{
  type metadata accessor for DispatchWorkItemFlags();
  sub_10017C83C();
  __chkstk_darwin(v3);
  sub_1001626E0();
  type metadata accessor for DispatchQoS();
  sub_10017C83C();
  __chkstk_darwin(v4);
  sub_1001626E0();
  type metadata accessor for DispatchTime();
  sub_10017C83C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10016278C();
  uint64_t v9 = __chkstk_darwin(v8);
  __chkstk_darwin(v9);
  sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
  uint64_t v15 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  uint64_t v10 = *(void (**)(void))(v6 + 8);
  sub_100164FC8();
  v10();
  + infix(_:_:)();
  sub_100164FC8();
  v10();
  aBlock[4] = a1;
  void aBlock[5] = a2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10010A4D4;
  aBlock[3] = &unk_100E293A8;
  uint64_t v11 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100128D04((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10017DF08(&qword_100E75530);
  sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v11);

  sub_100162F0C();
  v12();
  sub_100162F0C();
  v13();
  sub_100164FC8();
  return ((uint64_t (*)(void))v10)();
}

uint64_t sub_100804D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12 = *(void *)(a6 - 8);
  uint64_t v13 = __chkstk_darwin(a1);
  uint64_t v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)v20 - v16;
  uint64_t v18 = *(void (**)(char *))(v12 + 16);
  v18((char *)v20 - v16);
  v20[0] = a5;
  v20[1] = a6;
  void v20[2] = a7;
  v20[3] = a8;
  type metadata accessor for AnimatableTabView();
  ((void (*)(char *, char *, uint64_t))v18)(v15, v17, a6);
  type metadata accessor for State();
  State.wrappedValue.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v17, a6);
}

uint64_t sub_100804E70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v126 = *(void *)(a5 - 8);
  __chkstk_darwin(a1);
  uint64_t v124 = v13;
  uint64_t v125 = (char *)&v112 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = v14;
  uint64_t v149 = v15;
  uint64_t v150 = v16;
  uint64_t v151 = v17;
  uint64_t v18 = type metadata accessor for AnimatableTabView();
  uint64_t v123 = *(void *)(v18 - 8);
  uint64_t v121 = *(void *)(v123 + 64);
  __chkstk_darwin(v18);
  uint64_t v122 = (char *)&v112 - v19;
  uint64_t v148 = a4;
  uint64_t v149 = a5;
  uint64_t v150 = a6;
  uint64_t v151 = a7;
  uint64_t v132 = type metadata accessor for TransitionContext();
  uint64_t v133 = type metadata accessor for Optional();
  uint64_t v131 = *(void *)(v133 - 8);
  uint64_t v20 = __chkstk_darwin(v133);
  uint64_t v120 = (char *)&v112 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v119 = (uint64_t)&v112 - v23;
  __chkstk_darwin(v22);
  uint64_t v129 = (void (*)(uint64_t, uint64_t))((char *)&v112 - v24);
  uint64_t v148 = a4;
  uint64_t v149 = a5;
  uint64_t v141 = a6;
  uint64_t v142 = a7;
  uint64_t v150 = a6;
  uint64_t v151 = a7;
  uint64_t v25 = type metadata accessor for Page();
  uint64_t v26 = type metadata accessor for Optional();
  uint64_t v136 = *(void *)(v26 - 8);
  uint64_t v137 = v26;
  uint64_t v27 = __chkstk_darwin(v26);
  uint64_t v135 = (char *)&v112 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v112 - v30;
  uint64_t v139 = *(void *)(v25 - 8);
  uint64_t v32 = __chkstk_darwin(v29);
  uint64_t v118 = (char *)&v112 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v117 = (char *)&v112 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v127 = (char *)&v112 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v128 = (char *)&v112 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v138 = (char *)&v112 - v41;
  __chkstk_darwin(v40);
  uint64_t v140 = (char *)&v112 - v42;
  uint64_t v43 = *(int *)(v18 + 72);
  uint64_t v143 = a3;
  uint64_t v44 = (char *)(a3 + v43);
  char v45 = *v44;
  uint64_t v46 = *((void *)v44 + 1);
  LOBYTE(v148) = *v44;
  uint64_t v149 = v46;
  sub_10017DF08(&qword_100E65950);
  uint64_t v47 = State.wrappedValue.getter();
  if (v147)
  {
    LOBYTE(v148) = v45;
    uint64_t v149 = v46;
    LOBYTE(v147) = 0;
    return State.wrappedValue.setter();
  }
  uint64_t v134 = a2;
  uint64_t v130 = v18;
  uint64_t v49 = *(int *)(v18 + 56);
  uint64_t v147 = *(void *)(v143 + v49);
  __chkstk_darwin(v47);
  *(&v112 - 6) = a4;
  *(&v112 - 5) = a5;
  uint64_t v50 = v142;
  *(&v112 - 4) = v141;
  *(&v112 - 3) = v50;
  *(&v112 - 2) = v51;
  type metadata accessor for Array();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  Sequence.first(where:)();
  swift_bridgeObjectRelease();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v25) == 1)
  {
    (*(void (**)(char *, uint64_t))(v136 + 8))(v31, v137);
    if (qword_100E627A0 != -1) {
      swift_once();
    }
    uint64_t v52 = type metadata accessor for Logger();
    sub_1002102B0(v52, (uint64_t)qword_100F51DF8);
    uint64_t v53 = Logger.logObject.getter();
    os_log_type_t v54 = static os_log_type_t.error.getter();
    BOOL v55 = os_log_type_enabled(v53, v54);
    uint64_t v56 = v130;
    uint64_t v57 = v134;
    if (v55)
    {
      uint64_t v58 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v58 = 0;
      _os_log_impl((void *)&_mh_execute_header, v53, v54, "The internal tab view selection does not correspond to a known page", v58, 2u);
      swift_slowDealloc();
    }

    return sub_100805B80(v57, v56);
  }
  else
  {
    int v114 = *(void (**)(char *, char *, uint64_t))(v139 + 32);
    v114(v140, v31, v25);
    uint64_t v116 = &v112;
    uint64_t v59 = *(void *)(v143 + v49);
    uint64_t v60 = v143;
    uint64_t v146 = v59;
    __chkstk_darwin(v59);
    uint64_t v115 = a4;
    *(&v112 - 6) = a4;
    *(&v112 - 5) = a5;
    uint64_t v61 = v142;
    *(&v112 - 4) = v141;
    *(&v112 - 3) = v61;
    *(&v112 - 2) = v134;
    swift_bridgeObjectRetain();
    uint64_t v62 = (uint64_t)v135;
    Sequence.first(where:)();
    swift_bridgeObjectRelease();
    if (_s7Weather24LocationCompositionStateOwet_0(v62, 1, v25) == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v62, v137);
      uint64_t v63 = v130;
      if (qword_100E627A0 != -1) {
        swift_once();
      }
      uint64_t v64 = type metadata accessor for Logger();
      sub_1002102B0(v64, (uint64_t)qword_100F51DF8);
      uint64_t v65 = Logger.logObject.getter();
      os_log_type_t v66 = static os_log_type_t.error.getter();
      BOOL v67 = os_log_type_enabled(v65, v66);
      uint64_t v68 = v134;
      if (v67)
      {
        uint64_t v69 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v69 = 0;
        _os_log_impl((void *)&_mh_execute_header, v65, v66, "The tab view destination does not correspond to a known page", v69, 2u);
        swift_slowDealloc();
      }

      sub_100805B80(v68, v63);
      return (*(uint64_t (**)(char *, uint64_t))(v139 + 8))(v140, v25);
    }
    else
    {
      v114(v138, (char *)v62, v25);
      uint64_t v70 = v130;
      uint64_t v71 = (uint64_t *)(v60 + *(int *)(v130 + 80));
      uint64_t v73 = *v71;
      uint64_t v72 = v71[1];
      uint64_t v148 = *v71;
      uint64_t v149 = v72;
      swift_retain();
      sub_10017DF08(qword_100E98948);
      uint64_t result = State.wrappedValue.getter();
      if (__OFADD__(v145, 1))
      {
        __break(1u);
      }
      else
      {
        uint64_t v148 = v73;
        uint64_t v149 = v72;
        uint64_t v144 = v145 + 1;
        State.wrappedValue.setter();
        swift_release();
        uint64_t v148 = v73;
        uint64_t v149 = v72;
        State.wrappedValue.getter();
        uint64_t v137 = v145;
        uint64_t v74 = v60 + *(int *)(v70 + 76);
        uint64_t v75 = v133;
        uint64_t v76 = type metadata accessor for State();
        uint64_t v77 = (uint64_t)v129;
        uint64_t v135 = (char *)v76;
        uint64_t v136 = v74;
        State.wrappedValue.getter();
        LODWORD(v74) = _s7Weather24LocationCompositionStateOwet_0(v77, 1, v132);
        uint64_t v129 = *(void (**)(uint64_t, uint64_t))(v131 + 8);
        v129(v77, v75);
        uint64_t v78 = v139;
        uint64_t v79 = *(void (**)(char *, char *, uint64_t))(v139 + 16);
        uint64_t v80 = v128;
        v79(v128, v140, v25);
        uint64_t v81 = v127;
        v79(v127, v138, v25);
        if (v74 == 1)
        {
          uint64_t v82 = v81;
          uint64_t v83 = a5;
          uint64_t v84 = v25;
          uint64_t v85 = *(void (**)(char *, uint64_t))(v78 + 8);
          v85(v82, v25);
          uint64_t v128 = (char *)v85;
          v85(v80, v25);
          uint64_t v139 = (v78 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        }
        else
        {
          uint64_t v83 = a5;
          char v86 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v87 = v25;
          uint64_t v90 = *(char **)(v78 + 8);
          uint64_t v89 = v78 + 8;
          int v88 = v90;
          uint64_t v91 = v81;
          uint64_t v84 = v87;
          ((void (*)(char *, uint64_t))v90)(v91, v87);
          ((void (*)(char *, uint64_t))v90)(v80, v84);
          if (v86)
          {
            sub_100805B80(v134, v130);
            ((void (*)(char *, uint64_t))v88)(v138, v84);
            return ((uint64_t (*)(char *, uint64_t))v88)(v140, v84);
          }
          uint64_t v139 = v89 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
          uint64_t v128 = v88;
        }
        uint64_t v92 = v138;
        uint64_t v113 = v84;
        uint64_t v93 = (uint64_t)v117;
        v79(v117, v140, v84);
        uint64_t v94 = (uint64_t)v118;
        v79(v118, v92, v84);
        uint64_t v95 = v119;
        uint64_t v96 = v83;
        sub_100805F2C(v93, v94, v137, v119);
        _s7Weather24LocationCompositionStateOwst_0(v95, 0, 1, v132);
        uint64_t v97 = v133;
        (*(void (**)(char *, uint64_t, uint64_t))(v131 + 16))(v120, v95, v133);
        State.wrappedValue.setter();
        v129(v95, v97);
        uint64_t v98 = v130;
        uint64_t v99 = (uint64_t *)(v143 + *(int *)(v130 + 60));
        uint64_t v100 = *v99;
        uint64_t v135 = (char *)v99[1];
        uint64_t v136 = v100;
        uint64_t v101 = v123;
        uint64_t v102 = v122;
        (*(void (**)(char *))(v123 + 16))(v122);
        uint64_t v103 = v126;
        uint64_t v104 = v125;
        (*(void (**)(char *, uint64_t, uint64_t))(v126 + 16))(v125, v134, v83);
        unint64_t v105 = (*(unsigned __int8 *)(v101 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80);
        unint64_t v106 = (v121 + v105 + 7) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v107 = (*(unsigned __int8 *)(v103 + 80) + v106 + 8) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80);
        uint64_t v108 = (char *)swift_allocObject();
        *((void *)v108 + 2) = v115;
        *((void *)v108 + 3) = v96;
        uint64_t v109 = v142;
        *((void *)v108 + 4) = v141;
        *((void *)v108 + 5) = v109;
        (*(void (**)(char *, char *, uint64_t))(v101 + 32))(&v108[v105], v102, v98);
        *(void *)&v108[v106] = v137;
        (*(void (**)(char *, char *, uint64_t))(v103 + 32))(&v108[v107], v104, v96);
        sub_1008049A0((uint64_t)sub_10080A7A4, (uint64_t)v108);
        swift_release();
        uint64_t v110 = v113;
        uint64_t v111 = (uint64_t (*)(char *, uint64_t))v128;
        ((void (*)(char *, uint64_t))v128)(v138, v113);
        return v111(v140, v110);
      }
    }
  }
  return result;
}

uint64_t sub_100805B80(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for OSSignpostID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v13[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = 0;
  Transaction.disablesPageScrollAnimations.setter();
  Transaction.disablesAnimations.setter();
  Transaction.animation.setter();
  static os_signpost_type_t.event.getter();
  sub_1001ABC4C(0, (unint64_t *)&qword_100E62D68);
  uint64_t v10 = (void *)OS_os_log.init(subsystem:category:)();
  static OSSignpostID.exclusive.getter();
  os_signpost(_:dso:log:name:signpostID:)();

  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  long long v11 = *(_OWORD *)(a2 + 32);
  long long v14 = *(_OWORD *)(a2 + 16);
  long long v15 = v11;
  uint64_t v16 = v3;
  uint64_t v17 = a1;
  swift_retain();
  withTransaction<A>(_:_:)();
  return swift_release_n();
}

uint64_t sub_100805D58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = *(void *)(a4 - 8);
  __chkstk_darwin(a1);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v13;
  uint64_t v19 = v14;
  uint64_t v20 = v15;
  uint64_t v21 = v16;
  type metadata accessor for Page();
  uint64_t v18 = a3;
  uint64_t v19 = a4;
  uint64_t v20 = a5;
  uint64_t v21 = a6;
  type metadata accessor for AnimatableTabView();
  type metadata accessor for State();
  State.wrappedValue.getter();
  LOBYTE(a5) = dispatch thunk of static Equatable.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, a4);
  return a5 & 1;
}

uint64_t sub_100805EAC()
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

uint64_t sub_100805F2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7 = type metadata accessor for Page();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32);
  v8(a4, a1, v7);
  uint64_t v9 = type metadata accessor for TransitionContext();
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v8)(a4 + *(int *)(v9 + 52), a2, v7);
  *(void *)(a4 + *(int *)(v9 + 56)) = a3;
  return result;
}

uint64_t sub_10080601C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v24 = a3;
  uint64_t v26 = a2;
  uint64_t v27 = a4;
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v30 = a7;
  uint64_t v11 = type metadata accessor for TransitionContext();
  uint64_t v25 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v23 - v12;
  uint64_t v14 = type metadata accessor for Optional();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v23 - v16;
  uint64_t v27 = a4;
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  uint64_t v30 = a7;
  uint64_t v18 = type metadata accessor for AnimatableTabView();
  type metadata accessor for State();
  State.wrappedValue.getter();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v11)) {
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  uint64_t v20 = v24;
  uint64_t v21 = v25;
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v13, v17, v11);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  uint64_t v22 = *(void *)&v13[*(int *)(v11 + 56)];
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v13, v11);
  if (v22 == v26) {
    return sub_100805B80(v20, v18);
  }
  return result;
}

uint64_t sub_100806254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v26 = a2;
  uint64_t v7 = *(void *)(a5 - 8);
  uint64_t v8 = __chkstk_darwin(a1);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v26 - v11;
  uint64_t v28 = v13;
  uint64_t v29 = v14;
  uint64_t v30 = v15;
  uint64_t v31 = v16;
  uint64_t v17 = type metadata accessor for AnimatableTabView();
  uint64_t v18 = (char *)(a3 + *(int *)(v17 + 68));
  char v19 = *v18;
  uint64_t v20 = *((void *)v18 + 1);
  LOBYTE(v28) = *v18;
  uint64_t v29 = v20;
  sub_10017DF08(&qword_100E65950);
  State.wrappedValue.getter();
  if (v27)
  {
    LOBYTE(v28) = v19;
    uint64_t v29 = v20;
    char v27 = 0;
  }
  else
  {
    uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v21(v12, v26, a5);
    v21(v10, (uint64_t)v12, a5);
    type metadata accessor for Binding();
    Binding.wrappedValue.setter();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, a5);
    uint64_t v22 = (char *)(a3 + *(int *)(v17 + 72));
    char v23 = *v22;
    uint64_t v24 = *((void *)v22 + 1);
    LOBYTE(v28) = v23;
    uint64_t v29 = v24;
    char v27 = 1;
  }
  return State.wrappedValue.setter();
}

uint64_t sub_100806434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v36 = a3;
  uint64_t v31 = a2;
  uint64_t v37 = a4;
  uint64_t v38 = a5;
  uint64_t v39 = a6;
  uint64_t v34 = type metadata accessor for TransitionContext();
  uint64_t v35 = type metadata accessor for Optional();
  uint64_t v33 = *(void *)(v35 - 8);
  uint64_t v11 = __chkstk_darwin(v35);
  uint64_t v32 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v30 = (uint64_t)&v29 - v14;
  uint64_t v15 = *(void *)(a4 - 8);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v29 - v19;
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  uint64_t v38 = a5;
  uint64_t v39 = a6;
  uint64_t v21 = (char *)(a1 + *(int *)(type metadata accessor for AnimatableTabView() + 68));
  char v22 = *v21;
  uint64_t v23 = *((void *)v21 + 1);
  LOBYTE(v36) = v22;
  uint64_t v37 = v23;
  char v40 = 1;
  sub_10017DF08(&qword_100E65950);
  State.wrappedValue.setter();
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v24(v20, v31, a4);
  v24(v18, (uint64_t)v20, a4);
  type metadata accessor for State();
  State.wrappedValue.setter();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v20, a4);
  uint64_t v25 = v30;
  _s7Weather24LocationCompositionStateOwst_0(v30, 1, 1, v34);
  uint64_t v26 = v33;
  uint64_t v27 = v35;
  (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v32, v25, v35);
  type metadata accessor for State();
  State.wrappedValue.setter();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(v25, v27);
}

uint64_t sub_100806720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v119 = a1;
  uint64_t v115 = a6;
  sub_10018C6DC(&qword_100E64440);
  uint64_t v10 = type metadata accessor for ModifiedContent();
  uint64_t v109 = *(void *)(v10 - 8);
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v108 = (uint64_t)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  unint64_t v105 = (char *)&v91 - v14;
  __chkstk_darwin(v13);
  uint64_t v120 = (uint64_t)&v91 - v15;
  uint64_t v150 = a2;
  uint64_t v151 = a3;
  uint64_t v152 = a4;
  uint64_t v153 = a5;
  uint64_t v121 = type metadata accessor for PageContainer();
  uint64_t v101 = *(void *)(v121 - 8);
  uint64_t v96 = *(void *)(v101 + 64);
  __chkstk_darwin(v121);
  uint64_t v98 = (char *)&v91 - v16;
  uint64_t v150 = a2;
  uint64_t v151 = a3;
  uint64_t v152 = a4;
  uint64_t v153 = a5;
  uint64_t v17 = type metadata accessor for IDView();
  uint64_t v95 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v94 = (char *)&v91 - v18;
  uint64_t v123 = v19;
  uint64_t v20 = type metadata accessor for ModifiedContent();
  uint64_t v99 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v97 = (char *)&v91 - v21;
  uint64_t v118 = v22;
  uint64_t v23 = type metadata accessor for ModifiedContent();
  uint64_t v102 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v100 = (char *)&v91 - v24;
  sub_10018C6DC(&qword_100EAAE30);
  uint64_t v114 = v23;
  uint64_t v25 = type metadata accessor for ModifiedContent();
  uint64_t v104 = *(void *)(v25 - 8);
  uint64_t v26 = __chkstk_darwin(v25);
  uint64_t v103 = (uint64_t)&v91 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v91 - v29;
  __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v91 - v31;
  uint64_t v110 = a2;
  uint64_t v150 = a2;
  uint64_t v151 = a3;
  uint64_t v106 = a3;
  uint64_t v122 = a4;
  uint64_t v152 = a4;
  uint64_t v153 = a5;
  uint64_t v107 = a5;
  uint64_t v33 = type metadata accessor for TransitionContext();
  uint64_t v34 = type metadata accessor for Optional();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v38 = (char *)&v91 - v37;
  uint64_t v39 = *(void *)(v33 - 8);
  __chkstk_darwin(v36);
  uint64_t v41 = (char *)&v91 - v40;
  uint64_t v113 = v25;
  uint64_t v111 = v10;
  uint64_t v42 = v121;
  uint64_t v117 = type metadata accessor for _ConditionalContent();
  uint64_t v116 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v112 = (char *)&v91 - v43;
  uint64_t v44 = v119;
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v38, v119 + *(int *)(v42 + 56), v34);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v33) == 1)
  {
    uint64_t v45 = v122;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v38, v34);
LABEL_7:
    if (!*(void *)(v44 + *(int *)(v42 + 52))) {
      static AnyTransition.identity.getter();
    }
    uint64_t v49 = (uint64_t)v105;
    swift_retain();
    View.transition(_:)();
    swift_release();
    uint64_t v50 = sub_1001246C8(&qword_100E64438, &qword_100E64440);
    uint64_t v148 = v45;
    uint64_t v149 = v50;
    uint64_t v51 = v111;
    swift_getWitnessTable();
    uint64_t v52 = v120;
    sub_100121584(v49, v51, v120);
    uint64_t v53 = *(void (**)(uint64_t, uint64_t))(v109 + 8);
    v53(v49, v51);
    uint64_t v54 = v108;
    sub_100121584(v52, v51, v108);
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v147 = v50;
    uint64_t v144 = swift_getWitnessTable();
    uint64_t v145 = &protocol witness table for _AppearanceActionModifier;
    uint64_t v55 = swift_getWitnessTable();
    uint64_t v56 = sub_1001246C8(&qword_100E70D10, &qword_100EAAE30);
    uint64_t v142 = v55;
    uint64_t v143 = v56;
    swift_getWitnessTable();
    uint64_t v57 = (uint64_t)v112;
    sub_100121F14();
    v53(v54, v51);
    v53(v120, v51);
    uint64_t v58 = v122;
    goto LABEL_12;
  }
  uint64_t v92 = v30;
  uint64_t v93 = v32;
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v41, v38, v33);
  uint64_t v46 = v110;
  uint64_t v150 = v110;
  uint64_t v151 = v106;
  uint64_t v45 = v122;
  uint64_t v152 = v122;
  uint64_t v153 = v107;
  type metadata accessor for Page();
  if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v39 + 8))(v41, v33);
    uint64_t v42 = v121;
    goto LABEL_7;
  }
  uint64_t v109 = v39;
  uint64_t v120 = v33;
  uint64_t v47 = v94;
  View.id<A>(_:)();
  uint64_t v48 = *(void *)(v44 + *(int *)(v121 + 52));
  uint64_t v91 = v41;
  if (!v48) {
    static AnyTransition.identity.getter();
  }
  uint64_t v59 = v123;
  uint64_t v60 = v97;
  uint64_t v61 = v95;
  swift_retain();
  uint64_t v62 = swift_getWitnessTable();
  View.transition(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v47, v59);
  uint64_t v63 = v101;
  uint64_t v64 = v98;
  uint64_t v65 = v121;
  (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v98, v119, v121);
  unint64_t v66 = (*(unsigned __int8 *)(v63 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
  BOOL v67 = (char *)swift_allocObject();
  uint64_t v68 = v106;
  *((void *)v67 + 2) = v46;
  *((void *)v67 + 3) = v68;
  uint64_t v69 = v122;
  uint64_t v70 = v107;
  *((void *)v67 + 4) = v122;
  *((void *)v67 + 5) = v70;
  (*(void (**)(char *, char *, uint64_t))(v63 + 32))(&v67[v66], v64, v65);
  uint64_t v121 = sub_1001246C8(&qword_100E64438, &qword_100E64440);
  uint64_t v130 = v62;
  uint64_t v131 = v121;
  uint64_t v71 = v118;
  uint64_t v72 = swift_getWitnessTable();
  uint64_t v73 = v100;
  View.onDisappear(perform:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v99 + 8))(v60, v71);
  swift_getKeyPath();
  LOBYTE(v150) = 1;
  uint64_t v128 = v72;
  uint64_t v129 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v74 = v114;
  uint64_t v75 = swift_getWitnessTable();
  uint64_t v76 = (uint64_t)v92;
  View.environment<A>(_:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v102 + 8))(v73, v74);
  uint64_t v77 = sub_1001246C8(&qword_100E70D10, &qword_100EAAE30);
  uint64_t v126 = v75;
  uint64_t v127 = v77;
  uint64_t v78 = v113;
  swift_getWitnessTable();
  uint64_t v79 = (uint64_t)v93;
  sub_100121584(v76, v78, (uint64_t)v93);
  uint64_t v80 = *(void (**)(uint64_t, uint64_t))(v104 + 8);
  v80(v76, v78);
  uint64_t v81 = v103;
  sub_100121584(v79, v78, v103);
  uint64_t v124 = v69;
  uint64_t v125 = v121;
  swift_getWitnessTable();
  uint64_t v57 = (uint64_t)v112;
  sub_1000E95C0();
  v80(v81, v78);
  v80(v79, v78);
  uint64_t v58 = v69;
  (*(void (**)(char *, uint64_t))(v109 + 8))(v91, v120);
LABEL_12:
  uint64_t v82 = v115;
  uint64_t v83 = swift_getWitnessTable();
  uint64_t v84 = sub_1001246C8(&qword_100E64438, &qword_100E64440);
  uint64_t v140 = v83;
  uint64_t v141 = v84;
  uint64_t v138 = swift_getWitnessTable();
  uint64_t v139 = &protocol witness table for _AppearanceActionModifier;
  uint64_t v85 = swift_getWitnessTable();
  uint64_t v86 = sub_1001246C8(&qword_100E70D10, &qword_100EAAE30);
  uint64_t v136 = v85;
  uint64_t v137 = v86;
  uint64_t v87 = swift_getWitnessTable();
  uint64_t v134 = v58;
  uint64_t v135 = v84;
  uint64_t v88 = swift_getWitnessTable();
  uint64_t v132 = v87;
  uint64_t v133 = v88;
  uint64_t v89 = v117;
  swift_getWitnessTable();
  sub_100121584(v57, v89, v82);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v116 + 8))(v57, v89);
}

uint64_t sub_10080763C()
{
  type metadata accessor for PageContainer();
  sub_10017DF08(qword_100E989D8);
  State.wrappedValue.getter();
  int v0 = *(unsigned __int8 *)(v2 + 16);
  swift_release();
  if (v0 == 1)
  {
    State.wrappedValue.getter();
    *(unsigned char *)(v2 + 16) = 0;
  }
  else
  {
    swift_retain();
    sub_10017DF08(&qword_100E65950);
    State.wrappedValue.getter();
    State.wrappedValue.setter();
  }
  return swift_release();
}

uint64_t sub_100807758()
{
  return type metadata accessor for PageContainerSidebarState();
}

uint64_t sub_100807760(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_100807808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1008078B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_100807958(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(unsigned int *)(*(void *)(v5 - 8) + 84);
  uint64_t v8 = *(void *)(v6 - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  if (v9 <= v7) {
    unsigned int v11 = *(_DWORD *)(*(void *)(v5 - 8) + 84);
  }
  else {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v12 = *(void *)(*(void *)(v5 - 8) + 64) + v10;
  unsigned int v13 = a2 - v11;
  if (a2 <= v11) {
    goto LABEL_24;
  }
  uint64_t v14 = (v12 & ~v10) + *(void *)(*(void *)(v6 - 8) + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v17 = ((v13 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v11)
      {
        if (v7 < v9)
        {
          a1 = (unsigned __int16 *)(((unint64_t)a1 + v12) & ~v10);
          uint64_t v7 = *(unsigned int *)(v8 + 84);
          uint64_t v5 = v6;
        }
        return _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, v7, v5);
      }
      return 0;
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_24;
  }
LABEL_14:
  int v18 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v18 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v19 = v14;
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v11 + (v20 | v18) + 1;
}

void sub_100807B30(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = a1;
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(unsigned int *)(*(void *)(v7 - 8) + 84);
  uint64_t v9 = *(void *)(a4 + 24);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  if (v11 <= v8) {
    unsigned int v12 = *(_DWORD *)(*(void *)(v7 - 8) + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = *(void *)(*(void *)(v7 - 8) + 64) + v13;
  size_t v15 = (v14 & ~v13) + *(void *)(*(void *)(v9 - 8) + 64);
  char v16 = 8 * v15;
  BOOL v17 = a3 >= v12;
  unsigned int v18 = a3 - v12;
  if (v18 != 0 && v17)
  {
    if (v15 <= 3)
    {
      unsigned int v22 = ((v18 + ~(-1 << v16)) >> v16) + 1;
      if (HIWORD(v22))
      {
        int v19 = 4;
      }
      else if (v22 >= 0x100)
      {
        int v19 = 2;
      }
      else
      {
        int v19 = v22 > 1;
      }
    }
    else
    {
      int v19 = 1;
    }
  }
  else
  {
    int v19 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v20 = ~v12 + a2;
    if (v15 < 4)
    {
      int v21 = (v20 >> v16) + 1;
      if (v15)
      {
        int v23 = v20 & ~(-1 << v16);
        bzero(a1, v15);
        if (v15 == 3)
        {
          *(_WORD *)uint64_t v6 = v23;
          void v6[2] = BYTE2(v23);
        }
        else if (v15 == 2)
        {
          *(_WORD *)uint64_t v6 = v23;
        }
        else
        {
          *uint64_t v6 = v23;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)uint64_t v6 = v20;
      int v21 = 1;
    }
    switch(v19)
    {
      case 1:
        v6[v15] = v21;
        return;
      case 2:
        *(_WORD *)&v6[v15] = v21;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&v6[v15] = v21;
        return;
      default:
        return;
    }
  }
  switch(v19)
  {
    case 1:
      a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x100807DBCLL);
    case 4:
      *(_DWORD *)&a1[v15] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v8 < v11)
        {
          a1 = (char *)((unint64_t)&a1[v14] & ~v13);
          uint64_t v8 = v11;
          uint64_t v7 = v9;
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, a2, v8, v7);
      }
      return;
  }
}

uint64_t *sub_100807DE4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v4 - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v5 + 64) + v7;
  unint64_t v10 = (v9 & ~(unint64_t)v7) + *(void *)(v6 + 64);
  int v11 = *(_DWORD *)(v5 + 80) | v7;
  uint64_t v12 = v11;
  unint64_t v13 = v10 + v11;
  unint64_t v14 = v10 + 7;
  unint64_t v15 = ((v10 + 7 + ((v10 + v12) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 8;
  int v16 = v11 & 0x100000;
  if (v12 > 7 || v16 != 0 || v15 > 0x18)
  {
    uint64_t v19 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v19 + ((v12 & 0xF8 ^ 0x1F8) & (v12 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v20 = ~v8;
    uint64_t v29 = ~v12;
    unint64_t v30 = v14;
    uint64_t v27 = *(void *)(a3 + 16);
    uint64_t v28 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16);
    v28(a1, a2, v27);
    unsigned int v22 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
    v22(((unint64_t)v3 + v9) & v20, ((unint64_t)a2 + v9) & v20, v4);
    uint64_t v26 = v4;
    unint64_t v23 = ((unint64_t)v3 + v13) & v29;
    unint64_t v24 = ((unint64_t)a2 + v13) & v29;
    v28((uint64_t *)v23, (uint64_t *)v24, v27);
    v22((v9 + v23) & v20, (v9 + v24) & v20, v26);
    *(void *)((v30 + v23) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v30 + v24) & 0xFFFFFFFFFFFFFFF8);
  }
  return v3;
}

uint64_t sub_100807FE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v15 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  uint64_t v16 = v8 + 8;
  unsigned int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = *(_DWORD *)(v8 + 80);
  uint64_t v11 = *(void *)(v5 + 64) + v10;
  v15((v11 + a1) & ~v10, v7);
  uint64_t v12 = *(unsigned __int8 *)(v5 + 80) | v9;
  uint64_t v13 = (*(void *)(v16 + 56) + a1 + (v11 & ~v10) + v12) & ~v12;
  v6(v13, v4);

  return ((uint64_t (*)(uint64_t, uint64_t))v15)((v11 + v13) & ~v10, v7);
}

uint64_t sub_100808110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  int v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  uint64_t v8 = v7 + 16;
  v21(a1, a2, v6);
  uint64_t v9 = *(void *)(a3 + 24);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  uint64_t v11 = v10 + 16;
  unsigned int v12 = *(_DWORD *)(v10 + 80);
  uint64_t v13 = *(_DWORD *)(v10 + 80);
  uint64_t v14 = *(void *)(v8 + 48) + v13;
  v20((v14 + a1) & ~v13, (v14 + a2) & ~v13, v9);
  uint64_t v15 = (v14 & ~v13) + *(void *)(v11 + 48);
  uint64_t v16 = *(unsigned __int8 *)(v8 + 64) | v12;
  uint64_t v17 = (v15 + v16 + a1) & ~v16;
  uint64_t v18 = (v15 + v16 + a2) & ~v16;
  v21(v17, v18, v6);
  v20((v14 + v17) & ~v13, (v14 + v18) & ~v13, v9);
  *(void *)((v15 + 7 + v17) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v15 + 7 + v18) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_100808274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  int v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  uint64_t v8 = v7 + 24;
  v21(a1, a2, v6);
  uint64_t v9 = *(void *)(a3 + 24);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24);
  uint64_t v11 = v10 + 24;
  unsigned int v12 = *(_DWORD *)(v10 + 80);
  uint64_t v13 = *(_DWORD *)(v10 + 80);
  uint64_t v14 = *(void *)(v8 + 40) + v13;
  v20((v14 + a1) & ~v13, (v14 + a2) & ~v13, v9);
  uint64_t v15 = (v14 & ~v13) + *(void *)(v11 + 40);
  uint64_t v16 = *(unsigned __int8 *)(v8 + 56) | v12;
  uint64_t v17 = (v15 + v16 + a1) & ~v16;
  uint64_t v18 = (v15 + v16 + a2) & ~v16;
  v21(v17, v18, v6);
  v20((v14 + v17) & ~v13, (v14 + v18) & ~v13, v9);
  *(void *)((v15 + 7 + v17) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v15 + 7 + v18) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1008083D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  int v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  uint64_t v8 = v7 + 32;
  v21(a1, a2, v6);
  uint64_t v9 = *(void *)(a3 + 24);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
  uint64_t v11 = v10 + 32;
  unsigned int v12 = *(_DWORD *)(v10 + 80);
  uint64_t v13 = *(_DWORD *)(v10 + 80);
  uint64_t v14 = *(void *)(v8 + 32) + v13;
  v20((v14 + a1) & ~v13, (v14 + a2) & ~v13, v9);
  uint64_t v15 = (v14 & ~v13) + *(void *)(v11 + 32);
  uint64_t v16 = *(unsigned __int8 *)(v8 + 48) | v12;
  uint64_t v17 = (v15 + v16 + a1) & ~v16;
  uint64_t v18 = (v15 + v16 + a2) & ~v16;
  v21(v17, v18, v6);
  v20((v14 + v17) & ~v13, (v14 + v18) & ~v13, v9);
  *(void *)((v15 + 7 + v17) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v15 + 7 + v18) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_10080853C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  int v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  uint64_t v8 = v7 + 40;
  v21(a1, a2, v6);
  uint64_t v9 = *(void *)(a3 + 24);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40);
  uint64_t v11 = v10 + 40;
  unsigned int v12 = *(_DWORD *)(v10 + 80);
  uint64_t v13 = *(_DWORD *)(v10 + 80);
  uint64_t v14 = *(void *)(v8 + 24) + v13;
  v20((v14 + a1) & ~v13, (v14 + a2) & ~v13, v9);
  uint64_t v15 = (v14 & ~v13) + *(void *)(v11 + 24);
  uint64_t v16 = *(unsigned __int8 *)(v8 + 40) | v12;
  uint64_t v17 = (v15 + v16 + a1) & ~v16;
  uint64_t v18 = (v15 + v16 + a2) & ~v16;
  v21(v17, v18, v6);
  v20((v14 + v17) & ~v13, (v14 + v18) & ~v13, v9);
  *(void *)((v15 + 7 + v17) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v15 + 7 + v18) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_1008086DC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(v4 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  unint64_t v8 = ((v6 + 16) & ~(unint64_t)v6) + v7 + (v6 | 7);
  uint64_t v9 = v7 + 7;
  unint64_t v10 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)(a3 + 16);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = (*(unsigned char *)(v12 + 80) | v6);
  unint64_t v14 = v13 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = ((*(void *)(v12 + 64) + v6) & ~(unint64_t)v6) + v7;
  uint64_t v16 = v15 + v13;
  uint64_t v17 = v15 + 7;
  unint64_t v18 = (v15 + 7 + ((v15 + v13) & ~v13)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = v18 + 8;
  int v20 = *(_DWORD *)(v5 + 84) | *(_DWORD *)(v12 + 84);
  unint64_t v21 = v18 + 9;
  if (v20) {
    size_t v22 = v19;
  }
  else {
    size_t v22 = v21;
  }
  if (v13 <= 7
    && ((*(_DWORD *)(v12 + 80) | v6) & 0x100000) == 0
    && ((v13
       + 16
       + ((((((((v10 + (v8 & ~(v6 | 7)) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)) & v14)
     + ((v22 + 7) & 0xFFFFFFFFFFFFFFF8)
     + 8
     + 65 <= 0x18)
  {
    unsigned int v65 = *(_DWORD *)(v5 + 84);
    unsigned int v66 = *(_DWORD *)(v12 + 84);
    uint64_t v63 = *(void *)(v11 - 8);
    size_t __n = v22;
    uint64_t v61 = v16;
    uint64_t v62 = v17;
    uint64_t v68 = *(void *)(v63 + 64) + v6;
    unint64_t v69 = v19;
    uint64_t v78 = v11;
    size_t v70 = v22 + 7;
    unint64_t v71 = ((v22 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    uint64_t v74 = ~(v6 | 7);
    unint64_t v75 = v10 + 8;
    unint64_t v76 = v13 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
    *a1 = *a2;
    uint64_t v27 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v28 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v27 = *v28;
    uint64_t v29 = a1;
    uint64_t v30 = v4;
    unint64_t v31 = ((unint64_t)v27 + v6 + 8) & ~(unint64_t)v6;
    unint64_t v67 = ~(unint64_t)v6;
    uint64_t v32 = ((unint64_t)v28 + v6 + 8) & v67;
    uint64_t v33 = *(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 16);
    int v80 = v20;
    swift_retain();
    swift_retain();
    v33(v31, v32, v30);
    uint64_t v79 = v29;
    unint64_t v34 = ((unint64_t)v29 + v8) & v74;
    unint64_t v35 = ((unint64_t)a2 + v8) & v74;
    uint64_t v73 = (void (*)(unint64_t, unint64_t, uint64_t))v33;
    v33(v34, v35, v30);
    *(void *)((v9 + v34) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v9 + v35) & 0xFFFFFFFFFFFFFFF8);
    *(void *)(v34 + v75) = *(void *)(v35 + v75);
    uint64_t v36 = (void *)((v34 + v75 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v37 = (void *)((v35 + v75 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v36 = *v37;
    v36[1] = v37[1];
    uint64_t v38 = (void *)(((unint64_t)v36 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v39 = (void *)(((unint64_t)v37 + 23) & 0xFFFFFFFFFFFFFFF8);
    void *v38 = *v39;
    unint64_t v40 = ((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v41 = ((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFFFF8;
    *(unsigned char *)unint64_t v40 = *(unsigned char *)v41;
    *(void *)(v40 + 8) = *(void *)(v41 + 8);
    unint64_t v42 = (v40 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v43 = (v41 + 23) & 0xFFFFFFFFFFFFFFF8;
    *(unsigned char *)unint64_t v42 = *(unsigned char *)v43;
    *(void *)(v42 + 8) = *(void *)(v43 + 8);
    uint64_t v44 = (unsigned char *)((v42 + 23) & v76);
    uint64_t v45 = (_DWORD *)((v43 + 23) & v76);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    if (v80)
    {
      if (v66 >= v65)
      {
        uint64_t v47 = v78;
        uint64_t v46 = v30;
        uint64_t v26 = v79;
        if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, v66, v78)) {
          goto LABEL_21;
        }
      }
      else
      {
        uint64_t v46 = v30;
        uint64_t v26 = v79;
        uint64_t v47 = v78;
        if (!_s7Weather24LocationCompositionStateOwet_0(((unint64_t)v45 + v68) & v67, v65, v30))
        {
LABEL_21:
          uint64_t v77 = *(void (**)(unsigned char *, _DWORD *, uint64_t))(v63 + 16);
          v77(v44, v45, v47);
          v73((unint64_t)&v44[v68] & v67, ((unint64_t)v45 + v68) & v67, v46);
          unint64_t v50 = (unint64_t)&v44[v61] & ~v13;
          unint64_t v51 = ((unint64_t)v45 + v61) & ~v13;
          v77((unsigned char *)v50, (_DWORD *)v51, v78);
          uint64_t v26 = v79;
          v73((v68 + v50) & v67, (v68 + v51) & v67, v30);
          *(void *)((v62 + v50) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v62 + v51) & 0xFFFFFFFFFFFFFFF8);
          size_t v52 = v70;
          unint64_t v53 = v71;
          if (!v80) {
            v44[v69] = 0;
          }
          goto LABEL_25;
        }
      }
    }
    else
    {
      uint64_t v46 = v30;
      uint64_t v26 = v79;
      uint64_t v47 = v78;
      if (!*((unsigned char *)v45 + v69)) {
        goto LABEL_21;
      }
      int v48 = *((unsigned __int8 *)v45 + v69) - 1;
      int v49 = v69 & 0xFFFFFFF8;
      if ((v69 & 0xFFFFFFF8) != 0)
      {
        int v48 = 0;
        int v49 = *v45;
      }
      if ((v49 | v48) == 0xFFFFFFFF) {
        goto LABEL_21;
      }
    }
    memcpy(v44, v45, __n);
    size_t v52 = v70;
    unint64_t v53 = v71;
LABEL_25:
    *(void *)((unint64_t)&v44[v52] & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v45 + v52) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v54 = &v44[v53];
    uint64_t v55 = (char *)v45 + v53;
    *(void *)uint64_t v54 = *(void *)((char *)v45 + v53);
    *((void *)v54 + 1) = *(void *)((char *)v45 + v53 + 8);
    v54[16] = *((unsigned char *)v45 + v53 + 16);
    uint64_t v56 = *(void *)((char *)v45 + v53 + 24);
    char v57 = *((unsigned char *)v45 + v53 + 32);
    swift_retain();
    swift_retain();
    sub_100195B7C(v56, v57);
    *((void *)v54 + 3) = v56;
    v54[32] = v57;
    uint64_t v58 = *((void *)v55 + 5);
    LOBYTE(v56) = v55[48];
    sub_100195B7C(v58, v56);
    *((void *)v54 + 5) = v58;
    v54[48] = v56;
    uint64_t v59 = *((void *)v55 + 7);
    LOBYTE(v56) = v55[64];
    sub_100195B7C(v59, v56);
    *((void *)v54 + 7) = v59;
    v54[64] = v56;
    return v26;
  }
  uint64_t v25 = *a2;
  *a1 = *a2;
  uint64_t v26 = (void *)(v25 + ((v13 + 16) & v14));
  swift_retain();
  return v26;
}

__n128 sub_100808C58(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  int v6 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *int v6 = *v7;
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unint64_t v10 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 32);
  uint64_t v11 = v9 + 32;
  int v12 = *(_DWORD *)(v9 + 80);
  uint64_t v13 = v12;
  unint64_t v64 = ~(unint64_t)v12;
  v10(((unint64_t)v6 + v13 + 8) & ~v13, ((unint64_t)v7 + v13 + 8) & ~v13, v8);
  uint64_t v14 = *(void *)(v11 + 32);
  uint64_t v15 = ((v13 + 16) & ~v13) + v14 + (v13 | 7);
  uint64_t v65 = v8;
  uint64_t v16 = ((unint64_t)a1 + v15) & ~(v12 | 7);
  uint64_t v17 = ((unint64_t)a2 + v15) & ~(v12 | 7);
  uint64_t v63 = v10;
  v10(v16, v17, v8);
  *(void *)((v14 + 7 + v16) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v14 + 7 + v17) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v18 = ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v19 = (void *)(v16 + v18);
  int v20 = (void *)(v17 + v18);
  void *v19 = *v20;
  unint64_t v21 = (_OWORD *)(((unint64_t)v19 + 15) & 0xFFFFFFFFFFFFFFF8);
  size_t v22 = (_OWORD *)(((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v21 = *v22;
  unint64_t v23 = (void *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v24 = (void *)(((unint64_t)v22 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v23 = *v24;
  uint64_t v25 = (_OWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v26 = (_OWORD *)(((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v25 = *v26;
  uint64_t v27 = (_OWORD *)(((unint64_t)v25 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v28 = (_OWORD *)(((unint64_t)v26 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v27 = *v28;
  uint64_t v29 = *(void *)(a3 + 16);
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(unsigned __int8 *)(v30 + 80) | v12;
  unint64_t v32 = (*(unsigned char *)(v30 + 80) | v12) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v33 = ((unint64_t)v27 + v31 + 16) & v32;
  uint64_t v34 = ((unint64_t)v28 + v31 + 16) & v32;
  unsigned int v35 = *(_DWORD *)(v30 + 84);
  uint64_t v36 = *(unsigned int *)(v11 + 52);
  uint64_t v37 = *(void *)(v30 + 64) + v12;
  uint64_t v38 = (v37 & v64) + v14;
  unint64_t v39 = (v38 + 7 + ((v38 + v31) & ~v31)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v40 = v39 + 8;
  int v41 = v36 | v35;
  uint64_t v61 = v38 + v31;
  uint64_t v62 = v38 + 7;
  if (v36 | v35)
  {
    if (v35 >= v36)
    {
      uint64_t v43 = v34;
      uint64_t v36 = *(unsigned int *)(v30 + 84);
      uint64_t v42 = v29;
    }
    else
    {
      uint64_t v42 = v65;
      uint64_t v43 = (v37 + v34) & v64;
    }
    if (_s7Weather24LocationCompositionStateOwet_0(v43, v36, v42))
    {
LABEL_12:
      if (v41) {
        size_t v50 = v39 + 8;
      }
      else {
        size_t v50 = v39 + 9;
      }
      memcpy((void *)v33, (const void *)v34, v50);
      if (v41) {
        goto LABEL_16;
      }
      unint64_t v40 = v39 + 9;
LABEL_18:
      unint64_t v51 = (void *)((v33 | 7) + v40);
      size_t v52 = (void *)((v34 | 7) + v40);
      goto LABEL_19;
    }
  }
  else if (*(unsigned char *)(v34 + v40))
  {
    int v44 = *(unsigned __int8 *)(v34 + v40) - 1;
    int v45 = v40 & 0xFFFFFFF8;
    if ((v40 & 0xFFFFFFF8) != 0)
    {
      int v44 = 0;
      int v45 = *(_DWORD *)v34;
    }
    if ((v45 | v44) != 0xFFFFFFFF) {
      goto LABEL_12;
    }
  }
  int v60 = v41;
  uint64_t v46 = ~v31;
  uint64_t v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 32);
  v47(v33, v34, v29);
  v63((v37 + v33) & v64, (v37 + v34) & v64, v65);
  uint64_t v48 = (v61 + v33) & ~v31;
  uint64_t v49 = (v61 + v34) & v46;
  v47(v48, v49, v29);
  v63((v37 + v48) & v64, (v37 + v49) & v64, v65);
  *(void *)((v62 + v48) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v62 + v49) & 0xFFFFFFFFFFFFFFF8);
  if (!v60)
  {
    *(unsigned char *)(v33 + v40) = 0;
    unint64_t v40 = v39 + 9;
    goto LABEL_18;
  }
LABEL_16:
  unint64_t v51 = (void *)(v40 + v33);
  size_t v52 = (void *)(v40 + v34);
LABEL_19:
  *unint64_t v51 = *v52;
  unint64_t v53 = ((v40 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v54 = (__n128 *)(v53 + v33);
  uint64_t v55 = (__n128 *)(v53 + v34);
  __n128 result = *v55;
  __n128 *v54 = *v55;
  v54[1].n128_u8[0] = v55[1].n128_u8[0];
  unint64_t v57 = v55[1].n128_u64[1];
  v54[2].n128_u8[0] = v55[2].n128_u8[0];
  v54[1].n128_u64[1] = v57;
  unint64_t v58 = v55[2].n128_u64[1];
  v54[3].n128_u8[0] = v55[3].n128_u8[0];
  v54[2].n128_u64[1] = v58;
  unint64_t v59 = v55[3].n128_u64[1];
  v54[4].n128_u8[0] = v55[4].n128_u8[0];
  v54[3].n128_u64[1] = v59;
  return result;
}

void *sub_100809068(void *a1, void *a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a2 + 15;
  *a1 = *a2;
  unint64_t v7 = (unint64_t)a1 + 15;
  swift_release();
  v6 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)(v7 & 0xFFFFFFFFFFFFFFF8) = *(void *)v6;
  swift_release();
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  int v88 = *(_DWORD *)(v9 + 80);
  unint64_t v83 = ~(unint64_t)v88;
  unint64_t v10 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 40);
  v10((v88 + 8 + (v7 & 0xFFFFFFFFFFFFFFF8)) & v83, (v88 + 8 + v6) & v83, v8);
  uint64_t v11 = *(void *)(v9 + 64);
  uint64_t v12 = ((v88 + 16) & v83) + v11 + (v88 | 7);
  uint64_t v82 = a1;
  uint64_t v13 = ((unint64_t)a1 + v12) & ~(v88 | 7);
  uint64_t v14 = ((unint64_t)a2 + v12) & ~(v88 | 7);
  uint64_t v84 = v8;
  uint64_t v77 = v10;
  v10(v13, v14, v8);
  *(void *)((v11 + 7 + v13) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v11 + 7 + v14) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  unint64_t v15 = ((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v16 = (void *)(v13 + v15);
  uint64_t v17 = (void *)(v14 + v15);
  *uint64_t v16 = *v17;
  swift_bridgeObjectRelease();
  unint64_t v18 = (void *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v19 = (void *)(((unint64_t)v17 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v18 = *v19;
  swift_release();
  v18[1] = v19[1];
  int v20 = (void *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v21 = (void *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
  *int v20 = *v21;
  swift_release();
  unint64_t v22 = ((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = ((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v22 = *(unsigned char *)v23;
  *(void *)(v22 + 8) = *(void *)(v23 + 8);
  swift_release();
  unint64_t v24 = (v22 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v24 = *(unsigned char *)v25;
  *(void *)(v24 + 8) = *(void *)(v25 + 8);
  swift_release();
  uint64_t v26 = *(void *)(a3 + 16);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(unsigned __int8 *)(v27 + 80) | v88;
  unint64_t v29 = (*(unsigned char *)(v27 + 80) | v88) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v30 = (v28 + 16 + v24) & v29;
  uint64_t v31 = (v28 + 16 + v25) & v29;
  uint64_t v32 = *(unsigned int *)(v27 + 84);
  uint64_t v80 = v9;
  uint64_t v33 = *(unsigned int *)(v9 + 84);
  uint64_t v34 = *(void *)(v27 + 64) + v88;
  uint64_t v35 = (v34 & v83) + v11;
  uint64_t v36 = ~v28;
  uint64_t v37 = v35 + v28;
  uint64_t v38 = (v35 + v28) & ~v28;
  v35 += 7;
  unint64_t v89 = (v35 + v38) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v39 = v89 + 8;
  int v87 = v33 | v32;
  uint64_t v79 = v35;
  uint64_t v85 = v36;
  uint64_t v81 = v37;
  if (v33 | v32)
  {
    if (v32 >= v33)
    {
      int v48 = _s7Weather24LocationCompositionStateOwet_0(v30, v32, v26);
      int v41 = _s7Weather24LocationCompositionStateOwet_0(v31, v32, v26);
      if (v48)
      {
LABEL_4:
        if (v41)
        {
LABEL_5:
          unint64_t v42 = v89;
          int v43 = v87;
          if (v87) {
            size_t v44 = v89 + 8;
          }
          else {
            size_t v44 = v89 + 9;
          }
          int v45 = (void *)v30;
LABEL_29:
          memcpy(v45, (const void *)v31, v44);
          uint64_t v55 = v82;
          goto LABEL_35;
        }
        goto LABEL_33;
      }
    }
    else
    {
      int v40 = _s7Weather24LocationCompositionStateOwet_0((v34 + v30) & v83, v33, v84);
      int v41 = _s7Weather24LocationCompositionStateOwet_0((v34 + v31) & v83, v33, v84);
      if (v40) {
        goto LABEL_4;
      }
    }
    if (!v41)
    {
LABEL_30:
      uint64_t v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 40);
      v56(v30, v31, v26);
      v77((v34 + v30) & v83, (v34 + v31) & v83, v84);
      uint64_t v57 = (v81 + v30) & v85;
      uint64_t v58 = (v81 + v31) & v85;
      v56(v57, v58, v26);
      v77((v34 + v57) & v83, (v34 + v58) & v83, v84);
      *(void *)((v79 + v57) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v79 + v58) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v55 = v82;
      unint64_t v42 = v89;
      int v43 = v87;
      goto LABEL_35;
    }
LABEL_25:
    unint64_t v53 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v53(v30, v26);
    uint64_t v54 = *(void (**)(unint64_t, uint64_t))(v80 + 8);
    v54((v34 + v30) & v83, v84);
    v53((v81 + v30) & v85, v26);
    v54((v34 + ((v81 + v30) & v85)) & v83, v84);
    unint64_t v42 = v89;
    int v43 = v87;
    if (v87) {
      size_t v44 = v89 + 8;
    }
    else {
      size_t v44 = v89 + 9;
    }
    int v45 = (void *)v30;
    goto LABEL_29;
  }
  if (!*(unsigned char *)(v30 + v39)
    || ((int v46 = *(unsigned __int8 *)(v30 + v39) - 1, v89 == -8) ? (v47 = 0) : (int v46 = 0, v47 = *(_DWORD *)v30),
        (v47 | v46) == 0xFFFFFFFF))
  {
    if (!*(unsigned char *)(v31 + v39)) {
      goto LABEL_30;
    }
    int v51 = *(unsigned __int8 *)(v31 + v39) - 1;
    if (v89 == -8)
    {
      int v52 = 0;
    }
    else
    {
      int v51 = 0;
      int v52 = *(_DWORD *)v31;
    }
    if ((v52 | v51) == 0xFFFFFFFF) {
      goto LABEL_30;
    }
    goto LABEL_25;
  }
  if (*(unsigned char *)(v31 + v39))
  {
    int v49 = *(unsigned __int8 *)(v31 + v39) - 1;
    if (v89 == -8)
    {
      int v50 = 0;
    }
    else
    {
      int v49 = 0;
      int v50 = *(_DWORD *)v31;
    }
    if ((v50 | v49) != 0xFFFFFFFF) {
      goto LABEL_5;
    }
  }
LABEL_33:
  unint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 32);
  v59(v30, v31, v26);
  uint64_t v78 = v26;
  int v60 = *(void (**)(unint64_t, unint64_t, uint64_t))(v80 + 32);
  v60((v34 + v30) & v83, (v34 + v31) & v83, v84);
  uint64_t v61 = (v81 + v30) & v85;
  uint64_t v62 = (v81 + v31) & v85;
  v59(v61, v62, v78);
  v60((v34 + v61) & v83, (v34 + v62) & v83, v84);
  *(void *)((v79 + v61) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v79 + v62) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v55 = v82;
  unint64_t v42 = v89;
  int v43 = v87;
  if (!v87) {
    *(unsigned char *)(v30 + v39) = 0;
  }
LABEL_35:
  if (v43) {
    unint64_t v63 = v89 + 8;
  }
  else {
    unint64_t v63 = v42 + 9;
  }
  *(void *)(((v30 | 7) + v63) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v31 | 7) + v63) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  unint64_t v64 = ((v63 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v65 = v64 + v30;
  unint64_t v66 = v64 + v31;
  *(void *)unint64_t v65 = *(void *)(v64 + v31);
  *(void *)(v65 + 8) = *(void *)(v64 + v31 + 8);
  swift_release();
  *(unsigned char *)(v65 + 16) = *(unsigned char *)(v66 + 16);
  char v67 = *(unsigned char *)(v66 + 32);
  uint64_t v68 = *(void *)(v65 + 24);
  char v69 = *(unsigned char *)(v65 + 32);
  *(void *)(v65 + 24) = *(void *)(v66 + 24);
  *(unsigned char *)(v65 + 32) = v67;
  sub_10018F6D8(v68, v69);
  char v70 = *(unsigned char *)(v66 + 48);
  uint64_t v71 = *(void *)(v65 + 40);
  char v72 = *(unsigned char *)(v65 + 48);
  *(void *)(v65 + 40) = *(void *)(v66 + 40);
  *(unsigned char *)(v65 + 48) = v70;
  sub_10018F6D8(v71, v72);
  char v73 = *(unsigned char *)(v66 + 64);
  uint64_t v74 = *(void *)(v65 + 56);
  char v75 = *(unsigned char *)(v65 + 64);
  *(void *)(v65 + 56) = *(void *)(v66 + 56);
  *(unsigned char *)(v65 + 64) = v73;
  sub_10018F6D8(v74, v75);
  return v55;
}

uint64_t sub_100809798(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  if (v7 <= 0x7FFFFFFE) {
    int v9 = 2147483646;
  }
  else {
    int v9 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  if (v7 <= v12) {
    int v13 = *(_DWORD *)(v11 + 84);
  }
  else {
    int v13 = *(_DWORD *)(v6 + 84);
  }
  unsigned int v14 = v13 - 1;
  if (!v13) {
    unsigned int v14 = 0;
  }
  if (v14 <= 0x7FFFFFFE) {
    unsigned int v15 = 2147483646;
  }
  else {
    unsigned int v15 = v14;
  }
  if (v15 <= v8) {
    unsigned int v16 = v8;
  }
  else {
    unsigned int v16 = v15;
  }
  int v17 = *(_DWORD *)(v6 + 80);
  uint64_t v18 = *(void *)(*(void *)(v5 - 8) + 64);
  int v19 = *(unsigned __int8 *)(v11 + 80);
  if (v13) {
    uint64_t v20 = 8;
  }
  else {
    uint64_t v20 = 16;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v21 = v17;
  uint64_t v22 = v17 | 7;
  unint64_t v23 = ((v17 + 16) & ~(unint64_t)v17) + v18 + v22;
  uint64_t v24 = v18 + 7;
  unint64_t v25 = (v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = v19 | v17;
  unint64_t v27 = (v19 | v17) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = v26 + 16;
  uint64_t v29 = *(void *)(*(void *)(v10 - 8) + 64) + v17;
  int v30 = a2 - v16;
  if (a2 <= v16) {
    goto LABEL_37;
  }
  unint64_t v31 = v20
      + (((v29 & ~v21) + v18 + (((v29 & ~v21) + v18 + v26) & ~v26) + 7) & 0xFFFFFFFFFFFFFFF8)
      + ((v28
        + ((((((((v25 + (v23 & ~v22) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 23) & 0xFFFFFFFFFFFFFFF8)) & v27)
      + 73;
  char v32 = 8 * v31;
  if (v31 > 3) {
    goto LABEL_27;
  }
  unsigned int v33 = ((v30 + ~(-1 << v32)) >> v32) + 1;
  if (HIWORD(v33))
  {
    int v34 = *(_DWORD *)&a1[v31];
    if (v34) {
      goto LABEL_30;
    }
LABEL_37:
    uint64_t v38 = ~v21;
    if (v8 >= v15)
    {
      int v41 = (unint64_t *)((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8);
      if ((v7 & 0x80000000) != 0)
      {
        uint64_t v39 = ((unint64_t)v41 + v21 + 8) & v38;
LABEL_53:
        return _s7Weather24LocationCompositionStateOwet_0(v39, v7, v5);
      }
      unint64_t v42 = *v41;
      goto LABEL_49;
    }
    uint64_t v39 = (unint64_t)&a1[v23] & ~v22;
    if (v9 == v16)
    {
      if (v7 <= 0x7FFFFFFD)
      {
        unint64_t v40 = *(void *)((v24 + v39) & 0xFFFFFFFFFFFFFFF8);
        if (v40 >= 0xFFFFFFFF) {
          LODWORD(v40) = -1;
        }
        if ((v40 + 1) >= 2) {
          return v40;
        }
        else {
          return 0;
        }
      }
      goto LABEL_53;
    }
    int v43 = (unint64_t *)(v39 + v25 + 8);
    if (v16 == 0x7FFFFFFF)
    {
      unint64_t v42 = *v43;
LABEL_49:
      if (v42 >= 0xFFFFFFFF) {
        LODWORD(v42) = -1;
      }
      return (v42 + 1);
    }
    if (v13)
    {
      unint64_t v44 = (v28
           + (((((((((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
             + 23) & 0xFFFFFFFFFFFFFFF8)) & v27;
      if (v12 >= v7)
      {
        uint64_t v7 = v12;
        uint64_t v5 = v10;
      }
      else
      {
        unint64_t v44 = (v29 + v44) & v38;
      }
      int v45 = _s7Weather24LocationCompositionStateOwet_0(v44, v7, v5);
      BOOL v46 = v45 != 0;
      uint64_t result = (v45 - 1);
      if (result != 0 && v46) {
        return result;
      }
    }
    return 0;
  }
  if (v33 > 0xFF)
  {
    int v34 = *(unsigned __int16 *)&a1[v31];
    if (*(_WORD *)&a1[v31]) {
      goto LABEL_30;
    }
    goto LABEL_37;
  }
  if (v33 < 2) {
    goto LABEL_37;
  }
LABEL_27:
  int v34 = a1[v31];
  if (!a1[v31]) {
    goto LABEL_37;
  }
LABEL_30:
  int v35 = (v34 - 1) << v32;
  if (v31 >= 4) {
    int v35 = 0;
  }
  if (v31 == 1) {
    int v36 = *a1;
  }
  else {
    int v36 = *(_DWORD *)a1;
  }
  return v16 + (v36 | v35) + 1;
}

void sub_100809AFC(char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  int v7 = 0;
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= 0x7FFFFFFF) {
    unsigned int v11 = 0x7FFFFFFF;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  if (v10 <= 0x7FFFFFFE) {
    int v12 = 2147483646;
  }
  else {
    int v12 = *(_DWORD *)(v9 + 84);
  }
  int v56 = v12;
  uint64_t v13 = *(void *)(a4 + 16);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned int *)(v14 + 84);
  if (v10 <= v15) {
    unsigned int v16 = *(_DWORD *)(v14 + 84);
  }
  else {
    unsigned int v16 = *(_DWORD *)(v9 + 84);
  }
  if (v16) {
    unsigned int v17 = v16 - 1;
  }
  else {
    unsigned int v17 = 0;
  }
  if (v17 <= 0x7FFFFFFE) {
    unsigned int v18 = 2147483646;
  }
  else {
    unsigned int v18 = v17;
  }
  if (v18 <= v11) {
    unsigned int v19 = v11;
  }
  else {
    unsigned int v19 = v18;
  }
  uint64_t v20 = *(_DWORD *)(v9 + 80);
  uint64_t v21 = *(void *)(*(void *)(v8 - 8) + 64);
  size_t v22 = ((v20 + 16) & ~v20) + v21;
  uint64_t v23 = v20 | 7;
  uint64_t v24 = v21 + 7;
  unint64_t v25 = (v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = *(unsigned __int8 *)(v14 + 80) | v20;
  unint64_t v27 = (*(unsigned char *)(v14 + 80) | v20) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = v26 + 16;
  unint64_t v29 = (v26
       + 16
       + ((((((((v25 + ((v22 + v23) & ~v23) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)) & v27;
  uint64_t v30 = *(void *)(*(void *)(v13 - 8) + 64) + v20;
  unint64_t v31 = ((v30 & ~v20) + v21 + (((v30 & ~v20) + v21 + v26) & ~v26) + 7) & 0xFFFFFFFFFFFFFFF8;
  size_t v32 = v31 + 8;
  size_t v33 = v31 + 9;
  if (v16) {
    size_t v34 = v32;
  }
  else {
    size_t v34 = v33;
  }
  size_t v35 = ((v34 + 7) & 0xFFFFFFFFFFFFFFF8) + v29 + 73;
  char v36 = 8 * v35;
  BOOL v37 = a3 >= v19;
  unsigned int v38 = a3 - v19;
  if (v38 != 0 && v37)
  {
    if (v35 <= 3)
    {
      unsigned int v39 = ((v38 + ~(-1 << v36)) >> v36) + 1;
      if (HIWORD(v39))
      {
        int v7 = 4;
      }
      else if (v39 >= 0x100)
      {
        int v7 = 2;
      }
      else
      {
        int v7 = v39 > 1;
      }
    }
    else
    {
      int v7 = 1;
    }
  }
  if (v19 < a2)
  {
    unsigned int v40 = ~v19 + a2;
    if (v35 < 4)
    {
      int v41 = (v40 >> v36) + 1;
      v40 &= ~(-1 << v36);
      bzero(a1, v35);
      if (v35 == 1)
      {
        *a1 = v40;
LABEL_40:
        switch(v7)
        {
          case 1:
            a1[v35] = v41;
            return;
          case 2:
            *(_WORD *)&a1[v35] = v41;
            return;
          case 3:
            goto LABEL_101;
          case 4:
            *(_DWORD *)&a1[v35] = v41;
            return;
          default:
            return;
        }
      }
    }
    else
    {
      bzero(a1, ((v34 + 7) & 0xFFFFFFFFFFFFFFF8) + v29 + 73);
      int v41 = 1;
    }
    *(_DWORD *)a1 = v40;
    goto LABEL_40;
  }
  uint64_t v42 = ~v20;
  switch(v7)
  {
    case 1:
      a1[v35] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_44;
    case 2:
      *(_WORD *)&a1[v35] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_44;
    case 3:
LABEL_101:
      __break(1u);
      JUMPOUT(0x10080A07CLL);
    case 4:
      *(_DWORD *)&a1[v35] = 0;
      goto LABEL_43;
    default:
LABEL_43:
      if (!a2) {
        return;
      }
LABEL_44:
      if (v11 >= v18)
      {
        if (v11 >= a2)
        {
          unint64_t v44 = (void *)((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8);
          if ((v10 & 0x80000000) == 0)
          {
            if ((a2 & 0x80000000) != 0) {
              uint64_t v45 = a2 ^ 0x80000000;
            }
            else {
              uint64_t v45 = (a2 - 1);
            }
LABEL_85:
            *unint64_t v44 = v45;
            return;
          }
          uint64_t v43 = ((unint64_t)v44 + v20 + 8) & v42;
          goto LABEL_73;
        }
        if (v22 <= 3) {
          int v46 = ~(-1 << (8 * v22));
        }
        else {
          int v46 = -1;
        }
        if (v22)
        {
          int v47 = v46 & (~v11 + a2);
          if (v22 <= 3) {
            int v48 = v22;
          }
          else {
            int v48 = 4;
          }
          bzero(a1, v22);
          switch(v48)
          {
            case 2:
              *(_WORD *)a1 = v47;
              break;
            case 3:
              *(_WORD *)a1 = v47;
              a1[2] = BYTE2(v47);
              break;
            case 4:
              goto LABEL_94;
            default:
              *a1 = v47;
              break;
          }
        }
      }
      else
      {
        uint64_t v43 = (unint64_t)&a1[v22 + v23] & ~v23;
        if (v56 == v19)
        {
          if (v10 <= 0x7FFFFFFD)
          {
            unint64_t v44 = (void *)((v24 + v43) & 0xFFFFFFFFFFFFFFF8);
            if (a2 > 0x7FFFFFFE)
            {
              *unint64_t v44 = 0;
              *(_DWORD *)unint64_t v44 = a2 - 0x7FFFFFFF;
              return;
            }
            uint64_t v45 = a2;
            goto LABEL_85;
          }
LABEL_73:
          _s7Weather24LocationCompositionStateOwst_0(v43, a2, v10, v8);
          return;
        }
        int v49 = (void *)(v43 + v25 + 8);
        if (v19 == 0x7FFFFFFF)
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v50 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v50 = (a2 - 1);
          }
          *int v49 = v50;
          return;
        }
        a1 = (char *)((v28
                     + (((((((((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                       + 23) & 0xFFFFFFFFFFFFFFF8)) & v27);
        if (v18 >= a2)
        {
          if (v17 < a2)
          {
            if (v34 < 4) {
              int v54 = ~(-1 << (8 * v34));
            }
            else {
              int v54 = -1;
            }
            if (v34)
            {
              int v55 = v54 & (~v17 + a2);
              bzero((void *)((v28+ (((((((((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 23) & 0xFFFFFFFFFFFFFFF8)) & v27), v34);
              if (v34 == 1) {
                *a1 = v55;
              }
              else {
                *(_DWORD *)a1 = v55;
              }
            }
            return;
          }
          if ((int)a2 + 1 <= v16)
          {
            if (a2 == -1) {
              return;
            }
            if (v15 >= v10)
            {
              uint64_t v43 = (v28
                   + (((((((((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 23) & 0xFFFFFFFFFFFFFFF8)) & v27;
              a2 = (a2 + 1);
              uint64_t v10 = v15;
              uint64_t v8 = v13;
            }
            else
            {
              uint64_t v43 = (unint64_t)&a1[v30] & v42;
              a2 = (a2 + 1);
            }
            goto LABEL_73;
          }
          if (!v32) {
            return;
          }
          int v47 = a2 - v16;
          int v52 = (void *)((v28
                        + (((((((((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                          + 23) & 0xFFFFFFFFFFFFFFF8)) & v27);
          size_t v53 = v32;
        }
        else
        {
          size_t v51 = ((v34 + 7) & 0xFFFFFFF8) + 8;
          if (((v34 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
            return;
          }
          int v47 = ~v18 + a2;
          int v52 = (void *)((v28
                        + (((((((((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                          + 23) & 0xFFFFFFFFFFFFFFF8)) & v27);
          size_t v53 = v51;
        }
        bzero(v52, v53);
LABEL_94:
        *(_DWORD *)a1 = v47;
      }
      return;
  }
}

uint64_t sub_10080A0B8(uint64_t a1, uint64_t a2)
{
  return sub_10080A0EC(a1, a2, (uint64_t (*)(uint64_t))sub_100804E70);
}

uint64_t sub_10080A0D4(uint64_t a1, uint64_t a2)
{
  return sub_10080A0EC(a1, a2, (uint64_t (*)(uint64_t))sub_100806254);
}

uint64_t sub_10080A0EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3 = type metadata accessor for AnimatableTabView();
  sub_1001627C0(v3);
  uint64_t v4 = sub_1001A24D4();

  return a3(v4);
}

uint64_t sub_10080A174(uint64_t a1)
{
  return sub_10080A4D4(a1, sub_100805D58) & 1;
}

uint64_t sub_10080A1A4(unsigned char *a1, unsigned char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v35 = a3;
  uint64_t v38 = a4;
  uint64_t v39 = a5;
  uint64_t v40 = a6;
  uint64_t v41 = a7;
  uint64_t v13 = type metadata accessor for TransitionContext();
  uint64_t v14 = type metadata accessor for Optional();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  unsigned int v18 = (char *)&v33 - v17;
  uint64_t result = __chkstk_darwin(v16);
  if (*a1 == 1 && (*a2 & 1) == 0)
  {
    uint64_t v33 = v21;
    size_t v34 = (char *)&v33 - v20;
    uint64_t v38 = a4;
    uint64_t v39 = a5;
    uint64_t v40 = a6;
    uint64_t v41 = a7;
    uint64_t v22 = type metadata accessor for RebuildPageWhenSidebarCollapsesDuringTransitionModifier();
    uint64_t v23 = v35;
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, v35 + *(int *)(v22 + 60), v14);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v13) == 1)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    }
    else
    {
      uint64_t v25 = v33;
      uint64_t v24 = v34;
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v34, v18, v13);
      uint64_t v38 = a4;
      uint64_t v39 = a5;
      uint64_t v40 = a6;
      uint64_t v41 = a7;
      type metadata accessor for Page();
      if (dispatch thunk of static Equatable.== infix(_:_:)())
      {
        uint64_t v26 = v23;
        swift_retain();
        sub_1005D25BC();
        uint64_t v28 = v27;
        swift_release();
        *(unsigned char *)(v28 + 16) = 1;
        swift_release();
        unint64_t v29 = (uint64_t *)(v26 + *(int *)(v22 + 64));
        uint64_t v31 = v29[1];
        char v32 = *((unsigned char *)v29 + 16);
        uint64_t v38 = *v29;
        uint64_t v30 = v38;
        uint64_t v39 = v31;
        LOBYTE(v40) = v32;
        swift_retain();
        swift_retain();
        sub_10017DF08((uint64_t *)&unk_100E749A0);
        Binding.wrappedValue.getter();
        uint64_t v38 = v30;
        uint64_t v39 = v31;
        LOBYTE(v40) = v32;
        BOOL v36 = (v37 & 1) == 0;
        Binding.wrappedValue.setter();
        swift_release();
        swift_release();
      }
      return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v24, v13);
    }
  }
  return result;
}

uint64_t sub_10080A4A4(uint64_t a1)
{
  return sub_10080A4D4(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_100805EAC) & 1;
}

uint64_t sub_10080A4D4(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[6], v2[2], v2[3], v2[4], v2[5]) & 1;
}

uint64_t sub_10080A504()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_10019D948();
  uint64_t v2 = (int *)type metadata accessor for AnimatableTabView();
  sub_100179EF0();
  sub_10017C83C();
  uint64_t v4 = v3;
  uint64_t v6 = v0 + v5;
  swift_release();
  swift_release();
  type metadata accessor for Binding();
  uint64_t v7 = *(void *)(v4 + 8);
  sub_100164F40();
  ((void (*)(void))v7)();
  sub_100164F40();
  ((void (*)(void))v7)();
  type metadata accessor for State();
  sub_10012B664();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v8 = v6 + v2[19];
  if (!sub_10017A970())
  {
    sub_100162880();
    sub_100127BA4();
    v9();
    sub_10019D948();
    uint64_t v10 = type metadata accessor for Page();
    sub_100164F40();
    ((void (*)(void))v7)();
    uint64_t v11 = v8 + *(int *)(v7 + 52);
    sub_100127BA4();
    v12();
    ((void (*)(uint64_t, uint64_t))v7)(v11 + *(int *)(v10 + 52), v1);
  }
  type metadata accessor for Optional();
  type metadata accessor for State();
  sub_10012B664();
  swift_release();
  sub_100184B90(v2[22]);
  sub_100184B90(v2[23]);
  sub_100184B90(v2[24]);
  sub_100164F40();
  v13();
  return swift_deallocObject();
}

uint64_t sub_10080A7A4()
{
  sub_100185C8C();
  uint64_t v5 = *(void *)(type metadata accessor for AnimatableTabView() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v1 + v7);
  uint64_t v9 = v1
     + ((v7 + *(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80));

  return sub_10080601C(v1 + v6, v8, v9, v0, v2, v3, v4);
}

uint64_t sub_10080A89C()
{
  return sub_100806434(v0[6], v0[7], v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_10080A8D0(uint64_t a1)
{
  uint64_t v3 = v1[4];
  uint64_t v4 = v1[5];
  uint64_t v5 = v1[6];
  uint64_t v6 = v1[7];
  uint64_t v7 = type metadata accessor for AnimatableTabView();
  sub_1001627C0(v7);
  uint64_t v9 = v1[2];
  uint64_t v10 = v1[3];
  uint64_t v11 = (uint64_t)v1 + ((*(unsigned __int8 *)(v8 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));

  return sub_100804D08(a1, v9, v10, v11, v3, v4, v5, v6);
}

uint64_t *sub_10080A960(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v4 - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v5 + 64) + v7;
  unint64_t v10 = (v9 & ~(unint64_t)v7) + *(void *)(v6 + 64);
  int v11 = *(_DWORD *)(v5 + 80) | v7;
  uint64_t v12 = v11;
  unint64_t v13 = v11 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  unint64_t v14 = (v10 + 7 + ((v10 + v12) & ~v12)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = v14 + 8;
  int v16 = *(_DWORD *)(v6 + 84) | *(_DWORD *)(v5 + 84);
  size_t v17 = v14 + 9;
  if (v16) {
    size_t v17 = v15;
  }
  int v18 = v11 & 0x100000;
  if (v12 <= 7
    && v18 == 0
    && ((((v17 + ((v12 + 16 + ((v10 + 7) & 0xFFFFFFFFFFFFFFF8)) & v13) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16 <= 0x18)
  {
    unsigned int v47 = *(_DWORD *)(v6 + 84);
    unsigned int v48 = *(_DWORD *)(v5 + 84);
    uint64_t v45 = v10 + v12;
    unint64_t v46 = v10 + 7;
    uint64_t v50 = *(void *)(a3 + 16);
    unint64_t v51 = v15;
    size_t __n = v17;
    uint64_t v23 = ~v8;
    unint64_t v44 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16);
    v44(a1, a2, v50);
    uint64_t v49 = v23;
    uint64_t v53 = v4;
    uint64_t v25 = v4;
    int v26 = v16;
    int v52 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
    v52(((unint64_t)a1 + v9) & v23, ((unint64_t)a2 + v9) & v23, v25);
    uint64_t v27 = (void *)(((unint64_t)a1 + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v28 = (void *)(((unint64_t)a2 + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v27 = *v28;
    v27[1] = v28[1];
    uint64_t v29 = ((unint64_t)v27 + 23) & v13;
    uint64_t v30 = ((unint64_t)v28 + 23) & v13;
    swift_retain();
    if (v26)
    {
      if (v48 >= v47)
      {
        int v32 = _s7Weather24LocationCompositionStateOwet_0(v30, v48, v50);
        uint64_t v31 = v53;
      }
      else
      {
        uint64_t v31 = v53;
        int v32 = _s7Weather24LocationCompositionStateOwet_0((v9 + v30) & v23, v47, v53);
      }
      if (v32)
      {
LABEL_23:
        size_t v38 = __n;
        memcpy((void *)v29, (const void *)v30, __n);
LABEL_24:
        unint64_t v39 = ((v29 | 7) + v38) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v40 = ((v30 | 7) + v38) & 0xFFFFFFFFFFFFFFF8;
        *(unsigned char *)unint64_t v39 = *(unsigned char *)v40;
        *(void *)(v39 + 8) = *(void *)(v40 + 8);
        uint64_t v41 = (void *)((v39 + 23) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v42 = (void *)((v40 + 23) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v41 = *v42;
        v41[1] = v42[1];
        swift_retain();
        swift_retain();
        uint64_t v22 = a1;
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v31 = v53;
      if (*(unsigned char *)(v30 + v51))
      {
        int v33 = *(unsigned __int8 *)(v30 + v51) - 1;
        int v34 = v51 & 0xFFFFFFF8;
        if ((v51 & 0xFFFFFFF8) != 0)
        {
          int v33 = 0;
          int v34 = *(_DWORD *)v30;
        }
        if ((v34 | v33) != 0xFFFFFFFF) {
          goto LABEL_23;
        }
      }
    }
    v44((uint64_t *)v29, (uint64_t *)v30, v50);
    v52((v9 + v29) & v23, (v9 + v30) & v23, v31);
    uint64_t v54 = v29;
    uint64_t v35 = (v45 + v29) & ~v12;
    uint64_t v36 = (v45 + v30) & ~v12;
    v44((uint64_t *)v35, (uint64_t *)v36, v50);
    v52((v9 + v35) & v49, (v9 + v36) & v49, v31);
    unint64_t v37 = v46 + v35;
    uint64_t v29 = v54;
    size_t v38 = __n;
    *(void *)(v37 & 0xFFFFFFFFFFFFFFF8) = *(void *)((v46 + v36) & 0xFFFFFFFFFFFFFFF8);
    if (!v26) {
      *(unsigned char *)(v54 + v51) = 0;
    }
    goto LABEL_24;
  }
  uint64_t v21 = *a2;
  *a1 = *a2;
  uint64_t v22 = (uint64_t *)(v21 + ((v12 + 16) & v13));
LABEL_25:
  swift_retain();
  return v22;
}

uint64_t sub_10080AD5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8) + 32;
  uint64_t v44 = v6;
  uint64_t v45 = *(void (**)(void))v7;
  (*(void (**)(void))v7)();
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t v9 = a1;
  uint64_t v10 = *(void *)(v8 - 8);
  int v11 = *(void (**)(unint64_t, unint64_t))(v10 + 32);
  uint64_t v12 = v10 + 32;
  unsigned int v13 = *(_DWORD *)(v10 + 80);
  uint64_t v14 = *(void *)(v7 + 32) + *(_DWORD *)(v10 + 80);
  unint64_t v15 = ~(unint64_t)*(_DWORD *)(v10 + 80);
  uint64_t v43 = v8;
  v11((v14 + a1) & v15, (v14 + a2) & v15);
  unint64_t v16 = (v14 & v15) + *(void *)(v12 + 32);
  unint64_t v17 = v16 + 7;
  uint64_t v48 = v9;
  int v18 = (_OWORD *)((v16 + 7 + v9) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v19 = (_OWORD *)((v16 + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v18 = *v19;
  uint64_t v20 = *(unsigned __int8 *)(v7 + 48) | v13;
  unint64_t v21 = (*(unsigned char *)(v7 + 48) | v13) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = ((unint64_t)v18 + v20 + 16) & v21;
  uint64_t v23 = ((unint64_t)v19 + v20 + 16) & v21;
  unsigned int v24 = *(_DWORD *)(v7 + 52);
  uint64_t v25 = *(unsigned int *)(v12 + 52);
  unint64_t v47 = (v16 + 7 + ((v16 + v20) & ~v20)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = v47 + 8;
  int v46 = v25 | v24;
  uint64_t v42 = v16 + v20;
  if (v25 | v24)
  {
    if (v24 >= v25)
    {
      uint64_t v27 = ((unint64_t)v19 + v20 + 16) & v21;
      uint64_t v25 = *(unsigned int *)(v7 + 52);
      uint64_t v28 = v44;
    }
    else
    {
      uint64_t v27 = (v14 + v23) & v15;
      uint64_t v28 = v43;
    }
    if (_s7Weather24LocationCompositionStateOwet_0(v27, v25, v28))
    {
LABEL_12:
      unint64_t v34 = v47;
      int v35 = v46;
      if (v46) {
        size_t v36 = v47 + 8;
      }
      else {
        size_t v36 = v47 + 9;
      }
      memcpy((void *)v22, (const void *)v23, v36);
      goto LABEL_16;
    }
  }
  else if (*(unsigned char *)(v23 + v26))
  {
    int v29 = *(unsigned __int8 *)(v23 + v26) - 1;
    int v30 = v26 & 0xFFFFFFF8;
    if ((v26 & 0xFFFFFFF8) != 0)
    {
      int v29 = 0;
      int v30 = *(_DWORD *)v23;
    }
    if ((v30 | v29) != 0xFFFFFFFF) {
      goto LABEL_12;
    }
  }
  uint64_t v41 = (void (*)(unint64_t, unint64_t, uint64_t))v11;
  ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v22, v23, v44);
  ((void (*)(unint64_t, unint64_t, uint64_t))v11)((v14 + v22) & v15, (v14 + v23) & v15, v43);
  uint64_t v31 = ~v20;
  uint64_t v32 = (v42 + v22) & ~v20;
  uint64_t v33 = (v42 + v23) & v31;
  ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v32, v33, v44);
  v41((v14 + v32) & v15, (v14 + v33) & v15, v43);
  *(void *)((v17 + v32) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v17 + v33) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v34 = v47;
  int v35 = v46;
  if (!v46) {
    *(unsigned char *)(v22 + v26) = 0;
  }
LABEL_16:
  unint64_t v37 = v34 + 9;
  if (v35) {
    unint64_t v37 = v47 + 8;
  }
  size_t v38 = (_OWORD *)(((v22 | 7) + v37) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v39 = (_OWORD *)(((v23 | 7) + v37) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v38 = *v39;
  *(_OWORD *)(((unint64_t)v38 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v39 + 23) & 0xFFFFFFFFFFFFFFF8);
  return v48;
}

uint64_t sub_10080B048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  uint64_t v63 = v6;
  uint64_t v54 = *(void (**)(void))(v7 + 40);
  v54();
  uint64_t v9 = *(void *)(a3 + 24);
  uint64_t v10 = *(void *)(v9 - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = *(void *)(v7 + 64) + *(_DWORD *)(v10 + 80);
  unint64_t v61 = ~(unint64_t)*(_DWORD *)(v10 + 80);
  uint64_t v62 = v9;
  uint64_t v53 = *(void (**)(unint64_t, unint64_t))(v10 + 40);
  v53((v12 + a1) & v61, (v12 + a2) & v61);
  unint64_t v13 = (v12 & v61) + *(void *)(v10 + 64);
  unint64_t v14 = v13 + 7;
  uint64_t v60 = a1;
  unint64_t v15 = (void *)((v13 + 7 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v16 = (void *)((v13 + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v15 = *v16;
  swift_release();
  v15[1] = v16[1];
  uint64_t v17 = *(unsigned __int8 *)(v8 + 80) | v11;
  unint64_t v18 = (*(unsigned char *)(v8 + 80) | v11) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = ((unint64_t)v15 + v17 + 16) & v18;
  uint64_t v20 = ((unint64_t)v16 + v17 + 16) & v18;
  uint64_t v21 = *(unsigned int *)(v8 + 84);
  uint64_t v22 = *(unsigned int *)(v10 + 84);
  unint64_t v59 = (v13 + 7 + ((v13 + v17) & ~v17)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = v59 + 8;
  int v58 = v22 | v21;
  uint64_t v56 = v13 + v17;
  uint64_t v57 = ~v17;
  if (!(v22 | v21))
  {
    if (*(unsigned char *)(v19 + v23))
    {
      int v25 = *(unsigned __int8 *)(v19 + v23) - 1;
      if (v59 == -8)
      {
        int v26 = 0;
      }
      else
      {
        int v25 = 0;
        int v26 = *(_DWORD *)v19;
      }
      if ((v26 | v25) != 0xFFFFFFFF)
      {
        if (!*(unsigned char *)(v20 + v23)) {
          goto LABEL_18;
        }
        int v28 = *(unsigned __int8 *)(v20 + v23) - 1;
        int v29 = v59 + 8;
        if (v59 != -8)
        {
          int v28 = 0;
          int v29 = *(_DWORD *)v20;
        }
        if ((v29 | v28) == 0xFFFFFFFF) {
          goto LABEL_18;
        }
LABEL_25:
        unint64_t v35 = v59;
        int v38 = v58;
        unint64_t v37 = v59 + 8;
        if (v58) {
          size_t v43 = v59 + 8;
        }
        else {
          size_t v43 = v59 + 9;
        }
        memcpy((void *)v19, (const void *)v20, v43);
        uint64_t v36 = v60;
        goto LABEL_30;
      }
    }
    if (!*(unsigned char *)(v20 + v23)) {
      goto LABEL_29;
    }
    int v39 = *(unsigned __int8 *)(v20 + v23) - 1;
    int v40 = v59 + 8;
    if (v59 != -8)
    {
      int v39 = 0;
      int v40 = *(_DWORD *)v20;
    }
    if ((v40 | v39) == 0xFFFFFFFF)
    {
LABEL_29:
      ((void (*)(uint64_t, uint64_t, uint64_t))v54)(v19, v20, v63);
      ((void (*)(unint64_t, unint64_t, uint64_t))v53)((v12 + v19) & v61, (v12 + v20) & v61, v62);
      uint64_t v44 = (v56 + v19) & v57;
      uint64_t v45 = (v56 + v20) & v57;
      ((void (*)(uint64_t, uint64_t, uint64_t))v54)(v44, v45, v63);
      ((void (*)(unint64_t, unint64_t, uint64_t))v53)((v12 + v44) & v61, (v12 + v45) & v61, v62);
      *(void *)((v14 + v44) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v14 + v45) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v35 = v59;
      uint64_t v36 = v60;
      unint64_t v37 = v59 + 8;
      int v38 = v58;
      goto LABEL_30;
    }
LABEL_24:
    uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v41(v19, v63);
    uint64_t v42 = *(void (**)(unint64_t, uint64_t))(v10 + 8);
    v42((v12 + v19) & v61, v62);
    v41((v56 + v19) & v57, v63);
    v42((v12 + ((v56 + v19) & v57)) & v61, v62);
    goto LABEL_25;
  }
  if (v21 < v22)
  {
    int v52 = _s7Weather24LocationCompositionStateOwet_0((v12 + v19) & v61, v22, v62);
    int v24 = _s7Weather24LocationCompositionStateOwet_0((v12 + v20) & v61, v22, v62);
    if (v52) {
      goto LABEL_4;
    }
LABEL_10:
    if (!v24) {
      goto LABEL_29;
    }
    goto LABEL_24;
  }
  int v27 = _s7Weather24LocationCompositionStateOwet_0(v19, v21, v63);
  int v24 = _s7Weather24LocationCompositionStateOwet_0(v20, v21, v63);
  if (!v27) {
    goto LABEL_10;
  }
LABEL_4:
  if (v24) {
    goto LABEL_25;
  }
LABEL_18:
  int v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
  v30(v19, v20, v63);
  unint64_t v31 = (v12 + v20) & v61;
  uint64_t v55 = v20;
  uint64_t v32 = *(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 32);
  v32((v12 + v19) & v61, v31, v62);
  uint64_t v33 = (v56 + v19) & v57;
  uint64_t v34 = (v56 + v55) & v57;
  v30(v33, v34, v63);
  v32((v12 + v33) & v61, (v12 + v34) & v61, v62);
  uint64_t v20 = v55;
  *(void *)((v14 + v33) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v14 + v34) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v35 = v59;
  uint64_t v36 = v60;
  unint64_t v37 = v59 + 8;
  int v38 = v58;
  if (!v58) {
    *(unsigned char *)(v19 + v59 + 8) = 0;
  }
LABEL_30:
  unint64_t v46 = v35 + 9;
  if (v38) {
    unint64_t v46 = v37;
  }
  unint64_t v47 = ((v19 | 7) + v46) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v48 = ((v20 | 7) + v46) & 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)unint64_t v47 = *(unsigned char *)v48;
  *(void *)(v47 + 8) = *(void *)(v48 + 8);
  swift_release();
  uint64_t v49 = (void *)((v47 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v50 = (void *)((v48 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v49 = *v50;
  swift_release();
  v49[1] = v50[1];
  swift_release();
  return v36;
}

uint64_t sub_10080B5F0(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = *(void *)(a3 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v7) {
    unsigned int v11 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  if (v11) {
    unsigned int v12 = v11 - 1;
  }
  else {
    unsigned int v12 = 0;
  }
  if (v11 <= 0x7FFFFFFF) {
    unsigned int v13 = 0x7FFFFFFF;
  }
  else {
    unsigned int v13 = v11;
  }
  uint64_t v14 = *(_DWORD *)(v9 + 80);
  uint64_t v15 = *(void *)(*(void *)(v5 - 8) + 64) + v14;
  uint64_t v16 = (v15 & ~v14) + *(void *)(*(void *)(v8 - 8) + 64);
  uint64_t v17 = *(unsigned __int8 *)(v6 + 80) | *(_DWORD *)(v9 + 80);
  unint64_t v18 = (v16 + 7 + ((v16 + v17) & ~v17)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = v18 + 8;
  unint64_t v20 = v18 + 9;
  if (v11) {
    unint64_t v21 = v19;
  }
  else {
    unint64_t v21 = v20;
  }
  if (!a2) {
    return 0;
  }
  unint64_t v22 = v17 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = v17 + 16;
  if (v13 < a2)
  {
    unint64_t v24 = ((((v21 + ((v23 + ((v16 + 7) & 0xFFFFFFFFFFFFFFF8)) & v22) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    if ((v24 & 0xFFFFFFF8) != 0) {
      unsigned int v25 = 2;
    }
    else {
      unsigned int v25 = a2 - v13 + 1;
    }
    if (v25 >= 0x10000) {
      unsigned int v26 = 4;
    }
    else {
      unsigned int v26 = 2;
    }
    if (v25 < 0x100) {
      unsigned int v26 = 1;
    }
    if (v25 >= 2) {
      uint64_t v27 = v26;
    }
    else {
      uint64_t v27 = 0;
    }
    switch(v27)
    {
      case 1:
        int v28 = *((unsigned __int8 *)a1 + v24);
        if (!*((unsigned char *)a1 + v24)) {
          break;
        }
        goto LABEL_30;
      case 2:
        int v28 = *(unsigned __int16 *)((char *)a1 + v24);
        if (*(_WORD *)((char *)a1 + v24)) {
          goto LABEL_30;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x10080B8B0);
      case 4:
        int v28 = *(_DWORD *)((char *)a1 + v24);
        if (!v28) {
          break;
        }
LABEL_30:
        int v29 = v28 - 1;
        if ((v24 & 0xFFFFFFF8) != 0)
        {
          int v29 = 0;
          int v30 = *a1;
        }
        else
        {
          int v30 = 0;
        }
        return v13 + (v30 | v29) + 1;
      default:
        break;
    }
  }
  uint64_t v31 = ~v14;
  if (v11 >= 0x7FFFFFFF)
  {
    if (v7 < v10)
    {
      a1 = (_DWORD *)(((unint64_t)a1 + v15) & v31);
      uint64_t v7 = v10;
      uint64_t v5 = v8;
    }
    return _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, v7, v5);
  }
  unint64_t v33 = (v23 + (((unint64_t)a1 + v16 + 7) & 0xFFFFFFFFFFFFFFF8)) & v22;
  if (v12 == v13)
  {
    if (v11 < 2) {
      return 0;
    }
    if (v7 < v10)
    {
      unint64_t v33 = (v15 + v33) & v31;
      uint64_t v7 = v10;
      uint64_t v5 = v8;
    }
    unsigned int v35 = _s7Weather24LocationCompositionStateOwet_0(v33, v7, v5);
    if (v35 >= 2) {
      return v35 - 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    unint64_t v34 = *(void *)(((((v33 | 7) + (v19 | (v11 == 0))) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
    if (v34 >= 0xFFFFFFFF) {
      LODWORD(v34) = -1;
    }
    return (v34 + 1);
  }
}

void sub_10080B8C4(unint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  int v7 = 0;
  uint64_t v8 = *(void *)(a4 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  uint64_t v11 = *(void *)(a4 + 24);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int *)(v12 + 84);
  if (v13 <= v10) {
    unsigned int v14 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v14 = *(_DWORD *)(v12 + 84);
  }
  if (v14) {
    unsigned int v15 = v14 - 1;
  }
  else {
    unsigned int v15 = 0;
  }
  if (v14 <= 0x7FFFFFFF) {
    unsigned int v16 = 0x7FFFFFFF;
  }
  else {
    unsigned int v16 = v14;
  }
  unsigned __int8 v17 = *(_DWORD *)(v12 + 80);
  unsigned int v18 = v17;
  uint64_t v19 = v17;
  uint64_t v20 = *(void *)(*(void *)(v8 - 8) + 64) + v17;
  size_t v21 = (v20 & ~v19) + *(void *)(*(void *)(v11 - 8) + 64);
  uint64_t v22 = *(unsigned __int8 *)(v9 + 80) | v18;
  unint64_t v23 = v22 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = v22 + 16;
  unint64_t v25 = (v22 + 16 + ((v21 + 7) & 0xFFFFFFFFFFFFFFF8)) & v23;
  unint64_t v26 = (v21 + 7 + ((v21 + v22) & ~v22)) & 0xFFFFFFFFFFFFFFF8;
  size_t v27 = v26 + 8;
  size_t v28 = v26 + 9;
  if (v14) {
    size_t v28 = v27;
  }
  size_t v29 = ((((v28 + v25 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v16 < a3)
  {
    unsigned int v30 = a3 - v16;
    if (((((v28 + v25 + 7) & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v31 = v30 + 1;
    }
    else {
      unsigned int v31 = 2;
    }
    if (v31 >= 0x10000) {
      int v32 = 4;
    }
    else {
      int v32 = 2;
    }
    if (v31 < 0x100) {
      int v32 = 1;
    }
    if (v31 >= 2) {
      int v7 = v32;
    }
    else {
      int v7 = 0;
    }
  }
  if (a2 > v16)
  {
    if (v29) {
      int v33 = 1;
    }
    else {
      int v33 = a2 - v16;
    }
    if (v29)
    {
      int v34 = ~v16 + a2;
      bzero((void *)a1, v29);
      *(_DWORD *)a1 = v34;
    }
    switch(v7)
    {
      case 1:
        *(unsigned char *)(a1 + v29) = v33;
        return;
      case 2:
        *(_WORD *)(a1 + v29) = v33;
        return;
      case 3:
        goto LABEL_74;
      case 4:
        *(_DWORD *)(a1 + v29) = v33;
        return;
      default:
        return;
    }
  }
  uint64_t v35 = ~v19;
  switch(v7)
  {
    case 1:
      *(unsigned char *)(a1 + v29) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_39;
    case 2:
      *(_WORD *)(a1 + v29) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_39;
    case 3:
LABEL_74:
      __break(1u);
      JUMPOUT(0x10080BC8CLL);
    case 4:
      *(_DWORD *)(a1 + v29) = 0;
      goto LABEL_38;
    default:
LABEL_38:
      if (!a2) {
        return;
      }
LABEL_39:
      if (v14 >= 0x7FFFFFFF)
      {
        if (a2 > v14)
        {
          if (v21 <= 3) {
            int v36 = ~(-1 << (8 * v21));
          }
          else {
            int v36 = -1;
          }
          if (v21)
          {
            int v37 = v36 & (~v14 + a2);
            if (v21 <= 3) {
              int v38 = v21;
            }
            else {
              int v38 = 4;
            }
            bzero((void *)a1, v21);
            switch(v38)
            {
              case 2:
                *(_WORD *)a1 = v37;
                break;
              case 3:
                *(_WORD *)a1 = v37;
                *(unsigned char *)(a1 + 2) = BYTE2(v37);
                break;
              case 4:
                goto LABEL_54;
              default:
                *(unsigned char *)a1 = v37;
                break;
            }
          }
          return;
        }
        if (v10 >= v13)
        {
          int64_t v39 = a1;
          goto LABEL_71;
        }
        int64_t v39 = (v20 + a1) & v35;
LABEL_64:
        uint64_t v10 = v13;
        uint64_t v8 = v11;
LABEL_71:
        _s7Weather24LocationCompositionStateOwst_0(v39, a2, v10, v8);
        return;
      }
      a1 = (v24 + ((a1 + v21 + 7) & 0xFFFFFFFFFFFFFFF8)) & v23;
      if (v15 != v16)
      {
        int v40 = (void *)(((((a1 | 7) + (v27 | (v14 == 0))) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
        if ((a2 & 0x80000000) != 0)
        {
          *int v40 = a2 ^ 0x80000000;
          *(void *)((((((a1 | 7) + (v27 | (v14 == 0))) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8) = 0;
        }
        else
        {
          *int v40 = (a2 - 1);
        }
        return;
      }
      if ((int)a2 + 1 <= v14)
      {
        if (a2 == -1) {
          return;
        }
        if (v10 >= v13)
        {
          int64_t v39 = a1;
          a2 = (a2 + 1);
          goto LABEL_71;
        }
        int64_t v39 = (v20 + a1) & v35;
        a2 = (a2 + 1);
        goto LABEL_64;
      }
      if (v27)
      {
        int v37 = a2 - v14;
        bzero((void *)a1, v27);
LABEL_54:
        *(_DWORD *)a1 = v37;
      }
      return;
  }
}

void *initializeBufferWithCopyOfBuffer for TabViewTransition(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

void *assignWithCopy for TabViewTransition(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  return a1;
}

void *assignWithTake for TabViewTransition(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for TabViewTransition(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TabViewTransition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

uint64_t sub_10080BE28()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10080C22C()
{
  return sub_1002126E0((uint64_t (*)(void, void, void, void, void))sub_100806720);
}

uint64_t sub_10080C24C()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 24);
  sub_1001A4894();
  uint64_t v3 = type metadata accessor for PageContainer();
  sub_100179EF0();
  uint64_t v5 = v0 + ((*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  sub_100162880();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v2);
  sub_1001A4894();
  uint64_t v7 = type metadata accessor for Page();
  sub_100188BAC(v7);
  sub_100162880();
  unsigned int v16 = *(void (**)(void))(v8 + 8);
  sub_100164FC8();
  v9();
  swift_release();
  uint64_t v10 = v5 + *(int *)(v3 + 56);
  sub_1001A4894();
  uint64_t v11 = type metadata accessor for TransitionContext();
  if (!_s7Weather24LocationCompositionStateOwet_0(v10, 1, v11))
  {
    sub_100127BA4();
    v12();
    sub_100164FC8();
    v16();
    uint64_t v13 = v10 + *(int *)(v11 + 52);
    sub_100127BA4();
    v14();
    ((void (*)(uint64_t, uint64_t))v16)(v13 + *(int *)(v17 + 52), v1);
  }
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_10080C414()
{
  sub_100185C8C();
  uint64_t v0 = type metadata accessor for PageContainer();
  sub_1001627C0(v0);

  return sub_10080763C();
}

uint64_t sub_10080C48C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  int v8 = *(_DWORD *)(v6 + 80);
  int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v6 + 64);
  uint64_t v11 = *(void *)(v4 - 8);
  int v12 = *(_DWORD *)(v11 + 84);
  int v13 = *(_DWORD *)(v11 + 80) | v8;
  uint64_t v14 = (*(unsigned char *)(v11 + 80) | v8);
  uint64_t v15 = ~(v14 | 7);
  uint64_t v16 = *(void *)(v11 + 64) + v8;
  uint64_t v17 = (v16 & ~(unint64_t)v8) + v10;
  unint64_t v18 = (v17 + 7 + ((v17 + v14) & ~v14)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = v18 + 8;
  unint64_t v20 = v18 + 9;
  if (v7 | v12) {
    size_t v21 = v19;
  }
  else {
    size_t v21 = v20;
  }
  if (v14 <= 7
    && (v13 & 0x100000) == 0
    && ((v21 + ((((v9 + 25) & ~v9) + v10 + (v14 | 7)) & ~(v14 | 7)) + 7) & 0xFFFFFFFFFFFFFFF8) + 17 <= 0x18)
  {
    unsigned int v57 = *(_DWORD *)(v6 + 84);
    unsigned int v59 = *(_DWORD *)(v11 + 84);
    uint64_t v54 = (v16 & ~v9) + v10;
    uint64_t v55 = v17 + 7;
    uint64_t v61 = v16;
    uint64_t v62 = v4;
    uint64_t v56 = *(void *)(v4 - 8);
    unint64_t v63 = v19;
    size_t __n = v21;
    uint64_t v65 = a1;
    char v26 = *(unsigned char *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 8) = v26;
    unint64_t v27 = a1 & 0xFFFFFFFFFFFFFFF8;
    unint64_t v28 = a2 & 0xFFFFFFFFFFFFFFF8;
    int v66 = v7 | v12;
    uint64_t v29 = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
    char v30 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFF8) + 24);
    swift_retain();
    sub_100195B7C(v29, v30);
    *(void *)(v27 + 16) = v29;
    *(unsigned char *)(v27 + 24) = v30;
    uint64_t v31 = v28 + v9;
    uint64_t v32 = v5;
    uint64_t v33 = ~v9;
    uint64_t v34 = (v27 + v9 + 25) & ~v9;
    uint64_t v35 = (v31 + 25) & ~v9;
    uint64_t v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    v53(v34, v35, v32);
    uint64_t v36 = (v10 + 7 + v34) & v15;
    uint64_t v37 = v10 + 7 + v35;
    uint64_t v38 = v37 & v15;
    if (v66)
    {
      uint64_t v39 = v59;
      if (v59 >= v57)
      {
        uint64_t v40 = v37 & v15;
        uint64_t v41 = v62;
      }
      else
      {
        uint64_t v40 = (v61 + v38) & v33;
        uint64_t v39 = v57;
        uint64_t v41 = v32;
      }
      uint64_t v25 = v65;
      if (_s7Weather24LocationCompositionStateOwet_0(v40, v39, v41))
      {
LABEL_24:
        size_t v49 = __n;
        memcpy((void *)v36, (const void *)v38, __n);
LABEL_25:
        unint64_t v50 = ((v36 | 7) + v49) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v51 = ((v38 | 7) + v49) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v50 = *(void *)v51;
        *(void *)(v50 + 8) = *(void *)(v51 + 8);
        *(unsigned char *)(v50 + 16) = *(unsigned char *)(v51 + 16);
        swift_retain();
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t v25 = v65;
      if (*(unsigned char *)(v38 + v63))
      {
        int v42 = *(unsigned __int8 *)(v38 + v63) - 1;
        int v43 = v63 & 0xFFFFFFF8;
        if ((v63 & 0xFFFFFFF8) != 0)
        {
          int v42 = 0;
          int v43 = *(_DWORD *)v38;
        }
        if ((v43 | v42) != 0xFFFFFFFF) {
          goto LABEL_24;
        }
      }
    }
    uint64_t v60 = ~v14;
    int v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 16);
    v58(v36, v38, v62);
    v53((v61 + v36) & v33, (v61 + v38) & v33, v32);
    uint64_t v44 = (v36 + v14 + v54) & ~v14;
    unint64_t v45 = v38 + v14 + v54;
    uint64_t v46 = v36;
    unint64_t v47 = v45 & v60;
    v58(v44, v45 & v60, v62);
    uint64_t v25 = v65;
    v53((v61 + v44) & ~v9, (v61 + v47) & ~v9, v32);
    uint64_t v48 = v55 + v47;
    uint64_t v36 = v46;
    *(void *)((v55 + v44) & 0xFFFFFFFFFFFFFFF8) = *(void *)(v48 & 0xFFFFFFFFFFFFFFF8);
    size_t v49 = __n;
    if (!v66) {
      *(unsigned char *)(v46 + v63) = 0;
    }
    goto LABEL_25;
  }
  uint64_t v24 = *(void *)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v25 = v24 + ((v14 + 16) & v15);
LABEL_26:
  swift_retain();
  return v25;
}

uint64_t sub_10080C880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  unint64_t v4 = a1 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(unsigned char *)(v4 + 24) = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFF8) + 24);
  *(void *)(v4 + 16) = v5;
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7 + 32;
  int v9 = *(_DWORD *)(v7 + 80);
  uint64_t v10 = v9;
  unint64_t v53 = ~(unint64_t)v9;
  uint64_t v54 = v6;
  unint64_t v11 = (v10 + 25 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v10;
  unint64_t v12 = (v10 + 25 + (a2 & 0xFFFFFFFFFFFFFFF8)) & ~v10;
  int v52 = *(void (**)(unint64_t, unint64_t))(v7 + 32);
  v52(v11, v12);
  uint64_t v13 = *(void *)(v8 + 32);
  uint64_t v14 = *(void *)(a3 + 16);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80) | v9;
  uint64_t v17 = (v16 | 7) + v13;
  uint64_t v18 = (v17 + v11) & ~(v16 | 7);
  uint64_t v19 = (v17 + v12) & ~(v16 | 7);
  uint64_t v20 = *(unsigned int *)(v15 + 84);
  uint64_t v21 = *(unsigned int *)(v8 + 52);
  uint64_t v22 = *(void *)(v15 + 64) + v9;
  uint64_t v23 = (v22 & ~v10) + v13;
  unint64_t v24 = (v23 + 7 + ((v23 + v16) & ~v16)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = v24 + 8;
  int v26 = v21 | v20;
  uint64_t v50 = v23 + v16;
  uint64_t v51 = v23 + 7;
  if (!(v21 | v20))
  {
    if (!*(unsigned char *)(v19 + v25)) {
      goto LABEL_9;
    }
    int v31 = *(unsigned __int8 *)(v19 + v25) - 1;
    int v32 = v25 & 0xFFFFFFF8;
    if ((v25 & 0xFFFFFFF8) != 0)
    {
      int v31 = 0;
      int v32 = *(_DWORD *)v19;
    }
    if ((v32 | v31) == 0xFFFFFFFF) {
      goto LABEL_9;
    }
    goto LABEL_12;
  }
  if (v20 >= v21)
  {
    uint64_t v40 = v14;
    int v41 = _s7Weather24LocationCompositionStateOwet_0(v19, v20, v14);
    uint64_t v14 = v40;
    if (!v41) {
      goto LABEL_9;
    }
LABEL_12:
    if (v26) {
      size_t v42 = v24 + 8;
    }
    else {
      size_t v42 = v24 + 9;
    }
    memcpy((void *)v18, (const void *)v19, v42);
    goto LABEL_16;
  }
  uint64_t v27 = (v22 + v19) & v53;
  uint64_t v28 = v19;
  uint64_t v29 = v14;
  int v30 = _s7Weather24LocationCompositionStateOwet_0(v27, v21, v54);
  uint64_t v14 = v29;
  uint64_t v19 = v28;
  if (v30) {
    goto LABEL_12;
  }
LABEL_9:
  int v48 = v26;
  uint64_t v33 = ~v16;
  uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32);
  uint64_t v35 = v14;
  v34(v18, v19, v14);
  ((void (*)(unint64_t, unint64_t, uint64_t))v52)((v22 + v18) & v53, (v22 + v19) & v53, v54);
  unint64_t v49 = v24;
  uint64_t v36 = (v50 + v18) & v33;
  uint64_t v37 = (v50 + v19) & v33;
  v34(v36, v37, v35);
  ((void (*)(unint64_t, unint64_t, uint64_t))v52)((v22 + v36) & v53, (v22 + v37) & v53, v54);
  uint64_t v38 = v51 + v36;
  unint64_t v24 = v49;
  uint64_t v39 = v51 + v37;
  int v26 = v48;
  *(void *)(v38 & 0xFFFFFFFFFFFFFFF8) = *(void *)(v39 & 0xFFFFFFFFFFFFFFF8);
  if (!v48) {
    *(unsigned char *)(v18 + v25) = 0;
  }
LABEL_16:
  unint64_t v43 = v24 + 9;
  if (v26) {
    unint64_t v43 = v25;
  }
  unint64_t v44 = (v18 | 7) + v43;
  unint64_t v45 = ((v19 | 7) + v43) & 0xFFFFFFFFFFFFFFF8;
  long long v46 = *(_OWORD *)v45;
  v44 &= 0xFFFFFFFFFFFFFFF8;
  *(unsigned char *)(v44 + 16) = *(unsigned char *)(v45 + 16);
  *(_OWORD *)unint64_t v44 = v46;
  return a1;
}

uint64_t sub_10080CB9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v6;
  swift_release();
  uint64_t v65 = a1;
  unint64_t v7 = a1 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = a2 & 0xFFFFFFFFFFFFFFF8;
  char v9 = *(unsigned char *)((a2 & 0xFFFFFFFFFFFFFFF8) + 24);
  uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFFF8) + 16);
  char v11 = *(unsigned char *)((a1 & 0xFFFFFFFFFFFFFFF8) + 24);
  *(void *)(v7 + 16) = *(void *)((a2 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(unsigned char *)(v7 + 24) = v9;
  sub_10018F6D8(v10, v11);
  uint64_t v12 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v13 = v12;
  int v14 = *(_DWORD *)(v12 + 80);
  uint64_t v15 = v14;
  unint64_t v67 = ~(unint64_t)v14;
  uint64_t v68 = *(void *)(a3 + 24);
  unint64_t v16 = (v15 + 25 + (a1 & 0xFFFFFFFFFFFFFFF8)) & ~v15;
  uint64_t v17 = (v15 + 25 + v8) & ~v15;
  unsigned int v57 = *(void (**)(unint64_t, uint64_t))(v12 + 40);
  v57(v16, v17);
  uint64_t v18 = *(void *)(v12 + 64);
  uint64_t v66 = *(void *)(a3 + 16);
  uint64_t v19 = *(void *)(v66 - 8);
  uint64_t v20 = *(unsigned __int8 *)(v19 + 80) | v14;
  uint64_t v21 = (v20 | 7) + v18;
  uint64_t v22 = (v21 + v16) & ~(v20 | 7);
  char v69 = (_DWORD *)((v21 + v17) & ~(v20 | 7));
  uint64_t v23 = *(unsigned int *)(v19 + 84);
  uint64_t v59 = v13;
  uint64_t v24 = *(unsigned int *)(v13 + 84);
  uint64_t v25 = *(void *)(v19 + 64) + v14;
  uint64_t v26 = (v25 & v67) + v18;
  uint64_t v27 = ~v20;
  uint64_t v28 = v26 + v20;
  uint64_t v58 = v26 + 7;
  unint64_t v29 = (v26 + 7 + ((v26 + v20) & ~v20)) & 0xFFFFFFFFFFFFFFF8;
  size_t v30 = v29 + 8;
  unint64_t v64 = v29;
  int v63 = v24 | v23;
  uint64_t v61 = v28;
  uint64_t v62 = v27;
  if (v24 | v23)
  {
    if (v23 >= v24)
    {
      int v36 = _s7Weather24LocationCompositionStateOwet_0(v22, v23, v66);
      unint64_t v32 = (unint64_t)v69;
      int v33 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v69, v23, v66);
      if (v36)
      {
LABEL_4:
        if (!v33) {
          goto LABEL_30;
        }
LABEL_26:
        unint64_t v47 = v64;
        int v48 = v63;
        if (v63) {
          size_t v49 = v30;
        }
        else {
          size_t v49 = v64 + 9;
        }
        memcpy((void *)v22, (const void *)v32, v49);
        uint64_t v46 = v65;
        goto LABEL_32;
      }
    }
    else
    {
      int v31 = _s7Weather24LocationCompositionStateOwet_0((v25 + v22) & v67, v24, v68);
      unint64_t v32 = (unint64_t)v69;
      int v33 = _s7Weather24LocationCompositionStateOwet_0(((unint64_t)v69 + v25) & v67, v24, v68);
      if (v31) {
        goto LABEL_4;
      }
    }
    if (!v33)
    {
LABEL_23:
      unint64_t v43 = *(void (**)(uint64_t, unint64_t, uint64_t))(v19 + 40);
      v43(v22, v32, v66);
      ((void (*)(unint64_t, unint64_t, uint64_t))v57)((v25 + v22) & v67, (v25 + v32) & v67, v68);
      uint64_t v44 = (v61 + v22) & v62;
      unint64_t v45 = (v61 + v32) & v62;
      v43(v44, v45, v66);
      ((void (*)(unint64_t, unint64_t, uint64_t))v57)((v25 + v44) & v67, (v25 + v45) & v67, v68);
      *(void *)((v58 + v44) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v58 + v45) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v47 = v64;
      uint64_t v46 = v65;
      int v48 = v63;
      goto LABEL_32;
    }
LABEL_22:
    int v41 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
    v41(v22, v66);
    size_t v42 = *(void (**)(unint64_t, uint64_t))(v59 + 8);
    v42((v25 + v22) & v67, v68);
    v41((v61 + v22) & v62, v66);
    v42((v25 + ((v61 + v22) & v62)) & v67, v68);
    unint64_t v32 = (unint64_t)v69;
    goto LABEL_26;
  }
  unint64_t v32 = (unint64_t)v69;
  if (!*(unsigned char *)(v22 + v30)
    || ((int v34 = *(unsigned __int8 *)(v22 + v30) - 1, !v30) ? (v35 = 0) : (int v34 = 0, v35 = *(_DWORD *)v22),
        (v35 | v34) == 0xFFFFFFFF))
  {
    if (!*((unsigned char *)v69 + v30)) {
      goto LABEL_23;
    }
    int v39 = *((unsigned __int8 *)v69 + v30) - 1;
    if (v30)
    {
      int v39 = 0;
      int v40 = *v69;
    }
    else
    {
      int v40 = 0;
    }
    if ((v40 | v39) == 0xFFFFFFFF) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (*((unsigned char *)v69 + v30))
  {
    int v37 = *((unsigned __int8 *)v69 + v30) - 1;
    if (v30)
    {
      int v37 = 0;
      int v38 = *v69;
    }
    else
    {
      int v38 = 0;
    }
    if ((v38 | v37) != 0xFFFFFFFF) {
      goto LABEL_26;
    }
  }
LABEL_30:
  uint64_t v50 = *(void (**)(uint64_t, unint64_t, uint64_t))(v19 + 32);
  v50(v22, v32, v66);
  uint64_t v60 = *(void (**)(unint64_t, unint64_t, uint64_t))(v59 + 32);
  v60((v25 + v22) & v67, (v25 + v32) & v67, v68);
  uint64_t v51 = (v61 + v22) & v62;
  unint64_t v52 = ((unint64_t)v69 + v61) & v62;
  v50(v51, v52, v66);
  v60((v25 + v51) & v67, (v25 + v52) & v67, v68);
  unint64_t v32 = (unint64_t)v69;
  *(void *)((v58 + v51) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v58 + v52) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v47 = v64;
  uint64_t v46 = v65;
  int v48 = v63;
  if (!v63) {
    *(unsigned char *)(v22 + v30) = 0;
  }
LABEL_32:
  size_t v53 = v47 + 9;
  if (v48) {
    size_t v53 = v30;
  }
  unint64_t v54 = ((v22 | 7) + v53) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v55 = ((v32 | 7) + v53) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v54 = *(void *)v55;
  swift_release();
  *(void *)(v54 + 8) = *(void *)(v55 + 8);
  swift_release();
  *(unsigned char *)(v54 + 16) = *(unsigned char *)(v55 + 16);
  return v46;
}

uint64_t sub_10080D124(unint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  if (v7 <= v10) {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v11 = *(_DWORD *)(v6 + 84);
  }
  if (v11) {
    unsigned int v12 = v11 - 1;
  }
  else {
    unsigned int v12 = 0;
  }
  if (v7 <= v12) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v6 + 84);
  }
  if (v13 <= 0x7FFFFFFF) {
    unsigned int v13 = 0x7FFFFFFF;
  }
  int v14 = *(_DWORD *)(v6 + 80);
  uint64_t v15 = *(void *)(*(void *)(v5 - 8) + 64);
  int v16 = *(unsigned __int8 *)(v9 + 80);
  if (v11) {
    uint64_t v17 = 8;
  }
  else {
    uint64_t v17 = 9;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v18 = v14;
  uint64_t v19 = v16 | v14;
  uint64_t v20 = v19 | 7;
  uint64_t v21 = *(void *)(*(void *)(v8 - 8) + 64) + v14;
  unint64_t v22 = (((v21 & ~v18) + v15 + (((v21 & ~v18) + v15 + v19) & ~v19) + 7) & 0xFFFFFFFFFFFFFFF8) + v17;
  if (v13 < a2)
  {
    unint64_t v23 = ((v22 + ((v20 + v15 + ((v18 + 25) & ~v18)) & ~v20) + 7) & 0xFFFFFFFFFFFFFFF8) + 17;
    unsigned int v24 = (a2 - v13 + 255) >> (8 * v23);
    if (v23 < 4) {
      unsigned int v25 = v24 + 1;
    }
    else {
      unsigned int v25 = 2;
    }
    if (v25 >= 0x10000) {
      LODWORD(v26) = 4;
    }
    else {
      LODWORD(v26) = 2;
    }
    if (v25 < 0x100) {
      LODWORD(v26) = 1;
    }
    if (v25 >= 2) {
      uint64_t v26 = v26;
    }
    else {
      uint64_t v26 = 0;
    }
    switch(v26)
    {
      case 1:
        int v27 = *(unsigned __int8 *)(a1 + v23);
        if (!*(unsigned char *)(a1 + v23)) {
          break;
        }
        goto LABEL_32;
      case 2:
        int v27 = *(unsigned __int16 *)(a1 + v23);
        if (*(_WORD *)(a1 + v23)) {
          goto LABEL_32;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x10080D3CCLL);
      case 4:
        int v27 = *(_DWORD *)(a1 + v23);
        if (!v27) {
          break;
        }
LABEL_32:
        int v28 = (v27 - 1) << (8 * v23);
        if (v23 >= 4) {
          int v28 = 0;
        }
        if (((v22 + ((v20 + v15 + ((v18 + 25) & ~v18)) & ~v20) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
          int v29 = *(unsigned __int8 *)a1;
        }
        else {
          int v29 = *(_DWORD *)a1;
        }
        return v13 + (v29 | v28) + 1;
      default:
        break;
    }
  }
  unint64_t v30 = ((a1 & 0xFFFFFFFFFFFFFFF8) + v18 + 25) & ~v18;
  if (v7 == v13)
  {
    return _s7Weather24LocationCompositionStateOwet_0(v30, v7, v5);
  }
  uint64_t v32 = (v30 + v15 + v20) & ~v20;
  if (v12 == v13)
  {
    if (v11 < 2) {
      return 0;
    }
    if (v10 >= v7)
    {
      uint64_t v7 = v10;
      uint64_t v5 = v8;
    }
    else
    {
      uint64_t v32 = (v21 + v32) & ~v18;
    }
    unsigned int v34 = _s7Weather24LocationCompositionStateOwet_0(v32, v7, v5);
    if (v34 >= 2) {
      return v34 - 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    unint64_t v33 = *(void *)((((v32 | 7) + v22) & 0xFFFFFFFFFFFFFFF8) + 8);
    if (v33 >= 0xFFFFFFFF) {
      LODWORD(v33) = -1;
    }
    return (v33 + 1);
  }
}

void sub_10080D3E0(unint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  int v7 = 0;
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  uint64_t v11 = *(void *)(a4 + 16);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int *)(v12 + 84);
  if (v10 <= v13) {
    unsigned int v14 = *(_DWORD *)(v12 + 84);
  }
  else {
    unsigned int v14 = *(_DWORD *)(v9 + 84);
  }
  if (v14) {
    unsigned int v15 = v14 - 1;
  }
  else {
    unsigned int v15 = 0;
  }
  if (v10 <= v15) {
    unsigned int v16 = v15;
  }
  else {
    unsigned int v16 = *(_DWORD *)(v9 + 84);
  }
  if (v16 <= 0x7FFFFFFF) {
    unsigned int v17 = 0x7FFFFFFF;
  }
  else {
    unsigned int v17 = v16;
  }
  uint64_t v18 = *(_DWORD *)(v9 + 80);
  uint64_t v19 = *(void *)(*(void *)(v8 - 8) + 64);
  uint64_t v20 = *(unsigned __int8 *)(v12 + 80) | v18;
  uint64_t v21 = v20 | 7;
  uint64_t v22 = ((v20 | 7) + v19 + ((v18 + 25) & ~v18)) & ~(v20 | 7);
  uint64_t v23 = *(void *)(*(void *)(v11 - 8) + 64) + v18;
  unint64_t v24 = ((v23 & ~v18) + v19 + (((v23 & ~v18) + v19 + v20) & ~v20) + 7) & 0xFFFFFFFFFFFFFFF8;
  size_t v25 = v24 + 8;
  size_t v26 = v24 + 9;
  if (v14) {
    size_t v26 = v25;
  }
  size_t v27 = ((v26 + v22 + 7) & 0xFFFFFFFFFFFFFFF8) + 17;
  char v28 = 8 * v27;
  if (v17 < a3)
  {
    unsigned int v29 = (a3 - v17 + 255) >> v28;
    if (v27 <= 3) {
      unsigned int v30 = v29 + 1;
    }
    else {
      unsigned int v30 = 2;
    }
    if (v30 >= 0x10000) {
      int v31 = 4;
    }
    else {
      int v31 = 2;
    }
    if (v30 < 0x100) {
      int v31 = 1;
    }
    if (v30 >= 2) {
      int v7 = v31;
    }
    else {
      int v7 = 0;
    }
  }
  if (v17 < a2)
  {
    if (v27 < 4) {
      unsigned int v32 = ((~v17 + a2) >> v28) + 1;
    }
    else {
      unsigned int v32 = 1;
    }
    if (v27 >= 4) {
      int v33 = ~v17 + a2;
    }
    else {
      int v33 = (~(_BYTE)v17 + a2);
    }
    bzero((void *)a1, v27);
    if (v27 == 1) {
      *(unsigned char *)a1 = v33;
    }
    else {
      *(_DWORD *)a1 = v33;
    }
    switch(v7)
    {
      case 1:
        *(unsigned char *)(a1 + v27) = v32;
        return;
      case 2:
        *(_WORD *)(a1 + v27) = v32;
        return;
      case 3:
        goto LABEL_64;
      case 4:
        *(_DWORD *)(a1 + v27) = v32;
        return;
      default:
        return;
    }
  }
  uint64_t v34 = ~v18;
  switch(v7)
  {
    case 1:
      *(unsigned char *)(a1 + v27) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_44;
    case 2:
      *(_WORD *)(a1 + v27) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_44;
    case 3:
LABEL_64:
      __break(1u);
      JUMPOUT(0x10080D728);
    case 4:
      *(_DWORD *)(a1 + v27) = 0;
      goto LABEL_43;
    default:
LABEL_43:
      if (!a2) {
        return;
      }
LABEL_44:
      unint64_t v35 = ((a1 & 0xFFFFFFFFFFFFFFF8) + v18 + 25) & v34;
      if (v10 == v17) {
        goto LABEL_45;
      }
      unint64_t v36 = (v35 + v19 + v21) & ~v21;
      if (v15 == v17)
      {
        if ((int)a2 + 1 <= v14)
        {
          if (a2 != -1)
          {
            if (v13 >= v10)
            {
              unint64_t v35 = (v35 + v19 + v21) & ~v21;
              a2 = (a2 + 1);
              uint64_t v10 = v13;
              uint64_t v8 = v11;
            }
            else
            {
              unint64_t v35 = (v23 + v36) & v34;
              a2 = (a2 + 1);
            }
LABEL_45:
            _s7Weather24LocationCompositionStateOwst_0(v35, a2, v10, v8);
          }
        }
        else if (v25)
        {
          int v37 = a2 - v14;
          bzero((void *)((v35 + v19 + v21) & ~v21), v25);
          *(_DWORD *)unint64_t v36 = v37;
        }
      }
      else
      {
        unint64_t v38 = ((v36 | 7) + v26) & 0xFFFFFFFFFFFFFFF8;
        if ((a2 & 0x80000000) != 0)
        {
          *(unsigned char *)(v38 + 16) = 0;
          *(void *)unint64_t v38 = a2 ^ 0x80000000;
          *(void *)(v38 + 8) = 0;
        }
        else
        {
          *(void *)(v38 + 8) = (a2 - 1);
        }
      }
      return;
  }
}

uint64_t sub_10080D750()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_10080DA88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_10017F28C();
  uint64_t v12 = *(void *)(v10 + 24);
  sub_1001A0004();
  uint64_t v13 = type metadata accessor for RebuildPageWhenSidebarCollapsesDuringTransitionModifier();
  sub_100179EF0();
  uint64_t v15 = v10 + ((*(unsigned __int8 *)(v14 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  swift_release();
  sub_10018F6D8(*(void *)(v15 + 16), *(unsigned char *)(v15 + 24));
  sub_100162880();
  uint64_t v22 = *(void (**)(void))(v16 + 8);
  v22();
  uint64_t v17 = v15 + *(int *)(v13 + 60);
  if (!sub_10017A970())
  {
    sub_100162880();
    sub_1001869E4();
    sub_100127BA4();
    v18();
    sub_1001A0004();
    uint64_t v19 = type metadata accessor for Page();
    sub_100188BAC(v19);
    sub_100164944();
    v22();
    uint64_t v20 = v17 + *(int *)(v11 + 52);
    sub_1001869E4();
    sub_100127BA4();
    v21();
    ((void (*)(uint64_t, uint64_t))v22)(v20 + *(int *)(a10 + 52), v12);
  }
  swift_release();
  swift_release();
  swift_deallocObject();
  sub_100180F84();
}

uint64_t sub_10080DC08()
{
  sub_1001855F8();
  uint64_t v0 = type metadata accessor for RebuildPageWhenSidebarCollapsesDuringTransitionModifier();
  sub_1001627C0(v0);
  uint64_t v1 = (unsigned char *)sub_1001A24D4();

  return sub_10080A1A4(v1, v2, v3, v4, v5, v6, v7);
}

uint64_t sub_10080DC70()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10080DD34()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10080DD50()
{
  uint64_t v1 = sub_10017DF08(&qword_100E98B08);
  __chkstk_darwin(v1 - 8);
  sub_1001626E0();
  uint64_t v4 = v3 - v2;
  uint64_t v5 = sub_10017DF08(&qword_100E98B10);
  sub_100162E4C();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v16 - v10;
  sub_10017DF08(&qword_100E98B18);
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_10017A9A8();
  sub_1002500F8();
  swift_release();
  if ((v29 & 0xC0) == 0x80
    && (v29 == 128 ? (BOOL v13 = v17 == 1) : (BOOL v13 = 0),
        v13 && !(v19 | v18 | v20 | v21 | v22 | v23 | v24 | v25 | v26 | v27 | v28)))
  {
    *uint64_t v0 = static Color.clear.getter();
    swift_storeEnumTagMultiPayload();
    sub_10080F9F4();
    return _ConditionalContent<>.init(storage:)();
  }
  else
  {
    sub_1002765BC(v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29);
    sub_10080E02C(v4);
    if (qword_100E625B0 != -1) {
      swift_once();
    }
    uint64_t v15 = qword_100F51B70;
    sub_1001262FC(v4, (uint64_t)v8, &qword_100E98B08);
    *(void *)&v8[*(int *)(v5 + 36)] = v15;
    swift_retain();
    sub_1001781AC(v4, &qword_100E98B08);
    sub_10020E72C((uint64_t)v8, (uint64_t)v11, &qword_100E98B10);
    sub_1001262FC((uint64_t)v11, (uint64_t)v0, &qword_100E98B10);
    swift_storeEnumTagMultiPayload();
    sub_10080F9F4();
    _ConditionalContent<>.init(storage:)();
    return sub_1001781AC((uint64_t)v11, &qword_100E98B10);
  }
}

uint64_t sub_10080E02C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v62 = a1;
  uint64_t v56 = sub_10017DF08(&qword_100E7A118);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  uint64_t v55 = sub_10017DF08(&qword_100E98BA0);
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  uint64_t v61 = sub_10017DF08(&qword_100E98B58);
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_100109314();
  uint64_t v57 = v12;
  uint64_t v13 = sub_10017DF08((uint64_t *)&unk_100EAA640);
  __chkstk_darwin(v13 - 8);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  v54.i64[0] = sub_10017DF08(&qword_100E98B48);
  sub_100162E4C();
  __chkstk_darwin(v17);
  uint64_t v19 = &v49.i8[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v20);
  v53.i64[0] = (uint64_t)v49.i64 - v21;
  uint64_t v58 = sub_10017DF08(&qword_100E98BA8);
  sub_100162E4C();
  __chkstk_darwin(v22);
  sub_100109314();
  uint64_t v60 = v23;
  sub_10017DF08(&qword_100E98BB0);
  sub_100162E4C();
  __chkstk_darwin(v24);
  sub_1001626E0();
  uint64_t v27 = (uint64_t *)(v26 - v25);
  uint64_t v59 = sub_10017DF08(&qword_100E98B38);
  sub_100162E4C();
  __chkstk_darwin(v28);
  sub_10017A9A8();
  sub_1002500F8();
  swift_release();
  char v29 = v75;
  int v30 = v75 >> 6;
  if (!v30)
  {
    if (v69.i8[0])
    {
      unint64_t v43 = (unint64_t)v69.i64[0] >> 8;
      uint64_t v44 = v1[5];
      uint64_t v45 = v1[6];
      sub_1001B1E64(v1 + 2, v44);
      uint64_t v64 = v44;
      uint64_t v65 = *(void *)(v45 + 16);
      sub_100170694(v63);
      sub_1001A0E48();
      v46();
      char v66 = v43;
      sub_1003DE164((uint64_t)v63, (uint64_t)v67);
      char v68 = 0;
      sub_1003DDC1C();
      sub_1003DDB28();
      _ConditionalContent<>.init(storage:)();
      sub_1003DE1C0((uint64_t)v63);
    }
    else
    {
      uint64_t v34 = v1[5];
      uint64_t v35 = v1[6];
      sub_1001B1E64(v1 + 2, v34);
      uint64_t v64 = v34;
      uint64_t v65 = *(void *)(v35 + 8);
      sub_100170694(v63);
      sub_1001A0E48();
      v36();
      sub_1003DE218((uint64_t)v63, (uint64_t)v67);
      char v68 = 1;
      sub_1003DDC1C();
      sub_1003DDB28();
      _ConditionalContent<>.init(storage:)();
      sub_1003DE274((uint64_t)v63);
    }
    int v41 = &qword_100E98B68;
    sub_1001262FC((uint64_t)&v69, v10, &qword_100E98B68);
    swift_storeEnumTagMultiPayload();
    sub_10017DF08(&qword_100E98B68);
    sub_10080FBA8();
    sub_10080FC6C();
    uint64_t v47 = v57;
    _ConditionalContent<>.init(storage:)();
    sub_10019F1F8();
    swift_storeEnumTagMultiPayload();
    sub_10080FACC();
    sub_10017D538();
    sub_1001781AC(v47, &qword_100E98B58);
    unsigned int v32 = &v69;
LABEL_11:
    int v33 = v41;
    return sub_1001781AC((uint64_t)v32, v33);
  }
  if (v30 != 1)
  {
    int8x16_t v37 = vorrq_s8(vorrq_s8(vorrq_s8(v74, v73), vorrq_s8(v72, v71)), vorrq_s8(v70, v69));
    if (*(void *)&vorr_s8(*(int8x8_t *)v37.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v37, v37, 8uLL)) || v75 != 128)
    {
      *uint64_t v27 = static Color.clear.getter();
      swift_storeEnumTagMultiPayload();
      sub_10080FD0C(&qword_100E98B40, &qword_100E98B48, (void (*)(void))sub_1006E88CC);
      swift_retain();
      _ConditionalContent<>.init(storage:)();
      sub_10019F1F8();
      sub_1001A24FC();
      sub_10080FACC();
      sub_10017D538();
      sub_1001781AC(v2, &qword_100E98B38);
      return swift_release();
    }
    sub_10020D948((uint64_t)(v1 + 2), (uint64_t)&v69);
    uint64_t v38 = enum case for ColorScheme.dark(_:);
    uint64_t v39 = type metadata accessor for ColorScheme();
    sub_100162E4C();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 104))(v16, v38, v39);
    _s7Weather24LocationCompositionStateOwst_0(v16, 0, 1, v39);
    sub_1001262FC(v16, (uint64_t)&v19[*(int *)(v54.i64[0] + 36)], (uint64_t *)&unk_100EAA640);
    sub_10080FE74((uint64_t)&v69, (uint64_t)v19);
    sub_1001781AC(v16, (uint64_t *)&unk_100EAA640);
    sub_10080FED0((uint64_t)&v69);
    int v41 = &qword_100E98B48;
    uint64_t v42 = v53.i64[0];
    sub_10020E72C((uint64_t)v19, v53.i64[0], &qword_100E98B48);
    sub_1001262FC(v42, (uint64_t)v27, &qword_100E98B48);
    swift_storeEnumTagMultiPayload();
    sub_10080FD0C(&qword_100E98B40, &qword_100E98B48, (void (*)(void))sub_1006E88CC);
    _ConditionalContent<>.init(storage:)();
    sub_10019F1F8();
    sub_1001A24FC();
    sub_10080FACC();
    sub_10017D538();
    sub_1001781AC(v2, &qword_100E98B38);
    unsigned int v32 = (int8x16_t *)v42;
    goto LABEL_11;
  }
  v75 &= 1u;
  int8x16_t v49 = v69;
  int8x16_t v54 = v73;
  int8x16_t v53 = v74;
  int8x16_t v50 = v70;
  int8x16_t v52 = v72;
  int8x16_t v51 = v71;
  sub_10080E8C8((uint64_t)&v69, v6);
  sub_1002765BC(v49.i64[0], v49.i64[1], v50.i64[0], v50.i64[1], v51.i64[0], v51.i64[1], v52.i64[0], v52.i64[1], v54.i64[0], v54.i64[1], v53.i64[0], v53.i64[1], v29);
  sub_1001262FC(v6, v10, &qword_100E7A118);
  swift_storeEnumTagMultiPayload();
  sub_10017DF08(&qword_100E98B68);
  sub_10080FBA8();
  sub_10080FC6C();
  uint64_t v31 = v57;
  _ConditionalContent<>.init(storage:)();
  sub_1001262FC(v31, v60, &qword_100E98B58);
  swift_storeEnumTagMultiPayload();
  sub_10080FACC();
  sub_10080FB6C();
  _ConditionalContent<>.init(storage:)();
  sub_1001781AC(v31, &qword_100E98B58);
  unsigned int v32 = (int8x16_t *)v6;
  int v33 = &qword_100E7A118;
  return sub_1001781AC((uint64_t)v32, v33);
}

uint64_t sub_10080E8C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v48 = type metadata accessor for AutomationInfo(0);
  __chkstk_darwin(v48);
  uint64_t v47 = (uint64_t)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08((uint64_t *)&unk_100EAA640);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_10017DF08(&qword_100E98B98);
  uint64_t v8 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E98B88);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100E7A110);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = v2;
  uint64_t v53 = a1;
  uint64_t v45 = sub_10017DF08(&qword_100E98BB8);
  uint64_t v44 = sub_10018C6DC(&qword_100E98BC0);
  uint64_t v43 = sub_10018C6DC(&qword_100E775B8);
  uint64_t v19 = sub_10018C6DC(&qword_100E98BC8);
  uint64_t v20 = sub_10018C6DC(&qword_100E98BD0);
  uint64_t v21 = sub_1001246C8(&qword_100E98BD8, &qword_100E98BD0);
  uint64_t v54 = v20;
  uint64_t v55 = v21;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v54 = v19;
  uint64_t v55 = OpaqueTypeConformance2;
  uint64_t v23 = swift_getOpaqueTypeConformance2();
  uint64_t v24 = sub_10018C6DC(&qword_100E66B80);
  uint64_t v25 = sub_1001246C8(&qword_100E775C8, &qword_100E66B80);
  uint64_t v54 = v24;
  uint64_t v55 = v25;
  uint64_t v26 = swift_getOpaqueTypeConformance2();
  uint64_t v54 = v44;
  uint64_t v55 = v43;
  uint64_t v56 = v23;
  uint64_t v57 = v26;
  swift_getOpaqueTypeConformance2();
  NavigationView.init(content:)();
  uint64_t v27 = static Color.primary.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v29 = v46;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v14, v10, v46);
  int v30 = (uint64_t *)&v14[*(int *)(v12 + 44)];
  uint64_t *v30 = KeyPath;
  v30[1] = v27;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v29);
  uint64_t v31 = enum case for ColorScheme.dark(_:);
  uint64_t v32 = type metadata accessor for ColorScheme();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104))(v7, v31, v32);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v32);
  sub_1001262FC((uint64_t)v7, (uint64_t)&v18[*(int *)(v16 + 44)], (uint64_t *)&unk_100EAA640);
  sub_1001262FC((uint64_t)v14, (uint64_t)v18, &qword_100E98B88);
  sub_1001781AC((uint64_t)v7, (uint64_t *)&unk_100EAA640);
  sub_1001781AC((uint64_t)v14, &qword_100E98B88);
  type metadata accessor for AutomationViewInfo(0);
  uint64_t v33 = v47;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_10048D48C(v33, v34, v35, v36, v37, v38, v39, v40, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53);
  sub_1003F8810(v33);
  return sub_1001781AC((uint64_t)v18, &qword_100E7A110);
}

uint64_t sub_10080ED9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v36 = a3;
  uint64_t v32 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v30 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_10017DF08(&qword_100E98BC8);
  uint64_t v33 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_10017DF08(&qword_100E98BC0);
  uint64_t v35 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v28 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = static Alignment.center.getter();
  uint64_t v39 = v10;
  sub_10080F6D0(a2, a1);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v11 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v13 = v12;
  char v15 = v14 & 1;
  uint64_t v16 = sub_10017DF08(&qword_100E98BD0);
  uint64_t v17 = sub_1001246C8(&qword_100E98BD8, &qword_100E98BD0);
  View.navigationTitle(_:)();
  sub_100191924(v11, v13, v15);
  swift_bridgeObjectRelease();
  sub_1001781AC((uint64_t)&v38, &qword_100E98BD0);
  uint64_t v18 = v30;
  uint64_t v19 = v32;
  (*(void (**)(char *, void, uint64_t))(v30 + 104))(v6, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v32);
  uint64_t v38 = v16;
  uint64_t v39 = v17;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v21 = v28;
  uint64_t v22 = v31;
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v19);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v22);
  uint64_t v37 = v29;
  sub_10017DF08(&qword_100E775B8);
  uint64_t v38 = v22;
  uint64_t v39 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v23 = sub_10018C6DC(&qword_100E66B80);
  uint64_t v24 = sub_1001246C8(&qword_100E775C8, &qword_100E66B80);
  uint64_t v38 = v23;
  uint64_t v39 = v24;
  swift_getOpaqueTypeConformance2();
  uint64_t v25 = v34;
  View.toolbar<A>(content:)();
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v21, v25);
}

uint64_t sub_10080F254(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10017DF08(&qword_100E66B80);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static ToolbarItemPlacement.confirmationAction.getter();
  uint64_t v9 = a1;
  sub_10017DF08(&qword_100E65388);
  sub_1001246C8(&qword_100E653A8, &qword_100E65388);
  ToolbarItem<>.init(placement:content:)();
  sub_1001246C8(&qword_100E775C8, &qword_100E66B80);
  static ToolbarContentBuilder.buildBlock<A>(_:)();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_10080F41C(uint64_t a1)
{
  sub_10080FF44(a1, (uint64_t)v4);
  uint64_t v1 = swift_allocObject();
  long long v2 = v4[1];
  *(_OWORD *)(v1 + 16) = v4[0];
  *(_OWORD *)(v1 + 32) = v2;
  *(_OWORD *)(v1 + 48) = v4[2];
  *(void *)(v1 + 64) = v5;
  return Button.init(action:label:)();
}

uint64_t sub_10080F4C4(void *a1)
{
  uint64_t v1 = a1[5];
  uint64_t v2 = a1[6];
  sub_1001B1E64(a1 + 2, v1);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v2 + 8) + 16))(v1);
}

uint64_t sub_10080F514@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Font.TextStyle();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v6 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Font.TextStyle.body(_:), v2);
  static Font.Weight.semibold.getter();
  static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v11 = Text.font(_:)();
  uint64_t v13 = v12;
  LOBYTE(v3) = v14;
  uint64_t v16 = v15;
  swift_release();
  sub_100191924(v6, v8, v10);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v11;
  *(void *)(a1 + 8) = v13;
  *(unsigned char *)(a1 + 16) = v3 & 1;
  *(void *)(a1 + 24) = v16;
  return result;
}

uint64_t sub_10080F6D0(uint64_t a1, uint64_t a2)
{
  sub_10080FFC4(a1, (uint64_t)v11);
  sub_10080FFC4(a1, (uint64_t)__src);
  if (__src[96])
  {
    uint64_t v4 = swift_allocObject();
    memcpy((void *)(v4 + 16), __src, 0x60uLL);
    v9[10] = sub_1008749EC;
    v9[11] = 0;
    LOBYTE(v9[12]) = 0;
    v9[0] = sub_10017DF08(&qword_100E66BC8);
    uint64_t v5 = qword_100E62290;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v5 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t result = sub_1001262FC((uint64_t)&xmmword_100F51398, (uint64_t)__dst, &qword_100E6F2A0);
    if (*((void *)&__dst[1] + 1))
    {
      sub_1001262E4(__dst, (uint64_t)&v9[3]);
      v9[1] = sub_1002B3CBC;
      void v9[2] = v4;
      uint64_t v7 = Dictionary.init(dictionaryLiteral:)();
      v9[8] = _swiftEmptyArrayStorage;
      v9[9] = v7;
      memcpy(__dst, v9, 0x61uLL);
      sub_1001262FC((uint64_t)__dst, (uint64_t)v9, &qword_100E66B30);
      char v10 = 1;
      sub_10017DF08(&qword_100E66B30);
      sub_100810078();
      sub_1001246C8(&qword_100E66B28, &qword_100E66B30);
      _ConditionalContent<>.init(storage:)();
      return sub_1001781AC((uint64_t)__dst, &qword_100E66B30);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    memcpy(v13, __src, sizeof(v13));
    sub_10020D948(a2 + 16, (uint64_t)&__dst[4] + 8);
    memcpy(__dst, v13, 0x48uLL);
    sub_1008100C4((uint64_t)__dst, (uint64_t)v9);
    char v10 = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10017DF08(&qword_100E66B30);
    sub_100810078();
    sub_1001246C8(&qword_100E66B28, &qword_100E66B30);
    _ConditionalContent<>.init(storage:)();
    return sub_100810120((uint64_t)__dst);
  }
  return result;
}

unint64_t sub_10080F9F4()
{
  unint64_t result = qword_100E98B20;
  if (!qword_100E98B20)
  {
    sub_10018C6DC(&qword_100E98B10);
    sub_10080FBE4(&qword_100E98B28, &qword_100E98B08, (void (*)(void))sub_10080FACC, (void (*)(void))sub_10080FB6C);
    sub_1001246C8(&qword_100E64438, &qword_100E64440);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E98B20);
  }
  return result;
}

unint64_t sub_10080FACC()
{
  unint64_t result = qword_100E98B30;
  if (!qword_100E98B30)
  {
    sub_10018C6DC(&qword_100E98B38);
    sub_10080FD0C(&qword_100E98B40, &qword_100E98B48, (void (*)(void))sub_1006E88CC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E98B30);
  }
  return result;
}

uint64_t sub_10080FB6C()
{
  return sub_10080FBE4(&qword_100E98B50, &qword_100E98B58, (void (*)(void))sub_10080FBA8, (void (*)(void))sub_10080FC6C);
}

uint64_t sub_10080FBA8()
{
  return sub_10080FBE4(&qword_100E98B60, &qword_100E98B68, (void (*)(void))sub_1003DDC1C, (void (*)(void))sub_1003DDB28);
}

uint64_t sub_10080FBE4(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10080FC6C()
{
  unint64_t result = qword_100E98B70;
  if (!qword_100E98B70)
  {
    sub_10018C6DC(&qword_100E7A118);
    sub_10080FD0C(&qword_100E98B78, &qword_100E7A110, (void (*)(void))sub_10080FDB0);
    sub_100790154();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E98B70);
  }
  return result;
}

uint64_t sub_10080FD0C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(a2);
    a3();
    sub_1001246C8(&qword_100E66B60, &qword_100E66B68);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10080FDB0()
{
  unint64_t result = qword_100E98B80;
  if (!qword_100E98B80)
  {
    sub_10018C6DC(&qword_100E98B88);
    sub_1001246C8(&qword_100E98B90, &qword_100E98B98);
    sub_1001246C8((unint64_t *)&qword_100E64F80, (uint64_t *)&unk_100EAA770);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E98B80);
  }
  return result;
}

uint64_t sub_10080FE74(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10080FED0(uint64_t a1)
{
  return a1;
}

uint64_t sub_10080FF24@<X0>(uint64_t a1@<X8>)
{
  return sub_10080ED9C(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_10080FF34()
{
  return sub_10080F254(*(void *)(v0 + 16));
}

uint64_t sub_10080FF3C()
{
  return sub_10080F41C(*(void *)(v0 + 16));
}

uint64_t sub_10080FF44(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10080FF7C()
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 32);

  return swift_deallocObject();
}

uint64_t sub_10080FFBC()
{
  return sub_10080F4C4((void *)(v0 + 16));
}

uint64_t sub_10080FFC4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100810020()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

unint64_t sub_100810078()
{
  unint64_t result = qword_100E98BE0;
  if (!qword_100E98BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E98BE0);
  }
  return result;
}

uint64_t sub_1008100C4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100810120(uint64_t a1)
{
  return a1;
}

unint64_t sub_100810178()
{
  unint64_t result = qword_100E98BE8;
  if (!qword_100E98BE8)
  {
    sub_10018C6DC(qword_100E98BF0);
    sub_10080F9F4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E98BE8);
  }
  return result;
}

uint64_t sub_1008101F4(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 32);
}

uint64_t sub_1008101FC(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 48);
}

uint64_t sub_100810204(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 56);
}

uint64_t sub_10081020C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_100810288(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  char v9 = 8 * v8;
  unint64_t v10 = v8;
  if (v7 <= 1)
  {
    if (v8 <= 3)
    {
      unsigned int v12 = (~(-1 << v9) - v7 + 2) >> v9;
      if (v12 > 0xFFFE)
      {
        uint64_t v11 = 4;
      }
      else
      {
        BOOL v13 = v12 != 0;
        BOOL v14 = v12 >= 0xFF;
        uint64_t v11 = 2;
        if (!v14) {
          uint64_t v11 = v13;
        }
      }
    }
    else
    {
      uint64_t v11 = 1;
    }
    unint64_t v10 = v11 + v8;
  }
  uint64_t v15 = *(_DWORD *)(v6 + 80);
  if (v15 <= 7 && v10 <= 0x18 && (*(_DWORD *)(v6 + 80) & 0x100000) == 0)
  {
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 2, v5))
    {
      if (v7 <= 1)
      {
        if (v8 <= 3)
        {
          unsigned int v20 = (~(-1 << v9) - v7 + 2) >> v9;
          if (v20 > 0xFFFE)
          {
            uint64_t v19 = 4;
          }
          else
          {
            BOOL v21 = v20 != 0;
            BOOL v14 = v20 >= 0xFF;
            uint64_t v19 = 2;
            if (!v14) {
              uint64_t v19 = v21;
            }
          }
        }
        else
        {
          uint64_t v19 = 1;
        }
        v8 += v19;
      }
      memcpy(a1, a2, v8);
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 2, v5);
    }
  }
  else
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v15 + 16) & ~v15));
    swift_retain();
  }
  return a1;
}

uint64_t sub_100810464(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(a1, 2, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v5(a1, v3);
  }
  return result;
}

void *sub_1008104E0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  int v6 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 2, v5);
  uint64_t v7 = *(void *)(v5 - 8);
  if (v6)
  {
    unsigned int v8 = *(_DWORD *)(v7 + 84);
    size_t v9 = *(void *)(v7 + 64);
    if (v8 <= 1)
    {
      if (v9 <= 3)
      {
        unsigned int v11 = (~(-1 << (8 * v9)) - v8 + 2) >> (8 * v9);
        if (v11 > 0xFFFE)
        {
          uint64_t v10 = 4;
        }
        else
        {
          BOOL v12 = v11 != 0;
          BOOL v13 = v11 >= 0xFF;
          uint64_t v10 = 2;
          if (!v13) {
            uint64_t v10 = v12;
          }
        }
      }
      else
      {
        uint64_t v10 = 1;
      }
      v9 += v10;
    }
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v5);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 2, v5);
  }
  return a1;
}

void *sub_1008105FC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  int v6 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 2, v5);
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 2, v5);
  uint64_t v8 = *(void *)(v5 - 8);
  if (v6)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(a1, a2, v5);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 2, v5);
      return a1;
    }
    unsigned int v9 = *(_DWORD *)(v8 + 84);
    size_t v10 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 24))(a1, a2, v5);
      return a1;
    }
    uint64_t v11 = v8 + 8;
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
    unsigned int v9 = *(_DWORD *)(v11 + 76);
    size_t v10 = *(void *)(v11 + 56);
  }
  if (v9 <= 1)
  {
    if (v10 <= 3)
    {
      unsigned int v13 = (~(-1 << (8 * v10)) - v9 + 2) >> (8 * v10);
      if (v13 > 0xFFFE)
      {
        uint64_t v12 = 4;
      }
      else
      {
        BOOL v14 = v13 != 0;
        BOOL v15 = v13 >= 0xFF;
        uint64_t v12 = 2;
        if (!v15) {
          uint64_t v12 = v14;
        }
      }
    }
    else
    {
      uint64_t v12 = 1;
    }
    v10 += v12;
  }
  memcpy(a1, a2, v10);
  return a1;
}

void *sub_10081077C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  int v6 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 2, v5);
  uint64_t v7 = *(void *)(v5 - 8);
  if (v6)
  {
    unsigned int v8 = *(_DWORD *)(v7 + 84);
    size_t v9 = *(void *)(v7 + 64);
    if (v8 <= 1)
    {
      if (v9 <= 3)
      {
        unsigned int v11 = (~(-1 << (8 * v9)) - v8 + 2) >> (8 * v9);
        if (v11 > 0xFFFE)
        {
          uint64_t v10 = 4;
        }
        else
        {
          BOOL v12 = v11 != 0;
          BOOL v13 = v11 >= 0xFF;
          uint64_t v10 = 2;
          if (!v13) {
            uint64_t v10 = v12;
          }
        }
      }
      else
      {
        uint64_t v10 = 1;
      }
      v9 += v10;
    }
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v5);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 2, v5);
  }
  return a1;
}

void *sub_100810898(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  int v6 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 2, v5);
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 2, v5);
  uint64_t v8 = *(void *)(v5 - 8);
  if (v6)
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(a1, a2, v5);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 2, v5);
      return a1;
    }
    unsigned int v9 = *(_DWORD *)(v8 + 84);
    size_t v10 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v7)
    {
      (*(void (**)(void *, const void *, uint64_t))(v8 + 40))(a1, a2, v5);
      return a1;
    }
    uint64_t v11 = v8 + 8;
    (*(void (**)(void *, uint64_t))(v8 + 8))(a1, v5);
    unsigned int v9 = *(_DWORD *)(v11 + 76);
    size_t v10 = *(void *)(v11 + 56);
  }
  if (v9 <= 1)
  {
    if (v10 <= 3)
    {
      unsigned int v13 = (~(-1 << (8 * v10)) - v9 + 2) >> (8 * v10);
      if (v13 > 0xFFFE)
      {
        uint64_t v12 = 4;
      }
      else
      {
        BOOL v14 = v13 != 0;
        BOOL v15 = v13 >= 0xFF;
        uint64_t v12 = 2;
        if (!v15) {
          uint64_t v12 = v14;
        }
      }
    }
    else
    {
      uint64_t v12 = 1;
    }
    v10 += v12;
  }
  memcpy(a1, a2, v10);
  return a1;
}

uint64_t sub_100810A18(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(unsigned int *)(*(void *)(v4 - 8) + 84);
  unsigned int v6 = v5 - 2;
  uint64_t v7 = *(void *)(*(void *)(v4 - 8) + 64);
  if (v5 <= 1)
  {
    unsigned int v6 = 0;
    if (v7 <= 3)
    {
      unsigned int v9 = (~(-1 << (8 * v7)) - v5 + 2) >> (8 * v7);
      if (v9 > 0xFFFE)
      {
        uint64_t v8 = 4;
      }
      else
      {
        BOOL v10 = v9 != 0;
        BOOL v11 = v9 >= 0xFF;
        uint64_t v8 = 2;
        if (!v11) {
          uint64_t v8 = v10;
        }
      }
    }
    else
    {
      uint64_t v8 = 1;
    }
    v7 += v8;
  }
  if (!a2) {
    return 0;
  }
  unsigned int v12 = a2 - v6;
  if (a2 <= v6) {
    goto LABEL_28;
  }
  char v13 = 8 * v7;
  if (v7 <= 3)
  {
    unsigned int v15 = ((v12 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v15))
    {
      int v14 = *(_DWORD *)((char *)a1 + v7);
      if (!v14) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v15 > 0xFF)
    {
      int v14 = *(unsigned __int16 *)((char *)a1 + v7);
      if (!*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_28;
      }
      goto LABEL_20;
    }
    if (v15 < 2)
    {
LABEL_28:
      if (v6)
      {
        unsigned int v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, v5, v4);
        if (v17 >= 3) {
          return v17 - 2;
        }
        else {
          return 0;
        }
      }
      return 0;
    }
  }
  int v14 = *((unsigned __int8 *)a1 + v7);
  if (!*((unsigned char *)a1 + v7)) {
    goto LABEL_28;
  }
LABEL_20:
  int v16 = (v14 - 1) << v13;
  if (v7 > 3) {
    int v16 = 0;
  }
  if (v7)
  {
    if (v7 > 3) {
      LODWORD(v7) = 4;
    }
    switch((int)v7)
    {
      case 2:
        LODWORD(v7) = *a1;
        break;
      case 3:
        LODWORD(v7) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v7) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v7) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v6 + (v7 | v16) + 1;
}

void sub_100810BF0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(unsigned int *)(*(void *)(v6 - 8) + 84);
  unsigned int v8 = v7 - 2;
  size_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
  if (v7 <= 1)
  {
    unsigned int v8 = 0;
    if (v9 <= 3)
    {
      unsigned int v11 = (~(-1 << (8 * v9)) - v7 + 2) >> (8 * v9);
      if (v11 > 0xFFFE)
      {
        uint64_t v10 = 4;
      }
      else
      {
        BOOL v12 = v11 != 0;
        BOOL v13 = v11 >= 0xFF;
        uint64_t v10 = 2;
        if (!v13) {
          uint64_t v10 = v12;
        }
      }
    }
    else
    {
      uint64_t v10 = 1;
    }
    v9 += v10;
  }
  char v14 = 8 * v9;
  BOOL v13 = a3 >= v8;
  unsigned int v15 = a3 - v8;
  if (v15 != 0 && v13)
  {
    if (v9 <= 3)
    {
      unsigned int v19 = ((v15 + ~(-1 << v14)) >> v14) + 1;
      if (HIWORD(v19))
      {
        int v16 = 4;
      }
      else if (v19 >= 0x100)
      {
        int v16 = 2;
      }
      else
      {
        int v16 = v19 > 1;
      }
    }
    else
    {
      int v16 = 1;
    }
  }
  else
  {
    int v16 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v17 = ~v8 + a2;
    if (v9 < 4)
    {
      int v18 = (v17 >> v14) + 1;
      if (v9)
      {
        int v20 = v17 & ~(-1 << v14);
        bzero(a1, v9);
        if (v9 == 3)
        {
          *(_WORD *)a1 = v20;
          a1[2] = BYTE2(v20);
        }
        else if (v9 == 2)
        {
          *(_WORD *)a1 = v20;
        }
        else
        {
          *a1 = v20;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v17;
      int v18 = 1;
    }
    switch(v16)
    {
      case 1:
        a1[v9] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v9] = v18;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v9] = v18;
        return;
      default:
        return;
    }
  }
  switch(v16)
  {
    case 1:
      a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 2:
      *(_WORD *)&a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_30;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x100810E64);
    case 4:
      *(_DWORD *)&a1[v9] = 0;
      goto LABEL_29;
    default:
LABEL_29:
      if (a2)
      {
LABEL_30:
        uint64_t v21 = a2 + 2;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, v21, v7, v6);
      }
      return;
  }
}

uint64_t sub_100810E8C(uint64_t a1, uint64_t a2)
{
  return _s7Weather24LocationCompositionStateOwet_0(a1, 2, *(void *)(a2 + 16));
}

uint64_t sub_100810E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 2, *(void *)(a3 + 16));
}

uint64_t type metadata accessor for StateProcessorResult()
{
  return sub_100109098();
}

uint64_t destroy for VisibilityComponentView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10018F6D8(*(void *)(a1 + 48), *(unsigned char *)(a1 + 56));
  uint64_t v2 = *(void *)(a1 + 64);
  char v3 = *(unsigned char *)(a1 + 72);

  return sub_10018F6D8(v2, v3);
}

uint64_t initializeWithCopy for VisibilityComponentView(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 48);
  char v8 = *(unsigned char *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100195B7C(v7, v8);
  *(void *)(a1 + 48) = v7;
  *(unsigned char *)(a1 + 56) = v8;
  uint64_t v9 = *(void *)(v2 + 64);
  LOBYTE(v2) = *(unsigned char *)(v2 + 72);
  sub_100195B7C(v9, v2);
  *(void *)(a1 + 64) = v9;
  *(unsigned char *)(a1 + 72) = v2;
  return a1;
}

uint64_t assignWithCopy for VisibilityComponentView(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = v2[2];
  *(void *)(a1 + 24) = v2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = v2[4];
  *(void *)(a1 + 40) = v2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = v2[6];
  char v5 = *((unsigned char *)v2 + 56);
  sub_100195B7C(v4, v5);
  uint64_t v6 = *(void *)(a1 + 48);
  char v7 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 48) = v4;
  *(unsigned char *)(a1 + 56) = v5;
  sub_10018F6D8(v6, v7);
  uint64_t v8 = v2[8];
  LOBYTE(v2) = *((unsigned char *)v2 + 72);
  sub_100195B7C(v8, (char)v2);
  uint64_t v9 = *(void *)(a1 + 64);
  char v10 = *(unsigned char *)(a1 + 72);
  *(void *)(a1 + 64) = v8;
  *(unsigned char *)(a1 + 72) = (_BYTE)v2;
  sub_10018F6D8(v9, v10);
  return a1;
}

uint64_t assignWithTake for VisibilityComponentView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  char v7 = *(unsigned char *)(a2 + 56);
  uint64_t v8 = *(void *)(a1 + 48);
  char v9 = *(unsigned char *)(a1 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = v7;
  sub_10018F6D8(v8, v9);
  char v10 = *(unsigned char *)(a2 + 72);
  uint64_t v11 = *(void *)(a1 + 64);
  char v12 = *(unsigned char *)(a1 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = v10;
  sub_10018F6D8(v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for VisibilityComponentView(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 73))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VisibilityComponentView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 73) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1008111B8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1008111D4()
{
  uint64_t v39 = type metadata accessor for AutomationInfo(0);
  __chkstk_darwin(v39);
  sub_100109314();
  uint64_t v38 = v1;
  type metadata accessor for AccessibilityChildBehavior();
  sub_100179C0C();
  uint64_t v34 = v3;
  uint64_t v35 = v2;
  __chkstk_darwin(v2);
  sub_100109314();
  uint64_t v32 = v4;
  sub_10017DF08(&qword_100E98D38);
  sub_100179C0C();
  uint64_t v36 = v5;
  uint64_t v37 = v6;
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v31 = v7;
  uint64_t v8 = sub_10017DF08(&qword_100E7A060);
  __chkstk_darwin(v8 - 8);
  sub_100109314();
  uint64_t v33 = v9;
  uint64_t v30 = static VerticalAlignment.center.getter();
  uint64_t v10 = static HorizontalAlignment.leading.getter();
  sub_100811604(v0, v68);
  uint64_t v28 = v68[7];
  uint64_t v29 = v68[3];
  uint64_t v26 = v68[10];
  uint64_t v27 = v68[8];
  uint64_t v24 = v68[12];
  uint64_t v25 = v68[11];
  LODWORD(v23) = BYTE2(v68[13]);
  HIDWORD(v23) = BYTE1(v68[13]);
  char v45 = 0;
  char v44 = v68[2];
  char v43 = v68[6];
  char v42 = v68[9];
  char v41 = v68[13];
  v46[0] = v10;
  v46[1] = 0;
  LOBYTE(v46[2]) = 0;
  v46[3] = v68[0];
  v46[4] = v68[1];
  LOBYTE(v46[5]) = v68[2];
  v46[6] = v68[3];
  v46[7] = v68[4];
  v46[8] = v68[5];
  LOBYTE(v46[9]) = v68[6];
  v46[10] = v68[7];
  v46[11] = v68[8];
  LOBYTE(v46[12]) = v68[9];
  v46[13] = v68[10];
  v46[14] = v68[11];
  v46[15] = v68[12];
  LOWORD(v46[16]) = v68[13];
  BYTE2(v46[16]) = BYTE2(v68[13]);
  v46[17] = 0x3FF0000000000000;
  memcpy(v48, v46, sizeof(v48));
  char v47 = 0;
  v49[0] = v10;
  v49[1] = 0;
  char v50 = 0;
  uint64_t v51 = v68[0];
  uint64_t v52 = v68[1];
  char v53 = v68[2];
  uint64_t v54 = v68[3];
  uint64_t v55 = v68[4];
  uint64_t v56 = v68[5];
  char v57 = v68[6];
  uint64_t v58 = v68[7];
  uint64_t v59 = v68[8];
  char v60 = v68[9];
  uint64_t v61 = v68[10];
  uint64_t v62 = v68[11];
  uint64_t v63 = v68[12];
  __int16 v64 = v68[13];
  char v65 = BYTE2(v68[13]);
  uint64_t v66 = 0x3FF0000000000000;
  sub_100811CCC((uint64_t)v46);
  sub_100811D50((uint64_t)v49);
  v67[151] = 0;
  memcpy(&v67[7], v48, 0x90uLL);
  memcpy((char *)&v40[2] + 1, v67, 0x97uLL);
  v40[0] = v30;
  v40[1] = 0;
  LOBYTE(v40[2]) = 0;
  v40[21] = 0;
  LOBYTE(v40[22]) = 0;
  static AccessibilityChildBehavior.combine.getter();
  uint64_t v11 = sub_10017DF08(&qword_100E98D40);
  unint64_t v12 = sub_100811DD4();
  View.accessibilityElement(children:)();
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v35);
  memcpy(v68, v40, 0xB1uLL);
  sub_100811E28((uint64_t)v68);
  v40[0] = v11;
  v40[1] = v12;
  swift_getOpaqueTypeConformance2();
  uint64_t v13 = v33;
  View.accessibilityRespondsToUserInteraction(_:)();
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v31, v36);
  type metadata accessor for AutomationCellInfo(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_10048D4B4(v38, v14, v15, v16, v17, v18, v19, v20, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33);
  sub_1003F8810(v38);
  return sub_1000F3400(v13, &qword_100E7A060);
}

uint64_t sub_100811604@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  int8x16_t v72 = a2;
  uint64_t v86 = type metadata accessor for TypesettingLanguageAwareLineHeightRatio();
  uint64_t v83 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  int8x16_t v74 = (char *)&v71 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100E6D330);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v71 - v8;
  uint64_t v10 = a1;
  uint64_t v11 = *a1;
  uint64_t v12 = a1[1];
  uint64_t v13 = v10[2];
  uint64_t v84 = v10[3];
  uint64_t v85 = v13;
  uint64_t v14 = v10;
  long long v90 = *((_OWORD *)v10 + 2);
  *(void *)&long long v91 = v11;
  *((void *)&v91 + 1) = v12;
  unint64_t v75 = sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v15 = Text.init<A>(_:)();
  uint64_t v73 = v16;
  char v18 = v17 & 1;
  uint64_t v19 = static Font.largeTitle.getter();
  uint64_t v20 = static Font.title2.getter();
  int v87 = v14;
  uint64_t v21 = v14[8];
  uint64_t v82 = v21;
  int v22 = *((unsigned __int8 *)v14 + 72);
  int v81 = v22;
  sub_100195B7C(v21, v22);
  sub_100149AE8();
  LOBYTE(v14) = v23;
  sub_10018F6D8(v21, v22);
  uint64_t v24 = enum case for Font.Leading.tight(_:);
  unsigned int v79 = enum case for Font.Leading.tight(_:);
  uint64_t v25 = type metadata accessor for Font.Leading();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v78 = *(void (**)(char *, uint64_t))(v26 + 104);
  uint64_t v80 = v26 + 104;
  int v88 = v9;
  uint64_t v27 = v24;
  uint64_t v28 = v25;
  uint64_t v77 = v25;
  v78(v9, v27);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v28);
  unint64_t v76 = v6;
  sub_10014A148((uint64_t)v9, (uint64_t)v6);
  swift_retain();
  swift_retain();
  sub_10014A8A8(v19, v20, v14 & 1, (uint64_t)v6);
  uint64_t v29 = v15;
  uint64_t v30 = v73;
  uint64_t v31 = Text.font(_:)();
  uint64_t v33 = v32;
  LOBYTE(v28) = v34;
  uint64_t v71 = v35;
  swift_release();
  swift_release();
  swift_release();
  LOBYTE(v19) = v28 & 1;
  sub_100191924(v29, v30, v18);
  swift_bridgeObjectRelease();
  sub_1000F3400((uint64_t)v88, &qword_100E6D330);
  uint64_t v36 = v74;
  static TypesettingLanguageAwareLineHeightRatio.disable.getter();
  uint64_t v37 = Text.typesettingLanguageAwareLineHeightRatio(_:isEnabled:)();
  uint64_t v39 = v38;
  char v41 = v40 & 1;
  sub_100191924(v31, v33, v19);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v36, v86);
  long long v91 = v90;
  long long v89 = v90;
  swift_bridgeObjectRetain();
  uint64_t v83 = Text.accessibilityLabel<A>(_:)();
  int8x16_t v74 = v42;
  uint64_t v86 = v43;
  LODWORD(v73) = v44 & 1;
  sub_100191924(v37, v39, v41);
  swift_bridgeObjectRelease();
  sub_1002F8DD8((uint64_t)&v91);
  *(void *)&long long v89 = v85;
  *((void *)&v89 + 1) = v84;
  swift_bridgeObjectRetain();
  uint64_t v45 = Text.init<A>(_:)();
  uint64_t v47 = v46;
  LOBYTE(v33) = v48 & 1;
  uint64_t v49 = static Font.subheadline.getter();
  uint64_t v50 = static Font.footnote.getter();
  uint64_t v51 = v82;
  LOBYTE(v9) = v81;
  sub_100195B7C(v82, v81);
  sub_100149AE8();
  LOBYTE(v37) = v52;
  sub_10018F6D8(v51, (char)v9);
  uint64_t v53 = (uint64_t)v88;
  uint64_t v54 = v77;
  ((void (*)(char *, void, uint64_t))v78)(v88, v79, v77);
  _s7Weather24LocationCompositionStateOwst_0(v53, 0, 1, v54);
  uint64_t v55 = (uint64_t)v76;
  sub_10014A148(v53, (uint64_t)v76);
  swift_retain();
  swift_retain();
  sub_10014A8A8(v49, v50, v37 & 1, v55);
  uint64_t v56 = v47;
  uint64_t v57 = Text.font(_:)();
  uint64_t v59 = v58;
  LOBYTE(v47) = v60;
  uint64_t v85 = v61;
  swift_release();
  swift_release();
  swift_release();
  LOBYTE(v47) = v47 & 1;
  sub_100191924(v45, v56, v33);
  swift_bridgeObjectRelease();
  sub_1000F3400((uint64_t)v88, &qword_100E6D330);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v63 = v87[6];
  LOBYTE(v50) = *((unsigned char *)v87 + 56);
  sub_100195B7C(v63, v50);
  sub_100147CF4();
  LOBYTE(v33) = v64;
  sub_10018F6D8(v63, v50);
  char v65 = v73;
  LOBYTE(v89) = v73;
  uint64_t v66 = v83;
  unint64_t v67 = v72;
  uint64_t v68 = (uint64_t)v74;
  *int8x16_t v72 = v83;
  v67[1] = v68;
  *((unsigned char *)v67 + 16) = v65;
  uint64_t v69 = v85;
  v67[3] = v86;
  v67[4] = 0x3FF0000000000000;
  v67[5] = 0;
  *((unsigned char *)v67 + 48) = 0;
  v67[7] = v57;
  v67[8] = v59;
  *((unsigned char *)v67 + 72) = v47;
  v67[10] = v69;
  v67[11] = KeyPath;
  v67[12] = 4;
  *((_WORD *)v67 + 52) = 0;
  *((unsigned char *)v67 + 106) = (v33 & 1) == 0;
  sub_100190CC4(v66, v68, v65);
  swift_bridgeObjectRetain();
  sub_100190CC4(v57, v59, v47);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100191924(v57, v59, v47);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100191924(v66, v68, v89);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100811C88()
{
  memcpy(v2, v0, sizeof(v2));
  return sub_1008111D4();
}

uint64_t sub_100811CCC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 80);
  uint64_t v3 = *(void *)(a1 + 88);
  char v4 = *(unsigned char *)(a1 + 96);
  sub_100190CC4(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRetain();
  sub_100190CC4(v2, v3, v4);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_100811D50(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 80);
  uint64_t v3 = *(void *)(a1 + 88);
  char v4 = *(unsigned char *)(a1 + 96);
  sub_100191924(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRelease();
  sub_100191924(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_100811DD4()
{
  unint64_t result = qword_100E98D48;
  if (!qword_100E98D48)
  {
    sub_10018C6DC(&qword_100E98D40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E98D48);
  }
  return result;
}

uint64_t sub_100811E28(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 104);
  uint64_t v3 = *(void *)(a1 + 112);
  char v4 = *(unsigned char *)(a1 + 120);
  sub_100191924(*(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
  swift_bridgeObjectRelease();
  sub_100191924(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_100811EB8()
{
  unint64_t result = qword_100E98D50;
  if (!qword_100E98D50)
  {
    sub_10018C6DC(&qword_100E7A068);
    sub_100811F64();
    sub_10032DC40((unint64_t *)&qword_100E66BF8, (void (*)(uint64_t))type metadata accessor for AutomationInfoViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E98D50);
  }
  return result;
}

unint64_t sub_100811F64()
{
  unint64_t result = qword_100E98D58;
  if (!qword_100E98D58)
  {
    sub_10018C6DC(&qword_100E7A060);
    sub_10018C6DC(&qword_100E98D40);
    sub_100811DD4();
    swift_getOpaqueTypeConformance2();
    sub_10032DC40((unint64_t *)&qword_100EAACA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E98D58);
  }
  return result;
}

uint64_t sub_100812044()
{
  sub_100119470();
  uint64_t v1 = *v0;
  sub_100179D88();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100127A5C();
  return _swift_task_switch();
}

uint64_t sub_100812110()
{
  sub_100127BA4();
  v2();
  uint64_t v3 = sub_100127A9C();
  v4(v3);
  sub_10019F21C();
  v5(v1);
  uint64_t v6 = sub_1001A0E5C();
  v7(v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_1008122B4()
{
  uint64_t v1 = type metadata accessor for SHA256();
  sub_100179C0C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_100152344();
  uint64_t v5 = type metadata accessor for SHA256Digest();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UUID();
  sub_100179C0C();
  __chkstk_darwin(v8);
  uint64_t v24 = 0;
  uint64_t v25 = 0xE000000000000000;
  ActiveUserStatus.secretId.getter();
  sub_1000EF120(&qword_100E855D8, (void (*)(uint64_t))&type metadata accessor for UUID);
  v9._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_1001D1E18();
  v11(v10);
  v12._uint64_t countAndFlagsBits = 46;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  Date.timeIntervalSince1970.getter();
  Double.write<A>(to:)();
  uint64_t v13 = sub_100812768(v24, v25);
  unint64_t v15 = v14;
  sub_1000EF120(&qword_100E98E28, (void (*)(uint64_t))&type metadata accessor for SHA256);
  dispatch thunk of HashFunction.init()();
  switch(v15 >> 62)
  {
    case 1uLL:
      if (v13 >> 32 < (int)v13)
      {
        __break(1u);
        JUMPOUT(0x100812638);
      }
      sub_1007FD228(v13, v15);
      sub_1008134E8((int)v13, v13 >> 32);
      goto LABEL_5;
    case 2uLL:
      uint64_t v16 = *(void *)(v13 + 16);
      uint64_t v17 = *(void *)(v13 + 24);
      sub_1007FD228(v13, v15);
      swift_retain();
      swift_retain();
      sub_1008134E8(v16, v17);
      swift_release();
      swift_release();
LABEL_5:
      sub_100318440(v13, v15);
      goto LABEL_8;
    case 3uLL:
      sub_100127A5C();
      goto LABEL_7;
    default:
LABEL_7:
      sub_1008135C8();
      sub_100318440(v13, v15);
LABEL_8:
      dispatch thunk of HashFunction.finalize()();
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
      sub_100318440(v13, v15);
      uint64_t v18 = sub_100812C84((uint64_t)v7);
      unint64_t v20 = v19;
      uint64_t countAndFlagsBits = Data.base64EncodedString(options:)(0)._countAndFlagsBits;
      sub_100318440(v18, v20);
      return countAndFlagsBits;
  }
}

uint64_t sub_100812648()
{
  type metadata accessor for FirstLaunchEventData();
  sub_1000EF120(&qword_100E98E18, (void (*)(uint64_t))&type metadata accessor for FirstLaunchEventData);
  AccessTracker.push<A>(data:traits:file:line:)();
  type metadata accessor for FirstLaunchEvent();
  sub_1000EF120(&qword_100E98E20, (void (*)(uint64_t))&type metadata accessor for FirstLaunchEvent);
  memset(v1, 0, sizeof(v1));
  AccessTracker.submit<A>(_:onlyIfTimed:userInfo:completion:)();
  return sub_100178254((uint64_t)v1, &qword_100EAC3D0);
}

uint64_t sub_100812768(uint64_t a1, uint64_t a2)
{
  uint64_t v33 = a1;
  uint64_t v34 = a2;
  *(void *)&long long v37 = a1;
  *((void *)&v37 + 1) = a2;
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100E98E38);
  if (swift_dynamicCast())
  {
    sub_1001262E4(v35, (uint64_t)&v38);
    sub_1001B1E64(&v38, v40);
    dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)();
    swift_bridgeObjectRelease();
    v35[0] = v37;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v38);
    return *(void *)&v35[0];
  }
  uint64_t v36 = 0;
  memset(v35, 0, sizeof(v35));
  sub_100178254((uint64_t)v35, &qword_100E98E40);
  uint64_t v2 = v34;
  if ((v34 & 0x1000000000000000) != 0)
  {
LABEL_61:
    uint64_t v3 = 0;
    unint64_t v5 = 0xF000000000000000;
    if ((v2 & 0x1000000000000000) == 0) {
      goto LABEL_10;
    }
  }
  else
  {
    if ((v34 & 0x2000000000000000) != 0)
    {
      uint64_t v38 = v33;
      uint64_t v39 = v34 & 0xFFFFFFFFFFFFFFLL;
    }
    else if ((v33 & 0x1000000000000000) == 0)
    {
      _StringObject.sharedUTF8.getter();
    }
    uint64_t v3 = Data._Representation.init(_:)();
    unint64_t v5 = v4;
    if (v4 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(void *)&v35[0] = v3;
      *((void *)&v35[0] + 1) = v5;
      return *(void *)&v35[0];
    }
    if ((v34 & 0x1000000000000000) == 0) {
      goto LABEL_10;
    }
  }
  String.UTF8View._foreignCount()();
LABEL_10:
  *(void *)&v35[0] = Data._Representation.init(count:)();
  *((void *)&v35[0] + 1) = v6;
  __chkstk_darwin(*(void *)&v35[0]);
  v28[2] = &v33;
  unint64_t v7 = (unint64_t)sub_100812FD8((void *(*)(uint64_t *__return_ptr, char *, char *))sub_100813728, (uint64_t)v28);
  uint64_t v10 = *((void *)&v35[0] + 1) >> 62;
  uint64_t v11 = v7;
  unint64_t v13 = v12;
  unint64_t v14 = v8;
  uint64_t v2 = BYTE14(v35[0]);
  switch(*((void *)&v35[0] + 1) >> 62)
  {
    case 1:
      LODWORD(v15) = DWORD1(v35[0]) - LODWORD(v35[0]);
      if (__OFSUB__(DWORD1(v35[0]), v35[0])) {
        goto LABEL_65;
      }
      uint64_t v15 = (int)v15;
LABEL_16:
      if (v9 != v15)
      {
        if (v10)
        {
          if (v10 == 1) {
            uint64_t v2 = *(uint64_t *)&v35[0] >> 32;
          }
          else {
            uint64_t v2 = *(void *)(*(void *)&v35[0] + 24);
          }
        }
LABEL_53:
        if (v2 < v9)
        {
          __break(1u);
LABEL_65:
          __break(1u);
LABEL_66:
          __break(1u);
        }
        Data._Representation.replaceSubrange(_:with:count:)();
LABEL_55:
        swift_bridgeObjectRelease();
        goto LABEL_56;
      }
LABEL_22:
      if ((v13 & 0x2000000000000000) != 0) {
        unint64_t v19 = HIBYTE(v13) & 0xF;
      }
      else {
        unint64_t v19 = v7 & 0xFFFFFFFFFFFFLL;
      }
      *(void *)((char *)&v37 + 7) = 0;
      *(void *)&long long v37 = 0;
      if (4 * v19 == v8 >> 14) {
        goto LABEL_51;
      }
      unint64_t v29 = v5;
      LOBYTE(v20) = 0;
      uint64_t v21 = (v7 >> 59) & 1;
      if ((v13 & 0x1000000000000000) == 0) {
        LOBYTE(v21) = 1;
      }
      uint64_t v22 = 4 << v21;
      uint64_t v32 = v13 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v30 = v3;
      uint64_t v31 = (v13 & 0xFFFFFFFFFFFFFFFLL) + 32;
      break;
    case 2:
      uint64_t v17 = *(void *)(*(void *)&v35[0] + 16);
      uint64_t v16 = *(void *)(*(void *)&v35[0] + 24);
      BOOL v18 = __OFSUB__(v16, v17);
      uint64_t v15 = v16 - v17;
      if (!v18) {
        goto LABEL_16;
      }
      goto LABEL_66;
    case 3:
      if (!v9) {
        goto LABEL_22;
      }
      uint64_t v2 = 0;
      goto LABEL_53;
    default:
      uint64_t v15 = BYTE14(v35[0]);
      goto LABEL_16;
  }
  do
  {
    unint64_t v23 = v14;
    if ((v14 & 0xC) == v22) {
      unint64_t v23 = sub_100235290(v14, v11, v13);
    }
    unint64_t v24 = v23 >> 16;
    if (v23 >> 16 >= v19)
    {
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
      goto LABEL_61;
    }
    if ((v13 & 0x1000000000000000) != 0)
    {
      char v26 = String.UTF8View._foreignSubscript(position:)();
    }
    else if ((v13 & 0x2000000000000000) != 0)
    {
      uint64_t v38 = v11;
      uint64_t v39 = v32;
      char v26 = *((unsigned char *)&v38 + v24);
    }
    else
    {
      uint64_t v25 = v31;
      if ((v11 & 0x1000000000000000) == 0) {
        uint64_t v25 = _StringObject.sharedUTF8.getter();
      }
      char v26 = *(unsigned char *)(v25 + v24);
    }
    if ((v14 & 0xC) == v22)
    {
      unint64_t v14 = sub_100235290(v14, v11, v13);
      if ((v13 & 0x1000000000000000) == 0)
      {
LABEL_40:
        unint64_t v14 = (v14 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_45;
      }
    }
    else if ((v13 & 0x1000000000000000) == 0)
    {
      goto LABEL_40;
    }
    if (v19 <= v14 >> 16) {
      goto LABEL_60;
    }
    unint64_t v14 = String.UTF8View._foreignIndex(after:)();
LABEL_45:
    *((unsigned char *)&v37 + v20) = v26;
    unsigned int v20 = v20 + 1;
    if ((v20 >> 8)) {
      goto LABEL_59;
    }
    BYTE14(v37) = v20;
    if (v20 == 14)
    {
      uint64_t v38 = v37;
      LODWORD(v39) = DWORD2(v37);
      WORD2(v39) = WORD6(v37);
      Data._Representation.append(contentsOf:)();
      LOBYTE(v20) = 0;
      BYTE14(v37) = 0;
    }
  }
  while (4 * v19 != v14 >> 14);
  uint64_t v3 = v30;
  unint64_t v5 = v29;
  if ((_BYTE)v20)
  {
    uint64_t v38 = v37;
    LODWORD(v39) = DWORD2(v37);
    WORD2(v39) = WORD6(v37);
    Data._Representation.append(contentsOf:)();
    sub_1003FC164(v3, v5);
    goto LABEL_55;
  }
LABEL_51:
  swift_bridgeObjectRelease();
  sub_1003FC164(v3, v5);
LABEL_56:
  swift_bridgeObjectRelease();
  return *(void *)&v35[0];
}

uint64_t sub_100812C84(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SHA256Digest();
  uint64_t v8 = v2;
  uint64_t v9 = sub_1000EF120(&qword_100E98E30, (void (*)(uint64_t))&type metadata accessor for SHA256Digest);
  uint64_t v3 = sub_100170694(v7);
  uint64_t v4 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v4 + 16))(v3, a1, v2);
  sub_1001B1E64(v7, v8);
  dispatch thunk of ContiguousBytes.withUnsafeBytes<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v7);
  return v6;
}

uint64_t sub_100812DC8()
{
  uint64_t v1 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100812E88()
{
  type metadata accessor for FirstLaunchEventData();
  sub_100162880();
  (*(void (**)(unint64_t))(v1 + 8))(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
  sub_100127A9C();

  return swift_deallocObject();
}

uint64_t sub_100812F10()
{
  type metadata accessor for FirstLaunchEventData();

  return sub_100812648();
}

void *sub_100812F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v6[0] = a3;
  v6[1] = a4;
  _OWORD v5[2] = v6;
  return sub_100813380((void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_100813788, (uint64_t)v5, a1, a2);
}

void *sub_100812FD8(void *(*a1)(uint64_t *__return_ptr, char *, char *), uint64_t a2)
{
  uint64_t v4 = *v2;
  unint64_t v3 = v2[1];
  unint64_t v5 = v2;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)uint64_t v2 = xmmword_100C5EBF0;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = v4 >> 32;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_11;
      }
      if (v11 < (int)v4) {
        goto LABEL_16;
      }
      if (__DataStorage._bytes.getter() && __OFSUB__((int)v4, __DataStorage._offset.getter())) {
        goto LABEL_17;
      }
      type metadata accessor for __DataStorage();
      swift_allocObject();
      uint64_t v13 = __DataStorage.init(bytes:length:copy:deallocator:offset:)();
      swift_release();
      uint64_t v9 = v13;
      uint64_t v11 = v4 >> 32;
LABEL_11:
      if (v11 < (int)v4)
      {
        __break(1u);
LABEL_16:
        __break(1u);
LABEL_17:
        __break(1u);
      }
      unint64_t result = sub_1008133E8((int)v4, v11, a1);
      unint64_t v12 = v9 | 0x4000000000000000;
      *unint64_t v5 = v4;
LABEL_13:
      v5[1] = v12;
      return result;
    case 2uLL:
      *(void *)&long long v14 = *v2;
      *((void *)&v14 + 1) = v3 & 0x3FFFFFFFFFFFFFFFLL;
      Data.LargeSlice.ensureUniqueReference()();
      unint64_t result = sub_1008133E8(*(void *)(v14 + 16), *(void *)(v14 + 24), a1);
      unint64_t v12 = *((void *)&v14 + 1) | 0x8000000000000000;
      *uint64_t v2 = v14;
      goto LABEL_13;
    case 3uLL:
      *(void *)((char *)&v14 + 7) = 0;
      *(void *)&long long v14 = 0;
      return sub_10081349C((uint64_t)&v14, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))a1, a2, 0);
    default:
      *(void *)&long long v14 = *v2;
      WORD4(v14) = v3;
      BYTE10(v14) = BYTE2(v3);
      BYTE11(v14) = BYTE3(v3);
      BYTE12(v14) = BYTE4(v3);
      BYTE13(v14) = BYTE5(v3);
      BYTE14(v14) = BYTE6(v3);
      unint64_t result = sub_10081349C((uint64_t)&v14, (void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))a1, a2, BYTE6(v3));
      unint64_t v8 = DWORD2(v14) | ((unint64_t)BYTE12(v14) << 32) | ((unint64_t)BYTE13(v14) << 40) | ((unint64_t)BYTE14(v14) << 48);
      *uint64_t v2 = v14;
      v2[1] = v8;
      return result;
  }
}

uint64_t sub_100813284@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    unint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    unint64_t result = Data.InlineData.init(_:)();
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    unint64_t result = Data.LargeSlice.init(_:)();
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    unint64_t result = Data.InlineSlice.init(_:)();
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1008132FC(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    unint64_t result = _StringGuts.copyUTF8(into:)();
    if ((v1 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_100813380(void *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t v6 = a4 - a3;
    uint64_t v7 = a3;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v6 = 0;
  }
  unint64_t result = a1(&v9, v7, v6);
  if (!v4) {
    return (void *)v9;
  }
  return result;
}

char *sub_1008133E8(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  unint64_t result = (char *)__DataStorage._bytes.getter();
  if (!result) {
    goto LABEL_12;
  }
  uint64_t v8 = result;
  unint64_t result = (char *)__DataStorage._offset.getter();
  uint64_t v9 = a1 - (void)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v12 = __DataStorage._length.getter();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  unint64_t result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3) {
    return (char *)v14;
  }
  return result;
}

void *sub_10081349C(uint64_t a1, void *(*a2)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  unint64_t result = a2(&v6, a1, a1 + a4);
  if (!v4) {
    return (void *)v6;
  }
  return result;
}

uint64_t sub_1008134E8(uint64_t a1, uint64_t a2)
{
  uint64_t result = __DataStorage._bytes.getter();
  if (!result || (uint64_t result = __DataStorage._offset.getter(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      __DataStorage._length.getter();
      type metadata accessor for SHA256();
      sub_1000EF120(&qword_100E98E28, (void (*)(uint64_t))&type metadata accessor for SHA256);
      return dispatch thunk of HashFunction.update(bufferPointer:)();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1008135C8()
{
  return dispatch thunk of HashFunction.update(bufferPointer:)();
}

void *sub_1008136F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void *a4@<X8>)
{
  uint64_t result = sub_100812F80(a1, a2, *a3, a3[1]);
  if (!v4)
  {
    *a4 = result;
    a4[1] = v7;
    a4[2] = v8;
    a4[3] = v9;
  }
  return result;
}

void *sub_100813728@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1008136F0(a1, a2, *(uint64_t **)(v3 + 16), a3);
}

uint64_t sub_100813744@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1008132FC(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_100813788@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100813744(a1, a2);
}

unint64_t sub_1008137A8(unint64_t a1, uint64_t a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_100195B7C(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = v6[5];
    BOOL v10 = (void *)(a1 + v9);
    uint64_t v11 = (void *)(a2 + v9);
    uint64_t v12 = *(void *)(a2 + v9 + 8);
    if (v12)
    {
      *BOOL v10 = *v11;
      v10[1] = v12;
      uint64_t v13 = v11[3];
      long long v10[2] = v11[2];
      v10[3] = v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v15 = *((_OWORD *)v11 + 1);
      *(_OWORD *)BOOL v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v15;
    }
    uint64_t v16 = type metadata accessor for DetailComponentContainerViewModel();
    uint64_t v17 = *(int *)(v16 + 20);
    BOOL v18 = (void *)((char *)v10 + v17);
    unint64_t v19 = (void *)((char *)v11 + v17);
    uint64_t v20 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v49 = v16;
      uint64_t v21 = v19[1];
      *BOOL v18 = *v19;
      v18[1] = v21;
      char v52 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v22 = v52[5];
      __dst = (char *)v18 + v22;
      unint64_t v23 = (char *)v19 + v22;
      uint64_t v24 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      uint64_t v50 = v6;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24))
      {
        uint64_t v25 = sub_10017DF08(&qword_100E749B0);
        memcpy(__dst, v23, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(__dst, v23, v24);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v24);
      }
      uint64_t v26 = v52[6];
      uint64_t v27 = (void *)((char *)v18 + v26);
      uint64_t v28 = (void *)((char *)v19 + v26);
      uint64_t v29 = v28[1];
      *uint64_t v27 = *v28;
      v27[1] = v29;
      uint64_t v30 = v52[7];
      uint64_t v31 = (char *)v18 + v30;
      uint64_t v32 = (char *)v19 + v30;
      uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
      swift_bridgeObjectRetain();
      v33(v31, v32, v24);
      uint64_t v34 = v52[8];
      uint64_t v35 = (char *)v18 + v34;
      uint64_t v36 = (char *)v19 + v34;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19 + v34, 1, v24))
      {
        uint64_t v37 = sub_10017DF08(&qword_100E749B0);
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
      }
      else
      {
        v33(v35, v36, v24);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v24);
      }
      uint64_t v6 = v50;
      *((unsigned char *)v18 + v52[9]) = *((unsigned char *)v19 + v52[9]);
      swift_storeEnumTagMultiPayload();
      uint64_t v16 = v49;
    }
    else
    {
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    uint64_t v38 = *(int *)(v16 + 24);
    uint64_t v39 = (char *)v10 + v38;
    uint64_t v40 = (char *)v11 + v38;
    uint64_t v41 = type metadata accessor for DetailComponentAction();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
    {
      uint64_t v42 = sub_10017DF08(&qword_100E73810);
      memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      uint64_t v43 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v39, v40, v43);
      uint64_t v44 = sub_10017DF08(&qword_100E66478);
      v39[*(int *)(v44 + 48)] = v40[*(int *)(v44 + 48)];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
    }
    uint64_t v45 = v6[6];
    long long v46 = *(_OWORD *)(a2 + v45 + 24);
    *(_OWORD *)(a1 + v45 + 24) = v46;
    (**(void (***)(void))(v46 - 8))();
    uint64_t v47 = v6[8];
    *(void *)(a1 + v6[7]) = *(void *)(a2 + v6[7]);
    *(void *)(a1 + v47) = *(void *)(a2 + v47);
    *(void *)(a1 + v6[9]) = *(void *)(a2 + v6[9]);
  }
  return a1;
}

uint64_t sub_100813C00(uint64_t a1, uint64_t a2)
{
  sub_10018F6D8(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  if (*(void *)(v4 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = type metadata accessor for DetailComponentContainerViewModel();
  uint64_t v6 = v4 + *(int *)(v5 + 20);
  type metadata accessor for NewsArticleComponentViewModel(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v7 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
    uint64_t v8 = v6 + v7[5];
    uint64_t v9 = type metadata accessor for URL();
    if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v9)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    }
    swift_bridgeObjectRelease();
    BOOL v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    v10(v6 + v7[7], v9);
    uint64_t v11 = v6 + v7[8];
    if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v9)) {
      v10(v11, v9);
    }
  }
  uint64_t v12 = v4 + *(int *)(v5 + 24);
  uint64_t v13 = type metadata accessor for DetailComponentAction();
  if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v13))
  {
    uint64_t v14 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v12, v14);
  }
  uint64_t v15 = a1 + *(int *)(a2 + 24);

  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v15);
}

uint64_t sub_100813DF0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)(a1 + v8);
  BOOL v10 = (void *)(v4 + v8);
  uint64_t v11 = *(void *)(v4 + v8 + 8);
  if (v11)
  {
    *uint64_t v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = v10[3];
    void v9[2] = v10[2];
    v9[3] = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v13 = *((_OWORD *)v10 + 1);
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v13;
  }
  uint64_t v14 = type metadata accessor for DetailComponentContainerViewModel();
  uint64_t v15 = *(int *)(v14 + 20);
  uint64_t v16 = (void *)((char *)v9 + v15);
  uint64_t v17 = (void *)((char *)v10 + v15);
  uint64_t v18 = type metadata accessor for NewsArticleComponentViewModel(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v49 = v14;
    uint64_t v19 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v19;
    uint64_t v50 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
    uint64_t v20 = v50[5];
    __dst = (char *)v16 + v20;
    uint64_t v21 = (char *)v17 + v20;
    uint64_t v22 = type metadata accessor for URL();
    swift_bridgeObjectRetain();
    uint64_t v47 = v4;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
    {
      uint64_t v23 = sub_10017DF08(&qword_100E749B0);
      memcpy(__dst, v21, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(__dst, v21, v22);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v22);
    }
    uint64_t v24 = v50[6];
    uint64_t v25 = (void *)((char *)v16 + v24);
    uint64_t v26 = (void *)((char *)v17 + v24);
    uint64_t v27 = v26[1];
    void *v25 = *v26;
    v25[1] = v27;
    uint64_t v28 = v50[7];
    uint64_t v29 = (char *)v16 + v28;
    uint64_t v30 = (char *)v17 + v28;
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
    swift_bridgeObjectRetain();
    v31(v29, v30, v22);
    uint64_t v32 = v50[8];
    uint64_t v33 = (char *)v16 + v32;
    uint64_t v34 = (char *)v17 + v32;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17 + v32, 1, v22))
    {
      uint64_t v35 = sub_10017DF08(&qword_100E749B0);
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      v31(v33, v34, v22);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v22);
    }
    uint64_t v4 = v47;
    *((unsigned char *)v16 + v50[9]) = *((unsigned char *)v17 + v50[9]);
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = v49;
  }
  else
  {
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  uint64_t v36 = *(int *)(v14 + 24);
  uint64_t v37 = (char *)v9 + v36;
  uint64_t v38 = (char *)v10 + v36;
  uint64_t v39 = type metadata accessor for DetailComponentAction();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
  {
    uint64_t v40 = sub_10017DF08(&qword_100E73810);
    memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    uint64_t v41 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v37, v38, v41);
    uint64_t v42 = sub_10017DF08(&qword_100E66478);
    v37[*(int *)(v42 + 48)] = v38[*(int *)(v42 + 48)];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
  }
  uint64_t v43 = a3[6];
  long long v44 = *(_OWORD *)(v4 + v43 + 24);
  *(_OWORD *)(a1 + v43 + 24) = v44;
  (**(void (***)(void))(v44 - 8))();
  uint64_t v45 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(v4 + a3[7]);
  *(void *)(a1 + v45) = *(void *)(v4 + v45);
  *(void *)(a1 + a3[9]) = *(void *)(v4 + a3[9]);
  return a1;
}

uint64_t sub_1008141F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10018F6D8(v8, v9);
  uint64_t v10 = a3[5];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = *(void *)(a1 + v10 + 8);
  uint64_t v14 = *(void *)(a2 + v10 + 8);
  if (v13)
  {
    if (v14)
    {
      *uint64_t v11 = *v12;
      v11[1] = v12[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v11[2] = v12[2];
      v11[3] = v12[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1004B70A8((uint64_t)v11);
      long long v15 = *((_OWORD *)v12 + 1);
      *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
      *((_OWORD *)v11 + 1) = v15;
    }
  }
  else if (v14)
  {
    *uint64_t v11 = *v12;
    v11[1] = v12[1];
    v11[2] = v12[2];
    v11[3] = v12[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v16 = *((_OWORD *)v12 + 1);
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    *((_OWORD *)v11 + 1) = v16;
  }
  uint64_t v17 = type metadata accessor for DetailComponentContainerViewModel();
  uint64_t v18 = v17;
  if (a1 != a2)
  {
    uint64_t v19 = *(int *)(v17 + 20);
    uint64_t v20 = (void *)((char *)v11 + v19);
    uint64_t v21 = (void *)((char *)v12 + v19);
    sub_1008165FC((uint64_t)v11 + v19, (void (*)(void))type metadata accessor for NewsArticleComponentViewModel);
    uint64_t v22 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v55 = v18;
      *uint64_t v20 = *v21;
      v20[1] = v21[1];
      uint64_t v56 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v23 = v56[5];
      __dst = (char *)v20 + v23;
      uint64_t v24 = (char *)v21 + v23;
      uint64_t v25 = type metadata accessor for URL();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25))
      {
        uint64_t v26 = sub_10017DF08(&qword_100E749B0);
        memcpy(__dst, v24, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(__dst, v24, v25);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v25);
      }
      uint64_t v27 = v56[6];
      uint64_t v28 = (void *)((char *)v20 + v27);
      uint64_t v29 = (void *)((char *)v21 + v27);
      *uint64_t v28 = *v29;
      v28[1] = v29[1];
      uint64_t v30 = v56[7];
      uint64_t v51 = (char *)v21 + v30;
      __dstb = (char *)v20 + v30;
      uint64_t v31 = v25;
      uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v33 = __dstb;
      __dsta = v32;
      v32(v33, v51, v31);
      uint64_t v34 = v31;
      uint64_t v35 = v56[8];
      uint64_t v36 = (char *)v20 + v35;
      uint64_t v37 = (char *)v21 + v35;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21 + v35, 1, v34))
      {
        uint64_t v38 = sub_10017DF08(&qword_100E749B0);
        memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        __dsta(v36, v37, v34);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v34);
      }
      *((unsigned char *)v20 + v56[9]) = *((unsigned char *)v21 + v56[9]);
      swift_storeEnumTagMultiPayload();
      uint64_t v18 = v55;
    }
    else
    {
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
  }
  uint64_t v39 = *(int *)(v18 + 24);
  uint64_t v40 = (char *)v11 + v39;
  uint64_t v41 = (char *)v12 + v39;
  uint64_t v42 = type metadata accessor for DetailComponentAction();
  int v43 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v42);
  int v44 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v42);
  if (!v43)
  {
    if (!v44)
    {
      uint64_t v49 = type metadata accessor for URL();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v49 - 8) + 24))(v40, v41, v49);
      uint64_t v50 = sub_10017DF08(&qword_100E66478);
      v40[*(int *)(v50 + 48)] = v41[*(int *)(v50 + 48)];
      goto LABEL_24;
    }
    sub_1008165FC((uint64_t)v40, (void (*)(void))type metadata accessor for DetailComponentAction);
    goto LABEL_23;
  }
  if (v44)
  {
LABEL_23:
    uint64_t v47 = sub_10017DF08(&qword_100E73810);
    memcpy(v40, v41, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_24;
  }
  uint64_t v45 = type metadata accessor for URL();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v45 - 8) + 16))(v40, v41, v45);
  uint64_t v46 = sub_10017DF08(&qword_100E66478);
  v40[*(int *)(v46 + 48)] = v41[*(int *)(v46 + 48)];
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v42);
LABEL_24:
  sub_1000C1E18((uint64_t *)(a1 + a3[6]), (uint64_t *)(a2 + a3[6]));
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_100814714(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3 = a3;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v6 = a3[5];
  char v7 = (_OWORD *)(a1 + v6);
  uint64_t v8 = a2 + v6;
  long long v9 = *(_OWORD *)(a2 + v6 + 16);
  *char v7 = *(_OWORD *)(a2 + v6);
  v7[1] = v9;
  uint64_t v10 = type metadata accessor for DetailComponentContainerViewModel();
  uint64_t v11 = *(int *)(v10 + 20);
  uint64_t v12 = (char *)v7 + v11;
  uint64_t v13 = (char *)(v8 + v11);
  uint64_t v14 = type metadata accessor for NewsArticleComponentViewModel(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v40 = v10;
    uint64_t v41 = v3;
    *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
    int v43 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
    uint64_t v15 = v43[5];
    long long v16 = &v12[v15];
    uint64_t v17 = &v13[v15];
    uint64_t v18 = type metadata accessor for URL();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
    {
      uint64_t v19 = sub_10017DF08(&qword_100E749B0);
      memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
      uint64_t v20 = *(void *)(v18 - 8);
    }
    else
    {
      uint64_t v20 = *(void *)(v18 - 8);
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v16, v17, v18);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
    }
    *(_OWORD *)&v12[v43[6]] = *(_OWORD *)&v13[v43[6]];
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
    v21(&v12[v43[7]], &v13[v43[7]], v18);
    uint64_t v22 = v43[8];
    __dst = &v12[v22];
    uint64_t v23 = &v13[v22];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v13[v22], 1, v18))
    {
      uint64_t v24 = sub_10017DF08(&qword_100E749B0);
      memcpy(__dst, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      v21(__dst, v23, v18);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v18);
    }
    uint64_t v10 = v40;
    uint64_t v3 = v41;
    v12[v43[9]] = v13[v43[9]];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  uint64_t v25 = *(int *)(v10 + 24);
  uint64_t v26 = (char *)v7 + v25;
  uint64_t v27 = (const void *)(v8 + v25);
  uint64_t v28 = type metadata accessor for DetailComponentAction();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28))
  {
    uint64_t v29 = sub_10017DF08(&qword_100E73810);
    memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    uint64_t v30 = type metadata accessor for URL();
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v30 - 8) + 32))(v26, v27, v30);
    uint64_t v31 = sub_10017DF08(&qword_100E66478);
    v26[*(int *)(v31 + 48)] = *((unsigned char *)v27 + *(int *)(v31 + 48));
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
  }
  uint64_t v32 = v3[6];
  uint64_t v33 = v3[7];
  uint64_t v34 = a1 + v32;
  uint64_t v35 = (long long *)(a2 + v32);
  long long v36 = *v35;
  long long v37 = v35[1];
  *(void *)(v34 + 32) = *((void *)v35 + 4);
  *(_OWORD *)uint64_t v34 = v36;
  *(_OWORD *)(v34 + 16) = v37;
  *(void *)(a1 + v33) = *(void *)(a2 + v33);
  uint64_t v38 = v3[9];
  *(void *)(a1 + v3[8]) = *(void *)(a2 + v3[8]);
  *(void *)(a1 + v38) = *(void *)(a2 + v38);
  return a1;
}

uint64_t sub_100814A9C(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10018F6D8(v8, v9);
  uint64_t v10 = a3[5];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (uint64_t *)((char *)a2 + v10);
  if (*(void *)(a1 + v10 + 8))
  {
    uint64_t v13 = v12[1];
    if (v13)
    {
      *uint64_t v11 = *v12;
      v11[1] = v13;
      swift_bridgeObjectRelease();
      uint64_t v14 = v12[3];
      v11[2] = v12[2];
      v11[3] = v14;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1004B70A8((uint64_t)v11);
  }
  long long v15 = *((_OWORD *)v12 + 1);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *((_OWORD *)v11 + 1) = v15;
LABEL_6:
  uint64_t v16 = type metadata accessor for DetailComponentContainerViewModel();
  uint64_t v17 = v16;
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v18 = *(int *)(v16 + 20);
    uint64_t v19 = (char *)v11 + v18;
    uint64_t v20 = (char *)v12 + v18;
    sub_1008165FC((uint64_t)v11 + v18, (void (*)(void))type metadata accessor for NewsArticleComponentViewModel);
    uint64_t v21 = type metadata accessor for NewsArticleComponentViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v50 = v17;
      uint64_t v51 = a3;
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      uint64_t v54 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
      uint64_t v22 = v54[5];
      uint64_t v23 = &v19[v22];
      uint64_t v24 = &v20[v22];
      uint64_t v25 = type metadata accessor for URL();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25))
      {
        uint64_t v26 = sub_10017DF08(&qword_100E749B0);
        memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
        uint64_t v27 = *(void *)(v25 - 8);
      }
      else
      {
        uint64_t v28 = v23;
        __dsta = v23;
        uint64_t v27 = *(void *)(v25 - 8);
        (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v28, v24, v25);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v25);
      }
      *(_OWORD *)&v19[v54[6]] = *(_OWORD *)&v20[v54[6]];
      uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
      v29(&v19[v54[7]], &v20[v54[7]], v25);
      uint64_t v30 = v54[8];
      __dst = &v19[v30];
      uint64_t v31 = &v20[v30];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v20[v30], 1, v25))
      {
        uint64_t v32 = sub_10017DF08(&qword_100E749B0);
        memcpy(__dst, v31, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        v29(__dst, v31, v25);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v25);
      }
      uint64_t v17 = v50;
      a3 = v51;
      v19[v54[9]] = v20[v54[9]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
  }
  uint64_t v33 = *(int *)(v17 + 24);
  uint64_t v34 = (char *)v11 + v33;
  uint64_t v35 = (char *)v12 + v33;
  uint64_t v36 = type metadata accessor for DetailComponentAction();
  int v37 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v36);
  int v38 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v36);
  if (!v37)
  {
    if (!v38)
    {
      uint64_t v48 = type metadata accessor for URL();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v48 - 8) + 40))(v34, v35, v48);
      uint64_t v49 = sub_10017DF08(&qword_100E66478);
      v34[*(int *)(v49 + 48)] = v35[*(int *)(v49 + 48)];
      goto LABEL_22;
    }
    sub_1008165FC((uint64_t)v34, (void (*)(void))type metadata accessor for DetailComponentAction);
    goto LABEL_21;
  }
  if (v38)
  {
LABEL_21:
    uint64_t v41 = sub_10017DF08(&qword_100E73810);
    memcpy(v34, v35, *(void *)(*(void *)(v41 - 8) + 64));
    goto LABEL_22;
  }
  uint64_t v39 = type metadata accessor for URL();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v39 - 8) + 32))(v34, v35, v39);
  uint64_t v40 = sub_10017DF08(&qword_100E66478);
  v34[*(int *)(v40 + 48)] = v35[*(int *)(v40 + 48)];
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v36);
LABEL_22:
  uint64_t v42 = a3[6];
  uint64_t v43 = a1 + v42;
  uint64_t v44 = (uint64_t)a2 + v42;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + v42);
  long long v45 = *(_OWORD *)(v44 + 16);
  *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
  *(_OWORD *)(v43 + 16) = v45;
  *(void *)(v43 + 32) = *(void *)(v44 + 32);
  uint64_t v46 = a3[8];
  *(void *)(a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  *(void *)(a1 + v46) = *(uint64_t *)((char *)a2 + v46);
  *(void *)(a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
  return a1;
}

uint64_t sub_100814F28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100814F3C);
}

uint64_t sub_100814F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for DetailComponentContainerViewModel();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  else
  {
    unint64_t v11 = *(void *)(a1 + *(int *)(a3 + 24) + 24);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_100814FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100814FE4);
}

void sub_100814FE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for DetailComponentContainerViewModel();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 24) = (a2 - 1);
  }
}

uint64_t type metadata accessor for DetailComponentContainerView()
{
  uint64_t result = qword_100E98EA0;
  if (!qword_100E98EA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1008150BC()
{
  uint64_t result = type metadata accessor for DetailComponentContainerViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100815170()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10081518C@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t (*a8)(uint64_t)@<X7>, uint64_t a9@<X8>)
{
  uint64_t v31 = a7;
  uint64_t v32 = a3;
  uint64_t v29 = a6;
  uint64_t v30 = a2;
  uint64_t v34 = a5;
  int v33 = a4;
  uint64_t v12 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v28 - v16;
  *(void *)a9 = swift_getKeyPath();
  *(unsigned char *)(a9 + 8) = 0;
  uint64_t v18 = (int *)sub_10017DF08(&qword_100E98EE8);
  uint64_t v19 = a9 + v18[13];
  char v35 = 0;
  State.init(wrappedValue:)();
  uint64_t v20 = v37;
  *(unsigned char *)uint64_t v19 = v36;
  *(void *)(v19 + 8) = v20;
  uint64_t v21 = type metadata accessor for Date();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 1, 1, v21);
  sub_10006DF38((uint64_t)v17, (uint64_t)v14, (uint64_t *)&unk_100E73CA0);
  State.init(wrappedValue:)();
  uint64_t v22 = sub_1001781AC((uint64_t)v17, (uint64_t *)&unk_100E73CA0);
  uint64_t result = a8(v22);
  uint64_t v24 = (void *)(a9 + v18[11]);
  uint64_t v25 = v31;
  *uint64_t v24 = v29;
  v24[1] = v25;
  *(unsigned char *)(a9 + 9) = a1;
  uint64_t v26 = a9 + v18[12];
  uint64_t v27 = v32;
  *(void *)uint64_t v26 = v30;
  *(void *)(v26 + 8) = v27;
  *(unsigned char *)(v26 + 16) = v33 & 1;
  *(void *)(v26 + 24) = v34;
  return result;
}

uint64_t sub_100815358@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DetailComponentContainerView();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v20 = sub_1004B7B44();
  uint64_t v21 = v7;
  sub_10014A85C();
  uint64_t v8 = Text.init<A>(_:)();
  uint64_t v10 = v9;
  char v12 = v11;
  uint64_t v14 = v13;
  sub_1008165A8(v2, (uint64_t)&v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], (void (*)(void))type metadata accessor for DetailComponentContainerView);
  unint64_t v15 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v16 = swift_allocObject();
  sub_100816654((uint64_t)&v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], v16 + v15, (void (*)(void))type metadata accessor for DetailComponentContainerView);
  uint64_t v19 = v2;
  return sub_10081518C(0, v8, v10, v12 & 1, v14, (uint64_t)sub_100816500, v16, (uint64_t (*)(uint64_t))sub_100816570, a1);
}

uint64_t sub_100815508(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10017DF08(&qword_100E73810);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DetailComponentAction();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DetailComponentContainerView();
  uint64_t v10 = a2 + *(int *)(v9 + 20);
  uint64_t v11 = type metadata accessor for DetailComponentContainerViewModel();
  sub_10006DF38(v10 + *(int *)(v11 + 24), (uint64_t)v5, &qword_100E73810);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v6) == 1) {
    return sub_1001781AC((uint64_t)v5, &qword_100E73810);
  }
  sub_100816654((uint64_t)v5, (uint64_t)v8, (void (*)(void))type metadata accessor for DetailComponentAction);
  uint64_t v13 = (void *)(a2 + *(int *)(v9 + 24));
  uint64_t v14 = v13[3];
  uint64_t v15 = v13[4];
  sub_1001B1E64(v13, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 8))(v8, v14, v15);
  return sub_1008165FC((uint64_t)v8, (void (*)(void))type metadata accessor for DetailComponentAction);
}

uint64_t sub_1008156AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = static HorizontalAlignment.leading.getter();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  uint64_t v4 = sub_10017DF08(&qword_100E98EF0);
  return sub_1008156F8(a1, a2 + *(int *)(v4 + 44));
}

uint64_t sub_1008156F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for NewsArticleComponentViewModel(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v121 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DetailComponentViewModel();
  __chkstk_darwin(v7 - 8);
  uint64_t v132 = (uint64_t)&v121 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = type metadata accessor for NewsArticleComponentView();
  __chkstk_darwin(v133);
  uint64_t v10 = (char *)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = sub_10017DF08(&qword_100E98EF8);
  __chkstk_darwin(v135);
  uint64_t v138 = (char *)&v121 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = sub_10017DF08(&qword_100E98F00);
  __chkstk_darwin(v137);
  uint64_t v140 = (uint64_t)&v121 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v136 = (uint64_t)&v121 - v14;
  __chkstk_darwin(v15);
  uint64_t v139 = (uint64_t)&v121 - v16;
  uint64_t v17 = type metadata accessor for DetailComponentHeaderView();
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v121 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_10017DF08(&qword_100E98F08);
  __chkstk_darwin(v123);
  uint64_t v21 = (char *)&v121 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_10017DF08(&qword_100E98F10);
  __chkstk_darwin(v124);
  uint64_t v130 = (uint64_t)&v121 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_10017DF08(&qword_100E98F18);
  __chkstk_darwin(v125);
  uint64_t v129 = (uint64_t)&v121 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_10017DF08(&qword_100E98F20);
  __chkstk_darwin(v126);
  uint64_t v131 = (uint64_t)&v121 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_10017DF08(&qword_100E98F28);
  __chkstk_darwin(v141);
  uint64_t v128 = (uint64_t)&v121 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v127 = (uint64_t)&v121 - v27;
  uint64_t v28 = sub_10017DF08(&qword_100E98F30);
  __chkstk_darwin(v28 - 8);
  uint64_t v134 = (uint64_t)&v121 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v142 = (uint64_t)&v121 - v31;
  uint64_t v143 = type metadata accessor for DetailComponentContainerView();
  uint64_t v32 = a1;
  int v33 = (uint64_t *)(a1 + *(int *)(v143 + 20));
  uint64_t v34 = v33[1];
  if (v34)
  {
    uint64_t v121 = v6;
    uint64_t v122 = a2;
    uint64_t v35 = v33[2];
    uint64_t v36 = v33[3];
    uint64_t v37 = *v33;
    *((void *)v19 + 4) = swift_getKeyPath();
    v19[40] = 0;
    *((void *)v19 + 6) = swift_getKeyPath();
    v19[56] = 0;
    *((void *)v19 + 8) = swift_getKeyPath();
    v19[72] = 0;
    int v38 = (uint64_t *)&v19[*(int *)(v17 + 32)];
    uint64_t *v38 = swift_getKeyPath();
    sub_10017DF08(&qword_100E66E50);
    swift_storeEnumTagMultiPayload();
    *(void *)uint64_t v19 = v37;
    *((void *)v19 + 1) = v34;
    *((void *)v19 + 2) = v35;
    *((void *)v19 + 3) = v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LOBYTE(v36) = static Edge.Set.leading.getter();
    char v39 = static Edge.Set.trailing.getter();
    char v40 = Edge.Set.init(rawValue:)();
    Edge.Set.init(rawValue:)();
    if (Edge.Set.init(rawValue:)() != v36) {
      char v40 = Edge.Set.init(rawValue:)();
    }
    Edge.Set.init(rawValue:)();
    char v41 = Edge.Set.init(rawValue:)();
    uint64_t v42 = v141;
    if (v41 != v39) {
      char v40 = Edge.Set.init(rawValue:)();
    }
    uint64_t v43 = v32;
    EdgeInsets.init(_all:)();
    uint64_t v45 = v44;
    uint64_t v47 = v46;
    uint64_t v49 = v48;
    uint64_t v51 = v50;
    sub_1008165A8((uint64_t)v19, (uint64_t)v21, (void (*)(void))type metadata accessor for DetailComponentHeaderView);
    char v52 = &v21[*(int *)(v123 + 36)];
    *char v52 = v40;
    *((void *)v52 + 1) = v45;
    *((void *)v52 + 2) = v47;
    *((void *)v52 + 3) = v49;
    *((void *)v52 + 4) = v51;
    v52[40] = 0;
    sub_1008165FC((uint64_t)v19, (void (*)(void))type metadata accessor for DetailComponentHeaderView);
    char v53 = static Edge.Set.top.getter();
    if (qword_100E62230 != -1) {
      swift_once();
    }
    EdgeInsets.init(_all:)();
    uint64_t v55 = v54;
    uint64_t v57 = v56;
    uint64_t v59 = v58;
    uint64_t v61 = v60;
    uint64_t v62 = v130;
    sub_10006DF38((uint64_t)v21, v130, &qword_100E98F08);
    uint64_t v63 = v62 + *(int *)(v124 + 36);
    *(unsigned char *)uint64_t v63 = v53;
    *(void *)(v63 + 8) = v55;
    *(void *)(v63 + 16) = v57;
    *(void *)(v63 + 24) = v59;
    *(void *)(v63 + 32) = v61;
    *(unsigned char *)(v63 + 40) = 0;
    sub_1001781AC((uint64_t)v21, &qword_100E98F08);
    char v64 = static Edge.Set.bottom.getter();
    if (qword_100E62238 != -1) {
      swift_once();
    }
    EdgeInsets.init(_all:)();
    uint64_t v66 = v65;
    uint64_t v68 = v67;
    uint64_t v70 = v69;
    uint64_t v72 = v71;
    uint64_t v73 = v129;
    sub_10006DF38(v62, v129, &qword_100E98F10);
    uint64_t v74 = v73 + *(int *)(v125 + 36);
    *(unsigned char *)uint64_t v74 = v64;
    *(void *)(v74 + 8) = v66;
    *(void *)(v74 + 16) = v68;
    *(void *)(v74 + 24) = v70;
    *(void *)(v74 + 32) = v72;
    *(unsigned char *)(v74 + 40) = 0;
    sub_1001781AC(v62, &qword_100E98F10);
    uint64_t v75 = v131;
    sub_10006DF38(v73, v131, &qword_100E98F18);
    *(unsigned char *)(v75 + *(int *)(v126 + 36)) = 1;
    sub_1001781AC(v73, &qword_100E98F18);
    uint64_t v76 = static Alignment.center.getter();
    uint64_t v78 = v77;
    uint64_t v79 = *(void *)(v43 + *(int *)(v143 + 28));
    uint64_t v80 = v128;
    sub_10006DF38(v75, v128, &qword_100E98F20);
    uint64_t v81 = v80 + *(int *)(v42 + 36);
    *(void *)uint64_t v81 = v79;
    *(void *)(v81 + 8) = 3;
    *(_WORD *)(v81 + 16) = 256;
    *(void *)(v81 + 24) = v76;
    *(void *)(v81 + 32) = v78;
    sub_1001781AC(v75, &qword_100E98F20);
    uint64_t v82 = v127;
    sub_10024D364(v80, v127, &qword_100E98F28);
    uint64_t v83 = v142;
    sub_10024D364(v82, v142, &qword_100E98F28);
    uint64_t v84 = 0;
    uint64_t v6 = v121;
    a2 = v122;
  }
  else
  {
    uint64_t v84 = 1;
    uint64_t v83 = v142;
    uint64_t v42 = v141;
  }
  _s7Weather24LocationCompositionStateOwst_0(v83, v84, 1, v42);
  uint64_t v85 = type metadata accessor for DetailComponentContainerViewModel();
  uint64_t v86 = v132;
  sub_1008165A8((uint64_t)v33 + *(int *)(v85 + 20), v132, (void (*)(void))type metadata accessor for DetailComponentViewModel);
  sub_100816654(v86, (uint64_t)v6, (void (*)(void))type metadata accessor for NewsArticleComponentViewModel);
  *(void *)uint64_t v10 = swift_getKeyPath();
  v10[8] = 0;
  *((void *)v10 + 2) = swift_getKeyPath();
  v10[24] = 0;
  uint64_t v87 = v133;
  int v88 = (uint64_t *)&v10[*(int *)(v133 + 24)];
  *int v88 = swift_getKeyPath();
  sub_10017DF08(&qword_100E63BC8);
  swift_storeEnumTagMultiPayload();
  sub_100816654((uint64_t)v6, (uint64_t)&v10[*(int *)(v87 + 28)], (void (*)(void))type metadata accessor for NewsArticleComponentViewModel);
  v10[*(int *)(v87 + 32)] = 0;
  unsigned __int8 v89 = static Edge.Set.leading.getter();
  char v90 = static Edge.Set.trailing.getter();
  char v91 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v89) {
    char v91 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  char v92 = Edge.Set.init(rawValue:)();
  uint64_t v93 = (uint64_t)v138;
  if (v92 != v90) {
    char v91 = Edge.Set.init(rawValue:)();
  }
  EdgeInsets.init(_all:)();
  uint64_t v95 = v94;
  uint64_t v97 = v96;
  uint64_t v99 = v98;
  uint64_t v101 = v100;
  sub_1008165A8((uint64_t)v10, v93, (void (*)(void))type metadata accessor for NewsArticleComponentView);
  uint64_t v102 = v93 + *(int *)(v135 + 36);
  *(unsigned char *)uint64_t v102 = v91;
  *(void *)(v102 + 8) = v95;
  *(void *)(v102 + 16) = v97;
  *(void *)(v102 + 24) = v99;
  *(void *)(v102 + 32) = v101;
  *(unsigned char *)(v102 + 40) = 0;
  sub_1008165FC((uint64_t)v10, (void (*)(void))type metadata accessor for NewsArticleComponentView);
  unsigned __int8 v103 = static Edge.Set.bottom.getter();
  char v104 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v103) {
    char v104 = Edge.Set.init(rawValue:)();
  }
  EdgeInsets.init(_all:)();
  uint64_t v106 = v105;
  uint64_t v108 = v107;
  uint64_t v110 = v109;
  uint64_t v112 = v111;
  uint64_t v113 = v136;
  sub_10006DF38(v93, v136, &qword_100E98EF8);
  uint64_t v114 = v113 + *(int *)(v137 + 36);
  *(unsigned char *)uint64_t v114 = v104;
  *(void *)(v114 + 8) = v106;
  *(void *)(v114 + 16) = v108;
  *(void *)(v114 + 24) = v110;
  *(void *)(v114 + 32) = v112;
  *(unsigned char *)(v114 + 40) = 0;
  sub_1001781AC(v93, &qword_100E98EF8);
  uint64_t v115 = v113;
  uint64_t v116 = v139;
  sub_10024D364(v115, v139, &qword_100E98F00);
  uint64_t v117 = v134;
  sub_10006DF38(v83, v134, &qword_100E98F30);
  uint64_t v118 = v140;
  sub_10006DF38(v116, v140, &qword_100E98F00);
  sub_10006DF38(v117, a2, &qword_100E98F30);
  uint64_t v119 = sub_10017DF08(&qword_100E98F38);
  sub_10006DF38(v118, a2 + *(int *)(v119 + 48), &qword_100E98F00);
  sub_1001781AC(v116, &qword_100E98F00);
  sub_1001781AC(v83, &qword_100E98F30);
  sub_1001781AC(v118, &qword_100E98F00);
  return sub_1001781AC(v117, &qword_100E98F30);
}

uint64_t sub_10081628C()
{
  uint64_t v1 = type metadata accessor for DetailComponentContainerView();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  sub_10018F6D8(*(void *)v2, *(unsigned char *)(v2 + 8));
  uint64_t v3 = v2 + *(int *)(v1 + 20);
  if (*(void *)(v3 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = type metadata accessor for DetailComponentContainerViewModel();
  uint64_t v5 = v3 + *(int *)(v4 + 20);
  type metadata accessor for NewsArticleComponentViewModel(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
    uint64_t v7 = v5 + v6[5];
    uint64_t v8 = type metadata accessor for URL();
    if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    }
    swift_bridgeObjectRelease();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    v9(v5 + v6[7], v8);
    uint64_t v10 = v5 + v6[8];
    if (!_s7Weather24LocationCompositionStateOwet_0(v10, 1, v8)) {
      v9(v10, v8);
    }
  }
  uint64_t v11 = v3 + *(int *)(v4 + 24);
  uint64_t v12 = type metadata accessor for DetailComponentAction();
  if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12))
  {
    type metadata accessor for URL();
    sub_100162E4C();
    (*(void (**)(uint64_t))(v13 + 8))(v11);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v2 + *(int *)(v1 + 24));

  return swift_deallocObject();
}

uint64_t sub_100816500(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for DetailComponentContainerView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100815508(a1, v4);
}

uint64_t sub_100816570@<X0>(uint64_t a1@<X8>)
{
  return sub_1008156AC(*(void *)(v1 + 16), a1);
}

uint64_t sub_1008165A8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_1008165FC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100816654(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

unint64_t sub_1008166AC()
{
  unint64_t result = qword_100E98F40;
  if (!qword_100E98F40)
  {
    sub_10018C6DC(&qword_100E98EE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E98F40);
  }
  return result;
}

uint64_t *sub_100816700(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a2 + 1;
    unint64_t v8 = a2[2];
    if (v8 >= 2)
    {
      v4[1] = *v7;
      _OWORD v4[2] = v8;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v4 + 1) = *(_OWORD *)v7;
    }
    uint64_t v10 = *(int *)(a3 + 24);
    uint64_t v11 = (char *)v4 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
    {
      uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
    }
  }
  return v4;
}

uint64_t sub_10081685C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = (_OWORD *)(a1 + 8);
  uint64_t v7 = (_OWORD *)(a2 + 8);
  unint64_t v8 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16) < 2uLL)
  {
    if (v8 >= 2)
    {
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v8 < 2)
  {
    sub_10027B4D4(a1 + 8);
LABEL_6:
    *uint64_t v6 = *v7;
    goto LABEL_8;
  }
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = type metadata accessor for Date();
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v12);
  int v14 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12);
  if (!v13)
  {
    uint64_t v15 = *(void *)(v12 - 8);
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v15 + 24))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v10, v12);
    goto LABEL_13;
  }
  if (v14)
  {
LABEL_13:
    uint64_t v16 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
  return a1;
}

uint64_t sub_100816A34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 24);
  int v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7))
  {
    uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

uint64_t sub_100816B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483645)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 2;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    uint64_t v10 = a1 + *(int *)(a3 + 24);
    return _s7Weather24LocationCompositionStateOwet_0(v10, a2, v9);
  }
}

uint64_t sub_100816BB0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483645)
  {
    *(void *)(result + 16) = (a2 + 1);
  }
  else
  {
    uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    uint64_t v8 = v5 + *(int *)(a4 + 24);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_100816C38(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x496E776F6E6B6E75 && a2 == 0xEC00000065757373;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x63656E6E6F436F6ELL && a2 == 0xEC0000006E6F6974;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x656E616C70726961 && a2 == 0xEC00000065646F4DLL;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6E6E6F43776F6C73 && a2 == 0xEE006E6F69746365;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 0x6E6F697461636F6CLL && a2 == 0xEF6E776F6E6B6E55;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0x7461636F4C646C6FLL && a2 == 0xEB000000006E6F69)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v11) {
              return 5;
            }
            else {
              return 6;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_100816F50(char a1)
{
  uint64_t result = 0x496E776F6E6B6E75;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x63656E6E6F436F6ELL;
      break;
    case 2:
      uint64_t result = 0x656E616C70726961;
      break;
    case 3:
      uint64_t result = 0x6E6E6F43776F6C73;
      break;
    case 4:
      uint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 5:
      uint64_t result = 0x7461636F4C646C6FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100817054(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1953720684 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 7364973 && a2 == 0xE300000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_100817184(char a1)
{
  if (!a1) {
    return 1953720684;
  }
  if (a1 == 1) {
    return 0x6E6F697461636F6CLL;
  }
  return 7364973;
}

uint64_t sub_1008171CC(uint64_t a1)
{
  unint64_t v2 = sub_1008199A0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100817208(uint64_t a1)
{
  unint64_t v2 = sub_1008199A0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100817244()
{
  return sub_100816F50(*v0);
}

uint64_t sub_10081724C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100816C38(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100817274(uint64_t a1)
{
  unint64_t v2 = sub_100819870();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008172B0(uint64_t a1)
{
  unint64_t v2 = sub_100819870();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1008172EC(uint64_t a1)
{
  unint64_t v2 = sub_100819908();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100817328(uint64_t a1)
{
  unint64_t v2 = sub_100819908();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100817364(uint64_t a1)
{
  unint64_t v2 = sub_1008199EC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008173A0(uint64_t a1)
{
  unint64_t v2 = sub_1008199EC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1008173DC(uint64_t a1)
{
  unint64_t v2 = sub_1008198BC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100817418(uint64_t a1)
{
  unint64_t v2 = sub_1008198BC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100817454(uint64_t a1)
{
  unint64_t v2 = sub_100819954();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100817490(uint64_t a1)
{
  unint64_t v2 = sub_100819954();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1008174CC(uint64_t a1)
{
  unint64_t v2 = sub_100819A38();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100817508(uint64_t a1)
{
  unint64_t v2 = sub_100819A38();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100817544()
{
  return sub_100817184(*v0);
}

uint64_t sub_10081754C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100817054(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100817574(uint64_t a1)
{
  unint64_t v2 = sub_100819A84();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008175B0(uint64_t a1)
{
  unint64_t v2 = sub_100819A84();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1008175EC(uint64_t a1)
{
  unint64_t v2 = sub_100819B68();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100817628(uint64_t a1)
{
  unint64_t v2 = sub_100819B68();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100817664(uint64_t a1)
{
  unint64_t v2 = sub_100819B1C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1008176A0(uint64_t a1)
{
  unint64_t v2 = sub_100819B1C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1008176DC(uint64_t a1)
{
  unint64_t v2 = sub_100819AD0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100817718(uint64_t a1)
{
  unint64_t v2 = sub_100819AD0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100817754(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6574617473 && a2 == 0xE500000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6E656D6563616C70 && a2 == 0xE900000000000074;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x616470557473616CLL && a2 == 0xEB00000000646574)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1008178C0(char a1)
{
  if (!a1) {
    return 0x6574617473;
  }
  if (a1 == 1) {
    return 0x6E656D6563616C70;
  }
  return 0x616470557473616CLL;
}

uint64_t sub_100817920()
{
  return sub_1008178C0(*v0);
}

uint64_t sub_100817928@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100817754(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100817950(uint64_t a1)
{
  unint64_t v2 = sub_100819BB4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10081798C(uint64_t a1)
{
  unint64_t v2 = sub_100819BB4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1008179C8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1008BD63C();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
  }
  return result;
}

uint64_t sub_1008179F4(uint64_t a1)
{
  return sub_1008BD744(a1, *v1, v1[1]);
}

void sub_100817A10()
{
}

uint64_t sub_100817A28()
{
  return sub_1008BD8F4();
}

void sub_100817A40()
{
  sub_10016314C();
  char v43 = v2;
  uint64_t v4 = v3;
  sub_10017DF08(&qword_100E99060);
  sub_100179C0C();
  uint64_t v41 = v6;
  uint64_t v42 = v5;
  __chkstk_darwin(v5);
  sub_10017B2B0(v7, v26);
  sub_10017DF08(&qword_100E99068);
  sub_100179C0C();
  uint64_t v38 = v9;
  uint64_t v39 = v8;
  __chkstk_darwin(v8);
  sub_100185A80(v10, v27);
  sub_10017DF08(&qword_100E99070);
  sub_100179C0C();
  uint64_t v35 = v12;
  uint64_t v36 = v11;
  __chkstk_darwin(v11);
  sub_100109314();
  uint64_t v34 = v13;
  sub_10017DF08(&qword_100E99078);
  sub_100179C0C();
  uint64_t v32 = v15;
  uint64_t v33 = v14;
  __chkstk_darwin(v14);
  sub_100109314();
  uint64_t v31 = v16;
  sub_10017DF08(&qword_100E99080);
  sub_100179C0C();
  uint64_t v29 = v18;
  uint64_t v30 = v17;
  __chkstk_darwin(v17);
  sub_100162E88();
  uint64_t v19 = sub_10017DF08(&qword_100E99088);
  sub_100179C0C();
  uint64_t v28 = v20;
  __chkstk_darwin(v21);
  sub_100109370();
  sub_10017DF08(&qword_100E99090);
  sub_100179C0C();
  __chkstk_darwin(v22);
  sub_100125FF8();
  sub_1001B1E64(v4, v4[3]);
  sub_100819870();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  switch(v43)
  {
    case 1:
      sub_1008199EC();
      sub_10017D584();
      uint64_t v24 = v29;
      uint64_t v23 = v30;
      goto LABEL_8;
    case 2:
      sub_1008199A0();
      uint64_t v0 = v31;
      sub_10017D584();
      uint64_t v24 = v32;
      uint64_t v23 = v33;
      goto LABEL_8;
    case 3:
      sub_100819954();
      uint64_t v0 = v34;
      sub_10017D584();
      uint64_t v24 = v35;
      uint64_t v23 = v36;
      goto LABEL_8;
    case 4:
      sub_100819908();
      uint64_t v0 = v37;
      sub_10017D584();
      uint64_t v24 = v38;
      uint64_t v23 = v39;
      goto LABEL_8;
    case 5:
      sub_1008198BC();
      uint64_t v0 = v40;
      sub_10017D584();
      uint64_t v24 = v41;
      uint64_t v23 = v42;
LABEL_8:
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v0, v23);
      break;
    default:
      sub_100819A38();
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v1, v19);
      break;
  }
  sub_100164F40();
  v25();
  sub_100163164();
}

void sub_100817E0C()
{
  sub_10016314C();
  uint64_t v3 = v2;
  sub_10017DF08(&qword_100E98FF0);
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_100109314();
  sub_10017DF08(&qword_100E98FF8);
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_10017EF38(v6, v34);
  sub_10017DF08(&qword_100E99000);
  sub_100179C0C();
  __chkstk_darwin(v7);
  sub_10017B2B0(v8, v35);
  sub_10017DF08(&qword_100E99008);
  sub_100179C0C();
  __chkstk_darwin(v9);
  sub_100109314();
  sub_10017DF08(&qword_100E99010);
  sub_100179C0C();
  __chkstk_darwin(v10);
  sub_10016279C();
  sub_10017DF08(&qword_100E99018);
  sub_100179C0C();
  __chkstk_darwin(v11);
  sub_100109370();
  uint64_t v12 = sub_10017DF08(&qword_100E99020);
  sub_100179C0C();
  uint64_t v14 = v13;
  __chkstk_darwin(v15);
  sub_10011C760();
  uint64_t v36 = v3;
  sub_1001B1E64(v3, v3[3]);
  sub_100819870();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0) {
    goto LABEL_8;
  }
  uint64_t v37 = v14;
  uint64_t v16 = KeyedDecodingContainer.allKeys.getter();
  uint64_t v17 = *(void *)(v16 + 16);
  if (!v17)
  {
LABEL_7:
    type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v25 = v24;
    sub_10017DF08(&qword_100E67280);
    void *v25 = &type metadata for ContentStatusBanner.State;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    sub_100162880();
    (*(void (**)(void *))(v26 + 104))(v25);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v1, v12);
LABEL_8:
    uint64_t v27 = (uint64_t)v36;
    goto LABEL_9;
  }
  uint64_t v18 = v12;
  uint64_t v19 = *(unsigned __int8 *)(v16 + 32);
  sub_100723214(1, v17, v16, v16 + 32, 0, (2 * v17) | 1);
  uint64_t v21 = v20;
  unint64_t v23 = v22;
  swift_bridgeObjectRelease();
  if (v21 != v23 >> 1)
  {
    uint64_t v12 = v18;
    goto LABEL_7;
  }
  switch(v19)
  {
    case 1:
      sub_1008199EC();
      KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      goto LABEL_15;
    case 2:
      sub_1008199A0();
      sub_10019EEF4();
      goto LABEL_15;
    case 3:
      sub_100819954();
      sub_10019EEF4();
      goto LABEL_15;
    case 4:
      sub_100819908();
      sub_10019EEF4();
      goto LABEL_15;
    case 5:
      sub_1008198BC();
      sub_10019EEF4();
      sub_100162F0C();
      v31();
      swift_unknownObjectRelease();
      uint64_t v32 = sub_10017A69C();
      v33(v32);
      uint64_t v27 = (uint64_t)v36;
      break;
    default:
      sub_100819A38();
      sub_10019EEF4();
LABEL_15:
      sub_100162F0C();
      v28();
      swift_unknownObjectRelease();
      uint64_t v29 = sub_10017A69C();
      v30(v29);
      uint64_t v27 = (uint64_t)v36;
      break;
  }
LABEL_9:
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v27);
  sub_100163164();
}

void sub_10081840C()
{
  sub_10016314C();
  uint64_t v15 = v0;
  char v2 = v1;
  sub_10017DF08(&qword_100E990D8);
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_100185A80(v4, v14);
  sub_10017DF08(&qword_100E990E0);
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_100125FF8();
  sub_10017DF08(&qword_100E990E8);
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_10011C760();
  sub_10017DF08(&qword_100E990F0);
  sub_100179C0C();
  __chkstk_darwin(v7);
  sub_100109370();
  sub_1001B1E64(v2, v2[3]);
  sub_100819A84();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  if (v15)
  {
    if (v15 != 1)
    {
      sub_100819B1C();
      sub_1001A18B4();
      KeyedEncodingContainer.encode(_:forKey:)();
      sub_100162F0C();
      v11();
      uint64_t v12 = sub_10018AA9C();
      v13(v12);
      goto LABEL_7;
    }
    sub_100819AD0();
    sub_1001A18B4();
  }
  else
  {
    sub_100819B68();
    sub_1001A18B4();
  }
  sub_100162F0C();
  v8();
  uint64_t v9 = sub_10018AA9C();
  v10(v9);
LABEL_7:
  sub_100163164();
}

void sub_10081868C()
{
  sub_10016314C();
  uint64_t v3 = v2;
  sub_10017DF08(&qword_100E99098);
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_10017EF38(v5, v28);
  sub_10017DF08(&qword_100E990A0);
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_10012B938();
  sub_10017DF08(&qword_100E990A8);
  sub_100179C0C();
  __chkstk_darwin(v7);
  sub_100162F18();
  uint64_t v8 = sub_10017DF08(&qword_100E990B0);
  sub_100179C0C();
  uint64_t v29 = v9;
  __chkstk_darwin(v10);
  sub_100125FF8();
  sub_1001B1E64(v3, v3[3]);
  sub_100819A84();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0) {
    goto LABEL_10;
  }
  uint64_t v30 = (uint64_t)v3;
  uint64_t v11 = KeyedDecodingContainer.allKeys.getter();
  uint64_t v12 = *(void *)(v11 + 16);
  if (!v12
    || (int v13 = *(unsigned __int8 *)(v11 + 32),
        sub_100723214(1, v12, v11, v11 + 32, 0, (2 * v12) | 1),
        uint64_t v15 = v14,
        unint64_t v17 = v16,
        swift_bridgeObjectRelease(),
        v15 != v17 >> 1))
  {
    type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v19 = v18;
    sub_10017DF08(&qword_100E67280);
    void *v19 = &type metadata for ContentStatusBanner.Placement;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    sub_100162880();
    (*(void (**)(void *))(v20 + 104))(v19);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v1, v8);
    uint64_t v3 = (void *)v30;
LABEL_10:
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v3);
    goto LABEL_11;
  }
  if (v13)
  {
    if (v13 == 1)
    {
      sub_100819B1C();
      sub_1001A251C();
      KeyedDecodingContainer.decode(_:forKey:)();
      sub_100162F0C();
      v25();
      swift_unknownObjectRelease();
      uint64_t v26 = sub_1001A347C();
      v27(v26);
    }
    else
    {
      sub_100819AD0();
      sub_1001A251C();
      sub_100162F0C();
      v23();
      swift_unknownObjectRelease();
      sub_100162F0C();
      v24();
    }
  }
  else
  {
    sub_100819B68();
    sub_1001A251C();
    sub_100162F0C();
    v21();
    swift_unknownObjectRelease();
    sub_100162F0C();
    v22();
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v30);
LABEL_11:
  sub_100163164();
}

uint64_t sub_100818B44(void *a1)
{
  sub_10017DF08(&qword_100E99118);
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_10012B938();
  sub_1001B1E64(a1, a1[3]);
  sub_100819BB4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_100819C98();
  sub_1001A48A8();
  if (!v1)
  {
    sub_100819CE4();
    sub_1001A48A8();
    type metadata accessor for ContentStatusBanner();
    type metadata accessor for Date();
    sub_1001C72E0(&qword_100E63968, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  sub_100164F40();
  return v6(v4, v5);
}

void sub_100818CF0()
{
  sub_10016314C();
  uint64_t v3 = v2;
  v19[0] = v4;
  uint64_t v5 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_10011C760();
  sub_10017DF08(&qword_100E990F8);
  sub_100179C0C();
  v19[1] = v8;
  _OWORD v19[2] = v7;
  __chkstk_darwin(v7);
  sub_100162F18();
  uint64_t v9 = type metadata accessor for ContentStatusBanner();
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t)&v12[*(int *)(v13 + 32)];
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v20 = v14;
  _s7Weather24LocationCompositionStateOwst_0(v14, 1, 1, v15);
  sub_1001B1E64(v3, v3[3]);
  sub_100819BB4();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0)
  {
    uint64_t v16 = v20;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v3);
    sub_100178200(v16, (uint64_t *)&unk_100E73CA0);
  }
  else
  {
    sub_100819C00();
    sub_100184BAC();
    *uint64_t v12 = v21;
    sub_100819C4C();
    sub_100184BAC();
    *(_OWORD *)(v12 + 8) = v21;
    LOBYTE(v21) = 2;
    sub_1001C72E0(&qword_100E63948, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    uint64_t v17 = sub_10018A00C();
    v18(v17);
    sub_1001E75A0(v1, v20);
    sub_1000D37D4((uint64_t)v12, v19[0]);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v3);
    sub_1000D3838((uint64_t)v12);
  }
  sub_100163164();
}

uint64_t sub_100818FA4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (!a2) {
    return !a4;
  }
  if (a2 == 1) {
    return a4 == 1;
  }
  if (a4 < 2) {
    return 0;
  }
  if (a1 != a3 || a2 != a4) {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  return 1;
}

void sub_100818FF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a3)
  {
    Swift::UInt v3 = 0;
    goto LABEL_5;
  }
  if (a3 == 1)
  {
    Swift::UInt v3 = 2;
LABEL_5:
    Hasher._combine(_:)(v3);
    return;
  }
  Hasher._combine(_:)(1uLL);

  String.hash(into:)();
}

Swift::Int sub_100819070(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  if (a2)
  {
    if (a2 != 1)
    {
      Hasher._combine(_:)(1uLL);
      String.hash(into:)();
      return Hasher._finalize()();
    }
    Swift::UInt v3 = 2;
  }
  else
  {
    Swift::UInt v3 = 0;
  }
  Hasher._combine(_:)(v3);
  return Hasher._finalize()();
}

void sub_1008190F4()
{
  uint64_t v3 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_10011BFD8();
  uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_10016279C();
  Hasher._combine(_:)(*v0);
  unint64_t v9 = *((void *)v0 + 2);
  if (!v9)
  {
    Swift::UInt v10 = 0;
    goto LABEL_5;
  }
  if (v9 == 1)
  {
    Swift::UInt v10 = 2;
LABEL_5:
    Hasher._combine(_:)(v10);
    goto LABEL_7;
  }
  uint64_t v11 = *((void *)v0 + 1);
  Hasher._combine(_:)(1uLL);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  sub_1001EB5EC(v11, v9);
LABEL_7:
  uint64_t v12 = type metadata accessor for ContentStatusBanner();
  sub_1001C7278((uint64_t)&v0[*(int *)(v12 + 24)], v2);
  if (_s7Weather24LocationCompositionStateOwet_0(v2, 1, v3) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v1, v2, v3);
    Hasher._combine(_:)(1u);
    sub_1001C72E0((unint64_t *)&qword_100E63978, (void (*)(uint64_t))&type metadata accessor for Date);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v3);
  }
}

Swift::Int sub_1008192C8()
{
  return Hasher._finalize()();
}

void sub_100819308(unsigned char *a1@<X8>)
{
  sub_100817E0C();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_100819334()
{
}

void sub_100819350(void *a1@<X8>)
{
  sub_10081868C();
  if (!v1)
  {
    *a1 = v3;
    a1[1] = v4;
  }
}

void sub_10081937C()
{
}

void sub_100819398()
{
}

uint64_t sub_1008193B0(void *a1)
{
  return sub_100818B44(a1);
}

uint64_t sub_1008193C8(uint64_t *a1, uint64_t a2)
{
  return sub_100818FA4(*a1, a1[1], *(void *)a2, *(void *)(a2 + 8));
}

Swift::Int sub_1008193DC()
{
  return sub_100819070(*v0, v0[1]);
}

void sub_1008193E4(uint64_t a1)
{
  sub_100818FF0(a1, *v1, v1[1]);
}

Swift::Int sub_1008193EC()
{
  uint64_t v1 = *(void *)(v0 + 8);
  Hasher.init(_seed:)();
  if (v1)
  {
    if (v1 != 1)
    {
      Hasher._combine(_:)(1uLL);
      String.hash(into:)();
      return Hasher._finalize()();
    }
    Swift::UInt v2 = 2;
  }
  else
  {
    Swift::UInt v2 = 0;
  }
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

Swift::Int sub_100819470()
{
  return Hasher._finalize()();
}

uint64_t sub_1008194AC(char a1)
{
  uint64_t result = 0x206E776F6E6B6E55;
  switch(a1)
  {
    case 1:
      uint64_t v3 = 0x6E6F43206F4ELL;
      goto LABEL_4;
    case 2:
      uint64_t v3 = 0x616C70726941;
LABEL_4:
      uint64_t result = v3 & 0xFFFFFFFFFFFFLL | 0x656E000000000000;
      break;
    case 3:
      uint64_t result = 0x6E6F4320776F6C53;
      break;
    case 4:
      uint64_t result = 0xD000000000000010;
      break;
    case 5:
      uint64_t result = 0x61636F4C20646C4FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1008195B0()
{
  return sub_1008194AC(*v0);
}

uint64_t sub_1008195B8(uint64_t a1, uint64_t a2)
{
  if (!a2) {
    return 1953720652;
  }
  if (a2 == 1) {
    return 7364941;
  }
  String.append(_:)(*(Swift::String *)&a1);
  v3._uint64_t countAndFlagsBits = 41;
  v3._object = (void *)0xE100000000000000;
  String.append(_:)(v3);
  return 0x6E6F697461636F4CLL;
}

uint64_t sub_100819644()
{
  return sub_1008195B8(*v0, v0[1]);
}

uint64_t sub_10081964C()
{
  _StringGuts.grow(_:)(39);
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 8);
  unint64_t v2 = *(void *)(v0 + 16);
  sub_1000D54E0(v1, v2);
  v3._uint64_t countAndFlagsBits = sub_1008195B8(v1, v2);
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  sub_1001EB5EC(v1, v2);
  v4._uint64_t countAndFlagsBits = 0x3D6574617453202CLL;
  v4._object = (void *)0xE800000000000000;
  String.append(_:)(v4);
  v5._uint64_t countAndFlagsBits = sub_1008194AC(*(unsigned char *)v0);
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 0x55207473614C202CLL;
  v6._object = (void *)0xEF3D646574616470;
  String.append(_:)(v6);
  type metadata accessor for ContentStatusBanner();
  v7._uint64_t countAndFlagsBits = sub_100633140();
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  return 0x6E656D6563616C50;
}

uint64_t sub_100819788()
{
  return sub_1001C72E0(&qword_100E8EE60, (void (*)(uint64_t))type metadata accessor for ContentStatusBanner);
}

unint64_t sub_1008197D4()
{
  unint64_t result = qword_100E98FE0;
  if (!qword_100E98FE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E98FE0);
  }
  return result;
}

unint64_t sub_100819824()
{
  unint64_t result = qword_100E98FE8;
  if (!qword_100E98FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E98FE8);
  }
  return result;
}

unint64_t sub_100819870()
{
  unint64_t result = qword_100E99028;
  if (!qword_100E99028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99028);
  }
  return result;
}

unint64_t sub_1008198BC()
{
  unint64_t result = qword_100E99030;
  if (!qword_100E99030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99030);
  }
  return result;
}

unint64_t sub_100819908()
{
  unint64_t result = qword_100E99038;
  if (!qword_100E99038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99038);
  }
  return result;
}

unint64_t sub_100819954()
{
  unint64_t result = qword_100E99040;
  if (!qword_100E99040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99040);
  }
  return result;
}

unint64_t sub_1008199A0()
{
  unint64_t result = qword_100E99048;
  if (!qword_100E99048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99048);
  }
  return result;
}

unint64_t sub_1008199EC()
{
  unint64_t result = qword_100E99050;
  if (!qword_100E99050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99050);
  }
  return result;
}

unint64_t sub_100819A38()
{
  unint64_t result = qword_100E99058;
  if (!qword_100E99058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99058);
  }
  return result;
}

unint64_t sub_100819A84()
{
  unint64_t result = qword_100E990B8;
  if (!qword_100E990B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E990B8);
  }
  return result;
}

unint64_t sub_100819AD0()
{
  unint64_t result = qword_100E990C0;
  if (!qword_100E990C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E990C0);
  }
  return result;
}

unint64_t sub_100819B1C()
{
  unint64_t result = qword_100E990C8;
  if (!qword_100E990C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E990C8);
  }
  return result;
}

unint64_t sub_100819B68()
{
  unint64_t result = qword_100E990D0;
  if (!qword_100E990D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E990D0);
  }
  return result;
}

unint64_t sub_100819BB4()
{
  unint64_t result = qword_100E99100;
  if (!qword_100E99100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99100);
  }
  return result;
}

unint64_t sub_100819C00()
{
  unint64_t result = qword_100E99108;
  if (!qword_100E99108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99108);
  }
  return result;
}

unint64_t sub_100819C4C()
{
  unint64_t result = qword_100E99110;
  if (!qword_100E99110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99110);
  }
  return result;
}

unint64_t sub_100819C98()
{
  unint64_t result = qword_100E99120;
  if (!qword_100E99120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99120);
  }
  return result;
}

unint64_t sub_100819CE4()
{
  unint64_t result = qword_100E99128;
  if (!qword_100E99128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99128);
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentStatusBanner.CodingKeys()
{
  return &type metadata for ContentStatusBanner.CodingKeys;
}

unsigned char *_s7Weather19ContentStatusBannerV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100819E10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentStatusBanner.Placement.CodingKeys()
{
  return &type metadata for ContentStatusBanner.Placement.CodingKeys;
}

ValueMetadata *type metadata accessor for ContentStatusBanner.Placement.ListCodingKeys()
{
  return &type metadata for ContentStatusBanner.Placement.ListCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ContentStatusBanner.Placement.LocationCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100819EF4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentStatusBanner.Placement.LocationCodingKeys()
{
  return &type metadata for ContentStatusBanner.Placement.LocationCodingKeys;
}

ValueMetadata *type metadata accessor for ContentStatusBanner.Placement.MapCodingKeys()
{
  return &type metadata for ContentStatusBanner.Placement.MapCodingKeys;
}

ValueMetadata *type metadata accessor for ContentStatusBanner.State.CodingKeys()
{
  return &type metadata for ContentStatusBanner.State.CodingKeys;
}

ValueMetadata *type metadata accessor for ContentStatusBanner.State.UnknownIssueCodingKeys()
{
  return &type metadata for ContentStatusBanner.State.UnknownIssueCodingKeys;
}

ValueMetadata *type metadata accessor for ContentStatusBanner.State.NoConnectionCodingKeys()
{
  return &type metadata for ContentStatusBanner.State.NoConnectionCodingKeys;
}

ValueMetadata *type metadata accessor for ContentStatusBanner.State.AirplaneModeCodingKeys()
{
  return &type metadata for ContentStatusBanner.State.AirplaneModeCodingKeys;
}

ValueMetadata *type metadata accessor for ContentStatusBanner.State.SlowConnectionCodingKeys()
{
  return &type metadata for ContentStatusBanner.State.SlowConnectionCodingKeys;
}

ValueMetadata *type metadata accessor for ContentStatusBanner.State.LocationUnknownCodingKeys()
{
  return &type metadata for ContentStatusBanner.State.LocationUnknownCodingKeys;
}

ValueMetadata *type metadata accessor for ContentStatusBanner.State.OldLocationCodingKeys()
{
  return &type metadata for ContentStatusBanner.State.OldLocationCodingKeys;
}

unsigned char *_s7Weather19ContentStatusBannerV5StateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10081A07CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContentStatusBanner.State()
{
  return &type metadata for ContentStatusBanner.State;
}

unint64_t sub_10081A0B8()
{
  unint64_t result = qword_100E99130;
  if (!qword_100E99130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99130);
  }
  return result;
}

unint64_t sub_10081A108()
{
  unint64_t result = qword_100E99138;
  if (!qword_100E99138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99138);
  }
  return result;
}

unint64_t sub_10081A158()
{
  unint64_t result = qword_100E99140;
  if (!qword_100E99140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99140);
  }
  return result;
}

unint64_t sub_10081A1A8()
{
  unint64_t result = qword_100E99148;
  if (!qword_100E99148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99148);
  }
  return result;
}

unint64_t sub_10081A1F8()
{
  unint64_t result = qword_100E99150;
  if (!qword_100E99150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99150);
  }
  return result;
}

unint64_t sub_10081A248()
{
  unint64_t result = qword_100E99158;
  if (!qword_100E99158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99158);
  }
  return result;
}

unint64_t sub_10081A298()
{
  unint64_t result = qword_100E99160;
  if (!qword_100E99160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99160);
  }
  return result;
}

unint64_t sub_10081A2E8()
{
  unint64_t result = qword_100E99168;
  if (!qword_100E99168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99168);
  }
  return result;
}

unint64_t sub_10081A338()
{
  unint64_t result = qword_100E99170;
  if (!qword_100E99170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99170);
  }
  return result;
}

unint64_t sub_10081A388()
{
  unint64_t result = qword_100E99178;
  if (!qword_100E99178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99178);
  }
  return result;
}

unint64_t sub_10081A3D8()
{
  unint64_t result = qword_100E99180;
  if (!qword_100E99180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99180);
  }
  return result;
}

unint64_t sub_10081A428()
{
  unint64_t result = qword_100E99188;
  if (!qword_100E99188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99188);
  }
  return result;
}

unint64_t sub_10081A478()
{
  unint64_t result = qword_100E99190;
  if (!qword_100E99190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99190);
  }
  return result;
}

unint64_t sub_10081A4C8()
{
  unint64_t result = qword_100E99198;
  if (!qword_100E99198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99198);
  }
  return result;
}

unint64_t sub_10081A518()
{
  unint64_t result = qword_100E991A0;
  if (!qword_100E991A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E991A0);
  }
  return result;
}

unint64_t sub_10081A568()
{
  unint64_t result = qword_100E991A8;
  if (!qword_100E991A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E991A8);
  }
  return result;
}

unint64_t sub_10081A5B8()
{
  unint64_t result = qword_100E991B0;
  if (!qword_100E991B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E991B0);
  }
  return result;
}

unint64_t sub_10081A608()
{
  unint64_t result = qword_100E991B8;
  if (!qword_100E991B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E991B8);
  }
  return result;
}

unint64_t sub_10081A658()
{
  unint64_t result = qword_100E991C0;
  if (!qword_100E991C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E991C0);
  }
  return result;
}

unint64_t sub_10081A6A8()
{
  unint64_t result = qword_100E991C8;
  if (!qword_100E991C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E991C8);
  }
  return result;
}

unint64_t sub_10081A6F8()
{
  unint64_t result = qword_100E991D0;
  if (!qword_100E991D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E991D0);
  }
  return result;
}

unint64_t sub_10081A748()
{
  unint64_t result = qword_100E991D8;
  if (!qword_100E991D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E991D8);
  }
  return result;
}

unint64_t sub_10081A798()
{
  unint64_t result = qword_100E991E0;
  if (!qword_100E991E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E991E0);
  }
  return result;
}

unint64_t sub_10081A7E8()
{
  unint64_t result = qword_100E991E8;
  if (!qword_100E991E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E991E8);
  }
  return result;
}

unint64_t sub_10081A838()
{
  unint64_t result = qword_100E991F0;
  if (!qword_100E991F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E991F0);
  }
  return result;
}

unint64_t sub_10081A888()
{
  unint64_t result = qword_100E991F8;
  if (!qword_100E991F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E991F8);
  }
  return result;
}

unint64_t sub_10081A8D8()
{
  unint64_t result = qword_100E99200;
  if (!qword_100E99200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99200);
  }
  return result;
}

unint64_t sub_10081A928()
{
  unint64_t result = qword_100E99208;
  if (!qword_100E99208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E99208);
  }
  return result;
}

char *sub_10081A974(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    Swift::String v7 = *a2;
    *(void *)a1 = *a2;
    a1 = &v7[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v8 = type metadata accessor for LocationOfInterest();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        break;
      case 2u:
        Swift::UInt v10 = *a2;
        unint64_t v9 = a2[1];
        *(void *)a1 = *a2;
        *((void *)a1 + 1) = v9;
        uint64_t v11 = a2[3];
        *((void *)a1 + 2) = a2[2];
        *((void *)a1 + 3) = v11;
        uint64_t v12 = a2[5];
        *((void *)a1 + 4) = a2[4];
        *((void *)a1 + 5) = v12;
        *((void *)a1 + 6) = a2[6];
        uint64_t v13 = type metadata accessor for SearchLocation();
        uint64_t v14 = *(int *)(v13 + 32);
        __dst = &a1[v14];
        uint64_t v15 = (char *)a2 + v14;
        uint64_t v16 = type metadata accessor for Location();
        uint64_t v17 = v10;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
        {
          uint64_t v18 = sub_10017DF08(&qword_100E639E8);
          memcpy(__dst, v15, *(void *)(*(void *)(v18 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(__dst, v15, v16);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v16);
        }
        uint64_t v20 = *(int *)(v13 + 36);
        long long v21 = &a1[v20];
        unint64_t v22 = (char *)a2 + v20;
        *(_OWORD *)long long v21 = *(_OWORD *)v22;
        v21[16] = v22[16];
        break;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v19 = a2[3];
        *((void *)a1 + 2) = a2[2];
        *((void *)a1 + 3) = v19;
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v6 = type metadata accessor for Location();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10081AC34(id *a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v3 = type metadata accessor for Location();
      goto LABEL_4;
    case 1:
      uint64_t v3 = type metadata accessor for LocationOfInterest();
LABEL_4:
      unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t v5 = v3;
      uint64_t v6 = (uint64_t)a1;
      goto LABEL_5;
    case 2:

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v7 = (uint64_t)a1 + *(int *)(type metadata accessor for SearchLocation() + 32);
      uint64_t v8 = type metadata accessor for Location();
      uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v7, 1, v8);
      if (result) {
        return result;
      }
      unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
      uint64_t v6 = v7;
      uint64_t v5 = v8;
LABEL_5:
      return v4(v6, v5);
    case 3:
      return swift_bridgeObjectRelease();
    default:
      return result;
  }
}

void *sub_10081AD88(void *a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v5 = type metadata accessor for LocationOfInterest();
      (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
      break;
    case 2u:
      uint64_t v7 = *(void **)a2;
      uint64_t v6 = *(void *)(a2 + 8);
      *a1 = *(void *)a2;
      a1[1] = v6;
      uint64_t v8 = *(void *)(a2 + 24);
      a1[2] = *(void *)(a2 + 16);
      a1[3] = v8;
      uint64_t v9 = *(void *)(a2 + 40);
      a1[4] = *(void *)(a2 + 32);
      a1[5] = v9;
      a1[6] = *(void *)(a2 + 48);
      uint64_t v10 = type metadata accessor for SearchLocation();
      uint64_t v11 = *(int *)(v10 + 32);
      __dst = (char *)a1 + v11;
      uint64_t v12 = (const void *)(a2 + v11);
      uint64_t v13 = type metadata accessor for Location();
      id v14 = v7;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
      {
        uint64_t v15 = sub_10017DF08(&qword_100E639E8);
        memcpy(__dst, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, const void *, uint64_t))(*(void *)(v13 - 8) + 16))(__dst, v12, v13);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v13);
      }
      uint64_t v17 = *(int *)(v10 + 36);
      uint64_t v18 = (char *)a1 + v17;
      uint64_t v19 = a2 + v17;
      *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
      unsigned char v18[16] = *(unsigned char *)(v19 + 16);
      break;
    case 3u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v16 = *(void *)(a2 + 24);
      a1[2] = *(void *)(a2 + 16);
      a1[3] = v16;
      swift_bridgeObjectRetain();
      break;
    default:
      uint64_t v4 = type metadata accessor for Location();
      (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **sub_10081AFF8(void **a1, void **a2)
{
  if (a1 != a2)
  {
    sub_10081DEC4((uint64_t)a1, (void (*)(void))type metadata accessor for PreviewLocation);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v5 = type metadata accessor for LocationOfInterest();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
        break;
      case 2u:
        uint64_t v6 = *a2;
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        a1[6] = a2[6];
        uint64_t v7 = type metadata accessor for SearchLocation();
        uint64_t v8 = *(int *)(v7 + 32);
        __dst = (char *)a1 + v8;
        uint64_t v9 = (char *)a2 + v8;
        uint64_t v10 = type metadata accessor for Location();
        id v11 = v6;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
        {
          uint64_t v12 = sub_10017DF08(&qword_100E639E8);
          memcpy(__dst, v9, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(__dst, v9, v10);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v10);
        }
        uint64_t v13 = *(int *)(v7 + 36);
        id v14 = (char *)a1 + v13;
        uint64_t v15 = (char *)a2 + v13;
        long long v16 = *(_OWORD *)v15;
        v14[16] = v15[16];
        *(_OWORD *)id v14 = v16;
        break;
      case 3u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v4 = type metadata accessor for Location();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}