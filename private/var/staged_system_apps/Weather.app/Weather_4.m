uint64_t sub_100286C08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t KeyPath;
  uint64_t v32;
  long long v33;
  uint64_t v34;
  uint64_t *v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void v52[2];
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _OWORD v62[3];
  uint64_t v63;

  v59 = a3;
  v5 = sub_10017DF08(&qword_100E65378);
  __chkstk_darwin(v5 - 8);
  v58 = (uint64_t)v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_10017DF08(&qword_100E65360);
  v8 = v7 - 8;
  __chkstk_darwin(v7);
  v10 = (void *)((char *)v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v54 = type metadata accessor for OpenURLAction();
  v11 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  v13 = (char *)v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for AttributedString();
  v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  v17 = (char *)v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60 = sub_10017DF08(&qword_100E65350);
  __chkstk_darwin(v60);
  v52[0] = (char *)v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v55 = sub_10017DF08(&qword_100E65340);
  __chkstk_darwin(v55);
  v20 = (char *)v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = sub_10017DF08(&qword_100E65330);
  v56 = *(void *)(v21 - 8);
  v57 = v21;
  __chkstk_darwin(v21);
  v53 = (char *)v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61 = a1;
  *(void *)v20 = static VerticalAlignment.center.getter();
  *((void *)v20 + 1) = 0;
  v20[16] = 1;
  v52[1] = v20;
  v23 = sub_10017DF08(&qword_100E65380);
  sub_100287404(a1, a2, (uint64_t)&v20[*(int *)(v23 + 44)]);
  v24 = type metadata accessor for HomeAndWorkRefinementContentViewModel(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1 + *(int *)(v24 + 28), v14);
  v25 = Text.init(_:)();
  v27 = v26;
  v29 = v28;
  LOBYTE(v20) = v30 & 1;
  KeyPath = swift_getKeyPath();
  sub_100287CF4(a2, (uint64_t)v62);
  v32 = swift_allocObject();
  v33 = v62[1];
  *(_OWORD *)(v32 + 16) = v62[0];
  *(_OWORD *)(v32 + 32) = v33;
  *(_OWORD *)(v32 + 48) = v62[2];
  *(void *)(v32 + 64) = v63;
  OpenURLAction.init(handler:)();
  v34 = *(int *)(v8 + 36);
  v35 = v10;
  v36 = (char *)v10 + v34;
  v37 = v13;
  v38 = v13;
  v39 = v54;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v36, v37, v54);
  *v35 = KeyPath;
  v40 = v52[0];
  sub_10006DF38((uint64_t)v35, v52[0] + *(int *)(v60 + 36), &qword_100E65360);
  *(void *)v40 = v25;
  *(void *)(v40 + 8) = v27;
  *(unsigned char *)(v40 + 16) = (_BYTE)v20;
  *(void *)(v40 + 24) = v29;
  sub_100190CC4(v25, v27, (char)v20);
  swift_bridgeObjectRetain();
  sub_1001781AC((uint64_t)v35, &qword_100E65360);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v38, v39);
  sub_100191924(v25, v27, (char)v20);
  swift_bridgeObjectRelease();
  sub_1001246C8(&qword_100E65338, &qword_100E65340);
  sub_100287ED8();
  v41 = v53;
  Section<>.init(header:footer:content:)();
  v42 = type metadata accessor for Text.Case();
  v43 = v58;
  _s7Weather24LocationCompositionStateOwst_0(v58, 1, 1, v42);
  v44 = swift_getKeyPath();
  v45 = sub_10017DF08(&qword_100E65318);
  v46 = v59;
  v47 = (uint64_t *)(v59 + *(int *)(v45 + 36));
  v48 = sub_10017DF08(&qword_100E65370);
  sub_10006DF38(v43, (uint64_t)v47 + *(int *)(v48 + 28), &qword_100E65378);
  *v47 = v44;
  v50 = v56;
  v49 = v57;
  (*(void (**)(uint64_t, char *, uint64_t))(v56 + 16))(v46, v41, v57);
  sub_1001781AC(v43, &qword_100E65378);
  return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v41, v49);
}

uint64_t sub_1002871E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Location();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for HomeAndWorkRefinementContentViewModel(0);
  __chkstk_darwin(v8);
  v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = LocationOfInterest.fullAddress.getter();
  uint64_t v13 = v12;
  sub_100287D30(a1, (uint64_t)v10, (void (*)(void))type metadata accessor for HomeAndWorkRefinementContentViewModel);
  if (!v13)
  {
    LocationOfInterest.location.getter();
    uint64_t v11 = Location.inlineName.getter();
    uint64_t v13 = v14;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_100287FA8((uint64_t)v10, (void (*)(void))type metadata accessor for HomeAndWorkRefinementContentViewModel);
  v28[2] = v11;
  v28[3] = v13;
  sub_10014A85C();
  uint64_t v15 = Text.init<A>(_:)();
  uint64_t v17 = v16;
  char v19 = v18 & 1;
  static Color.secondary.getter();
  uint64_t v20 = Text.foregroundColor(_:)();
  uint64_t v22 = v21;
  char v24 = v23;
  uint64_t v26 = v25;
  swift_release();
  sub_100191924(v15, v17, v19);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v20;
  *(void *)(a2 + 8) = v22;
  *(unsigned char *)(a2 + 16) = v24 & 1;
  *(void *)(a2 + 24) = v26;
  return result;
}

uint64_t sub_100287404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v53 = a1;
  uint64_t v4 = type metadata accessor for BorderlessButtonStyle();
  uint64_t v51 = *(void *)(v4 - 8);
  uint64_t v52 = v4;
  __chkstk_darwin(v4);
  v50 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E65388);
  uint64_t v48 = *(void *)(v6 - 8);
  uint64_t v49 = v6;
  __chkstk_darwin(v6);
  v47 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_10017DF08(&qword_100E65390);
  uint64_t v46 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  v45 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E65398);
  __chkstk_darwin(v9 - 8);
  uint64_t v56 = (uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v43 - v12;
  uint64_t v14 = type metadata accessor for LocationOfInterestType();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for HomeAndWorkRefinementContentViewModel(0);
  LocationOfInterest.type.getter();
  uint64_t v19 = LocationOfInterestType.title.getter();
  uint64_t v21 = v20;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  *(void *)&v58[0] = v19;
  *((void *)&v58[0] + 1) = v21;
  sub_10014A85C();
  uint64_t v22 = Text.init<A>(_:)();
  uint64_t v24 = v23;
  LOBYTE(v15) = v25 & 1;
  static Color.secondary.getter();
  uint64_t v26 = Text.foregroundColor(_:)();
  uint64_t v28 = v27;
  int v54 = v29;
  uint64_t v55 = v30;
  swift_release();
  sub_100191924(v22, v24, v15);
  swift_bridgeObjectRelease();
  uint64_t v31 = 1;
  if (*(unsigned char *)(v53 + *(int *)(v18 + 32)) == 1)
  {
    sub_100287CF4(v44, (uint64_t)v58);
    uint64_t v32 = swift_allocObject();
    long long v33 = v58[1];
    *(_OWORD *)(v32 + 16) = v58[0];
    *(_OWORD *)(v32 + 32) = v33;
    *(_OWORD *)(v32 + 48) = v58[2];
    *(void *)(v32 + 64) = v59;
    v34 = v47;
    Button.init(action:label:)();
    v35 = v50;
    BorderlessButtonStyle.init()();
    sub_1001246C8(&qword_100E653A8, &qword_100E65388);
    sub_10028802C();
    v36 = v45;
    uint64_t v37 = v49;
    uint64_t v38 = v52;
    View.buttonStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v35, v38);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v34, v37);
    (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v13, v36, v57);
    uint64_t v31 = 0;
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, v31, 1, v57);
  char v39 = v54 & 1;
  uint64_t v40 = v56;
  sub_10006DF38((uint64_t)v13, v56, &qword_100E65398);
  *(void *)a3 = v26;
  *(void *)(a3 + 8) = v28;
  *(unsigned char *)(a3 + 16) = v39;
  *(void *)(a3 + 24) = v55;
  *(void *)(a3 + 32) = 0;
  *(unsigned char *)(a3 + 40) = 1;
  uint64_t v41 = sub_10017DF08(&qword_100E653A0);
  sub_10006DF38(v40, a3 + *(int *)(v41 + 64), &qword_100E65398);
  sub_100190CC4(v26, v28, v39);
  swift_bridgeObjectRetain();
  sub_1001781AC((uint64_t)v13, &qword_100E65398);
  sub_1001781AC(v40, &qword_100E65398);
  sub_100191924(v26, v28, v39);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100287990@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v31 = a1;
  uint64_t v1 = sub_10017DF08(&qword_100E63F80);
  __chkstk_darwin(v1 - 8);
  v3 = (char *)v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for Font.TextStyle();
  uint64_t v4 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v6 = (char *)v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v7 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v9 = v8;
  char v11 = v10 & 1;
  static Color.accentColor.getter();
  v29[0] = Text.foregroundColor(_:)();
  v29[1] = v12;
  uint64_t v14 = v13;
  char v16 = v15;
  swift_release();
  sub_100191924(v7, v9, v11);
  swift_bridgeObjectRelease();
  uint64_t v17 = v30;
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for Font.TextStyle.footnote(_:), v30);
  uint64_t v18 = type metadata accessor for Font.Design();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v3, 1, 1, v18);
  static Font.system(_:design:weight:)();
  sub_1001781AC((uint64_t)v3, &qword_100E63F80);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v17);
  uint64_t v19 = v29[0];
  uint64_t v20 = Text.font(_:)();
  uint64_t v22 = v21;
  char v24 = v23;
  uint64_t v26 = v25;
  swift_release();
  sub_100191924(v19, v14, v16 & 1);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v28 = v31;
  *uint64_t v31 = v20;
  v28[1] = v22;
  *((unsigned char *)v28 + 16) = v24 & 1;
  v28[3] = v26;
  return result;
}

uint64_t sub_100287C34(uint64_t a1, uint64_t a2)
{
  sub_1001B1E64((void *)(a2 + 16), *(void *)(a2 + 40));
  sub_100A417D0();

  return static OpenURLAction.Result.systemAction.getter();
}

uint64_t sub_100287C90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomeAndWorkRefinementContentViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100287CF4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100287D30(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_100287D84@<X0>(uint64_t a1@<X8>)
{
  return sub_100286C08(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_100287D8C()
{
  unint64_t result = qword_100E65320;
  if (!qword_100E65320)
  {
    sub_10018C6DC(&qword_100E65318);
    sub_100287E2C();
    sub_1001246C8(&qword_100E65368, &qword_100E65370);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65320);
  }
  return result;
}

unint64_t sub_100287E2C()
{
  unint64_t result = qword_100E65328;
  if (!qword_100E65328)
  {
    sub_10018C6DC(&qword_100E65330);
    sub_1001246C8(&qword_100E65338, &qword_100E65340);
    sub_100287ED8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65328);
  }
  return result;
}

unint64_t sub_100287ED8()
{
  unint64_t result = qword_100E65348;
  if (!qword_100E65348)
  {
    sub_10018C6DC(&qword_100E65350);
    sub_1001246C8(&qword_100E65358, &qword_100E65360);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65348);
  }
  return result;
}

uint64_t sub_100287F78(uint64_t a1)
{
  return a1;
}

uint64_t sub_100287FA8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100288000@<X0>(uint64_t a1@<X8>)
{
  return sub_1002871E0(*(void *)(v1 + 16), a1);
}

uint64_t sub_100288014(uint64_t a1)
{
  return sub_100287C34(a1, v1 + 16);
}

unint64_t sub_10028802C()
{
  unint64_t result = qword_100E653B0;
  if (!qword_100E653B0)
  {
    type metadata accessor for BorderlessButtonStyle();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E653B0);
  }
  return result;
}

unint64_t sub_100288080()
{
  unint64_t result = qword_100E653B8;
  if (!qword_100E653B8)
  {
    sub_10018C6DC(&qword_100E653C0);
    sub_1001246C8(&qword_100E65300, &qword_100E652F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E653B8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NotificationsOptInListTip(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 3) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (v4) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v3 == 2)
      {
        int v4 = *(unsigned __int16 *)(a1 + 1);
        if (!*(_WORD *)(a1 + 1)) {
          goto LABEL_17;
        }
LABEL_15:
        int v5 = (*a1 | (v4 << 8)) - 4;
        return (v5 + 1);
      }
      int v4 = a1[1];
      if (a1[1]) {
        goto LABEL_15;
      }
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  if (v6 >= 2) {
    int v5 = ((v6 + 2147483646) & 0x7FFFFFFF) - 2;
  }
  else {
    int v5 = -3;
  }
  if (v5 < 0) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for NotificationsOptInListTip(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100288290);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationsOptInListTip()
{
  return &type metadata for NotificationsOptInListTip;
}

uint64_t sub_1002882C8()
{
  return Text.init<A>(_:)();
}

uint64_t sub_100288318(char a1)
{
  int v2 = a1 & 0xFE;
  id v3 = [self mainBundle];
  if (v2 == 2 || (a1 & 1) != 0)
  {
    unint64_t v6 = 0xD000000000000048;
    unint64_t v4 = 0xD00000000000006CLL;
    unint64_t v9 = 0x8000000100C974C0;
    unint64_t v5 = 0x8000000100C97470;
  }
  else
  {
    unint64_t v4 = 0xD000000000000087;
    unint64_t v9 = 0x8000000100C97570;
    unint64_t v5 = 0x8000000100C97530;
    unint64_t v6 = 0xD00000000000003ELL;
  }
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v6, (Swift::String_optional)0, (NSBundle)v3, v7, *(Swift::String *)&v4);

  sub_10014A85C();
  return Text.init<A>(_:)();
}

uint64_t sub_100288428(char a1)
{
  BOOL v1 = (a1 & 0xFE) != 2;
  BOOL v2 = (a1 & 1) == 0;
  if (v1 && v2) {
    uint64_t v3 = 0xD00000000000001ELL;
  }
  else {
    uint64_t v3 = 0xD00000000000001DLL;
  }
  if (v1 && v2) {
    uint64_t v4 = 0x8000000100C97450;
  }
  else {
    uint64_t v4 = 0x8000000100C97430;
  }
  uint64_t v5 = sub_1003188F8(v3, v4, v1 & v2);
  sub_100249EF8();
  return v5;
}

void *sub_1002884BC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Tips.Action();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  sub_100162EB8();
  *(unsigned char *)(swift_allocObject() + 16) = a1;
  Tips.Action.init(id:perform:_:)();
  sub_10017DF08(&qword_100E65410);
  sub_10017F7E8();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100C251B0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v5 + a1, v1, v3);
  unint64_t v6 = sub_1003B5BD4(v5);
  swift_setDeallocating();
  sub_1006BB0D4();
  return v6;
}

uint64_t sub_100288644()
{
  uint64_t v0 = type metadata accessor for Font.TextStyle();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[2] = sub_10032362C();
  v12[3] = v4;
  sub_10014A85C();
  uint64_t v5 = Text.init<A>(_:)();
  uint64_t v7 = v6;
  char v9 = v8 & 1;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Font.TextStyle.body(_:), v0);
  static Font.Weight.medium.getter();
  static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v10 = Text.font(_:)();
  swift_release();
  sub_100191924(v5, v7, v9);
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1002887F0()
{
  sub_10017DF08(&qword_100E653D0);
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_100109314();
  sub_10017DF08(&qword_100E653D8);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_100109314();
  uint64_t v3 = type metadata accessor for Tips.IgnoresDisplayFrequency();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  sub_10017DF08(&qword_100E653E0);
  sub_100179C0C();
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v11 = type metadata accessor for Tips.MaxDisplayCount();
  sub_100179C0C();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_100162EB8();
  sub_10017DF08(&qword_100E653E8);
  sub_100179C0C();
  __chkstk_darwin(v15);
  sub_1001626E0();
  Tips.MaxDisplayCount.init(_:)();
  static Tips.OptionsBuilder.buildExpression<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v0, v11);
  Tips.IgnoresDisplayFrequency.init(_:)();
  static Tips.OptionsBuilder.buildExpression<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
  swift_getOpaqueTypeConformance2();
  static Tips.OptionsBuilder.buildPartialBlock<A>(first:)();
  swift_getOpaqueTypeConformance2();
  swift_getOpaqueTypeConformance2();
  static Tips.OptionsBuilder.buildPartialBlock<A, B>(accumulated:next:)();
  swift_getOpaqueTypeConformance2();
  uint64_t v16 = static Tips.OptionsBuilder.buildFinalResult<A>(_:)();
  sub_100162F0C();
  v17();
  sub_100162F0C();
  v18();
  sub_100162F0C();
  v19();
  sub_100162F0C();
  v20();
  return v16;
}

uint64_t sub_100288BC0()
{
  uint64_t v0 = sub_10017DF08(&qword_100E63520);
  sub_100097814(v0, qword_100F50B00);
  sub_1002102B0(v0, (uint64_t)qword_100F50B00);
  sub_10017DF08(&qword_100E65408);
  type metadata accessor for Tips.ParameterOption();
  sub_10017F7E8();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C251B0;
  static Tips.ParameterOption.transient.getter();
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t sub_100288CF4()
{
  uint64_t v0 = sub_10017DF08(&qword_100E63520);
  sub_100179C0C();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = type metadata accessor for Tips.Rule();
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  if (qword_100E621A0 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_1002102B0(v0, (uint64_t)qword_100F50B00);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v6, v14, v0);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v7);
  uint64_t v15 = static Tips.RuleBuilder.buildPartialBlock(first:)();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_100288EAC@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = sub_10017DF08(&qword_100E653F0);
  a1[4] = sub_100289094(&qword_100E653F8);
  sub_100170694(a1);
  sub_100289094(&qword_100E65400);
  return static PredicateExpressions.build_Arg<A>(_:)();
}

BOOL sub_100288F50(char a1, unsigned __int8 a2)
{
  if (a1 == 2) {
    return a2 == 2;
  }
  if (a1 != 3) {
    return (a2 & 0xFE) != 2 && ((((a1 & 1) == 0) ^ a2) & 1) != 0;
  }
  return a2 == 3;
}

uint64_t sub_100288FB0()
{
  return sub_1002882C8();
}

uint64_t sub_100288FD8()
{
  return sub_100288318(*v0);
}

uint64_t sub_100288FE0()
{
  return sub_100288428(*v0);
}

void *sub_100288FE8()
{
  return sub_1002884BC(*v0);
}

BOOL sub_100288FF8(char *a1, unsigned __int8 *a2)
{
  return sub_100288F50(*a1, *a2);
}

uint64_t sub_100289004@<X0>(uint64_t *a1@<X8>)
{
  sub_10023A914();
  uint64_t result = Tip.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_100289048()
{
  unint64_t result = qword_100E653C8;
  if (!qword_100E653C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E653C8);
  }
  return result;
}

uint64_t sub_100289094(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(&qword_100E653F0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002890DC()
{
  return swift_deallocObject();
}

uint64_t sub_1002890EC()
{
  return sub_100288644();
}

uint64_t WindowFocusManager.__allocating_init()()
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = _swiftEmptyArrayStorage;
  return result;
}

uint64_t WindowFocusManager.init()()
{
  uint64_t result = v0;
  *(void *)(v0 + 16) = &_swiftEmptyArrayStorage;
  return result;
}

uint64_t sub_100289138(uint64_t a1)
{
  uint64_t v2 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v4 = result;
    if (!result) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v4) {
      goto LABEL_12;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_29;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      uint64_t v7 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v7 = *(void *)(v3 + 8 * i + 32);
      swift_retain();
    }
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectRelease();
    if (Strong && swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v9 = *(void *)(v7 + 24);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v9 + 16))(ObjectType, v9);
      swift_unknownObjectRelease();
    }
    swift_release();
  }
LABEL_12:
  swift_bridgeObjectRelease();
  uint64_t v11 = *v2;
  if (!((unint64_t)*v2 >> 62))
  {
    uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v12) {
      goto LABEL_14;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    *uint64_t v2 = (uint64_t)_swiftEmptyArrayStorage;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v12 = result;
  if (!result) {
    goto LABEL_27;
  }
LABEL_14:
  if (v12 >= 1)
  {
    for (uint64_t j = 0; j != v12; ++j)
    {
      if ((v11 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      uint64_t v14 = swift_unknownObjectWeakLoadStrong();
      swift_unknownObjectRelease();
      if (v14)
      {
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      else
      {
        swift_release();
      }
    }
    goto LABEL_27;
  }
LABEL_29:
  __break(1u);
  return result;
}

Swift::Void __swiftcall WindowFocusManager.didLoseFocus()()
{
  sub_100289138(v0);
}

uint64_t WindowFocusManager.remove(monitor:)(uint64_t a1)
{
  swift_beginAccess();
  unint64_t v3 = *(void *)(v1 + 16);
  if (v3 >> 62) {
    goto LABEL_14;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    for (unint64_t i = 0; ; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      unint64_t v6 = i + 1;
      if (__OFADD__(i, 1)) {
        break;
      }
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v8 = Strong;
        swift_unknownObjectRelease();
        if (v8 == a1)
        {
          swift_bridgeObjectRelease();
          swift_beginAccess();
          sub_100289554(i, sub_100ABB510, (void (*)(uint64_t, unint64_t))sub_1007EAF74);
          swift_endAccess();
          swift_release();
          return swift_release();
        }
      }
      swift_release();
      if (v6 == v4) {
        return swift_bridgeObjectRelease();
      }
    }
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_100289528(unint64_t a1)
{
  return sub_100289554(a1, sub_100ABB510, (void (*)(uint64_t, unint64_t))sub_1007EAF74);
}

uint64_t sub_100289554(unint64_t a1, uint64_t (*a2)(uint64_t), void (*a3)(uint64_t, unint64_t))
{
  uint64_t v7 = *v3;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v3 = v7;
  if (!result || v7 < 0 || (v7 & 0x4000000000000000) != 0)
  {
    uint64_t result = a2(v7);
    uint64_t v7 = result;
    uint64_t *v3 = result;
  }
  uint64_t v9 = v7 & 0xFFFFFFFFFFFFFF8;
  unint64_t v10 = *(void *)(v9 + 16);
  if (v10 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v11 = v10 - 1;
    unint64_t v12 = v10 - 1 - a1;
    uint64_t v13 = v9 + 8 * a1;
    uint64_t v14 = *(void *)(v13 + 32);
    a3(v13 + 40, v12);
    *(void *)(v9 + 16) = v11;
    specialized Array._endMutation()();
    return v14;
  }
  return result;
}

uint64_t StubLocalSearchRequestService.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t StubLocalSearchRequestService.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

void sub_100289650()
{
}

uint64_t sub_100289674(uint64_t a1)
{
  return WindowFocusManager.remove(monitor:)(a1);
}

uint64_t sub_100289698()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1002896A4()
{
  sub_100289798(v0 + 16);
  sub_100289798(v0 + 32);

  return swift_deallocClassInstance();
}

uint64_t sub_1002896E4()
{
  return sub_100289698();
}

uint64_t sub_100289708(uint64_t a1)
{
  return sub_100129E30(a1, (uint64_t (*)(BOOL))sub_1007E9738);
}

uint64_t sub_100289720(uint64_t a1)
{
  return sub_100129E30(a1, (uint64_t (*)(BOOL))sub_1007E97DC);
}

uint64_t sub_100289738(uint64_t a1)
{
  return sub_100129E30(a1, (uint64_t (*)(BOOL))sub_1007E99B8);
}

uint64_t sub_100289750(uint64_t a1)
{
  return sub_100129E30(a1, (uint64_t (*)(BOOL))sub_100092180);
}

uint64_t sub_100289768(uint64_t a1)
{
  return sub_100129E30(a1, (uint64_t (*)(BOOL))sub_1007E9CF4);
}

uint64_t sub_100289780(uint64_t a1)
{
  return sub_100129E30(a1, (uint64_t (*)(BOOL))sub_1007E9704);
}

uint64_t sub_100289798(uint64_t a1)
{
  return a1;
}

uint64_t sub_1002897C0()
{
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  type metadata accessor for SunriseSunsetDetailDataProcessor.ProcessingKey(0);

  return static Location.== infix(_:_:)();
}

uint64_t sub_100289820()
{
  return dispatch thunk of Hashable.hash(into:)();
}

Swift::Int sub_1002898F8()
{
  return Hasher._finalize()();
}

Swift::Int sub_1002899EC()
{
  return Hasher._finalize()();
}

void sub_100289AD4()
{
  sub_100162EA0();
  uint64_t v0 = sub_10017DF08(&qword_100E656C0);
  uint64_t v1 = sub_100109308(v0);
  __chkstk_darwin(v1);
  sub_100109314();
  uint64_t v21 = v2;
  uint64_t v20 = type metadata accessor for SunriseSunsetDetailDataProcessor.ProcessingKey(0) - 8;
  __chkstk_darwin(v20);
  sub_100109314();
  uint64_t v19 = v3;
  type metadata accessor for CurrentWeather();
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_10019B3A4();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_100162758();
  __chkstk_darwin(v8);
  sub_100188698();
  sub_100179C0C();
  __chkstk_darwin(v9);
  sub_10017F2C0();
  sub_100179C0C();
  __chkstk_darwin(v10);
  sub_1001A2AD0();
  static Calendar.currentCalendar(with:)();
  sub_100164938();
  v11();
  type metadata accessor for WeatherData(0);
  WeatherDataModel.currentWeather.getter();
  CurrentWeather.date.getter();
  sub_100162F0C();
  v12();
  Calendar.startOfDay(for:)();
  uint64_t v13 = *(void (**)(void))(v6 + 8);
  sub_100182EB0();
  v13();
  uint64_t v14 = sub_10017B254();
  v15(v14);
  type metadata accessor for Location();
  sub_100162E4C();
  sub_10008B8B4();
  v16();
  swift_retain();
  Cache.subscript.getter();
  swift_release();
  sub_10028FBFC(v19, (void (*)(void))type metadata accessor for SunriseSunsetDetailDataProcessor.ProcessingKey);
  sub_100182EB0();
  v13();
  sub_100162F0C();
  v17();
  uint64_t v18 = type metadata accessor for SunriseSunsetDetailPreprocessedDataModel();
  _s7Weather24LocationCompositionStateOwet_0(v21, 1, v18);
  sub_100178110(v21, &qword_100E656C0);
  sub_100162694();
}

void sub_100289E00()
{
  sub_100162EA0();
  uint64_t v24 = v0;
  uint64_t v1 = sub_10017DF08(&qword_100E656C0);
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_100109314();
  uint64_t v23 = v3;
  uint64_t v22 = type metadata accessor for SunriseSunsetDetailDataProcessor.ProcessingKey(0) - 8;
  __chkstk_darwin(v22);
  sub_100109314();
  uint64_t v21 = v4;
  type metadata accessor for CurrentWeather();
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_10019B3A4();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_100162758();
  __chkstk_darwin(v9);
  sub_100188698();
  sub_100179C0C();
  __chkstk_darwin(v10);
  sub_10017F2C0();
  sub_100179C0C();
  __chkstk_darwin(v11);
  sub_1001A2AD0();
  static Calendar.currentCalendar(with:)();
  sub_100164938();
  v12();
  type metadata accessor for WeatherData(0);
  WeatherDataModel.currentWeather.getter();
  CurrentWeather.date.getter();
  sub_100162F0C();
  v13();
  Calendar.startOfDay(for:)();
  uint64_t v14 = *(void (**)(void))(v7 + 8);
  sub_100182EB0();
  v14();
  uint64_t v15 = sub_10017B254();
  v16(v15);
  type metadata accessor for Location();
  sub_100162E4C();
  sub_10008B8B4();
  v17();
  swift_retain();
  Cache.subscript.getter();
  swift_release();
  sub_10028FBFC(v21, (void (*)(void))type metadata accessor for SunriseSunsetDetailDataProcessor.ProcessingKey);
  sub_100182EB0();
  v14();
  sub_100162F0C();
  v18();
  uint64_t v19 = type metadata accessor for SunriseSunsetDetailPreprocessedDataModel();
  if (_s7Weather24LocationCompositionStateOwet_0(v23, 1, v19) == 1)
  {
    sub_100178110(v23, &qword_100E656C0);
    uint64_t v20 = 1;
  }
  else
  {
    sub_10028FFE4(v23, v24, (void (*)(void))type metadata accessor for SunriseSunsetDetailPreprocessedDataModel);
    uint64_t v20 = 0;
  }
  _s7Weather24LocationCompositionStateOwst_0(v24, v20, 1, v19);
  sub_100162694();
}

uint64_t sub_10028A170()
{
  sub_1000A9DE8();
  v1[7] = v2;
  v1[8] = v0;
  v1[6] = v3;
  uint64_t v4 = type metadata accessor for Location();
  v1[9] = v4;
  sub_100164920(v4);
  v1[10] = v5;
  v1[11] = sub_10017EF8C();
  uint64_t v6 = type metadata accessor for SunriseSunsetDetailPreprocessedDataModel();
  v1[12] = v6;
  sub_100109308(v6);
  v1[13] = sub_10017EF8C();
  uint64_t v7 = sub_10017DF08(&qword_100E656C0);
  sub_100109308(v7);
  v1[14] = sub_100162FDC();
  v1[15] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for SunriseSunsetDetailDataProcessor.ProcessingKey(0);
  v1[16] = v8;
  sub_100109308(v8);
  v1[17] = sub_100162FDC();
  v1[18] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for CurrentWeather();
  v1[19] = v9;
  sub_100164920(v9);
  v1[20] = v10;
  v1[21] = sub_10017EF8C();
  uint64_t v11 = type metadata accessor for Date();
  v1[22] = v11;
  sub_100164920(v11);
  v1[23] = v12;
  v1[24] = sub_100162FDC();
  v1[25] = swift_task_alloc();
  v1[26] = swift_task_alloc();
  uint64_t v13 = type metadata accessor for TimeZone();
  v1[27] = v13;
  sub_100164920(v13);
  v1[28] = v14;
  v1[29] = sub_10017EF8C();
  uint64_t v15 = type metadata accessor for Calendar();
  v1[30] = v15;
  sub_100164920(v15);
  v1[31] = v16;
  v1[32] = sub_10017EF8C();
  sub_100127A5C();
  return _swift_task_switch(v17, v18, v19);
}

uint64_t sub_10028A35C()
{
  uint64_t v53 = v0;
  uint64_t v2 = v0[28];
  uint64_t v1 = v0[29];
  uint64_t v38 = v0[27];
  uint64_t v3 = v0[23];
  uint64_t v39 = v0[26];
  uint64_t v40 = v0[22];
  uint64_t v41 = v0[18];
  uint64_t v44 = v0[16];
  uint64_t v48 = v0[15];
  uint64_t v50 = v0[12];
  uint64_t v4 = v0[10];
  uint64_t v45 = v0[9];
  *(void *)typea = v0[7];
  Location.timeZone.getter();
  static Calendar.currentCalendar(with:)();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v38);
  type metadata accessor for WeatherData(0);
  WeatherDataModel.currentWeather.getter();
  CurrentWeather.date.getter();
  sub_100164938();
  v5();
  Calendar.startOfDay(for:)();
  uint64_t v6 = *(void (**)(void))(v3 + 8);
  v0[33] = v6;
  v0[34] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  sub_100183838();
  v6();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v7(v41, v39, v40);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  v8(v41 + *(int *)(v44 + 20), *(void *)typea, v45);
  swift_retain();
  Cache.subscript.getter();
  swift_release();
  int v9 = _s7Weather24LocationCompositionStateOwet_0(v48, 1, v50);
  sub_100178110(v48, &qword_100E656C0);
  if (v9 == 1)
  {
    uint64_t v10 = (void *)swift_task_alloc();
    v51[35] = v10;
    void *v10 = v51;
    v10[1] = sub_10028AA14;
    uint64_t v11 = v51[18];
    uint64_t v12 = v51[13];
    return sub_10028ACB8(v12, v11);
  }
  else
  {
    uint64_t v46 = v7;
    uint64_t v49 = v6;
    if (qword_100E627E8 != -1) {
      swift_once();
    }
    uint64_t v14 = v51[26];
    uint64_t v15 = v51[24];
    uint64_t v16 = v51[22];
    uint64_t v17 = v51[11];
    uint64_t v18 = v51[9];
    uint64_t v19 = v51[7];
    uint64_t v20 = type metadata accessor for Logger();
    sub_1002102B0(v20, (uint64_t)qword_100F51ED0);
    v46(v15, v14, v16);
    v8(v17, v19, v18);
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t type = static os_log_type_t.default.getter();
    BOOL v22 = os_log_type_enabled(v21, type);
    uint64_t v23 = v51[31];
    uint64_t v24 = v51[32];
    uint64_t v25 = v51[30];
    uint64_t v26 = v51[26];
    uint64_t v27 = v51[24];
    uint64_t v28 = v51[22];
    uint64_t v47 = v51[18];
    if (v22)
    {
      uint64_t v29 = swift_slowAlloc();
      uint64_t v52 = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 141558787;
      v0[2] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v29 + 12) = 2081;
      sub_10028FB58(&qword_100E656D8, (void (*)(uint64_t))&type metadata accessor for Date);
      uint64_t v30 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[3] = sub_10016414C(v30, v31, &v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100164944();
      v49();
      *(_WORD *)(v29 + 22) = 2160;
      v0[4] = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v29 + 32) = 2081;
      uint64_t v32 = Location.name.getter();
      v0[5] = sub_10016414C(v32, v33, &v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100183838();
      v34();
      _os_log_impl((void *)&_mh_execute_header, v21, type, "Preprocessed data already exist for %{private,mask.hash}s %{private,mask.hash}s. Skip making data", (uint8_t *)v29, 0x2Au);
      swift_arrayDestroy();
      sub_100162EE0();
      sub_100162EE0();

      sub_10028FBFC(v47, (void (*)(void))type metadata accessor for SunriseSunsetDetailDataProcessor.ProcessingKey);
      sub_100164944();
      v49();
      sub_100162F0C();
      v35();
    }
    else
    {

      sub_100183838();
      v36();
      ((void (*)(uint64_t, uint64_t))v49)(v27, v28);
      sub_10028FBFC(v47, (void (*)(void))type metadata accessor for SunriseSunsetDetailDataProcessor.ProcessingKey);
      ((void (*)(uint64_t, uint64_t))v49)(v26, v28);
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v25);
    }
    sub_1001828B4();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1001627B4();
    return v37();
  }
}

uint64_t sub_10028AA14()
{
  sub_1000A9DE8();
  sub_100119470();
  uint64_t v1 = *v0;
  sub_100179D88();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100127A5C();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_10028AADC()
{
  uint64_t v10 = (void (*)(uint64_t, uint64_t))v0[33];
  uint64_t v1 = v0[26];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[18];
  uint64_t v5 = v0[13];
  uint64_t v4 = v0[14];
  uint64_t v6 = v0[12];
  sub_10028FBA0(v3, v0[17], (void (*)(void))type metadata accessor for SunriseSunsetDetailDataProcessor.ProcessingKey);
  sub_10028FBA0(v5, v4, (void (*)(void))type metadata accessor for SunriseSunsetDetailPreprocessedDataModel);
  _s7Weather24LocationCompositionStateOwst_0(v4, 0, 1, v6);
  swift_retain();
  Cache.subscript.setter();
  swift_release();
  sub_10028FBFC(v5, (void (*)(void))type metadata accessor for SunriseSunsetDetailPreprocessedDataModel);
  sub_10028FBFC(v3, (void (*)(void))type metadata accessor for SunriseSunsetDetailDataProcessor.ProcessingKey);
  v10(v1, v2);
  sub_100183838();
  v7();
  sub_1001828B4();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1001627B4();
  return v8();
}

uint64_t sub_10028ACB8(uint64_t a1, uint64_t a2)
{
  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  v3[9] = type metadata accessor for SunriseSunsetMonthlyViewModel();
  v3[10] = swift_task_alloc();
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  sub_10017DF08(&qword_100E656E0);
  v3[13] = swift_task_alloc();
  v3[14] = swift_task_alloc();
  v3[15] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for TimeZone();
  v3[16] = v4;
  v3[17] = *(void *)(v4 - 8);
  v3[18] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Calendar();
  v3[19] = v5;
  v3[20] = *(void *)(v5 - 8);
  v3[21] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Date();
  v3[22] = v6;
  v3[23] = *(void *)(v6 - 8);
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Location();
  v3[26] = v7;
  v3[27] = *(void *)(v7 - 8);
  v3[28] = swift_task_alloc();
  return _swift_task_switch(sub_10028AF38, 0, 0);
}

uint64_t sub_10028AF38()
{
  uint64_t v2 = *(void *)(v0 + 216);
  uint64_t v1 = *(void *)(v0 + 224);
  uint64_t v4 = *(void *)(v0 + 200);
  uint64_t v3 = *(void *)(v0 + 208);
  uint64_t v5 = *(void *)(v0 + 184);
  uint64_t v6 = *(void *)(v0 + 176);
  uint64_t v71 = *(void *)(v0 + 120);
  uint64_t v74 = *(void *)(v0 + 72);
  uint64_t v7 = *(void *)(v0 + 56);
  uint64_t v65 = *(void *)(v0 + 64);
  uint64_t v8 = type metadata accessor for SunriseSunsetDetailDataProcessor.ProcessingKey(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v7 + *(int *)(v8 + 20), v3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v7, v6);
  *(void *)(v0 + 232) = type metadata accessor for Elevation();
  *(void *)(v0 + 240) = sub_10028FB58((unint64_t *)&qword_100E63978, (void (*)(uint64_t))&type metadata accessor for Date);
  *(void *)(v0 + 16) = Dictionary.init(dictionaryLiteral:)();
  *(void *)(v0 + 248) = sub_10028FECC();
  *(void *)(v0 + 24) = Dictionary.init(dictionaryLiteral:)();
  Location.timeZone.getter();
  static Calendar.currentCalendar(with:)();
  sub_100164938();
  v9();
  Calendar.startOfDay(for:)();
  *(void *)(v0 + 32) = Dictionary.init(dictionaryLiteral:)();
  _s7Weather24LocationCompositionStateOwst_0(v71, 1, 1, v74);
  *(void *)(v0 + 40) = 0;
  sub_1001B1E64((void *)(v65 + 96), *(void *)(v65 + 120));
  uint64_t v10 = sub_100684698();
  if (!v10) {
    goto LABEL_4;
  }
  uint64_t v11 = v10;
  uint64_t v12 = *(void *)(v0 + 112);
  uint64_t v13 = *(void *)(v0 + 72);
  sub_1001B1E64((void *)(v65 + 96), *(void *)(v65 + 120));
  sub_1006844E4();
  int v14 = _s7Weather24LocationCompositionStateOwet_0(v12, 1, v13);
  uint64_t v15 = *(void *)(v0 + 112);
  if (v14 == 1)
  {
    swift_bridgeObjectRelease();
    sub_100178110(v15, &qword_100E656E0);
LABEL_4:
    if (qword_100E627E8 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_1002102B0(v16, (uint64_t)qword_100F51ED0);
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v17, v18))
    {
      *(_WORD *)sub_100163DC4() = 0;
      sub_100162FF8((void *)&_mh_execute_header, v19, v20, "SunriseSunsetDetailViewModelFactory calculates data");
      sub_100162EE0();
    }
    uint64_t v21 = *(void *)(v0 + 224);
    uint64_t v22 = *(void *)(v0 + 120);
    uint64_t v23 = *(void *)(v0 + 64);
    long long v75 = *(_OWORD *)(v0 + 192);

    type metadata accessor for SunriseSunsetDetailDataProcessor.GroupTaskResponse(0);
    uint64_t v24 = swift_task_alloc();
    *(void *)(v0 + 256) = v24;
    *(void *)(v24 + 16) = v23;
    *(void *)(v24 + 24) = v21;
    *(_OWORD *)(v24 + 32) = v75;
    *(void *)(v24 + 48) = v0 + 40;
    *(void *)(v24 + 56) = v22;
    uint64_t v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 264) = v25;
    *uint64_t v25 = v0;
    v25[1] = sub_10028B844;
    sub_10018437C();
    return withTaskGroup<A, B>(of:returning:isolation:body:)();
  }
  sub_10028FFE4(*(void *)(v0 + 112), *(void *)(v0 + 96), (void (*)(void))type metadata accessor for SunriseSunsetMonthlyViewModel);
  if (qword_100E627E8 != -1) {
    swift_once();
  }
  uint64_t v26 = type metadata accessor for Logger();
  sub_1002102B0(v26, (uint64_t)qword_100F51ED0);
  uint64_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v27, v28))
  {
    *(_WORD *)sub_100163DC4() = 0;
    sub_100162FF8((void *)&_mh_execute_header, v29, v30, "SunriseSunsetDetailViewModelFactory gets data from cache");
    sub_100162EE0();
  }
  uint64_t v31 = *(void *)(v0 + 120);
  uint64_t v32 = *(void *)(v0 + 96);
  uint64_t v33 = *(void *)(v0 + 72);
  swift_bridgeObjectRelease();

  *(void *)(v0 + 40) = v11;
  sub_100178110(v31, &qword_100E656E0);
  sub_10028FFE4(v32, v31, (void (*)(void))type metadata accessor for SunriseSunsetMonthlyViewModel);
  _s7Weather24LocationCompositionStateOwst_0(v31, 0, 1, v33);
  uint64_t v34 = *(void *)(v0 + 104);
  uint64_t v35 = *(void *)(v0 + 72);
  sub_1001B7204(*(void *)(v0 + 120), v34, &qword_100E656E0);
  int v36 = _s7Weather24LocationCompositionStateOwet_0(v34, 1, v35);
  uint64_t v37 = *(void *)(v0 + 104);
  if (v36 == 1)
  {
    sub_100178110(v37, &qword_100E656E0);
LABEL_20:
    if (qword_100E627E8 != -1) {
      swift_once();
    }
    sub_1002102B0(v26, (uint64_t)qword_100F51ED0);
    uint64_t v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v48, v49))
    {
      *(_WORD *)sub_100163DC4() = 0;
      sub_1001CA788((void *)&_mh_execute_header, v50, v51, "Failed to calculate sunrise sunset data");
      sub_100162EE0();
    }
    uint64_t v70 = *(void *)(v0 + 208);
    uint64_t v73 = *(void *)(v0 + 224);
    uint64_t v68 = *(void *)(v0 + 216);
    uint64_t v52 = *(void *)(v0 + 184);
    uint64_t v76 = *(void *)(v0 + 120);
    uint64_t v53 = *(void **)(v0 + 80);
    uint64_t v54 = *(uint64_t **)(v0 + 48);

    uint64_t v63 = Dictionary.init(dictionaryLiteral:)();
    uint64_t v55 = Dictionary.init(dictionaryLiteral:)();
    WeatherDescription.init(stringLiteral:)();
    *uint64_t v53 = _swiftEmptyArrayStorage;
    uint64_t v56 = Dictionary.init(dictionaryLiteral:)();
    sub_100164944();
    v57();
    *uint64_t v54 = v63;
    v54[1] = v55;
    uint64_t v58 = type metadata accessor for SunriseSunsetDetailPreprocessedDataModel();
    sub_10028FFE4((uint64_t)v53, (uint64_t)v54 + *(int *)(v58 + 24), (void (*)(void))type metadata accessor for SunriseSunsetMonthlyViewModel);
    *(uint64_t *)((char *)v54 + *(int *)(v58 + 28)) = v56;
    uint64_t v59 = *(void (**)(void))(v52 + 8);
    sub_100183838();
    v59();
    sub_100183838();
    v59();
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v73, v70);
    goto LABEL_25;
  }
  sub_10028FFE4(v37, *(void *)(v0 + 88), (void (*)(void))type metadata accessor for SunriseSunsetMonthlyViewModel);
  if (!*(void *)(v0 + 40))
  {
    sub_10028FBFC(*(void *)(v0 + 88), (void (*)(void))type metadata accessor for SunriseSunsetMonthlyViewModel);
    goto LABEL_20;
  }
  uint64_t v38 = *(void *)(v0 + 216);
  uint64_t v69 = *(void *)(v0 + 208);
  uint64_t v72 = *(void *)(v0 + 224);
  uint64_t v39 = *(void *)(v0 + 184);
  uint64_t v66 = *(void *)(v0 + 192);
  uint64_t v67 = *(void *)(v0 + 200);
  uint64_t v64 = *(void *)(v0 + 176);
  uint64_t v76 = *(void *)(v0 + 120);
  uint64_t v62 = *(void *)(v0 + 88);
  uint64_t v40 = *(void **)(v0 + 48);
  uint64_t v41 = swift_bridgeObjectRetain();
  sub_10028D93C(v41, (void (*)(char *, uint64_t))(v0 + 16), v0 + 24, v0 + 32);
  sub_100164938();
  v42();
  swift_bridgeObjectRelease();
  uint64_t v43 = *(void *)(v0 + 16);
  uint64_t v44 = *(void *)(v0 + 24);
  uint64_t v45 = type metadata accessor for SunriseSunsetDetailPreprocessedDataModel();
  sub_10028FFE4(v62, (uint64_t)v40 + *(int *)(v45 + 24), (void (*)(void))type metadata accessor for SunriseSunsetMonthlyViewModel);
  uint64_t v46 = *(void *)(v0 + 32);
  *uint64_t v40 = v43;
  v40[1] = v44;
  *(void *)((char *)v40 + *(int *)(v45 + 28)) = v46;
  uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v39 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v47(v66, v64);
  v47(v67, v64);
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v72, v69);
LABEL_25:
  swift_bridgeObjectRelease();
  sub_100178110(v76, &qword_100E656E0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1001858F8();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1001627B4();
  return v60();
}

uint64_t sub_10028B844()
{
  sub_1000A9DE8();
  sub_100119470();
  uint64_t v1 = *v0;
  sub_100179D88();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100127A5C();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_10028B928()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 72);
  sub_1001B7204(*(void *)(v0 + 120), v1, &qword_100E656E0);
  int v3 = _s7Weather24LocationCompositionStateOwet_0(v1, 1, v2);
  uint64_t v4 = *(void *)(v0 + 104);
  if (v3 == 1)
  {
    sub_100178110(v4, &qword_100E656E0);
  }
  else
  {
    sub_10028FFE4(v4, *(void *)(v0 + 88), (void (*)(void))type metadata accessor for SunriseSunsetMonthlyViewModel);
    if (*(void *)(v0 + 40))
    {
      uint64_t v5 = *(void *)(v0 + 184);
      uint64_t v35 = *(void *)(v0 + 120);
      uint64_t v32 = *(void *)(v0 + 88);
      uint64_t v6 = *(void **)(v0 + 48);
      uint64_t v7 = swift_bridgeObjectRetain();
      sub_10028D93C(v7, (void (*)(char *, uint64_t))(v0 + 16), v0 + 24, v0 + 32);
      sub_100164938();
      v8();
      swift_bridgeObjectRelease();
      uint64_t v9 = *(void *)(v0 + 16);
      uint64_t v10 = *(void *)(v0 + 24);
      uint64_t v11 = type metadata accessor for SunriseSunsetDetailPreprocessedDataModel();
      sub_10028FFE4(v32, (uint64_t)v6 + *(int *)(v11 + 24), (void (*)(void))type metadata accessor for SunriseSunsetMonthlyViewModel);
      uint64_t v12 = *(void *)(v0 + 32);
      *uint64_t v6 = v9;
      v6[1] = v10;
      *(void *)((char *)v6 + *(int *)(v11 + 28)) = v12;
      uint64_t v13 = *(void (**)(void))(v5 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_100164944();
      v13();
      sub_100164944();
      v13();
      goto LABEL_11;
    }
    sub_10028FBFC(*(void *)(v0 + 88), (void (*)(void))type metadata accessor for SunriseSunsetMonthlyViewModel);
  }
  if (qword_100E627E8 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_1002102B0(v14, (uint64_t)qword_100F51ED0);
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v15, v16))
  {
    *(_WORD *)sub_100163DC4() = 0;
    sub_1001CA788((void *)&_mh_execute_header, v17, v18, "Failed to calculate sunrise sunset data");
    sub_100162EE0();
  }
  uint64_t v34 = *(void *)(v0 + 200);
  uint64_t v19 = *(void *)(v0 + 184);
  uint64_t v20 = *(void *)(v0 + 176);
  uint64_t v33 = *(void *)(v0 + 192);
  uint64_t v35 = *(void *)(v0 + 120);
  uint64_t v21 = *(void **)(v0 + 80);
  uint64_t v22 = *(uint64_t **)(v0 + 48);

  uint64_t v31 = Dictionary.init(dictionaryLiteral:)();
  uint64_t v23 = Dictionary.init(dictionaryLiteral:)();
  WeatherDescription.init(stringLiteral:)();
  *uint64_t v21 = _swiftEmptyArrayStorage;
  uint64_t v24 = Dictionary.init(dictionaryLiteral:)();
  sub_100183838();
  v25();
  *uint64_t v22 = v31;
  v22[1] = v23;
  uint64_t v26 = type metadata accessor for SunriseSunsetDetailPreprocessedDataModel();
  sub_10028FFE4((uint64_t)v21, (uint64_t)v22 + *(int *)(v26 + 24), (void (*)(void))type metadata accessor for SunriseSunsetMonthlyViewModel);
  *(uint64_t *)((char *)v22 + *(int *)(v26 + 28)) = v24;
  uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
  v27(v33, v20);
  v27(v34, v20);
LABEL_11:
  sub_100162F0C();
  v28();
  swift_bridgeObjectRelease();
  sub_100178110(v35, &qword_100E656E0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1001858F8();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  sub_1001627B4();
  return v29();
}

uint64_t sub_10028BD98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[7] = a7;
  v8[8] = a8;
  v8[5] = a5;
  v8[6] = a6;
  v8[3] = a3;
  v8[4] = a4;
  v8[2] = a2;
  v8[9] = type metadata accessor for SunriseSunsetMonthlyViewModel();
  v8[10] = swift_task_alloc();
  v8[11] = type metadata accessor for SunriseSunsetDetailDataProcessor.GroupTaskResponse(0);
  v8[12] = swift_task_alloc();
  sub_10017DF08(&qword_100E65708);
  v8[13] = swift_task_alloc();
  uint64_t v9 = sub_10017DF08(&qword_100E65710);
  v8[14] = v9;
  v8[15] = *(void *)(v9 - 8);
  v8[16] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Date();
  v8[17] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v8[18] = v11;
  v8[19] = *(void *)(v11 + 64);
  v8[20] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for Location();
  v8[21] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v8[22] = v13;
  v8[23] = *(void *)(v13 + 64);
  v8[24] = swift_task_alloc();
  sub_10017DF08(&qword_100E634B0);
  v8[25] = swift_task_alloc();
  return _swift_task_switch(sub_10028BFF0, 0, 0);
}

uint64_t sub_10028BFF0()
{
  uint64_t v1 = v0[25];
  uint64_t v25 = v1;
  uint64_t v15 = v0[24];
  uint64_t v2 = v0[22];
  uint64_t v18 = v0[23];
  uint64_t v3 = v0[21];
  uint64_t v23 = v0[20];
  uint64_t v4 = v0[18];
  uint64_t v5 = v0[17];
  uint64_t v6 = v0[5];
  uint64_t v22 = v0[6];
  uint64_t v24 = v0[3];
  uint64_t v21 = type metadata accessor for TaskPriority();
  _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, v21);
  sub_10008B8B4();
  v7();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  uint64_t v8 = v5;
  v20(v23, v6, v5);
  unint64_t v19 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v17 = (v18 + *(unsigned __int8 *)(v4 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = (char *)swift_allocObject();
  *((void *)v9 + 2) = 0;
  *((void *)v9 + 3) = 0;
  *((void *)v9 + 4) = v24;
  os_log_type_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 32);
  v16(&v9[v19], v15, v3);
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 32);
  v10(&v9[v17], v23, v8);
  swift_retain();
  sub_10028CCC4(v25, (uint64_t)&unk_100E65720, (uint64_t)v9);
  sub_100178110(v25, &qword_100E634B0);
  _s7Weather24LocationCompositionStateOwst_0(v25, 1, 1, v21);
  sub_10008B8B4();
  v11();
  v20(v23, v22, v8);
  uint64_t v12 = (char *)swift_allocObject();
  *((void *)v12 + 2) = 0;
  *((void *)v12 + 3) = 0;
  *((void *)v12 + 4) = v24;
  v16(&v12[v19], v15, v3);
  v10(&v12[v17], v23, v8);
  swift_retain();
  sub_10028CCC4(v25, (uint64_t)&unk_100E65730, (uint64_t)v12);
  sub_100178110(v25, &qword_100E634B0);
  TaskGroup.makeAsyncIterator()();
  uint64_t v13 = (void *)swift_task_alloc();
  v0[26] = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_10028C36C;
  sub_100127A5C();
  return TaskGroup.Iterator.next(isolation:)();
}

uint64_t sub_10028C36C()
{
  sub_1000A9DE8();
  sub_100119470();
  uint64_t v1 = *v0;
  sub_100179D88();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100127A5C();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_10028C434()
{
  sub_10019DDF8();
  uint64_t v1 = *(void *)(v0 + 104);
  if (_s7Weather24LocationCompositionStateOwet_0(v1, 1, *(void *)(v0 + 88)) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 120) + 8))(*(void *)(v0 + 128), *(void *)(v0 + 112));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1001627B4();
    return v2();
  }
  else
  {
    sub_10028FFE4(v1, *(void *)(v0 + 96), (void (*)(void))type metadata accessor for SunriseSunsetDetailDataProcessor.GroupTaskResponse);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = *(uint64_t **)(v0 + 96);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = *(void *)(v0 + 72);
      uint64_t v6 = *(void *)(v0 + 80);
      uint64_t v8 = *(void *)(v0 + 64);
      uint64_t v10 = *(void *)(v0 + 24);
      uint64_t v9 = *(void *)(v0 + 32);
      sub_10028FFE4((uint64_t)v5, v6, (void (*)(void))type metadata accessor for SunriseSunsetMonthlyViewModel);
      sub_100178110(v8, &qword_100E656E0);
      sub_10028FBA0(v6, v8, (void (*)(void))type metadata accessor for SunriseSunsetMonthlyViewModel);
      _s7Weather24LocationCompositionStateOwst_0(v8, 0, 1, v7);
      sub_1001B1E64((void *)(v10 + 96), *(void *)(v10 + 120));
      sub_10068453C(v9, v6);
      sub_10028FBFC(v6, (void (*)(void))type metadata accessor for SunriseSunsetMonthlyViewModel);
    }
    else
    {
      uint64_t v11 = *(void *)(v0 + 32);
      uint64_t v12 = *(void *)(v0 + 40);
      uint64_t v13 = *(void *)(v0 + 24);
      uint64_t v14 = *v5;
      **(void **)(v0 + 56) = *v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      sub_1001B1E64((void *)(v13 + 96), *(void *)(v13 + 120));
      sub_100684798(v11, v12, v14);
      swift_bridgeObjectRelease();
    }
    uint64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 208) = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_10028C36C;
    sub_100127A5C();
    return TaskGroup.Iterator.next(isolation:)();
  }
}

uint64_t sub_10028C6E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  uint64_t v7 = type metadata accessor for OSSignpostID();
  v6[6] = v7;
  v6[7] = *(void *)(v7 - 8);
  v6[8] = swift_task_alloc();
  return _swift_task_switch(sub_10028C7A8, 0, 0);
}

uint64_t sub_10028C7A8()
{
  sub_1000A9DE8();
  uint64_t v1 = *(void **)(v0[3] + 136);
  v0[9] = v1;
  id v2 = v1;
  OSSignpostID.init(log:)();
  static os_signpost_type_t.begin.getter();
  os_signpost(_:dso:log:name:signpostID:)();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[10] = v3;
  void *v3 = v0;
  v3[1] = sub_10028C884;
  uint64_t v5 = v0[4];
  uint64_t v4 = v0[5];
  return sub_10028CA28(v5, v4);
}

uint64_t sub_10028C884()
{
  sub_1000A9DE8();
  sub_100119470();
  *(void *)(v1 + 88) = v0;
  swift_task_dealloc();
  sub_100127A5C();
  return _swift_task_switch(v2, v3, v4);
}

uint64_t sub_10028C958()
{
  sub_100179DB4();
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void **)(v0 + 16);
  static os_signpost_type_t.end.getter();
  os_signpost(_:dso:log:name:signpostID:)();
  sub_100164944();
  v3();
  *uint64_t v2 = v1;
  type metadata accessor for SunriseSunsetDetailDataProcessor.GroupTaskResponse(0);
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  sub_1001627B4();
  return v4();
}

uint64_t sub_10028CA28(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return _swift_task_switch(sub_10028CA4C, 0, 0);
}

uint64_t sub_10028CA4C()
{
  sub_100179DB4();
  uint64_t v1 = v0[1].i64[1];
  type metadata accessor for Date();
  type metadata accessor for ElevationData();
  sub_10028FB58((unint64_t *)&qword_100E63978, (void (*)(uint64_t))&type metadata accessor for Date);
  int8x16_t v5 = v0[2];
  v0[1].i64[0] = Dictionary.init(dictionaryLiteral:)();
  sub_10017DF08(&qword_100E65768);
  uint64_t v2 = swift_task_alloc();
  v0[3].i64[0] = v2;
  *(int8x16_t *)(v2 + 16) = vextq_s8(v5, v5, 8uLL);
  *(void *)(v2 + 32) = v1;
  *(_OWORD *)(v2 + 40) = xmmword_100C27AD0;
  *(void *)(v2 + 56) = v0 + 1;
  uint64_t v3 = (void *)swift_task_alloc();
  v0[3].i64[1] = (uint64_t)v3;
  void *v3 = v0;
  v3[1] = sub_10028CBC8;
  sub_10018437C();
  return withTaskGroup<A, B>(of:returning:isolation:body:)();
}

uint64_t sub_10028CBC8()
{
  sub_1000A9DE8();
  sub_100119470();
  uint64_t v1 = *v0;
  sub_100179D88();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  sub_100127A5C();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_10028CCAC()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_10028CCC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_10017DF08(&qword_100E634B0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B7204(a1, (uint64_t)v10, &qword_100E634B0);
  uint64_t v11 = type metadata accessor for TaskPriority();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11) == 1)
  {
    sub_100178110((uint64_t)v10, &qword_100E634B0);
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v14 = v13;
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v12 = 0;
    uint64_t v14 = 0;
  }
  uint64_t v15 = *v4;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a2;
  *(void *)(v16 + 24) = a3;
  type metadata accessor for SunriseSunsetDetailDataProcessor.GroupTaskResponse(0);
  unint64_t v17 = (void *)(v14 | v12);
  if (v14 | v12)
  {
    v20[0] = 0;
    v20[1] = 0;
    unint64_t v17 = v20;
    v20[2] = v12;
    v20[3] = v14;
  }
  v19[1] = 1;
  v19[2] = v17;
  v19[3] = v15;
  swift_task_create();
  return swift_release();
}

uint64_t sub_10028CEA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_10017DF08(&qword_100E634B0);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B7204(a1, (uint64_t)v11, &qword_100E634B0);
  uint64_t v12 = type metadata accessor for TaskPriority();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12) == 1)
  {
    sub_100178110((uint64_t)v11, &qword_100E634B0);
  }
  else
  {
    TaskPriority.rawValue.getter();
    sub_100162F0C();
    v13();
  }
  if (*(void *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    uint64_t v14 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v16 = v15;
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v16 = 0;
  }
  uint64_t v17 = *v4;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a2;
  *(void *)(v18 + 24) = a3;
  sub_10017DF08(&qword_100E65748);
  unint64_t v19 = (void *)(v16 | v14);
  if (v16 | v14)
  {
    v22[0] = 0;
    v22[1] = 0;
    unint64_t v19 = v22;
    v22[2] = v14;
    v22[3] = v16;
  }
  v21[1] = 1;
  v21[2] = v19;
  v21[3] = v17;
  swift_task_create();
  return swift_release();
}

uint64_t sub_10028D088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[9] = a5;
  v6[10] = a6;
  v6[7] = a1;
  v6[8] = a4;
  uint64_t v7 = type metadata accessor for OSSignpostID();
  v6[11] = v7;
  v6[12] = *(void *)(v7 - 8);
  v6[13] = swift_task_alloc();
  return _swift_task_switch(sub_10028D14C, 0, 0);
}

uint64_t sub_10028D14C()
{
  sub_100109790();
  uint64_t v1 = v0[8];
  uint64_t v2 = *(void **)(v1 + 136);
  v0[14] = v2;
  id v3 = v2;
  OSSignpostID.init(log:)();
  static os_signpost_type_t.begin.getter();
  os_signpost(_:dso:log:name:signpostID:)();
  sub_10020D948(v1 + 16, (uint64_t)(v0 + 2));
  sub_1001B1E64(v0 + 2, v0[5]);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[15] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10028D250;
  return sub_1007CEDC4();
}

uint64_t sub_10028D250()
{
  sub_1000A9DE8();
  sub_100119470();
  uint64_t v1 = *v0;
  sub_100179D88();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100127A5C();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_10028D318()
{
  sub_100179DB4();
  uint64_t v1 = v0[13];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[12];
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)(v0 + 2));
  static os_signpost_type_t.end.getter();
  os_signpost(_:dso:log:name:signpostID:)();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  type metadata accessor for SunriseSunsetDetailDataProcessor.GroupTaskResponse(0);
  swift_storeEnumTagMultiPayload();
  swift_task_dealloc();
  sub_1001627B4();
  return v4();
}

uint64_t sub_10028D3EC(uint64_t a1, void (*a2)(char *, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v65 = a4;
  uint64_t v64 = a3;
  uint64_t v69 = a2;
  uint64_t v5 = type metadata accessor for Elevation();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v72 = v5;
  uint64_t v73 = v6;
  __chkstk_darwin(v5);
  uint64_t v63 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E63760);
  __chkstk_darwin(v8 - 8);
  uint64_t v62 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E65700);
  __chkstk_darwin(v10 - 8);
  uint64_t v66 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v58 - v13;
  uint64_t v16 = *(int *)(v15 + 56);
  uint64_t v17 = v15;
  uint64_t v74 = v15;
  uint64_t v18 = (char *)&v58 + v16 - v13;
  v60 = v18;
  uint64_t v19 = a1 + v16;
  uint64_t v70 = a1 + v16;
  uint64_t v20 = type metadata accessor for Date();
  uint64_t v76 = *(void *)(v20 - 8);
  uint64_t v22 = v76 + 16;
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v76 + 16);
  uint64_t v68 = a1;
  v21(v14, a1, v20);
  uint64_t v61 = v22;
  uint64_t v23 = v21;
  uint64_t v59 = (void (*)(void))v21;
  long long v75 = type metadata accessor for ElevationData;
  sub_10028FBA0(v19, (uint64_t)v18, (void (*)(void))type metadata accessor for ElevationData);
  uint64_t v24 = *(int *)(v17 + 56);
  uint64_t v25 = v66;
  uint64_t v26 = (uint64_t)&v66[v24];
  v23(v66, a1, v20);
  sub_10028FBA0(v19, v26, (void (*)(void))type metadata accessor for ElevationData);
  uint64_t v27 = v72;
  uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t))(v73 + 16);
  uint64_t v28 = (uint64_t)v62;
  v58(v62, v26, v72);
  sub_10028FBFC(v26, (void (*)(void))type metadata accessor for ElevationData);
  _s7Weather24LocationCompositionStateOwst_0(v28, 0, 1, v27);
  sub_1002450E8();
  uint64_t v69 = *(void (**)(char *, uint64_t))(v76 + 8);
  v76 += 8;
  v69(v25, v20);
  uint64_t v71 = type metadata accessor for ElevationData;
  sub_10028FBFC((uint64_t)v60, (void (*)(void))type metadata accessor for ElevationData);
  uint64_t v29 = *(int *)(v74 + 56);
  uint64_t v67 = v14;
  uint64_t v30 = (uint64_t)&v14[v29];
  uint64_t v31 = v59;
  ((void (*)(char *, uint64_t, uint64_t))v59)(v14, v68, v20);
  sub_10028FBA0(v70, v30, (void (*)(void))v75);
  uint64_t v32 = v63;
  uint64_t v33 = v72;
  v58(v63, v30, v72);
  sub_10028FBFC(v30, (void (*)(void))type metadata accessor for ElevationData);
  Elevation.degrees.getter();
  double v35 = v34;
  (*(void (**)(char *, uint64_t))(v73 + 8))(v32, v33);
  uint64_t v36 = (uint64_t)&v66[*(int *)(v74 + 56)];
  uint64_t v37 = v66;
  v31();
  uint64_t v38 = v31;
  uint64_t v39 = v70;
  sub_10028FBA0(v70, v36, (void (*)(void))v75);
  uint64_t v73 = type metadata accessor for ElevationData();
  swift_bridgeObjectRetain();
  sub_10028FBFC(v36, (void (*)(void))v71);
  sub_100248028(v35);
  uint64_t v40 = v37;
  uint64_t v41 = v69;
  v69(v37, v20);
  v42 = v67;
  v41(v67, v20);
  uint64_t v43 = v74;
  uint64_t v44 = (uint64_t)&v42[*(int *)(v74 + 56)];
  uint64_t v45 = v42;
  uint64_t v46 = v68;
  ((void (*)(char *, uint64_t, uint64_t))v38)(v45, v68, v20);
  uint64_t v47 = v39;
  uint64_t v48 = v39;
  os_log_type_t v49 = v75;
  sub_10028FBA0(v47, v44, (void (*)(void))v75);
  uint64_t v50 = (uint64_t)&v40[*(int *)(v43 + 56)];
  ((void (*)(char *, uint64_t, uint64_t))v38)(v40, v46, v20);
  sub_10028FBA0(v48, v50, (void (*)(void))v49);
  uint64_t v51 = (uint64_t *)(v50 + *(int *)(v73 + 24));
  uint64_t v52 = *v51;
  uint64_t v53 = v51[1];
  swift_bridgeObjectRetain();
  uint64_t v54 = v71;
  sub_10028FBFC(v50, (void (*)(void))v71);
  uint64_t v55 = v67;
  sub_100247FDC(v52, v53, v67);
  uint64_t v56 = v69;
  v69(v55, v20);
  v56(v40, v20);
  return sub_10028FBFC(v44, (void (*)(void))v54);
}

uint64_t sub_10028D93C(uint64_t a1, void (*a2)(char *, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v32 = a4;
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  uint64_t v6 = sub_10017DF08(&qword_100E65700);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v26 - v10;
  sub_100215188(a1, v31);
  uint64_t v12 = v31[0];
  int64_t v13 = v31[3];
  unint64_t v14 = v31[4];
  uint64_t v27 = v31[1];
  int64_t v28 = (unint64_t)(v31[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_15;
    }
    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v18 >= v28) {
      return swift_release();
    }
    unint64_t v19 = *(void *)(v27 + 8 * v18);
    if (!v19)
    {
      int64_t v20 = v13 + 2;
      if (v13 + 2 >= v28) {
        return swift_release();
      }
      unint64_t v19 = *(void *)(v27 + 8 * v20);
      if (v19) {
        goto LABEL_13;
      }
      int64_t v20 = v13 + 3;
      if (v13 + 3 >= v28) {
        return swift_release();
      }
      unint64_t v19 = *(void *)(v27 + 8 * v20);
      if (v19) {
        goto LABEL_13;
      }
      int64_t v20 = v13 + 4;
      if (v13 + 4 >= v28) {
        return swift_release();
      }
      unint64_t v19 = *(void *)(v27 + 8 * v20);
      if (v19)
      {
LABEL_13:
        int64_t v18 = v20;
      }
      else
      {
        int64_t v18 = v13 + 5;
        if (v13 + 5 >= v28) {
          return swift_release();
        }
        unint64_t v19 = *(void *)(v27 + 8 * v18);
        if (!v19)
        {
          int64_t v25 = v13 + 6;
          while (v25 < v28)
          {
            unint64_t v19 = *(void *)(v27 + 8 * v25++);
            if (v19)
            {
              int64_t v18 = v25 - 1;
              goto LABEL_14;
            }
          }
          return swift_release();
        }
      }
    }
LABEL_14:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v18 << 6);
    int64_t v13 = v18;
LABEL_15:
    uint64_t v21 = *(void *)(v12 + 48);
    uint64_t v22 = type metadata accessor for Date();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v11, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v17, v22);
    uint64_t v23 = *(void *)(v12 + 56);
    uint64_t v24 = type metadata accessor for ElevationData();
    sub_10028FBA0(v23 + *(void *)(*(void *)(v24 - 8) + 72) * v17, (uint64_t)&v11[*(int *)(v6 + 48)], (void (*)(void))type metadata accessor for ElevationData);
    sub_1002900B0((uint64_t)v11, (uint64_t)v8);
    sub_10028D3EC((uint64_t)v8, v29, v30, v32);
    uint64_t result = sub_100178110((uint64_t)v8, &qword_100E65700);
    if (v4) {
      return swift_release();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10028DBF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[30] = a7;
  v8[31] = a8;
  v8[28] = a5;
  v8[29] = a6;
  v8[26] = a3;
  v8[27] = a4;
  v8[25] = a2;
  v8[32] = *(void *)(type metadata accessor for ElevationData() - 8);
  v8[33] = swift_task_alloc();
  v8[34] = swift_task_alloc();
  sub_10017DF08(&qword_100E65780);
  v8[35] = swift_task_alloc();
  uint64_t v9 = sub_10017DF08(&qword_100E65788);
  v8[36] = v9;
  v8[37] = *(void *)(v9 - 8);
  v8[38] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for Location();
  v8[39] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v8[40] = v11;
  v8[41] = *(void *)(v11 + 64);
  v8[42] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for Date();
  v8[43] = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  v8[44] = v13;
  v8[45] = *(void *)(v13 + 64);
  v8[46] = swift_task_alloc();
  v8[47] = swift_task_alloc();
  sub_10017DF08(&qword_100E634B0);
  v8[48] = swift_task_alloc();
  v8[49] = swift_task_alloc();
  v8[50] = swift_task_alloc();
  v8[51] = swift_task_alloc();
  return _swift_task_switch(sub_10028DE88, 0, 0);
}

uint64_t sub_10028DE88()
{
  if (*(uint64_t *)(v0 + 232) < 1)
  {
LABEL_31:
    __break(1u);
  }
  else
  {
    uint64_t v39 = *(void *)(v0 + 352) + 32;
    uint64_t v40 = *(void *)(v0 + 352);
    uint64_t v1 = 1;
    while (1)
    {
      uint64_t v2 = *(void *)(v0 + 240);
      if ((unsigned __int128)((v1 - 1) * (__int128)v2) >> 64 != ((v1 - 1) * v2) >> 63)
      {
        __break(1u);
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      uint64_t v3 = v1 * v2;
      if ((unsigned __int128)(v1 * (__int128)v2) >> 64 != (v1 * v2) >> 63) {
        goto LABEL_30;
      }
      uint64_t v49 = (v1 - 1) * v2;
      if (v1 == *(void *)(v0 + 232)) {
        break;
      }
      uint64_t v41 = v1;
      uint64_t v4 = *(void *)(v0 + 392);
      uint64_t v47 = *(void *)(v0 + 384);
      uint64_t v5 = *(void *)(v0 + 336);
      uint64_t v45 = *(void *)(v0 + 208);
      uint64_t v44 = type metadata accessor for TaskPriority();
      _s7Weather24LocationCompositionStateOwst_0(v4, 1, 1, v44);
      sub_10008B8B4();
      v6();
      sub_10008B8B4();
      v7();
      sub_100181E18();
      uint64_t v8 = (void *)swift_allocObject();
      v8[2] = 0;
      v8[3] = 0;
      v8[4] = v45;
      sub_1001190D4();
      v9();
      sub_1001190D4();
      v10();
      *(void *)((char *)v8 + v5) = v49;
      *(void *)((char *)v8 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)) = v3;
      sub_1001B7204(v4, v47, &qword_100E634B0);
      LODWORD(v4) = _s7Weather24LocationCompositionStateOwet_0(v47, 1, v44);
      swift_retain();
      if (v4 == 1)
      {
        sub_100178110(*(void *)(v0 + 384), &qword_100E634B0);
      }
      else
      {
        TaskPriority.rawValue.getter();
        sub_100162F0C();
        v11();
      }
      if (v8[2])
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
        uint64_t v14 = v13;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v12 = 0;
        uint64_t v14 = 0;
      }
      uint64_t v15 = **(void **)(v0 + 200);
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = &unk_100E65798;
      *(void *)(v16 + 24) = v8;
      sub_10017DF08(&qword_100E65768);
      uint64_t v17 = v14 | v12;
      if (v14 | v12)
      {
        uint64_t v17 = v0 + 72;
        *(void *)(v0 + 72) = 0;
        *(void *)(v0 + 80) = 0;
        *(void *)(v0 + 88) = v12;
        *(void *)(v0 + 96) = v14;
      }
      uint64_t v18 = *(void *)(v0 + 392);
      *(void *)(v0 + 136) = 1;
      *(void *)(v0 + 144) = v17;
      *(void *)(v0 + 152) = v15;
      swift_task_create();
      swift_release();
      sub_100178110(v18, &qword_100E634B0);
      uint64_t v1 = v41 + 1;
      if (__OFADD__(v41, 1))
      {
        __break(1u);
        break;
      }
    }
    uint64_t v19 = *(void *)(v0 + 408);
    uint64_t v48 = *(void *)(v0 + 400);
    uint64_t v42 = *(void *)(v0 + 344);
    uint64_t v43 = *(void *)(v0 + 376);
    uint64_t v20 = *(void *)(v0 + 312);
    uint64_t v46 = *(void *)(v0 + 208);
    uint64_t v21 = type metadata accessor for TaskPriority();
    _s7Weather24LocationCompositionStateOwst_0(v19, 1, 1, v21);
    sub_10008B8B4();
    v22();
    sub_10008B8B4();
    v23();
    unint64_t v24 = (*(unsigned __int8 *)(v40 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    sub_100181E18();
    int64_t v25 = (char *)swift_allocObject();
    *((void *)v25 + 2) = 0;
    *((void *)v25 + 3) = 0;
    *((void *)v25 + 4) = v46;
    uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v40 + 32);
    *(void *)(v0 + 416) = v26;
    *(void *)(v0 + 424) = v39 & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
    v26(&v25[v24], v43, v42);
    sub_1001190D4();
    v27();
    *(void *)&v25[v20] = v49;
    sub_1001B7204(v19, v48, &qword_100E634B0);
    int v28 = _s7Weather24LocationCompositionStateOwet_0(v48, 1, v21);
    swift_retain();
    if (v28 == 1)
    {
      sub_100178110(*(void *)(v0 + 400), &qword_100E634B0);
    }
    else
    {
      TaskPriority.rawValue.getter();
      sub_100162F0C();
      v29();
    }
    if (*((void *)v25 + 2))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v30 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v32 = v31;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v30 = 0;
      uint64_t v32 = 0;
    }
    uint64_t v33 = **(void **)(v0 + 200);
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = &unk_100E657B8;
    *(void *)(v34 + 24) = v25;
    sub_10017DF08(&qword_100E65768);
    if (v32 | v30)
    {
      uint64_t v35 = v0 + 104;
      *(void *)(v0 + 104) = 0;
      *(void *)(v0 + 112) = 0;
      *(void *)(v0 + 120) = v30;
      *(void *)(v0 + 128) = v32;
    }
    else
    {
      uint64_t v35 = 0;
    }
    uint64_t v36 = *(void *)(v0 + 408);
    *(void *)(v0 + 160) = 1;
    *(void *)(v0 + 168) = v35;
    *(void *)(v0 + 176) = v33;
    swift_task_create();
    swift_release();
    sub_100178110(v36, &qword_100E634B0);
    TaskGroup.makeAsyncIterator()();
    uint64_t v37 = (void *)swift_task_alloc();
    *(void *)(v0 + 432) = v37;
    *uint64_t v37 = v0;
    v37[1] = sub_10028E550;
    sub_100127A5C();
  }
  return TaskGroup.Iterator.next(isolation:)();
}

uint64_t sub_10028E550()
{
  sub_1000A9DE8();
  sub_100119470();
  uint64_t v1 = *v0;
  sub_100179D88();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_100127A5C();
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_10028E618()
{
  uint64_t v1 = *(void *)(v0 + 184);
  if (!v1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 296) + 8))(*(void *)(v0 + 304), *(void *)(v0 + 288));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    sub_1001627B4();
    sub_10017C7B4();
    __asm { BRAA            X1, X16 }
  }
  uint64_t v2 = *(void *)(v0 + 280);
  uint64_t v3 = **(void **)(v0 + 248);
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v0 + 192) = v3;
  sub_1007BB3EC(v1, sub_100290040, 0);
  swift_bridgeObjectRetain();
  sub_1007BB42C(v2);
  uint64_t v5 = sub_10017DF08(&qword_100E657C8);
  if (_s7Weather24LocationCompositionStateOwet_0(v2, 1, v5) != 1)
  {
    while (1)
    {
      uint64_t v6 = *(void *)(v0 + 272);
      uint64_t v7 = *(void *)(v0 + 280) + *(int *)(v5 + 48);
      (*(void (**)(void))(v0 + 416))(*(void *)(v0 + 368));
      sub_10028FFE4(v7, v6, (void (*)(void))type metadata accessor for ElevationData);
      uint64_t v8 = *(void *)(v0 + 192);
      unint64_t v10 = sub_100246B34();
      uint64_t v11 = *(void *)(v8 + 16);
      BOOL v12 = (v9 & 1) == 0;
      uint64_t v13 = v11 + v12;
      if (__OFADD__(v11, v12))
      {
        __break(1u);
LABEL_26:
        __break(1u);
        return TaskGroup.Iterator.next(isolation:)();
      }
      char v14 = v9;
      if (*(void *)(v8 + 24) >= v13)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if (v9) {
            goto LABEL_10;
          }
        }
        else
        {
          sub_10017DF08(&qword_100E657D0);
          _NativeDictionary.copy()();
          if (v14) {
            goto LABEL_10;
          }
        }
      }
      else
      {
        sub_100714494(v13, isUniquelyReferenced_nonNull_native & 1);
        unint64_t v15 = sub_100246B34();
        if ((v14 & 1) != (v16 & 1))
        {
          sub_10017C7B4();
          return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
        }
        unint64_t v10 = v15;
        if (v14)
        {
LABEL_10:
          uint64_t v17 = *(void *)(v0 + 368);
          uint64_t v19 = *(void *)(v0 + 344);
          uint64_t v18 = *(void *)(v0 + 352);
          uint64_t v20 = *(void *)(v0 + 264);
          uint64_t v21 = *(void *)(v0 + 256);
          sub_10028FFE4(*(void *)(v0 + 272), v20, (void (*)(void))type metadata accessor for ElevationData);
          (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
          sub_100290BC8(v20, *(void *)(*(void *)(v0 + 192) + 56) + *(void *)(v21 + 72) * v10);
          goto LABEL_14;
        }
      }
      uint64_t v22 = *(void (**)(unint64_t, uint64_t, uint64_t))(v0 + 416);
      uint64_t v23 = *(void *)(v0 + 368);
      uint64_t v24 = *(void *)(v0 + 344);
      uint64_t v25 = *(void *)(v0 + 352);
      uint64_t v26 = *(void *)(v0 + 272);
      uint64_t v27 = *(void *)(v0 + 256);
      int v28 = *(void **)(v0 + 192);
      v28[(v10 >> 6) + 8] |= 1 << v10;
      v22(v28[6] + *(void *)(v25 + 72) * v10, v23, v24);
      sub_10028FFE4(v26, v28[7] + *(void *)(v27 + 72) * v10, (void (*)(void))type metadata accessor for ElevationData);
      uint64_t v29 = v28[2];
      BOOL v30 = __OFADD__(v29, 1);
      uint64_t v31 = v29 + 1;
      if (v30) {
        goto LABEL_26;
      }
      v28[2] = v31;
LABEL_14:
      uint64_t v32 = *(void *)(v0 + 280);
      sub_1007BB42C(v32);
      uint64_t v5 = sub_10017DF08(&qword_100E657C8);
      char isUniquelyReferenced_nonNull_native = 1;
      if (_s7Weather24LocationCompositionStateOwet_0(v32, 1, v5) == 1)
      {
        uint64_t v3 = *(void *)(v0 + 192);
        break;
      }
    }
  }
  uint64_t v33 = *(void **)(v0 + 248);
  swift_bridgeObjectRelease();
  sub_10023B8FC();
  swift_release();
  swift_bridgeObjectRelease();
  *uint64_t v33 = v3;
  swift_bridgeObjectRelease();
  uint64_t v34 = (void *)swift_task_alloc();
  *(void *)(v0 + 432) = v34;
  void *v34 = v0;
  v34[1] = sub_10028E550;
  sub_100127A5C();
  sub_10017C7B4();
  return TaskGroup.Iterator.next(isolation:)();
}

uint64_t sub_10028EA80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v78 = a4;
  uint64_t v79 = a5;
  uint64_t v66 = a2;
  uint64_t v7 = type metadata accessor for ElevationData();
  uint64_t v67 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v84 = (uint64_t)v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v59 - v10;
  uint64_t v75 = type metadata accessor for TimeZone();
  uint64_t countAndFlagsBits = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v74 = (char *)v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Elevation();
  uint64_t v81 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  unint64_t v15 = (char *)v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for Calendar();
  v80 = *(void (***)(char *, char *, uint64_t))(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v72 = (char *)v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  v85 = (char *)v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v83 = (char *)v59 - v21;
  uint64_t v62 = type metadata accessor for OSSignpostID();
  uint64_t v61 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v23 = (char *)v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v24 = *(id *)(a3 + 136);
  OSSignpostID.init(log:)();
  static os_signpost_type_t.begin.getter();
  v59[1] = v24;
  v60 = v23;
  os_signpost(_:dso:log:name:signpostID:)();
  sub_10028FB58((unint64_t *)&qword_100E63978, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v76 = v7;
  uint64_t v25 = (void *)Dictionary.init(dictionaryLiteral:)();
  uint64_t v77 = a3;
  uint64_t v70 = (void (**)(char *, uint64_t))(v80 + 1);
  uint64_t v71 = (void *)(a3 + 56);
  uint64_t v68 = (void (**)(char *, char *, uint64_t))(v81 + 16);
  uint64_t v69 = (void (**)(char *, uint64_t))(countAndFlagsBits + 8);
  v80 = (void (**)(char *, char *, uint64_t))(v18 + 16);
  uint64_t v63 = v18;
  uint64_t v65 = (void (**)(char *, uint64_t))(v18 + 8);
  uint64_t v64 = (void (**)(char *, uint64_t))(v81 + 8);
  while (1)
  {
    uint64_t v26 = v72;
    static Calendar.current.getter();
    uint64_t v27 = v83;
    uint64_t v81 = a1;
    Date.wc_addMinutes(_:calendar:)();
    (*v70)(v26, v73);
    sub_1001B1E64(v71, *(void *)(v77 + 80));
    dispatch thunk of SunElevationCalculatorType.getElevation(for:on:)();
    Elevation.degrees.getter();
    v86 = v28;
    sub_10014F1B0();
    Swift::String v29 = BinaryFloatingPoint.formatted()();
    uint64_t countAndFlagsBits = v29._countAndFlagsBits;
    uint64_t v30 = v17;
    uint64_t v31 = v15;
    uint64_t v32 = v11;
    uint64_t v33 = v13;
    uint64_t v34 = v74;
    Location.timeZone.getter();
    uint64_t v35 = Date.formattedHours(timeZone:forAccessibility:)();
    uint64_t v37 = v36;
    uint64_t v38 = v34;
    uint64_t v13 = v33;
    uint64_t v11 = v32;
    unint64_t v15 = v31;
    uint64_t v17 = v30;
    (*v69)(v38, v75);
    (*v68)(v11, v15, v13);
    uint64_t v39 = v76;
    uint64_t v40 = (uint64_t *)&v11[*(int *)(v76 + 20)];
    *uint64_t v40 = countAndFlagsBits;
    v40[1] = (uint64_t)v29._object;
    uint64_t v41 = (uint64_t *)&v11[*(int *)(v39 + 24)];
    *uint64_t v41 = v35;
    v41[1] = v37;
    uint64_t v42 = *v80;
    (*v80)(v85, v27, v30);
    sub_10028FBA0((uint64_t)v11, v84, (void (*)(void))type metadata accessor for ElevationData);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v86 = v25;
    unint64_t v44 = sub_100246B34();
    uint64_t v46 = v25[2];
    BOOL v47 = (v45 & 1) == 0;
    Swift::Int v48 = v46 + v47;
    if (__OFADD__(v46, v47)) {
      break;
    }
    unint64_t v49 = v44;
    char v50 = v45;
    sub_10017DF08(&qword_100E657D0);
    if (_NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v48))
    {
      unint64_t v51 = sub_100246B34();
      if ((v50 & 1) != (v52 & 1)) {
        goto LABEL_17;
      }
      unint64_t v49 = v51;
    }
    uint64_t v25 = v86;
    if (v50)
    {
      sub_100290BC8(v84, v86[7] + *(void *)(v67 + 72) * v49);
    }
    else
    {
      v86[(v49 >> 6) + 8] |= 1 << v49;
      v42((char *)(v25[6] + *(void *)(v63 + 72) * v49), v85, v17);
      sub_10028FFE4(v84, v25[7] + *(void *)(v67 + 72) * v49, (void (*)(void))type metadata accessor for ElevationData);
      uint64_t v53 = v25[2];
      BOOL v54 = __OFADD__(v53, 1);
      uint64_t v55 = v53 + 1;
      if (v54) {
        goto LABEL_16;
      }
      v25[2] = v55;
      uint64_t v25 = v86;
    }
    swift_bridgeObjectRelease();
    uint64_t v56 = *v65;
    (*v65)(v85, v17);
    sub_10028FBFC((uint64_t)v11, (void (*)(void))type metadata accessor for ElevationData);
    (*v64)(v15, v13);
    v56(v83, v17);
    if (v66 == v81) {
      goto LABEL_14;
    }
    a1 = v81 + 1;
    if (__OFADD__(v81, 1))
    {
      __break(1u);
LABEL_14:
      static os_signpost_type_t.end.getter();
      uint64_t v57 = v60;
      os_signpost(_:dso:log:name:signpostID:)();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v57, v62);
      return (uint64_t)v25;
    }
  }
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_10028F2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  return _swift_task_switch(sub_10028F2CC, 0, 0);
}

uint64_t sub_10028F2CC()
{
  sub_1000A9DE8();
  uint64_t result = v0[6];
  if (result > 1440)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = (uint64_t *)v0[2];
    *uint64_t v2 = sub_10028EA80(result, 1440, v0[3], v0[4], v0[5]);
    sub_1001627B4();
    return v3();
  }
  return result;
}

uint64_t sub_10028F340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[6] = a7;
  v8[7] = a8;
  v8[4] = a5;
  v8[5] = a6;
  v8[2] = a1;
  v8[3] = a4;
  return _swift_task_switch(sub_10028F368, 0, 0);
}

uint64_t sub_10028F368()
{
  sub_1000A9DE8();
  uint64_t result = v0[6];
  uint64_t v2 = v0[7];
  if (v2 < result)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = (uint64_t *)v0[2];
    uint64_t *v3 = sub_10028EA80(result, v2, v0[3], v0[4], v0[5]);
    sub_1001627B4();
    return v4();
  }
  return result;
}

uint64_t sub_10028F3D8()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 56);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 96);

  swift_release();
  return v0;
}

uint64_t sub_10028F418()
{
  sub_10028F3D8();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SunriseSunsetDetailDataProcessor()
{
  return self;
}

uint64_t *sub_10028F470(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Location();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_10028F578(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for Location();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_10028F620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_10028F6D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_10028F790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_10028F848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_10028F900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10028F914);
}

uint64_t sub_10028F914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    uint64_t v8 = type metadata accessor for Location();
    uint64_t v9 = a1 + *(int *)(a3 + 20);
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_10028F990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10028F9A4);
}

uint64_t sub_10028F9A4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    uint64_t v10 = type metadata accessor for Location();
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  return _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for SunriseSunsetDetailDataProcessor.ProcessingKey(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E65680);
}

uint64_t sub_10028FA48()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Location();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_10028FB10()
{
  return sub_10028FB58(&qword_100E656B8, (void (*)(uint64_t))type metadata accessor for SunriseSunsetDetailDataProcessor.ProcessingKey);
}

uint64_t sub_10028FB58(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10028FBA0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  sub_10008B8B4();
  v4();
  return a2;
}

uint64_t sub_10028FBFC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_10028FC50(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_10029124C;
  return v6(a1);
}

uint64_t sub_10028FD2C(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_10028FE08;
  return v6(a1);
}

uint64_t sub_10028FE08()
{
  sub_1000A9DE8();
  sub_100119470();
  uint64_t v1 = *v0;
  sub_100179D88();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  sub_1001627B4();
  return v3();
}

unint64_t sub_10028FECC()
{
  unint64_t result = qword_100E656E8;
  if (!qword_100E656E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100E656E8);
  }
  return result;
}

uint64_t type metadata accessor for SunriseSunsetDetailDataProcessor.GroupTaskResponse(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E65850);
}

uint64_t sub_10028FF38()
{
  sub_10019DDF8();
  sub_1001722C0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_100162FCC(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100214FB0;
  sub_1001D173C();
  return sub_10028BD98(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_10028FFE4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  sub_1001190D4();
  v4();
  return a2;
}

uint64_t sub_100290040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1 + *(int *)(sub_10017DF08(&qword_100E65700) + 48);
  uint64_t v5 = a2 + *(int *)(sub_10017DF08(&qword_100E657C8) + 48);

  return sub_1007BAFC0(a2, v5, a1, v4);
}

uint64_t sub_1002900B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E65700);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10029011C()
{
  sub_100179DB4();
  uint64_t v0 = type metadata accessor for Location();
  sub_100164920(v0);
  uint64_t v1 = type metadata accessor for Date();
  sub_1001627C0(v1);
  sub_100164EF0();
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)sub_100184914(v2);
  void *v3 = v4;
  v3[1] = sub_100214FB0;
  uint64_t v5 = sub_100185128();
  return sub_10028C6E4(v5, v6, v7, v8, v9, v10);
}

uint64_t sub_100290200()
{
  sub_100179DB4();
  uint64_t v0 = type metadata accessor for Location();
  sub_100164920(v0);
  uint64_t v1 = type metadata accessor for Date();
  sub_1001627C0(v1);
  sub_100164EF0();
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)sub_100184914(v2);
  void *v3 = v4;
  v3[1] = sub_100218DF8;
  uint64_t v5 = sub_100185128();
  return sub_10028D088(v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1002902E0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100290318()
{
  sub_100109790();
  sub_10018341C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_100162FCC(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100218DF8;
  uint64_t v3 = sub_100179D98();
  return v4(v3);
}

uint64_t sub_1002903AC()
{
  sub_100109790();
  sub_10018341C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_100162FCC(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100214FB0;
  uint64_t v3 = sub_100179D98();
  return v4(v3);
}

uint64_t sub_100290440()
{
  sub_10019DDF8();
  sub_1001722C0();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_100162FCC(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100214FB0;
  sub_1001D173C();
  return sub_10028DBF0(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_1002904EC()
{
  sub_100162EA0();
  type metadata accessor for Date();
  sub_100179C0C();
  type metadata accessor for Location();
  sub_100179C0C();
  sub_100164950();
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v0 = sub_100188F28();
  v1(v0);
  sub_100164938();
  v2();
  sub_100162694();
  return swift_deallocObject();
}

uint64_t sub_1002905DC()
{
  sub_10019DDF8();
  uint64_t v0 = type metadata accessor for Date();
  sub_100164920(v0);
  uint64_t v1 = type metadata accessor for Location();
  sub_100164920(v1);
  sub_100191108();
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = (void *)sub_100184914(v2);
  void *v3 = v4;
  v3[1] = sub_100214FB0;
  sub_1001D173C();
  return sub_10028F340(v5, v6, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_100290710(uint64_t a1, int *a2)
{
  *(void *)(v2 + 24) = a1;
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 32) = v3;
  void *v3 = v2;
  v3[1] = sub_1002907F0;
  return v5(v2 + 16);
}

uint64_t sub_1002907F0()
{
  sub_100109790();
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 24);
  uint64_t v3 = *v0;
  sub_100179D88();
  *uint64_t v4 = v3;
  swift_task_dealloc();
  *uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v5 = *(uint64_t (**)(void))(v3 + 8);
  return v5();
}

uint64_t sub_100290914()
{
  sub_100109790();
  sub_10018341C();
  uint64_t v0 = swift_task_alloc();
  uint64_t v1 = (void *)sub_100162FCC(v0);
  *uint64_t v1 = v2;
  v1[1] = sub_100214FB0;
  uint64_t v3 = sub_100179D98();
  return v4(v3);
}

uint64_t sub_1002909A8()
{
  sub_100162EA0();
  type metadata accessor for Date();
  sub_100179C0C();
  type metadata accessor for Location();
  sub_100179C0C();
  sub_100164950();
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v0 = sub_100188F28();
  v1(v0);
  sub_100164938();
  v2();
  sub_100162694();
  return swift_deallocObject();
}

uint64_t sub_100290A90()
{
  sub_10019DDF8();
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for Date();
  sub_100164920(v6);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = type metadata accessor for Location();
  sub_100164920(v11);
  sub_100191108();
  uint64_t v13 = *(void *)(v0 + v12);
  uint64_t v14 = swift_task_alloc();
  unint64_t v15 = (void *)sub_100184914(v14);
  *unint64_t v15 = v16;
  v15[1] = sub_100214FB0;
  return sub_10028F2A4(v5, v10, v1, v2, v8, v3, v13);
}

uint64_t sub_100290BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ElevationData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t *sub_100290C2C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = *(int *)(type metadata accessor for SunriseSunsetMonthlyViewModel() + 20);
      unint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = type metadata accessor for WeatherDescription();
      uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
      swift_bridgeObjectRetain();
      v11(v8, v9, v10);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100290D60(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v4 = a1 + *(int *)(type metadata accessor for SunriseSunsetMonthlyViewModel() + 20);
    uint64_t v5 = type metadata accessor for WeatherDescription();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  return result;
}

void *sub_100290DF8(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = *(int *)(type metadata accessor for SunriseSunsetMonthlyViewModel() + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = type metadata accessor for WeatherDescription();
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
    swift_bridgeObjectRetain();
    v9(v6, v7, v8);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_100290ED4(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_10028FBFC((uint64_t)a1, (void (*)(void))type metadata accessor for SunriseSunsetDetailDataProcessor.GroupTaskResponse);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = *(int *)(type metadata accessor for SunriseSunsetMonthlyViewModel() + 20);
      uint64_t v6 = (char *)a1 + v5;
      uint64_t v7 = (char *)a2 + v5;
      uint64_t v8 = type metadata accessor for WeatherDescription();
      uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
      swift_bridgeObjectRetain();
      v9(v6, v7, v8);
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_100290FD4(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v6 = *(int *)(type metadata accessor for SunriseSunsetMonthlyViewModel() + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for WeatherDescription();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1002910A8(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10028FBFC((uint64_t)a1, (void (*)(void))type metadata accessor for SunriseSunsetDetailDataProcessor.GroupTaskResponse);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v6 = *(int *)(type metadata accessor for SunriseSunsetMonthlyViewModel() + 20);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      uint64_t v9 = type metadata accessor for WeatherDescription();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1002911A8()
{
  uint64_t result = type metadata accessor for SunriseSunsetMonthlyViewModel();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

char *sub_100291250(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for TimeZone();
    (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = (int *)type metadata accessor for CalendarViewModel(0);
    uint64_t v9 = v8[5];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for Date();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    v13(v10, v11, v12);
    v13(&a1[v8[6]], (char *)a2 + v8[6], v12);
    v13(&a1[v8[7]], (char *)a2 + v8[7], v12);
    uint64_t v14 = v8[8];
    unint64_t v15 = &a1[v14];
    uint64_t v16 = (char *)a2 + v14;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2 + v14, 1, v12))
    {
      uint64_t v17 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v12);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v12);
    }
    *(void *)&a1[v8[9]] = *(uint64_t *)((char *)a2 + v8[9]);
    uint64_t v19 = v8[10];
    uint64_t v20 = &a1[v19];
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = type metadata accessor for MoonPhase.Hemisphere();
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
    swift_bridgeObjectRetain();
    v23(v20, v21, v22);
    uint64_t v24 = *(int *)(a3 + 20);
    uint64_t v25 = &a1[v24];
    uint64_t v26 = (char *)a2 + v24;
    uint64_t v27 = type metadata accessor for OverviewTableViewModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  }
  return a1;
}

uint64_t sub_1002914DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = (int *)type metadata accessor for CalendarViewModel(0);
  uint64_t v6 = a1 + v5[5];
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(a1 + v5[6], v7);
  v8(a1 + v5[7], v7);
  uint64_t v9 = a1 + v5[8];
  if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v7)) {
    v8(v9, v7);
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = a1 + v5[10];
  uint64_t v11 = type metadata accessor for MoonPhase.Hemisphere();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = a1 + *(int *)(a2 + 20);
  uint64_t v13 = type metadata accessor for OverviewTableViewModel();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);

  return v14(v12, v13);
}

uint64_t sub_100291698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for CalendarViewModel(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 16);
  v12(v9, v10, v11);
  v12((void *)(a1 + v7[6]), (const void *)(a2 + v7[6]), v11);
  v12((void *)(a1 + v7[7]), (const void *)(a2 + v7[7]), v11);
  uint64_t v13 = v7[8];
  uint64_t v14 = (void *)(a1 + v13);
  unint64_t v15 = (const void *)(a2 + v13);
  if (_s7Weather24LocationCompositionStateOwet_0(a2 + v13, 1, v11))
  {
    uint64_t v16 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v11);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v11);
  }
  *(void *)(a1 + v7[9]) = *(void *)(a2 + v7[9]);
  uint64_t v17 = v7[10];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = type metadata accessor for MoonPhase.Hemisphere();
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16);
  swift_bridgeObjectRetain();
  v21(v18, v19, v20);
  uint64_t v22 = *(int *)(a3 + 20);
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = type metadata accessor for OverviewTableViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
  return a1;
}

uint64_t sub_1002918D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a1, a2, v5);
  uint64_t v6 = (int *)type metadata accessor for CalendarViewModel(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 24);
  v12(v8, v9, v10);
  v12((void *)(a1 + v6[6]), (const void *)(a2 + v6[6]), v10);
  v12((void *)(a1 + v6[7]), (const void *)(a2 + v6[7]), v10);
  uint64_t v13 = v6[8];
  uint64_t v14 = (void *)(a1 + v13);
  unint64_t v15 = (const void *)(a2 + v13);
  int v16 = _s7Weather24LocationCompositionStateOwet_0(a1 + v13, 1, v10);
  int v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v10);
  if (!v16)
  {
    if (!v17)
    {
      v12(v14, v15, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v14, v10);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v14, v15, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v10);
LABEL_7:
  *(void *)(a1 + v6[9]) = *(void *)(a2 + v6[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = v6[10];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = type metadata accessor for MoonPhase.Hemisphere();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = *(int *)(a3 + 20);
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = type metadata accessor for OverviewTableViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
  return a1;
}

uint64_t sub_100291B8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for CalendarViewModel(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  v12((void *)(a1 + v7[6]), (const void *)(a2 + v7[6]), v11);
  v12((void *)(a1 + v7[7]), (const void *)(a2 + v7[7]), v11);
  uint64_t v13 = v7[8];
  uint64_t v14 = (void *)(a1 + v13);
  unint64_t v15 = (const void *)(a2 + v13);
  if (_s7Weather24LocationCompositionStateOwet_0(a2 + v13, 1, v11))
  {
    uint64_t v16 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v11);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v11);
  }
  *(void *)(a1 + v7[9]) = *(void *)(a2 + v7[9]);
  uint64_t v17 = v7[10];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = type metadata accessor for MoonPhase.Hemisphere();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  uint64_t v21 = *(int *)(a3 + 20);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = type metadata accessor for OverviewTableViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
  return a1;
}

uint64_t sub_100291DBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a1, a2, v5);
  uint64_t v6 = (int *)type metadata accessor for CalendarViewModel(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v12((void *)(a1 + v6[6]), (const void *)(a2 + v6[6]), v10);
  v12((void *)(a1 + v6[7]), (const void *)(a2 + v6[7]), v10);
  uint64_t v13 = v6[8];
  uint64_t v14 = (void *)(a1 + v13);
  unint64_t v15 = (const void *)(a2 + v13);
  int v16 = _s7Weather24LocationCompositionStateOwet_0(a1 + v13, 1, v10);
  int v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v10);
  if (!v16)
  {
    if (!v17)
    {
      v12(v14, v15, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v14, v10);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v14, v15, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v10);
LABEL_7:
  *(void *)(a1 + v6[9]) = *(void *)(a2 + v6[9]);
  swift_bridgeObjectRelease();
  uint64_t v19 = v6[10];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = type metadata accessor for MoonPhase.Hemisphere();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 40))(v20, v21, v22);
  uint64_t v23 = *(int *)(a3 + 20);
  uint64_t v24 = a1 + v23;
  uint64_t v25 = a2 + v23;
  uint64_t v26 = type metadata accessor for OverviewTableViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t sub_10029206C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100292080);
}

uint64_t sub_100292080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for CalendarViewModel(0);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    uint64_t v8 = type metadata accessor for OverviewTableViewModel();
    uint64_t v9 = a1 + *(int *)(a3 + 20);
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_1002920FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100292110);
}

uint64_t sub_100292110(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for CalendarViewModel(0);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    uint64_t v10 = type metadata accessor for OverviewTableViewModel();
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  return _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for MoonCalendarViewModel()
{
  uint64_t result = qword_100E658E0;
  if (!qword_100E658E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1002921DC()
{
  uint64_t result = type metadata accessor for CalendarViewModel(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for OverviewTableViewModel();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1002922A4(uint64_t a1, uint64_t a2)
{
  if ((sub_1002779A0(a1, a2) & 1) == 0) {
    return 0;
  }
  type metadata accessor for MoonCalendarViewModel();

  return static OverviewTableViewModel.== infix(_:_:)();
}

uint64_t sub_100292308@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = sub_10017DF08(&qword_100E65920);
  a1[4] = sub_10029244C();
  sub_100170694(a1);
  type metadata accessor for MoonCalendarViewModel();
  return ShortDescription.init(name:_:)();
}

uint64_t sub_1002923A8@<X0>(uint64_t *a1@<X8>)
{
  return sub_100292308(a1);
}

uint64_t sub_1002923C0()
{
  sub_1002924A0(&qword_100E65930);

  return ShortDescribable.description.getter();
}

uint64_t sub_100292418()
{
  return sub_1002924A0(&qword_100E65918);
}

unint64_t sub_10029244C()
{
  unint64_t result = qword_100E65928;
  if (!qword_100E65928)
  {
    sub_10018C6DC(&qword_100E65920);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65928);
  }
  return result;
}

uint64_t sub_1002924A0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for MoonCalendarViewModel();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t assignWithTake for LazyUntilDismissedViewModifier(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LazyUntilDismissedViewModifier(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LazyUntilDismissedViewModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

uint64_t sub_1002925F4()
{
  if (qword_100E62788 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1002102B0(v0, (uint64_t)qword_100F51DB0);
  unint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Lazy: Appeared", v3, 2u);
    swift_slowDealloc();
  }

  sub_10017DF08(&qword_100E65950);
  State.wrappedValue.setter();
  return State.wrappedValue.setter();
}

void sub_100292724()
{
  if (sub_10000DD3C())
  {
    if (qword_100E62788 != -1) {
      swift_once();
    }
    uint64_t v0 = type metadata accessor for Logger();
    sub_1002102B0(v0, (uint64_t)qword_100F51DB0);
    oslog = Logger.logObject.getter();
    os_log_type_t v1 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(oslog, v1))
    {
      os_log_type_t v2 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v2 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v1, "Lazy: Will dismiss presentation. Already loading.", v2, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    if (qword_100E62788 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_1002102B0(v3, (uint64_t)qword_100F51DB0);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Lazy: Will dismiss presentation. Starting to load.", v6, 2u);
      swift_slowDealloc();
    }

    sub_10017DF08(&qword_100E65950);
    State.wrappedValue.setter();
  }
}

void sub_100292910()
{
}

uint64_t sub_10029291C()
{
  return sub_1002925F4();
}

uint64_t sub_100292924()
{
  return sub_1001246C8(&qword_100E65990, &qword_100E65948);
}

uint64_t initializeBufferWithCopyOfBuffer for ListMenuViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  id v5 = v3;
  return a1;
}

void destroy for ConfiguredUnitState(id *a1)
{
}

uint64_t assignWithCopy for ListMenuViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v7;
  return a1;
}

uint64_t assignWithTake for ListMenuViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ListMenuViewModel(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 17))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ListMenuViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListMenuViewModel()
{
  return &type metadata for ListMenuViewModel;
}

uint64_t sub_100292ACC(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (static NSObject.== infix(_:_:)())
  {
    if (a3)
    {
      if (a6) {
        return 1;
      }
    }
    else if ((a6 & 1) == 0 && a2 == a5)
    {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_100292B60(uint64_t a1, uint64_t a2)
{
  return sub_100292ACC(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_100292B7C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C25ED0;
  *(void *)(inited + 32) = 0x74617265706D6574;
  *(void *)(inited + 40) = 0xEF74696E55657275;
  uint64_t v9 = sub_1001ABC4C(0, (unint64_t *)&qword_100E659A0);
  *(void *)(inited + 48) = a1;
  *(void *)(inited + 72) = v9;
  strcpy((char *)(inited + 80), "menuCategory");
  *(void *)(inited + 120) = &unk_100E25E00;
  *(unsigned char *)(inited + 93) = 0;
  *(_WORD *)(inited + 94) = -5120;
  *(void *)(inited + 96) = a2;
  *(unsigned char *)(inited + 104) = a3 & 1;
  id v10 = a1;
  Dictionary.init(dictionaryLiteral:)();
  a4[3] = sub_10017DF08(&qword_100E659A8);
  a4[4] = sub_100292D6C();
  sub_100170694(a4);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_100292CD4@<X0>(uint64_t *a1@<X8>)
{
  return sub_100292B7C(*(void **)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16), a1);
}

uint64_t sub_100292CE0()
{
  sub_100292DC0();

  return ShortDescribable.description.getter();
}

unint64_t sub_100292D20()
{
  unint64_t result = qword_100E65998;
  if (!qword_100E65998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65998);
  }
  return result;
}

unint64_t sub_100292D6C()
{
  unint64_t result = qword_100E659B0;
  if (!qword_100E659B0)
  {
    sub_10018C6DC(&qword_100E659A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E659B0);
  }
  return result;
}

unint64_t sub_100292DC0()
{
  unint64_t result = qword_100E659B8;
  if (!qword_100E659B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E659B8);
  }
  return result;
}

BOOL sub_100292E10(uint64_t a1, uint64_t a2)
{
  if ((static DetailChartGradientModel.== infix(_:_:)() & 1) != 0
    && ((uint64_t v4 = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(0),
         uint64_t v5 = *(int *)(v4 + 20),
         double v6 = *(double *)(a1 + v5),
         double v7 = *(double *)(a1 + v5 + 8),
         uint64_t v8 = (double *)(a2 + v5),
         v6 == *v8)
      ? (BOOL v9 = v7 == v8[1])
      : (BOOL v9 = 0),
        v9))
  {
    return *(double *)(a1 + *(int *)(v4 + 24)) == *(double *)(a2 + *(int *)(v4 + 24));
  }
  else
  {
    return 0;
  }
}

uint64_t sub_100292E80(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(0);
  sub_100162E4C();
  __chkstk_darwin(v5);
  double v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ConditionDetailLegendForeground(0);
  sub_100162E4C();
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v26 - v12;
  uint64_t v14 = sub_10017DF08(&qword_100E659C0);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  int v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = (uint64_t)&v17[*(int *)(v15 + 56)];
  sub_1002931D8(a1, (uint64_t)v17);
  sub_1002931D8(a2, v18);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1002931D8((uint64_t)v17, (uint64_t)v13);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      char v24 = static Color.== infix(_:_:)();
      swift_release();
      swift_release();
      sub_100293300((uint64_t)v17, (void (*)(void))type metadata accessor for ConditionDetailLegendForeground);
      return v24 & 1;
    }
    swift_release();
    goto LABEL_14;
  }
  sub_1002931D8((uint64_t)v17, (uint64_t)v11);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_100293300((uint64_t)v11, (void (*)(void))type metadata accessor for ConditionDetailLegendForeground.LegendGradient);
LABEL_14:
    sub_10029323C((uint64_t)v17);
LABEL_17:
    char v24 = 0;
    return v24 & 1;
  }
  sub_10029329C(v18, (uint64_t)v7);
  if ((static DetailChartGradientModel.== infix(_:_:)() & 1) == 0
    || ((uint64_t v19 = *(int *)(v4 + 20),
         double v20 = *(double *)&v11[v19],
         double v21 = *(double *)&v11[v19 + 8],
         uint64_t v22 = (double *)&v7[v19],
         v20 == *v22)
      ? (BOOL v23 = v21 == v22[1])
      : (BOOL v23 = 0),
        !v23 || *(double *)&v11[*(int *)(v4 + 24)] != *(double *)&v7[*(int *)(v4 + 24)]))
  {
    sub_100293300((uint64_t)v7, (void (*)(void))type metadata accessor for ConditionDetailLegendForeground.LegendGradient);
    sub_100293300((uint64_t)v11, (void (*)(void))type metadata accessor for ConditionDetailLegendForeground.LegendGradient);
    sub_100293300((uint64_t)v17, (void (*)(void))type metadata accessor for ConditionDetailLegendForeground);
    goto LABEL_17;
  }
  sub_100293300((uint64_t)v7, (void (*)(void))type metadata accessor for ConditionDetailLegendForeground.LegendGradient);
  sub_100293300((uint64_t)v11, (void (*)(void))type metadata accessor for ConditionDetailLegendForeground.LegendGradient);
  sub_100293300((uint64_t)v17, (void (*)(void))type metadata accessor for ConditionDetailLegendForeground);
  char v24 = 1;
  return v24 & 1;
}

uint64_t type metadata accessor for ConditionDetailLegendForeground.LegendGradient(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E65AC8);
}

uint64_t type metadata accessor for ConditionDetailLegendForeground(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E65A38);
}

uint64_t sub_1002931D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConditionDetailLegendForeground(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10029323C(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E659C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10029329C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100293300(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100293360(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v5 & 1) != 0))
  {
    BOOL v7 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v7 || (char v8 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v8 & 1) != 0))
    {
      uint64_t v9 = type metadata accessor for ConditionDetailLegend(0);
      if (sub_100292E80((uint64_t)a1 + *(int *)(v9 + 24), (uint64_t)a2 + *(int *)(v9 + 24)))
      {
        uint64_t v10 = *(int *)(v9 + 28);
        uint64_t v11 = *(void *)((char *)a1 + v10);
        uint64_t v12 = *(void *)((char *)a1 + v10 + 8);
        uint64_t v13 = (void *)((char *)a2 + v10);
        if (v11 == *v13 && v12 == v13[1])
        {
          return 1;
        }
        else
        {
          return _stringCompareWithSmolCheck(_:_:expecting:)();
        }
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_100293454@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100293460(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  sub_100BD8DC4();
  if (v14)
  {
    BOOL v15 = a2 == a6 && a3 == a7;
    if (v15 || (char v16 = _stringCompareWithSmolCheck(_:_:expecting:)(), v17 = 0, (v16 & 1) != 0)) {
      char v17 = a4 ^ a8 ^ 1;
    }
  }
  else
  {
    char v17 = 0;
  }
  return v17 & 1;
}

uint64_t sub_1002934F0(uint64_t a1, uint64_t a2)
{
  return sub_100293460(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned char *)(a2 + 24));
}

uint64_t type metadata accessor for ConditionDetailLegend(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E65B60);
}

uint64_t *sub_100293534(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DetailChartGradientModel();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(0);
      *(_OWORD *)((char *)a1 + *(int *)(v7 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v7 + 20));
      *(uint64_t *)((char *)a1 + *(int *)(v7 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 24));
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100293654(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for DetailChartGradientModel();
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v3(a1, v2);
  }
  else
  {
    return swift_release();
  }
}

void *sub_1002936E4(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DetailChartGradientModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    uint64_t v5 = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(0);
    *(_OWORD *)((char *)a1 + *(int *)(v5 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v5 + 20));
    *(void *)((char *)a1 + *(int *)(v5 + 24)) = *(void *)((char *)a2 + *(int *)(v5 + 24));
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1002937B4(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_100293300((uint64_t)a1, (void (*)(void))type metadata accessor for ConditionDetailLegendForeground);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = type metadata accessor for DetailChartGradientModel();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      uint64_t v5 = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(0);
      *(_OWORD *)((char *)a1 + *(int *)(v5 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(v5 + 20));
      *(void *)((char *)a1 + *(int *)(v5 + 24)) = *(void *)((char *)a2 + *(int *)(v5 + 24));
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_1002938A8(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DetailChartGradientModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(0);
    *(_OWORD *)&a1[*(int *)(v7 + 20)] = *(_OWORD *)&a2[*(int *)(v7 + 20)];
    *(void *)&a1[*(int *)(v7 + 24)] = *(void *)&a2[*(int *)(v7 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_100293980(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100293300((uint64_t)a1, (void (*)(void))type metadata accessor for ConditionDetailLegendForeground);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DetailChartGradientModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(0);
      *(_OWORD *)&a1[*(int *)(v7 + 20)] = *(_OWORD *)&a2[*(int *)(v7 + 20)];
      *(void *)&a1[*(int *)(v7 + 24)] = *(void *)&a2[*(int *)(v7 + 24)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100293A7C()
{
  uint64_t result = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_100293B14(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for DetailChartGradientModel();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
  }
  return a1;
}

uint64_t sub_100293BE8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DetailChartGradientModel();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_100293C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DetailChartGradientModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_100293CD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DetailChartGradientModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100293D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DetailChartGradientModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_100293DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DetailChartGradientModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_100293E70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100293E84);
}

uint64_t sub_100293E84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DetailChartGradientModel();

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_100293ECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100293EE0);
}

uint64_t sub_100293EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DetailChartGradientModel();

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v4);
}

uint64_t sub_100293F2C()
{
  uint64_t result = type metadata accessor for DetailChartGradientModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100293FD0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    type metadata accessor for ConditionDetailLegendForeground(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for DetailChartGradientModel();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
      uint64_t v13 = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(0);
      *(_OWORD *)((char *)v10 + *(int *)(v13 + 20)) = *(_OWORD *)((char *)v11 + *(int *)(v13 + 20));
      *(void *)((char *)v10 + *(int *)(v13 + 24)) = *(void *)((char *)v11 + *(int *)(v13 + 24));
    }
    else
    {
      void *v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = *(int *)(a3 + 28);
    char v16 = (uint64_t *)((char *)v4 + v15);
    char v17 = (uint64_t *)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    *char v16 = *v17;
    v16[1] = v18;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100294148(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  type metadata accessor for ConditionDetailLegendForeground(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DetailChartGradientModel();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }

  return swift_bridgeObjectRelease();
}

void *sub_100294208(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)((char *)a2 + v8);
  type metadata accessor for ConditionDetailLegendForeground(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for DetailChartGradientModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(0);
    *(_OWORD *)((char *)v9 + *(int *)(v12 + 20)) = *(_OWORD *)((char *)v10 + *(int *)(v12 + 20));
    *(void *)((char *)v9 + *(int *)(v12 + 24)) = *(void *)((char *)v10 + *(int *)(v12 + 24));
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = *(int *)(a3 + 28);
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100294330(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_100293300((uint64_t)a1 + v6, (void (*)(void))type metadata accessor for ConditionDetailLegendForeground);
    type metadata accessor for ConditionDetailLegendForeground(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for DetailChartGradientModel();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      uint64_t v10 = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(0);
      *(_OWORD *)((char *)v7 + *(int *)(v10 + 20)) = *(_OWORD *)((char *)v8 + *(int *)(v10 + 20));
      *(void *)((char *)v7 + *(int *)(v10 + 24)) = *(void *)((char *)v8 + *(int *)(v10 + 24));
    }
    else
    {
      void *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1002944A8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for ConditionDetailLegendForeground(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for DetailChartGradientModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
    uint64_t v12 = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(0);
    *(_OWORD *)&v8[*(int *)(v12 + 20)] = *(_OWORD *)&v9[*(int *)(v12 + 20)];
    *(void *)&v8[*(int *)(v12 + 24)] = *(void *)&v9[*(int *)(v12 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 28)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 28));
  return a1;
}

void *sub_1002945B4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    sub_100293300((uint64_t)a1 + v8, (void (*)(void))type metadata accessor for ConditionDetailLegendForeground);
    uint64_t v11 = type metadata accessor for ConditionDetailLegendForeground(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for DetailChartGradientModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      uint64_t v13 = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(0);
      *(_OWORD *)&v9[*(int *)(v13 + 20)] = *(_OWORD *)&v10[*(int *)(v13 + 20)];
      *(void *)&v9[*(int *)(v13 + 24)] = *(void *)&v10[*(int *)(v13 + 24)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v14 = *(int *)(a3 + 28);
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *uint64_t v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10029470C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100294720);
}

uint64_t sub_100294720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for ConditionDetailLegendForeground(0);
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_1002947A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002947BC);
}

uint64_t sub_1002947BC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for ConditionDetailLegendForeground(0);
    uint64_t v8 = v5 + *(int *)(a4 + 24);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_10029483C()
{
  uint64_t result = type metadata accessor for ConditionDetailLegendForeground(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeWithCopy for ConditionDetailLegendViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ConditionDetailLegendViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for ConditionDetailLegendViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for ConditionDetailLegendViewModel(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 25))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ConditionDetailLegendViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConditionDetailLegendViewModel()
{
  return &type metadata for ConditionDetailLegendViewModel;
}

void *sub_100294A70@<X0>(void *a1@<X8>)
{
  State.init(wrappedValue:)();
  char v2 = v25[0];
  uint64_t v3 = *((void *)&v25[0] + 1);
  swift_retain();
  swift_retain();
  sub_10017DF08(&qword_100E64A88);
  sub_1001246C8(&qword_100E64A90, &qword_100E64A88);
  uint64_t v4 = ObservedObject.init(wrappedValue:)();
  uint64_t v6 = v5;
  swift_retain();
  static LinearGradient.fallback.getter();
  static LinearGradient.fallback.getter();
  __src[0] = v4;
  __src[1] = v6;
  LOBYTE(__src[2]) = v25[0];
  __src[3] = *((void *)&v25[0] + 1);
  __src[4] = v12;
  *(_OWORD *)&__src[5] = v13;
  __src[7] = v14;
  __src[8] = v15;
  __src[9] = 0;
  __src[10] = v16;
  *(_OWORD *)&__src[11] = v17;
  *(_OWORD *)&__src[13] = v18;
  __src[15] = 0;
  memcpy(__dst, __src, sizeof(__dst));
  sub_100294F34((uint64_t)__src);
  sub_100294C78(&v19);
  long long v8 = v19;
  uint64_t v7 = v20;
  uint64_t v9 = v21;
  unint64_t v10 = v22;
  swift_release();
  sub_100294FA4((uint64_t)__src);
  swift_bridgeObjectRetain_n();
  sub_100295014((uint64_t)&v12);
  swift_bridgeObjectRetain();
  sub_100295014((uint64_t)&v16);
  *(void *)&v25[0] = v4;
  *((void *)&v25[0] + 1) = v6;
  LOBYTE(v25[1]) = v2;
  *((void *)&v25[1] + 1) = v3;
  v25[2] = v8;
  *(void *)&v25[3] = v7;
  *((void *)&v25[3] + 1) = v9;
  v25[4] = v10;
  v25[5] = v8;
  *(void *)&v25[6] = v7;
  *((void *)&v25[6] + 1) = v9;
  v25[7] = v10;
  sub_100294F34((uint64_t)v25);
  sub_100295014((uint64_t)&v19);
  sub_100295014((uint64_t)&v19);
  swift_release();
  swift_release();
  sub_100294FA4((uint64_t)v25);
  return memcpy(a1, v25, 0x80uLL);
}

double sub_100294C78@<D0>(_OWORD *a1@<X8>)
{
  long long v19 = a1;
  uint64_t v18 = type metadata accessor for CodableColor();
  uint64_t v1 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for SkyBackgroundGradient();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for WeatherConditionBackgroundModel();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E646B0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_100C251B0;
  sub_1000D900C();
  WeatherConditionBackgroundModel.gradient.getter();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  SkyBackgroundGradient.topColor.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v13 = CodableColor.color.getter();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v18);
  *(void *)(v12 + 32) = v13;
  *(void *)&long long v20 = v12;
  specialized Array._endMutation()();
  Gradient.init(colors:)();
  static UnitPoint.top.getter();
  static UnitPoint.bottom.getter();
  LinearGradient.init(gradient:startPoint:endPoint:)();
  double result = *(double *)&v20;
  long long v15 = v21;
  uint64_t v16 = v19;
  *long long v19 = v20;
  v16[1] = v15;
  *((void *)v16 + 4) = v22;
  return result;
}

uint64_t sub_100294F34(uint64_t a1)
{
  return a1;
}

uint64_t sub_100294FA4(uint64_t a1)
{
  return a1;
}

uint64_t sub_100295014(uint64_t a1)
{
  return a1;
}

uint64_t destroy for ListGradientView()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t initializeWithCopy for ListGradientView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for ListGradientView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_retain();
  swift_release();
  return a1;
}

void *initializeWithTake for ListGradientView(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x80uLL);
}

uint64_t assignWithTake for ListGradientView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ListGradientView(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 128))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ListGradientView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 128) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 128) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListGradientView()
{
  return &type metadata for ListGradientView;
}

uint64_t sub_1002953AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002953C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for WeatherConditionBackgroundModel();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = static Alignment.center.getter();
  uint64_t v8 = v7;
  sub_1002956EC((uint64_t)&v19);
  uint64_t v9 = v19;
  uint64_t v10 = *(void *)v22;
  uint64_t v11 = v24;
  long long v12 = v20;
  long long v13 = v21;
  long long v14 = *(_OWORD *)&v22[8];
  long long v15 = v23;
  uint64_t v19 = v6;
  *(void *)&long long v20 = v8;
  *((void *)&v20 + 1) = v9;
  long long v21 = v12;
  *(_OWORD *)uint64_t v22 = v13;
  *(void *)&v22[16] = v10;
  long long v23 = v14;
  long long v24 = v15;
  uint64_t v25 = v11;
  sub_1000D900C();
  uint64_t v16 = swift_allocObject();
  memcpy((void *)(v16 + 16), v1, 0x80uLL);
  sub_100294F34((uint64_t)v1);
  sub_10017DF08(&qword_100E65BA0);
  sub_1001246C8(&qword_100E65BA8, &qword_100E65BA0);
  sub_100295968();
  View.onChange<A>(of:initial:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1002955BC()
{
  sub_100294C78(&v2);
  sub_10017DF08(&qword_100E65950);
  State.wrappedValue.getter();
  sub_10017DF08(&qword_100E65BB0);
  State.wrappedValue.setter();
  static Animation.default.getter();
  Animation.delay(_:)();
  uint64_t v0 = swift_release();
  __chkstk_darwin(v0);
  withAnimation<A>(_:_:)();
  return swift_release();
}

uint64_t sub_1002956EC@<X0>(uint64_t a1@<X8>)
{
  sub_10017DF08(&qword_100E65BB0);
  State.wrappedValue.getter();
  State.wrappedValue.getter();
  sub_10017DF08(&qword_100E65950);
  uint64_t result = State.wrappedValue.getter();
  double v3 = 0.0;
  *(void *)a1 = v4;
  if ((_BYTE)v4) {
    double v3 = 1.0;
  }
  *(_OWORD *)(a1 + 8) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v4;
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = v6;
  *(void *)(a1 + 72) = v7;
  *(double *)(a1 + 80) = v3;
  return result;
}

uint64_t sub_1002957F8(uint64_t a1)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  sub_1002959D4((uint64_t)&v2 + 8, (uint64_t)v3);
  sub_1000618F8((uint64_t)v3);
  sub_10017DF08(&qword_100E65950);
  State.wrappedValue.getter();
  State.wrappedValue.setter();
  return sub_100295A3C((uint64_t)&v2);
}

uint64_t sub_1002958A0()
{
  memcpy(v2, v0, sizeof(v2));
  return sub_1002953C8();
}

uint64_t sub_1002958E4()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100295944()
{
  return sub_1002955BC();
}

unint64_t sub_100295968()
{
  unint64_t result = qword_100E64A80;
  if (!qword_100E64A80)
  {
    type metadata accessor for WeatherConditionBackgroundModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E64A80);
  }
  return result;
}

uint64_t sub_1002959B8()
{
  return sub_1002957F8(*(void *)(v0 + 16));
}

uint64_t sub_1002959D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E65BB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100295A3C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100295A68()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100295B08@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for WeatherMapOverlayKind();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  long long v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E65BC0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  long long v21 = (char *)&v34 - v20;
  if (*a1)
  {
    uint64_t v22 = type metadata accessor for LocationViewMapPosition(0);
    return _s7Weather24LocationCompositionStateOwst_0(a2, 1, 1, v22);
  }
  else
  {
    uint64_t v34 = v9;
    uint64_t v35 = v6;
    uint64_t v37 = (char *)a2;
    uint64_t v24 = type metadata accessor for LocationViewMapPosition.LocationMapConfiguration(0);
    uint64_t v36 = v10;
    uint64_t v25 = v24;
    sub_1001B1E64(&a1[*(int *)(v24 + 32)], *(void *)&a1[*(int *)(v24 + 32) + 24]);
    uint64_t v26 = v4;
    uint64_t v27 = *(void *)&a1[*(int *)(v25 + 24)];
    Location.identifier.getter();
    type metadata accessor for WeatherData(0);
    sub_100080B20(v27, (uint64_t)v15, (uint64_t)v21);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v36);
    sub_100295E40((uint64_t)v21, (uint64_t)v18);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v4) == 1)
    {
      sub_1001AB060((uint64_t)v18, &qword_100E65BC0);
      uint64_t v28 = (uint64_t)v37;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 1, 1, v4);
      uint64_t v29 = type metadata accessor for LocationViewMapPosition(0);
      uint64_t v30 = v28;
    }
    else
    {
      uint64_t v31 = v34;
      uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
      v32(v34, v18, v4);
      uint64_t v33 = (uint64_t)v37;
      v32(v37, v31, v26);
      _s7Weather24LocationCompositionStateOwst_0(v33, 0, 1, v26);
      uint64_t v29 = type metadata accessor for LocationViewMapPosition(0);
      uint64_t v30 = v33;
    }
    return _s7Weather24LocationCompositionStateOwst_0(v30, 0, 1, v29);
  }
}

uint64_t type metadata accessor for LocationViewMapPosition(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E65C38);
}

uint64_t type metadata accessor for LocationViewMapPosition.LocationMapConfiguration(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E65CA0);
}

uint64_t sub_100295E40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E65BC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_100295EA8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = type metadata accessor for WeatherMapOverlayKind();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_100295FA4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v4(a1, v2);
  }
  return result;
}

void *sub_10029602C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for WeatherMapOverlayKind();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1002960EC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for WeatherMapOverlayKind();
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  return a1;
}

void *sub_100296234(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for WeatherMapOverlayKind();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1002962F4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for WeatherMapOverlayKind();
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  return a1;
}

uint64_t sub_10029643C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100296450);
}

uint64_t sub_100296450(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherMapOverlayKind();
  unsigned int v5 = _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_100296498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002964AC);
}

uint64_t sub_1002964AC(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for WeatherMapOverlayKind();

  return _s7Weather24LocationCompositionStateOwst_0(a1, v5, a3, v6);
}

uint64_t sub_100296508(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WeatherMapOverlayKind();

  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
}

uint64_t sub_10029654C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherMapOverlayKind();

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v4);
}

uint64_t sub_100296598()
{
  uint64_t result = type metadata accessor for WeatherMapOverlayKind();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void *sub_100296610(unsigned char *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v25 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v25 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v4;
  }
  *a1 = *(unsigned char *)a2;
  uint64_t v7 = a3[5];
  int v8 = &a1[v7];
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Location();
  (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v59 = a3;
  v60 = a2;
  uint64_t v13 = (void *)((char *)v4 + v11);
  uint64_t v14 = (void *)((char *)a2 + v11);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = (void *)((char *)v4 + v12);
  uint64_t v17 = (void *)((char *)a2 + v12);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v20 = v19[5];
  long long v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)v17 + v20;
  uint64_t v23 = type metadata accessor for Locale();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23))
  {
    uint64_t v24 = sub_10017DF08(&qword_100E63730);
    memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v23);
  }
  uint64_t v26 = v19[6];
  uint64_t v27 = (char *)v16 + v26;
  uint64_t v28 = (char *)v17 + v26;
  uint64_t v29 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  uint64_t v30 = v19[7];
  uint64_t v31 = (char *)v16 + v30;
  uint64_t v32 = (char *)v17 + v30;
  uint64_t v33 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v33))
  {
    uint64_t v34 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    uint64_t v35 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v31, v32, v35);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v33);
  }
  uint64_t v36 = v19[8];
  uint64_t v37 = (void *)((char *)v16 + v36);
  uint64_t v38 = (void *)((char *)v17 + v36);
  uint64_t v39 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v42 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v42 - 8) + 16))(v37, v38, v42);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
      goto LABEL_15;
    }
    uint64_t v41 = v38[1];
    *uint64_t v37 = *v38;
    v37[1] = v41;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
LABEL_15:
  uint64_t v43 = v19[9];
  unint64_t v44 = (char *)v16 + v43;
  char v45 = (char *)v17 + v43;
  uint64_t v46 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v46))
  {
    uint64_t v47 = sub_10017DF08(&qword_100E63740);
    memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
    unint64_t v49 = v59;
    Swift::Int v48 = v60;
  }
  else
  {
    uint64_t v50 = type metadata accessor for Date();
    unint64_t v49 = v59;
    Swift::Int v48 = v60;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v50))
    {
      uint64_t v51 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v44, v45, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v44, v45, v50);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v50);
    }
    uint64_t v52 = *(int *)(v46 + 20);
    uint64_t v53 = &v44[v52];
    BOOL v54 = &v45[v52];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v50))
    {
      uint64_t v55 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v53, v54, v50);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v50);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v46);
  }
  uint64_t v56 = v49[8];
  long long v57 = *(_OWORD *)((char *)v48 + v56 + 24);
  *(_OWORD *)((char *)v4 + v56 + 24) = v57;
  (**(void (***)(void))(v57 - 8))();
  return v4;
}

uint64_t sub_100296B8C(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + a2[7];
  swift_bridgeObjectRelease();
  uint64_t v7 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v8 = v6 + v7[5];
  uint64_t v9 = type metadata accessor for Locale();
  if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  uint64_t v10 = v6 + v7[6];
  uint64_t v11 = type metadata accessor for WeatherDataModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = v6 + v7[7];
  uint64_t v13 = sub_10017DF08(&qword_100E63738);
  if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v13))
  {
    uint64_t v14 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v12, v14);
  }
  uint64_t v15 = v6 + v7[8];
  type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v17 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v15, v17);
  }
  else if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = v6 + v7[9];
  uint64_t v19 = type metadata accessor for WeatherDataOverrides();
  if (!_s7Weather24LocationCompositionStateOwet_0(v18, 1, v19))
  {
    uint64_t v20 = type metadata accessor for Date();
    if (!_s7Weather24LocationCompositionStateOwet_0(v18, 1, v20)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v18, v20);
    }
    uint64_t v21 = v18 + *(int *)(v19 + 20);
    if (!_s7Weather24LocationCompositionStateOwet_0(v21, 1, v20)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v21, v20);
    }
  }
  uint64_t v22 = a1 + a2[8];

  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v22);
}

unsigned char *sub_100296E74(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Location();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v55 = a3;
  uint64_t v56 = a2;
  uint64_t v12 = &a1[v10];
  uint64_t v13 = &a2[v10];
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = &a1[v11];
  uint64_t v16 = &a2[v11];
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v19 = v18[5];
  uint64_t v20 = (char *)v15 + v19;
  uint64_t v21 = (char *)v16 + v19;
  uint64_t v22 = type metadata accessor for Locale();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
  {
    uint64_t v23 = sub_10017DF08(&qword_100E63730);
    memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
  }
  uint64_t v24 = v18[6];
  uint64_t v25 = (char *)v15 + v24;
  uint64_t v26 = (char *)v16 + v24;
  uint64_t v27 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  uint64_t v28 = v18[7];
  uint64_t v29 = (char *)v15 + v28;
  uint64_t v30 = (char *)v16 + v28;
  uint64_t v31 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31))
  {
    uint64_t v32 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    uint64_t v33 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v29, v30, v33);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
  }
  uint64_t v34 = v18[8];
  uint64_t v35 = (void *)((char *)v15 + v34);
  uint64_t v36 = (void *)((char *)v16 + v34);
  uint64_t v37 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v40 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v40 - 8) + 16))(v35, v36, v40);
    goto LABEL_11;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v39 = v36[1];
    void *v35 = *v36;
    v35[1] = v39;
    swift_bridgeObjectRetain();
LABEL_11:
    swift_storeEnumTagMultiPayload();
    goto LABEL_13;
  }
  memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
LABEL_13:
  uint64_t v41 = v18[9];
  uint64_t v42 = (char *)v15 + v41;
  uint64_t v43 = (char *)v16 + v41;
  uint64_t v44 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v44))
  {
    uint64_t v45 = sub_10017DF08(&qword_100E63740);
    memcpy(v42, v43, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    uint64_t v46 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v46))
    {
      uint64_t v47 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v42, v43, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v42, v43, v46);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v46);
    }
    uint64_t v48 = *(int *)(v44 + 20);
    unint64_t v49 = &v42[v48];
    uint64_t v50 = &v43[v48];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v46))
    {
      uint64_t v51 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v49, v50, v46);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, v46);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v44);
  }
  uint64_t v52 = v55[8];
  long long v53 = *(_OWORD *)&v56[v52 + 24];
  *(_OWORD *)&a1[v52 + 24] = v53;
  (**(void (***)(void))(v53 - 8))();
  return a1;
}

unsigned char *sub_10029739C(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Location();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  *(void *)&a1[v10] = *(void *)&a2[v10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v11 + 1) = *((void *)v12 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  *uint64_t v14 = *(void *)&a2[v13];
  v14[1] = *(void *)&a2[v13 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v17 = v16[5];
  uint64_t v18 = (char *)v14 + v17;
  uint64_t v19 = &v15[v17];
  uint64_t v20 = type metadata accessor for Locale();
  int v21 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v20);
  int v22 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v20);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v23 = *(void *)(v20 - 8);
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v18, v20);
LABEL_6:
    uint64_t v24 = sub_10017DF08(&qword_100E63730);
    memcpy(v18, v19, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, unsigned char *, uint64_t))(v23 + 24))(v18, v19, v20);
LABEL_7:
  uint64_t v25 = v16[6];
  uint64_t v26 = (char *)v14 + v25;
  uint64_t v27 = &v15[v25];
  uint64_t v28 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v28 - 8) + 24))(v26, v27, v28);
  uint64_t v29 = v16[7];
  uint64_t v30 = (char *)v14 + v29;
  uint64_t v31 = &v15[v29];
  uint64_t v32 = sub_10017DF08(&qword_100E63738);
  int v33 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v32);
  int v34 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v32);
  if (v33)
  {
    if (!v34)
    {
      uint64_t v35 = type metadata accessor for Date();
      (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v35 - 8) + 16))(v30, v31, v35);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v32);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v34)
  {
    sub_1001AB060((uint64_t)v30, &qword_100E63738);
LABEL_12:
    uint64_t v36 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v30, v31, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v54 = type metadata accessor for Date();
  (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v54 - 8) + 24))(v30, v31, v54);
LABEL_13:
  if (a1 == a2) {
    goto LABEL_20;
  }
  uint64_t v37 = v16[8];
  uint64_t v38 = (void *)((char *)v14 + v37);
  uint64_t v39 = &v15[v37];
  sub_1001BBEC8((uint64_t)v14 + v37, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
  uint64_t v40 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v42 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v42 - 8) + 16))(v38, v39, v42);
    goto LABEL_18;
  }
  if (!EnumCaseMultiPayload)
  {
    *uint64_t v38 = *v39;
    v38[1] = v39[1];
    swift_bridgeObjectRetain();
LABEL_18:
    swift_storeEnumTagMultiPayload();
    goto LABEL_20;
  }
  memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
LABEL_20:
  uint64_t v43 = v16[9];
  uint64_t v44 = (char *)v14 + v43;
  uint64_t v45 = &v15[v43];
  uint64_t v46 = type metadata accessor for WeatherDataOverrides();
  int v47 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v46);
  int v48 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v46);
  if (v47)
  {
    if (!v48)
    {
      uint64_t v49 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v49))
      {
        uint64_t v50 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v44, v45, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v44, v45, v49);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v49);
      }
      uint64_t v58 = *(int *)(v46 + 20);
      uint64_t v59 = &v44[v58];
      v60 = &v45[v58];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v49))
      {
        uint64_t v61 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v59, v60, v49);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, 0, 1, v49);
      }
      uint64_t v62 = (uint64_t)v44;
      uint64_t v63 = v46;
      goto LABEL_38;
    }
    goto LABEL_26;
  }
  if (v48)
  {
    sub_1001BBEC8((uint64_t)v44, (void (*)(void))type metadata accessor for WeatherDataOverrides);
LABEL_26:
    size_t v51 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63740) - 8) + 64);
    uint64_t v52 = v44;
    long long v53 = v45;
    goto LABEL_27;
  }
  uint64_t v55 = type metadata accessor for Date();
  int v56 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v55);
  int v57 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v55);
  if (!v56)
  {
    uint64_t v65 = *(void *)(v55 - 8);
    if (!v57)
    {
      (*(void (**)(char *, char *, uint64_t))(v65 + 24))(v44, v45, v55);
      goto LABEL_43;
    }
    (*(void (**)(char *, uint64_t))(v65 + 8))(v44, v55);
    goto LABEL_42;
  }
  if (v57)
  {
LABEL_42:
    uint64_t v66 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v44, v45, *(void *)(*(void *)(v66 - 8) + 64));
    goto LABEL_43;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v44, v45, v55);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v55);
LABEL_43:
  uint64_t v67 = *(int *)(v46 + 20);
  uint64_t v68 = (uint64_t)&v44[v67];
  uint64_t v69 = (uint64_t)&v45[v67];
  int v70 = _s7Weather24LocationCompositionStateOwet_0(v68, 1, v55);
  int v71 = _s7Weather24LocationCompositionStateOwet_0(v69, 1, v55);
  if (v70)
  {
    if (!v71)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 16))(v68, v69, v55);
      uint64_t v62 = v68;
      uint64_t v63 = v55;
LABEL_38:
      _s7Weather24LocationCompositionStateOwst_0(v62, 0, 1, v63);
      goto LABEL_39;
    }
  }
  else
  {
    uint64_t v72 = *(void *)(v55 - 8);
    if (!v71)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 24))(v68, v69, v55);
      goto LABEL_39;
    }
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v68, v55);
  }
  size_t v51 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
  uint64_t v52 = (void *)v68;
  long long v53 = (const void *)v69;
LABEL_27:
  memcpy(v52, v53, v51);
LABEL_39:
  sub_1000C1E18((uint64_t *)&a1[a3[8]], (uint64_t *)&a2[a3[8]]);
  return a1;
}

unsigned char *sub_100297C2C(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Location();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  *(_OWORD *)&a1[v10] = *(_OWORD *)&a2[v10];
  uint64_t v13 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v14 = v13[5];
  uint64_t v15 = &v11[v14];
  uint64_t v16 = &v12[v14];
  uint64_t v17 = type metadata accessor for Locale();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
  {
    uint64_t v18 = sub_10017DF08(&qword_100E63730);
    memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
  }
  uint64_t v19 = v13[6];
  uint64_t v20 = &v11[v19];
  int v21 = &v12[v19];
  uint64_t v22 = type metadata accessor for WeatherDataModel();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = v13[7];
  uint64_t v24 = &v11[v23];
  uint64_t v25 = &v12[v23];
  uint64_t v26 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26))
  {
    uint64_t v27 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    uint64_t v28 = type metadata accessor for Date();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v28 - 8) + 32))(v24, v25, v28);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
  }
  uint64_t v29 = v13[8];
  uint64_t v30 = &v11[v29];
  uint64_t v31 = &v12[v29];
  uint64_t v32 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v33 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v33 - 8) + 32))(v30, v31, v33);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
  }
  uint64_t v34 = v13[9];
  uint64_t v35 = &v11[v34];
  uint64_t v36 = &v12[v34];
  uint64_t v37 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37))
  {
    uint64_t v38 = sub_10017DF08(&qword_100E63740);
    memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    uint64_t v39 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v39))
    {
      uint64_t v40 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v35, v36, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v35, v36, v39);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v39);
    }
    uint64_t v41 = *(int *)(v37 + 20);
    uint64_t v42 = &v35[v41];
    uint64_t v43 = &v36[v41];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v39))
    {
      uint64_t v44 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v42, v43, v39);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v39);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v37);
  }
  uint64_t v45 = a3[8];
  uint64_t v46 = &a1[v45];
  int v47 = &a2[v45];
  long long v48 = *((_OWORD *)v47 + 1);
  *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
  *((_OWORD *)v46 + 1) = v48;
  *((void *)v46 + 4) = *((void *)v47 + 4);
  return a1;
}

unsigned char *sub_1002980E0(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Location();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  *(void *)&a1[v10] = *(void *)&a2[v10];
  swift_bridgeObjectRelease();
  *((void *)v11 + 1) = *((void *)v12 + 1);
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = *(void *)&a2[v13 + 8];
  *uint64_t v14 = *(void *)&a2[v13];
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v18 = v17[5];
  uint64_t v19 = (char *)v14 + v18;
  uint64_t v20 = &v15[v18];
  uint64_t v21 = type metadata accessor for Locale();
  int v22 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v21);
  int v23 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v24 = *(void *)(v21 - 8);
  if (v23)
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v19, v21);
LABEL_6:
    uint64_t v25 = sub_10017DF08(&qword_100E63730);
    memcpy(v19, v20, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, unsigned char *, uint64_t))(v24 + 40))(v19, v20, v21);
LABEL_7:
  uint64_t v26 = v17[6];
  uint64_t v27 = (char *)v14 + v26;
  uint64_t v28 = &v15[v26];
  uint64_t v29 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v29 - 8) + 40))(v27, v28, v29);
  uint64_t v30 = v17[7];
  uint64_t v31 = (char *)v14 + v30;
  uint64_t v32 = &v15[v30];
  uint64_t v33 = sub_10017DF08(&qword_100E63738);
  int v34 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v33);
  int v35 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v33);
  if (v34)
  {
    if (!v35)
    {
      uint64_t v36 = type metadata accessor for Date();
      (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v36 - 8) + 32))(v31, v32, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v33);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v35)
  {
    sub_1001AB060((uint64_t)v31, &qword_100E63738);
LABEL_12:
    uint64_t v37 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v31, v32, *(void *)(*(void *)(v37 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v54 = type metadata accessor for Date();
  (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v54 - 8) + 40))(v31, v32, v54);
LABEL_13:
  if (a1 != a2)
  {
    uint64_t v38 = v17[8];
    uint64_t v39 = (char *)v14 + v38;
    uint64_t v40 = &v15[v38];
    sub_1001BBEC8((uint64_t)v14 + v38, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
    uint64_t v41 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v42 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v42 - 8) + 32))(v39, v40, v42);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
  }
  uint64_t v43 = v17[9];
  uint64_t v44 = (char *)v14 + v43;
  uint64_t v45 = &v15[v43];
  uint64_t v46 = type metadata accessor for WeatherDataOverrides();
  int v47 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v46);
  int v48 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v46);
  if (v47)
  {
    if (!v48)
    {
      uint64_t v49 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v49))
      {
        uint64_t v50 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v44, v45, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v44, v45, v49);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v49);
      }
      uint64_t v58 = *(int *)(v46 + 20);
      uint64_t v59 = &v44[v58];
      v60 = &v45[v58];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v49))
      {
        uint64_t v61 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v59, v60, v49);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, 0, 1, v49);
      }
      uint64_t v62 = (uint64_t)v44;
      uint64_t v63 = v46;
      goto LABEL_35;
    }
    goto LABEL_23;
  }
  if (v48)
  {
    sub_1001BBEC8((uint64_t)v44, (void (*)(void))type metadata accessor for WeatherDataOverrides);
LABEL_23:
    size_t v51 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63740) - 8) + 64);
    uint64_t v52 = v44;
    long long v53 = v45;
    goto LABEL_24;
  }
  uint64_t v55 = type metadata accessor for Date();
  int v56 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v55);
  int v57 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v55);
  if (!v56)
  {
    uint64_t v69 = *(void *)(v55 - 8);
    if (!v57)
    {
      (*(void (**)(char *, char *, uint64_t))(v69 + 40))(v44, v45, v55);
      goto LABEL_40;
    }
    (*(void (**)(char *, uint64_t))(v69 + 8))(v44, v55);
    goto LABEL_39;
  }
  if (v57)
  {
LABEL_39:
    uint64_t v70 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v44, v45, *(void *)(*(void *)(v70 - 8) + 64));
    goto LABEL_40;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v44, v45, v55);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v55);
LABEL_40:
  uint64_t v71 = *(int *)(v46 + 20);
  uint64_t v72 = (uint64_t)&v44[v71];
  uint64_t v73 = (uint64_t)&v45[v71];
  int v74 = _s7Weather24LocationCompositionStateOwet_0(v72, 1, v55);
  int v75 = _s7Weather24LocationCompositionStateOwet_0(v73, 1, v55);
  if (v74)
  {
    if (!v75)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 32))(v72, v73, v55);
      uint64_t v62 = v72;
      uint64_t v63 = v55;
LABEL_35:
      _s7Weather24LocationCompositionStateOwst_0(v62, 0, 1, v63);
      goto LABEL_36;
    }
  }
  else
  {
    uint64_t v76 = *(void *)(v55 - 8);
    if (!v75)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v76 + 40))(v72, v73, v55);
      goto LABEL_36;
    }
    (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v72, v55);
  }
  size_t v51 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
  uint64_t v52 = (void *)v72;
  long long v53 = (const void *)v73;
LABEL_24:
  memcpy(v52, v53, v51);
LABEL_36:
  uint64_t v64 = a3[8];
  uint64_t v65 = &a1[v64];
  uint64_t v66 = &a2[v64];
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&a1[v64]);
  long long v67 = *((_OWORD *)v66 + 1);
  *(_OWORD *)uint64_t v65 = *(_OWORD *)v66;
  *((_OWORD *)v65 + 1) = v67;
  *((void *)v65 + 4) = *((void *)v66 + 4);
  return a1;
}

uint64_t sub_10029893C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100298950);
}

uint64_t sub_100298950(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for Location();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a3[5];
LABEL_8:
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v9, a2, v8);
  }
  if (a2 != 0x7FFFFFFF)
  {
    uint64_t v8 = type metadata accessor for WeatherData(0);
    uint64_t v9 = a3[7];
    goto LABEL_8;
  }
  unint64_t v10 = *(void *)(a1 + a3[6]);
  if (v10 >= 0xFFFFFFFF) {
    LODWORD(v10) = -1;
  }
  return (v10 + 1);
}

uint64_t sub_100298A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100298A14);
}

void sub_100298A14(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  type metadata accessor for Location();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a4[5];
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(void *)(a1 + a4[6]) = (a2 - 1);
      return;
    }
    uint64_t v10 = type metadata accessor for WeatherData(0);
    uint64_t v11 = a4[7];
  }

  _s7Weather24LocationCompositionStateOwst_0(a1 + v11, a2, a2, v10);
}

uint64_t sub_100298AC0()
{
  uint64_t result = type metadata accessor for Location();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for WeatherData(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *assignWithCopy for Scroll(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for Scroll(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_100298C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 8);
}

unint64_t sub_100298C1C(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 40);
  if (result >= 0xFFFFFFFF)
  {
    if (*(void *)(a1 + 24)) {
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100298C7C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 40);
  if (v4 < 0xFFFFFFFF)
  {
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  }
  else
  {
    uint64_t v5 = *(void *)(a2 + 24);
    if (v5)
    {
      uint64_t v6 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v5;
      *(void *)(a1 + 32) = v6;
      (**(void (***)(uint64_t, uint64_t))(v5 - 8))(a1, a2);
      unint64_t v4 = *(void *)(a2 + 40);
    }
    else
    {
      long long v8 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v8;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
    }
    *(void *)(a1 + 40) = v4;
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100298D38(uint64_t a1, long long *a2)
{
  unint64_t v4 = *((void *)a2 + 5);
  if (*(void *)(a1 + 40) >= 0xFFFFFFFFuLL)
  {
    uint64_t v5 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
    {
      uint64_t v6 = *((void *)a2 + 3);
      if (v5)
      {
        if (v6)
        {
          sub_1000C1E18((uint64_t *)a1, (uint64_t *)a2);
LABEL_19:
          *(void *)(a1 + 40) = *((void *)a2 + 5);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
          return a1;
        }
        _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
      }
      else if (v6)
      {
        *(void *)(a1 + 24) = v6;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
        goto LABEL_19;
      }
      long long v13 = *a2;
      long long v14 = a2[1];
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      *(_OWORD *)a1 = v13;
      *(_OWORD *)(a1 + 16) = v14;
      goto LABEL_19;
    }
    if (v5) {
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
    }
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  if (v4 < 0xFFFFFFFF)
  {
LABEL_12:
    long long v8 = *a2;
    long long v9 = a2[1];
    long long v10 = a2[2];
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    *(_OWORD *)(a1 + 16) = v9;
    *(_OWORD *)(a1 + 32) = v10;
    *(_OWORD *)a1 = v8;
    return a1;
  }
  uint64_t v7 = *((void *)a2 + 3);
  if (v7)
  {
    *(void *)(a1 + 24) = v7;
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    (**(void (***)(uint64_t, long long *))(v7 - 8))(a1, a2);
  }
  else
  {
    long long v11 = *a2;
    long long v12 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v11;
    *(_OWORD *)(a1 + 16) = v12;
  }
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

__n128 initializeWithTake for MainViewFullscreenMapOverlayModifier(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_100298EE8(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 40) < 0xFFFFFFFFuLL)
  {
LABEL_9:
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    goto LABEL_10;
  }
  unint64_t v4 = *(void *)(a2 + 40);
  uint64_t v5 = *(void *)(a1 + 24);
  if (v4 < 0xFFFFFFFF)
  {
    if (v5) {
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
    }
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  if (v5) {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  }
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
LABEL_10:
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t sub_100298F90(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 40);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t sub_100298FE4(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(unsigned char *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_DWORD *)__n128 result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(void *)(result + 40) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_10029904C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 40);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

double sub_100299064(uint64_t a1, int a2)
{
  if (a2 < 0)
  {
    *(void *)(a1 + 40) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(unsigned char *)(a1 + 48) = 0;
    *(void *)a1 = a2 ^ 0x80000000;
  }
  else if (a2)
  {
    *(void *)(a1 + 40) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for MiddlewareResult()
{
  return sub_100109098();
}

uint64_t sub_1002990B0(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherMapOverlayKind();
  __chkstk_darwin(v4);
  long long v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  switch(sub_1005A0E98())
  {
    case 1u:
      sub_100187B7C();
      uint64_t v28 = 29;
      goto LABEL_26;
    case 2u:
      sub_100179DD4();
      sub_100187B7C();
      uint64_t v29 = 31;
      goto LABEL_44;
    case 3u:
      if (qword_100E621A8 != -1) {
        swift_once();
      }
      long long v7 = &byte_100F50B18;
      goto LABEL_20;
    case 4u:
      sub_100187B7C();
      uint64_t v29 = 37;
      goto LABEL_44;
    case 5u:
      sub_100179DD4();
      sub_100187B7C();
      uint64_t v29 = 39;
      goto LABEL_44;
    case 6u:
      sub_100187B7C();
      uint64_t v29 = 41;
      goto LABEL_44;
    case 7u:
      sub_100187B7C();
      uint64_t v29 = 35;
      goto LABEL_44;
    case 8u:
      sub_100187B7C();
      uint64_t v29 = 43;
      goto LABEL_44;
    case 9u:
      sub_100179DD4();
      sub_100187B7C();
      uint64_t v29 = 45;
      goto LABEL_44;
    case 0xAu:
      sub_100187B7C();
      uint64_t v29 = 93;
      goto LABEL_44;
    case 0xBu:
      sub_100179DD4();
      sub_100187B7C();
      uint64_t v29 = 77;
      goto LABEL_44;
    case 0xCu:
      sub_100187B7C();
      uint64_t v29 = 79;
      goto LABEL_44;
    case 0xDu:
      sub_100179DD4();
      sub_100187B7C();
      uint64_t v29 = 83;
      goto LABEL_44;
    case 0xEu:
      sub_100187B7C();
      uint64_t v29 = 81;
      goto LABEL_44;
    case 0xFu:
      sub_100179DD4();
      sub_100187B7C();
      uint64_t v29 = 47;
      goto LABEL_44;
    case 0x10u:
      sub_100179DD4();
      sub_100187B7C();
      uint64_t v29 = 49;
      goto LABEL_44;
    case 0x11u:
      sub_100179DD4();
      sub_100187B7C();
      uint64_t v29 = 51;
      goto LABEL_44;
    case 0x12u:
      sub_100179DD4();
      sub_100187B7C();
      uint64_t v29 = 53;
      goto LABEL_44;
    case 0x13u:
      uint64_t v19 = sub_10017C7D0();
      v20(v19);
      sub_10017F7FC();
      uint64_t v21 = sub_10017C7EC();
      v22(v21);
      return 19;
    case 0x14u:
      uint64_t v8 = enum case for WeatherMapPrecipitationOverlayKind.forecast(_:);
      uint64_t v9 = type metadata accessor for WeatherMapPrecipitationOverlayKind();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104))(v6, v8, v9);
      uint64_t v10 = sub_10017C7D0();
      v11(v10);
      sub_10017F7FC();
      uint64_t v12 = sub_10017C7EC();
      v13(v12);
      return 20;
    case 0x15u:
    case 0x16u:
      uint64_t v23 = sub_10017C7D0();
      v24(v23);
      sub_10017F7FC();
      uint64_t v25 = sub_10017C7EC();
      v26(v25);
      return 21;
    case 0x17u:
      sub_100187B7C();
      uint64_t v29 = 75;
      goto LABEL_44;
    case 0x18u:
      if (qword_100E621B0 != -1) {
        swift_once();
      }
      long long v7 = &byte_100F50B28;
      goto LABEL_20;
    case 0x19u:
      if (qword_100E621B8 != -1) {
        swift_once();
      }
      long long v7 = &byte_100F50B38;
LABEL_20:
      unsigned int v14 = *v7;
      swift_bridgeObjectRetain();
      break;
    case 0x1Au:
      sub_100B57B3C();
      unsigned int v14 = 26;
      break;
    case 0x1Bu:
      sub_100B57E4C();
      unsigned int v14 = 27;
      break;
    case 0x1Cu:
      if (qword_100E62870 != -1) {
        swift_once();
      }
      uint64_t v15 = type metadata accessor for Logger();
      sub_1002102B0(v15, (uint64_t)qword_100F52058);
      swift_bridgeObjectRetain_n();
      uint64_t v16 = Logger.logObject.getter();
      os_log_type_t v17 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = (uint8_t *)swift_slowAlloc();
        uint64_t v30 = swift_slowAlloc();
        *(_DWORD *)uint64_t v18 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v29 = sub_10016414C(a1, a2, &v30);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "Failed to find PerformanceTest with name: %s", v18, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      unsigned int v14 = 0;
      break;
    default:
      sub_100187B7C();
      uint64_t v28 = 27;
LABEL_26:
      uint64_t v29 = v28;
LABEL_44:
      _assertionFailure(_:_:file:line:flags:)();
      __break(1u);
      JUMPOUT(0x10029978CLL);
  }
  return v14;
}

uint64_t type metadata accessor for PerformanceTestDefinitions_Mac()
{
  return self;
}

uint64_t sub_100299824(uint64_t a1, unint64_t a2)
{
  return sub_1002990B0(a1, a2);
}

uint64_t sub_10029983C()
{
  uint64_t result = sub_100299868();
  byte_100F50B18 = 3;
  qword_100F50B20 = result;
  return result;
}

uint64_t sub_100299868()
{
  uint64_t v0 = type metadata accessor for Navigate(0);
  __chkstk_darwin(v0);
  unint64_t v2 = &v8[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  if (qword_100E624C8 != -1) {
    swift_once();
  }
  SettingReader.read<A>(_:)();
  swift_release();
  char v3 = v8[15];
  *unint64_t v2 = 2;
  type metadata accessor for Navigate.Destination(0);
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)v2 + *(int *)(v0 + 20)) = 0;
  sub_10017DF08(&qword_100E65E98);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100C25ED0;
  *(void *)(v4 + 56) = &type metadata for ChangeMacAppState;
  *(void *)(v4 + 64) = &off_100E38E58;
  *(unsigned char *)(v4 + 32) = 0;
  *(void *)(v4 + 96) = &type metadata for Delay;
  *(void *)(v4 + 104) = &off_100E12AD8;
  *(void *)(v4 + 72) = 0x4008000000000000;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100C28110;
  *(void *)(v5 + 56) = &type metadata for Mica;
  *(void *)(v5 + 64) = &off_100E26518;
  *(unsigned char *)(v5 + 32) = 0;
  *(void *)(v5 + 96) = &type metadata for Delay;
  *(void *)(v5 + 104) = &off_100E12AD8;
  *(void *)(v5 + 72) = 0x3FF0000000000000;
  *(void *)(v5 + 136) = &type metadata for UpdateWeather;
  *(void *)(v5 + 144) = &off_100E3B100;
  *(unsigned char *)(v5 + 112) = v3;
  *(void *)(v5 + 176) = &type metadata for Delay;
  *(void *)(v5 + 184) = &off_100E12AD8;
  *(void *)(v5 + 152) = 0x3FF0000000000000;
  *(void *)(v5 + 216) = v0;
  *(void *)(v5 + 224) = &off_100E22EC8;
  long long v6 = sub_100170694((uint64_t *)(v5 + 192));
  sub_10029A080((uint64_t)v2, (uint64_t)v6);
  *(void *)(v5 + 256) = &type metadata for Delay;
  *(void *)(v5 + 264) = &off_100E12AD8;
  *(void *)(v5 + 232) = 0x3FF0000000000000;
  *(void *)(v5 + 296) = &type metadata for Sidebar;
  *(void *)(v5 + 304) = &off_100E31358;
  *(unsigned char *)(v5 + 272) = 0;
  *(void *)(v5 + 336) = &type metadata for Delay;
  *(void *)(v5 + 344) = &off_100E12AD8;
  *(void *)(v5 + 312) = 0x3FF0000000000000;
  *(void *)(v5 + 376) = &type metadata for Measure;
  *(void *)(v5 + 384) = &off_100E11158;
  *(void *)(v5 + 352) = v4;
  *(void *)(v5 + 416) = &type metadata for Mica;
  *(void *)(v5 + 424) = &off_100E26518;
  *(unsigned char *)(v5 + 392) = 1;
  sub_10029A0E4((uint64_t)v2);
  return v5;
}

uint64_t sub_100299ABC()
{
  uint64_t result = sub_100299AE8();
  byte_100F50B28 = 24;
  qword_100F50B30 = result;
  return result;
}

uint64_t sub_100299AE8()
{
  uint64_t v0 = type metadata accessor for Navigate(0);
  __chkstk_darwin(v0);
  unint64_t v2 = &v11[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  if (qword_100E624C8 != -1) {
    swift_once();
  }
  SettingReader.read<A>(_:)();
  swift_release();
  char v3 = v11[15];
  *unint64_t v2 = 0;
  type metadata accessor for Navigate.Destination(0);
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)v2 + *(int *)(v0 + 20)) = 0;
  if (qword_100E62BD8 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_100F52488;
  double v5 = *(double *)&qword_100F52488 + 200.0;
  sub_10017DF08(&qword_100E65E98);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100C251B0;
  *(void *)(v6 + 56) = &type metadata for ResizeMacWindow;
  *(void *)(v6 + 64) = &off_100E11FC8;
  uint64_t v7 = swift_allocObject();
  *(void *)(v6 + 32) = v7;
  *(void *)(v7 + 16) = v4;
  *(void *)(v7 + 24) = 0x4084000000000000;
  *(double *)(v7 + 32) = v5;
  *(void *)(v7 + 40) = 0x4084000000000000;
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100C28110;
  *(void *)(v8 + 56) = &type metadata for Mica;
  *(void *)(v8 + 64) = &off_100E26518;
  *(unsigned char *)(v8 + 32) = 0;
  *(void *)(v8 + 96) = &type metadata for Delay;
  *(void *)(v8 + 104) = &off_100E12AD8;
  *(void *)(v8 + 72) = 0x3FF0000000000000;
  *(void *)(v8 + 136) = &type metadata for UpdateWeather;
  *(void *)(v8 + 144) = &off_100E3B100;
  *(unsigned char *)(v8 + 112) = v3;
  *(void *)(v8 + 176) = &type metadata for Delay;
  *(void *)(v8 + 184) = &off_100E12AD8;
  *(void *)(v8 + 152) = 0x3FF0000000000000;
  *(void *)(v8 + 216) = v0;
  *(void *)(v8 + 224) = &off_100E22EC8;
  uint64_t v9 = sub_100170694((uint64_t *)(v8 + 192));
  sub_10029A080((uint64_t)v2, (uint64_t)v9);
  *(void *)(v8 + 256) = &type metadata for Delay;
  *(void *)(v8 + 264) = &off_100E12AD8;
  *(void *)(v8 + 232) = 0x3FF0000000000000;
  *(void *)(v8 + 296) = &type metadata for Sidebar;
  *(void *)(v8 + 304) = &off_100E31358;
  *(unsigned char *)(v8 + 272) = 1;
  *(void *)(v8 + 336) = &type metadata for Delay;
  *(void *)(v8 + 344) = &off_100E12AD8;
  *(void *)(v8 + 312) = 0x3FF0000000000000;
  *(void *)(v8 + 376) = &type metadata for Measure;
  *(void *)(v8 + 384) = &off_100E11158;
  *(void *)(v8 + 352) = v6;
  *(void *)(v8 + 416) = &type metadata for Mica;
  *(void *)(v8 + 424) = &off_100E26518;
  *(unsigned char *)(v8 + 392) = 1;
  sub_10029A0E4((uint64_t)v2);
  return v8;
}

uint64_t sub_100299DA0()
{
  uint64_t result = sub_100299DCC();
  byte_100F50B38 = 25;
  qword_100F50B40 = result;
  return result;
}

uint64_t sub_100299DCC()
{
  uint64_t v0 = type metadata accessor for Navigate(0);
  __chkstk_darwin(v0);
  unint64_t v2 = &v10[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  if (qword_100E624C8 != -1) {
    swift_once();
  }
  SettingReader.read<A>(_:)();
  swift_release();
  char v3 = v10[15];
  *unint64_t v2 = 0;
  type metadata accessor for Navigate.Destination(0);
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)v2 + *(int *)(v0 + 20)) = 0;
  if (qword_100E62BD0 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_100F52480;
  sub_10017DF08(&qword_100E65E98);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100C251B0;
  *(void *)(v5 + 56) = &type metadata for ResizeMacWindow;
  *(void *)(v5 + 64) = &off_100E11FC8;
  uint64_t v6 = (void *)swift_allocObject();
  *(void *)(v5 + 32) = v6;
  v6[2] = v4;
  v6[3] = 0x4084000000000000;
  v6[4] = v4;
  v6[5] = 0x408A400000000000;
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100C28110;
  *(void *)(v7 + 56) = &type metadata for Mica;
  *(void *)(v7 + 64) = &off_100E26518;
  *(unsigned char *)(v7 + 32) = 0;
  *(void *)(v7 + 96) = &type metadata for Delay;
  *(void *)(v7 + 104) = &off_100E12AD8;
  *(void *)(v7 + 72) = 0x3FF0000000000000;
  *(void *)(v7 + 136) = &type metadata for UpdateWeather;
  *(void *)(v7 + 144) = &off_100E3B100;
  *(unsigned char *)(v7 + 112) = v3;
  *(void *)(v7 + 176) = &type metadata for Delay;
  *(void *)(v7 + 184) = &off_100E12AD8;
  *(void *)(v7 + 152) = 0x3FF0000000000000;
  *(void *)(v7 + 216) = v0;
  *(void *)(v7 + 224) = &off_100E22EC8;
  uint64_t v8 = sub_100170694((uint64_t *)(v7 + 192));
  sub_10029A080((uint64_t)v2, (uint64_t)v8);
  *(void *)(v7 + 256) = &type metadata for Delay;
  *(void *)(v7 + 264) = &off_100E12AD8;
  *(void *)(v7 + 232) = 0x3FF0000000000000;
  *(void *)(v7 + 296) = &type metadata for Sidebar;
  *(void *)(v7 + 304) = &off_100E31358;
  *(unsigned char *)(v7 + 272) = 1;
  *(void *)(v7 + 336) = &type metadata for Delay;
  *(void *)(v7 + 344) = &off_100E12AD8;
  *(void *)(v7 + 312) = 0x3FF0000000000000;
  *(void *)(v7 + 376) = &type metadata for Measure;
  *(void *)(v7 + 384) = &off_100E11158;
  *(void *)(v7 + 352) = v5;
  *(void *)(v7 + 416) = &type metadata for Mica;
  *(void *)(v7 + 424) = &off_100E26518;
  *(unsigned char *)(v7 + 392) = 1;
  sub_10029A0E4((uint64_t)v2);
  return v7;
}

uint64_t sub_10029A080(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Navigate(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10029A0E4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Navigate(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10029A140()
{
  return swift_deallocObject();
}

uint64_t sub_10029A150(uint64_t a1)
{
  return sub_100199EE0(a1, (void (*)(void))sub_10019C8D4);
}

uint64_t sub_10029A170()
{
  return sub_10018C9CC((void (*)(void))sub_10029AB70);
}

uint64_t sub_10029A190(uint64_t a1)
{
  return sub_100199EE0(a1, (void (*)(void))sub_10029AB70);
}

uint64_t sub_10029A1B0(uint64_t a1)
{
  return sub_100199EE0(a1, (void (*)(void))sub_10019C348);
}

uint64_t sub_10029A1D0()
{
  return sub_10018C9CC((void (*)(void))sub_10029A868);
}

uint64_t sub_10029A1F0(uint64_t a1)
{
  return sub_100199EE0(a1, (void (*)(void))sub_10029A868);
}

uint64_t sub_10029A210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1000D8BC0(&qword_100E65FF0, (void (*)(uint64_t))type metadata accessor for DisplayMetrics);

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t *MapTransitionNamespaceKey.defaultValue.unsafeMutableAddressor()
{
  return &static MapTransitionNamespaceKey.defaultValue;
}

uint64_t static MapTransitionNamespaceKey.defaultValue.getter()
{
  return static MapTransitionNamespaceKey.defaultValue;
}

uint64_t static MapTransitionNamespaceKey.defaultValue.setter(uint64_t a1, char a2)
{
  uint64_t result = swift_beginAccess();
  static MapTransitionNamespaceKey.defaultValue = a1;
  byte_100E65EB8 = a2 & 1;
  return result;
}

uint64_t (*static MapTransitionNamespaceKey.defaultValue.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_10029A3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_10029A81C();

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

double static SafeAreaInsetsKey.defaultValue.getter()
{
  if (qword_100E621D8 != -1) {
    swift_once();
  }
  return *(double *)&static SafeAreaInsetsKey.defaultValue;
}

void *AutomationInfoEnabledKey.defaultValue.unsafeMutableAddressor()
{
  return &static AutomationInfoEnabledKey.defaultValue;
}

uint64_t static WindowHorizontalSizeClassKey.defaultValue.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_100E621E0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10017DF08(&qword_100E65ED8);
  uint64_t v3 = sub_1002102B0(v2, (uint64_t)static WindowHorizontalSizeClassKey.defaultValue);
  return sub_1000F350C(v3, a1, &qword_100E65ED8);
}

void *SidebarVisibilityKey.defaultValue.unsafeMutableAddressor()
{
  return &static SidebarVisibilityKey.defaultValue;
}

void *SearchOverlayVisibilityKey.defaultValue.unsafeMutableAddressor()
{
  return &static SearchOverlayVisibilityKey.defaultValue;
}

void *LocationKey.defaultValue.unsafeMutableAddressor()
{
  return &static LocationKey.defaultValue;
}

void static LocationKey.defaultValue.getter()
{
}

void sub_10029A51C(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
}

uint64_t sub_10029A524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10029A7B8(&qword_100E65F10, &qword_100E65F18);

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

void *GridCompactLayoutKey.defaultValue.unsafeMutableAddressor()
{
  return &static GridCompactLayoutKey.defaultValue;
}

uint64_t static TipAlignmentKey.defaultValue.getter()
{
  if (qword_100E621E8 != -1) {
    swift_once();
  }
  return static TipAlignmentKey.defaultValue;
}

void *HeaderLineLimitKey.defaultValue.unsafeMutableAddressor()
{
  return &static HeaderLineLimitKey.defaultValue;
}

uint64_t sub_10029A608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10029A7B8(&qword_100E65EF8, &qword_100E65F00);

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

double static CompressedLocationHeaderHeightKey.defaultValue.getter()
{
  if (qword_100E621F0 != -1) {
    swift_once();
  }
  return *(double *)&static CompressedLocationHeaderHeightKey.defaultValue;
}

uint64_t sub_10029A6D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_1001364A8();

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

void type metadata accessor for MapTransitionNamespaceKey()
{
}

void type metadata accessor for SafeAreaInsetsKey()
{
}

void type metadata accessor for AutomationInfoEnabledKey()
{
}

void type metadata accessor for WindowHorizontalSizeClassKey()
{
}

void type metadata accessor for SidebarVisibilityKey()
{
}

void type metadata accessor for SearchOverlayVisibilityKey()
{
}

void type metadata accessor for LocationKey()
{
}

void type metadata accessor for GridCompactLayoutKey()
{
}

void type metadata accessor for TipAlignmentKey()
{
}

void type metadata accessor for HeaderLineLimitKey()
{
}

void type metadata accessor for CompressedLocationHeaderHeightKey()
{
}

uint64_t sub_10029A7B8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10029A81C()
{
  unint64_t result = qword_100E65F38;
  if (!qword_100E65F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65F38);
  }
  return result;
}

unint64_t sub_10029A868()
{
  unint64_t result = qword_100E65F40;
  if (!qword_100E65F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E65F40);
  }
  return result;
}

uint64_t sub_10029A8B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_10029AA18();

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

uint64_t sub_10029A918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v8 = sub_10029AAEC();

  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, v8);
}

ValueMetadata *type metadata accessor for IsPageTransitioningPreferenceKey()
{
  return &type metadata for IsPageTransitioningPreferenceKey;
}

void type metadata accessor for PerformanceTestFeaturesKey()
{
}

ValueMetadata *type metadata accessor for UseLargerLayoutKey()
{
  return &type metadata for UseLargerLayoutKey;
}

void type metadata accessor for IsMapPinnedToTopKey()
{
}

ValueMetadata *type metadata accessor for ForegroundEffectKey()
{
  return &type metadata for ForegroundEffectKey;
}

void type metadata accessor for MapPresentationStyleKey()
{
}

ValueMetadata *type metadata accessor for LocationConditionRequiresAdditionalContrastEnvironmentKey()
{
  return &type metadata for LocationConditionRequiresAdditionalContrastEnvironmentKey;
}

void type metadata accessor for DisplayMetricsKey()
{
}

void type metadata accessor for GridGeometryKey()
{
}

ValueMetadata *type metadata accessor for IsLocationPreviewEnvironmentKey()
{
  return &type metadata for IsLocationPreviewEnvironmentKey;
}

ValueMetadata *type metadata accessor for IsBackgroundDarkKey()
{
  return &type metadata for IsBackgroundDarkKey;
}

unint64_t sub_10029AA18()
{
  unint64_t result = qword_100E66008;
  if (!qword_100E66008)
  {
    sub_10018C6DC(&qword_100E65FA8);
    sub_1000D8BC0(&qword_100E66010, (void (*)(uint64_t))&type metadata accessor for ForegroundEffect);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E66008);
  }
  return result;
}

void type metadata accessor for LocationComponentContainerWidthEnvironmentKey()
{
}

void type metadata accessor for WeatherBackgroundOrientationKey()
{
}

void type metadata accessor for AnimatedBackgroundsDisabledKey()
{
}

void type metadata accessor for MapSupportsScaleAnimationsEnvironmentKey()
{
}

unint64_t sub_10029AAEC()
{
  unint64_t result = qword_100E66030;
  if (!qword_100E66030)
  {
    sub_10018C6DC(&qword_100E66038);
    sub_1001364A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E66030);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationComponentContentWidthPreferenceKey()
{
  return &type metadata for LocationComponentContentWidthPreferenceKey;
}

unint64_t sub_10029AB70()
{
  unint64_t result = qword_100E66048;
  if (!qword_100E66048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E66048);
  }
  return result;
}

ValueMetadata *type metadata accessor for ComparisonBarView()
{
  return &type metadata for ComparisonBarView;
}

uint64_t sub_10029ABD0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10029ABEC@<X0>(double *a1@<X8>, double a2@<D0>, double a3@<D1>)
{
  *a1 = a2;
  a1[1] = a3;
  uint64_t v4 = sub_10017DF08(&qword_100E66050);
  return sub_10029AC28((uint64_t)a1 + *(int *)(v4 + 44));
}

uint64_t sub_10029AC28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v1 = type metadata accessor for Capsule();
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v25[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_10017DF08(&qword_100E66058);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v27 = &v25[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v9 = &v25[-v8];
  __chkstk_darwin(v10);
  uint64_t v12 = &v25[-v11];
  __chkstk_darwin(v13);
  uint64_t v15 = &v25[-v14];
  uint64_t v16 = enum case for RoundedCornerStyle.continuous(_:);
  unsigned int v26 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v17 = type metadata accessor for RoundedCornerStyle();
  uint64_t v18 = *(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104);
  v18(v3, v16, v17);
  static Color.black.getter();
  uint64_t v19 = Color.opacity(_:)();
  swift_release();
  sub_10029AEC8((uint64_t)v3, (uint64_t)v12);
  *(void *)&v12[*(int *)(v5 + 60)] = v19;
  *(_WORD *)&v12[*(int *)(v5 + 64)] = 256;
  sub_10029AF2C((uint64_t)v3);
  sub_10029AF88((uint64_t)v12, (uint64_t)v15);
  v18(v3, v26, v17);
  uint64_t v20 = static Color.cyan.getter();
  sub_10029AEC8((uint64_t)v3, (uint64_t)v9);
  *(void *)&v9[*(int *)(v5 + 60)] = v20;
  *(_WORD *)&v9[*(int *)(v5 + 64)] = 256;
  sub_10029AF2C((uint64_t)v3);
  sub_10029AF88((uint64_t)v9, (uint64_t)v12);
  sub_10029AFF0((uint64_t)v15, (uint64_t)v9);
  uint64_t v21 = v27;
  sub_10029AFF0((uint64_t)v12, (uint64_t)v27);
  uint64_t v22 = v28;
  sub_10029AFF0((uint64_t)v9, v28);
  uint64_t v23 = sub_10017DF08(&qword_100E66060);
  sub_10029AFF0((uint64_t)v21, v22 + *(int *)(v23 + 48));
  sub_10029B058((uint64_t)v12);
  sub_10029B058((uint64_t)v15);
  sub_10029B058((uint64_t)v21);
  return sub_10029B058((uint64_t)v9);
}

uint64_t sub_10029AEC0@<X0>(double *a1@<X8>)
{
  return sub_10029ABEC(a1, *v1, v1[1]);
}

uint64_t sub_10029AEC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Capsule();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10029AF2C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Capsule();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10029AF88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E66058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10029AFF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E66058);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10029B058(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E66058);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for ComparisonBarViewLayout()
{
  return &type metadata for ComparisonBarViewLayout;
}

unint64_t sub_10029B0CC()
{
  unint64_t result = qword_100E66068;
  if (!qword_100E66068)
  {
    sub_10018C6DC(&qword_100E66050);
    sub_1001246C8(&qword_100E66070, &qword_100E66078);
    sub_1001246C8(&qword_100E66080, &qword_100E66088);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E66068);
  }
  return result;
}

double sub_10029B190(uint64_t a1, char a2)
{
  double result = *(double *)&a1;
  if (a2) {
    return 10.0;
  }
  return result;
}

uint64_t sub_10029B1B0(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v6 = type metadata accessor for LayoutSubview();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v15[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v12 = &v15[-v11];
  LayoutSubviews.subscript.getter();
  LayoutSubviews.subscript.getter();
  static UnitPoint.topLeading.getter();
  v15[24] = a2 & 1;
  v15[16] = a4 & 1;
  LayoutSubview.place(at:anchor:proposal:)();
  static UnitPoint.topLeading.getter();
  v15[8] = 0;
  v15[0] = 0;
  LayoutSubview.place(at:anchor:proposal:)();
  uint64_t v13 = *(void (**)(unsigned char *, uint64_t))(v7 + 8);
  v13(v9, v6);
  return ((uint64_t (*)(unsigned char *, uint64_t))v13)(v12, v6);
}

double sub_10029B3A0(uint64_t a1, char a2)
{
  return sub_10029B190(a1, a2 & 1);
}

uint64_t sub_10029B3BC(uint64_t a1, char a2, uint64_t a3, char a4)
{
  return sub_10029B1B0(a1, a2 & 1, a3, a4 & 1);
}

void sub_10029B3D8()
{
}

unint64_t sub_10029B3E4()
{
  unint64_t result = qword_100E66090;
  if (!qword_100E66090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E66090);
  }
  return result;
}

void *sub_10029B430(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = a2[6];
    v4[5] = a2[5];
    v4[6] = v8;
    uint64_t v9 = a2[8];
    v4[7] = a2[7];
    v4[8] = v9;
    uint64_t v10 = a2[9];
    uint64_t v11 = a2[10];
    uint64_t v12 = *(int *)(a3 + 36);
    uint64_t v13 = (uint64_t *)((char *)a2 + v12);
    uint64_t v14 = (void *)((char *)v4 + v12);
    v4[9] = v10;
    v4[10] = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15))
      {
        uint64_t v16 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v14, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v14, v13, v15);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v15);
      }
    }
    else
    {
      *uint64_t v14 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_10029B628(uint64_t a1, uint64_t a2)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v4, 1, v5);
    if (!result)
    {
      long long v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
      return v7(v4, v5);
    }
  }
  else
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_10029B720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v7;
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  uint64_t v9 = *(void *)(a2 + 80);
  uint64_t v10 = *(int *)(a3 + 36);
  uint64_t v11 = (void *)(a2 + v10);
  uint64_t v12 = (void *)(a1 + v10);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v13))
    {
      uint64_t v14 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v12, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v12, v11, v13);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v13);
    }
  }
  else
  {
    *uint64_t v12 = *v11;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *sub_10029B8C0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_1000C1E18(a1, a2);
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 36);
    uint64_t v7 = (uint64_t *)((char *)a1 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    sub_1001781AC((uint64_t)a1 + v6, (uint64_t *)&unk_100EAA560);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
      {
        uint64_t v10 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
      }
    }
    else
    {
      void *v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10029BA7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9))
    {
      uint64_t v10 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v6, v7, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 0, 1, v9);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10029BBD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v9;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v10 = *(int *)(a3 + 36);
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (const void *)(a2 + v10);
    sub_1001781AC(a1 + v10, (uint64_t *)&unk_100EAA560);
    uint64_t v13 = sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v14))
      {
        uint64_t v15 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v14);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10029BD70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10029BD84);
}

uint64_t sub_10029BD84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_100163020(*(void *)(a1 + 24));
  }
  uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100EAA540);
  uint64_t v8 = a1 + *(int *)(a3 + 36);

  return _s7Weather24LocationCompositionStateOwet_0(v8, a2, v7);
}

uint64_t sub_10029BE04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10029BE18);
}

uint64_t sub_10029BE18(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100EAA540);
    uint64_t v8 = v5 + *(int *)(a4 + 36);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SearchResultsView(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E660F0);
}

void sub_10029BEBC()
{
  sub_1002308A0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_10029BF70()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10029BF8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v61 = a1;
  uint64_t v3 = (int *)type metadata accessor for SearchResultsList(0);
  sub_100162E4C();
  __chkstk_darwin(v4);
  long long v6 = (void *)((char *)v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v59 = sub_10017DF08(&qword_100E66140);
  sub_100162E4C();
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v56 = (uint64_t)v55 - v11;
  uint64_t v12 = sub_10017DF08(&qword_100E66148);
  sub_100162E4C();
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_10017DF08(&qword_100E66150);
  sub_100162E4C();
  __chkstk_darwin(v16);
  sub_100109314();
  uint64_t v58 = v17;
  uint64_t v18 = sub_10017DF08(&qword_100E66158);
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_100109314();
  uint64_t v60 = v20;
  uint64_t v21 = sub_10017DF08(&qword_100E65ED8);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  unsigned int v26 = (char *)v55 - v25;
  type metadata accessor for SearchResultsView(0);
  sub_10019B2FC();
  uint64_t v27 = type metadata accessor for UserInterfaceSizeClass();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27) == 1)
  {
    char v69 = 0;
    sub_10017F830();
    *uint64_t v15 = v62[0];
    swift_storeEnumTagMultiPayload();
    sub_10017DF08(&qword_100E66160);
    sub_10029E130();
    sub_10029E264();
LABEL_8:
    _ConditionalContent<>.init(storage:)();
    return sub_1001781AC((uint64_t)v26, &qword_100E65ED8);
  }
  v55[1] = v12;
  v55[2] = v18;
  sub_10006DF38((uint64_t)v26, (uint64_t)v23, &qword_100E65ED8);
  sub_10017C808();
  uint64_t v29 = v28;
  int v30 = (*(uint64_t (**)(char *, uint64_t))(v28 + 88))(v23, v27);
  if (v30 == enum case for UserInterfaceSizeClass.compact(_:))
  {
    sub_10020D948((uint64_t)v2, (uint64_t)v62);
    uint64_t v31 = v2[5];
    uint64_t v32 = v2[6];
    uint64_t v33 = v2[7];
    uint64_t v34 = v2[8];
    *long long v6 = swift_getKeyPath();
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    swift_storeEnumTagMultiPayload();
    sub_1001262E4(v62, (uint64_t)v6 + v3[5]);
    *(uint64_t *)((char *)v6 + v3[6]) = v31;
    *(uint64_t *)((char *)v6 + v3[7]) = v32;
    int v35 = (uint64_t *)((char *)v6 + v3[8]);
    void *v35 = v33;
    v35[1] = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LOBYTE(v31) = static Edge.Set.top.getter();
    EdgeInsets.init(_all:)();
    uint64_t v37 = v36;
    uint64_t v39 = v38;
    uint64_t v41 = v40;
    uint64_t v43 = v42;
    sub_10029F488((uint64_t)v6, (uint64_t)v9, (void (*)(void))type metadata accessor for SearchResultsList);
    uint64_t v44 = &v9[*(int *)(v59 + 36)];
    *uint64_t v44 = v31;
    *((void *)v44 + 1) = v37;
    *((void *)v44 + 2) = v39;
    *((void *)v44 + 3) = v41;
    *((void *)v44 + 4) = v43;
    v44[40] = 0;
    sub_10029E2D8((uint64_t)v6);
    uint64_t v45 = (uint64_t)v9;
    uint64_t v46 = v56;
    sub_10020E72C(v45, v56, &qword_100E66140);
    sub_10006DF38(v46, v58, &qword_100E66140);
    swift_storeEnumTagMultiPayload();
    sub_10029E16C();
    sub_10029E1B8();
    uint64_t v47 = v60;
    _ConditionalContent<>.init(storage:)();
    sub_10006DF38(v47, (uint64_t)v15, &qword_100E66158);
    sub_10017E030();
    sub_10017DF08(&qword_100E66160);
    sub_10029E130();
    sub_10029E264();
    sub_10019E6A8();
    _ConditionalContent<>.init(storage:)();
    sub_1001781AC(v47, &qword_100E66158);
    sub_1001781AC(v46, &qword_100E66140);
  }
  else
  {
    if (v30 != enum case for UserInterfaceSizeClass.regular(_:))
    {
      (*(void (**)(char *, uint64_t))(v29 + 8))(v23, v27);
      char v69 = 1;
      sub_10017F830();
      *uint64_t v15 = v62[0];
      swift_storeEnumTagMultiPayload();
      sub_10017DF08(&qword_100E66160);
      sub_10029E130();
      sub_10029E264();
      sub_10019E6A8();
      goto LABEL_8;
    }
    sub_10020D948((uint64_t)v2, (uint64_t)v62);
    uint64_t v48 = v2[6];
    uint64_t v49 = v2[7];
    uint64_t v50 = v2[8];
    uint64_t v51 = v2[9];
    uint64_t v52 = v2[10];
    uint64_t v63 = v2[5];
    uint64_t v64 = v48;
    uint64_t v65 = v49;
    uint64_t v66 = v50;
    uint64_t v67 = v51;
    uint64_t v68 = v52;
    sub_10029E334((uint64_t)v62, v58);
    swift_storeEnumTagMultiPayload();
    sub_10029E16C();
    sub_10029E1B8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v53 = v60;
    _ConditionalContent<>.init(storage:)();
    sub_10006DF38(v53, (uint64_t)v15, &qword_100E66158);
    sub_10017E030();
    sub_10017DF08(&qword_100E66160);
    sub_10029E130();
    sub_10029E264();
    sub_10019E6A8();
    _ConditionalContent<>.init(storage:)();
    sub_1001781AC(v53, &qword_100E66158);
    sub_10029E36C((uint64_t)v62);
  }
  return sub_1001781AC((uint64_t)v26, &qword_100E65ED8);
}

uint64_t type metadata accessor for SearchResultsList(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E661E8);
}

uint64_t sub_10029C640@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static HorizontalAlignment.leading.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v3 = sub_10017DF08(&qword_100E66240);
  return sub_10029C688(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_10029C688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v68 = a2;
  uint64_t v64 = type metadata accessor for SearchResultsList(0) - 8;
  __chkstk_darwin(v64);
  uint64_t v63 = (uint64_t *)((char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v67 = sub_10017DF08(&qword_100E66248) - 8;
  __chkstk_darwin(v67);
  uint64_t v65 = (uint64_t)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v66 = (uint64_t)&v53 - v6;
  uint64_t v60 = type metadata accessor for Divider();
  uint64_t v58 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v54 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E66250);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v69 = (uint64_t)&v53 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v55 = (uint64_t)&v53 - v12;
  uint64_t v56 = (void *)a1;
  uint64_t v13 = *(void *)(a1 + 80);
  *(void *)&long long v76 = *(void *)(a1 + 72);
  *((void *)&v76 + 1) = v13;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v14 = Text.init<A>(_:)();
  uint64_t v16 = v15;
  char v18 = v17 & 1;
  static Font.largeTitle.getter();
  static Font.Weight.bold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v19 = Text.font(_:)();
  uint64_t v21 = v20;
  char v23 = v22;
  swift_release();
  sub_100191924(v14, v16, v18);
  swift_bridgeObjectRelease();
  static Color.primary.getter();
  uint64_t v24 = Text.foregroundColor(_:)();
  uint64_t v61 = v25;
  char v27 = v26;
  uint64_t v62 = v28;
  swift_release();
  int v59 = v27 & 1;
  sub_100191924(v19, v21, v23 & 1);
  swift_bridgeObjectRelease();
  int v57 = static Edge.Set.leading.getter();
  uint64_t v29 = v54;
  Divider.init()();
  LOBYTE(a1) = static Edge.Set.leading.getter();
  uint64_t v30 = v58;
  uint64_t v31 = v69;
  uint64_t v32 = v60;
  (*(void (**)(uint64_t, char *, uint64_t))(v58 + 16))(v69, v29, v60);
  uint64_t v33 = v31 + *(int *)(v9 + 44);
  *(unsigned char *)uint64_t v33 = a1;
  *(_OWORD *)(v33 + 8) = 0u;
  *(_OWORD *)(v33 + 24) = 0u;
  *(unsigned char *)(v33 + 40) = 1;
  (*(void (**)(char *, uint64_t))(v30 + 8))(v29, v32);
  uint64_t v34 = v55;
  sub_10020E72C(v31, v55, &qword_100E66250);
  int v35 = v56;
  sub_10020D948((uint64_t)v56, (uint64_t)&v76);
  uint64_t v36 = v35[5];
  uint64_t v37 = v35[6];
  uint64_t v39 = v35[7];
  uint64_t v38 = v35[8];
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v41 = (uint64_t)v63;
  *uint64_t v63 = KeyPath;
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  swift_storeEnumTagMultiPayload();
  uint64_t v42 = (int *)v64;
  sub_1001262E4(&v76, v41 + *(int *)(v64 + 28));
  *(void *)(v41 + v42[8]) = v36;
  *(void *)(v41 + v42[9]) = v37;
  uint64_t v43 = (void *)(v41 + v42[10]);
  *uint64_t v43 = v39;
  v43[1] = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  static Font.body.getter();
  static Font.Weight.bold.getter();
  uint64_t v44 = Font.weight(_:)();
  swift_release();
  uint64_t v45 = swift_getKeyPath();
  uint64_t v46 = v65;
  sub_10029F488(v41, v65, (void (*)(void))type metadata accessor for SearchResultsList);
  uint64_t v47 = (uint64_t *)(v46 + *(int *)(v67 + 44));
  uint64_t *v47 = v45;
  v47[1] = v44;
  sub_10029E2D8(v41);
  uint64_t v48 = v66;
  sub_10020E72C(v46, v66, &qword_100E66248);
  uint64_t v49 = v24;
  *(void *)&long long v76 = v24;
  uint64_t v50 = v61;
  *((void *)&v76 + 1) = v61;
  LOBYTE(v9) = v59;
  char v77 = v59;
  uint64_t v78 = v62;
  char v79 = v57;
  long long v80 = 0u;
  long long v81 = 0u;
  char v82 = 1;
  uint64_t v74 = 0;
  char v75 = 1;
  v83[0] = (uint64_t)&v76;
  v83[1] = (uint64_t)&v74;
  uint64_t v51 = v69;
  sub_10006DF38(v34, v69, &qword_100E66250);
  uint64_t v72 = 0;
  char v73 = 1;
  v83[2] = v51;
  v83[3] = (uint64_t)&v72;
  uint64_t v70 = 0;
  char v71 = 1;
  v83[4] = (uint64_t)&v70;
  sub_10006DF38(v48, v46, &qword_100E66248);
  v83[5] = v46;
  sub_1004B8800(v83, v68);
  sub_100190CC4(v49, v50, v9);
  swift_bridgeObjectRetain();
  sub_1001781AC(v48, &qword_100E66248);
  sub_1001781AC(v34, &qword_100E66250);
  sub_100191924(v49, v50, v9);
  swift_bridgeObjectRelease();
  sub_1001781AC(v46, &qword_100E66248);
  sub_1001781AC(v51, &qword_100E66250);
  sub_100191924(v76, *((uint64_t *)&v76 + 1), v77);
  return swift_bridgeObjectRelease();
}

double sub_10029CCF8()
{
  uint64_t v0 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100E662F0);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E65ED8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v21 - v12;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v21 - v15;
  sub_10019B2FC();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v13, enum case for UserInterfaceSizeClass.compact(_:), v0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v0);
  uint64_t v17 = (uint64_t)&v7[*(int *)(v5 + 56)];
  sub_10006DF38((uint64_t)v16, (uint64_t)v7, &qword_100E65ED8);
  sub_10006DF38((uint64_t)v13, v17, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v0) == 1)
  {
    sub_1001781AC((uint64_t)v13, &qword_100E65ED8);
    sub_1001781AC((uint64_t)v16, &qword_100E65ED8);
    if (_s7Weather24LocationCompositionStateOwet_0(v17, 1, v0) == 1)
    {
      sub_1001781AC((uint64_t)v7, &qword_100E65ED8);
      return 20.0;
    }
  }
  else
  {
    sub_10006DF38((uint64_t)v7, (uint64_t)v10, &qword_100E65ED8);
    if (_s7Weather24LocationCompositionStateOwet_0(v17, 1, v0) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v3, v17, v0);
      sub_10029F390(&qword_100E65F28, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v20 = *(void (**)(char *, uint64_t))(v1 + 8);
      v20(v3, v0);
      sub_1001781AC((uint64_t)v13, &qword_100E65ED8);
      sub_1001781AC((uint64_t)v16, &qword_100E65ED8);
      v20(v10, v0);
      sub_1001781AC((uint64_t)v7, &qword_100E65ED8);
      double result = 20.0;
      if (v19) {
        return result;
      }
      return 16.0;
    }
    sub_1001781AC((uint64_t)v13, &qword_100E65ED8);
    sub_1001781AC((uint64_t)v16, &qword_100E65ED8);
    (*(void (**)(char *, uint64_t))(v1 + 8))(v10, v0);
  }
  sub_1001781AC((uint64_t)v7, &qword_100E662F0);
  return 16.0;
}

uint64_t sub_10029D0A8()
{
  return ScrollView.init(_:showsIndicators:content:)();
}

uint64_t sub_10029D14C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = static HorizontalAlignment.leading.getter();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  uint64_t v4 = sub_10017DF08(&qword_100E66268);
  return sub_10029D198(a1, a2 + *(int *)(v4 + 44));
}

uint64_t sub_10029D198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v128 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100E66270);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  v127 = (char *)&v107 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v107 - v7;
  uint64_t v116 = type metadata accessor for Divider();
  uint64_t v115 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  v114 = (char *)&v107 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_10017DF08(&qword_100E66250);
  __chkstk_darwin(v122);
  v113 = (char *)&v107 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E66278);
  __chkstk_darwin(v11 - 8);
  uint64_t v126 = (uint64_t)&v107 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v125 = (uint64_t)&v107 - v14;
  uint64_t v15 = type metadata accessor for SearchResultsList(0);
  uint64_t v132 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v133 = (uint64_t)&v107 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = v16;
  uint64_t v124 = sub_10017DF08(&qword_100E66280);
  uint64_t v123 = *(void *)(v124 - 8);
  __chkstk_darwin(v124);
  v121 = (char *)&v107 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v120 = (char *)&v107 - v19;
  uint64_t v119 = type metadata accessor for AccessibilityTraits();
  uint64_t v118 = *(void *)(v119 - 8);
  __chkstk_darwin(v119);
  v117 = (char *)&v107 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for Font.TextStyle();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v107 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10017DF08(&qword_100E66288);
  __chkstk_darwin(v25 - 8);
  uint64_t v130 = (uint64_t)&v107 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v129 = (uint64_t)&v107 - v28;
  uint64_t v29 = sub_10017DF08(&qword_100E66290);
  __chkstk_darwin(v29 - 8);
  uint64_t v31 = (char *)&v107 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v107 - v33;
  uint64_t v131 = v15;
  uint64_t v35 = *(int *)(v15 + 24);
  if (*(void *)(*(void *)(a1 + v35) + 16))
  {
    v108 = (char *)&v107 - v33;
    v109 = v31;
    v110 = v8;
    uint64_t v111 = v4;
    uint64_t v112 = v3;
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v36 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v135 = a1;
    uint64_t v38 = v37;
    char v40 = v39 & 1;
    (*(void (**)(char *, void, uint64_t))(v22 + 104))(v24, enum case for Font.TextStyle.subheadline(_:), v21);
    static Font.Weight.medium.getter();
    static Font.system(_:weight:)();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
    Font.smallCaps()();
    swift_release();
    uint64_t v41 = Text.font(_:)();
    uint64_t v43 = v42;
    char v45 = v44;
    swift_release();
    char v46 = v45 & 1;
    sub_100191924(v36, v38, v40);
    swift_bridgeObjectRelease();
    id v47 = [self tertiaryLabelColor];
    uint64_t v136 = Color.init(_:)();
    uint64_t v48 = Text.foregroundStyle<A>(_:)();
    uint64_t v50 = v49;
    char v52 = v51;
    uint64_t v54 = v53;
    sub_100191924(v41, v43, v46);
    swift_release();
    swift_bridgeObjectRelease();
    char v55 = static Edge.Set.horizontal.getter();
    sub_10029CCF8();
    EdgeInsets.init(_all:)();
    uint64_t v136 = v48;
    uint64_t v137 = v50;
    char v138 = v52 & 1;
    uint64_t v139 = v54;
    char v140 = v55;
    uint64_t v141 = v56;
    uint64_t v142 = v57;
    uint64_t v143 = v58;
    uint64_t v144 = v59;
    char v145 = 0;
    uint64_t v60 = v117;
    static AccessibilityTraits.isHeader.getter();
    sub_10017DF08(&qword_100E66298);
    sub_10029F298();
    uint64_t v61 = v130;
    View.accessibilityAddTraits(_:)();
    (*(void (**)(char *, uint64_t))(v118 + 8))(v60, v119);
    sub_100191924(v136, v137, v138);
    swift_bridgeObjectRelease();
    uint64_t v62 = v129;
    sub_10020E72C(v61, v129, &qword_100E66288);
    uint64_t v136 = *(void *)(v135 + v35);
    swift_getKeyPath();
    uint64_t v63 = v133;
    sub_10029F488(v135, v133, (void (*)(void))type metadata accessor for SearchResultsList);
    unint64_t v64 = (*(unsigned __int8 *)(v132 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v132 + 80);
    uint64_t v65 = swift_allocObject();
    sub_10029F314(v63, v65 + v64);
    swift_bridgeObjectRetain();
    sub_10017DF08(&qword_100E662A8);
    type metadata accessor for SuggestedSearchResultRowView();
    sub_1001246C8(&qword_100E662B0, &qword_100E662A8);
    sub_10029F390(&qword_100E63510, (void (*)(uint64_t))&type metadata accessor for LocationOfInterestType);
    sub_10029F390(&qword_100E662B8, (void (*)(uint64_t))type metadata accessor for SuggestedSearchResultRowView);
    uint64_t v66 = v120;
    uint64_t v67 = v135;
    ForEach<>.init(_:id:content:)();
    if (*(void *)(*(void *)(v67 + *(int *)(v131 + 28)) + 16))
    {
      uint64_t v68 = v114;
      Divider.init()();
      char v69 = static Edge.Set.horizontal.getter();
      sub_10029CCF8();
      EdgeInsets.init(_all:)();
      uint64_t v71 = v70;
      uint64_t v73 = v72;
      uint64_t v75 = v74;
      uint64_t v77 = v76;
      uint64_t v78 = v115;
      uint64_t v79 = (uint64_t)v113;
      uint64_t v80 = v116;
      (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v113, v68, v116);
      uint64_t v81 = v122;
      uint64_t v82 = v79 + *(int *)(v122 + 36);
      *(unsigned char *)uint64_t v82 = v69;
      *(void *)(v82 + 8) = v71;
      *(void *)(v82 + 16) = v73;
      *(void *)(v82 + 24) = v75;
      *(void *)(v82 + 32) = v77;
      *(unsigned char *)(v82 + 40) = 0;
      (*(void (**)(char *, uint64_t))(v78 + 8))(v68, v80);
      uint64_t v83 = v125;
      sub_10020E72C(v79, v125, &qword_100E66250);
      uint64_t v84 = 0;
    }
    else
    {
      uint64_t v84 = 1;
      uint64_t v83 = v125;
      uint64_t v81 = v122;
    }
    _s7Weather24LocationCompositionStateOwst_0(v83, v84, 1, v81);
    sub_10006DF38(v62, v61, &qword_100E66288);
    uint64_t v86 = v123;
    v87 = *(void (**)(char *, char *, uint64_t))(v123 + 16);
    v88 = v121;
    uint64_t v89 = v61;
    uint64_t v90 = v124;
    v87(v121, v66, v124);
    uint64_t v91 = v126;
    sub_10006DF38(v83, v126, &qword_100E66278);
    uint64_t v92 = v89;
    v93 = v66;
    uint64_t v31 = v109;
    sub_10006DF38(v92, (uint64_t)v109, &qword_100E66288);
    uint64_t v94 = sub_10017DF08(&qword_100E662C0);
    v87(&v31[*(int *)(v94 + 48)], v88, v90);
    sub_10006DF38(v91, (uint64_t)&v31[*(int *)(v94 + 64)], &qword_100E66278);
    sub_1001781AC(v83, &qword_100E66278);
    v95 = *(void (**)(char *, uint64_t))(v86 + 8);
    v95(v93, v90);
    sub_1001781AC(v129, &qword_100E66288);
    sub_1001781AC(v91, &qword_100E66278);
    v95(v88, v90);
    sub_1001781AC(v130, &qword_100E66288);
    uint64_t v96 = sub_10017DF08(&qword_100E662C8);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v96);
    uint64_t v34 = v108;
    sub_10020E72C((uint64_t)v31, (uint64_t)v108, &qword_100E66290);
    uint64_t v3 = v112;
    uint64_t v4 = v111;
    uint64_t v8 = v110;
    a1 = v135;
  }
  else
  {
    uint64_t v85 = sub_10017DF08(&qword_100E662C8);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 1, 1, v85);
  }
  uint64_t v97 = v132;
  uint64_t v98 = v133;
  uint64_t v136 = *(void *)(a1 + *(int *)(v131 + 28));
  swift_getKeyPath();
  sub_10029F488(a1, v98, (void (*)(void))type metadata accessor for SearchResultsList);
  unint64_t v99 = (*(unsigned __int8 *)(v97 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80);
  uint64_t v100 = swift_allocObject();
  sub_10029F314(v98, v100 + v99);
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100E662D0);
  type metadata accessor for SearchResultRowView();
  sub_1001246C8(&qword_100E662D8, &qword_100E662D0);
  sub_10029F390(&qword_100E662E0, (void (*)(uint64_t))type metadata accessor for SearchResultRowView);
  ForEach<>.init(_:id:content:)();
  sub_10006DF38((uint64_t)v34, (uint64_t)v31, &qword_100E66290);
  v101 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v102 = v127;
  v101(v127, v8, v3);
  uint64_t v103 = v128;
  sub_10006DF38((uint64_t)v31, v128, &qword_100E66290);
  uint64_t v104 = sub_10017DF08(&qword_100E662E8);
  v101((char *)(v103 + *(int *)(v104 + 48)), v102, v3);
  v105 = *(void (**)(char *, uint64_t))(v4 + 8);
  v105(v8, v3);
  sub_1001781AC((uint64_t)v34, &qword_100E66290);
  v105(v102, v3);
  return sub_1001781AC((uint64_t)v31, &qword_100E66290);
}

uint64_t sub_10029DFE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for SearchResultsList(0);
  sub_10020D948(a2 + *(int *)(v6 + 20), a3);
  uint64_t v7 = a3 + *(int *)(type metadata accessor for SuggestedSearchResultRowView() + 20);
  uint64_t v8 = type metadata accessor for LocationOfInterest();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);

  return v9(v7, a1, v8);
}

uint64_t sub_10029E080@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for SearchResultsList(0);
  sub_10020D948(a2 + *(int *)(v6 + 20), a3);
  uint64_t v7 = type metadata accessor for SearchResultRowView();
  sub_10029F488(a1, a3 + *(int *)(v7 + 20), (void (*)(void))type metadata accessor for SearchLocation);
  uint64_t v8 = (uint64_t *)(a2 + *(int *)(v6 + 32));
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  uint64_t v11 = (void *)(a3 + *(int *)(v7 + 24));
  *uint64_t v11 = v10;
  v11[1] = v9;

  return swift_bridgeObjectRetain();
}

uint64_t sub_10029E130()
{
  return sub_10029F1C8(&qword_100E66168, &qword_100E66158, (void (*)(void))sub_10029E16C, (void (*)(void))sub_10029E1B8);
}

unint64_t sub_10029E16C()
{
  unint64_t result = qword_100E66170;
  if (!qword_100E66170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E66170);
  }
  return result;
}

unint64_t sub_10029E1B8()
{
  unint64_t result = qword_100E66178;
  if (!qword_100E66178)
  {
    sub_10018C6DC(&qword_100E66140);
    sub_10029F390(&qword_100E66180, (void (*)(uint64_t))type metadata accessor for SearchResultsList);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E66178);
  }
  return result;
}

unint64_t sub_10029E264()
{
  unint64_t result = qword_100E66188;
  if (!qword_100E66188)
  {
    sub_10018C6DC(&qword_100E66160);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E66188);
  }
  return result;
}

uint64_t sub_10029E2D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SearchResultsList(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10029E334(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10029E36C(uint64_t a1)
{
  return a1;
}

uint64_t *sub_10029E39C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
      {
        uint64_t v8 = sub_10017DF08(&qword_100E65ED8);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
      }
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = a3[5];
    long long v11 = *(_OWORD *)((char *)a2 + v10 + 24);
    *(_OWORD *)((char *)a1 + v10 + 24) = v11;
    (**(void (***)(void))(v11 - 8))();
    uint64_t v12 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)a1 + v12) = *(uint64_t *)((char *)a2 + v12);
    uint64_t v13 = a3[8];
    uint64_t v14 = (uint64_t *)((char *)a1 + v13);
    uint64_t v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10029E58C(uint64_t a1, uint64_t a2)
{
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    }
  }
  else
  {
    swift_release();
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + *(int *)(a2 + 20));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_10029E674(void *a1, void *a2, int *a3)
{
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
    {
      uint64_t v7 = sub_10017DF08(&qword_100E65ED8);
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
    }
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = a3[5];
  long long v9 = *(_OWORD *)((char *)a2 + v8 + 24);
  *(_OWORD *)((char *)a1 + v8 + 24) = v9;
  (**(void (***)(void))(v9 - 8))();
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  uint64_t v11 = a3[8];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_10029E814(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1001781AC((uint64_t)a1, (uint64_t *)&unk_100EAA560);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
      {
        uint64_t v7 = sub_10017DF08(&qword_100E65ED8);
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
      }
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  sub_1000C1E18((void *)((char *)a1 + a3[5]), (void *)((char *)a2 + a3[5]));
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[8];
  long long v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)((char *)a2 + v8);
  *long long v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_10029E9C4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_10017DF08(&qword_100E65ED8);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  long long v13 = *(_OWORD *)v12;
  long long v14 = *((_OWORD *)v12 + 1);
  *((void *)v11 + 4) = *((void *)v12 + 4);
  *(_OWORD *)uint64_t v11 = v13;
  *((_OWORD *)v11 + 1) = v14;
  *(void *)&a1[v10] = *(void *)&a2[v10];
  uint64_t v15 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  *(_OWORD *)&a1[v15] = *(_OWORD *)&a2[v15];
  return a1;
}

char *sub_10029EB28(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1001781AC((uint64_t)a1, (uint64_t *)&unk_100EAA560);
    uint64_t v6 = sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
      {
        uint64_t v8 = sub_10017DF08(&qword_100E65ED8);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&a1[v9]);
  long long v12 = *((_OWORD *)v11 + 1);
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v12;
  *((void *)v10 + 4) = *((void *)v11 + 4);
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[8];
  long long v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v17 = *(void *)v15;
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)long long v14 = v17;
  *((void *)v14 + 1) = v16;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10029ECD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10029ECE8);
}

uint64_t sub_10029ECE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10017DF08((uint64_t *)&unk_100EAA540);
  sub_10017C808();
  if (*(_DWORD *)(v7 + 84) != a2) {
    return sub_100163020(*(void *)(a1 + *(int *)(a3 + 20) + 24));
  }

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
}

uint64_t sub_10029ED74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10029ED88);
}

void sub_10029ED88(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_10017DF08((uint64_t *)&unk_100EAA540);
  sub_10017C808();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
}

void sub_10029EE1C()
{
  sub_1002308A0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t destroy for RegularSearchResultsView(uint64_t a1)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for RegularSearchResultsView(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 72);
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = v7;
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for RegularSearchResultsView(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for RegularSearchResultsView(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x58uLL);
}

uint64_t assignWithTake for RegularSearchResultsView(uint64_t a1, uint64_t a2)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RegularSearchResultsView(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 88))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RegularSearchResultsView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RegularSearchResultsView()
{
  return &type metadata for RegularSearchResultsView;
}

uint64_t sub_10029F178()
{
  return sub_10029F1C8(&qword_100E66230, &qword_100E66238, (void (*)(void))sub_10029E130, (void (*)(void))sub_10029E264);
}

uint64_t sub_10029F1C8(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10029F250()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10029F26C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10029F290@<X0>(uint64_t a1@<X8>)
{
  return sub_10029D14C(*(void *)(v1 + 16), a1);
}

unint64_t sub_10029F298()
{
  unint64_t result = qword_100E662A0;
  if (!qword_100E662A0)
  {
    sub_10018C6DC(&qword_100E66298);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E662A0);
  }
  return result;
}

uint64_t sub_10029F314(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SearchResultsList(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10029F378(uint64_t a1)
{
  return sub_10029F3F4(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10029DFE0);
}

uint64_t sub_10029F390(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10029F3DC(uint64_t a1)
{
  return sub_10029F3F4(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10029E080);
}

uint64_t sub_10029F3F4(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for SearchResultsList(0) - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

uint64_t sub_10029F488(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_10029F4DC()
{
  return sub_1001246C8(&qword_100E662F8, &qword_100E66300);
}

uint64_t sub_10029F518()
{
  return sub_1001246C8(&qword_100E66308, &qword_100E66310);
}

char *sub_10029F554(uint64_t a1, void (*a2)(void))
{
  v987 = a2;
  uint64_t v901 = type metadata accessor for NotificationsOptInInput();
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100109314();
  sub_100109328(v4);
  v953 = (int *)type metadata accessor for NotificationsOptInState();
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100109314();
  sub_100109338(v6);
  uint64_t v7 = sub_10017DF08(&qword_100E663D0);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v9);
  sub_100128F8C();
  sub_100109328(v10);
  uint64_t v912 = type metadata accessor for HomeAndWorkRefinementViewState();
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_100109314();
  sub_100109328(v12);
  uint64_t v13 = type metadata accessor for LocationOfInterest();
  uint64_t v14 = sub_10017C81C(v13, (uint64_t)&v954);
  uint64_t v918 = v15;
  __chkstk_darwin(v14);
  sub_100109314();
  uint64_t v17 = sub_100109328(v16);
  uint64_t v18 = type metadata accessor for LocationFooterAction(v17);
  uint64_t v19 = sub_100109308(v18);
  __chkstk_darwin(v19);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v20);
  sub_100128F8C();
  sub_100109328(v21);
  uint64_t v959 = type metadata accessor for LocationsState();
  sub_100162E4C();
  __chkstk_darwin(v22);
  sub_100109314();
  sub_100109338(v23);
  uint64_t v24 = sub_10017DF08(&qword_100EAC4A0);
  uint64_t v25 = sub_100109308(v24);
  __chkstk_darwin(v25);
  sub_100109314();
  sub_100109328(v26);
  uint64_t v27 = type metadata accessor for LocationModel();
  uint64_t v28 = sub_10017C81C(v27, (uint64_t)&v959);
  uint64_t v940 = v29;
  __chkstk_darwin(v28);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v30);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v31);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v32);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v33);
  sub_100128F8C();
  sub_100109328(v34);
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  sub_100162E4C();
  __chkstk_darwin(v35);
  sub_100109314();
  sub_100109328(v36);
  uint64_t v37 = type metadata accessor for Location.Identifier();
  uint64_t v38 = sub_10017C81C(v37, (uint64_t)v999);
  uint64_t v971 = v39;
  __chkstk_darwin(v38);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v40);
  sub_100128F8C();
  uint64_t v42 = sub_100109328(v41);
  uint64_t v985 = type metadata accessor for ViewState.SecondaryViewState(v42);
  sub_100162E4C();
  __chkstk_darwin(v43);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v44);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v45);
  sub_100128F8C();
  sub_100109338(v46);
  uint64_t v47 = sub_10017DF08(&qword_100E663D8);
  uint64_t v48 = sub_100109308(v47);
  __chkstk_darwin(v48);
  sub_100109314();
  sub_100109338(v49);
  uint64_t v50 = sub_10017DF08(&qword_100E663E0);
  uint64_t v51 = sub_100109308(v50);
  __chkstk_darwin(v51);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v52);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v53);
  sub_100128F8C();
  uint64_t v55 = sub_100109328(v54);
  uint64_t v949 = type metadata accessor for LocationPreviewModalViewState(v55);
  sub_100162E4C();
  __chkstk_darwin(v56);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v57);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v58);
  sub_100128F8C();
  sub_100109338(v59);
  uint64_t v60 = sub_10017DF08(&qword_100E639E8);
  uint64_t v61 = sub_100109308(v60);
  __chkstk_darwin(v61);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v62);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v63);
  sub_100128F8C();
  sub_100109328(v64);
  uint64_t v65 = type metadata accessor for Location();
  uint64_t v66 = sub_10017C81C(v65, (uint64_t)v994);
  uint64_t v957 = v67;
  __chkstk_darwin(v66);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v68);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v69);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v70);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v71);
  sub_100128F8C();
  uint64_t v73 = sub_100109328(v72);
  uint64_t v74 = type metadata accessor for LocationPreviewViewState(v73);
  uint64_t v75 = sub_100109308(v74);
  __chkstk_darwin(v75);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v76);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v77);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v78);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v79);
  sub_100128F8C();
  uint64_t v81 = sub_100109328(v80);
  v988 = (void (*)(void, void))type metadata accessor for ModalViewState(v81);
  sub_100162E4C();
  __chkstk_darwin(v82);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v83);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v84);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v85);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v86);
  sub_100128F8C();
  sub_100109338(v87);
  uint64_t v88 = sub_10017DF08(&qword_100E663E8);
  uint64_t v89 = sub_100109308(v88);
  __chkstk_darwin(v89);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v90);
  sub_100128F8C();
  sub_100109338(v91);
  uint64_t v92 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v93 = sub_100109308(v92);
  __chkstk_darwin(v93);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v94);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v95);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v96);
  uint64_t v98 = (uint64_t)&v885[-v97];
  uint64_t v99 = sub_10017DF08(&qword_100E663F0);
  uint64_t v100 = sub_100109308(v99);
  __chkstk_darwin(v100);
  sub_100109314();
  uint64_t v102 = sub_100109328(v101);
  uint64_t v103 = type metadata accessor for WeatherMapTrackingState(v102);
  uint64_t v104 = sub_100109308(v103);
  __chkstk_darwin(v104);
  sub_100109314();
  uint64_t v106 = sub_100109328(v105);
  uint64_t v944 = type metadata accessor for WeatherMapPresentationState(v106);
  sub_100162E4C();
  __chkstk_darwin(v107);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v108);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v109);
  sub_100128F8C();
  sub_100109338(v110);
  uint64_t v111 = sub_10017DF08(&qword_100E663F8);
  uint64_t v112 = sub_100109308(v111);
  __chkstk_darwin(v112);
  sub_100109314();
  sub_100109338(v113);
  uint64_t v114 = sub_10017DF08(&qword_100E66400);
  uint64_t v115 = sub_100109308(v114);
  __chkstk_darwin(v115);
  sub_100109314();
  sub_100109338(v116);
  uint64_t v117 = sub_10017DF08(&qword_100E66408);
  uint64_t v118 = sub_100109308(v117);
  __chkstk_darwin(v118);
  sub_100109314();
  sub_100109338(v119);
  uint64_t v120 = sub_10017DF08(&qword_100E66410);
  uint64_t v121 = sub_100109308(v120);
  __chkstk_darwin(v121);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v122);
  sub_100128F8C();
  uint64_t v124 = sub_100109328(v123);
  uint64_t v125 = type metadata accessor for ViewState(v124);
  sub_100162E4C();
  __chkstk_darwin(v126);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v127);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v128);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v129);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v130);
  sub_100128F8C();
  sub_100109338(v131);
  uint64_t v132 = sub_10017DF08(&qword_100E66418);
  uint64_t v133 = sub_100109308(v132);
  __chkstk_darwin(v133);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v134);
  sub_100128F8C();
  sub_100109338(v135);
  uint64_t v136 = sub_10017DF08(&qword_100E66420);
  uint64_t v137 = sub_100109308(v136);
  __chkstk_darwin(v137);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v138);
  sub_100128F8C();
  sub_100109338(v139);
  uint64_t v140 = sub_10017DF08(&qword_100E66428);
  uint64_t v141 = sub_100109308(v140);
  __chkstk_darwin(v141);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v142);
  sub_100128F8C();
  sub_100109338(v143);
  uint64_t v144 = sub_10017DF08(&qword_100E66430);
  uint64_t v145 = sub_100109308(v144);
  __chkstk_darwin(v145);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v146);
  sub_100128F8C();
  sub_100109338(v147);
  uint64_t v148 = sub_10017DF08(&qword_100E66438);
  uint64_t v149 = sub_100109308(v148);
  __chkstk_darwin(v149);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v150);
  sub_100128F8C();
  sub_100109338(v151);
  uint64_t v152 = sub_10017DF08(&qword_100E66440);
  uint64_t v153 = sub_100109308(v152);
  __chkstk_darwin(v153);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v154);
  sub_100128F8C();
  sub_100109328(v155);
  uint64_t v156 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v157 = sub_10017C81C(v156, (uint64_t)&v988);
  uint64_t v974 = v158;
  __chkstk_darwin(v157);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v159);
  uint64_t v161 = (uint64_t)&v885[-v160];
  __chkstk_darwin(v162);
  sub_100128F8C();
  sub_100109328(v163);
  uint64_t v164 = type metadata accessor for LocationViewAction();
  sub_100162E4C();
  __chkstk_darwin(v165);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v166);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v167);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v168);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v169);
  v171 = (uint64_t *)&v885[-v170];
  __chkstk_darwin(v172);
  v174 = &v885[-v173];
  v955[1] = type metadata accessor for LocationComponentAction(0);
  sub_100162E4C();
  __chkstk_darwin(v175);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v176);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v177);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v178);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v179);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v180);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v181);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v182);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v183);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v184);
  v186 = &v885[-v185];
  __chkstk_darwin(v187);
  sub_100128F8C();
  v189 = v188;
  uint64_t v943 = type metadata accessor for DisplayMetrics();
  sub_100162E4C();
  __chkstk_darwin(v190);
  v192 = &v885[-((v191 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v986 = (char *)a1;
  v193 = (void (*)(void))(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view);
  uint64_t v984 = v125;
  sub_100151718((uint64_t)v193 + *(int *)(v125 + 36), (uint64_t)v192, (void (*)(void))type metadata accessor for DisplayMetrics);
  uint64_t v194 = sub_10058BCBC();
  v939 = (uint64_t *)v192;
  sub_1002A8E30((uint64_t)v192, (void (*)(void))type metadata accessor for DisplayMetrics);
  v195 = v987;
  v983 = (void (*)(void))v164;
  v981 = (uint64_t *)v193;
  if (v194)
  {
    sub_100151718((uint64_t)v987, (uint64_t)v174, (void (*)(void))type metadata accessor for LocationViewAction);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v194 = (uint64_t)&v174[*(int *)(sub_10017DF08(&qword_100E66458) + 64)];
      sub_10016E0C0((uint64_t)v174, (uint64_t)v189, (void (*)(void))type metadata accessor for LocationComponentAction);
      sub_1001781AC(v194, (uint64_t *)&unk_100E73CA0);
      sub_100151718((uint64_t)v189, (uint64_t)v186, (void (*)(void))type metadata accessor for LocationComponentAction);
      if (sub_1001EA904() == 1)
      {
        v987 = v189;
        uint64_t v196 = v955[0];
        sub_1001627D4();
        v197();
        uint64_t v198 = type metadata accessor for AppConfigurationState();
        uint64_t v199 = sub_100179DE0(v198);
        _s7Weather24LocationCompositionStateOwst_0(v973, 1, 1, v199);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v967, 1, 1, v959);
        sub_10019E6C0((uint64_t)v966);
        sub_100129070();
        sub_100163050(*(void *)(v200 - 256), v201, v202, v203);
        uint64_t v204 = (uint64_t)v981;
        uint64_t v205 = v941;
        sub_100151718((uint64_t)v981, v941, (void (*)(void))type metadata accessor for ViewState);
        uint64_t v206 = v942;
        uint64_t v207 = sub_10018C3A0(v942);
        uint64_t v208 = v946;
        sub_100185148(v946, v209, v210, v207);
        uint64_t v211 = v984;
        sub_1001A14E4(v204 + *(int *)(v984 + 40), (void (*)(void))type metadata accessor for WeatherMapPresentationState, (uint64_t)v965);
        v212 = v939;
        sub_100151718(v204 + *(int *)(v211 + 36), (uint64_t)v939, (void (*)(void))type metadata accessor for DisplayMetrics);
        uint64_t v213 = sub_10017DF08(&qword_100E66460);
        uint64_t v214 = v937;
        _s7Weather24LocationCompositionStateOwst_0(v937, 1, 3, v213);
        v215 = v945;
        sub_100B597B0(v212, v196, v214, v945);
        sub_1002A8E30(v214, (void (*)(void))type metadata accessor for WeatherMapTrackingState);
        sub_1002A8E30((uint64_t)v212, (void (*)(void))type metadata accessor for DisplayMetrics);
        sub_1002A8E30(v194, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
        sub_10018AFB0((uint64_t)v215);
        sub_100188D14();
        sub_10011D8AC();
        sub_1001781AC((uint64_t)v215, &qword_100E663F8);
        sub_1001781AC(v98, &qword_100E66400);
        sub_1001781AC(v208, &qword_100E66408);
        sub_1001781AC(v206, &qword_100E66410);
        sub_1002A8E30(v205, (void (*)(void))type metadata accessor for ViewState);
        _s7Weather24LocationCompositionStateOwst_0(v214, 0, 1, v211);
        uint64_t v216 = sub_100182368((uint64_t)&v986);
        _s7Weather24LocationCompositionStateOwst_0(v216, v217, v218, (uint64_t)v988);
        sub_10017F850();
        v888 = (void (*)(void))v214;
        v889 = (void *)v211;
        uint64_t v219 = (uint64_t)v961;
        v887 = v961;
        uint64_t v220 = (uint64_t)v966;
        v886 = v966;
        uint64_t v221 = sub_100182EC0();
        uint64_t v223 = *(void *)(v222 - 256);
        v186 = v967;
        sub_100163034(v221, v224, v225, v223, (uint64_t)v967, v226, v227, v228, v885[0], (uint64_t)v886, (uint64_t)v887, (uint64_t)v888, (uint64_t)v889, v890, v891, v892, v893, v894, v895,
          v896,
          v897);
        sub_100176CF8();
        sub_1001781AC(v211, &qword_100E663F0);
        sub_1001781AC(v214, &qword_100E66418);
        sub_1001781AC(v219, &qword_100E66420);
        uint64_t v229 = sub_1001781AC(v220, &qword_100E66428);
        sub_100178FA8(v229, &qword_100E66430);
        sub_1001781AC(v223, &qword_100E66438);
        sub_1001781AC(v208, &qword_100E66440);
        sub_10012BF98();
        sub_10017F874();
        v230();
        v231 = type metadata accessor for LocationComponentAction;
        v232 = v987;
LABEL_78:
        sub_1002A8E30((uint64_t)v232, (void (*)(void))v231);
        return v186;
      }
      sub_1002A8E30((uint64_t)v189, (void (*)(void))type metadata accessor for LocationComponentAction);
      uint64_t v234 = (uint64_t)v186;
      v233 = (void (*)(void))type metadata accessor for LocationComponentAction;
    }
    else
    {
      v233 = (void (*)(void))type metadata accessor for LocationViewAction;
      uint64_t v234 = (uint64_t)v174;
    }
    sub_1002A8E30(v234, v233);
    sub_1001D1368();
    uint64_t v164 = (uint64_t)v983;
  }
  sub_100151718((uint64_t)v195, (uint64_t)v171, (void (*)(void))type metadata accessor for LocationViewAction);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v886 = (char *)v161;
  if (EnumCaseMultiPayload != 1)
  {
    sub_1002A8E30((uint64_t)v171, (void (*)(void))type metadata accessor for LocationViewAction);
    sub_10019D15C();
    sub_100109364();
LABEL_46:
    sub_1001A2AFC();
    goto LABEL_47;
  }
  uint64_t v236 = sub_10017DF08(&qword_100E66458);
  sub_10024D364((uint64_t)v171 + *(int *)(v236 + 48), (uint64_t)v995, &qword_100E64498);
  uint64_t v237 = (uint64_t)v171 + *(int *)(v236 + 64);
  sub_10019B82C();
  sub_10016E0C0(v238, (uint64_t)v171, v239);
  sub_10024D364(v237, v98, (uint64_t *)&unk_100E73CA0);
  v186 = v986;
  uint64_t v240 = (uint64_t)&v986[OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView];
  uint64_t v241 = v969;
  sub_100151718((uint64_t)&v986[OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView], v969, (void (*)(void))type metadata accessor for ModalViewState);
  int v242 = swift_getEnumCaseMultiPayload();
  v889 = (void *)v98;
  if (v242 != 4)
  {
    sub_1002A8E30(v241, (void (*)(void))type metadata accessor for ModalViewState);
    goto LABEL_15;
  }
  uint64_t v98 = v960[0];
  sub_10024D364(v241, v960[0], &qword_100E663E8);
  uint64_t v243 = v952;
  sub_10006DF38(v98, v952, &qword_100E663E8);
  uint64_t v164 = type metadata accessor for ModalViewState.MapViewModal(0);
  sub_10012B520(v243, 1, v164);
  if (v264)
  {
    sub_1001781AC(v98, &qword_100E663E8);
    sub_1001781AC(v243, &qword_100E663E8);
LABEL_15:
    sub_100109364();
    goto LABEL_16;
  }
  uint64_t v262 = v935;
  sub_10016E0C0(v243, v935, (void (*)(void))type metadata accessor for LocationPreviewViewState);
  sub_100188D14();
  sub_10081B708(v263);
  sub_10012B520((uint64_t)v171, 1, (uint64_t)v968);
  uint64_t v98 = v984;
  if (!v264)
  {
    uint64_t v161 = v957;
    uint64_t v285 = v930[1];
    sub_1001627D4();
    v286();
    sub_100188D14();
    v193 = v980;
    sub_1001EC3A8(v285, (uint64_t)v980, v287, v288);
    uint64_t v194 = v949;
    sub_10012B520((uint64_t)v171, 1, v949);
    if (!v289)
    {
      uint64_t v375 = (uint64_t)v171;
      uint64_t v376 = v924;
      sub_10016E0C0(v375, v924, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
      uint64_t v377 = type metadata accessor for AppConfigurationState();
      uint64_t v378 = sub_100179DE0(v377);
      _s7Weather24LocationCompositionStateOwst_0(v973, 1, 1, v378);
      v186 = v967;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v967, 1, 1, v959);
      uint64_t v379 = (uint64_t)v966;
      uint64_t v380 = sub_10019E6C0((uint64_t)v966);
      sub_10018A82C(v380);
      uint64_t v381 = sub_1001627E0((uint64_t)&v982);
      _s7Weather24LocationCompositionStateOwst_0(v381, v382, v383, v98);
      uint64_t v384 = type metadata accessor for PreviewLocation();
      uint64_t v385 = v932;
      sub_100163050(v932, v386, v387, v384);
      uint64_t v388 = v376;
      uint64_t v389 = v931;
      sub_100151718(v388, v931, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
      _s7Weather24LocationCompositionStateOwst_0(v389, 0, 1, v194);
      sub_100127A68();
      sub_1004E4A98(v385, v389, v390);
      sub_1001781AC(v389, &qword_100E663E0);
      sub_1001781AC(v385, &qword_100E663D8);
      uint64_t v391 = sub_100163DF4();
      _s7Weather24LocationCompositionStateOwst_0(v391, v392, v393, v164);
      v394 = v988;
      swift_storeEnumTagMultiPayload();
      uint64_t v395 = sub_100163DF4();
      _s7Weather24LocationCompositionStateOwst_0(v395, v396, v397, (uint64_t)v394);
      sub_10017F850();
      v888 = (void (*)(void))v193;
      v889 = (void *)v285;
      v886 = (char *)v379;
      v887 = (uint64_t *)v161;
      uint64_t v398 = sub_10019AA38();
      uint64_t v400 = *(void *)(v399 - 256);
      uint64_t v401 = v973;
      sub_100163034(v398, v402, v400, v973, (uint64_t)v186, v403, v404, v405, v885[0], (uint64_t)v886, (uint64_t)v887, (uint64_t)v888, (uint64_t)v889, v890, v891, v892, v893, v894, v895,
        v896,
        v897);
      sub_100176CF8();
      sub_1001781AC(v285, &qword_100E663F0);
      sub_1001781AC((uint64_t)v193, &qword_100E66418);
      sub_1001781AC(v161, &qword_100E66420);
      uint64_t v406 = sub_1001781AC(v379, &qword_100E66428);
      sub_100178FA8(v406, &qword_100E66430);
      sub_1001781AC(v401, &qword_100E66438);
      sub_1001781AC(v400, &qword_100E66440);
      sub_1002A8E30(v924, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
      sub_10012BF98();
      sub_10017F874();
      v407();
      sub_1002A8E30(v262, (void (*)(void))type metadata accessor for LocationPreviewViewState);
      uint64_t v336 = sub_1001781AC(v960[0], &qword_100E663E8);
      goto LABEL_76;
    }
    sub_100127BA4();
    v290();
    sub_1002A8E30(v262, (void (*)(void))type metadata accessor for LocationPreviewViewState);
    uint64_t v291 = sub_1001781AC(v960[0], &qword_100E663E8);
    sub_1001D1528(v291, (uint64_t *)&unk_100E73CA0);
    sub_1002A8E30((uint64_t)v193, (void (*)(void))type metadata accessor for LocationComponentAction);
    sub_1001781AC((uint64_t)v171, &qword_100E663E0);
    sub_1001D1368();
    goto LABEL_46;
  }
  sub_1002A8E30(v262, (void (*)(void))type metadata accessor for LocationPreviewViewState);
  sub_1001781AC(v960[0], &qword_100E663E8);
  sub_1001781AC((uint64_t)v171, &qword_100E639E8);
  sub_1001D1368();
  sub_10019B82C();
LABEL_16:
  sub_1001CA7A8(v240, (void (*)(void))type metadata accessor for ModalViewState, (uint64_t)v991);
  int v244 = swift_getEnumCaseMultiPayload();
  uint64_t v245 = (uint64_t)v963;
  v246 = v970;
  if (v244)
  {
    sub_1002A8E30(v240, (void (*)(void))type metadata accessor for ModalViewState);
  }
  else
  {
    v186 = (char *)v98;
    uint64_t v247 = v948;
    sub_10016E0C0(v240, v948, (void (*)(void))type metadata accessor for LocationPreviewViewState);
    sub_100127A68();
    sub_10081B708(v248);
    uint64_t v249 = v240;
    uint64_t v250 = v240;
    uint64_t v240 = (uint64_t)v968;
    sub_10012B520(v250, 1, (uint64_t)v968);
    if (!v264)
    {
      uint64_t v265 = v957;
      uint64_t v266 = v934;
      sub_1001627D4();
      v267();
      sub_10012B920();
      sub_1001EC3A8(v266, (uint64_t)v171, v268, v269);
      uint64_t v194 = v245;
      uint64_t v270 = v245;
      uint64_t v164 = v949;
      sub_10012B520(v270, 1, v949);
      v171 = v956;
      if (!v271)
      {
        uint64_t v312 = v929;
        sub_10016E0C0(v194, v929, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
        uint64_t v313 = type metadata accessor for AppConfigurationState();
        uint64_t v314 = sub_100179DE0(v313);
        _s7Weather24LocationCompositionStateOwst_0(v973, 1, 1, v314);
        sub_100186820((uint64_t)v967);
        uint64_t v315 = sub_10019E6C0((uint64_t)v966);
        uint64_t v316 = (uint64_t)v171;
        uint64_t v319 = sub_10019B3CC(v315, v317, v318, v315);
        v320 = v988;
        uint64_t v321 = v932;
        sub_100163050(v932, v322, v323, v319);
        sub_10019B0A8(v312, (void (*)(void))type metadata accessor for LocationPreviewModalViewState, (uint64_t)&v957);
        _s7Weather24LocationCompositionStateOwst_0(v312, 0, 1, v164);
        sub_1004E4A98(v321, v312, v316);
        sub_1001781AC(v312, &qword_100E663E0);
        sub_1001781AC(v321, &qword_100E663D8);
        swift_storeEnumTagMultiPayload();
        _s7Weather24LocationCompositionStateOwst_0(v316, 0, 1, (uint64_t)v320);
        sub_100184398();
        v887 = (uint64_t *)v186;
        uint64_t v324 = (uint64_t)v966;
        v886 = v966;
        uint64_t v325 = sub_100182EC0();
        uint64_t v327 = *(void *)(v326 - 256);
        uint64_t v328 = (uint64_t)v967;
        sub_100163034(v325, v329, v330, v327, (uint64_t)v967, v331, v332, v333, v885[0], (uint64_t)v886, (uint64_t)v887, (uint64_t)v888, (uint64_t)v889, v890, v891, v892, v893, v894, v895,
          v896,
          v897);
        sub_100176CF8();
        sub_1001781AC(v316, &qword_100E663F0);
        uint64_t v334 = sub_1001781AC(v265, &qword_100E66418);
        sub_100178FA8(v334, &qword_100E66420);
        sub_1001781AC(v324, &qword_100E66428);
        sub_1001781AC(v328, &qword_100E66430);
        sub_1001781AC(v327, &qword_100E66438);
        sub_1001781AC((uint64_t)v320, &qword_100E66440);
        sub_1002A8E30(v929, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
        sub_10012BF98();
        v335(v934, v240);
        uint64_t v336 = sub_1002A8E30(v247, (void (*)(void))type metadata accessor for LocationPreviewViewState);
LABEL_76:
        sub_1001D1528(v336, (uint64_t *)&unk_100E73CA0);
        v231 = type metadata accessor for LocationComponentAction;
        v408 = (char **)&v1001;
LABEL_77:
        v232 = (void (*)(void))*(v408 - 32);
        goto LABEL_78;
      }
      sub_100127BA4();
      v272();
      uint64_t v273 = sub_1002A8E30(v247, (void (*)(void))type metadata accessor for LocationPreviewViewState);
      sub_1001D1528(v273, (uint64_t *)&unk_100E73CA0);
      sub_1002A8E30((uint64_t)v980, (void (*)(void))type metadata accessor for LocationComponentAction);
      sub_1001781AC(v194, &qword_100E663E0);
      sub_1001A2AFC();
      uint64_t v98 = (uint64_t)v186;
      sub_10019D15C();
      goto LABEL_47;
    }
    sub_1002A8E30(v247, (void (*)(void))type metadata accessor for LocationPreviewViewState);
    sub_1001781AC(v249, &qword_100E639E8);
    v246 = v970;
    uint64_t v98 = (uint64_t)v186;
    sub_10019D15C();
  }
  sub_1001CA7A8((uint64_t)v193, (void (*)(void))type metadata accessor for ViewState, (uint64_t)v998);
  sub_100151718(v240 + *(int *)(v98 + 20), (uint64_t)v246, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
  int v251 = swift_getEnumCaseMultiPayload();
  uint64_t v252 = v976;
  if (v251 == 1)
  {
    sub_1002A8E30((uint64_t)v246, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
LABEL_40:
    v260 = (void (*)(void))type metadata accessor for ViewState;
    uint64_t v261 = (uint64_t)v975;
    goto LABEL_41;
  }
  v253 = (void *)*v246;
  if (*(void *)(v240 + *(int *)(v98 + 36) + 8) == 1)
  {
    uint64_t v254 = v976;
    uint64_t v255 = v98;
    v256 = v186;
    v257 = v171;
    v258 = v253;
    id v259 = [self currentDevice];
    [v259 userInterfaceIdiom];

    v253 = v258;
    v171 = v257;
    v186 = v256;
    uint64_t v98 = v255;
    uint64_t v252 = v254;
    uint64_t v240 = (uint64_t)v975;
    if ((v975[*(int *)(v98 + 28)] & 1) == 0)
    {
      swift_release();
      goto LABEL_40;
    }
  }
  sub_1002A8E30(v240, (void (*)(void))type metadata accessor for ViewState);
  sub_100151718((uint64_t)v253 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, v245, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  sub_10012B520(v245, 1, v252);
  if (v264)
  {
    swift_release();
    v260 = (void (*)(void))type metadata accessor for LocationViewerActiveLocationState;
    uint64_t v261 = v245;
LABEL_41:
    sub_1002A8E30(v261, v260);
LABEL_42:
    v193 = (void (*)(void))v955[2];
    if (qword_100E62790 != -1) {
      swift_once();
    }
    uint64_t v292 = type metadata accessor for Logger();
    uint64_t v194 = sub_1002102B0(v292, (uint64_t)qword_100F51DC8);
    sub_100151718((uint64_t)v987, (uint64_t)v193, (void (*)(void))type metadata accessor for LocationViewAction);
    v293 = Logger.logObject.getter();
    os_log_type_t v294 = static os_log_type_t.error.getter();
    uint64_t v164 = v294;
    if (!os_log_type_enabled(v293, v294))
    {

      uint64_t v301 = sub_1002A8E30((uint64_t)v193, (void (*)(void))type metadata accessor for LocationViewAction);
      sub_1001D1528(v301, (uint64_t *)&unk_100E73CA0);
      sub_1002A8E30((uint64_t)v171, (void (*)(void))type metadata accessor for LocationComponentAction);
      sub_1001A2AFC();
      sub_1001D1368();
      goto LABEL_47;
    }
    v295 = (uint8_t *)swift_slowAlloc();
    uint64_t v98 = sub_10016EEA8();
    *(void *)&long long v990 = v98;
    *(_DWORD *)v295 = 136315138;
    v186 = (char *)(v295 + 12);
    uint64_t v161 = (uint64_t)(v295 + 4);
    sub_1002A8D80(&qword_100E66468, (void (*)(uint64_t))type metadata accessor for LocationViewAction);
    uint64_t v296 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v194 = v297;
    uint64_t v989 = sub_10016414C(v296, v297, (uint64_t *)&v990);
    v171 = v981;
    sub_10019D15C();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v298 = (uint64_t)v193;
    v193 = (void (*)(void))v171;
    sub_1002A8E30(v298, (void (*)(void))type metadata accessor for LocationViewAction);
    _os_log_impl((void *)&_mh_execute_header, v293, (os_log_type_t)v164, "Invalid state for component tap; action=%s",
      v295,
      0xCu);
    swift_arrayDestroy();
    sub_100109364();
    sub_100162EE0();
    sub_100162EE0();

    sub_1001D1528(v299, (uint64_t *)&unk_100E73CA0);
    sub_1002A8E30((uint64_t)v980, (void (*)(void))type metadata accessor for LocationComponentAction);
    goto LABEL_46;
  }
  v970 = v253;
  uint64_t v274 = v971;
  sub_1001627D4();
  v275();
  uint64_t v276 = v936;
  sub_100151718((uint64_t)&v186[OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations], v936, (void (*)(void))type metadata accessor for LocationsState);
  uint64_t v277 = v960[1];
  static CurrentLocation.placeholderIdentifier.getter();
  char v278 = static Location.Identifier.== infix(_:_:)();
  v280 = *(unsigned char **)(v274 + 8);
  uint64_t v279 = v274 + 8;
  uint64_t v971 = v279;
  v975 = v280;
  ((void (*)(uint64_t, uint64_t))v280)(v277, v252);
  if (v278)
  {
    uint64_t v281 = sub_10017DF08(&qword_100E63878);
    uint64_t v276 = v925;
    uint64_t v282 = v925 + *(int *)(v281 + 48);
    type metadata accessor for CurrentLocation();
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0(v282, 1, 1, v926);
    sub_10012B920();
    uint64_t v284 = v933;
    (*(void (**)(uint64_t))(v283 + 104))(v276);
    _s7Weather24LocationCompositionStateOwst_0(v276, 0, 1, v284);
  }
  else
  {
    uint64_t v369 = *(void *)(v276 + *(int *)(v959 + 24));
    uint64_t v370 = *(void *)(v369 + 16);
    uint64_t v969 = v369;
    if (v370)
    {
      v186 = *(char **)(v940 + 16);
      unint64_t v371 = v369 + ((*(unsigned __int8 *)(v940 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v940 + 80));
      v372 = (void (**)(uint64_t, uint64_t *))(v940 + 8);
      uint64_t v161 = *(void *)(v940 + 72);
      swift_bridgeObjectRetain();
      uint64_t v284 = v933;
      uint64_t v276 = v910;
      while (1)
      {
        ((void (*)(uint64_t, unint64_t, uint64_t))v186)(v276, v371, v284);
        v171 = (uint64_t *)v284;
        LocationModel.identifier.getter();
        char v373 = static Location.Identifier.== infix(_:_:)();
        sub_1001828D4();
        v374();
        if (v373) {
          break;
        }
        (*v372)(v276, v171);
        v371 += v161;
        --v370;
        uint64_t v284 = (uint64_t)v171;
        if (!v370) {
          goto LABEL_86;
        }
      }
      uint64_t v279 = v940;
      uint64_t v276 = v925;
      sub_1001627D4();
      v461();
      sub_100214D10();
      swift_bridgeObjectRelease();
      uint64_t v98 = v984;
      sub_10019D15C();
      uint64_t v284 = (uint64_t)v171;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v284 = v933;
LABEL_86:
      uint64_t v458 = sub_1001627E0((uint64_t)&v953);
      _s7Weather24LocationCompositionStateOwst_0(v458, v459, v460, v284);
      swift_bridgeObjectRelease();
      uint64_t v98 = v984;
      sub_10019D15C();
      uint64_t v279 = v940;
    }
    sub_10019B82C();
  }
  sub_1002A8E30(v936, (void (*)(void))type metadata accessor for LocationsState);
  sub_10012B520(v276, 1, v284);
  if (v264)
  {
    sub_1001828D4();
    v462();
    sub_1002A8E88();
    sub_1001781AC(v276, &qword_100EAC4A0);
    goto LABEL_42;
  }
  sub_1001627D4();
  v463();
  if (qword_100E627E8 != -1) {
    swift_once();
  }
  uint64_t v464 = type metadata accessor for Logger();
  uint64_t v465 = sub_1002102B0(v464, (uint64_t)qword_100F51ED0);
  v466 = *(void (**)(void))(v279 + 16);
  uint64_t v467 = v916[1];
  sub_100163E30();
  v466();
  uint64_t v468 = v284;
  uint64_t v969 = v465;
  v469 = Logger.logObject.getter();
  os_log_type_t v470 = static os_log_type_t.default.getter();
  BOOL v471 = os_log_type_enabled(v469, v470);
  v963 = v466;
  if (v471)
  {
    uint64_t v472 = swift_slowAlloc();
    uint64_t v962 = sub_10016EEA8();
    uint64_t v989 = 1752392040;
    *(void *)&long long v990 = v962;
    sub_100163E04(7.2225e-34);
    *(_WORD *)(v472 + 12) = 2081;
    sub_100163E30();
    v466();
    uint64_t v473 = String.init<A>(describing:)();
    v171 = (uint64_t *)v474;
    uint64_t v475 = sub_10016414C(v473, v474, (uint64_t *)&v990);
    sub_10011BFF0(v475);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    sub_10019B82C();
    swift_bridgeObjectRelease();
    v193 = *(void (**)(void))(v940 + 8);
    sub_100127BA4();
    v193();
    _os_log_impl((void *)&_mh_execute_header, v469, v470, "TappedComponent for locationModel=%{private,mask.hash}s", (uint8_t *)v472, 0x16u);
    swift_arrayDestroy();
    sub_100162EE0();
    sub_100162EE0();
  }
  else
  {
    v193 = *(void (**)(void))(v279 + 8);
    ((void (*)(uint64_t, uint64_t))v193)(v467, v468);
  }

  uint64_t v476 = v957;
  v186 = v968;
  uint64_t v477 = v915[1];
  uint64_t v478 = v930[0];
  LocationModel.coalesceLocation.getter();
  sub_10012B520(v477, 1, (uint64_t)v186);
  uint64_t v479 = v916[0];
  if (v264)
  {
    v988 = (void (*)(void, void))v193;
    sub_1001781AC(v477, &qword_100E639E8);
    uint64_t v480 = v907;
    uint64_t v481 = v933;
    v482 = v963;
    sub_100163E30();
    v482();
    v483 = Logger.logObject.getter();
    os_log_type_t v484 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v483, v484))
    {
      uint64_t v485 = swift_slowAlloc();
      v987 = (void (*)(void))sub_10016EEA8();
      uint64_t v989 = 1752392040;
      *(void *)&long long v990 = v987;
      *(_DWORD *)uint64_t v485 = 141558275;
      v186 = (char *)&v990;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v485 + 12) = 2081;
      sub_100163E30();
      v482();
      uint64_t v486 = String.init<A>(describing:)();
      uint64_t v989 = sub_10016414C(v486, v487, (uint64_t *)&v990);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v488 = v988;
      v988(v480, v481);
      _os_log_impl((void *)&_mh_execute_header, v483, v484, "Failed to find locationModel.coalesceLocation for locationModel=%{private,mask.hash}s", (uint8_t *)v485, 0x16u);
      swift_arrayDestroy();
      sub_100162EE0();
      sub_100162EE0();

      sub_1002A8E88();
      v488(v930[0], v481);
    }
    else
    {

      sub_1002A8E88();
      v499 = v988;
      v988(v480, v481);
      v499(v478, v481);
    }
    sub_1001828D4();
    uint64_t v501 = v500();
    sub_1001D1528(v501, (uint64_t *)&unk_100E73CA0);
    sub_1002A8E30((uint64_t)v980, (void (*)(void))type metadata accessor for LocationComponentAction);
    sub_10019D15C();
    goto LABEL_61;
  }
  sub_1001627D4();
  v489();
  sub_100162808();
  v490();
  v491 = Logger.logObject.getter();
  os_log_type_t v492 = static os_log_type_t.default.getter();
  uint64_t v98 = v492;
  if (os_log_type_enabled(v491, v492))
  {
    uint64_t v494 = swift_slowAlloc();
    uint64_t v495 = sub_10016EEA8();
    uint64_t v989 = 1752392040;
    *(void *)&long long v990 = v495;
    sub_100163E04(7.2225e-34);
    *(_WORD *)(v494 + 12) = 2081;
    sub_1002A8D80((unint64_t *)&qword_100E66470, (void (*)(uint64_t))&type metadata accessor for Location);
    uint64_t v496 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v498 = sub_10016414C(v496, v497, (uint64_t *)&v990);
    sub_10011BFF0(v498);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v161 = *(void *)(v957 + 8);
    sub_100127BA4();
    ((void (*)(void))v161)();
    _os_log_impl((void *)&_mh_execute_header, v491, (os_log_type_t)v98, "TappedComponent for location=%{private,mask.hash}s", (uint8_t *)v494, 0x16u);
    swift_arrayDestroy();
    v186 = v968;
    sub_100162EE0();
    sub_100162EE0();
  }
  else
  {
    uint64_t v161 = *(void *)(v476 + 8);
    ((void (*)(uint64_t, char *))v161)(v479, v186);
  }

  sub_100109364();
  uint64_t v502 = (uint64_t)v986;
  uint64_t v503 = v917;
  uint64_t v164 = (uint64_t)v889;
  uint64_t v194 = sub_1002A5E3C((uint64_t)v986, v917, (uint64_t)v171, (uint64_t)v889, (uint64_t)v995);
  sub_1002A8E88();
  ((void (*)(uint64_t, char *))v161)(v503, v186);
  sub_100127BA4();
  v193();
  v186 = (char *)v502;
  sub_1001828D4();
  v504();
  sub_1001781AC(v164, (uint64_t *)&unk_100E73CA0);
  sub_1002A8E30((uint64_t)v171, (void (*)(void))type metadata accessor for LocationComponentAction);
  sub_1001D1368();
  sub_1001A2AFC();
  if (v194) {
    return (char *)v194;
  }
LABEL_47:
  uint64_t v300 = (uint64_t)&v186[OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView];
  sub_1001A14E4((uint64_t)&v186[OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView], (void (*)(void))type metadata accessor for ModalViewState, (uint64_t)&v1000);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 6u:
    case 7u:
      goto LABEL_57;
    case 2u:
    case 3u:
      swift_release();
      goto LABEL_57;
    case 4u:
      uint64_t v304 = type metadata accessor for ModalViewState.MapViewModal(0);
      sub_10012B520(v194, 1, v304);
      if (v264) {
        goto LABEL_54;
      }
      break;
    case 5u:
      v302 = type metadata accessor for ModalViewState;
      uint64_t v303 = v194;
LABEL_56:
      sub_1002A8E30(v303, (void (*)(void))v302);
      goto LABEL_57;
    default:
      sub_10016E0C0(v194, v951, (void (*)(void))type metadata accessor for LocationPreviewViewState);
      sub_1001A14E4((uint64_t)v987, (void (*)(void))type metadata accessor for LocationViewAction, (uint64_t)v960);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v410 = *(int *)(sub_10017DF08(&qword_100E66458) + 64);
          uint64_t v411 = v194;
          uint64_t v412 = v194 + v410;
          uint64_t v413 = v913;
          sub_10016E0C0(v411, v913, (void (*)(void))type metadata accessor for LocationComponentAction);
          uint64_t v414 = v412;
          uint64_t v194 = v914;
          sub_10024D364(v414, v914, (uint64_t *)&unk_100E73CA0);
          sub_100151718(v413, v161, (void (*)(void))type metadata accessor for LocationComponentAction);
          if (sub_1001EA904() != 1)
          {
            v987 = (void (*)(void))type metadata accessor for LocationComponentAction;
            sub_1002A8E30(v161, (void (*)(void))type metadata accessor for LocationComponentAction);
            sub_100127A68();
            sub_1002A8324(v951, v413, v508);
            uint64_t v509 = type metadata accessor for AppConfigurationState();
            uint64_t v510 = sub_100179DE0(v509);
            sub_100163050(v973, v511, v512, v510);
            uint64_t v513 = sub_10018AE7C((uint64_t)v993);
            _s7Weather24LocationCompositionStateOwst_0(v513, v514, v515, v959);
            v186 = v966;
            sub_10019E6C0((uint64_t)v966);
            sub_100129070();
            uint64_t v517 = sub_100166AF4(v516);
            _s7Weather24LocationCompositionStateOwst_0(v517, v518, v519, v520);
            uint64_t v521 = v954;
            _s7Weather24LocationCompositionStateOwst_0(v954, 1, 1, v98);
            uint64_t v522 = type metadata accessor for PreviewLocation();
            v523 = v988;
            uint64_t v524 = v932;
            sub_100163050(v932, v525, v526, v522);
            sub_1001CA7A8(v300, (void (*)(void))type metadata accessor for LocationPreviewModalViewState, (uint64_t)&v957);
            uint64_t v527 = sub_100163DF4();
            _s7Weather24LocationCompositionStateOwst_0(v527, v528, v529, v949);
            v530 = v956;
            sub_1004E4A98(v524, v300, (uint64_t)v956);
            sub_1001781AC(v300, &qword_100E663E0);
            sub_1001781AC(v524, &qword_100E663D8);
            swift_storeEnumTagMultiPayload();
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v530, 0, 1, (uint64_t)v523);
            sub_10017F850();
            v888 = (void (*)(void))v521;
            v889 = v530;
            v886 = v186;
            v887 = &OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView;
            uint64_t v531 = sub_100164F10();
            uint64_t v533 = *(void *)(v532 - 256);
            sub_100163034(v531, v534, v535, v533, v98, v536, v537, v538, v885[0], (uint64_t)v886, (uint64_t)v887, (uint64_t)v888, (uint64_t)v889, v890, v891, v892, v893, v894, v895,
              v896,
              v897);
            sub_100176CF8();
            sub_1001781AC((uint64_t)v530, &qword_100E663F0);
            sub_1001781AC(v521, &qword_100E66418);
            uint64_t v539 = sub_1001781AC((uint64_t)&OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, &qword_100E66420);
            sub_100178FA8(v539, &qword_100E66428);
            sub_1001781AC(v98, &qword_100E66430);
            sub_1001781AC(v533, &qword_100E66438);
            sub_1001781AC(v300, &qword_100E66440);
            sub_1002A8E30(v920, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
            sub_1001781AC(v914, (uint64_t *)&unk_100E73CA0);
            sub_1002A8E30(v913, v987);
            v231 = type metadata accessor for LocationPreviewViewState;
            v408 = &v979;
            goto LABEL_77;
          }
          sub_1001781AC(v194, (uint64_t *)&unk_100E73CA0);
          sub_1002A8E30(v413, (void (*)(void))type metadata accessor for LocationComponentAction);
          sub_1002A8E30(v951, (void (*)(void))type metadata accessor for LocationPreviewViewState);
LABEL_83:
          sub_100127BA4();
          v415();
          break;
        case 2u:
          uint64_t v416 = sub_10017DF08(&qword_100E66448);
          sub_10017EFA4((__n128 *)(v194 + *(int *)(v416 + 48)));
          LODWORD(v982) = v417;
          uint64_t v418 = v919;
          sub_10016E0C0(v194, v919, (void (*)(void))type metadata accessor for LocationFooterAction);
          sub_100151718(v418, v911, (void (*)(void))type metadata accessor for LocationFooterAction);
          sub_10017DF08(&qword_100E66450);
          uint64_t v419 = (uint64_t)v968;
          sub_1001627D4();
          v420();
          v421 = v956;
          uint64_t v422 = v918;
          uint64_t v423 = v921;
          uint64_t v424 = v926;
          sub_1001627D4();
          v425();
          uint64_t v426 = v915[0];
          sub_100162808();
          v427();
          uint64_t v428 = v912;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v422 + 16))(v426 + *(int *)(v912 + 20), v423, v424);
          sub_100183428((__n128 *)(v426 + *(int *)(v428 + 24)));
          *(unsigned char *)(v429 + 32) = v982;
          sub_1001CA7A8(v426, (void (*)(void))type metadata accessor for HomeAndWorkRefinementViewState, (uint64_t)&v948);
          uint64_t v430 = v949;
          swift_storeEnumTagMultiPayload();
          uint64_t v431 = type metadata accessor for AppConfigurationState();
          uint64_t v432 = sub_100179DE0(v431);
          _s7Weather24LocationCompositionStateOwst_0(v973, 1, 1, v432);
          uint64_t v433 = (uint64_t)v967;
          sub_100186820((uint64_t)v967);
          uint64_t v434 = (uint64_t)v966;
          uint64_t v435 = sub_10019E6C0((uint64_t)v966);
          uint64_t v438 = sub_10019B3CC(v435, v436, v437, v435);
          v439 = v988;
          uint64_t v440 = v932;
          sub_100163050(v932, v441, v442, v438);
          sub_1001CA7A8(v428, (void (*)(void))type metadata accessor for LocationPreviewModalViewState, (uint64_t)&v957);
          uint64_t v443 = sub_100163DF4();
          _s7Weather24LocationCompositionStateOwst_0(v443, v444, v445, v430);
          uint64_t v446 = v951;
          sub_1004E4A98(v440, v428, (uint64_t)v421);
          sub_1001781AC(v428, &qword_100E663E0);
          sub_1001781AC(v440, &qword_100E663D8);
          swift_storeEnumTagMultiPayload();
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v421, 0, 1, (uint64_t)v439);
          sub_100184398();
          v886 = (char *)v434;
          v887 = (uint64_t *)v186;
          uint64_t v447 = sub_100164F10();
          uint64_t v449 = *(void *)(v448 - 256);
          sub_100163034(v447, v450, v451, v449, v433, v452, v453, v454, v885[0], (uint64_t)v886, (uint64_t)v887, (uint64_t)v888, (uint64_t)v889, v890, v891, v892, v893, v894, v895,
            v896,
            v897);
          sub_100176CF8();
          sub_1001781AC((uint64_t)v421, &qword_100E663F0);
          uint64_t v455 = sub_1001781AC(v419, &qword_100E66418);
          sub_100178FA8(v455, &qword_100E66420);
          sub_1001781AC(v434, &qword_100E66428);
          sub_1001781AC(v433, &qword_100E66430);
          sub_1001781AC(v449, &qword_100E66438);
          sub_1001781AC(v428, &qword_100E66440);
          sub_1002A8E30(v920, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
          sub_1002A8E30(v915[0], (void (*)(void))type metadata accessor for HomeAndWorkRefinementViewState);
          sub_10012BF98();
          sub_10017F874();
          v456();
          sub_10017F874();
          v457();
          sub_1002A8E30(v919, (void (*)(void))type metadata accessor for LocationFooterAction);
          v231 = type metadata accessor for LocationPreviewViewState;
          v232 = (void (*)(void))v446;
          goto LABEL_78;
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          v302 = type metadata accessor for LocationPreviewViewState;
          uint64_t v303 = v951;
          goto LABEL_56;
        default:
          sub_1002A8E30(v951, (void (*)(void))type metadata accessor for LocationPreviewViewState);
          goto LABEL_83;
      }
      goto LABEL_57;
  }
  sub_10019B0A8((uint64_t)v987, (void (*)(void))type metadata accessor for LocationViewAction, (uint64_t)v955);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v506 = sub_10017DF08(&qword_100E66458);
      uint64_t v507 = v927 + *(int *)(v506 + 64);
      sub_10016E0C0(v927, v909, (void (*)(void))type metadata accessor for LocationComponentAction);
      sub_10024D364(v507, v908, (uint64_t *)&unk_100E73CA0);
      sub_1001A14E4(v300, (void (*)(void))type metadata accessor for ModalViewState, (uint64_t)v930);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        sub_10012B520(v507, 1, v304);
        if (!v264)
        {
          uint64_t v748 = v890;
          sub_10016E0C0(v507, v890, (void (*)(void))type metadata accessor for LocationPreviewViewState);
          uint64_t v749 = type metadata accessor for PreviewLocation();
          uint64_t v750 = v932;
          sub_100163050(v932, v751, v752, v749);
          sub_10012B920();
          sub_1002A8324(v748, v909, v753);
          uint64_t v754 = sub_100164998();
          _s7Weather24LocationCompositionStateOwst_0(v754, v755, v756, v949);
          sub_100188D14();
          sub_1004E4A98(v750, v164, v757);
          sub_1001781AC(v164, &qword_100E663E0);
          sub_1001781AC(v750, &qword_100E663D8);
          uint64_t v758 = type metadata accessor for AppConfigurationState();
          uint64_t v759 = sub_100179DE0(v758);
          uint64_t v760 = v973;
          _s7Weather24LocationCompositionStateOwst_0(v973, 1, 1, v759);
          uint64_t v761 = (uint64_t)v967;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v967, 1, 1, v959);
          uint64_t v762 = v98;
          uint64_t v763 = (uint64_t)v966;
          uint64_t v764 = sub_10019E6C0((uint64_t)v966);
          sub_1001888F0(v764);
          sub_10019B0A8((uint64_t)v171, (void (*)(void))type metadata accessor for LocationPreviewViewState, (uint64_t)&v986);
          sub_10018DFF0();
          swift_storeEnumTagMultiPayload();
          sub_10018DFF0();
          uint64_t v884 = v750;
          sub_100183844();
          uint64_t v765 = v972;
          uint64_t v769 = sub_100163034(0, 3, v972, v760, v761, v766, v767, v768, 0, v763, (uint64_t)v186, (uint64_t)&OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, v762, v875, v876, v877, v878, v879, v880,
                   0,
                   v884);
          sub_1001781AC(v762, &qword_100E663F0);
          sub_1001781AC((uint64_t)&OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, &qword_100E66418);
          uint64_t v770 = (uint64_t)v186;
          v186 = (char *)v769;
          sub_1001781AC(v770, &qword_100E66420);
          sub_1001781AC(v763, &qword_100E66428);
          sub_1001781AC(v761, &qword_100E66430);
          sub_1001781AC(v760, &qword_100E66438);
          sub_1001781AC(v765, &qword_100E66440);
          sub_1002A8E30((uint64_t)v171, (void (*)(void))type metadata accessor for LocationPreviewViewState);
          sub_1002A8E30(v748, (void (*)(void))type metadata accessor for LocationPreviewViewState);
          sub_1001781AC(v908, (uint64_t *)&unk_100E73CA0);
          sub_1002A8E30(v909, (void (*)(void))type metadata accessor for LocationComponentAction);
          v771 = &qword_100E663E8;
          v772 = v977;
LABEL_152:
          sub_1001781AC((uint64_t)v772, v771);
          return v186;
        }
        sub_1001781AC(v507, &qword_100E663E8);
      }
      else
      {
        sub_1002A8E30(v507, (void (*)(void))type metadata accessor for ModalViewState);
      }
      uint64_t v723 = v909;
      sub_1001A14E4(v909, (void (*)(void))type metadata accessor for LocationComponentAction, (uint64_t)&v926);
      if (sub_1001EA904() == 1)
      {
        sub_1001781AC(v908, (uint64_t *)&unk_100E73CA0);
        sub_1002A8E30(v723, (void (*)(void))type metadata accessor for LocationComponentAction);
        sub_100127BA4();
        v724();
      }
      else
      {
        sub_1002A8E30(v507, (void (*)(void))type metadata accessor for LocationComponentAction);
        sub_1001781AC(v908, (uint64_t *)&unk_100E73CA0);
        sub_1002A8E30(v723, (void (*)(void))type metadata accessor for LocationComponentAction);
      }
      uint64_t v194 = (uint64_t)v977;
LABEL_54:
      sub_1001781AC(v194, &qword_100E663E8);
      uint64_t v164 = v982;
LABEL_57:
      sub_100151718((uint64_t)v193, v164, (void (*)(void))type metadata accessor for ViewState);
      sub_100151718(v164 + *(int *)(v98 + 20), (uint64_t)v171, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1002A8E30((uint64_t)v171, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
      }
      else
      {
        uint64_t v307 = v964;
        uint64_t v308 = *v171;
        if (*(void *)(v164 + *(int *)(v98 + 36) + 8) != 1
          || (uint64_t v194 = (uint64_t)[self currentDevice],
              [(id)v194 userInterfaceIdiom],
              (id)v194,
              (*(unsigned char *)(v164 + *(int *)(v98 + 28)) & 1) != 0))
        {
          sub_1002A8E30(v164, (void (*)(void))type metadata accessor for ViewState);
          sub_1001A14E4(v300, (void (*)(void))type metadata accessor for ModalViewState, (uint64_t)&v987);
          uint64_t v309 = swift_getEnumCaseMultiPayload();
          uint64_t v310 = v974;
          v311 = v983;
          switch(v309)
          {
            case 1:
            case 7:
              goto LABEL_68;
            case 2:
            case 3:
              swift_release();
LABEL_68:
              swift_release();
              goto LABEL_61;
            case 6:
              sub_10019B0A8((uint64_t)v987, (void (*)(void))type metadata accessor for LocationViewAction, (uint64_t)&v946);
              int v337 = swift_getEnumCaseMultiPayload();
              uint64_t v338 = v958;
              switch(v337)
              {
                case 1:
                  v987 = (void (*)(void))(v161 + *(int *)(sub_10017DF08(&qword_100E66458) + 64));
                  uint64_t v540 = v161;
                  uint64_t v541 = v905;
                  sub_10016E0C0(v540, v905, (void (*)(void))type metadata accessor for LocationComponentAction);
                  uint64_t v542 = v899;
                  sub_100151718(v541, v899, (void (*)(void))type metadata accessor for LocationComponentAction);
                  uint64_t v543 = swift_getEnumCaseMultiPayload();
                  sub_1002A8E30(v542, (void (*)(void))type metadata accessor for LocationComponentAction);
                  if (v543 == 6)
                  {
                    sub_1001B1E64(v950 + 17, v950[20]);
                    sub_100881F20((uint64_t)v186, 0, &v990);
                    type metadata accessor for ReportWeatherViewState._Storage();
                    uint64_t v544 = swift_allocObject();
                    sub_1002A8CC8((uint64_t)&v990, v544 + 16);
                    uint64_t v545 = type metadata accessor for AppConfigurationState();
                    uint64_t v546 = sub_100179DE0(v545);
                    _s7Weather24LocationCompositionStateOwst_0(v973, 1, 1, v546);
                    uint64_t v547 = (uint64_t)v967;
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v967, 1, 1, v959);
                    uint64_t v548 = (uint64_t)v966;
                    sub_10019E6C0((uint64_t)v966);
                    sub_100129070();
                    uint64_t v550 = sub_1001627E0(v549);
                    _s7Weather24LocationCompositionStateOwst_0(v550, v551, v552, v553);
                    uint64_t v554 = sub_100182368((uint64_t)&v982);
                    _s7Weather24LocationCompositionStateOwst_0(v554, v555, v556, v98);
                    v557 = v956;
                    uint64_t *v956 = v544;
                    v558 = v988;
                    swift_storeEnumTagMultiPayload();
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v557, 0, 1, (uint64_t)v558);
                    sub_1002A8D24(&v990, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_100274EDC);
                    swift_retain();
                    sub_10017F850();
                    v888 = (void (*)(void))v310;
                    v889 = v557;
                    v886 = (char *)v548;
                    v887 = (uint64_t *)v193;
                    uint64_t v559 = sub_100182EC0();
                    uint64_t v561 = *(void *)(v560 - 256);
                    uint64_t v567 = sub_100163034(v559, v562, v563, v561, v547, v564, v565, v566, v885[0], (uint64_t)v886, (uint64_t)v887, (uint64_t)v888, (uint64_t)v889, v890, v891, v892, v893, v894, v895,
                             v896,
                             v897);
                    swift_release();
                    swift_release();
                    sub_1002A8D24(&v990, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_100274E38);
                    sub_1001781AC((uint64_t)v557, &qword_100E663F0);
                    sub_1001781AC(v310, &qword_100E66418);
                    sub_1001781AC((uint64_t)v193, &qword_100E66420);
                    sub_1001781AC(v548, &qword_100E66428);
                    uint64_t v568 = v547;
                    v186 = (char *)v567;
                    sub_1001781AC(v568, &qword_100E66430);
                    sub_1001781AC(v561, &qword_100E66438);
                    sub_1001781AC((uint64_t)v558, &qword_100E66440);
                    goto LABEL_151;
                  }
                  sub_1001A14E4(v541, (void (*)(void))type metadata accessor for LocationComponentAction, (uint64_t)v916);
                  int v725 = swift_getEnumCaseMultiPayload();
                  uint64_t v982 = v308;
                  if (v725 == 1)
                  {
                    uint64_t v726 = (uint64_t)v886;
                    sub_1001627D4();
                    v727();
                    v728 = v939;
                    sub_100151718((uint64_t)v193 + *(int *)(v98 + 36), (uint64_t)v939, (void (*)(void))type metadata accessor for DisplayMetrics);
                    uint64_t v543 = sub_10058BCBC();
                    sub_1002A8E30((uint64_t)v728, (void (*)(void))type metadata accessor for DisplayMetrics);
                    if ((v543 & 1) == 0)
                    {
                      uint64_t v833 = (uint64_t)v193 + *(int *)(v98 + 40);
                      v980 = (void (*)(void))type metadata accessor for WeatherMapPresentationState;
                      sub_1001A14E4(v833, (void (*)(void))type metadata accessor for WeatherMapPresentationState, (uint64_t)&v911);
                      sub_100151718((uint64_t)v193 + *(int *)(v98 + 36), (uint64_t)v728, (void (*)(void))type metadata accessor for DisplayMetrics);
                      uint64_t v834 = sub_10017DF08(&qword_100E66460);
                      uint64_t v835 = v726;
                      uint64_t v836 = v937;
                      _s7Weather24LocationCompositionStateOwst_0(v937, 1, 3, v834);
                      v837 = v938;
                      sub_100B597B0(v728, v835, v836, v938);
                      sub_1002A8E30(v836, (void (*)(void))type metadata accessor for WeatherMapTrackingState);
                      sub_1002A8E30((uint64_t)v728, (void (*)(void))type metadata accessor for DisplayMetrics);
                      v983 = (void (*)(void))type metadata accessor for WeatherMapPresentationState;
                      sub_1002A8E30(v543, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
                      uint64_t v838 = type metadata accessor for AppConfigurationState();
                      uint64_t v839 = sub_100179DE0(v838);
                      _s7Weather24LocationCompositionStateOwst_0(v973, 1, 1, v839);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v967, 1, 1, v959);
                      uint64_t v840 = sub_10019E6C0((uint64_t)v966);
                      v841 = v961;
                      sub_100163050((uint64_t)v961, v842, v843, v840);
                      sub_1001A14E4((uint64_t)v193, (void (*)(void))type metadata accessor for ViewState, (uint64_t)&v968);
                      v844 = v956;
                      uint64_t v845 = v942;
                      uint64_t v846 = sub_10018C3A0(v942);
                      uint64_t v847 = v310;
                      uint64_t v848 = v946;
                      _s7Weather24LocationCompositionStateOwst_0(v946, 1, 1, v846);
                      uint64_t v849 = sub_100166AF4((uint64_t)&v973);
                      _s7Weather24LocationCompositionStateOwst_0(v849, v850, v851, v943);
                      uint64_t v852 = (uint64_t)v837;
                      v853 = v945;
                      sub_100151718((uint64_t)v837, (uint64_t)v945, (void (*)(void))v980);
                      sub_10018AFB0((uint64_t)v853);
                      uint64_t v855 = *(void *)(v854 - 256);
                      sub_10011D8AC();
                      sub_1001781AC((uint64_t)v853, &qword_100E663F8);
                      sub_1001781AC(v338, &qword_100E66400);
                      sub_1001781AC(v848, &qword_100E66408);
                      sub_1001781AC(v845, &qword_100E66410);
                      sub_1002A8E30(v543, (void (*)(void))type metadata accessor for ViewState);
                      _s7Weather24LocationCompositionStateOwst_0(v855, 0, 1, v984);
                      uint64_t v856 = type metadata accessor for ModalViewState.MapViewModal(0);
                      sub_100163050((uint64_t)v844, v857, v858, v856);
                      v859 = v988;
                      swift_storeEnumTagMultiPayload();
                      uint64_t v860 = sub_100164998();
                      _s7Weather24LocationCompositionStateOwst_0(v860, v861, v862, (uint64_t)v859);
                      sub_10017F850();
                      v888 = (void (*)(void))v855;
                      v889 = v844;
                      v887 = v841;
                      uint64_t v863 = (uint64_t)v966;
                      v886 = v966;
                      uint64_t v864 = sub_10019AA38();
                      uint64_t v866 = *(void *)(v865 - 256);
                      uint64_t v867 = v973;
                      uint64_t v868 = (uint64_t)v967;
                      uint64_t v873 = sub_100163034(v864, v869, v866, v973, (uint64_t)v967, v870, v871, v872, v885[0], (uint64_t)v886, (uint64_t)v887, (uint64_t)v888, (uint64_t)v889, v890, v891, v892, v893, v894, v895,
                               v896,
                               v897);
                      sub_10018A2FC();
                      sub_1001781AC((uint64_t)v844, &qword_100E663F0);
                      sub_1001781AC(v855, &qword_100E66418);
                      uint64_t v874 = (uint64_t)v841;
                      v186 = (char *)v873;
                      sub_1001781AC(v874, &qword_100E66420);
                      sub_1001781AC(v863, &qword_100E66428);
                      sub_1001781AC(v868, &qword_100E66430);
                      sub_1001781AC(v867, &qword_100E66438);
                      sub_1001781AC(v866, &qword_100E66440);
                      sub_1002A8E30(v852, v983);
                      (*(void (**)(char *, uint64_t))(v847 + 8))(v886, v958);
                      goto LABEL_151;
                    }
                    sub_100127BA4();
                    v729();
                  }
                  else
                  {
                    sub_1002A8E30(v543, (void (*)(void))type metadata accessor for LocationComponentAction);
                    v728 = v939;
                  }
                  uint64_t v773 = v893;
                  sub_100151718((uint64_t)v193 + *(int *)(v98 + 40), v893, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
                  sub_1001A14E4(v541, (void (*)(void))type metadata accessor for LocationComponentAction, (uint64_t)v915);
                  if (sub_1001EA904() == 1)
                  {
                    uint64_t v541 = (uint64_t)v888;
                    sub_1001627D4();
                    v774();
                    sub_100151718((uint64_t)v193 + *(int *)(v98 + 36), (uint64_t)v728, (void (*)(void))type metadata accessor for DisplayMetrics);
                    uint64_t v775 = sub_10017DF08(&qword_100E66460);
                    uint64_t v776 = v937;
                    _s7Weather24LocationCompositionStateOwst_0(v937, 1, 3, v775);
                    sub_100127A68();
                    uint64_t v543 = v773;
                    sub_100B597B0(v728, v541, v776, v777);
                    sub_1002A8E30(v776, (void (*)(void))type metadata accessor for WeatherMapTrackingState);
                    sub_1002A8E30((uint64_t)v728, (void (*)(void))type metadata accessor for DisplayMetrics);
                    (*(void (**)(uint64_t, uint64_t))(v310 + 8))(v541, v338);
                    sub_1002A8E30(v773, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
                    sub_10016E0C0(v310, v773, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
                  }
                  else
                  {
                    sub_1002A8E30(v543, (void (*)(void))type metadata accessor for LocationComponentAction);
                  }
                  uint64_t v778 = type metadata accessor for AppConfigurationState();
                  uint64_t v779 = v972;
                  uint64_t v782 = sub_10017E050(v972, v780, v781, v778);
                  _s7Weather24LocationCompositionStateOwst_0(v973, 1, 1, v782);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v967, 1, 1, v959);
                  uint64_t v783 = (uint64_t)v966;
                  uint64_t v784 = sub_10019E6C0((uint64_t)v966);
                  sub_10018A82C(v784);
                  sub_1001A14E4((uint64_t)v193, (void (*)(void))type metadata accessor for ViewState, (uint64_t)&v968);
                  uint64_t v785 = v942;
                  uint64_t v786 = sub_10018C3A0(v942);
                  uint64_t v787 = v946;
                  sub_100185148(v946, v788, v789, v786);
                  v790 = v945;
                  sub_100151718(v773, (uint64_t)v945, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
                  sub_10018AFB0((uint64_t)v790);
                  uint64_t v792 = *(void *)(v791 - 256);
                  sub_10011D8AC();
                  sub_1001781AC((uint64_t)v790, &qword_100E663F8);
                  sub_1001781AC(v98, &qword_100E66400);
                  sub_1001781AC(v787, &qword_100E66408);
                  sub_1001781AC(v785, &qword_100E66410);
                  sub_1002A8E30(v543, (void (*)(void))type metadata accessor for ViewState);
                  _s7Weather24LocationCompositionStateOwst_0(v792, 0, 1, v984);
                  v793 = v956;
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v956, 1, 1, (uint64_t)v988);
                  uint64_t v794 = v973;
                  v186 = v967;
                  sub_100163034(0, 3, v779, v973, (uint64_t)v967, v795, v796, v797, 0, v783, v541, v792, (uint64_t)v793, 0, 0, 0, 0, 0, 0,
                    0,
                    (uint64_t)v986);
                  sub_100176CF8();
                  sub_10018A2FC();
                  sub_1001781AC((uint64_t)v793, &qword_100E663F0);
                  sub_1001781AC(v792, &qword_100E66418);
                  sub_1001781AC(v541, &qword_100E66420);
                  uint64_t v798 = sub_1001781AC(v783, &qword_100E66428);
                  sub_100178FA8(v798, &qword_100E66430);
                  sub_1001781AC(v794, &qword_100E66438);
                  sub_1001781AC(v779, &qword_100E66440);
                  sub_1002A8E30(v773, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
LABEL_151:
                  sub_1002A8E30(v905, (void (*)(void))type metadata accessor for LocationComponentAction);
                  v771 = (uint64_t *)&unk_100E73CA0;
                  v772 = v987;
                  goto LABEL_152;
                case 2:
                  uint64_t v569 = sub_10017DF08(&qword_100E66448);
                  sub_10017EFA4((__n128 *)(v161 + *(int *)(v569 + 48)));
                  LODWORD(v981) = v570;
                  uint64_t v571 = v919;
                  sub_10016E0C0(v161, v919, (void (*)(void))type metadata accessor for LocationFooterAction);
                  sub_1001A14E4(v571, (void (*)(void))type metadata accessor for LocationFooterAction, (uint64_t)&v936);
                  sub_10017DF08(&qword_100E66450);
                  uint64_t v982 = v308;
                  sub_100188D14();
                  sub_1001627D4();
                  v572();
                  v573 = v956;
                  uint64_t v574 = v918;
                  sub_1001627D4();
                  v575();
                  uint64_t v576 = type metadata accessor for AppConfigurationState();
                  uint64_t v577 = sub_100179DE0(v576);
                  _s7Weather24LocationCompositionStateOwst_0(v973, 1, 1, v577);
                  uint64_t v578 = (uint64_t)v967;
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v967, 1, 1, v959);
                  uint64_t v579 = (uint64_t)v966;
                  sub_10019E6C0((uint64_t)v966);
                  uint64_t v580 = sub_10012B56C();
                  _s7Weather24LocationCompositionStateOwst_0(v580, v581, v582, v583);
                  uint64_t v584 = sub_1001627F4((uint64_t)&v982);
                  _s7Weather24LocationCompositionStateOwst_0(v584, v585, v586, v984);
                  sub_100162808();
                  v587();
                  uint64_t v588 = v912;
                  sub_100162808();
                  v589();
                  sub_100183428((__n128 *)((char *)v573 + *(int *)(v588 + 24)));
                  *(unsigned char *)(v590 + 32) = (_BYTE)v981;
                  type metadata accessor for ModalViewState.LocationDetailModal(0);
                  swift_storeEnumTagMultiPayload();
                  v591 = v988;
                  swift_storeEnumTagMultiPayload();
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v573, 0, 1, (uint64_t)v591);
                  sub_10017F850();
                  v888 = v311;
                  v889 = v573;
                  v886 = (char *)v579;
                  v887 = (uint64_t *)v194;
                  uint64_t v592 = sub_100164F10();
                  uint64_t v594 = *(void *)(v593 - 256);
                  uint64_t v600 = sub_100163034(v592, v595, v596, v594, v578, v597, v598, v599, v885[0], (uint64_t)v886, (uint64_t)v887, (uint64_t)v888, (uint64_t)v889, v890, v891, v892, v893, v894, v895,
                           v896,
                           v897);
                  sub_10018A2FC();
                  sub_1001781AC((uint64_t)v573, &qword_100E663F0);
                  sub_1001781AC((uint64_t)v311, &qword_100E66418);
                  sub_1001781AC(v194, &qword_100E66420);
                  sub_1001781AC(v579, &qword_100E66428);
                  sub_1001781AC(v578, &qword_100E66430);
                  v186 = (char *)v600;
                  sub_1001781AC(v594, &qword_100E66438);
                  sub_1001781AC((uint64_t)v591, &qword_100E66440);
                  (*(void (**)(uint64_t, uint64_t))(v574 + 8))(v921, v926);
                  (*(void (**)(uint64_t, char *))(v308 + 8))(v922, v968);
                  v231 = type metadata accessor for LocationFooterAction;
                  v408 = (char **)&v947;
                  goto LABEL_77;
                case 3:
                  uint64_t v601 = type metadata accessor for AppConfigurationState();
                  uint64_t v602 = v972;
                  uint64_t v605 = sub_10017E050(v972, v603, v604, v601);
                  _s7Weather24LocationCompositionStateOwst_0(v973, 1, 1, v605);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v967, 1, 1, v959);
                  uint64_t v606 = sub_10019E6C0((uint64_t)v966);
                  sub_10018A82C(v606);
                  sub_1001A14E4((uint64_t)v193, (void (*)(void))type metadata accessor for ViewState, (uint64_t)&v968);
                  uint64_t v607 = sub_1001627F4((uint64_t)&v931);
                  _s7Weather24LocationCompositionStateOwst_0(v607, v608, v609, active);
                  sub_100152374();
                  uint64_t v616 = sub_1001CCC58(v610, v611, v612, v613, v614, v615, v308);
                  sub_1001781AC((uint64_t)v311, &qword_100E663D0);
                  v617 = v956;
                  sub_100164968();
                  uint64_t v618 = sub_100180FA0((uint64_t)v193);
                  sub_10019FA9C(v618);
                  sub_1001781AC((uint64_t)v186, &qword_100E663F8);
                  sub_1001781AC(v98, &qword_100E66400);
                  sub_1001781AC((uint64_t)v311, &qword_100E66408);
                  sub_1001781AC((uint64_t)v193, &qword_100E66410);
                  sub_1002A8E30(v194, (void (*)(void))type metadata accessor for ViewState);
                  _s7Weather24LocationCompositionStateOwst_0(v616, 0, 1, v984);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v617, 1, 1, (uint64_t)v988);
                  sub_10017F850();
                  uint64_t v619 = (uint64_t)v966;
                  uint64_t v620 = v973;
                  uint64_t v621 = (uint64_t)v967;
                  uint64_t v625 = sub_100163034(0, 3, v602, v973, (uint64_t)v967, v622, v623, v624, 0, (uint64_t)v966, v161, v616, (uint64_t)v617, v890, v891, v892, v893, v894, v895,
                           v896,
                           v897);
                  swift_release();
                  sub_1001781AC((uint64_t)v617, &qword_100E663F0);
                  sub_1001781AC(v616, &qword_100E66418);
                  sub_1001781AC(v161, &qword_100E66420);
                  sub_1001781AC(v619, &qword_100E66428);
                  v186 = (char *)v625;
                  sub_1001781AC(v621, &qword_100E66430);
                  uint64_t v626 = v620;
                  goto LABEL_142;
                case 4:
                  uint64_t v982 = v308;
                  uint64_t v627 = (uint64_t)v186;
                  v983 = (void (*)(void))type metadata accessor for AppConfigurationState();
                  LODWORD(v977) = 1;
                  uint64_t v628 = v972;
                  v980 = (void (*)(void))sub_10017E050(v972, v629, v630, (uint64_t)v983);
                  sub_100127974((uint64_t)v980, v631, v632, (uint64_t)v980);
                  uint64_t v634 = *(void *)(v633 - 256);
                  sub_100186820(v634);
                  v979 = &v186[OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn];
                  sub_1001A14E4((uint64_t)&v186[OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn], (void (*)(void))type metadata accessor for NotificationsOptInState, (uint64_t)&v933);
                  v987 = (void (*)(void))type metadata accessor for Date();
                  _s7Weather24LocationCompositionStateOwst_0(v307, 1, 1, (uint64_t)v987);
                  uint64_t v635 = (uint64_t)v966;
                  sub_1001D0DEC(2u, 0, 2, (uint64_t)v966, 3, 2, 2, 2, 0);
                  sub_1001781AC(v307, (uint64_t *)&unk_100E73CA0);
                  sub_1002A8E30(v194, (void (*)(void))type metadata accessor for NotificationsOptInState);
                  v636 = v953;
                  _s7Weather24LocationCompositionStateOwst_0(v635, 0, 1, (uint64_t)v953);
                  type metadata accessor for TimeState();
                  uint64_t v637 = sub_10012B56C();
                  uint64_t v978 = v638;
                  _s7Weather24LocationCompositionStateOwst_0(v637, v639, v640, v638);
                  uint64_t v641 = sub_10017EFCC((uint64_t)&v982);
                  _s7Weather24LocationCompositionStateOwst_0(v641, v642, v643, v98);
                  uint64_t v644 = sub_1001627E0((uint64_t)&v986);
                  _s7Weather24LocationCompositionStateOwst_0(v644, v645, v646, (uint64_t)v988);
                  sub_100183844();
                  uint64_t v650 = sub_100163034(0, 3, v628, v98, v634, v647, v648, v649, 0, v635, v194, v308, v98, v875, v876, v877, v878, v879, v880,
                           0,
                           v627);
                  sub_1001781AC(v98, &qword_100E663F0);
                  uint64_t v651 = v308;
                  uint64_t v652 = (uint64_t)v636;
                  sub_1001781AC(v651, &qword_100E66418);
                  sub_1001781AC(v194, &qword_100E66420);
                  uint64_t v653 = v635;
                  uint64_t v654 = v650;
                  uint64_t v655 = (uint64_t)v979;
                  sub_1001781AC(v653, &qword_100E66428);
                  sub_1001781AC(v634, &qword_100E66430);
                  sub_1001781AC(v98, &qword_100E66438);
                  sub_1001781AC(v628, &qword_100E66440);
                  sub_1001B1E64(v950 + 12, v950[15]);
                  sub_1001CA7A8(v654 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, (void (*)(void))type metadata accessor for ViewState, (uint64_t)&v925);
                  v656 = (void *)v98;
                  uint64_t v657 = v654 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
                  swift_beginAccess();
                  char v658 = *(unsigned char *)(v654 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications);
                  char v659 = *(unsigned char *)(v655 + v636[13]);
                  char v660 = *(unsigned char *)(v654 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn + v636[16]);
                  uint64_t v661 = (uint64_t)v981;
                  char v662 = *(unsigned char *)(v654 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn + v636[14]);
                  char v663 = *(unsigned char *)(v654 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn + v636[15]);
                  v664 = (int *)v901;
                  *((unsigned char *)v636 + *(int *)(v901 + 20)) = *(unsigned char *)(v657 + 1);
                  *((unsigned char *)v636 + v664[6]) = v658;
                  *((unsigned char *)v636 + v664[7]) = v659;
                  *((unsigned char *)v636 + v664[8]) = v660;
                  *((unsigned char *)v636 + v664[9]) = v662;
                  *((unsigned char *)v636 + v664[10]) = v663;
                  v665 = (_WORD *)sub_10087ACD0((uint64_t)v636);
                  uint64_t v666 = (uint64_t)v636;
                  v667 = v980;
                  sub_1002A8E30(v666, (void (*)(void))type metadata accessor for NotificationsOptInInput);
                  if (v665 == 4) {
                    goto LABEL_123;
                  }
                  v670 = v983;
                  v671 = v987;
                  if (v665 == 3)
                  {
                    uint64_t v799 = sub_1001627F4((uint64_t)v996);
                    _s7Weather24LocationCompositionStateOwst_0(v799, v800, v801, (uint64_t)v670);
                    uint64_t v802 = sub_10018AE7C((uint64_t)v997);
                    _s7Weather24LocationCompositionStateOwst_0(v802, v803, v804, (uint64_t)v667);
                    uint64_t v805 = (uint64_t)v967;
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v967, 1, 1, v959);
                    uint64_t v806 = (uint64_t)v966;
                    sub_1001A3068((uint64_t)v966, 1);
                    _WORD *v665 = 0;
                    v807 = v988;
                    swift_storeEnumTagMultiPayload();
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v665, 0, 1, (uint64_t)v807);
                    uint64_t v808 = sub_100181E38();
                    uint64_t v813 = sub_100163034(v808, v809, v628, v661, v805, v810, v811, v812, v885[0], (uint64_t)v886, (uint64_t)v887, (uint64_t)v888, (uint64_t)v889, v890, v891, v892, v893, v894, v895,
                             v896,
                             v897);
                    swift_release();
                    sub_10018A2FC();
                    sub_1001781AC((uint64_t)v665, &qword_100E663F0);
                    sub_1001781AC(v652, &qword_100E66418);
                    sub_1001781AC(v655, &qword_100E66420);
                    sub_1001781AC(v806, &qword_100E66428);
                    uint64_t v814 = v805;
                    v186 = (char *)v813;
                    sub_1001781AC(v814, &qword_100E66430);
                    sub_1001781AC(v661, &qword_100E66438);
                    v771 = &qword_100E66440;
                    v772 = (void (*)(void))v628;
                  }
                  else
                  {
                    if (v665 == 5)
                    {
                      LODWORD(v977) = 2;
                      v656 = v956;
LABEL_123:
                      sub_100163050(v902, v668, v669, (uint64_t)v983);
                      uint64_t v672 = sub_100164F30((uint64_t)v928);
                      _s7Weather24LocationCompositionStateOwst_0(v672, v673, v674, (uint64_t)v667);
                      sub_100186820(v904);
                      sub_1001A14E4(v655, (void (*)(void))type metadata accessor for NotificationsOptInState, (uint64_t)&v933);
                      uint64_t v675 = sub_100182368((uint64_t)v992);
                      _s7Weather24LocationCompositionStateOwst_0(v675, v676, v677, (uint64_t)v987);
                      uint64_t v678 = v895;
                      sub_1001C6768(2u, 0, 0, 2, 2, 2, (uint64_t)v667, 2, v895, 3, 2, 2, 2, 0);
                      sub_1001781AC((uint64_t)v667, (uint64_t *)&unk_100E73CA0);
                      sub_1002A8E30((uint64_t)v665, (void (*)(void))type metadata accessor for NotificationsOptInState);
                      sub_100214D10();
                      uint64_t v679 = sub_10017EFCC((uint64_t)&v917);
                      _s7Weather24LocationCompositionStateOwst_0(v679, v680, v681, v978);
                      sub_10019B0A8(v661, (void (*)(void))type metadata accessor for ViewState, (uint64_t)&v918);
                      uint64_t v682 = sub_100182368((uint64_t)&v920);
                      _s7Weather24LocationCompositionStateOwst_0(v682, v683, v684, active);
                      sub_100152374();
                      uint64_t v691 = sub_1001CCC58(v685, v686, v687, v688, v689, v690, v982);
                      sub_1001781AC((uint64_t)v667, &qword_100E663D0);
                      uint64_t v692 = (uint64_t)v898;
                      uint64_t *v898 = v691;
                      swift_storeEnumTagMultiPayload();
                      uint64_t v693 = sub_100180FA0(v692);
                      uint64_t v694 = v946;
                      sub_100185148(v946, v695, v696, v693);
                      uint64_t v985 = v654;
                      v697 = v945;
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v945, 1, 1, v944);
                      sub_10012B920();
                      sub_10011D8AC();
                      sub_1001781AC((uint64_t)v697, &qword_100E663F8);
                      sub_1001781AC(v661, &qword_100E66400);
                      sub_1001781AC(v694, &qword_100E66408);
                      sub_1001781AC(v692, &qword_100E66410);
                      sub_1002A8E30(v655, (void (*)(void))type metadata accessor for ViewState);
                      uint64_t v698 = sub_100164998();
                      _s7Weather24LocationCompositionStateOwst_0(v698, v699, v700, v984);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v656, 1, 1, (uint64_t)v988);
                      sub_10017F850();
                      uint64_t v701 = v902;
                      uint64_t v702 = v903;
                      uint64_t v703 = v904;
                      v186 = (char *)sub_100163034(0, 3, v902, v903, v904, v704, v705, v706, 0, v678, v652, v628, (uint64_t)v656, v890, v891, v892, v893, v894, v895,
                                       v896,
                                       v897);
                      swift_release();
                      sub_10018A2FC();
                      sub_1001781AC((uint64_t)v656, &qword_100E663F0);
                      sub_1001781AC(v628, &qword_100E66418);
                      sub_1001781AC(v652, &qword_100E66420);
                      sub_1001781AC(v678, &qword_100E66428);
                      uint64_t v707 = v703;
LABEL_125:
                      sub_1001781AC(v707, &qword_100E66430);
                      uint64_t v720 = v702;
                    }
                    else
                    {
                      LODWORD(v985) = v665 >> 24;
                      type metadata accessor for NotificationsOptInViewState._Storage();
                      uint64_t v815 = swift_allocObject();
                      *(_WORD *)(v815 + 16) = (_WORD)v665;
                      *(unsigned char *)(v815 + 18) = BYTE2(v665) & 1;
                      *(unsigned char *)(v815 + 19) = v985;
                      uint64_t v816 = sub_100164F30((uint64_t)v996);
                      _s7Weather24LocationCompositionStateOwst_0(v816, v817, v818, (uint64_t)v670);
                      uint64_t v819 = sub_1001627E0((uint64_t)v997);
                      _s7Weather24LocationCompositionStateOwst_0(v819, v820, v821, (uint64_t)v667);
                      uint64_t v985 = v654;
                      uint64_t v822 = (uint64_t)v967;
                      sub_100186820((uint64_t)v967);
                      sub_1001A14E4(v655, (void (*)(void))type metadata accessor for NotificationsOptInState, (uint64_t)&v933);
                      _s7Weather24LocationCompositionStateOwst_0(v307, 1, 1, (uint64_t)v671);
                      unsigned __int8 v823 = sub_1001886B8();
                      sub_1001D0DEC(v823, 0, 0, v824, v882, SBYTE1(v882), SBYTE2(v882), SHIBYTE(v882), 0);
                      sub_1001781AC(v307, (uint64_t *)&unk_100E73CA0);
                      sub_1002A8E30((uint64_t)v665, (void (*)(void))type metadata accessor for NotificationsOptInState);
                      sub_1001A3068((uint64_t)v671, 0);
                      *(void *)v665 = v815;
                      v825 = v988;
                      swift_storeEnumTagMultiPayload();
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v665, 0, 1, (uint64_t)v825);
                      swift_retain();
                      uint64_t v826 = sub_100181E38();
                      uint64_t v701 = v972;
                      uint64_t v831 = sub_100163034(v826, v827, v972, (uint64_t)v670, v822, v828, v829, v830, v885[0], (uint64_t)v886, (uint64_t)v887, (uint64_t)v888, (uint64_t)v889, v890, v891, v892, v893, v894, v895,
                               v896,
                               v897);
                      swift_release();
                      swift_release();
                      sub_10018A2FC();
                      sub_1001781AC((uint64_t)v665, &qword_100E663F0);
                      sub_1001781AC(v652, &qword_100E66418);
                      sub_1001781AC(v655, &qword_100E66420);
                      sub_1001781AC((uint64_t)v671, &qword_100E66428);
                      uint64_t v832 = v822;
                      v186 = (char *)v831;
                      sub_1001781AC(v832, &qword_100E66430);
                      uint64_t v720 = (uint64_t)v670;
                    }
                    sub_1001781AC(v720, &qword_100E66438);
                    v771 = &qword_100E66440;
                    v772 = (void (*)(void))v701;
                  }
                  goto LABEL_152;
                case 5:
                  uint64_t v708 = type metadata accessor for AppConfigurationState();
                  uint64_t v709 = sub_100179DE0(v708);
                  uint64_t v702 = v973;
                  _s7Weather24LocationCompositionStateOwst_0(v973, 1, 1, v709);
                  uint64_t v710 = (uint64_t)v967;
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v967, 1, 1, v959);
                  uint64_t v711 = (uint64_t)v966;
                  uint64_t v712 = sub_10019E6C0((uint64_t)v966);
                  sub_1001888F0(v712);
                  v713 = v956;
                  *(_WORD *)v956 = 0;
                  v714 = v988;
                  swift_storeEnumTagMultiPayload();
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v713, 0, 1, (uint64_t)v714);
                  uint64_t v883 = v310;
                  uint64_t v701 = v972;
                  uint64_t v718 = sub_100163034(0, 3, v972, v702, v710, v715, v716, v717, 0, v711, (uint64_t)v186, v338, (uint64_t)v713, 0, 0, 0, 0, 0, 0,
                           0,
                           v883);
                  swift_release();
                  sub_1001781AC((uint64_t)v713, &qword_100E663F0);
                  sub_1001781AC(v338, &qword_100E66418);
                  uint64_t v719 = (uint64_t)v186;
                  v186 = (char *)v718;
                  sub_1001781AC(v719, &qword_100E66420);
                  sub_1001781AC(v711, &qword_100E66428);
                  uint64_t v707 = v710;
                  goto LABEL_125;
                case 6:
                  uint64_t v721 = v900;
                  sub_100151718((uint64_t)v193, v900, (void (*)(void))type metadata accessor for ViewState);
                  sub_1001CA7A8(v721 + *(int *)(v98 + 20), (void (*)(void))type metadata accessor for ViewState.SecondaryViewState, (uint64_t)v923);
                  if (swift_getEnumCaseMultiPayload() == 1)
                  {
                    sub_1002A8E30(v310, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
                  }
                  else
                  {
                    uint64_t v730 = *(void *)v310;
                    if (*(void *)(v721 + *(int *)(v98 + 36) + 8) != 1
                      || (uint64_t v194 = (uint64_t)[self currentDevice],
                          [(id)v194 userInterfaceIdiom],
                          (id)v194,
                          (*(unsigned char *)(v721 + *(int *)(v98 + 28)) & 1) != 0))
                    {
                      sub_1002A8E30(v721, (void (*)(void))type metadata accessor for ViewState);
                      uint64_t v194 = *(unsigned __int8 *)(v730
                                                + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_reportWeatherDisplayToggle);
                      swift_release();
                      char v722 = v194 ^ 1;
                      sub_100126050();
LABEL_141:
                      uint64_t v731 = type metadata accessor for AppConfigurationState();
                      uint64_t v602 = v972;
                      uint64_t v734 = sub_10017E050(v972, v732, v733, v731);
                      _s7Weather24LocationCompositionStateOwst_0(v973, 1, 1, v734);
                      uint64_t v735 = sub_100164F30((uint64_t)v993);
                      _s7Weather24LocationCompositionStateOwst_0(v735, v736, v737, v194);
                      uint64_t v738 = (uint64_t)v966;
                      uint64_t v739 = sub_10019E6C0((uint64_t)v966);
                      sub_10018A82C(v739);
                      sub_1001A14E4((uint64_t)v193, (void (*)(void))type metadata accessor for ViewState, (uint64_t)&v968);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v311, 1, 1, active);
                      uint64_t v740 = sub_1001CCC58((uint64_t)v311, 3, 2, 4, v722 & 1, 3, v308);
                      sub_1001781AC((uint64_t)v311, &qword_100E663D0);
                      sub_100164968();
                      uint64_t v741 = sub_100180FA0((uint64_t)v193);
                      sub_10019FA9C(v741);
                      sub_1001781AC((uint64_t)v186, &qword_100E663F8);
                      sub_1001781AC(v98, &qword_100E66400);
                      sub_1001781AC((uint64_t)v311, &qword_100E66408);
                      sub_1001781AC((uint64_t)v193, &qword_100E66410);
                      sub_1002A8E30(v194, (void (*)(void))type metadata accessor for ViewState);
                      _s7Weather24LocationCompositionStateOwst_0(v740, 0, 1, v984);
                      v742 = v956;
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v956, 1, 1, (uint64_t)v988);
                      uint64_t v743 = v973;
                      v186 = v967;
                      sub_100163034(0, 3, v602, v973, (uint64_t)v967, v744, v745, v746, 0, v738, v161, v740, (uint64_t)v742, 0, 0, 0, 0, 0, 0,
                        0,
                        (uint64_t)v986);
                      swift_release();
                      sub_1001781AC((uint64_t)v742, &qword_100E663F0);
                      sub_1001781AC(v740, &qword_100E66418);
                      sub_1001781AC(v161, &qword_100E66420);
                      uint64_t v747 = sub_1001781AC(v738, &qword_100E66428);
                      sub_100178FA8(v747, &qword_100E66430);
                      uint64_t v626 = v743;
LABEL_142:
                      sub_1001781AC(v626, &qword_100E66438);
                      v771 = &qword_100E66440;
                      v772 = (void (*)(void))v602;
                      goto LABEL_152;
                    }
                    swift_release();
                  }
                  sub_100126050();
                  sub_1002A8E30(v721, (void (*)(void))type metadata accessor for ViewState);
                  char v722 = 1;
                  goto LABEL_141;
                default:
                  v339 = v956;
                  sub_1001627D4();
                  v340();
                  uint64_t v341 = (uint64_t)&v186[OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn];
                  uint64_t v989 = *(void *)&v186[OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn + 8];
                  swift_bridgeObjectRetain();
                  uint64_t v342 = Location.id.getter();
                  sub_1007EC5C0(&v990, v342, v343);
                  swift_bridgeObjectRelease();
                  uint64_t v344 = type metadata accessor for AppConfigurationState();
                  uint64_t v345 = v972;
                  uint64_t v348 = sub_10017E050(v972, v346, v347, v344);
                  sub_100127974(v348, v349, v350, v348);
                  uint64_t v352 = *(void *)(v351 - 256);
                  sub_100186820(v352);
                  sub_1001A14E4(v341, (void (*)(void))type metadata accessor for NotificationsOptInState, (uint64_t)&v933);
                  uint64_t v353 = v989;
                  uint64_t v354 = type metadata accessor for Date();
                  sub_100163050(v307, v355, v356, v354);
                  unsigned __int8 v357 = sub_1001886B8();
                  sub_1001D0DEC(v357, v353, 2, v358, v881, SBYTE1(v881), SBYTE2(v881), SHIBYTE(v881), 2);
                  swift_bridgeObjectRelease();
                  sub_1001781AC(v307, (uint64_t *)&unk_100E73CA0);
                  sub_1002A8E30((uint64_t)&v989, (void (*)(void))type metadata accessor for NotificationsOptInState);
                  _s7Weather24LocationCompositionStateOwst_0(v338, 0, 1, (uint64_t)v953);
                  type metadata accessor for TimeState();
                  sub_100129070();
                  uint64_t v360 = *(void *)(v359 - 256);
                  _s7Weather24LocationCompositionStateOwst_0(v360, 1, 1, v361);
                  uint64_t v362 = v954;
                  _s7Weather24LocationCompositionStateOwst_0(v954, 1, 1, v984);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v339, 1, 1, (uint64_t)v988);
                  sub_10017F850();
                  uint64_t v366 = sub_100163034(0, 3, v345, v98, v352, v363, v364, v365, 0, v338, v360, v362, (uint64_t)v339, v890, v891, v892, v893, v894, v895,
                           v896,
                           v897);
                  swift_release();
                  sub_1001781AC((uint64_t)v339, &qword_100E663F0);
                  sub_1001781AC(v362, &qword_100E66418);
                  sub_1001781AC(v360, &qword_100E66420);
                  sub_1001781AC(v338, &qword_100E66428);
                  uint64_t v367 = v352;
                  v186 = (char *)v366;
                  sub_1001781AC(v367, &qword_100E66430);
                  sub_1001781AC(v98, &qword_100E66438);
                  sub_1001781AC(v345, &qword_100E66440);
                  sub_10017F874();
                  v368();
                  return v186;
              }
            default:
              swift_release();
              v305 = type metadata accessor for ModalViewState;
              uint64_t v306 = v194;
              goto LABEL_60;
          }
        }
        swift_release();
      }
      v305 = type metadata accessor for ViewState;
      uint64_t v306 = v164;
LABEL_60:
      sub_1002A8E30(v306, (void (*)(void))v305);
      break;
    case 2u:
      sub_1002A8E30(v927, (void (*)(void))type metadata accessor for LocationFooterAction);
      goto LABEL_54;
    case 3u:
    case 4u:
    case 5u:
    case 6u:
      goto LABEL_54;
    default:
      sub_100127BA4();
      v505();
      goto LABEL_54;
  }
LABEL_61:
  swift_retain();
  return v186;
}

uint64_t sub_1002A5408@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v86 = a3;
  uint64_t v87 = a4;
  uint64_t v88 = a1;
  uint64_t v91 = a5;
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v83 = *(void (**)(uint64_t, char *, uint64_t))(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TimeZone();
  uint64_t v80 = *(void *)(v9 - 8);
  uint64_t v81 = v9;
  __chkstk_darwin(v9);
  uint64_t v79 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Location();
  uint64_t v89 = *(void *)(v11 - 8);
  uint64_t v90 = v11;
  __chkstk_darwin(v11);
  uint64_t v84 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v82 = (char *)&v78 - v17;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v78 - v19;
  uint64_t v85 = type metadata accessor for DetailCondition();
  uint64_t v21 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v23 = (char *)&v78 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v78 - v25;
  uint64_t v27 = type metadata accessor for LocationComponentAction(0);
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v78 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100151718(a2, (uint64_t)v29, (void (*)(void))type metadata accessor for LocationComponentAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v36 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(char *, uint64_t))(*(void *)(v36 - 8) + 8))(v29, v36);
      goto LABEL_17;
    case 2u:
      int v40 = v29[*(int *)(sub_10017DF08(&qword_100E66488) + 48)];
      uint64_t v41 = v21;
      uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
      uint64_t v43 = v85;
      v42(v26, v29, v85);
      sub_10006DF38(v86, (uint64_t)v20, (uint64_t *)&unk_100E73CA0);
      if (v40 == 1)
      {
        uint64_t v44 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v44) == 1)
        {
          sub_1001781AC((uint64_t)v20, (uint64_t *)&unk_100E73CA0);
          (*(void (**)(char *, uint64_t))(v41 + 8))(v26, v43);
          goto LABEL_17;
        }
      }
      uint64_t v83 = (void (*)(uint64_t, char *, uint64_t))v42;
      sub_1001781AC((uint64_t)v20, (uint64_t *)&unk_100E73CA0);
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v23, v26, v43);
      uint64_t v63 = v89;
      (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v84, v88, v90);
      sub_10006DF38(v86, (uint64_t)v15, (uint64_t *)&unk_100E73CA0);
      uint64_t v64 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v64) == 1)
      {
        (*(void (**)(char *, uint64_t))(v41 + 8))(v26, v43);
        sub_1001781AC((uint64_t)v15, (uint64_t *)&unk_100E73CA0);
        uint64_t v65 = 1;
        uint64_t v66 = v91;
        uint64_t v67 = v87;
        uint64_t v68 = (uint64_t)v82;
      }
      else
      {
        uint64_t v71 = v41;
        uint64_t v72 = v79;
        Location.timeZone.getter();
        uint64_t v73 = v82;
        Date.startOfDay(timeZone:)();
        (*(void (**)(char *, uint64_t))(v80 + 8))(v72, v81);
        (*(void (**)(char *, uint64_t))(v71 + 8))(v26, v85);
        uint64_t v43 = v85;
        uint64_t v74 = v15;
        uint64_t v68 = (uint64_t)v73;
        (*(void (**)(char *, uint64_t))(*(void *)(v64 - 8) + 8))(v74, v64);
        uint64_t v65 = 0;
        uint64_t v66 = v91;
        uint64_t v67 = v87;
      }
      _s7Weather24LocationCompositionStateOwst_0(v68, v65, 1, v64);
      uint64_t v75 = (int *)type metadata accessor for ConditionDetailViewState();
      uint64_t v76 = v66 + v75[8];
      uint64_t v77 = type metadata accessor for DetailChartSelection();
      _s7Weather24LocationCompositionStateOwst_0(v76, 1, 1, v77);
      v83(v66, v23, v43);
      (*(void (**)(uint64_t, char *, uint64_t))(v63 + 32))(v66 + v75[5], v84, v90);
      sub_10024D364(v68, v66 + v75[6], (uint64_t *)&unk_100E73CA0);
      sub_10024D364(v67, v66 + v75[7], &qword_100E64498);
      *(unsigned char *)(v66 + v75[9]) = 0;
      uint64_t v34 = type metadata accessor for LocationPreviewModalViewState(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v35 = v66;
      goto LABEL_20;
    case 3u:
      char v37 = *v29;
      uint64_t v38 = v91;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 16))(v91, v88, v90);
      uint64_t v39 = type metadata accessor for AirQualityDetailViewState();
      *(unsigned char *)(v38 + *(int *)(v39 + 20)) = v37;
      sub_10024D364(v87, v38 + *(int *)(v39 + 24), &qword_100E64498);
      uint64_t v34 = type metadata accessor for LocationPreviewModalViewState(0);
      goto LABEL_12;
    case 4u:
      char v45 = *v29;
      uint64_t v46 = &v29[*(int *)(sub_10017DF08(&qword_100E66480) + 48)];
      uint64_t v47 = v89;
      uint64_t v49 = v90;
      uint64_t v48 = v91;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 16))(v91, v88, v90);
      uint64_t v50 = (int *)type metadata accessor for AveragesDetailViewState();
      uint64_t v51 = v48 + v50[6];
      uint64_t v52 = type metadata accessor for DetailHeroChartLollipopPosition(0);
      _s7Weather24LocationCompositionStateOwst_0(v51, 1, 1, v52);
      *(unsigned char *)(v48 + v50[5]) = v45;
      sub_10024D364(v87, v48 + v50[7], &qword_100E64498);
      uint64_t v53 = type metadata accessor for LocationPreviewModalViewState(0);
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0(v48, 0, 1, v53);
      return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v46, v49);
    case 5u:
      uint64_t v38 = v91;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 16))(v91, v88, v90);
      uint64_t HourPrecipitationDetailViewState = type metadata accessor for NextHourPrecipitationDetailViewState();
      sub_10024D364(v87, v38 + *(int *)(HourPrecipitationDetailViewState + 20), &qword_100E64498);
      uint64_t v34 = type metadata accessor for LocationPreviewModalViewState(0);
      goto LABEL_12;
    case 6u:
      goto LABEL_17;
    case 7u:
      uint64_t v38 = v91;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 16))(v91, v88, v90);
      uint64_t v56 = type metadata accessor for SunriseSunsetDetailViewState();
      sub_10024D364(v87, v38 + *(int *)(v56 + 20), &qword_100E64498);
      *(unsigned char *)(v38 + *(int *)(v56 + 24)) = 0;
      uint64_t v34 = type metadata accessor for LocationPreviewModalViewState(0);
LABEL_12:
      swift_storeEnumTagMultiPayload();
      uint64_t v35 = v38;
      goto LABEL_20;
    case 8u:
      uint64_t v57 = v91;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 16))(v91, v88, v90);
      uint64_t v58 = (int *)type metadata accessor for MoonDetailViewState();
      uint64_t v59 = v57 + v58[5];
      uint64_t v60 = type metadata accessor for MoonDetailSelectedDate();
      _s7Weather24LocationCompositionStateOwst_0(v59, 1, 1, v60);
      uint64_t v61 = v57 + v58[6];
      uint64_t v62 = type metadata accessor for Date();
      _s7Weather24LocationCompositionStateOwst_0(v61, 1, 1, v62);
      sub_10024D364(v87, v57 + v58[7], &qword_100E64498);
      *(unsigned char *)(v57 + v58[8]) = 2;
      uint64_t v34 = type metadata accessor for LocationPreviewModalViewState(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v35 = v57;
      goto LABEL_20;
    default:
      int v30 = v29[*(int *)(sub_10017DF08(&qword_100E66478) + 48)];
      uint64_t v31 = v83;
      uint64_t v32 = (void (*)(char *, char *, uint64_t))*((void *)v83 + 4);
      v32(v8, v29, v6);
      if (v30 == 1)
      {
        uint64_t v33 = v91;
        v32((char *)v91, v8, v6);
        uint64_t v34 = type metadata accessor for LocationPreviewModalViewState(0);
        swift_storeEnumTagMultiPayload();
        uint64_t v35 = v33;
LABEL_20:
        uint64_t v70 = 0;
        uint64_t v69 = v34;
      }
      else
      {
        (*((void (**)(char *, uint64_t))v31 + 1))(v8, v6);
LABEL_17:
        uint64_t v69 = type metadata accessor for LocationPreviewModalViewState(0);
        uint64_t v35 = v91;
        uint64_t v70 = 1;
      }
      return _s7Weather24LocationCompositionStateOwst_0(v35, v70, 1, v69);
  }
}

uint64_t sub_1002A5E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v286 = a5;
  uint64_t v274 = a4;
  unint64_t v297 = (char *)a3;
  uint64_t v288 = a2;
  uint64_t v296 = a1;
  uint64_t v262 = type metadata accessor for URL();
  uint64_t v260 = *(void *)(v262 - 8);
  __chkstk_darwin(v262);
  v272 = (char *)&v249 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(qword_100E66490);
  __chkstk_darwin(v6 - 8);
  v257 = (char *)&v249 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v261 = type metadata accessor for DisplayMetrics();
  __chkstk_darwin(v261);
  uint64_t v265 = (uint64_t *)((char *)&v249 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v256 = type metadata accessor for WeatherMapPresentationState(0);
  __chkstk_darwin(v256);
  uint64_t v264 = (uint64_t)&v249 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E663F8);
  __chkstk_darwin(v10 - 8);
  uint64_t v255 = (char *)&v249 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E66400);
  __chkstk_darwin(v12 - 8);
  uint64_t v263 = (uint64_t)&v249 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100E66408);
  __chkstk_darwin(v14 - 8);
  uint64_t v283 = (uint64_t)&v249 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E66410);
  __chkstk_darwin(v16 - 8);
  uint64_t v282 = (uint64_t)&v249 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v294 = type metadata accessor for ViewState(0);
  __chkstk_darwin(v294);
  uint64_t v281 = (uint64_t)&v249 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10017DF08(&qword_100E65BC0);
  __chkstk_darwin(v19 - 8);
  uint64_t v258 = (uint64_t)&v249 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v254 = (char *)&v249 - v22;
  __chkstk_darwin(v23);
  uint64_t v284 = (uint64_t)&v249 - v24;
  uint64_t v252 = type metadata accessor for TimeZone();
  uint64_t v251 = *(void *)(v252 - 8);
  __chkstk_darwin(v252);
  uint64_t v250 = (char *)&v249 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v287 = type metadata accessor for Location();
  uint64_t v285 = *(void *)(v287 - 8);
  __chkstk_darwin(v287);
  uint64_t v270 = (char *)&v249 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_10017DF08(&qword_100E663F0);
  __chkstk_darwin(v27 - 8);
  v295 = (uint64_t *)((char *)&v249 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v29);
  v253 = (char *)&v249 - v30;
  uint64_t v31 = sub_10017DF08(&qword_100E66418);
  __chkstk_darwin(v31 - 8);
  id v259 = (char *)&v249 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  uint64_t v289 = (uint64_t)&v249 - v34;
  __chkstk_darwin(v35);
  uint64_t v271 = (uint64_t)&v249 - v36;
  uint64_t v37 = sub_10017DF08(&qword_100E66420);
  __chkstk_darwin(v37 - 8);
  uint64_t v280 = (uint64_t)&v249 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  uint64_t v290 = (uint64_t)&v249 - v40;
  __chkstk_darwin(v41);
  uint64_t v269 = (uint64_t)&v249 - v42;
  uint64_t v43 = sub_10017DF08(&qword_100E66428);
  __chkstk_darwin(v43 - 8);
  uint64_t v279 = (uint64_t)&v249 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v45);
  uint64_t v291 = (uint64_t)&v249 - v46;
  __chkstk_darwin(v47);
  uint64_t v268 = (uint64_t)&v249 - v48;
  uint64_t v49 = sub_10017DF08(&qword_100E66430);
  __chkstk_darwin(v49 - 8);
  uint64_t v277 = (uint64_t)&v249 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v51);
  uint64_t v292 = (uint64_t)&v249 - v52;
  __chkstk_darwin(v53);
  uint64_t v267 = (uint64_t)&v249 - v54;
  uint64_t v55 = sub_10017DF08(&qword_100E66438);
  __chkstk_darwin(v55 - 8);
  uint64_t v276 = (uint64_t)&v249 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v57);
  uint64_t v293 = (uint64_t)&v249 - v58;
  __chkstk_darwin(v59);
  uint64_t v266 = (uint64_t)&v249 - v60;
  uint64_t v61 = sub_10017DF08(&qword_100E66440);
  __chkstk_darwin(v61 - 8);
  uint64_t v275 = (uint64_t)&v249 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v63);
  uint64_t v65 = (char *)&v249 - v64;
  __chkstk_darwin(v66);
  uint64_t v68 = (char *)&v249 - v67;
  uint64_t v69 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v69 - 8);
  uint64_t v71 = (char *)&v249 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v72);
  uint64_t v74 = (char *)&v249 - v73;
  __chkstk_darwin(v75);
  uint64_t v77 = (char *)&v249 - v76;
  uint64_t v78 = type metadata accessor for DetailCondition();
  uint64_t v273 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v80 = (char *)&v249 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v81);
  uint64_t v83 = (char *)&v249 - v82;
  uint64_t v84 = type metadata accessor for LocationComponentAction(0);
  __chkstk_darwin(v84);
  uint64_t v86 = (char *)&v249 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100151718((uint64_t)v297, (uint64_t)v86, (void (*)(void))type metadata accessor for LocationComponentAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v125 = type metadata accessor for WeatherMapOverlayKind();
      uint64_t v273 = *(void *)(v125 - 8);
      (*(void (**)(char *, uint64_t))(v273 + 8))(v86, v125);
      uint64_t v126 = v284;
      _s7Weather24LocationCompositionStateOwst_0(v284, 1, 1, v125);
      unint64_t v297 = (char *)type metadata accessor for AppConfigurationState();
      uint64_t v127 = (uint64_t)v65;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 1, 1, (uint64_t)v297);
      uint64_t v287 = type metadata accessor for EnvironmentState();
      uint64_t v128 = v293;
      _s7Weather24LocationCompositionStateOwst_0(v293, 1, 1, v287);
      uint64_t v286 = type metadata accessor for LocationsState();
      uint64_t v129 = v292;
      _s7Weather24LocationCompositionStateOwst_0(v292, 1, 1, v286);
      uint64_t v285 = type metadata accessor for NotificationsOptInState();
      uint64_t v130 = v291;
      _s7Weather24LocationCompositionStateOwst_0(v291, 1, 1, v285);
      uint64_t v274 = type metadata accessor for TimeState();
      uint64_t v131 = v290;
      _s7Weather24LocationCompositionStateOwst_0(v290, 1, 1, v274);
      uint64_t v132 = v289;
      uint64_t v133 = v294;
      _s7Weather24LocationCompositionStateOwst_0(v289, 1, 1, v294);
      uint64_t v134 = v295;
      uint64_t v135 = v126;
      uint64_t v136 = v296;
      sub_1002A8654(v135, v296, v288, v278, (uint64_t)v295);
      uint64_t v137 = sub_1001659F0(0, 3, v127, v128, v129, 0, 0, 0, 0, v130, v131, v132, (uint64_t)v134, 0, 0, 0, 0, 0, 0,
               0,
               v136);
      uint64_t v138 = (uint64_t)v134;
      uint64_t v139 = v125;
      sub_1001781AC(v138, &qword_100E663F0);
      sub_1001781AC(v132, &qword_100E66418);
      sub_1001781AC(v131, &qword_100E66420);
      sub_1001781AC(v130, &qword_100E66428);
      sub_1001781AC(v129, &qword_100E66430);
      sub_1001781AC(v128, &qword_100E66438);
      sub_1001781AC(v127, &qword_100E66440);
      _s7Weather24LocationCompositionStateOwst_0(v275, 1, 1, (uint64_t)v297);
      _s7Weather24LocationCompositionStateOwst_0(v276, 1, 1, v287);
      _s7Weather24LocationCompositionStateOwst_0(v277, 1, 1, v286);
      _s7Weather24LocationCompositionStateOwst_0(v279, 1, 1, v285);
      _s7Weather24LocationCompositionStateOwst_0(v280, 1, 1, v274);
      unint64_t v297 = (char *)v137;
      uint64_t v140 = v137 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
      sub_100151718(v137 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v281, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v141 = type metadata accessor for ViewState.SecondaryViewState(0);
      _s7Weather24LocationCompositionStateOwst_0(v282, 1, 1, v141);
      uint64_t v142 = type metadata accessor for SearchViewState(0);
      _s7Weather24LocationCompositionStateOwst_0(v283, 1, 1, v142);
      uint64_t v143 = v263;
      _s7Weather24LocationCompositionStateOwst_0(v263, 1, 1, v261);
      uint64_t v144 = v264;
      sub_100151718(v140 + *(int *)(v133 + 40), v264, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
      uint64_t v145 = v140 + *(int *)(v133 + 36);
      if (*(void *)(v145 + 8) == 2) {
        uint64_t v146 = 5;
      }
      else {
        uint64_t v146 = 1;
      }
      uint64_t v147 = v265;
      sub_100151718(v145, (uint64_t)v265, (void (*)(void))type metadata accessor for DisplayMetrics);
      uint64_t v148 = v258;
      sub_10006DF38(v284, v258, &qword_100E65BC0);
      if (_s7Weather24LocationCompositionStateOwet_0(v148, 1, v125) == 1)
      {
        uint64_t v149 = v256;
        uint64_t v150 = v140 + *(int *)(v133 + 40) + (uint64_t)*(int *)(v256 + 24);
        uint64_t v151 = v254;
        (*(void (**)(char *, uint64_t, uint64_t))(v273 + 16))(v254, v150, v125);
        sub_1001781AC(v148, &qword_100E65BC0);
        uint64_t v152 = (uint64_t)v151;
        uint64_t v153 = (uint64_t)v257;
      }
      else
      {
        uint64_t v222 = v254;
        (*(void (**)(char *, uint64_t, uint64_t))(v273 + 32))(v254, v148, v125);
        uint64_t v152 = (uint64_t)v222;
        uint64_t v153 = (uint64_t)v257;
        uint64_t v149 = v256;
      }
      uint64_t v223 = v255;
      _s7Weather24LocationCompositionStateOwst_0(v152, 0, 1, v139);
      uint64_t v224 = sub_10017DF08(&qword_100E66460);
      _s7Weather24LocationCompositionStateOwst_0(v153, 1, 3, v224);
      uint64_t v225 = type metadata accessor for WeatherMapTrackingState(0);
      _s7Weather24LocationCompositionStateOwst_0(v153, 0, 1, v225);
      sub_100074324(v146, v147, v152, v153, v223);
      sub_1001781AC(v153, qword_100E66490);
      sub_1001781AC(v152, &qword_100E65BC0);
      sub_1002A8E30((uint64_t)v147, (void (*)(void))type metadata accessor for DisplayMetrics);
      sub_1002A8E30(v144, (void (*)(void))type metadata accessor for WeatherMapPresentationState);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v223, 0, 1, v149);
      uint64_t v226 = (uint64_t)v259;
      uint64_t v227 = v282;
      uint64_t v228 = v283;
      uint64_t v229 = v281;
      sub_10011D8AC();
      sub_1001781AC((uint64_t)v223, &qword_100E663F8);
      sub_1001781AC(v143, &qword_100E66400);
      sub_1001781AC(v228, &qword_100E66408);
      sub_1001781AC(v227, &qword_100E66410);
      sub_1002A8E30(v229, (void (*)(void))type metadata accessor for ViewState);
      _s7Weather24LocationCompositionStateOwst_0(v226, 0, 1, v133);
      uint64_t v230 = type metadata accessor for ModalViewState(0);
      v231 = v295;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v295, 1, 1, v230);
      uint64_t v232 = v280;
      uint64_t v233 = v279;
      uint64_t v234 = v275;
      uint64_t v235 = v276;
      uint64_t v236 = v277;
      uint64_t v106 = sub_1001659F0(0, 3, v275, v276, v277, 0, 0, 0, 0, v279, v280, v226, (uint64_t)v231, 0, 0, 0, 0, 0, 0,
               0,
               (uint64_t)v297);
      swift_release();
      sub_1001781AC((uint64_t)v231, &qword_100E663F0);
      sub_1001781AC(v226, &qword_100E66418);
      sub_1001781AC(v232, &qword_100E66420);
      sub_1001781AC(v233, &qword_100E66428);
      sub_1001781AC(v236, &qword_100E66430);
      sub_1001781AC(v235, &qword_100E66438);
      sub_1001781AC(v234, &qword_100E66440);
      uint64_t v194 = v284;
      v193 = &qword_100E65BC0;
      goto LABEL_19;
    case 2u:
      int v154 = v86[*(int *)(sub_10017DF08(&qword_100E66488) + 48)];
      uint64_t v155 = v273;
      uint64_t v156 = *(uint64_t **)(v273 + 32);
      unint64_t v297 = (char *)(v273 + 32);
      v295 = v156;
      ((void (*)(char *, char *, uint64_t))v156)(v83, v86, v78);
      sub_10006DF38(v274, (uint64_t)v77, (uint64_t *)&unk_100E73CA0);
      if (v154 == 1
        && (uint64_t v157 = type metadata accessor for Date(),
            _s7Weather24LocationCompositionStateOwet_0((uint64_t)v77, 1, v157) == 1))
      {
        sub_1001781AC((uint64_t)v77, (uint64_t *)&unk_100E73CA0);
        (*(void (**)(char *, uint64_t))(v155 + 8))(v83, v78);
        return 0;
      }
      else
      {
        sub_1001781AC((uint64_t)v77, (uint64_t *)&unk_100E73CA0);
        uint64_t v213 = type metadata accessor for AppConfigurationState();
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v68, 1, 1, v213);
        uint64_t v214 = type metadata accessor for EnvironmentState();
        _s7Weather24LocationCompositionStateOwst_0(v266, 1, 1, v214);
        uint64_t v215 = type metadata accessor for LocationsState();
        _s7Weather24LocationCompositionStateOwst_0(v267, 1, 1, v215);
        uint64_t v216 = type metadata accessor for NotificationsOptInState();
        _s7Weather24LocationCompositionStateOwst_0(v268, 1, 1, v216);
        uint64_t v217 = type metadata accessor for TimeState();
        _s7Weather24LocationCompositionStateOwst_0(v269, 1, 1, v217);
        _s7Weather24LocationCompositionStateOwst_0(v271, 1, 1, v294);
        (*(void (**)(char *, char *, uint64_t))(v155 + 16))(v80, v83, v78);
        uint64_t v218 = v285;
        uint64_t v219 = v287;
        (*(void (**)(char *, uint64_t, uint64_t))(v285 + 16))(v270, v288, v287);
        sub_10006DF38(v274, (uint64_t)v71, (uint64_t *)&unk_100E73CA0);
        uint64_t v220 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v220) == 1)
        {
          sub_1001781AC((uint64_t)v71, (uint64_t *)&unk_100E73CA0);
          uint64_t v221 = 1;
        }
        else
        {
          uint64_t v237 = v250;
          Location.timeZone.getter();
          Date.startOfDay(timeZone:)();
          uint64_t v238 = v237;
          uint64_t v219 = v287;
          (*(void (**)(char *, uint64_t))(v251 + 8))(v238, v252);
          (*(void (**)(char *, uint64_t))(*(void *)(v220 - 8) + 8))(v71, v220);
          uint64_t v221 = 0;
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v74, v221, 1, v220);
        v239 = (int *)type metadata accessor for ConditionDetailViewState();
        uint64_t v240 = (uint64_t)v253;
        uint64_t v241 = (uint64_t)&v253[v239[8]];
        uint64_t v242 = type metadata accessor for DetailChartSelection();
        _s7Weather24LocationCompositionStateOwst_0(v241, 1, 1, v242);
        ((void (*)(uint64_t, char *, uint64_t))v295)(v240, v80, v78);
        (*(void (**)(uint64_t, char *, uint64_t))(v218 + 32))(v240 + v239[5], v270, v219);
        sub_10024D364((uint64_t)v74, v240 + v239[6], (uint64_t *)&unk_100E73CA0);
        sub_10024D364(v286, v240 + v239[7], &qword_100E64498);
        *(unsigned char *)(v240 + v239[9]) = 0;
        type metadata accessor for ModalViewState.LocationDetailModal(0);
        swift_storeEnumTagMultiPayload();
        uint64_t v243 = type metadata accessor for ModalViewState(0);
        swift_storeEnumTagMultiPayload();
        _s7Weather24LocationCompositionStateOwst_0(v240, 0, 1, v243);
        uint64_t v244 = v271;
        uint64_t v245 = v269;
        uint64_t v246 = v268;
        uint64_t v247 = v266;
        uint64_t v248 = v267;
        uint64_t v106 = sub_1001659F0(0, 3, (uint64_t)v68, v266, v267, 0, 0, 0, 0, v268, v269, v271, v240, 0, 0, 0, 0, 0, 0,
                 0,
                 v296);
        sub_1001781AC(v240, &qword_100E663F0);
        sub_1001781AC(v244, &qword_100E66418);
        sub_1001781AC(v245, &qword_100E66420);
        sub_1001781AC(v246, &qword_100E66428);
        sub_1001781AC(v248, &qword_100E66430);
        sub_1001781AC(v247, &qword_100E66438);
        sub_1001781AC((uint64_t)v68, &qword_100E66440);
        (*(void (**)(char *, uint64_t))(v273 + 8))(v83, v78);
      }
      return v106;
    case 3u:
      char v158 = *v86;
      uint64_t v159 = type metadata accessor for AppConfigurationState();
      uint64_t v160 = (uint64_t)v65;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 1, 1, v159);
      uint64_t v161 = type metadata accessor for EnvironmentState();
      uint64_t v162 = v293;
      _s7Weather24LocationCompositionStateOwst_0(v293, 1, 1, v161);
      uint64_t v163 = type metadata accessor for LocationsState();
      uint64_t v164 = v292;
      _s7Weather24LocationCompositionStateOwst_0(v292, 1, 1, v163);
      uint64_t v165 = type metadata accessor for NotificationsOptInState();
      uint64_t v166 = v291;
      _s7Weather24LocationCompositionStateOwst_0(v291, 1, 1, v165);
      uint64_t v167 = type metadata accessor for TimeState();
      uint64_t v168 = v290;
      _s7Weather24LocationCompositionStateOwst_0(v290, 1, 1, v167);
      uint64_t v169 = v289;
      _s7Weather24LocationCompositionStateOwst_0(v289, 1, 1, v294);
      uint64_t v170 = v295;
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v285 + 16))(v295, v288, v287);
      uint64_t v171 = type metadata accessor for AirQualityDetailViewState();
      *((unsigned char *)v170 + *(int *)(v171 + 20)) = v158;
      sub_10024D364(v286, (uint64_t)v170 + *(int *)(v171 + 24), &qword_100E64498);
      type metadata accessor for ModalViewState.LocationDetailModal(0);
      goto LABEL_18;
    case 4u:
      LODWORD(v284) = *v86;
      unint64_t v297 = &v86[*(int *)(sub_10017DF08(&qword_100E66480) + 48)];
      uint64_t v107 = type metadata accessor for AppConfigurationState();
      uint64_t v249 = v65;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 1, 1, v107);
      uint64_t v108 = type metadata accessor for EnvironmentState();
      uint64_t v109 = v293;
      _s7Weather24LocationCompositionStateOwst_0(v293, 1, 1, v108);
      uint64_t v110 = type metadata accessor for LocationsState();
      uint64_t v111 = v292;
      _s7Weather24LocationCompositionStateOwst_0(v292, 1, 1, v110);
      uint64_t v112 = type metadata accessor for NotificationsOptInState();
      uint64_t v113 = v291;
      _s7Weather24LocationCompositionStateOwst_0(v291, 1, 1, v112);
      uint64_t v114 = type metadata accessor for TimeState();
      uint64_t v115 = v290;
      _s7Weather24LocationCompositionStateOwst_0(v290, 1, 1, v114);
      uint64_t v116 = v289;
      _s7Weather24LocationCompositionStateOwst_0(v289, 1, 1, v294);
      uint64_t v117 = v285;
      uint64_t v118 = v295;
      uint64_t v119 = v287;
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v285 + 16))(v295, v288, v287);
      uint64_t v120 = (int *)type metadata accessor for AveragesDetailViewState();
      uint64_t v121 = (uint64_t)v118 + v120[6];
      uint64_t v122 = type metadata accessor for DetailHeroChartLollipopPosition(0);
      _s7Weather24LocationCompositionStateOwst_0(v121, 1, 1, v122);
      *((unsigned char *)v118 + v120[5]) = v284;
      sub_10024D364(v286, (uint64_t)v118 + v120[7], &qword_100E64498);
      type metadata accessor for ModalViewState.LocationDetailModal(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v123 = type metadata accessor for ModalViewState(0);
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v118, 0, 1, v123);
      uint64_t v124 = (uint64_t)v249;
      uint64_t v106 = sub_1001659F0(0, 3, (uint64_t)v249, v109, v111, 0, 0, 0, 0, v113, v115, v116, (uint64_t)v118, 0, 0, 0, 0, 0, 0,
               0,
               v296);
      sub_1001781AC((uint64_t)v118, &qword_100E663F0);
      sub_1001781AC(v116, &qword_100E66418);
      sub_1001781AC(v115, &qword_100E66420);
      sub_1001781AC(v113, &qword_100E66428);
      sub_1001781AC(v111, &qword_100E66430);
      sub_1001781AC(v109, &qword_100E66438);
      sub_1001781AC(v124, &qword_100E66440);
      (*(void (**)(char *, uint64_t))(v117 + 8))(v297, v119);
      return v106;
    case 5u:
      uint64_t v172 = type metadata accessor for AppConfigurationState();
      uint64_t v160 = (uint64_t)v65;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 1, 1, v172);
      uint64_t v173 = type metadata accessor for EnvironmentState();
      uint64_t v162 = v293;
      _s7Weather24LocationCompositionStateOwst_0(v293, 1, 1, v173);
      uint64_t v174 = type metadata accessor for LocationsState();
      uint64_t v164 = v292;
      _s7Weather24LocationCompositionStateOwst_0(v292, 1, 1, v174);
      uint64_t v175 = type metadata accessor for NotificationsOptInState();
      uint64_t v166 = v291;
      _s7Weather24LocationCompositionStateOwst_0(v291, 1, 1, v175);
      uint64_t v176 = type metadata accessor for TimeState();
      uint64_t v168 = v290;
      _s7Weather24LocationCompositionStateOwst_0(v290, 1, 1, v176);
      uint64_t v169 = v289;
      _s7Weather24LocationCompositionStateOwst_0(v289, 1, 1, v294);
      uint64_t v170 = v295;
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v285 + 16))(v295, v288, v287);
      uint64_t HourPrecipitationDetailViewState = type metadata accessor for NextHourPrecipitationDetailViewState();
      sub_10024D364(v286, (uint64_t)v170 + *(int *)(HourPrecipitationDetailViewState + 20), &qword_100E64498);
      type metadata accessor for ModalViewState.LocationDetailModal(0);
      goto LABEL_18;
    case 6u:
      sub_1001B1E64(v278 + 17, v278[20]);
      uint64_t v178 = v296;
      sub_100881F20(v296, 0, &v298);
      type metadata accessor for ReportWeatherViewState._Storage();
      uint64_t v179 = swift_allocObject();
      sub_1002A8CC8((uint64_t)&v298, v179 + 16);
      uint64_t v180 = type metadata accessor for AppConfigurationState();
      uint64_t v181 = (uint64_t)v65;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 1, 1, v180);
      uint64_t v182 = type metadata accessor for EnvironmentState();
      uint64_t v183 = v293;
      _s7Weather24LocationCompositionStateOwst_0(v293, 1, 1, v182);
      uint64_t v184 = type metadata accessor for LocationsState();
      uint64_t v185 = v292;
      _s7Weather24LocationCompositionStateOwst_0(v292, 1, 1, v184);
      uint64_t v186 = type metadata accessor for NotificationsOptInState();
      uint64_t v187 = v291;
      _s7Weather24LocationCompositionStateOwst_0(v291, 1, 1, v186);
      uint64_t v188 = type metadata accessor for TimeState();
      uint64_t v189 = v290;
      _s7Weather24LocationCompositionStateOwst_0(v290, 1, 1, v188);
      uint64_t v190 = v289;
      _s7Weather24LocationCompositionStateOwst_0(v289, 1, 1, v294);
      uint64_t v191 = v295;
      uint64_t *v295 = v179;
      uint64_t v192 = type metadata accessor for ModalViewState(0);
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v191, 0, 1, v192);
      sub_1002A8D24(&v298, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_100274EDC);
      swift_retain();
      uint64_t v106 = sub_1001659F0(0, 3, v181, v183, v185, 0, 0, 0, 0, v187, v189, v190, (uint64_t)v191, 0, 0, 0, 0, 0, 0,
               0,
               v178);
      swift_release();
      sub_1002A8D24(&v298, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_100274E38);
      sub_1001781AC((uint64_t)v191, &qword_100E663F0);
      sub_1001781AC(v190, &qword_100E66418);
      sub_1001781AC(v189, &qword_100E66420);
      sub_1001781AC(v187, &qword_100E66428);
      sub_1001781AC(v185, &qword_100E66430);
      sub_1001781AC(v183, &qword_100E66438);
      v193 = &qword_100E66440;
      uint64_t v194 = v181;
      goto LABEL_19;
    case 7u:
      uint64_t v195 = type metadata accessor for AppConfigurationState();
      uint64_t v160 = (uint64_t)v65;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 1, 1, v195);
      uint64_t v196 = type metadata accessor for EnvironmentState();
      uint64_t v162 = v293;
      _s7Weather24LocationCompositionStateOwst_0(v293, 1, 1, v196);
      uint64_t v197 = type metadata accessor for LocationsState();
      uint64_t v164 = v292;
      _s7Weather24LocationCompositionStateOwst_0(v292, 1, 1, v197);
      uint64_t v198 = type metadata accessor for NotificationsOptInState();
      uint64_t v166 = v291;
      _s7Weather24LocationCompositionStateOwst_0(v291, 1, 1, v198);
      uint64_t v199 = type metadata accessor for TimeState();
      uint64_t v168 = v290;
      _s7Weather24LocationCompositionStateOwst_0(v290, 1, 1, v199);
      uint64_t v169 = v289;
      _s7Weather24LocationCompositionStateOwst_0(v289, 1, 1, v294);
      uint64_t v170 = v295;
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v285 + 16))(v295, v288, v287);
      uint64_t v200 = type metadata accessor for SunriseSunsetDetailViewState();
      sub_10024D364(v286, (uint64_t)v170 + *(int *)(v200 + 20), &qword_100E64498);
      *((unsigned char *)v170 + *(int *)(v200 + 24)) = 0;
      type metadata accessor for ModalViewState.LocationDetailModal(0);
      goto LABEL_18;
    case 8u:
      uint64_t v201 = type metadata accessor for AppConfigurationState();
      uint64_t v160 = (uint64_t)v65;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 1, 1, v201);
      uint64_t v202 = type metadata accessor for EnvironmentState();
      uint64_t v162 = v293;
      _s7Weather24LocationCompositionStateOwst_0(v293, 1, 1, v202);
      uint64_t v203 = type metadata accessor for LocationsState();
      uint64_t v164 = v292;
      _s7Weather24LocationCompositionStateOwst_0(v292, 1, 1, v203);
      uint64_t v204 = type metadata accessor for NotificationsOptInState();
      uint64_t v166 = v291;
      _s7Weather24LocationCompositionStateOwst_0(v291, 1, 1, v204);
      uint64_t v205 = type metadata accessor for TimeState();
      uint64_t v168 = v290;
      _s7Weather24LocationCompositionStateOwst_0(v290, 1, 1, v205);
      uint64_t v169 = v289;
      _s7Weather24LocationCompositionStateOwst_0(v289, 1, 1, v294);
      uint64_t v170 = v295;
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v285 + 16))(v295, v288, v287);
      uint64_t v206 = (int *)type metadata accessor for MoonDetailViewState();
      uint64_t v207 = (uint64_t)v170 + v206[5];
      uint64_t v208 = type metadata accessor for MoonDetailSelectedDate();
      _s7Weather24LocationCompositionStateOwst_0(v207, 1, 1, v208);
      uint64_t v209 = (uint64_t)v170 + v206[6];
      uint64_t v210 = type metadata accessor for Date();
      _s7Weather24LocationCompositionStateOwst_0(v209, 1, 1, v210);
      sub_10024D364(v286, (uint64_t)v170 + v206[7], &qword_100E64498);
      *((unsigned char *)v170 + v206[8]) = 2;
      type metadata accessor for ModalViewState.LocationDetailModal(0);
LABEL_18:
      swift_storeEnumTagMultiPayload();
      uint64_t v211 = type metadata accessor for ModalViewState(0);
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v170, 0, 1, v211);
      uint64_t v106 = sub_1001659F0(0, 3, v160, v162, v164, 0, 0, 0, 0, v166, v168, v169, (uint64_t)v170, 0, 0, 0, 0, 0, 0,
               0,
               v296);
      sub_1001781AC((uint64_t)v170, &qword_100E663F0);
      sub_1001781AC(v169, &qword_100E66418);
      sub_1001781AC(v168, &qword_100E66420);
      sub_1001781AC(v166, &qword_100E66428);
      sub_1001781AC(v164, &qword_100E66430);
      sub_1001781AC(v162, &qword_100E66438);
      v193 = &qword_100E66440;
      uint64_t v194 = v160;
LABEL_19:
      sub_1001781AC(v194, v193);
      break;
    default:
      int v87 = v86[*(int *)(sub_10017DF08(&qword_100E66478) + 48)];
      uint64_t v88 = v260;
      uint64_t v89 = v272;
      uint64_t v90 = v262;
      (*(void (**)(char *, char *, uint64_t))(v260 + 32))(v272, v86, v262);
      if (v87 == 1)
      {
        uint64_t v91 = type metadata accessor for AppConfigurationState();
        uint64_t v92 = v89;
        uint64_t v93 = (uint64_t)v65;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 1, 1, v91);
        uint64_t v94 = type metadata accessor for EnvironmentState();
        uint64_t v95 = v293;
        _s7Weather24LocationCompositionStateOwst_0(v293, 1, 1, v94);
        uint64_t v96 = type metadata accessor for LocationsState();
        uint64_t v97 = v292;
        _s7Weather24LocationCompositionStateOwst_0(v292, 1, 1, v96);
        uint64_t v98 = type metadata accessor for NotificationsOptInState();
        uint64_t v99 = v291;
        _s7Weather24LocationCompositionStateOwst_0(v291, 1, 1, v98);
        uint64_t v100 = type metadata accessor for TimeState();
        uint64_t v101 = v290;
        _s7Weather24LocationCompositionStateOwst_0(v290, 1, 1, v100);
        uint64_t v102 = v289;
        _s7Weather24LocationCompositionStateOwst_0(v289, 1, 1, v294);
        uint64_t v103 = v295;
        (*(void (**)(uint64_t *, char *, uint64_t))(v88 + 16))(v295, v92, v90);
        type metadata accessor for ModalViewState.LocationDetailModal(0);
        swift_storeEnumTagMultiPayload();
        uint64_t v104 = type metadata accessor for ModalViewState(0);
        swift_storeEnumTagMultiPayload();
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v103, 0, 1, v104);
        uint64_t v105 = v88;
        uint64_t v106 = sub_1001659F0(0, 3, v93, v95, v97, 0, 0, 0, 0, v99, v101, v102, (uint64_t)v103, 0, 0, 0, 0, 0, 0,
                 0,
                 v296);
        sub_1001781AC((uint64_t)v103, &qword_100E663F0);
        sub_1001781AC(v102, &qword_100E66418);
        sub_1001781AC(v101, &qword_100E66420);
        sub_1001781AC(v99, &qword_100E66428);
        sub_1001781AC(v97, &qword_100E66430);
        sub_1001781AC(v95, &qword_100E66438);
        sub_1001781AC(v93, &qword_100E66440);
        (*(void (**)(char *, uint64_t))(v105 + 8))(v272, v90);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v88 + 8))(v89, v90);
        uint64_t v106 = v296;
        swift_retain();
      }
      break;
  }
  return v106;
}

uint64_t sub_1002A8324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocationComponentAction(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100151718(a2, (uint64_t)v12, (void (*)(void))type metadata accessor for LocationComponentAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v16 = type metadata accessor for WeatherMapOverlayKind();
      goto LABEL_6;
    case 2u:
      uint64_t v16 = type metadata accessor for DetailCondition();
LABEL_6:
      (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v12, v16);
      goto LABEL_8;
    case 3u:
    case 5u:
    case 6u:
    case 7u:
    case 8u:
      goto LABEL_8;
    case 4u:
      uint64_t v17 = &v12[*(int *)(sub_10017DF08(&qword_100E66480) + 48)];
      uint64_t v18 = type metadata accessor for Location();
      (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
      goto LABEL_8;
    default:
      int v13 = v12[*(int *)(sub_10017DF08(&qword_100E66478) + 48)];
      uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
      v14(v9, v12, v6);
      if (v13 == 1)
      {
        v14((char *)a3, v9, v6);
        type metadata accessor for LocationPreviewModalViewState(0);
        return swift_storeEnumTagMultiPayload();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
LABEL_8:
        uint64_t v19 = type metadata accessor for LocationPreviewViewState(0);
        return sub_100151718(a1 + *(int *)(v19 + 20), a3, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
      }
  }
}

uint64_t sub_1002A85E8()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 56);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 96);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 136);
  return v0;
}

uint64_t sub_1002A8620()
{
  sub_1002A85E8();

  return swift_deallocClassInstance();
}

uint64_t sub_1002A8654@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = type metadata accessor for ModalViewState(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for LocationPreviewViewState(0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E65BC0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002A8878(a2, a3, a4, (uint64_t)v18);
  sub_1002A8DC8((uint64_t)v18, a1);
  sub_100151718(a2 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, (uint64_t)v12, (void (*)(void))type metadata accessor for ModalViewState);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1002A8E30((uint64_t)v12, (void (*)(void))type metadata accessor for ModalViewState);
    uint64_t v19 = 1;
  }
  else
  {
    sub_10016E0C0((uint64_t)v12, (uint64_t)v15, (void (*)(void))type metadata accessor for LocationPreviewViewState);
    sub_10016E0C0((uint64_t)v15, a5, (void (*)(void))type metadata accessor for LocationPreviewViewState);
    uint64_t v19 = 0;
  }
  uint64_t v20 = type metadata accessor for ModalViewState.MapViewModal(0);
  _s7Weather24LocationCompositionStateOwst_0(a5, v19, 1, v20);
  swift_storeEnumTagMultiPayload();
  return _s7Weather24LocationCompositionStateOwst_0(a5, 0, 1, v10);
}

uint64_t sub_1002A8878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v42 = a3;
  uint64_t v43 = a2;
  uint64_t v6 = type metadata accessor for Location.Identifier();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E63770);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100E63850);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for WeatherData(0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
  if (*(unsigned __int8 *)(a1 + *(int *)(type metadata accessor for ViewState(0) + 40) + v19 + 1) == 128)
  {
    uint64_t v38 = v9;
    uint64_t v39 = v6;
    uint64_t v20 = v42;
    uint64_t v40 = v7;
    uint64_t v41 = a4;
    uint64_t v21 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
    swift_bridgeObjectRetain();
    uint64_t v22 = Location.id.getter();
    sub_1001BBE9C(v22, v23, v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v24 = type metadata accessor for LocationWeatherDataState(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v24) == 1)
    {
      sub_1001781AC((uint64_t)v12, &qword_100E63770);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 1, 1, v16);
    }
    else
    {
      sub_1001177B0((uint64_t)v15);
      sub_1002A8E30((uint64_t)v12, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16) != 1)
      {
        sub_10016E0C0((uint64_t)v15, (uint64_t)v18, (void (*)(void))type metadata accessor for WeatherData);
        uint64_t v30 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
        swift_beginAccess();
        LOBYTE(v30) = *(unsigned char *)(v30 + 2) == 4;
        sub_1001B1E64(v20 + 2, v20[5]);
        uint64_t v31 = sub_10005DF64((uint64_t)v18, v30);
        uint64_t v33 = v32;
        sub_1001B1E64(v20 + 7, v20[10]);
        uint64_t v34 = (uint64_t)&v18[*(int *)(v16 + 24)];
        uint64_t v35 = (uint64_t)v38;
        Location.identifier.getter();
        uint64_t v36 = v41;
        sub_10009D708(v34, (uint64_t)v31, v33, v35, v41);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v35, v39);
        sub_1002A8E30((uint64_t)v18, (void (*)(void))type metadata accessor for WeatherData);
        uint64_t v28 = type metadata accessor for WeatherMapOverlayKind();
        uint64_t v29 = v36;
        return _s7Weather24LocationCompositionStateOwst_0(v29, 0, 1, v28);
      }
    }
    sub_1001781AC((uint64_t)v15, &qword_100E63850);
    sub_1001B1E64(v20 + 7, v20[10]);
    uint64_t v27 = v41;
    sub_100632BA0(v41);
    uint64_t v28 = type metadata accessor for WeatherMapOverlayKind();
    uint64_t v29 = v27;
    return _s7Weather24LocationCompositionStateOwst_0(v29, 0, 1, v28);
  }
  uint64_t v25 = type metadata accessor for WeatherMapOverlayKind();

  return _s7Weather24LocationCompositionStateOwst_0(a4, 1, 1, v25);
}

uint64_t sub_1002A8CC8(uint64_t a1, uint64_t a2)
{
  return a2;
}

void *sub_1002A8D24(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1002A8D80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002A8DC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E65BC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002A8E30(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1002A8E88()
{
  return swift_release();
}

uint64_t property wrapper backing initializer of WindowLiveResizeDeferred._value()
{
  sub_10017C83C();
  __chkstk_darwin(v0);
  uint64_t v2 = sub_10017C854(v1, v7);
  v3(v2);
  sub_1002A8F30();
  uint64_t v4 = sub_100179E1C();
  return v5(v4);
}

uint64_t sub_1002A8F30()
{
  sub_10017C83C();
  __chkstk_darwin(v0);
  uint64_t v2 = sub_10017C854(v1, v7);
  v3(v2);
  Published.init(initialValue:)();
  uint64_t v4 = sub_100179E1C();
  return v5(v4);
}

uint64_t WindowLiveResizeDeferred.wrappedValue.getter()
{
  return swift_release();
}

uint64_t WindowLiveResizeDeferred.wrappedValue.setter(uint64_t a1)
{
  uint64_t v3 = *v1;
  CurrentValueSubject.send(_:)();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 8);

  return v4(a1);
}

void (*WindowLiveResizeDeferred.wrappedValue.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  void *v3 = v1;
  v3[1] = *(void *)(*(void *)v1 + 80);
  sub_10017C83C();
  *(void *)(v4 + 16) = v5;
  size_t v7 = *(void *)(v6 + 64);
  v3[3] = malloc(v7);
  v3[4] = malloc(v7);
  WindowLiveResizeDeferred.wrappedValue.getter();
  return sub_1002A91C4;
}

void sub_1002A91C4(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 24);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  if (a2)
  {
    uint64_t v5 = v2[1];
    uint64_t v6 = v2[2];
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 24), v4, v5);
    WindowLiveResizeDeferred.wrappedValue.setter((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    WindowLiveResizeDeferred.wrappedValue.setter(*(void *)(*(void *)a1 + 32));
  }
  free(v4);
  free(v3);

  free(v2);
}

uint64_t WindowLiveResizeDeferred.__allocating_init(wrappedValue:)()
{
  uint64_t v0 = swift_allocObject();
  WindowLiveResizeDeferred.init(wrappedValue:)();
  return v0;
}

void *WindowLiveResizeDeferred.init(wrappedValue:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)*v0;
  uint64_t v3 = sub_10017DF08(&qword_100E63440);
  __chkstk_darwin(v3 - 8);
  uint64_t v35 = (uint64_t)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
  sub_10017C83C();
  uint64_t v37 = v6;
  uint64_t v38 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = v2[10];
  uint64_t v8 = type metadata accessor for CurrentValueSubject();
  unint64_t v9 = sub_100215BF8();
  unint64_t v34 = v9;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v33 = WitnessTable;
  unint64_t v32 = sub_10008E51C();
  uint64_t v42 = v8;
  unint64_t v43 = v9;
  uint64_t v44 = WitnessTable;
  unint64_t v45 = v32;
  uint64_t v36 = type metadata accessor for Publishers.Debounce();
  sub_10017C83C();
  uint64_t v39 = v11;
  __chkstk_darwin(v12);
  uint64_t v30 = (char *)&v30 - v13;
  sub_10017C83C();
  uint64_t v15 = v14;
  uint64_t v40 = v14;
  __chkstk_darwin(v16);
  *(void *)((char *)v1 + v2[14]) = &_swiftEmptySetSingleton;
  uint64_t v17 = *(void (**)(uint64_t))(v15 + 16);
  uint64_t v18 = sub_10017F884();
  v17(v18);
  sub_10019E6F8();
  uint64_t v31 = v2[11];
  property wrapper backing initializer of WindowLiveResizeDeferred._value();
  swift_endAccess();
  uint64_t v19 = sub_10017F884();
  v17(v19);
  uint64_t v20 = CurrentValueSubject.__allocating_init(_:)();
  *(void *)((char *)v1 + *(void *)(*v1 + 104)) = v20;
  uint64_t v42 = v20;
  swift_retain();
  NSRunLoop.SchedulerTimeType.Stride.init(floatLiteral:)();
  id v41 = [self mainRunLoop];
  uint64_t v21 = type metadata accessor for NSRunLoop.SchedulerOptions();
  uint64_t v22 = v35;
  _s7Weather24LocationCompositionStateOwst_0(v35, 1, 1, v21);
  Publisher.debounce<A>(for:scheduler:options:)();
  sub_1002A9D1C(v22);

  sub_100162F0C();
  v23();
  swift_release();
  uint64_t v24 = swift_allocObject();
  swift_weakInit();
  uint64_t v25 = (void *)swift_allocObject();
  uint64_t v26 = v31;
  v25[2] = v7;
  v25[3] = v26;
  v25[4] = v24;
  swift_retain();
  swift_getWitnessTable();
  Publisher<>.sink(receiveValue:)();
  swift_release();
  sub_100162F0C();
  v27();
  swift_release();
  sub_10019E6F8();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  sub_100162F0C();
  v28();
  return v1;
}

uint64_t sub_1002A971C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a3 - 8);
  __chkstk_darwin(a1);
  unint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v19 - v11;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    __chkstk_darwin(result);
    *(&v19 - 2) = a3;
    *(&v19 - 1) = a4;
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(&v19 - 2) = a3;
    *(&v19 - 1) = a4;
    swift_getKeyPath();
    static Published.subscript.getter();
    swift_release();
    swift_release();
    char v15 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v7 + 8);
    v16(v12, a3);
    if (v15)
    {
      return swift_release();
    }
    else
    {
      uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 16);
      uint64_t v18 = v17(v12, a1, a3);
      __chkstk_darwin(v18);
      *(&v19 - 2) = a3;
      *(&v19 - 1) = a4;
      uint64_t v19 = swift_getKeyPath();
      __chkstk_darwin(v19);
      *(&v19 - 2) = a3;
      *(&v19 - 1) = a4;
      swift_getKeyPath();
      v17(v9, (uint64_t)v12, a3);
      static Published.subscript.setter();
      return ((uint64_t (*)(char *, uint64_t))v16)(v12, a3);
    }
  }
  return result;
}

uint64_t WindowLiveResizeDeferred.deinit()
{
  type metadata accessor for Published();
  sub_100162F0C();
  v1();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t WindowLiveResizeDeferred.__deallocating_deinit()
{
  WindowLiveResizeDeferred.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1002A9AE8()
{
  return swift_release();
}

uint64_t sub_1002A9B84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + a3 - 16);
  uint64_t v5 = *(void *)(a4 + a3 - 8);
  uint64_t v6 = *(void *)(v4 - 8);
  __chkstk_darwin(a1);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)v15 - v11;
  uint64_t v13 = *(void (**)(char *, __n128))(v6 + 16);
  v13((char *)v15 - v11, v10);
  v15[2] = v4;
  v15[3] = v5;
  swift_getKeyPath();
  v15[0] = v4;
  v15[1] = v5;
  swift_getKeyPath();
  ((void (*)(char *, char *, uint64_t))v13)(v8, v12, v4);
  swift_retain();
  static Published.subscript.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v12, v4);
}

uint64_t sub_1002A9D04()
{
  return 16;
}

__n128 sub_1002A9D10(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1002A9D1C(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E63440);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002A9D7C()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1002A9DB4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002A9DEC(uint64_t a1)
{
  return sub_1002A971C(a1, v1[4], v1[2], v1[3]);
}

uint64_t type metadata accessor for WindowLiveResizeDeferred()
{
  return sub_100109098();
}

uint64_t sub_1002A9E14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v181 = a2;
  uint64_t v4 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  uint64_t v174 = type metadata accessor for NotificationsOptInState();
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_10017DF08(&qword_100E663F0);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_100109314();
  uint64_t v178 = v15;
  uint64_t v16 = sub_10017DF08(&qword_100E66418);
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  sub_100109314();
  uint64_t v177 = v18;
  uint64_t v19 = sub_10017DF08(&qword_100E66420);
  uint64_t v20 = sub_100109308(v19);
  __chkstk_darwin(v20);
  sub_100109314();
  uint64_t v176 = v21;
  uint64_t v22 = sub_10017DF08(&qword_100E66428);
  uint64_t v23 = sub_100109308(v22);
  __chkstk_darwin(v23);
  sub_100109314();
  uint64_t v175 = v24;
  uint64_t v25 = sub_10017DF08(&qword_100E66430);
  uint64_t v26 = sub_100109308(v25);
  __chkstk_darwin(v26);
  sub_100109314();
  uint64_t v182 = v27;
  uint64_t v28 = sub_10017DF08(&qword_100E66438);
  uint64_t v29 = sub_100109308(v28);
  __chkstk_darwin(v29);
  sub_100109314();
  uint64_t v180 = v30;
  uint64_t v31 = sub_10017DF08(&qword_100E66440);
  uint64_t v32 = sub_100109308(v31);
  __chkstk_darwin(v32);
  sub_100109314();
  uint64_t v179 = v33;
  uint64_t v34 = type metadata accessor for Location.Identifier();
  uint64_t v173 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  sub_1001626E0();
  uint64_t v37 = v36 - v35;
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  uint64_t v39 = sub_100109308(active);
  __chkstk_darwin(v39);
  id v41 = (char *)&v172 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  uint64_t v44 = (char *)&v172 - v43;
  uint64_t v45 = type metadata accessor for ViewState.SecondaryViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v46);
  sub_1001626E0();
  uint64_t v49 = (uint64_t *)(v48 - v47);
  uint64_t v183 = type metadata accessor for ViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v50);
  sub_1001626E0();
  uint64_t v53 = v52 - v51;
  switch((char)a3)
  {
    case 1:
      uint64_t v56 = type metadata accessor for AppConfigurationState();
      uint64_t v59 = sub_10017C888(v56, v57, v58, v56);
      uint64_t v60 = sub_100187B88(v59);
      sub_100179E34(v60);
      uint64_t v61 = sub_100188F40(OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn);
      sub_1002AA8D8(v61, v12, (void (*)(void))type metadata accessor for NotificationsOptInState);
      uint64_t v62 = type metadata accessor for Date();
      _s7Weather24LocationCompositionStateOwst_0(v8, 1, 1, v62);
      sub_10019FB44();
      unsigned __int8 v63 = sub_100163068();
      int v66 = 1;
      goto LABEL_11;
    case 2:
      uint64_t v67 = type metadata accessor for AppConfigurationState();
      uint64_t v70 = sub_10017C888(v67, v68, v69, v67);
      uint64_t v71 = sub_100187B88(v70);
      sub_100179E34(v71);
      uint64_t v72 = sub_100188F40(OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn);
      sub_1002AA8D8(v72, v12, (void (*)(void))type metadata accessor for NotificationsOptInState);
      uint64_t v73 = type metadata accessor for Date();
      _s7Weather24LocationCompositionStateOwst_0(v8, 1, 1, v73);
      sub_10019FB44();
      goto LABEL_10;
    case 3:
      uint64_t v74 = type metadata accessor for AppConfigurationState();
      uint64_t v77 = sub_10017C888(v74, v75, v76, v74);
      uint64_t v78 = sub_100187B88(v77);
      sub_100179E34(v78);
      uint64_t v79 = sub_100188F40(OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn);
      sub_1002AA8D8(v79, v12, (void (*)(void))type metadata accessor for NotificationsOptInState);
      uint64_t v80 = type metadata accessor for Date();
      _s7Weather24LocationCompositionStateOwst_0(v8, 1, 1, v80);
      char v171 = 0;
      unsigned __int8 v63 = sub_100163068();
      int v66 = 0;
      goto LABEL_11;
    case 4:
      uint64_t v81 = type metadata accessor for AppConfigurationState();
      uint64_t v84 = sub_10017C888(v81, v82, v83, v81);
      uint64_t v85 = sub_100187B88(v84);
      sub_100179E34(v85);
      uint64_t v86 = sub_100188F40(OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn);
      sub_1002AA8D8(v86, v12, (void (*)(void))type metadata accessor for NotificationsOptInState);
      uint64_t v87 = type metadata accessor for Date();
      _s7Weather24LocationCompositionStateOwst_0(v8, 1, 1, v87);
      char v171 = 1;
LABEL_10:
      unsigned __int8 v63 = sub_100163068();
      int v66 = 2;
LABEL_11:
      sub_1001C6768(v63, v64, v66, 2, 2, 2, v8, 2, v65, v170, SBYTE1(v170), SBYTE2(v170), SHIBYTE(v170), v171);
      sub_1001781AC(v8, (uint64_t *)&unk_100E73CA0);
      sub_1001C660C(v12, (void (*)(void))type metadata accessor for NotificationsOptInState);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v174);
      uint64_t v88 = type metadata accessor for TimeState();
      sub_1001D1758(v88);
      uint64_t v89 = type metadata accessor for ModalViewState(0);
      uint64_t v90 = v178;
      uint64_t v91 = _s7Weather24LocationCompositionStateOwst_0((uint64_t)v178, 1, 1, v89);
      uint64_t v99 = sub_1001A0428(v91, v92, v93, v94, v95, v96, v97, v98, v159, v160, v161, v162, v163, v164, v165, v166, v167, v168, v169,
              0,
              (uint64_t)v49);
      goto LABEL_12;
    case 5:
      uint64_t v102 = type metadata accessor for AppConfigurationState();
      uint64_t v105 = sub_10017C888(v102, v103, v104, v102);
      uint64_t v106 = sub_100187B88(v105);
      a3 = v182;
      uint64_t v109 = sub_10017F89C(v106, v107, v108, v106);
      sub_1001D1758(v109);
      uint64_t v90 = v178;
      *uint64_t v178 = 0;
      type metadata accessor for ModalViewState(0);
      sub_10019D410();
      uint64_t v110 = _s7Weather24LocationCompositionStateOwst_0((uint64_t)v90, 0, 1, (uint64_t)v49);
      uint64_t v99 = sub_1001A0428(v110, v111, v112, v113, v114, v115, v116, v117, v159, v160, v161, v162, v163, v164, v165, v166, v167, v168, v169,
              0,
              v181);
      goto LABEL_12;
    default:
      uint64_t v54 = v181;
      a3 = v182;
      uint64_t v12 = v177;
      if (*(unsigned char *)(v181 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications) != 1) {
        goto LABEL_28;
      }
      sub_1002AA8D8(v181 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v53, (void (*)(void))type metadata accessor for ViewState);
      uint64_t v55 = v183;
      sub_1002AA8D8(v53 + *(int *)(v183 + 20), (uint64_t)v49, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1001C660C((uint64_t)v49, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
LABEL_5:
        a3 = v182;
        sub_1001C660C(v53, (void (*)(void))type metadata accessor for ViewState);
        goto LABEL_28;
      }
      uint64_t v118 = *v49;
      if (*(void *)(v53 + *(int *)(v55 + 36) + 8) == 1)
      {
        id v119 = [self currentDevice];
        [v119 userInterfaceIdiom];

        if ((*(unsigned char *)(v53 + *(int *)(v55 + 28)) & 1) == 0)
        {
          swift_release();
          uint64_t v54 = v181;
          goto LABEL_5;
        }
      }
      sub_1001C660C(v53, (void (*)(void))type metadata accessor for ViewState);
      sub_1002AA8D8(v118 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, (uint64_t)v44, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
      sub_1002AA8D8((uint64_t)v44, (uint64_t)v41, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v34) == 1)
      {
        static CurrentLocation.placeholderIdentifier.getter();
        uint64_t v53 = v179;
        id v41 = v180;
        a3 = v182;
        uint64_t v120 = v173;
      }
      else
      {
        uint64_t v120 = v173;
        (*(void (**)(uint64_t, char *, uint64_t))(v173 + 32))(v37, v41, v34);
        uint64_t v53 = v179;
        id v41 = v180;
        a3 = v182;
      }
      sub_1001C660C((uint64_t)v44, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
      Location.Identifier.kind.getter();
      uint64_t v121 = *(void (**)(uint64_t, uint64_t))(v120 + 8);
      uint64_t v45 = v120 + 8;
      v121(v37, v34);
      uint64_t v122 = Location.Identifier.Kind.rawValue.getter();
      uint64_t v124 = v123;
      if (v122 == Location.Identifier.Kind.rawValue.getter() && v124 == v125)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v127 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v127 & 1) == 0)
        {
          uint64_t v128 = type metadata accessor for AppConfigurationState();
          _s7Weather24LocationCompositionStateOwst_0(v53, 1, 1, v128);
          uint64_t v129 = type metadata accessor for EnvironmentState();
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 1, 1, v129);
          uint64_t v130 = type metadata accessor for LocationsState();
          uint64_t v133 = sub_10017F89C(v130, v131, v132, v130);
          sub_100183858(v133);
          uint64_t v90 = v178;
          *uint64_t v178 = 0;
          type metadata accessor for ModalViewState(0);
          sub_10019D410();
          uint64_t v134 = _s7Weather24LocationCompositionStateOwst_0((uint64_t)v90, 0, 1, v124);
          uint64_t v100 = sub_1001A0428(v134, v135, v136, v137, v138, v139, v140, v141, v159, v160, v161, v162, v163, v164, v165, v166, v167, v168, v169,
                   0,
                   v181);
          swift_release();
          goto LABEL_13;
        }
      }
      swift_release();
      uint64_t v54 = v181;
LABEL_28:
      uint64_t v142 = type metadata accessor for AppConfigurationState();
      uint64_t v145 = sub_10017C888(v142, v143, v144, v142);
      uint64_t v146 = sub_100187B88(v145);
      uint64_t v149 = sub_10017F89C(v146, v147, v148, v146);
      sub_100183858(v149);
      uint64_t v150 = type metadata accessor for ModalViewState(0);
      uint64_t v90 = v178;
      swift_storeEnumTagMultiPayload();
      uint64_t v151 = _s7Weather24LocationCompositionStateOwst_0((uint64_t)v90, 0, 1, v150);
      uint64_t v99 = sub_1001A0428(v151, v152, v153, v154, v155, v156, v157, v158, v159, v160, v161, v162, v163, v164, v165, v166, v167, v168, v169,
              0,
              v54);
LABEL_12:
      uint64_t v100 = v99;
LABEL_13:
      sub_1001781AC((uint64_t)v90, &qword_100E663F0);
      sub_1001781AC(v12, &qword_100E66418);
      sub_1001781AC(v45, &qword_100E66420);
      sub_1001781AC((uint64_t)v44, &qword_100E66428);
      sub_1001781AC(a3, &qword_100E66430);
      sub_1001781AC((uint64_t)v41, &qword_100E66438);
      sub_1001781AC(v53, &qword_100E66440);
      return v100;
  }
}

uint64_t sub_1002AA8D8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

void sub_1002AA938(uint64_t a1, unint64_t a2, int a3, uint64_t a4, uint64_t a5, double a6, double a7)
{
  uint64_t v119 = a4;
  int v124 = a3;
  uint64_t v13 = sub_10017DF08(&qword_100E66678);
  __chkstk_darwin(v13 - 8);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = type metadata accessor for SavedLocation();
  sub_100162E4C();
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = &v113[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v19);
  uint64_t v23 = &v113[-v22];
  uint64_t v24 = sub_10017DF08(&qword_100E66680);
  __chkstk_darwin(v24 - 8);
  sub_100109314();
  uint64_t v121 = v25;
  uint64_t v120 = type metadata accessor for OpenL2Descriptor(0);
  sub_100162E4C();
  __chkstk_darwin(v26);
  sub_100109314();
  uint64_t v122 = v27;
  uint64_t v123 = type metadata accessor for ActivityAction();
  sub_100162E4C();
  __chkstk_darwin(v28);
  sub_1001626E0();
  uint64_t v31 = v30 - v29;
  uint64_t v32 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v32 - 8);
  sub_1001626E0();
  uint64_t v35 = v34 - v33;
  if (!a2) {
    goto LABEL_5;
  }
  uint64_t v36 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v36 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v36)
  {
    if (qword_100E62848 != -1) {
      swift_once();
    }
    uint64_t v67 = type metadata accessor for Logger();
    sub_1002102B0(v67, (uint64_t)qword_100F51FE0);
    uint64_t v68 = Logger.logObject.getter();
    os_log_type_t v69 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v70 = swift_slowAlloc();
      uint64_t v127 = swift_slowAlloc();
      *(_DWORD *)uint64_t v70 = 141558275;
      sub_1001A0474();
      *(_WORD *)(v70 + 12) = 2081;
      uint64_t v125 = *(void *)&a6;
      double v126 = a7;
      type metadata accessor for CLLocationCoordinate2D(0);
      uint64_t v71 = String.init<A>(describing:)();
      uint64_t v125 = sub_10016414C(v71, v72, &v127);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v68, v69, "Encountered an empty location name while handling a coordinate activity. coordinate=%{private,mask.hash}s", (uint8_t *)v70, 0x16u);
      swift_arrayDestroy();
      sub_100162EE0();
      sub_100162EE0();
    }

    uint64_t v73 = type metadata accessor for Date();
    _s7Weather24LocationCompositionStateOwst_0(v35, 1, 1, v73);
    sub_1002AB8F0();
    uint64_t v74 = Dictionary.init(dictionaryLiteral:)();
    sub_1002AA938(0, 0, 17, v35, v74, a6, a7);
    swift_bridgeObjectRelease();
    sub_1001781AC(v35, (uint64_t *)&unk_100E73CA0);
  }
  else
  {
LABEL_5:
    uint64_t v118 = a5;
    uint64_t v37 = v7 + 4;
    sub_1001B1E64(v7 + 4, v7[7]);
    uint64_t v38 = v7;
    sub_100179E58();
    sub_1006947BC();
    if ((v39 & 1) == 0)
    {
      uint64_t v117 = v7;
      sub_1001B1E64(v37, v7[7]);
      uint64_t v54 = sub_100179E58();
      sub_100694CE4(v54, v55, v56);
      if (_s7Weather24LocationCompositionStateOwet_0(v16, 1, v17) != 1)
      {
        sub_1002AB784(v16, (uint64_t)v23);
        uint64_t v75 = v118;
        if (qword_100E62848 != -1) {
          swift_once();
        }
        uint64_t v76 = type metadata accessor for Logger();
        sub_1002102B0(v76, (uint64_t)qword_100F51FE0);
        sub_1002AB7E8((uint64_t)v23, (uint64_t)v21, (void (*)(void))&type metadata accessor for SavedLocation);
        uint64_t v77 = Logger.logObject.getter();
        os_log_type_t v78 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v77, v78))
        {
          uint64_t v79 = swift_slowAlloc();
          uint64_t v125 = swift_slowAlloc();
          *(_DWORD *)uint64_t v79 = 141558275;
          uint64_t v127 = 1752392040;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v79 + 12) = 2081;
          uint64_t v116 = (v79 + 14);
          sub_1002AB8A0();
          uint64_t v80 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v127 = sub_10016414C(v80, v81, &v125);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_1002AB848((uint64_t)v21, (void (*)(void))&type metadata accessor for SavedLocation);
          _os_log_impl((void *)&_mh_execute_header, v77, v78, "CoordinateHandler found existing location for coordinate; opening location viewer; location=%{private,mask.hash}s",
            (uint8_t *)v79,
            0x16u);
          swift_arrayDestroy();
          uint64_t v75 = v118;
          sub_100162EE0();
          sub_100162EE0();
        }
        else
        {
          sub_1002AB848((uint64_t)v21, (void (*)(void))&type metadata accessor for SavedLocation);
        }

        uint64_t v95 = v117;
        sub_1001B1E64(v117 + 19, v117[22]);
        sub_1002AB7E8((uint64_t)v23, v31, (void (*)(void))&type metadata accessor for SavedLocation);
        swift_storeEnumTagMultiPayload();
        static LocationSearchEntityFromStringResolver.__derived_struct_equals(_:_:)();
        char v96 = variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral();
        sub_100163080(v96);
        sub_1002AB848(v31, (void (*)(void))type metadata accessor for ActivityAction);
        char v97 = v124;
        if (v124 != 17)
        {
          uint64_t v98 = (int *)v120;
          uint64_t v99 = v122;
          uint64_t v100 = (uint64_t)&v122[*(int *)(v120 + 24)];
          uint64_t v101 = type metadata accessor for Location();
          _s7Weather24LocationCompositionStateOwst_0(v100, 1, 1, v101);
          sub_1001C7278(v119, (uint64_t)&v99[v98[9]]);
          *uint64_t v99 = v97;
          v99[1] = 0;
          uint64_t v102 = &v99[v98[7]];
          *(void *)uint64_t v102 = 0;
          *((void *)v102 + 1) = 0;
          v102[16] = 1;
          uint64_t v103 = &v99[v98[8]];
          *uint64_t v103 = 0;
          v103[1] = 0;
          *(void *)&v99[v98[10]] = v75;
          sub_1001B1E64(v95 + 19, v95[22]);
          uint64_t v104 = v121;
          sub_1002AB7E8((uint64_t)v99, v121, (void (*)(void))type metadata accessor for OpenL2Descriptor);
          _s7Weather24LocationCompositionStateOwst_0(v104, 0, 1, (uint64_t)v98);
          swift_bridgeObjectRetain();
          sub_100387CDC(v104);
          sub_1001781AC(v104, &qword_100E66680);
          sub_1002AB848((uint64_t)v99, (void (*)(void))type metadata accessor for OpenL2Descriptor);
        }
        uint64_t v105 = (uint64_t (*)(uint64_t))&type metadata accessor for SavedLocation;
        goto LABEL_46;
      }
      sub_1001781AC(v16, &qword_100E66678);
      if (qword_100E62848 != -1) {
        swift_once();
      }
      uint64_t v57 = type metadata accessor for Logger();
      uint64_t v23 = (unsigned char *)sub_1002102B0(v57, (uint64_t)qword_100F51FE0);
      swift_bridgeObjectRetain_n();
      uint64_t v58 = Logger.logObject.getter();
      os_log_type_t v59 = static os_log_type_t.default.getter();
      int v60 = v59;
      uint64_t v116 = v58;
      if (os_log_type_enabled(v58, v59))
      {
        uint64_t v61 = swift_slowAlloc();
        uint64_t v115 = swift_slowAlloc();
        uint64_t v127 = v115;
        *(_DWORD *)uint64_t v61 = 141558787;
        sub_1001A0474();
        int v114 = v60;
        *(_WORD *)(v61 + 12) = 2081;
        uint64_t v125 = *(void *)&a6;
        double v126 = a7;
        type metadata accessor for CLLocationCoordinate2D(0);
        uint64_t v62 = String.init<A>(describing:)();
        uint64_t v125 = sub_10016414C(v62, v63, &v127);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v61 + 22) = 2160;
        uint64_t v125 = 1752392040;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v61 + 32) = 2081;
        if (a2) {
          uint64_t v64 = a1;
        }
        else {
          uint64_t v64 = 7104878;
        }
        if (a2) {
          unint64_t v65 = a2;
        }
        else {
          unint64_t v65 = 0xE300000000000000;
        }
        swift_bridgeObjectRetain();
        uint64_t v125 = sub_10016414C(v64, v65, &v127);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        int v66 = v116;
        _os_log_impl((void *)&_mh_execute_header, v116, (os_log_type_t)v114, "CoordinateHandler handling coordinate that isn't in our locations; coordinate=%{private,mask.hash}s, name=%{pr"
          "ivate,mask.hash}s",
          (uint8_t *)v61,
          0x2Au);
        swift_arrayDestroy();
        sub_100162EE0();
        sub_100162EE0();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v82 = v117;
      sub_1001B1E64(v37, v117[7]);
      sub_100179E58();
      sub_1006950B0();
      if (v83)
      {
        uint64_t v84 = Logger.logObject.getter();
        os_log_type_t v85 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v84, v85))
        {
          uint64_t v86 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v86 = 0;
          _os_log_impl((void *)&_mh_execute_header, v84, v85, "A location that matches the given coordinate and location name is already being previewed.", v86, 2u);
          sub_100162EE0();
        }

        char v87 = v124;
        uint64_t v88 = v117;
        if (v124 == 17) {
          return;
        }
        uint64_t v23 = v122;
        uint64_t v89 = (uint64_t)&v122[*(int *)(v120 + 24)];
        uint64_t v90 = type metadata accessor for Location();
        sub_10019E71C(v89, v91, v92, v90);
        *uint64_t v23 = v87;
        v23[1] = 1;
        sub_10017C8C0();
        uint64_t v93 = v88 + 19;
        uint64_t v94 = v88[22];
      }
      else
      {
        uint64_t v106 = sub_1001B1E64(v82 + 19, v82[22]);
        *(double *)uint64_t v31 = a6;
        *(double *)(v31 + 8) = a7;
        *(void *)(v31 + 16) = a1;
        *(void *)(v31 + 24) = a2;
        type metadata accessor for PreviewLocation();
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        char v107 = variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral();
        uint64_t v108 = *v106;
        swift_bridgeObjectRetain();
        sub_100389228(v31, 0, v107 & 1);
        sub_1002AB848(v31, (void (*)(void))type metadata accessor for ActivityAction);
        char v109 = v124;
        if (v124 == 17) {
          return;
        }
        uint64_t v110 = sub_1001A1C60();
        sub_10019E71C(v108, v111, v112, v110);
        *uint64_t v23 = v109;
        v23[1] = 1;
        sub_10017C8C0();
        uint64_t v94 = v82[22];
        uint64_t v93 = v82 + 19;
      }
      sub_1001B1E64(v93, v94);
      uint64_t v53 = v121;
      sub_1002AB7E8((uint64_t)v23, v121, (void (*)(void))type metadata accessor for OpenL2Descriptor);
      sub_100180FD4();
      swift_bridgeObjectRetain();
      goto LABEL_45;
    }
    if (qword_100E62848 != -1) {
      swift_once();
    }
    uint64_t v40 = type metadata accessor for Logger();
    sub_1002102B0(v40, (uint64_t)qword_100F51FE0);
    id v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v43 = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "CoordinateHandler found existing location for coordinate but it matched a location coalesced with the current location", v43, 2u);
      sub_100162EE0();
    }

    uint64_t v44 = v38[22];
    sub_1001B1E64(v38 + 19, v44);
    swift_storeEnumTagMultiPayload();
    uint64_t v45 = (int *)static LocationSearchEntityFromStringResolver.__derived_struct_equals(_:_:)();
    char v46 = variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral();
    sub_100163080(v46);
    sub_1002AB848(v31, (void (*)(void))type metadata accessor for ActivityAction);
    char v47 = v124;
    if (v124 != 17)
    {
      uint64_t v48 = sub_1001A1C60();
      sub_10019E71C(v44, v49, v50, v48);
      *uint64_t v23 = v47;
      v23[1] = 0;
      uint64_t v51 = &v23[v45[7]];
      *(void *)uint64_t v51 = 0;
      *((void *)v51 + 1) = 0;
      v51[16] = 1;
      uint64_t v52 = &v23[v45[8]];
      *uint64_t v52 = 0;
      v52[1] = 0;
      *(void *)&v23[v45[10]] = v118;
      sub_1001B1E64(v38 + 19, v38[22]);
      uint64_t v53 = v121;
      sub_1002AB7E8((uint64_t)v23, v121, (void (*)(void))type metadata accessor for OpenL2Descriptor);
      sub_100180FD4();
LABEL_45:
      swift_bridgeObjectRetain();
      sub_100387CDC(v53);
      sub_1001781AC(v53, &qword_100E66680);
      uint64_t v105 = type metadata accessor for OpenL2Descriptor;
LABEL_46:
      sub_1002AB848((uint64_t)v23, (void (*)(void))v105);
    }
  }
}

uint64_t sub_1002AB6D0()
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 32);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 72);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 112);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 152);
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1002AB72C()
{
  sub_1002AB6D0();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CoordinateActivityHandler()
{
  return self;
}

uint64_t sub_1002AB784(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SavedLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002AB7E8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1002AB848(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unint64_t sub_1002AB8A0()
{
  unint64_t result = qword_100E66688[0];
  if (!qword_100E66688[0])
  {
    type metadata accessor for SavedLocation();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100E66688);
  }
  return result;
}

unint64_t sub_1002AB8F0()
{
  unint64_t result = qword_100E668A0;
  if (!qword_100E668A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E668A0);
  }
  return result;
}

uint64_t type metadata accessor for NoAqiNhpContentView()
{
  return sub_100109098();
}

uint64_t sub_1002AB954()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002AB998@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v57 = a7;
  uint64_t v58 = a6;
  uint64_t v45 = a4;
  uint64_t v52 = a3;
  v70[1] = a5;
  v70[2] = a5;
  v70[3] = a5;
  int v9 = a2;
  unsigned int v10 = a2 & 0x100;
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  v70[7] = a5;
  sub_100179D2C();
  uint64_t v50 = sub_10017F7C0();
  uint64_t v56 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v53 = v11;
  __chkstk_darwin(v12);
  sub_100162EF8();
  uint64_t v55 = v13;
  __chkstk_darwin(v14);
  uint64_t v54 = (uint64_t)&v41 - v15;
  v70[0] = a5;
  v70[1] = type metadata accessor for Optional();
  v70[2] = a5;
  v70[3] = a5;
  v70[4] = a5;
  v70[5] = a5;
  sub_100179D2C();
  sub_10017F7C0();
  uint64_t v51 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v49 = v16;
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v59 = v18;
  __chkstk_darwin(v19);
  uint64_t v60 = (uint64_t)&v41 - v20;
  if (v9)
  {
    if (v9 == 1)
    {
      if (v10)
      {
        uint64_t v21 = &unk_100EAFCC8;
        goto LABEL_11;
      }
    }
    else if (v10)
    {
      uint64_t v21 = &unk_100EB0058;
      goto LABEL_11;
    }
    uint64_t v21 = &unk_100EAFE90;
    goto LABEL_11;
  }
  if (v10) {
    uint64_t v21 = &unk_100EAF938;
  }
  else {
    uint64_t v21 = &unk_100EAFB00;
  }
LABEL_11:
  memcpy(v70, v21, sizeof(v70));
  uint64_t v22 = memcpy(v69, v70, sizeof(v69));
  __chkstk_darwin(v22);
  uint64_t v23 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v23;
  *(&v41 - 6) = a1;
  *((unsigned char *)&v41 - 40) = v9;
  uint64_t v44 = a1;
  int v42 = v9;
  unsigned int v43 = v10 >> 8;
  *((unsigned char *)&v41 - 39) = BYTE1(v10);
  uint64_t v24 = v45;
  *(&v41 - 4) = v52;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v26 = v59;
  Group<A>.init(content:)();
  uint64_t v68 = WitnessTable;
  uint64_t v27 = v51;
  uint64_t v46 = swift_getWitnessTable();
  sub_100121584(v26, v27, v60);
  uint64_t v28 = v49;
  char v47 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8);
  uint64_t v48 = v49 + 8;
  uint64_t v29 = v47(v26, v27);
  __chkstk_darwin(v29);
  uint64_t v30 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v30;
  *(&v41 - 6) = v44;
  *((unsigned char *)&v41 - 40) = v42;
  *((unsigned char *)&v41 - 39) = v43;
  *(&v41 - 4) = v31;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = v55;
  Group<A>.init(content:)();
  uint64_t v67 = v32;
  uint64_t v34 = v56;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v35 = v54;
  sub_100121584(v33, v34, v54);
  uint64_t v36 = v53;
  uint64_t v37 = *(void (**)(void))(v53 + 8);
  sub_10017C768();
  v37();
  uint64_t v38 = v59;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v59, v60, v27);
  uint64_t v65 = v38;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v33, v35, v34);
  uint64_t v66 = v33;
  uint64_t v63 = v27;
  uint64_t v64 = v34;
  uint64_t v61 = v46;
  uint64_t v62 = v58;
  sub_1006E9080();
  sub_10017C768();
  v37();
  char v39 = v47;
  v47(v60, v27);
  sub_10017C768();
  v37();
  return v39(v38, v27);
}

uint64_t sub_1002ABE60@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t, uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a3@<X3>, void *a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v100 = a6;
  uint64_t v108 = a2;
  uint64_t v88 = a7;
  uint64_t v11 = sub_10017DF08(&qword_100E64E80);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = type metadata accessor for Optional();
  uint64_t v98 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v104 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v103 = (char *)&v84 - v16;
  uint64_t v86 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v86);
  uint64_t v85 = (uint64_t)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v84 - v19;
  uint64_t v21 = *(void *)(a5 - 8);
  __chkstk_darwin(v22);
  char v97 = (char *)&v84 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  char v96 = (char *)&v84 - v25;
  __chkstk_darwin(v26);
  uint64_t v95 = (char *)&v84 - v27;
  __chkstk_darwin(v28);
  uint64_t v93 = (char *)&v84 - v29;
  __chkstk_darwin(v30);
  uint64_t v94 = (char *)&v84 - v31;
  __chkstk_darwin(v32);
  uint64_t v92 = (char *)&v84 - v33;
  __chkstk_darwin(v34);
  uint64_t v101 = (char *)&v84 - v35;
  __chkstk_darwin(v36);
  char v107 = (char *)&v84 - v37;
  __chkstk_darwin(v38);
  uint64_t v40 = (char *)&v84 - v39;
  __chkstk_darwin(v41);
  unsigned int v43 = (char *)&v84 - v42;
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather15NoAqiNhpContent8_Storage_nextHourPrecipitation, (uint64_t)v20);
  uint64_t v44 = a4[29];
  uint64_t v45 = a4[30];
  uint64_t v46 = a4[31];
  uint64_t v47 = a4[32];
  uint64_t v89 = a3;
  v108(v20, v44, v45, v46, v47);
  uint64_t v48 = (uint64_t)v20;
  sub_1001F2B74((uint64_t)v20);
  uint64_t v91 = v43;
  sub_100121584((uint64_t)v40, a5, (uint64_t)v43);
  uint64_t v87 = v21;
  uint64_t v49 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  uint64_t v106 = v40;
  uint64_t v99 = v21 + 8;
  uint64_t v90 = v49;
  v49((uint64_t)v40, a5);
  uint64_t v102 = a1;
  uint64_t v50 = a1 + OBJC_IVAR____TtCV7Weather15NoAqiNhpContent8_Storage_map;
  swift_beginAccess();
  sub_10027A764(v50, (uint64_t)v13);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v86) == 1)
  {
    sub_10027A7CC((uint64_t)v13);
  }
  else
  {
    uint64_t v51 = v85;
    sub_10027A82C((uint64_t)v13, v85);
    sub_10027A890((uint64_t)(a4 + 20), (uint64_t)v128);
    sub_10027A890((uint64_t)v128, (uint64_t)v129);
    if (v130 != 1)
    {
      uint64_t v55 = (uint64_t)v107;
      v108((char *)v51, v129[0], v129[1], v129[2], v129[3]);
      sub_1001F2B74(v51);
      uint64_t v56 = (uint64_t)v106;
      sub_100121584(v55, a5, (uint64_t)v106);
      uint64_t v57 = v90;
      uint64_t v48 = (uint64_t)v20;
      v90(v55, a5);
      uint64_t v58 = (uint64_t)v104;
      sub_100121584(v56, a5, (uint64_t)v104);
      v57(v56, a5);
      _s7Weather24LocationCompositionStateOwst_0(v58, 0, 1, a5);
      sub_1000CA354();
      uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
      uint64_t v86 = (v98 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      v59(v58, v105);
      goto LABEL_7;
    }
    sub_1001F2B74(v51);
  }
  uint64_t v52 = (uint64_t)v104;
  uint64_t v53 = v105;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v104, 1, 1, a5);
  sub_1000CA354();
  uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
  uint64_t v86 = (v98 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v54(v52, v53);
LABEL_7:
  uint64_t v60 = v102;
  sub_1001F3734(*(void *)(v102 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v48);
  uint64_t v61 = (uint64_t)v107;
  v108((char *)v48, a4[12], a4[13], a4[14], a4[15]);
  sub_1001F2B74(v48);
  sub_100121584(v61, a5, (uint64_t)v106);
  uint64_t v62 = v90;
  v90(v61, a5);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v48);
  uint64_t v63 = (uint64_t)v101;
  uint64_t v64 = v108;
  v108((char *)v48, a4[4], a4[5], a4[6], a4[7]);
  sub_1001F2B74(v48);
  sub_100121584(v63, a5, v61);
  v62(v63, a5);
  sub_1001F3734(*(void *)(v102 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, v48);
  uint64_t v65 = (uint64_t)v92;
  v64((char *)v48, a4[45], a4[46], a4[47], a4[48]);
  sub_1001F2B74(v48);
  uint64_t v66 = v63;
  uint64_t v67 = v100;
  sub_100121584(v65, a5, v66);
  v62(v65, a5);
  sub_1001F3734(*(void *)(v102 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, v48);
  uint64_t v68 = a4[41];
  uint64_t v69 = a4[42];
  uint64_t v70 = a4[43];
  uint64_t v71 = a4[44];
  uint64_t v72 = (uint64_t)v94;
  v108((char *)v48, v68, v69, v70, v71);
  sub_1001F2B74(v48);
  sub_100121584(v72, a5, v65);
  v62(v72, a5);
  uint64_t v73 = *(void (**)(void))(v87 + 16);
  ((void (*)(uint64_t, char *, uint64_t))v73)(v72, v91, a5);
  uint64_t v122 = v72;
  uint64_t v74 = v98 + 16;
  uint64_t v75 = (uint64_t)v104;
  (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v104, v103, v105);
  uint64_t v123 = v75;
  uint64_t v76 = v93;
  v73();
  int v124 = v76;
  uint64_t v77 = v95;
  v73();
  uint64_t v125 = v77;
  os_log_type_t v78 = v96;
  ((void (*)(char *, char *, uint64_t))v73)(v96, v101, a5);
  double v126 = v78;
  uint64_t v79 = v97;
  uint64_t v80 = v92;
  ((void (*)(char *, char *, uint64_t))v73)(v97, v92, a5);
  uint64_t v127 = v79;
  uint64_t v81 = v105;
  uint64_t v116 = a5;
  uint64_t v117 = v105;
  uint64_t v118 = a5;
  uint64_t v119 = a5;
  uint64_t v120 = a5;
  uint64_t v121 = a5;
  uint64_t v109 = v67;
  uint64_t v110 = v67;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v112 = v67;
  uint64_t v113 = v67;
  uint64_t v114 = v67;
  uint64_t v115 = v67;
  sub_1006E9080();
  v62((uint64_t)v80, a5);
  v62((uint64_t)v101, a5);
  v62((uint64_t)v107, a5);
  v62((uint64_t)v106, a5);
  uint64_t v82 = *(void (**)(char *, uint64_t))(v74 - 8);
  v82(v103, v81);
  v62((uint64_t)v91, a5);
  v62((uint64_t)v97, a5);
  v62((uint64_t)v96, a5);
  v62((uint64_t)v95, a5);
  v62((uint64_t)v93, a5);
  v82(v104, v81);
  return ((uint64_t (*)(char *, uint64_t))v62)(v94, a5);
}

uint64_t sub_1002AC7F4@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t, uint64_t, uint64_t, uint64_t)@<X2>, uint64_t *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v102 = a5;
  uint64_t v84 = a6;
  uint64_t v10 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = *(void *)(a4 - 8);
  uint64_t v13 = v82;
  __chkstk_darwin(v14);
  char v83 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v98 = (char *)&v82 - v17;
  __chkstk_darwin(v18);
  char v97 = (char *)&v82 - v19;
  __chkstk_darwin(v20);
  char v96 = (char *)&v82 - v21;
  __chkstk_darwin(v22);
  uint64_t v95 = (char *)&v82 - v23;
  __chkstk_darwin(v24);
  uint64_t v93 = (char *)&v82 - v25;
  __chkstk_darwin(v26);
  uint64_t v92 = (char *)&v82 - v27;
  __chkstk_darwin(v28);
  uint64_t v90 = (char *)&v82 - v29;
  __chkstk_darwin(v30);
  uint64_t v89 = (char *)&v82 - v31;
  __chkstk_darwin(v32);
  uint64_t v101 = (char *)&v82 - v33;
  __chkstk_darwin(v34);
  uint64_t v87 = (char *)&v82 - v35;
  __chkstk_darwin(v36);
  uint64_t v86 = (char *)&v82 - v37;
  __chkstk_darwin(v38);
  uint64_t v100 = (char *)&v82 - v39;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v82 - v41;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v82 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v82 - v47;
  uint64_t v94 = (char *)&v82 - v47;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v12);
  uint64_t v49 = a3[53];
  uint64_t v50 = a3[54];
  uint64_t v51 = a3[55];
  uint64_t v52 = a3[56];
  uint64_t v99 = a2;
  a2(v12, v49, v50, v51, v52);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v45, a4, (uint64_t)v48);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v91 = v45;
  v53(v45, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)v12);
  a2(v12, a3[37], a3[38], a3[39], a3[40]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v42, a4, (uint64_t)v45);
  uint64_t v88 = v42;
  v53(v42, a4);
  uint64_t v85 = a1;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v12);
  uint64_t v54 = (uint64_t)v100;
  v99(v12, a3[8], a3[9], a3[10], a3[11]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v54, a4, (uint64_t)v42);
  uint64_t v55 = v54;
  v53((char *)v54, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)v12);
  uint64_t v56 = (uint64_t)v86;
  uint64_t v57 = v99;
  v99(v12, a3[16], a3[17], a3[18], a3[19]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v56, a4, v55);
  v53((char *)v56, a4);
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v12);
  uint64_t v58 = (uint64_t)v87;
  v57(v12, a3[49], a3[50], a3[51], a3[52]);
  sub_1001F2B74((uint64_t)v12);
  uint64_t v59 = v58;
  sub_100121584(v58, a4, v56);
  v53((char *)v58, a4);
  uint64_t v60 = v85;
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)v12);
  uint64_t v61 = (uint64_t)v101;
  uint64_t v62 = v99;
  v99(v12, a3[33], a3[34], a3[35], a3[36]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v61, a4, v59);
  v53((char *)v61, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, (uint64_t)v12);
  uint64_t v63 = (uint64_t)v89;
  v62(v12, a3[25], a3[26], a3[27], a3[28]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v63, a4, (uint64_t)v101);
  v53((char *)v63, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, (uint64_t)v12);
  uint64_t v64 = *a3;
  uint64_t v65 = a3[1];
  uint64_t v66 = a3[2];
  uint64_t v67 = a3[3];
  uint64_t v68 = (uint64_t)v90;
  v62(v12, v64, v65, v66, v67);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v68, a4, v63);
  v53((char *)v68, a4);
  uint64_t v69 = *(void (**)(uint64_t, char *, uint64_t))(v82 + 16);
  v69(v68, v94, a4);
  uint64_t v119 = v68;
  uint64_t v70 = v92;
  v69((uint64_t)v92, v91, a4);
  uint64_t v120 = v70;
  uint64_t v71 = v93;
  v69((uint64_t)v93, v88, a4);
  uint64_t v121 = v71;
  uint64_t v72 = v95;
  v69((uint64_t)v95, v100, a4);
  uint64_t v122 = v72;
  uint64_t v73 = v96;
  uint64_t v74 = v86;
  v69((uint64_t)v96, v86, a4);
  uint64_t v123 = v73;
  uint64_t v75 = v97;
  uint64_t v76 = v87;
  v69((uint64_t)v97, v87, a4);
  int v124 = v75;
  uint64_t v77 = v98;
  uint64_t v78 = (uint64_t)v101;
  v69((uint64_t)v98, v101, a4);
  uint64_t v125 = v77;
  uint64_t v79 = v83;
  uint64_t v80 = v89;
  v69((uint64_t)v83, v89, a4);
  double v126 = v79;
  uint64_t v111 = a4;
  uint64_t v112 = a4;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v115 = a4;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v103 = v102;
  uint64_t v104 = v102;
  uint64_t v105 = v102;
  uint64_t v106 = v102;
  uint64_t v107 = v102;
  uint64_t v108 = v102;
  uint64_t v109 = v102;
  uint64_t v110 = v102;
  sub_1006E9080();
  v53(v80, a4);
  v53((char *)v78, a4);
  v53(v76, a4);
  v53(v74, a4);
  v53(v100, a4);
  v53(v88, a4);
  v53(v91, a4);
  v53(v94, a4);
  v53(v79, a4);
  v53(v98, a4);
  v53(v97, a4);
  v53(v96, a4);
  v53(v95, a4);
  v53(v93, a4);
  v53(v92, a4);
  return ((uint64_t (*)(char *, uint64_t))v53)(v90, a4);
}

uint64_t sub_1002AD23C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(v2 + 9)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_1002AB998(*(void *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_1002AD268()
{
  return sub_1002AD298((uint64_t (*)(void, void, void, void, void, void, void))sub_1002ABE60);
}

uint64_t sub_1002AD280()
{
  return sub_1002AD298((uint64_t (*)(void, void, void, void, void, void, void))sub_1002AC7F4);
}

uint64_t sub_1002AD298(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  if (*(unsigned char *)(v1 + 41)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return a1(*(void *)(v1 + 32), v2 | *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1002AD2CC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1002AD39C()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 56);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 96);
  return v0;
}

uint64_t sub_1002AD3CC()
{
  sub_1002AD39C();

  return swift_deallocClassInstance();
}

unint64_t sub_1002AD400(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E06398, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

unint64_t sub_1002AD44C(char a1)
{
  if (!a1) {
    return 0xD00000000000002ALL;
  }
  if (a1 == 1) {
    return 0xD00000000000001FLL;
  }
  return 0xD00000000000001ELL;
}

uint64_t sub_1002AD4A4(unsigned __int8 *a1, char *a2)
{
  return sub_10088B704(*a1, *a2);
}

Swift::Int sub_1002AD4B0()
{
  return sub_100652504(*v0);
}

uint64_t sub_1002AD4B8(uint64_t a1)
{
  return sub_1002C30BC(a1, *v1);
}

Swift::Int sub_1002AD4C0(uint64_t a1)
{
  return sub_1002C42D8(a1, *v1);
}

unint64_t sub_1002AD4C8@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1002AD400(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_1002AD4F8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1002AD44C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1002AD524(void *a1)
{
  id v1 = [a1 type];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  sub_1002AE218();
  sub_1002AE264();
  LOBYTE(v1) = BidirectionalCollection<>.starts<A>(with:)();
  swift_bridgeObjectRelease();
  return v1 & 1;
}

uint64_t sub_1002AD5D4(void *a1)
{
  Swift::String v2 = v1;
  uint64_t v63 = *v2;
  uint64_t v4 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ActivityAction();
  *(void *)&double v8 = __chkstk_darwin(v7).n128_u64[0];
  uint64_t v10 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [a1 type];
  uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v14 = v13;

  v66._uint64_t countAndFlagsBits = v12;
  v66._object = v14;
  char v15 = sub_1002AD400(v66);
  if (v15 == 3)
  {
    if (qword_100E62850 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_1002102B0(v16, (uint64_t)qword_100F51FF8);
    id v17 = a1;
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      v64[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136446210;
      id v21 = [v17 type];
      uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v24 = v23;

      double v65 = COERCE_DOUBLE(sub_10016414C(v22, v24, v64));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Failed to handle shortcut with unknown type=%{public}s", v20, 0xCu);
      swift_arrayDestroy();
      sub_100162EE0();
LABEL_37:
      sub_100162EE0();

      return 0;
    }
    goto LABEL_34;
  }
  char v25 = v15;
  uint64_t v61 = v7;
  uint64_t v62 = v6;
  if (qword_100E62850 != -1) {
    swift_once();
  }
  uint64_t v26 = type metadata accessor for Logger();
  uint64_t v27 = sub_1002102B0(v26, (uint64_t)qword_100F51FF8);
  id v28 = a1;
  uint64_t v60 = v27;
  uint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v58 = swift_slowAlloc();
    double v65 = *(double *)&v58;
    *(_DWORD *)uint64_t v31 = 136446723;
    LOBYTE(v64[0]) = v25;
    uint64_t v32 = String.init<A>(describing:)();
    v64[0] = sub_10016414C(v32, v33, (uint64_t *)&v65);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2160;
    v64[0] = 1752392040;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v31 + 22) = 2081;
    id v59 = v28;
    if (sub_1002AE1A4(v28))
    {
      sub_10017DF08(&qword_100EADD40);
      unint64_t v34 = Dictionary.description.getter();
      unint64_t v36 = v35;
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v34 = 0xD000000000000030;
      sub_10019E754();
      swift_bridgeObjectRelease();
      unint64_t v36 = 0x8000000100C97E70;
    }
    v64[0] = sub_10016414C(v34, v36, (uint64_t *)&v65);
    sub_100187BC4();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    id v28 = v59;

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "Handling shortcut for type=%{public}s, userInfo=%{private,mask.hash}s", (uint8_t *)v31, 0x20u);
    swift_arrayDestroy();
    sub_100162EE0();
    sub_100162EE0();
  }
  else
  {
  }
  uint64_t v37 = (uint64_t)v62;
  if (!v25)
  {
    sub_1001B1E64(v2 + 4, v2[7]);
    swift_storeEnumTagMultiPayload();
    uint64_t v49 = 1;
LABEL_30:
    sub_100389228((uint64_t)v10, 1, 0);
    sub_1002AE148((uint64_t)v10);
    return v49;
  }
  if (v25 != 1)
  {
    if (qword_100E629F0 != -1) {
      swift_once();
    }
    uint64_t v49 = 1;
    LOBYTE(v64[0]) = 1;
    sub_1002AE108((unint64_t *)&unk_100E66890);
    Updatable.save<A>(setting:value:)();
    sub_1001B1E64(v2 + 4, v2[7]);
    swift_storeEnumTagMultiPayload();
    goto LABEL_30;
  }
  uint64_t v38 = sub_1002AE1A4(v28);
  if (!v38) {
    goto LABEL_31;
  }
  uint64_t v39 = sub_100A037A0(0x656475746974616CLL, 0xE800000000000000, v38);
  swift_bridgeObjectRelease();
  if (!v39) {
    goto LABEL_31;
  }
  v64[0] = v39;
  sub_10017DF08(&qword_100EADD40);
  if ((sub_10017F8E4() & 1) == 0) {
    goto LABEL_31;
  }
  double v40 = v65;
  uint64_t v41 = sub_1002AE1A4(v28);
  if (!v41) {
    goto LABEL_31;
  }
  uint64_t v42 = sub_100A037A0(0x64757469676E6F6CLL, 0xE900000000000065, v41);
  swift_bridgeObjectRelease();
  if (!v42
    || (v64[0] = v42, (sub_10017F8E4() & 1) == 0)
    || (double v43 = v65, (v44 = sub_1002AE1A4(v28)) == 0)
    || (uint64_t v45 = sub_100A037A0(1701667182, 0xE400000000000000, v44), swift_bridgeObjectRelease(), !v45)
    || (double v65 = *(double *)&v45, (swift_dynamicCast() & 1) == 0))
  {
LABEL_31:
    id v17 = v28;
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v51 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v51))
    {
      uint64_t v52 = swift_slowAlloc();
      double v65 = COERCE_DOUBLE(swift_slowAlloc());
      *(_DWORD *)uint64_t v52 = 141558275;
      v64[0] = 1752392040;
      sub_100187BC4();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v52 + 12) = 2081;
      if (sub_1002AE1A4(v17))
      {
        sub_10017DF08(&qword_100EADD40);
        unint64_t v53 = Dictionary.description.getter();
        unint64_t v55 = v54;
        swift_bridgeObjectRelease();
      }
      else
      {
        unint64_t v53 = 0xD000000000000030;
        sub_10019E754();
        swift_bridgeObjectRelease();
        unint64_t v55 = 0x8000000100C97E70;
      }
      v64[0] = sub_10016414C(v53, v55, (uint64_t *)&v65);
      sub_100187BC4();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v18, v51, "Failed to handle saved location shortcut, missing information from userInfo=%{private,mask.hash}s", (uint8_t *)v52, 0x16u);
      swift_arrayDestroy();
      sub_100162EE0();
      goto LABEL_37;
    }
LABEL_34:

    return 0;
  }
  uint64_t v47 = v64[0];
  unint64_t v46 = v64[1];
  uint64_t v48 = type metadata accessor for Date();
  uint64_t v49 = 1;
  _s7Weather24LocationCompositionStateOwst_0(v37, 1, 1, v48);
  sub_1002AB8F0();
  uint64_t v50 = Dictionary.init(dictionaryLiteral:)();
  sub_1002AA938(v47, v46, 17, v37, v50, v40, v43);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1001E7540(v37);
  return v49;
}

uint64_t sub_1002ADEFC()
{
  swift_bridgeObjectRelease();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 32);
  return v0;
}

uint64_t sub_1002ADF2C()
{
  sub_1002ADEFC();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ShortcutItemHandler()
{
  return self;
}

uint64_t sub_1002ADF84()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1002ADF90(void *a1)
{
  return sub_1002AD5D4(a1) & 1;
}

uint64_t sub_1002ADFB8()
{
  return Updatable.save<A>(setting:value:)();
}

uint64_t sub_1002ADFE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return Updatable.reset<A>(setting:)(a1, *v5, a5);
}

uint64_t sub_1002AE018()
{
  return Updatable.apply(preset:)();
}

uint64_t sub_1002AE044()
{
  return Configurable.setting<A>(_:)();
}

uint64_t sub_1002AE074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return Configurable.setting<A>(_:_:)(a1, a2, a3, *v7, a7);
}

uint64_t sub_1002AE0A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return Configurable.setting<A>(_:defaultValue:_:)(a1, a2, a3, a4, *v8, a8);
}

uint64_t sub_1002AE0D4()
{
  return sub_1002AE108((unint64_t *)&unk_100E66880);
}

uint64_t sub_1002AE108(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ShortcutItemHandler();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002AE148(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ActivityAction();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002AE1A4(void *a1)
{
  id v1 = [a1 userInfo];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  sub_10017DF08(&qword_100EADD40);
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

unint64_t sub_1002AE218()
{
  unint64_t result = qword_100E668A8;
  if (!qword_100E668A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E668A8);
  }
  return result;
}

unint64_t sub_1002AE264()
{
  unint64_t result = qword_100E668B0;
  if (!qword_100E668B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E668B0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AppLifecycleAction(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 2) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v5 = v6 - 3;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ShortcutItem(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002AE404);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShortcutItem()
{
  return &type metadata for ShortcutItem;
}

unint64_t sub_1002AE440()
{
  unint64_t result = qword_100E668B8;
  if (!qword_100E668B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E668B8);
  }
  return result;
}

uint64_t *sub_1002AE48C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for ScrubberDateSelection();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_10017DF08(&qword_100E668C0);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      uint64_t v10 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v10))
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v10);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = type metadata accessor for Date();
    char v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    v15(v12, v13, v14);
    v15((char *)a1 + a3[6], (char *)a2 + a3[6], v14);
    v15((char *)a1 + a3[7], (char *)a2 + a3[7], v14);
    uint64_t v16 = a3[9];
    *(uint64_t *)((char *)a1 + a3[8]) = *(uint64_t *)((char *)a2 + a3[8]);
    *(uint64_t *)((char *)a1 + v16) = *(uint64_t *)((char *)a2 + v16);
    uint64_t v17 = a3[10];
    uint64_t v18 = (char *)a1 + v17;
    os_log_type_t v19 = (char *)a2 + v17;
    uint64_t v20 = type metadata accessor for TimeZone();
    id v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21(v18, v19, v20);
  }
  return a1;
}

uint64_t sub_1002AE708(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for ScrubberDateSelection();
  if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v4))
  {
    uint64_t v5 = type metadata accessor for Date();
    if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
    }
  }
  uint64_t v6 = a1 + a2[5];
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  v8(v6, v7);
  v8(a1 + a2[6], v7);
  v8(a1 + a2[7], v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + a2[10];
  uint64_t v10 = type metadata accessor for TimeZone();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);

  return v11(v9, v10);
}

char *sub_1002AE880(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ScrubberDateSelection();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_10017DF08(&qword_100E668C0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v8))
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v8);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  v13(v10, v11, v12);
  v13(&a1[a3[6]], &a2[a3[6]], v12);
  v13(&a1[a3[7]], &a2[a3[7]], v12);
  uint64_t v14 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  uint64_t v15 = a3[10];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = type metadata accessor for TimeZone();
  os_log_type_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19(v16, v17, v18);
  return a1;
}

char *sub_1002AEAAC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ScrubberDateSelection();
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v9))
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v9);
      }
      uint64_t v14 = (uint64_t)a1;
      uint64_t v15 = v6;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_1002AEE0C((uint64_t)a1);
LABEL_7:
    size_t v10 = *(void *)(*(void *)(sub_10017DF08(&qword_100E668C0) - 8) + 64);
    goto LABEL_8;
  }
  uint64_t v11 = type metadata accessor for Date();
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v11);
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v11);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      uint64_t v14 = (uint64_t)a1;
      uint64_t v15 = v11;
LABEL_14:
      _s7Weather24LocationCompositionStateOwst_0(v14, 0, 1, v15);
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v26 = *(void *)(v11 - 8);
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 24))(a1, a2, v11);
      goto LABEL_15;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(a1, v11);
  }
  size_t v10 = *(void *)(*(void *)(v6 - 8) + 64);
LABEL_8:
  memcpy(a1, a2, v10);
LABEL_15:
  uint64_t v16 = a3[5];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = type metadata accessor for Date();
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 24);
  v20(v17, v18, v19);
  v20(&a1[a3[6]], &a2[a3[6]], v19);
  v20(&a1[a3[7]], &a2[a3[7]], v19);
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[10];
  uint64_t v22 = &a1[v21];
  unint64_t v23 = &a2[v21];
  uint64_t v24 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  return a1;
}

uint64_t sub_1002AEE0C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ScrubberDateSelection();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_1002AEE68(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ScrubberDateSelection();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_10017DF08(&qword_100E668C0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v8))
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v8);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  size_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = type metadata accessor for Date();
  int v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32);
  v13(v10, v11, v12);
  v13(&a1[a3[6]], &a2[a3[6]], v12);
  v13(&a1[a3[7]], &a2[a3[7]], v12);
  uint64_t v14 = a3[9];
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  *(void *)&a1[v14] = *(void *)&a2[v14];
  uint64_t v15 = a3[10];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

char *sub_1002AF080(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for ScrubberDateSelection();
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v9))
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v9);
      }
      uint64_t v14 = (uint64_t)a1;
      uint64_t v15 = v6;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_1002AEE0C((uint64_t)a1);
LABEL_7:
    size_t v10 = *(void *)(*(void *)(sub_10017DF08(&qword_100E668C0) - 8) + 64);
    goto LABEL_8;
  }
  uint64_t v11 = type metadata accessor for Date();
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v11);
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v11);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
      uint64_t v14 = (uint64_t)a1;
      uint64_t v15 = v11;
LABEL_14:
      _s7Weather24LocationCompositionStateOwst_0(v14, 0, 1, v15);
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v26 = *(void *)(v11 - 8);
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 40))(a1, a2, v11);
      goto LABEL_15;
    }
    (*(void (**)(char *, uint64_t))(v26 + 8))(a1, v11);
  }
  size_t v10 = *(void *)(*(void *)(v6 - 8) + 64);
LABEL_8:
  memcpy(a1, a2, v10);
LABEL_15:
  uint64_t v16 = a3[5];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = type metadata accessor for Date();
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 40);
  v20(v17, v18, v19);
  v20(&a1[a3[6]], &a2[a3[6]], v19);
  v20(&a1[a3[7]], &a2[a3[7]], v19);
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  swift_bridgeObjectRelease();
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[10];
  uint64_t v22 = &a1[v21];
  unint64_t v23 = &a2[v21];
  uint64_t v24 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 40))(v22, v23, v24);
  return a1;
}

uint64_t sub_1002AF3D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002AF3E4);
}

uint64_t sub_1002AF3E4(uint64_t a1, uint64_t a2, int *a3)
{
  sub_10017DF08(&qword_100E668C0);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_11:
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v12 = a3[5];
LABEL_10:
    uint64_t v9 = a1 + v12;
    goto LABEL_11;
  }
  if (a2 != 0x7FFFFFFF)
  {
    uint64_t v8 = type metadata accessor for TimeZone();
    uint64_t v12 = a3[10];
    goto LABEL_10;
  }
  unint64_t v13 = *(void *)(a1 + a3[8]);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t sub_1002AF4BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002AF4D0);
}

void sub_1002AF4D0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_10017DF08(&qword_100E668C0);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    type metadata accessor for Date();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      if (a3 == 0x7FFFFFFF)
      {
        *(void *)(a1 + a4[8]) = (a2 - 1);
        return;
      }
      uint64_t v10 = type metadata accessor for TimeZone();
      uint64_t v14 = a4[10];
    }
    uint64_t v11 = a1 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for MoonScrubberViewModel()
{
  uint64_t result = qword_100E66920;
  if (!qword_100E66920) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1002AF5EC()
{
  sub_1002AF704();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Date();
    if (v1 <= 0x3F)
    {
      type metadata accessor for TimeZone();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1002AF704()
{
  if (!qword_100E66930)
  {
    type metadata accessor for ScrubberDateSelection();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E66930);
    }
  }
}

uint64_t sub_1002AF75C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScrubberDateSelection();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E66980);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E668C0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v27 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v27 - v18;
  sub_1002AFBCC(a1, (uint64_t)&v27 - v18);
  sub_1002AFBCC(a2, (uint64_t)v17);
  uint64_t v20 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_1002AFBCC((uint64_t)v19, (uint64_t)v10);
  sub_1002AFBCC((uint64_t)v17, v20);
  sub_1001630A0((uint64_t)v10);
  if (v21)
  {
    sub_1000F3400((uint64_t)v17, &qword_100E668C0);
    sub_1000F3400((uint64_t)v19, &qword_100E668C0);
    sub_1001630A0(v20);
    if (v21)
    {
      sub_1000F3400((uint64_t)v10, &qword_100E668C0);
      goto LABEL_11;
    }
LABEL_9:
    sub_1000F3400((uint64_t)v10, &qword_100E66980);
LABEL_17:
    char v25 = 0;
    return v25 & 1;
  }
  sub_1002AFBCC((uint64_t)v10, (uint64_t)v14);
  sub_1001630A0(v20);
  if (v21)
  {
    sub_1000F3400((uint64_t)v17, &qword_100E668C0);
    sub_1000F3400((uint64_t)v19, &qword_100E668C0);
    sub_1002AEE0C((uint64_t)v14);
    goto LABEL_9;
  }
  sub_1002AFC34(v20, (uint64_t)v6);
  char v22 = sub_100B81334((uint64_t)v14, (uint64_t)v6);
  sub_1002AEE0C((uint64_t)v6);
  sub_1000F3400((uint64_t)v17, &qword_100E668C0);
  sub_1000F3400((uint64_t)v19, &qword_100E668C0);
  sub_1002AEE0C((uint64_t)v14);
  sub_1000F3400((uint64_t)v10, &qword_100E668C0);
  if ((v22 & 1) == 0) {
    goto LABEL_17;
  }
LABEL_11:
  type metadata accessor for MoonScrubberViewModel();
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    goto LABEL_17;
  }
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    goto LABEL_17;
  }
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    goto LABEL_17;
  }
  sub_100BDB9F0();
  if ((v23 & 1) == 0) {
    goto LABEL_17;
  }
  sub_100BDBD68();
  if ((v24 & 1) == 0) {
    goto LABEL_17;
  }
  char v25 = static TimeZone.== infix(_:_:)();
  return v25 & 1;
}

uint64_t sub_1002AFA88@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = sub_10017DF08(&qword_100E66988);
  a1[4] = sub_1002AFC98();
  sub_100170694(a1);
  type metadata accessor for MoonScrubberViewModel();
  return ShortDescription.init(name:_:)();
}

uint64_t sub_1002AFB28@<X0>(uint64_t *a1@<X8>)
{
  return sub_1002AFA88(a1);
}

uint64_t sub_1002AFB40()
{
  sub_1002AFCEC(&qword_100E66998);

  return ShortDescribable.description.getter();
}

uint64_t sub_1002AFB98()
{
  return sub_1002AFCEC(&qword_100E66978);
}

uint64_t sub_1002AFBCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E668C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002AFC34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScrubberDateSelection();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1002AFC98()
{
  unint64_t result = qword_100E66990;
  if (!qword_100E66990)
  {
    sub_10018C6DC(&qword_100E66988);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E66990);
  }
  return result;
}

uint64_t sub_1002AFCEC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for MoonScrubberViewModel();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_1002AFD30(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_10017DF08(&qword_100E65310);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      a1[1] = a2[1];
      swift_retain();
      swift_retain();
      uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for PresentationMode();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[5];
    uint64_t v14 = a3[6];
    uint64_t v15 = (uint64_t *)((char *)a1 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = (char *)a1 + v14;
    uint64_t v19 = (char *)a2 + v14;
    long long v20 = *(_OWORD *)((char *)a2 + v14 + 24);
    *(_OWORD *)((char *)a1 + v14 + 24) = v20;
    uint64_t v21 = v20;
    char v22 = **(void (***)(char *, char *, uint64_t))(v20 - 8);
    swift_retain();
    v22(v18, v19, v21);
    uint64_t v23 = a3[7];
    uint64_t v24 = a3[8];
    char v25 = (char *)a1 + v23;
    uint64_t v26 = (char *)a2 + v23;
    *char v25 = *v26;
    *((void *)v25 + 1) = *((void *)v26 + 1);
    uint64_t v27 = (uint64_t *)((char *)a1 + v24);
    id v28 = (uint64_t *)((char *)a2 + v24);
    uint64_t v29 = v28[1];
    *uint64_t v27 = *v28;
    v27[1] = v29;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1002AFF24(uint64_t a1, uint64_t a2)
{
  sub_10017DF08(&qword_100E65310);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    uint64_t v5 = a1 + *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    uint64_t v6 = type metadata accessor for PresentationMode();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + *(int *)(a2 + 24));
  swift_release();

  return swift_bridgeObjectRelease();
}

void *sub_1002B0018(void *a1, void *a2, int *a3)
{
  sub_10017DF08(&qword_100E65310);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    uint64_t v7 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for PresentationMode();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[5];
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)((char *)a1 + v11);
  uint64_t v14 = (void *)((char *)a2 + v11);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = (char *)a1 + v12;
  uint64_t v17 = (char *)a2 + v12;
  long long v18 = *(_OWORD *)((char *)a2 + v12 + 24);
  *(_OWORD *)((char *)a1 + v12 + 24) = v18;
  uint64_t v19 = v18;
  long long v20 = **(void (***)(char *, char *, uint64_t))(v18 - 8);
  swift_retain();
  v20(v16, v17, v19);
  uint64_t v21 = a3[7];
  uint64_t v22 = a3[8];
  uint64_t v23 = (char *)a1 + v21;
  uint64_t v24 = (char *)a2 + v21;
  *uint64_t v23 = *v24;
  *((void *)v23 + 1) = *((void *)v24 + 1);
  char v25 = (void *)((char *)a1 + v22);
  uint64_t v26 = (void *)((char *)a2 + v22);
  uint64_t v27 = v26[1];
  *char v25 = *v26;
  v25[1] = v27;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1002B01BC(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100178160((uint64_t)a1, &qword_100E65310);
    sub_10017DF08(&qword_100E65310);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      a1[1] = a2[1];
      swift_retain();
      swift_retain();
      uint64_t v7 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = type metadata accessor for PresentationMode();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[5];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_retain();
  swift_release();
  sub_1000C1E18((void *)((char *)a1 + a3[6]), (void *)((char *)a2 + a3[6]));
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  *uint64_t v15 = *v16;
  *((void *)v15 + 1) = *((void *)v16 + 1);
  swift_retain();
  swift_release();
  uint64_t v17 = a3[8];
  long long v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  *long long v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_1002B0358(void *a1, void *a2, int *a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E65310);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for PresentationMode();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v12 = a3[6];
  *(_OWORD *)((char *)a1 + a3[5]) = *(_OWORD *)((char *)a2 + a3[5]);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  long long v15 = *((_OWORD *)v14 + 1);
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  *((_OWORD *)v13 + 1) = v15;
  *((void *)v13 + 4) = *((void *)v14 + 4);
  uint64_t v16 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v16) = *(_OWORD *)((char *)a2 + v16);
  return a1;
}

void *sub_1002B0480(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100178160((uint64_t)a1, &qword_100E65310);
    uint64_t v6 = sub_10017DF08(&qword_100E65310);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for PresentationMode();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v12 = a3[5];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_release();
  uint64_t v17 = a3[6];
  long long v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1 + v17);
  long long v20 = *((_OWORD *)v19 + 1);
  *(_OWORD *)long long v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v20;
  *((void *)v18 + 4) = *((void *)v19 + 4);
  uint64_t v21 = a3[7];
  uint64_t v22 = (char *)a1 + v21;
  uint64_t v23 = (char *)a2 + v21;
  *uint64_t v22 = *v23;
  *((void *)v22 + 1) = *((void *)v23 + 1);
  swift_release();
  uint64_t v24 = a3[8];
  char v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  *char v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1002B0608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002B061C);
}

uint64_t sub_1002B061C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10017DF08(&qword_100E669A8);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_1002B06B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002B06C4);
}

void sub_1002B06C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_10017DF08(&qword_100E669A8);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
}

uint64_t sub_1002B0754()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002B0770@<X0>(uint64_t a1@<X8>)
{
  uint64_t v74 = a1;
  uint64_t v73 = type metadata accessor for AutomationInfo(0);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100109314();
  uint64_t v72 = v4;
  type metadata accessor for AccessibilityChildBehavior();
  sub_100179C0C();
  uint64_t v70 = v6;
  uint64_t v71 = v5;
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v69 = v7;
  uint64_t v8 = type metadata accessor for ReportWeatherView();
  uint64_t v9 = sub_100164920(v8);
  uint64_t v66 = v10;
  uint64_t v61 = *(void *)(v11 + 64);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100E66A58);
  sub_100179C0C();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  sub_1001626E0();
  uint64_t v20 = v19 - v18;
  uint64_t v21 = sub_10017DF08(&qword_100E66A60);
  uint64_t v22 = v21 - 8;
  __chkstk_darwin(v21);
  sub_1001626E0();
  uint64_t v25 = v24 - v23;
  uint64_t v59 = sub_10017DF08(&qword_100E66A68) - 8;
  __chkstk_darwin(v59);
  sub_10016279C();
  uint64_t v64 = sub_10017DF08(&qword_100E66A70);
  sub_100162E4C();
  __chkstk_darwin(v26);
  sub_100109314();
  uint64_t v60 = v27;
  sub_10017DF08(&qword_100E66A78);
  sub_100179C0C();
  uint64_t v67 = v29;
  uint64_t v68 = v28;
  __chkstk_darwin(v28);
  sub_100109314();
  uint64_t v62 = v30;
  uint64_t v65 = sub_10017DF08(&qword_100E66A80) - 8;
  __chkstk_darwin(v65);
  sub_100109314();
  uint64_t v63 = v31;
  uint64_t v75 = v1;
  sub_10017DF08(&qword_100E66A88);
  sub_1001246C8(&qword_100E66A90, &qword_100E66A88);
  NavigationView.init(content:)();
  uint64_t v32 = static Color.white.getter();
  uint64_t KeyPath = swift_getKeyPath();
  sub_100162808();
  v34();
  unint64_t v35 = (uint64_t *)(v25 + *(int *)(v22 + 44));
  uint64_t *v35 = KeyPath;
  v35[1] = v32;
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v20, v14);
  sub_1002B3F24(v1, (uint64_t)v13, (void (*)(void))type metadata accessor for ReportWeatherView);
  unint64_t v36 = (*(unsigned __int8 *)(v66 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v66 + 80);
  uint64_t v37 = swift_allocObject();
  sub_1002B3430((uint64_t)v13, v37 + v36);
  sub_10006DF38(v25, v2, &qword_100E66A60);
  uint64_t v38 = (uint64_t (**)())(v2 + *(int *)(v59 + 44));
  *uint64_t v38 = sub_1002B3494;
  v38[1] = (uint64_t (*)())v37;
  v38[2] = 0;
  v38[3] = 0;
  sub_100178160(v25, &qword_100E66A60);
  sub_1002B3F24(v1, (uint64_t)v13, (void (*)(void))type metadata accessor for ReportWeatherView);
  uint64_t v39 = swift_allocObject();
  sub_1002B3430((uint64_t)v13, v39 + v36);
  uint64_t v40 = v60;
  sub_10006DF38(v2, v60, &qword_100E66A68);
  uint64_t v41 = (void *)(v40 + *(int *)(v64 + 36));
  *uint64_t v41 = 0;
  v41[1] = 0;
  v41[2] = sub_1002B34B0;
  v41[3] = v39;
  sub_100178160(v2, &qword_100E66A68);
  static AccessibilityChildBehavior.contain.getter();
  sub_1002B34F0(&qword_100E66A98, &qword_100E66A70, (void (*)(void))sub_1002B34C8);
  uint64_t v42 = v62;
  View.accessibilityElement(children:)();
  uint64_t v43 = sub_100162728();
  v44(v43);
  sub_100178160(v40, &qword_100E66A70);
  uint64_t v46 = v67;
  uint64_t v45 = v68;
  uint64_t v47 = v63;
  sub_100162808();
  v48();
  *(unsigned char *)(v47 + *(int *)(v65 + 44)) = 1;
  uint64_t v49 = v47;
  (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v42, v45);
  type metadata accessor for AutomationViewInfo(0);
  uint64_t v50 = v72;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_10048D05C(v50, v51, v52, v53, v54, v55, v56, v57, v59, v60, v61, v62, v63, v64, v65, v66, v67, v68, v69, v70);
  sub_10014CCC8(v50, (void (*)(void))type metadata accessor for AutomationInfo);
  return sub_100178160(v49, &qword_100E66A80);
}

uint64_t sub_1002B0D28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = static HorizontalAlignment.center.getter();
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 1;
  uint64_t v4 = sub_10017DF08(&qword_100E66AC0);
  return sub_1002B0D78(a1, a2 + *(int *)(v4 + 44));
}

uint64_t sub_1002B0D78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v93 = a2;
  uint64_t v3 = sub_10017DF08((uint64_t *)&unk_100EAA640);
  __chkstk_darwin(v3 - 8);
  uint64_t v87 = (char *)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  uint64_t v84 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  char v83 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_10017DF08(&qword_100E66AC8);
  __chkstk_darwin(v72);
  uint64_t v71 = (uint64_t)&v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_10017DF08(&qword_100E66AD0);
  uint64_t v74 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v73 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_10017DF08(&qword_100E66AD8);
  uint64_t v77 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v75 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E66AE0);
  uint64_t v81 = *(void *)(v9 - 8);
  uint64_t v82 = v9;
  __chkstk_darwin(v9);
  uint64_t v80 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_10017DF08(&qword_100E66AE8);
  __chkstk_darwin(v92);
  uint64_t v79 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v85 = (uint64_t)&v70 - v13;
  uint64_t v89 = sub_10017DF08(&qword_100E66AF0);
  __chkstk_darwin(v89);
  uint64_t v91 = (uint64_t)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100E669A0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v70 - v19;
  uint64_t v88 = type metadata accessor for ReportWeatherSubmittedView();
  __chkstk_darwin(v88);
  uint64_t v22 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = sub_10017DF08(&qword_100E66AF8);
  uint64_t v23 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v25 = (char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v70 - v27;
  uint64_t v29 = type metadata accessor for ReportWeatherView();
  uint64_t v30 = (char *)(a1 + *(int *)(v29 + 28));
  char v31 = *v30;
  unint64_t v32 = *((void *)v30 + 1);
  LOBYTE(v94) = v31;
  unint64_t v95 = v32;
  sub_10017DF08(&qword_100E65950);
  State.wrappedValue.getter();
  if (v98 == 1)
  {
    sub_1005D1E94();
    Binding.projectedValue.getter();
    sub_100178160((uint64_t)v20, &qword_100E669A0);
    sub_10020E72C((uint64_t)v17, (uint64_t)v22, &qword_100E669A0);
    uint64_t v33 = sub_1002B4170(&qword_100E66B50, (void (*)(uint64_t))type metadata accessor for ReportWeatherSubmittedView);
    uint64_t v34 = v88;
    View.navigationBarHidden(_:)();
    sub_10014CCC8((uint64_t)v22, (void (*)(void))type metadata accessor for ReportWeatherSubmittedView);
    unint64_t v35 = v25;
    uint64_t v36 = v90;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v28, v35, v90);
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 16))(v91, v28, v36);
    swift_storeEnumTagMultiPayload();
    uint64_t v94 = v34;
    unint64_t v95 = v33;
    swift_getOpaqueTypeConformance2();
    sub_1002B37B8();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v28, v36);
  }
  else
  {
    uint64_t v38 = v71;
    sub_1002B1880(v71);
    uint64_t v39 = (uint64_t *)(a1 + *(int *)(v29 + 32));
    unint64_t v40 = v39[1];
    uint64_t v94 = *v39;
    unint64_t v95 = v40;
    sub_10014A85C();
    swift_bridgeObjectRetain();
    uint64_t v41 = Text.init<A>(_:)();
    uint64_t v43 = v42;
    char v45 = v44 & 1;
    unint64_t v46 = sub_1002B3634();
    uint64_t v47 = v73;
    uint64_t v48 = v72;
    View.navigationTitle(_:)();
    sub_100191924(v41, v43, v45);
    swift_bridgeObjectRelease();
    uint64_t v49 = sub_100178160(v38, &qword_100E66AC8);
    __chkstk_darwin(v49);
    *(&v70 - 2) = a1;
    uint64_t v50 = sub_10017DF08(&qword_100E66B38);
    uint64_t v94 = v48;
    unint64_t v95 = v46;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v52 = sub_10018C6DC(&qword_100E66B40);
    uint64_t v53 = sub_1001246C8(&qword_100E66B48, &qword_100E66B40);
    uint64_t v94 = v52;
    unint64_t v95 = v53;
    uint64_t v54 = swift_getOpaqueTypeConformance2();
    uint64_t v55 = v75;
    uint64_t v56 = v76;
    View.toolbar<A>(content:)();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v47, v56);
    uint64_t v58 = v83;
    uint64_t v57 = v84;
    uint64_t v59 = v86;
    (*(void (**)(char *, void, uint64_t))(v84 + 104))(v83, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v86);
    uint64_t v94 = v56;
    unint64_t v95 = v50;
    uint64_t v96 = OpaqueTypeConformance2;
    uint64_t v97 = v54;
    swift_getOpaqueTypeConformance2();
    uint64_t v60 = v80;
    uint64_t v61 = v78;
    View.navigationBarTitleDisplayMode(_:)();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v59);
    (*(void (**)(char *, uint64_t))(v77 + 8))(v55, v61);
    uint64_t v62 = enum case for ColorScheme.dark(_:);
    uint64_t v63 = type metadata accessor for ColorScheme();
    uint64_t v64 = (uint64_t)v87;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v63 - 8) + 104))(v87, v62, v63);
    _s7Weather24LocationCompositionStateOwst_0(v64, 0, 1, v63);
    uint64_t v65 = (uint64_t)v79;
    sub_10006DF38(v64, (uint64_t)&v79[*(int *)(v92 + 36)], (uint64_t *)&unk_100EAA640);
    uint64_t v67 = v81;
    uint64_t v66 = v82;
    (*(void (**)(uint64_t, char *, uint64_t))(v81 + 16))(v65, v60, v82);
    sub_100178160(v64, (uint64_t *)&unk_100EAA640);
    (*(void (**)(char *, uint64_t))(v67 + 8))(v60, v66);
    uint64_t v68 = v85;
    sub_10020E72C(v65, v85, &qword_100E66AE8);
    sub_10006DF38(v68, v91, &qword_100E66AE8);
    swift_storeEnumTagMultiPayload();
    uint64_t v69 = sub_1002B4170(&qword_100E66B50, (void (*)(uint64_t))type metadata accessor for ReportWeatherSubmittedView);
    uint64_t v94 = v88;
    unint64_t v95 = v69;
    swift_getOpaqueTypeConformance2();
    sub_1002B37B8();
    _ConditionalContent<>.init(storage:)();
    return sub_100178160(v68, &qword_100E66AE8);
  }
}

uint64_t sub_1002B1880@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1;
  uint64_t v70 = sub_10017DF08(&qword_100E66BC0);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v71 = v6;
  uint64_t v7 = sub_10017DF08(&qword_100E749B0);
  __chkstk_darwin(v7 - 8);
  sub_100109314();
  uint64_t v68 = v8;
  uint64_t v9 = type metadata accessor for ReportWeatherContentView();
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_100109370();
  uint64_t v11 = sub_10017DF08(&qword_100E66B10);
  sub_100162E4C();
  __chkstk_darwin(v12);
  uint64_t v67 = &v60[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  uint64_t v16 = &v60[-v15];
  uint64_t v17 = type metadata accessor for ReportWeatherView();
  uint64_t v18 = sub_100164920(v17);
  uint64_t v20 = v19;
  uint64_t v22 = *(void *)(v21 + 64);
  __chkstk_darwin(v18);
  swift_retain();
  sub_10024E2B4((void (**)(uint64_t *__return_ptr, uint64_t))__dst);
  swift_release();
  uint64_t v23 = *(void *)__dst;
  uint64_t v72 = a1;
  uint64_t v69 = v11;
  if ((*(void *)__dst & 0x8000000000000000) != 0)
  {
    uint64_t v47 = *(void *)&__dst[16];
    uint64_t v68 = *(void *)&__dst[8];
    uint64_t v48 = *(void *)&__dst[24];
    uint64_t v49 = *(void *)&__dst[32];
    uint64_t v50 = *(void *)&__dst[40];
    uint64_t v51 = *(void *)&__dst[48];
    uint64_t v52 = *(void *)&__dst[56];
    uint64_t v53 = *(void *)&__dst[64];
    uint64_t v67 = *(unsigned char **)&__dst[72];
    uint64_t v54 = *(void *)&__dst[88];
    uint64_t v66 = *(void *)&__dst[80];
    uint64_t v55 = swift_allocObject();
    *(unsigned char *)(v55 + 16) = v23 & 1;
    *(void *)(v55 + 24) = v68;
    *(void *)(v55 + 32) = v47;
    *(void *)(v55 + 40) = v48;
    *(void *)(v55 + 48) = v49;
    *(void *)(v55 + 56) = v50;
    *(void *)(v55 + 64) = v51;
    *(void *)(v55 + 72) = v52;
    *(void *)(v55 + 80) = v53;
    uint64_t v56 = v66;
    *(void *)(v55 + 88) = v67;
    *(void *)(v55 + 96) = v56;
    *(void *)(v55 + 104) = v54;
    uint64_t v57 = sub_10017DF08(&qword_100E66BC8);
    __src[10] = sub_1008749EC;
    __src[11] = 0;
    LOBYTE(__src[12]) = 0;
    __src[0] = v57;
    if (qword_100E62290 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t result = sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)__dst, &qword_100E6F2A0);
    uint64_t v58 = v71;
    if (*(void *)&__dst[24])
    {
      sub_1001262E4((long long *)__dst, (uint64_t)&__src[3]);
      __src[1] = sub_1002B3CBC;
      __src[2] = v55;
      uint64_t v59 = Dictionary.init(dictionaryLiteral:)();
      __src[8] = _swiftEmptyArrayStorage;
      __src[9] = v59;
      memcpy(__dst, __src, sizeof(__dst));
      sub_10006DF38((uint64_t)__dst, v58, &qword_100E66B30);
      swift_storeEnumTagMultiPayload();
      sub_10017DF08(&qword_100E66B30);
      sub_1002B36D4();
      sub_1001246C8(&qword_100E66B28, &qword_100E66B30);
      _ConditionalContent<>.init(storage:)();
      return sub_100178160((uint64_t)__dst, &qword_100E66B30);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    uint64_t v24 = swift_allocObject();
    uint64_t v62 = v9;
    uint64_t v25 = v24;
    *(void *)(v24 + 16) = v23;
    uint64_t v64 = (void *)(v24 + 16);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v26 = static MainActor.shared.getter();
    uint64_t v27 = (void *)swift_allocObject();
    uint64_t v65 = v16;
    v27[2] = v26;
    v27[3] = &protocol witness table for MainActor;
    v27[4] = v25;
    sub_1002B3F24(v3, (uint64_t)&v60[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)], (void (*)(void))type metadata accessor for ReportWeatherView);
    uint64_t v66 = v25;
    swift_retain();
    uint64_t v28 = static MainActor.shared.getter();
    unint64_t v29 = (*(unsigned __int8 *)(v20 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    uint64_t v30 = (void *)swift_allocObject();
    v30[2] = v28;
    v30[3] = &protocol witness table for MainActor;
    v30[4] = v25;
    sub_1002B3430((uint64_t)&v60[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)], (uint64_t)v30 + v29);
    Binding.init(get:set:)();
    uint64_t v31 = *(void *)__dst;
    uint64_t v32 = *(void *)&__dst[8];
    uint64_t v33 = *(void *)&__dst[16];
    *(void *)((char *)v2 + *(int *)(v62 + 20)) = swift_getKeyPath();
    sub_10017DF08(&qword_100E62D60);
    swift_storeEnumTagMultiPayload();
    *uint64_t v2 = v31;
    v2[1] = v32;
    v2[2] = v33;
    swift_getKeyPath();
    *(void *)__dst = v31;
    *(void *)&__dst[8] = v32;
    *(void *)&__dst[16] = v33;
    uint64_t v63 = v31;
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    sub_10017DF08(&qword_100E66BD0);
    Binding.subscript.getter();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v34 = __src[0];
    uint64_t v62 = __src[1];
    uint64_t v35 = v71;
    int v61 = LOBYTE(__src[2]);
    uint64_t v36 = v64;
    swift_beginAccess();
    uint64_t v37 = *v36 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_onlineFeedbackURL;
    uint64_t v38 = type metadata accessor for URL();
    sub_100162E4C();
    uint64_t v40 = v68;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 16))(v68, v37, v38);
    _s7Weather24LocationCompositionStateOwst_0(v40, 0, 1, v38);
    uint64_t v41 = (uint64_t)v67;
    uint64_t v42 = &v67[*(int *)(v69 + 36)];
    uint64_t v43 = type metadata accessor for SafariSheetModifier(0);
    sub_10006DF38(v40, (uint64_t)&v42[*(int *)(v43 + 20)], &qword_100E749B0);
    uint64_t v44 = v62;
    *(void *)uint64_t v42 = v34;
    *((void *)v42 + 1) = v44;
    v42[16] = v61;
    sub_1002B3F24((uint64_t)v2, v41, (void (*)(void))type metadata accessor for ReportWeatherContentView);
    sub_100178160(v40, &qword_100E749B0);
    sub_10014CCC8((uint64_t)v2, (void (*)(void))type metadata accessor for ReportWeatherContentView);
    uint64_t v45 = (uint64_t)v65;
    sub_10020E72C(v41, (uint64_t)v65, &qword_100E66B10);
    sub_10006DF38(v45, v35, &qword_100E66B10);
    swift_storeEnumTagMultiPayload();
    sub_10017DF08(&qword_100E66B30);
    sub_1002B36D4();
    sub_1001246C8(&qword_100E66B28, &qword_100E66B30);
    _ConditionalContent<>.init(storage:)();
    swift_release();
    swift_release();
    swift_release();
    sub_100178160(v45, &qword_100E66B10);
    return swift_release();
  }
  return result;
}

uint64_t sub_1002B20D8()
{
  uint64_t v0 = sub_10017DF08(&qword_100E66B40);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002B21E8();
  sub_1001246C8(&qword_100E66B48, &qword_100E66B40);
  static ToolbarContentBuilder.buildBlock<A>(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1002B21E8()
{
  sub_10017DF08(&qword_100E66B70);
  sub_100162E4C();
  __chkstk_darwin(v2);
  sub_1001626E0();
  uint64_t v14 = sub_10017DF08(&qword_100E66B78);
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_10016279C();
  uint64_t v6 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v6 - 8);
  sub_1001626E0();
  uint64_t v7 = sub_10017DF08(&qword_100E66B80);
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_100109370();
  static ToolbarItemPlacement.navigationBarLeading.getter();
  sub_10017DF08(&qword_100E65388);
  sub_1001246C8(&qword_100E653A8, &qword_100E65388);
  ToolbarItem<>.init(placement:content:)();
  static ToolbarItemPlacement.confirmationAction.getter();
  sub_10017DF08(&qword_100E66B88);
  sub_1002B3990();
  ToolbarItem<>.init(placement:content:)();
  sub_100162808();
  v11();
  sub_100162808();
  v12();
  TupleToolbarContent.init(_:)();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0, v14);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v1, v7);
}

uint64_t sub_1002B2478(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ReportWeatherView();
  uint64_t v3 = sub_1001B1E64((void *)(a1 + *(int *)(v2 + 24)), *(void *)(a1 + *(int *)(v2 + 24) + 24));
  sub_1001B1E64((void *)(*v3 + 32), *(void *)(*v3 + 56));
  type metadata accessor for ReportWeatherExposureEvent();
  sub_1002B4170(&qword_100E66AB8, (void (*)(uint64_t))&type metadata accessor for ReportWeatherExposureEvent);
  return Tracker.timeDiagnosticEvent<A>(_:)();
}

uint64_t sub_1002B2514(uint64_t a1)
{
  void (*v3)(uint64_t *__return_ptr, uint64_t);
  void *v4;
  unint64_t v6;

  uint64_t v2 = type metadata accessor for ReportWeatherView();
  swift_retain();
  sub_10024E2B4((void (**)(uint64_t *__return_ptr, uint64_t))&v6);
  swift_release();
  uint64_t v3 = (void (*)(uint64_t *__return_ptr, uint64_t))v6;
  if ((v6 & 0x8000000000000000) == 0)
  {
    uint64_t v4 = sub_1001B1E64((void *)(a1 + *(int *)(v2 + 24)), *(void *)(a1 + *(int *)(v2 + 24) + 24));
    sub_1001B1E64((void *)(*v4 + 32), *(void *)(*v4 + 56));
    type metadata accessor for ReportWeatherExposureEvent();
    sub_1002B4170(&qword_100E66AB8, (void (*)(uint64_t))&type metadata accessor for ReportWeatherExposureEvent);
    Tracker.submitDiagnosticEvent<A>(_:onlyIfTimed:completion:)();
  }
  return sub_100274E38((uint64_t)v3);
}

uint64_t sub_1002B2658@<X0>(uint64_t a1@<X2>, void *a2@<X8>)
{
  *a2 = *(void *)(a1 + 16);
  return swift_retain();
}

uint64_t sub_1002B26A4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = *a1;
  swift_beginAccess();
  *(void *)(a4 + 16) = v7;
  swift_retain();
  swift_release();
  uint64_t v8 = type metadata accessor for ReportWeatherView();
  sub_1001B1E64((void *)(a5 + *(int *)(v8 + 24)), *(void *)(a5 + *(int *)(v8 + 24) + 24));
  uint64_t v10 = v7;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  uint64_t v16 = 0;
  return sub_100874554(&v10);
}

uint64_t sub_1002B274C@<X0>(void *a1@<X0>, const void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = sub_1001B1E64(a1, a1[3]);
  sub_10020D948(*v5 + 16, a3);
  memcpy((void *)(a3 + 40), a2, 0x60uLL);

  return sub_1002B3F78((uint64_t)a2);
}

uint64_t sub_1002B27AC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ReportWeatherView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = sub_10017DF08(&qword_100E66BB8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ButtonRole.cancel.getter();
  uint64_t v8 = type metadata accessor for ButtonRole();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v8);
  sub_1002B3F24(a1, (uint64_t)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for ReportWeatherView);
  unint64_t v9 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v10 = swift_allocObject();
  sub_1002B3430((uint64_t)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9);
  return Button.init(role:action:label:)();
}

uint64_t sub_1002B295C()
{
  uint64_t v0 = type metadata accessor for PresentationMode();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_10017DF08(&qword_100E669A0);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005D1E94();
  Binding.wrappedValue.getter();
  PresentationMode.dismiss()();
  Binding.wrappedValue.setter();
  return sub_100178160((uint64_t)v3, &qword_100E669A0);
}

uint64_t sub_1002B2A64@<X0>(uint64_t a1@<X8>)
{
  return sub_1002B3200(a1);
}

uint64_t sub_1002B2A80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void (*v14)(uint64_t *__return_ptr, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t KeyPath;
  uint64_t v23;
  uint64_t *v24;
  void (*v25)(uint64_t *__return_ptr, uint64_t);
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  void v36[2];
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  unint64_t v46 = a2;
  uint64_t v3 = type metadata accessor for ReportWeatherView();
  uint64_t v4 = v3 - 8;
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v3);
  uint64_t v7 = sub_10017DF08(&qword_100E65388);
  uint64_t v42 = *(void *)(v7 - 8);
  uint64_t v43 = v7;
  __chkstk_darwin(v7);
  unint64_t v9 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_10017DF08(&qword_100E66BA0);
  __chkstk_darwin(v40);
  uint64_t v47 = (uint64_t)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_10017DF08(&qword_100E66B88);
  __chkstk_darwin(v44);
  uint64_t v45 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002B3F24(a1, (uint64_t)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for ReportWeatherView);
  unint64_t v12 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v13 = swift_allocObject();
  sub_1002B3430((uint64_t)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12);
  uint64_t v41 = v9;
  Button.init(action:label:)();
  uint64_t v39 = a1 + *(int *)(v4 + 28);
  swift_retain();
  sub_10024E2B4((void (**)(uint64_t *__return_ptr, uint64_t))&v48);
  swift_release();
  long long v14 = (void (*)(uint64_t *__return_ptr, uint64_t))v48;
  if (v48 < 0)
  {
    sub_100274E38(v48);
    uint64_t v17 = v42;
    uint64_t v16 = v43;
    uint64_t v19 = v40;
    uint64_t v18 = v41;
  }
  else
  {
    uint64_t v38 = v49;
    v36[1] = v50;
    v36[0] = v51;
    long long v15 = swift_retain();
    uint64_t v37 = sub_100692BB8(v15);
    sub_100274E38((uint64_t)v14);
    sub_100274E38((uint64_t)v14);
    uint64_t v17 = v42;
    uint64_t v16 = v43;
    uint64_t v19 = v40;
    uint64_t v18 = v41;
    if (v37)
    {
      uint64_t v20 = static Color.white.getter();
      goto LABEL_6;
    }
  }
  uint64_t v20 = static Color.gray.getter();
LABEL_6:
  uint64_t v21 = v20;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v23 = v47;
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 16))(v47, v18, v16);
  uint64_t v24 = (uint64_t *)(v23 + *(int *)(v19 + 36));
  *uint64_t v24 = KeyPath;
  v24[1] = v21;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v18, v16);
  swift_retain();
  sub_10024E2B4((void (**)(uint64_t *__return_ptr, uint64_t))&v48);
  swift_release();
  uint64_t v25 = (void (*)(uint64_t *__return_ptr, uint64_t))v48;
  if (v48 < 0)
  {
    sub_100274E38(v48);
    uint64_t v27 = 1;
  }
  else
  {
    uint64_t v42 = v49;
    uint64_t v43 = v50;
    uint64_t v26 = swift_retain();
    LODWORD(v41) = sub_100692BB8(v26);
    sub_100274E38((uint64_t)v25);
    sub_100274E38((uint64_t)v25);
    uint64_t v27 = v41 ^ 1;
  }
  unint64_t v29 = (uint64_t)v45;
  uint64_t v28 = v46;
  uint64_t v30 = v44;
  uint64_t v31 = swift_getKeyPath();
  uint64_t v32 = swift_allocObject();
  *(unsigned char *)(v32 + 16) = v27 & 1;
  uint64_t v33 = v47;
  sub_10006DF38(v47, v29, &qword_100E66BA0);
  uint64_t v34 = (uint64_t *)(v29 + *(int *)(v30 + 36));
  char *v34 = v31;
  v34[1] = (uint64_t)sub_100212764;
  v34[2] = v32;
  sub_100178160(v33, &qword_100E66BA0);
  return sub_10020E72C(v29, v28, &qword_100E66B88);
}

uint64_t sub_1002B3020(uint64_t a1)
{
  void (*v3)(uint64_t *__return_ptr, uint64_t);
  unint64_t v5;

  static Animation.timingCurve(_:_:_:_:duration:)();
  withAnimation<A>(_:_:)();
  swift_release();
  uint64_t v2 = type metadata accessor for ReportWeatherView();
  swift_retain();
  sub_10024E2B4((void (**)(uint64_t *__return_ptr, uint64_t))&v5);
  swift_release();
  uint64_t v3 = (void (*)(uint64_t *__return_ptr, uint64_t))v5;
  if ((v5 & 0x8000000000000000) == 0)
  {
    sub_1001B1E64((void *)(a1 + *(int *)(v2 + 24)), *(void *)(a1 + *(int *)(v2 + 24) + 24));
    sub_1008746B8((uint64_t)v3);
  }
  return sub_100274E38((uint64_t)v3);
}

uint64_t sub_1002B3170()
{
  return State.wrappedValue.setter();
}

uint64_t sub_1002B31E4@<X0>(uint64_t a1@<X8>)
{
  return sub_1002B3200(a1);
}

uint64_t sub_1002B3200@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t result = Text.init(_:tableName:bundle:comment:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

void sub_1002B3274(uint64_t a1@<X0>, long long *a2@<X2>, uint64_t a3@<X8>)
{
  sub_10020E72C(a1, a3, &qword_100E669A8);
  uint64_t v5 = (int *)type metadata accessor for ReportWeatherView();
  uint64_t v6 = (uint64_t *)(a3 + v5[5]);
  sub_10017DF08(&qword_100E64830);
  sub_1001246C8(&qword_100E64838, &qword_100E64830);
  *uint64_t v6 = ObservedObject.init(wrappedValue:)();
  v6[1] = v7;
  sub_1001262E4(a2, a3 + v5[6]);
  uint64_t v8 = a3 + v5[7];
  State.init(wrappedValue:)();
  *(unsigned char *)uint64_t v8 = v14;
  *(void *)(v8 + 8) = v15;
  unint64_t v9 = (Swift::String *)(a3 + v5[8]);
  id v10 = [self mainBundle];
  v16._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
  v16._object = (void *)0x8000000100C97F60;
  v11._object = (void *)0x8000000100C97F30;
  v11._uint64_t countAndFlagsBits = 0xD000000000000020;
  v12._uint64_t countAndFlagsBits = 0x612074726F706552;
  v12._object = (void *)0xEF6575737349206ELL;
  Swift::String v13 = NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v16);

  *unint64_t v9 = v13;
}

uint64_t sub_1002B341C@<X0>(uint64_t a1@<X8>)
{
  return sub_1002B0D28(*(void *)(v1 + 16), a1);
}

uint64_t sub_1002B3430(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReportWeatherView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002B3494()
{
  return sub_1002B3C10(sub_1002B2478);
}

uint64_t sub_1002B34B0()
{
  return sub_1002B3C10(sub_1002B2514);
}

uint64_t sub_1002B34C8()
{
  return sub_1002B34F0(&qword_100E66AA0, &qword_100E66A68, (void (*)(void))sub_1002B3570);
}

uint64_t sub_1002B34F0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1002B3570()
{
  unint64_t result = qword_100E66AA8;
  if (!qword_100E66AA8)
  {
    sub_10018C6DC(&qword_100E66A60);
    sub_1001246C8(&qword_100E66AB0, &qword_100E66A58);
    sub_1001246C8((unint64_t *)&qword_100E64F80, (uint64_t *)&unk_100EAA770);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E66AA8);
  }
  return result;
}

unint64_t sub_1002B3634()
{
  unint64_t result = qword_100E66B00;
  if (!qword_100E66B00)
  {
    sub_10018C6DC(&qword_100E66AC8);
    sub_1002B36D4();
    sub_1001246C8(&qword_100E66B28, &qword_100E66B30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E66B00);
  }
  return result;
}

unint64_t sub_1002B36D4()
{
  unint64_t result = qword_100E66B08;
  if (!qword_100E66B08)
  {
    sub_10018C6DC(&qword_100E66B10);
    sub_1002B4170(&qword_100E66B18, (void (*)(uint64_t))type metadata accessor for ReportWeatherContentView);
    sub_1002B4170(&qword_100E66B20, (void (*)(uint64_t))type metadata accessor for SafariSheetModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E66B08);
  }
  return result;
}

uint64_t sub_1002B37B0()
{
  return sub_1002B20D8();
}

unint64_t sub_1002B37B8()
{
  unint64_t result = qword_100E66B58;
  if (!qword_100E66B58)
  {
    sub_10018C6DC(&qword_100E66AE8);
    sub_10018C6DC(&qword_100E66AD8);
    sub_10018C6DC(&qword_100E66AD0);
    sub_10018C6DC(&qword_100E66B38);
    sub_10018C6DC(&qword_100E66AC8);
    sub_1002B3634();
    swift_getOpaqueTypeConformance2();
    sub_10018C6DC(&qword_100E66B40);
    sub_1001246C8(&qword_100E66B48, &qword_100E66B40);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1001246C8(&qword_100E66B60, &qword_100E66B68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E66B58);
  }
  return result;
}

uint64_t sub_1002B3980()
{
  return sub_1002B27AC(*(void *)(v0 + 16));
}

uint64_t sub_1002B3988@<X0>(uint64_t a1@<X8>)
{
  return sub_1002B2A80(*(void *)(v1 + 16), a1);
}

unint64_t sub_1002B3990()
{
  unint64_t result = qword_100E66B90;
  if (!qword_100E66B90)
  {
    sub_10018C6DC(&qword_100E66B88);
    sub_1002B3A30();
    sub_1001246C8(&qword_100E66BA8, &qword_100E66BB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E66B90);
  }
  return result;
}

unint64_t sub_1002B3A30()
{
  unint64_t result = qword_100E66B98;
  if (!qword_100E66B98)
  {
    sub_10018C6DC(&qword_100E66BA0);
    sub_1001246C8(&qword_100E653A8, &qword_100E65388);
    sub_1001246C8((unint64_t *)&qword_100E64F80, (uint64_t *)&unk_100EAA770);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E66B98);
  }
  return result;
}

uint64_t sub_1002B3AF8()
{
  return sub_1002B3C10(sub_1002B3020);
}

uint64_t sub_1002B3B18@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1002B3B48@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1002B3B78()
{
  return EnvironmentValues.isEnabled.setter();
}

uint64_t sub_1002B3BA0()
{
  return EnvironmentValues.isEnabled.setter();
}

uint64_t sub_1002B3BC8()
{
  return swift_deallocObject();
}

uint64_t sub_1002B3BD8()
{
  return sub_1002B3170();
}

uint64_t sub_1002B3BF8()
{
  return sub_1002B3C10((uint64_t (*)(uint64_t))sub_1002B295C);
}

uint64_t sub_1002B3C10(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = type metadata accessor for ReportWeatherView();
  sub_1001627C0(v2);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return a1(v4);
}

uint64_t sub_1002B3C64()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1002B3CBC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002B274C(a1, (const void *)(v2 + 16), a2);
}

uint64_t sub_1002B3CC4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002B3CFC()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002B3D3C@<X0>(void *a1@<X8>)
{
  return sub_1002B2658(*(void *)(v1 + 32), a1);
}

uint64_t sub_1002B3D48()
{
  type metadata accessor for ReportWeatherView();
  sub_100179CD4();
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  swift_unknownObjectRelease();
  swift_release();
  sub_10017DF08(&qword_100E65310);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    uint64_t v4 = v0 + ((v2 + 40) & ~v2) + *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    type metadata accessor for PresentationMode();
    sub_100162E4C();
    (*(void (**)(uint64_t))(v5 + 8))(v4);
  }
  sub_100181000();
  sub_10019FB58();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1002B3E6C(uint64_t *a1)
{
  uint64_t v3 = type metadata accessor for ReportWeatherView();
  sub_1001627C0(v3);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_1002B26A4(a1, v5, v6, v7, v8);
}

uint64_t sub_1002B3ECC@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1002C4CB4(*a1);
  *a2 = result & 1;
  return result;
}

uint64_t sub_1002B3EFC(char *a1)
{
  return sub_1002C4CC4(*a1);
}

uint64_t sub_1002B3F24(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_1002B3F78(uint64_t a1)
{
  return a1;
}

unint64_t sub_1002B3FE8()
{
  unint64_t result = qword_100E66BD8;
  if (!qword_100E66BD8)
  {
    sub_10018C6DC(&qword_100E66BE0);
    sub_1002B4094();
    sub_1002B4170((unint64_t *)&qword_100E66BF8, (void (*)(uint64_t))type metadata accessor for AutomationInfoViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E66BD8);
  }
  return result;
}

unint64_t sub_1002B4094()
{
  unint64_t result = qword_100E66BE8;
  if (!qword_100E66BE8)
  {
    sub_10018C6DC(&qword_100E66A80);
    sub_10018C6DC(&qword_100E66A70);
    sub_1002B34F0(&qword_100E66A98, &qword_100E66A70, (void (*)(void))sub_1002B34C8);
    swift_getOpaqueTypeConformance2();
    sub_10022736C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E66BE8);
  }
  return result;
}

uint64_t sub_1002B4170(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002B41C8()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1002B4200(uint64_t a1, uint64_t a2)
{
  return sub_1001A6E70(a1, a2, (uint64_t (*)(void, uint64_t, void, uint64_t))sub_1001A6F7C, (uint64_t (*)(void))&type metadata accessor for Location.Identifier);
}

uint64_t sub_1002B422C(uint64_t a1, uint64_t a2)
{
  return sub_1001A6E70(a1, a2, (uint64_t (*)(void, uint64_t, void, uint64_t))sub_1001A6F7C, (uint64_t (*)(void))&type metadata accessor for DayWeather);
}

uint64_t sub_1002B4258(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v3 = *(void *)(a2 + 16);
  uint64_t result = sub_1001A6F7C(0, result, v3);
  if (v4) {
    unint64_t v5 = v3;
  }
  else {
    unint64_t v5 = result;
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_9;
  }
  if (v3 >= v5) {
    return a2;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1002B42C8(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    String.index(_:offsetBy:limitedBy:)();
    uint64_t v1 = String.subscript.getter();
    swift_bridgeObjectRelease();
    return v1;
  }
  return result;
}

void *assignWithCopy for DailyForecastFilter.DailyForecastFilterConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  return a1;
}

uint64_t assignWithTake for DailyForecastFilter.DailyForecastFilterConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for DailyForecastFilter.DailyForecastFilterConfiguration(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DailyForecastFilter.DailyForecastFilterConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t destroy for DailyForecastValidationError()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for DailyForecastValidationError(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for DailyForecastValidationError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DailyForecastValidationError(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DailyForecastValidationError(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DailyForecastValidationError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1002B4610(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, a1, v2);
  swift_retain();
  Atomic.wrappedValue.setter();
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t type metadata accessor for SevereNhpNewsContentView()
{
  return sub_100109098();
}

uint64_t sub_1002B4718()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002B475C@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v60 = a4;
  uint64_t v53 = a3;
  uint64_t v58 = a7;
  int v10 = a2;
  unsigned int v11 = a2 & 0x100;
  v71[4] = a5;
  v71[5] = a5;
  v71[6] = a5;
  v71[7] = a5;
  sub_100179D2C();
  uint64_t v51 = sub_10017F7C0();
  uint64_t v57 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v54 = v12;
  __chkstk_darwin(v13);
  sub_100162EF8();
  uint64_t v56 = v14;
  __chkstk_darwin(v15);
  uint64_t v55 = (uint64_t)&v43 - v16;
  v71[0] = a5;
  v71[1] = a5;
  v71[2] = a5;
  v71[3] = a5;
  v71[4] = type metadata accessor for Optional();
  v71[5] = a5;
  v71[6] = a5;
  v71[7] = a5;
  v71[8] = a5;
  sub_100179D2C();
  sub_10017F7C0();
  uint64_t v52 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v50 = v17;
  __chkstk_darwin(v18);
  sub_100162EF8();
  uint64_t v59 = v19;
  __chkstk_darwin(v20);
  uint64_t v61 = (uint64_t)&v43 - v21;
  if (v10)
  {
    if (v10 == 1)
    {
      if (v11)
      {
        uint64_t v22 = &qword_100E8A290;
        goto LABEL_11;
      }
    }
    else if (v11)
    {
      uint64_t v22 = &qword_100E8A6E0;
      goto LABEL_11;
    }
    uint64_t v22 = &qword_100E8A4B8;
    goto LABEL_11;
  }
  if (v11) {
    uint64_t v22 = &qword_100E89E40;
  }
  else {
    uint64_t v22 = &qword_100E8A068;
  }
LABEL_11:
  memcpy(v71, v22, sizeof(v71));
  uint64_t v23 = memcpy(v70, v71, sizeof(v70));
  __chkstk_darwin(v23);
  *(&v43 - 8) = a5;
  *(&v43 - 7) = a6;
  uint64_t v44 = a6;
  uint64_t v45 = a1;
  *(&v43 - 6) = a1;
  int v46 = v10;
  *((unsigned char *)&v43 - 40) = v10;
  unsigned int v24 = v11 >> 8;
  *((unsigned char *)&v43 - 39) = BYTE1(v11);
  uint64_t v25 = v60;
  *(&v43 - 4) = v53;
  *(&v43 - 3) = v25;
  *(&v43 - 2) = (uint64_t)v70;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v27 = v59;
  Group<A>.init(content:)();
  uint64_t v69 = WitnessTable;
  uint64_t v28 = v52;
  uint64_t v47 = swift_getWitnessTable();
  sub_100121584(v27, v28, v61);
  uint64_t v29 = v50;
  uint64_t v48 = *(uint64_t (**)(uint64_t, uint64_t))(v50 + 8);
  uint64_t v49 = v50 + 8;
  uint64_t v30 = v48(v27, v28);
  __chkstk_darwin(v30);
  uint64_t v31 = v44;
  *(&v43 - 8) = a5;
  *(&v43 - 7) = v31;
  *(&v43 - 6) = v45;
  *((unsigned char *)&v43 - 40) = v46;
  *((unsigned char *)&v43 - 39) = v24;
  uint64_t v32 = v60;
  *(&v43 - 4) = v33;
  *(&v43 - 3) = v32;
  *(&v43 - 2) = (uint64_t)v70;
  uint64_t v34 = swift_getWitnessTable();
  uint64_t v35 = v56;
  Group<A>.init(content:)();
  uint64_t v68 = v34;
  uint64_t v36 = v57;
  uint64_t v60 = swift_getWitnessTable();
  uint64_t v37 = v55;
  sub_100121584(v35, v36, v55);
  uint64_t v38 = v54;
  uint64_t v39 = *(void (**)(void))(v54 + 8);
  sub_10017C768();
  v39();
  uint64_t v40 = v59;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 16))(v59, v61, v28);
  uint64_t v66 = v40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 16))(v35, v37, v36);
  uint64_t v67 = v35;
  uint64_t v64 = v28;
  uint64_t v65 = v36;
  uint64_t v62 = v47;
  uint64_t v63 = v60;
  sub_1006E9080();
  sub_10017C768();
  v39();
  uint64_t v41 = v48;
  v48(v61, v28);
  sub_10017C768();
  v39();
  return v41(v40, v28);
}

uint64_t sub_1002B4C34@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, uint64_t a3@<X3>, void *a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v135 = a6;
  uint64_t v136 = a2;
  uint64_t v109 = a7;
  uint64_t v12 = sub_10017DF08(&qword_100E64E80);
  __chkstk_darwin(v12 - 8);
  uint64_t v107 = (char *)&v103 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = type metadata accessor for Optional();
  uint64_t v124 = *(void *)(v131 - 8);
  __chkstk_darwin(v131);
  char v130 = (char *)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v129 = (char *)&v103 - v16;
  uint64_t v106 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v106);
  uint64_t v104 = (uint64_t)&v103 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v103 - v19;
  uint64_t v21 = *(void *)(a5 - 8);
  __chkstk_darwin(v22);
  uint64_t v123 = (char *)&v103 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v122 = (char *)&v103 - v25;
  __chkstk_darwin(v26);
  uint64_t v121 = (char *)&v103 - v27;
  __chkstk_darwin(v28);
  uint64_t v119 = (char *)&v103 - v29;
  __chkstk_darwin(v30);
  uint64_t v120 = (char *)&v103 - v31;
  __chkstk_darwin(v32);
  uint64_t v118 = (char *)&v103 - v33;
  __chkstk_darwin(v34);
  uint64_t v117 = (char *)&v103 - v35;
  __chkstk_darwin(v36);
  uint64_t v116 = (char *)&v103 - v37;
  __chkstk_darwin(v38);
  uint64_t v115 = (char *)&v103 - v39;
  __chkstk_darwin(v40);
  double v126 = (char *)&v103 - v41;
  __chkstk_darwin(v42);
  uint64_t v133 = (char *)&v103 - v43;
  __chkstk_darwin(v44);
  uint64_t v128 = (uint64_t)&v103 - v45;
  __chkstk_darwin(v46);
  uint64_t v127 = (uint64_t)&v103 - v47;
  __chkstk_darwin(v48);
  uint64_t v125 = (uint64_t)&v103 - v49;
  __chkstk_darwin(v50);
  uint64_t v52 = (char *)&v103 - v51;
  __chkstk_darwin(v53);
  uint64_t v55 = (char *)&v103 - v54;
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_severeAlert, (uint64_t)v20);
  a2(v20, a4[49], a4[50], a4[51], a4[52]);
  sub_1001F2B74((uint64_t)v20);
  uint64_t v114 = v55;
  sub_100121584((uint64_t)v52, a5, (uint64_t)v55);
  uint64_t v108 = v21;
  uint64_t v56 = *(void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v57 = a5;
  v56(v52, a5);
  uint64_t v58 = a1;
  uint64_t v134 = a1;
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_nextHourPrecipitation, (uint64_t)v20);
  uint64_t v59 = v136;
  v136(v20, a4[37], a4[38], a4[39], a4[40]);
  sub_1001F2B74((uint64_t)v20);
  sub_100121584((uint64_t)v52, v57, v125);
  v56(v52, v57);
  sub_1001F3734(v58 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_newsArticle, (uint64_t)v20);
  v59(v20, a4[33], a4[34], a4[35], a4[36]);
  sub_1001F2B74((uint64_t)v20);
  sub_100121584((uint64_t)v52, v57, v127);
  v56(v52, v57);
  uint64_t v60 = v134;
  sub_1001F3734(v134 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_airQuality, (uint64_t)v20);
  uint64_t v61 = *a4;
  uint64_t v62 = a4[1];
  uint64_t v63 = a4[2];
  uint64_t v64 = a4[3];
  uint64_t v111 = a3;
  uint64_t v112 = a4;
  v136(v20, v61, v62, v63, v64);
  uint64_t v105 = v20;
  sub_1001F2B74((uint64_t)v20);
  sub_100121584((uint64_t)v52, v57, v128);
  uint64_t v132 = v52;
  uint64_t v65 = v52;
  uint64_t v66 = (uint64_t)v107;
  uint64_t v113 = v57;
  uint64_t v110 = (void (*)(uint64_t, uint64_t))v56;
  v56(v65, v57);
  uint64_t v67 = v60 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_map;
  swift_beginAccess();
  sub_10027A764(v67, v66);
  if (_s7Weather24LocationCompositionStateOwet_0(v66, 1, v106) == 1)
  {
    sub_10027A7CC(v66);
  }
  else
  {
    uint64_t v68 = v66;
    uint64_t v69 = v104;
    sub_10027A82C(v68, v104);
    sub_10027A890((uint64_t)(v112 + 24), (uint64_t)v165);
    sub_10027A890((uint64_t)v165, (uint64_t)v166);
    if (v167 != 1)
    {
      uint64_t v72 = (uint64_t)v133;
      v136((char *)v69, v166[0], v166[1], v166[2], v166[3]);
      sub_1001F2B74(v69);
      uint64_t v73 = (uint64_t)v132;
      uint64_t v74 = v113;
      sub_100121584(v72, v113, (uint64_t)v132);
      uint64_t v75 = v110;
      v110(v72, v74);
      uint64_t v76 = (uint64_t)v130;
      sub_100121584(v73, v74, (uint64_t)v130);
      v75(v73, v74);
      _s7Weather24LocationCompositionStateOwst_0(v76, 0, 1, v74);
      sub_1000CA354();
      uint64_t v77 = *(void (**)(uint64_t, uint64_t))(v124 + 8);
      uint64_t v107 = (char *)((v124 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
      v77(v76, v131);
      goto LABEL_7;
    }
    sub_1001F2B74(v69);
  }
  uint64_t v70 = (uint64_t)v130;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v130, 1, 1, v113);
  sub_1000CA354();
  uint64_t v71 = *(void (**)(uint64_t, uint64_t))(v124 + 8);
  uint64_t v107 = (char *)((v124 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
  v71(v70, v131);
LABEL_7:
  uint64_t v78 = v134;
  uint64_t v79 = (uint64_t)v105;
  sub_1001F3734(*(void *)(v134 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v105);
  uint64_t v80 = v112;
  uint64_t v81 = (uint64_t)v133;
  uint64_t v82 = (void (*)(uint64_t, void, void, void, void))v136;
  v136((char *)v79, v112[16], v112[17], v112[18], v112[19]);
  sub_1001F2B74(v79);
  uint64_t v83 = v113;
  sub_100121584(v81, v113, (uint64_t)v132);
  uint64_t v84 = v110;
  v110(v81, v83);
  sub_1001F3734(*(void *)(v78 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v79);
  uint64_t v85 = (uint64_t)v126;
  v82(v79, v80[8], v80[9], v80[10], v80[11]);
  sub_1001F2B74(v79);
  uint64_t v86 = v135;
  sub_100121584(v85, v83, v81);
  v84(v85, v83);
  sub_1001F3734(*(void *)(v134 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, v79);
  uint64_t v87 = (uint64_t)v115;
  v136((char *)v79, v80[57], v80[58], v80[59], v80[60]);
  sub_1001F2B74(v79);
  sub_100121584(v87, v83, v85);
  v84(v87, v83);
  sub_1001F3734(*(void *)(v134 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, v79);
  uint64_t v88 = (uint64_t)v116;
  v136((char *)v79, v80[53], v80[54], v80[55], v80[56]);
  sub_1001F2B74(v79);
  sub_100121584(v88, v83, v87);
  v84(v88, v83);
  uint64_t v89 = *(void (**)(void))(v108 + 16);
  ((void (*)(uint64_t, char *, uint64_t))v89)(v88, v114, v83);
  uint64_t v156 = v88;
  uint64_t v90 = v117;
  ((void (*)(char *, uint64_t, uint64_t))v89)(v117, v125, v83);
  uint64_t v157 = v90;
  uint64_t v91 = v118;
  ((void (*)(char *, uint64_t, uint64_t))v89)(v118, v127, v83);
  uint64_t v158 = v91;
  uint64_t v92 = v120;
  ((void (*)(char *, uint64_t, uint64_t))v89)(v120, v128, v83);
  uint64_t v159 = v92;
  uint64_t v93 = v124 + 16;
  uint64_t v94 = (uint64_t)v130;
  (*(void (**)(char *, char *, uint64_t))(v124 + 16))(v130, v129, v131);
  uint64_t v160 = v94;
  unint64_t v95 = v119;
  v89();
  uint64_t v161 = v95;
  uint64_t v96 = v121;
  ((void (*)(char *, char *, uint64_t))v89)(v121, v133, v83);
  uint64_t v162 = v96;
  uint64_t v97 = v122;
  ((void (*)(char *, char *, uint64_t))v89)(v122, v126, v83);
  uint64_t v163 = v97;
  char v98 = v123;
  uint64_t v99 = v115;
  ((void (*)(char *, char *, uint64_t))v89)(v123, v115, v83);
  uint64_t v164 = v98;
  uint64_t v147 = v83;
  uint64_t v148 = v83;
  uint64_t v149 = v83;
  uint64_t v150 = v83;
  uint64_t v100 = v131;
  uint64_t v151 = v131;
  uint64_t v152 = v83;
  uint64_t v153 = v83;
  uint64_t v154 = v83;
  uint64_t v155 = v83;
  uint64_t v138 = v86;
  uint64_t v139 = v86;
  uint64_t v140 = v86;
  uint64_t v141 = v86;
  uint64_t v137 = v86;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v143 = v86;
  uint64_t v144 = v86;
  uint64_t v145 = v86;
  uint64_t v146 = v86;
  sub_1006E9080();
  v84((uint64_t)v99, v83);
  v84((uint64_t)v126, v83);
  v84((uint64_t)v133, v83);
  v84((uint64_t)v132, v83);
  uint64_t v101 = *(void (**)(char *, uint64_t))(v93 - 8);
  v101(v129, v100);
  v84(v128, v83);
  v84(v127, v83);
  v84(v125, v83);
  v84((uint64_t)v114, v83);
  v84((uint64_t)v123, v83);
  v84((uint64_t)v122, v83);
  v84((uint64_t)v121, v83);
  v84((uint64_t)v119, v83);
  v101(v130, v100);
  v84((uint64_t)v120, v83);
  v84((uint64_t)v118, v83);
  v84((uint64_t)v117, v83);
  return ((uint64_t (*)(char *, uint64_t))v84)(v116, v83);
}

uint64_t sub_1002B58D4@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v102 = a5;
  uint64_t v84 = a6;
  uint64_t v10 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = *(void *)(a4 - 8);
  uint64_t v13 = v82;
  __chkstk_darwin(v14);
  uint64_t v83 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  char v98 = (char *)&v82 - v17;
  __chkstk_darwin(v18);
  uint64_t v97 = (char *)&v82 - v19;
  __chkstk_darwin(v20);
  uint64_t v96 = (char *)&v82 - v21;
  __chkstk_darwin(v22);
  unint64_t v95 = (char *)&v82 - v23;
  __chkstk_darwin(v24);
  uint64_t v93 = (char *)&v82 - v25;
  __chkstk_darwin(v26);
  uint64_t v92 = (char *)&v82 - v27;
  __chkstk_darwin(v28);
  uint64_t v90 = (char *)&v82 - v29;
  __chkstk_darwin(v30);
  uint64_t v89 = (char *)&v82 - v31;
  __chkstk_darwin(v32);
  uint64_t v101 = (char *)&v82 - v33;
  __chkstk_darwin(v34);
  uint64_t v87 = (char *)&v82 - v35;
  __chkstk_darwin(v36);
  uint64_t v86 = (char *)&v82 - v37;
  __chkstk_darwin(v38);
  uint64_t v100 = (char *)&v82 - v39;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v82 - v41;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v82 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v82 - v47;
  uint64_t v94 = (char *)&v82 - v47;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v12);
  uint64_t v49 = a3[65];
  uint64_t v50 = a3[66];
  uint64_t v51 = a3[67];
  uint64_t v52 = a3[68];
  uint64_t v99 = a2;
  a2(v12, v49, v50, v51, v52);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v45, a4, (uint64_t)v48);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v91 = v45;
  v53(v45, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)v12);
  a2(v12, a3[45], a3[46], a3[47], a3[48]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v42, a4, (uint64_t)v45);
  uint64_t v88 = v42;
  v53(v42, a4);
  uint64_t v85 = a1;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v12);
  uint64_t v54 = (uint64_t)v100;
  v99(v12, a3[12], a3[13], a3[14], a3[15]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v54, a4, (uint64_t)v42);
  uint64_t v55 = v54;
  v53((char *)v54, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)v12);
  uint64_t v56 = (uint64_t)v86;
  uint64_t v57 = v99;
  v99(v12, a3[20], a3[21], a3[22], a3[23]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v56, a4, v55);
  v53((char *)v56, a4);
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v12);
  uint64_t v58 = (uint64_t)v87;
  v57(v12, a3[61], a3[62], a3[63], a3[64]);
  sub_1001F2B74((uint64_t)v12);
  uint64_t v59 = v58;
  sub_100121584(v58, a4, v56);
  v53((char *)v58, a4);
  uint64_t v60 = v85;
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)v12);
  uint64_t v61 = (uint64_t)v101;
  uint64_t v62 = v99;
  v99(v12, a3[41], a3[42], a3[43], a3[44]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v61, a4, v59);
  v53((char *)v61, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, (uint64_t)v12);
  uint64_t v63 = (uint64_t)v89;
  v62(v12, a3[29], a3[30], a3[31], a3[32]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v63, a4, (uint64_t)v101);
  v53((char *)v63, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, (uint64_t)v12);
  uint64_t v64 = a3[4];
  uint64_t v65 = a3[5];
  uint64_t v66 = a3[6];
  uint64_t v67 = a3[7];
  uint64_t v68 = (uint64_t)v90;
  v62(v12, v64, v65, v66, v67);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v68, a4, v63);
  v53((char *)v68, a4);
  uint64_t v69 = *(void (**)(uint64_t, char *, uint64_t))(v82 + 16);
  v69(v68, v94, a4);
  uint64_t v119 = v68;
  uint64_t v70 = v92;
  v69((uint64_t)v92, v91, a4);
  uint64_t v120 = v70;
  uint64_t v71 = v93;
  v69((uint64_t)v93, v88, a4);
  uint64_t v121 = v71;
  uint64_t v72 = v95;
  v69((uint64_t)v95, v100, a4);
  uint64_t v122 = v72;
  uint64_t v73 = v96;
  uint64_t v74 = v86;
  v69((uint64_t)v96, v86, a4);
  uint64_t v123 = v73;
  uint64_t v75 = v97;
  uint64_t v76 = v87;
  v69((uint64_t)v97, v87, a4);
  uint64_t v124 = v75;
  uint64_t v77 = v98;
  uint64_t v78 = (uint64_t)v101;
  v69((uint64_t)v98, v101, a4);
  uint64_t v125 = v77;
  uint64_t v79 = v83;
  uint64_t v80 = v89;
  v69((uint64_t)v83, v89, a4);
  double v126 = v79;
  uint64_t v111 = a4;
  uint64_t v112 = a4;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v115 = a4;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v103 = v102;
  uint64_t v104 = v102;
  uint64_t v105 = v102;
  uint64_t v106 = v102;
  uint64_t v107 = v102;
  uint64_t v108 = v102;
  uint64_t v109 = v102;
  uint64_t v110 = v102;
  sub_1006E9080();
  v53(v80, a4);
  v53((char *)v78, a4);
  v53(v76, a4);
  v53(v74, a4);
  v53(v100, a4);
  v53(v88, a4);
  v53(v91, a4);
  v53(v94, a4);
  v53(v79, a4);
  v53(v98, a4);
  v53(v97, a4);
  v53(v96, a4);
  v53(v95, a4);
  v53(v93, a4);
  v53(v92, a4);
  return ((uint64_t (*)(char *, uint64_t))v53)(v90, a4);
}

uint64_t sub_1002B6324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(v2 + 9)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_1002B475C(*(void *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_1002B6350()
{
  return sub_1002B6380((uint64_t (*)(void, void, void, void, void, void, void))sub_1002B4C34);
}

uint64_t sub_1002B6368()
{
  return sub_1002B6380((uint64_t (*)(void, void, void, void, void, void, void))sub_1002B58D4);
}

uint64_t sub_1002B6380(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  if (*(unsigned char *)(v1 + 41)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return a1(*(void *)(v1 + 32), v2 | *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1002B63B4()
{
  return swift_getWitnessTable();
}

uint64_t destroy for TemperatureAveragesDetailView(uint64_t a1)
{
  uint64_t v1 = a1 + 8;
  swift_release();

  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v1);
}

uint64_t initializeWithCopy for TemperatureAveragesDetailView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = a2 + 8;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v4;
  uint64_t v5 = v4;
  uint64_t v6 = **(void (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  swift_retain();
  v6(a1 + 8, v3, v5);
  return a1;
}

void *assignWithCopy for TemperatureAveragesDetailView(void *a1, void *a2)
{
  uint64_t v3 = a2 + 1;
  *a1 = *a2;
  swift_retain();
  swift_release();
  sub_1000C1E18(a1 + 1, v3);
  return a1;
}

uint64_t assignWithTake for TemperatureAveragesDetailView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for TemperatureAveragesDetailView(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TemperatureAveragesDetailView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TemperatureAveragesDetailView()
{
  return &type metadata for TemperatureAveragesDetailView;
}

uint64_t sub_1002B6698()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002B66B4@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static HorizontalAlignment.leading.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v3 = sub_10017DF08(&qword_100E66E20);
  return sub_1002B66FC(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_1002B66FC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v125 = a2;
  uint64_t v119 = type metadata accessor for DetailNewsComponentView();
  __chkstk_darwin(v119);
  uint64_t v112 = (uint64_t *)((char *)&v108 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_10017DF08(&qword_100E66E28);
  __chkstk_darwin(v4 - 8);
  uint64_t v118 = (uint64_t)&v108 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = type metadata accessor for DetailComponentContainerViewModel();
  __chkstk_darwin(v117);
  uint64_t v111 = (uint64_t)&v108 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v110 = (uint64_t)&v108 - v8;
  uint64_t v9 = sub_10017DF08(&qword_100E66E30);
  __chkstk_darwin(v9 - 8);
  uint64_t v124 = (uint64_t)&v108 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v131 = (uint64_t)&v108 - v12;
  uint64_t v116 = type metadata accessor for MonthlyAveragesChart();
  __chkstk_darwin(v116);
  uint64_t v123 = (uint64_t)&v108 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v130 = (uint64_t)&v108 - v15;
  uint64_t v132 = (int *)sub_10017DF08(&qword_100E66E38);
  __chkstk_darwin(v132);
  uint64_t v122 = (uint64_t)&v108 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v121 = (uint64_t)&v108 - v18;
  __chkstk_darwin(v19);
  uint64_t v120 = (uint64_t)&v108 - v20;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v108 - v22;
  uint64_t v24 = sub_10017DF08(&qword_100E66E40);
  __chkstk_darwin(v24 - 8);
  uint64_t v26 = (char *)&v108 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  __chkstk_darwin(v113);
  uint64_t v115 = (uint64_t)&v108 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v109 = (uint64_t)&v108 - v29;
  uint64_t v30 = sub_10017DF08(&qword_100E66E48);
  __chkstk_darwin(v30 - 8);
  uint64_t v129 = (uint64_t)&v108 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v128 = (uint64_t)&v108 - v33;
  uint64_t v34 = type metadata accessor for TemperatureAveragesHeroChartViewModel(0);
  __chkstk_darwin(v34 - 8);
  uint64_t v36 = (char *)&v108 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for TemperatureAveragesHeroChartView();
  uint64_t v38 = (int *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v40 = (char *)&v108 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  uint64_t v43 = (char *)&v108 - v42;
  uint64_t v44 = a1[4];
  uint64_t v45 = a1[5];
  uint64_t v114 = a1 + 1;
  uint64_t v46 = sub_1001B1E64(a1 + 1, v44);
  uint64_t v135 = v44;
  uint64_t v136 = *(void *)(v45 + 16);
  uint64_t v47 = sub_100170694((uint64_t *)&v133);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v44 - 8) + 16))(v47, v46, v44);
  sub_1002B75FC(*a1 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_heroChart, (uint64_t)v36, (void (*)(void))type metadata accessor for TemperatureAveragesHeroChartViewModel);
  *(void *)uint64_t v40 = swift_getKeyPath();
  v40[8] = 0;
  uint64_t v48 = (uint64_t *)&v40[v38[7]];
  *uint64_t v48 = swift_getKeyPath();
  sub_10017DF08(&qword_100E66E50);
  swift_storeEnumTagMultiPayload();
  *(void *)&v40[v38[8]] = 0x4030000000000000;
  sub_1001262E4(&v133, (uint64_t)&v40[v38[9]]);
  sub_1002B76B0((uint64_t)v36, (uint64_t)&v40[v38[10]], (void (*)(void))type metadata accessor for TemperatureAveragesHeroChartViewModel);
  uint64_t v127 = v40;
  double v126 = v43;
  sub_1002B76B0((uint64_t)v40, (uint64_t)v43, (void (*)(void))type metadata accessor for TemperatureAveragesHeroChartView);
  uint64_t v49 = *a1 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_summaryPlatterViewModel;
  swift_beginAccess();
  sub_10006DF38(v49, (uint64_t)v26, &qword_100E66E40);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v113) == 1)
  {
    sub_1001781AC((uint64_t)v26, &qword_100E66E40);
    uint64_t v50 = 1;
    uint64_t v51 = (uint64_t)v23;
    uint64_t v52 = v128;
    uint64_t v53 = v115;
    uint64_t v54 = v114;
  }
  else
  {
    uint64_t v55 = v109;
    sub_1002B76B0((uint64_t)v26, v109, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    uint64_t v53 = v115;
    sub_1002B75FC(v55, v115, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    uint64_t v56 = a1[4];
    uint64_t v57 = a1[5];
    uint64_t v54 = v114;
    uint64_t v58 = sub_1001B1E64(v114, v56);
    uint64_t v135 = v56;
    uint64_t v136 = *(void *)(v57 + 8);
    uint64_t v59 = sub_100170694((uint64_t *)&v133);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v56 - 8) + 16))(v59, v58, v56);
    sub_1002B75FC(v53, (uint64_t)v23, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    uint64_t v60 = v132;
    sub_10020D948((uint64_t)&v133, (uint64_t)&v23[v132[10]]);
    v23[v60[9]] = 0;
    uint64_t v61 = &v23[v60[11]];
    *(void *)uint64_t v61 = 0;
    *((void *)v61 + 1) = 0;
    uint64_t v62 = v60[12];
    swift_beginAccess();
    *(double *)&v23[v62] = sub_100592380();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v133);
    sub_1002B7650(v53, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    sub_1002B7650(v55, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    uint64_t v63 = v128;
    sub_1002B7594((uint64_t)v23, v128);
    uint64_t v50 = 0;
    uint64_t v51 = (uint64_t)v23;
    uint64_t v52 = v63;
  }
  _s7Weather24LocationCompositionStateOwst_0(v52, v50, 1, (uint64_t)v132);
  uint64_t v64 = *a1;
  uint64_t v65 = v130;
  sub_1002B75FC(*a1 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_averagesChart, v130, (void (*)(void))type metadata accessor for MonthlyAveragesChartModel);
  uint64_t v66 = v116;
  sub_10020D948((uint64_t)v54, v65 + *(int *)(v116 + 20));
  *(unsigned char *)(v65 + *(int *)(v66 + 24)) = 0;
  uint64_t v67 = v64 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_newsViewModel;
  swift_beginAccess();
  uint64_t v68 = v118;
  sub_10006DF38(v67, v118, &qword_100E66E28);
  if (_s7Weather24LocationCompositionStateOwet_0(v68, 1, v117) == 1)
  {
    sub_1001781AC(v68, &qword_100E66E28);
    uint64_t v69 = 1;
    uint64_t v70 = v131;
    uint64_t v71 = v119;
  }
  else
  {
    uint64_t v72 = v54;
    uint64_t v73 = v110;
    sub_1002B76B0(v68, v110, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
    uint64_t v74 = v111;
    sub_1002B75FC(v73, v111, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
    uint64_t v75 = a1[4];
    uint64_t v76 = a1[5];
    uint64_t v77 = sub_1001B1E64(v72, v75);
    uint64_t v135 = v75;
    uint64_t v136 = *(void *)(v76 + 8);
    uint64_t v78 = sub_100170694((uint64_t *)&v133);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v75 - 8) + 16))(v78, v77, v75);
    uint64_t v79 = v73;
    uint64_t v54 = v72;
    sub_1002B7650(v79, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v81 = (uint64_t)v112;
    *uint64_t v112 = KeyPath;
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    swift_storeEnumTagMultiPayload();
    uint64_t v71 = v119;
    sub_1002B76B0(v74, v81 + *(int *)(v119 + 20), (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
    sub_1001262E4(&v133, v81 + *(int *)(v71 + 24));
    *(unsigned char *)(v81 + *(int *)(v71 + 28)) = 0;
    uint64_t v70 = v131;
    sub_1002B76B0(v81, v131, (void (*)(void))type metadata accessor for DetailNewsComponentView);
    uint64_t v69 = 0;
  }
  _s7Weather24LocationCompositionStateOwst_0(v70, v69, 1, v71);
  sub_1002B75FC(*a1 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_aboutNormalRangePlatterViewModel, v53, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  uint64_t v82 = a1[4];
  uint64_t v83 = a1[5];
  uint64_t v84 = sub_1001B1E64(v54, v82);
  uint64_t v135 = v82;
  uint64_t v136 = *(void *)(v83 + 8);
  uint64_t v85 = sub_100170694((uint64_t *)&v133);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v82 - 8) + 16))(v85, v84, v82);
  uint64_t v86 = v120;
  sub_1002B75FC(v53, v120, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  uint64_t v87 = v53;
  uint64_t v88 = v132;
  sub_10020D948((uint64_t)&v133, v86 + v132[10]);
  *(unsigned char *)(v86 + v88[9]) = 0;
  uint64_t v89 = (void *)(v86 + v88[11]);
  *uint64_t v89 = 0;
  v89[1] = 0;
  uint64_t v90 = v88[12];
  swift_beginAccess();
  *(double *)(v86 + v90) = sub_100592380();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v133);
  sub_1002B7650(v87, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  sub_1002B7594(v86, v51);
  sub_1002B75FC(*a1 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_aboutAverageTemperaturePlatterViewModel, v87, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  uint64_t v119 = v51;
  uint64_t v92 = a1[4];
  uint64_t v91 = a1[5];
  uint64_t v93 = sub_1001B1E64(v54, v92);
  uint64_t v135 = v92;
  uint64_t v136 = *(void *)(v91 + 8);
  uint64_t v94 = sub_100170694((uint64_t *)&v133);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v92 - 8) + 16))(v94, v93, v92);
  uint64_t v95 = v121;
  sub_1002B75FC(v87, v121, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  sub_10020D948((uint64_t)&v133, v95 + v88[10]);
  *(unsigned char *)(v95 + v88[9]) = 0;
  uint64_t v96 = (void *)(v95 + v88[11]);
  *uint64_t v96 = 0;
  v96[1] = 0;
  uint64_t v97 = v88[12];
  *(double *)(v95 + v97) = sub_100592380();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v133);
  sub_1002B7650(v87, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  sub_1002B7594(v95, v86);
  uint64_t v98 = (uint64_t)v127;
  sub_1002B75FC((uint64_t)v126, (uint64_t)v127, (void (*)(void))type metadata accessor for TemperatureAveragesHeroChartView);
  *(void *)&long long v133 = v98;
  uint64_t v99 = v128;
  uint64_t v100 = v129;
  sub_10006DF38(v128, v129, &qword_100E66E48);
  *((void *)&v133 + 1) = v100;
  uint64_t v101 = v130;
  uint64_t v102 = v123;
  sub_1002B75FC(v130, v123, (void (*)(void))type metadata accessor for MonthlyAveragesChart);
  uint64_t v134 = v102;
  uint64_t v103 = v131;
  uint64_t v104 = v124;
  sub_10006DF38(v131, v124, &qword_100E66E30);
  uint64_t v135 = v104;
  uint64_t v105 = v119;
  sub_10006DF38(v119, v95, &qword_100E66E38);
  uint64_t v136 = v95;
  uint64_t v106 = v122;
  sub_10006DF38(v86, v122, &qword_100E66E38);
  uint64_t v137 = v106;
  sub_1004B88F4((uint64_t)&v133);
  sub_1001781AC(v86, &qword_100E66E38);
  sub_1001781AC(v105, &qword_100E66E38);
  sub_1001781AC(v103, &qword_100E66E30);
  sub_1002B7650(v101, (void (*)(void))type metadata accessor for MonthlyAveragesChart);
  sub_1001781AC(v99, &qword_100E66E48);
  sub_1002B7650((uint64_t)v126, (void (*)(void))type metadata accessor for TemperatureAveragesHeroChartView);
  sub_1001781AC(v106, &qword_100E66E38);
  sub_1001781AC(v95, &qword_100E66E38);
  sub_1001781AC(v104, &qword_100E66E30);
  sub_1002B7650(v102, (void (*)(void))type metadata accessor for MonthlyAveragesChart);
  sub_1001781AC(v129, &qword_100E66E48);
  return sub_1002B7650((uint64_t)v127, (void (*)(void))type metadata accessor for TemperatureAveragesHeroChartView);
}

uint64_t sub_1002B7594(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E66E38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002B75FC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_1002B7650(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1002B76B0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

unint64_t sub_1002B7714()
{
  unint64_t result = qword_100E66E58;
  if (!qword_100E66E58)
  {
    sub_10018C6DC(&qword_100E66E60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E66E58);
  }
  return result;
}

id sub_1002B7768()
{
  id result = sub_1002B7788();
  qword_100E66E68 = (uint64_t)result;
  return result;
}

id sub_1002B7788()
{
  id v0 = [objc_allocWithZone((Class)NSDateFormatter) init];
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setLocalizedDateFormatFromTemplate:v1];

  [v0 setFormattingContext:2];
  return v0;
}

uint64_t sub_1002B7808@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v36 = a2;
  uint64_t v33 = type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v6 = v5;
  uint64_t v31 = v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  uint64_t v35 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v31 - v16;
  uint64_t v18 = _s13CalendarStateVMa();
  uint64_t v19 = (int *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (uint64_t *)((char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(void *)a3 = swift_getKeyPath();
  *(unsigned char *)(a3 + 8) = 0;
  uint64_t v34 = a3;
  uint64_t v22 = type metadata accessor for CalendarView();
  uint64_t v23 = *(int *)(v22 + 20);
  uint64_t v24 = v22;
  uint64_t v32 = v22;
  sub_1002BB310(a1, a3 + v23, (void (*)(void))type metadata accessor for CalendarViewModel);
  sub_10020D948(v36, a3 + *(int *)(v24 + 28));
  uint64_t v25 = type metadata accessor for CalendarViewModel(0);
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v26(v17, a1 + *(int *)(v25 + 28), v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a1, v33);
  *uint64_t v21 = swift_getKeyPath();
  sub_10017DF08(&qword_100E66E70);
  swift_storeEnumTagMultiPayload();
  v26((char *)v21 + v19[7], (uint64_t)v17, v10);
  static Calendar.currentCalendar(with:)();
  static Date.distantFuture.getter();
  static Date.distantPast.getter();
  *(uint64_t *)((char *)v21 + v19[11]) = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v27 = v35;
  static Date.distantFuture.getter();
  sub_100162F0C();
  v29(v28);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v10);
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))((char *)v21 + v19[12], v27, v10);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v36);
  sub_1002BB40C(a1, (void (*)(void))type metadata accessor for CalendarViewModel);
  return sub_1002BB3B8((uint64_t)v21, v34 + *(int *)(v32 + 24), (void (*)(void))_s13CalendarStateVMa);
}

uint64_t sub_1002B7B44@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static Alignment.center.getter();
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 0;
  uint64_t v4 = sub_10017DF08(&qword_100E66F10);
  return sub_1002B7B98(v1, (__n128 *)(a1 + *(int *)(v4 + 44)));
}

uint64_t sub_1002B7B98@<X0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v103 = a2;
  uint64_t v3 = type metadata accessor for CalendarView();
  uint64_t v98 = *(void *)(v3 - 8);
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3 - 8);
  uint64_t v99 = v5;
  uint64_t v100 = (uint64_t)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_10017DF08(&qword_100E66F18);
  uint64_t v102 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  uint64_t v101 = (char *)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v113 = (char *)&v75 - v8;
  uint64_t v9 = type metadata accessor for PrimaryDividerStyle();
  uint64_t v96 = *(void *)(v9 - 8);
  uint64_t v97 = v9;
  __chkstk_darwin(v9);
  uint64_t v95 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Divider();
  uint64_t v93 = *(void *)(v11 - 8);
  uint64_t v94 = v11;
  __chkstk_darwin(v11);
  uint64_t v86 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100E66F20);
  uint64_t v111 = *(void *)(v13 - 8);
  uint64_t v112 = v13;
  __chkstk_darwin(v13);
  uint64_t v110 = (char *)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v108 = (char *)&v75 - v16;
  uint64_t v17 = sub_10017DF08(&qword_100E66F28);
  __chkstk_darwin(v17 - 8);
  uint64_t v109 = (uint64_t)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v81 = (char *)&v75 - v20;
  __chkstk_darwin(v21);
  uint64_t v116 = (uint64_t)&v75 - v22;
  uint64_t v85 = type metadata accessor for Date();
  uint64_t v105 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v106 = (char *)&v75 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v75 - v25;
  uint64_t v84 = (char *)&v75 - v25;
  uint64_t v27 = type metadata accessor for CalendarHeaderView();
  uint64_t v28 = (int *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v75 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v115 = (uint64_t)&v75 - v32;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v92 = v165;
  int v91 = v166;
  uint64_t v90 = v167;
  int v89 = v168;
  uint64_t v87 = v170;
  uint64_t v88 = v169;
  uint64_t v79 = v4;
  uint64_t v33 = *(int *)(v4 + 32);
  uint64_t v114 = a1;
  uint64_t v34 = a1 + v33;
  uint64_t v35 = _s13CalendarStateVMa();
  uint64_t v36 = Date.fullMonthAndYear(in:)();
  uint64_t v82 = v37;
  uint64_t v83 = v36;
  uint64_t v80 = v35;
  uint64_t v38 = *(void (**)(char *, uint64_t, uint64_t))(v105 + 16);
  uint64_t v39 = v26;
  uint64_t v40 = v85;
  v38(v39, v34 + *(int *)(v35 + 32), v85);
  v38(v106, v34 + *(int *)(v35 + 28), v40);
  type metadata accessor for CalendarViewModel(0);
  LOBYTE(v35) = static Date.< infix(_:_:)();
  LOBYTE(a1) = static Date.> infix(_:_:)();
  sub_10020D948(v114 + *(int *)(v79 + 36), (uint64_t)&v157);
  *(void *)uint64_t v30 = swift_getKeyPath();
  v30[8] = 0;
  uint64_t v41 = v84;
  uint64_t v42 = v82;
  *((void *)v30 + 2) = v83;
  *((void *)v30 + 3) = v42;
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v105 + 32);
  v43(&v30[v28[8]], v41, v40);
  v43(&v30[v28[9]], v106, v40);
  v30[v28[10]] = v35 & 1;
  v30[v28[11]] = a1 & 1;
  uint64_t v44 = v28[12];
  uint64_t v45 = v34;
  sub_1001262E4(&v157, (uint64_t)&v30[v44]);
  uint64_t v107 = v30;
  sub_1002BB3B8((uint64_t)v30, v115, (void (*)(void))type metadata accessor for CalendarHeaderView);
  static Alignment.center.getter();
  uint64_t v46 = _FrameLayout.init(width:height:alignment:)();
  uint64_t v106 = v171;
  LODWORD(v105) = v172;
  uint64_t v85 = v173;
  LODWORD(v84) = v174;
  uint64_t v82 = v176;
  uint64_t v83 = v175;
  uint64_t v47 = *(int *)(v80 + 36);
  uint64_t v48 = *(void *)(v34 + v47);
  if (*(void *)(v48 + 16))
  {
    uint64_t v49 = *(void *)(v48 + 32);
    __chkstk_darwin(v46);
    uint64_t v74 = v114;
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_100A95DD4((uint64_t)sub_1002BB1AC, (uint64_t)(&v75 - 4), v49);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v50 = 0;
  }
  *(void *)&long long v157 = v50;
  sub_1002BB1CC();
  uint64_t v51 = (uint64_t)v81;
  View.accessibilityHidden(_:)();
  swift_bridgeObjectRelease();
  sub_10024D364(v51, v116, &qword_100E66F28);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v81 = v177;
  LODWORD(v80) = v178;
  uint64_t v79 = v179;
  int v78 = v180;
  uint64_t v76 = v182;
  uint64_t v77 = v181;
  uint64_t v52 = v86;
  Divider.init()();
  uint64_t v53 = v95;
  static DividerStyle<>.primary.getter();
  sub_1002BB460(&qword_100E66F38, (void (*)(uint64_t))&type metadata accessor for Divider);
  sub_1002BB460(&qword_100E66F40, (void (*)(uint64_t))&type metadata accessor for PrimaryDividerStyle);
  uint64_t v54 = v110;
  uint64_t v55 = v94;
  uint64_t v56 = v97;
  View.dividerStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v96 + 8))(v53, v56);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v52, v55);
  (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v108, v54, v112);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v97 = v183;
  LODWORD(v96) = v184;
  uint64_t v95 = v185;
  LODWORD(v94) = v186;
  uint64_t v93 = v187;
  uint64_t v86 = v188;
  *(void *)&long long v157 = *(void *)(v45 + v47);
  swift_getKeyPath();
  uint64_t v57 = v100;
  sub_1002BB310(v114, v100, (void (*)(void))type metadata accessor for CalendarView);
  unint64_t v58 = (*(unsigned __int8 *)(v98 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v98 + 80);
  uint64_t v59 = swift_allocObject();
  sub_1002BB3B8(v57, v59 + v58, (void (*)(void))type metadata accessor for CalendarView);
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100E66F48);
  sub_10017DF08(&qword_100E66F50);
  sub_1001246C8(&qword_100E66F58, &qword_100E66F48);
  sub_1002BB26C();
  uint64_t v74 = sub_1001246C8(&qword_100E66F70, &qword_100E66F50);
  ForEach<>.init(_:id:content:)();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v114 = v189;
  LODWORD(v100) = v190;
  uint64_t v60 = v191;
  LODWORD(v99) = v192;
  uint64_t v98 = v193;
  uint64_t v75 = v194;
  uint64_t v149 = 0;
  char v150 = 1;
  uint64_t v151 = v92;
  char v152 = v91;
  uint64_t v153 = v90;
  char v154 = v89;
  uint64_t v155 = v88;
  uint64_t v156 = v87;
  *(void *)&long long v157 = &v149;
  uint64_t v61 = (uint64_t)v107;
  sub_1002BB310(v115, (uint64_t)v107, (void (*)(void))type metadata accessor for CalendarHeaderView);
  uint64_t v141 = 0;
  char v142 = 1;
  uint64_t v143 = v106;
  char v144 = v105;
  uint64_t v145 = v85;
  char v146 = (char)v84;
  uint64_t v147 = v83;
  uint64_t v148 = v82;
  *((void *)&v157 + 1) = v61;
  uint64_t v158 = &v141;
  uint64_t v62 = v109;
  sub_10006DF38(v116, v109, &qword_100E66F28);
  uint64_t v133 = 0;
  char v134 = 1;
  uint64_t v135 = v81;
  char v136 = v80;
  uint64_t v137 = v79;
  char v138 = v78;
  uint64_t v139 = v77;
  uint64_t v140 = v76;
  uint64_t v159 = v62;
  uint64_t v160 = &v133;
  uint64_t v63 = v111;
  uint64_t v64 = v112;
  uint64_t v65 = v108;
  (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v54, v108, v112);
  uint64_t v125 = 0;
  char v126 = 1;
  uint64_t v127 = v97;
  char v128 = v96;
  uint64_t v129 = v95;
  char v130 = v94;
  uint64_t v131 = v93;
  uint64_t v132 = v86;
  uint64_t v161 = v54;
  uint64_t v162 = &v125;
  uint64_t v66 = v101;
  uint64_t v67 = v102;
  uint64_t v68 = v113;
  uint64_t v69 = v104;
  (*(void (**)(char *, char *, uint64_t))(v102 + 16))(v101, v113, v104);
  uint64_t v117 = 0;
  char v118 = 1;
  uint64_t v119 = v114;
  char v120 = v100;
  uint64_t v121 = v60;
  char v122 = v99;
  uint64_t v123 = v98;
  uint64_t v124 = v75;
  uint64_t v163 = v66;
  uint64_t v164 = &v117;
  double v70 = sub_1004B89A0((__n128 **)&v157, v103);
  uint64_t v71 = *(void (**)(char *, uint64_t, double))(v67 + 8);
  v71(v68, v69, v70);
  uint64_t v72 = *(void (**)(char *, uint64_t))(v63 + 8);
  v72(v65, v64);
  sub_100178110(v116, &qword_100E66F28);
  sub_1002BB40C(v115, (void (*)(void))type metadata accessor for CalendarHeaderView);
  ((void (*)(char *, uint64_t))v71)(v66, v69);
  v72(v110, v64);
  sub_100178110(v109, &qword_100E66F28);
  return sub_1002BB40C((uint64_t)v107, (void (*)(void))type metadata accessor for CalendarHeaderView);
}

uint64_t sub_1002B8908@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for CalendarView();
  uint64_t v2 = Date.standaloneNarrowDayOfWeek(in:)();
  uint64_t v4 = v3;
  _s13CalendarStateVMa();
  uint64_t result = Calendar.isDateInWeekend(_:)();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = result & 1;
  return result;
}

uint64_t sub_1002B89A0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for CalendarView();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = *a1;
  *(void *)a3 = static VerticalAlignment.top.getter();
  *(unsigned char *)(a3 + 8) = 0;
  sub_10017DF08(&qword_100E66F50);
  v13[1] = v9;
  swift_getKeyPath();
  sub_1002BB310(a2, (uint64_t)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for CalendarView);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  sub_1002BB3B8((uint64_t)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10, (void (*)(void))type metadata accessor for CalendarView);
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100E66F68);
  type metadata accessor for CalendarGridCell(0);
  sub_1001246C8(&qword_100E66F78, &qword_100E66F68);
  sub_1002BB460((unint64_t *)&qword_100E63978, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1002BB460(&qword_100E66F80, (void (*)(uint64_t))type metadata accessor for CalendarGridCell);
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_1002B8BF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v83 = type metadata accessor for Date();
  uint64_t v80 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  uint64_t v74 = &v64[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v77 = sub_10017DF08(&qword_100E64D60);
  __chkstk_darwin(v77);
  uint64_t v81 = &v64[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v8 - 8);
  uint64_t v82 = &v64[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v75 = &v64[-v11];
  __chkstk_darwin(v12);
  uint64_t v85 = &v64[-v13];
  __chkstk_darwin(v14);
  int v78 = &v64[-v15];
  uint64_t v76 = type metadata accessor for CalendarDayViewModel(0);
  __chkstk_darwin(v76);
  uint64_t v84 = &v64[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = type metadata accessor for CalendarGridCellViewModel(0);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = &v64[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = sub_10017DF08(&qword_100E66F88);
  __chkstk_darwin(v20 - 8);
  uint64_t v79 = &v64[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v22);
  uint64_t v24 = &v64[-v23];
  __chkstk_darwin(v25);
  uint64_t v27 = &v64[-v26];
  uint64_t v28 = type metadata accessor for CalendarView();
  uint64_t v29 = a2 + *(int *)(v28 + 20);
  uint64_t v30 = type metadata accessor for CalendarViewModel(0);
  sub_100A037A4();
  uint64_t v86 = v28;
  _s13CalendarStateVMa();
  if (static Date.< infix(_:_:)())
  {
    sub_100178110((uint64_t)v27, &qword_100E66F88);
    uint64_t v31 = type metadata accessor for CalendarDayCellViewModel(0);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 1, 1, v31);
  }
  else
  {
    uint64_t v71 = v19;
    uint64_t v73 = a3;
    sub_100008F8C();
    uint64_t v32 = static NSNumberFormatter.dayDigits(from:timeZone:)();
    uint64_t v68 = v33;
    uint64_t v69 = v32;
    uint64_t v72 = a2;
    uint64_t v34 = sub_1002B9448();
    uint64_t v66 = v35;
    uint64_t v67 = v34;
    int v65 = Calendar.isDateInToday(_:)();
    char v36 = Calendar.isDateInWeekend(_:)();
    sub_10006DF38((uint64_t)v27, (uint64_t)v24, &qword_100E66F88);
    uint64_t v70 = type metadata accessor for CalendarMoonPhaseData(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v70) == 1)
    {
      sub_100178110((uint64_t)v24, &qword_100E66F88);
      char v37 = 8;
    }
    else
    {
      char v37 = *v24;
      sub_1002BB40C((uint64_t)v24, (void (*)(void))type metadata accessor for CalendarMoonPhaseData);
    }
    uint64_t v38 = (uint64_t)v78;
    uint64_t v39 = v84;
    uint64_t v40 = v29 + *(int *)(v30 + 40);
    uint64_t v41 = &v84[*(int *)(v76 + 36)];
    uint64_t v42 = type metadata accessor for MoonPhase.Hemisphere();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 16))(v41, v40, v42);
    uint64_t v43 = v68;
    *(void *)uint64_t v39 = v69;
    *((void *)v39 + 1) = v43;
    uint64_t v44 = v66;
    *((void *)v39 + 2) = v67;
    *((void *)v39 + 3) = v44;
    v39[32] = v65 & 1;
    v39[33] = v36 & 1;
    v39[34] = v37;
    sub_10006DF38(v29 + *(int *)(v30 + 32), v38, (uint64_t *)&unk_100E73CA0);
    uint64_t v45 = v80;
    uint64_t v46 = v85;
    uint64_t v47 = v83;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v80 + 16))(v85, a1, v83);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v46, 0, 1, v47);
    uint64_t v48 = v81;
    uint64_t v49 = (uint64_t)&v81[*(int *)(v77 + 48)];
    sub_10006DF38(v38, (uint64_t)v81, (uint64_t *)&unk_100E73CA0);
    sub_10006DF38((uint64_t)v46, v49, (uint64_t *)&unk_100E73CA0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v47) == 1)
    {
      sub_100178110((uint64_t)v46, (uint64_t *)&unk_100E73CA0);
      sub_100178110(v38, (uint64_t *)&unk_100E73CA0);
      int v50 = _s7Weather24LocationCompositionStateOwet_0(v49, 1, v47);
      if (v50 == 1) {
        uint64_t v51 = (uint64_t *)&unk_100E73CA0;
      }
      else {
        uint64_t v51 = &qword_100E64D60;
      }
      if (v50 == 1) {
        char v52 = -1;
      }
      else {
        char v52 = 0;
      }
    }
    else
    {
      uint64_t v53 = v75;
      sub_10006DF38((uint64_t)v48, (uint64_t)v75, (uint64_t *)&unk_100E73CA0);
      if (_s7Weather24LocationCompositionStateOwet_0(v49, 1, v47) == 1)
      {
        sub_100178110((uint64_t)v85, (uint64_t *)&unk_100E73CA0);
        sub_100178110(v38, (uint64_t *)&unk_100E73CA0);
        (*(void (**)(unsigned char *, uint64_t))(v45 + 8))(v53, v47);
        char v52 = 0;
        uint64_t v51 = &qword_100E64D60;
      }
      else
      {
        uint64_t v54 = v74;
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v45 + 32))(v74, v49, v47);
        sub_1002BB460((unint64_t *)&qword_100E63980, (void (*)(uint64_t))&type metadata accessor for Date);
        char v52 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v55 = *(void (**)(unsigned char *, uint64_t))(v45 + 8);
        v55(v54, v47);
        uint64_t v51 = (uint64_t *)&unk_100E73CA0;
        sub_100178110((uint64_t)v85, (uint64_t *)&unk_100E73CA0);
        sub_100178110(v38, (uint64_t *)&unk_100E73CA0);
        uint64_t v39 = v84;
        v55(v53, v47);
      }
    }
    a2 = v72;
    uint64_t v56 = (uint64_t)v82;
    sub_100178110((uint64_t)v48, v51);
    uint64_t v57 = v79;
    sub_10024D364((uint64_t)v27, (uint64_t)v79, &qword_100E66F88);
    uint64_t v58 = v70;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v70) == 1)
    {
      sub_100178110((uint64_t)v57, &qword_100E66F88);
      _s7Weather24LocationCompositionStateOwst_0(v56, 1, 1, v47);
    }
    else
    {
      sub_10006DF38((uint64_t)&v57[*(int *)(v58 + 20)], v56, (uint64_t *)&unk_100E73CA0);
      sub_1002BB40C((uint64_t)v57, (void (*)(void))type metadata accessor for CalendarMoonPhaseData);
    }
    uint64_t v59 = (uint64_t)v39;
    uint64_t v19 = v71;
    sub_1002BB3B8(v59, (uint64_t)v71, (void (*)(void))type metadata accessor for CalendarDayViewModel);
    uint64_t v60 = type metadata accessor for CalendarDayCellViewModel(0);
    v19[*(int *)(v60 + 20)] = v52 & 1;
    sub_10024D364(v56, (uint64_t)&v19[*(int *)(v60 + 24)], (uint64_t *)&unk_100E73CA0);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v60);
    a3 = v73;
  }
  sub_1002BB3B8((uint64_t)v19, a3, (void (*)(void))type metadata accessor for CalendarGridCellViewModel);
  uint64_t v61 = a2 + *(int *)(v86 + 28);
  uint64_t v62 = type metadata accessor for CalendarGridCell(0);
  return sub_10020D948(v61, a3 + *(int *)(v62 + 20));
}

uint64_t sub_1002B9448()
{
  if (qword_100E62200 != -1) {
    swift_once();
  }
  id v0 = (void *)qword_100E66E68;
  type metadata accessor for CalendarView();
  Class isa = TimeZone._bridgeToObjectiveC()().super.isa;
  [v0 setTimeZone:isa];

  uint64_t v2 = (void *)qword_100E66E68;
  Class v3 = Date._bridgeToObjectiveC()().super.isa;
  id v4 = [v2 stringFromDate:v3];

  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v7 = v6;

  _s13CalendarStateVMa();
  if (Calendar.isDateInToday(_:)())
  {
    sub_10017DF08(&qword_100E66F98);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_100C25ED0;
    *(void *)(v8 + 32) = v5;
    *(void *)(v8 + 40) = v7;
    id v9 = [self mainBundle];
    v14._uint64_t countAndFlagsBits = 0xD00000000000003FLL;
    v14._object = (void *)0x8000000100C98040;
    v10._object = (void *)0x8000000100C98010;
    v10._uint64_t countAndFlagsBits = 0xD000000000000026;
    v11._uint64_t countAndFlagsBits = 0x7961646F54;
    v11._object = (void *)0xE500000000000000;
    Swift::String v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v14);

    *(Swift::String *)(v8 + 48) = v12;
    sub_10017DF08(&qword_100E91BC0);
    sub_1001246C8((unint64_t *)&qword_100E73CB0, &qword_100E91BC0);
    uint64_t v5 = BidirectionalCollection<>.joined(separator:)();
    swift_bridgeObjectRelease();
  }
  return v5;
}

uint64_t type metadata accessor for CalendarView()
{
  uint64_t result = qword_100E66ED0;
  if (!qword_100E66ED0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1002B96DC()
{
  return EnvironmentValues.locale.getter();
}

uint64_t sub_1002B9700(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Locale();
  __n128 v3 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return EnvironmentValues.locale.setter();
}

unint64_t sub_1002B97CC(unint64_t a1, uint64_t a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v23 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_100195B7C(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = a3[5];
    uint64_t v10 = a1 + v9;
    uint64_t v11 = a2 + v9;
    uint64_t v12 = type metadata accessor for TimeZone();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    uint64_t v13 = (int *)type metadata accessor for CalendarViewModel(0);
    uint64_t v14 = v13[5];
    uint64_t v15 = v10 + v14;
    uint64_t v16 = v11 + v14;
    uint64_t v17 = type metadata accessor for Date();
    uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
    v18(v15, v16, v17);
    v18(v10 + v13[6], v11 + v13[6], v17);
    v18(v10 + v13[7], v11 + v13[7], v17);
    uint64_t v19 = v13[8];
    uint64_t v20 = (void *)(v10 + v19);
    uint64_t v21 = (const void *)(v11 + v19);
    if (_s7Weather24LocationCompositionStateOwet_0(v11 + v19, 1, v17))
    {
      uint64_t v22 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      v18((uint64_t)v20, (uint64_t)v21, v17);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v17);
    }
    *(void *)(v10 + v13[9]) = *(void *)(v11 + v13[9]);
    uint64_t v24 = v13[10];
    uint64_t v25 = v10 + v24;
    uint64_t v26 = v11 + v24;
    uint64_t v27 = type metadata accessor for MoonPhase.Hemisphere();
    uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16);
    swift_bridgeObjectRetain();
    v28(v25, v26, v27);
    uint64_t v29 = a3[6];
    uint64_t v30 = (void *)(a1 + v29);
    uint64_t v31 = (void *)(a2 + v29);
    sub_10017DF08(&qword_100E66E70);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v32 = type metadata accessor for Locale();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
    }
    else
    {
      *uint64_t v30 = *v31;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v33 = (int *)_s13CalendarStateVMa();
    v18((uint64_t)v30 + v33[5], (uint64_t)v31 + v33[5], v17);
    uint64_t v34 = v33[6];
    uint64_t v35 = (char *)v30 + v34;
    char v36 = (char *)v31 + v34;
    uint64_t v37 = type metadata accessor for Calendar();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
    v18((uint64_t)v30 + v33[7], (uint64_t)v31 + v33[7], v17);
    v18((uint64_t)v30 + v33[8], (uint64_t)v31 + v33[8], v17);
    *(void *)((char *)v30 + v33[9]) = *(void *)((char *)v31 + v33[9]);
    uint64_t v38 = v33[10];
    uint64_t v39 = (char *)v30 + v38;
    uint64_t v40 = (char *)v31 + v38;
    swift_bridgeObjectRetain();
    v18((uint64_t)v39, (uint64_t)v40, v17);
    uint64_t v41 = a3[7];
    long long v42 = *(_OWORD *)(a2 + v41 + 24);
    *(_OWORD *)(a1 + v41 + 24) = v42;
    (**(void (***)(void))(v42 - 8))();
  }
  return a1;
}

uint64_t sub_1002B9C10(uint64_t a1, int *a2)
{
  sub_10018F6D8(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = (int *)type metadata accessor for CalendarViewModel(0);
  uint64_t v7 = v4 + v6[5];
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(v4 + v6[6], v8);
  v9(v4 + v6[7], v8);
  uint64_t v10 = v4 + v6[8];
  if (!_s7Weather24LocationCompositionStateOwet_0(v10, 1, v8)) {
    v9(v10, v8);
  }
  swift_bridgeObjectRelease();
  uint64_t v11 = v4 + v6[10];
  uint64_t v12 = type metadata accessor for MoonPhase.Hemisphere();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = a1 + a2[6];
  sub_10017DF08(&qword_100E66E70);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = type metadata accessor for Locale();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  }
  else
  {
    swift_release();
  }
  uint64_t v15 = (int *)_s13CalendarStateVMa();
  v9(v13 + v15[5], v8);
  uint64_t v16 = v13 + v15[6];
  uint64_t v17 = type metadata accessor for Calendar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  v9(v13 + v15[7], v8);
  v9(v13 + v15[8], v8);
  swift_bridgeObjectRelease();
  v9(v13 + v15[10], v8);
  uint64_t v18 = a1 + a2[7];

  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v18);
}

uint64_t sub_1002B9ED0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = a3[5];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  uint64_t v12 = (int *)type metadata accessor for CalendarViewModel(0);
  uint64_t v13 = v12[5];
  uint64_t v14 = v9 + v13;
  uint64_t v15 = v10 + v13;
  uint64_t v16 = type metadata accessor for Date();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
  v17(v14, v15, v16);
  v17(v9 + v12[6], v10 + v12[6], v16);
  v17(v9 + v12[7], v10 + v12[7], v16);
  uint64_t v18 = v12[8];
  uint64_t v19 = (void *)(v9 + v18);
  uint64_t v20 = (const void *)(v10 + v18);
  if (_s7Weather24LocationCompositionStateOwet_0(v10 + v18, 1, v16))
  {
    uint64_t v21 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    v17((uint64_t)v19, (uint64_t)v20, v16);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v16);
  }
  *(void *)(v9 + v12[9]) = *(void *)(v10 + v12[9]);
  uint64_t v22 = v12[10];
  uint64_t v23 = v9 + v22;
  uint64_t v24 = v10 + v22;
  uint64_t v25 = type metadata accessor for MoonPhase.Hemisphere();
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16);
  swift_bridgeObjectRetain();
  v26(v23, v24, v25);
  uint64_t v27 = a3[6];
  uint64_t v28 = (void *)(a1 + v27);
  uint64_t v29 = (void *)(a2 + v27);
  sub_10017DF08(&qword_100E66E70);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v30 = type metadata accessor for Locale();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  }
  else
  {
    *uint64_t v28 = *v29;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v31 = (int *)_s13CalendarStateVMa();
  v17((uint64_t)v28 + v31[5], (uint64_t)v29 + v31[5], v16);
  uint64_t v32 = v31[6];
  uint64_t v33 = (char *)v28 + v32;
  uint64_t v34 = (char *)v29 + v32;
  uint64_t v35 = type metadata accessor for Calendar();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
  v17((uint64_t)v28 + v31[7], (uint64_t)v29 + v31[7], v16);
  v17((uint64_t)v28 + v31[8], (uint64_t)v29 + v31[8], v16);
  *(void *)((char *)v28 + v31[9]) = *(void *)((char *)v29 + v31[9]);
  uint64_t v36 = v31[10];
  uint64_t v37 = (char *)v28 + v36;
  uint64_t v38 = (char *)v29 + v36;
  swift_bridgeObjectRetain();
  v17((uint64_t)v37, (uint64_t)v38, v16);
  uint64_t v39 = a3[7];
  long long v40 = *(_OWORD *)(a2 + v39 + 24);
  *(_OWORD *)(a1 + v39 + 24) = v40;
  (**(void (***)(void))(v40 - 8))();
  return a1;
}

uint64_t sub_1002BA2C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10018F6D8(v8, v9);
  uint64_t v41 = a3;
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = (int *)type metadata accessor for CalendarViewModel(0);
  uint64_t v15 = v14[5];
  uint64_t v16 = v11 + v15;
  uint64_t v17 = v12 + v15;
  uint64_t v18 = type metadata accessor for Date();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 24);
  v20(v16, v17, v18);
  v20(v11 + v14[6], v12 + v14[6], v18);
  long long v40 = (void (*)(void *, const void *, uint64_t))v20;
  v20(v11 + v14[7], v12 + v14[7], v18);
  uint64_t v21 = v14[8];
  uint64_t v22 = (void *)(v11 + v21);
  uint64_t v23 = (const void *)(v12 + v21);
  LODWORD(v20) = _s7Weather24LocationCompositionStateOwet_0(v11 + v21, 1, v18);
  int v24 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v18);
  if (v20)
  {
    if (!v24)
    {
      (*(void (**)(void *, const void *, uint64_t))(v19 + 16))(v22, v23, v18);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v22, v18);
LABEL_6:
    uint64_t v25 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  v40(v22, v23, v18);
LABEL_7:
  *(void *)(v11 + v14[9]) = *(void *)(v12 + v14[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = v14[10];
  uint64_t v27 = v11 + v26;
  uint64_t v28 = v12 + v26;
  uint64_t v29 = type metadata accessor for MoonPhase.Hemisphere();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 24))(v27, v28, v29);
  uint64_t v30 = *(int *)(v41 + 24);
  uint64_t v31 = (void *)(a1 + v30);
  uint64_t v32 = (void *)(a2 + v30);
  if (a1 != a2)
  {
    sub_100178110(a1 + v30, &qword_100E66E70);
    sub_10017DF08(&qword_100E66E70);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v33 = type metadata accessor for Locale();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
    }
    else
    {
      *uint64_t v31 = *v32;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v34 = (int *)_s13CalendarStateVMa();
  v40((char *)v31 + v34[5], (char *)v32 + v34[5], v18);
  uint64_t v35 = v34[6];
  uint64_t v36 = (char *)v31 + v35;
  uint64_t v37 = (char *)v32 + v35;
  uint64_t v38 = type metadata accessor for Calendar();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  v40((char *)v31 + v34[7], (char *)v32 + v34[7], v18);
  v40((char *)v31 + v34[8], (char *)v32 + v34[8], v18);
  *(void *)((char *)v31 + v34[9]) = *(void *)((char *)v32 + v34[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v40((char *)v31 + v34[10], (char *)v32 + v34[10], v18);
  sub_1000C1E18((uint64_t *)(a1 + *(int *)(v41 + 28)), (uint64_t *)(a2 + *(int *)(v41 + 28)));
  return a1;
}

uint64_t sub_1002BA720(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v5 = a3[5];
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  char v9 = (int *)type metadata accessor for CalendarViewModel(0);
  uint64_t v10 = v9[5];
  uint64_t v11 = v6 + v10;
  uint64_t v12 = v7 + v10;
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32);
  v14(v11, v12, v13);
  v14(v6 + v9[6], v7 + v9[6], v13);
  v14(v6 + v9[7], v7 + v9[7], v13);
  uint64_t v15 = v9[8];
  uint64_t v16 = (void *)(v6 + v15);
  uint64_t v17 = (const void *)(v7 + v15);
  if (_s7Weather24LocationCompositionStateOwet_0(v7 + v15, 1, v13))
  {
    uint64_t v18 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    v14((uint64_t)v16, (uint64_t)v17, v13);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v13);
  }
  *(void *)(v6 + v9[9]) = *(void *)(v7 + v9[9]);
  uint64_t v19 = v9[10];
  uint64_t v20 = v6 + v19;
  uint64_t v21 = v7 + v19;
  uint64_t v22 = type metadata accessor for MoonPhase.Hemisphere();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  uint64_t v23 = a3[6];
  int v24 = (char *)(a1 + v23);
  uint64_t v25 = (char *)(a2 + v23);
  uint64_t v26 = sub_10017DF08(&qword_100E66E70);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v27 = type metadata accessor for Locale();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v24, v25, v27);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
  }
  uint64_t v28 = (int *)_s13CalendarStateVMa();
  v14((uint64_t)&v24[v28[5]], (uint64_t)&v25[v28[5]], v13);
  uint64_t v29 = v28[6];
  uint64_t v30 = &v24[v29];
  uint64_t v31 = &v25[v29];
  uint64_t v32 = type metadata accessor for Calendar();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
  v14((uint64_t)&v24[v28[7]], (uint64_t)&v25[v28[7]], v13);
  v14((uint64_t)&v24[v28[8]], (uint64_t)&v25[v28[8]], v13);
  *(void *)&v24[v28[9]] = *(void *)&v25[v28[9]];
  v14((uint64_t)&v24[v28[10]], (uint64_t)&v25[v28[10]], v13);
  uint64_t v33 = a3[7];
  uint64_t v34 = a1 + v33;
  uint64_t v35 = a2 + v33;
  long long v36 = *(_OWORD *)(v35 + 16);
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  *(_OWORD *)(v34 + 16) = v36;
  *(void *)(v34 + 32) = *(void *)(v35 + 32);
  return a1;
}

uint64_t sub_1002BAAC0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10018F6D8(v8, v9);
  uint64_t v46 = a3;
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = (uint64_t)a2 + v10;
  uint64_t v13 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = (int *)type metadata accessor for CalendarViewModel(0);
  uint64_t v15 = v14[5];
  uint64_t v16 = v11 + v15;
  uint64_t v17 = v12 + v15;
  uint64_t v18 = type metadata accessor for Date();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 40);
  v20(v16, v17, v18);
  v20(v11 + v14[6], v12 + v14[6], v18);
  uint64_t v45 = (void (*)(void *, const void *, uint64_t))v20;
  v20(v11 + v14[7], v12 + v14[7], v18);
  uint64_t v21 = v14[8];
  uint64_t v22 = (void *)(v11 + v21);
  uint64_t v23 = (const void *)(v12 + v21);
  LODWORD(v20) = _s7Weather24LocationCompositionStateOwet_0(v11 + v21, 1, v18);
  int v24 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v18);
  if (v20)
  {
    if (!v24)
    {
      (*(void (**)(void *, const void *, uint64_t))(v19 + 32))(v22, v23, v18);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v24)
  {
    (*(void (**)(void *, uint64_t))(v19 + 8))(v22, v18);
LABEL_6:
    uint64_t v25 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
    goto LABEL_7;
  }
  v45(v22, v23, v18);
LABEL_7:
  *(void *)(v11 + v14[9]) = *(void *)(v12 + v14[9]);
  swift_bridgeObjectRelease();
  uint64_t v26 = v14[10];
  uint64_t v27 = v11 + v26;
  uint64_t v28 = v12 + v26;
  uint64_t v29 = type metadata accessor for MoonPhase.Hemisphere();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 40))(v27, v28, v29);
  uint64_t v30 = *(int *)(v46 + 24);
  uint64_t v31 = (char *)(a1 + v30);
  uint64_t v32 = (char *)a2 + v30;
  if ((uint64_t *)a1 != a2)
  {
    sub_100178110(a1 + v30, &qword_100E66E70);
    uint64_t v33 = sub_10017DF08(&qword_100E66E70);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v34 = type metadata accessor for Locale();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v31, v32, v34);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
    }
  }
  uint64_t v35 = (int *)_s13CalendarStateVMa();
  v45(&v31[v35[5]], &v32[v35[5]], v18);
  uint64_t v36 = v35[6];
  uint64_t v37 = &v31[v36];
  uint64_t v38 = &v32[v36];
  uint64_t v39 = type metadata accessor for Calendar();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 40))(v37, v38, v39);
  v45(&v31[v35[7]], &v32[v35[7]], v18);
  v45(&v31[v35[8]], &v32[v35[8]], v18);
  *(void *)&v31[v35[9]] = *(void *)&v32[v35[9]];
  swift_bridgeObjectRelease();
  v45(&v31[v35[10]], &v32[v35[10]], v18);
  uint64_t v40 = *(int *)(v46 + 28);
  uint64_t v41 = a1 + v40;
  uint64_t v42 = (uint64_t)a2 + v40;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + v40);
  long long v43 = *(_OWORD *)(v42 + 16);
  *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
  *(_OWORD *)(v41 + 16) = v43;
  *(void *)(v41 + 32) = *(void *)(v42 + 32);
  return a1;
}

uint64_t sub_1002BAF20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002BAF34);
}

uint64_t sub_1002BAF34(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for CalendarViewModel(0);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a3[5];
LABEL_5:
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v9, a2, v8);
  }
  _s13CalendarStateVMa();
  sub_100162F30();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v9 = a3[6];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[7] + 24);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t sub_1002BAFEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002BB000);
}

void sub_1002BB000(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  type metadata accessor for CalendarViewModel(0);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a4[5];
  }
  else
  {
    _s13CalendarStateVMa();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) != a3)
    {
      *(void *)(a1 + a4[7] + 24) = (a2 - 1);
      return;
    }
    uint64_t v10 = v12;
    uint64_t v11 = a4[6];
  }

  _s7Weather24LocationCompositionStateOwst_0(a1 + v11, a2, a2, v10);
}

uint64_t sub_1002BB0B4()
{
  uint64_t result = type metadata accessor for CalendarViewModel(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = _s13CalendarStateVMa();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1002BB190()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002BB1AC@<X0>(uint64_t a1@<X8>)
{
  return sub_1002B8908(a1);
}

unint64_t sub_1002BB1CC()
{
  unint64_t result = qword_100E66F30;
  if (!qword_100E66F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E66F30);
  }
  return result;
}

uint64_t sub_1002BB21C()
{
  uint64_t v0 = type metadata accessor for CalendarView();
  sub_1001627C0(v0);
  unint64_t v1 = (uint64_t *)sub_10017F930();

  return sub_1002B89A0(v1, v2, v3);
}

unint64_t sub_1002BB26C()
{
  unint64_t result = qword_100E66F60;
  if (!qword_100E66F60)
  {
    sub_10018C6DC(&qword_100E66F68);
    sub_1002BB460((unint64_t *)&qword_100E63978, (void (*)(uint64_t))&type metadata accessor for Date);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E66F60);
  }
  return result;
}

uint64_t sub_1002BB310(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_1002BB368()
{
  uint64_t v0 = type metadata accessor for CalendarView();
  sub_1001627C0(v0);
  uint64_t v1 = sub_10017F930();

  return sub_1002B8BF0(v1, v2, v3);
}

uint64_t sub_1002BB3B8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t sub_1002BB40C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_1002BB460(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002BB4A8()
{
  return sub_1001246C8(&qword_100E66FA0, &qword_100E66FA8);
}

uint64_t AppLaunchCountMonitor.__deallocating_deinit()
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 32);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VFXTestInteractor()
{
  return self;
}

BOOL sub_1002BB548(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = type metadata accessor for NewsDataModel();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_10011BFD8();
  uint64_t v8 = sub_10017DF08(&qword_100E67238);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_100162E88();
  uint64_t v10 = sub_10017DF08(&qword_100E670F0);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_10016278C();
  uint64_t v14 = v12 - v13;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v26 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v26 - v19;
  if ((static Location.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v21 = (int *)type metadata accessor for MoonDetailInput.Input(0);
  if ((sub_10085FD1C(a1 + v21[5], a2 + v21[5]) & 1) == 0
    || (static Date.== infix(_:_:)() & 1) == 0
    || (static Date.== infix(_:_:)() & 1) == 0
    || (static Date.== infix(_:_:)() & 1) == 0
    || (static Locale.== infix(_:_:)() & 1) == 0
    || *(unsigned __int8 *)(a1 + v21[10]) != *(unsigned __int8 *)(a2 + v21[10])
    || *(unsigned __int8 *)(a1 + v21[11]) != *(unsigned __int8 *)(a2 + v21[11]))
  {
    return 0;
  }
  sub_10006DF38(a1 + v21[12], (uint64_t)v20, &qword_100E670F0);
  sub_10006DF38(a2 + v21[12], (uint64_t)v18, &qword_100E670F0);
  uint64_t v22 = v2 + *(int *)(v8 + 48);
  sub_10006DF38((uint64_t)v20, v2, &qword_100E670F0);
  sub_10006DF38((uint64_t)v18, v22, &qword_100E670F0);
  sub_10012B520(v2, 1, v6);
  if (v23)
  {
    sub_100178110((uint64_t)v18, &qword_100E670F0);
    sub_100178110((uint64_t)v20, &qword_100E670F0);
    sub_10012B520(v22, 1, v6);
    if (v23)
    {
      sub_100178110(v2, &qword_100E670F0);
      return 1;
    }
    goto LABEL_17;
  }
  sub_10006DF38(v2, v14, &qword_100E670F0);
  sub_10012B520(v22, 1, v6);
  if (v23)
  {
    sub_100178110((uint64_t)v18, &qword_100E670F0);
    sub_100178110((uint64_t)v20, &qword_100E670F0);
    sub_1002BDF38(v14, (void (*)(void))type metadata accessor for NewsDataModel);
LABEL_17:
    sub_100178110(v2, &qword_100E67238);
    return 0;
  }
  sub_1002C015C(v22, v3, (void (*)(void))type metadata accessor for NewsDataModel);
  char v24 = sub_100BBEEE4(v14, v3);
  sub_1002BDF38(v3, (void (*)(void))type metadata accessor for NewsDataModel);
  sub_100178110((uint64_t)v18, &qword_100E670F0);
  sub_100178110((uint64_t)v20, &qword_100E670F0);
  sub_1002BDF38(v14, (void (*)(void))type metadata accessor for NewsDataModel);
  sub_100178110(v2, &qword_100E670F0);
  return (v24 & 1) != 0;
}

BOOL sub_1002BB8E4(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = type metadata accessor for MoonDetailInput.Input(0);
  sub_100162E4C();
  __chkstk_darwin(v8);
  uint64_t v9 = sub_10017F948();
  uint64_t v10 = type metadata accessor for MoonDetailInput(v9);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_10011BFD8();
  uint64_t v12 = sub_10017DF08(&qword_100E67230);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_100162E88();
  uint64_t v15 = v2 + *(int *)(v14 + 56);
  sub_1002C01BC(a1, v2, (void (*)(void))type metadata accessor for MoonDetailInput);
  sub_1002C01BC(a2, v15, (void (*)(void))type metadata accessor for MoonDetailInput);
  sub_10012B520(v2, 1, v7);
  if (!v17)
  {
    sub_1002C01BC(v2, v4, (void (*)(void))type metadata accessor for MoonDetailInput);
    sub_10012B520(v15, 1, v7);
    if (!v17)
    {
      sub_1002C015C(v15, v3, (void (*)(void))type metadata accessor for MoonDetailInput.Input);
      BOOL v16 = sub_1002BB548(v4, v3);
      sub_1002BDF38(v3, (void (*)(void))type metadata accessor for MoonDetailInput.Input);
      sub_1002BDF38(v4, (void (*)(void))type metadata accessor for MoonDetailInput.Input);
      sub_1002BDF38(v2, (void (*)(void))type metadata accessor for MoonDetailInput);
      return v16;
    }
    sub_1002BDF38(v4, (void (*)(void))type metadata accessor for MoonDetailInput.Input);
LABEL_9:
    sub_100178110(v2, &qword_100E67230);
    return 0;
  }
  sub_10012B520(v15, 1, v7);
  if (!v17) {
    goto LABEL_9;
  }
  sub_1002BDF38(v2, (void (*)(void))type metadata accessor for MoonDetailInput);
  return 1;
}

uint64_t sub_1002BBB2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  type metadata accessor for Locale();
  sub_100179C0C();
  uint64_t v147 = v5;
  uint64_t v148 = v4;
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v146 = v6;
  uint64_t v7 = sub_10017DF08(&qword_100E67240);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v143 = v9;
  sub_100129064();
  uint64_t v142 = type metadata accessor for MoonDetailSelectedDate();
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_100162EF8();
  uint64_t v145 = v11;
  sub_1001626D4();
  __chkstk_darwin(v12);
  sub_100109770();
  uint64_t v144 = v13;
  sub_1001626D4();
  __chkstk_darwin(v14);
  sub_100128F8C();
  uint64_t v140 = v15;
  sub_100129064();
  type metadata accessor for TimeZone();
  sub_100179C0C();
  __chkstk_darwin(v16);
  sub_100109314();
  sub_100129064();
  uint64_t v17 = type metadata accessor for TimeState();
  uint64_t v18 = sub_100109308(v17);
  __chkstk_darwin(v18);
  sub_100109314();
  uint64_t v134 = v19;
  sub_100129064();
  type metadata accessor for CurrentWeather();
  sub_100179C0C();
  __chkstk_darwin(v20);
  sub_100109314();
  uint64_t v125 = v21;
  uint64_t v22 = sub_10017DF08(&qword_100E63740);
  uint64_t v23 = sub_100109308(v22);
  __chkstk_darwin(v23);
  sub_100109314();
  uint64_t v127 = v24;
  uint64_t v25 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v26 = sub_100109308(v25);
  __chkstk_darwin(v26);
  sub_100162EF8();
  uint64_t v141 = v27;
  sub_1001626D4();
  __chkstk_darwin(v28);
  sub_100128F8C();
  uint64_t v129 = v29;
  sub_100129064();
  uint64_t v30 = type metadata accessor for NewsDataModel();
  sub_100162E4C();
  __chkstk_darwin(v31);
  sub_100109314();
  uint64_t v132 = v32;
  uint64_t v33 = sub_100129064();
  uint64_t v126 = type metadata accessor for WeatherData(v33);
  sub_100162E4C();
  __chkstk_darwin(v34);
  sub_100109314();
  uint64_t v128 = v35;
  uint64_t v36 = sub_10017DF08(&qword_100E63770);
  uint64_t v37 = sub_100109308(v36);
  __chkstk_darwin(v37);
  sub_1001626E0();
  uint64_t v40 = v39 - v38;
  uint64_t v136 = type metadata accessor for LocationWeatherDataState(0);
  sub_100162E4C();
  __chkstk_darwin(v41);
  sub_100162EF8();
  uint64_t v131 = v42;
  sub_1001626D4();
  __chkstk_darwin(v43);
  sub_100128F8C();
  uint64_t v133 = v44;
  sub_100129064();
  uint64_t v45 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v47 = v46;
  __chkstk_darwin(v48);
  sub_1001626E0();
  uint64_t v51 = v50 - v49;
  uint64_t v52 = sub_10017DF08(&qword_100E670F0);
  uint64_t v53 = sub_100109308(v52);
  __chkstk_darwin(v53);
  sub_1001626E0();
  uint64_t v56 = v55 - v54;
  uint64_t v138 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v139 = v57;
  __chkstk_darwin(v58);
  sub_100162EF8();
  uint64_t v149 = v59;
  sub_1001626D4();
  __chkstk_darwin(v60);
  sub_100109770();
  uint64_t v137 = v61;
  sub_1001626D4();
  __chkstk_darwin(v62);
  sub_100109770();
  uint64_t v150 = v63;
  sub_1001626D4();
  __chkstk_darwin(v64);
  sub_100128F8C();
  uint64_t v65 = sub_10017DF08(&qword_100E67248);
  uint64_t v66 = sub_100109308(v65);
  __chkstk_darwin(v66);
  sub_10017F948();
  uint64_t v67 = type metadata accessor for MoonDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v68);
  sub_1001626E0();
  uint64_t v71 = v70 - v69;
  sub_1002BC9F0(a1, v2);
  uint64_t v72 = sub_10011C004();
  char v152 = (int *)v67;
  sub_10012B520(v72, v73, v67);
  if (!v85)
  {
    sub_1002C015C(v2, v71, (void (*)(void))type metadata accessor for MoonDetailViewState);
    uint64_t v123 = v30;
    _s7Weather24LocationCompositionStateOwst_0(v56, 1, 1, v30);
    uint64_t v135 = v51;
    uint64_t v124 = v45;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v51, v71, v45);
    uint64_t v82 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
    swift_bridgeObjectRetain();
    uint64_t v83 = Location.id.getter();
    sub_1001BBE9C(v83, v84, v82);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10012B520(v40, 1, v136);
    uint64_t v130 = v56;
    uint64_t v86 = v71;
    if (v85)
    {
      sub_100178110(v56, &qword_100E670F0);
      sub_100178110(v40, &qword_100E63770);
      uint64_t v87 = a1;
      uint64_t v88 = v140;
      uint64_t v89 = v139;
    }
    else
    {
      sub_1002C015C(v40, v133, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      sub_1002C01BC(v133, v131, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v88 = v140;
      uint64_t v89 = v139;
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v91 = sub_10017DF08(&qword_100E63748);
        uint64_t v92 = v131 + *(int *)(v91 + 48);
        uint64_t v93 = v131 + *(int *)(v91 + 64);
        uint64_t v56 = v128;
        sub_1002C015C(v131, v128, (void (*)(void))type metadata accessor for WeatherData);
        sub_1002C015C(v93, v132, (void (*)(void))type metadata accessor for NewsDataModel);
        sub_1002BDF38(v92, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
        sub_10006DF38(v128 + *(int *)(v126 + 36), v127, &qword_100E63740);
        uint64_t v94 = type metadata accessor for WeatherDataOverrides();
        sub_10012B520(v127, 1, v94);
        if (v85)
        {
          sub_100178110(v127, &qword_100E63740);
          uint64_t v104 = v129;
          uint64_t v95 = sub_10011C004();
          _s7Weather24LocationCompositionStateOwst_0(v95, v96, 1, v138);
          uint64_t v97 = v144;
          uint64_t v98 = v142;
        }
        else
        {
          uint64_t v104 = v129;
          sub_10006DF38(v127, v129, (uint64_t *)&unk_100E73CA0);
          sub_1002BDF38(v127, (void (*)(void))type metadata accessor for WeatherDataOverrides);
          uint64_t v105 = sub_10011C004();
          sub_10012B520(v105, v106, v138);
          uint64_t v97 = v144;
          uint64_t v98 = v142;
          if (!v107)
          {
            sub_1002BDF38(v128, (void (*)(void))type metadata accessor for WeatherData);
            uint64_t v111 = sub_1002BDF38(v133, (void (*)(void))type metadata accessor for LocationWeatherDataState);
            sub_100188F64(v111, &qword_100E670F0);
            uint64_t v112 = sub_1001A30EC();
            v113(v112);
LABEL_20:
            sub_1002C015C(v132, v56, (void (*)(void))type metadata accessor for NewsDataModel);
            uint64_t v103 = 0;
            uint64_t v100 = v138;
            goto LABEL_21;
          }
        }
        sub_100178110(v104, (uint64_t *)&unk_100E73CA0);
        uint64_t v56 = v125;
        WeatherDataModel.currentWeather.getter();
        CurrentWeather.date.getter();
        sub_100162F0C();
        v109(v108);
        sub_1002BDF38(v128, (void (*)(void))type metadata accessor for WeatherData);
        uint64_t v110 = sub_1002BDF38(v133, (void (*)(void))type metadata accessor for LocationWeatherDataState);
        sub_100188F64(v110, &qword_100E670F0);
        goto LABEL_20;
      }
      uint64_t v99 = sub_1002BDF38(v133, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      sub_100188F64(v99, &qword_100E670F0);
      sub_1002BDF38(v131, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      uint64_t v87 = a1;
    }
    uint64_t v100 = v138;
    sub_1002C01BC(v87 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, v134, (void (*)(void))type metadata accessor for TimeState);
    uint64_t v101 = sub_1001A30EC();
    v102(v101);
    uint64_t v103 = 1;
    uint64_t v97 = v144;
    uint64_t v98 = v142;
LABEL_21:
    _s7Weather24LocationCompositionStateOwst_0(v56, v103, 1, v123);
    Location.timeZone.getter();
    Date.zeroMinutes(timeZone:)();
    sub_100162F0C();
    v114();
    sub_10006DF38(v86 + v152[5], v143, &qword_100E67240);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 16))(v137, v150, v100);
    uint64_t v115 = sub_10011C004();
    if (_s7Weather24LocationCompositionStateOwet_0(v115, v116, v98) == 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 32))(v88, v137, v100);
      swift_storeEnumTagMultiPayload();
      sub_100178110(v143, &qword_100E67240);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v137, v100);
      sub_1002C015C(v143, v88, (void (*)(void))type metadata accessor for MoonDetailSelectedDate);
    }
    sub_10006DF38(v86 + v152[6], v141, (uint64_t *)&unk_100E73CA0);
    sub_1002C01BC(v88, v97, (void (*)(void))type metadata accessor for MoonDetailSelectedDate);
    sub_10012B520(v141, 1, v100);
    if (v85)
    {
      sub_10085FC7C(v149);
      sub_1002BDF38(v97, (void (*)(void))type metadata accessor for MoonDetailSelectedDate);
      sub_100178110(v141, (uint64_t *)&unk_100E73CA0);
    }
    else
    {
      sub_1002BDF38(v97, (void (*)(void))type metadata accessor for MoonDetailSelectedDate);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 32))(v149, v141, v100);
    }
    sub_1002C015C(v88, v145, (void (*)(void))type metadata accessor for MoonDetailSelectedDate);
    uint64_t v117 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
    swift_beginAccess();
    uint64_t v118 = type metadata accessor for EnvironmentState();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v147 + 16))(v146, v117 + *(int *)(v118 + 28), v148);
    char v153 = *(unsigned char *)(v86 + v152[8]);
    sub_1002BDF38(v86, (void (*)(void))type metadata accessor for MoonDetailViewState);
    uint64_t v74 = a2;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(a2, v135, v124);
    uint64_t v119 = (int *)type metadata accessor for MoonDetailInput.Input(0);
    sub_1002C015C(v145, a2 + v119[5], (void (*)(void))type metadata accessor for MoonDetailSelectedDate);
    char v120 = *(void (**)(void))(v89 + 32);
    sub_10019FB90();
    v120();
    sub_10019FB90();
    v120();
    sub_10019FB90();
    v120();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v147 + 32))(a2 + v119[9], v146, v148);
    *(unsigned char *)(a2 + v119[10]) = v153;
    *(unsigned char *)(a2 + v119[11]) = 1;
    sub_1002C0210(v130, a2 + v119[12]);
    uint64_t v80 = a2;
    uint64_t v81 = 0;
    uint64_t v79 = (uint64_t)v119;
    goto LABEL_28;
  }
  uint64_t v74 = a2;
  sub_100178110(v2, &qword_100E67248);
  if (qword_100E627E8 != -1) {
    swift_once();
  }
  uint64_t v75 = type metadata accessor for Logger();
  sub_1002102B0(v75, (uint64_t)qword_100F51ED0);
  uint64_t v76 = Logger.logObject.getter();
  os_log_type_t v77 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v76, v77))
  {
    int v78 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v78 = 0;
    _os_log_impl((void *)&_mh_execute_header, v76, v77, "Unable to make MoonDetailInput due to missing moonDetailViewState.", v78, 2u);
    swift_slowDealloc();
  }

  uint64_t v79 = type metadata accessor for MoonDetailInput.Input(0);
  uint64_t v80 = a2;
  uint64_t v81 = 1;
LABEL_28:
  _s7Weather24LocationCompositionStateOwst_0(v80, v81, 1, v79);
  uint64_t v121 = type metadata accessor for MoonDetailInput(0);
  return _s7Weather24LocationCompositionStateOwst_0(v74, 0, 1, v121);
}

uint64_t sub_1002BC9F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v67 = a2;
  uint64_t v66 = type metadata accessor for LocationPreviewModalViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100162EF8();
  uint64_t v62 = v4;
  sub_1001626D4();
  __chkstk_darwin(v5);
  sub_100128F8C();
  uint64_t v64 = v6;
  uint64_t v7 = sub_100129064();
  uint64_t v65 = type metadata accessor for LocationPreviewViewState(v7);
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_100162EF8();
  uint64_t v61 = v9;
  sub_1001626D4();
  __chkstk_darwin(v10);
  sub_100128F8C();
  uint64_t v63 = v11;
  sub_100129064();
  uint64_t v12 = type metadata accessor for MoonDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v13);
  sub_100162EF8();
  uint64_t v59 = v14;
  sub_1001626D4();
  __chkstk_darwin(v15);
  sub_100109770();
  uint64_t v60 = v16;
  sub_1001626D4();
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v58 - v18;
  type metadata accessor for ModalViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v20);
  sub_10016278C();
  uint64_t v23 = v21 - v22;
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v58 - v26;
  __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v58 - v28;
  type metadata accessor for ModalViewState.LocationDetailModal(0);
  sub_100162E4C();
  __chkstk_darwin(v30);
  sub_10016278C();
  uint64_t v33 = v31 - v32;
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)&v58 - v35;
  uint64_t v37 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView;
  sub_1002C01BC(v37, (uint64_t)v29, (void (*)(void))type metadata accessor for ModalViewState);
  if (swift_getEnumCaseMultiPayload() != 5)
  {
    sub_1002BDF38((uint64_t)v29, (void (*)(void))type metadata accessor for ModalViewState);
    goto LABEL_6;
  }
  uint64_t v58 = v12;
  sub_1002C015C((uint64_t)v29, (uint64_t)v36, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
  sub_1002C015C((uint64_t)v36, v33, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
  if (swift_getEnumCaseMultiPayload() != 4)
  {
    sub_1002BDF38(v33, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
    uint64_t v12 = v58;
LABEL_6:
    sub_1002C01BC(v37, (uint64_t)v27, (void (*)(void))type metadata accessor for ModalViewState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v42 = v65;
    if (EnumCaseMultiPayload)
    {
      uint64_t v43 = type metadata accessor for ModalViewState;
      uint64_t v44 = (uint64_t)v27;
    }
    else
    {
      uint64_t v45 = v63;
      sub_1002C015C((uint64_t)v27, v63, (void (*)(void))type metadata accessor for LocationPreviewViewState);
      uint64_t v46 = v64;
      sub_1002C01BC(v45 + *(int *)(v42 + 20), v64, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
      sub_1002BDF38(v45, (void (*)(void))type metadata accessor for LocationPreviewViewState);
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        uint64_t v47 = v12;
        uint64_t v48 = v60;
        sub_1002C015C(v46, v60, (void (*)(void))type metadata accessor for MoonDetailViewState);
        uint64_t v49 = v48;
        uint64_t v39 = v67;
LABEL_19:
        uint64_t v12 = v47;
        sub_1002C015C(v49, v39, (void (*)(void))type metadata accessor for MoonDetailViewState);
        uint64_t v40 = 0;
        return _s7Weather24LocationCompositionStateOwst_0(v39, v40, 1, v12);
      }
      uint64_t v43 = type metadata accessor for LocationPreviewModalViewState;
      uint64_t v44 = v46;
    }
    sub_1002BDF38(v44, (void (*)(void))v43);
    sub_1002C01BC(v37, v23, (void (*)(void))type metadata accessor for ModalViewState);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      uint64_t v50 = type metadata accessor for ModalViewState.MapViewModal(0);
      sub_10012B520(v23, 1, v50);
      if (!v51)
      {
        uint64_t v52 = v61;
        sub_1002C015C(v23, v61, (void (*)(void))type metadata accessor for LocationPreviewViewState);
        uint64_t v53 = v62;
        sub_1002C01BC(v52 + *(int *)(v42 + 20), v62, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
        sub_1002BDF38(v52, (void (*)(void))type metadata accessor for LocationPreviewViewState);
        int v54 = swift_getEnumCaseMultiPayload();
        uint64_t v39 = v67;
        if (v54 != 5)
        {
          sub_1002BDF38(v53, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
          uint64_t v40 = 1;
          return _s7Weather24LocationCompositionStateOwst_0(v39, v40, 1, v12);
        }
        uint64_t v47 = v12;
        uint64_t v55 = v53;
        uint64_t v56 = v59;
        sub_1002C015C(v55, v59, (void (*)(void))type metadata accessor for MoonDetailViewState);
        uint64_t v49 = v56;
        goto LABEL_19;
      }
      sub_100178110(v23, &qword_100E663E8);
    }
    else
    {
      sub_1002BDF38(v23, (void (*)(void))type metadata accessor for ModalViewState);
    }
    uint64_t v40 = 1;
    uint64_t v39 = v67;
    return _s7Weather24LocationCompositionStateOwst_0(v39, v40, 1, v12);
  }
  sub_1002C015C(v33, (uint64_t)v19, (void (*)(void))type metadata accessor for MoonDetailViewState);
  uint64_t v38 = (uint64_t)v19;
  uint64_t v39 = v67;
  sub_1002C015C(v38, v67, (void (*)(void))type metadata accessor for MoonDetailViewState);
  uint64_t v40 = 0;
  uint64_t v12 = v58;
  return _s7Weather24LocationCompositionStateOwst_0(v39, v40, 1, v12);
}

uint64_t type metadata accessor for MoonDetailInputFactory()
{
  return self;
}

uint64_t *sub_1002BD00C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = (int *)type metadata accessor for MoonDetailInput.Input(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v9 = type metadata accessor for Location();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      uint64_t v10 = v7[5];
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      type metadata accessor for MoonDetailSelectedDate();
      swift_getEnumCaseMultiPayload();
      uint64_t v13 = type metadata accessor for Date();
      uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
      v14(v11, v12, v13);
      swift_storeEnumTagMultiPayload();
      v14((char *)a1 + v7[6], (char *)a2 + v7[6], v13);
      v14((char *)a1 + v7[7], (char *)a2 + v7[7], v13);
      v14((char *)a1 + v7[8], (char *)a2 + v7[8], v13);
      uint64_t v15 = v7[9];
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = type metadata accessor for Locale();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      *((unsigned char *)a1 + v7[10]) = *((unsigned char *)a2 + v7[10]);
      *((unsigned char *)a1 + v7[11]) = *((unsigned char *)a2 + v7[11]);
      uint64_t v19 = v7[12];
      uint64_t v20 = (uint64_t *)((char *)a1 + v19);
      uint64_t v21 = (uint64_t *)((char *)a2 + v19);
      uint64_t v22 = type metadata accessor for NewsDataModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
      {
        uint64_t v23 = sub_10017DF08(&qword_100E670F0);
        memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *uint64_t v20 = *v21;
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v24 = type metadata accessor for News();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v20, v21, v24);
        }
        swift_storeEnumTagMultiPayload();
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v7);
    }
  }
  return a1;
}

uint64_t type metadata accessor for MoonDetailInput.Input(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E671D0);
}

uint64_t sub_1002BD358(uint64_t a1)
{
  uint64_t v2 = (int *)type metadata accessor for MoonDetailInput.Input(0);
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(a1, 1, (uint64_t)v2);
  if (!result)
  {
    uint64_t v4 = type metadata accessor for Location();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    uint64_t v5 = a1 + v2[5];
    type metadata accessor for MoonDetailSelectedDate();
    if (swift_getEnumCaseMultiPayload() <= 2)
    {
      uint64_t v6 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
    }
    uint64_t v7 = a1 + v2[6];
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    v9(v7, v8);
    v9(a1 + v2[7], v8);
    v9(a1 + v2[8], v8);
    uint64_t v10 = a1 + v2[9];
    uint64_t v11 = type metadata accessor for Locale();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    uint64_t v12 = a1 + v2[12];
    uint64_t v13 = type metadata accessor for NewsDataModel();
    uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v12, 1, v13);
    if (!result)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        return swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v14 = type metadata accessor for News();
        uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
        return v15(v12, v14);
      }
    }
  }
  return result;
}

char *sub_1002BD5AC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for MoonDetailInput.Input(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = type metadata accessor for Location();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = v6[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    type metadata accessor for MoonDetailSelectedDate();
    swift_getEnumCaseMultiPayload();
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
    v12(&a1[v6[6]], &a2[v6[6]], v11);
    v12(&a1[v6[7]], &a2[v6[7]], v11);
    v12(&a1[v6[8]], &a2[v6[8]], v11);
    uint64_t v13 = v6[9];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    uint64_t v16 = type metadata accessor for Locale();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    a1[v6[10]] = a2[v6[10]];
    a1[v6[11]] = a2[v6[11]];
    uint64_t v17 = v6[12];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    uint64_t v20 = type metadata accessor for NewsDataModel();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20))
    {
      uint64_t v21 = sub_10017DF08(&qword_100E670F0);
      memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)uint64_t v18 = *(void *)v19;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v22 = type metadata accessor for News();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v18, v19, v22);
      }
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v20);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  }
  return a1;
}

uint64_t sub_1002BD89C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for MoonDetailInput.Input(0);
  int v7 = _s7Weather24LocationCompositionStateOwet_0(a1, 1, (uint64_t)v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0(a2, 1, (uint64_t)v6);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      uint64_t v10 = v6[5];
      uint64_t v11 = a1 + v10;
      uint64_t v12 = a2 + v10;
      type metadata accessor for MoonDetailSelectedDate();
      swift_getEnumCaseMultiPayload();
      uint64_t v13 = type metadata accessor for Date();
      uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
      v14(v11, v12, v13);
      swift_storeEnumTagMultiPayload();
      v14(a1 + v6[6], a2 + v6[6], v13);
      v14(a1 + v6[7], a2 + v6[7], v13);
      v14(a1 + v6[8], a2 + v6[8], v13);
      uint64_t v15 = v6[9];
      uint64_t v16 = a1 + v15;
      uint64_t v17 = a2 + v15;
      uint64_t v18 = type metadata accessor for Locale();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      *(unsigned char *)(a1 + v6[10]) = *(unsigned char *)(a2 + v6[10]);
      *(unsigned char *)(a1 + v6[11]) = *(unsigned char *)(a2 + v6[11]);
      uint64_t v19 = v6[12];
      uint64_t v20 = (void *)(a1 + v19);
      uint64_t v21 = (void *)(a2 + v19);
      uint64_t v22 = type metadata accessor for NewsDataModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
      {
        uint64_t v23 = sub_10017DF08(&qword_100E670F0);
        memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *uint64_t v20 = *v21;
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v46 = type metadata accessor for News();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v46 - 8) + 16))(v20, v21, v46);
        }
        swift_storeEnumTagMultiPayload();
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
      }
      uint64_t v47 = a1;
      uint64_t v48 = (uint64_t)v6;
      goto LABEL_23;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_1002BDF38(a1, (void (*)(void))type metadata accessor for MoonDetailInput.Input);
LABEL_7:
    size_t v24 = *(void *)(*(void *)(a3 - 8) + 64);
    uint64_t v25 = (void *)a1;
    uint64_t v26 = (const void *)a2;
LABEL_8:
    memcpy(v25, v26, v24);
    return a1;
  }
  uint64_t v27 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 24))(a1, a2, v27);
  if (a1 != a2)
  {
    uint64_t v28 = v6[5];
    uint64_t v29 = a2 + v28;
    uint64_t v30 = a1 + v28;
    sub_1002BDF38(a1 + v28, (void (*)(void))type metadata accessor for MoonDetailSelectedDate);
    type metadata accessor for MoonDetailSelectedDate();
    swift_getEnumCaseMultiPayload();
    uint64_t v31 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v30, v29, v31);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v32 = v6[6];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  uint64_t v35 = type metadata accessor for Date();
  uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 24);
  v36(v33, v34, v35);
  v36(a1 + v6[7], a2 + v6[7], v35);
  v36(a1 + v6[8], a2 + v6[8], v35);
  uint64_t v37 = v6[9];
  uint64_t v38 = a1 + v37;
  uint64_t v39 = a2 + v37;
  uint64_t v40 = type metadata accessor for Locale();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 24))(v38, v39, v40);
  *(unsigned char *)(a1 + v6[10]) = *(unsigned char *)(a2 + v6[10]);
  *(unsigned char *)(a1 + v6[11]) = *(unsigned char *)(a2 + v6[11]);
  uint64_t v41 = v6[12];
  uint64_t v42 = (void *)(a1 + v41);
  uint64_t v43 = (void *)(a2 + v41);
  uint64_t v44 = type metadata accessor for NewsDataModel();
  LODWORD(v35) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v44);
  int v45 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v44);
  if (v35)
  {
    if (!v45)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        void *v42 = *v43;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v50 = type metadata accessor for News();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v50 - 8) + 16))(v42, v43, v50);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v47 = (uint64_t)v42;
      uint64_t v48 = v44;
LABEL_23:
      _s7Weather24LocationCompositionStateOwst_0(v47, 0, 1, v48);
      return a1;
    }
    goto LABEL_19;
  }
  if (v45)
  {
    sub_1002BDF38((uint64_t)v42, (void (*)(void))type metadata accessor for NewsDataModel);
LABEL_19:
    size_t v24 = *(void *)(*(void *)(sub_10017DF08(&qword_100E670F0) - 8) + 64);
    uint64_t v25 = v42;
    uint64_t v26 = v43;
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_1002BDF38((uint64_t)v42, (void (*)(void))type metadata accessor for NewsDataModel);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      void *v42 = *v43;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v51 = type metadata accessor for News();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v51 - 8) + 16))(v42, v43, v51);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1002BDF38(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

char *sub_1002BDF8C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for MoonDetailInput.Input(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = type metadata accessor for Location();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    uint64_t v8 = v6[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    type metadata accessor for MoonDetailSelectedDate();
    swift_getEnumCaseMultiPayload();
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32);
    v12(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
    v12(&a1[v6[6]], &a2[v6[6]], v11);
    v12(&a1[v6[7]], &a2[v6[7]], v11);
    v12(&a1[v6[8]], &a2[v6[8]], v11);
    uint64_t v13 = v6[9];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    uint64_t v16 = type metadata accessor for Locale();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    a1[v6[10]] = a2[v6[10]];
    a1[v6[11]] = a2[v6[11]];
    uint64_t v17 = v6[12];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    uint64_t v20 = type metadata accessor for NewsDataModel();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20))
    {
      uint64_t v21 = sub_10017DF08(&qword_100E670F0);
      memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        uint64_t v22 = type metadata accessor for News();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v18, v19, v22);
        swift_storeEnumTagMultiPayload();
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v20);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  }
  return a1;
}

uint64_t sub_1002BE28C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for MoonDetailInput.Input(0);
  int v7 = _s7Weather24LocationCompositionStateOwet_0(a1, 1, (uint64_t)v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0(a2, 1, (uint64_t)v6);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      uint64_t v10 = v6[5];
      uint64_t v11 = a1 + v10;
      uint64_t v12 = a2 + v10;
      type metadata accessor for MoonDetailSelectedDate();
      swift_getEnumCaseMultiPayload();
      uint64_t v13 = type metadata accessor for Date();
      uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32);
      v14(v11, v12, v13);
      swift_storeEnumTagMultiPayload();
      v14(a1 + v6[6], a2 + v6[6], v13);
      v14(a1 + v6[7], a2 + v6[7], v13);
      v14(a1 + v6[8], a2 + v6[8], v13);
      uint64_t v15 = v6[9];
      uint64_t v16 = a1 + v15;
      uint64_t v17 = a2 + v15;
      uint64_t v18 = type metadata accessor for Locale();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      *(unsigned char *)(a1 + v6[10]) = *(unsigned char *)(a2 + v6[10]);
      *(unsigned char *)(a1 + v6[11]) = *(unsigned char *)(a2 + v6[11]);
      uint64_t v19 = v6[12];
      uint64_t v20 = (void *)(a1 + v19);
      uint64_t v21 = (const void *)(a2 + v19);
      uint64_t v22 = type metadata accessor for NewsDataModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
      {
        uint64_t v23 = sub_10017DF08(&qword_100E670F0);
        memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          uint64_t v46 = type metadata accessor for News();
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v46 - 8) + 32))(v20, v21, v46);
          swift_storeEnumTagMultiPayload();
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
      }
      uint64_t v47 = a1;
      uint64_t v48 = (uint64_t)v6;
      goto LABEL_24;
    }
    goto LABEL_7;
  }
  if (!v8)
  {
    uint64_t v27 = type metadata accessor for Location();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 40))(a1, a2, v27);
    if (a1 != a2)
    {
      uint64_t v28 = v6[5];
      uint64_t v29 = a2 + v28;
      uint64_t v30 = a1 + v28;
      sub_1002BDF38(a1 + v28, (void (*)(void))type metadata accessor for MoonDetailSelectedDate);
      type metadata accessor for MoonDetailSelectedDate();
      swift_getEnumCaseMultiPayload();
      uint64_t v31 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 32))(v30, v29, v31);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v32 = v6[6];
    uint64_t v33 = a1 + v32;
    uint64_t v34 = a2 + v32;
    uint64_t v35 = type metadata accessor for Date();
    uint64_t v36 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 40);
    v36(v33, v34, v35);
    v36(a1 + v6[7], a2 + v6[7], v35);
    v36(a1 + v6[8], a2 + v6[8], v35);
    uint64_t v37 = v6[9];
    uint64_t v38 = a1 + v37;
    uint64_t v39 = a2 + v37;
    uint64_t v40 = type metadata accessor for Locale();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 40))(v38, v39, v40);
    *(unsigned char *)(a1 + v6[10]) = *(unsigned char *)(a2 + v6[10]);
    *(unsigned char *)(a1 + v6[11]) = *(unsigned char *)(a2 + v6[11]);
    uint64_t v41 = v6[12];
    uint64_t v42 = (void *)(a1 + v41);
    uint64_t v43 = (const void *)(a2 + v41);
    uint64_t v44 = type metadata accessor for NewsDataModel();
    LODWORD(v35) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v44);
    int v45 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v44);
    if (v35)
    {
      if (!v45)
      {
        if (swift_getEnumCaseMultiPayload())
        {
          memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
        }
        else
        {
          uint64_t v50 = type metadata accessor for News();
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v50 - 8) + 32))(v42, v43, v50);
          swift_storeEnumTagMultiPayload();
        }
        uint64_t v47 = (uint64_t)v42;
        uint64_t v48 = v44;
LABEL_24:
        _s7Weather24LocationCompositionStateOwst_0(v47, 0, 1, v48);
        return a1;
      }
    }
    else
    {
      if (!v45)
      {
        if (a1 == a2) {
          return a1;
        }
        sub_1002BDF38((uint64_t)v42, (void (*)(void))type metadata accessor for NewsDataModel);
        if (!swift_getEnumCaseMultiPayload())
        {
          uint64_t v51 = type metadata accessor for News();
          (*(void (**)(void *, const void *, uint64_t))(*(void *)(v51 - 8) + 32))(v42, v43, v51);
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        size_t v24 = *(void *)(*(void *)(v44 - 8) + 64);
        goto LABEL_20;
      }
      sub_1002BDF38((uint64_t)v42, (void (*)(void))type metadata accessor for NewsDataModel);
    }
    size_t v24 = *(void *)(*(void *)(sub_10017DF08(&qword_100E670F0) - 8) + 64);
LABEL_20:
    uint64_t v25 = v42;
    uint64_t v26 = v43;
    goto LABEL_8;
  }
  sub_1002BDF38(a1, (void (*)(void))type metadata accessor for MoonDetailInput.Input);
LABEL_7:
  size_t v24 = *(void *)(*(void *)(a3 - 8) + 64);
  uint64_t v25 = (void *)a1;
  uint64_t v26 = (const void *)a2;
LABEL_8:
  memcpy(v25, v26, v24);
  return a1;
}

uint64_t sub_1002BE940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002BE954);
}

uint64_t sub_1002BE954(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MoonDetailInput.Input(0);
  unsigned int v5 = _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_1002BE99C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002BE9B0);
}

uint64_t sub_1002BE9B0(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for MoonDetailInput.Input(0);

  return _s7Weather24LocationCompositionStateOwst_0(a1, v5, a3, v6);
}

uint64_t sub_1002BEA0C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MoonDetailInput.Input(0);

  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
}

uint64_t sub_1002BEA50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MoonDetailInput.Input(0);

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v4);
}

uint64_t type metadata accessor for MoonDetailInput(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E67168);
}

uint64_t sub_1002BEABC()
{
  uint64_t result = type metadata accessor for MoonDetailInput.Input(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

char *sub_1002BEB34(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Location();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    type metadata accessor for MoonDetailSelectedDate();
    swift_getEnumCaseMultiPayload();
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
    v12(&a1[a3[6]], &a2[a3[6]], v11);
    v12(&a1[a3[7]], &a2[a3[7]], v11);
    v12(&a1[a3[8]], &a2[a3[8]], v11);
    uint64_t v13 = a3[9];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    uint64_t v16 = type metadata accessor for Locale();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = a3[11];
    a1[a3[10]] = a2[a3[10]];
    a1[v17] = a2[v17];
    uint64_t v18 = a3[12];
    uint64_t v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    uint64_t v21 = type metadata accessor for NewsDataModel();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21))
    {
      uint64_t v22 = sub_10017DF08(&qword_100E670F0);
      memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)uint64_t v19 = *(void *)v20;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v24 = type metadata accessor for News();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v19, v20, v24);
      }
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v21);
    }
  }
  return a1;
}

uint64_t sub_1002BEE18(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  type metadata accessor for MoonDetailSelectedDate();
  if (swift_getEnumCaseMultiPayload() <= 2)
  {
    uint64_t v6 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  v9(a1 + a2[7], v8);
  v9(a1 + a2[8], v8);
  uint64_t v10 = a1 + a2[9];
  uint64_t v11 = type metadata accessor for Locale();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = a1 + a2[12];
  uint64_t v13 = type metadata accessor for NewsDataModel();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v12, 1, v13);
  if (!result)
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      return swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = type metadata accessor for News();
      uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
      return v16(v12, v15);
    }
  }
  return result;
}

uint64_t sub_1002BF050(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  type metadata accessor for MoonDetailSelectedDate();
  swift_getEnumCaseMultiPayload();
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  swift_storeEnumTagMultiPayload();
  v11(a1 + a3[6], a2 + a3[6], v10);
  v11(a1 + a3[7], a2 + a3[7], v10);
  v11(a1 + a3[8], a2 + a3[8], v10);
  uint64_t v12 = a3[9];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for Locale();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  uint64_t v17 = a3[12];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = type metadata accessor for NewsDataModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20))
  {
    uint64_t v21 = sub_10017DF08(&qword_100E670F0);
    memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v18 = *v19;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v22 = type metadata accessor for News();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v22 - 8) + 16))(v18, v19, v22);
    }
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v20);
  }
  return a1;
}

uint64_t sub_1002BF2E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v7 = a3[5];
    uint64_t v8 = a2 + v7;
    uint64_t v9 = a1 + v7;
    sub_1002BDF38(a1 + v7, (void (*)(void))type metadata accessor for MoonDetailSelectedDate);
    type metadata accessor for MoonDetailSelectedDate();
    swift_getEnumCaseMultiPayload();
    uint64_t v10 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v9, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24);
  v15(v12, v13, v14);
  v15(a1 + a3[7], a2 + a3[7], v14);
  v15(a1 + a3[8], a2 + a3[8], v14);
  uint64_t v16 = a3[9];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = type metadata accessor for Locale();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  uint64_t v20 = a3[12];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (void *)(a2 + v20);
  uint64_t v23 = type metadata accessor for NewsDataModel();
  LODWORD(v14) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v23);
  int v24 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23);
  if (v14)
  {
    if (!v24)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *uint64_t v21 = *v22;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v26 = type metadata accessor for News();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v21, v22, v26);
      }
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v23);
      return a1;
    }
LABEL_9:
    uint64_t v25 = sub_10017DF08(&qword_100E670F0);
    memcpy(v21, v22, *(void *)(*(void *)(v25 - 8) + 64));
    return a1;
  }
  if (v24)
  {
    sub_1002BDF38((uint64_t)v21, (void (*)(void))type metadata accessor for NewsDataModel);
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_1002BDF38((uint64_t)v21, (void (*)(void))type metadata accessor for NewsDataModel);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v21 = *v22;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v27 = type metadata accessor for News();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v21, v22, v27);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1002BF6A0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  type metadata accessor for MoonDetailSelectedDate();
  swift_getEnumCaseMultiPayload();
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  swift_storeEnumTagMultiPayload();
  v11(a1 + a3[6], a2 + a3[6], v10);
  v11(a1 + a3[7], a2 + a3[7], v10);
  v11(a1 + a3[8], a2 + a3[8], v10);
  uint64_t v12 = a3[9];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for Locale();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  uint64_t v17 = a3[12];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  uint64_t v20 = type metadata accessor for NewsDataModel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20))
  {
    uint64_t v21 = sub_10017DF08(&qword_100E670F0);
    memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      uint64_t v22 = type metadata accessor for News();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 32))(v18, v19, v22);
      swift_storeEnumTagMultiPayload();
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v20);
  }
  return a1;
}

uint64_t sub_1002BF944(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v7 = a3[5];
    uint64_t v8 = a2 + v7;
    uint64_t v9 = a1 + v7;
    sub_1002BDF38(a1 + v7, (void (*)(void))type metadata accessor for MoonDetailSelectedDate);
    type metadata accessor for MoonDetailSelectedDate();
    swift_getEnumCaseMultiPayload();
    uint64_t v10 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v9, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40);
  v15(v12, v13, v14);
  v15(a1 + a3[7], a2 + a3[7], v14);
  v15(a1 + a3[8], a2 + a3[8], v14);
  uint64_t v16 = a3[9];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = type metadata accessor for Locale();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  uint64_t v20 = a3[11];
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v20) = *(unsigned char *)(a2 + v20);
  uint64_t v21 = a3[12];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (const void *)(a2 + v21);
  uint64_t v24 = type metadata accessor for NewsDataModel();
  LODWORD(v14) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v24);
  int v25 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24);
  if (!v14)
  {
    if (!v25)
    {
      if (a1 == a2) {
        return a1;
      }
      sub_1002BDF38((uint64_t)v22, (void (*)(void))type metadata accessor for NewsDataModel);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v29 = type metadata accessor for News();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v29 - 8) + 32))(v22, v23, v29);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      size_t v26 = *(void *)(*(void *)(v24 - 8) + 64);
      goto LABEL_10;
    }
    sub_1002BDF38((uint64_t)v22, (void (*)(void))type metadata accessor for NewsDataModel);
LABEL_9:
    size_t v26 = *(void *)(*(void *)(sub_10017DF08(&qword_100E670F0) - 8) + 64);
LABEL_10:
    memcpy(v22, v23, v26);
    return a1;
  }
  if (v25) {
    goto LABEL_9;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    uint64_t v27 = type metadata accessor for News();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v27 - 8) + 32))(v22, v23, v27);
    swift_storeEnumTagMultiPayload();
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v24);
  return a1;
}

uint64_t sub_1002BFD04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002BFD18);
}

uint64_t sub_1002BFD18(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for Location();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    type metadata accessor for MoonDetailSelectedDate();
    sub_100162F30();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v12 = a3[5];
    }
    else
    {
      type metadata accessor for Date();
      sub_100162F30();
      if (*(_DWORD *)(v14 + 84) == a2)
      {
        uint64_t v8 = v13;
        uint64_t v12 = a3[6];
      }
      else
      {
        type metadata accessor for Locale();
        sub_100162F30();
        if (*(_DWORD *)(v16 + 84) == a2)
        {
          uint64_t v8 = v15;
          uint64_t v12 = a3[9];
        }
        else
        {
          if (a2 == 254)
          {
            unsigned int v17 = *(unsigned __int8 *)(a1 + a3[11]);
            if (v17 >= 2) {
              return ((v17 + 2147483646) & 0x7FFFFFFF) + 1;
            }
            else {
              return 0;
            }
          }
          uint64_t v8 = sub_10017DF08(&qword_100E670F0);
          uint64_t v12 = a3[12];
        }
      }
    }
    uint64_t v9 = a1 + v12;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_1002BFE44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002BFE58);
}

void sub_1002BFE58(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  type metadata accessor for Location();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    type metadata accessor for MoonDetailSelectedDate();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      type metadata accessor for Date();
      sub_100162F30();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[6];
      }
      else
      {
        type metadata accessor for Locale();
        sub_100162F30();
        if (*(_DWORD *)(v18 + 84) == a3)
        {
          uint64_t v10 = v17;
          uint64_t v14 = a4[9];
        }
        else
        {
          if (a3 == 254)
          {
            *(unsigned char *)(a1 + a4[11]) = a2 + 1;
            return;
          }
          uint64_t v10 = sub_10017DF08(&qword_100E670F0);
          uint64_t v14 = a4[12];
        }
      }
    }
    uint64_t v11 = a1 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

void sub_1002BFF70()
{
  type metadata accessor for Location();
  if (v0 <= 0x3F)
  {
    type metadata accessor for MoonDetailSelectedDate();
    if (v1 <= 0x3F)
    {
      type metadata accessor for Date();
      if (v2 <= 0x3F)
      {
        type metadata accessor for Locale();
        if (v3 <= 0x3F)
        {
          sub_1002C0104();
          if (v4 <= 0x3F) {
            swift_initStructMetadata();
          }
        }
      }
    }
  }
}

void sub_1002C0104()
{
  if (!qword_100E671E0)
  {
    type metadata accessor for NewsDataModel();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E671E0);
    }
  }
}

uint64_t sub_1002C015C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1002C01BC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_1002C0210(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E670F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002C0278(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E663E0);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_100109314();
  uint64_t v144 = v4;
  uint64_t v5 = sub_10017DF08(&qword_100E663D8);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v143 = v7;
  uint64_t v8 = type metadata accessor for LocationPreviewViewState(0);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v145 = v10;
  uint64_t v11 = sub_10017DF08(&qword_100E663F0);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v150 = v13;
  uint64_t v14 = sub_10017DF08(&qword_100E66418);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_100109314();
  uint64_t v149 = v16;
  uint64_t v17 = sub_10017DF08(&qword_100E66420);
  uint64_t v18 = sub_100109308(v17);
  __chkstk_darwin(v18);
  sub_100109314();
  uint64_t v148 = v19;
  uint64_t v20 = sub_10017DF08(&qword_100E66428);
  uint64_t v21 = sub_100109308(v20);
  __chkstk_darwin(v21);
  sub_100109314();
  uint64_t v147 = v22;
  uint64_t v23 = sub_10017DF08(&qword_100E66430);
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_100109314();
  uint64_t v146 = v25;
  uint64_t v26 = sub_10017DF08(&qword_100E66438);
  uint64_t v27 = sub_100109308(v26);
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v140 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_10017DF08(&qword_100E66440);
  uint64_t v31 = sub_100109308(v30);
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)&v140 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for ModalViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v35);
  uint64_t v37 = (char *)&v140 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  uint64_t v40 = (char *)&v140 - v39;
  __chkstk_darwin(v41);
  uint64_t v43 = (char *)&v140 - v42;
  __chkstk_darwin(v44);
  uint64_t v46 = (char *)&v140 - v45;
  uint64_t v47 = a1;
  uint64_t v48 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView;
  sub_1002C0A38(v48, (uint64_t)&v140 - v45);
  uint64_t v151 = v34;
  swift_storeEnumTagMultiPayload();
  sub_10011990C();
  char v50 = v49;
  sub_1002C0B00((uint64_t)v43, (void (*)(void))type metadata accessor for ModalViewState);
  sub_1002C0B00((uint64_t)v46, (void (*)(void))type metadata accessor for ModalViewState);
  if (v50) {
    return 1;
  }
  uint64_t v52 = (uint64_t)v33;
  uint64_t v54 = v146;
  uint64_t v53 = v147;
  uint64_t v142 = v47;
  uint64_t v56 = v148;
  uint64_t v55 = v149;
  sub_1002C0A38(v48, (uint64_t)v40);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_1002C0B00((uint64_t)v40, (void (*)(void))type metadata accessor for ModalViewState);
  if (EnumCaseMultiPayload == 5)
  {
    uint64_t v58 = type metadata accessor for AppConfigurationState();
    uint64_t v61 = sub_10017E0AC(v58, v59, v60, v58);
    uint64_t v62 = v29;
    uint64_t v65 = sub_1001630C0((uint64_t)v29, v63, v64, v61);
    uint64_t v66 = sub_100179E6C(v65);
    uint64_t v67 = sub_1001A1CA8(v66);
    uint64_t v68 = sub_1001A04C0(v67);
    uint64_t v69 = v55;
    _s7Weather24LocationCompositionStateOwst_0(v55, 1, 1, v68);
    uint64_t v71 = v150;
    uint64_t v70 = v151;
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0(v71, 0, 1, v70);
    uint64_t v72 = (uint64_t)v62;
    uint64_t v51 = sub_10017F964(0, 3, v52, v73, v74, v75, v76, v77, 0, v53, v56, v69, v71, 0, 0, 0, 0, 0, 0,
            0,
            v142);
    sub_1001781AC(v71, &qword_100E663F0);
    uint64_t v78 = v69;
  }
  else
  {
    sub_1002C0A38(v48, (uint64_t)v37);
    int v79 = swift_getEnumCaseMultiPayload();
    uint64_t v80 = v55;
    uint64_t v81 = v142;
    uint64_t v82 = v150;
    uint64_t v83 = v29;
    if (!v79)
    {
      sub_1002C0A9C((uint64_t)v37, v145);
      uint64_t v103 = type metadata accessor for AppConfigurationState();
      uint64_t v141 = v52;
      uint64_t v106 = sub_10017E0AC(v103, v104, v105, v103);
      uint64_t v109 = sub_1001630C0((uint64_t)v29, v107, v108, v106);
      uint64_t v110 = sub_100179E6C(v109);
      uint64_t v111 = sub_1001A1CA8(v110);
      uint64_t v112 = sub_1001A04C0(v111);
      sub_1001630F0(v112);
      uint64_t v113 = type metadata accessor for PreviewLocation();
      uint64_t v114 = v143;
      _s7Weather24LocationCompositionStateOwst_0(v143, 1, 1, v113);
      uint64_t v115 = type metadata accessor for LocationPreviewModalViewState(0);
      uint64_t v116 = v144;
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0(v116, 0, 1, v115);
      sub_1004E4A98(v114, v116, v82);
      sub_1001781AC(v116, &qword_100E663E0);
      sub_1001781AC(v114, &qword_100E663D8);
      uint64_t v117 = v151;
      swift_storeEnumTagMultiPayload();
      _s7Weather24LocationCompositionStateOwst_0(v82, 0, 1, v117);
      uint64_t v139 = v142;
      uint64_t v118 = sub_10019E798();
      uint64_t v119 = v141;
      uint64_t v126 = (uint64_t)v83;
      uint64_t v51 = sub_10017F964(v118, v120, v141, v121, v122, v123, v124, v125, v128, v129, v130, v131, v132, v133, v134, v135, v136, v137, v138,
              0,
              v139);
      sub_1001781AC(v82, &qword_100E663F0);
      sub_1001781AC(v80, &qword_100E66418);
      sub_1001781AC(v56, &qword_100E66420);
      sub_1001781AC(v53, &qword_100E66428);
      sub_1001781AC(v54, &qword_100E66430);
      sub_1001781AC(v126, &qword_100E66438);
      sub_1001781AC(v119, &qword_100E66440);
      sub_1002C0B00(v145, (void (*)(void))type metadata accessor for LocationPreviewViewState);
      return v51;
    }
    sub_1002C0B00((uint64_t)v37, (void (*)(void))type metadata accessor for ModalViewState);
    uint64_t v84 = type metadata accessor for AppConfigurationState();
    uint64_t v87 = sub_10017E0AC(v84, v85, v86, v84);
    uint64_t v90 = sub_1001630C0((uint64_t)v29, v88, v89, v87);
    uint64_t v91 = sub_100179E6C(v90);
    uint64_t v92 = sub_1001A1CA8(v91);
    uint64_t v93 = sub_1001A04C0(v92);
    sub_1001630F0(v93);
    uint64_t v94 = v151;
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0(v82, 0, 1, v94);
    uint64_t v95 = sub_10019E798();
    uint64_t v102 = sub_10017F964(v95, v96, v52, v97, v98, v99, v100, v101, v128, v129, v130, v131, v132, v133, v134, v135, v136, v137, v138,
             0,
             v81);
    uint64_t v72 = (uint64_t)v83;
    uint64_t v51 = v102;
    sub_1001781AC(v82, &qword_100E663F0);
    uint64_t v78 = v80;
  }
  sub_1001781AC(v78, &qword_100E66418);
  sub_1001781AC(v56, &qword_100E66420);
  sub_1001781AC(v53, &qword_100E66428);
  sub_1001781AC(v54, &qword_100E66430);
  sub_1001781AC(v72, &qword_100E66438);
  sub_1001781AC(v52, &qword_100E66440);
  return v51;
}

uint64_t sub_1002C0A38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ModalViewState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002C0A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationPreviewViewState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002C0B00(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

ValueMetadata *type metadata accessor for TipViewPlacement()
{
  return &type metadata for TipViewPlacement;
}

unint64_t sub_1002C0B74()
{
  unint64_t result = qword_100E67250;
  if (!qword_100E67250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E67250);
  }
  return result;
}

uint64_t sub_1002C0BC0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6D72657465646E75 && a2 == 0xEC00000064656E69;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1953720684 && a2 == 0xE400000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1002C0D18()
{
  return 3;
}

uint64_t sub_1002C0D20(char a1)
{
  if (!a1) {
    return 0x6D72657465646E75;
  }
  if (a1 == 1) {
    return 1953720684;
  }
  return 0x6E6F697461636F6CLL;
}

uint64_t sub_1002C0D78()
{
  return 1;
}

uint64_t sub_1002C0D98()
{
  return 0;
}

uint64_t sub_1002C0DA4(void *a1, char a2)
{
  sub_10017DF08(&qword_100E672A0);
  sub_100179C0C();
  uint64_t v27 = v5;
  uint64_t v28 = v4;
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v26 = v6;
  sub_10017DF08(&qword_100E672A8);
  sub_100179C0C();
  uint64_t v24 = v8;
  uint64_t v25 = v7;
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_10017DF08(&qword_100E672B0);
  sub_100179C0C();
  uint64_t v23 = v13;
  __chkstk_darwin(v14);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = sub_10017DF08(&qword_100E672B8);
  sub_100179C0C();
  uint64_t v20 = v19;
  __chkstk_darwin(v21);
  sub_100125FF8();
  sub_1001B1E64(a1, a1[3]);
  sub_1002C182C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  if (a2)
  {
    if (a2 == 1)
    {
      sub_1002C18C4();
      sub_100178FC0();
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v11, v25);
    }
    else
    {
      sub_1002C1878();
      sub_100178FC0();
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    }
  }
  else
  {
    sub_1002C1910();
    sub_100178FC0();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v17, v12);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v2, v18);
}

char *sub_1002C1020(void *a1)
{
  uint64_t v36 = sub_10017DF08(&qword_100E67258);
  sub_100179C0C();
  uint64_t v39 = v3;
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v41 = v5;
  sub_10017DF08(&qword_100E67260);
  sub_100179C0C();
  uint64_t v37 = v7;
  uint64_t v38 = v6;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_10017DF08(&qword_100E67268);
  sub_100179C0C();
  uint64_t v35 = v12;
  __chkstk_darwin(v13);
  sub_100125FF8();
  uint64_t v14 = sub_10017DF08(&qword_100E67270);
  sub_100179C0C();
  uint64_t v40 = v15;
  __chkstk_darwin(v16);
  sub_1001626E0();
  uint64_t v19 = (char *)(v18 - v17);
  sub_1001B1E64(a1, a1[3]);
  sub_1002C182C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v42) {
    goto LABEL_9;
  }
  uint64_t v43 = (uint64_t)a1;
  uint64_t v20 = KeyedDecodingContainer.allKeys.getter();
  uint64_t v21 = *(void *)(v20 + 16);
  if (!v21
    || (uint64_t v22 = v19,
        uint64_t v19 = (char *)*(unsigned __int8 *)(v20 + 32),
        sub_100723214(1, v21, v20, v20 + 32, 0, (2 * v21) | 1),
        uint64_t v24 = v23,
        unint64_t v26 = v25,
        swift_bridgeObjectRelease(),
        v24 != v26 >> 1))
  {
    uint64_t v27 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v29 = v28;
    uint64_t v19 = (char *)v28 + *(int *)(sub_10017DF08(&qword_100E67280) + 48);
    *uint64_t v29 = &type metadata for TipViewPlacement;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v27 - 8) + 104))(v29, enum case for DecodingError.typeMismatch(_:), v27);
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v30 = sub_100179EA4();
    v31(v30);
    a1 = (void *)v43;
LABEL_9:
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
    return v19;
  }
  if (v19)
  {
    if (v19 == 1)
    {
      sub_1002C18C4();
      sub_10018519C();
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v10, v38);
    }
    else
    {
      sub_1002C1878();
      sub_10018519C();
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v41, v36);
    }
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v22, v14);
  }
  else
  {
    sub_1002C1910();
    sub_10018519C();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v1, v11);
    swift_unknownObjectRelease();
    uint64_t v33 = sub_100179EA4();
    v34(v33);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v43);
  return v19;
}

Swift::Int sub_1002C14CC()
{
  return _s7Weather22LocationSessionTriggerO9hashValueSivg_0(*v0);
}

uint64_t sub_1002C14EC()
{
  return sub_1002C0D20(*v0);
}

uint64_t sub_1002C14F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002C0BC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002C151C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1002C0D18();
  *a1 = result;
  return result;
}

uint64_t sub_1002C1544(uint64_t a1)
{
  unint64_t v2 = sub_1002C182C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002C1580(uint64_t a1)
{
  unint64_t v2 = sub_1002C182C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002C15C0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1002C0D78();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1002C15EC()
{
  return static HeaderLineLimitKey.defaultValue.getter();
}

uint64_t sub_1002C1608@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = static LocationSearchEntityFromStringResolver.__derived_struct_equals(_:_:)();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1002C1634(uint64_t a1)
{
  unint64_t v2 = sub_1002C18C4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002C1670(uint64_t a1)
{
  unint64_t v2 = sub_1002C18C4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002C16AC(uint64_t a1)
{
  unint64_t v2 = sub_1002C1878();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002C16E8(uint64_t a1)
{
  unint64_t v2 = sub_1002C1878();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002C1724(uint64_t a1)
{
  unint64_t v2 = sub_1002C1910();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002C1760(uint64_t a1)
{
  unint64_t v2 = sub_1002C1910();

  return CodingKey.debugDescription.getter(a1, v2);
}

char *sub_1002C179C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1002C1020(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_1002C17C8(void *a1)
{
  return sub_1002C0DA4(a1, *v1);
}

uint64_t sub_1002C17E4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = static WeatherChange.Direction.read(from:)();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1002C1810()
{
  return WeatherChange.Direction.write(to:)();
}

unint64_t sub_1002C182C()
{
  unint64_t result = qword_100E67278;
  if (!qword_100E67278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E67278);
  }
  return result;
}

unint64_t sub_1002C1878()
{
  unint64_t result = qword_100E67288;
  if (!qword_100E67288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E67288);
  }
  return result;
}

unint64_t sub_1002C18C4()
{
  unint64_t result = qword_100E67290;
  if (!qword_100E67290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E67290);
  }
  return result;
}

unint64_t sub_1002C1910()
{
  unint64_t result = qword_100E67298;
  if (!qword_100E67298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E67298);
  }
  return result;
}

unsigned char *_s7Weather16TipViewPlacementOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002C1A28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TipViewPlacement.CodingKeys()
{
  return &type metadata for TipViewPlacement.CodingKeys;
}

ValueMetadata *type metadata accessor for TipViewPlacement.UndeterminedCodingKeys()
{
  return &type metadata for TipViewPlacement.UndeterminedCodingKeys;
}

ValueMetadata *type metadata accessor for TipViewPlacement.ListCodingKeys()
{
  return &type metadata for TipViewPlacement.ListCodingKeys;
}

ValueMetadata *type metadata accessor for TipViewPlacement.LocationCodingKeys()
{
  return &type metadata for TipViewPlacement.LocationCodingKeys;
}

unint64_t sub_1002C1A94()
{
  unint64_t result = qword_100E672C0;
  if (!qword_100E672C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E672C0);
  }
  return result;
}

unint64_t sub_1002C1AE4()
{
  unint64_t result = qword_100E672C8;
  if (!qword_100E672C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E672C8);
  }
  return result;
}

unint64_t sub_1002C1B34()
{
  unint64_t result = qword_100E672D0;
  if (!qword_100E672D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E672D0);
  }
  return result;
}

unint64_t sub_1002C1B84()
{
  unint64_t result = qword_100E672D8;
  if (!qword_100E672D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E672D8);
  }
  return result;
}

unint64_t sub_1002C1BD4()
{
  unint64_t result = qword_100E672E0;
  if (!qword_100E672E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E672E0);
  }
  return result;
}

unint64_t sub_1002C1C24()
{
  unint64_t result = qword_100E672E8;
  if (!qword_100E672E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E672E8);
  }
  return result;
}

unint64_t sub_1002C1C74()
{
  unint64_t result = qword_100E672F0;
  if (!qword_100E672F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E672F0);
  }
  return result;
}

unint64_t sub_1002C1CC4()
{
  unint64_t result = qword_100E672F8;
  if (!qword_100E672F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E672F8);
  }
  return result;
}

unint64_t sub_1002C1D14()
{
  unint64_t result = qword_100E67300;
  if (!qword_100E67300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E67300);
  }
  return result;
}

uint64_t sub_1002C1D78(uint64_t a1, char a2)
{
  if (!a2) {
    sub_1000A9E94();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C1E00()
{
  sub_10015032C();
  switch(v0)
  {
    case 2:
      sub_1002EE7C0();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C1ED4(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 2:
    case 7:
      sub_1002EECF4();
      break;
    case 6:
      sub_1002EE93C();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C2010()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C2088(uint64_t a1, char a2)
{
  if (!a2) {
    sub_1002EECA4();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C2110()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C2180()
{
  return String.hash(into:)();
}

uint64_t sub_1002C2190()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C21D8()
{
  sub_1002EE7D4();
  switch(v0)
  {
    case 2:
      sub_1002EF49C();
      break;
    case 3:
      sub_1002EF4C4();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C2270(uint64_t a1, uint64_t a2)
{
  return sub_1002C3264(a1, a2, (void (*)(uint64_t))sub_1004E6B00);
}

uint64_t sub_1002C2288(uint64_t a1, uint64_t a2)
{
  return sub_1002C3264(a1, a2, (void (*)(uint64_t))sub_1004E684C);
}

uint64_t sub_1002C22A0()
{
  sub_1002EE7D4();
  switch(v0)
  {
    case 1:
      sub_1002EE93C();
      break;
    case 2:
      sub_1002EECF4();
      break;
    case 3:
      sub_1002EF49C();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C235C()
{
  return String.hash(into:)();
}

uint64_t sub_1002C2374()
{
  sub_1002EEE88();
  switch(v0)
  {
    case 1:
      sub_1002EEAD8();
      break;
    case 3:
      sub_1002EF130();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C2414(uint64_t a1, char a2)
{
  if (a2)
  {
    sub_1002EEC68();
    sub_1002EEE6C();
  }
  else
  {
    sub_10018A244();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C2480()
{
  sub_1002EF1A0();
  switch(v0)
  {
    case 1:
      sub_1002EECF4();
      break;
    case 3:
      sub_1002EE970();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C254C(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 2:
      sub_1002EEAD8();
      break;
    case 6:
      sub_1002EF130();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C2644()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C26B4(uint64_t a1, uint64_t a2)
{
  return sub_1002C3264(a1, a2, (void (*)(uint64_t))sub_1001DEDB8);
}

uint64_t sub_1002C26CC(uint64_t a1, uint64_t a2)
{
  return sub_1002C3264(a1, a2, (void (*)(uint64_t))sub_1003ADD20);
}

void sub_1002C26E4(uint64_t a1, char a2)
{
}

void sub_1002C2718(uint64_t a1, char a2)
{
  if (a2) {
    Swift::UInt64 v2 = 0x4090000000000000;
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  Hasher._combine(_:)(v2);
}

uint64_t sub_1002C2748(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 2:
      sub_10018A244();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C2818(uint64_t a1, uint64_t a2)
{
  return sub_1002C3264(a1, a2, (void (*)(uint64_t))sub_100235F78);
}

uint64_t sub_1002C2830(uint64_t a1, uint64_t a2)
{
  return sub_1002C3264(a1, a2, (void (*)(uint64_t))sub_1009DAD0C);
}

uint64_t sub_1002C2848()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C28AC()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C2980(uint64_t a1, char a2)
{
  if (a2) {
    sub_1002EE580();
  }
  else {
    sub_1002EEDB0();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C29D8(uint64_t a1, char a2)
{
  if (!a2) {
    sub_10011CDB0();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C2A5C()
{
  sub_1002EF1A0();
  switch(v0)
  {
    case 3:
      sub_10015032C();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

void sub_1002C2AF8(uint64_t a1, char a2)
{
}

uint64_t sub_1002C2B2C()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C2B94()
{
  sub_1002EF3B4();
  switch(v0)
  {
    case 4:
      sub_1002EF4C4();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C2C68()
{
  sub_1002EF188();
  switch(v0)
  {
    case 1:
      sub_1002EF3B4();
      break;
    case 2:
      sub_10018A244();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C2CFC()
{
  sub_10018A244();
  switch(v0)
  {
    case 1:
      sub_1002EE7C0();
      break;
    case 2:
      sub_1002EE9DC();
      break;
    case 3:
      sub_1000B6910();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C2D90()
{
  sub_1002EF188();
  switch(v0)
  {
    case 1:
      sub_10018A244();
      break;
    case 2:
      sub_1002EE9DC();
      break;
    case 3:
      sub_1000B6910();
      break;
    case 5:
      sub_1002EE7C0();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C2E38(uint64_t a1, uint64_t a2)
{
  return sub_1002C3264(a1, a2, (void (*)(uint64_t))sub_1005A0EEC);
}

uint64_t sub_1002C2E50()
{
  sub_1002EF06C();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C2EAC(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 3:
      sub_1002EE93C();
      break;
    case 4:
      sub_10018A244();
      break;
    case 5:
      sub_1000B6910();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C2F94()
{
  sub_1002EE948();
  switch(v0)
  {
    case 1:
    case 6:
      sub_10018A244();
      break;
    case 2:
      sub_1002EE93C();
      break;
    case 3:
    case 7:
      sub_1002EE7C0();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C30A4(uint64_t a1, uint64_t a2)
{
  return sub_1002C3264(a1, a2, (void (*)(uint64_t))sub_10094865C);
}

uint64_t sub_1002C30BC(uint64_t a1, char a2)
{
  if (!a2) {
    sub_1002EE93C();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C3144()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C31B4()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

void sub_1002C321C(uint64_t a1, unsigned __int8 a2)
{
}

uint64_t sub_1002C324C(uint64_t a1, uint64_t a2)
{
  return sub_1002C3264(a1, a2, (void (*)(uint64_t))DetailKind.rawValue.getter);
}

uint64_t sub_1002C3264(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  a3(a2);
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C32BC()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C332C(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 1:
      sub_1002EEE88();
      break;
    case 5:
      sub_1002EF130();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C3410(uint64_t a1, char a2)
{
  if (a2) {
    sub_1002EE5E0();
  }
  else {
    sub_1002EE970();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

void sub_1002C3468(int a1, Swift::UInt a2)
{
}

uint64_t sub_1002C3490()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C34E8(uint64_t a1, char a2)
{
  if (a2) {
    sub_1002EEE50();
  }
  else {
    sub_1002EECA4();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C355C()
{
  sub_1002EE948();
  switch(v0)
  {
    case 2:
    case 5:
    case 8:
      sub_1002EEB24();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C36BC(uint64_t a1, char a2)
{
  if (!a2) {
    sub_1002EF4B0();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C3738(uint64_t a1, char a2)
{
  if (!a2) {
    sub_1002EE93C();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C37C8()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C38B0()
{
  sub_1002EE948();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C3950()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C3A64(uint64_t a1, char a2)
{
  if (a2) {
    sub_100214F74();
  }
  else {
    sub_1002EE93C();
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C3ADC(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 2:
      sub_1002EEB24();
      break;
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      sub_1002EF1B8();
      break;
    default:
      break;
  }
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002C3C38()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1002C3D5C(uint64_t a1, uint64_t a2)
{
  return sub_1002C4B78(a1, a2, (void (*)(uint64_t))sub_1006A2180);
}

Swift::Int sub_1002C3D74(uint64_t a1, uint64_t a2)
{
  return sub_1002C4B78(a1, a2, (void (*)(uint64_t))sub_1006B80C0);
}

Swift::Int sub_1002C3D90(uint64_t a1, char a2)
{
  if (a2) {
    sub_100214F74();
  }
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

Swift::Int sub_1002C3E20(uint64_t a1, uint64_t a2)
{
  return sub_1002C4B78(a1, a2, (void (*)(uint64_t))sub_100654004);
}

Swift::Int sub_1002C3E38(uint64_t a1, uint64_t a2)
{
  return sub_1002C4914(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1002C38B0);
}

Swift::Int sub_1002C3E50(uint64_t a1, uint64_t a2)
{
  return sub_1002C4B78(a1, a2, (void (*)(uint64_t))sub_100653F10);
}

Swift::Int sub_1002C3E68(uint64_t a1, char a2)
{
  if (a2) {
    sub_100214F74();
  }
  else {
    sub_1002EE93C();
  }
  sub_10010979C();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

Swift::Int sub_1002C3EEC()
{
  sub_10018C820();
  if (!v0) {
    sub_1002EF4B0();
  }
  sub_10010979C();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

Swift::Int sub_1002C3F6C(uint64_t a1, uint64_t a2)
{
  return sub_1002C4B78(a1, a2, (void (*)(uint64_t))sub_100653BCC);
}

Swift::Int sub_1002C3F84()
{
  sub_10018C820();
  if (v0) {
    sub_1002EEE50();
  }
  else {
    sub_1002EECA4();
  }
  sub_10010979C();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

Swift::Int sub_1002C3FFC()
{
  return Hasher._finalize()();
}

Swift::Int sub_1002C4068(uint64_t a1, Swift::UInt a2)
{
  return Hasher._finalize()();
}

Swift::Int sub_1002C40AC()
{
  sub_10018C820();
  if (v0) {
    sub_1002EE5E0();
  }
  else {
    sub_1002EE970();
  }
  sub_10010979C();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

Swift::Int sub_1002C4108(uint64_t a1, uint64_t a2)
{
  return sub_1002C4B78(a1, a2, (void (*)(uint64_t))sub_100A6C3F8);
}

Swift::Int sub_1002C4120()
{
  return Hasher._finalize()();
}

Swift::Int sub_1002C4194(uint64_t a1, uint64_t a2)
{
  return sub_1002C4B78(a1, a2, (void (*)(uint64_t))DetailKind.rawValue.getter);
}

Swift::Int sub_1002C41AC(uint64_t a1, unsigned __int8 a2)
{
  return Hasher._finalize()();
}

Swift::Int sub_1002C41F8()
{
  return Hasher._finalize()();
}

Swift::Int sub_1002C4264()
{
  return Hasher._finalize()();
}

Swift::Int sub_1002C42D8(uint64_t a1, char a2)
{
  if (!a2) {
    sub_1002EE93C();
  }
  sub_10010979C();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

Swift::Int sub_1002C436C(uint64_t a1, uint64_t a2)
{
  return sub_1002C4B78(a1, a2, (void (*)(uint64_t))sub_10094865C);
}

Swift::Int sub_1002C4384(uint64_t a1, uint64_t a2)
{
  return sub_1002C4B78(a1, a2, (void (*)(uint64_t))sub_100948878);
}

Swift::Int sub_1002C439C(uint64_t a1, uint64_t a2)
{
  return sub_1002C4B78(a1, a2, (void (*)(uint64_t))sub_10097E890);
}

Swift::Int sub_1002C43B4()
{
  return Hasher._finalize()();
}

Swift::Int sub_1002C441C(uint64_t a1, uint64_t a2)
{
  return sub_1002C4B78(a1, a2, (void (*)(uint64_t))sub_1005A0EEC);
}

Swift::Int sub_1002C4434(uint64_t a1, uint64_t a2)
{
  return sub_1002C4B78(a1, a2, (void (*)(uint64_t))sub_10081D834);
}

Swift::Int sub_1002C444C(uint64_t a1, uint64_t a2)
{
  return sub_1002C4914(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1002C2CFC);
}

Swift::Int sub_1002C4464(uint64_t a1, uint64_t a2)
{
  return sub_1002C4914(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1002C2C68);
}

Swift::Int sub_1002C447C(uint64_t a1, uint64_t a2)
{
  return sub_1002C4B78(a1, a2, (void (*)(uint64_t))sub_10038DF14);
}

Swift::Int sub_1002C4494()
{
  return Hasher._finalize()();
}

Swift::Int sub_1002C4500(uint64_t a1, uint64_t a2)
{
  return sub_1002C4914(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1002C2AF8);
}

Swift::Int sub_1002C4518(uint64_t a1, uint64_t a2)
{
  return sub_1002C4914(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1002C2A5C);
}

Swift::Int sub_1002C4530(uint64_t a1, char a2)
{
  if (!a2) {
    sub_10011CDB0();
  }
  sub_10010979C();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

Swift::Int sub_1002C45C0()
{
  sub_10018C820();
  if (v0) {
    sub_1002EE580();
  }
  else {
    sub_1002EEDB0();
  }
  sub_10010979C();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

Swift::Int sub_1002C461C(uint64_t a1, uint64_t a2)
{
  return sub_1002C4914(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1002C28AC);
}

Swift::Int sub_1002C4634()
{
  return Hasher._finalize()();
}

Swift::Int sub_1002C469C(uint64_t a1, uint64_t a2)
{
  return sub_1002C4B78(a1, a2, (void (*)(uint64_t))sub_1009DAD0C);
}

Swift::Int sub_1002C46B4(uint64_t a1, uint64_t a2)
{
  return sub_1002C4B78(a1, a2, (void (*)(uint64_t))sub_100235F78);
}

Swift::Int sub_1002C46CC(uint64_t a1, uint64_t a2)
{
  return sub_1002C4B78(a1, a2, (void (*)(uint64_t))sub_10040B474);
}

Swift::Int sub_1002C46E4(uint64_t a1, char a2)
{
  char v2 = a2 & 1;
  Hasher.init(_seed:)();
  sub_1002C2718((uint64_t)v4, v2);
  return Hasher._finalize()();
}

Swift::Int sub_1002C4728(uint64_t a1, uint64_t a2)
{
  return sub_1002C4914(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1002C26E4);
}

Swift::Int sub_1002C4740(uint64_t a1, uint64_t a2)
{
  return sub_1002C4B78(a1, a2, (void (*)(uint64_t))sub_1003ADD20);
}

Swift::Int sub_1002C4758(uint64_t a1, uint64_t a2)
{
  return sub_1002C4B78(a1, a2, (void (*)(uint64_t))sub_1001DEDB8);
}

Swift::Int sub_1002C4770()
{
  return Hasher._finalize()();
}

Swift::Int sub_1002C47E4(uint64_t a1, uint64_t a2)
{
  return sub_1002C4B78(a1, a2, (void (*)(uint64_t))sub_100B46BB4);
}

Swift::Int sub_1002C47FC(uint64_t a1, uint64_t a2)
{
  return sub_1002C4B78(a1, a2, (void (*)(uint64_t))sub_100342FFC);
}

Swift::Int sub_1002C4814()
{
  sub_10018C820();
  if (v0)
  {
    sub_1002EEC68();
    sub_1002EEE6C();
  }
  else
  {
    sub_10018A244();
  }
  sub_10010979C();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

Swift::Int sub_1002C4884(uint64_t a1, uint64_t a2)
{
  return sub_1002C4914(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1002C2374);
}

Swift::Int sub_1002C489C()
{
  return sub_1002C4BE0();
}

Swift::Int sub_1002C48B4(uint64_t a1, uint64_t a2)
{
  return sub_1002C4B78(a1, a2, (void (*)(uint64_t))LocationAuthorizationState.rawValue.getter);
}

Swift::Int sub_1002C48CC(uint64_t a1, uint64_t a2)
{
  return sub_1002C4B78(a1, a2, (void (*)(uint64_t))sub_1004E684C);
}

Swift::Int sub_1002C48E4(uint64_t a1, uint64_t a2)
{
  return sub_1002C4B78(a1, a2, (void (*)(uint64_t))sub_1004E6B00);
}

Swift::Int sub_1002C48FC(uint64_t a1, uint64_t a2)
{
  return sub_1002C4914(a1, a2, (void (*)(unsigned char *, uint64_t))sub_1002C21D8);
}

Swift::Int sub_1002C4914(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t))
{
  Hasher.init(_seed:)();
  a3(v6, a2);
  return Hasher._finalize()();
}

Swift::Int sub_1002C4960()
{
  return Hasher._finalize()();
}

Swift::Int sub_1002C49BC()
{
  return sub_1002C4BE0();
}

Swift::Int sub_1002C49CC()
{
  return Hasher._finalize()();
}

Swift::Int sub_1002C4A40()
{
  sub_10018C820();
  if (!v0) {
    sub_1002EECA4();
  }
  sub_10010979C();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

Swift::Int sub_1002C4ACC()
{
  return Hasher._finalize()();
}

Swift::Int sub_1002C4B48(uint64_t a1, uint64_t a2)
{
  return sub_1002C4B78(a1, a2, (void (*)(uint64_t))sub_10098815C);
}

Swift::Int sub_1002C4B60(uint64_t a1, uint64_t a2)
{
  return sub_1002C4B78(a1, a2, (void (*)(uint64_t))sub_100989C3C);
}

Swift::Int sub_1002C4B78(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  return Hasher._finalize()();
}

Swift::Int sub_1002C4BE0()
{
  return Hasher._finalize()();
}

Swift::Int sub_1002C4C2C()
{
  sub_10018C820();
  if (!v0) {
    sub_1000A9E94();
  }
  sub_10010979C();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_1002C4CB4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1
                            + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_showOnlineFeedbackSafariView);
}

uint64_t sub_1002C4CC4(char a1)
{
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    sub_1002DEC24();
    *uint64_t v1 = v4;
    uint64_t result = swift_release();
  }
  *(unsigned char *)(*v1 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_showOnlineFeedbackSafariView) = a1 & 1;
  return result;
}

uint64_t sub_1002C4D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002C5358(a1, a2, a3, &OBJC_IVAR____TtCV7Weather14DefaultContent8_Storage_map);
}

void sub_1002C4D3C()
{
}

BOOL sub_1002C4D50()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for LocationCommonViewComponents._Storage(v0);
  sub_100127A9C();
  return sub_1002C8DF4();
}

uint64_t sub_1002C4D80()
{
  swift_release();
  sub_100178110(v0 + OBJC_IVAR____TtCV7Weather14DefaultContent8_Storage_map, &qword_100E64E80);
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather14DefaultContent8_Storage_airQuality, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  return v0;
}

uint64_t sub_1002C4DDC()
{
  return sub_100117910((void (*)(void))sub_1002C4D80);
}

uint64_t sub_1002C4DF4()
{
  return type metadata accessor for DefaultContent._Storage(0);
}

uint64_t type metadata accessor for DefaultContent._Storage(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E67330);
}

uint64_t sub_1002C4E20()
{
  sub_1002C5418();
  return v0 & 1;
}

uint64_t sub_1002C4E54()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for DefaultContent._Storage(v0);
  sub_1002EEF30();
  return v1 & 1;
}

uint64_t sub_1002C4E90()
{
  return sub_1002C4E54();
}

void sub_1002C4E9C()
{
}

uint64_t sub_1002C4EB8()
{
  swift_release();
  sub_100178110(v0 + OBJC_IVAR____TtCV7Weather18DefaultNewsContent8_Storage_map, &qword_100E64E80);
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather18DefaultNewsContent8_Storage_airQuality, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_100163134(OBJC_IVAR____TtCV7Weather18DefaultNewsContent8_Storage_newsArticle);
  return v0;
}

uint64_t sub_1002C4F2C()
{
  return sub_100117910((void (*)(void))sub_1002C4EB8);
}

uint64_t sub_1002C4F44()
{
  return type metadata accessor for DefaultNewsContent._Storage(0);
}

uint64_t type metadata accessor for DefaultNewsContent._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E673F8);
}

uint64_t sub_1002C4F70()
{
  sub_1002E2250();
  return v0 & 1;
}

void sub_1002C4FAC()
{
}

uint64_t sub_1002C4FDC()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for DefaultNewsContent._Storage(v0);
  sub_1002EE67C();
  return v1 & 1;
}

uint64_t sub_1002C5020()
{
  return sub_1002C4FDC();
}

uint64_t sub_1002C502C()
{
  sub_1002EF474();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v0 + *v5;
  uint64_t v7 = type metadata accessor for LocationComponentContainerViewModel();
  _s7Weather24LocationCompositionStateOwst_0(v6, 1, 1, v7);
  *(void *)(v0 + 16) = v4;
  sub_100182350();
  sub_1002E7C4C(v2, v6, &qword_100E64E80);
  swift_endAccess();
  sub_10016EAB0();
  sub_10011C13C();
  return v0;
}

void sub_1002C50F8()
{
}

uint64_t sub_1002C5114()
{
  swift_release();
  sub_100178110(v0 + OBJC_IVAR____TtCV7Weather23DefaultTrendNewsContent8_Storage_map, &qword_100E64E80);
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather23DefaultTrendNewsContent8_Storage_airQuality, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_100163134(OBJC_IVAR____TtCV7Weather23DefaultTrendNewsContent8_Storage_newsArticle);
  return v0;
}

uint64_t sub_1002C5188()
{
  return sub_100117910((void (*)(void))sub_1002C5114);
}

uint64_t sub_1002C51A0()
{
  return type metadata accessor for DefaultTrendNewsContent._Storage(0);
}

uint64_t type metadata accessor for DefaultTrendNewsContent._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E674C0);
}

void sub_1002C51C8()
{
  sub_1002DE6F0(319, (unint64_t *)&unk_100E67340, (void (*)(uint64_t))type metadata accessor for LocationComponentContainerViewModel);
  if (v0 <= 0x3F)
  {
    uint64_t v1 = type metadata accessor for LocationComponentContainerViewModel();
    if (v2 <= 0x3F)
    {
      sub_1001A6874(v1);
      uint64_t v3 = sub_1002EF42C();
      sub_1002EEC30(v3);
    }
  }
}

uint64_t sub_1002C5288()
{
  sub_1002E2250();
  return v0 & 1;
}

void sub_1002C52C4()
{
}

uint64_t sub_1002C52F4()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for DefaultTrendNewsContent._Storage(v0);
  sub_1002EE67C();
  return v1 & 1;
}

uint64_t sub_1002C5338()
{
  return sub_1002C52F4();
}

uint64_t sub_1002C5344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002C5358(a1, a2, a3, &OBJC_IVAR____TtCV7Weather18ElevatedAqiContent8_Storage_map);
}

uint64_t sub_1002C5358(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = v4 + *a4;
  uint64_t v8 = type metadata accessor for LocationComponentContainerViewModel();
  sub_1002EE788(v8);
  *(void *)(v4 + 16) = a1;
  sub_100182350();
  sub_1002E7C4C(a2, v7, &qword_100E64E80);
  swift_endAccess();
  sub_10016EAB0();
  return v4;
}

void sub_1002C5404()
{
}

void sub_1002C5418()
{
  sub_100162EA0();
  unint64_t v25 = v6;
  sub_1001191B4();
  uint64_t v26 = type metadata accessor for LocationComponentContainerViewModel();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100162824();
  __chkstk_darwin(v8);
  sub_100188F80();
  uint64_t v9 = sub_10017DF08(&qword_100E6A4E0);
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_10011C760();
  uint64_t v11 = sub_10017DF08(&qword_100E64E80);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_1001190EC();
  __chkstk_darwin(v13);
  sub_100152388();
  type metadata accessor for LocationCommonViewComponents._Storage(0);
  swift_retain();
  swift_retain();
  BOOL v14 = sub_1002C8DF4();
  swift_release();
  swift_release();
  if (!v14) {
    goto LABEL_13;
  }
  uint64_t v24 = v2;
  uint64_t v15 = v0 + *v25;
  sub_100126024();
  sub_1001B49E8(v15, v4, &qword_100E64E80);
  sub_100126024();
  uint64_t v16 = v3 + *(int *)(v9 + 48);
  sub_1001B49E8(v4, v3, &qword_100E64E80);
  sub_1002EEF14();
  sub_10012B520(v3, 1, v26);
  uint64_t v17 = v3;
  if (v22)
  {
    sub_100178110(v4, &qword_100E64E80);
    sub_10012B520(v16, 1, v26);
    if (v22)
    {
      sub_100178110(v3, &qword_100E64E80);
      uint64_t v18 = v24;
LABEL_12:
      sub_10011818C();
      sub_100128F98();
      sub_100B6B9B8(v18, v1);
      sub_1001184F4(v1, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
      sub_1001184F4(v18, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
      goto LABEL_13;
    }
    goto LABEL_10;
  }
  uint64_t v19 = sub_10011958C();
  sub_1001B49E8(v19, v20, v21);
  sub_10012B520(v16, 1, v26);
  if (v22)
  {
    sub_100178110(v4, &qword_100E64E80);
    sub_1001184F4(v5, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
LABEL_10:
    sub_100178110(v3, &qword_100E6A4E0);
    goto LABEL_13;
  }
  uint64_t v18 = v24;
  sub_10016EAB0();
  BOOL v23 = sub_100B6B9B8(v5, v24);
  sub_1001184F4(v24, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_100178110(v4, &qword_100E64E80);
  sub_1002EF2EC();
  sub_100178110(v17, &qword_100E64E80);
  if (v23) {
    goto LABEL_12;
  }
LABEL_13:
  sub_100119448();
  sub_100162694();
}

uint64_t sub_1002C578C()
{
  swift_release();
  sub_100178110(v0 + OBJC_IVAR____TtCV7Weather18ElevatedAqiContent8_Storage_map, &qword_100E64E80);
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather18ElevatedAqiContent8_Storage_airQuality, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  return v0;
}

uint64_t sub_1002C57E8()
{
  return sub_100117910((void (*)(void))sub_1002C578C);
}

uint64_t sub_1002C5800()
{
  return type metadata accessor for ElevatedAqiContent._Storage(0);
}

uint64_t type metadata accessor for ElevatedAqiContent._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E67588);
}

void sub_1002C5828()
{
  sub_1002DE6F0(319, (unint64_t *)&unk_100E67340, (void (*)(uint64_t))type metadata accessor for LocationComponentContainerViewModel);
  if (v0 <= 0x3F)
  {
    type metadata accessor for LocationComponentContainerViewModel();
    if (v1 <= 0x3F)
    {
      uint64_t v2 = sub_1002EF294();
      sub_1002EEC30(v2);
    }
  }
}

uint64_t sub_1002C590C()
{
  sub_1002C5418();
  return v0 & 1;
}

uint64_t sub_1002C5940()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for ElevatedAqiContent._Storage(v0);
  sub_1002EEF30();
  return v1 & 1;
}

uint64_t sub_1002C597C()
{
  return sub_1002C5940();
}

void sub_1002C5988()
{
}

uint64_t sub_1002C59A4()
{
  swift_release();
  sub_100178110(v0 + OBJC_IVAR____TtCV7Weather28ElevatedAqiMinorAlertContent8_Storage_map, &qword_100E64E80);
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather28ElevatedAqiMinorAlertContent8_Storage_airQuality, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_100163134(OBJC_IVAR____TtCV7Weather28ElevatedAqiMinorAlertContent8_Storage_severeAlert);
  return v0;
}

uint64_t sub_1002C5A18()
{
  return sub_100117910((void (*)(void))sub_1002C59A4);
}

uint64_t sub_1002C5A30()
{
  return type metadata accessor for ElevatedAqiMinorAlertContent._Storage(0);
}

uint64_t type metadata accessor for ElevatedAqiMinorAlertContent._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E67648);
}

uint64_t sub_1002C5A58()
{
  sub_1002E2250();
  return v0 & 1;
}

void sub_1002C5A94()
{
}

uint64_t sub_1002C5AC4()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for ElevatedAqiMinorAlertContent._Storage(v0);
  sub_1002EE67C();
  return v1 & 1;
}

uint64_t sub_1002C5B08()
{
  return sub_1002C5AC4();
}

void sub_1002C5B14()
{
}

uint64_t sub_1002C5B30()
{
  swift_release();
  sub_100178110(v0 + OBJC_IVAR____TtCV7Weather22ElevatedAqiNewsContent8_Storage_map, &qword_100E64E80);
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather22ElevatedAqiNewsContent8_Storage_airQuality, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_100163134(OBJC_IVAR____TtCV7Weather22ElevatedAqiNewsContent8_Storage_newsArticle);
  return v0;
}

uint64_t sub_1002C5BA4()
{
  return sub_100117910((void (*)(void))sub_1002C5B30);
}

uint64_t sub_1002C5BBC()
{
  return type metadata accessor for ElevatedAqiNewsContent._Storage(0);
}

uint64_t type metadata accessor for ElevatedAqiNewsContent._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E67710);
}

uint64_t sub_1002C5BE4()
{
  sub_1002E2250();
  return v0 & 1;
}

void sub_1002C5C20()
{
}

uint64_t sub_1002C5C50()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for ElevatedAqiNewsContent._Storage(v0);
  sub_1002EE67C();
  return v1 & 1;
}

uint64_t sub_1002C5C94()
{
  return sub_1002C5C50();
}

void sub_1002C5CA0()
{
}

uint64_t sub_1002C5CBC()
{
  swift_release();
  sub_100178110(v0 + OBJC_IVAR____TtCV7Weather24ElevatedAqiSevereContent8_Storage_map, &qword_100E64E80);
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather24ElevatedAqiSevereContent8_Storage_airQuality, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_100163134(OBJC_IVAR____TtCV7Weather24ElevatedAqiSevereContent8_Storage_severeAlert);
  return v0;
}

uint64_t sub_1002C5D30()
{
  return sub_100117910((void (*)(void))sub_1002C5CBC);
}

uint64_t sub_1002C5D48()
{
  return type metadata accessor for ElevatedAqiSevereContent._Storage(0);
}

uint64_t type metadata accessor for ElevatedAqiSevereContent._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E677D8);
}

uint64_t sub_1002C5D70()
{
  sub_1002E2250();
  return v0 & 1;
}

void sub_1002C5DAC()
{
}

uint64_t sub_1002C5DDC()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for ElevatedAqiSevereContent._Storage(v0);
  sub_1002EE67C();
  return v1 & 1;
}

uint64_t sub_1002C5E20()
{
  return sub_1002C5DDC();
}

void sub_1002C5E2C()
{
}

uint64_t sub_1002C5E50()
{
  swift_release();
  sub_100178110(v0 + OBJC_IVAR____TtCV7Weather28ElevatedAqiSevereNewsContent8_Storage_map, &qword_100E64E80);
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather28ElevatedAqiSevereNewsContent8_Storage_airQuality, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_100163134(OBJC_IVAR____TtCV7Weather28ElevatedAqiSevereNewsContent8_Storage_newsArticle);
  sub_100163134(OBJC_IVAR____TtCV7Weather28ElevatedAqiSevereNewsContent8_Storage_severeAlert);
  return v0;
}

uint64_t sub_1002C5ED0()
{
  return sub_100117910((void (*)(void))sub_1002C5E50);
}

uint64_t sub_1002C5EE8()
{
  return type metadata accessor for ElevatedAqiSevereNewsContent._Storage(0);
}

uint64_t type metadata accessor for ElevatedAqiSevereNewsContent._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E678A0);
}

uint64_t sub_1002C5F14()
{
  sub_1002DB474();
  return v0 & 1;
}

void sub_1002C5F58()
{
  sub_100162EA0();
  uint64_t v2 = sub_10019B0C0(v1);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_1001870B8();
  __chkstk_darwin(v4);
  sub_100181E70();
  __chkstk_darwin(v5);
  sub_100152388();
  uint64_t v6 = sub_10017DF08(&qword_100E64E80);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_1001722D8(v8, v9);
  sub_10011818C();
  sub_1002EE5B8();
  sub_1002EE51C();
  type metadata accessor for ElevatedAqiSevereNewsContent._Storage(0);
  sub_100181044();
  sub_100214D30();
  sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_1002EE770();
  sub_1002EEC18();
  sub_1002EED08();
  sub_1002EE694();
  sub_100162694();
}

uint64_t sub_1002C60B0()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for ElevatedAqiSevereNewsContent._Storage(v0);
  sub_1002EEB60();
  return v1 & 1;
}

uint64_t sub_1002C60FC()
{
  return sub_1002C60B0();
}

uint64_t sub_1002C6108(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x8000000100C982F0
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000100C98310 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000100C98330 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000100C98350 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    BOOL v5 = a1 == 0x7551686372616573 && a2 == 0xEB00000000797265;
    if (v5 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else if (a1 == 0xD000000000000013 && a2 == 0x8000000100C98380 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else
    {
      BOOL v6 = a1 == 0x6863726165537369 && a2 == 0xEB00000000676E69;
      if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 6;
      }
      else
      {
        BOOL v7 = a1 == 0x697469736E617274 && a2 == 0xEF6449676E696E6FLL;
        if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 7;
        }
        else
        {
          BOOL v8 = a1 == 0x72656767697274 && a2 == 0xE700000000000000;
          if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 8;
          }
          else if (a1 == 0xD00000000000001FLL && a2 == 0x8000000100C983C0)
          {
            swift_bridgeObjectRelease();
            return 9;
          }
          else
          {
            char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v9) {
              return 9;
            }
            else {
              return 10;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1002C6518()
{
  return 10;
}

unint64_t sub_1002C6520(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000019;
      break;
    case 2:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 3:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 4:
      unint64_t result = 0x7551686372616573;
      break;
    case 6:
      unint64_t result = 0x6863726165537369;
      break;
    case 7:
      unint64_t result = 0x697469736E617274;
      break;
    case 8:
      unint64_t result = 0x72656767697274;
      break;
    case 9:
      unint64_t result = 0xD00000000000001FLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1002C6658()
{
  return sub_1002C6520(*v0);
}

uint64_t sub_1002C6660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002C6108(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002C6688@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1002C6518();
  *a1 = result;
  return result;
}

uint64_t sub_1002C66B0(uint64_t a1)
{
  unint64_t v2 = sub_1002E73FC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002C66EC(uint64_t a1)
{
  unint64_t v2 = sub_1002E73FC();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002C6728()
{
  sub_10017F304();
  uint64_t v3 = v0;
  BOOL v5 = v4;
  uint64_t v6 = sub_10017DF08(&qword_100E6A4F8);
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_10012B938();
  sub_10017F2E8(v5);
  sub_1002E73FC();
  sub_100162840();
  sub_1002E7448();
  sub_1002EE4E0();
  if (!v1)
  {
    sub_1002EE4A4(1);
    sub_1002EE4A4(2);
    sub_1002E7494();
    sub_1002EE4E0();
    uint64_t v10 = *(void *)(v3 + 32);
    swift_bridgeObjectRetain();
    sub_1002EED48();
    KeyedEncodingContainer.encode(_:forKey:)();
    if (v10) {
      goto LABEL_8;
    }
    swift_bridgeObjectRelease();
    sub_1002EF1D8();
    sub_1002E74E0();
    sub_1002EE4E0();
    sub_1002EE4A4(6);
    uint64_t v14 = *(void *)(v3 + 72);
    swift_bridgeObjectRetain();
    sub_1002EED48();
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    if (v14)
    {
LABEL_8:
      sub_100164F40();
      v13(v11, v12);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
    sub_1002E752C();
    sub_1002EE4E0();
    sub_1002EE4A4(9);
  }
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v2, v6);
LABEL_6:
  sub_100182EF8();
}

uint64_t sub_1002C6964()
{
  sub_1002EEEA4();
  swift_allocObject();
  sub_1002EF05C();
  sub_1002C69A4();
  return v0;
}

void sub_1002C69A4()
{
  sub_10016314C();
  uint64_t v2 = v0;
  uint64_t v4 = v3;
  sub_10017C924();
  sub_10017DF08(&qword_100E6A9F8);
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_100109370();
  *(void *)(v0 + 72) = 0;
  *(void *)(v0 + 80) = 0;
  sub_10018E010(v4);
  sub_1002E73FC();
  sub_1002EE988();
  if (v1)
  {
    swift_bridgeObjectRelease();
    sub_10012B950();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1002E8B48();
    sub_1002EE474();
    *(void *)(v0 + 16) = v10;
    *(unsigned char *)(v0 + 24) = BYTE8(v10);
    *(unsigned char *)(v0 + 25) = sub_1002EE800(1) & 1;
    *(unsigned char *)(v0 + 26) = sub_1002EE800(2) & 1;
    sub_1002E8214();
    sub_1002EE474();
    *(unsigned char *)(v0 + 27) = v10;
    sub_1002EEEB4(4);
    *(void *)(v0 + 32) = KeyedDecodingContainer.decode(_:forKey:)();
    *(void *)(v0 + 40) = v6;
    sub_1002EF1D8();
    sub_1002E8B94();
    sub_1002EE474();
    *(_OWORD *)(v0 + 48) = v10;
    *(unsigned char *)(v0 + 64) = KeyedDecodingContainer.decode(_:forKey:)() & 1;
    sub_1002EEEB4(7);
    *(void *)(v0 + 72) = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    *(void *)(v0 + 80) = v7;
    swift_bridgeObjectRelease();
    sub_1002E8BE0();
    sub_1002EE474();
    *(unsigned char *)(v0 + 88) = 6;
    char v8 = sub_1002EE800(9);
    sub_10016285C();
    v9();
    *(unsigned char *)(v2 + 89) = v8 & 1;
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v4);
  sub_1002EE5D4();
  sub_100163164();
}

uint64_t sub_1002C6C70()
{
  return sub_10011D5A0() & 1;
}

uint64_t sub_1002C6C94@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1002C6964();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

void sub_1002C6CC0()
{
}

uint64_t sub_1002C6CE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1008921A4();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1002C6D10(uint64_t a1)
{
  return sub_1008923EC(a1);
}

uint64_t sub_1002C6D34()
{
  return sub_10011D5A0() & 1;
}

void sub_1002C6D64()
{
  sub_10017F304();
  sub_1002EF178();
  sub_10017DF08(&qword_100E6AD88);
  sub_100179C0C();
  __chkstk_darwin(v0);
  sub_100164F78();
  sub_1002EBC58();
  sub_100162840();
  type metadata accessor for ListViewState._Storage();
  sub_100127D40(&qword_100E6AD90, v1, (void (*)(uint64_t))type metadata accessor for ListViewState._Storage);
  sub_1002EE654();
  sub_100164F40();
  v2();
  sub_1002EEAFC();
  sub_100182EF8();
}

void sub_1002C6E68()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100E6AD70);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_1002EBC58();
  sub_100163110();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  }
  else
  {
    type metadata accessor for ListViewState._Storage();
    sub_100127D40(&qword_100E6AD80, v3, (void (*)(uint64_t))type metadata accessor for ListViewState._Storage);
    sub_10017F988();
    uint64_t v4 = sub_100179EBC();
    v5(v4);
    sub_1001D1374();
  }
  sub_100184924();
  sub_100182EF8();
}

Swift::Int sub_1002C6F74()
{
  return StubLocalSearchRequestService.Errors.hashValue.getter();
}

uint64_t sub_1002C6F98(uint64_t a1)
{
  unint64_t v2 = sub_1002EBC58();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002C6FD4(uint64_t a1)
{
  unint64_t v2 = sub_1002EBC58();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002C7010()
{
  return sub_1002C6D34();
}

void sub_1002C701C(void *a1@<X8>)
{
  sub_1002C6E68();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_1002C7048()
{
}

uint64_t sub_1002C7064@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100892578();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1002C7090(uint64_t a1)
{
  return sub_1008925A8(a1);
}

void sub_1002C70AC()
{
}

uint64_t sub_1002C7204()
{
  uint64_t v1 = sub_1002EF15C();
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_10012907C();
  __chkstk_darwin(v3);
  sub_1002EF04C();
  sub_10011818C();
  sub_1001843C0();
  char v4 = sub_1001CB718();
  sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100109388();
  if ((v4 & 1) == 0) {
    goto LABEL_13;
  }
  sub_10011818C();
  sub_1001843C0();
  char v5 = sub_1001CB718();
  sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100109388();
  if ((v5 & 1) == 0) {
    goto LABEL_13;
  }
  sub_10011818C();
  sub_1001843C0();
  char v6 = sub_1001CB718();
  sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100109388();
  if ((v6 & 1) == 0) {
    goto LABEL_13;
  }
  sub_10011818C();
  sub_1001843C0();
  char v7 = sub_1001CB718();
  sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100109388();
  if ((v7 & 1) == 0) {
    goto LABEL_13;
  }
  sub_10011818C();
  sub_1001843C0();
  char v8 = sub_1001CB718();
  sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100109388();
  if ((v8 & 1) == 0) {
    goto LABEL_13;
  }
  sub_10011818C();
  sub_1001843C0();
  char v9 = sub_1001CB718();
  sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100109388();
  if ((v9 & 1) == 0) {
    goto LABEL_13;
  }
  sub_10011818C();
  sub_1001843C0();
  char v10 = sub_1001CB718();
  sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100109388();
  if ((v10 & 1) == 0) {
    goto LABEL_13;
  }
  sub_10011818C();
  sub_1001843C0();
  char v11 = sub_1001CB718();
  sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100109388();
  if ((v11 & 1) == 0) {
    goto LABEL_13;
  }
  sub_10011818C();
  sub_1001843C0();
  char v12 = sub_1001CB718();
  sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100109388();
  if ((v12 & 1) == 0) {
    goto LABEL_13;
  }
  sub_10011818C();
  sub_1001843C0();
  char v13 = sub_1001CB718();
  sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100109388();
  if ((v13 & 1) == 0) {
    goto LABEL_13;
  }
  sub_10011818C();
  sub_1001843C0();
  char v14 = sub_1001CB718();
  sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100109388();
  if (v14)
  {
    sub_10011818C();
    sub_1002EEC88();
    char v15 = sub_1001CB718();
    sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationViewComponent);
    sub_1002EEA9C();
  }
  else
  {
LABEL_13:
    char v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_1002C772C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F46796C72756F68 && a2 == 0xEE00747361636572;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x726F46796C696164 && a2 == 0xED00007473616365;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x7865646E497675 && a2 == 0xE700000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x53657369726E7573 && a2 == 0xED00007465736E75;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          BOOL v9 = a1 == 1684957559 && a2 == 0xE400000000000000;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0xD000000000000012 && a2 == 0x8000000100C95CD0 {
                 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          }
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            BOOL v10 = a1 == 0x6B694C736C656566 && a2 == 0xE900000000000065;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              BOOL v11 = a1 == 0x79746964696D7568 && a2 == 0xE800000000000000;
              if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else
              {
                BOOL v12 = a1 == 0x696C696269736976 && a2 == 0xEA00000000007974;
                if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else
                {
                  BOOL v13 = a1 == 0x6572757373657270 && a2 == 0xE800000000000000;
                  if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 9;
                  }
                  else
                  {
                    BOOL v14 = a1 == 0x7365676172657661 && a2 == 0xE800000000000000;
                    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 10;
                    }
                    else if (a1 == 1852796781 && a2 == 0xE400000000000000)
                    {
                      swift_bridgeObjectRelease();
                      return 11;
                    }
                    else
                    {
                      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
                      swift_bridgeObjectRelease();
                      if (v16) {
                        return 11;
                      }
                      else {
                        return 12;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1002C7C44()
{
  return 12;
}

unint64_t sub_1002C7C4C(char a1)
{
  unint64_t result = 0x6F46796C72756F68;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x726F46796C696164;
      break;
    case 2:
      unint64_t result = 0x7865646E497675;
      break;
    case 3:
      unint64_t result = 0x53657369726E7573;
      break;
    case 4:
      unint64_t result = 1684957559;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0x6B694C736C656566;
      break;
    case 7:
      unint64_t result = 0x79746964696D7568;
      break;
    case 8:
      unint64_t result = 0x696C696269736976;
      break;
    case 9:
      unint64_t result = 0x6572757373657270;
      break;
    case 10:
      unint64_t result = 0x7365676172657661;
      break;
    case 11:
      unint64_t result = 1852796781;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1002C7DE0()
{
  return sub_1002C7C4C(*v0);
}

uint64_t sub_1002C7DE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002C772C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002C7E10@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1002C7C44();
  *a1 = result;
  return result;
}

uint64_t sub_1002C7E38(uint64_t a1)
{
  unint64_t v2 = sub_1002E8AFC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002C7E74(uint64_t a1)
{
  unint64_t v2 = sub_1002E8AFC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002C7EB0()
{
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_hourlyForecast, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100163134(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_dailyForecast);
  sub_100163134(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_uvIndex);
  sub_100163134(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_sunriseSunset);
  sub_100163134(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_wind);
  sub_100163134(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_precipitationTotal);
  sub_100163134(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_feelsLike);
  sub_100163134(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_humidity);
  sub_100163134(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_visibility);
  sub_100163134(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_pressure);
  sub_100163134(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_averages);
  sub_100163134(OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_moon);
  return v0;
}

uint64_t sub_1002C7F7C()
{
  return sub_100117910((void (*)(void))sub_1002C7EB0);
}

uint64_t sub_1002C7F94()
{
  return type metadata accessor for LocationCommonConfigurationComponents._Storage(0);
}

uint64_t type metadata accessor for LocationCommonConfigurationComponents._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E67A60);
}

uint64_t sub_1002C7FBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002C944C(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for LocationViewComponent);
}

uint64_t sub_1002C7FD4(uint64_t a1)
{
  return sub_1002C96F8(a1, (void (*)(uint64_t))sub_1002C8000);
}

void sub_1002C8000()
{
  sub_10016314C();
  int v3 = v0;
  uint64_t v5 = v4;
  sub_10017C924();
  uint64_t v70 = v1;
  uint64_t v71 = v6;
  uint64_t v69 = type metadata accessor for LocationViewComponent();
  sub_100162E4C();
  __chkstk_darwin(v7);
  uint64_t v57 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v9);
  sub_100109770();
  uint64_t v58 = v10;
  sub_1001626D4();
  __chkstk_darwin(v11);
  sub_100109770();
  uint64_t v59 = v12;
  sub_1001626D4();
  __chkstk_darwin(v13);
  sub_100109770();
  uint64_t v60 = v14;
  sub_1001626D4();
  __chkstk_darwin(v15);
  uint64_t v61 = (char *)&v52 - v16;
  sub_1001626D4();
  __chkstk_darwin(v17);
  sub_100109770();
  uint64_t v62 = v18;
  sub_1001626D4();
  __chkstk_darwin(v19);
  sub_100109770();
  uint64_t v63 = v20;
  sub_1001626D4();
  __chkstk_darwin(v21);
  sub_100109770();
  uint64_t v64 = v22;
  sub_1001626D4();
  __chkstk_darwin(v23);
  __chkstk_darwin(v24);
  sub_100119550();
  __chkstk_darwin(v25);
  __chkstk_darwin(v26);
  sub_1002EF3A0(v27, v28, v29, v30, v31, v32, v33, v34, v52);
  sub_10017DF08(&qword_100E6A9E8);
  sub_100179C0C();
  uint64_t v65 = v36;
  uint64_t v66 = v35;
  __chkstk_darwin(v35);
  sub_10011C760();
  uint64_t v37 = (void *)sub_100127BB0();
  sub_10018C3D8(v37, v38);
  sub_1002E8AFC();
  uint64_t v68 = v2;
  uint64_t v39 = v70;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v39)
  {
LABEL_19:
    swift_deallocPartialClassInstance();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v5);
    goto LABEL_20;
  }
  uint64_t v70 = v5;
  uint64_t v40 = sub_100127D40((unint64_t *)&qword_100E6A860, 255, (void (*)(uint64_t))type metadata accessor for LocationViewComponent);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v55 = v0 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_hourlyForecast;
  sub_10016EAB0();
  uint64_t v54 = v40;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v56 = v0;
  sub_10016EAB0();
  uint64_t v53 = 0;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  sub_10016EAB0();
  sub_1002EF274();
  sub_10016EAB0();
  int v41 = v68;
  int v42 = v54;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  sub_10016EAB0();
  sub_1002EE8B0();
  sub_10016EAB0();
  int v43 = v62;
  sub_1002EE8B0();
  sub_10016EAB0();
  sub_1002EE8B0();
  int v44 = v65;
  sub_10016EAB0();
  char v75 = 8;
  int v45 = v60;
  sub_1002EF274();
  uint64_t v67 = 0;
  sub_10016EAB0();
  char v74 = 9;
  uint64_t v46 = v67;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v67 = v46;
  if (v46)
  {
    int v47 = v65 + 8;
    sub_100164F40();
    v48();
    sub_1002EEA30();
    uint64_t v49 = v53;
    sub_1001184F4(v55, (void (*)(void))type metadata accessor for LocationViewComponent);
    if (!v49) {
      sub_1001184F4(v56 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_dailyForecast, (void (*)(void))type metadata accessor for LocationViewComponent);
    }
    if (v3) {
      sub_1001184F4(v56 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_uvIndex, (void (*)(void))type metadata accessor for LocationViewComponent);
    }
    uint64_t v50 = v56;
    if (v42)
    {
      sub_1001184F4(v56 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_sunriseSunset, (void (*)(void))type metadata accessor for LocationViewComponent);
      if (!v41)
      {
LABEL_11:
        if (!v47) {
          goto LABEL_12;
        }
        goto LABEL_23;
      }
    }
    else if (!v41)
    {
      goto LABEL_11;
    }
    sub_1001184F4(v50 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_wind, (void (*)(void))type metadata accessor for LocationViewComponent);
    if (!v47)
    {
LABEL_12:
      if (!v45) {
        goto LABEL_13;
      }
      goto LABEL_24;
    }
LABEL_23:
    sub_1001184F4(v50 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_precipitationTotal, (void (*)(void))type metadata accessor for LocationViewComponent);
    if (!v45)
    {
LABEL_13:
      if (!v44) {
        goto LABEL_26;
      }
      goto LABEL_25;
    }
LABEL_24:
    sub_1001184F4(v50 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_feelsLike, (void (*)(void))type metadata accessor for LocationViewComponent);
    if (!v44) {
      goto LABEL_26;
    }
LABEL_25:
    sub_1001184F4(v50 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_humidity, (void (*)(void))type metadata accessor for LocationViewComponent);
LABEL_26:
    sub_1001184F4(v50 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_visibility, (void (*)(void))type metadata accessor for LocationViewComponent);
    if (v43) {
      sub_1001184F4(v50 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_pressure, (void (*)(void))type metadata accessor for LocationViewComponent);
    }
    if (v69) {
      sub_1001184F4(v50 + OBJC_IVAR____TtCV7Weather37LocationCommonConfigurationComponents8_Storage_averages, (void (*)(void))type metadata accessor for LocationViewComponent);
    }
    uint64_t v5 = v70;
    goto LABEL_19;
  }
  sub_10016EAB0();
  char v73 = 10;
  sub_1002EF40C();
  uint64_t v67 = 0;
  sub_10016EAB0();
  char v72 = 11;
  sub_1002EF40C();
  uint64_t v67 = 0;
  sub_100164F40();
  v51();
  sub_10016EAB0();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v70);
LABEL_20:
  sub_100163164();
}

uint64_t sub_1002C8A5C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1002C7FD4(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1002C8A88()
{
  return sub_1002C7204() & 1;
}

uint64_t sub_1002C8AAC()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for LocationCommonConfigurationComponents._Storage(v0);
  sub_100127A9C();
  return sub_1002C7204() & 1;
}

void sub_1002C8ADC()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100E6A6C8);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_1002E7C9C();
  sub_100163110();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  }
  else
  {
    type metadata accessor for LocationCommonConfigurationComponents._Storage(0);
    sub_100127D40(&qword_100E6A6D8, 255, (void (*)(uint64_t))type metadata accessor for LocationCommonConfigurationComponents._Storage);
    sub_10017F988();
    uint64_t v3 = sub_100179EBC();
    v4(v3);
    sub_1001D1374();
  }
  sub_100184924();
  sub_100182EF8();
}

uint64_t sub_1002C8BEC(uint64_t a1)
{
  unint64_t v2 = sub_1002E7C9C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002C8C28(uint64_t a1)
{
  unint64_t v2 = sub_1002E7C9C();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002C8C64(void *a1@<X8>)
{
  sub_1002C8ADC();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1002C8C90()
{
  return sub_1002C8AAC();
}

void sub_1002C8C9C()
{
}

BOOL sub_1002C8DF4()
{
  uint64_t v1 = type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_10012907C();
  __chkstk_darwin(v3);
  sub_1002EF04C();
  sub_10011818C();
  sub_1001843C0();
  BOOL v4 = sub_1002EE614();
  sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_100109388();
  if (!v4) {
    return 0;
  }
  sub_10011818C();
  sub_1001843C0();
  BOOL v5 = sub_1002EE614();
  sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_100109388();
  if (!v5) {
    return 0;
  }
  sub_10011818C();
  sub_1001843C0();
  BOOL v6 = sub_1002EE614();
  sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_100109388();
  if (!v6) {
    return 0;
  }
  sub_10011818C();
  sub_1001843C0();
  BOOL v7 = sub_1002EE614();
  sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_100109388();
  if (!v7) {
    return 0;
  }
  sub_10011818C();
  sub_1001843C0();
  BOOL v8 = sub_1002EE614();
  sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_100109388();
  if (!v8) {
    return 0;
  }
  sub_10011818C();
  sub_1001843C0();
  BOOL v9 = sub_1002EE614();
  sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_100109388();
  if (!v9) {
    return 0;
  }
  sub_10011818C();
  sub_1001843C0();
  BOOL v10 = sub_1002EE614();
  sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_100109388();
  if (!v10) {
    return 0;
  }
  sub_10011818C();
  sub_1001843C0();
  BOOL v11 = sub_1002EE614();
  sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_100109388();
  if (!v11) {
    return 0;
  }
  sub_10011818C();
  sub_1001843C0();
  BOOL v12 = sub_1002EE614();
  sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_100109388();
  if (!v12) {
    return 0;
  }
  sub_10011818C();
  sub_1001843C0();
  BOOL v13 = sub_1002EE614();
  sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_100109388();
  if (!v13) {
    return 0;
  }
  sub_10011818C();
  sub_1001843C0();
  BOOL v14 = sub_1002EE614();
  sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_100109388();
  if (v14)
  {
    sub_10011818C();
    sub_1002EEC88();
    BOOL v15 = sub_1002EE614();
    sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_1002EEA9C();
  }
  else
  {
    return 0;
  }
  return v15;
}

uint64_t sub_1002C9328()
{
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_100163134(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
  sub_100163134(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
  sub_100163134(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset);
  sub_100163134(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
  sub_100163134(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal);
  sub_100163134(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
  sub_100163134(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity);
  sub_100163134(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
  sub_100163134(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure);
  sub_100163134(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages);
  sub_100163134(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon);
  return v0;
}

uint64_t sub_1002C93F4()
{
  return sub_100117910((void (*)(void))sub_1002C9328);
}

uint64_t sub_1002C940C()
{
  return type metadata accessor for LocationCommonViewComponents._Storage(0);
}

uint64_t type metadata accessor for LocationCommonViewComponents._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E67B70);
}

uint64_t sub_1002C9434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002C944C(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for LocationComponentContainerViewModel);
}

uint64_t sub_1002C944C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    uint64_t updated = swift_updateClassMetadata2();
    return sub_1002EEC30(updated);
  }
  return result;
}

BOOL sub_1002C94F0()
{
  return sub_1002C8DF4();
}

BOOL sub_1002C9514()
{
  return sub_1002C4D50();
}

uint64_t sub_1002C9520(uint64_t a1)
{
  return sub_1002CACBC(a1);
}

uint64_t sub_1002C9534(char a1)
{
  if (!a1) {
    return 0x6E6F6D6D6F63;
  }
  if (a1 == 1) {
    return 7364973;
  }
  return 0x696C617551726961;
}

uint64_t sub_1002C9584()
{
  return sub_1002C9534(*v0);
}

uint64_t sub_1002C958C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1002CAD30();
  *a1 = result;
  return result;
}

uint64_t sub_1002C95B4(uint64_t a1)
{
  unint64_t v2 = sub_1002E8AB0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002C95F0(uint64_t a1)
{
  unint64_t v2 = sub_1002E8AB0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002C962C()
{
  swift_release();
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather28LocationDefaultConfiguration8_Storage_map, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100163134(OBJC_IVAR____TtCV7Weather28LocationDefaultConfiguration8_Storage_airQuality);
  return v0;
}

uint64_t sub_1002C9688()
{
  return sub_100117910((void (*)(void))sub_1002C962C);
}

uint64_t sub_1002C96A0()
{
  return type metadata accessor for LocationDefaultConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationDefaultConfiguration._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E67C78);
}

uint64_t sub_1002C96CC(uint64_t a1)
{
  return sub_1002C96F8(a1, (void (*)(uint64_t))sub_1002C9750);
}

uint64_t sub_1002C96F8(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = swift_allocObject();
  a2(a1);
  return v4;
}

void sub_1002C9750()
{
  sub_10016314C();
  unint64_t v2 = v1;
  sub_10017C924();
  type metadata accessor for LocationViewComponent();
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100181E70();
  __chkstk_darwin(v4);
  sub_100182F0C();
  sub_10017DF08(&qword_100E6A9D8);
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_10018C3D8(v2, v2[3]);
  sub_1002E8AB0();
  sub_1002EE44C();
  sub_1002EEF60();
  if (v0)
  {
    sub_1001A1CE0();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1002EED98();
    sub_10019B838();
    sub_100166B08();
    sub_100127D40((unint64_t *)&qword_100E6A860, 255, (void (*)(uint64_t))type metadata accessor for LocationViewComponent);
    sub_1001D1540();
    sub_10016EAB0();
    sub_1001CA7C0();
    uint64_t v6 = sub_10019DE04();
    v7(v6);
    sub_10016EAB0();
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v2);
  sub_1002EE960();
  sub_100163164();
}

uint64_t sub_1002C99B4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1002C96CC(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1002C99E0()
{
  sub_1002D1ECC();
  return v0 & 1;
}

uint64_t sub_1002C9A14()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for LocationDefaultConfiguration._Storage(v0);
  sub_1002EEF48();
  return v1 & 1;
}

void sub_1002C9A50()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100E6AE10);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_1002EBD88();
  sub_100163110();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  }
  else
  {
    type metadata accessor for LocationDefaultConfiguration._Storage(0);
    sub_100127D40(&qword_100E6AE20, 255, (void (*)(uint64_t))type metadata accessor for LocationDefaultConfiguration._Storage);
    sub_10017F988();
    uint64_t v3 = sub_100179EBC();
    v4(v3);
    sub_1001D1374();
  }
  sub_100184924();
  sub_100182EF8();
}

uint64_t sub_1002C9B60(uint64_t a1)
{
  unint64_t v2 = sub_1002EBD88();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002C9B9C(uint64_t a1)
{
  unint64_t v2 = sub_1002EBD88();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002C9BD8(void *a1@<X8>)
{
  sub_1002C9A50();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1002C9C04()
{
  return sub_1002C9A14();
}

uint64_t sub_1002C9C10()
{
  return sub_1002CA39C();
}

uint64_t sub_1002C9C2C(char a1)
{
  uint64_t result = 0x6E6F6D6D6F63;
  switch(a1)
  {
    case 1:
      uint64_t result = 7364973;
      break;
    case 2:
      uint64_t result = 0x696C617551726961;
      break;
    case 3:
      uint64_t result = 0x697472417377656ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1002C9CC0()
{
  return sub_1002C9C2C(*v0);
}

uint64_t sub_1002C9CC8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1002CBAE0();
  *a1 = result;
  return result;
}

uint64_t sub_1002C9CF0(uint64_t a1)
{
  unint64_t v2 = sub_1002E8A64();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002C9D2C(uint64_t a1)
{
  unint64_t v2 = sub_1002E8A64();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002C9D68()
{
  swift_release();
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather32LocationDefaultNewsConfiguration8_Storage_map, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100163134(OBJC_IVAR____TtCV7Weather32LocationDefaultNewsConfiguration8_Storage_airQuality);
  sub_100163134(OBJC_IVAR____TtCV7Weather32LocationDefaultNewsConfiguration8_Storage_newsArticle);
  return v0;
}

uint64_t sub_1002C9DD0()
{
  return sub_100117910((void (*)(void))sub_1002C9D68);
}

uint64_t sub_1002C9DE8()
{
  return type metadata accessor for LocationDefaultNewsConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationDefaultNewsConfiguration._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E67D40);
}

uint64_t sub_1002C9E14(uint64_t a1)
{
  return sub_1002C96F8(a1, (void (*)(uint64_t))sub_1002C9E40);
}

void sub_1002C9E40()
{
  sub_10016314C();
  unint64_t v2 = v1;
  sub_10017C924();
  type metadata accessor for LocationViewComponent();
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100162824();
  __chkstk_darwin(v4);
  sub_100181E70();
  __chkstk_darwin(v5);
  sub_100188F80();
  sub_10017DF08(&qword_100E6A9C8);
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_10018C3D8(v2, v2[3]);
  sub_1002E8A64();
  sub_100164F4C();
  sub_1001092A8();
  if (v0)
  {
    sub_1001A1CE0();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_100163E3C();
    sub_1001D0E10();
    sub_100166B08();
    uint64_t v7 = sub_100127D40((unint64_t *)&qword_100E6A860, 255, (void (*)(uint64_t))type metadata accessor for LocationViewComponent);
    sub_10019FBA0(v7);
    sub_10016EAB0();
    sub_1001838A0();
    sub_10016EAB0();
    sub_10019D430();
    uint64_t v8 = sub_10019E7C0();
    v9(v8);
    sub_10016EAB0();
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v2);
  sub_10018B2CC();
  sub_100163164();
}

uint64_t sub_1002CA114@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1002C9E14(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1002CA140()
{
  sub_1002CA41C();
  return v0 & 1;
}

uint64_t sub_1002CA17C()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for LocationDefaultNewsConfiguration._Storage(v0);
  sub_100214EAC();
  return v1 & 1;
}

void sub_1002CA1C0()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100E6AE28);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_1002EBDD4();
  sub_100163110();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  }
  else
  {
    type metadata accessor for LocationDefaultNewsConfiguration._Storage(0);
    sub_100127D40(&qword_100E6AE38, 255, (void (*)(uint64_t))type metadata accessor for LocationDefaultNewsConfiguration._Storage);
    sub_10017F988();
    uint64_t v3 = sub_100179EBC();
    v4(v3);
    sub_1001D1374();
  }
  sub_100184924();
  sub_100182EF8();
}

uint64_t sub_1002CA2D0(uint64_t a1)
{
  unint64_t v2 = sub_1002EBDD4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002CA30C(uint64_t a1)
{
  unint64_t v2 = sub_1002EBDD4();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002CA348(void *a1@<X8>)
{
  sub_1002CA1C0();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1002CA374()
{
  return sub_1002CA17C();
}

uint64_t sub_1002CA380()
{
  return sub_1002CA39C();
}

uint64_t sub_1002CA39C()
{
  sub_1002EF474();
  *(void *)(v0 + 16) = v1;
  sub_10016EAB0();
  sub_10016EAB0();
  sub_1002EF0AC();
  return v0;
}

void sub_1002CA41C()
{
  sub_100162EA0();
  uint64_t v2 = type metadata accessor for LocationViewComponent();
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_100162758();
  __chkstk_darwin(v4);
  sub_1001EC3C8();
  type metadata accessor for LocationCommonConfigurationComponents._Storage(0);
  swift_retain();
  swift_retain();
  sub_100127BB0();
  char v5 = sub_1002C7204();
  swift_release();
  swift_release();
  if (v5)
  {
    sub_10011818C();
    sub_10011818C();
    char v6 = sub_1002EE908();
    sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationViewComponent);
    sub_1001184F4(v1, (void (*)(void))type metadata accessor for LocationViewComponent);
    if (v6)
    {
      sub_10011818C();
      sub_1002EF318();
      char v7 = sub_1002EE908();
      sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationViewComponent);
      sub_1002EE770();
      if (v7)
      {
        sub_10011818C();
        sub_1002EF2D4();
        sub_1002EE908();
        sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationViewComponent);
        sub_10011917C();
      }
    }
  }
  sub_100119448();
  sub_100162694();
}

uint64_t sub_1002CA61C(uint64_t a1)
{
  unint64_t v2 = sub_1002E8A18();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002CA658(uint64_t a1)
{
  unint64_t v2 = sub_1002E8A18();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002CA694()
{
  swift_release();
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather37LocationDefaultTrendNewsConfiguration8_Storage_map, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100163134(OBJC_IVAR____TtCV7Weather37LocationDefaultTrendNewsConfiguration8_Storage_airQuality);
  sub_100163134(OBJC_IVAR____TtCV7Weather37LocationDefaultTrendNewsConfiguration8_Storage_newsArticle);
  return v0;
}

uint64_t sub_1002CA6FC()
{
  return sub_100117910((void (*)(void))sub_1002CA694);
}

uint64_t sub_1002CA714()
{
  return type metadata accessor for LocationDefaultTrendNewsConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationDefaultTrendNewsConfiguration._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E67E10);
}

uint64_t sub_1002CA73C(uint64_t a1)
{
  return sub_1002C96F8(a1, (void (*)(uint64_t))sub_1002CA768);
}

void sub_1002CA768()
{
  sub_10016314C();
  unint64_t v2 = v1;
  sub_10017C924();
  type metadata accessor for LocationViewComponent();
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100162824();
  __chkstk_darwin(v4);
  sub_100181E70();
  __chkstk_darwin(v5);
  sub_100188F80();
  sub_10017DF08(&qword_100E6A9B8);
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_10018C3D8(v2, v2[3]);
  sub_1002E8A18();
  sub_100164F4C();
  sub_1001092A8();
  if (v0)
  {
    sub_1001A1CE0();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_100163E3C();
    sub_1001D0E10();
    sub_100166B08();
    uint64_t v7 = sub_100127D40((unint64_t *)&qword_100E6A860, 255, (void (*)(uint64_t))type metadata accessor for LocationViewComponent);
    sub_10019FBA0(v7);
    sub_10016EAB0();
    sub_1001838A0();
    sub_10016EAB0();
    sub_10019D430();
    uint64_t v8 = sub_10019E7C0();
    v9(v8);
    sub_10016EAB0();
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v2);
  sub_10018B2CC();
  sub_100163164();
}

uint64_t sub_1002CAA3C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1002CA73C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1002CAA68()
{
  sub_1002CA41C();
  return v0 & 1;
}

uint64_t sub_1002CAAA4()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for LocationDefaultTrendNewsConfiguration._Storage(v0);
  sub_100214EAC();
  return v1 & 1;
}

void sub_1002CAAE8()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100E6AE40);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_1002EBE20();
  sub_100163110();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  }
  else
  {
    type metadata accessor for LocationDefaultTrendNewsConfiguration._Storage(0);
    sub_100127D40(&qword_100E6AE50, 255, (void (*)(uint64_t))type metadata accessor for LocationDefaultTrendNewsConfiguration._Storage);
    sub_10017F988();
    uint64_t v3 = sub_100179EBC();
    v4(v3);
    sub_1001D1374();
  }
  sub_100184924();
  sub_100182EF8();
}

uint64_t sub_1002CABF8(uint64_t a1)
{
  unint64_t v2 = sub_1002EBE20();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002CAC34(uint64_t a1)
{
  unint64_t v2 = sub_1002EBE20();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002CAC70(void *a1@<X8>)
{
  sub_1002CAAE8();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1002CAC9C()
{
  return sub_1002CAAA4();
}

uint64_t sub_1002CACA8(uint64_t a1)
{
  return sub_1002CACBC(a1);
}

uint64_t sub_1002CACBC(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  sub_10016EAB0();
  sub_10016EAB0();
  return v1;
}

uint64_t sub_1002CAD30()
{
  sub_1002EE6D4();
  BOOL v2 = v2 && v1 == 0xE600000000000000;
  if (v2 || (v3 = v1, char v4 = v0, (sub_100188D20() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    sub_1002EEB08();
    BOOL v6 = v2 && v3 == 0xE300000000000000;
    if (v6 || (sub_100188D20() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      sub_10018B458();
      if (v2 && v3 == v7)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        sub_100188D20();
        sub_100182F1C();
        if (v4) {
          return 2;
        }
        else {
          return 3;
        }
      }
    }
  }
}

uint64_t sub_1002CAE1C(uint64_t a1)
{
  unint64_t v2 = sub_1002E89CC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002CAE58(uint64_t a1)
{
  unint64_t v2 = sub_1002E89CC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002CAE94()
{
  swift_release();
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather32LocationElevatedAqiConfiguration8_Storage_map, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100163134(OBJC_IVAR____TtCV7Weather32LocationElevatedAqiConfiguration8_Storage_airQuality);
  return v0;
}

uint64_t sub_1002CAEF0()
{
  return sub_100117910((void (*)(void))sub_1002CAE94);
}

uint64_t sub_1002CAF08()
{
  return type metadata accessor for LocationElevatedAqiConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationElevatedAqiConfiguration._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E67EE0);
}

uint64_t sub_1002CAF30(uint64_t a1)
{
  return sub_1002C96F8(a1, (void (*)(uint64_t))sub_1002CAF5C);
}

void sub_1002CAF5C()
{
  sub_10016314C();
  unint64_t v2 = v1;
  sub_10017C924();
  type metadata accessor for LocationViewComponent();
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100181E70();
  __chkstk_darwin(v4);
  sub_100182F0C();
  sub_10017DF08(&qword_100E6A9A8);
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_10018C3D8(v2, v2[3]);
  sub_1002E89CC();
  sub_1002EE44C();
  sub_1002EEF60();
  if (v0)
  {
    sub_1001A1CE0();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1002EED98();
    sub_10019B838();
    sub_100166B08();
    sub_100127D40((unint64_t *)&qword_100E6A860, 255, (void (*)(uint64_t))type metadata accessor for LocationViewComponent);
    sub_1001D1540();
    sub_10016EAB0();
    sub_1001CA7C0();
    uint64_t v6 = sub_10019DE04();
    v7(v6);
    sub_10016EAB0();
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v2);
  sub_1002EE960();
  sub_100163164();
}

uint64_t sub_1002CB1C0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1002CAF30(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1002CB1EC()
{
  sub_1002D1ECC();
  return v0 & 1;
}

uint64_t sub_1002CB220()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for LocationElevatedAqiConfiguration._Storage(v0);
  sub_1002EEF48();
  return v1 & 1;
}

void sub_1002CB25C()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100E6AE58);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_1002EBE6C();
  sub_100163110();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  }
  else
  {
    type metadata accessor for LocationElevatedAqiConfiguration._Storage(0);
    sub_100127D40(&qword_100E6AE68, 255, (void (*)(uint64_t))type metadata accessor for LocationElevatedAqiConfiguration._Storage);
    sub_10017F988();
    uint64_t v3 = sub_100179EBC();
    v4(v3);
    sub_1001D1374();
  }
  sub_100184924();
  sub_100182EF8();
}

uint64_t sub_1002CB36C(uint64_t a1)
{
  unint64_t v2 = sub_1002EBE6C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002CB3A8(uint64_t a1)
{
  unint64_t v2 = sub_1002EBE6C();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002CB3E4(void *a1@<X8>)
{
  sub_1002CB25C();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1002CB410()
{
  return sub_1002CB220();
}

uint64_t sub_1002CB41C()
{
  return sub_1002CA39C();
}

uint64_t sub_1002CB438(uint64_t a1)
{
  unint64_t v2 = sub_1002E8980();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002CB474(uint64_t a1)
{
  unint64_t v2 = sub_1002E8980();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002CB4B0()
{
  swift_release();
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather42LocationElevatedAqiMinorAlertConfiguration8_Storage_map, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100163134(OBJC_IVAR____TtCV7Weather42LocationElevatedAqiMinorAlertConfiguration8_Storage_severeAlert);
  sub_100163134(OBJC_IVAR____TtCV7Weather42LocationElevatedAqiMinorAlertConfiguration8_Storage_airQuality);
  return v0;
}

uint64_t sub_1002CB518()
{
  return sub_100117910((void (*)(void))sub_1002CB4B0);
}

uint64_t sub_1002CB530()
{
  return type metadata accessor for LocationElevatedAqiMinorAlertConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationElevatedAqiMinorAlertConfiguration._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E67FA8);
}

uint64_t sub_1002CB558(uint64_t a1)
{
  return sub_1002C96F8(a1, (void (*)(uint64_t))sub_1002CB584);
}

void sub_1002CB584()
{
  sub_10016314C();
  unint64_t v2 = v1;
  sub_10017C924();
  type metadata accessor for LocationViewComponent();
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100162824();
  __chkstk_darwin(v4);
  sub_100181E70();
  __chkstk_darwin(v5);
  sub_100188F80();
  sub_10017DF08(&qword_100E6A998);
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_10018C3D8(v2, v2[3]);
  sub_1002E8980();
  sub_100164F4C();
  sub_1001092A8();
  if (v0)
  {
    sub_1001A1CE0();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_100163E3C();
    sub_1001D0E10();
    sub_100166B08();
    uint64_t v7 = sub_100127D40((unint64_t *)&qword_100E6A860, 255, (void (*)(uint64_t))type metadata accessor for LocationViewComponent);
    sub_10019FBA0(v7);
    sub_10016EAB0();
    sub_1001838A0();
    sub_10016EAB0();
    sub_10019D430();
    uint64_t v8 = sub_10019E7C0();
    v9(v8);
    sub_10016EAB0();
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v2);
  sub_10018B2CC();
  sub_100163164();
}

uint64_t sub_1002CB858@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1002CB558(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1002CB884()
{
  sub_1002CA41C();
  return v0 & 1;
}

uint64_t sub_1002CB8C0()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for LocationElevatedAqiMinorAlertConfiguration._Storage(v0);
  sub_100214EAC();
  return v1 & 1;
}

void sub_1002CB904()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100E6AE70);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_1002EBEB8();
  sub_100163110();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  }
  else
  {
    type metadata accessor for LocationElevatedAqiMinorAlertConfiguration._Storage(0);
    sub_100127D40(&qword_100E6AE80, 255, (void (*)(uint64_t))type metadata accessor for LocationElevatedAqiMinorAlertConfiguration._Storage);
    sub_10017F988();
    uint64_t v3 = sub_100179EBC();
    v4(v3);
    sub_1001D1374();
  }
  sub_100184924();
  sub_100182EF8();
}

uint64_t sub_1002CBA14(uint64_t a1)
{
  unint64_t v2 = sub_1002EBEB8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002CBA50(uint64_t a1)
{
  unint64_t v2 = sub_1002EBEB8();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002CBA8C(void *a1@<X8>)
{
  sub_1002CB904();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1002CBAB8()
{
  return sub_1002CB8C0();
}

uint64_t sub_1002CBAC4()
{
  return sub_1002CA39C();
}

uint64_t sub_1002CBAE0()
{
  sub_1002EE6D4();
  BOOL v2 = v2 && v1 == 0xE600000000000000;
  if (v2 || (v3 = v1, uint64_t v4 = v0, (sub_100188D20() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    sub_1002EEB08();
    BOOL v6 = v2 && v3 == 0xE300000000000000;
    if (v6 || (sub_100188D20() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      sub_10018B458();
      BOOL v8 = v2 && v3 == v7;
      if (v8 || (sub_100188D20() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (v4 == 0x697472417377656ELL && v3 == 0xEB00000000656C63)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        sub_100188D20();
        sub_100182F1C();
        if (v4) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_1002CBC38(uint64_t a1)
{
  unint64_t v2 = sub_1002E8934();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002CBC74(uint64_t a1)
{
  unint64_t v2 = sub_1002E8934();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002CBCB0()
{
  swift_release();
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather36LocationElevatedAqiNewsConfiguration8_Storage_map, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100163134(OBJC_IVAR____TtCV7Weather36LocationElevatedAqiNewsConfiguration8_Storage_airQuality);
  sub_100163134(OBJC_IVAR____TtCV7Weather36LocationElevatedAqiNewsConfiguration8_Storage_newsArticle);
  return v0;
}

uint64_t sub_1002CBD18()
{
  return sub_100117910((void (*)(void))sub_1002CBCB0);
}

uint64_t sub_1002CBD30()
{
  return type metadata accessor for LocationElevatedAqiNewsConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationElevatedAqiNewsConfiguration._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E68078);
}

uint64_t sub_1002CBD58(uint64_t a1)
{
  return sub_1002C96F8(a1, (void (*)(uint64_t))sub_1002CBD84);
}

void sub_1002CBD84()
{
  sub_10016314C();
  unint64_t v2 = v1;
  sub_10017C924();
  type metadata accessor for LocationViewComponent();
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100162824();
  __chkstk_darwin(v4);
  sub_100181E70();
  __chkstk_darwin(v5);
  sub_100188F80();
  sub_10017DF08(&qword_100E6A988);
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_10018C3D8(v2, v2[3]);
  sub_1002E8934();
  sub_100164F4C();
  sub_1001092A8();
  if (v0)
  {
    sub_1001A1CE0();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_100163E3C();
    sub_1001D0E10();
    sub_100166B08();
    uint64_t v7 = sub_100127D40((unint64_t *)&qword_100E6A860, 255, (void (*)(uint64_t))type metadata accessor for LocationViewComponent);
    sub_10019FBA0(v7);
    sub_10016EAB0();
    sub_1001838A0();
    sub_10016EAB0();
    sub_10019D430();
    uint64_t v8 = sub_10019E7C0();
    v9(v8);
    sub_10016EAB0();
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v2);
  sub_10018B2CC();
  sub_100163164();
}

uint64_t sub_1002CC058@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1002CBD58(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1002CC084()
{
  sub_1002CA41C();
  return v0 & 1;
}

uint64_t sub_1002CC0C0()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for LocationElevatedAqiNewsConfiguration._Storage(v0);
  sub_100214EAC();
  return v1 & 1;
}

void sub_1002CC104()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100E6AE88);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_1002EBF04();
  sub_100163110();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  }
  else
  {
    type metadata accessor for LocationElevatedAqiNewsConfiguration._Storage(0);
    sub_100127D40(&qword_100E6AE98, 255, (void (*)(uint64_t))type metadata accessor for LocationElevatedAqiNewsConfiguration._Storage);
    sub_10017F988();
    uint64_t v3 = sub_100179EBC();
    v4(v3);
    sub_1001D1374();
  }
  sub_100184924();
  sub_100182EF8();
}

uint64_t sub_1002CC214(uint64_t a1)
{
  unint64_t v2 = sub_1002EBF04();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002CC250(uint64_t a1)
{
  unint64_t v2 = sub_1002EBF04();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002CC28C(void *a1@<X8>)
{
  sub_1002CC104();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1002CC2B8()
{
  return sub_1002CC0C0();
}

uint64_t sub_1002CC2C4()
{
  return sub_1002CA39C();
}

uint64_t sub_1002CC2E0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6D6D6F63 && a2 == 0xE600000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 7364973 && a2 == 0xE300000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x696C617551726961 && a2 == 0xEA00000000007974;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x6C41657265766573 && a2 == 0xEB00000000747265)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_1002CC49C(char a1)
{
  uint64_t result = 0x6E6F6D6D6F63;
  switch(a1)
  {
    case 1:
      uint64_t result = 7364973;
      break;
    case 2:
      uint64_t result = 0x696C617551726961;
      break;
    case 3:
      uint64_t result = 0x6C41657265766573;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1002CC530()
{
  return sub_1002CC49C(*v0);
}

uint64_t sub_1002CC538@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002CC2E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002CC560(uint64_t a1)
{
  unint64_t v2 = sub_1002E88E8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002CC59C(uint64_t a1)
{
  unint64_t v2 = sub_1002E88E8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002CC5D8()
{
  swift_release();
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather38LocationElevatedAqiSevereConfiguration8_Storage_map, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100163134(OBJC_IVAR____TtCV7Weather38LocationElevatedAqiSevereConfiguration8_Storage_airQuality);
  sub_100163134(OBJC_IVAR____TtCV7Weather38LocationElevatedAqiSevereConfiguration8_Storage_severeAlert);
  return v0;
}

uint64_t sub_1002CC640()
{
  return sub_100117910((void (*)(void))sub_1002CC5D8);
}

uint64_t sub_1002CC658()
{
  return type metadata accessor for LocationElevatedAqiSevereConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationElevatedAqiSevereConfiguration._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E68148);
}

uint64_t sub_1002CC680(uint64_t a1)
{
  return sub_1002C96F8(a1, (void (*)(uint64_t))sub_1002CC6AC);
}

void sub_1002CC6AC()
{
  sub_10016314C();
  unint64_t v2 = v1;
  sub_10017C924();
  type metadata accessor for LocationViewComponent();
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100162824();
  __chkstk_darwin(v4);
  sub_100181E70();
  __chkstk_darwin(v5);
  sub_100188F80();
  sub_10017DF08(&qword_100E6A978);
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_10018C3D8(v2, v2[3]);
  sub_1002E88E8();
  sub_100164F4C();
  sub_1001092A8();
  if (v0)
  {
    sub_1001A1CE0();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_100163E3C();
    sub_1001D0E10();
    sub_100166B08();
    uint64_t v7 = sub_100127D40((unint64_t *)&qword_100E6A860, 255, (void (*)(uint64_t))type metadata accessor for LocationViewComponent);
    sub_10019FBA0(v7);
    sub_10016EAB0();
    sub_1001838A0();
    sub_10016EAB0();
    sub_10019D430();
    uint64_t v8 = sub_10019E7C0();
    v9(v8);
    sub_10016EAB0();
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v2);
  sub_10018B2CC();
  sub_100163164();
}

uint64_t sub_1002CC980@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1002CC680(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1002CC9AC()
{
  sub_1002CA41C();
  return v0 & 1;
}

uint64_t sub_1002CC9E8()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for LocationElevatedAqiSevereConfiguration._Storage(v0);
  sub_100214EAC();
  return v1 & 1;
}

void sub_1002CCA2C()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100E6AEA0);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_1002EBF50();
  sub_100163110();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  }
  else
  {
    type metadata accessor for LocationElevatedAqiSevereConfiguration._Storage(0);
    sub_100127D40(&qword_100E6AEB0, 255, (void (*)(uint64_t))type metadata accessor for LocationElevatedAqiSevereConfiguration._Storage);
    sub_10017F988();
    uint64_t v3 = sub_100179EBC();
    v4(v3);
    sub_1001D1374();
  }
  sub_100184924();
  sub_100182EF8();
}

uint64_t sub_1002CCB3C(uint64_t a1)
{
  unint64_t v2 = sub_1002EBF50();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002CCB78(uint64_t a1)
{
  unint64_t v2 = sub_1002EBF50();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002CCBB4(void *a1@<X8>)
{
  sub_1002CCA2C();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1002CCBE0()
{
  return sub_1002CC9E8();
}

void sub_1002CCBEC()
{
}

uint64_t sub_1002CCC30(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6D6D6F63 && a2 == 0xE600000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 7364973 && a2 == 0xE300000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x696C617551726961 && a2 == 0xEA00000000007974;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x6C41657265766573 && a2 == 0xEB00000000747265;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x697472417377656ELL && a2 == 0xEB00000000656C63)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v10) {
            return 4;
          }
          else {
            return 5;
          }
        }
      }
    }
  }
}

uint64_t sub_1002CCE64(char a1)
{
  uint64_t result = 0x6E6F6D6D6F63;
  switch(a1)
  {
    case 1:
      uint64_t result = 7364973;
      break;
    case 2:
      uint64_t result = 0x696C617551726961;
      break;
    case 3:
      uint64_t result = 0x6C41657265766573;
      break;
    case 4:
      uint64_t result = 0x697472417377656ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1002CCF1C()
{
  return sub_1002CCE64(*v0);
}

uint64_t sub_1002CCF24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002CCC30(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002CCF4C(uint64_t a1)
{
  unint64_t v2 = sub_1002E889C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002CCF88(uint64_t a1)
{
  unint64_t v2 = sub_1002E889C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002CCFC4()
{
  swift_release();
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather42LocationElevatedAqiSevereNewsConfiguration8_Storage_map, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100163134(OBJC_IVAR____TtCV7Weather42LocationElevatedAqiSevereNewsConfiguration8_Storage_airQuality);
  sub_100163134(OBJC_IVAR____TtCV7Weather42LocationElevatedAqiSevereNewsConfiguration8_Storage_severeAlert);
  sub_100163134(OBJC_IVAR____TtCV7Weather42LocationElevatedAqiSevereNewsConfiguration8_Storage_newsArticle);
  return v0;
}

uint64_t sub_1002CD038()
{
  return sub_100117910((void (*)(void))sub_1002CCFC4);
}

uint64_t sub_1002CD050()
{
  return type metadata accessor for LocationElevatedAqiSevereNewsConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationElevatedAqiSevereNewsConfiguration._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E68218);
}

uint64_t sub_1002CD07C(uint64_t a1)
{
  return sub_1002C96F8(a1, (void (*)(uint64_t))sub_1002CD0A8);
}

void sub_1002CD0A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_10016314C();
  BOOL v13 = v12;
  sub_10017C924();
  type metadata accessor for LocationViewComponent();
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_10017EFE0(v15, v24);
  __chkstk_darwin(v16);
  sub_1001190EC();
  __chkstk_darwin(v17);
  sub_100119488();
  __chkstk_darwin(v18);
  sub_1001EC3C8();
  sub_10017DF08(&qword_100E6A968);
  sub_100179C0C();
  __chkstk_darwin(v19);
  uint64_t v20 = v13[3];
  sub_10018C3D8(v13, v20);
  sub_1002E889C();
  sub_100178FDC();
  sub_10011B0DC();
  if (v11)
  {
    sub_10018AFD8();
    swift_deallocPartialClassInstance();
    uint64_t v23 = (uint64_t)v13;
  }
  else
  {
    sub_1001EA91C();
    sub_1001C866C();
    *(void *)(v20 + 16) = a10;
    sub_10012B92C();
    sub_100127D40((unint64_t *)&qword_100E6A860, 255, (void (*)(uint64_t))type metadata accessor for LocationViewComponent);
    sub_100188948();
    sub_1002EECC8();
    sub_10016EAB0();
    sub_100186848();
    sub_10016EAB0();
    sub_1001A3100();
    sub_10016EAB0();
    sub_1001A3100();
    sub_1002EE494();
    uint64_t v21 = sub_1001A454C();
    v22(v21);
    sub_10016EAB0();
    uint64_t v23 = v10;
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v23);
  sub_1002EE570();
  sub_100163164();
}

uint64_t sub_1002CD468@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1002CD07C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1002CD494()
{
  sub_1002CE7BC();
  return v0 & 1;
}

uint64_t sub_1002CD4D8()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for LocationElevatedAqiSevereNewsConfiguration._Storage(v0);
  sub_1002EEB78();
  return v1 & 1;
}

void sub_1002CD524()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100E6AEB8);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_1002EBF9C();
  sub_100163110();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  }
  else
  {
    type metadata accessor for LocationElevatedAqiSevereNewsConfiguration._Storage(0);
    sub_100127D40(&qword_100E6AEC8, 255, (void (*)(uint64_t))type metadata accessor for LocationElevatedAqiSevereNewsConfiguration._Storage);
    sub_10017F988();
    uint64_t v3 = sub_100179EBC();
    v4(v3);
    sub_1001D1374();
  }
  sub_100184924();
  sub_100182EF8();
}

uint64_t sub_1002CD634(uint64_t a1)
{
  unint64_t v2 = sub_1002EBF9C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002CD670(uint64_t a1)
{
  unint64_t v2 = sub_1002EBF9C();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002CD6AC(void *a1@<X8>)
{
  sub_1002CD524();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1002CD6D8()
{
  return sub_1002CD4D8();
}

uint64_t sub_1002CD6E4()
{
  return sub_1002CA39C();
}

uint64_t sub_1002CD700(uint64_t a1)
{
  unint64_t v2 = sub_1002E8850();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002CD73C(uint64_t a1)
{
  unint64_t v2 = sub_1002E8850();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002CD778()
{
  swift_release();
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather31LocationMinorAlertConfiguration8_Storage_map, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100163134(OBJC_IVAR____TtCV7Weather31LocationMinorAlertConfiguration8_Storage_severeAlert);
  sub_100163134(OBJC_IVAR____TtCV7Weather31LocationMinorAlertConfiguration8_Storage_airQuality);
  return v0;
}

uint64_t sub_1002CD7E0()
{
  return sub_100117910((void (*)(void))sub_1002CD778);
}

uint64_t sub_1002CD7F8()
{
  return type metadata accessor for LocationMinorAlertConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationMinorAlertConfiguration._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E682F0);
}

uint64_t sub_1002CD820(uint64_t a1)
{
  return sub_1002C96F8(a1, (void (*)(uint64_t))sub_1002CD84C);
}

void sub_1002CD84C()
{
  sub_10016314C();
  unint64_t v2 = v1;
  sub_10017C924();
  type metadata accessor for LocationViewComponent();
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100162824();
  __chkstk_darwin(v4);
  sub_100181E70();
  __chkstk_darwin(v5);
  sub_100188F80();
  sub_10017DF08(&qword_100E6A958);
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_10018C3D8(v2, v2[3]);
  sub_1002E8850();
  sub_100164F4C();
  sub_1001092A8();
  if (v0)
  {
    sub_1001A1CE0();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_100163E3C();
    sub_1001D0E10();
    sub_100166B08();
    uint64_t v7 = sub_100127D40((unint64_t *)&qword_100E6A860, 255, (void (*)(uint64_t))type metadata accessor for LocationViewComponent);
    sub_10019FBA0(v7);
    sub_10016EAB0();
    sub_1001838A0();
    sub_10016EAB0();
    sub_10019D430();
    uint64_t v8 = sub_10019E7C0();
    v9(v8);
    sub_10016EAB0();
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v2);
  sub_10018B2CC();
  sub_100163164();
}

uint64_t sub_1002CDB20@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1002CD820(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1002CDB4C()
{
  sub_1002CA41C();
  return v0 & 1;
}

uint64_t sub_1002CDB88()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for LocationMinorAlertConfiguration._Storage(v0);
  sub_100214EAC();
  return v1 & 1;
}

void sub_1002CDBCC()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100E6AED0);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_1002EBFE8();
  sub_100163110();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  }
  else
  {
    type metadata accessor for LocationMinorAlertConfiguration._Storage(0);
    sub_100127D40(&qword_100E6AEE0, 255, (void (*)(uint64_t))type metadata accessor for LocationMinorAlertConfiguration._Storage);
    sub_10017F988();
    uint64_t v3 = sub_100179EBC();
    v4(v3);
    sub_1001D1374();
  }
  sub_100184924();
  sub_100182EF8();
}

uint64_t sub_1002CDCDC(uint64_t a1)
{
  unint64_t v2 = sub_1002EBFE8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002CDD18(uint64_t a1)
{
  unint64_t v2 = sub_1002EBFE8();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002CDD54(void *a1@<X8>)
{
  sub_1002CDBCC();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1002CDD80()
{
  return sub_1002CDB88();
}

uint64_t sub_1002CDD8C()
{
  return sub_1002CA39C();
}

uint64_t sub_1002CDDA8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6D6D6F63 && a2 == 0xE600000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 7364973 && a2 == 0xE300000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000015 && a2 == 0x8000000100C95D30 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0x696C617551726961 && a2 == 0xEA00000000007974)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8) {
        return 3;
      }
      else {
        return 4;
      }
    }
  }
}

uint64_t sub_1002CDF48()
{
  return 4;
}

unint64_t sub_1002CDF50(char a1)
{
  unint64_t result = 0x6E6F6D6D6F63;
  switch(a1)
  {
    case 1:
      unint64_t result = 7364973;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0x696C617551726961;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1002CDFE0()
{
  return sub_1002CDF50(*v0);
}

uint64_t sub_1002CDFE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002CDDA8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002CE010@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1002CDF48();
  *a1 = result;
  return result;
}

uint64_t sub_1002CE038(uint64_t a1)
{
  unint64_t v2 = sub_1002E8804();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002CE074(uint64_t a1)
{
  unint64_t v2 = sub_1002E8804();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002CE0B0()
{
  swift_release();
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather24LocationNhpConfiguration8_Storage_map, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100163134(OBJC_IVAR____TtCV7Weather24LocationNhpConfiguration8_Storage_nextHourPrecipitation);
  sub_100163134(OBJC_IVAR____TtCV7Weather24LocationNhpConfiguration8_Storage_airQuality);
  return v0;
}

uint64_t sub_1002CE118()
{
  return sub_100117910((void (*)(void))sub_1002CE0B0);
}

uint64_t sub_1002CE130()
{
  return type metadata accessor for LocationNhpConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationNhpConfiguration._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E683C0);
}

uint64_t sub_1002CE158(uint64_t a1)
{
  return sub_1002C96F8(a1, (void (*)(uint64_t))sub_1002CE184);
}

void sub_1002CE184()
{
  sub_10016314C();
  unint64_t v2 = v1;
  sub_10017C924();
  type metadata accessor for LocationViewComponent();
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100162824();
  __chkstk_darwin(v4);
  sub_100181E70();
  __chkstk_darwin(v5);
  sub_100188F80();
  sub_10017DF08(&qword_100E6A948);
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_10018C3D8(v2, v2[3]);
  sub_1002E8804();
  sub_100164F4C();
  sub_1001092A8();
  if (v0)
  {
    sub_1001A1CE0();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_100163E3C();
    sub_1001D0E10();
    sub_100166B08();
    uint64_t v7 = sub_100127D40((unint64_t *)&qword_100E6A860, 255, (void (*)(uint64_t))type metadata accessor for LocationViewComponent);
    sub_10019FBA0(v7);
    sub_10016EAB0();
    sub_1001838A0();
    sub_10016EAB0();
    sub_10019D430();
    uint64_t v8 = sub_10019E7C0();
    v9(v8);
    sub_10016EAB0();
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v2);
  sub_10018B2CC();
  sub_100163164();
}

uint64_t sub_1002CE458@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1002CE158(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1002CE484()
{
  sub_1002CA41C();
  return v0 & 1;
}

uint64_t sub_1002CE4C0()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for LocationNhpConfiguration._Storage(v0);
  sub_100214EAC();
  return v1 & 1;
}

void sub_1002CE504()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100E6AEE8);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_1002EC034();
  sub_100163110();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  }
  else
  {
    type metadata accessor for LocationNhpConfiguration._Storage(0);
    sub_100127D40(&qword_100E6AEF8, 255, (void (*)(uint64_t))type metadata accessor for LocationNhpConfiguration._Storage);
    sub_10017F988();
    uint64_t v3 = sub_100179EBC();
    v4(v3);
    sub_1001D1374();
  }
  sub_100184924();
  sub_100182EF8();
}

uint64_t sub_1002CE614(uint64_t a1)
{
  unint64_t v2 = sub_1002EC034();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002CE650(uint64_t a1)
{
  unint64_t v2 = sub_1002EC034();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002CE68C(void *a1@<X8>)
{
  sub_1002CE504();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1002CE6B8()
{
  return sub_1002CE4C0();
}

void sub_1002CE6C4()
{
}

void sub_1002CE708()
{
  sub_10010977C();
  *(void *)(v0 + 16) = v1;
  sub_10016EAB0();
  sub_10016EAB0();
  sub_10016EAB0();
  sub_10016EAB0();
  sub_100162714();
}

void sub_1002CE7BC()
{
  sub_100162EA0();
  uint64_t v2 = type metadata accessor for LocationViewComponent();
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_100162758();
  __chkstk_darwin(v4);
  sub_1001EC3C8();
  type metadata accessor for LocationCommonConfigurationComponents._Storage(0);
  swift_retain();
  swift_retain();
  char v5 = sub_1002C7204();
  swift_release();
  swift_release();
  if (v5)
  {
    sub_10011818C();
    sub_100128F98();
    char v6 = sub_1002EE908();
    sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationViewComponent);
    sub_1001184F4(v1, (void (*)(void))type metadata accessor for LocationViewComponent);
    if (v6)
    {
      sub_10011818C();
      sub_100128F98();
      char v7 = sub_1002EE908();
      sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationViewComponent);
      sub_1002EE770();
      if (v7)
      {
        sub_10011818C();
        sub_100128F98();
        char v8 = sub_1002EE908();
        sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationViewComponent);
        sub_1001184F4(v1, (void (*)(void))type metadata accessor for LocationViewComponent);
        if (v8)
        {
          sub_10011818C();
          sub_100128F98();
          sub_1002EE908();
          sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationViewComponent);
          sub_10011917C();
        }
      }
    }
  }
  sub_100119448();
  sub_100162694();
}

uint64_t sub_1002CEA48(uint64_t a1)
{
  unint64_t v2 = sub_1002E87B8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002CEA84(uint64_t a1)
{
  unint64_t v2 = sub_1002E87B8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002CEAC0()
{
  swift_release();
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather34LocationNhpMinorAlertConfiguration8_Storage_map, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100163134(OBJC_IVAR____TtCV7Weather34LocationNhpMinorAlertConfiguration8_Storage_severeAlert);
  sub_100163134(OBJC_IVAR____TtCV7Weather34LocationNhpMinorAlertConfiguration8_Storage_nextHourPrecipitation);
  sub_100163134(OBJC_IVAR____TtCV7Weather34LocationNhpMinorAlertConfiguration8_Storage_airQuality);
  return v0;
}

uint64_t sub_1002CEB34()
{
  return sub_100117910((void (*)(void))sub_1002CEAC0);
}

uint64_t sub_1002CEB4C()
{
  return type metadata accessor for LocationNhpMinorAlertConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationNhpMinorAlertConfiguration._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E68490);
}

uint64_t sub_1002CEB74(uint64_t a1)
{
  return sub_1002C96F8(a1, (void (*)(uint64_t))sub_1002CEBA0);
}

void sub_1002CEBA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_10016314C();
  BOOL v13 = v12;
  sub_10017C924();
  type metadata accessor for LocationViewComponent();
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_10017EFE0(v15, v24);
  __chkstk_darwin(v16);
  sub_1001190EC();
  __chkstk_darwin(v17);
  sub_100119488();
  __chkstk_darwin(v18);
  sub_1001EC3C8();
  sub_10017DF08(&qword_100E6A938);
  sub_100179C0C();
  __chkstk_darwin(v19);
  uint64_t v20 = v13[3];
  sub_10018C3D8(v13, v20);
  sub_1002E87B8();
  sub_100178FDC();
  sub_10011B0DC();
  if (v11)
  {
    sub_10018AFD8();
    swift_deallocPartialClassInstance();
    uint64_t v23 = (uint64_t)v13;
  }
  else
  {
    sub_1001EA91C();
    sub_1001C866C();
    *(void *)(v20 + 16) = a10;
    sub_10012B92C();
    sub_100127D40((unint64_t *)&qword_100E6A860, 255, (void (*)(uint64_t))type metadata accessor for LocationViewComponent);
    sub_100188948();
    sub_1002EECC8();
    sub_10016EAB0();
    sub_100186848();
    sub_10016EAB0();
    sub_1001A3100();
    sub_10016EAB0();
    sub_1001A3100();
    sub_1002EE494();
    uint64_t v21 = sub_1001A454C();
    v22(v21);
    sub_10016EAB0();
    uint64_t v23 = v10;
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v23);
  sub_1002EE570();
  sub_100163164();
}

uint64_t sub_1002CEF60@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1002CEB74(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1002CEF8C()
{
  sub_1002CE7BC();
  return v0 & 1;
}

uint64_t sub_1002CEFD0()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for LocationNhpMinorAlertConfiguration._Storage(v0);
  sub_1002EEB78();
  return v1 & 1;
}

void sub_1002CF01C()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100E6AF00);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_1002EC080();
  sub_100163110();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  }
  else
  {
    type metadata accessor for LocationNhpMinorAlertConfiguration._Storage(0);
    sub_100127D40(&qword_100E6AF10, 255, (void (*)(uint64_t))type metadata accessor for LocationNhpMinorAlertConfiguration._Storage);
    sub_10017F988();
    uint64_t v3 = sub_100179EBC();
    v4(v3);
    sub_1001D1374();
  }
  sub_100184924();
  sub_100182EF8();
}

uint64_t sub_1002CF12C(uint64_t a1)
{
  unint64_t v2 = sub_1002EC080();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002CF168(uint64_t a1)
{
  unint64_t v2 = sub_1002EC080();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002CF1A4(void *a1@<X8>)
{
  sub_1002CF01C();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1002CF1D0()
{
  return sub_1002CEFD0();
}

void sub_1002CF1DC()
{
}

uint64_t sub_1002CF220(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6D6D6F63 && a2 == 0xE600000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 7364973 && a2 == 0xE300000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000015 && a2 == 0x8000000100C95D30 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v7 = a1 == 0x697472417377656ELL && a2 == 0xEB00000000656C63;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0x696C617551726961 && a2 == 0xEA00000000007974)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v9) {
          return 4;
        }
        else {
          return 5;
        }
      }
    }
  }
}

uint64_t sub_1002CF438()
{
  return 5;
}

unint64_t sub_1002CF440(char a1)
{
  unint64_t result = 0x6E6F6D6D6F63;
  switch(a1)
  {
    case 1:
      unint64_t result = 7364973;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0x697472417377656ELL;
      break;
    case 4:
      unint64_t result = 0x696C617551726961;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1002CF4F4()
{
  return sub_1002CF440(*v0);
}

uint64_t sub_1002CF4FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002CF220(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002CF524@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1002CF438();
  *a1 = result;
  return result;
}

uint64_t sub_1002CF54C(uint64_t a1)
{
  unint64_t v2 = sub_1002E876C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002CF588(uint64_t a1)
{
  unint64_t v2 = sub_1002E876C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002CF5C4()
{
  swift_release();
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather28LocationNhpNewsConfiguration8_Storage_map, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100163134(OBJC_IVAR____TtCV7Weather28LocationNhpNewsConfiguration8_Storage_nextHourPrecipitation);
  sub_100163134(OBJC_IVAR____TtCV7Weather28LocationNhpNewsConfiguration8_Storage_newsArticle);
  sub_100163134(OBJC_IVAR____TtCV7Weather28LocationNhpNewsConfiguration8_Storage_airQuality);
  return v0;
}

uint64_t sub_1002CF638()
{
  return sub_100117910((void (*)(void))sub_1002CF5C4);
}

uint64_t sub_1002CF650()
{
  return type metadata accessor for LocationNhpNewsConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationNhpNewsConfiguration._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E68568);
}

uint64_t sub_1002CF678(uint64_t a1)
{
  return sub_1002C96F8(a1, (void (*)(uint64_t))sub_1002CF6A4);
}

void sub_1002CF6A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_10016314C();
  BOOL v13 = v12;
  sub_10017C924();
  type metadata accessor for LocationViewComponent();
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_10017EFE0(v15, v24);
  __chkstk_darwin(v16);
  sub_1001190EC();
  __chkstk_darwin(v17);
  sub_100119488();
  __chkstk_darwin(v18);
  sub_1001EC3C8();
  sub_10017DF08(&qword_100E6A928);
  sub_100179C0C();
  __chkstk_darwin(v19);
  uint64_t v20 = v13[3];
  sub_10018C3D8(v13, v20);
  sub_1002E876C();
  sub_100178FDC();
  sub_10011B0DC();
  if (v11)
  {
    sub_10018AFD8();
    swift_deallocPartialClassInstance();
    uint64_t v23 = (uint64_t)v13;
  }
  else
  {
    sub_1001EA91C();
    sub_1001C866C();
    *(void *)(v20 + 16) = a10;
    sub_10012B92C();
    sub_100127D40((unint64_t *)&qword_100E6A860, 255, (void (*)(uint64_t))type metadata accessor for LocationViewComponent);
    sub_100188948();
    sub_1002EECC8();
    sub_10016EAB0();
    sub_100186848();
    sub_10016EAB0();
    sub_1001A3100();
    sub_10016EAB0();
    sub_1001A3100();
    sub_1002EE494();
    uint64_t v21 = sub_1001A454C();
    v22(v21);
    sub_10016EAB0();
    uint64_t v23 = v10;
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v23);
  sub_1002EE570();
  sub_100163164();
}

uint64_t sub_1002CFA64@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1002CF678(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1002CFA90()
{
  sub_1002CE7BC();
  return v0 & 1;
}

uint64_t sub_1002CFAD4()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for LocationNhpNewsConfiguration._Storage(v0);
  sub_1002EEB78();
  return v1 & 1;
}

void sub_1002CFB20()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100E6AF18);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_1002EC0CC();
  sub_100163110();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  }
  else
  {
    type metadata accessor for LocationNhpNewsConfiguration._Storage(0);
    sub_100127D40(&qword_100E6AF28, 255, (void (*)(uint64_t))type metadata accessor for LocationNhpNewsConfiguration._Storage);
    sub_10017F988();
    uint64_t v3 = sub_100179EBC();
    v4(v3);
    sub_1001D1374();
  }
  sub_100184924();
  sub_100182EF8();
}

uint64_t sub_1002CFC30(uint64_t a1)
{
  unint64_t v2 = sub_1002EC0CC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002CFC6C(uint64_t a1)
{
  unint64_t v2 = sub_1002EC0CC();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002CFCA8(void *a1@<X8>)
{
  sub_1002CFB20();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1002CFCD4()
{
  return sub_1002CFAD4();
}

void sub_1002CFCE0()
{
  sub_10010977C();
  uint64_t v1 = sub_1002EF15C();
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_10012907C();
  __chkstk_darwin(v3);
  type metadata accessor for LocationCommonConfigurationComponents._Storage(0);
  swift_retain();
  swift_retain();
  char v4 = sub_1002C7204();
  swift_release();
  swift_release();
  if (v4)
  {
    sub_10011818C();
    sub_1002EEC88();
    sub_1001CB718();
    sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationViewComponent);
    sub_1002EEA9C();
  }
  sub_100162714();
}

BOOL static ListSessionTrigger.__derived_enum_equals(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void SizingBehavior.hash(into:)(uint64_t a1, char a2)
{
}

uint64_t sub_1002CFE40(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6D6D6F63 && a2 == 0xE600000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7364973 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

Swift::Int SizingBehavior.hashValue.getter(char a1)
{
  return Hasher._finalize()();
}

uint64_t sub_1002CFF60(char a1)
{
  if (a1) {
    return 7364973;
  }
  else {
    return 0x6E6F6D6D6F63;
  }
}

BOOL sub_1002CFF8C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return static ListSessionTrigger.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_1002CFF98()
{
  return SizingBehavior.hashValue.getter(*v0);
}

void sub_1002CFFA0(uint64_t a1)
{
  SizingBehavior.hash(into:)(a1, *v1);
}

uint64_t sub_1002CFFA8()
{
  return sub_1002CFF60(*v0);
}

uint64_t sub_1002CFFB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002CFE40(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002CFFD8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_10023A5C8();
  *a1 = result;
  return result;
}

uint64_t sub_1002D0000(uint64_t a1)
{
  unint64_t v2 = sub_1002E8720();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D003C(uint64_t a1)
{
  unint64_t v2 = sub_1002E8720();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002D0078()
{
  return sub_1002DC268(&OBJC_IVAR____TtCV7Weather26LocationNoAqiConfiguration8_Storage_map, (uint64_t)type metadata accessor for LocationViewComponent, (void (*)(uint64_t, uint64_t))sub_1001184F4);
}

uint64_t sub_1002D00AC()
{
  return type metadata accessor for LocationNoAqiConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationNoAqiConfiguration._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E68640);
}

uint64_t sub_1002D00D4()
{
  uint64_t result = type metadata accessor for LocationViewComponent();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1002D0174(uint64_t a1)
{
  return sub_1002C96F8(a1, (void (*)(uint64_t))sub_1002D01A0);
}

void sub_1002D01A0()
{
  sub_10016314C();
  unint64_t v2 = v1;
  sub_10017C924();
  type metadata accessor for LocationViewComponent();
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100162F18();
  sub_10017DF08(&qword_100E6A918);
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_10008B8C0();
  sub_10018C3D8(v2, v2[3]);
  sub_1002E8720();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v0)
  {
    sub_1001A1CE0();
    sub_1002EED20();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1002E8390();
    sub_1002EF254();
    sub_100166B08();
    sub_100127D40((unint64_t *)&qword_100E6A860, 255, (void (*)(uint64_t))type metadata accessor for LocationViewComponent);
    sub_1002EF254();
    sub_10016285C();
    v5();
    sub_10016EAB0();
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v2);
  sub_1002EE5D4();
  sub_100163164();
}

uint64_t sub_1002D03AC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1002D0174(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1002D03D8()
{
  sub_1002CFCE0();
  return v0 & 1;
}

uint64_t sub_1002D03FC()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for LocationNoAqiConfiguration._Storage(v0);
  sub_100127A9C();
  sub_1002CFCE0();
  return v1 & 1;
}

void sub_1002D042C()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100E6AF30);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_1002EC118();
  sub_100163110();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  }
  else
  {
    type metadata accessor for LocationNoAqiConfiguration._Storage(0);
    sub_100127D40(&qword_100E6AF40, 255, (void (*)(uint64_t))type metadata accessor for LocationNoAqiConfiguration._Storage);
    sub_10017F988();
    uint64_t v3 = sub_100179EBC();
    v4(v3);
    sub_1001D1374();
  }
  sub_100184924();
  sub_100182EF8();
}

uint64_t sub_1002D053C(uint64_t a1)
{
  unint64_t v2 = sub_1002EC118();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D0578(uint64_t a1)
{
  unint64_t v2 = sub_1002EC118();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002D05B4(void *a1@<X8>)
{
  sub_1002D042C();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1002D05E0()
{
  return sub_1002D03FC();
}

uint64_t sub_1002D05EC(uint64_t a1)
{
  return sub_1002CACBC(a1);
}

uint64_t sub_1002D0600(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6D6D6F63 && a2 == 0xE600000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 7364973 && a2 == 0xE300000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x697472417377656ELL && a2 == 0xEB00000000656C63)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1002D0750(char a1)
{
  if (!a1) {
    return 0x6E6F6D6D6F63;
  }
  if (a1 == 1) {
    return 7364973;
  }
  return 0x697472417377656ELL;
}

uint64_t sub_1002D07A4()
{
  return sub_1002D0750(*v0);
}

uint64_t sub_1002D07AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002D0600(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002D07D4(uint64_t a1)
{
  unint64_t v2 = sub_1002E86D4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D0810(uint64_t a1)
{
  unint64_t v2 = sub_1002E86D4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002D084C()
{
  swift_release();
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather30LocationNoAqiNewsConfiguration8_Storage_map, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100163134(OBJC_IVAR____TtCV7Weather30LocationNoAqiNewsConfiguration8_Storage_newsArticle);
  return v0;
}

uint64_t sub_1002D08A8()
{
  return sub_100117910((void (*)(void))sub_1002D084C);
}

uint64_t sub_1002D08C0()
{
  return type metadata accessor for LocationNoAqiNewsConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationNoAqiNewsConfiguration._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E68700);
}

uint64_t sub_1002D08E8(uint64_t a1)
{
  return sub_1002C96F8(a1, (void (*)(uint64_t))sub_1002D0914);
}

void sub_1002D0914()
{
  sub_10016314C();
  unint64_t v2 = v1;
  sub_10017C924();
  type metadata accessor for LocationViewComponent();
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100181E70();
  __chkstk_darwin(v4);
  sub_100182F0C();
  sub_10017DF08(&qword_100E6A908);
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_10018C3D8(v2, v2[3]);
  sub_1002E86D4();
  sub_1002EE44C();
  sub_1002EEF60();
  if (v0)
  {
    sub_1001A1CE0();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1002EED98();
    sub_10019B838();
    sub_100166B08();
    sub_100127D40((unint64_t *)&qword_100E6A860, 255, (void (*)(uint64_t))type metadata accessor for LocationViewComponent);
    sub_1001D1540();
    sub_10016EAB0();
    sub_1001CA7C0();
    uint64_t v6 = sub_10019DE04();
    v7(v6);
    sub_10016EAB0();
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v2);
  sub_1002EE960();
  sub_100163164();
}

uint64_t sub_1002D0B78@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1002D08E8(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1002D0BA4()
{
  sub_1002D1ECC();
  return v0 & 1;
}

uint64_t sub_1002D0BD8()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for LocationNoAqiNewsConfiguration._Storage(v0);
  sub_1002EEF48();
  return v1 & 1;
}

void sub_1002D0C14()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100E6AF48);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_1002EC164();
  sub_100163110();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  }
  else
  {
    type metadata accessor for LocationNoAqiNewsConfiguration._Storage(0);
    sub_100127D40(&qword_100E6AF58, 255, (void (*)(uint64_t))type metadata accessor for LocationNoAqiNewsConfiguration._Storage);
    sub_10017F988();
    uint64_t v3 = sub_100179EBC();
    v4(v3);
    sub_1001D1374();
  }
  sub_100184924();
  sub_100182EF8();
}

uint64_t sub_1002D0D24(uint64_t a1)
{
  unint64_t v2 = sub_1002EC164();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D0D60(uint64_t a1)
{
  unint64_t v2 = sub_1002EC164();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002D0D9C(void *a1@<X8>)
{
  sub_1002D0C14();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1002D0DC8()
{
  return sub_1002D0BD8();
}

uint64_t sub_1002D0DD4(uint64_t a1)
{
  return sub_1002CACBC(a1);
}

uint64_t sub_1002D0DE8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6D6D6F63 && a2 == 0xE600000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 7364973 && a2 == 0xE300000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000015 && a2 == 0x8000000100C95D30)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v7) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1002D0F20(char a1)
{
  if (!a1) {
    return 0x6E6F6D6D6F63;
  }
  if (a1 == 1) {
    return 7364973;
  }
  return 0xD000000000000015;
}

uint64_t sub_1002D0F70()
{
  return sub_1002D0F20(*v0);
}

uint64_t sub_1002D0F78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002D0DE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002D0FA0(uint64_t a1)
{
  unint64_t v2 = sub_1002E8688();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D0FDC(uint64_t a1)
{
  unint64_t v2 = sub_1002E8688();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002D1018()
{
  swift_release();
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather29LocationNoAqiNhpConfiguration8_Storage_map, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100163134(OBJC_IVAR____TtCV7Weather29LocationNoAqiNhpConfiguration8_Storage_nextHourPrecipitation);
  return v0;
}

uint64_t sub_1002D1074()
{
  return sub_100117910((void (*)(void))sub_1002D1018);
}

uint64_t sub_1002D108C()
{
  return type metadata accessor for LocationNoAqiNhpConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationNoAqiNhpConfiguration._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E687C8);
}

uint64_t sub_1002D10B4(uint64_t a1)
{
  return sub_1002C96F8(a1, (void (*)(uint64_t))sub_1002D10E0);
}

void sub_1002D10E0()
{
  sub_10016314C();
  unint64_t v2 = v1;
  sub_10017C924();
  type metadata accessor for LocationViewComponent();
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100181E70();
  __chkstk_darwin(v4);
  sub_100182F0C();
  sub_10017DF08(&qword_100E6A8F8);
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_10018C3D8(v2, v2[3]);
  sub_1002E8688();
  sub_1002EE44C();
  sub_1002EEF60();
  if (v0)
  {
    sub_1001A1CE0();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1002EED98();
    sub_10019B838();
    sub_100166B08();
    sub_100127D40((unint64_t *)&qword_100E6A860, 255, (void (*)(uint64_t))type metadata accessor for LocationViewComponent);
    sub_1001D1540();
    sub_10016EAB0();
    sub_1001CA7C0();
    uint64_t v6 = sub_10019DE04();
    v7(v6);
    sub_10016EAB0();
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v2);
  sub_1002EE960();
  sub_100163164();
}

uint64_t sub_1002D1344@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1002D10B4(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1002D1370()
{
  sub_1002D1ECC();
  return v0 & 1;
}

uint64_t sub_1002D13A4()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for LocationNoAqiNhpConfiguration._Storage(v0);
  sub_1002EEF48();
  return v1 & 1;
}

void sub_1002D13E0()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100E6AF60);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_1002EC1B0();
  sub_100163110();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  }
  else
  {
    type metadata accessor for LocationNoAqiNhpConfiguration._Storage(0);
    sub_100127D40(&qword_100E6AF70, 255, (void (*)(uint64_t))type metadata accessor for LocationNoAqiNhpConfiguration._Storage);
    sub_10017F988();
    uint64_t v3 = sub_100179EBC();
    v4(v3);
    sub_1001D1374();
  }
  sub_100184924();
  sub_100182EF8();
}

uint64_t sub_1002D14F0(uint64_t a1)
{
  unint64_t v2 = sub_1002EC1B0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D152C(uint64_t a1)
{
  unint64_t v2 = sub_1002EC1B0();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002D1568(void *a1@<X8>)
{
  sub_1002D13E0();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1002D1594()
{
  return sub_1002D13A4();
}

uint64_t sub_1002D15A0()
{
  return sub_1002CA39C();
}

uint64_t sub_1002D15BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6D6D6F63 && a2 == 0xE600000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 7364973 && a2 == 0xE300000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000015 && a2 == 0x8000000100C95D30 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0x697472417377656ELL && a2 == 0xEB00000000656C63)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8) {
        return 3;
      }
      else {
        return 4;
      }
    }
  }
}

unint64_t sub_1002D1768(char a1)
{
  unint64_t result = 0x6E6F6D6D6F63;
  switch(a1)
  {
    case 1:
      unint64_t result = 7364973;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0x697472417377656ELL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1002D17FC()
{
  return sub_1002D1768(*v0);
}

uint64_t sub_1002D1804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002D15BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002D182C(uint64_t a1)
{
  unint64_t v2 = sub_1002E863C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D1868(uint64_t a1)
{
  unint64_t v2 = sub_1002E863C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002D18A4()
{
  swift_release();
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather33LocationNoAqiNhpNewsConfiguration8_Storage_map, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100163134(OBJC_IVAR____TtCV7Weather33LocationNoAqiNhpNewsConfiguration8_Storage_nextHourPrecipitation);
  sub_100163134(OBJC_IVAR____TtCV7Weather33LocationNoAqiNhpNewsConfiguration8_Storage_newsArticle);
  return v0;
}

uint64_t sub_1002D190C()
{
  return sub_100117910((void (*)(void))sub_1002D18A4);
}

uint64_t sub_1002D1924()
{
  return type metadata accessor for LocationNoAqiNhpNewsConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationNoAqiNhpNewsConfiguration._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E68890);
}

uint64_t sub_1002D194C(uint64_t a1)
{
  return sub_1002C96F8(a1, (void (*)(uint64_t))sub_1002D1978);
}

void sub_1002D1978()
{
  sub_10016314C();
  unint64_t v2 = v1;
  sub_10017C924();
  type metadata accessor for LocationViewComponent();
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100162824();
  __chkstk_darwin(v4);
  sub_100181E70();
  __chkstk_darwin(v5);
  sub_100188F80();
  sub_10017DF08(&qword_100E6A8E8);
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_10018C3D8(v2, v2[3]);
  sub_1002E863C();
  sub_100164F4C();
  sub_1001092A8();
  if (v0)
  {
    sub_1001A1CE0();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_100163E3C();
    sub_1001D0E10();
    sub_100166B08();
    uint64_t v7 = sub_100127D40((unint64_t *)&qword_100E6A860, 255, (void (*)(uint64_t))type metadata accessor for LocationViewComponent);
    sub_10019FBA0(v7);
    sub_10016EAB0();
    sub_1001838A0();
    sub_10016EAB0();
    sub_10019D430();
    uint64_t v8 = sub_10019E7C0();
    v9(v8);
    sub_10016EAB0();
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v2);
  sub_10018B2CC();
  sub_100163164();
}

uint64_t sub_1002D1C4C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1002D194C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1002D1C78()
{
  sub_1002CA41C();
  return v0 & 1;
}

uint64_t sub_1002D1CB4()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for LocationNoAqiNhpNewsConfiguration._Storage(v0);
  sub_100214EAC();
  return v1 & 1;
}

void sub_1002D1CF8()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100E6AF78);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_1002EC1FC();
  sub_100163110();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  }
  else
  {
    type metadata accessor for LocationNoAqiNhpNewsConfiguration._Storage(0);
    sub_100127D40(&qword_100E6AF88, 255, (void (*)(uint64_t))type metadata accessor for LocationNoAqiNhpNewsConfiguration._Storage);
    sub_10017F988();
    uint64_t v3 = sub_100179EBC();
    v4(v3);
    sub_1001D1374();
  }
  sub_100184924();
  sub_100182EF8();
}

uint64_t sub_1002D1E08(uint64_t a1)
{
  unint64_t v2 = sub_1002EC1FC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D1E44(uint64_t a1)
{
  unint64_t v2 = sub_1002EC1FC();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002D1E80(void *a1@<X8>)
{
  sub_1002D1CF8();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1002D1EAC()
{
  return sub_1002D1CB4();
}

uint64_t sub_1002D1EB8(uint64_t a1)
{
  return sub_1002CACBC(a1);
}

void sub_1002D1ECC()
{
  sub_100162EA0();
  uint64_t v1 = type metadata accessor for LocationViewComponent();
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_100162758();
  __chkstk_darwin(v3);
  sub_1001EC3C8();
  type metadata accessor for LocationCommonConfigurationComponents._Storage(0);
  swift_retain();
  swift_retain();
  sub_1001195A8();
  char v4 = sub_1002C7204();
  swift_release();
  swift_release();
  if (v4)
  {
    sub_10011818C();
    sub_1002EF318();
    char v5 = sub_1002EE908();
    sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationViewComponent);
    sub_1002EE770();
    if (v5)
    {
      sub_10011818C();
      sub_1002EF2D4();
      sub_1002EE908();
      sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationViewComponent);
      sub_10011917C();
    }
  }
  sub_100119448();
  sub_100162694();
}

uint64_t sub_1002D2054(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6D6D6F63 && a2 == 0xE600000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 7364973 && a2 == 0xE300000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x6C41657265766573 && a2 == 0xEB00000000747265)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_1002D21A4(char a1)
{
  if (!a1) {
    return 0x6E6F6D6D6F63;
  }
  if (a1 == 1) {
    return 7364973;
  }
  return 0x6C41657265766573;
}

uint64_t sub_1002D21F8()
{
  return sub_1002D21A4(*v0);
}

uint64_t sub_1002D2200@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002D2054(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002D2228(uint64_t a1)
{
  unint64_t v2 = sub_1002E85F0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D2264(uint64_t a1)
{
  unint64_t v2 = sub_1002E85F0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002D22A0()
{
  swift_release();
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather32LocationNoAqiSevereConfiguration8_Storage_map, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100163134(OBJC_IVAR____TtCV7Weather32LocationNoAqiSevereConfiguration8_Storage_severeAlert);
  return v0;
}

uint64_t sub_1002D22FC()
{
  return sub_100117910((void (*)(void))sub_1002D22A0);
}

uint64_t sub_1002D2314()
{
  return type metadata accessor for LocationNoAqiSevereConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationNoAqiSevereConfiguration._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E68960);
}

uint64_t sub_1002D233C()
{
  uint64_t result = type metadata accessor for LocationViewComponent();
  if (v1 <= 0x3F)
  {
    sub_1001A6874(result);
    uint64_t v2 = sub_1002EF294();
    return sub_1002EEC30(v2);
  }
  return result;
}

uint64_t sub_1002D23A4(uint64_t a1)
{
  return sub_1002C96F8(a1, (void (*)(uint64_t))sub_1002D23D0);
}

void sub_1002D23D0()
{
  sub_10016314C();
  uint64_t v2 = v1;
  sub_10017C924();
  type metadata accessor for LocationViewComponent();
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100181E70();
  __chkstk_darwin(v4);
  sub_100182F0C();
  sub_10017DF08(&qword_100E6A8D8);
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_10018C3D8(v2, v2[3]);
  sub_1002E85F0();
  sub_1002EE44C();
  sub_1002EEF60();
  if (v0)
  {
    sub_1001A1CE0();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1002EED98();
    sub_10019B838();
    sub_100166B08();
    sub_100127D40((unint64_t *)&qword_100E6A860, 255, (void (*)(uint64_t))type metadata accessor for LocationViewComponent);
    sub_1001D1540();
    sub_10016EAB0();
    sub_1001CA7C0();
    uint64_t v6 = sub_10019DE04();
    v7(v6);
    sub_10016EAB0();
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v2);
  sub_1002EE960();
  sub_100163164();
}

uint64_t sub_1002D2634@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1002D23A4(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1002D2660()
{
  sub_1002D1ECC();
  return v0 & 1;
}

uint64_t sub_1002D2694()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for LocationNoAqiSevereConfiguration._Storage(v0);
  sub_1002EEF48();
  return v1 & 1;
}

void sub_1002D26D0()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100E6AF90);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_1002EC248();
  sub_100163110();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  }
  else
  {
    type metadata accessor for LocationNoAqiSevereConfiguration._Storage(0);
    sub_100127D40(&qword_100E6AFA0, 255, (void (*)(uint64_t))type metadata accessor for LocationNoAqiSevereConfiguration._Storage);
    sub_10017F988();
    uint64_t v3 = sub_100179EBC();
    v4(v3);
    sub_1001D1374();
  }
  sub_100184924();
  sub_100182EF8();
}

uint64_t sub_1002D27E0(uint64_t a1)
{
  unint64_t v2 = sub_1002EC248();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D281C(uint64_t a1)
{
  unint64_t v2 = sub_1002EC248();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002D2858(void *a1@<X8>)
{
  sub_1002D26D0();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1002D2884()
{
  return sub_1002D2694();
}

uint64_t sub_1002D2890()
{
  return sub_1002CA39C();
}

uint64_t sub_1002D28AC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6D6D6F63 && a2 == 0xE600000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 7364973 && a2 == 0xE300000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6C41657265766573 && a2 == 0xEB00000000747265;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x697472417377656ELL && a2 == 0xEB00000000656C63)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_1002D2A74(char a1)
{
  uint64_t result = 0x6E6F6D6D6F63;
  switch(a1)
  {
    case 1:
      uint64_t result = 7364973;
      break;
    case 2:
      uint64_t result = 0x6C41657265766573;
      break;
    case 3:
      uint64_t result = 0x697472417377656ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1002D2B0C()
{
  return sub_1002D2A74(*v0);
}

uint64_t sub_1002D2B14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002D28AC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002D2B3C(uint64_t a1)
{
  unint64_t v2 = sub_1002E85A4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D2B78(uint64_t a1)
{
  unint64_t v2 = sub_1002E85A4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002D2BB4()
{
  swift_release();
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather36LocationNoAqiSevereNewsConfiguration8_Storage_map, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100163134(OBJC_IVAR____TtCV7Weather36LocationNoAqiSevereNewsConfiguration8_Storage_severeAlert);
  sub_100163134(OBJC_IVAR____TtCV7Weather36LocationNoAqiSevereNewsConfiguration8_Storage_newsArticle);
  return v0;
}

uint64_t sub_1002D2C1C()
{
  return sub_100117910((void (*)(void))sub_1002D2BB4);
}

uint64_t sub_1002D2C34()
{
  return type metadata accessor for LocationNoAqiSevereNewsConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationNoAqiSevereNewsConfiguration._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E68A28);
}

uint64_t sub_1002D2C5C(uint64_t a1)
{
  return sub_1002C96F8(a1, (void (*)(uint64_t))sub_1002D2C88);
}

void sub_1002D2C88()
{
  sub_10016314C();
  unint64_t v2 = v1;
  sub_10017C924();
  type metadata accessor for LocationViewComponent();
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100162824();
  __chkstk_darwin(v4);
  sub_100181E70();
  __chkstk_darwin(v5);
  sub_100188F80();
  sub_10017DF08(&qword_100E6A8C8);
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_10018C3D8(v2, v2[3]);
  sub_1002E85A4();
  sub_100164F4C();
  sub_1001092A8();
  if (v0)
  {
    sub_1001A1CE0();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_100163E3C();
    sub_1001D0E10();
    sub_100166B08();
    uint64_t v7 = sub_100127D40((unint64_t *)&qword_100E6A860, 255, (void (*)(uint64_t))type metadata accessor for LocationViewComponent);
    sub_10019FBA0(v7);
    sub_10016EAB0();
    sub_1001838A0();
    sub_10016EAB0();
    sub_10019D430();
    uint64_t v8 = sub_10019E7C0();
    v9(v8);
    sub_10016EAB0();
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v2);
  sub_10018B2CC();
  sub_100163164();
}

uint64_t sub_1002D2F5C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1002D2C5C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1002D2F88()
{
  sub_1002CA41C();
  return v0 & 1;
}

uint64_t sub_1002D2FC4()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for LocationNoAqiSevereNewsConfiguration._Storage(v0);
  sub_100214EAC();
  return v1 & 1;
}

void sub_1002D3008()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100E6AFA8);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_1002EC294();
  sub_100163110();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  }
  else
  {
    type metadata accessor for LocationNoAqiSevereNewsConfiguration._Storage(0);
    sub_100127D40(&qword_100E6AFB8, 255, (void (*)(uint64_t))type metadata accessor for LocationNoAqiSevereNewsConfiguration._Storage);
    sub_10017F988();
    uint64_t v3 = sub_100179EBC();
    v4(v3);
    sub_1001D1374();
  }
  sub_100184924();
  sub_100182EF8();
}

uint64_t sub_1002D3118(uint64_t a1)
{
  unint64_t v2 = sub_1002EC294();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D3154(uint64_t a1)
{
  unint64_t v2 = sub_1002EC294();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002D3190(void *a1@<X8>)
{
  sub_1002D3008();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1002D31BC()
{
  return sub_1002D2FC4();
}

uint64_t sub_1002D31C8()
{
  return sub_1002CA39C();
}

uint64_t sub_1002D31E4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6D6D6F63 && a2 == 0xE600000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 7364973 && a2 == 0xE300000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6C41657265766573 && a2 == 0xEB00000000747265;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000015 && a2 == 0x8000000100C95D30)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v8) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

unint64_t sub_1002D3394(char a1)
{
  unint64_t result = 0x6E6F6D6D6F63;
  switch(a1)
  {
    case 1:
      unint64_t result = 7364973;
      break;
    case 2:
      unint64_t result = 0x6C41657265766573;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1002D3428()
{
  return sub_1002D3394(*v0);
}

uint64_t sub_1002D3430@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002D31E4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002D3458(uint64_t a1)
{
  unint64_t v2 = sub_1002E8558();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D3494(uint64_t a1)
{
  unint64_t v2 = sub_1002E8558();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002D34D0()
{
  swift_release();
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather35LocationNoAqiSevereNhpConfiguration8_Storage_map, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100163134(OBJC_IVAR____TtCV7Weather35LocationNoAqiSevereNhpConfiguration8_Storage_severeAlert);
  sub_100163134(OBJC_IVAR____TtCV7Weather35LocationNoAqiSevereNhpConfiguration8_Storage_nextHourPrecipitation);
  return v0;
}

uint64_t sub_1002D3538()
{
  return sub_100117910((void (*)(void))sub_1002D34D0);
}

uint64_t sub_1002D3550()
{
  return type metadata accessor for LocationNoAqiSevereNhpConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationNoAqiSevereNhpConfiguration._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E68AF8);
}

uint64_t sub_1002D3578(uint64_t a1)
{
  return sub_1002C96F8(a1, (void (*)(uint64_t))sub_1002D35A4);
}

void sub_1002D35A4()
{
  sub_10016314C();
  unint64_t v2 = v1;
  sub_10017C924();
  type metadata accessor for LocationViewComponent();
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100162824();
  __chkstk_darwin(v4);
  sub_100181E70();
  __chkstk_darwin(v5);
  sub_100188F80();
  sub_10017DF08(&qword_100E6A8B8);
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_10018C3D8(v2, v2[3]);
  sub_1002E8558();
  sub_100164F4C();
  sub_1001092A8();
  if (v0)
  {
    sub_1001A1CE0();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_100163E3C();
    sub_1001D0E10();
    sub_100166B08();
    uint64_t v7 = sub_100127D40((unint64_t *)&qword_100E6A860, 255, (void (*)(uint64_t))type metadata accessor for LocationViewComponent);
    sub_10019FBA0(v7);
    sub_10016EAB0();
    sub_1001838A0();
    sub_10016EAB0();
    sub_10019D430();
    uint64_t v8 = sub_10019E7C0();
    v9(v8);
    sub_10016EAB0();
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v2);
  sub_10018B2CC();
  sub_100163164();
}

uint64_t sub_1002D3878@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1002D3578(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1002D38A4()
{
  sub_1002CA41C();
  return v0 & 1;
}

uint64_t sub_1002D38E0()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for LocationNoAqiSevereNhpConfiguration._Storage(v0);
  sub_100214EAC();
  return v1 & 1;
}

void sub_1002D3924()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100E6AFC0);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_1002EC2E0();
  sub_100163110();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  }
  else
  {
    type metadata accessor for LocationNoAqiSevereNhpConfiguration._Storage(0);
    sub_100127D40(&qword_100E6AFD0, 255, (void (*)(uint64_t))type metadata accessor for LocationNoAqiSevereNhpConfiguration._Storage);
    sub_10017F988();
    uint64_t v3 = sub_100179EBC();
    v4(v3);
    sub_1001D1374();
  }
  sub_100184924();
  sub_100182EF8();
}

uint64_t sub_1002D3A34(uint64_t a1)
{
  unint64_t v2 = sub_1002EC2E0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D3A70(uint64_t a1)
{
  unint64_t v2 = sub_1002EC2E0();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002D3AAC(void *a1@<X8>)
{
  sub_1002D3924();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1002D3AD8()
{
  return sub_1002D38E0();
}

void sub_1002D3AE4()
{
}

uint64_t sub_1002D3B28(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6D6D6F63 && a2 == 0xE600000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 7364973 && a2 == 0xE300000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6C41657265766573 && a2 == 0xEB00000000747265;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000015 && a2 == 0x8000000100C95D30 {
             || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      }
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0x697472417377656ELL && a2 == 0xEB00000000656C63)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v9) {
          return 4;
        }
        else {
          return 5;
        }
      }
    }
  }
}

unint64_t sub_1002D3D4C(char a1)
{
  unint64_t result = 0x6E6F6D6D6F63;
  switch(a1)
  {
    case 1:
      unint64_t result = 7364973;
      break;
    case 2:
      unint64_t result = 0x6C41657265766573;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
      unint64_t result = 0x697472417377656ELL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1002D3E04()
{
  return sub_1002D3D4C(*v0);
}

uint64_t sub_1002D3E0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002D3B28(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002D3E34(uint64_t a1)
{
  unint64_t v2 = sub_1002E850C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D3E70(uint64_t a1)
{
  unint64_t v2 = sub_1002E850C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002D3EAC()
{
  swift_release();
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather39LocationNoAqiSevereNhpNewsConfiguration8_Storage_map, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100163134(OBJC_IVAR____TtCV7Weather39LocationNoAqiSevereNhpNewsConfiguration8_Storage_severeAlert);
  sub_100163134(OBJC_IVAR____TtCV7Weather39LocationNoAqiSevereNhpNewsConfiguration8_Storage_nextHourPrecipitation);
  sub_100163134(OBJC_IVAR____TtCV7Weather39LocationNoAqiSevereNhpNewsConfiguration8_Storage_newsArticle);
  return v0;
}

uint64_t sub_1002D3F20()
{
  return sub_100117910((void (*)(void))sub_1002D3EAC);
}

uint64_t sub_1002D3F38()
{
  return type metadata accessor for LocationNoAqiSevereNhpNewsConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationNoAqiSevereNhpNewsConfiguration._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E68BC8);
}

uint64_t sub_1002D3F60(uint64_t a1)
{
  return sub_1002C96F8(a1, (void (*)(uint64_t))sub_1002D3F8C);
}

void sub_1002D3F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_10016314C();
  BOOL v13 = v12;
  sub_10017C924();
  type metadata accessor for LocationViewComponent();
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_10017EFE0(v15, v24);
  __chkstk_darwin(v16);
  sub_1001190EC();
  __chkstk_darwin(v17);
  sub_100119488();
  __chkstk_darwin(v18);
  sub_1001EC3C8();
  sub_10017DF08(&qword_100E6A8A8);
  sub_100179C0C();
  __chkstk_darwin(v19);
  uint64_t v20 = v13[3];
  sub_10018C3D8(v13, v20);
  sub_1002E850C();
  sub_100178FDC();
  sub_10011B0DC();
  if (v11)
  {
    sub_10018AFD8();
    swift_deallocPartialClassInstance();
    uint64_t v23 = (uint64_t)v13;
  }
  else
  {
    sub_1001EA91C();
    sub_1001C866C();
    *(void *)(v20 + 16) = a10;
    sub_10012B92C();
    sub_100127D40((unint64_t *)&qword_100E6A860, 255, (void (*)(uint64_t))type metadata accessor for LocationViewComponent);
    sub_100188948();
    sub_1002EECC8();
    sub_10016EAB0();
    sub_100186848();
    sub_10016EAB0();
    sub_1001A3100();
    sub_10016EAB0();
    sub_1001A3100();
    sub_1002EE494();
    uint64_t v21 = sub_1001A454C();
    v22(v21);
    sub_10016EAB0();
    uint64_t v23 = v10;
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v23);
  sub_1002EE570();
  sub_100163164();
}

uint64_t sub_1002D434C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1002D3F60(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1002D4378()
{
  sub_1002CE7BC();
  return v0 & 1;
}

uint64_t sub_1002D43BC()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for LocationNoAqiSevereNhpNewsConfiguration._Storage(v0);
  sub_1002EEB78();
  return v1 & 1;
}

void sub_1002D4408()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100E6AFD8);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_1002EC32C();
  sub_100163110();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  }
  else
  {
    type metadata accessor for LocationNoAqiSevereNhpNewsConfiguration._Storage(0);
    sub_100127D40(&qword_100E6AFE8, 255, (void (*)(uint64_t))type metadata accessor for LocationNoAqiSevereNhpNewsConfiguration._Storage);
    sub_10017F988();
    uint64_t v3 = sub_100179EBC();
    v4(v3);
    sub_1001D1374();
  }
  sub_100184924();
  sub_100182EF8();
}

uint64_t sub_1002D4518(uint64_t a1)
{
  unint64_t v2 = sub_1002EC32C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D4554(uint64_t a1)
{
  unint64_t v2 = sub_1002EC32C();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002D4590(void *a1@<X8>)
{
  sub_1002D4408();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1002D45BC()
{
  return sub_1002D43BC();
}

uint64_t sub_1002D45C8()
{
  return sub_1002CA39C();
}

uint64_t sub_1002D45E4()
{
  sub_1002EE6D4();
  BOOL v2 = v2 && v1 == 0xE600000000000000;
  if (v2 || (v3 = v1, char v4 = v0, (sub_100188D20() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    sub_1002EEB08();
    BOOL v6 = v2 && v3 == 0xE300000000000000;
    if (v6 || (sub_100188D20() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      sub_1002EEAB4();
      BOOL v8 = v2 && v3 == v7;
      if (v8 || (sub_100188D20() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        sub_10018B458();
        if (v2 && v3 == v9)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          sub_100188D20();
          sub_100182F1C();
          if (v4) {
            return 3;
          }
          else {
            return 4;
          }
        }
      }
    }
  }
}

uint64_t sub_1002D4720(char a1)
{
  uint64_t result = 0x6E6F6D6D6F63;
  switch(a1)
  {
    case 1:
      uint64_t result = 7364973;
      break;
    case 2:
      uint64_t result = 0x6C41657265766573;
      break;
    case 3:
      uint64_t result = 0x696C617551726961;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1002D47B4()
{
  return sub_1002D4720(*v0);
}

uint64_t sub_1002D47BC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1002D45E4();
  *a1 = result;
  return result;
}

uint64_t sub_1002D47E4(uint64_t a1)
{
  unint64_t v2 = sub_1002E84C0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D4820(uint64_t a1)
{
  unint64_t v2 = sub_1002E84C0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002D485C()
{
  swift_release();
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather27LocationSevereConfiguration8_Storage_map, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100163134(OBJC_IVAR____TtCV7Weather27LocationSevereConfiguration8_Storage_severeAlert);
  sub_100163134(OBJC_IVAR____TtCV7Weather27LocationSevereConfiguration8_Storage_airQuality);
  return v0;
}

uint64_t sub_1002D48C4()
{
  return sub_100117910((void (*)(void))sub_1002D485C);
}

uint64_t sub_1002D48DC()
{
  return type metadata accessor for LocationSevereConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationSevereConfiguration._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E68CA0);
}

uint64_t sub_1002D4904()
{
  uint64_t result = type metadata accessor for LocationViewComponent();
  if (v1 <= 0x3F)
  {
    sub_1001A6874(result);
    uint64_t v2 = sub_1002EF42C();
    return sub_1002EEC30(v2);
  }
  return result;
}

uint64_t sub_1002D4970(uint64_t a1)
{
  return sub_1002C96F8(a1, (void (*)(uint64_t))sub_1002D499C);
}

void sub_1002D499C()
{
  sub_10016314C();
  uint64_t v2 = v1;
  sub_10017C924();
  type metadata accessor for LocationViewComponent();
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100162824();
  __chkstk_darwin(v4);
  sub_100181E70();
  __chkstk_darwin(v5);
  sub_100188F80();
  sub_10017DF08(&qword_100E6A898);
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_10018C3D8(v2, v2[3]);
  sub_1002E84C0();
  sub_100164F4C();
  sub_1001092A8();
  if (v0)
  {
    sub_1001A1CE0();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_100163E3C();
    sub_1001D0E10();
    sub_100166B08();
    uint64_t v7 = sub_100127D40((unint64_t *)&qword_100E6A860, 255, (void (*)(uint64_t))type metadata accessor for LocationViewComponent);
    sub_10019FBA0(v7);
    sub_10016EAB0();
    sub_1001838A0();
    sub_10016EAB0();
    sub_10019D430();
    uint64_t v8 = sub_10019E7C0();
    v9(v8);
    sub_10016EAB0();
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v2);
  sub_10018B2CC();
  sub_100163164();
}

uint64_t sub_1002D4C70@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1002D4970(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1002D4C9C()
{
  sub_1002CA41C();
  return v0 & 1;
}

uint64_t sub_1002D4CD8()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for LocationSevereConfiguration._Storage(v0);
  sub_100214EAC();
  return v1 & 1;
}

void sub_1002D4D1C()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100E6AFF0);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_1002EC378();
  sub_100163110();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  }
  else
  {
    type metadata accessor for LocationSevereConfiguration._Storage(0);
    sub_100127D40(&qword_100E6B000, 255, (void (*)(uint64_t))type metadata accessor for LocationSevereConfiguration._Storage);
    sub_10017F988();
    uint64_t v3 = sub_100179EBC();
    v4(v3);
    sub_1001D1374();
  }
  sub_100184924();
  sub_100182EF8();
}

uint64_t sub_1002D4E2C(uint64_t a1)
{
  unint64_t v2 = sub_1002EC378();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D4E68(uint64_t a1)
{
  unint64_t v2 = sub_1002EC378();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002D4EA4(void *a1@<X8>)
{
  sub_1002D4D1C();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1002D4ED0()
{
  return sub_1002D4CD8();
}

void sub_1002D4EDC()
{
}

uint64_t sub_1002D4F20(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6D6D6F63 && a2 == 0xE600000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 7364973 && a2 == 0xE300000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6C41657265766573 && a2 == 0xEB00000000747265;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        BOOL v8 = a1 == 0x697472417377656ELL && a2 == 0xEB00000000656C63;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else if (a1 == 0x696C617551726961 && a2 == 0xEA00000000007974)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v10) {
            return 4;
          }
          else {
            return 5;
          }
        }
      }
    }
  }
}

uint64_t sub_1002D5154(char a1)
{
  uint64_t result = 0x6E6F6D6D6F63;
  switch(a1)
  {
    case 1:
      uint64_t result = 7364973;
      break;
    case 2:
      uint64_t result = 0x6C41657265766573;
      break;
    case 3:
      uint64_t result = 0x697472417377656ELL;
      break;
    case 4:
      uint64_t result = 0x696C617551726961;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1002D520C()
{
  return sub_1002D5154(*v0);
}

uint64_t sub_1002D5214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002D4F20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002D523C(uint64_t a1)
{
  unint64_t v2 = sub_1002E8474();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D5278(uint64_t a1)
{
  unint64_t v2 = sub_1002E8474();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002D52B4()
{
  swift_release();
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather31LocationSevereNewsConfiguration8_Storage_map, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100163134(OBJC_IVAR____TtCV7Weather31LocationSevereNewsConfiguration8_Storage_severeAlert);
  sub_100163134(OBJC_IVAR____TtCV7Weather31LocationSevereNewsConfiguration8_Storage_newsArticle);
  sub_100163134(OBJC_IVAR____TtCV7Weather31LocationSevereNewsConfiguration8_Storage_airQuality);
  return v0;
}

uint64_t sub_1002D5328()
{
  return sub_100117910((void (*)(void))sub_1002D52B4);
}

uint64_t sub_1002D5340()
{
  return type metadata accessor for LocationSevereNewsConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationSevereNewsConfiguration._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E68D70);
}

uint64_t sub_1002D5368(uint64_t a1)
{
  return sub_1002C96F8(a1, (void (*)(uint64_t))sub_1002D5394);
}

void sub_1002D5394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_10016314C();
  BOOL v13 = v12;
  sub_10017C924();
  type metadata accessor for LocationViewComponent();
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_10017EFE0(v15, v24);
  __chkstk_darwin(v16);
  sub_1001190EC();
  __chkstk_darwin(v17);
  sub_100119488();
  __chkstk_darwin(v18);
  sub_1001EC3C8();
  sub_10017DF08(&qword_100E6A888);
  sub_100179C0C();
  __chkstk_darwin(v19);
  uint64_t v20 = v13[3];
  sub_10018C3D8(v13, v20);
  sub_1002E8474();
  sub_100178FDC();
  sub_10011B0DC();
  if (v11)
  {
    sub_10018AFD8();
    swift_deallocPartialClassInstance();
    uint64_t v23 = (uint64_t)v13;
  }
  else
  {
    sub_1001EA91C();
    sub_1001C866C();
    *(void *)(v20 + 16) = a10;
    sub_10012B92C();
    sub_100127D40((unint64_t *)&qword_100E6A860, 255, (void (*)(uint64_t))type metadata accessor for LocationViewComponent);
    sub_100188948();
    sub_1002EECC8();
    sub_10016EAB0();
    sub_100186848();
    sub_10016EAB0();
    sub_1001A3100();
    sub_10016EAB0();
    sub_1001A3100();
    sub_1002EE494();
    uint64_t v21 = sub_1001A454C();
    v22(v21);
    sub_10016EAB0();
    uint64_t v23 = v10;
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v23);
  sub_1002EE570();
  sub_100163164();
}

uint64_t sub_1002D5754@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1002D5368(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1002D5780()
{
  sub_1002CE7BC();
  return v0 & 1;
}

uint64_t sub_1002D57C4()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for LocationSevereNewsConfiguration._Storage(v0);
  sub_1002EEB78();
  return v1 & 1;
}

void sub_1002D5810()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100E6B008);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_1002EC3C4();
  sub_100163110();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  }
  else
  {
    type metadata accessor for LocationSevereNewsConfiguration._Storage(0);
    sub_100127D40(&qword_100E6B018, 255, (void (*)(uint64_t))type metadata accessor for LocationSevereNewsConfiguration._Storage);
    sub_10017F988();
    uint64_t v3 = sub_100179EBC();
    v4(v3);
    sub_1001D1374();
  }
  sub_100184924();
  sub_100182EF8();
}

uint64_t sub_1002D5920(uint64_t a1)
{
  unint64_t v2 = sub_1002EC3C4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D595C(uint64_t a1)
{
  unint64_t v2 = sub_1002EC3C4();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002D5998(void *a1@<X8>)
{
  sub_1002D5810();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1002D59C4()
{
  return sub_1002D57C4();
}

void sub_1002D59D0()
{
}

uint64_t sub_1002D5A14(uint64_t a1)
{
  unint64_t v2 = sub_1002E8428();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D5A50(uint64_t a1)
{
  unint64_t v2 = sub_1002E8428();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002D5A8C()
{
  swift_release();
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather33LocationSevereNhpAqiConfiguration8_Storage_map, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100163134(OBJC_IVAR____TtCV7Weather33LocationSevereNhpAqiConfiguration8_Storage_severeAlert);
  sub_100163134(OBJC_IVAR____TtCV7Weather33LocationSevereNhpAqiConfiguration8_Storage_nextHourPrecipitation);
  sub_100163134(OBJC_IVAR____TtCV7Weather33LocationSevereNhpAqiConfiguration8_Storage_airQuality);
  return v0;
}

uint64_t sub_1002D5B00()
{
  return sub_100117910((void (*)(void))sub_1002D5A8C);
}

uint64_t sub_1002D5B18()
{
  return type metadata accessor for LocationSevereNhpAqiConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationSevereNhpAqiConfiguration._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E68E48);
}

uint64_t sub_1002D5B40(uint64_t a1)
{
  return sub_1002C96F8(a1, (void (*)(uint64_t))sub_1002D5B6C);
}

void sub_1002D5B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_10016314C();
  BOOL v13 = v12;
  sub_10017C924();
  type metadata accessor for LocationViewComponent();
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_10017EFE0(v15, v24);
  __chkstk_darwin(v16);
  sub_1001190EC();
  __chkstk_darwin(v17);
  sub_100119488();
  __chkstk_darwin(v18);
  sub_1001EC3C8();
  sub_10017DF08(&qword_100E6A878);
  sub_100179C0C();
  __chkstk_darwin(v19);
  uint64_t v20 = v13[3];
  sub_10018C3D8(v13, v20);
  sub_1002E8428();
  sub_100178FDC();
  sub_10011B0DC();
  if (v11)
  {
    sub_10018AFD8();
    swift_deallocPartialClassInstance();
    uint64_t v23 = (uint64_t)v13;
  }
  else
  {
    sub_1001EA91C();
    sub_1001C866C();
    *(void *)(v20 + 16) = a10;
    sub_10012B92C();
    sub_100127D40((unint64_t *)&qword_100E6A860, 255, (void (*)(uint64_t))type metadata accessor for LocationViewComponent);
    sub_100188948();
    sub_1002EECC8();
    sub_10016EAB0();
    sub_100186848();
    sub_10016EAB0();
    sub_1001A3100();
    sub_10016EAB0();
    sub_1001A3100();
    sub_1002EE494();
    uint64_t v21 = sub_1001A454C();
    v22(v21);
    sub_10016EAB0();
    uint64_t v23 = v10;
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v23);
  sub_1002EE570();
  sub_100163164();
}

uint64_t sub_1002D5F2C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1002D5B40(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1002D5F58()
{
  sub_1002CE7BC();
  return v0 & 1;
}

uint64_t sub_1002D5F9C()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for LocationSevereNhpAqiConfiguration._Storage(v0);
  sub_1002EEB78();
  return v1 & 1;
}

void sub_1002D5FE8()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100E6B020);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_1002EC410();
  sub_100163110();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  }
  else
  {
    type metadata accessor for LocationSevereNhpAqiConfiguration._Storage(0);
    sub_100127D40(&qword_100E6B030, 255, (void (*)(uint64_t))type metadata accessor for LocationSevereNhpAqiConfiguration._Storage);
    sub_10017F988();
    uint64_t v3 = sub_100179EBC();
    v4(v3);
    sub_1001D1374();
  }
  sub_100184924();
  sub_100182EF8();
}

uint64_t sub_1002D60F8(uint64_t a1)
{
  unint64_t v2 = sub_1002EC410();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D6134(uint64_t a1)
{
  unint64_t v2 = sub_1002EC410();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002D6170(void *a1@<X8>)
{
  sub_1002D5FE8();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1002D619C()
{
  return sub_1002D5F9C();
}

void sub_1002D61A8()
{
}

uint64_t sub_1002D61EC()
{
  sub_1002EE6D4();
  BOOL v2 = v2 && v1 == 0xE600000000000000;
  if (v2 || (v3 = v1, uint64_t v4 = v0, (sub_100188D20() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    sub_1002EEB08();
    BOOL v6 = v2 && v3 == 0xE300000000000000;
    if (v6 || (sub_100188D20() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      sub_1002EEAB4();
      BOOL v8 = v2 && v3 == v7;
      if (v8 || (sub_100188D20() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (v4 == 0xD000000000000015 && v3 == 0x8000000100C95D30 || (sub_100188D20() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        sub_10018B458();
        if (v2 && v3 == v9)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          sub_100188D20();
          sub_100182F1C();
          if (v4) {
            return 4;
          }
          else {
            return 5;
          }
        }
      }
    }
  }
}

unint64_t sub_1002D6378(char a1)
{
  unint64_t result = 0x6E6F6D6D6F63;
  switch(a1)
  {
    case 1:
      unint64_t result = 7364973;
      break;
    case 2:
      unint64_t result = 0x6C41657265766573;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
      unint64_t result = 0x696C617551726961;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1002D642C()
{
  return sub_1002D6378(*v0);
}

uint64_t sub_1002D6434@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1002D61EC();
  *a1 = result;
  return result;
}

uint64_t sub_1002D645C(uint64_t a1)
{
  unint64_t v2 = sub_1002E83DC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D6498(uint64_t a1)
{
  unint64_t v2 = sub_1002E83DC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002D64D4()
{
  swift_release();
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather30LocationSevereNhpConfiguration8_Storage_map, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100163134(OBJC_IVAR____TtCV7Weather30LocationSevereNhpConfiguration8_Storage_severeAlert);
  sub_100163134(OBJC_IVAR____TtCV7Weather30LocationSevereNhpConfiguration8_Storage_nextHourPrecipitation);
  sub_100163134(OBJC_IVAR____TtCV7Weather30LocationSevereNhpConfiguration8_Storage_airQuality);
  return v0;
}

uint64_t sub_1002D6548()
{
  return sub_100117910((void (*)(void))sub_1002D64D4);
}

uint64_t sub_1002D6560()
{
  return type metadata accessor for LocationSevereNhpConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationSevereNhpConfiguration._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E68F20);
}

uint64_t sub_1002D6588()
{
  uint64_t result = type metadata accessor for LocationViewComponent();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = sub_1002EF2B4();
    return sub_1002EEC30(v2);
  }
  return result;
}

uint64_t sub_1002D6618(uint64_t a1)
{
  return sub_1002C96F8(a1, (void (*)(uint64_t))sub_1002D6644);
}

void sub_1002D6644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_10016314C();
  BOOL v13 = v12;
  sub_10017C924();
  type metadata accessor for LocationViewComponent();
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_10017EFE0(v15, v24);
  __chkstk_darwin(v16);
  sub_1001190EC();
  __chkstk_darwin(v17);
  sub_100119488();
  __chkstk_darwin(v18);
  sub_1001EC3C8();
  sub_10017DF08(&qword_100E6A868);
  sub_100179C0C();
  __chkstk_darwin(v19);
  uint64_t v20 = v13[3];
  sub_10018C3D8(v13, v20);
  sub_1002E83DC();
  sub_100178FDC();
  sub_10011B0DC();
  if (v11)
  {
    sub_10018AFD8();
    swift_deallocPartialClassInstance();
    uint64_t v23 = (uint64_t)v13;
  }
  else
  {
    sub_1001EA91C();
    sub_1001C866C();
    *(void *)(v20 + 16) = a10;
    sub_10012B92C();
    sub_100127D40((unint64_t *)&qword_100E6A860, 255, (void (*)(uint64_t))type metadata accessor for LocationViewComponent);
    sub_100188948();
    sub_1002EECC8();
    sub_10016EAB0();
    sub_100186848();
    sub_10016EAB0();
    sub_1001A3100();
    sub_10016EAB0();
    sub_1001A3100();
    sub_1002EE494();
    uint64_t v21 = sub_1001A454C();
    v22(v21);
    sub_10016EAB0();
    uint64_t v23 = v10;
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v23);
  sub_1002EE570();
  sub_100163164();
}

uint64_t sub_1002D6A04@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1002D6618(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1002D6A30()
{
  sub_1002CE7BC();
  return v0 & 1;
}

uint64_t sub_1002D6A74()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for LocationSevereNhpConfiguration._Storage(v0);
  sub_1002EEB78();
  return v1 & 1;
}

void sub_1002D6AC0()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100E6B038);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_1002EC45C();
  sub_100163110();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  }
  else
  {
    type metadata accessor for LocationSevereNhpConfiguration._Storage(0);
    sub_100127D40(&qword_100E6B048, 255, (void (*)(uint64_t))type metadata accessor for LocationSevereNhpConfiguration._Storage);
    sub_10017F988();
    uint64_t v3 = sub_100179EBC();
    v4(v3);
    sub_1001D1374();
  }
  sub_100184924();
  sub_100182EF8();
}

uint64_t sub_1002D6BD0(uint64_t a1)
{
  unint64_t v2 = sub_1002EC45C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D6C0C(uint64_t a1)
{
  unint64_t v2 = sub_1002EC45C();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002D6C48(void *a1@<X8>)
{
  sub_1002D6AC0();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1002D6C74()
{
  return sub_1002D6A74();
}

uint64_t sub_1002D6C80()
{
  sub_1002EF304();
  *(void *)(v0 + 16) = v1;
  sub_10016EAB0();
  sub_10016EAB0();
  sub_1002EF0AC();
  sub_10016EAB0();
  sub_10016EAB0();
  return v0;
}

void sub_1002D6D3C()
{
  sub_10010977C();
  uint64_t v1 = sub_1002EF15C();
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_10012907C();
  __chkstk_darwin(v3);
  type metadata accessor for LocationCommonConfigurationComponents._Storage(0);
  swift_retain();
  swift_retain();
  char v4 = sub_1002C7204();
  swift_release();
  swift_release();
  if (v4)
  {
    sub_10011818C();
    sub_1001843C0();
    char v5 = sub_1001CB718();
    sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationViewComponent);
    sub_100109388();
    if (v5)
    {
      sub_10011818C();
      sub_1001843C0();
      char v6 = sub_1001CB718();
      sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationViewComponent);
      sub_100109388();
      if (v6)
      {
        sub_10011818C();
        sub_1001843C0();
        char v7 = sub_1001CB718();
        sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationViewComponent);
        sub_100109388();
        if (v7)
        {
          sub_10011818C();
          sub_1001843C0();
          char v8 = sub_1001CB718();
          sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationViewComponent);
          sub_100109388();
          if (v8)
          {
            sub_10011818C();
            sub_1002EEC88();
            sub_1001CB718();
            sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationViewComponent);
            sub_1002EEA9C();
          }
        }
      }
    }
  }
  sub_100162714();
}

uint64_t sub_1002D6FF4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F6D6D6F63 && a2 == 0xE600000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 7364973 && a2 == 0xE300000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6C41657265766573 && a2 == 0xEB00000000747265;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000015 && a2 == 0x8000000100C95D30 {
             || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      }
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        BOOL v8 = a1 == 0x697472417377656ELL && a2 == 0xEB00000000656C63;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else if (a1 == 0x696C617551726961 && a2 == 0xEA00000000007974)
        {
          swift_bridgeObjectRelease();
          return 5;
        }
        else
        {
          char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v10) {
            return 5;
          }
          else {
            return 6;
          }
        }
      }
    }
  }
}

unint64_t sub_1002D7284(char a1)
{
  unint64_t result = 0x6E6F6D6D6F63;
  switch(a1)
  {
    case 1:
      unint64_t result = 7364973;
      break;
    case 2:
      unint64_t result = 0x6C41657265766573;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
      unint64_t result = 0x697472417377656ELL;
      break;
    case 5:
      unint64_t result = 0x696C617551726961;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1002D735C()
{
  return sub_1002D7284(*v0);
}

uint64_t sub_1002D7364@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002D6FF4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002D738C(uint64_t a1)
{
  unint64_t v2 = sub_1002E8344();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D73C8(uint64_t a1)
{
  unint64_t v2 = sub_1002E8344();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002D7404()
{
  swift_release();
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_map, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100163134(OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_severeAlert);
  sub_100163134(OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_nextHourPrecipitation);
  sub_100163134(OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_newsArticle);
  sub_100163134(OBJC_IVAR____TtCV7Weather34LocationSevereNhpNewsConfiguration8_Storage_airQuality);
  return v0;
}

uint64_t sub_1002D7484()
{
  return sub_100117910((void (*)(void))sub_1002D7404);
}

uint64_t sub_1002D749C()
{
  return type metadata accessor for LocationSevereNhpNewsConfiguration._Storage(0);
}

uint64_t type metadata accessor for LocationSevereNhpNewsConfiguration._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E68FF8);
}

uint64_t sub_1002D74C4()
{
  uint64_t result = type metadata accessor for LocationViewComponent();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1002D756C(uint64_t a1)
{
  return sub_1002C96F8(a1, (void (*)(uint64_t))sub_1002D7598);
}

void sub_1002D7598()
{
  sub_10016314C();
  char v5 = v4;
  sub_10017C924();
  uint64_t v24 = v0;
  uint64_t v25 = v6;
  v22[8] = type metadata accessor for LocationViewComponent();
  sub_100162E4C();
  __chkstk_darwin(v7);
  v22[5] = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v9);
  sub_100109770();
  v22[6] = v10;
  sub_1001626D4();
  __chkstk_darwin(v11);
  sub_1001190EC();
  __chkstk_darwin(v12);
  sub_1000B692C();
  __chkstk_darwin(v13);
  sub_100188F80();
  v22[9] = sub_10017DF08(&qword_100E6A848);
  sub_100179C0C();
  v22[7] = v14;
  __chkstk_darwin(v15);
  sub_10016279C();
  sub_10017F2E8(v5);
  sub_1002E8344();
  uint64_t v23 = v1;
  uint64_t v16 = v24;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v16)
  {
    sub_1001A1CE0();
    swift_deallocPartialClassInstance();
    uint64_t v21 = (uint64_t)v5;
  }
  else
  {
    v22[3] = v3;
    void v22[4] = v2;
    sub_1002EED98();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_100166B08();
    uint64_t v17 = sub_100127D40((unint64_t *)&qword_100E6A860, 255, (void (*)(uint64_t))type metadata accessor for LocationViewComponent);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_10016EAB0();
    char v29 = 2;
    v22[1] = v17;
    v22[2] = 0;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_10016EAB0();
    char v28 = 3;
    sub_1002EEC3C();
    sub_10016EAB0();
    char v27 = 4;
    sub_1002EEC3C();
    sub_10016EAB0();
    char v26 = 5;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    uint64_t v18 = v24;
    uint64_t v19 = sub_10019E7C0();
    v20(v19);
    sub_10016EAB0();
    uint64_t v21 = v18;
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v21);
  sub_100163164();
}

uint64_t sub_1002D7AB0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1002D756C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1002D7ADC()
{
  sub_1002D6D3C();
  return v0 & 1;
}

uint64_t sub_1002D7B00()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for LocationSevereNhpNewsConfiguration._Storage(v0);
  sub_100127A9C();
  sub_1002D6D3C();
  return v1 & 1;
}

void sub_1002D7B30()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100E6B050);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_1002EC4A8();
  sub_100163110();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  }
  else
  {
    type metadata accessor for LocationSevereNhpNewsConfiguration._Storage(0);
    sub_100127D40(&qword_100E6B060, 255, (void (*)(uint64_t))type metadata accessor for LocationSevereNhpNewsConfiguration._Storage);
    sub_10017F988();
    uint64_t v3 = sub_100179EBC();
    v4(v3);
    sub_1001D1374();
  }
  sub_100184924();
  sub_100182EF8();
}

uint64_t sub_1002D7C40(uint64_t a1)
{
  unint64_t v2 = sub_1002EC4A8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D7C7C(uint64_t a1)
{
  unint64_t v2 = sub_1002EC4A8();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002D7CB8(void *a1@<X8>)
{
  sub_1002D7B30();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1002D7CE4()
{
  return sub_1002D7B00();
}

uint64_t sub_1002D7CF0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x8000000100C98B10
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000100C98350 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000100C98B30 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    BOOL v5 = a1 == 0x72656767697274 && a2 == 0xE700000000000000;
    if (v5 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000100C98B50 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else if (a1 == 0xD000000000000021 && a2 == 0x8000000100C98B70)
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else
    {
      char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v6) {
        return 5;
      }
      else {
        return 6;
      }
    }
  }
}

uint64_t sub_1002D7F44()
{
  return 6;
}

unint64_t sub_1002D7F4C(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0x72656767697274;
      break;
    case 4:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 5:
      unint64_t result = 0xD000000000000021;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1002D8004()
{
  return sub_1002D7F4C(*v0);
}

uint64_t sub_1002D800C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002D7CF0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002D8034@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1002D7F44();
  *a1 = result;
  return result;
}

uint64_t sub_1002D805C(uint64_t a1)
{
  unint64_t v2 = sub_1002E7578();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D8098(uint64_t a1)
{
  unint64_t v2 = sub_1002E7578();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002D80D4()
{
  return type metadata accessor for LocationViewerViewState._Storage(0);
}

void sub_1002D80DC()
{
  sub_10016314C();
  uint64_t v11 = v1;
  sub_100162708();
  type metadata accessor for LocationViewerActiveLocationState();
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_10011C760();
  uint64_t v4 = sub_10017DF08(&qword_100E6A528);
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10018E010(v0);
  sub_1002E7578();
  sub_1002EF21C();
  sub_10011818C();
  sub_100127D40(&qword_100E6A538, 255, (void (*)(uint64_t))type metadata accessor for LocationViewerActiveLocationState);
  uint64_t v10 = v11;
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (v10)
  {
    sub_1001184F4(v2, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
  }
  else
  {
    sub_1001184F4(v2, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
    sub_1002E7494();
    sub_1002EED2C();
    sub_1002E75C4();
    sub_1002EED2C();
    sub_1002E7610();
    sub_1002EED2C();
    KeyedEncodingContainer.encode(_:forKey:)();
    char v13 = *((unsigned char *)v0 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_listToLocationViewTransitionState);
    char v12 = 5;
    sub_1002E765C();
    sub_1002EED2C();
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v4);
  sub_1002EE5D4();
  sub_100163164();
}

uint64_t sub_1002D83BC(uint64_t a1)
{
  return sub_1002C96F8(a1, (void (*)(uint64_t))sub_1002D83E8);
}

void sub_1002D83E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int16 a10, char a11, char a12, char a13, char a14, char a15)
{
  sub_10016314C();
  uint64_t v18 = v17;
  sub_10017C924();
  type metadata accessor for LocationViewerActiveLocationState();
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_100109314();
  sub_10017DF08(&qword_100E6A818);
  sub_100179C0C();
  __chkstk_darwin(v20);
  sub_10008B8C0();
  uint64_t v21 = (void *)sub_1002EF108();
  sub_1001B1E64(v21, v22);
  sub_1002E7578();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v16)
  {
    sub_1001A1CE0();
    sub_100214E34();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_100127D40(&qword_100E6A820, 255, (void (*)(uint64_t))type metadata accessor for LocationViewerActiveLocationState);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_10016EAB0();
    sub_1002E8214();
    sub_100214E70();
    *(unsigned char *)(v15 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_notificationsOptInAlertState) = a15;
    sub_1002E8260();
    sub_100214E70();
    *(unsigned char *)(v15 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_addLocationAlertState) = a13;
    sub_1002E82AC();
    sub_100214E70();
    *(unsigned char *)(v15 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_trigger) = a11;
    *(unsigned char *)(v15 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_reportWeatherDisplayToggle) = KeyedDecodingContainer.decode(_:forKey:)() & 1;
    sub_1002E82F8();
    sub_100214E70();
    sub_10017C938();
    v23();
    *(unsigned char *)(v15 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_listToLocationViewTransitionState) = v24;
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v18);
  sub_1002EE5D4();
  sub_100163164();
}

BOOL sub_1002D8738()
{
  return sub_10011C458();
}

uint64_t sub_1002D875C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1002D83BC(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

void sub_1002D8788()
{
}

void sub_1002D87AC(void *a1@<X8>)
{
  sub_1008925CC();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1002D87D8()
{
  return sub_100892740();
}

BOOL sub_1002D87FC()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for LocationViewerViewState._Storage(v0);
  sub_100127A9C();
  return sub_10011C458();
}

void sub_1002D882C()
{
  sub_10017F304();
  sub_100127B7C();
  sub_10017DF08(&qword_100E6ADB0);
  sub_100179C0C();
  __chkstk_darwin(v0);
  sub_100164F78();
  sub_1002EBCA4();
  sub_100162840();
  type metadata accessor for LocationViewerViewState._Storage(0);
  sub_100127D40(&qword_100E6ADB8, 255, (void (*)(uint64_t))type metadata accessor for LocationViewerViewState._Storage);
  sub_1002EE62C();
  sub_100164F40();
  v1();
  sub_1002EEAFC();
  sub_100182EF8();
}

void sub_1002D8938()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100E6AD98);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_1002EBCA4();
  sub_100163110();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  }
  else
  {
    type metadata accessor for LocationViewerViewState._Storage(0);
    sub_100127D40(&qword_100E6ADA8, 255, (void (*)(uint64_t))type metadata accessor for LocationViewerViewState._Storage);
    sub_10017F988();
    uint64_t v3 = sub_100179EBC();
    v4(v3);
    sub_1001D1374();
  }
  sub_100184924();
  sub_100182EF8();
}

uint64_t sub_1002D8A48(uint64_t a1)
{
  unint64_t v2 = sub_1002EBCA4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D8A84(uint64_t a1)
{
  unint64_t v2 = sub_1002EBCA4();

  return CodingKey.debugDescription.getter(a1, v2);
}

BOOL sub_1002D8AC0()
{
  return sub_1002D87FC();
}

void sub_1002D8ACC(void *a1@<X8>)
{
  sub_1002D8938();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_1002D8AF8()
{
}

void sub_1002D8B14(void *a1@<X8>)
{
  sub_1008928F4();
  if (!v1) {
    *a1 = v3;
  }
}

uint64_t sub_1002D8B40()
{
  return sub_100892924();
}

void sub_1002D8B5C()
{
  sub_100162EA0();
  sub_10017C924();
  uint64_t v7 = type metadata accessor for ModalViewState(0);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_10012B938();
  uint64_t v9 = type metadata accessor for ViewState(0);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_10008B8C0();
  uint64_t v11 = type metadata accessor for TimeState();
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_10016279C();
  uint64_t v30 = v2;
  uint64_t v13 = type metadata accessor for NotificationsOptInState();
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_100125FF8();
  uint64_t v31 = v3;
  uint64_t v15 = type metadata accessor for LocationsState();
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_10011C760();
  uint64_t v36 = v4;
  uint64_t v17 = type metadata accessor for EnvironmentState();
  uint64_t v18 = sub_100109308(v17);
  __chkstk_darwin(v18);
  sub_100109370();
  uint64_t v37 = v5;
  uint64_t v19 = type metadata accessor for AppConfigurationState();
  uint64_t v20 = sub_100109308(v19);
  __chkstk_darwin(v20);
  sub_100109314();
  uint64_t v38 = v21;
  uint64_t v40 = *(void *)(v0 + 16);
  char v39 = *(unsigned char *)(v0 + 24);
  sub_10011818C();
  sub_10019AA4C();
  sub_1002EED20();
  sub_10011818C();
  sub_10011818C();
  uint64_t v34 = *(void *)(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications + 8);
  uint64_t v35 = *(void *)(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications + 16);
  char v32 = *(unsigned char *)(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications + 24);
  char v33 = *(unsigned char *)(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications);
  sub_10011818C();
  sub_10011818C();
  sub_10011818C();
  sub_10011818C();
  uint64_t v23 = *(void *)(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData);
  uint64_t v22 = *(void *)(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 8);
  uint64_t v25 = *(void *)(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  uint64_t v24 = *(void *)(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 24);
  char v26 = *(unsigned char *)(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_debugState);
  uint64_t v27 = *(void *)(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_debugState + 8);
  uint64_t v28 = *(void *)(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_contentStatusBanners);
  sub_100181044();
  *(void *)&long long v29 = v23;
  *((void *)&v29 + 1) = v22;
  sub_10016E888(v40, v39, v38, v37, v36, v33, v34, v35, v32, v31, v30, v6, v1, v29, v25, v24, v26, v27, v28);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1002EE694();
  sub_100162694();
}

uint64_t sub_1002D8F30(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6974616D6F747561 && a2 == 0xEA00000000006E6FLL;
  if (v3 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x636566694C707061 && a2 == 0xEC000000656C6379;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x8000000100C98BE0 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      BOOL v7 = a1 == 0x6D6E6F7269766E65 && a2 == 0xEB00000000746E65;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        BOOL v8 = a1 == 0x6E6F697461636F6CLL && a2 == 0xE900000000000073;
        if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          BOOL v9 = a1 == 0x6163696669746F6ELL && a2 == 0xED0000736E6F6974;
          if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else if (a1 == 0xD000000000000012 && a2 == 0x8000000100C95FE0 {
                 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          }
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else
          {
            BOOL v10 = a1 == 1701669236 && a2 == 0xE400000000000000;
            if (v10 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 7;
            }
            else
            {
              BOOL v11 = a1 == 2003134838 && a2 == 0xE400000000000000;
              if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 8;
              }
              else
              {
                BOOL v12 = a1 == 0x6569566C61646F6DLL && a2 == 0xE900000000000077;
                if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 9;
                }
                else
                {
                  BOOL v13 = a1 == 0x4472656874616577 && a2 == 0xEB00000000617461;
                  if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 10;
                  }
                  else
                  {
                    BOOL v14 = a1 == 0x6174536775626564 && a2 == 0xEA00000000006574;
                    if (v14 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 11;
                    }
                    else if (a1 == 0xD000000000000014 && a2 == 0x8000000100C98C30)
                    {
                      swift_bridgeObjectRelease();
                      return 12;
                    }
                    else
                    {
                      char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
                      swift_bridgeObjectRelease();
                      if (v15) {
                        return 12;
                      }
                      else {
                        return 13;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

unint64_t sub_1002D9498(char a1)
{
  unint64_t result = 0x6974616D6F747561;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x636566694C707061;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x6D6E6F7269766E65;
      break;
    case 4:
      unint64_t result = 0x6E6F697461636F6CLL;
      break;
    case 5:
      unint64_t result = 0x6163696669746F6ELL;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    case 7:
      unint64_t result = 1701669236;
      break;
    case 8:
      unint64_t result = 2003134838;
      break;
    case 9:
      unint64_t result = 0x6569566C61646F6DLL;
      break;
    case 10:
      unint64_t result = 0x4472656874616577;
      break;
    case 11:
      unint64_t result = 0x6174536775626564;
      break;
    case 12:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1002D9660()
{
  return sub_1002D9498(*v0);
}

uint64_t sub_1002D9668@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002D8F30(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002D9690(uint64_t a1)
{
  unint64_t v2 = sub_1002E76A8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002D96CC(uint64_t a1)
{
  unint64_t v2 = sub_1002E76A8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002D9708()
{
  return type metadata accessor for MainState._Storage(0);
}

void sub_1002D9710()
{
  sub_10016314C();
  uint64_t v3 = sub_100162708();
  type metadata accessor for ModalViewState(v3);
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v26 = v5;
  type metadata accessor for ViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v27 = v7;
  type metadata accessor for TimeState();
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_10019DE20(v9, v23);
  type metadata accessor for NotificationsOptInState();
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_1002EEBD0(v11, v24);
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v30 = v13;
  type metadata accessor for EnvironmentState();
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_1002EEBB0(v15, v25);
  type metadata accessor for AppConfigurationState();
  sub_100162E4C();
  __chkstk_darwin(v16);
  sub_10012B938();
  uint64_t v17 = sub_10017DF08(&qword_100E6A558);
  sub_100179C0C();
  uint64_t v19 = v18;
  __chkstk_darwin(v20);
  sub_100162F18();
  uint64_t v21 = (void *)sub_100127A9C();
  sub_1001B1E64(v21, v22);
  sub_1002E76A8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_1002E76F4();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v0)
  {
    sub_1002E7740();
    sub_1002EE7A8();
    sub_10011818C();
    sub_100127D40(&qword_100E6A578, 255, (void (*)(uint64_t))type metadata accessor for AppConfigurationState);
    sub_1002EE7A8();
    sub_1001184F4(v1, (void (*)(void))type metadata accessor for AppConfigurationState);
    swift_beginAccess();
    sub_10011818C();
    sub_100127D40(&qword_100E6A580, 255, (void (*)(uint64_t))type metadata accessor for EnvironmentState);
    sub_1002EF1FC();
    sub_1002EE7A8();
    sub_1001184F4(v31, (void (*)(void))type metadata accessor for EnvironmentState);
    sub_10011818C();
    sub_100127D40(&qword_100E6A588, 255, (void (*)(uint64_t))type metadata accessor for LocationsState);
    sub_1002EF1FC();
    sub_1002EE7A8();
    sub_1001184F4(v30, (void (*)(void))type metadata accessor for LocationsState);
    sub_1002EF1D8();
    sub_1002E778C();
    sub_1002EE7A8();
    sub_10011818C();
    sub_100127D40(&qword_100E6A598, 255, (void (*)(uint64_t))type metadata accessor for NotificationsOptInState);
    sub_1002EE6E8();
    sub_1002EE7A8();
    sub_1001184F4(v29, (void (*)(void))type metadata accessor for NotificationsOptInState);
    sub_10011818C();
    sub_100127D40(&qword_100E6A5A0, 255, (void (*)(uint64_t))type metadata accessor for TimeState);
    sub_1002EE6E8();
    sub_1002EE7A8();
    sub_1001184F4(v28, (void (*)(void))type metadata accessor for TimeState);
    sub_10011818C();
    sub_100127D40(&qword_100E6A5A8, 255, (void (*)(uint64_t))type metadata accessor for ViewState);
    sub_1002EE6E8();
    sub_1002EE7A8();
    sub_1001184F4(v27, (void (*)(void))type metadata accessor for ViewState);
    sub_10011818C();
    sub_100127D40(&qword_100E6A5B0, 255, (void (*)(uint64_t))type metadata accessor for ModalViewState);
    sub_1002EE6E8();
    sub_1002EE7A8();
    sub_1001184F4(v26, (void (*)(void))type metadata accessor for ModalViewState);
    sub_1002E77D8();
    sub_1002EE7A8();
    sub_1002E7824();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_1002E7870();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v2, v17);
  sub_100163164();
}

uint64_t sub_1002DA058(uint64_t a1)
{
  return sub_1002C96F8(a1, (void (*)(uint64_t))sub_1002DA084);
}

void sub_1002DA084()
{
  sub_10016314C();
  uint64_t v3 = v2;
  sub_10017C924();
  type metadata accessor for ModalViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_100109314();
  type metadata accessor for ViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100109314();
  type metadata accessor for TimeState();
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_100109314();
  type metadata accessor for NotificationsOptInState();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_1002EEBD0(v8, v18);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_10017225C(v10, v19);
  type metadata accessor for EnvironmentState();
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_10011BA28();
  type metadata accessor for AppConfigurationState();
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_100109370();
  sub_10017DF08(&qword_100E6A7A8);
  sub_100179C0C();
  __chkstk_darwin(v13);
  sub_10012B938();
  sub_1001B1E64(v3, v3[3]);
  sub_1002E76A8();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    swift_deallocPartialClassInstance();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v3);
  }
  else
  {
    sub_1002E804C();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *(void *)(v0 + 16) = v20;
    sub_1002E8098();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *(unsigned char *)(v0 + 24) = v20;
    sub_100127D40(&qword_100E6A7C0, 255, (void (*)(uint64_t))type metadata accessor for AppConfigurationState);
    sub_1002EEB18();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_10016EAB0();
    sub_100127D40(&qword_100E6A7C8, 255, (void (*)(uint64_t))type metadata accessor for EnvironmentState);
    sub_1002EEB18();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_10016EAB0();
    sub_100127D40(&qword_100E6A7D0, 255, (void (*)(uint64_t))type metadata accessor for LocationsState);
    sub_1002EEB18();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_10016EAB0();
    sub_1002EF1D8();
    sub_1002E80E4();
    sub_1002EF140();
    uint64_t v14 = v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications;
    *(unsigned char *)uint64_t v14 = 4;
    *(_OWORD *)(v14 + 8) = v21;
    *(unsigned char *)(v14 + 24) = v22;
    sub_100127D40(&qword_100E6A7E0, 255, (void (*)(uint64_t))type metadata accessor for NotificationsOptInState);
    sub_1002EEB18();
    sub_1002EF140();
    sub_10016EAB0();
    sub_100127D40(&qword_100E6A7E8, 255, (void (*)(uint64_t))type metadata accessor for TimeState);
    sub_1002EEB18();
    sub_1002EF140();
    sub_10016EAB0();
    sub_100127D40(&qword_100E6A7F0, 255, (void (*)(uint64_t))type metadata accessor for ViewState);
    sub_1002EEB18();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_10016EAB0();
    LOBYTE(v20) = 9;
    sub_100127D40(&qword_100E6A7F8, 255, (void (*)(uint64_t))type metadata accessor for ModalViewState);
    sub_1002EEB18();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    sub_10016EAB0();
    sub_1002E8130();
    sub_1002EE8E4();
    uint64_t v15 = v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData;
    *(void *)uint64_t v15 = v20;
    *(_OWORD *)(v15 + 8) = v21;
    *(void *)(v15 + 24) = v22;
    sub_1002E817C();
    sub_1002EE8E4();
    uint64_t v16 = v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_debugState;
    *(unsigned char *)uint64_t v16 = 9;
    *(void *)(v16 + 8) = v21;
    sub_1002E81C8();
    sub_1002EE8E4();
    sub_100164F40();
    v17();
    *(void *)(v0 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_contentStatusBanners) = v20;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(0);
  }
  sub_100163164();
}

uint64_t sub_1002DAC5C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1002DA058(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

void sub_1002DAC88()
{
}

void sub_1002DACAC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  sub_100892948(a1, a2, a3, a4, a5, a6, a7, a8, v12, v13, SWORD2(v13), SBYTE6(v13), SHIBYTE(v13));
  if (!v9) {
    *a9 = v11;
  }
}

void sub_1002DACD8()
{
}

uint64_t sub_1002DACFC()
{
  sub_10011796C();
  return v0 & 1;
}

void sub_1002DAD20()
{
  sub_10017F304();
  sub_100127B7C();
  sub_10017DF08(&qword_100E6A720);
  sub_100179C0C();
  __chkstk_darwin(v0);
  sub_100164F78();
  sub_1002E7CE8();
  sub_100162840();
  type metadata accessor for MainState._Storage(0);
  sub_100127D40(&qword_100E6A728, 255, (void (*)(uint64_t))type metadata accessor for MainState._Storage);
  sub_1002EE62C();
  sub_100164F40();
  v1();
  sub_1002EEAFC();
  sub_100182EF8();
}

void sub_1002DAE2C()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100E6A708);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_1002E7CE8();
  sub_100163110();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  }
  else
  {
    type metadata accessor for MainState._Storage(0);
    sub_100127D40(&qword_100E6A718, 255, (void (*)(uint64_t))type metadata accessor for MainState._Storage);
    sub_10017F988();
    uint64_t v3 = sub_100179EBC();
    v4(v3);
    sub_1001D1374();
  }
  sub_100184924();
  sub_100182EF8();
}

uint64_t sub_1002DAF3C(uint64_t a1)
{
  unint64_t v2 = sub_1002E7CE8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002DAF78(uint64_t a1)
{
  unint64_t v2 = sub_1002E7CE8();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_1002DAFB4(void *a1@<X8>)
{
  sub_1002DAE2C();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_1002DAFE0()
{
}

void sub_1002DAFFC(void *a1@<X8>)
{
  sub_1008942CC();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_1002DB028()
{
}

uint64_t sub_1002DB044(uint64_t *a1, uint64_t *a2)
{
  return sub_100B30400(*a1, *a2);
}

void sub_1002DB050()
{
}

uint64_t sub_1002DB06C()
{
  swift_release();
  sub_100178110(v0 + OBJC_IVAR____TtCV7Weather17MinorAlertContent8_Storage_map, &qword_100E64E80);
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather17MinorAlertContent8_Storage_airQuality, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_100163134(OBJC_IVAR____TtCV7Weather17MinorAlertContent8_Storage_severeAlert);
  return v0;
}

uint64_t sub_1002DB0E0()
{
  return sub_100117910((void (*)(void))sub_1002DB06C);
}

uint64_t sub_1002DB0F8()
{
  return type metadata accessor for MinorAlertContent._Storage(0);
}

uint64_t type metadata accessor for MinorAlertContent._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E692D0);
}

uint64_t sub_1002DB120()
{
  sub_1002E2250();
  return v0 & 1;
}

void sub_1002DB15C()
{
}

uint64_t sub_1002DB18C()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for MinorAlertContent._Storage(v0);
  sub_1002EE67C();
  return v1 & 1;
}

uint64_t sub_1002DB1D0()
{
  return sub_1002DB18C();
}

void sub_1002DB1DC()
{
}

uint64_t sub_1002DB1F8()
{
  swift_release();
  sub_100178110(v0 + OBJC_IVAR____TtCV7Weather10NhpContent8_Storage_map, &qword_100E64E80);
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather10NhpContent8_Storage_airQuality, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_100163134(OBJC_IVAR____TtCV7Weather10NhpContent8_Storage_nextHourPrecipitation);
  return v0;
}

uint64_t sub_1002DB26C()
{
  return sub_100117910((void (*)(void))sub_1002DB1F8);
}

uint64_t sub_1002DB284()
{
  return type metadata accessor for NhpContent._Storage(0);
}

uint64_t type metadata accessor for NhpContent._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E69398);
}

uint64_t sub_1002DB2AC()
{
  sub_1002E2250();
  return v0 & 1;
}

void sub_1002DB2E8()
{
}

uint64_t sub_1002DB318()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for NhpContent._Storage(v0);
  sub_1002EE67C();
  return v1 & 1;
}

uint64_t sub_1002DB35C()
{
  return sub_1002DB318();
}

void sub_1002DB368()
{
  sub_1001843DC();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v6 = v0 + *v5;
  uint64_t v7 = type metadata accessor for LocationComponentContainerViewModel();
  sub_100163050(v6, v8, v9, v7);
  *(void *)(v0 + 16) = v4;
  sub_100182350();
  sub_1002E7C4C(v2, v6, &qword_100E64E80);
  swift_endAccess();
  sub_10016EAB0();
  sub_10016EAB0();
  sub_10016EAB0();
  sub_100152398();
}

void sub_1002DB450()
{
}

void sub_1002DB474()
{
  sub_100162EA0();
  v46[0] = v2;
  v46[1] = v1;
  v46[2] = v3;
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = type metadata accessor for LocationComponentContainerViewModel();
  sub_100162E4C();
  __chkstk_darwin(v9);
  int v47 = (char *)v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  uint64_t v12 = __chkstk_darwin(v11);
  sub_1002EF3A0(v12, v13, v14, v15, v16, v17, v18, v19, v46[0]);
  uint64_t v20 = sub_10017DF08(&qword_100E6A4E0);
  sub_100162E4C();
  __chkstk_darwin(v21);
  sub_100109370();
  uint64_t v22 = sub_10017DF08(&qword_100E64E80);
  uint64_t v23 = sub_100109308(v22);
  __chkstk_darwin(v23);
  sub_10017EFE0(v24, v46[0]);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)v46 - v26;
  type metadata accessor for LocationCommonViewComponents._Storage(0);
  swift_retain();
  swift_retain();
  BOOL v28 = sub_1002C8DF4();
  swift_release();
  swift_release();
  if (!v28) {
    goto LABEL_15;
  }
  sub_100126024();
  sub_1002EEF14();
  uint64_t v29 = v7 + *v5;
  sub_100126024();
  uint64_t v30 = v0 + *(int *)(v20 + 48);
  uint64_t v31 = sub_1002EED20();
  sub_1001B49E8(v31, v32, &qword_100E64E80);
  sub_1001B49E8(v29, v30, &qword_100E64E80);
  uint64_t v33 = sub_100127BBC();
  sub_10012B520(v33, v34, v8);
  if (!v36)
  {
    uint64_t v35 = v48;
    sub_1001B49E8(v0, v48, &qword_100E64E80);
    sub_10012B520(v30, 1, v8);
    if (!v36)
    {
      uint64_t v37 = v49;
      sub_10016EAB0();
      BOOL v38 = sub_100B6B9B8(v35, v37);
      sub_1001184F4(v37, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
      uint64_t v39 = sub_100181E80();
      sub_100178110(v39, v40);
      sub_1001184F4(v35, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
      uint64_t v41 = sub_1002EF108();
      sub_100178110(v41, v42);
      if (!v38) {
        goto LABEL_15;
      }
      goto LABEL_12;
    }
    sub_100178110((uint64_t)v27, &qword_100E64E80);
    sub_1001184F4(v35, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
LABEL_10:
    sub_100178110(v0, &qword_100E6A4E0);
    goto LABEL_15;
  }
  sub_100178110((uint64_t)v27, &qword_100E64E80);
  sub_10012B520(v30, 1, v8);
  if (!v36) {
    goto LABEL_10;
  }
  sub_100178110(v0, &qword_100E64E80);
LABEL_12:
  sub_10011818C();
  uint64_t v43 = (uint64_t)v47;
  sub_100128F98();
  BOOL v44 = sub_1002EF0C8();
  sub_1001184F4(v43, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_1001195C8();
  if (v44)
  {
    sub_10011818C();
    sub_100128F98();
    BOOL v45 = sub_1002EF0C8();
    sub_1001184F4(v43, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_1001195C8();
    if (v45)
    {
      sub_10011818C();
      sub_100128F98();
      sub_1002EF0C8();
      sub_1001184F4(v43, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
      sub_1001195C8();
    }
  }
LABEL_15:
  sub_100119448();
  sub_100162694();
}

uint64_t sub_1002DB8B0()
{
  swift_release();
  sub_100178110(v0 + OBJC_IVAR____TtCV7Weather20NhpMinorAlertContent8_Storage_map, &qword_100E64E80);
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather20NhpMinorAlertContent8_Storage_airQuality, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_100163134(OBJC_IVAR____TtCV7Weather20NhpMinorAlertContent8_Storage_nextHourPrecipitation);
  sub_100163134(OBJC_IVAR____TtCV7Weather20NhpMinorAlertContent8_Storage_severeAlert);
  return v0;
}

uint64_t sub_1002DB930()
{
  return sub_100117910((void (*)(void))sub_1002DB8B0);
}

uint64_t sub_1002DB948()
{
  return type metadata accessor for NhpMinorAlertContent._Storage(0);
}

uint64_t type metadata accessor for NhpMinorAlertContent._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E69460);
}

void sub_1002DB970()
{
  sub_1002DE6F0(319, (unint64_t *)&unk_100E67340, (void (*)(uint64_t))type metadata accessor for LocationComponentContainerViewModel);
  if (v0 <= 0x3F)
  {
    uint64_t v1 = type metadata accessor for LocationComponentContainerViewModel();
    if (v2 <= 0x3F)
    {
      sub_1001A6874(v1);
      uint64_t v3 = sub_1002EF2B4();
      sub_1002EEC30(v3);
    }
  }
}

uint64_t sub_1002DBA34()
{
  sub_1002DB474();
  return v0 & 1;
}

void sub_1002DBA78()
{
  sub_100162EA0();
  uint64_t v2 = sub_10019B0C0(v1);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_1001870B8();
  __chkstk_darwin(v4);
  sub_100181E70();
  __chkstk_darwin(v5);
  sub_100152388();
  uint64_t v6 = sub_10017DF08(&qword_100E64E80);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_1001722D8(v8, v9);
  sub_10011818C();
  sub_1002EE5B8();
  sub_1002EE51C();
  type metadata accessor for NhpMinorAlertContent._Storage(0);
  sub_100181044();
  sub_100214D30();
  sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_1002EE770();
  sub_1002EEC18();
  sub_1002EED08();
  sub_1002EE694();
  sub_100162694();
}

uint64_t sub_1002DBBD0()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for NhpMinorAlertContent._Storage(v0);
  sub_1002EEB60();
  return v1 & 1;
}

uint64_t sub_1002DBC1C()
{
  return sub_1002DBBD0();
}

void sub_1002DBC28()
{
}

uint64_t sub_1002DBC4C()
{
  swift_release();
  sub_100178110(v0 + OBJC_IVAR____TtCV7Weather14NhpNewsContent8_Storage_map, &qword_100E64E80);
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather14NhpNewsContent8_Storage_airQuality, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_100163134(OBJC_IVAR____TtCV7Weather14NhpNewsContent8_Storage_newsArticle);
  sub_100163134(OBJC_IVAR____TtCV7Weather14NhpNewsContent8_Storage_nextHourPrecipitation);
  return v0;
}

uint64_t sub_1002DBCCC()
{
  return sub_100117910((void (*)(void))sub_1002DBC4C);
}

uint64_t sub_1002DBCE4()
{
  return type metadata accessor for NhpNewsContent._Storage(0);
}

uint64_t type metadata accessor for NhpNewsContent._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E69530);
}

uint64_t sub_1002DBD0C()
{
  sub_1002DB474();
  return v0 & 1;
}

void sub_1002DBD50()
{
  sub_100162EA0();
  uint64_t v2 = sub_10019B0C0(v1);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_1001870B8();
  __chkstk_darwin(v4);
  sub_100181E70();
  __chkstk_darwin(v5);
  sub_100152388();
  uint64_t v6 = sub_10017DF08(&qword_100E64E80);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_1001722D8(v8, v9);
  sub_10011818C();
  sub_1002EE5B8();
  sub_1002EE51C();
  type metadata accessor for NhpNewsContent._Storage(0);
  sub_100181044();
  sub_100214D30();
  sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_1002EE770();
  sub_1002EEC18();
  sub_1002EED08();
  sub_1002EE694();
  sub_100162694();
}

uint64_t sub_1002DBEA8()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for NhpNewsContent._Storage(v0);
  sub_1002EEB60();
  return v1 & 1;
}

uint64_t sub_1002DBEF4()
{
  return sub_1002DBEA8();
}

uint64_t sub_1002DBF00(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtCV7Weather12NoAqiContent8_Storage_map;
  uint64_t v4 = type metadata accessor for LocationComponentContainerViewModel();
  sub_100163050(v3, v5, v6, v4);
  *(void *)(v1 + 16) = a1;
  sub_100182350();
  uint64_t v7 = sub_100214E34();
  sub_1002E7C4C(v7, v8, v9);
  swift_endAccess();
  return v1;
}

void sub_1002DBF80()
{
  sub_100162EA0();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v21 = type metadata accessor for LocationComponentContainerViewModel();
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_10012B938();
  uint64_t v9 = sub_10017DF08(&qword_100E6A4E0);
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_100162E88();
  uint64_t v11 = sub_10017DF08(&qword_100E64E80);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_100162758();
  __chkstk_darwin(v13);
  sub_10011B090();
  type metadata accessor for LocationCommonViewComponents._Storage(0);
  swift_retain();
  swift_retain();
  BOOL v14 = sub_1002C8DF4();
  swift_release();
  swift_release();
  if (v14)
  {
    uint64_t v15 = v7 + OBJC_IVAR____TtCV7Weather12NoAqiContent8_Storage_map;
    sub_100126024();
    sub_1001B49E8(v15, v3, &qword_100E64E80);
    uint64_t v16 = v5 + OBJC_IVAR____TtCV7Weather12NoAqiContent8_Storage_map;
    sub_100126024();
    uint64_t v17 = v0 + *(int *)(v9 + 48);
    sub_1001B49E8(v3, v0, &qword_100E64E80);
    sub_1001B49E8(v16, v17, &qword_100E64E80);
    sub_10012B520(v0, 1, v21);
    if (v18)
    {
      sub_100178110(v3, &qword_100E64E80);
      sub_10012B520(v17, 1, v21);
    }
    else
    {
      sub_1001B49E8(v0, v1, &qword_100E64E80);
      sub_10012B520(v17, 1, v21);
      if (!v18)
      {
        sub_10016EAB0();
        sub_100B6B9B8(v1, v2);
        sub_1001184F4(v2, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
      }
      sub_100178110(v3, &qword_100E64E80);
      sub_1001184F4(v1, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    }
    uint64_t v19 = sub_10012B950();
    sub_100178110(v19, v20);
  }
  sub_100162694();
}

uint64_t sub_1002DC240()
{
  return sub_1002DC268(&OBJC_IVAR____TtCV7Weather12NoAqiContent8_Storage_map, (uint64_t)&qword_100E64E80, (void (*)(uint64_t, uint64_t))sub_100178110);
}

uint64_t sub_1002DC268(void *a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  swift_release();
  a3(v3 + *a1, a2);

  return swift_deallocClassInstance();
}

uint64_t sub_1002DC2F4()
{
  return type metadata accessor for NoAqiContent._Storage(0);
}

uint64_t type metadata accessor for NoAqiContent._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E69600);
}

void sub_1002DC31C()
{
  sub_1002DE6F0(319, (unint64_t *)&unk_100E67340, (void (*)(uint64_t))type metadata accessor for LocationComponentContainerViewModel);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1002DC3D8()
{
  sub_1002DBF80();
  return v0 & 1;
}

uint64_t sub_1002DC3FC()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for NoAqiContent._Storage(v0);
  sub_100127A9C();
  sub_1002DBF80();
  return v1 & 1;
}

uint64_t sub_1002DC42C()
{
  return sub_1002DC3FC();
}

uint64_t sub_1002DC438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002C5358(a1, a2, a3, &OBJC_IVAR____TtCV7Weather16NoAqiNewsContent8_Storage_map);
}

void sub_1002DC44C()
{
}

uint64_t sub_1002DC460()
{
  swift_release();
  sub_100178110(v0 + OBJC_IVAR____TtCV7Weather16NoAqiNewsContent8_Storage_map, &qword_100E64E80);
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather16NoAqiNewsContent8_Storage_newsArticle, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  return v0;
}

uint64_t sub_1002DC4BC()
{
  return sub_100117910((void (*)(void))sub_1002DC460);
}

uint64_t sub_1002DC4D4()
{
  return type metadata accessor for NoAqiNewsContent._Storage(0);
}

uint64_t type metadata accessor for NoAqiNewsContent._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E696B8);
}

uint64_t sub_1002DC4FC()
{
  sub_1002C5418();
  return v0 & 1;
}

uint64_t sub_1002DC530()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for NoAqiNewsContent._Storage(v0);
  sub_1002EEF30();
  return v1 & 1;
}

uint64_t sub_1002DC56C()
{
  return sub_1002DC530();
}

uint64_t sub_1002DC578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002C5358(a1, a2, a3, &OBJC_IVAR____TtCV7Weather15NoAqiNhpContent8_Storage_map);
}

void sub_1002DC58C()
{
}

uint64_t sub_1002DC5A0()
{
  swift_release();
  sub_100178110(v0 + OBJC_IVAR____TtCV7Weather15NoAqiNhpContent8_Storage_map, &qword_100E64E80);
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather15NoAqiNhpContent8_Storage_nextHourPrecipitation, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  return v0;
}

uint64_t sub_1002DC5FC()
{
  return sub_100117910((void (*)(void))sub_1002DC5A0);
}

uint64_t sub_1002DC614()
{
  return type metadata accessor for NoAqiNhpContent._Storage(0);
}

uint64_t type metadata accessor for NoAqiNhpContent._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E69778);
}

uint64_t sub_1002DC63C()
{
  sub_1002C5418();
  return v0 & 1;
}

uint64_t sub_1002DC670()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for NoAqiNhpContent._Storage(v0);
  sub_1002EEF30();
  return v1 & 1;
}

uint64_t sub_1002DC6AC()
{
  return sub_1002DC670();
}

void sub_1002DC6B8()
{
}

uint64_t sub_1002DC6D4()
{
  swift_release();
  sub_100178110(v0 + OBJC_IVAR____TtCV7Weather19NoAqiNhpNewsContent8_Storage_map, &qword_100E64E80);
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather19NoAqiNhpNewsContent8_Storage_newsArticle, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_100163134(OBJC_IVAR____TtCV7Weather19NoAqiNhpNewsContent8_Storage_nextHourPrecipitation);
  return v0;
}

uint64_t sub_1002DC748()
{
  return sub_100117910((void (*)(void))sub_1002DC6D4);
}

uint64_t sub_1002DC760()
{
  return type metadata accessor for NoAqiNhpNewsContent._Storage(0);
}

uint64_t type metadata accessor for NoAqiNhpNewsContent._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E69838);
}

uint64_t sub_1002DC788()
{
  sub_1002E2250();
  return v0 & 1;
}

void sub_1002DC7C4()
{
}

uint64_t sub_1002DC7F4()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for NoAqiNhpNewsContent._Storage(v0);
  sub_1002EE67C();
  return v1 & 1;
}

uint64_t sub_1002DC838()
{
  return sub_1002DC7F4();
}

uint64_t sub_1002DC844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002C5358(a1, a2, a3, &OBJC_IVAR____TtCV7Weather18NoAqiSevereContent8_Storage_map);
}

void sub_1002DC858()
{
}

uint64_t sub_1002DC86C()
{
  swift_release();
  sub_100178110(v0 + OBJC_IVAR____TtCV7Weather18NoAqiSevereContent8_Storage_map, &qword_100E64E80);
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather18NoAqiSevereContent8_Storage_severeAlert, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  return v0;
}

uint64_t sub_1002DC8C8()
{
  return sub_100117910((void (*)(void))sub_1002DC86C);
}

uint64_t sub_1002DC8E0()
{
  return type metadata accessor for NoAqiSevereContent._Storage(0);
}

uint64_t type metadata accessor for NoAqiSevereContent._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E69900);
}

uint64_t sub_1002DC908()
{
  sub_1002C5418();
  return v0 & 1;
}

uint64_t sub_1002DC93C()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for NoAqiSevereContent._Storage(v0);
  sub_1002EEF30();
  return v1 & 1;
}

uint64_t sub_1002DC978()
{
  return sub_1002DC93C();
}

void sub_1002DC984()
{
}

uint64_t sub_1002DC9A0()
{
  swift_release();
  sub_100178110(v0 + OBJC_IVAR____TtCV7Weather22NoAqiSevereNewsContent8_Storage_map, &qword_100E64E80);
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather22NoAqiSevereNewsContent8_Storage_newsArticle, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_100163134(OBJC_IVAR____TtCV7Weather22NoAqiSevereNewsContent8_Storage_severeAlert);
  return v0;
}

uint64_t sub_1002DCA14()
{
  return sub_100117910((void (*)(void))sub_1002DC9A0);
}

uint64_t sub_1002DCA2C()
{
  return type metadata accessor for NoAqiSevereNewsContent._Storage(0);
}

uint64_t type metadata accessor for NoAqiSevereNewsContent._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E699C0);
}

uint64_t sub_1002DCA54()
{
  sub_1002E2250();
  return v0 & 1;
}

void sub_1002DCA90()
{
}

uint64_t sub_1002DCAC0()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for NoAqiSevereNewsContent._Storage(v0);
  sub_1002EE67C();
  return v1 & 1;
}

uint64_t sub_1002DCB04()
{
  return sub_1002DCAC0();
}

void sub_1002DCB10()
{
}

uint64_t sub_1002DCB2C()
{
  swift_release();
  sub_100178110(v0 + OBJC_IVAR____TtCV7Weather21NoAqiSevereNhpContent8_Storage_map, &qword_100E64E80);
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather21NoAqiSevereNhpContent8_Storage_nextHourPrecipitation, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_100163134(OBJC_IVAR____TtCV7Weather21NoAqiSevereNhpContent8_Storage_severeAlert);
  return v0;
}

uint64_t sub_1002DCBA0()
{
  return sub_100117910((void (*)(void))sub_1002DCB2C);
}

uint64_t sub_1002DCBB8()
{
  return type metadata accessor for NoAqiSevereNhpContent._Storage(0);
}

uint64_t type metadata accessor for NoAqiSevereNhpContent._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E69A88);
}

uint64_t sub_1002DCBE0()
{
  sub_1002E2250();
  return v0 & 1;
}

void sub_1002DCC1C()
{
}

uint64_t sub_1002DCC4C()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for NoAqiSevereNhpContent._Storage(v0);
  sub_1002EE67C();
  return v1 & 1;
}

uint64_t sub_1002DCC90()
{
  return sub_1002DCC4C();
}

void sub_1002DCC9C()
{
}

uint64_t sub_1002DCCC0()
{
  swift_release();
  sub_100178110(v0 + OBJC_IVAR____TtCV7Weather25NoAqiSevereNhpNewsContent8_Storage_map, &qword_100E64E80);
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather25NoAqiSevereNhpNewsContent8_Storage_newsArticle, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_100163134(OBJC_IVAR____TtCV7Weather25NoAqiSevereNhpNewsContent8_Storage_nextHourPrecipitation);
  sub_100163134(OBJC_IVAR____TtCV7Weather25NoAqiSevereNhpNewsContent8_Storage_severeAlert);
  return v0;
}

uint64_t sub_1002DCD40()
{
  return sub_100117910((void (*)(void))sub_1002DCCC0);
}

uint64_t sub_1002DCD58()
{
  return type metadata accessor for NoAqiSevereNhpNewsContent._Storage(0);
}

uint64_t type metadata accessor for NoAqiSevereNhpNewsContent._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E69B50);
}

uint64_t sub_1002DCD80()
{
  sub_1002DB474();
  return v0 & 1;
}

void sub_1002DCDC4()
{
  sub_100162EA0();
  uint64_t v2 = sub_10019B0C0(v1);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_1001870B8();
  __chkstk_darwin(v4);
  sub_100181E70();
  __chkstk_darwin(v5);
  sub_100152388();
  uint64_t v6 = sub_10017DF08(&qword_100E64E80);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_1001722D8(v8, v9);
  sub_10011818C();
  sub_1002EE5B8();
  sub_1002EE51C();
  type metadata accessor for NoAqiSevereNhpNewsContent._Storage(0);
  sub_100181044();
  sub_100214D30();
  sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_1002EE770();
  sub_1002EEC18();
  sub_1002EED08();
  sub_1002EE694();
  sub_100162694();
}

uint64_t sub_1002DCF1C()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for NoAqiSevereNhpNewsContent._Storage(v0);
  sub_1002EEB60();
  return v1 & 1;
}

uint64_t sub_1002DCF68()
{
  return sub_1002DCF1C();
}

uint64_t sub_1002DCF74(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1[16] != a2[16]) {
    return 0;
  }
  int v2 = a1[17];
  int v3 = a1[18];
  int v4 = a1[19];
  int v5 = a2[17];
  int v6 = a2[19];
  if (v2 == 6)
  {
    uint64_t result = 0;
    if (v5 != 6) {
      return result;
    }
LABEL_7:
    if (((v3 ^ a2[18]) & 1) == 0)
    {
      if (v4 == 2)
      {
        if (v6 != 2) {
          return 0;
        }
      }
      else if (v4 == 3)
      {
        if (v6 != 3) {
          return 0;
        }
      }
      else if ((v6 & 0xFE) == 2 || ((((v4 & 1) == 0) ^ v6) & 1) == 0)
      {
        return 0;
      }
      return 1;
    }
    return result;
  }
  if (v5 == 6) {
    return 0;
  }
  uint64_t result = 0;
  if (v2 == v5) {
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_1002DD028(uint64_t a1)
{
  unint64_t v2 = sub_1002E78BC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002DD064(uint64_t a1)
{
  unint64_t v2 = sub_1002E78BC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002DD0A0()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for NotificationsOptInViewState._Storage()
{
  return self;
}

void sub_1002DD0D4()
{
  sub_10017F304();
  char v1 = v0;
  sub_10017DF08(&qword_100E6A5D0);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10017F2E8(v1);
  sub_1002E78BC();
  sub_100162840();
  sub_1002E7908();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  sub_100164F40();
  v3();
  sub_1002EEAFC();
  sub_100182EF8();
}

uint64_t sub_1002DD1E0()
{
  sub_1002EEEA4();
  swift_allocObject();
  uint64_t v1 = sub_1002EF05C();
  sub_1002DD220(v1, v2, v3, v4, v5, v6, v7, v8, v10, v11, SWORD2(v11), SBYTE6(v11), SHIBYTE(v11));
  return v0;
}

void sub_1002DD220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  sub_10016314C();
  uint64_t v16 = v15;
  sub_10017C924();
  sub_10017DF08(&qword_100E6A798);
  sub_100179C0C();
  __chkstk_darwin(v17);
  sub_10018E010(v16);
  sub_1002E78BC();
  sub_1002EE988();
  if (v14)
  {
    sub_100181E80();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1002E8000();
    sub_1002EE474();
    sub_100162F0C();
    v18();
    *(_WORD *)(v13 + 16) = a11;
    *(unsigned char *)(v13 + 18) = a12;
    *(unsigned char *)(v13 + 19) = a13;
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v16);
  sub_1002EE5D4();
  sub_100163164();
}

uint64_t sub_1002DD354(unsigned __int8 **a1, unsigned __int8 **a2)
{
  return sub_1002DCF74(*a1, *a2) & 1;
}

uint64_t sub_1002DD378@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1002DD1E0();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

void sub_1002DD3A4()
{
}

unsigned char *sub_1002DD3C8@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_100894320();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

void sub_1002DD3F4()
{
}

uint64_t sub_1002DD418()
{
  sub_1001097B4();
  type metadata accessor for NotificationsOptInViewState._Storage();
  uint64_t v0 = (unsigned __int8 *)sub_100127A9C();
  return sub_1002DCF74(v0, v1) & 1;
}

void sub_1002DD448()
{
  sub_10017F304();
  sub_1002EF178();
  sub_10017DF08(&qword_100E6AE00);
  sub_100179C0C();
  __chkstk_darwin(v0);
  sub_100164F78();
  sub_1002EBD3C();
  sub_100162840();
  type metadata accessor for NotificationsOptInViewState._Storage();
  sub_100127D40(&qword_100E6AE08, v1, (void (*)(uint64_t))type metadata accessor for NotificationsOptInViewState._Storage);
  sub_1002EE654();
  sub_100164F40();
  v2();
  sub_1002EEAFC();
  sub_100182EF8();
}

void sub_1002DD54C()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100E6ADD8);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_1002EBD3C();
  sub_100163110();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  }
  else
  {
    type metadata accessor for NotificationsOptInViewState._Storage();
    sub_100127D40(&qword_100E6ADE8, v3, (void (*)(uint64_t))type metadata accessor for NotificationsOptInViewState._Storage);
    sub_10017F988();
    uint64_t v4 = sub_100179EBC();
    v5(v4);
    sub_1001D1374();
  }
  sub_100184924();
  sub_100182EF8();
}

uint64_t sub_1002DD654(uint64_t a1)
{
  unint64_t v2 = sub_1002EBD3C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002DD690(uint64_t a1)
{
  unint64_t v2 = sub_1002EBD3C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002DD6CC()
{
  return sub_1002DD418();
}

void sub_1002DD6D8(void *a1@<X8>)
{
  sub_1002DD54C();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_1002DD704()
{
}

unsigned char *sub_1002DD720@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_1008943C4();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

void sub_1002DD74C()
{
}

void sub_1002DD768()
{
  sub_1002EEF6C();
  uint64_t v17 = v2;
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  uint64_t v7 = v0 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_summaryPlatterViewModel;
  uint64_t v8 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  _s7Weather24LocationCompositionStateOwst_0(v7, 1, 1, v8);
  uint64_t v9 = v0 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_newsViewModel;
  uint64_t v10 = type metadata accessor for DetailComponentContainerViewModel();
  sub_100163050(v9, v11, v12, v10);
  uint64_t v13 = sub_1002EF3F8(OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_historicalFactsPlatterViewModel);
  _s7Weather24LocationCompositionStateOwst_0(v13, v14, v15, v8);
  sub_10016EAB0();
  sub_100182350();
  sub_1002E7C4C(v6, v7, &qword_100E66E40);
  swift_endAccess();
  sub_10016EAB0();
  sub_100182350();
  sub_1002E7C4C(v4, v9, &qword_100E66E28);
  swift_endAccess();
  sub_10016EAB0();
  sub_100182350();
  sub_1002E7C4C(v17, v1, &qword_100E66E40);
  swift_endAccess();
  sub_1002EF1E4();
  sub_100162E4C();
  sub_1001190D4();
  v16();
  sub_100199BA8();
}

void sub_1002DD934()
{
  sub_100162EA0();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v114 = type metadata accessor for LocationDetailEntity();
  sub_100179C0C();
  uint64_t v113 = v8;
  __chkstk_darwin(v9);
  v112[2] = (uint64_t)v112 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v123 = sub_1002EEDF4(v12, v13, v14, v15, v16, v17, v18, v19, v112[0]);
  sub_100162E4C();
  __chkstk_darwin(v20);
  sub_100109314();
  sub_100109338(v21);
  uint64_t v121 = sub_10017DF08(&qword_100E6A5E8);
  sub_100162E4C();
  __chkstk_darwin(v22);
  sub_100109314();
  sub_100109338(v23);
  uint64_t v24 = sub_10017DF08(&qword_100E66E28);
  uint64_t v25 = sub_100109308(v24);
  __chkstk_darwin(v25);
  sub_100162EF8();
  int v120 = (uint64_t *)v26;
  sub_1001626D4();
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v36 = sub_1002EEDCC(v28, v29, v30, v31, v32, v33, v34, v35, v112[0]);
  uint64_t v37 = sub_100109308(v36);
  __chkstk_darwin(v37);
  sub_100162EF8();
  uint64_t v127 = v38;
  sub_1001626D4();
  uint64_t v40 = __chkstk_darwin(v39);
  sub_1002EF378(v40, v41, v42, v43, v44, v45, v46, v47, v112[0]);
  uint64_t v48 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  sub_100162E4C();
  __chkstk_darwin(v49);
  sub_100162EF8();
  uint64_t v119 = v50;
  sub_1001626D4();
  __chkstk_darwin(v51);
  sub_100128F8C();
  sub_100109338(v52);
  uint64_t v53 = sub_10017DF08(&qword_100E6A5F0);
  sub_100162E4C();
  __chkstk_darwin(v54);
  sub_100162EF8();
  uint64_t v117 = v55;
  sub_1001626D4();
  __chkstk_darwin(v56);
  sub_100152388();
  uint64_t v57 = sub_10017DF08(&qword_100E66E40);
  uint64_t v58 = sub_100109308(v57);
  __chkstk_darwin(v58);
  uint64_t v115 = (uint64_t)v112 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v60);
  sub_100109770();
  uint64_t v116 = v61;
  sub_1001626D4();
  __chkstk_darwin(v62);
  sub_100109770();
  char v128 = (uint64_t *)v63;
  sub_1001626D4();
  __chkstk_darwin(v64);
  uint64_t v65 = sub_1002EF358();
  uint64_t v66 = sub_100109308(v65);
  __chkstk_darwin(v66);
  sub_100119488();
  __chkstk_darwin(v67);
  sub_100182F0C();
  uint64_t v68 = v7;
  sub_10011818C();
  sub_10011818C();
  LOBYTE(v7) = sub_10073226C(v3, v0);
  sub_1001184F4(v0, (void (*)(void))type metadata accessor for PrecipitationAveragesHeroChartViewModel);
  sub_1001184F4(v3, (void (*)(void))type metadata accessor for PrecipitationAveragesHeroChartViewModel);
  if ((v7 & 1) == 0) {
    goto LABEL_37;
  }
  uint64_t v69 = v68 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_summaryPlatterViewModel;
  sub_10019AA4C();
  sub_1001B49E8(v69, v1, &qword_100E66E40);
  uint64_t v70 = v5 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_summaryPlatterViewModel;
  sub_100126024();
  v112[0] = v53;
  uint64_t v71 = v2 + *(int *)(v53 + 48);
  sub_1001B49E8(v1, v2, &qword_100E66E40);
  sub_1001B49E8(v70, v71, &qword_100E66E40);
  sub_10012B520(v2, 1, v48);
  uint64_t v72 = v5;
  uint64_t v73 = v48;
  if (v75)
  {
    sub_100178110(v1, &qword_100E66E40);
    sub_10012B520(v71, 1, v48);
    if (v75)
    {
      sub_100178110(v2, &qword_100E66E40);
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v76 = &qword_100E6A5F0;
    uint64_t v77 = v2;
LABEL_11:
    sub_100178110(v77, v76);
    goto LABEL_37;
  }
  char v74 = v128;
  sub_1001B49E8(v2, (uint64_t)v128, &qword_100E66E40);
  sub_10012B520(v71, 1, v48);
  if (v75)
  {
    sub_100178110(v1, &qword_100E66E40);
    sub_1001184F4((uint64_t)v74, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    goto LABEL_10;
  }
  uint64_t v78 = v125;
  sub_10016EAB0();
  char v79 = sub_100B1F0C8(v74, v78);
  sub_1001184F4((uint64_t)v78, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  uint64_t v80 = sub_10011958C();
  sub_100178110(v80, v81);
  sub_1001184F4((uint64_t)v74, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  sub_100178110(v2, &qword_100E66E40);
  if ((v79 & 1) == 0) {
    goto LABEL_37;
  }
LABEL_13:
  uint64_t v82 = v126;
  sub_10011818C();
  uint64_t v83 = v127;
  sub_100128F98();
  char v84 = sub_1003F4D24(v82, v83);
  sub_1001184F4(v83, (void (*)(void))type metadata accessor for MonthlyAveragesChartModel);
  sub_1002EF2EC();
  if ((v84 & 1) == 0) {
    goto LABEL_37;
  }
  uint64_t v85 = v68 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_newsViewModel;
  sub_10019AA4C();
  uint64_t v86 = v122;
  sub_1001B49E8(v85, v122, &qword_100E66E28);
  uint64_t v87 = v72 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_newsViewModel;
  sub_10019AA4C();
  uint64_t v88 = v124;
  uint64_t v89 = v124 + *(int *)(v121 + 48);
  uint64_t v90 = sub_1002EF108();
  sub_1001B49E8(v90, v91, &qword_100E66E28);
  sub_1001B49E8(v87, v89, &qword_100E66E28);
  uint64_t v92 = v123;
  sub_10012B520(v88, 1, v123);
  if (v75)
  {
    sub_100178110(v86, &qword_100E66E28);
    sub_10012B520(v89, 1, v92);
    if (v75)
    {
      sub_100178110(v88, &qword_100E66E28);
      goto LABEL_25;
    }
LABEL_22:
    uint64_t v76 = &qword_100E6A5E8;
LABEL_23:
    uint64_t v77 = v88;
    goto LABEL_11;
  }
  uint64_t v93 = v120;
  sub_1001B49E8(v88, (uint64_t)v120, &qword_100E66E28);
  sub_10012B520(v89, 1, v92);
  if (v94)
  {
    sub_100178110(v86, &qword_100E66E28);
    sub_1001184F4((uint64_t)v93, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
    goto LABEL_22;
  }
  uint64_t v95 = v118;
  sub_10016EAB0();
  char v96 = sub_1004B7C2C(v93, v95);
  sub_1001184F4((uint64_t)v95, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
  sub_100178110(v86, &qword_100E66E28);
  sub_1001195C8();
  sub_100178110(v88, &qword_100E66E28);
  if ((v96 & 1) == 0) {
    goto LABEL_37;
  }
LABEL_25:
  uint64_t v97 = v125;
  sub_10011818C();
  uint64_t v98 = v119;
  sub_100128F98();
  char v99 = sub_100B1F0C8(v97, v98);
  sub_1001184F4((uint64_t)v98, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  sub_1001195C8();
  if ((v99 & 1) == 0) {
    goto LABEL_37;
  }
  uint64_t v100 = v68 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_historicalFactsPlatterViewModel;
  sub_10019AA4C();
  uint64_t v101 = v116;
  sub_1001B49E8(v100, v116, &qword_100E66E40);
  uint64_t v102 = v72 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_historicalFactsPlatterViewModel;
  sub_100126024();
  uint64_t v88 = v117;
  uint64_t v103 = v117 + *(int *)(v112[0] + 48);
  sub_1001B49E8(v101, v117, &qword_100E66E40);
  sub_1001B49E8(v102, v103, &qword_100E66E40);
  sub_10012B520(v88, 1, v73);
  if (v75)
  {
    sub_100178110(v101, &qword_100E66E40);
    sub_10012B520(v103, 1, v73);
    if (v75)
    {
      sub_100178110(v88, &qword_100E66E40);
LABEL_36:
      uint64_t v109 = v113;
      uint64_t v110 = *(void (**)(void))(v113 + 16);
      sub_10019FBD8();
      v110();
      sub_10019FBD8();
      v110();
      sub_10011A5A0();
      static LocationDetailEntity.== infix(_:_:)();
      uint64_t v111 = *(void (**)(void))(v109 + 8);
      sub_10016285C();
      v111();
      sub_10016285C();
      v111();
      goto LABEL_37;
    }
    goto LABEL_34;
  }
  uint64_t v104 = v115;
  sub_1001B49E8(v88, v115, &qword_100E66E40);
  sub_10012B520(v103, 1, v73);
  if (v105)
  {
    sub_100178110(v101, &qword_100E66E40);
    sub_1001184F4(v104, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
LABEL_34:
    uint64_t v76 = &qword_100E6A5F0;
    goto LABEL_23;
  }
  sub_10016EAB0();
  uint64_t v106 = (uint64_t *)sub_10011A5A0();
  char v108 = sub_100B1F0C8(v106, v107);
  sub_1001184F4((uint64_t)v97, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  sub_100178110(v101, &qword_100E66E40);
  sub_1001184F4(v104, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  sub_100178110(v88, &qword_100E66E40);
  if (v108) {
    goto LABEL_36;
  }
LABEL_37:
  sub_100119448();
  sub_100162694();
}

uint64_t sub_1002DE3BC()
{
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_heroChart, (void (*)(void))type metadata accessor for PrecipitationAveragesHeroChartViewModel);
  sub_100178110(v0 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_summaryPlatterViewModel, &qword_100E66E40);
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_averagesChart, (void (*)(void))type metadata accessor for MonthlyAveragesChartModel);
  sub_100178110(v0 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_newsViewModel, &qword_100E66E28);
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_aboutPlatterViewModel, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  sub_100178110(v0 + OBJC_IVAR____TtCV7Weather36PrecipitationAveragesDetailViewModel8_Storage_historicalFactsPlatterViewModel, &qword_100E66E40);
  sub_1002EF1E4();
  sub_100162E4C();
  sub_100162F0C();
  v1();
  return v0;
}

uint64_t sub_1002DE4C0()
{
  return sub_1002E49E8((void (*)(void))sub_1002DE3BC);
}

uint64_t sub_1002DE4D8()
{
  return type metadata accessor for PrecipitationAveragesDetailViewModel._Storage(0);
}

uint64_t type metadata accessor for PrecipitationAveragesDetailViewModel._Storage(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E69CC8);
}

void sub_1002DE500()
{
  type metadata accessor for PrecipitationAveragesHeroChartViewModel();
  if (v0 <= 0x3F)
  {
    sub_1002DE6F0(319, (unint64_t *)&qword_100E69CD8, (void (*)(uint64_t))type metadata accessor for ConditionDetailPlatterViewModel);
    if (v1 <= 0x3F)
    {
      type metadata accessor for MonthlyAveragesChartModel();
      if (v2 <= 0x3F)
      {
        sub_1002DE6F0(319, (unint64_t *)&qword_100E69CE0, (void (*)(uint64_t))type metadata accessor for DetailComponentContainerViewModel);
        if (v3 <= 0x3F)
        {
          type metadata accessor for ConditionDetailPlatterViewModel(319);
          if (v4 <= 0x3F)
          {
            type metadata accessor for LocationDetailEntity();
            if (v5 <= 0x3F) {
              swift_updateClassMetadata2();
            }
          }
        }
      }
    }
  }
}

void sub_1002DE6F0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1002DE744()
{
  sub_1002DD934();
  return v0 & 1;
}

void sub_1002DE768()
{
  sub_100162EA0();
  uint64_t v37 = v3;
  uint64_t v38 = v4;
  uint64_t v39 = v6;
  uint64_t v40 = v5;
  uint64_t v41 = v8;
  uint64_t v42 = v7;
  uint64_t v35 = v9;
  uint64_t v36 = type metadata accessor for LocationDetailEntity();
  sub_100179C0C();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_1001648EC(v13, (uint64_t)v31);
  uint64_t v14 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_10011BFD8();
  uint64_t v16 = sub_10017DF08(&qword_100E66E28);
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  sub_10016279C();
  uint64_t v32 = v0;
  uint64_t v18 = type metadata accessor for MonthlyAveragesChartModel();
  uint64_t v19 = sub_100109308(v18);
  __chkstk_darwin(v19);
  sub_10008B8C0();
  uint64_t v33 = v2;
  uint64_t v20 = sub_10017DF08(&qword_100E66E40);
  uint64_t v21 = sub_100109308(v20);
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v31 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = v24;
  __chkstk_darwin(v22);
  uint64_t v25 = sub_1002EF358();
  uint64_t v26 = sub_100109308(v25);
  __chkstk_darwin(v26);
  sub_10011C760();
  sub_10011818C();
  sub_1001B49E8(v42, v1, &qword_100E66E40);
  sub_10011818C();
  sub_1001B49E8(v40, v0, &qword_100E66E28);
  uint64_t v27 = v39;
  sub_10011818C();
  uint64_t v28 = v37;
  sub_1001B49E8(v37, (uint64_t)v24, &qword_100E66E40);
  uint64_t v29 = v38;
  uint64_t v30 = v36;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v34, v38, v36);
  type metadata accessor for PrecipitationAveragesDetailViewModel._Storage(0);
  sub_100181044();
  sub_1002DD768();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v29, v30);
  sub_100178110(v28, &qword_100E66E40);
  sub_1001184F4(v27, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  sub_100178110(v40, &qword_100E66E28);
  sub_1001184F4(v41, (void (*)(void))type metadata accessor for MonthlyAveragesChartModel);
  sub_100178110(v42, &qword_100E66E40);
  sub_1001184F4(v35, (void (*)(void))type metadata accessor for PrecipitationAveragesHeroChartViewModel);
  sub_1002EE694();
  sub_100162694();
}

uint64_t sub_1002DEAB0()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for PrecipitationAveragesDetailViewModel._Storage(v0);
  sub_100127A9C();
  sub_1002DD934();
  return v1 & 1;
}

uint64_t sub_1002DEAE0()
{
  return sub_1002DEAB0();
}

void sub_1002DEAEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,char a35)
{
  sub_1002EEF6C();
  uint64_t v51 = v36;
  char v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  char v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  *(void *)(v35 + 280) = 0;
  *(void *)(v35 + 288) = 0;
  memcpy((void *)(v35 + 16), v49, 0xC2uLL);
  *(void *)(v35 + 216) = v48;
  *(void *)(v35 + 224) = v46;
  *(unsigned char *)(v35 + 232) = v44;
  *(void *)(v35 + 240) = v42;
  *(void *)(v35 + 248) = v40;
  *(unsigned char *)(v35 + 256) = v38;
  *(void *)(v35 + 264) = v51;
  *(void *)(v35 + 272) = a27;
  swift_bridgeObjectRelease();
  *(void *)(v35 + 280) = a28;
  *(void *)(v35 + 288) = a29;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v35 + 296) = a30;
  *(void *)(v35 + 304) = a31;
  *(void *)(v35 + 312) = a32;
  type metadata accessor for URL();
  sub_100162E4C();
  sub_1001190D4();
  v50();
  *(unsigned char *)(v35 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_showOnlineFeedbackSafariView) = a34;
  *(unsigned char *)(v35 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_entrySource) = a35 & 1;
  sub_100199BA8();
}

void sub_1002DEC24()
{
  sub_100162EA0();
  sub_10017C924();
  uint64_t v2 = type metadata accessor for URL();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_100162E88();
  memcpy(v21, (const void *)(v1 + 16), 0xC2uLL);
  uint64_t v6 = *(void *)(v1 + 224);
  uint64_t v20 = *(void *)(v1 + 216);
  uint64_t v18 = *(void *)(v1 + 240);
  uint64_t v14 = *(void *)(v1 + 248);
  uint64_t v7 = *(void *)(v1 + 272);
  uint64_t v19 = *(void *)(v1 + 264);
  uint64_t v8 = *(void *)(v1 + 288);
  uint64_t v17 = *(void *)(v1 + 280);
  HIDWORD(v16) = *(unsigned __int8 *)(v1 + 296);
  uint64_t v9 = *(void *)(v1 + 304);
  uint64_t v10 = *(void *)(v1 + 312);
  LODWORD(v16) = *(unsigned __int8 *)(v1 + 256);
  HIDWORD(v15) = *(unsigned __int8 *)(v1 + 232);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v0, v1 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_onlineFeedbackURL, v2);
  LOBYTE(v4) = *(unsigned char *)(v1
                        + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_showOnlineFeedbackSafariView);
  LOBYTE(v2) = *(unsigned char *)(v1 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_entrySource);
  swift_allocObject();
  sub_1002E728C((uint64_t)v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  BYTE1(v12) = v2;
  LOBYTE(v12) = v4;
  LOBYTE(v11) = BYTE4(v16);
  sub_1002DEAEC((uint64_t)v21, v20, v6, HIDWORD(v15), v18, v14, v16, v19, v7, v17, v8, v11, v9, v10, v0, v12, v13, v14, v15,
    v16,
    v17,
    v18,
    v19,
    v20,
    v21[0],
    v21[1],
    v21[2],
    v21[3],
    v21[4],
    v21[5],
    v21[6],
    v21[7],
    v21[8],
    v21[9],
    SBYTE1(v21[9]));
  sub_1002EE694();
  sub_100162694();
}

void sub_1002DEE14()
{
  sub_100162EA0();
  uint64_t v4 = v3;
  sub_1001191B4();
  uint64_t v5 = type metadata accessor for URL();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_100158494();
  __chkstk_darwin(v9);
  sub_100188F80();
  memcpy(v27, (const void *)(v0 + 16), 0xC2uLL);
  memcpy(v28, (const void *)(v4 + 16), 0xC2uLL);
  sub_1002E728C((uint64_t)v27);
  sub_1002E728C((uint64_t)v28);
  char v10 = sub_1006D7CA0((uint64_t)v27, (uint64_t)v28);
  sub_1002E7344((uint64_t)v28);
  sub_1002E7344((uint64_t)v27);
  if (v10)
  {
    BOOL v11 = *(void *)(v0 + 216) == *(void *)(v4 + 216) && *(void *)(v0 + 224) == *(void *)(v4 + 224);
    if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)())
      && (sub_10088C078(*(unsigned char *)(v0 + 232), *(unsigned char *)(v4 + 232)) & 1) != 0)
    {
      BOOL v12 = *(void *)(v0 + 240) == *(void *)(v4 + 240) && *(void *)(v0 + 248) == *(void *)(v4 + 248);
      if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)()) && (sub_10088C16C())
      {
        uint64_t v13 = *(void *)(v0 + 272);
        uint64_t v14 = *(void *)(v4 + 272);
        if (v13)
        {
          if (!v14) {
            goto LABEL_36;
          }
          BOOL v15 = *(void *)(v0 + 264) == *(void *)(v4 + 264) && v13 == v14;
          if (!v15 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            goto LABEL_36;
          }
        }
        else if (v14)
        {
          goto LABEL_36;
        }
        uint64_t v16 = *(void *)(v0 + 288);
        uint64_t v17 = *(void *)(v4 + 288);
        if (v16)
        {
          if (!v17) {
            goto LABEL_36;
          }
          BOOL v18 = *(void *)(v0 + 280) == *(void *)(v4 + 280) && v16 == v17;
          if (!v18 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            goto LABEL_36;
          }
        }
        else if (v17)
        {
          goto LABEL_36;
        }
        if (sub_10088C224(*(unsigned char *)(v0 + 296), *(unsigned char *)(v4 + 296)))
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v19 = sub_1001195A8();
          char v21 = sub_1002DF2F0(v19, v20);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v21)
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v22 = sub_1001195A8();
            char v24 = sub_1002DF6B4(v22, v23);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v24)
            {
              uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
              v25(v2, v0 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_onlineFeedbackURL, v5);
              v25(v1, v4 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_onlineFeedbackURL, v5);
              sub_10011958C();
              static URL.== infix(_:_:)();
              uint64_t v26 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
              v26(v1, v5);
              v26(v2, v5);
            }
          }
        }
      }
    }
  }
LABEL_36:
  sub_100162694();
}

void sub_1002DF11C(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return;
  }
  sub_100214EF8();
  if (!v4) {
    return;
  }
  int64_t v5 = 0;
  uint64_t v6 = a1 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a1 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = a2 + 56;
  do
  {
LABEL_8:
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return;
    }
    if (v14 >= v10) {
      return;
    }
    ++v5;
    if (*(void *)(v6 + 8 * v14)) {
      goto LABEL_23;
    }
    int64_t v5 = v14 + 1;
    if (v14 + 1 >= v10) {
      return;
    }
    if (*(void *)(v6 + 8 * v5)) {
      goto LABEL_23;
    }
    int64_t v5 = v14 + 2;
    if (v14 + 2 >= v10) {
      return;
    }
    if (*(void *)(v6 + 8 * v5)) {
      goto LABEL_23;
    }
    int64_t v15 = v14 + 3;
    if (v15 >= v10) {
      return;
    }
    if (!*(void *)(v6 + 8 * v15))
    {
      while (1)
      {
        int64_t v5 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_33;
        }
        if (v5 >= v10) {
          return;
        }
        ++v15;
        if (*(void *)(v6 + 8 * v5)) {
          goto LABEL_23;
        }
      }
    }
    int64_t v5 = v15;
LABEL_23:
    sub_1002EE8D4();
    unint64_t v9 = v17 & v16;
    unint64_t v13 = v18 + (v5 << 6);
LABEL_24:
    Swift::UInt v19 = *(unsigned __int8 *)(*(void *)(a1 + 48) + v13);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v19);
    Swift::Int v20 = Hasher._finalize()();
    uint64_t v21 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v22 = v20 & ~v21;
    if (((*(void *)(v11 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
      return;
    }
    uint64_t v23 = *(void *)(a2 + 48);
  }
  while (*(unsigned __int8 *)(v23 + v22) == v19);
  uint64_t v24 = ~v21;
  while (1)
  {
    unint64_t v22 = (v22 + 1) & v24;
    if (((*(void *)(v11 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
      break;
    }
    if (*(unsigned __int8 *)(v23 + v22) == v19) {
      goto LABEL_8;
    }
  }
}

uint64_t sub_1002DF2F0(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16))
  {
    int64_t v4 = 0;
    uint64_t v5 = *(void *)(a1 + 56);
    uint64_t v27 = a1 + 56;
    uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & v5;
    int64_t v28 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v9 = a2 + 56;
    if ((v7 & v5) == 0) {
      goto LABEL_8;
    }
LABEL_7:
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (unint64_t i = v10 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v4 << 6))
    {
      uint64_t v15 = *(unsigned __int8 *)(*(void *)(a1 + 48) + i);
      Hasher.init(_seed:)();
      sub_100653F10(v15);
      String.hash(into:)();
      swift_bridgeObjectRelease();
      Swift::Int v16 = Hasher._finalize()();
      uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v18 = v16 & ~v17;
      if (((*(void *)(v9 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
        return 0;
      }
      int64_t v29 = v4;
      uint64_t v19 = ~v17;
      while (1)
      {
        unint64_t v20 = 0xE800000000000000;
        uint64_t v21 = 0x73776F626E696172;
        switch(*(unsigned char *)(*(void *)(a2 + 48) + v18))
        {
          case 1:
            uint64_t v21 = 0x6E696E746867696CLL;
            unint64_t v20 = 0xE900000000000067;
            break;
          case 2:
            unint64_t v20 = 0xE400000000000000;
            uint64_t v21 = 1818845544;
            break;
          case 3:
            unint64_t v20 = 0xE500000000000000;
            uint64_t v21 = 0x656B6F6D73;
            break;
          case 4:
            unint64_t v20 = 0xE300000000000000;
            uint64_t v21 = 6778726;
            break;
          case 5:
            unint64_t v20 = 0xE400000000000000;
            uint64_t v21 = 1702519144;
            break;
          default:
            break;
        }
        unint64_t v22 = 0xE800000000000000;
        uint64_t v23 = 0x73776F626E696172;
        switch(v15)
        {
          case 1:
            uint64_t v23 = 0x6E696E746867696CLL;
            unint64_t v22 = 0xE900000000000067;
            break;
          case 2:
            unint64_t v22 = 0xE400000000000000;
            uint64_t v23 = 1818845544;
            break;
          case 3:
            unint64_t v22 = 0xE500000000000000;
            uint64_t v23 = 0x656B6F6D73;
            break;
          case 4:
            unint64_t v22 = 0xE300000000000000;
            uint64_t v23 = 6778726;
            break;
          case 5:
            unint64_t v22 = 0xE400000000000000;
            uint64_t v23 = 1702519144;
            break;
          default:
            break;
        }
        if (v21 == v23 && v20 == v22) {
          break;
        }
        char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v25) {
          goto LABEL_44;
        }
        unint64_t v18 = (v18 + 1) & v19;
        if (((*(void *)(v9 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
          return 0;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_44:
      int64_t v4 = v29;
      if (v8) {
        goto LABEL_7;
      }
LABEL_8:
      int64_t v12 = v4 + 1;
      if (__OFADD__(v4, 1)) {
        break;
      }
      if (v12 >= v28) {
        return 1;
      }
      unint64_t v13 = *(void *)(v27 + 8 * v12);
      ++v4;
      if (!v13)
      {
        int64_t v4 = v12 + 1;
        if (v12 + 1 >= v28) {
          return 1;
        }
        unint64_t v13 = *(void *)(v27 + 8 * v4);
        if (!v13)
        {
          int64_t v4 = v12 + 2;
          if (v12 + 2 >= v28) {
            return 1;
          }
          unint64_t v13 = *(void *)(v27 + 8 * v4);
          if (!v13)
          {
            int64_t v14 = v12 + 3;
            if (v14 >= v28) {
              return 1;
            }
            unint64_t v13 = *(void *)(v27 + 8 * v14);
            if (!v13)
            {
              while (1)
              {
                int64_t v4 = v14 + 1;
                if (__OFADD__(v14, 1)) {
                  break;
                }
                if (v4 >= v28) {
                  return 1;
                }
                unint64_t v13 = *(void *)(v27 + 8 * v4);
                ++v14;
                if (v13) {
                  goto LABEL_21;
                }
              }
LABEL_49:
              __break(1u);
              JUMPOUT(0x1002DF684);
            }
            int64_t v4 = v14;
          }
        }
      }
LABEL_21:
      unint64_t v8 = (v13 - 1) & v13;
    }
    __break(1u);
    goto LABEL_49;
  }
  return 0;
}

uint64_t sub_1002DF6B4(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16))
  {
    int64_t v4 = 0;
    uint64_t v5 = *(void *)(a1 + 56);
    uint64_t v29 = a1 + 56;
    uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & v5;
    int64_t v30 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v9 = a2 + 56;
    if ((v7 & v5) == 0) {
      goto LABEL_8;
    }
LABEL_7:
    unint64_t v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    for (unint64_t i = v10 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v4 << 6))
    {
      uint64_t v15 = *(unsigned __int8 *)(*(void *)(a1 + 48) + i);
      Hasher.init(_seed:)();
      sub_100654004(v15);
      String.hash(into:)();
      swift_bridgeObjectRelease();
      Swift::Int v16 = Hasher._finalize()();
      uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v18 = v16 & ~v17;
      if (((*(void *)(v9 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
        return 0;
      }
      int64_t v31 = v4;
      uint64_t v19 = ~v17;
      while (1)
      {
        unint64_t v20 = 0xE800000000000000;
        unint64_t v21 = 0x746E617361656C70;
        switch(*(unsigned char *)(*(void *)(a2 + 48) + v18))
        {
          case 1:
            unint64_t v21 = 0x617361656C706E75;
            unint64_t v20 = 0xEA0000000000746ELL;
            break;
          case 2:
            unint64_t v20 = 0xE300000000000000;
            unint64_t v21 = 7630696;
            break;
          case 3:
            unint64_t v20 = 0xE600000000000000;
            unint64_t v21 = 0x796C6C696863;
            break;
          case 4:
            unint64_t v20 = 0xE500000000000000;
            uint64_t v22 = 1734833517;
            goto LABEL_31;
          case 5:
            unint64_t v20 = 0xE300000000000000;
            unint64_t v21 = 7959140;
            break;
          case 6:
            unint64_t v20 = 0xE500000000000000;
            uint64_t v22 = 1684957559;
LABEL_31:
            unint64_t v21 = v22 & 0xFFFF0000FFFFFFFFLL | 0x7900000000;
            break;
          case 7:
            unint64_t v20 = 0xE400000000000000;
            unint64_t v21 = 1835819363;
            break;
          default:
            break;
        }
        unint64_t v23 = 0xE800000000000000;
        unint64_t v24 = 0x746E617361656C70;
        switch(v15)
        {
          case 1:
            unint64_t v24 = 0x617361656C706E75;
            unint64_t v23 = 0xEA0000000000746ELL;
            break;
          case 2:
            unint64_t v23 = 0xE300000000000000;
            unint64_t v24 = 7630696;
            break;
          case 3:
            unint64_t v23 = 0xE600000000000000;
            unint64_t v24 = 0x796C6C696863;
            break;
          case 4:
            unint64_t v23 = 0xE500000000000000;
            uint64_t v25 = 1734833517;
            goto LABEL_40;
          case 5:
            unint64_t v23 = 0xE300000000000000;
            unint64_t v24 = 7959140;
            break;
          case 6:
            unint64_t v23 = 0xE500000000000000;
            uint64_t v25 = 1684957559;
LABEL_40:
            unint64_t v24 = v25 & 0xFFFF0000FFFFFFFFLL | 0x7900000000;
            break;
          case 7:
            unint64_t v23 = 0xE400000000000000;
            unint64_t v24 = 1835819363;
            break;
          default:
            break;
        }
        if (v21 == v24 && v20 == v23) {
          break;
        }
        char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v27) {
          goto LABEL_50;
        }
        unint64_t v18 = (v18 + 1) & v19;
        if (((*(void *)(v9 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
          return 0;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_50:
      int64_t v4 = v31;
      if (v8) {
        goto LABEL_7;
      }
LABEL_8:
      int64_t v12 = v4 + 1;
      if (__OFADD__(v4, 1)) {
        break;
      }
      if (v12 >= v30) {
        return 1;
      }
      unint64_t v13 = *(void *)(v29 + 8 * v12);
      ++v4;
      if (!v13)
      {
        int64_t v4 = v12 + 1;
        if (v12 + 1 >= v30) {
          return 1;
        }
        unint64_t v13 = *(void *)(v29 + 8 * v4);
        if (!v13)
        {
          int64_t v4 = v12 + 2;
          if (v12 + 2 >= v30) {
            return 1;
          }
          unint64_t v13 = *(void *)(v29 + 8 * v4);
          if (!v13)
          {
            int64_t v14 = v12 + 3;
            if (v14 >= v30) {
              return 1;
            }
            unint64_t v13 = *(void *)(v29 + 8 * v14);
            if (!v13)
            {
              while (1)
              {
                int64_t v4 = v14 + 1;
                if (__OFADD__(v14, 1)) {
                  break;
                }
                if (v4 >= v30) {
                  return 1;
                }
                unint64_t v13 = *(void *)(v29 + 8 * v4);
                ++v14;
                if (v13) {
                  goto LABEL_21;
                }
              }
LABEL_55:
              __break(1u);
              JUMPOUT(0x1002DFA90);
            }
            int64_t v4 = v14;
          }
        }
      }
LABEL_21:
      unint64_t v8 = (v13 - 1) & v13;
    }
    __break(1u);
    goto LABEL_55;
  }
  return 0;
}

uint64_t sub_1002DFAD0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x8000000100C99000
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000100C99020 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000100C99040 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000100C99060 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    BOOL v5 = a1 == 0x69746152646E6977 && a2 == 0xEA0000000000676ELL;
    if (v5 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else
    {
      BOOL v6 = a1 == 0x696C617551726961 && a2 == 0xEF656C7469547974;
      if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else if (a1 == 0xD000000000000019 && a2 == 0x8000000100C99090 {
             || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      }
      {
        swift_bridgeObjectRelease();
        return 6;
      }
      else if (a1 == 0xD000000000000010 && a2 == 0x8000000100C990B0 {
             || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      }
      {
        swift_bridgeObjectRelease();
        return 7;
      }
      else
      {
        BOOL v7 = a1 == 0x6E6F43726568746FLL && a2 == 0xEF736E6F69746964;
        if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 8;
        }
        else
        {
          BOOL v8 = a1 == 0x7470697263736564 && a2 == 0xEC000000736E6F69;
          if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 9;
          }
          else if (a1 == 0xD000000000000011 && a2 == 0x8000000100C990D0 {
                 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          }
          {
            swift_bridgeObjectRelease();
            return 10;
          }
          else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000100C990F0 {
                 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          }
          {
            swift_bridgeObjectRelease();
            return 11;
          }
          else if (a1 == 0x756F537972746E65 && a2 == 0xEB00000000656372)
          {
            swift_bridgeObjectRelease();
            return 12;
          }
          else
          {
            char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v10) {
              return 12;
            }
            else {
              return 13;
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1002E0020()
{
  return 13;
}

unint64_t sub_1002E0028(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 2:
    case 10:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0x69746152646E6977;
      break;
    case 5:
      unint64_t result = 0x696C617551726961;
      break;
    case 6:
      unint64_t result = 0xD000000000000019;
      break;
    case 7:
      unint64_t result = 0xD000000000000010;
      break;
    case 8:
      unint64_t result = 0x6E6F43726568746FLL;
      break;
    case 9:
      unint64_t result = 0x7470697263736564;
      break;
    case 11:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 12:
      unint64_t result = 0x756F537972746E65;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1002E01C4()
{
  return sub_1002E0028(*v0);
}

uint64_t sub_1002E01CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002DFAD0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002E01F4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1002E0020();
  *a1 = result;
  return result;
}

uint64_t sub_1002E021C(uint64_t a1)
{
  unint64_t v2 = sub_1002E7954();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002E0258(uint64_t a1)
{
  unint64_t v2 = sub_1002E7954();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002E0294()
{
  memcpy(__dst, (const void *)(v0 + 16), 0xC2uLL);
  sub_1002E7344((uint64_t)__dst);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for URL();
  sub_100162E4C();
  sub_100162F0C();
  v1();
  return v0;
}

uint64_t sub_1002E033C()
{
  return sub_1002E49E8((void (*)(void))sub_1002E0294);
}

uint64_t sub_1002E0354()
{
  return type metadata accessor for ReportWeatherContentViewModel._Storage(0);
}

uint64_t type metadata accessor for ReportWeatherContentViewModel._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E69DB8);
}

uint64_t sub_1002E037C()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_1002E0458()
{
  sub_10016314C();
  sub_100162708();
  uint64_t v3 = type metadata accessor for URL();
  sub_100179C0C();
  uint64_t v15 = v4;
  __chkstk_darwin(v5);
  sub_100125FF8();
  sub_10017DF08(&qword_100E6A5F8);
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_10018E010((void *)v0);
  sub_1002E7954();
  sub_1002EF21C();
  memcpy(v16, (const void *)(v0 + 16), 0xC2uLL);
  sub_1002E79A0();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (v1)
  {
    uint64_t v9 = sub_1002EF248();
    v10(v9);
  }
  else
  {
    sub_1002EEB34(1);
    KeyedEncodingContainer.encode(_:forKey:)();
    swift_bridgeObjectRelease();
    sub_1002EED8C(*(unsigned char *)(v0 + 232));
    sub_1002E79EC();
    sub_1002EECD4();
    sub_1002EEB34(3);
    KeyedEncodingContainer.encode(_:forKey:)();
    swift_bridgeObjectRelease();
    sub_1002EED8C(*(unsigned char *)(v0 + 256));
    sub_1002E7A38();
    sub_1002EECD4();
    uint64_t v12 = *(void *)(v0 + 264);
    sub_1002EEB34(5);
    sub_1002EEFD0();
    if (v12 || (swift_bridgeObjectRelease(), uint64_t v13 = *(void *)(v0 + 280), sub_1002EEB34(6), sub_1002EEFD0(), v13))
    {
      sub_100127A9C();
      sub_100162F0C();
      v11();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1002EED8C(*(unsigned char *)(v0 + 296));
      sub_1002E7A84();
      sub_1002EECD4();
      v16[0] = *(void *)(v0 + 304);
      sub_10017DF08(&qword_100E6A628);
      sub_1002E7EFC(&qword_100E6A630, &qword_100E6A628, (void (*)(void))sub_1002E7AD0);
      sub_1002EED64();
      v16[0] = *(void *)(v0 + 312);
      sub_10017DF08(&qword_100E6A640);
      sub_1002E7EFC(&qword_100E6A648, &qword_100E6A640, (void (*)(void))sub_1002E7B1C);
      sub_1002EED64();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v2, v0 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_onlineFeedbackURL, v3);
      sub_1002EED8C(10);
      sub_100127D40(&qword_100E6A658, 255, (void (*)(uint64_t))&type metadata accessor for URL);
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      sub_1001649A8();
      v14();
      sub_1002EED8C(11);
      KeyedEncodingContainer.encode(_:forKey:)();
      sub_1002EED8C(*(unsigned char *)(v0 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_entrySource));
      sub_1002E7B68();
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      (*(void (**)(void))(v7 + 8))(0);
    }
  }
  sub_100163164();
}

uint64_t sub_1002E0984(uint64_t a1)
{
  return sub_1002C96F8(a1, (void (*)(uint64_t))sub_1002E09B0);
}

void sub_1002E09B0()
{
  sub_10016314C();
  uint64_t v3 = v0;
  uint64_t v5 = v4;
  sub_1002EE824();
  type metadata accessor for URL();
  sub_100179C0C();
  uint64_t v17 = v7;
  uint64_t v18 = v6;
  __chkstk_darwin(v6);
  sub_10016279C();
  sub_10017DF08(&qword_100E6A740);
  sub_100179C0C();
  int v9 = v8;
  __chkstk_darwin(v10);
  sub_10008B8C0();
  *(_OWORD *)(v3 + 264) = 0u;
  *(_OWORD *)(v3 + 280) = 0u;
  uint64_t v11 = v5[4];
  sub_10017F2E8(v5);
  sub_1002E7954();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    sub_1002EEBFC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v9)
    {
      swift_bridgeObjectRelease();
      if (!v11)
      {
LABEL_5:
        if (!v5)
        {
LABEL_7:
          sub_1002EE824();
          swift_deallocPartialClassInstance();
          goto LABEL_8;
        }
LABEL_6:
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v3 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_onlineFeedbackURL, v18);
        goto LABEL_7;
      }
    }
    else if (!v11)
    {
      goto LABEL_5;
    }
    swift_bridgeObjectRelease();
    if (!v5) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  sub_1002E7D80();
  sub_1002EE920();
  memcpy((void *)(v3 + 16), v20, 0xC2uLL);
  *(void *)(v3 + 216) = sub_1002EEF88(1);
  *(void *)(v3 + 224) = v12;
  sub_1002E7DCC();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  *(unsigned char *)(v3 + 232) = v19;
  *(void *)(v3 + 240) = sub_1002EEF88(3);
  *(void *)(v3 + 248) = v13;
  sub_1002E7E18();
  sub_1002EE920();
  *(unsigned char *)(v3 + 256) = v19;
  *(void *)(v3 + 264) = sub_1002EEFAC(5);
  *(void *)(v3 + 272) = v14;
  swift_bridgeObjectRelease();
  *(void *)(v3 + 280) = sub_1002EEFAC(6);
  *(void *)(v3 + 288) = v15;
  swift_bridgeObjectRelease();
  sub_1002E7E64();
  sub_1002EE920();
  *(unsigned char *)(v3 + 296) = v19;
  sub_10017DF08(&qword_100E6A628);
  sub_1002E7EFC(&qword_100E6A768, &qword_100E6A628, (void (*)(void))sub_1002E7EB0);
  sub_1002EE9AC();
  *(void *)(v3 + 304) = v19;
  sub_10017DF08(&qword_100E6A640);
  sub_1002E7EFC(&qword_100E6A778, &qword_100E6A640, (void (*)(void))sub_1002E7F68);
  sub_1002EE9AC();
  *(void *)(v3 + 312) = v19;
  sub_100127D40(&qword_100E6A788, 255, (void (*)(uint64_t))&type metadata accessor for URL);
  sub_1002EE920();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v3 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_onlineFeedbackURL, v2, v18);
  *(unsigned char *)(v3 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_showOnlineFeedbackSafariView) = KeyedDecodingContainer.decode(_:forKey:)() & 1;
  sub_1002E7FB4();
  sub_1002EE920();
  sub_100162F0C();
  v16();
  *(unsigned char *)(v3 + OBJC_IVAR____TtCV7Weather29ReportWeatherContentViewModel8_Storage_entrySource) = 11;
LABEL_8:
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v5);
  sub_100163164();
}

uint64_t sub_1002E0FF0()
{
  sub_1002DEE14();
  return v0 & 1;
}

void sub_1002E1014(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  sub_10089446C(a1, a2, a3, a4, a5, a6, a7, a8, v12, v13, SWORD2(v13), SBYTE6(v13), SHIBYTE(v13));
  if (!v9) {
    *a9 = v11;
  }
}

void sub_1002E1040()
{
}

uint64_t sub_1002E1064@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1002E0984(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

void sub_1002E1090()
{
}

void *sub_1002E10B4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  memcpy(__dst, (const void *)(a1 + 16), 0xC2uLL);
  sub_1002E728C((uint64_t)__dst);
  return memcpy(a2, __dst, 0xC2uLL);
}

uint64_t sub_1002E1104()
{
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_1002DEC24();
    *(void *)uint64_t v0 = v1;
    swift_release();
  }
  memcpy(__dst, (const void *)(*(void *)v0 + 16), 0xC2uLL);
  uint64_t v2 = (void *)sub_100127A9C();
  memcpy(v2, v3, 0xC2uLL);
  return sub_1002E7344((uint64_t)__dst);
}

uint64_t sub_1002E1188(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 232);
}

uint64_t sub_1002E1190()
{
  uint64_t result = sub_1001A4C38();
  if ((result & 1) == 0)
  {
    sub_1002DEC24();
    uint64_t result = sub_1002EF090(v3);
  }
  *(unsigned char *)(*(void *)v0 + 232) = v1;
  return result;
}

uint64_t sub_1002E11D0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 256);
}

uint64_t sub_1002E11D8()
{
  uint64_t result = sub_1001A4C38();
  if ((result & 1) == 0)
  {
    sub_1002DEC24();
    uint64_t result = sub_1002EF090(v3);
  }
  *(unsigned char *)(*(void *)v0 + 256) = v1;
  return result;
}

uint64_t sub_1002E1218(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 296);
}

uint64_t sub_1002E1220()
{
  uint64_t result = sub_1001A4C38();
  if ((result & 1) == 0)
  {
    sub_1002DEC24();
    uint64_t result = sub_1002EF090(v3);
  }
  *(unsigned char *)(*(void *)v0 + 296) = v1;
  return result;
}

uint64_t sub_1002E1260()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for ReportWeatherContentViewModel._Storage(v0);
  sub_100127A9C();
  sub_1002DEE14();
  return v1 & 1;
}

void StubLocalSearchRequestService.Errors.hash(into:)()
{
}

uint64_t sub_1002E12B8()
{
  return 0x656761726F74735FLL;
}

void sub_1002E12D0()
{
  sub_10017F304();
  sub_100127B7C();
  sub_10017DF08(&qword_100E6AD60);
  sub_100179C0C();
  __chkstk_darwin(v0);
  sub_100164F78();
  sub_1002EBC0C();
  sub_100162840();
  type metadata accessor for ReportWeatherContentViewModel._Storage(0);
  sub_100127D40(&qword_100E6AD68, 255, (void (*)(uint64_t))type metadata accessor for ReportWeatherContentViewModel._Storage);
  sub_1002EE62C();
  sub_100164F40();
  v1();
  sub_1002EEAFC();
  sub_100182EF8();
}

void sub_1002E13DC()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100E6AD48);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_1002EBC0C();
  sub_100163110();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  }
  else
  {
    type metadata accessor for ReportWeatherContentViewModel._Storage(0);
    sub_100127D40(&qword_100E6AD58, 255, (void (*)(uint64_t))type metadata accessor for ReportWeatherContentViewModel._Storage);
    sub_10017F988();
    uint64_t v3 = sub_100179EBC();
    v4(v3);
    sub_1001D1374();
  }
  sub_100184924();
  sub_100182EF8();
}

uint64_t sub_1002E14EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002E1E10(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1002E1518(uint64_t a1)
{
  unint64_t v2 = sub_1002EBC0C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002E1554(uint64_t a1)
{
  unint64_t v2 = sub_1002EBC0C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002E1590()
{
  return sub_1002E1260();
}

void sub_1002E159C(void *a1@<X8>)
{
  sub_100894B3C();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_1002E15C8()
{
}

void sub_1002E15E4(void *a1@<X8>)
{
  sub_1002E13DC();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_1002E1610()
{
}

void sub_1002E162C()
{
  sub_100162EA0();
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v24 = v0[3];
  uint64_t v25 = v0[7];
  uint64_t v4 = v0[9];
  uint64_t v26 = v0[4];
  uint64_t v27 = v0[8];
  uint64_t v5 = v0[10];
  uint64_t v6 = v0[11];
  uint64_t v8 = v0[12];
  uint64_t v7 = v0[13];
  uint64_t v11 = v9[2];
  uint64_t v10 = v9[3];
  uint64_t v12 = v9[4];
  uint64_t v13 = v9[5];
  uint64_t v15 = v9[6];
  uint64_t v14 = v9[7];
  uint64_t v17 = v9[8];
  uint64_t v16 = v9[9];
  uint64_t v19 = v9[10];
  uint64_t v18 = v9[11];
  uint64_t v21 = v9[12];
  uint64_t v20 = v9[13];
  if (v1 < 0)
  {
    v28[0] = v1 & 1;
    uint64_t v29 = v24;
    uint64_t v30 = v26;
    uint64_t v31 = v2;
    uint64_t v32 = v3;
    uint64_t v33 = v25;
    uint64_t v34 = v27;
    uint64_t v35 = v4;
    uint64_t v36 = v5;
    uint64_t v37 = v6;
    uint64_t v38 = v8;
    uint64_t v39 = v7;
    if ((v11 & 0x8000000000000000) == 0) {
      goto LABEL_8;
    }
    v40[0] = v11 & 1;
    uint64_t v41 = v10;
    uint64_t v42 = v12;
    uint64_t v43 = v13;
    uint64_t v44 = v15;
    uint64_t v45 = v14;
    uint64_t v46 = v17;
    uint64_t v47 = v16;
    uint64_t v48 = v19;
    uint64_t v49 = v18;
    uint64_t v50 = v21;
    uint64_t v51 = v20;
    sub_100274EDC(v11);
    sub_100274EDC(v1);
    sub_1007003E0((uint64_t)v28, (uint64_t)v40);
  }
  else
  {
    if (v11 < 0) {
      goto LABEL_8;
    }
    type metadata accessor for ReportWeatherContentViewModel._Storage(0);
    sub_100274EDC(v11);
    uint64_t v22 = sub_1002EF248();
    sub_100274EDC(v22);
    sub_1002DEE14();
  }
  sub_100274E38(v11);
  uint64_t v23 = sub_1002EF248();
  sub_100274E38(v23);
LABEL_8:
  sub_100162694();
}

uint64_t sub_1002E18EC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6C65646F6DLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_100182F1C();
    char v4 = v2 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_1002E1964()
{
  return 0x6C65646F6DLL;
}

uint64_t sub_1002E1978@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1002E18EC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1002E19A4(uint64_t a1)
{
  unint64_t v2 = sub_1002E7BB4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002E19E0(uint64_t a1)
{
  unint64_t v2 = sub_1002E7BB4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002E1A1C()
{
  sub_100274E38(*(void *)(v0 + 16));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ReportWeatherViewState._Storage()
{
  return self;
}

void sub_1002E1A9C()
{
  sub_10017F304();
  uint64_t v1 = v0;
  sub_10017DF08(&qword_100E6A668);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10017F2E8(v1);
  sub_1002E7BB4();
  sub_100162840();
  sub_1002E7C00();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  sub_100164F40();
  v3();
  sub_1002EEAFC();
  sub_100182EF8();
}

uint64_t sub_1002E1BA8()
{
  sub_1002EEEA4();
  swift_allocObject();
  sub_1002EF05C();
  sub_1002E1BE8();
  return v0;
}

void sub_1002E1BE8()
{
  sub_10016314C();
  uint64_t v3 = v2;
  sub_10017C924();
  sub_10017DF08(&qword_100E6A730);
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_10018E010(v3);
  sub_1002E7BB4();
  sub_1002EE988();
  if (v1)
  {
    sub_100181E80();
    swift_deallocPartialClassInstance();
  }
  else
  {
    sub_1002E7D34();
    sub_1002EE474();
    sub_100162F0C();
    v5();
    v0[1] = v6;
    v0[2] = v7;
    v0[3] = v8;
    v0[4] = v9;
    v0[5] = v10;
    v0[6] = v11;
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v3);
  sub_1002EE5D4();
  sub_100163164();
}

uint64_t sub_1002E1D1C()
{
  sub_1002E162C();
  return v0 & 1;
}

uint64_t sub_1002E1D40@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1002E1BA8();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

void sub_1002E1D6C()
{
}

uint64_t sub_1002E1D90@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100894B90();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1002E1DBC()
{
  return sub_100894BF0();
}

uint64_t sub_1002E1DE0()
{
  sub_1001097B4();
  type metadata accessor for ReportWeatherViewState._Storage();
  sub_100127A9C();
  sub_1002E162C();
  return v0 & 1;
}

uint64_t sub_1002E1E10(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x656761726F74735FLL && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    _stringCompareWithSmolCheck(_:_:expecting:)();
    sub_100182F1C();
    char v4 = v2 ^ 1;
  }
  return v4 & 1;
}

Swift::Int StubLocalSearchRequestService.Errors.hashValue.getter()
{
  return Hasher._finalize()();
}

void sub_1002E1ED4()
{
  sub_10017F304();
  sub_1002EF178();
  sub_10017DF08(&qword_100E6ADF0);
  sub_100179C0C();
  __chkstk_darwin(v0);
  sub_100164F78();
  sub_1002EBCF0();
  sub_100162840();
  type metadata accessor for ReportWeatherViewState._Storage();
  sub_100127D40(&qword_100E6ADF8, v1, (void (*)(uint64_t))type metadata accessor for ReportWeatherViewState._Storage);
  sub_1002EE654();
  sub_100164F40();
  v2();
  sub_1002EEAFC();
  sub_100182EF8();
}

void sub_1002E1FD8()
{
  sub_10017F304();
  sub_10012B588();
  sub_10017DF08(&qword_100E6ADC0);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_10018593C();
  sub_1002EBCF0();
  sub_100163110();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0);
  }
  else
  {
    type metadata accessor for ReportWeatherViewState._Storage();
    sub_100127D40(&qword_100E6ADD0, v3, (void (*)(uint64_t))type metadata accessor for ReportWeatherViewState._Storage);
    sub_10017F988();
    uint64_t v4 = sub_100179EBC();
    v5(v4);
    sub_1001D1374();
  }
  sub_100184924();
  sub_100182EF8();
}

Swift::Int sub_1002E20E0()
{
  return Hasher._finalize()();
}

uint64_t sub_1002E2120(uint64_t a1)
{
  unint64_t v2 = sub_1002EBCF0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002E215C(uint64_t a1)
{
  unint64_t v2 = sub_1002EBCF0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002E2198()
{
  return sub_1002E1DE0();
}

void sub_1002E21A4(void *a1@<X8>)
{
  sub_1002E1FD8();
  if (!v1) {
    *a1 = v3;
  }
}

void sub_1002E21D0()
{
}

uint64_t sub_1002E21EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100894D98();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1002E2218()
{
  return sub_100894DFC();
}

void sub_1002E2234()
{
}

void sub_1002E2250()
{
  sub_100162EA0();
  uint64_t v25 = type metadata accessor for LocationComponentContainerViewModel();
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100119488();
  __chkstk_darwin(v6);
  sub_100127588();
  uint64_t v7 = sub_10017DF08(&qword_100E6A4E0);
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_100109370();
  uint64_t v9 = sub_10017DF08(&qword_100E64E80);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_1000B692C();
  __chkstk_darwin(v11);
  sub_100182F0C();
  type metadata accessor for LocationCommonViewComponents._Storage(0);
  swift_retain();
  swift_retain();
  BOOL v12 = sub_1002C8DF4();
  swift_release();
  swift_release();
  if (!v12) {
    goto LABEL_14;
  }
  uint64_t v24 = v0;
  sub_100126024();
  uint64_t v13 = sub_1002EF248();
  sub_1001B49E8(v13, v14, &qword_100E64E80);
  sub_100126024();
  uint64_t v15 = v2 + *(int *)(v7 + 48);
  sub_1001B49E8(v4, v2, &qword_100E64E80);
  sub_1002EEF14();
  uint64_t v16 = sub_100127BBC();
  sub_10012B520(v16, v17, v25);
  if (!v21)
  {
    uint64_t v18 = sub_1002EF108();
    sub_1001B49E8(v18, v19, v20);
    sub_10012B520(v15, 1, v25);
    if (!v21)
    {
      sub_10016EAB0();
      BOOL v22 = sub_100B6B9B8(v3, v1);
      sub_1001184F4(v1, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
      sub_100178110(v4, &qword_100E64E80);
      sub_1002EF2EC();
      sub_100178110(v2, &qword_100E64E80);
      if (!v22) {
        goto LABEL_14;
      }
      goto LABEL_12;
    }
    sub_100178110(v4, &qword_100E64E80);
    sub_1001184F4(v3, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
LABEL_10:
    sub_100178110(v2, &qword_100E6A4E0);
    goto LABEL_14;
  }
  sub_100178110(v4, &qword_100E64E80);
  sub_10012B520(v15, 1, v25);
  if (!v21) {
    goto LABEL_10;
  }
  sub_100178110(v2, &qword_100E64E80);
LABEL_12:
  sub_10011818C();
  sub_100128F98();
  BOOL v23 = sub_1002EF0C8();
  sub_1001184F4(v24, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_1001195C8();
  if (v23)
  {
    sub_10011818C();
    sub_100128F98();
    sub_1002EF0C8();
    sub_1001184F4(v24, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_1001195C8();
  }
LABEL_14:
  sub_100119448();
  sub_100162694();
}

uint64_t sub_1002E262C()
{
  swift_release();
  sub_100178110(v0 + OBJC_IVAR____TtCV7Weather13SevereContent8_Storage_map, &qword_100E64E80);
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather13SevereContent8_Storage_airQuality, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_100163134(OBJC_IVAR____TtCV7Weather13SevereContent8_Storage_severeAlert);
  return v0;
}

uint64_t sub_1002E26A0()
{
  return sub_100117910((void (*)(void))sub_1002E262C);
}

uint64_t sub_1002E26B8()
{
  return type metadata accessor for SevereContent._Storage(0);
}

uint64_t type metadata accessor for SevereContent._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E69F78);
}

uint64_t sub_1002E26E0()
{
  sub_1002E2250();
  return v0 & 1;
}

void sub_1002E271C()
{
}

void sub_1002E274C()
{
  sub_100162EA0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  sub_100162814();
  uint64_t v6 = type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_1001190EC();
  __chkstk_darwin(v8);
  sub_10011B090();
  uint64_t v9 = sub_10017DF08(&qword_100E64E80);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_100125FF8();
  sub_1001B49E8(v0, v1, &qword_100E64E80);
  sub_10011818C();
  sub_10011818C();
  v3(0);
  sub_100181044();
  sub_1002C502C();
  sub_1001184F4(v5, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_1002EF3E0();
  uint64_t v11 = sub_1002EED20();
  sub_100178110(v11, v12);
  sub_100162694();
}

uint64_t sub_1002E28C4()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for SevereContent._Storage(v0);
  sub_1002EE67C();
  return v1 & 1;
}

uint64_t sub_1002E2908()
{
  return sub_1002E28C4();
}

void sub_1002E2914()
{
}

uint64_t sub_1002E2938()
{
  swift_release();
  sub_100178110(v0 + OBJC_IVAR____TtCV7Weather17SevereNewsContent8_Storage_map, &qword_100E64E80);
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather17SevereNewsContent8_Storage_airQuality, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_100163134(OBJC_IVAR____TtCV7Weather17SevereNewsContent8_Storage_newsArticle);
  sub_100163134(OBJC_IVAR____TtCV7Weather17SevereNewsContent8_Storage_severeAlert);
  return v0;
}

uint64_t sub_1002E29B8()
{
  return sub_100117910((void (*)(void))sub_1002E2938);
}

uint64_t sub_1002E29D0()
{
  return type metadata accessor for SevereNewsContent._Storage(0);
}

uint64_t type metadata accessor for SevereNewsContent._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E6A040);
}

uint64_t sub_1002E29F8()
{
  sub_1002DB474();
  return v0 & 1;
}

void sub_1002E2A3C()
{
  sub_100162EA0();
  uint64_t v2 = sub_10019B0C0(v1);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_1001870B8();
  __chkstk_darwin(v4);
  sub_100181E70();
  __chkstk_darwin(v5);
  sub_100152388();
  uint64_t v6 = sub_10017DF08(&qword_100E64E80);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_1001722D8(v8, v9);
  sub_10011818C();
  sub_1002EE5B8();
  sub_1002EE51C();
  type metadata accessor for SevereNewsContent._Storage(0);
  sub_100181044();
  sub_100214D30();
  sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_1002EE770();
  sub_1002EEC18();
  sub_1002EED08();
  sub_1002EE694();
  sub_100162694();
}

uint64_t sub_1002E2B94()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for SevereNewsContent._Storage(v0);
  sub_1002EEB60();
  return v1 & 1;
}

uint64_t sub_1002E2BE0()
{
  return sub_1002E2B94();
}

void sub_1002E2BEC()
{
}

uint64_t sub_1002E2C10()
{
  swift_release();
  sub_100178110(v0 + OBJC_IVAR____TtCV7Weather19SevereNhpAqiContent8_Storage_map, &qword_100E64E80);
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather19SevereNhpAqiContent8_Storage_airQuality, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_100163134(OBJC_IVAR____TtCV7Weather19SevereNhpAqiContent8_Storage_nextHourPrecipitation);
  sub_100163134(OBJC_IVAR____TtCV7Weather19SevereNhpAqiContent8_Storage_severeAlert);
  return v0;
}

uint64_t sub_1002E2C90()
{
  return sub_100117910((void (*)(void))sub_1002E2C10);
}

uint64_t sub_1002E2CA8()
{
  return type metadata accessor for SevereNhpAqiContent._Storage(0);
}

uint64_t type metadata accessor for SevereNhpAqiContent._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E6A110);
}

uint64_t sub_1002E2CD0()
{
  sub_1002DB474();
  return v0 & 1;
}

void sub_1002E2D14()
{
  sub_100162EA0();
  uint64_t v2 = sub_10019B0C0(v1);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_1001870B8();
  __chkstk_darwin(v4);
  sub_100181E70();
  __chkstk_darwin(v5);
  sub_100152388();
  uint64_t v6 = sub_10017DF08(&qword_100E64E80);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_1001722D8(v8, v9);
  sub_10011818C();
  sub_1002EE5B8();
  sub_1002EE51C();
  type metadata accessor for SevereNhpAqiContent._Storage(0);
  sub_100181044();
  sub_100214D30();
  sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_1002EE770();
  sub_1002EEC18();
  sub_1002EED08();
  sub_1002EE694();
  sub_100162694();
}

uint64_t sub_1002E2E6C()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for SevereNhpAqiContent._Storage(v0);
  sub_1002EEB60();
  return v1 & 1;
}

uint64_t sub_1002E2EB8()
{
  return sub_1002E2E6C();
}

void sub_1002E2EC4()
{
}

uint64_t sub_1002E2EE8()
{
  swift_release();
  sub_100178110(v0 + OBJC_IVAR____TtCV7Weather16SevereNhpContent8_Storage_map, &qword_100E64E80);
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather16SevereNhpContent8_Storage_airQuality, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_100163134(OBJC_IVAR____TtCV7Weather16SevereNhpContent8_Storage_nextHourPrecipitation);
  sub_100163134(OBJC_IVAR____TtCV7Weather16SevereNhpContent8_Storage_severeAlert);
  return v0;
}

uint64_t sub_1002E2F68()
{
  return sub_100117910((void (*)(void))sub_1002E2EE8);
}

uint64_t sub_1002E2F80()
{
  return type metadata accessor for SevereNhpContent._Storage(0);
}

uint64_t type metadata accessor for SevereNhpContent._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E6A1E0);
}

uint64_t sub_1002E2FA8()
{
  sub_1002DB474();
  return v0 & 1;
}

void sub_1002E2FEC()
{
  sub_100162EA0();
  uint64_t v2 = sub_10019B0C0(v1);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_1001870B8();
  __chkstk_darwin(v4);
  sub_100181E70();
  __chkstk_darwin(v5);
  sub_100152388();
  uint64_t v6 = sub_10017DF08(&qword_100E64E80);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_1001722D8(v8, v9);
  sub_10011818C();
  sub_1002EE5B8();
  sub_1002EE51C();
  type metadata accessor for SevereNhpContent._Storage(0);
  sub_100181044();
  sub_100214D30();
  sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_1002EE770();
  sub_1002EEC18();
  sub_1002EED08();
  sub_1002EE694();
  sub_100162694();
}

uint64_t sub_1002E3144()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for SevereNhpContent._Storage(v0);
  sub_1002EEB60();
  return v1 & 1;
}

uint64_t sub_1002E3190()
{
  return sub_1002E3144();
}

uint64_t sub_1002E319C()
{
  sub_1002EF304();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = v0 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_map;
  uint64_t v6 = type metadata accessor for LocationComponentContainerViewModel();
  _s7Weather24LocationCompositionStateOwst_0(v5, 1, 1, v6);
  *(void *)(v0 + 16) = v4;
  sub_100182350();
  sub_1002E7C4C(v2, v5, &qword_100E64E80);
  swift_endAccess();
  sub_10016EAB0();
  sub_1002EF0AC();
  sub_10016EAB0();
  sub_10016EAB0();
  return v0;
}

void sub_1002E32A4()
{
  sub_100162EA0();
  uint64_t v27 = type metadata accessor for LocationComponentContainerViewModel();
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100162758();
  __chkstk_darwin(v6);
  sub_100127588();
  uint64_t v7 = sub_10017DF08(&qword_100E6A4E0);
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_100125FF8();
  uint64_t v9 = sub_10017DF08(&qword_100E64E80);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_10012907C();
  __chkstk_darwin(v11);
  sub_10018105C();
  type metadata accessor for LocationCommonViewComponents._Storage(0);
  swift_retain();
  swift_retain();
  BOOL v12 = sub_1002C8DF4();
  swift_release();
  swift_release();
  if (!v12) {
    goto LABEL_16;
  }
  sub_10019AA4C();
  uint64_t v13 = sub_1002EED20();
  sub_1001B49E8(v13, v14, &qword_100E64E80);
  sub_10019AA4C();
  uint64_t v15 = v2 + *(int *)(v7 + 48);
  uint64_t v16 = sub_10011A5A0();
  sub_1001B49E8(v16, v17, &qword_100E64E80);
  uint64_t v18 = sub_1002EF4D8();
  sub_1001B49E8(v18, v19, &qword_100E64E80);
  sub_10012B520(v2, 1, v27);
  if (!v20)
  {
    sub_1001B49E8(v2, v0, &qword_100E64E80);
    sub_10012B520(v15, 1, v27);
    if (!v20)
    {
      sub_10016EAB0();
      BOOL v21 = sub_100B6B9B8(v0, v3);
      sub_1001184F4(v3, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
      uint64_t v22 = sub_10011A5A0();
      sub_100178110(v22, v23);
      sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
      sub_100178110(v2, &qword_100E64E80);
      if (!v21) {
        goto LABEL_16;
      }
      goto LABEL_12;
    }
    sub_100178110(v4, &qword_100E64E80);
    sub_1001184F4(v0, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
LABEL_10:
    sub_100178110(v2, &qword_100E6A4E0);
    goto LABEL_16;
  }
  sub_100178110(v4, &qword_100E64E80);
  sub_10012B520(v15, 1, v27);
  if (!v20) {
    goto LABEL_10;
  }
  sub_100178110(v2, &qword_100E64E80);
LABEL_12:
  sub_10011818C();
  sub_10011818C();
  BOOL v24 = sub_1002EF3C8();
  sub_1001184F4(v1, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_1002EEA9C();
  if (v24)
  {
    sub_10011818C();
    sub_1002EF114();
    BOOL v25 = sub_1002EF3C8();
    sub_1001184F4(v1, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_1002EEA9C();
    if (v25)
    {
      sub_10011818C();
      sub_1002EF114();
      BOOL v26 = sub_1002EF3C8();
      sub_1001184F4(v1, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
      sub_1002EEA9C();
      if (v26)
      {
        sub_10011818C();
        sub_1002EF114();
        sub_1002EF3C8();
        sub_1001184F4(v1, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
        sub_1002EEA9C();
      }
    }
  }
LABEL_16:
  sub_100119448();
  sub_100162694();
}

uint64_t sub_1002E3744()
{
  swift_release();
  sub_100178110(v0 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_map, &qword_100E64E80);
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_airQuality, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_100163134(OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_newsArticle);
  sub_100163134(OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_nextHourPrecipitation);
  sub_100163134(OBJC_IVAR____TtCV7Weather20SevereNhpNewsContent8_Storage_severeAlert);
  return v0;
}

uint64_t sub_1002E37D0()
{
  return sub_100117910((void (*)(void))sub_1002E3744);
}

uint64_t sub_1002E37E8()
{
  return type metadata accessor for SevereNhpNewsContent._Storage(0);
}

uint64_t type metadata accessor for SevereNhpNewsContent._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E6A2B0);
}

void sub_1002E3810()
{
  sub_1002DE6F0(319, (unint64_t *)&unk_100E67340, (void (*)(uint64_t))type metadata accessor for LocationComponentContainerViewModel);
  if (v0 <= 0x3F)
  {
    type metadata accessor for LocationComponentContainerViewModel();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_1002E390C()
{
  sub_1002E32A4();
  return v0 & 1;
}

void sub_1002E3930()
{
  sub_100162EA0();
  uint64_t v2 = v1;
  uint64_t v12 = v3;
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_100181E70();
  __chkstk_darwin(v7);
  sub_1000B692C();
  __chkstk_darwin(v8);
  sub_1001190EC();
  __chkstk_darwin(v9);
  uint64_t v10 = sub_10017DF08(&qword_100E64E80);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_10011C760();
  sub_1001B49E8(v4, v0, &qword_100E64E80);
  sub_10011818C();
  sub_10011818C();
  sub_10011818C();
  sub_10011818C();
  type metadata accessor for SevereNhpNewsContent._Storage(0);
  sub_100181044();
  sub_1002E319C();
  sub_1001184F4(v2, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_1002EF3E0();
  sub_1002EF2EC();
  sub_10011917C();
  sub_100178110(v12, &qword_100E64E80);
  sub_100162694();
}

uint64_t sub_1002E3B14()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for SevereNhpNewsContent._Storage(v0);
  sub_100127A9C();
  sub_1002E32A4();
  return v1 & 1;
}

uint64_t sub_1002E3B44()
{
  return sub_1002E3B14();
}

void sub_1002E3B50()
{
  sub_1002EEF6C();
  uint64_t v17 = v2;
  uint64_t v4 = v3;
  uint64_t v5 = v0 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_summaryPlatterViewModel;
  uint64_t v6 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  _s7Weather24LocationCompositionStateOwst_0(v5, 1, 1, v6);
  uint64_t v7 = v0 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_newsViewModel;
  uint64_t v8 = type metadata accessor for DetailComponentContainerViewModel();
  sub_100163050(v7, v9, v10, v8);
  uint64_t v11 = sub_1002EF3F8(OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_historicalFactsPlatterViewModel);
  _s7Weather24LocationCompositionStateOwst_0(v11, v12, v13, v6);
  sub_10016EAB0();
  sub_100182350();
  uint64_t v14 = sub_100184EBC();
  sub_1002E7C4C(v14, v15, &qword_100E66E40);
  swift_endAccess();
  sub_10016EAB0();
  sub_100182350();
  sub_1002E7C4C(v4, v7, &qword_100E66E28);
  swift_endAccess();
  sub_10016EAB0();
  sub_10016EAB0();
  sub_100182350();
  sub_1002E7C4C(v17, v1, &qword_100E66E40);
  swift_endAccess();
  sub_1002EF1E4();
  sub_100162E4C();
  sub_1001190D4();
  v16();
  sub_100199BA8();
}

void sub_1002E3D38()
{
  sub_100162EA0();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v139 = type metadata accessor for LocationDetailEntity();
  sub_100179C0C();
  uint64_t v140 = v8;
  __chkstk_darwin(v9);
  uint64_t v131 = (char *)&v128 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v136 = sub_1002EEDF4(v12, v13, v14, v15, v16, v17, v18, v19, (uint64_t)v128);
  sub_100162E4C();
  __chkstk_darwin(v20);
  sub_100109314();
  sub_100109338(v21);
  uint64_t v135 = sub_10017DF08(&qword_100E6A5E8);
  sub_100162E4C();
  __chkstk_darwin(v22);
  sub_100109314();
  sub_100109338(v23);
  uint64_t v24 = sub_10017DF08(&qword_100E66E28);
  uint64_t v25 = sub_100109308(v24);
  __chkstk_darwin(v25);
  uint64_t v134 = (uint64_t *)((char *)&v128 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1001626D4();
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v36 = sub_1002EEDCC(v28, v29, v30, v31, v32, v33, v34, v35, (uint64_t)v128);
  uint64_t v37 = sub_100109308(v36);
  __chkstk_darwin(v37);
  sub_100162EF8();
  uint64_t v144 = v38;
  sub_1001626D4();
  __chkstk_darwin(v39);
  sub_100128F8C();
  uint64_t v143 = v40;
  uint64_t v147 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  sub_100162E4C();
  __chkstk_darwin(v41);
  sub_100162EF8();
  char v137 = v42;
  sub_1001626D4();
  __chkstk_darwin(v43);
  sub_100128F8C();
  sub_100109338(v44);
  uint64_t v146 = sub_10017DF08(&qword_100E6A5F0);
  sub_100162E4C();
  __chkstk_darwin(v45);
  sub_100162EF8();
  uint64_t v132 = v46;
  sub_1001626D4();
  uint64_t v48 = __chkstk_darwin(v47);
  sub_1002EF378(v48, v49, v50, v51, v52, v53, v54, v55, (uint64_t)v128);
  uint64_t v56 = sub_10017DF08(&qword_100E66E40);
  uint64_t v57 = sub_100109308(v56);
  __chkstk_darwin(v57);
  sub_1001190EC();
  uint64_t v59 = __chkstk_darwin(v58);
  uint64_t v61 = (char *)&v128 - v60;
  __chkstk_darwin(v59);
  sub_100119550();
  __chkstk_darwin(v62);
  sub_100152388();
  uint64_t v63 = type metadata accessor for TemperatureAveragesHeroChartViewModel(0);
  uint64_t v64 = sub_100109308(v63);
  __chkstk_darwin(v64);
  sub_100162758();
  __chkstk_darwin(v65);
  uint64_t v67 = (char *)&v128 - v66;
  uint64_t v68 = v7;
  sub_10011818C();
  sub_1002EF2D4();
  uint64_t v69 = (void *)sub_100184EBC();
  LOBYTE(v7) = sub_10028081C(v69, v70);
  sub_1001184F4(v0, (void (*)(void))type metadata accessor for TemperatureAveragesHeroChartViewModel);
  sub_1001184F4((uint64_t)v67, (void (*)(void))type metadata accessor for TemperatureAveragesHeroChartViewModel);
  if ((v7 & 1) == 0) {
    goto LABEL_37;
  }
  uint64_t v71 = v144;
  uint64_t v129 = v61;
  char v128 = (uint64_t *)v3;
  sub_10019AA4C();
  uint64_t v72 = sub_1002EF4D8();
  sub_1001B49E8(v72, v73, &qword_100E66E40);
  uint64_t v130 = v5;
  sub_10019AA4C();
  uint64_t v74 = v145;
  uint64_t v75 = v146;
  uint64_t v76 = v145 + *(int *)(v146 + 48);
  sub_1001B49E8(v2, v145, &qword_100E66E40);
  uint64_t v77 = sub_100184EBC();
  sub_1001B49E8(v77, v78, &qword_100E66E40);
  uint64_t v79 = sub_1001A1520();
  uint64_t v80 = v147;
  sub_10012B520(v79, v81, v147);
  if (v84)
  {
    sub_100178110(v2, &qword_100E66E40);
    sub_10012B520(v76, 1, v80);
    if (!v84) {
      goto LABEL_11;
    }
    uint64_t v82 = v71;
    sub_100178110(v74, &qword_100E66E40);
  }
  else
  {
    uint64_t v83 = (uint64_t *)v1;
    sub_1001B49E8(v74, v1, &qword_100E66E40);
    sub_10012B520(v76, 1, v80);
    if (v84)
    {
      sub_100178110(v2, &qword_100E66E40);
      uint64_t v85 = v1;
LABEL_10:
      sub_1001184F4(v85, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
LABEL_11:
      uint64_t v86 = &qword_100E6A5F0;
      uint64_t v87 = v74;
LABEL_12:
      sub_100178110(v87, v86);
      goto LABEL_37;
    }
    uint64_t v82 = v71;
    uint64_t v88 = v74;
    uint64_t v89 = v142;
    sub_10016EAB0();
    char v90 = sub_100B1F0C8(v83, v89);
    sub_1001184F4((uint64_t)v89, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    sub_100178110(v2, &qword_100E66E40);
    sub_1001184F4((uint64_t)v83, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    sub_100178110(v88, &qword_100E66E40);
    if ((v90 & 1) == 0) {
      goto LABEL_37;
    }
  }
  uint64_t v91 = v143;
  sub_10011818C();
  uint64_t v92 = v130;
  sub_10011818C();
  char v93 = sub_1003F4D24(v91, v82);
  sub_1001184F4(v82, (void (*)(void))type metadata accessor for MonthlyAveragesChartModel);
  uint64_t v94 = sub_10017B204();
  sub_1001184F4(v94, v95);
  if ((v93 & 1) == 0) {
    goto LABEL_37;
  }
  uint64_t v145 = v68;
  uint64_t v96 = v68 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_newsViewModel;
  sub_10019AA4C();
  uint64_t v97 = v141;
  sub_1001B49E8(v96, v141, &qword_100E66E28);
  sub_10019AA4C();
  uint64_t v98 = v138;
  uint64_t v99 = v138 + *(int *)(v135 + 48);
  sub_1001B49E8(v97, v138, &qword_100E66E28);
  uint64_t v100 = sub_100214E34();
  sub_1001B49E8(v100, v101, &qword_100E66E28);
  uint64_t v102 = v136;
  sub_10012B520(v98, 1, v136);
  if (v84)
  {
    sub_100178110(v97, &qword_100E66E28);
    sub_10012B520(v99, 1, v102);
    uint64_t v103 = v140;
    uint64_t v104 = v137;
    if (v84)
    {
      sub_100178110(v98, &qword_100E66E28);
      goto LABEL_25;
    }
LABEL_23:
    uint64_t v86 = &qword_100E6A5E8;
    uint64_t v87 = v98;
    goto LABEL_12;
  }
  char v105 = v134;
  sub_1001B49E8(v98, (uint64_t)v134, &qword_100E66E28);
  sub_10012B520(v99, 1, v102);
  uint64_t v103 = v140;
  uint64_t v104 = v137;
  if (v106)
  {
    sub_100178110(v141, &qword_100E66E28);
    sub_1001184F4((uint64_t)v105, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
    goto LABEL_23;
  }
  uint64_t v107 = v133;
  sub_10016EAB0();
  char v108 = sub_1004B7C2C(v105, v107);
  sub_1001184F4((uint64_t)v107, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
  sub_100178110(v141, &qword_100E66E28);
  sub_1001184F4((uint64_t)v105, (void (*)(void))type metadata accessor for DetailComponentContainerViewModel);
  sub_100178110(v98, &qword_100E66E28);
  if ((v108 & 1) == 0) {
    goto LABEL_37;
  }
LABEL_25:
  uint64_t v109 = v145;
  uint64_t v110 = v142;
  sub_10011818C();
  sub_10011818C();
  char v111 = sub_100B1F0C8(v110, v104);
  sub_1001184F4((uint64_t)v104, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  sub_1002EF3E0();
  if ((v111 & 1) == 0) {
    goto LABEL_37;
  }
  sub_10011818C();
  sub_10011818C();
  char v112 = sub_100B1F0C8(v110, v104);
  sub_1001184F4((uint64_t)v104, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  sub_1002EF3E0();
  if ((v112 & 1) == 0) {
    goto LABEL_37;
  }
  uint64_t v113 = v109 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_historicalFactsPlatterViewModel;
  sub_10019AA4C();
  uint64_t v114 = (uint64_t)v129;
  sub_1001B49E8(v113, (uint64_t)v129, &qword_100E66E40);
  uint64_t v115 = v92 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_historicalFactsPlatterViewModel;
  sub_100126024();
  uint64_t v74 = v132;
  uint64_t v116 = v132 + *(int *)(v75 + 48);
  sub_1001B49E8(v114, v132, &qword_100E66E40);
  sub_1001B49E8(v115, v116, &qword_100E66E40);
  uint64_t v117 = sub_1001A1520();
  uint64_t v118 = v147;
  sub_10012B520(v117, v119, v147);
  if (v84)
  {
    sub_100178110(v114, &qword_100E66E40);
    sub_10012B520(v116, 1, v118);
    if (v84)
    {
      sub_100178110(v74, &qword_100E66E40);
LABEL_36:
      uint64_t v126 = *(void (**)(void))(v103 + 16);
      sub_10019FBD8();
      v126();
      sub_10019FBD8();
      v126();
      static LocationDetailEntity.== infix(_:_:)();
      uint64_t v127 = *(void (**)(void))(v103 + 8);
      sub_1001649A8();
      v127();
      sub_1001649A8();
      v127();
      goto LABEL_37;
    }
    goto LABEL_11;
  }
  int v120 = v128;
  sub_1001B49E8(v74, (uint64_t)v128, &qword_100E66E40);
  sub_10012B520(v116, 1, v118);
  if (v121)
  {
    sub_100178110((uint64_t)v129, &qword_100E66E40);
    uint64_t v85 = (uint64_t)v120;
    goto LABEL_10;
  }
  uint64_t v122 = v142;
  sub_10016EAB0();
  char v123 = sub_100B1F0C8(v120, v122);
  sub_1001184F4((uint64_t)v122, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  sub_100178110((uint64_t)v129, &qword_100E66E40);
  sub_1001184F4((uint64_t)v120, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  uint64_t v124 = sub_10017B204();
  sub_100178110(v124, v125);
  if (v123) {
    goto LABEL_36;
  }
LABEL_37:
  sub_100119448();
  sub_100162694();
}

uint64_t sub_1002E48AC()
{
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_heroChart, (void (*)(void))type metadata accessor for TemperatureAveragesHeroChartViewModel);
  sub_100178110(v0 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_summaryPlatterViewModel, &qword_100E66E40);
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_averagesChart, (void (*)(void))type metadata accessor for MonthlyAveragesChartModel);
  sub_100178110(v0 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_newsViewModel, &qword_100E66E28);
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_aboutNormalRangePlatterViewModel, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  sub_1001184F4(v0 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_aboutAverageTemperaturePlatterViewModel, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  sub_100178110(v0 + OBJC_IVAR____TtCV7Weather34TemperatureAveragesDetailViewModel8_Storage_historicalFactsPlatterViewModel, &qword_100E66E40);
  sub_1002EF1E4();
  sub_100162E4C();
  sub_100162F0C();
  v1();
  return v0;
}

uint64_t sub_1002E49D0()
{
  return sub_1002E49E8((void (*)(void))sub_1002E48AC);
}

uint64_t sub_1002E49E8(void (*a1)(void))
{
  a1();

  return swift_deallocClassInstance();
}

uint64_t sub_1002E4A44()
{
  return type metadata accessor for TemperatureAveragesDetailViewModel._Storage(0);
}

uint64_t type metadata accessor for TemperatureAveragesDetailViewModel._Storage(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E6A388);
}

void sub_1002E4A6C()
{
  type metadata accessor for TemperatureAveragesHeroChartViewModel(319);
  if (v0 <= 0x3F)
  {
    sub_1002DE6F0(319, (unint64_t *)&qword_100E69CD8, (void (*)(uint64_t))type metadata accessor for ConditionDetailPlatterViewModel);
    if (v1 <= 0x3F)
    {
      type metadata accessor for MonthlyAveragesChartModel();
      if (v2 <= 0x3F)
      {
        sub_1002DE6F0(319, (unint64_t *)&qword_100E69CE0, (void (*)(uint64_t))type metadata accessor for DetailComponentContainerViewModel);
        if (v3 <= 0x3F)
        {
          type metadata accessor for ConditionDetailPlatterViewModel(319);
          if (v4 <= 0x3F)
          {
            type metadata accessor for LocationDetailEntity();
            if (v5 <= 0x3F) {
              swift_updateClassMetadata2();
            }
          }
        }
      }
    }
  }
}

void type metadata accessor for LocationCommonConfigurationComponents()
{
}

void type metadata accessor for LocationCommonViewComponents()
{
}

uint64_t sub_1002E4C78()
{
  sub_1002E3D38();
  return v0 & 1;
}

void sub_1002E4C9C()
{
  sub_100162EA0();
  uint64_t v34 = v2;
  uint64_t v35 = v3;
  uint64_t v32 = v4;
  uint64_t v33 = v5;
  uint64_t v37 = v7;
  uint64_t v38 = v6;
  uint64_t v39 = v9;
  uint64_t v40 = v8;
  sub_100162708();
  uint64_t v36 = type metadata accessor for LocationDetailEntity();
  sub_100179C0C();
  uint64_t v30 = v10;
  __chkstk_darwin(v11);
  uint64_t v13 = sub_1002EEBB0(v12, v29);
  uint64_t v14 = type metadata accessor for ConditionDetailPlatterViewModel(v13);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_100119488();
  __chkstk_darwin(v16);
  sub_1002EF04C();
  uint64_t v17 = sub_10017DF08(&qword_100E66E28);
  uint64_t v18 = sub_100109308(v17);
  __chkstk_darwin(v18);
  sub_10011C760();
  uint64_t v19 = type metadata accessor for MonthlyAveragesChartModel();
  uint64_t v20 = sub_100109308(v19);
  __chkstk_darwin(v20);
  sub_100109370();
  uint64_t v21 = sub_10017DF08(&qword_100E66E40);
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_100158494();
  __chkstk_darwin(v23);
  sub_100188F80();
  uint64_t v24 = type metadata accessor for TemperatureAveragesHeroChartViewModel(0);
  uint64_t v25 = sub_100109308(v24);
  __chkstk_darwin(v25);
  sub_100162F18();
  sub_10011818C();
  sub_1001B49E8(v40, v0, &qword_100E66E40);
  sub_10011818C();
  sub_1001B49E8(v38, v1, &qword_100E66E28);
  sub_10011818C();
  sub_10011818C();
  uint64_t v26 = sub_100181E80();
  sub_1001B49E8(v26, v27, &qword_100E66E40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v31, v35, v36);
  type metadata accessor for TemperatureAveragesDetailViewModel._Storage(0);
  sub_100181044();
  sub_1002E3B50();
  sub_1001649A8();
  v28();
  sub_100178110(v34, &qword_100E66E40);
  sub_1001184F4(v33, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  sub_1001184F4(v37, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  sub_100178110(v38, &qword_100E66E28);
  sub_1001184F4(v39, (void (*)(void))type metadata accessor for MonthlyAveragesChartModel);
  sub_100178110(v40, &qword_100E66E40);
  sub_1001184F4(v32, (void (*)(void))type metadata accessor for TemperatureAveragesHeroChartViewModel);
  sub_1002EE694();
  sub_100162694();
}

uint64_t sub_1002E5010()
{
  uint64_t v0 = sub_100162814();
  type metadata accessor for TemperatureAveragesDetailViewModel._Storage(v0);
  sub_100127A9C();
  sub_1002E3D38();
  return v1 & 1;
}

uint64_t sub_1002E5040()
{
  return sub_1002E5010();
}

void sub_1002E504C()
{
  sub_100162EA0();
  sub_100162814();
  uint64_t v5 = type metadata accessor for Elevation();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  uint64_t v58 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v10);
  sub_100182F0C();
  uint64_t v63 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v57 = v11;
  __chkstk_darwin(v12);
  sub_10011BA80(v13, v47);
  uint64_t v14 = sub_10017DF08(&qword_100E6A6F0);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_100162758();
  __chkstk_darwin(v16);
  sub_10018105C();
  if (v1 == v0)
  {
    int v60 = 1;
LABEL_35:
    sub_100162694();
    return;
  }
  sub_10012BFA4();
  if (!v37)
  {
LABEL_34:
    int v60 = 0;
    goto LABEL_35;
  }
  uint64_t v56 = v0;
  uint64_t v59 = 0;
  uint64_t v51 = v1;
  uint64_t v48 = v1 + 64;
  sub_1002EE504();
  uint64_t v19 = v18 & v17;
  sub_1002EEE44();
  uint64_t v49 = v20;
  uint64_t v50 = v57 + 16;
  uint64_t v61 = v7 + 16;
  uint64_t v52 = v57 + 8;
  uint64_t v53 = v7 + 32;
  uint64_t v54 = (void (**)(uint64_t, uint64_t))(v7 + 8);
  uint64_t v55 = v57 + 32;
  uint64_t v47 = v20 - 1;
  while (1)
  {
    if (v19)
    {
      sub_1002EF1C4();
LABEL_7:
      sub_10008B8B4();
      v21();
      uint64_t v22 = sub_10017DF08(&qword_100E6A6F8);
      sub_10008B8B4();
      v23();
      _s7Weather24LocationCompositionStateOwst_0(v2, 0, 1, v22);
      goto LABEL_25;
    }
    uint64_t v24 = v59 + 1;
    if (__OFADD__(v59, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v24 < v49)
    {
      if (*(void *)(v48 + 8 * v24)) {
        goto LABEL_11;
      }
      uint64_t v28 = v59 + 2;
      ++v59;
      if (v24 + 1 < v49)
      {
        if (*(void *)(v48 + 8 * v28)) {
          goto LABEL_11;
        }
        uint64_t v59 = v24 + 1;
        if (v24 + 2 < v49)
        {
          if (*(void *)(v48 + 8 * (v24 + 2))) {
            goto LABEL_11;
          }
          uint64_t v29 = v24 + 3;
          uint64_t v59 = v24 + 2;
          if (v24 + 3 < v49) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v31 = sub_10017DF08(&qword_100E6A6F8);
    sub_100163050(v2, v32, v33, v31);
    uint64_t v19 = 0;
LABEL_25:
    sub_100127928(v2, v3, &qword_100E6A6F0);
    uint64_t v34 = sub_10017DF08(&qword_100E6A6F8);
    uint64_t v35 = sub_100127BBC();
    sub_10012B520(v35, v36, v34);
    if (v37) {
      int v38 = 1;
    }
    else {
      int v38 = 0;
    }
    int v60 = v38;
    if (v37) {
      goto LABEL_35;
    }
    uint64_t v62 = v19;
    sub_1001190D4();
    v39();
    sub_1001190D4();
    v40();
    sub_100246B34();
    char v42 = v41;
    sub_100162F0C();
    v43();
    if ((v42 & 1) == 0)
    {
      (*v54)(v4, v5);
      goto LABEL_34;
    }
    sub_10008B8B4();
    v44();
    sub_100127D40(&qword_100E6A700, 255, (void (*)(uint64_t))&type metadata accessor for Elevation);
    char v45 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v46 = *(void (**)(void))(v7 + 8);
    sub_1001195A8();
    sub_100183838();
    v46();
    sub_100183838();
    v46();
    uint64_t v19 = v62;
    if ((v45 & 1) == 0) {
      goto LABEL_35;
    }
  }
  if (*(void *)(v48 + 8 * v29))
  {
LABEL_11:
    sub_1002EEFF4();
    uint64_t v19 = v26 & v25;
    uint64_t v59 = v27;
    goto LABEL_7;
  }
  while (!__OFADD__(v29, 1))
  {
    if (v29 + 1 >= v49)
    {
      uint64_t v59 = v47;
      goto LABEL_24;
    }
    sub_1001D40DC();
    if (v30) {
      goto LABEL_11;
    }
  }
LABEL_37:
  __break(1u);
}

void sub_1002E551C()
{
  sub_10010977C();
  if (v2 == v3 || (sub_100214F24(), !v25))
  {
LABEL_27:
    sub_100162714();
    return;
  }
  int64_t v4 = 0;
  uint64_t v5 = v0 + 64;
  sub_1000A9DF4();
  unint64_t v8 = v7 & v6;
  int64_t v10 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v4 << 6);
      goto LABEL_21;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v13 >= v10) {
      goto LABEL_27;
    }
    ++v4;
    if (!*(void *)(v5 + 8 * v13))
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v10) {
        goto LABEL_27;
      }
      if (!*(void *)(v5 + 8 * v4))
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v10) {
          goto LABEL_27;
        }
        if (!*(void *)(v5 + 8 * v4)) {
          break;
        }
      }
    }
LABEL_20:
    sub_1002EE8D4();
    unint64_t v8 = v16 & v15;
    unint64_t v12 = v17 + (v4 << 6);
LABEL_21:
    double v18 = *(double *)(*(void *)(v0 + 48) + 8 * v12);
    uint64_t v19 = (uint64_t *)(*(void *)(v0 + 56) + 16 * v12);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    unint64_t v22 = sub_100246BE4(v18);
    if (v23)
    {
      uint64_t v24 = (void *)(*(void *)(v1 + 56) + 16 * v22);
      BOOL v25 = *v24 == v20 && v24[1] == v21;
      if (v25 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        continue;
      }
    }
    goto LABEL_27;
  }
  int64_t v14 = v13 + 3;
  if (v14 >= v10) {
    goto LABEL_27;
  }
  if (*(void *)(v5 + 8 * v14))
  {
    int64_t v4 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v10) {
      goto LABEL_27;
    }
    ++v14;
    if (*(void *)(v5 + 8 * v4)) {
      goto LABEL_20;
    }
  }
LABEL_29:
  __break(1u);
}

void sub_1002E5674()
{
  sub_100162EA0();
  sub_1002EEB90();
  type metadata accessor for Date();
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v5 = sub_10017DF08(&qword_100E6A6E0);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_1001870B8();
  __chkstk_darwin(v7);
  sub_100152388();
  if (v0 == v1 || (sub_1002EEB50(), !v41))
  {
LABEL_38:
    sub_100162694();
    return;
  }
  uint64_t v47 = 0;
  uint64_t v46 = v0;
  sub_100199B8C();
  uint64_t v10 = v9 & v8;
  sub_1002EEE44();
  uint64_t v44 = v0 + 64;
  uint64_t v45 = v11;
  uint64_t v43 = v11 - 1;
  while (1)
  {
    if (v10)
    {
      sub_1001D17C4();
      unint64_t v13 = v12 | (v47 << 6);
LABEL_7:
      sub_1002EF4E4();
      sub_10008B8B4();
      v14();
      uint64_t v15 = (uint64_t *)(*(void *)(v46 + 56) + 16 * v13);
      uint64_t v16 = *v15;
      uint64_t v17 = v15[1];
      double v18 = (void *)(v2 + *(int *)(sub_10017DF08(&qword_100E6A6E8) + 48));
      *double v18 = v16;
      v18[1] = v17;
      uint64_t v19 = sub_1002EEBA0();
      _s7Weather24LocationCompositionStateOwst_0(v19, v20, v21, v22);
      swift_bridgeObjectRetain();
      goto LABEL_27;
    }
    if (__OFADD__(v47, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    sub_1002EF23C();
    if (v24 != v25)
    {
      unint64_t v26 = *(void *)(v44 + 8 * v23);
      if (v26) {
        goto LABEL_12;
      }
      uint64_t v27 = v23 + 1;
      uint64_t v47 = v23;
      if (v23 + 1 < v45)
      {
        unint64_t v26 = *(void *)(v44 + 8 * v27);
        if (v26) {
          goto LABEL_15;
        }
        uint64_t v47 = v23 + 1;
        if (v23 + 2 < v45)
        {
          unint64_t v26 = *(void *)(v44 + 8 * (v23 + 2));
          if (v26)
          {
            v23 += 2;
            goto LABEL_12;
          }
          uint64_t v27 = v23 + 3;
          uint64_t v47 = v23 + 2;
          if (v23 + 3 < v45) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v28 = sub_10017DF08(&qword_100E6A6E8);
    sub_10012BFD0(v2, v29, v30, v28);
LABEL_27:
    sub_100127928(v2, v3, &qword_100E6A6E0);
    uint64_t v31 = sub_10017DF08(&qword_100E6A6E8);
    sub_10012B520(v3, 1, v31);
    if (v41) {
      goto LABEL_38;
    }
    uint64_t v32 = (uint64_t *)(v3 + *(int *)(v31 + 48));
    uint64_t v33 = v3;
    sub_1001190D4();
    v34();
    uint64_t v35 = *v32;
    uint64_t v36 = v32[1];
    unint64_t v37 = sub_100246B34();
    LOBYTE(v32) = v38;
    sub_10011958C();
    sub_100162F0C();
    v39();
    if ((v32 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_38;
    }
    uint64_t v40 = (void *)(*(void *)(v1 + 56) + 16 * v37);
    BOOL v41 = *v40 == v35 && v40[1] == v36;
    if (v41)
    {
      swift_bridgeObjectRelease();
      uint64_t v3 = v33;
    }
    else
    {
      char v42 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      uint64_t v3 = v33;
      if ((v42 & 1) == 0) {
        goto LABEL_38;
      }
    }
  }
  unint64_t v26 = *(void *)(v44 + 8 * v27);
  if (v26)
  {
LABEL_15:
    uint64_t v23 = v27;
LABEL_12:
    uint64_t v10 = (v26 - 1) & v26;
    unint64_t v13 = __clz(__rbit64(v26)) + (v23 << 6);
    uint64_t v47 = v23;
    goto LABEL_7;
  }
  while (!__OFADD__(v27, 1))
  {
    sub_1002EF23C();
    if (v24 == v25)
    {
      uint64_t v47 = v43;
      goto LABEL_26;
    }
    sub_1001D40DC();
    if (v26) {
      goto LABEL_12;
    }
  }
LABEL_40:
  __break(1u);
}

void sub_1002E59F4()
{
  sub_100162EA0();
  uint64_t v4 = sub_1002EEB90();
  uint64_t v5 = type metadata accessor for LocationComponentHeaderInputModel.SegmentedControlModel.Option(v4);
  uint64_t v6 = sub_100164920(v5);
  __chkstk_darwin(v6);
  sub_100158494();
  uint64_t v8 = __chkstk_darwin(v7);
  sub_1002EF38C(v8, v9, v10, v11, v12, v13, v14, v15, v49);
  uint64_t v16 = sub_10017DF08(&qword_100E6A4E8);
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  sub_100129860();
  __chkstk_darwin(v18);
  sub_10011B0B0();
  if (!v46)
  {
    sub_1002EEB50();
    if (v46)
    {
      int64_t v55 = 0;
      uint64_t v53 = v0;
      sub_1000A9DF4();
      uint64_t v21 = v20 & v19;
      uint64_t v50 = v0 + 64;
      int64_t v51 = (unint64_t)(v22 + 63) >> 6;
      uint64_t v52 = v1;
      uint64_t v23 = v54;
      if ((v20 & v19) == 0) {
        goto LABEL_7;
      }
LABEL_5:
      sub_1002EECB4();
      int64_t v25 = v24 | (v55 << 6);
LABEL_6:
      unint64_t v26 = (uint64_t *)(*(void *)(v53 + 48) + 24 * v25);
      uint64_t v27 = *v26;
      uint64_t v28 = v26[1];
      uint64_t v29 = v26[2];
      sub_10017DF08(&qword_100E6A4F0);
      sub_10011818C();
      *uint64_t v2 = v27;
      v2[1] = v28;
      v2[2] = v29;
      uint64_t v30 = sub_1002EF460();
      _s7Weather24LocationCompositionStateOwst_0(v30, v31, v32, v33);
      swift_bridgeObjectRetain();
      uint64_t v1 = v52;
      uint64_t v23 = v54;
      while (1)
      {
        sub_100127928((uint64_t)v2, v3, &qword_100E6A4E8);
        uint64_t v40 = sub_10017DF08(&qword_100E6A4F0);
        sub_10012B520(v3, 1, v40);
        if (v46) {
          goto LABEL_37;
        }
        uint64_t v41 = *(void *)(v3 + 16);
        sub_10016EAB0();
        Swift::UInt v42 = sub_100127BB0();
        sub_100246C20(v42, v43, v41);
        char v45 = v44;
        swift_bridgeObjectRelease();
        if ((v45 & 1) == 0) {
          goto LABEL_36;
        }
        sub_10011818C();
        if (*v1 != *v23
          || (v1[1] == v23[1] ? (BOOL v46 = v1[2] == v23[2]) : (BOOL v46 = 0),
              !v46 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0))
        {
          sub_1001184F4((uint64_t)v1, (void (*)(void))type metadata accessor for LocationComponentHeaderInputModel.SegmentedControlModel.Option);
LABEL_36:
          sub_1001184F4((uint64_t)v23, (void (*)(void))type metadata accessor for LocationComponentHeaderInputModel.SegmentedControlModel.Option);
          goto LABEL_37;
        }
        sub_1001184F4((uint64_t)v1, (void (*)(void))type metadata accessor for LocationComponentHeaderInputModel.SegmentedControlModel.Option);
        uint64_t v47 = sub_1002EED20();
        sub_1001184F4(v47, v48);
        if (v21) {
          goto LABEL_5;
        }
LABEL_7:
        int64_t v34 = v55 + 1;
        if (__OFADD__(v55, 1)) {
          break;
        }
        if (v34 < v51)
        {
          if (*(void *)(v50 + 8 * v34)) {
            goto LABEL_10;
          }
          int64_t v36 = v55 + 2;
          ++v55;
          if (v34 + 1 < v51)
          {
            if (*(void *)(v50 + 8 * v36)) {
              goto LABEL_10;
            }
            int64_t v55 = v34 + 1;
            if (v34 + 2 < v51)
            {
              if (*(void *)(v50 + 8 * (v34 + 2))) {
                goto LABEL_10;
              }
              int64_t v37 = v34 + 3;
              int64_t v55 = v34 + 2;
              if (v34 + 3 < v51)
              {
                if (*(void *)(v50 + 8 * v37))
                {
LABEL_10:
                  sub_1002EF034();
                  int64_t v55 = v35;
                  goto LABEL_6;
                }
                while (!__OFADD__(v37, 1))
                {
                  if (v37 + 1 >= v51)
                  {
                    int64_t v55 = v51 - 1;
                    goto LABEL_23;
                  }
                  sub_1001D40DC();
                  if (v38) {
                    goto LABEL_10;
                  }
                }
                goto LABEL_39;
              }
            }
          }
        }
LABEL_23:
        uint64_t v39 = sub_10017DF08(&qword_100E6A4F0);
        sub_1002EE788(v39);
        uint64_t v21 = 0;
      }
      __break(1u);
LABEL_39:
      __break(1u);
      return;
    }
  }
LABEL_37:
  sub_1001275D0();
  sub_100162694();
}

void sub_1002E5DCC()
{
  sub_100162EA0();
  uint64_t v8 = v7;
  sub_1001191B4();
  uint64_t v9 = type metadata accessor for Locale();
  sub_100179C0C();
  __chkstk_darwin(v10);
  sub_100182904(v11, v80[0]);
  uint64_t v12 = sub_10017DF08(&qword_100E63730);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_100125FF8();
  uint64_t v88 = sub_10017DF08(&qword_100E6A680);
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_10011BA80(v15, v80[0]);
  uint64_t v91 = type metadata accessor for WeatherData(0);
  sub_100179C0C();
  uint64_t v94 = v16;
  __chkstk_darwin(v17);
  uint64_t v87 = (char *)v80 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v19);
  sub_100181E70();
  __chkstk_darwin(v20);
  sub_1000B692C();
  __chkstk_darwin(v21);
  sub_100182F0C();
  uint64_t v22 = sub_10017DF08(&qword_100E6A688);
  uint64_t v23 = sub_100109308(v22);
  __chkstk_darwin(v23);
  sub_1001870B8();
  __chkstk_darwin(v24);
  sub_10011B090();
  uint64_t v95 = v8;
  if (v0 == v8 || *(void *)(v0 + 16) != *(void *)(v95 + 16))
  {
LABEL_46:
    sub_100162694();
    return;
  }
  uint64_t v84 = v4;
  uint64_t v85 = v9;
  uint64_t v92 = v0;
  uint64_t v93 = 0;
  uint64_t v86 = v0 + 64;
  sub_1002EE6A0();
  uint64_t v27 = v26 & v25;
  sub_1002EF44C();
  v80[1] = v29;
  uint64_t v81 = v28;
  uint64_t v89 = v30;
  v80[0] = v30 - 1;
  uint64_t v82 = v2;
  while (v27)
  {
    sub_1002EECB4();
LABEL_6:
    sub_1002EF338();
    uint64_t v33 = *v31;
    uint64_t v32 = v31[1];
    uint64_t v34 = sub_10017DF08(&qword_100E6A690);
    sub_10011818C();
    void *v3 = v33;
    v3[1] = v32;
    uint64_t v35 = sub_1002EEBA0();
    sub_1002EF0E0(v35, v36, v37, v34);
LABEL_24:
    sub_100127928((uint64_t)v3, v1, &qword_100E6A688);
    uint64_t v53 = sub_10017DF08(&qword_100E6A690);
    sub_10012B520(v1, 1, v53);
    if (v56) {
      goto LABEL_46;
    }
    sub_10016EAB0();
    sub_1001D23B8();
    char v55 = v54;
    swift_bridgeObjectRelease();
    if ((v55 & 1) == 0) {
      goto LABEL_45;
    }
    sub_1002EF488();
    sub_10011818C();
    BOOL v56 = *v5 == *v6 && v5[1] == v6[1];
    if (v56 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      sub_1001184F4((uint64_t)v5, (void (*)(void))type metadata accessor for WeatherData);
      sub_1001184F4((uint64_t)v6, (void (*)(void))type metadata accessor for WeatherData);
    }
    else
    {
      uint64_t v57 = v90;
      uint64_t v58 = *(int *)(v91 + 20);
      uint64_t v59 = (char *)v6 + v58;
      uint64_t v60 = v90 + *(int *)(v88 + 48);
      sub_1001B49E8((uint64_t)v5 + v58, v90, &qword_100E63730);
      uint64_t v61 = (uint64_t)v59;
      uint64_t v62 = v57;
      sub_1001B49E8(v61, v60, &qword_100E63730);
      uint64_t v63 = sub_100127BBC();
      uint64_t v64 = v85;
      sub_10012B520(v63, v65, v85);
      if (v56)
      {
        sub_10012B520(v60, 1, v64);
        if (!v56) {
          goto LABEL_43;
        }
        sub_100178110(v62, &qword_100E63730);
        uint64_t v66 = v84;
        sub_10011818C();
        sub_10011818C();
      }
      else
      {
        uint64_t v67 = v62;
        uint64_t v68 = v62;
        uint64_t v69 = v82;
        sub_1001B49E8(v67, v82, &qword_100E63730);
        sub_10012B520(v60, 1, v64);
        if (v70)
        {
          sub_100162F0C();
          v79();
          uint64_t v62 = v68;
LABEL_43:
          sub_100178110(v62, &qword_100E6A680);
          uint64_t v66 = v84;
          sub_10011818C();
          uint64_t v75 = (uint64_t)v87;
          sub_10011818C();
LABEL_44:
          sub_1001184F4(v66, (void (*)(void))type metadata accessor for WeatherData);
          sub_1001184F4(v75, (void (*)(void))type metadata accessor for WeatherData);
          sub_1001184F4((uint64_t)v5, (void (*)(void))type metadata accessor for WeatherData);
LABEL_45:
          sub_1001184F4((uint64_t)v6, (void (*)(void))type metadata accessor for WeatherData);
          goto LABEL_46;
        }
        sub_10012B950();
        sub_1001190D4();
        v71();
        sub_100127D40(&qword_100E6A698, 255, (void (*)(uint64_t))&type metadata accessor for Locale);
        int v83 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v72 = v69;
        uint64_t v73 = *v81;
        ((void (*)(uint64_t, uint64_t))*v81)(v72, v64);
        uint64_t v74 = sub_1002EED20();
        v73(v74);
        sub_100178110(v90, &qword_100E63730);
        uint64_t v66 = v84;
        sub_10011818C();
        uint64_t v75 = (uint64_t)v87;
        sub_10011818C();
        if ((v83 & 1) == 0) {
          goto LABEL_44;
        }
      }
      char v76 = static WeatherDataModel.== infix(_:_:)();
      sub_1001184F4(v66, (void (*)(void))type metadata accessor for WeatherData);
      uint64_t v77 = sub_10011A5A0();
      sub_1001184F4(v77, v78);
      sub_1001184F4((uint64_t)v5, (void (*)(void))type metadata accessor for WeatherData);
      sub_1001184F4((uint64_t)v6, (void (*)(void))type metadata accessor for WeatherData);
      if ((v76 & 1) == 0) {
        goto LABEL_46;
      }
    }
  }
  sub_10012BF40();
  if (v39)
  {
    __break(1u);
    goto LABEL_48;
  }
  if (v38 >= v89)
  {
LABEL_23:
    uint64_t v52 = sub_10017DF08(&qword_100E6A690);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v3, 1, 1, v52);
    uint64_t v27 = 0;
    goto LABEL_24;
  }
  sub_1002EEEE4();
  if (v41) {
    goto LABEL_10;
  }
  uint64_t v93 = v40;
  if (v40 + 1 >= v89) {
    goto LABEL_23;
  }
  sub_1002EEED8();
  if (v45) {
    goto LABEL_10;
  }
  uint64_t v93 = v44;
  if (v43 + 2 >= v89) {
    goto LABEL_23;
  }
  sub_1002EEEF0();
  if (v48) {
    goto LABEL_10;
  }
  uint64_t v93 = v47;
  if (v46 + 3 >= v89) {
    goto LABEL_23;
  }
  sub_1002EEECC();
  if (v50)
  {
LABEL_10:
    sub_1002EF034();
    uint64_t v93 = v42;
    goto LABEL_6;
  }
  while (!__OFADD__(v49, 1))
  {
    if (v49 + 1 >= v89)
    {
      uint64_t v93 = v80[0];
      goto LABEL_23;
    }
    sub_1001D40DC();
    if (v51) {
      goto LABEL_10;
    }
  }
LABEL_48:
  __break(1u);
}

void sub_1002E6550()
{
  sub_100162EA0();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_10019DE20(v10, v63);
  uint64_t v73 = sub_10017DF08(&qword_100E64D60);
  sub_100162E4C();
  __chkstk_darwin(v11);
  uint64_t v12 = sub_10011BA28();
  uint64_t v72 = type metadata accessor for CalendarMoonPhaseData(v12);
  sub_100179C0C();
  uint64_t v79 = v13;
  __chkstk_darwin(v14);
  sub_100162EF8();
  uint64_t v81 = v15;
  sub_1001626D4();
  __chkstk_darwin(v16);
  sub_10011BA50();
  uint64_t v17 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v71 = v18;
  __chkstk_darwin(v19);
  uint64_t v66 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v21);
  sub_100128F8C();
  uint64_t v75 = v22;
  uint64_t v23 = sub_10017DF08(&qword_100E6A4D0);
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_1001870B8();
  __chkstk_darwin(v25);
  sub_10018105C();
  uint64_t v80 = v5;
  if (v7 == v5 || *(void *)(v7 + 16) != *(void *)(v80 + 16)) {
    goto LABEL_47;
  }
  uint64_t v74 = 0;
  uint64_t v69 = v7;
  sub_100199B8C();
  uint64_t v28 = v27 & v26;
  sub_1002EEE44();
  uint64_t v68 = v71 + 16;
  char v76 = (void (**)(uint64_t, uint64_t, uint64_t))(v71 + 32);
  uint64_t v77 = (void (**)(void))(v71 + 8);
  uint64_t v64 = v7 + 64;
  uint64_t v65 = v29;
  uint64_t v63 = v29 - 1;
  uint64_t v70 = v2;
  if (!v28) {
    goto LABEL_6;
  }
LABEL_4:
  sub_1002EECB4();
LABEL_5:
  sub_1002EF4E4();
  sub_10008B8B4();
  v30();
  uint64_t v31 = sub_10017DF08(&qword_100E6A4D8);
  sub_10011818C();
  uint64_t v32 = sub_1002EEBA0();
  _s7Weather24LocationCompositionStateOwst_0(v32, v33, v34, v31);
  while (1)
  {
    uint64_t v39 = sub_1001195A8();
    sub_100127928(v39, v40, &qword_100E6A4D0);
    uint64_t v41 = sub_10017DF08(&qword_100E6A4D8);
    uint64_t v42 = sub_100127BBC();
    sub_10012B520(v42, v43, v41);
    if (v55) {
      goto LABEL_47;
    }
    uint64_t v44 = *v76;
    uint64_t v45 = v17;
    uint64_t v46 = v75;
    uint64_t v47 = v3;
    (*v76)(v75, v3, v45);
    sub_100214E34();
    sub_10016EAB0();
    sub_100246B34();
    char v49 = v48;
    uint64_t v50 = *v77;
    ((void (*)(uint64_t, uint64_t))*v77)(v46, v45);
    if ((v49 & 1) == 0) {
      goto LABEL_46;
    }
    uint64_t v78 = v28;
    sub_10011818C();
    uint64_t v51 = MoonPhase.rawValue.getter();
    uint64_t v53 = v52;
    BOOL v55 = v51 == MoonPhase.rawValue.getter() && v53 == v54;
    if (v55)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v17 = v45;
    }
    else
    {
      sub_10012B950();
      char v56 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v17 = v45;
      if ((v56 & 1) == 0) {
        goto LABEL_45;
      }
    }
    uint64_t v57 = *(int *)(v72 + 20);
    uint64_t v58 = v0 + v57;
    uint64_t v59 = v1 + *(int *)(v73 + 48);
    sub_1001B49E8(v81 + v57, v1, (uint64_t *)&unk_100E73CA0);
    sub_1001B49E8(v58, v59, (uint64_t *)&unk_100E73CA0);
    sub_10012B520(v1, 1, v17);
    if (v55)
    {
      sub_10012B520(v59, 1, v17);
      if (!v55) {
        goto LABEL_44;
      }
      sub_100178110(v1, (uint64_t *)&unk_100E73CA0);
      goto LABEL_40;
    }
    sub_1001B49E8(v1, v67, (uint64_t *)&unk_100E73CA0);
    sub_10012B520(v59, 1, v17);
    if (v60) {
      break;
    }
    v44((uint64_t)v66, v59, v45);
    sub_100127D40((unint64_t *)&qword_100E63980, 255, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1002EF4D8();
    char v61 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v17 = v45;
    sub_100164944();
    v50();
    sub_10017C938();
    v50();
    sub_100178110(v1, (uint64_t *)&unk_100E73CA0);
    if ((v61 & 1) == 0) {
      goto LABEL_45;
    }
LABEL_40:
    sub_1001184F4(v81, (void (*)(void))type metadata accessor for CalendarMoonPhaseData);
    sub_1001184F4(v0, (void (*)(void))type metadata accessor for CalendarMoonPhaseData);
    uint64_t v2 = v70;
    uint64_t v3 = v47;
    uint64_t v28 = v78;
    if (v78) {
      goto LABEL_4;
    }
LABEL_6:
    uint64_t v35 = v74 + 1;
    if (__OFADD__(v74, 1))
    {
      __break(1u);
      goto LABEL_49;
    }
    if (v35 < v65)
    {
      uint64_t v36 = *(void *)(v64 + 8 * v35);
      if (v36) {
        goto LABEL_9;
      }
      uint64_t v37 = v74 + 2;
      ++v74;
      if (v35 + 1 < v65)
      {
        uint64_t v36 = *(void *)(v64 + 8 * v37);
        if (v36) {
          goto LABEL_12;
        }
        uint64_t v74 = v35 + 1;
        if (v35 + 2 < v65)
        {
          uint64_t v36 = *(void *)(v64 + 8 * (v35 + 2));
          if (v36)
          {
            v35 += 2;
            goto LABEL_9;
          }
          uint64_t v37 = v35 + 3;
          uint64_t v74 = v35 + 2;
          if (v35 + 3 < v65)
          {
            uint64_t v36 = *(void *)(v64 + 8 * v37);
            if (!v36)
            {
              while (!__OFADD__(v37, 1))
              {
                if (v37 + 1 >= v65)
                {
                  uint64_t v74 = v63;
                  goto LABEL_23;
                }
                sub_1001D40DC();
                if (v36) {
                  goto LABEL_9;
                }
              }
LABEL_49:
              __break(1u);
              return;
            }
LABEL_12:
            uint64_t v35 = v37;
LABEL_9:
            uint64_t v28 = (v36 - 1) & v36;
            uint64_t v74 = v35;
            goto LABEL_5;
          }
        }
      }
    }
LABEL_23:
    uint64_t v38 = sub_10017DF08(&qword_100E6A4D8);
    _s7Weather24LocationCompositionStateOwst_0(v2, 1, 1, v38);
    uint64_t v28 = 0;
  }
  uint64_t v62 = sub_1002EF4D8();
  ((void (*)(uint64_t))v50)(v62);
LABEL_44:
  sub_100178110(v1, &qword_100E64D60);
LABEL_45:
  sub_1001184F4(v81, (void (*)(void))type metadata accessor for CalendarMoonPhaseData);
LABEL_46:
  sub_1001184F4(v0, (void (*)(void))type metadata accessor for CalendarMoonPhaseData);
LABEL_47:
  sub_100162694();
}

void sub_1002E6C54()
{
  sub_10010977C();
  if (v6 == v7 || (sub_100214F24(), !v8))
  {
LABEL_23:
    sub_100162714();
    return;
  }
  sub_1002EE538();
  while (1)
  {
    if (v5)
    {
      sub_1002EEEFC();
      goto LABEL_21;
    }
    uint64_t v10 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v3) {
      goto LABEL_23;
    }
    ++v4;
    if (!*(void *)(v2 + 8 * v10))
    {
      uint64_t v4 = v10 + 1;
      if (v10 + 1 >= v3) {
        goto LABEL_23;
      }
      if (!*(void *)(v2 + 8 * v4))
      {
        uint64_t v4 = v10 + 2;
        if (v10 + 2 >= v3) {
          goto LABEL_23;
        }
        if (!*(void *)(v2 + 8 * v4)) {
          break;
        }
      }
    }
LABEL_20:
    sub_1002EE8D4();
    uint64_t v5 = v13 & v12;
    uint64_t v9 = v14 + (v4 << 6);
LABEL_21:
    uint64_t v15 = *(void *)(*(void *)(v0 + 56) + 8 * v9);
    unint64_t v16 = sub_1002109DC(*(void *)(*(void *)(v0 + 48) + 8 * v9));
    if ((v17 & 1) == 0 || *(void *)(*(void *)(v1 + 56) + 8 * v16) != v15) {
      goto LABEL_23;
    }
  }
  uint64_t v11 = v10 + 3;
  if (v11 >= v3) {
    goto LABEL_23;
  }
  if (*(void *)(v2 + 8 * v11))
  {
    uint64_t v4 = v11;
    goto LABEL_20;
  }
  while (1)
  {
    uint64_t v4 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v4 >= v3) {
      goto LABEL_23;
    }
    ++v11;
    if (*(void *)(v2 + 8 * v4)) {
      goto LABEL_20;
    }
  }
LABEL_25:
  __break(1u);
}

void sub_1002E6D60()
{
  sub_1002EEB90();
  uint64_t v4 = type metadata accessor for LocationOfInterestType();
  sub_100179C0C();
  uint64_t v36 = v5;
  __chkstk_darwin(v6);
  sub_10016279C();
  uint64_t v7 = sub_10017DF08(&qword_100E6A6A0);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_100129860();
  __chkstk_darwin(v9);
  sub_10011B0B0();
  if (v10) {
    return;
  }
  sub_1002EEB50();
  if (!v10) {
    return;
  }
  uint64_t v37 = 0;
  uint64_t v34 = v0 + 64;
  sub_100199B8C();
  unint64_t v13 = v12 & v11;
  sub_1002EEE44();
  uint64_t v35 = v14;
  uint64_t v33 = v14 - 1;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v37 << 6);
LABEL_7:
      sub_10008B8B4();
      v17();
      uint64_t v18 = *(void *)(v0 + 56);
      uint64_t v19 = sub_10017DF08(&qword_100E6A6A8);
      *(_OWORD *)(v2 + *(int *)(v19 + 48)) = *(_OWORD *)(v18 + 16 * v16);
      _s7Weather24LocationCompositionStateOwst_0(v2, 0, 1, v19);
      goto LABEL_27;
    }
    sub_10012BF40();
    if (v21)
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v20 < v35)
    {
      if (*(void *)(v34 + 8 * v20)) {
        goto LABEL_11;
      }
      uint64_t v37 = v20;
      if (v20 + 1 < v35)
      {
        if (*(void *)(v34 + 8 * (v20 + 1))) {
          goto LABEL_11;
        }
        uint64_t v37 = v20 + 1;
        if (v20 + 2 < v35)
        {
          if (*(void *)(v34 + 8 * (v20 + 2))) {
            goto LABEL_11;
          }
          uint64_t v37 = v20 + 2;
          if (v20 + 3 < v35)
          {
            if (*(void *)(v34 + 8 * (v20 + 3))) {
              goto LABEL_11;
            }
            uint64_t v26 = v20 + 4;
            uint64_t v37 = v20 + 3;
            if (v20 + 4 < v35) {
              break;
            }
          }
        }
      }
    }
LABEL_26:
    uint64_t v28 = sub_10017DF08(&qword_100E6A6A8);
    sub_1002EE788(v28);
    unint64_t v13 = 0;
LABEL_27:
    sub_100127928(v2, v3, &qword_100E6A6A0);
    uint64_t v29 = sub_10017DF08(&qword_100E6A6A8);
    sub_10012B520(v3, 1, v29);
    if (!v10)
    {
      sub_1001190D4();
      v30();
      sub_100246DFC();
      char v32 = v31;
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v1, v4);
      if (v32 & 1) != 0 && (static CLLocationCoordinate2D.== infix(_:_:)()) {
        continue;
      }
    }
    return;
  }
  if (*(void *)(v34 + 8 * v26))
  {
LABEL_11:
    sub_1002EEFF4();
    unint64_t v13 = v23 & v22;
    unint64_t v16 = v25 + (v24 << 6);
    uint64_t v37 = v24;
    goto LABEL_7;
  }
  while (!__OFADD__(v26, 1))
  {
    if (v26 + 1 >= v35)
    {
      uint64_t v37 = v33;
      goto LABEL_26;
    }
    sub_1001D40DC();
    if (v27) {
      goto LABEL_11;
    }
  }
LABEL_33:
  __break(1u);
}

void sub_1002E70D4()
{
  sub_10010977C();
  if (v6 != v7)
  {
    sub_100214F24();
    if (v17)
    {
      sub_1002EE538();
      while (1)
      {
LABEL_5:
        if (v5)
        {
          sub_1002EEEFC();
        }
        else
        {
          uint64_t v9 = v4 + 1;
          if (__OFADD__(v4, 1))
          {
            __break(1u);
LABEL_47:
            __break(1u);
            return;
          }
          if (v9 >= v3) {
            break;
          }
          unint64_t v10 = *(void *)(v2 + 8 * v9);
          ++v4;
          if (!v10)
          {
            uint64_t v4 = v9 + 1;
            if (v9 + 1 >= v3) {
              break;
            }
            unint64_t v10 = *(void *)(v2 + 8 * v4);
            if (!v10)
            {
              uint64_t v4 = v9 + 2;
              if (v9 + 2 >= v3) {
                break;
              }
              unint64_t v10 = *(void *)(v2 + 8 * v4);
              if (!v10)
              {
                uint64_t v4 = v9 + 3;
                if (v9 + 3 >= v3) {
                  break;
                }
                unint64_t v10 = *(void *)(v2 + 8 * v4);
                if (!v10)
                {
                  uint64_t v11 = v9 + 4;
                  if (v11 >= v3) {
                    break;
                  }
                  unint64_t v10 = *(void *)(v2 + 8 * v11);
                  if (!v10)
                  {
                    while (1)
                    {
                      uint64_t v4 = v11 + 1;
                      if (__OFADD__(v11, 1)) {
                        goto LABEL_47;
                      }
                      if (v4 >= v3) {
                        goto LABEL_45;
                      }
                      unint64_t v10 = *(void *)(v2 + 8 * v4);
                      ++v11;
                      if (v10) {
                        goto LABEL_22;
                      }
                    }
                  }
                  uint64_t v4 = v11;
                }
              }
            }
          }
LABEL_22:
          uint64_t v5 = (v10 - 1) & v10;
          unint64_t v8 = __clz(__rbit64(v10)) + (v4 << 6);
        }
        uint64_t v12 = *(int64x2_t **)(*(void *)(v0 + 56) + 8 * v8);
        unint64_t v13 = sub_1002109DC(*(void *)(*(void *)(v0 + 48) + 8 * v8));
        if ((v14 & 1) == 0) {
          break;
        }
        unint64_t v15 = *(int64x2_t **)(*(void *)(v1 + 56) + 8 * v13);
        uint64_t v16 = v15[1].i64[0];
        if (v16 != v12[1].i64[0]) {
          break;
        }
        if (v16) {
          BOOL v17 = v15 == v12;
        }
        else {
          BOOL v17 = 1;
        }
        if (!v17)
        {
          if (v15[2].i64[0] != v12[2].i64[0] || v15[2].i64[1] != v12[2].i64[1]) {
            break;
          }
          if (v16 != 1)
          {
            if (v15[3].i64[0] != v12[3].i64[0] || v15[3].i64[1] != v12[3].i64[1]) {
              break;
            }
            uint64_t v20 = v16 - 2;
            if (v20)
            {
              char v21 = v15 + 4;
              uint64_t v22 = v12 + 4;
              while (1)
              {
                int32x2_t v23 = vmovn_s64(vceqq_s64(*v21, *v22));
                if ((v23.i32[0] & v23.i32[1] & 1) == 0) {
                  goto LABEL_45;
                }
                ++v21;
                ++v22;
                if (!--v20) {
                  goto LABEL_5;
                }
              }
            }
          }
        }
      }
    }
  }
LABEL_45:
  sub_100162714();
}

uint64_t sub_1002E728C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1002E7344(uint64_t a1)
{
  return a1;
}

unint64_t sub_1002E73FC()
{
  unint64_t result = qword_100E6A500;
  if (!qword_100E6A500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A500);
  }
  return result;
}

unint64_t sub_1002E7448()
{
  unint64_t result = qword_100E6A508;
  if (!qword_100E6A508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A508);
  }
  return result;
}

unint64_t sub_1002E7494()
{
  unint64_t result = qword_100E6A510;
  if (!qword_100E6A510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A510);
  }
  return result;
}

unint64_t sub_1002E74E0()
{
  unint64_t result = qword_100E6A518;
  if (!qword_100E6A518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A518);
  }
  return result;
}

unint64_t sub_1002E752C()
{
  unint64_t result = qword_100E6A520;
  if (!qword_100E6A520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A520);
  }
  return result;
}

unint64_t sub_1002E7578()
{
  unint64_t result = qword_100E6A530;
  if (!qword_100E6A530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A530);
  }
  return result;
}

unint64_t sub_1002E75C4()
{
  unint64_t result = qword_100E6A540;
  if (!qword_100E6A540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A540);
  }
  return result;
}

unint64_t sub_1002E7610()
{
  unint64_t result = qword_100E6A548;
  if (!qword_100E6A548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A548);
  }
  return result;
}

unint64_t sub_1002E765C()
{
  unint64_t result = qword_100E6A550;
  if (!qword_100E6A550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A550);
  }
  return result;
}

unint64_t sub_1002E76A8()
{
  unint64_t result = qword_100E6A560;
  if (!qword_100E6A560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A560);
  }
  return result;
}

unint64_t sub_1002E76F4()
{
  unint64_t result = qword_100E6A568;
  if (!qword_100E6A568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A568);
  }
  return result;
}

unint64_t sub_1002E7740()
{
  unint64_t result = qword_100E6A570;
  if (!qword_100E6A570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A570);
  }
  return result;
}

unint64_t sub_1002E778C()
{
  unint64_t result = qword_100E6A590;
  if (!qword_100E6A590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A590);
  }
  return result;
}

unint64_t sub_1002E77D8()
{
  unint64_t result = qword_100E6A5B8;
  if (!qword_100E6A5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A5B8);
  }
  return result;
}

unint64_t sub_1002E7824()
{
  unint64_t result = qword_100E6A5C0;
  if (!qword_100E6A5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A5C0);
  }
  return result;
}

unint64_t sub_1002E7870()
{
  unint64_t result = qword_100E6A5C8;
  if (!qword_100E6A5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A5C8);
  }
  return result;
}

unint64_t sub_1002E78BC()
{
  unint64_t result = qword_100E6A5D8;
  if (!qword_100E6A5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A5D8);
  }
  return result;
}

unint64_t sub_1002E7908()
{
  unint64_t result = qword_100E6A5E0;
  if (!qword_100E6A5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A5E0);
  }
  return result;
}

unint64_t sub_1002E7954()
{
  unint64_t result = qword_100E6A600;
  if (!qword_100E6A600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A600);
  }
  return result;
}

unint64_t sub_1002E79A0()
{
  unint64_t result = qword_100E6A608;
  if (!qword_100E6A608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A608);
  }
  return result;
}

unint64_t sub_1002E79EC()
{
  unint64_t result = qword_100E6A610;
  if (!qword_100E6A610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A610);
  }
  return result;
}

unint64_t sub_1002E7A38()
{
  unint64_t result = qword_100E6A618;
  if (!qword_100E6A618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A618);
  }
  return result;
}

unint64_t sub_1002E7A84()
{
  unint64_t result = qword_100E6A620;
  if (!qword_100E6A620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A620);
  }
  return result;
}

unint64_t sub_1002E7AD0()
{
  unint64_t result = qword_100E6A638;
  if (!qword_100E6A638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A638);
  }
  return result;
}

unint64_t sub_1002E7B1C()
{
  unint64_t result = qword_100E6A650;
  if (!qword_100E6A650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A650);
  }
  return result;
}

unint64_t sub_1002E7B68()
{
  unint64_t result = qword_100E6A660;
  if (!qword_100E6A660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A660);
  }
  return result;
}

unint64_t sub_1002E7BB4()
{
  unint64_t result = qword_100E6A670;
  if (!qword_100E6A670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A670);
  }
  return result;
}

unint64_t sub_1002E7C00()
{
  unint64_t result = qword_100E6A678;
  if (!qword_100E6A678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A678);
  }
  return result;
}

uint64_t sub_1002E7C4C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  sub_100163E60(a1, a2, a3);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(v3, v4);
  return v3;
}

unint64_t sub_1002E7C9C()
{
  unint64_t result = qword_100E6A6D0;
  if (!qword_100E6A6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A6D0);
  }
  return result;
}

unint64_t sub_1002E7CE8()
{
  unint64_t result = qword_100E6A710;
  if (!qword_100E6A710)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A710);
  }
  return result;
}

unint64_t sub_1002E7D34()
{
  unint64_t result = qword_100E6A738;
  if (!qword_100E6A738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A738);
  }
  return result;
}

unint64_t sub_1002E7D80()
{
  unint64_t result = qword_100E6A748;
  if (!qword_100E6A748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A748);
  }
  return result;
}

unint64_t sub_1002E7DCC()
{
  unint64_t result = qword_100E6A750;
  if (!qword_100E6A750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A750);
  }
  return result;
}

unint64_t sub_1002E7E18()
{
  unint64_t result = qword_100E6A758;
  if (!qword_100E6A758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A758);
  }
  return result;
}

unint64_t sub_1002E7E64()
{
  unint64_t result = qword_100E6A760;
  if (!qword_100E6A760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A760);
  }
  return result;
}

unint64_t sub_1002E7EB0()
{
  unint64_t result = qword_100E6A770;
  if (!qword_100E6A770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A770);
  }
  return result;
}

uint64_t sub_1002E7EFC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1002E7F68()
{
  unint64_t result = qword_100E6A780;
  if (!qword_100E6A780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A780);
  }
  return result;
}

unint64_t sub_1002E7FB4()
{
  unint64_t result = qword_100E6A790;
  if (!qword_100E6A790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A790);
  }
  return result;
}

unint64_t sub_1002E8000()
{
  unint64_t result = qword_100E6A7A0;
  if (!qword_100E6A7A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A7A0);
  }
  return result;
}

unint64_t sub_1002E804C()
{
  unint64_t result = qword_100E6A7B0;
  if (!qword_100E6A7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A7B0);
  }
  return result;
}

unint64_t sub_1002E8098()
{
  unint64_t result = qword_100E6A7B8;
  if (!qword_100E6A7B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A7B8);
  }
  return result;
}

unint64_t sub_1002E80E4()
{
  unint64_t result = qword_100E6A7D8;
  if (!qword_100E6A7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A7D8);
  }
  return result;
}

unint64_t sub_1002E8130()
{
  unint64_t result = qword_100E6A800;
  if (!qword_100E6A800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A800);
  }
  return result;
}

unint64_t sub_1002E817C()
{
  unint64_t result = qword_100E6A808;
  if (!qword_100E6A808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A808);
  }
  return result;
}

unint64_t sub_1002E81C8()
{
  unint64_t result = qword_100E6A810;
  if (!qword_100E6A810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A810);
  }
  return result;
}

unint64_t sub_1002E8214()
{
  unint64_t result = qword_100E6A828;
  if (!qword_100E6A828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A828);
  }
  return result;
}

unint64_t sub_1002E8260()
{
  unint64_t result = qword_100E6A830;
  if (!qword_100E6A830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A830);
  }
  return result;
}

unint64_t sub_1002E82AC()
{
  unint64_t result = qword_100E6A838;
  if (!qword_100E6A838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A838);
  }
  return result;
}

unint64_t sub_1002E82F8()
{
  unint64_t result = qword_100E6A840;
  if (!qword_100E6A840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A840);
  }
  return result;
}

unint64_t sub_1002E8344()
{
  unint64_t result = qword_100E6A850;
  if (!qword_100E6A850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A850);
  }
  return result;
}

unint64_t sub_1002E8390()
{
  unint64_t result = qword_100E6A858;
  if (!qword_100E6A858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A858);
  }
  return result;
}

unint64_t sub_1002E83DC()
{
  unint64_t result = qword_100E6A870;
  if (!qword_100E6A870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A870);
  }
  return result;
}

unint64_t sub_1002E8428()
{
  unint64_t result = qword_100E6A880;
  if (!qword_100E6A880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A880);
  }
  return result;
}

unint64_t sub_1002E8474()
{
  unint64_t result = qword_100E6A890;
  if (!qword_100E6A890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A890);
  }
  return result;
}

unint64_t sub_1002E84C0()
{
  unint64_t result = qword_100E6A8A0;
  if (!qword_100E6A8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A8A0);
  }
  return result;
}

unint64_t sub_1002E850C()
{
  unint64_t result = qword_100E6A8B0;
  if (!qword_100E6A8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A8B0);
  }
  return result;
}

unint64_t sub_1002E8558()
{
  unint64_t result = qword_100E6A8C0;
  if (!qword_100E6A8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A8C0);
  }
  return result;
}

unint64_t sub_1002E85A4()
{
  unint64_t result = qword_100E6A8D0;
  if (!qword_100E6A8D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A8D0);
  }
  return result;
}

unint64_t sub_1002E85F0()
{
  unint64_t result = qword_100E6A8E0;
  if (!qword_100E6A8E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A8E0);
  }
  return result;
}

unint64_t sub_1002E863C()
{
  unint64_t result = qword_100E6A8F0;
  if (!qword_100E6A8F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A8F0);
  }
  return result;
}

unint64_t sub_1002E8688()
{
  unint64_t result = qword_100E6A900;
  if (!qword_100E6A900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A900);
  }
  return result;
}

unint64_t sub_1002E86D4()
{
  unint64_t result = qword_100E6A910;
  if (!qword_100E6A910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A910);
  }
  return result;
}

unint64_t sub_1002E8720()
{
  unint64_t result = qword_100E6A920;
  if (!qword_100E6A920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A920);
  }
  return result;
}

unint64_t sub_1002E876C()
{
  unint64_t result = qword_100E6A930;
  if (!qword_100E6A930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A930);
  }
  return result;
}

unint64_t sub_1002E87B8()
{
  unint64_t result = qword_100E6A940;
  if (!qword_100E6A940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A940);
  }
  return result;
}

unint64_t sub_1002E8804()
{
  unint64_t result = qword_100E6A950;
  if (!qword_100E6A950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A950);
  }
  return result;
}

unint64_t sub_1002E8850()
{
  unint64_t result = qword_100E6A960;
  if (!qword_100E6A960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A960);
  }
  return result;
}

unint64_t sub_1002E889C()
{
  unint64_t result = qword_100E6A970;
  if (!qword_100E6A970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A970);
  }
  return result;
}

unint64_t sub_1002E88E8()
{
  unint64_t result = qword_100E6A980;
  if (!qword_100E6A980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A980);
  }
  return result;
}

unint64_t sub_1002E8934()
{
  unint64_t result = qword_100E6A990;
  if (!qword_100E6A990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A990);
  }
  return result;
}

unint64_t sub_1002E8980()
{
  unint64_t result = qword_100E6A9A0;
  if (!qword_100E6A9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A9A0);
  }
  return result;
}

unint64_t sub_1002E89CC()
{
  unint64_t result = qword_100E6A9B0;
  if (!qword_100E6A9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A9B0);
  }
  return result;
}

unint64_t sub_1002E8A18()
{
  unint64_t result = qword_100E6A9C0;
  if (!qword_100E6A9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A9C0);
  }
  return result;
}

unint64_t sub_1002E8A64()
{
  unint64_t result = qword_100E6A9D0;
  if (!qword_100E6A9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A9D0);
  }
  return result;
}

unint64_t sub_1002E8AB0()
{
  unint64_t result = qword_100E6A9E0;
  if (!qword_100E6A9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A9E0);
  }
  return result;
}

unint64_t sub_1002E8AFC()
{
  unint64_t result = qword_100E6A9F0;
  if (!qword_100E6A9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A9F0);
  }
  return result;
}

unint64_t sub_1002E8B48()
{
  unint64_t result = qword_100E6AA00;
  if (!qword_100E6AA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AA00);
  }
  return result;
}

unint64_t sub_1002E8B94()
{
  unint64_t result = qword_100E6AA08;
  if (!qword_100E6AA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AA08);
  }
  return result;
}

unint64_t sub_1002E8BE0()
{
  unint64_t result = qword_100E6AA10;
  if (!qword_100E6AA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AA10);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for LocationCommonConfigurationComponents._Storage.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF5)
  {
    if (a2 + 11 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 11) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 12;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v5 = v6 - 12;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for LocationCommonConfigurationComponents._Storage.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002E8D80);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationCommonConfigurationComponents._Storage.CodingKeys()
{
  return &type metadata for LocationCommonConfigurationComponents._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationDefaultConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationDefaultConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationDefaultNewsConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationDefaultNewsConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationDefaultTrendNewsConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationDefaultTrendNewsConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationElevatedAqiConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationElevatedAqiConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationElevatedAqiMinorAlertConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationElevatedAqiMinorAlertConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationElevatedAqiNewsConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationElevatedAqiNewsConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationElevatedAqiSevereConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationElevatedAqiSevereConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationElevatedAqiSevereNewsConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationElevatedAqiSevereNewsConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationMinorAlertConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationMinorAlertConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationNhpConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationNhpConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationNhpMinorAlertConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationNhpMinorAlertConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationNhpNewsConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationNhpNewsConfiguration._Storage.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for LocationNoAqiConfiguration._Storage.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002E8F5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_1002E8F84(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for LocationNoAqiConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationNoAqiConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationNoAqiNewsConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationNoAqiNewsConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationNoAqiNhpConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationNoAqiNhpConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationNoAqiNhpNewsConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationNoAqiNhpNewsConfiguration._Storage.CodingKeys;
}

uint64_t _s7Weather28LocationDefaultConfigurationV8_StorageC10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_100126064(-1);
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_100126064((*a1 | (v4 << 8)) - 3);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_100126064((*a1 | (v4 << 8)) - 3);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_100126064((*a1 | (v4 << 8)) - 3);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return sub_100126064(v8);
}

unsigned char *_s7Weather28LocationDefaultConfigurationV8_StorageC10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)sub_1001A4B38((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)sub_1001A688C((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002E9110);
      case 4:
        unint64_t result = (unsigned char *)sub_10011C010((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = sub_10019AA68(result, a2 + 2);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationNoAqiSevereConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationNoAqiSevereConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationNoAqiSevereNewsConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationNoAqiSevereNewsConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationNoAqiSevereNhpConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationNoAqiSevereNhpConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationNoAqiSevereNhpNewsConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationNoAqiSevereNhpNewsConfiguration._Storage.CodingKeys;
}

uint64_t _s7Weather32LocationDefaultNewsConfigurationV8_StorageC10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_100126064(-1);
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_100126064((*a1 | (v4 << 8)) - 4);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_100126064((*a1 | (v4 << 8)) - 4);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_100126064((*a1 | (v4 << 8)) - 4);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return sub_100126064(v8);
}

unsigned char *_s7Weather32LocationDefaultNewsConfigurationV8_StorageC10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)sub_1001A4B38((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)sub_1001A688C((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002E92B8);
      case 4:
        unint64_t result = (unsigned char *)sub_10011C010((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = sub_10019AA68(result, a2 + 3);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationSevereConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationSevereConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationSevereNewsConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationSevereNewsConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationSevereNhpAqiConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationSevereNhpAqiConfiguration._Storage.CodingKeys;
}

uint64_t _s7Weather42LocationElevatedAqiSevereNewsConfigurationV8_StorageC10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_100126064(-1);
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_100126064((*a1 | (v4 << 8)) - 5);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_100126064((*a1 | (v4 << 8)) - 5);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_100126064((*a1 | (v4 << 8)) - 5);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return sub_100126064(v8);
}

unsigned char *_s7Weather42LocationElevatedAqiSevereNewsConfigurationV8_StorageC10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)sub_1001A4B38((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)sub_1001A688C((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002E9450);
      case 4:
        unint64_t result = (unsigned char *)sub_10011C010((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = sub_10019AA68(result, a2 + 4);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationSevereNhpConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationSevereNhpConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationSevereNhpNewsConfiguration._Storage.CodingKeys()
{
  return &type metadata for LocationSevereNhpNewsConfiguration._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for MainState.CodingKeys()
{
  return &type metadata for MainState.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationCommonConfigurationComponents.CodingKeys()
{
  return &type metadata for LocationCommonConfigurationComponents.CodingKeys;
}

ValueMetadata *type metadata accessor for ReportWeatherViewState._Storage.CodingKeys()
{
  return &type metadata for ReportWeatherViewState._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for ReportWeatherContentViewModel._Storage.CodingKeys()
{
  return &type metadata for ReportWeatherContentViewModel._Storage.CodingKeys;
}

ValueMetadata *type metadata accessor for NotificationsOptInViewState._Storage.CodingKeys()
{
  return &type metadata for NotificationsOptInViewState._Storage.CodingKeys;
}

uint64_t _s7Weather29ReportWeatherContentViewModelV8_StorageC10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_100126064(-1);
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_100126064((*a1 | (v4 << 8)) - 13);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_100126064((*a1 | (v4 << 8)) - 13);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_100126064((*a1 | (v4 << 8)) - 13);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return sub_100126064(v8);
}

unsigned char *_s7Weather29ReportWeatherContentViewModelV8_StorageC10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *unint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)sub_1001A4B38((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)sub_1001A688C((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002E9644);
      case 4:
        unint64_t result = (unsigned char *)sub_10011C010((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = sub_10019AA68(result, a2 + 12);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MainState._Storage.CodingKeys()
{
  return &type metadata for MainState._Storage.CodingKeys;
}

uint64_t _s7Weather34LocationSevereNhpNewsConfigurationV8_StorageC10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return sub_100126064(-1);
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return sub_100126064((*a1 | (v4 << 8)) - 6);
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return sub_100126064((*a1 | (v4 << 8)) - 6);
    }
    int v4 = a1[1];
    if (a1[1]) {
      return sub_100126064((*a1 | (v4 << 8)) - 6);
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return sub_100126064(v8);
}

unsigned char *_s7Weather34LocationSevereNhpNewsConfigurationV8_StorageC10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        unint64_t result = (unsigned char *)sub_1001A4B38((uint64_t)result, v6);
        break;
      case 2:
        unint64_t result = (unsigned char *)sub_1001A688C((uint64_t)result, v6);
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002E97BCLL);
      case 4:
        unint64_t result = (unsigned char *)sub_10011C010((uint64_t)result, v6);
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          unint64_t result = sub_10019AA68(result, a2 + 5);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationViewerViewState._Storage.CodingKeys()
{
  return &type metadata for LocationViewerViewState._Storage.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ListViewState._Storage.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF7)
  {
    if (a2 + 9 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 9) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 10;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v5 = v6 - 10;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ListViewState._Storage.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *unint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002E9948);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListViewState._Storage.CodingKeys()
{
  return &type metadata for ListViewState._Storage.CodingKeys;
}

void type metadata accessor for DefaultContent()
{
}

void type metadata accessor for DefaultNewsContent()
{
}

void type metadata accessor for DefaultTrendNewsContent()
{
}

void type metadata accessor for ElevatedAqiContent()
{
}

void type metadata accessor for ElevatedAqiMinorAlertContent()
{
}

void type metadata accessor for ElevatedAqiNewsContent()
{
}

void type metadata accessor for ElevatedAqiSevereContent()
{
}

void type metadata accessor for ElevatedAqiSevereNewsContent()
{
}

void type metadata accessor for ListViewState()
{
}

void type metadata accessor for LocationDefaultConfiguration()
{
}

void type metadata accessor for LocationDefaultNewsConfiguration()
{
}

void type metadata accessor for LocationDefaultTrendNewsConfiguration()
{
}

void type metadata accessor for LocationElevatedAqiConfiguration()
{
}

void type metadata accessor for LocationElevatedAqiMinorAlertConfiguration()
{
}

void type metadata accessor for LocationElevatedAqiNewsConfiguration()
{
}

void type metadata accessor for LocationElevatedAqiSevereConfiguration()
{
}

void type metadata accessor for LocationElevatedAqiSevereNewsConfiguration()
{
}

void type metadata accessor for LocationMinorAlertConfiguration()
{
}

void type metadata accessor for LocationNhpConfiguration()
{
}

void type metadata accessor for LocationNhpMinorAlertConfiguration()
{
}

void type metadata accessor for LocationNhpNewsConfiguration()
{
}

void type metadata accessor for LocationNoAqiConfiguration()
{
}

void type metadata accessor for LocationNoAqiNewsConfiguration()
{
}

void type metadata accessor for LocationNoAqiNhpConfiguration()
{
}

void type metadata accessor for LocationNoAqiNhpNewsConfiguration()
{
}

void type metadata accessor for LocationNoAqiSevereConfiguration()
{
}

void type metadata accessor for LocationNoAqiSevereNewsConfiguration()
{
}

void type metadata accessor for LocationNoAqiSevereNhpConfiguration()
{
}

void type metadata accessor for LocationNoAqiSevereNhpNewsConfiguration()
{
}

void type metadata accessor for LocationSevereConfiguration()
{
}

void type metadata accessor for LocationSevereNewsConfiguration()
{
}

void type metadata accessor for LocationSevereNhpAqiConfiguration()
{
}

void type metadata accessor for LocationSevereNhpConfiguration()
{
}

void type metadata accessor for LocationSevereNhpNewsConfiguration()
{
}

void type metadata accessor for MinorAlertContent()
{
}

void type metadata accessor for NhpContent()
{
}

void type metadata accessor for NhpMinorAlertContent()
{
}

void type metadata accessor for NhpNewsContent()
{
}

void type metadata accessor for NoAqiContent()
{
}

void type metadata accessor for NoAqiNewsContent()
{
}

void type metadata accessor for NoAqiNhpContent()
{
}

void type metadata accessor for NoAqiNhpNewsContent()
{
}

void type metadata accessor for NoAqiSevereContent()
{
}

void type metadata accessor for NoAqiSevereNewsContent()
{
}

void type metadata accessor for NoAqiSevereNhpContent()
{
}

void type metadata accessor for NoAqiSevereNhpNewsContent()
{
}

void type metadata accessor for SevereContent()
{
}

void type metadata accessor for SevereNewsContent()
{
}

void type metadata accessor for SevereNhpAqiContent()
{
}

void type metadata accessor for SevereNhpContent()
{
}

void type metadata accessor for SevereNhpNewsContent()
{
}

void type metadata accessor for LocationViewerViewState()
{
}

void type metadata accessor for TemperatureAveragesDetailViewModel()
{
}

void type metadata accessor for PrecipitationAveragesDetailViewModel()
{
}

void type metadata accessor for ReportWeatherContentViewModel()
{
}

void type metadata accessor for ReportWeatherViewState()
{
}

void type metadata accessor for NotificationsOptInViewState()
{
}

unint64_t sub_1002E9C30()
{
  unint64_t result = qword_100E6AA18;
  if (!qword_100E6AA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AA18);
  }
  return result;
}

unint64_t sub_1002E9C80()
{
  unint64_t result = qword_100E6AA20;
  if (!qword_100E6AA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AA20);
  }
  return result;
}

unint64_t sub_1002E9CD0()
{
  unint64_t result = qword_100E6AA28;
  if (!qword_100E6AA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AA28);
  }
  return result;
}

unint64_t sub_1002E9D20()
{
  unint64_t result = qword_100E6AA30;
  if (!qword_100E6AA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AA30);
  }
  return result;
}

unint64_t sub_1002E9D70()
{
  unint64_t result = qword_100E6AA38;
  if (!qword_100E6AA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AA38);
  }
  return result;
}

unint64_t sub_1002E9DC0()
{
  unint64_t result = qword_100E6AA40;
  if (!qword_100E6AA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AA40);
  }
  return result;
}

unint64_t sub_1002E9E10()
{
  unint64_t result = qword_100E6AA48;
  if (!qword_100E6AA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AA48);
  }
  return result;
}

unint64_t sub_1002E9E60()
{
  unint64_t result = qword_100E6AA50;
  if (!qword_100E6AA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AA50);
  }
  return result;
}

unint64_t sub_1002E9EB0()
{
  unint64_t result = qword_100E6AA58;
  if (!qword_100E6AA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AA58);
  }
  return result;
}

unint64_t sub_1002E9F00()
{
  unint64_t result = qword_100E6AA60;
  if (!qword_100E6AA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AA60);
  }
  return result;
}

unint64_t sub_1002E9F50()
{
  unint64_t result = qword_100E6AA68;
  if (!qword_100E6AA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AA68);
  }
  return result;
}

unint64_t sub_1002E9FA0()
{
  unint64_t result = qword_100E6AA70;
  if (!qword_100E6AA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AA70);
  }
  return result;
}

unint64_t sub_1002E9FF0()
{
  unint64_t result = qword_100E6AA78;
  if (!qword_100E6AA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AA78);
  }
  return result;
}

unint64_t sub_1002EA040()
{
  unint64_t result = qword_100E6AA80;
  if (!qword_100E6AA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AA80);
  }
  return result;
}

unint64_t sub_1002EA090()
{
  unint64_t result = qword_100E6AA88;
  if (!qword_100E6AA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AA88);
  }
  return result;
}

unint64_t sub_1002EA0E0()
{
  unint64_t result = qword_100E6AA90;
  if (!qword_100E6AA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AA90);
  }
  return result;
}

unint64_t sub_1002EA130()
{
  unint64_t result = qword_100E6AA98;
  if (!qword_100E6AA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AA98);
  }
  return result;
}

unint64_t sub_1002EA180()
{
  unint64_t result = qword_100E6AAA0;
  if (!qword_100E6AAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AAA0);
  }
  return result;
}

unint64_t sub_1002EA1D0()
{
  unint64_t result = qword_100E6AAA8;
  if (!qword_100E6AAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AAA8);
  }
  return result;
}

unint64_t sub_1002EA220()
{
  unint64_t result = qword_100E6AAB0;
  if (!qword_100E6AAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AAB0);
  }
  return result;
}

unint64_t sub_1002EA270()
{
  unint64_t result = qword_100E6AAB8;
  if (!qword_100E6AAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AAB8);
  }
  return result;
}

unint64_t sub_1002EA2C0()
{
  unint64_t result = qword_100E6AAC0;
  if (!qword_100E6AAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AAC0);
  }
  return result;
}

unint64_t sub_1002EA310()
{
  unint64_t result = qword_100E6AAC8;
  if (!qword_100E6AAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AAC8);
  }
  return result;
}

unint64_t sub_1002EA360()
{
  unint64_t result = qword_100E6AAD0;
  if (!qword_100E6AAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AAD0);
  }
  return result;
}

unint64_t sub_1002EA3B0()
{
  unint64_t result = qword_100E6AAD8;
  if (!qword_100E6AAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AAD8);
  }
  return result;
}

unint64_t sub_1002EA400()
{
  unint64_t result = qword_100E6AAE0;
  if (!qword_100E6AAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AAE0);
  }
  return result;
}

unint64_t sub_1002EA450()
{
  unint64_t result = qword_100E6AAE8;
  if (!qword_100E6AAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AAE8);
  }
  return result;
}

unint64_t sub_1002EA4A0()
{
  unint64_t result = qword_100E6AAF0;
  if (!qword_100E6AAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AAF0);
  }
  return result;
}

unint64_t sub_1002EA4F0()
{
  unint64_t result = qword_100E6AAF8;
  if (!qword_100E6AAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AAF8);
  }
  return result;
}

unint64_t sub_1002EA540()
{
  unint64_t result = qword_100E6AB00;
  if (!qword_100E6AB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AB00);
  }
  return result;
}

unint64_t sub_1002EA590()
{
  unint64_t result = qword_100E6AB08;
  if (!qword_100E6AB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AB08);
  }
  return result;
}

unint64_t sub_1002EA5E0()
{
  unint64_t result = qword_100E6AB10;
  if (!qword_100E6AB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AB10);
  }
  return result;
}

unint64_t sub_1002EA630()
{
  unint64_t result = qword_100E6AB18;
  if (!qword_100E6AB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AB18);
  }
  return result;
}

unint64_t sub_1002EA680()
{
  unint64_t result = qword_100E6AB20;
  if (!qword_100E6AB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AB20);
  }
  return result;
}

unint64_t sub_1002EA6D0()
{
  unint64_t result = qword_100E6AB28;
  if (!qword_100E6AB28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AB28);
  }
  return result;
}

unint64_t sub_1002EA720()
{
  unint64_t result = qword_100E6AB30;
  if (!qword_100E6AB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AB30);
  }
  return result;
}

unint64_t sub_1002EA770()
{
  unint64_t result = qword_100E6AB38;
  if (!qword_100E6AB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AB38);
  }
  return result;
}

unint64_t sub_1002EA7C0()
{
  unint64_t result = qword_100E6AB40;
  if (!qword_100E6AB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AB40);
  }
  return result;
}

unint64_t sub_1002EA810()
{
  unint64_t result = qword_100E6AB48;
  if (!qword_100E6AB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AB48);
  }
  return result;
}

unint64_t sub_1002EA860()
{
  unint64_t result = qword_100E6AB50;
  if (!qword_100E6AB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AB50);
  }
  return result;
}

unint64_t sub_1002EA8B0()
{
  unint64_t result = qword_100E6AB58;
  if (!qword_100E6AB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AB58);
  }
  return result;
}

unint64_t sub_1002EA900()
{
  unint64_t result = qword_100E6AB60;
  if (!qword_100E6AB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AB60);
  }
  return result;
}

unint64_t sub_1002EA950()
{
  unint64_t result = qword_100E6AB68;
  if (!qword_100E6AB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AB68);
  }
  return result;
}

unint64_t sub_1002EA9A0()
{
  unint64_t result = qword_100E6AB70;
  if (!qword_100E6AB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AB70);
  }
  return result;
}

unint64_t sub_1002EA9F0()
{
  unint64_t result = qword_100E6AB78;
  if (!qword_100E6AB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AB78);
  }
  return result;
}

unint64_t sub_1002EAA40()
{
  unint64_t result = qword_100E6AB80;
  if (!qword_100E6AB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AB80);
  }
  return result;
}

unint64_t sub_1002EAA90()
{
  unint64_t result = qword_100E6AB88;
  if (!qword_100E6AB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AB88);
  }
  return result;
}

unint64_t sub_1002EAAE0()
{
  unint64_t result = qword_100E6AB90;
  if (!qword_100E6AB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AB90);
  }
  return result;
}

unint64_t sub_1002EAB30()
{
  unint64_t result = qword_100E6AB98;
  if (!qword_100E6AB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AB98);
  }
  return result;
}

unint64_t sub_1002EAB80()
{
  unint64_t result = qword_100E6ABA0;
  if (!qword_100E6ABA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6ABA0);
  }
  return result;
}

unint64_t sub_1002EABD0()
{
  unint64_t result = qword_100E6ABA8;
  if (!qword_100E6ABA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6ABA8);
  }
  return result;
}

unint64_t sub_1002EAC20()
{
  unint64_t result = qword_100E6ABB0;
  if (!qword_100E6ABB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6ABB0);
  }
  return result;
}

unint64_t sub_1002EAC70()
{
  unint64_t result = qword_100E6ABB8;
  if (!qword_100E6ABB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6ABB8);
  }
  return result;
}

unint64_t sub_1002EACC0()
{
  unint64_t result = qword_100E6ABC0;
  if (!qword_100E6ABC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6ABC0);
  }
  return result;
}

unint64_t sub_1002EAD10()
{
  unint64_t result = qword_100E6ABC8;
  if (!qword_100E6ABC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6ABC8);
  }
  return result;
}

unint64_t sub_1002EAD60()
{
  unint64_t result = qword_100E6ABD0;
  if (!qword_100E6ABD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6ABD0);
  }
  return result;
}

unint64_t sub_1002EADB0()
{
  unint64_t result = qword_100E6ABD8;
  if (!qword_100E6ABD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6ABD8);
  }
  return result;
}

unint64_t sub_1002EAE00()
{
  unint64_t result = qword_100E6ABE0;
  if (!qword_100E6ABE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6ABE0);
  }
  return result;
}

unint64_t sub_1002EAE50()
{
  unint64_t result = qword_100E6ABE8;
  if (!qword_100E6ABE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6ABE8);
  }
  return result;
}

unint64_t sub_1002EAEA0()
{
  unint64_t result = qword_100E6ABF0;
  if (!qword_100E6ABF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6ABF0);
  }
  return result;
}

unint64_t sub_1002EAEF0()
{
  unint64_t result = qword_100E6ABF8;
  if (!qword_100E6ABF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6ABF8);
  }
  return result;
}

unint64_t sub_1002EAF40()
{
  unint64_t result = qword_100E6AC00;
  if (!qword_100E6AC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AC00);
  }
  return result;
}

unint64_t sub_1002EAF90()
{
  unint64_t result = qword_100E6AC08;
  if (!qword_100E6AC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AC08);
  }
  return result;
}

unint64_t sub_1002EAFE0()
{
  unint64_t result = qword_100E6AC10;
  if (!qword_100E6AC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AC10);
  }
  return result;
}

unint64_t sub_1002EB030()
{
  unint64_t result = qword_100E6AC18;
  if (!qword_100E6AC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AC18);
  }
  return result;
}

unint64_t sub_1002EB080()
{
  unint64_t result = qword_100E6AC20;
  if (!qword_100E6AC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AC20);
  }
  return result;
}

unint64_t sub_1002EB0D0()
{
  unint64_t result = qword_100E6AC28;
  if (!qword_100E6AC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AC28);
  }
  return result;
}

unint64_t sub_1002EB120()
{
  unint64_t result = qword_100E6AC30;
  if (!qword_100E6AC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AC30);
  }
  return result;
}

unint64_t sub_1002EB170()
{
  unint64_t result = qword_100E6AC38;
  if (!qword_100E6AC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AC38);
  }
  return result;
}

unint64_t sub_1002EB1C0()
{
  unint64_t result = qword_100E6AC40;
  if (!qword_100E6AC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AC40);
  }
  return result;
}

unint64_t sub_1002EB210()
{
  unint64_t result = qword_100E6AC48;
  if (!qword_100E6AC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AC48);
  }
  return result;
}

unint64_t sub_1002EB260()
{
  unint64_t result = qword_100E6AC50;
  if (!qword_100E6AC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AC50);
  }
  return result;
}

unint64_t sub_1002EB2B0()
{
  unint64_t result = qword_100E6AC58;
  if (!qword_100E6AC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AC58);
  }
  return result;
}

unint64_t sub_1002EB300()
{
  unint64_t result = qword_100E6AC60;
  if (!qword_100E6AC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AC60);
  }
  return result;
}

unint64_t sub_1002EB350()
{
  unint64_t result = qword_100E6AC68;
  if (!qword_100E6AC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AC68);
  }
  return result;
}

unint64_t sub_1002EB3A0()
{
  unint64_t result = qword_100E6AC70;
  if (!qword_100E6AC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AC70);
  }
  return result;
}

unint64_t sub_1002EB3F0()
{
  unint64_t result = qword_100E6AC78;
  if (!qword_100E6AC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AC78);
  }
  return result;
}

unint64_t sub_1002EB440()
{
  unint64_t result = qword_100E6AC80;
  if (!qword_100E6AC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AC80);
  }
  return result;
}

unint64_t sub_1002EB490()
{
  unint64_t result = qword_100E6AC88;
  if (!qword_100E6AC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AC88);
  }
  return result;
}

unint64_t sub_1002EB4E0()
{
  unint64_t result = qword_100E6AC90;
  if (!qword_100E6AC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AC90);
  }
  return result;
}

unint64_t sub_1002EB530()
{
  unint64_t result = qword_100E6AC98;
  if (!qword_100E6AC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AC98);
  }
  return result;
}

unint64_t sub_1002EB580()
{
  unint64_t result = qword_100E6ACA0;
  if (!qword_100E6ACA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6ACA0);
  }
  return result;
}

unint64_t sub_1002EB5D0()
{
  unint64_t result = qword_100E6ACA8;
  if (!qword_100E6ACA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6ACA8);
  }
  return result;
}

unint64_t sub_1002EB620()
{
  unint64_t result = qword_100E6ACB0;
  if (!qword_100E6ACB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6ACB0);
  }
  return result;
}

unint64_t sub_1002EB670()
{
  unint64_t result = qword_100E6ACB8;
  if (!qword_100E6ACB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6ACB8);
  }
  return result;
}

unint64_t sub_1002EB6C0()
{
  unint64_t result = qword_100E6ACC0;
  if (!qword_100E6ACC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6ACC0);
  }
  return result;
}

unint64_t sub_1002EB710()
{
  unint64_t result = qword_100E6ACC8;
  if (!qword_100E6ACC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6ACC8);
  }
  return result;
}

unint64_t sub_1002EB760()
{
  unint64_t result = qword_100E6ACD0;
  if (!qword_100E6ACD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6ACD0);
  }
  return result;
}

unint64_t sub_1002EB7B0()
{
  unint64_t result = qword_100E6ACD8;
  if (!qword_100E6ACD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6ACD8);
  }
  return result;
}

unint64_t sub_1002EB800()
{
  unint64_t result = qword_100E6ACE0;
  if (!qword_100E6ACE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6ACE0);
  }
  return result;
}

unint64_t sub_1002EB850()
{
  unint64_t result = qword_100E6ACE8;
  if (!qword_100E6ACE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6ACE8);
  }
  return result;
}

unint64_t sub_1002EB8A0()
{
  unint64_t result = qword_100E6ACF0;
  if (!qword_100E6ACF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6ACF0);
  }
  return result;
}

unint64_t sub_1002EB8F0()
{
  unint64_t result = qword_100E6ACF8;
  if (!qword_100E6ACF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6ACF8);
  }
  return result;
}

unint64_t sub_1002EB940()
{
  unint64_t result = qword_100E6AD00;
  if (!qword_100E6AD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AD00);
  }
  return result;
}

unint64_t sub_1002EB990()
{
  unint64_t result = qword_100E6AD08;
  if (!qword_100E6AD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AD08);
  }
  return result;
}

unint64_t sub_1002EB9E0()
{
  unint64_t result = qword_100E6AD10;
  if (!qword_100E6AD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AD10);
  }
  return result;
}

unint64_t sub_1002EBA30()
{
  unint64_t result = qword_100E6AD18;
  if (!qword_100E6AD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AD18);
  }
  return result;
}

unint64_t sub_1002EBA80()
{
  unint64_t result = qword_100E6AD20;
  if (!qword_100E6AD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AD20);
  }
  return result;
}

unint64_t sub_1002EBAD0()
{
  unint64_t result = qword_100E6AD28;
  if (!qword_100E6AD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AD28);
  }
  return result;
}

unint64_t sub_1002EBB20()
{
  unint64_t result = qword_100E6AD30;
  if (!qword_100E6AD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AD30);
  }
  return result;
}

unint64_t sub_1002EBB70()
{
  unint64_t result = qword_100E6AD38;
  if (!qword_100E6AD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AD38);
  }
  return result;
}

unint64_t sub_1002EBBC0()
{
  unint64_t result = qword_100E6AD40;
  if (!qword_100E6AD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AD40);
  }
  return result;
}

unint64_t sub_1002EBC0C()
{
  unint64_t result = qword_100E6AD50;
  if (!qword_100E6AD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AD50);
  }
  return result;
}

unint64_t sub_1002EBC58()
{
  unint64_t result = qword_100E6AD78;
  if (!qword_100E6AD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AD78);
  }
  return result;
}

unint64_t sub_1002EBCA4()
{
  unint64_t result = qword_100E6ADA0;
  if (!qword_100E6ADA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6ADA0);
  }
  return result;
}

unint64_t sub_1002EBCF0()
{
  unint64_t result = qword_100E6ADC8;
  if (!qword_100E6ADC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6ADC8);
  }
  return result;
}

unint64_t sub_1002EBD3C()
{
  unint64_t result = qword_100E6ADE0;
  if (!qword_100E6ADE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6ADE0);
  }
  return result;
}

unint64_t sub_1002EBD88()
{
  unint64_t result = qword_100E6AE18;
  if (!qword_100E6AE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AE18);
  }
  return result;
}

unint64_t sub_1002EBDD4()
{
  unint64_t result = qword_100E6AE30;
  if (!qword_100E6AE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AE30);
  }
  return result;
}

unint64_t sub_1002EBE20()
{
  unint64_t result = qword_100E6AE48;
  if (!qword_100E6AE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AE48);
  }
  return result;
}

unint64_t sub_1002EBE6C()
{
  unint64_t result = qword_100E6AE60;
  if (!qword_100E6AE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AE60);
  }
  return result;
}

unint64_t sub_1002EBEB8()
{
  unint64_t result = qword_100E6AE78;
  if (!qword_100E6AE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AE78);
  }
  return result;
}

unint64_t sub_1002EBF04()
{
  unint64_t result = qword_100E6AE90;
  if (!qword_100E6AE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AE90);
  }
  return result;
}

unint64_t sub_1002EBF50()
{
  unint64_t result = qword_100E6AEA8;
  if (!qword_100E6AEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AEA8);
  }
  return result;
}

unint64_t sub_1002EBF9C()
{
  unint64_t result = qword_100E6AEC0;
  if (!qword_100E6AEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AEC0);
  }
  return result;
}

unint64_t sub_1002EBFE8()
{
  unint64_t result = qword_100E6AED8;
  if (!qword_100E6AED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AED8);
  }
  return result;
}

unint64_t sub_1002EC034()
{
  unint64_t result = qword_100E6AEF0;
  if (!qword_100E6AEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AEF0);
  }
  return result;
}

unint64_t sub_1002EC080()
{
  unint64_t result = qword_100E6AF08;
  if (!qword_100E6AF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AF08);
  }
  return result;
}

unint64_t sub_1002EC0CC()
{
  unint64_t result = qword_100E6AF20;
  if (!qword_100E6AF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AF20);
  }
  return result;
}

unint64_t sub_1002EC118()
{
  unint64_t result = qword_100E6AF38;
  if (!qword_100E6AF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AF38);
  }
  return result;
}

unint64_t sub_1002EC164()
{
  unint64_t result = qword_100E6AF50;
  if (!qword_100E6AF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AF50);
  }
  return result;
}

unint64_t sub_1002EC1B0()
{
  unint64_t result = qword_100E6AF68;
  if (!qword_100E6AF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AF68);
  }
  return result;
}

unint64_t sub_1002EC1FC()
{
  unint64_t result = qword_100E6AF80;
  if (!qword_100E6AF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AF80);
  }
  return result;
}

unint64_t sub_1002EC248()
{
  unint64_t result = qword_100E6AF98;
  if (!qword_100E6AF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AF98);
  }
  return result;
}

unint64_t sub_1002EC294()
{
  unint64_t result = qword_100E6AFB0;
  if (!qword_100E6AFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AFB0);
  }
  return result;
}

unint64_t sub_1002EC2E0()
{
  unint64_t result = qword_100E6AFC8;
  if (!qword_100E6AFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AFC8);
  }
  return result;
}

unint64_t sub_1002EC32C()
{
  unint64_t result = qword_100E6AFE0;
  if (!qword_100E6AFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AFE0);
  }
  return result;
}

unint64_t sub_1002EC378()
{
  unint64_t result = qword_100E6AFF8;
  if (!qword_100E6AFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6AFF8);
  }
  return result;
}

unint64_t sub_1002EC3C4()
{
  unint64_t result = qword_100E6B010;
  if (!qword_100E6B010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B010);
  }
  return result;
}

unint64_t sub_1002EC410()
{
  unint64_t result = qword_100E6B028;
  if (!qword_100E6B028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B028);
  }
  return result;
}

unint64_t sub_1002EC45C()
{
  unint64_t result = qword_100E6B040;
  if (!qword_100E6B040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B040);
  }
  return result;
}

unint64_t sub_1002EC4A8()
{
  unint64_t result = qword_100E6B058;
  if (!qword_100E6B058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B058);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationSevereNhpNewsConfiguration.CodingKeys()
{
  return &type metadata for LocationSevereNhpNewsConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationSevereNhpConfiguration.CodingKeys()
{
  return &type metadata for LocationSevereNhpConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationSevereNhpAqiConfiguration.CodingKeys()
{
  return &type metadata for LocationSevereNhpAqiConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationSevereNewsConfiguration.CodingKeys()
{
  return &type metadata for LocationSevereNewsConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationSevereConfiguration.CodingKeys()
{
  return &type metadata for LocationSevereConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationNoAqiSevereNhpNewsConfiguration.CodingKeys()
{
  return &type metadata for LocationNoAqiSevereNhpNewsConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationNoAqiSevereNhpConfiguration.CodingKeys()
{
  return &type metadata for LocationNoAqiSevereNhpConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationNoAqiSevereNewsConfiguration.CodingKeys()
{
  return &type metadata for LocationNoAqiSevereNewsConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationNoAqiSevereConfiguration.CodingKeys()
{
  return &type metadata for LocationNoAqiSevereConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationNoAqiNhpNewsConfiguration.CodingKeys()
{
  return &type metadata for LocationNoAqiNhpNewsConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationNoAqiNhpConfiguration.CodingKeys()
{
  return &type metadata for LocationNoAqiNhpConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationNoAqiNewsConfiguration.CodingKeys()
{
  return &type metadata for LocationNoAqiNewsConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationNoAqiConfiguration.CodingKeys()
{
  return &type metadata for LocationNoAqiConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationNhpNewsConfiguration.CodingKeys()
{
  return &type metadata for LocationNhpNewsConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationNhpMinorAlertConfiguration.CodingKeys()
{
  return &type metadata for LocationNhpMinorAlertConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationNhpConfiguration.CodingKeys()
{
  return &type metadata for LocationNhpConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationMinorAlertConfiguration.CodingKeys()
{
  return &type metadata for LocationMinorAlertConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationElevatedAqiSevereNewsConfiguration.CodingKeys()
{
  return &type metadata for LocationElevatedAqiSevereNewsConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationElevatedAqiSevereConfiguration.CodingKeys()
{
  return &type metadata for LocationElevatedAqiSevereConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationElevatedAqiNewsConfiguration.CodingKeys()
{
  return &type metadata for LocationElevatedAqiNewsConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationElevatedAqiMinorAlertConfiguration.CodingKeys()
{
  return &type metadata for LocationElevatedAqiMinorAlertConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationElevatedAqiConfiguration.CodingKeys()
{
  return &type metadata for LocationElevatedAqiConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationDefaultTrendNewsConfiguration.CodingKeys()
{
  return &type metadata for LocationDefaultTrendNewsConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationDefaultNewsConfiguration.CodingKeys()
{
  return &type metadata for LocationDefaultNewsConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationDefaultConfiguration.CodingKeys()
{
  return &type metadata for LocationDefaultConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for NotificationsOptInViewState.CodingKeys()
{
  return &type metadata for NotificationsOptInViewState.CodingKeys;
}

ValueMetadata *type metadata accessor for ReportWeatherViewState.CodingKeys()
{
  return &type metadata for ReportWeatherViewState.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationViewerViewState.CodingKeys()
{
  return &type metadata for LocationViewerViewState.CodingKeys;
}

ValueMetadata *type metadata accessor for ListViewState.CodingKeys()
{
  return &type metadata for ListViewState.CodingKeys;
}

uint64_t getEnumTagSinglePayload for TimeAction(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s7Weather9MainStateV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1002EC7B0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReportWeatherContentViewModel.CodingKeys()
{
  return &type metadata for ReportWeatherContentViewModel.CodingKeys;
}

unint64_t sub_1002EC7EC()
{
  unint64_t result = qword_100E6B068;
  if (!qword_100E6B068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B068);
  }
  return result;
}

unint64_t sub_1002EC83C()
{
  unint64_t result = qword_100E6B070;
  if (!qword_100E6B070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B070);
  }
  return result;
}

unint64_t sub_1002EC88C()
{
  unint64_t result = qword_100E6B078;
  if (!qword_100E6B078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B078);
  }
  return result;
}

unint64_t sub_1002EC8DC()
{
  unint64_t result = qword_100E6B080;
  if (!qword_100E6B080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B080);
  }
  return result;
}

unint64_t sub_1002EC92C()
{
  unint64_t result = qword_100E6B088;
  if (!qword_100E6B088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B088);
  }
  return result;
}

unint64_t sub_1002EC97C()
{
  unint64_t result = qword_100E6B090;
  if (!qword_100E6B090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B090);
  }
  return result;
}

unint64_t sub_1002EC9CC()
{
  unint64_t result = qword_100E6B098;
  if (!qword_100E6B098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B098);
  }
  return result;
}

unint64_t sub_1002ECA1C()
{
  unint64_t result = qword_100E6B0A0;
  if (!qword_100E6B0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B0A0);
  }
  return result;
}

unint64_t sub_1002ECA6C()
{
  unint64_t result = qword_100E6B0A8;
  if (!qword_100E6B0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B0A8);
  }
  return result;
}

unint64_t sub_1002ECABC()
{
  unint64_t result = qword_100E6B0B0;
  if (!qword_100E6B0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B0B0);
  }
  return result;
}

unint64_t sub_1002ECB0C()
{
  unint64_t result = qword_100E6B0B8;
  if (!qword_100E6B0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B0B8);
  }
  return result;
}

unint64_t sub_1002ECB5C()
{
  unint64_t result = qword_100E6B0C0;
  if (!qword_100E6B0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B0C0);
  }
  return result;
}

unint64_t sub_1002ECBAC()
{
  unint64_t result = qword_100E6B0C8;
  if (!qword_100E6B0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B0C8);
  }
  return result;
}

unint64_t sub_1002ECBFC()
{
  unint64_t result = qword_100E6B0D0;
  if (!qword_100E6B0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B0D0);
  }
  return result;
}

unint64_t sub_1002ECC4C()
{
  unint64_t result = qword_100E6B0D8;
  if (!qword_100E6B0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B0D8);
  }
  return result;
}

unint64_t sub_1002ECC9C()
{
  unint64_t result = qword_100E6B0E0;
  if (!qword_100E6B0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B0E0);
  }
  return result;
}

unint64_t sub_1002ECCEC()
{
  unint64_t result = qword_100E6B0E8;
  if (!qword_100E6B0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B0E8);
  }
  return result;
}

unint64_t sub_1002ECD3C()
{
  unint64_t result = qword_100E6B0F0;
  if (!qword_100E6B0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B0F0);
  }
  return result;
}

unint64_t sub_1002ECD8C()
{
  unint64_t result = qword_100E6B0F8;
  if (!qword_100E6B0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B0F8);
  }
  return result;
}

unint64_t sub_1002ECDDC()
{
  unint64_t result = qword_100E6B100;
  if (!qword_100E6B100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B100);
  }
  return result;
}

unint64_t sub_1002ECE2C()
{
  unint64_t result = qword_100E6B108;
  if (!qword_100E6B108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B108);
  }
  return result;
}

unint64_t sub_1002ECE7C()
{
  unint64_t result = qword_100E6B110;
  if (!qword_100E6B110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B110);
  }
  return result;
}

unint64_t sub_1002ECECC()
{
  unint64_t result = qword_100E6B118;
  if (!qword_100E6B118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B118);
  }
  return result;
}

unint64_t sub_1002ECF1C()
{
  unint64_t result = qword_100E6B120;
  if (!qword_100E6B120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B120);
  }
  return result;
}

unint64_t sub_1002ECF6C()
{
  unint64_t result = qword_100E6B128;
  if (!qword_100E6B128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B128);
  }
  return result;
}

unint64_t sub_1002ECFBC()
{
  unint64_t result = qword_100E6B130;
  if (!qword_100E6B130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B130);
  }
  return result;
}

unint64_t sub_1002ED00C()
{
  unint64_t result = qword_100E6B138;
  if (!qword_100E6B138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B138);
  }
  return result;
}

unint64_t sub_1002ED05C()
{
  unint64_t result = qword_100E6B140;
  if (!qword_100E6B140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B140);
  }
  return result;
}

unint64_t sub_1002ED0AC()
{
  unint64_t result = qword_100E6B148;
  if (!qword_100E6B148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B148);
  }
  return result;
}

unint64_t sub_1002ED0FC()
{
  unint64_t result = qword_100E6B150;
  if (!qword_100E6B150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B150);
  }
  return result;
}

unint64_t sub_1002ED14C()
{
  unint64_t result = qword_100E6B158;
  if (!qword_100E6B158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B158);
  }
  return result;
}

unint64_t sub_1002ED19C()
{
  unint64_t result = qword_100E6B160;
  if (!qword_100E6B160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B160);
  }
  return result;
}

unint64_t sub_1002ED1EC()
{
  unint64_t result = qword_100E6B168;
  if (!qword_100E6B168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B168);
  }
  return result;
}

unint64_t sub_1002ED23C()
{
  unint64_t result = qword_100E6B170;
  if (!qword_100E6B170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B170);
  }
  return result;
}

unint64_t sub_1002ED28C()
{
  unint64_t result = qword_100E6B178;
  if (!qword_100E6B178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B178);
  }
  return result;
}

unint64_t sub_1002ED2DC()
{
  unint64_t result = qword_100E6B180;
  if (!qword_100E6B180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B180);
  }
  return result;
}

unint64_t sub_1002ED32C()
{
  unint64_t result = qword_100E6B188;
  if (!qword_100E6B188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B188);
  }
  return result;
}

unint64_t sub_1002ED37C()
{
  unint64_t result = qword_100E6B190;
  if (!qword_100E6B190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B190);
  }
  return result;
}

unint64_t sub_1002ED3CC()
{
  unint64_t result = qword_100E6B198;
  if (!qword_100E6B198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B198);
  }
  return result;
}

unint64_t sub_1002ED41C()
{
  unint64_t result = qword_100E6B1A0;
  if (!qword_100E6B1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B1A0);
  }
  return result;
}

unint64_t sub_1002ED46C()
{
  unint64_t result = qword_100E6B1A8;
  if (!qword_100E6B1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B1A8);
  }
  return result;
}

unint64_t sub_1002ED4BC()
{
  unint64_t result = qword_100E6B1B0;
  if (!qword_100E6B1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B1B0);
  }
  return result;
}

unint64_t sub_1002ED50C()
{
  unint64_t result = qword_100E6B1B8;
  if (!qword_100E6B1B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B1B8);
  }
  return result;
}

unint64_t sub_1002ED55C()
{
  unint64_t result = qword_100E6B1C0;
  if (!qword_100E6B1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B1C0);
  }
  return result;
}

unint64_t sub_1002ED5AC()
{
  unint64_t result = qword_100E6B1C8;
  if (!qword_100E6B1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B1C8);
  }
  return result;
}

unint64_t sub_1002ED5FC()
{
  unint64_t result = qword_100E6B1D0;
  if (!qword_100E6B1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B1D0);
  }
  return result;
}

unint64_t sub_1002ED64C()
{
  unint64_t result = qword_100E6B1D8;
  if (!qword_100E6B1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B1D8);
  }
  return result;
}

unint64_t sub_1002ED69C()
{
  unint64_t result = qword_100E6B1E0;
  if (!qword_100E6B1E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B1E0);
  }
  return result;
}

unint64_t sub_1002ED6EC()
{
  unint64_t result = qword_100E6B1E8;
  if (!qword_100E6B1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B1E8);
  }
  return result;
}

unint64_t sub_1002ED73C()
{
  unint64_t result = qword_100E6B1F0;
  if (!qword_100E6B1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B1F0);
  }
  return result;
}

unint64_t sub_1002ED78C()
{
  unint64_t result = qword_100E6B1F8;
  if (!qword_100E6B1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B1F8);
  }
  return result;
}

unint64_t sub_1002ED7DC()
{
  unint64_t result = qword_100E6B200;
  if (!qword_100E6B200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B200);
  }
  return result;
}

unint64_t sub_1002ED82C()
{
  unint64_t result = qword_100E6B208;
  if (!qword_100E6B208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B208);
  }
  return result;
}

unint64_t sub_1002ED87C()
{
  unint64_t result = qword_100E6B210;
  if (!qword_100E6B210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B210);
  }
  return result;
}

unint64_t sub_1002ED8CC()
{
  unint64_t result = qword_100E6B218;
  if (!qword_100E6B218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B218);
  }
  return result;
}

unint64_t sub_1002ED91C()
{
  unint64_t result = qword_100E6B220;
  if (!qword_100E6B220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B220);
  }
  return result;
}

unint64_t sub_1002ED96C()
{
  unint64_t result = qword_100E6B228;
  if (!qword_100E6B228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B228);
  }
  return result;
}

unint64_t sub_1002ED9BC()
{
  unint64_t result = qword_100E6B230;
  if (!qword_100E6B230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B230);
  }
  return result;
}

unint64_t sub_1002EDA0C()
{
  unint64_t result = qword_100E6B238;
  if (!qword_100E6B238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B238);
  }
  return result;
}

unint64_t sub_1002EDA5C()
{
  unint64_t result = qword_100E6B240;
  if (!qword_100E6B240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B240);
  }
  return result;
}

unint64_t sub_1002EDAAC()
{
  unint64_t result = qword_100E6B248;
  if (!qword_100E6B248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B248);
  }
  return result;
}

unint64_t sub_1002EDAFC()
{
  unint64_t result = qword_100E6B250;
  if (!qword_100E6B250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B250);
  }
  return result;
}

unint64_t sub_1002EDB4C()
{
  unint64_t result = qword_100E6B258;
  if (!qword_100E6B258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B258);
  }
  return result;
}

unint64_t sub_1002EDB9C()
{
  unint64_t result = qword_100E6B260;
  if (!qword_100E6B260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B260);
  }
  return result;
}

unint64_t sub_1002EDBEC()
{
  unint64_t result = qword_100E6B268;
  if (!qword_100E6B268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B268);
  }
  return result;
}

unint64_t sub_1002EDC3C()
{
  unint64_t result = qword_100E6B270;
  if (!qword_100E6B270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B270);
  }
  return result;
}

unint64_t sub_1002EDC8C()
{
  unint64_t result = qword_100E6B278;
  if (!qword_100E6B278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B278);
  }
  return result;
}

unint64_t sub_1002EDCDC()
{
  unint64_t result = qword_100E6B280;
  if (!qword_100E6B280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B280);
  }
  return result;
}

unint64_t sub_1002EDD2C()
{
  unint64_t result = qword_100E6B288;
  if (!qword_100E6B288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B288);
  }
  return result;
}

unint64_t sub_1002EDD7C()
{
  unint64_t result = qword_100E6B290;
  if (!qword_100E6B290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B290);
  }
  return result;
}

unint64_t sub_1002EDDCC()
{
  unint64_t result = qword_100E6B298;
  if (!qword_100E6B298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B298);
  }
  return result;
}

unint64_t sub_1002EDE1C()
{
  unint64_t result = qword_100E6B2A0;
  if (!qword_100E6B2A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B2A0);
  }
  return result;
}

unint64_t sub_1002EDE6C()
{
  unint64_t result = qword_100E6B2A8;
  if (!qword_100E6B2A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B2A8);
  }
  return result;
}

unint64_t sub_1002EDEBC()
{
  unint64_t result = qword_100E6B2B0;
  if (!qword_100E6B2B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B2B0);
  }
  return result;
}

unint64_t sub_1002EDF0C()
{
  unint64_t result = qword_100E6B2B8;
  if (!qword_100E6B2B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B2B8);
  }
  return result;
}

unint64_t sub_1002EDF5C()
{
  unint64_t result = qword_100E6B2C0;
  if (!qword_100E6B2C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B2C0);
  }
  return result;
}

unint64_t sub_1002EDFAC()
{
  unint64_t result = qword_100E6B2C8;
  if (!qword_100E6B2C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B2C8);
  }
  return result;
}

unint64_t sub_1002EDFFC()
{
  unint64_t result = qword_100E6B2D0;
  if (!qword_100E6B2D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B2D0);
  }
  return result;
}

unint64_t sub_1002EE04C()
{
  unint64_t result = qword_100E6B2D8;
  if (!qword_100E6B2D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B2D8);
  }
  return result;
}

unint64_t sub_1002EE09C()
{
  unint64_t result = qword_100E6B2E0;
  if (!qword_100E6B2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B2E0);
  }
  return result;
}

unint64_t sub_1002EE0EC()
{
  unint64_t result = qword_100E6B2E8;
  if (!qword_100E6B2E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B2E8);
  }
  return result;
}

unint64_t sub_1002EE13C()
{
  unint64_t result = qword_100E6B2F0;
  if (!qword_100E6B2F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B2F0);
  }
  return result;
}

unint64_t sub_1002EE18C()
{
  unint64_t result = qword_100E6B2F8;
  if (!qword_100E6B2F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B2F8);
  }
  return result;
}

unint64_t sub_1002EE1DC()
{
  unint64_t result = qword_100E6B300;
  if (!qword_100E6B300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B300);
  }
  return result;
}

unint64_t sub_1002EE22C()
{
  unint64_t result = qword_100E6B308;
  if (!qword_100E6B308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B308);
  }
  return result;
}

unint64_t sub_1002EE27C()
{
  unint64_t result = qword_100E6B310;
  if (!qword_100E6B310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B310);
  }
  return result;
}

unint64_t sub_1002EE2CC()
{
  unint64_t result = qword_100E6B318;
  if (!qword_100E6B318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B318);
  }
  return result;
}

unint64_t sub_1002EE31C()
{
  unint64_t result = qword_100E6B320;
  if (!qword_100E6B320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B320);
  }
  return result;
}

unint64_t sub_1002EE36C()
{
  unint64_t result = qword_100E6B328;
  if (!qword_100E6B328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B328);
  }
  return result;
}

unint64_t sub_1002EE3BC()
{
  unint64_t result = qword_100E6B330;
  if (!qword_100E6B330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B330);
  }
  return result;
}

uint64_t sub_1002EE44C()
{
  *(void *)(v1 - 120) = v0;
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t sub_1002EE474()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_1002EE4A4@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 96) = a1;
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1002EE4C8()
{
  return v0;
}

uint64_t sub_1002EE4E0()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_1002EE51C()
{
  return sub_10011818C();
}

uint64_t sub_1002EE570()
{
  return v0;
}

uint64_t sub_1002EE5B8()
{
  return sub_10011818C();
}

BOOL sub_1002EE614()
{
  return sub_100B6B9B8(v1, v0);
}

uint64_t sub_1002EE62C()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_1002EE654()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

void sub_1002EE67C()
{
  sub_1002E2250();
}

uint64_t sub_1002EE694()
{
  return v0;
}

uint64_t sub_1002EE6E8()
{
  return v0;
}

void sub_1002EE6FC()
{
  *(void *)(v1 - 104) = v0;
}

void sub_1002EE710()
{
  *(_DWORD *)(v0 - 152) = 1;
}

void sub_1002EE73C()
{
  *(void *)(v1 - 104) = v0;
}

void sub_1002EE750(uint64_t a1@<X8>)
{
  *(void *)(v1 - 104) = a1;
}

uint64_t sub_1002EE770()
{
  return sub_1001184F4(v0, v1);
}

uint64_t sub_1002EE788(uint64_t a1)
{
  return _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, a1);
}

uint64_t sub_1002EE7A8()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_1002EE800@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 96) = a1;
  return KeyedDecodingContainer.decode(_:forKey:)();
}

void sub_1002EE838()
{
  *(_DWORD *)(v0 - 152) = 0;
  *(_DWORD *)(v0 - 144) = 0;
}

void sub_1002EE860()
{
  *(_DWORD *)(v0 - 152) = 0;
  *(_DWORD *)(v0 - 144) = 0;
}

void sub_1002EE888()
{
  *(_DWORD *)(v0 - 152) = 0;
  *(_DWORD *)(v0 - 144) = 0;
}

uint64_t sub_1002EE8B0()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_1002EE8E4()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_1002EE908()
{
  return sub_10079C8F8(v1, v0);
}

uint64_t sub_1002EE920()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_1002EE960()
{
  return v0;
}

uint64_t sub_1002EE988()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t sub_1002EE9AC()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

void sub_1002EEA30()
{
  *(_DWORD *)(v0 - 120) = 0;
}

void sub_1002EEA54()
{
  *(_DWORD *)(v0 - 120) = 0;
}

void sub_1002EEA78()
{
  *(_DWORD *)(v0 - 120) = 0;
}

uint64_t sub_1002EEA9C()
{
  return sub_1001184F4(v0, v1);
}

uint64_t sub_1002EEB34@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 288) = a1;
  return swift_bridgeObjectRetain();
}

void sub_1002EEB60()
{
  sub_1002DB474();
}

void sub_1002EEB78()
{
  sub_1002CE7BC();
}

uint64_t sub_1002EEB90()
{
  return 0;
}

uint64_t sub_1002EEBA0()
{
  return v0;
}

uint64_t sub_1002EEBB0@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t sub_1002EEBD0@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  *(void *)(v2 - 200) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for LocationsState();
}

uint64_t sub_1002EEC18()
{
  return sub_1001184F4(v0, v1);
}

uint64_t sub_1002EEC30(uint64_t result)
{
  if (!result) {
    return 0;
  }
  return result;
}

uint64_t sub_1002EEC3C()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_1002EEC88()
{
  return sub_10011818C();
}

uint64_t sub_1002EECD4()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_1002EED08()
{
  return sub_100178110(v0, v1);
}

uint64_t sub_1002EED20()
{
  return v0;
}

uint64_t sub_1002EED2C()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_1002EED48()
{
  return v0;
}

uint64_t sub_1002EED64()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

void sub_1002EED8C(char a1@<W8>)
{
  *(unsigned char *)(v1 - 288) = a1;
}

unint64_t sub_1002EED98()
{
  *(void *)(v1 - 104) = v0;
  *(unsigned char *)(v1 - 81) = 0;
  return sub_1002E8390();
}

uint64_t sub_1002EEDCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 288) = (char *)&a9 - v9;
  return type metadata accessor for MonthlyAveragesChartModel();
}

uint64_t sub_1002EEDF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 376) = (char *)&a9 - v9;
  return type metadata accessor for DetailComponentContainerViewModel();
}

uint64_t sub_1002EEE1C()
{
  return type metadata accessor for ContentStatusBanner();
}

uint64_t sub_1002EEEA4()
{
  return v0;
}

uint64_t sub_1002EEEB4@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 - 96) = a1;
  return v1 - 96;
}

uint64_t sub_1002EEF14()
{
  return sub_1001B49E8(v1, v0, v2);
}

void sub_1002EEF30()
{
  sub_1002C5418();
}

void sub_1002EEF48()
{
  sub_1002D1ECC();
}

uint64_t sub_1002EEF88@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 + 72) = a1;
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1002EEFAC@<X0>(char a1@<W8>)
{
  *(unsigned char *)(v1 + 72) = a1;
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_1002EEFD0()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_1002EF05C()
{
  return v0;
}

uint64_t sub_1002EF06C()
{
  return String.hash(into:)();
}

uint64_t sub_1002EF090(uint64_t a1)
{
  *uint64_t v1 = a1;
  return swift_release();
}

uint64_t sub_1002EF0AC()
{
  return sub_10016EAB0();
}

BOOL sub_1002EF0C8()
{
  return sub_100B6B9B8(v1, v0);
}

uint64_t sub_1002EF0E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _s7Weather24LocationCompositionStateOwst_0(a1, a2, a3, a4);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1002EF108()
{
  return v0;
}

uint64_t sub_1002EF114()
{
  return sub_10011818C();
}

uint64_t sub_1002EF140()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_1002EF15C()
{
  return type metadata accessor for LocationViewComponent();
}

void sub_1002EF1D8()
{
  *(unsigned char *)(v0 - 65) = 5;
}

uint64_t sub_1002EF1E4()
{
  return type metadata accessor for LocationDetailEntity();
}

uint64_t sub_1002EF1FC()
{
  return v0;
}

void sub_1002EF210()
{
  *(void *)(v0 - 104) = *(void *)(v0 - 176);
}

uint64_t sub_1002EF21C()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t sub_1002EF248()
{
  return v0;
}

uint64_t sub_1002EF254()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_1002EF274()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_1002EF294()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1002EF2B4()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1002EF2D4()
{
  return sub_10011818C();
}

uint64_t sub_1002EF2EC()
{
  return sub_1001184F4(v1, v0);
}

uint64_t sub_1002EF318()
{
  return sub_10011818C();
}

uint64_t sub_1002EF358()
{
  return type metadata accessor for PrecipitationAveragesHeroChartViewModel();
}

void sub_1002EF378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 256) = (char *)&a9 - v9;
}

void sub_1002EF38C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 96) = (char *)&a9 - v9;
}

void sub_1002EF3A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  *(void *)(v10 - 136) = (char *)&a9 - v9;
}

BOOL sub_1002EF3C8()
{
  return sub_100B6B9B8(v0, v1);
}

uint64_t sub_1002EF3E0()
{
  return sub_1001184F4(v1, v0);
}

uint64_t sub_1002EF3F8@<X0>(uint64_t a1@<X8>)
{
  return v1 + a1;
}

uint64_t sub_1002EF40C()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_1002EF42C()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1002EF460()
{
  return v0;
}

uint64_t sub_1002EF488()
{
  return *(void *)(*(void *)(v1 - 88) + 56) + *(void *)(*(void *)(v1 - 96) + 72) * v0;
}

uint64_t sub_1002EF4D8()
{
  return v0;
}

uint64_t sub_1002EF4E4()
{
  return v0;
}

uint64_t sub_1002EF4F8@<X0>(uint64_t a1@<X8>)
{
  sub_10020D948(v1 + 16, (uint64_t)v4);
  swift_retain();
  return sub_100379714(v4, a1);
}

uint64_t sub_1002EF54C()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ListMenuModule()
{
  return self;
}

uint64_t LocationSearchEntity.id.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t LocationSearchEntity.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

void (__swiftcall *LocationSearchEntity.id.modify())()
{
  return LocationSearchEntityFromStringResolver.init();
}

uint64_t LocationSearchEntity.name.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

uint64_t LocationSearchEntity.name.setter()
{
  return EntityProperty.wrappedValue.setter();
}

uint64_t (*LocationSearchEntity.name.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = EntityProperty.wrappedValue.modify();
  return sub_1002EF6FC;
}

uint64_t LocationSearchEntity.$name.getter()
{
  return EntityProperty.projectedValue.getter();
}

uint64_t LocationSearchEntity.placemark.getter()
{
  EntityProperty.wrappedValue.getter();
  return v1;
}

void LocationSearchEntity.placemark.setter(void *a1)
{
  id v1 = a1;
  EntityProperty.wrappedValue.setter();
}

uint64_t (*LocationSearchEntity.placemark.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = EntityProperty.wrappedValue.modify();
  return sub_1002EF6FC;
}

void sub_1002EF7F4(void *a1)
{
  id v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

uint64_t LocationSearchEntity.$placemark.getter()
{
  return EntityProperty.projectedValue.getter();
}

void LocationSearchEntity.init(id:name:placemark:isLocal:)(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X4>, char a4@<W5>, uint64_t a5@<X8>)
{
  uint64_t v10 = type metadata accessor for LocalizedStringResource();
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_100109370();
  sub_10017DF08(&qword_100E62C80);
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v12 = EntityProperty<>.init(title:)();
  sub_10017DF08(&qword_100E62C88);
  swift_retain();
  LocalizedStringResource.init(stringLiteral:)();
  uint64_t v13 = EntityProperty<>.init(title:)();
  swift_bridgeObjectRetain_n();
  swift_retain();
  swift_retain();
  EntityProperty.wrappedValue.setter();
  swift_release();
  swift_bridgeObjectRelease();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  id v14 = a3;
  EntityProperty.wrappedValue.setter();
  swift_release_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();

  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = v12;
  *(void *)(a5 + 24) = v13;
  *(unsigned char *)(a5 + 32) = a4;
}

uint64_t sub_1002EFA08()
{
  uint64_t result = LocationSearchEntityQuery.init()();
  static LocationSearchEntity.defaultQuery = result;
  *(void *)algn_100F512D8 = v1;
  qword_100F512E0 = v2;
  return result;
}

uint64_t *LocationSearchEntity.defaultQuery.unsafeMutableAddressor()
{
  if (qword_100E62208 != -1) {
    swift_once();
  }
  return &static LocationSearchEntity.defaultQuery;
}

uint64_t static LocationSearchEntity.defaultQuery.getter()
{
  if (qword_100E62208 != -1) {
    swift_once();
  }
  uint64_t v0 = static LocationSearchEntity.defaultQuery;
  swift_retain();
  swift_retain();
  swift_retain();
  return v0;
}

uint64_t LocationSearchEntity.displayRepresentation.getter()
{
  uint64_t v1 = sub_10017DF08(&qword_100E6B3E0);
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_1001626E0();
  uint64_t v5 = v4 - v3;
  uint64_t v6 = sub_10017DF08(&qword_100E62CC8);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_10012B938();
  uint64_t v8 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v9 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_100109370();
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v11._uint64_t countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v11);
  EntityProperty.wrappedValue.getter();
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v15);
  swift_bridgeObjectRelease();
  v12._uint64_t countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v12);
  LocalizedStringResource.init(stringInterpolation:)();
  _s7Weather24LocationCompositionStateOwst_0(v0, 1, 1, v8);
  uint64_t v13 = type metadata accessor for DisplayRepresentation.Image();
  _s7Weather24LocationCompositionStateOwst_0(v5, 1, 1, v13);
  return DisplayRepresentation.init(title:subtitle:image:)();
}

uint64_t static LocationSearchEntity.typeDisplayRepresentation.getter()
{
  uint64_t v1 = sub_10017DF08(&qword_100E62CC8);
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_100162EB8();
  uint64_t v3 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v3);
  sub_10012B938();
  LocalizedStringResource.init(stringLiteral:)();
  _s7Weather24LocationCompositionStateOwst_0(v0, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

double static LocationSearchEntity.makeFromLocationEntity(_:)@<D0>(uint64_t a1@<X8>)
{
  LocationEntity.id.getter();
  sub_10014A85C();
  uint64_t v2 = sub_1001A04F8();
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  *(void *)&v13[0] = v2;
  *((void *)&v13[0] + 1) = v4;
  swift_bridgeObjectRetain();
  v5._uint64_t countAndFlagsBits = 58;
  v5._object = (void *)0xE100000000000000;
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  LocationEntity.name.getter();
  uint64_t v6 = sub_1001A04F8();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v9._uint64_t countAndFlagsBits = v6;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LocationEntity.name.getter();
  uint64_t v10 = (void *)LocationEntity.placemark.getter();
  LocationSearchEntity.init(id:name:placemark:isLocal:)(v2, v4, v10, 0, (uint64_t)v13);
  double result = *(double *)v13;
  long long v12 = v13[1];
  *(_OWORD *)a1 = v13[0];
  *(_OWORD *)(a1 + 16) = v12;
  *(unsigned char *)(a1 + 32) = v14;
  return result;
}

uint64_t LocationSearchEntity.urlRepresentationParameter.getter()
{
  uint64_t v1 = 0x3D6C61636F4C7369;
  if ((*(unsigned char *)(v0 + 32) & 1) == 0)
  {
    EntityProperty.wrappedValue.getter();
    id v2 = [v15 location];

    if (v2)
    {
      [v2 coordinate];
      uint64_t v3 = Double.description.getter();
      Swift::String v5 = v4;
      [v2 coordinate];
      uint64_t v6 = Double.description.getter();
      uint64_t v8 = v7;
      _StringGuts.grow(_:)(21);
      swift_bridgeObjectRelease();
      v9._uint64_t countAndFlagsBits = v3;
      v9._object = v5;
      String.append(_:)(v9);
      swift_bridgeObjectRelease();
      v10._uint64_t countAndFlagsBits = 0x3D676E6C26;
      v10._object = (void *)0xE500000000000000;
      String.append(_:)(v10);
      v11._uint64_t countAndFlagsBits = v6;
      v11._object = v8;
      String.append(_:)(v11);
      swift_bridgeObjectRelease();
      v12._uint64_t countAndFlagsBits = 0x3D7974696326;
      v12._object = (void *)0xE600000000000000;
      String.append(_:)(v12);
      EntityProperty.wrappedValue.getter();
      String.append(_:)(v14);

      swift_bridgeObjectRelease();
      return 1031037292;
    }
  }
  return v1;
}

uint64_t static LocationSearchEntity.makeFromIdentifier(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_10017DF08(&qword_100E6B3E8);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_10017DF08(&qword_100E6B3F0);
  sub_100179C0C();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_10012B938();
  sub_10017DF08(&qword_100E6B3F8);
  sub_100179C0C();
  __chkstk_darwin(v15);
  sub_100109370();
  sub_10017DF08(&qword_100E6B400);
  Regex.init(_regexString:version:)();
  Regex.wholeMatch(in:)();
  if (_s7Weather24LocationCompositionStateOwet_0(v10, 1, v11) == 1)
  {
    uint64_t v16 = sub_10017C948();
    v17(v16);
    uint64_t result = sub_1002F049C(v10);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v3, v10, v11);
    swift_getKeyPath();
    Regex.Match.subscript.getter();
    swift_release();
    uint64_t v40 = Double.init(_:)();
    int v41 = v23;
    swift_getKeyPath();
    Regex.Match.subscript.getter();
    swift_release();
    uint64_t v39 = Double.init(_:)();
    int v25 = v24;
    swift_getKeyPath();
    Regex.Match.subscript.getter();
    swift_release();
    if (v46)
    {
      uint64_t v26 = static String._fromSubstring(_:)();
      uint64_t v28 = v27;
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v26 = 0;
      uint64_t v28 = 0;
    }
    if (((v41 | v25) & 1) == 0)
    {
      sub_1001ABC4C(0, (unint64_t *)&qword_100E6B408);
      id v33 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:*(double *)&v40 longitude:*(double *)&v39];
      swift_bridgeObjectRetain();
      id v34 = sub_1002F04FC(v33, v26, v28, 0);
      swift_bridgeObjectRetain();
      LocationSearchEntity.init(id:name:placemark:isLocal:)(a1, a2, v34, 0, (uint64_t)&v44);
      uint64_t v19 = v44;
      long long v42 = v45;
      uint64_t v20 = v46;
      char v21 = v47;
      uint64_t v35 = sub_10017E0E0();
      v36(v35);
      uint64_t v37 = sub_10017C948();
      uint64_t result = v38(v37);
      long long v22 = v42;
      goto LABEL_4;
    }
    swift_bridgeObjectRelease();
    uint64_t v29 = sub_10017E0E0();
    v30(v29);
    uint64_t v31 = sub_10017C948();
    uint64_t result = v32(v31);
  }
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  char v21 = 0;
  long long v22 = 0uLL;
LABEL_4:
  *(void *)a3 = v19;
  *(_OWORD *)(a3 + 8) = v22;
  *(void *)(a3 + 24) = v20;
  *(unsigned char *)(a3 + 32) = v21;
  return result;
}

uint64_t sub_1002F049C(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E6B3E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1002F04FC(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }
  id v7 = [(id)swift_getObjCClassFromMetadata() placemarkWithLocation:a1 name:v6 postalAddress:a4];

  return v7;
}

double static LocationSearchEntity.makeFromLocation(_:name:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v36 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  sub_100162EB8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v4, a1, v14);
  if (a3)
  {
    uint64_t v18 = a3;
  }
  else
  {
    a2 = Location.name.getter();
    uint64_t v18 = v19;
  }
  uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
  swift_bridgeObjectRetain();
  v20(v4, v14);
  sub_1001ABC4C(0, (unint64_t *)&qword_100E6B408);
  Location.coordinate.getter();
  double v22 = v21;
  Location.coordinate.getter();
  id v24 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:v22 longitude:v23];
  swift_bridgeObjectRetain();
  id v25 = sub_1002F04FC(v24, a2, v18, 0);
  Location.identifier.getter();
  uint64_t v26 = Location.Identifier.id.getter();
  uint64_t v28 = v27;
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v36);
  *(void *)&v38[0] = v26;
  *((void *)&v38[0] + 1) = v28;
  swift_bridgeObjectRetain();
  v29._uint64_t countAndFlagsBits = 58;
  v29._object = (void *)0xE100000000000000;
  String.append(_:)(v29);
  swift_bridgeObjectRelease();
  Location.name.getter();
  sub_10014A85C();
  uint64_t v30 = StringProtocol.replacingOccurrences<A, B>(of:with:options:range:)();
  char v32 = v31;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v33._uint64_t countAndFlagsBits = v30;
  v33._object = v32;
  String.append(_:)(v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LocationSearchEntity.init(id:name:placemark:isLocal:)(v26, *((uint64_t *)&v38[0] + 1), v25, 0, (uint64_t)v38);
  double result = *(double *)v38;
  long long v35 = v38[1];
  *(_OWORD *)a4 = v38[0];
  *(_OWORD *)(a4 + 16) = v35;
  *(unsigned char *)(a4 + 32) = v39;
  return result;
}

double static LocationSearchEntity.makeCurrentLocation()@<D0>(uint64_t a1@<X8>)
{
  id v2 = [self mainBundle];
  v14._object = (void *)0x8000000100C99350;
  v3._uint64_t countAndFlagsBits = 0x7461636F4C20794DLL;
  v3._object = (void *)0xEB000000006E6F69;
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v14._uint64_t countAndFlagsBits = 0xD000000000000046;
  Swift::String v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v14);

  sub_1001ABC4C(0, (unint64_t *)&qword_100E6B408);
  id v6 = [objc_allocWithZone((Class)CLLocation) initWithLatitude:0.0 longitude:0.0];
  swift_bridgeObjectRetain();
  id v7 = sub_1002F04FC(v6, v5._countAndFlagsBits, (uint64_t)v5._object, 0);
  uint64_t v8 = static Location.currentLocationID.getter();
  LocationSearchEntity.init(id:name:placemark:isLocal:)(v8, v9, v7, 1, (uint64_t)v12);
  double result = *(double *)v12;
  long long v11 = v12[1];
  *(_OWORD *)a1 = v12[0];
  *(_OWORD *)(a1 + 16) = v11;
  *(unsigned char *)(a1 + 32) = v13;
  return result;
}

uint64_t sub_1002F09C4@<X0>(void *a1@<X8>)
{
  LocationSearchEntity.defaultQuery.unsafeMutableAddressor();
  uint64_t v2 = *(void *)algn_100F512D8;
  uint64_t v3 = qword_100F512E0;
  *a1 = static LocationSearchEntity.defaultQuery;
  a1[1] = v2;
  a1[2] = v3;
  swift_retain();
  swift_retain();

  return swift_retain();
}

uint64_t sub_1002F0A28()
{
  uint64_t v2 = LocationSearchEntity.urlRepresentationParameter.getter();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_1002F11CC(v3, v0, v2, v1);
}

uint64_t sub_1002F0AB8(uint64_t a1)
{
  unint64_t v2 = sub_100232310();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_1002F0B04(uint64_t a1)
{
  unint64_t v2 = sub_1002F0DCC();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t static LocationSearchEntity.== infix(_:_:)(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (char v3 = 0, (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
  {
    EntityProperty.wrappedValue.getter();
    EntityProperty.wrappedValue.getter();
    swift_bridgeObjectRelease_n();
    sub_1001ABC4C(0, (unint64_t *)&qword_100E65130);
    EntityProperty.wrappedValue.getter();
    EntityProperty.wrappedValue.getter();
    char v3 = static NSObject.== infix(_:_:)();
  }
  return v3 & 1;
}

unint64_t sub_1002F0C80()
{
  unint64_t result = qword_100E6B410;
  if (!qword_100E6B410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B410);
  }
  return result;
}

unint64_t sub_1002F0CD0()
{
  unint64_t result = qword_100E6B418;
  if (!qword_100E6B418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B418);
  }
  return result;
}

unint64_t sub_1002F0D20()
{
  unint64_t result = qword_100E6B420;
  if (!qword_100E6B420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B420);
  }
  return result;
}

unint64_t sub_1002F0D70()
{
  unint64_t result = qword_100E6B428;
  if (!qword_100E6B428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B428);
  }
  return result;
}

void *sub_1002F0DBC()
{
  return &protocol witness table for String;
}

unint64_t sub_1002F0DCC()
{
  unint64_t result = qword_100E6B430;
  if (!qword_100E6B430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B430);
  }
  return result;
}

unint64_t sub_1002F0E1C()
{
  unint64_t result = qword_100E6B438;
  if (!qword_100E6B438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B438);
  }
  return result;
}

unint64_t sub_1002F0E6C()
{
  unint64_t result = qword_100E6B448;
  if (!qword_100E6B448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B448);
  }
  return result;
}

unint64_t sub_1002F0EBC()
{
  unint64_t result = qword_100E6B450;
  if (!qword_100E6B450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B450);
  }
  return result;
}

unint64_t sub_1002F0F0C()
{
  unint64_t result = qword_100E6B458;
  if (!qword_100E6B458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B458);
  }
  return result;
}

unint64_t sub_1002F0F5C()
{
  unint64_t result = qword_100E6B460;
  if (!qword_100E6B460)
  {
    sub_10018C6DC(&qword_100E6B468);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B460);
  }
  return result;
}

uint64_t destroy for LocationSearchEntity()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for LocationSearchEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for LocationSearchEntity(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for LocationSearchEntity(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for MoonComponentViewModel.Row(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 33))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MoonComponentViewModel.Row(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationSearchEntity()
{
  return &type metadata for LocationSearchEntity;
}

uint64_t sub_1002F11CC(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1(a3, a4);
}

uint64_t sub_1002F11E0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WeatherMapPurpose();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64((void *)(a1 + 16), *(void *)(a1 + 40));
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for WeatherMapPurpose.none(_:), v2);
  dispatch thunk of WeatherMapOverlayMetaDataRefresherType.refreshMetadata(purpose:)();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t LocalSearchRequestService.__deallocating_deinit()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t sub_1002F1328()
{
  return sub_1002F11E0(v0);
}

void *sub_1002F1330(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Location();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_1002F13FC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Location();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1002F1460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1002F14DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1002F1558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1002F15D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1002F1650(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002F1664);
}

uint64_t sub_1002F1664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Location();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  }
  else
  {
    unsigned int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 2) {
      int v10 = ((v9 + 2147483646) & 0x7FFFFFFF) - 2;
    }
    else {
      int v10 = -3;
    }
    if (v10 < 0) {
      int v10 = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1002F170C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002F1720);
}

void sub_1002F1720(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Location();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 3;
  }
}

BOOL sub_1002F17A8(uint64_t a1, uint64_t a2)
{
  if ((static Location.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for NotificationsOptInComponentViewModel() + 20);
  int v5 = *(unsigned __int8 *)(a1 + v4);
  int v6 = *(unsigned __int8 *)(a2 + v4);
  if (v5 == 2) {
    return v6 == 2;
  }
  if (v5 != 3) {
    return (v6 & 0xFE) != 2 && ((((v5 & 1) == 0) ^ v6) & 1) != 0;
  }
  return v6 == 3;
}

uint64_t sub_1002F183C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v202 = a2;
  uint64_t v4 = type metadata accessor for DetailHeroChartLollipopModel(0);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v7 = sub_100109328(v6);
  uint64_t v200 = type metadata accessor for PeakUpperMarkModel(v7);
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_100162EF8();
  uint64_t v201 = v9;
  sub_1001626D4();
  __chkstk_darwin(v10);
  sub_100128F8C();
  sub_100109328(v11);
  uint64_t v222 = type metadata accessor for WeatherFormatPlaceholder();
  sub_100179C0C();
  uint64_t v241 = v12;
  __chkstk_darwin(v13);
  sub_100109314();
  uint64_t v221 = v14;
  uint64_t v15 = sub_10017DF08(&qword_100E63730);
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_100109314();
  sub_100109328(v17);
  uint64_t v218 = type metadata accessor for WeatherFormatScaling();
  sub_100179C0C();
  v231 = v18;
  __chkstk_darwin(v19);
  sub_100109314();
  sub_100109328(v20);
  uint64_t v242 = type metadata accessor for NSUnitLength.BaseWeatherFormatStyle();
  sub_100179C0C();
  uint64_t v234 = v21;
  __chkstk_darwin(v22);
  sub_100162EF8();
  uint64_t v233 = v23;
  sub_1001626D4();
  __chkstk_darwin(v24);
  sub_100128F8C();
  sub_100109328(v25);
  uint64_t v220 = type metadata accessor for AttributedString.CharacterView();
  sub_100162E4C();
  __chkstk_darwin(v26);
  sub_100109314();
  sub_100109328(v27);
  uint64_t v195 = type metadata accessor for NSUnitLength.WeatherFormatUsage();
  sub_100179C0C();
  uint64_t v230 = v28;
  __chkstk_darwin(v29);
  sub_100109314();
  sub_100109328(v30);
  uint64_t v219 = type metadata accessor for AveragesComparisonStrings();
  sub_100162E4C();
  __chkstk_darwin(v31);
  sub_100162EF8();
  uint64_t v224 = v32;
  sub_1001626D4();
  __chkstk_darwin(v33);
  sub_100128F8C();
  uint64_t v223 = v34;
  uint64_t v35 = sub_10017DF08(&qword_100E6B640);
  uint64_t v36 = sub_100109308(v35);
  __chkstk_darwin(v36);
  sub_100162EF8();
  uint64_t v229 = (char *)v37;
  sub_1001626D4();
  __chkstk_darwin(v38);
  sub_100128F8C();
  uint64_t v228 = v39;
  uint64_t v243 = sub_10017DF08(&qword_100E6B648);
  sub_100179C0C();
  uint64_t v199 = v40;
  __chkstk_darwin(v41);
  sub_100162EF8();
  uint64_t v232 = v42;
  sub_1001626D4();
  __chkstk_darwin(v43);
  uint64_t v238 = (char *)v185 - v44;
  sub_1001626D4();
  __chkstk_darwin(v45);
  uint64_t v240 = (char *)v185 - v46;
  sub_1001626D4();
  __chkstk_darwin(v47);
  sub_100128F8C();
  uint64_t v239 = v48;
  uint64_t v49 = type metadata accessor for Calendar.Component();
  sub_100179C0C();
  uint64_t v51 = v50;
  __chkstk_darwin(v52);
  sub_100109370();
  uint64_t v53 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v54 = sub_100109308(v53);
  __chkstk_darwin(v54);
  char v56 = (char *)v185 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v198 = type metadata accessor for Calendar();
  sub_100179C0C();
  uint64_t v197 = v57;
  __chkstk_darwin(v58);
  char v60 = (char *)v185 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v227 = v62;
  __chkstk_darwin(v63);
  sub_100162EF8();
  uint64_t v193 = v64;
  sub_1001626D4();
  uint64_t v66 = __chkstk_darwin(v65);
  uint64_t v68 = (char *)v185 - v67;
  __chkstk_darwin(v66);
  uint64_t v236 = (char *)v185 - v69;
  sub_1001626D4();
  __chkstk_darwin(v70);
  uint64_t v72 = (char *)v185 - v71;
  type metadata accessor for PrecipitationAveragesHeroChartInput();
  uint64_t v235 = a1;
  Date.startOfDay(timeZone:)();
  static Calendar.currentCalendar(with:)();
  uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t))(v51 + 104))(v2, enum case for Calendar.Component.day(_:), v49);
  if (__OFSUB__(0, *(void *)(v237 + 56)))
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  Calendar.date(byAdding:value:to:wrappingComponents:)();
  (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v2, v49);
  uint64_t v74 = v227;
  uint64_t v75 = v227 + 16;
  char v76 = *(void (**)(char *, char *, uint64_t))(v227 + 16);
  v76(v68, v72, v61);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, v61) == 1)
  {
    uint64_t v77 = *(void (**)(char *, char *, uint64_t))(v74 + 32);
    v77(v236, v68, v61);
    uint64_t result = sub_100178110((uint64_t)v56, (uint64_t *)&unk_100E73CA0);
  }
  else
  {
    sub_100127BA4();
    v78();
    uint64_t v77 = *(void (**)(char *, char *, uint64_t))(v74 + 32);
    uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v77)(v236, v56, v61);
  }
  uint64_t v79 = v237;
  uint64_t v80 = *(void *)(v237 + 56);
  if (__OFSUB__(0, v80)) {
    goto LABEL_22;
  }
  if (-v80 > 10)
  {
LABEL_23:
    __break(1u);
    return result;
  }
  v212 = v76;
  uint64_t v213 = v75;
  unsigned __int8 v190 = (void (*)(uint64_t, uint64_t, uint64_t))v77;
  uint64_t v191 = v61;
  __chkstk_darwin(result);
  unsigned __int8 v192 = v60;
  sub_100A95F18();
  uint64_t v82 = v81;
  uint64_t v83 = v235;
  uint64_t v84 = sub_1002F2AEC(v239, v235, v81, (uint64_t)v72);
  uint64_t v85 = sub_1002F41B0(v240, v83, v82, (uint64_t)v72);
  swift_bridgeObjectRelease();
  sub_100166B1C();
  sub_100304160(v84, v86);
  uint64_t v87 = type metadata accessor for DetailChartDataElement();
  if (_s7Weather24LocationCompositionStateOwet_0(v79, 1, v87) == 1)
  {
    sub_100178110(v79, &qword_100E6B640);
    double v88 = 0.0;
  }
  else
  {
    DetailChartDataElement.value.getter();
    double v88 = v89;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v87 - 8) + 8))(v79, v87);
  }
  sub_100166B1C();
  sub_100304160((uint64_t)v85, v90);
  if (_s7Weather24LocationCompositionStateOwet_0(v79, 1, v87) == 1)
  {
    sub_100178110(v79, &qword_100E6B640);
    double v91 = 0.0;
  }
  else
  {
    DetailChartDataElement.value.getter();
    double v91 = v92;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v87 - 8) + 8))(v79, v87);
  }
  if (v88 <= v91) {
    double v88 = v91;
  }
  swift_getObjectType();
  uint64_t v93 = (void *)dispatch thunk of UnitManagerType.precipitationRainfall.getter();
  uint64_t v94 = (uint64_t *)v79;
  uint64_t v95 = (int *)sub_1002F5958(v93);
  double v97 = v96;
  uint64_t v228 = v95;

  uint64_t v215 = v84;
  uint64_t v214 = v85;
  uint64_t v229 = v72;
  uint64_t v189 = sub_1002F5B58(v235, v84, (uint64_t)v85);
  uint64_t v98 = (void *)(v79 + 16);
  sub_1001B1E64((void *)(v79 + 16), *(void *)(v79 + 40));
  uint64_t v99 = v230;
  uint64_t v101 = v230 + 104;
  uint64_t v100 = *(void (**)(uint64_t))(v230 + 104);
  uint64_t v102 = v216;
  uint64_t v103 = v79;
  uint64_t v104 = enum case for NSUnitLength.WeatherFormatUsage.rainfall(_:);
  unsigned int v209 = enum case for NSUnitLength.WeatherFormatUsage.rainfall(_:);
  uint64_t v105 = v195;
  v100(v216);
  uint64_t v210 = v100;
  sub_100166B1C();
  sub_100571C94((uint64_t)v240, v102, 0, v106);
  uint64_t v107 = *(void (**)(uint64_t))(v99 + 8);
  uint64_t v108 = sub_100182F34();
  v107(v108);
  uint64_t v211 = (void (*)(uint64_t, uint64_t))v107;
  sub_1001B1E64(v98, *(void *)(v103 + 40));
  ((void (*)(uint64_t, uint64_t, uint64_t))v100)(v102, v104, v105);
  uint64_t v109 = v240;
  sub_100571C94((uint64_t)v240, v102, 1, v224);
  uint64_t v110 = sub_100182F34();
  v107(v110);
  sub_10019B424(*v94);
  *((void *)&v188 + 1) = v111;
  swift_bridgeObjectRetain();
  AttributedString.characters.getter();
  v185[5] = sub_1002F8E6C(&qword_100E6B650, (void (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView);
  uint64_t v187 = String.init<A>(_:)();
  uint64_t v186 = v112;
  Measurement<>.converted(to:)();
  Measurement<>.converted(to:)();
  static Set<>.unit.getter();
  v185[4] = v101;
  ((void (*)(uint64_t, void, uint64_t))v210)(v102, v209, v105);
  sub_100166B1C();
  uint64_t v114 = *(void (**)(uint64_t))(v113 + 104);
  uint64_t v115 = v217;
  uint64_t v116 = v218;
  v185[2] = v113 + 104;
  v185[1] = v114;
  v114(v217);
  uint64_t v117 = type metadata accessor for Locale();
  uint64_t v118 = v196;
  v185[0] = v117;
  _s7Weather24LocationCompositionStateOwst_0(v196, 1, 1, v117);
  static WeatherFormatStyle<>.weather(_:usage:scaling:trimLeadingZeroes:locale:)();
  swift_bridgeObjectRelease();
  sub_100178110(v118, &qword_100E63730);
  uint64_t v119 = (void (*)(uint64_t, uint64_t))*((void *)v109 + 1);
  v231 = v109 + 8;
  v185[3] = v119;
  v119(v115, v116);
  uint64_t v230 = v99 + 8;
  v211(v102, v105);
  uint64_t v120 = v241;
  char v121 = *(void (**)(void))(v241 + 104);
  uint64_t v122 = v221;
  int v208 = enum case for WeatherFormatPlaceholder.none(_:);
  uint64_t v123 = v222;
  uint64_t v207 = v241 + 104;
  uint64_t v206 = v121;
  v121(v221);
  uint64_t v205 = type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  uint64_t v204 = sub_1002F8E6C((unint64_t *)&qword_100E6B658, (void (*)(uint64_t))&type metadata accessor for NSUnitLength.BaseWeatherFormatStyle);
  Measurement.formatted<A>(_:placeholder:unitManager:)();
  swift_release();
  uint64_t v124 = *(void (**)(void, void))(v120 + 8);
  uint64_t v241 = v120 + 8;
  uint64_t v203 = v124;
  v124(v122, v123);
  uint64_t v125 = *(void *)(v234 + 8);
  v234 += 8;
  uint64_t v194 = v125;
  sub_100127BA4();
  v126();
  uint64_t v127 = String.count.getter();
  swift_bridgeObjectRelease();
  if (v127 < 5)
  {
    uint64_t v132 = sub_10017E0F8();
    v133(v132);
    uint64_t v134 = sub_10018106C();
    v135(v134);
    sub_100189D4C();
    static Set<>.full.getter();
  }
  else
  {
    static Set<>.value.getter();
    uint64_t v128 = sub_10017E0F8();
    v129(v128);
    uint64_t v130 = sub_10018106C();
    v131(v130);
    sub_100189D4C();
  }
  static WeatherFormatStyle<>.weather(_:usage:scaling:trimLeadingZeroes:locale:)();
  swift_bridgeObjectRelease();
  sub_100178110(v118, &qword_100E63730);
  sub_100127BA4();
  v136();
  sub_100127BA4();
  v137();
  uint64_t v138 = v193;
  uint64_t v139 = v191;
  sub_100188F90();
  v140();
  sub_10019FBE4();
  v141();
  static UnitManager.standard.getter();
  uint64_t v142 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v144 = v143;
  swift_release();
  uint64_t v145 = sub_1001A4564();
  v146(v145);
  v231 = (char *)(v227 + 32);
  uint64_t v147 = v225;
  uint64_t v148 = v190;
  v190(v225, v138, v139);
  uint64_t v149 = (int *)v200;
  *(double *)(v147 + *(int *)(v200 + 20)) = v88;
  uint64_t v150 = (uint64_t *)(v147 + v149[6]);
  *uint64_t v150 = v142;
  v150[1] = v144;
  uint64_t v151 = (void *)(v147 + v149[7]);
  *uint64_t v151 = 0;
  v151[1] = 0;
  char v152 = (void *)(v147 + v149[8]);
  *char v152 = 0;
  v152[1] = 0;
  char v153 = v236;
  sub_100188F90();
  v154();
  sub_10019FBE4();
  v155();
  static UnitManager.standard.getter();
  uint64_t v156 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v158 = v157;
  swift_release();
  uint64_t v159 = sub_1001A4564();
  v160(v159);
  uint64_t v161 = v201;
  v148(v201, v138, v139);
  *(double *)(v161 + v149[5]) = v88;
  uint64_t v162 = (uint64_t *)(v161 + v149[6]);
  *uint64_t v162 = v156;
  v162[1] = v158;
  uint64_t v163 = (void *)(v161 + v149[7]);
  *uint64_t v163 = 0;
  v163[1] = 0;
  uint64_t v164 = (void *)(v161 + v149[8]);
  *uint64_t v164 = 0;
  v164[1] = 0;
  swift_getObjectType();
  uint64_t v165 = (void *)dispatch thunk of UnitManagerType.precipitationRainfall.getter();
  sub_1002F6234(v215, (uint64_t)v214, v153, (uint64_t)v229, v235, v165, v228, v226);

  unsigned __int8 v166 = v224;
  uint64_t v167 = v224[1];
  sub_10019B424(*v224);
  swift_bridgeObjectRetain();
  AttributedString.characters.getter();
  uint64_t v168 = String.init<A>(_:)();
  uint64_t v170 = v169;
  uint64_t v241 = dispatch thunk of UnitManagerType.precipitationRainfall.getter();
  char v171 = (void *)dispatch thunk of UnitManagerType.precipitationRainfall.getter();
  LOBYTE(v158) = NSUnitLength.isMetricPrecipitation.getter();

  uint64_t v172 = 1;
  if ((v158 & 1) == 0) {
    uint64_t v172 = 2;
  }
  uint64_t v235 = v172;
  long long v244 = v188;
  uint64_t v245 = v231;
  uint64_t v246 = v167;
  uint64_t v247 = v187;
  uint64_t v248 = v186;
  uint64_t v249 = v168;
  uint64_t v250 = v170;
  uint64_t v173 = v228;
  unsigned __int8 v174 = v228;
  uint64_t v237 = sub_1002F7258();
  uint64_t v176 = v175;
  uint64_t v178 = v177;
  char v180 = v179;

  sub_100127BA4();
  v181();
  uint64_t v182 = *(void (**)(void))(v199 + 8);
  sub_1001838D8();
  v182();
  sub_1001838D8();
  v182();
  sub_1002F8EB4((uint64_t)v166, (void (*)(void))type metadata accessor for AveragesComparisonStrings);
  sub_1002F8EB4(v223, (void (*)(void))type metadata accessor for AveragesComparisonStrings);
  sub_1001838D8();
  v182();
  sub_1001838D8();
  v182();
  sub_100162F0C();
  v183();
  *((void *)&v184 + 1) = v176;
  *(void *)&long long v184 = v237;
  return sub_1007324BC(&v244, v215, (uint64_t)v214, (uint64_t)v189, (uint64_t)v173, v241, v235, 1, v202, v97, v88, v184, v178, v180 & 1, v225, v161, (uint64_t)v226, (uint64_t)v236, (uint64_t)v229);
}

uint64_t sub_1002F2AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v164 = a4;
  uint64_t countAndFlagsBits = a3;
  uint64_t v165 = a1;
  uint64_t v185 = type metadata accessor for DetailChartDataElement.ValueLabel();
  uint64_t v134 = *(void *)(v185 - 8);
  uint64_t v6 = __chkstk_darwin(v185);
  uint64_t v125 = (id *)((char *)&v120 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  uint64_t v170 = (id *)((char *)&v120 - v8);
  uint64_t v184 = type metadata accessor for Date();
  uint64_t v133 = *(void *)(v184 - 8);
  uint64_t v9 = __chkstk_darwin(v184);
  uint64_t v124 = (char *)&v120 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v169 = (char *)&v120 - v11;
  uint64_t v12 = type metadata accessor for DetailChartDataElement();
  uint64_t v193 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v126 = (char *)&v120 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v127 = (char *)&v120 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v196 = (char *)&v120 - v18;
  __chkstk_darwin(v17);
  uint64_t v195 = (char *)&v120 - v19;
  uint64_t v183 = type metadata accessor for WeatherFormatPlaceholder();
  uint64_t v132 = *(void *)(v183 - 8);
  __chkstk_darwin(v183);
  uint64_t v182 = (char *)&v120 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v180 = type metadata accessor for WeatherFormatScaling();
  uint64_t v130 = *(void *)(v180 - 8);
  __chkstk_darwin(v180);
  uint64_t v178 = (char *)&v120 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10017DF08(&qword_100E63730);
  __chkstk_darwin(v22 - 8);
  uint64_t v176 = (uint64_t)&v120 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = type metadata accessor for NSUnitLength.WeatherFormatUsage();
  uint64_t v129 = *(void *)(v177 - 8);
  __chkstk_darwin(v177);
  uint64_t v175 = (char *)&v120 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = type metadata accessor for NSUnitLength.BaseWeatherFormatStyle();
  uint64_t v131 = *(void *)(v181 - 8);
  __chkstk_darwin(v181);
  char v179 = (char *)&v120 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = type metadata accessor for DayPrecipitationSummary();
  uint64_t v171 = *(void *)(v168 - 8);
  __chkstk_darwin(v168);
  uint64_t v167 = (char *)&v120 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_10017DF08(&qword_100E6B6C0);
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v120 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v202 = sub_10017DF08(&qword_100E6B648);
  uint64_t v128 = *(void *)(v202 - 8);
  uint64_t v31 = __chkstk_darwin(v202);
  uint64_t v163 = (uint64_t)&v120 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v191 = (char *)&v120 - v34;
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v194 = (char *)&v120 - v36;
  __chkstk_darwin(v35);
  uint64_t v38 = (char *)&v120 - v37;
  uint64_t v39 = type metadata accessor for Calendar();
  uint64_t v123 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v41 = (char *)&v120 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v201 = v4;
  swift_getObjectType();
  uint64_t v42 = (void *)dispatch thunk of UnitManagerType.precipitationRainfall.getter();
  uint64_t v43 = a2 + *(int *)(type metadata accessor for PrecipitationAveragesHeroChartInput() + 28);
  uint64_t v162 = v41;
  uint64_t v186 = v43;
  static Calendar.currentCalendar(with:)();
  unint64_t v44 = sub_1002F8D98();
  id v45 = v42;
  uint64_t v198 = v38;
  unsigned __int8 v192 = v45;
  unint64_t v174 = v44;
  Measurement.init(value:unit:)();
  uint64_t v122 = a2;
  WeatherStatisticsModel.dailyPrecipitationSummary.getter();
  uint64_t v46 = DailyWeatherSummary.days.getter();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
  uint64_t v47 = self;
  id v48 = [v47 mainBundle];
  v203._uint64_t countAndFlagsBits = 0xD00000000000003BLL;
  v203._object = (void *)0x8000000100C99640;
  v49._uint64_t countAndFlagsBits = 0x6F676120646425;
  v49._object = (void *)0xE700000000000000;
  v50._uint64_t countAndFlagsBits = 0;
  v50._object = (void *)0xE000000000000000;
  object = NSLocalizedString(_:tableName:bundle:value:comment:)(v49, (Swift::String_optional)0, (NSBundle)v48, v50, v203)._object;

  sub_10017DF08(&qword_100E64020);
  uint64_t v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = xmmword_100C251B0;
  *(void *)(v52 + 56) = &type metadata for Int;
  *(void *)(v52 + 64) = &protocol witness table for Int;
  *(void *)(v52 + 32) = 30;
  uint64_t v166 = static String.localizedStringWithFormat(_:_:)();
  uint64_t v173 = v53;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v54 = (unint64_t)v201[7];
  if ((v54 & 0x8000000000000000) != 0)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    uint64_t v46 = sub_1007E96BC(0, *(void *)(v46 + 16) + 1, 1, v46);
    goto LABEL_18;
  }
  id v120 = v47;
  uint64_t v172 = v12;
  uint64_t v121 = v39;
  if (v54)
  {
    uint64_t v55 = *(void *)(v46 + 16);
    if (v55)
    {
      uint64_t v56 = countAndFlagsBits;
      uint64_t v137 = *(void *)(countAndFlagsBits + 16);
      if (v137)
      {
        uint64_t v160 = type metadata accessor for UnitManager();
        unint64_t v57 = 0;
        uint64_t v58 = (char *)(v56
                     + ((*(unsigned __int8 *)(v133 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v133 + 80)));
        unint64_t v159 = v46 + ((*(unsigned __int8 *)(v171 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v171 + 80));
        uint64_t v135 = *(void *)(v133 + 72);
        uint64_t v158 = v171 + 16;
        uint64_t v157 = v171 + 8;
        uint64_t v201 = (void (**)(char *, uint64_t))(v128 + 8);
        uint64_t v156 = (void (**)(char *, char *, uint64_t))(v128 + 32);
        uint64_t v155 = (void (**)(char *, char *, uint64_t))(v128 + 16);
        unsigned int v154 = enum case for NSUnitLength.WeatherFormatUsage.rainfall(_:);
        char v153 = (void (**)(char *, void, uint64_t))(v129 + 104);
        unsigned int v152 = enum case for WeatherFormatScaling.automatic(_:);
        uint64_t v151 = (void (**)(char *, void, uint64_t))(v130 + 104);
        uint64_t v150 = (void (**)(char *, uint64_t))(v130 + 8);
        uint64_t v149 = (void (**)(char *, uint64_t))(v129 + 8);
        unsigned int v148 = enum case for WeatherFormatPlaceholder.none(_:);
        uint64_t v147 = (void (**)(char *, void, uint64_t))(v132 + 104);
        uint64_t v146 = (void (**)(char *, uint64_t))(v132 + 8);
        uint64_t v145 = (void (**)(char *, uint64_t))(v131 + 8);
        uint64_t v144 = (void (**)(char *, void *, uint64_t))(v133 + 16);
        unsigned int v143 = enum case for DetailChartDataElement.ValueLabel.text(_:);
        uint64_t v142 = (void (**)(void *, void, uint64_t))(v134 + 104);
        uint64_t v141 = (void (**)(char *, char *, uint64_t))(v193 + 16);
        uint64_t v140 = v193 + 32;
        uint64_t v139 = v193 + 8;
        uint64_t v136 = (char *)(v55 - 1);
        object = _swiftEmptyArrayStorage;
        uint64_t v138 = (char *)(v54 - 1);
        uint64_t v161 = v46;
        while (1)
        {
          uint64_t v59 = v58;
          uint64_t v60 = Date.formattedShortMonthAndDay(timeZone:)();
          if (v57 >= *(void *)(v46 + 16)) {
            break;
          }
          uint64_t v62 = v171;
          uint64_t v63 = *(void *)(v171 + 72);
          uint64_t v189 = v61;
          unint64_t v64 = v159 + v63 * v57;
          uint64_t v65 = *(void (**)(char *, unint64_t, uint64_t))(v171 + 16);
          uint64_t v66 = v167;
          uint64_t v188 = v60;
          uint64_t v67 = v168;
          v65(v167, v64, v168);
          uint64_t v199 = v59;
          uint64_t v68 = v191;
          DayPrecipitationSummary.precipitationAmount.getter();
          (*(void (**)(char *, uint64_t))(v62 + 8))(v66, v67);
          uint64_t v197 = object;
          uint64_t v69 = v202;
          Measurement<>.converted(to:)();
          uint64_t v70 = *v201;
          (*v201)(v68, v69);
          uint64_t countAndFlagsBits = (uint64_t)v70;
          uint64_t v71 = v198;
          static Measurement<>.+ infix(_:_:)();
          v70(v71, v69);
          (*v156)(v71, v68, v69);
          (*v155)(v68, v71, v69);
          uint64_t v72 = v175;
          uint64_t v73 = v177;
          (*v153)(v175, v154, v177);
          uint64_t v74 = type metadata accessor for Locale();
          unsigned __int8 v190 = (char *)v57;
          uint64_t v75 = v176;
          _s7Weather24LocationCompositionStateOwst_0(v176, 1, 1, v74);
          static Set<>.full.getter();
          char v76 = v178;
          uint64_t v77 = v180;
          (*v151)(v178, v152, v180);
          uint64_t v78 = v179;
          static WeatherFormatStyle<>.weather(_:usage:scaling:trimLeadingZeroes:locale:)();
          swift_bridgeObjectRelease();
          (*v150)(v76, v77);
          sub_100178110(v75, &qword_100E63730);
          (*v149)(v72, v73);
          uint64_t v79 = v182;
          uint64_t v80 = v183;
          (*v147)(v182, v148, v183);
          static UnitManager.standard.getter();
          sub_1002F8E6C((unint64_t *)&qword_100E6B658, (void (*)(uint64_t))&type metadata accessor for NSUnitLength.BaseWeatherFormatStyle);
          uint64_t v81 = v181;
          uint64_t v187 = Measurement.formatted<A>(_:placeholder:unitManager:)();
          swift_release();
          uint64_t v82 = v79;
          uint64_t v83 = v190;
          (*v146)(v82, v80);
          (*v145)(v78, v81);
          ((void (*)(char *, uint64_t))countAndFlagsBits)(v68, v69);
          (*v144)(v169, v199, v184);
          object = v197;
          Measurement.value.getter();
          uint64_t v84 = v170;
          *uint64_t v170 = 0;
          v84[1] = 0xE000000000000000;
          (*v142)(v84, v143, v185);
          swift_bridgeObjectRetain();
          unint64_t v54 = (unint64_t)v195;
          uint64_t v12 = v172;
          DetailChartDataElement.init(date:value:secondValue:thirdValue:valueLabel:dateLabel:accessibilityDateString:accessibilityValueDescription:color:textColor:)();
          (*v141)(v196, (char *)v54, v12);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            object = (void *)sub_1007E96BC(0, object[2] + 1, 1, (uint64_t)object);
          }
          unint64_t v86 = object[2];
          unint64_t v85 = object[3];
          uint64_t v46 = v161;
          if (v86 >= v85 >> 1) {
            object = (void *)sub_1007E96BC(v85 > 1, v86 + 1, 1, (uint64_t)object);
          }
          object[2] = v86 + 1;
          uint64_t v87 = v193;
          (*(void (**)(unint64_t, char *, uint64_t))(v193 + 32))((unint64_t)object+ ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80))+ *(void *)(v87 + 72) * v86, v196, v12);
          (*(void (**)(char *, uint64_t))(v87 + 8))(v195, v12);
          ((void (*)(char *, uint64_t))countAndFlagsBits)(v194, v202);
          if (v138 != v83 && v136 != v83)
          {
            uint64_t v58 = &v199[v135];
            unint64_t v57 = (unint64_t)(v83 + 1);
            if (v137 != v57) {
              continue;
            }
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v88 = v122;
          uint64_t v197 = object;
          goto LABEL_17;
        }
        __break(1u);
        goto LABEL_22;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v197 = _swiftEmptyArrayStorage;
  uint64_t v88 = v122;
LABEL_17:
  id v89 = [v120 mainBundle];
  v204._uint64_t countAndFlagsBits = 0xD0000000000000CCLL;
  v204._object = (void *)0x8000000100C996C0;
  v90._object = (void *)0x8000000100C99680;
  v90._uint64_t countAndFlagsBits = 0xD000000000000034;
  v91._uint64_t countAndFlagsBits = 0x7961646F54;
  v91._object = (void *)0xE500000000000000;
  Swift::String v92 = NSLocalizedString(_:tableName:bundle:value:comment:)(v90, (Swift::String_optional)0, (NSBundle)v89, v91, v204);
  uint64_t v199 = (char *)v92._object;
  uint64_t countAndFlagsBits = v92._countAndFlagsBits;

  sub_1002F7998(v88, (uint64_t)v162, v164, v192, v163);
  uint64_t v93 = Date.formattedShortMonthAndDay(timeZone:)();
  uint64_t v195 = v94;
  uint64_t v196 = (char *)v93;
  uint64_t v95 = v165;
  double v96 = v198;
  static Measurement<>.+ infix(_:_:)();
  uint64_t v97 = v128;
  uint64_t v98 = *(void (***)(char *, uint64_t))(v128 + 8);
  uint64_t v194 = (char *)(v128 + 8);
  uint64_t v201 = v98;
  uint64_t v99 = v202;
  ((void (*)(char *, uint64_t))v98)(v96, v202);
  (*(void (**)(char *, uint64_t, uint64_t))(v97 + 16))(v191, v95, v99);
  uint64_t v100 = v129;
  uint64_t v101 = v175;
  uint64_t v102 = v177;
  (*(void (**)(char *, void, uint64_t))(v129 + 104))(v175, enum case for NSUnitLength.WeatherFormatUsage.rainfall(_:), v177);
  uint64_t v103 = type metadata accessor for Locale();
  uint64_t v104 = v176;
  _s7Weather24LocationCompositionStateOwst_0(v176, 1, 1, v103);
  static Set<>.full.getter();
  uint64_t v105 = v130;
  char v106 = v178;
  uint64_t v107 = v180;
  (*(void (**)(char *, void, uint64_t))(v130 + 104))(v178, enum case for WeatherFormatScaling.automatic(_:), v180);
  uint64_t v108 = v179;
  static WeatherFormatStyle<>.weather(_:usage:scaling:trimLeadingZeroes:locale:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v105 + 8))(v106, v107);
  sub_100178110(v104, &qword_100E63730);
  (*(void (**)(char *, uint64_t))(v100 + 8))(v101, v102);
  uint64_t v109 = v132;
  uint64_t v110 = v182;
  uint64_t v111 = v183;
  (*(void (**)(char *, void, uint64_t))(v132 + 104))(v182, enum case for WeatherFormatPlaceholder.none(_:), v183);
  type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  sub_1002F8E6C((unint64_t *)&qword_100E6B658, (void (*)(uint64_t))&type metadata accessor for NSUnitLength.BaseWeatherFormatStyle);
  uint64_t v112 = v181;
  uint64_t v113 = v191;
  Measurement.formatted<A>(_:placeholder:unitManager:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v109 + 8))(v110, v111);
  (*(void (**)(char *, uint64_t))(v131 + 8))(v108, v112);
  ((void (*)(char *, uint64_t))v201)(v113, v99);
  (*(void (**)(char *, uint64_t, uint64_t))(v133 + 16))(v124, v164, v184);
  Measurement.value.getter();
  uint64_t v114 = v125;
  *uint64_t v125 = 0;
  v114[1] = 0xE000000000000000;
  (*(void (**)(void *, void, uint64_t))(v134 + 104))(v114, enum case for DetailChartDataElement.ValueLabel.text(_:), v185);
  uint64_t v12 = (uint64_t)v127;
  DetailChartDataElement.init(date:value:secondValue:thirdValue:valueLabel:dateLabel:accessibilityDateString:accessibilityValueDescription:color:textColor:)();
  object = v126;
  unint64_t v54 = v172;
  (*(void (**)(char *, uint64_t, uint64_t))(v193 + 16))(v126, v12, v172);
  uint64_t v46 = (uint64_t)v197;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    goto LABEL_23;
  }
LABEL_18:
  uint64_t v115 = v121;
  unint64_t v117 = *(void *)(v46 + 16);
  unint64_t v116 = *(void *)(v46 + 24);
  if (v117 >= v116 >> 1) {
    uint64_t v46 = sub_1007E96BC(v116 > 1, v117 + 1, 1, v46);
  }
  *(void *)(v46 + 16) = v117 + 1;
  uint64_t v118 = v193;
  (*(void (**)(unint64_t, void *, unint64_t))(v193 + 32))(v46+ ((*(unsigned __int8 *)(v118 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80))+ *(void *)(v118 + 72) * v117, object, v54);

  (*(void (**)(uint64_t, unint64_t))(v118 + 8))(v12, v54);
  ((void (*)(uint64_t, uint64_t))v201)(v163, v202);
  (*(void (**)(char *, uint64_t))(v123 + 8))(v162, v115);
  return v46;
}

void *sub_1002F41B0(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v154 = a4;
  uint64_t v121 = a3;
  uint64_t v186 = a2;
  uint64_t v122 = a1;
  uint64_t v153 = type metadata accessor for DetailChartDataElement.ValueLabel();
  uint64_t v203 = *(void *)(v153 - 8);
  __chkstk_darwin(v153);
  unsigned int v152 = (uint64_t *)((char *)&v116 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v179 = type metadata accessor for DetailChartDataElement();
  uint64_t v155 = *(void *)(v179 - 8);
  uint64_t v5 = __chkstk_darwin(v179);
  uint64_t v178 = (char *)&v116 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v177 = (char *)&v116 - v7;
  uint64_t v151 = type metadata accessor for WeatherFormatPlaceholder();
  uint64_t v202 = *(char **)(v151 - 8);
  __chkstk_darwin(v151);
  uint64_t v150 = (char *)&v116 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = type metadata accessor for WeatherFormatScaling();
  uint64_t v194 = *(void *)(v149 - 8);
  __chkstk_darwin(v149);
  unsigned int v148 = (char *)&v116 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E63730);
  __chkstk_darwin(v10 - 8);
  uint64_t v147 = (uint64_t)&v116 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = type metadata accessor for NSUnitLength.WeatherFormatUsage();
  uint64_t v192 = *(void *)(v146 - 8);
  __chkstk_darwin(v146);
  uint64_t v145 = (char *)&v116 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = type metadata accessor for NSUnitLength.BaseWeatherFormatStyle();
  uint64_t v191 = *(void *)(v144 - 8);
  __chkstk_darwin(v144);
  unsigned int v143 = (char *)&v116 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = sub_10017DF08(&qword_100E6B698);
  __chkstk_darwin(v176);
  uint64_t v200 = (uint64_t)&v116 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100E6B6A0);
  unint64_t v206 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v205 = (char *)&v116 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v193 = (char *)&v116 - v18;
  uint64_t v19 = sub_10017DF08(&qword_100E6B6A8);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v116 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v199 = type metadata accessor for DayPrecipitationStatistics();
  uint64_t v197 = *(void (***)(char *, uint64_t))(v199 - 8);
  uint64_t v22 = __chkstk_darwin(v199);
  uint64_t v198 = (char *)&v116 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v196 = (char *)&v116 - v25;
  __chkstk_darwin(v24);
  uint64_t v175 = (char *)&v116 - v26;
  uint64_t v174 = type metadata accessor for Calendar.Component();
  Swift::String v204 = *(char ***)(v174 - 8);
  uint64_t v27 = __chkstk_darwin(v174);
  uint64_t v173 = (char *)&v116 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v172 = (char *)&v116 - v29;
  uint64_t v30 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v30 - 8);
  uint64_t v183 = (char *)&v116 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v184 = sub_10017DF08(&qword_100E6B648);
  uint64_t v32 = *(void *)(v184 - 8);
  uint64_t v33 = __chkstk_darwin(v184);
  uint64_t v142 = (char *)&v116 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v171 = (char *)&v116 - v36;
  __chkstk_darwin(v35);
  uint64_t v38 = (char *)&v116 - v37;
  uint64_t v119 = type metadata accessor for Calendar();
  uint64_t v118 = *(void *)(v119 - 8);
  __chkstk_darwin(v119);
  uint64_t v40 = (char *)&v116 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = type metadata accessor for Date();
  uint64_t v41 = *(void *)(v182 - 8);
  uint64_t v42 = __chkstk_darwin(v182);
  uint64_t v141 = (char *)&v116 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v180 = (char *)&v116 - v45;
  __chkstk_darwin(v44);
  uint64_t v47 = (char *)&v116 - v46;
  swift_getObjectType();
  id v48 = (void *)dispatch thunk of UnitManagerType.precipitationRainfall.getter();
  uint64_t v170 = type metadata accessor for PrecipitationAveragesHeroChartInput();
  uint64_t v49 = v186 + *(int *)(v170 + 28);
  uint64_t v157 = v47;
  Date.startOfDay(timeZone:)();
  uint64_t v185 = v40;
  uint64_t v140 = v49;
  static Calendar.gregorianCalendar(with:)();
  unint64_t v50 = sub_1002F8D98();
  id v51 = v48;
  uint64_t v187 = v38;
  Measurement.init(value:unit:)();
  id v156 = v51;
  unint64_t v139 = v50;
  Measurement.init(value:unit:)();
  uint64_t v169 = *(void *)(v121 + 16);
  uint64_t v120 = v32;
  uint64_t v117 = v41;
  if (v169)
  {
    uint64_t v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 16);
    uint64_t v52 = v41 + 16;
    uint64_t v189 = v53;
    uint64_t v168 = v121 + ((*(unsigned __int8 *)(v52 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 64));
    uint64_t v167 = *(void *)(v52 + 56);
    uint64_t v166 = (void (**)(char *, uint64_t, uint64_t))(v52 + 16);
    unsigned int v165 = enum case for Calendar.Component.day(_:);
    uint64_t v164 = (void (**)(char *, void, uint64_t))(v204 + 13);
    unsigned int v163 = enum case for Calendar.Component.year(_:);
    uint64_t v162 = (void (**)(char *, uint64_t))(v204 + 1);
    Swift::String v204 = (char **)(v206 + 16);
    uint64_t v195 = (void (**)(char *))(v197 + 2);
    v206 += 8;
    uint64_t v201 = (void (**)(char *, char *, uint64_t))(v197 + 4);
    ++v197;
    uint64_t v188 = (void (**)(char *, uint64_t))(v32 + 8);
    uint64_t v138 = (void (**)(char *, char *, uint64_t))(v32 + 32);
    unint64_t v159 = (void (**)(char *, char *, uint64_t))(v32 + 16);
    unsigned int v137 = enum case for NSUnitLength.WeatherFormatUsage.rainfall(_:);
    uint64_t v136 = (void (**)(char *, void, uint64_t))(v192 + 104);
    unsigned int v135 = enum case for WeatherFormatScaling.automatic(_:);
    uint64_t v134 = (void (**)(char *, void, uint64_t))(v194 + 104);
    uint64_t v133 = (void (**)(char *, uint64_t))(v194 + 8);
    uint64_t v132 = (void (**)(char *, uint64_t))(v192 + 8);
    unsigned int v131 = enum case for WeatherFormatPlaceholder.none(_:);
    uint64_t v130 = (void (**)(char *, void, uint64_t))(v202 + 104);
    uint64_t v129 = (void (**)(char *, uint64_t))(v202 + 8);
    uint64_t v128 = (void (**)(char *, uint64_t))(v191 + 8);
    uint64_t v127 = (void (**)(void *, void, uint64_t))(v203 + 104);
    unsigned int v126 = enum case for DetailChartDataElement.ValueLabel.text(_:);
    uint64_t v125 = (void (**)(char *, char *, uint64_t))(v155 + 16);
    uint64_t v124 = v155 + 32;
    uint64_t v123 = v155 + 8;
    uint64_t v190 = v52;
    uint64_t v161 = (void (**)(char *, uint64_t))(v52 - 8);
    swift_bridgeObjectRetain();
    uint64_t v54 = 0;
    uint64_t v181 = _swiftEmptyArrayStorage;
    uint64_t v55 = v199;
    uint64_t v56 = v200;
    unint64_t v57 = v198;
    uint64_t v58 = (uint64_t)v183;
    uint64_t v59 = v182;
    uint64_t v60 = v180;
    uint64_t v160 = v21;
    while (1)
    {
      v189(v58, v168 + v167 * v54, v59);
      _s7Weather24LocationCompositionStateOwst_0(v58, 0, 1, v59);
      if (_s7Weather24LocationCompositionStateOwet_0(v58, 1, v59) == 1) {
        break;
      }
      uint64_t v192 = v54;
      (*v166)(v60, v58, v59);
      uint64_t v61 = *v164;
      uint64_t v62 = v172;
      uint64_t v63 = v174;
      (*v164)(v172, v165, v174);
      unint64_t v64 = v173;
      v61(v173, v163, v63);
      uint64_t v194 = Calendar.ordinality(of:in:for:)();
      LODWORD(v203) = v65;
      uint64_t v66 = *v162;
      (*v162)(v64, v63);
      v66(v62, v63);
      uint64_t v67 = v193;
      WeatherStatisticsModel.dailyPrecipitationStatistics.getter();
      uint64_t v202 = *v204;
      ((void (*)(char *, char *, uint64_t))v202)(v205, v67, v15);
      sub_1002F9ACC(&qword_100E6B6B0);
      dispatch thunk of Sequence.makeIterator()();
      uint64_t v68 = (uint64_t *)(v56 + *(int *)(v176 + 36));
      sub_1002F9ACC(&qword_100E6B6B8);
      uint64_t v69 = *v68;
      dispatch thunk of Collection.endIndex.getter();
      uint64_t v70 = v207;
      uint64_t v191 = v206 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      while (1)
      {
        if (v69 == v70)
        {
          sub_100178110(v56, &qword_100E6B698);
          uint64_t v77 = (uint64_t)v160;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v160, 1, 1, v55);
          (*(void (**)(char *, uint64_t))v206)(v193, v15);
          goto LABEL_11;
        }
        uint64_t v71 = (void (*)(uint64_t *, void))dispatch thunk of Collection.subscript.read();
        uint64_t v72 = v196;
        (*v195)(v196);
        v71(&v207, 0);
        uint64_t v73 = v205;
        ((void (*)(char *, uint64_t, uint64_t))v202)(v205, v56, v15);
        dispatch thunk of Collection.formIndex(after:)();
        uint64_t v74 = *(void (**)(char *, uint64_t))v206;
        (*(void (**)(char *, uint64_t))v206)(v73, v15);
        uint64_t v75 = *v201;
        (*v201)(v57, v72, v55);
        uint64_t v76 = DayPrecipitationStatistics.day.getter();
        if ((v203 & 1) == 0 && v76 == v194) {
          break;
        }
        unint64_t v57 = v198;
        uint64_t v55 = v199;
        (*v197)(v198, v199);
        uint64_t v69 = *v68;
        uint64_t v56 = v200;
        dispatch thunk of Collection.endIndex.getter();
        uint64_t v70 = v207;
      }
      uint64_t v78 = v200;
      sub_100178110(v200, &qword_100E6B698);
      uint64_t v77 = (uint64_t)v160;
      unint64_t v57 = v198;
      uint64_t v55 = v199;
      v75(v160, v198, v199);
      uint64_t v56 = v78;
      _s7Weather24LocationCompositionStateOwst_0(v77, 0, 1, v55);
      v74(v193, v15);
LABEL_11:
      if (_s7Weather24LocationCompositionStateOwet_0(v77, 1, v55) == 1)
      {
        uint64_t v60 = v180;
        uint64_t v59 = v182;
        (*v161)(v180, v182);
        sub_100178110(v77, &qword_100E6B6A8);
      }
      else
      {
        (*v201)(v175, (char *)v77, v55);
        uint64_t v79 = v142;
        DayPrecipitationStatistics.averagePrecipitationAmount.getter();
        uint64_t v80 = v184;
        Measurement<>.converted(to:)();
        uint64_t v81 = *v188;
        (*v188)(v79, v80);
        uint64_t v194 = (uint64_t)v81;
        uint64_t v82 = Date.formattedShortMonthAndDay(timeZone:)();
        uint64_t v202 = v83;
        uint64_t v203 = v82;
        uint64_t v84 = v187;
        static Measurement<>.+ infix(_:_:)();
        v81(v84, v80);
        (*v138)(v84, v79, v80);
        uint64_t v158 = *v159;
        v158(v79, v84, v80);
        unint64_t v85 = v145;
        uint64_t v86 = v146;
        (*v136)(v145, v137, v146);
        uint64_t v87 = type metadata accessor for Locale();
        uint64_t v88 = v147;
        _s7Weather24LocationCompositionStateOwst_0(v147, 1, 1, v87);
        static Set<>.full.getter();
        id v89 = v148;
        uint64_t v90 = v149;
        (*v134)(v148, v135, v149);
        Swift::String v91 = v143;
        static WeatherFormatStyle<>.weather(_:usage:scaling:trimLeadingZeroes:locale:)();
        swift_bridgeObjectRelease();
        (*v133)(v89, v90);
        sub_100178110(v88, &qword_100E63730);
        (*v132)(v85, v86);
        Swift::String v92 = v150;
        uint64_t v93 = v151;
        (*v130)(v150, v131, v151);
        type metadata accessor for UnitManager();
        static UnitManager.standard.getter();
        sub_1002F8E6C((unint64_t *)&qword_100E6B658, (void (*)(uint64_t))&type metadata accessor for NSUnitLength.BaseWeatherFormatStyle);
        uint64_t v94 = v144;
        uint64_t v191 = Measurement.formatted<A>(_:placeholder:unitManager:)();
        uint64_t v95 = (void (*)(char *, uint64_t))v194;
        swift_release();
        (*v129)(v92, v93);
        (*v128)(v91, v94);
        v95(v79, v80);
        uint64_t v60 = v180;
        uint64_t v59 = v182;
        v189((uint64_t)v141, (uint64_t)v180, v182);
        Measurement.value.getter();
        double v96 = v152;
        *unsigned int v152 = 0;
        v96[1] = 0xE000000000000000;
        (*v127)(v96, v126, v153);
        swift_bridgeObjectRetain();
        uint64_t v97 = v177;
        DetailChartDataElement.init(date:value:secondValue:thirdValue:valueLabel:dateLabel:accessibilityDateString:accessibilityValueDescription:color:textColor:)();
        (*v125)(v178, v97, v179);
        uint64_t v98 = (uint64_t)v181;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v98 = sub_1007E96BC(0, *(void *)(v98 + 16) + 1, 1, v98);
        }
        unint64_t v100 = *(void *)(v98 + 16);
        unint64_t v99 = *(void *)(v98 + 24);
        uint64_t v101 = v155;
        uint64_t v56 = v200;
        if (v100 >= v99 >> 1)
        {
          uint64_t v109 = sub_1007E96BC(v99 > 1, v100 + 1, 1, v98);
          uint64_t v101 = v155;
          uint64_t v98 = v109;
        }
        *(void *)(v98 + 16) = v100 + 1;
        unint64_t v102 = (*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80);
        uint64_t v181 = (void *)v98;
        unint64_t v103 = v98 + v102 + *(void *)(v101 + 72) * v100;
        uint64_t v104 = v179;
        uint64_t v105 = v101;
        (*(void (**)(unint64_t, char *, uint64_t))(v101 + 32))(v103, v178, v179);
        char v106 = static Date.== infix(_:_:)();
        (*(void (**)(char *, uint64_t))(v105 + 8))(v177, v104);
        uint64_t v107 = v184;
        v95(v171, v184);
        uint64_t v55 = v199;
        (*v197)(v175, v199);
        (*v161)(v60, v59);
        if (v106)
        {
          uint64_t v108 = v122;
          v95(v122, v107);
          v158(v108, v187, v107);
        }
        unint64_t v57 = v198;
      }
      uint64_t v58 = (uint64_t)v183;
      uint64_t v54 = v192 + 1;
      if (v192 + 1 == v169) {
        goto LABEL_23;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v181 = _swiftEmptyArrayStorage;
    uint64_t v58 = (uint64_t)v183;
    uint64_t v59 = v182;
LABEL_23:
    _s7Weather24LocationCompositionStateOwst_0(v58, 1, 1, v59);
  }
  uint64_t v110 = v184;
  uint64_t v111 = v120;
  uint64_t v112 = v119;
  uint64_t v113 = v118;
  uint64_t v114 = v117;
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v111 + 8))(v187, v110);
  (*(void (**)(char *, uint64_t))(v113 + 8))(v185, v112);
  (*(void (**)(char *, uint64_t))(v114 + 8))(v157, v59);
  return v181;
}

uint64_t sub_1002F5958(void *a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E6B648);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for RoundedPrecipitation();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002F8D98();
  id v10 = a1;
  Measurement.init(value:unit:)();
  type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  Measurement<>.convertAndRoundPrecipitation(unitManager:)();
  swift_release();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v3 + 8);
  v11(v5, v2);
  RoundedPrecipitation.measurement.getter();
  uint64_t v12 = Measurement.unit.getter();
  v11(v5, v2);
  sub_1002F7CD4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v12;
}

void *sub_1002F5B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v74 = a2;
  uint64_t v80 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v80 - 8);
  uint64_t v5 = __chkstk_darwin(v80);
  uint64_t v72 = (char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v64 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v78 = (char *)&v64 - v11;
  __chkstk_darwin(v10);
  uint64_t v13 = (unint64_t *)((char *)&v64 - v12);
  uint64_t v14 = type metadata accessor for Calendar();
  uint64_t v73 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v75 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E6B640);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for DetailChartDataElement();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v79 = (char *)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v64 - v23;
  uint64_t v26 = *(void *)(a3 + 16);
  if (!v26) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v71 = v4;
  uint64_t v27 = *(void (**)(char *, unint64_t, uint64_t))(v20 + 16);
  unint64_t v69 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v28 = v24;
  v27((char *)&v64 - v23, a3 + v69, v24);
  sub_100304160(a3, (uint64_t)v18);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v28) == 1)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v25, v28);
    sub_100178110((uint64_t)v18, &qword_100E6B640);
    return _swiftEmptyArrayStorage;
  }
  uint64_t v70 = v25;
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  uint64_t v68 = v28;
  v30(v79, v18, v28);
  type metadata accessor for PrecipitationAveragesHeroChartInput();
  uint64_t v31 = v75;
  static Calendar.currentCalendar(with:)();
  uint64_t v32 = Date.startOfDay(timeZone:)();
  __chkstk_darwin(v32);
  *(&v64 - 2) = (uint64_t)v31;
  *(&v64 - 1) = (uint64_t)v13;
  unint64_t v33 = v74;
  uint64_t v34 = sub_100A969F8((uint64_t (*)(void))sub_1002F8F08, (uint64_t)(&v64 - 4), v74);
  if ((v35 & 1) == 0 && (v34 >= 1 ? (BOOL v36 = v34 < v26) : (BOOL v36 = 0), v36))
  {
    int64_t v67 = v34;
    uint64_t v43 = v78;
    DetailChartDataElement.date.getter();
    uint64_t v29 = sub_1007E9738(0, 1, 1, (uint64_t)_swiftEmptyArrayStorage);
    unint64_t v45 = *(void *)(v29 + 16);
    unint64_t v44 = *(void *)(v29 + 24);
    uint64_t v46 = v45 + 1;
    uint64_t v47 = v71;
    uint64_t v66 = v14;
    if (v45 >= v44 >> 1) {
      goto LABEL_23;
    }
    while (1)
    {
      int v65 = v13;
      *(void *)(v29 + 16) = v46;
      id v48 = *(char **)(v47 + 32);
      v47 += 32;
      unint64_t v77 = (*(unsigned __int8 *)(v47 + 48) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 48);
      uint64_t v78 = v48;
      uint64_t v76 = *(void *)(v47 + 40);
      ((void (*)(unint64_t, char *, uint64_t))v48)(v29 + v77 + v76 * v45, v43, v80);
      sub_1002F7E5C(v67, 1, -10);
      uint64_t v43 = *(char **)(v49 + 16);
      int64_t v67 = v49;
      if (!v43) {
        break;
      }
      uint64_t v13 = (unint64_t *)(v49 + 32);
      unint64_t v45 = v33 + v69;
      unint64_t v33 = *(void *)(v33 + 16);
      while (1)
      {
        unint64_t v50 = *v13++;
        unint64_t v44 = v50;
        if (v50 >= v33) {
          break;
        }
        DetailChartDataElement.date.getter();
        unint64_t v52 = *(void *)(v29 + 16);
        unint64_t v51 = *(void *)(v29 + 24);
        uint64_t v46 = v52 + 1;
        if (v52 >= v51 >> 1) {
          uint64_t v29 = sub_1007E9738(v51 > 1, v52 + 1, 1, v29);
        }
        *(void *)(v29 + 16) = v46;
        ((void (*)(unint64_t, char *, uint64_t))v78)(v29 + v77 + v52 * v76, v9, v80);
        if (!--v43) {
          goto LABEL_18;
        }
      }
      __break(1u);
LABEL_23:
      uint64_t v29 = sub_1007E9738(v44 > 1, v46, 1, v29);
    }
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v53 = v72;
    DetailChartDataElement.date.getter();
    unint64_t v55 = *(void *)(v29 + 16);
    unint64_t v54 = *(void *)(v29 + 24);
    if (v55 >= v54 >> 1) {
      uint64_t v29 = sub_1007E9738(v54 > 1, v55 + 1, 1, v29);
    }
    uint64_t v56 = v71;
    uint64_t v58 = v65;
    uint64_t v57 = v66;
    uint64_t v59 = v73;
    *(void *)(v29 + 16) = v55 + 1;
    uint64_t v60 = v80;
    ((void (*)(unint64_t, char *, uint64_t))v78)(v29 + v77 + v55 * v76, v53, v80);
    uint64_t v61 = *(void (**)(char *, uint64_t))(v20 + 8);
    uint64_t v62 = v68;
    v61(v79, v68);
    v61(v70, v62);
    (*(void (**)(unint64_t *, uint64_t))(v56 + 8))(v58, v60);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v75, v57);
  }
  else
  {
    sub_10017DF08(&qword_100E6B688);
    uint64_t v37 = v71;
    uint64_t v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_100C25ED0;
    uint64_t v38 = v70;
    DetailChartDataElement.date.getter();
    uint64_t v39 = v79;
    DetailChartDataElement.date.getter();
    uint64_t v40 = *(void (**)(char *, uint64_t))(v20 + 8);
    uint64_t v41 = v39;
    uint64_t v42 = v68;
    v40(v41, v68);
    v40(v38, v42);
    (*(void (**)(unint64_t *, uint64_t))(v37 + 8))(v13, v80);
    (*(void (**)(char *, uint64_t))(v73 + 8))(v31, v14);
  }
  return (void *)v29;
}

uint64_t sub_1002F6234@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, int *a7@<X6>, void *a8@<X8>)
{
  uint64_t v9 = v8;
  id v156 = a7;
  id v131 = a6;
  uint64_t v150 = a4;
  uint64_t v157 = a3;
  uint64_t v142 = a2;
  uint64_t v151 = a1;
  uint64_t v160 = a8;
  uint64_t v11 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v11 - 8);
  uint64_t v134 = (char *)v116 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = type metadata accessor for AttributedString();
  uint64_t v136 = *(void *)(v137 - 8);
  __chkstk_darwin(v137);
  unsigned int v143 = (char *)v116 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = type metadata accessor for LollipopDetailViewModel(0);
  __chkstk_darwin(v138);
  unint64_t v139 = (void *)((char *)v116 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v132 = type metadata accessor for LollipopMarkModel(0);
  __chkstk_darwin(v132);
  uint64_t v144 = (uint64_t)v116 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = type metadata accessor for DetailChartDataElement();
  uint64_t v128 = *(void *)(v129 - 8);
  __chkstk_darwin(v129);
  uint64_t v127 = (uint64_t)v116 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10017DF08(&qword_100E6B668);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v140 = (uint64_t)v116 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  unsigned int v148 = (char *)v116 - v20;
  uint64_t v149 = type metadata accessor for ClosestData();
  uint64_t v21 = __chkstk_darwin(v149);
  uint64_t v145 = (uint64_t)v116 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v146 = (uint64_t)v116 - v23;
  uint64_t v153 = type metadata accessor for Date();
  uint64_t v155 = *(void *)(v153 - 8);
  uint64_t v24 = __chkstk_darwin(v153);
  uint64_t v147 = (char *)v116 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  unint64_t v159 = (char *)v116 - v26;
  uint64_t v27 = sub_10017DF08(&qword_100E6B670);
  __chkstk_darwin(v27 - 8);
  uint64_t v29 = (char *)v116 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for DetailHeroChartLollipopPosition(0);
  __chkstk_darwin(v30);
  uint64_t v158 = (void *)((char *)v116 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v133 = type metadata accessor for DetailHeroChartLollipopModel(0);
  __chkstk_darwin(v133);
  unint64_t v33 = (void *)((char *)v116 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v34 = sub_10017DF08(&qword_100E6B648);
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v125 = (char *)v116 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v124 = (char *)v116 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v42 = (char *)v116 - v41;
  __chkstk_darwin(v40);
  unint64_t v44 = (char *)v116 - v43;
  uint64_t v154 = v9;
  uint64_t v45 = *(void *)(v9 + 40);
  uint64_t v122 = (void *)(v9 + 16);
  sub_1001B1E64((void *)(v9 + 16), v45);
  unint64_t v46 = sub_1002F8D98();
  uint64_t v47 = v156;
  Measurement.init(value:unit:)();
  uint64_t v121 = v47;
  unint64_t v119 = v46;
  Measurement.init(value:unit:)();
  uint64_t v48 = type metadata accessor for PrecipitationAveragesHeroChartInput();
  uint64_t v120 = a5 + *(int *)(v48 + 32);
  sub_100572F50((uint64_t)v44, (uint64_t)v42, v120, 0, (uint64_t *)&v161);
  int64_t v49 = *(void (**)(void, void))(v35 + 8);
  uint64_t v141 = v42;
  v49(v42, v34);
  unsigned int v152 = v44;
  uint64_t v130 = v34;
  uint64_t v50 = v34;
  unint64_t v51 = (int *)v30;
  unint64_t v52 = v157;
  unsigned int v126 = v49;
  v49(v44, v50);
  sub_1002F8184((uint64_t)&v161, v33);
  long long v176 = v161;
  sub_1002F8DD8((uint64_t)&v176);
  sub_10024D364((uint64_t)v162, (uint64_t)v175, &qword_100E65F18);
  sub_1002F8DD8((uint64_t)v175);
  long long v174 = v163;
  sub_1002F8DD8((uint64_t)&v174);
  uint64_t v123 = v48;
  uint64_t v53 = *(int *)(v48 + 36);
  uint64_t v135 = a5;
  sub_1002F8E04(a5 + v53, (uint64_t)v29);
  id v156 = v51;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, (uint64_t)v51) == 1)
  {
    sub_100178110((uint64_t)v29, &qword_100E6B670);
    uint64_t v54 = (uint64_t)v33;
    return sub_1000B0C9C(v54, (uint64_t)v160, (void (*)(void))type metadata accessor for DetailHeroChartLollipopModel);
  }
  uint64_t v117 = v33;
  unint64_t v55 = v158;
  sub_1000B0C9C((uint64_t)v29, (uint64_t)v158, (void (*)(void))type metadata accessor for DetailHeroChartLollipopPosition);
  uint64_t v56 = (char *)v55 + v156[5];
  sub_1002F8E6C((unint64_t *)&qword_100E66CC0, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v57 = v150;
  uint64_t v58 = v153;
  char v59 = dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v60 = v155;
  uint64_t v62 = v155 + 16;
  uint64_t v61 = *(void (**)(void, void, void))(v155 + 16);
  uint64_t v118 = v61;
  uint64_t v63 = v147;
  if (v59)
  {
    uint64_t v64 = v147;
    int v65 = (char *)v57;
  }
  else
  {
    uint64_t v64 = v147;
    int v65 = v56;
  }
  v61(v64, v65, v58);
  uint64_t v66 = v154;
  uint64_t v67 = (uint64_t)v148;
  char v68 = dispatch thunk of static Comparable.>= infix(_:_:)();
  v116[1] = v62;
  uint64_t v69 = (uint64_t)v159;
  if (v68)
  {
    uint64_t v70 = v159;
    uint64_t v71 = v52;
  }
  else
  {
    uint64_t v70 = v159;
    uint64_t v71 = v63;
  }
  v118(v70, v71, v58);
  uint64_t v72 = v63;
  uint64_t v75 = *(char **)(v60 + 8);
  uint64_t v73 = v60 + 8;
  uint64_t v74 = v75;
  ((void (*)(char *, uint64_t))v75)(v72, v58);
  uint64_t v76 = v69;
  sub_1002F82F0(v69, v151, v67);
  uint64_t v77 = v149;
  if (_s7Weather24LocationCompositionStateOwet_0(v67, 1, v149) == 1)
  {
LABEL_12:
    ((void (*)(char *, uint64_t))v74)(v159, v58);
    sub_1002F8EB4((uint64_t)v158, (void (*)(void))type metadata accessor for DetailHeroChartLollipopPosition);
    sub_100178110(v67, &qword_100E6B668);
    uint64_t v54 = (uint64_t)v117;
    return sub_1000B0C9C(v54, (uint64_t)v160, (void (*)(void))type metadata accessor for DetailHeroChartLollipopModel);
  }
  uint64_t v157 = v74;
  uint64_t v78 = v146;
  sub_1000B0C9C(v67, v146, (void (*)(void))type metadata accessor for ClosestData);
  uint64_t v67 = v140;
  sub_1002F82F0(v69, v142, v140);
  if (_s7Weather24LocationCompositionStateOwet_0(v67, 1, v77) == 1)
  {
    sub_1002F8EB4(v78, (void (*)(void))type metadata accessor for ClosestData);
    uint64_t v74 = v157;
    goto LABEL_12;
  }
  sub_1000B0C9C(v67, v145, (void (*)(void))type metadata accessor for ClosestData);
  uint64_t v80 = v127;
  sub_1002F8688(v76, v127);
  DetailChartDataElement.value.getter();
  uint64_t v81 = *(void (**)(void, void))(v128 + 8);
  uint64_t v82 = v129;
  v81(v80, v129);
  id v83 = v131;
  uint64_t v155 = v73;
  uint64_t v84 = v66;
  id v85 = v83;
  Measurement.init(value:unit:)();
  sub_1002F8688(v76, v80);
  DetailChartDataElement.value.getter();
  v81(v80, v82);
  id v86 = v85;
  Measurement.init(value:unit:)();
  uint64_t v87 = v122;
  sub_1001B1E64(v122, *(void *)(v84 + 40));
  uint64_t v88 = (uint64_t)v124;
  uint64_t v89 = v130;
  Measurement<>.converted(to:)();
  uint64_t v90 = (uint64_t)v125;
  Measurement<>.converted(to:)();
  uint64_t v91 = v120;
  sub_100572F50(v88, v90, v120, 0, &v164);
  Swift::String v92 = v126;
  v126(v90, v89);
  v92(v88, v89);
  sub_1001B1E64(v87, *(void *)(v154 + 40));
  Measurement<>.converted(to:)();
  Measurement<>.converted(to:)();
  sub_100572F50(v88, v90, v91, 1, v167);
  v92(v90, v89);
  v92(v88, v89);
  uint64_t v150 = v164;
  long long v173 = v166;
  sub_10024D364((uint64_t)v165, (uint64_t)v172, &qword_100E65F18);
  sub_1002F8DD8((uint64_t)v172);
  uint64_t v93 = v158;
  uint64_t v94 = *v158;
  uint64_t v95 = v144;
  uint64_t v96 = (uint64_t)v159;
  uint64_t v97 = v153;
  v118(v144, v159, v153);
  uint64_t v98 = v146;
  double v99 = sub_1002F89B0(v96);
  uint64_t v100 = *(void *)((char *)v93 + v156[6]);
  uint64_t v101 = *(void *)((char *)v93 + v156[7]);
  uint64_t v102 = v132;
  *(double *)(v95 + *(int *)(v132 + 20)) = v99;
  *(void *)(v95 + *(int *)(v102 + 24)) = v100;
  *(void *)(v95 + *(int *)(v102 + 28)) = v101;
  uint64_t v154 = Date.formattedShortMonthAndDay(timeZone:)();
  uint64_t v151 = v103;
  AttributeContainer.init()();
  AttributedString.init(_:attributes:)();
  uint64_t v104 = v167[1];
  id v156 = (int *)v167[0];
  swift_bridgeObjectRetain();
  v92(v141, v89);
  v92(v152, v89);
  sub_1002F8EB4(v145, (void (*)(void))type metadata accessor for ClosestData);
  sub_1002F8EB4(v98, (void (*)(void))type metadata accessor for ClosestData);
  ((void (*)(uint64_t, uint64_t))v157)(v96, v97);
  sub_1002F8EB4((uint64_t)v93, (void (*)(void))type metadata accessor for DetailHeroChartLollipopPosition);
  sub_1002F8EB4((uint64_t)v117, (void (*)(void))type metadata accessor for DetailHeroChartLollipopModel);
  uint64_t v105 = v169;
  uint64_t v106 = v170;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_10024D364((uint64_t)v168, (uint64_t)v171, &qword_100E65F18);
  sub_1002F8DD8((uint64_t)v171);
  swift_bridgeObjectRelease();
  uint64_t v107 = (uint64_t)v139;
  uint64_t v108 = v151;
  *unint64_t v139 = v154;
  *(void *)(v107 + 8) = v108;
  uint64_t v109 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
  (*(void (**)(uint64_t, char *, uint64_t))(v136 + 32))(v107 + v109[5], v143, v137);
  uint64_t v110 = (void *)(v107 + v109[6]);
  void *v110 = v156;
  v110[1] = v104;
  uint64_t v111 = (void *)(v107 + v109[7]);
  *uint64_t v111 = 0;
  v111[1] = 0xE000000000000000;
  uint64_t v112 = (void *)(v107 + v109[8]);
  *uint64_t v112 = 0;
  v112[1] = 0;
  *(_OWORD *)(v107 + v109[9]) = v173;
  uint64_t v113 = (void *)(v107 + v109[10]);
  void *v113 = v105;
  v113[1] = v106;
  *(unsigned char *)(v107 + v109[11]) = 0;
  swift_storeEnumTagMultiPayload();
  uint64_t v114 = v160;
  *uint64_t v160 = v94;
  uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
  sub_1000B0C9C(v144, (uint64_t)v114 + *(int *)(active + 20), (void (*)(void))type metadata accessor for LollipopMarkModel);
  sub_1000B0C9C(v107, (uint64_t)v114 + *(int *)(active + 24), (void (*)(void))type metadata accessor for LollipopDetailViewModel);
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1002F7258()
{
  uint64_t v0 = type metadata accessor for ConditionDetailLegendForeground(0);
  __chkstk_darwin(v0);
  uint64_t v2 = (uint64_t *)((char *)&v39 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = self;
  id v4 = [v3 systemGray3Color];
  uint64_t v44 = Color.init(uiColor:)();
  id v5 = [v3 systemGray3Color];
  id v6 = [v5 accessibilityName];

  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v41 = v8;
  uint64_t v42 = v7;

  sub_10017DF08(&qword_100E6B660);
  uint64_t v9 = (int *)(type metadata accessor for ConditionDetailLegend(0) - 8);
  uint64_t v10 = *(void *)(*(void *)v9 + 72);
  unint64_t v11 = (*(unsigned __int8 *)(*(void *)v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v9 + 80);
  uint64_t v12 = swift_allocObject();
  uint64_t v43 = v12;
  *(_OWORD *)(v12 + 16) = xmmword_100C25ED0;
  uint64_t v13 = (uint64_t *)(v12 + v11);
  id v40 = self;
  id v14 = [v40 mainBundle];
  v45._uint64_t countAndFlagsBits = 0xD000000000000092;
  v45._object = (void *)0x8000000100C99480;
  v15._uint64_t countAndFlagsBits = 0x206425207473614CLL;
  v15._object = (void *)0xEC00000073796164;
  v16._uint64_t countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v15, (Swift::String_optional)0, (NSBundle)v14, v16, v45);

  sub_10017DF08(&qword_100E64020);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_100C251B0;
  *(void *)(v17 + 56) = &type metadata for Int;
  *(void *)(v17 + 64) = &protocol witness table for Int;
  *(void *)(v17 + 32) = 30;
  uint64_t v18 = static String.localizedStringWithFormat(_:_:)();
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *uint64_t v2 = static Color.cyan.getter();
  swift_storeEnumTagMultiPayload();
  id v21 = [v3 cyanColor];
  id v22 = [v21 accessibilityName];

  uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v25 = v24;

  *uint64_t v13 = v18;
  v13[1] = v20;
  _OWORD v13[2] = v18;
  v13[3] = v20;
  sub_1000B0C9C((uint64_t)v2, (uint64_t)v13 + v9[8], (void (*)(void))type metadata accessor for ConditionDetailLegendForeground);
  uint64_t v26 = (uint64_t *)((char *)v13 + v9[9]);
  *uint64_t v26 = v23;
  v26[1] = v25;
  uint64_t v27 = (Swift::String *)((char *)v13 + v10);
  swift_bridgeObjectRetain();
  id v28 = v40;
  id v29 = [v40 mainBundle];
  v30._uint64_t countAndFlagsBits = 0xD000000000000030;
  v46._uint64_t countAndFlagsBits = 0xD000000000000065;
  v46._object = (void *)0x8000000100C99560;
  v30._object = (void *)0x8000000100C99520;
  v31._uint64_t countAndFlagsBits = 0x65676172657641;
  v31._object = (void *)0xE700000000000000;
  Swift::String v32 = NSLocalizedString(_:tableName:bundle:value:comment:)(v30, (Swift::String_optional)0, (NSBundle)v29, v31, v46);

  *(uint64_t *)((char *)&v27->_countAndFlagsBits + v9[8]) = v44;
  swift_storeEnumTagMultiPayload();
  *uint64_t v27 = v32;
  v27[1] = v32;
  unint64_t v33 = (uint64_t *)((char *)&v27->_countAndFlagsBits + v9[9]);
  uint64_t v34 = v41;
  *unint64_t v33 = v42;
  v33[1] = v34;
  swift_retain();
  swift_bridgeObjectRetain();
  id v35 = [v28 mainBundle];
  v47._uint64_t countAndFlagsBits = 0xD000000000000045;
  v47._object = (void *)0x8000000100C995F0;
  v36._object = (void *)0x8000000100C995D0;
  v36._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  v37._uint64_t countAndFlagsBits = 0;
  v37._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v36, (Swift::String_optional)0, (NSBundle)v35, v37, v47);

  swift_release();
  return v43;
}

uint64_t sub_1002F76E4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v16 = a1;
  uint64_t v17 = a3;
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Calendar.Component();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v12 - 8);
  id v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for Calendar.Component.day(_:), v8);
  Calendar.date(byAdding:value:to:wrappingComponents:)();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a2, v4);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v4) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v17, v7, v4);
    return sub_100178110((uint64_t)v14, (uint64_t *)&unk_100E73CA0);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v17, v14, v4);
  }
}

uint64_t sub_1002F7978@<X0>(uint64_t a1@<X8>)
{
  return sub_1002F76E4(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1002F7998@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v28 = a3;
  id v29 = a4;
  uint64_t v30 = a5;
  uint64_t v7 = sub_10017DF08(&qword_100E6B648);
  uint64_t v26 = *(void *)(v7 - 8);
  uint64_t v27 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E66CA0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100E6B6C8);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DayWeather();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for PrecipitationAveragesHeroChartInput();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1 + *(int *)(v21 + 24), v10);
  uint64_t v31 = a2;
  uint64_t v32 = v28;
  sub_10019AB54();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17) == 1)
  {
    sub_100178110((uint64_t)v16, &qword_100E6B6C8);
    sub_1002F8D98();
    id v22 = v29;
    return Measurement.init(value:unit:)();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    DayWeather.precipitationAmount.getter();
    uint64_t v24 = v27;
    Measurement<>.converted(to:)();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
}

double sub_1002F7CD4()
{
  uint64_t v0 = self;
  id v1 = [v0 millimeters];
  sub_1002F8D98();
  char v2 = static NSObject.== infix(_:_:)();

  double result = 10.0;
  if ((v2 & 1) == 0)
  {
    id v4 = [v0 inches:10.0];
    char v5 = static NSObject.== infix(_:_:)();

    double result = 1.0;
    if (v5) {
      return 0.5;
    }
  }
  return result;
}

uint64_t sub_1002F7D90(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v6 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_100109370();
  a4();
  LOBYTE(a4) = Calendar.isDate(_:inSameDayAs:)();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v4, v6);
  return a4 & 1;
}

void sub_1002F7E5C(int64_t a1, int64_t a2, uint64_t a3)
{
  uint64_t v3 = sub_1002F8F3C(a1, a2, a3);
  unint64_t v4 = *(void *)(v3 + 16);
  if (v4 < 2) {
    return;
  }
  unint64_t v5 = 0;
  unint64_t v6 = v4 >> 1;
  for (unint64_t i = v4 + 3; ; --i)
  {
    if (v5 == i - 4) {
      goto LABEL_9;
    }
    unint64_t v8 = *(void *)(v3 + 16);
    if (v5 >= v8) {
      break;
    }
    if (i - 4 >= v8) {
      goto LABEL_12;
    }
    uint64_t v9 = *(void *)(v3 + 8 * v5 + 32);
    uint64_t v10 = *(void *)(v3 + 8 * i);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100ABB514();
      uint64_t v3 = v11;
    }
    *(void *)(v3 + 8 * v5 + 32) = v10;
    *(void *)(v3 + 8 * i) = v9;
LABEL_9:
    if (v6 == ++v5) {
      return;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
}

void sub_1002F7F1C(uint64_t a1)
{
  uint64_t v1 = a1;
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 < 2) {
    return;
  }
  unint64_t v3 = 0;
  unint64_t v4 = v2 >> 1;
  for (unint64_t i = v2 + 7; ; --i)
  {
    if (v3 == i - 8) {
      goto LABEL_9;
    }
    unint64_t v6 = *(void *)(v1 + 16);
    if (v3 >= v6) {
      break;
    }
    if (i - 8 >= v6) {
      goto LABEL_12;
    }
    int v7 = *(_DWORD *)(v1 + 4 * v3 + 32);
    int v8 = *(_DWORD *)(v1 + 4 * i);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_100ABB5FC();
      uint64_t v1 = v9;
    }
    *(_DWORD *)(v1 + 4 * v3 + 32) = v8;
    *(_DWORD *)(v1 + 4 * i) = v7;
LABEL_9:
    if (v4 == ++v3) {
      return;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
}

void sub_1002F7FD8()
{
  sub_100162EA0();
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ScrubberHour(0);
  uint64_t v3 = sub_100164920(v2);
  uint64_t v16 = v4;
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  sub_100128F8C();
  uint64_t v17 = v8;
  unint64_t v9 = *(void *)(v1 + 16);
  if (v9 < 2)
  {
LABEL_2:
    sub_100162694();
    return;
  }
  unint64_t v10 = 0;
  unint64_t v11 = v9 >> 1;
  unint64_t v12 = v9 - 1;
  while (1)
  {
    if (v10 == v12) {
      goto LABEL_12;
    }
    unint64_t v13 = *(void *)(v1 + 16);
    if (v10 >= v13) {
      break;
    }
    unint64_t v14 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    uint64_t v15 = *(void *)(v16 + 72);
    sub_1000B0D44(v1 + v14 + v15 * v10, v17, (void (*)(void))type metadata accessor for ScrubberHour);
    if (v12 >= v13) {
      goto LABEL_15;
    }
    sub_1000B0D44(v1 + v14 + v15 * v12, (uint64_t)v6, (void (*)(void))type metadata accessor for ScrubberHour);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v1 = sub_100ABB60C();
    }
    if (v10 >= *(void *)(v1 + 16)) {
      goto LABEL_16;
    }
    sub_1002FA444((uint64_t)v6, v1 + v14 + v15 * v10);
    if (v12 >= *(void *)(v1 + 16)) {
      goto LABEL_17;
    }
    sub_1002FA444(v17, v1 + v14 + v15 * v12);
LABEL_12:
    ++v10;
    --v12;
    if (v11 == v10) {
      goto LABEL_2;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
}

uint64_t sub_1002F8184@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v4 - 8);
  type metadata accessor for PrecipitationAveragesHeroChartInput();
  uint64_t v5 = Date.formattedShortMonthAndDay(timeZone:)();
  uint64_t v7 = v6;
  swift_bridgeObjectRetain();
  AttributeContainer.init()();
  uint64_t v8 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
  AttributedString.init(_:attributes:)();
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  *a2 = v5;
  a2[1] = v7;
  *(_OWORD *)((char *)a2 + v8[6]) = xmmword_100C313A0;
  unint64_t v11 = (uint64_t *)((char *)a2 + v8[7]);
  *unint64_t v11 = 0;
  v11[1] = 0xE000000000000000;
  unint64_t v12 = (uint64_t *)((char *)a2 + v8[8]);
  *unint64_t v12 = 0;
  v12[1] = 0;
  unint64_t v13 = (uint64_t *)((char *)a2 + v8[9]);
  *unint64_t v13 = v9;
  v13[1] = v10;
  *(_OWORD *)((char *)a2 + v8[10]) = xmmword_100C313A0;
  *((unsigned char *)a2 + v8[11]) = 0;
  type metadata accessor for LollipopDetailViewModel(0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for DetailHeroChartLollipopModel(0);
  swift_storeEnumTagMultiPayload();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1002F82F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v47 = a1;
  uint64_t v46 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for DetailChartDataElement();
  uint64_t v8 = __chkstk_darwin(v42);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v13 = *(void *)(a2 + 16);
  if (!v13) {
    goto LABEL_14;
  }
  uint64_t v38 = (char *)&v36 - v11;
  uint64_t v39 = v12;
  uint64_t v40 = a2;
  uint64_t v41 = a3;
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v44 = v12 + 16;
  uint64_t v14 = a2 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v45 = *(void *)(v12 + 72);
  uint64_t v15 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v16 = (void (**)(char *, uint64_t))(v12 + 8);
  swift_bridgeObjectRetain();
  uint64_t v17 = v14;
  unint64_t v37 = v13;
  unint64_t v18 = v13;
  uint64_t v19 = v42;
  do
  {
    v43(v10, v17, v19);
    DetailChartDataElement.date.getter();
    char v20 = static Date.== infix(_:_:)();
    uint64_t v21 = *v15;
    (*v15)(v7, v46);
    if (v20)
    {
      swift_bridgeObjectRelease();
      uint64_t v25 = v38;
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
      v26(v38, v10, v19);
      uint64_t v27 = v41;
      v26((char *)v41, v25, v19);
      uint64_t v28 = type metadata accessor for ClosestData();
      swift_storeEnumTagMultiPayload();
      uint64_t v29 = v27;
LABEL_13:
      uint64_t v34 = 0;
      uint64_t v35 = v28;
      return _s7Weather24LocationCompositionStateOwst_0(v29, v34, 1, v35);
    }
    (*v16)(v10, v19);
    v17 += v45;
    --v18;
  }
  while (v18);
  swift_bridgeObjectRelease();
  unint64_t v22 = 0;
  a3 = v41;
  unint64_t v23 = v37;
  while (1)
  {
    DetailChartDataElement.date.getter();
    char v24 = static Date.> infix(_:_:)();
    v21(v7, v46);
    if (v24) {
      break;
    }
    ++v22;
    v14 += v45;
    if (v23 == v22) {
      goto LABEL_14;
    }
  }
  if (v22)
  {
    uint64_t v30 = *(int *)(sub_10017DF08(&qword_100E6B680) + 48);
    uint64_t v31 = v42;
    uint64_t v32 = (void (*)(uint64_t, uint64_t, uint64_t))v43;
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v43)(a3, v14 - v45, v42);
    if (v22 < v23)
    {
      v32(a3 + v30, v14, v31);
      uint64_t v28 = type metadata accessor for ClosestData();
      swift_storeEnumTagMultiPayload();
      uint64_t v29 = a3;
      goto LABEL_13;
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    uint64_t v35 = type metadata accessor for ClosestData();
    uint64_t v29 = a3;
    uint64_t v34 = 1;
    return _s7Weather24LocationCompositionStateOwst_0(v29, v34, 1, v35);
  }
  return result;
}

uint64_t sub_1002F8688@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v36 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DetailChartDataElement();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v13 = (char *)&v31 - v12;
  uint64_t v14 = type metadata accessor for ClosestData();
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B0D44(v2, (uint64_t)v16, (void (*)(void))type metadata accessor for ClosestData);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v16, v7);
  }
  uint64_t v34 = a2;
  unint64_t v18 = &v16[*(int *)(sub_10017DF08(&qword_100E6B680) + 48)];
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v19(v13, v16, v7);
  uint64_t v32 = (uint64_t (*)(uint64_t, char *, uint64_t))v19;
  v19(v11, v18, v7);
  DetailChartDataElement.date.getter();
  Date.distance(to:)();
  double v21 = v20;
  unint64_t v22 = *(void (**)(char *, uint64_t))(v4 + 8);
  unint64_t v23 = v11;
  uint64_t v24 = v36;
  v22(v6, v36);
  double v25 = fabs(v21);
  unint64_t v33 = v23;
  DetailChartDataElement.date.getter();
  Date.distance(to:)();
  double v27 = v26;
  v22(v6, v24);
  uint64_t v28 = *(void (**)(char *, uint64_t))(v8 + 8);
  if (v25 >= fabs(v27))
  {
    v28(v13, v7);
    uint64_t v30 = v33;
    uint64_t v29 = v34;
  }
  else
  {
    v28(v33, v7);
    uint64_t v29 = v34;
    uint64_t v30 = v13;
  }
  return v32(v29, v30, v7);
}

double sub_1002F89B0(uint64_t a1)
{
  uint64_t v45 = a1;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v46 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v43 - v6;
  uint64_t v8 = type metadata accessor for DetailChartDataElement();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v43 - v13;
  uint64_t v15 = type metadata accessor for ClosestData();
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000B0D44(v1, (uint64_t)v17, (void (*)(void))type metadata accessor for ClosestData);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v17, v8);
    DetailChartDataElement.value.getter();
    double v19 = v18;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
  }
  else
  {
    double v20 = &v17[*(int *)(sub_10017DF08(&qword_100E6B680) + 48)];
    uint64_t v21 = v8;
    uint64_t v22 = v2;
    unint64_t v23 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    uint64_t v24 = v17;
    uint64_t v25 = v21;
    uint64_t v44 = v21;
    v23(v14, v24, v21);
    v23(v12, v20, v25);
    DetailChartDataElement.date.getter();
    Date.distance(to:)();
    double v27 = v26;
    uint64_t v28 = *(void (**)(char *, uint64_t))(v3 + 8);
    v28(v7, v22);
    double v29 = fabs(v27);
    DetailChartDataElement.date.getter();
    uint64_t v30 = v46;
    DetailChartDataElement.date.getter();
    Date.distance(to:)();
    double v32 = v31;
    v28(v30, v22);
    v28(v7, v22);
    double v33 = fabs(v32);
    DetailChartDataElement.value.getter();
    double v35 = v34;
    DetailChartDataElement.value.getter();
    double v37 = v29 * (v35 - v36) / v33;
    DetailChartDataElement.value.getter();
    double v39 = v38;
    uint64_t v40 = *(void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v41 = v44;
    v40(v12, v44);
    v40(v14, v41);
    return v39 + v37;
  }
  return v19;
}

uint64_t type metadata accessor for ClosestData()
{
  uint64_t result = qword_100E6B758;
  if (!qword_100E6B758) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1002F8D98()
{
  unint64_t result = qword_100E6B678;
  if (!qword_100E6B678)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100E6B678);
  }
  return result;
}

uint64_t sub_1002F8DD8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1002F8E04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6B670);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002F8E6C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002F8EB4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_1002F8F08(uint64_t a1)
{
  return sub_1002F7D90(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (void (*)(void))&DetailChartDataElement.date.getter) & 1;
}

uint64_t sub_1002F8F3C(int64_t a1, int64_t a2, uint64_t a3)
{
  int64_t v5 = a1;
  uint64_t result = sub_100315378(a1, a2, a3);
  uint64_t v7 = result;
  if (result > 0)
  {
    sub_10017DF08(&qword_100E6B690);
    uint64_t v8 = (int64_t *)swift_allocObject();
    uint64_t result = j__malloc_size(v8);
    uint64_t v9 = (result - 32) / 8;
    v8[2] = v7;
    v8[3] = 2 * v9;
    uint64_t v10 = v8 + 4;
    uint64_t v11 = (v9 & 0x7FFFFFFFFFFFFFFFLL) - v7;
    while (1)
    {
      BOOL v12 = v5 <= a2;
      if (a3 > 0) {
        BOOL v12 = v5 >= a2;
      }
      if (v12) {
        break;
      }
      unint64_t v13 = v5 + a3;
      if (__OFADD__(v5, a3)) {
        unint64_t v13 = ((v5 + a3) >> 63) ^ 0x8000000000000000;
      }
      *v10++ = v5;
      int64_t v5 = v13;
      if (!--v7)
      {
        int64_t v5 = v13;
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_43:
    __break(1u);
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (result < 0)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
  uint64_t v8 = _swiftEmptyArrayStorage;
  uint64_t v11 = _swiftEmptyArrayStorage[3] >> 1;
  uint64_t v10 = &_swiftEmptyArrayStorage[4];
LABEL_12:
  BOOL v14 = v5 <= a2;
  if (a3 > 0) {
    BOOL v14 = v5 >= a2;
  }
  if (!v14)
  {
    uint64_t v15 = (a3 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
    do
    {
      int64_t v16 = v5 + a3;
      if (__OFADD__(v5, a3))
      {
        int64_t v16 = v15;
        if (!v11) {
          goto LABEL_21;
        }
        int64_t v16 = v15;
      }
      else if (!v11)
      {
LABEL_21:
        unint64_t v17 = v8[3];
        if ((uint64_t)((v17 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_44;
        }
        int64_t v18 = v17 & 0xFFFFFFFFFFFFFFFELL;
        if (v18 <= 1) {
          uint64_t v19 = 1;
        }
        else {
          uint64_t v19 = v18;
        }
        sub_10017DF08(&qword_100E6B690);
        double v20 = (int64_t *)swift_allocObject();
        uint64_t v21 = (uint64_t)(j__malloc_size(v20) - 32) / 8;
        v20[2] = v19;
        v20[3] = 2 * v21;
        unint64_t v22 = (unint64_t)(v20 + 4);
        unint64_t v23 = v8[3];
        unint64_t v24 = v23 >> 1;
        if (v8[2])
        {
          if (v20 != v8 || v22 >= (unint64_t)&v8[v24 + 4]) {
            memmove(v20 + 4, v8 + 4, 8 * v24);
          }
          v8[2] = 0;
        }
        uint64_t v10 = (int64_t *)(v22 + 8 * v24);
        uint64_t v11 = (v21 & 0x7FFFFFFFFFFFFFFFLL) - (v23 >> 1);
        uint64_t result = swift_release();
        uint64_t v8 = v20;
        uint64_t v15 = (a3 >> 63) ^ 0x7FFFFFFFFFFFFFFFLL;
      }
      BOOL v26 = __OFSUB__(v11--, 1);
      if (v26) {
        goto LABEL_43;
      }
      *v10++ = v5;
      BOOL v27 = v16 <= a2;
      if (a3 > 0) {
        BOOL v27 = v16 >= a2;
      }
      int64_t v5 = v16;
    }
    while (!v27);
  }
  unint64_t v28 = v8[3];
  if (v28 < 2) {
    return (uint64_t)v8;
  }
  unint64_t v29 = v28 >> 1;
  BOOL v26 = __OFSUB__(v29, v11);
  unint64_t v30 = v29 - v11;
  if (!v26)
  {
    v8[2] = v30;
    return (uint64_t)v8;
  }
LABEL_46:
  __break(1u);
  return result;
}

void sub_1002F9178()
{
  sub_100162EA0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v73 = type metadata accessor for HourWeather();
  sub_100179C0C();
  uint64_t v68 = v6;
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v72 = v8;
  uint64_t v69 = sub_10017DF08(&qword_100E6B6D8);
  sub_100179C0C();
  __chkstk_darwin(v9);
  sub_100162EF8();
  uint64_t v67 = v10;
  sub_1001626D4();
  __chkstk_darwin(v11);
  unint64_t v13 = (char *)v61 - v12;
  uint64_t v70 = v14;
  uint64_t v15 = *(unsigned __int8 *)(v14 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100BCC528(v5, v3, v1, (uint64_t)v75);
  long long v77 = v75[1];
  long long v78 = v75[0];
  if (v76)
  {
    uint64_t v20 = 0;
    uint64_t v19 = _swiftEmptyArrayStorage;
    goto LABEL_5;
  }
  unint64_t v16 = *((void *)&v78 + 1);
  uint64_t v17 = v78;
  unint64_t v18 = *(void *)(v78 + 16);
  uint64_t v19 = _swiftEmptyArrayStorage;
  if (*((void *)&v78 + 1) != v18)
  {
    uint64_t v20 = 0;
    int v65 = (void (**)(uint64_t, uint64_t, uint64_t))(v68 + 32);
    uint64_t v66 = v68 + 16;
    v61[1] = v15 | 7;
    uint64_t v62 = (v15 + 32) & ~v15;
    uint64_t v25 = (char *)_swiftEmptyArrayStorage + v62;
    BOOL v26 = &qword_100E6B6D8;
    unint64_t v27 = *((void *)&v77 + 1);
    uint64_t v28 = v77;
    unint64_t v29 = _swiftEmptyArrayStorage;
    uint64_t v64 = v78;
    uint64_t v63 = v77;
    while (1)
    {
      if (v16 >= v18)
      {
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
        return;
      }
      uint64_t v74 = v29;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v68 + 16))(v72, v17+ ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80))+ *(void *)(v68 + 72) * v16, v73);
      unint64_t v30 = *(void *)(v28 + 16);
      if (v27 == v30)
      {
        sub_100162F0C();
        v60();
        uint64_t v19 = v74;
        goto LABEL_5;
      }
      if (v27 >= v30) {
        goto LABEL_41;
      }
      uint64_t v31 = type metadata accessor for HourTemperatureStatistics();
      sub_100179C0C();
      uint64_t v32 = (uint64_t)v13;
      uint64_t v34 = v33;
      uint64_t v36 = v35;
      uint64_t v37 = *(unsigned __int8 *)(v34 + 80);
      uint64_t v38 = *(void *)(v36 + 72);
      unint64_t v71 = v27;
      uint64_t v39 = v28 + ((v37 + 32) & ~v37) + v38 * v27;
      uint64_t v40 = v26;
      uint64_t v41 = v67;
      uint64_t v42 = v67 + *(int *)(v69 + 48);
      (*v65)(v67, v72, v73);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v42, v39, v31);
      unint64_t v13 = (char *)v32;
      uint64_t v43 = v41;
      BOOL v26 = v40;
      sub_10024D364(v43, v32, v40);
      if (v20)
      {
        uint64_t v19 = v74;
        uint64_t v17 = v64;
        uint64_t v28 = v63;
        goto LABEL_36;
      }
      sub_100182920();
      if (v45) {
        goto LABEL_43;
      }
      int64_t v46 = v44 & 0xFFFFFFFFFFFFFFFELL;
      if (v46 <= 1) {
        uint64_t v47 = 1;
      }
      else {
        uint64_t v47 = v46;
      }
      sub_10017DF08(&qword_100E6B6E0);
      uint64_t v48 = *(void *)(v70 + 72);
      uint64_t v49 = v62;
      uint64_t v19 = (void *)swift_allocObject();
      size_t v50 = j__malloc_size(v19);
      if (!v48) {
        goto LABEL_44;
      }
      int64_t v51 = v50 - v49;
      if (v50 - v49 == 0x8000000000000000 && v48 == -1) {
        goto LABEL_45;
      }
      uint64_t v53 = v51 / v48;
      v19[2] = v47;
      v19[3] = 2 * (v51 / v48);
      uint64_t v54 = (char *)v19 + v49;
      unint64_t v55 = v74;
      unint64_t v56 = v74[3];
      uint64_t v57 = (v56 >> 1) * v48;
      uint64_t v17 = v64;
      uint64_t v28 = v63;
      if (v74[2]) {
        break;
      }
LABEL_35:
      uint64_t v25 = &v54[v57];
      uint64_t v20 = (v53 & 0x7FFFFFFFFFFFFFFFLL) - (v56 >> 1);
      swift_release();
LABEL_36:
      BOOL v23 = __OFSUB__(v20--, 1);
      unint64_t v59 = v71;
      if (v23) {
        goto LABEL_42;
      }
      ++v16;
      sub_10024D364((uint64_t)v13, (uint64_t)v25, v26);
      v25 += *(void *)(v70 + 72);
      unint64_t v18 = *(void *)(v17 + 16);
      unint64_t v27 = v59 + 1;
      unint64_t v29 = v19;
      if (v16 == v18) {
        goto LABEL_5;
      }
    }
    if (v19 < v74 || v54 >= (char *)v74 + v62 + v57)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else
    {
      if (v19 == v74)
      {
LABEL_34:
        v55[2] = 0;
        goto LABEL_35;
      }
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v55 = v74;
    goto LABEL_34;
  }
  uint64_t v20 = 0;
LABEL_5:
  sub_100295014((uint64_t)&v78);
  sub_100295014((uint64_t)&v77);
  unint64_t v21 = v19[3];
  if (v21 >= 2)
  {
    unint64_t v22 = v21 >> 1;
    BOOL v23 = __OFSUB__(v22, v20);
    unint64_t v24 = v22 - v20;
    if (v23) {
      goto LABEL_46;
    }
    v19[2] = v24;
  }
  sub_100162694();
}

void sub_1002F95D0(double a1, double a2, double a3)
{
  uint64_t v6 = sub_1002F9B48(a1, a2, a3);
  uint64_t v7 = v6;
  if (v6 <= 0)
  {
    if ((v6 & 0x8000000000000000) == 0)
    {
      char v9 = 0;
      uint64_t v10 = 0;
      uint64_t v8 = (double *)_swiftEmptyArrayStorage;
      uint64_t v13 = _swiftEmptyArrayStorage[3] >> 1;
      uint64_t v12 = (double *)&_swiftEmptyArrayStorage[4];
      double v14 = a1;
      goto LABEL_15;
    }
    goto LABEL_48;
  }
  sub_10017DF08(&qword_100E6B6D0);
  uint64_t v8 = (double *)swift_allocObject();
  char v9 = 0;
  uint64_t v10 = 0;
  uint64_t v11 = (uint64_t)(j__malloc_size(v8) - 32) / 8;
  *((void *)v8 + 2) = v7;
  *((void *)v8 + 3) = 2 * v11;
  uint64_t v12 = v8 + 4;
  uint64_t v13 = (v11 & 0x7FFFFFFFFFFFFFFFLL) - v7;
  double v14 = a1;
  do
  {
    if (!v7)
    {
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
LABEL_47:
      __break(1u);
LABEL_48:
      __break(1u);
      goto LABEL_49;
    }
    double v15 = v14;
    BOOL v16 = v14 <= a2;
    if (a3 > 0.0) {
      BOOL v16 = v14 >= a2;
    }
    if (v16)
    {
      if (v9 & 1 | (v14 != a2)) {
        goto LABEL_46;
      }
      char v9 = 1;
    }
    else
    {
      BOOL v17 = __OFADD__(v10++, 1);
      if (v17) {
        goto LABEL_47;
      }
      double v14 = a1 + (double)v10 * a3;
    }
    *v12++ = v15;
    --v7;
  }
  while (v7);
  while (1)
  {
LABEL_15:
    BOOL v18 = v14 <= a2;
    if (a3 > 0.0) {
      BOOL v18 = v14 >= a2;
    }
    if (!v18)
    {
      BOOL v17 = __OFADD__(v10++, 1);
      if (v17) {
        goto LABEL_43;
      }
      double v19 = a1 + (double)v10 * a3;
      if (v13) {
        goto LABEL_36;
      }
      goto LABEL_23;
    }
    if ((v14 != a2) | v9 & 1) {
      break;
    }
    char v9 = 1;
    double v19 = v14;
    if (v13)
    {
      double v19 = v14;
      goto LABEL_36;
    }
LABEL_23:
    sub_100182920();
    if (v21) {
      goto LABEL_44;
    }
    int64_t v22 = v20 & 0xFFFFFFFFFFFFFFFELL;
    if (v22 <= 1) {
      uint64_t v23 = 1;
    }
    else {
      uint64_t v23 = v22;
    }
    sub_10017DF08(&qword_100E6B6D0);
    unint64_t v24 = (double *)swift_allocObject();
    uint64_t v25 = (uint64_t)(j__malloc_size(v24) - 32) / 8;
    *((void *)v24 + 2) = v23;
    *((void *)v24 + 3) = 2 * v25;
    unint64_t v26 = (unint64_t)(v24 + 4);
    unint64_t v27 = *((void *)v8 + 3);
    unint64_t v28 = v27 >> 1;
    if (*((void *)v8 + 2))
    {
      BOOL v29 = v24 != v8 || v26 >= (unint64_t)&v8[v28 + 4];
      if (v29) {
        memmove(v24 + 4, v8 + 4, 8 * v28);
      }
      v8[2] = 0.0;
    }
    uint64_t v12 = (double *)(v26 + 8 * v28);
    uint64_t v13 = (v25 & 0x7FFFFFFFFFFFFFFFLL) - (v27 >> 1);
    swift_release();
    uint64_t v8 = v24;
LABEL_36:
    BOOL v17 = __OFSUB__(v13--, 1);
    if (v17)
    {
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    *v12++ = v14;
    double v14 = v19;
  }
  sub_1001870D4();
  if (!v29) {
    return;
  }
  unint64_t v31 = v30 >> 1;
  BOOL v17 = __OFSUB__(v31, v13);
  unint64_t v32 = v31 - v13;
  if (!v17)
  {
    *((void *)v8 + 2) = v32;
    return;
  }
LABEL_49:
  __break(1u);
}

void sub_1002F9858()
{
  sub_100162EA0();
  uint64_t v6 = v5;
  uint64_t v35 = sub_10017DF08(&qword_100E6B7A8);
  sub_100179C0C();
  __chkstk_darwin(v7);
  uint64_t v40 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v9);
  uint64_t v39 = (char *)v34 - v10;
  sub_1001626D4();
  __chkstk_darwin(v11);
  sub_10016317C();
  uint64_t v12 = _swiftEmptyArrayStorage;
  uint64_t v38 = v0;
  v34[0] = v6;
  if (v0)
  {
    sub_100185960();
    uint64_t v13 = type metadata accessor for SearchLocation();
    uint64_t v0 = 0;
    sub_100164920(v13);
    uint64_t v15 = v6 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v17 = *(void *)(v16 + 72);
    uint64_t v36 = v1;
    uint64_t v37 = v17;
    sub_100184934();
    while (1)
    {
      uint64_t v18 = (uint64_t)&v40[*(int *)(v6 + 48)];
      sub_1000B0D44(v15, v18, (void (*)(void))type metadata accessor for SearchLocation);
      sub_1001843F8();
      sub_1000B0C9C(v18, v19, (void (*)(void))type metadata accessor for SearchLocation);
      sub_10024D364(v2, v1, &qword_100E6B7A8);
      if (v0)
      {
        uint64_t v12 = v3;
      }
      else
      {
        sub_100182920();
        if (v21) {
          goto LABEL_34;
        }
        int64_t v22 = v20 & 0xFFFFFFFFFFFFFFFELL;
        if (v22 <= 1) {
          uint64_t v2 = 1;
        }
        else {
          uint64_t v2 = v22;
        }
        sub_10017DF08(&qword_100E6B7B0);
        uint64_t v12 = (void *)sub_10018237C();
        size_t v23 = j__malloc_size(v12);
        if (!v6) {
          goto LABEL_35;
        }
        BOOL v24 = v23 - v4 == 0x8000000000000000 && v6 == -1;
        if (v24) {
          goto LABEL_36;
        }
        sub_10019D464(v23 - v4);
        if (v25)
        {
          sub_100188980();
          BOOL v27 = !v27 || v4 >= v26;
          if (v27)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v12 != v3)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v3[2] = 0;
        }
        sub_10017F318();
        uint64_t v6 = v35;
      }
      BOOL v28 = __OFSUB__(v0--, 1);
      if (v28) {
        break;
      }
      uint64_t v29 = sub_100181E8C();
      sub_10024D364(v29, v30, &qword_100E6B7A8);
      sub_1001D17D8();
      if (v24) {
        goto LABEL_28;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
LABEL_28:
  swift_bridgeObjectRelease();
  sub_1001870D4();
  if (!v27)
  {
LABEL_32:
    sub_100162694();
    return;
  }
  unint64_t v32 = v31 >> 1;
  BOOL v28 = __OFSUB__(v32, v0);
  uint64_t v33 = v32 - v0;
  if (!v28)
  {
    _OWORD v12[2] = v33;
    goto LABEL_32;
  }
LABEL_37:
  __break(1u);
}

uint64_t sub_1002F9ACC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(&qword_100E6B6A0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002F9B14(uint64_t a1)
{
  return sub_1002F7D90(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (void (*)(void))&DayWeather.date.getter) & 1;
}

uint64_t sub_1002F9B48(double a1, double a2, double a3)
{
  uint64_t result = 0;
  char v4 = 0;
  uint64_t v5 = 0;
  double v6 = a1;
  while (1)
  {
    BOOL v7 = v6 <= a2;
    if (a3 > 0.0) {
      BOOL v7 = v6 >= a2;
    }
    if (v7)
    {
      if ((v6 != a2) | v4 & 1) {
        return result;
      }
      char v4 = 1;
      goto LABEL_9;
    }
    BOOL v8 = __OFADD__(v5++, 1);
    if (v8) {
      break;
    }
    double v6 = a1 + (double)v5 * a3;
LABEL_9:
    BOOL v8 = __OFADD__(result++, 1);
    if (v8)
    {
      __break(1u);
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t destroy for PrecipitationAveragesHeroChartViewModelFactory(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_unknownObjectRelease();

  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v1);
}

uint64_t initializeWithCopy for PrecipitationAveragesHeroChartViewModelFactory(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = a1 + 16;
  uint64_t v5 = a2 + 16;
  long long v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v6;
  uint64_t v7 = v6;
  BOOL v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_unknownObjectRetain();
  v8(v4, v5, v7);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

void *assignWithCopy for PrecipitationAveragesHeroChartViewModelFactory(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v4;
  sub_1000C1E18(a1 + 2, a2 + 2);
  a1[7] = a2[7];
  return a1;
}

uint64_t assignWithTake for PrecipitationAveragesHeroChartViewModelFactory(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = v4;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  return a1;
}

uint64_t getEnumTagSinglePayload for PrecipitationAveragesHeroChartViewModelFactory(uint64_t *a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *((unsigned char *)a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      uint64_t v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PrecipitationAveragesHeroChartViewModelFactory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PrecipitationAveragesHeroChartViewModelFactory()
{
  return &type metadata for PrecipitationAveragesHeroChartViewModelFactory;
}

uint64_t *sub_1002F9DEC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = type metadata accessor for DetailChartDataElement();
    BOOL v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v10 = sub_10017DF08(&qword_100E6B680);
      v8((uint64_t *)((char *)a1 + *(int *)(v10 + 48)), (uint64_t *)((char *)a2 + *(int *)(v10 + 48)), v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1002F9F20(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v3 = type metadata accessor for DetailChartDataElement();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  uint64_t result = v6(a1, v3);
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v5 = a1 + *(int *)(sub_10017DF08(&qword_100E6B680) + 48);
    return v6(v5, v3);
  }
  return result;
}

uint64_t sub_1002F9FE8(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = type metadata accessor for DetailChartDataElement();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  v6(a1, a2, v5);
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v7 = sub_10017DF08(&qword_100E6B680);
    v6(a1 + *(int *)(v7 + 48), a2 + *(int *)(v7 + 48), v5);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1002FA0C4(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1002F8EB4(a1, (void (*)(void))type metadata accessor for ClosestData);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = type metadata accessor for DetailChartDataElement();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
    v6(a1, a2, v5);
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v7 = sub_10017DF08(&qword_100E6B680);
      v6(a1 + *(int *)(v7 + 48), a2 + *(int *)(v7 + 48), v5);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1002FA1C4(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = type metadata accessor for DetailChartDataElement();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);
  v6(a1, a2, v5);
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v7 = sub_10017DF08(&qword_100E6B680);
    v6(a1 + *(int *)(v7 + 48), a2 + *(int *)(v7 + 48), v5);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1002FA2A0(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1002F8EB4(a1, (void (*)(void))type metadata accessor for ClosestData);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = type metadata accessor for DetailChartDataElement();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);
    v6(a1, a2, v5);
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v7 = sub_10017DF08(&qword_100E6B680);
      v6(a1 + *(int *)(v7 + 48), a2 + *(int *)(v7 + 48), v5);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1002FA3A0()
{
  uint64_t result = type metadata accessor for DetailChartDataElement();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = *(void *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    v3[4] = v3;
    v3[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1002FA444(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScrubberHour(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t destroy for WindComponentRowViewModel()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for NotificationSettingsLocationViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for NotificationSettingsLocationViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  return a1;
}

__n128 initializeWithTake for NotificationSettingsLocationViewModel(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for NotificationSettingsLocationViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationSettingsLocationViewModel(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 36))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NotificationSettingsLocationViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_DWORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 36) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 36) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationSettingsLocationRowView()
{
  return &type metadata for NotificationSettingsLocationRowView;
}

uint64_t sub_1002FA6CC()
{
  return swift_getOpaqueTypeConformance2();
}

__n128 sub_1002FA6E8@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = static HorizontalAlignment.leading.getter();
  sub_1002FA764((uint64_t)&v9);
  char v3 = v10;
  uint64_t v4 = v11;
  char v5 = v13;
  uint64_t v6 = v14;
  __n128 result = v9;
  long long v8 = v12;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  *(__n128 *)(a1 + 24) = result;
  *(unsigned char *)(a1 + 40) = v3;
  *(void *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 56) = v8;
  *(unsigned char *)(a1 + 72) = v5;
  *(void *)(a1 + 80) = v6;
  return result;
}

uint64_t sub_1002FA764@<X0>(uint64_t a1@<X8>)
{
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  static Font.body.getter();
  uint64_t v7 = Text.font(_:)();
  uint64_t v32 = v8;
  uint64_t v33 = v7;
  char v10 = v9;
  uint64_t v34 = v11;
  swift_release();
  char v31 = v10 & 1;
  sub_100191924(v2, v4, v6);
  swift_bridgeObjectRelease();
  long long v12 = sub_100A8F8FC();
  sub_1002FA9C4((uint64_t)v12);
  swift_bridgeObjectRelease();
  uint64_t v13 = Text.init<A>(_:)();
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  static Font.footnote.getter();
  uint64_t v18 = Text.font(_:)();
  uint64_t v20 = v19;
  char v22 = v21;
  swift_release();
  sub_100191924(v13, v15, v17);
  swift_bridgeObjectRelease();
  static HierarchicalShapeStyle.secondary.getter();
  uint64_t v23 = Text.foregroundStyle<A>(_:)();
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  char v29 = v28 & 1;
  sub_100191924(v18, v20, v22 & 1);
  swift_bridgeObjectRelease();
  *(void *)a1 = v33;
  *(void *)(a1 + 8) = v32;
  *(unsigned char *)(a1 + 16) = v31;
  *(void *)(a1 + 24) = v34;
  *(void *)(a1 + 32) = v23;
  *(void *)(a1 + 40) = v25;
  *(unsigned char *)(a1 + 48) = v29;
  *(void *)(a1 + 56) = v27;
  sub_100190CC4(v33, v32, v31);
  swift_bridgeObjectRetain();
  sub_100190CC4(v23, v25, v29);
  swift_bridgeObjectRetain();
  sub_100191924(v23, v25, v29);
  swift_bridgeObjectRelease();
  sub_100191924(v33, v32, v31);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1002FA9C4(uint64_t a1)
{
  id v2 = [self mainBundle];
  v7._object = (void *)0x8000000100C99790;
  v3._uint64_t countAndFlagsBits = 6710863;
  v3._object = (void *)0xE300000000000000;
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  v7._uint64_t countAndFlagsBits = 0xD000000000000043;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v3, (Swift::String_optional)0, (NSBundle)v2, v4, v7)._countAndFlagsBits;

  if (*(void *)(a1 + 16))
  {
    swift_bridgeObjectRelease();
    sub_10017DF08(&qword_100E91BC0);
    sub_1001246C8((unint64_t *)&qword_100E73CB0, &qword_100E91BC0);
    return BidirectionalCollection<>.joined(separator:)();
  }
  return countAndFlagsBits;
}

double sub_1002FAAD8@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_1002FA6E8(a1).n128_u64[0];
  return result;
}

uint64_t sub_1002FAB14()
{
  return sub_1001246C8(&qword_100E6B7B8, &qword_100E6B7C0);
}

uint64_t *sub_1002FAB50(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    Swift::String v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    Swift::String v7 = a1;
    uint64_t v8 = (int *)type metadata accessor for TemperatureAveragesHeroChartInput();
    uint64_t v9 = v8[5];
    char v10 = (char *)v7 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for TimeZone();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    uint64_t v80 = v13;
    uint64_t v81 = v12;
    v13(v10, v11, v12);
    uint64_t v14 = v8[6];
    uint64_t v15 = (char *)v7 + v14;
    char v16 = (char *)a2 + v14;
    uint64_t v17 = type metadata accessor for Locale();
    uint64_t v82 = *(void (**)(char *, char *))(*(void *)(v17 - 8) + 16);
    uint64_t v83 = v17;
    v82(v15, v16);
    *(uint64_t *)((char *)v7 + v8[7]) = *(uint64_t *)((char *)a2 + v8[7]);
    uint64_t v18 = v8[8];
    uint64_t v19 = (uint64_t *)((char *)v7 + v18);
    uint64_t v20 = (uint64_t *)((char *)a2 + v18);
    char v21 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
    swift_bridgeObjectRetain();
    id v85 = a3;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, (uint64_t)v21))
    {
      uint64_t v22 = sub_10017DF08(&qword_100E6B670);
      memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      *uint64_t v19 = *v20;
      uint64_t v23 = v21[5];
      uint64_t v24 = (char *)v19 + v23;
      uint64_t v25 = (char *)v20 + v23;
      uint64_t v26 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
      *(void *)((char *)v19 + v21[6]) = *(void *)((char *)v20 + v21[6]);
      *(void *)((char *)v19 + v21[7]) = *(void *)((char *)v20 + v21[7]);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, (uint64_t)v21);
    }
    uint64_t v27 = v8[9];
    char v28 = (char *)v7 + v27;
    char v29 = (char *)a2 + v27;
    uint64_t v30 = type metadata accessor for Date();
    char v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
    v31(v28, v29, v30);
    v31((char *)v7 + v8[10], (char *)a2 + v8[10], v30);
    uint64_t v32 = v8[11];
    uint64_t v33 = (char *)v7 + v32;
    uint64_t v34 = (char *)a2 + v32;
    uint64_t v35 = sub_10017DF08(&qword_100E6B7C8);
    uint64_t v79 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
    v79(v33, v34, v35);
    uint64_t v36 = v85[5];
    uint64_t v37 = (char *)v7 + v36;
    uint64_t v38 = (char *)a2 + v36;
    uint64_t v87 = type metadata accessor for Calendar();
    uint64_t v84 = *(void (**)(char *, char *))(*(void *)(v87 - 8) + 16);
    v84(v37, v38);
    uint64_t v39 = (int *)type metadata accessor for MonthlyAveragesChartInput();
    id v86 = v31;
    v31(&v37[v39[5]], &v38[v39[5]], v30);
    uint64_t v40 = v39[6];
    uint64_t v41 = &v37[v40];
    uint64_t v42 = &v38[v40];
    uint64_t v43 = type metadata accessor for TemperatureScaleConfiguration();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    uint64_t v44 = v39[7];
    char v45 = &v37[v44];
    int64_t v46 = &v38[v44];
    uint64_t v47 = sub_10017DF08(&qword_100E65258);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
    uint64_t v48 = v39[8];
    uint64_t v49 = &v37[v48];
    size_t v50 = &v38[v48];
    uint64_t v51 = sub_10017DF08(&qword_100E6B7D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
    ((void (*)(char *, char *, uint64_t))v82)(&v37[v39[9]], &v38[v39[9]], v83);
    uint64_t v52 = v85[7];
    *(uint64_t *)((char *)v7 + v85[6]) = *(uint64_t *)((char *)a2 + v85[6]);
    uint64_t v53 = (uint64_t *)((char *)v7 + v52);
    uint64_t v54 = (uint64_t *)((char *)a2 + v52);
    type metadata accessor for NewsDataModel();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v53 = *v54;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v55 = type metadata accessor for News();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v56 = v85[8];
    uint64_t v57 = (char *)v7 + v56;
    uint64_t v58 = (char *)a2 + v56;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2 + v56, 1, v35))
    {
      uint64_t v59 = sub_10017DF08(&qword_100E6B7D8);
      memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
    }
    else
    {
      v79(v57, v58, v35);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v57, 0, 1, v35);
    }
    v80((char *)v7 + v85[9], (char *)a2 + v85[9], v81);
    v86((char *)v7 + v85[10], (char *)a2 + v85[10], v30);
    uint64_t v60 = v85[11];
    uint64_t v61 = v85[12];
    uint64_t v62 = (uint64_t *)((char *)v7 + v60);
    uint64_t v63 = (char *)a2 + v60;
    uint64_t v64 = *(void **)v63;
    int v65 = (void *)*((void *)v63 + 1);
    *uint64_t v62 = *(void *)v63;
    v62[1] = v65;
    uint64_t v66 = (void *)*((void *)v63 + 2);
    uint64_t v67 = (void *)*((void *)v63 + 3);
    long long v62[2] = v66;
    v62[3] = v67;
    uint64_t v68 = (void *)*((void *)v63 + 4);
    uint64_t v69 = (void *)*((void *)v63 + 5);
    v62[4] = v68;
    v62[5] = v69;
    uint64_t v70 = (char *)v7 + v61;
    unint64_t v71 = (char *)a2 + v61;
    id v72 = v64;
    id v73 = v65;
    id v74 = v66;
    id v75 = v67;
    id v76 = v68;
    id v77 = v69;
    ((void (*)(char *, char *, uint64_t))v84)(v70, v71, v87);
  }
  return v7;
}

uint64_t sub_1002FB1AC(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = (int *)type metadata accessor for TemperatureAveragesHeroChartInput();
  uint64_t v5 = a1 + v4[5];
  uint64_t v6 = type metadata accessor for TimeZone();
  uint64_t v34 = *(void (**)(uint64_t))(*(void *)(v6 - 8) + 8);
  uint64_t v35 = v6;
  v34(v5);
  uint64_t v7 = a1 + v4[6];
  uint64_t v8 = type metadata accessor for Locale();
  uint64_t v36 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v36(v7, v8);
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + v4[8];
  uint64_t v10 = type metadata accessor for DetailHeroChartLollipopPosition(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v9, 1, v10))
  {
    uint64_t v11 = v9 + *(int *)(v10 + 20);
    uint64_t v12 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  uint64_t v13 = a1 + v4[9];
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
  v15(v13, v14);
  v15(a1 + v4[10], v14);
  uint64_t v16 = a1 + v4[11];
  uint64_t v17 = sub_10017DF08(&qword_100E6B7C8);
  uint64_t v33 = *(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8);
  v33(v16, v17);
  uint64_t v18 = a1 + a2[5];
  uint64_t v19 = type metadata accessor for Calendar();
  uint64_t v37 = *(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8);
  v37(v18, v19);
  uint64_t v20 = (int *)type metadata accessor for MonthlyAveragesChartInput();
  uint64_t v38 = v15;
  v15(v18 + v20[5], v14);
  uint64_t v21 = v18 + v20[6];
  uint64_t v22 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  uint64_t v23 = v18 + v20[7];
  uint64_t v24 = sub_10017DF08(&qword_100E65258);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
  uint64_t v25 = v18 + v20[8];
  uint64_t v26 = sub_10017DF08(&qword_100E6B7D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
  v36(v18 + v20[9], v8);
  swift_bridgeObjectRelease();
  uint64_t v27 = a1 + a2[7];
  type metadata accessor for NewsDataModel();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v28 = type metadata accessor for News();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
  }
  uint64_t v29 = a1 + a2[8];
  if (!_s7Weather24LocationCompositionStateOwet_0(v29, 1, v17)) {
    v33(v29, v17);
  }
  ((void (*)(uint64_t, uint64_t))v34)(a1 + a2[9], v35);
  v38(a1 + a2[10], v14);
  uint64_t v30 = (id *)(a1 + a2[11]);

  uint64_t v31 = a1 + a2[12];

  return ((uint64_t (*)(uint64_t, uint64_t))v37)(v31, v19);
}

char *sub_1002FB650(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = (int *)type metadata accessor for TemperatureAveragesHeroChartInput();
  uint64_t v7 = v6[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for TimeZone();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  long long v78 = v11;
  uint64_t v79 = v10;
  v11(v8, v9, v10);
  uint64_t v12 = v6[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for Locale();
  uint64_t v80 = *(void (**)(char *, char *))(*(void *)(v15 - 8) + 16);
  uint64_t v81 = v15;
  v80(v13, v14);
  *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
  uint64_t v16 = v6[8];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, (uint64_t)v19))
  {
    uint64_t v20 = sub_10017DF08(&qword_100E6B670);
    memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v17 = *(void *)v18;
    uint64_t v21 = v19[5];
    uint64_t v22 = &v17[v21];
    uint64_t v23 = &v18[v21];
    uint64_t v24 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    *(void *)&v17[v19[6]] = *(void *)&v18[v19[6]];
    *(void *)&v17[v19[7]] = *(void *)&v18[v19[7]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, (uint64_t)v19);
  }
  uint64_t v25 = v6[9];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  uint64_t v28 = type metadata accessor for Date();
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
  v29(v26, v27, v28);
  v29(&a1[v6[10]], &a2[v6[10]], v28);
  uint64_t v30 = v6[11];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v33 = sub_10017DF08(&qword_100E6B7C8);
  id v77 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
  v77(v31, v32, v33);
  uint64_t v34 = a3[5];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  uint64_t v84 = type metadata accessor for Calendar();
  uint64_t v82 = *(void (**)(char *, char *))(*(void *)(v84 - 8) + 16);
  v82(v35, v36);
  uint64_t v37 = (int *)type metadata accessor for MonthlyAveragesChartInput();
  uint64_t v83 = v29;
  v29(&v35[v37[5]], &v36[v37[5]], v28);
  uint64_t v38 = v37[6];
  uint64_t v39 = &v35[v38];
  uint64_t v40 = &v36[v38];
  uint64_t v41 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
  uint64_t v42 = v37[7];
  uint64_t v43 = &v35[v42];
  uint64_t v44 = &v36[v42];
  uint64_t v45 = sub_10017DF08(&qword_100E65258);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
  uint64_t v46 = v37[8];
  uint64_t v47 = &v35[v46];
  uint64_t v48 = &v36[v46];
  uint64_t v49 = sub_10017DF08(&qword_100E6B7D0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
  ((void (*)(char *, char *, uint64_t))v80)(&v35[v37[9]], &v36[v37[9]], v81);
  uint64_t v50 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  uint64_t v51 = &a1[v50];
  uint64_t v52 = &a2[v50];
  type metadata accessor for NewsDataModel();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(void *)uint64_t v51 = *(void *)v52;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v53 = type metadata accessor for News();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v54 = a3[8];
  uint64_t v55 = &a1[v54];
  uint64_t v56 = &a2[v54];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v54], 1, v33))
  {
    uint64_t v57 = sub_10017DF08(&qword_100E6B7D8);
    memcpy(v55, v56, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    v77(v55, v56, v33);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v55, 0, 1, v33);
  }
  v78(&a1[a3[9]], &a2[a3[9]], v79);
  v83(&a1[a3[10]], &a2[a3[10]], v28);
  uint64_t v58 = a3[11];
  uint64_t v59 = a3[12];
  uint64_t v60 = &a1[v58];
  uint64_t v61 = &a2[v58];
  uint64_t v62 = *(void **)v61;
  uint64_t v63 = (void *)*((void *)v61 + 1);
  *(void *)uint64_t v60 = *(void *)v61;
  *((void *)v60 + 1) = v63;
  uint64_t v64 = (void *)*((void *)v61 + 2);
  int v65 = (void *)*((void *)v61 + 3);
  *((void *)v60 + 2) = v64;
  *((void *)v60 + 3) = v65;
  uint64_t v66 = (void *)*((void *)v61 + 4);
  uint64_t v67 = (void *)*((void *)v61 + 5);
  *((void *)v60 + 4) = v66;
  *((void *)v60 + 5) = v67;
  uint64_t v68 = &a1[v59];
  uint64_t v69 = &a2[v59];
  id v70 = v62;
  id v71 = v63;
  id v72 = v64;
  id v73 = v65;
  id v74 = v66;
  id v75 = v67;
  ((void (*)(char *, char *, uint64_t))v82)(v68, v69, v84);
  return a1;
}

char *sub_1002FBC54(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for TemperatureAveragesHeroChartInput();
  uint64_t v7 = v6[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for TimeZone();
  double v99 = *(void (**)(char *, char *))(*(void *)(v10 - 8) + 24);
  uint64_t v100 = v10;
  v99(v8, v9);
  uint64_t v11 = v6[6];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = type metadata accessor for Locale();
  uint64_t v93 = *(void (**)(char *, char *))(*(void *)(v14 - 8) + 24);
  uint64_t v94 = v14;
  v93(v12, v13);
  *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = v6[8];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
  LODWORD(v12) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, (uint64_t)v18);
  int v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, (uint64_t)v18);
  if (v12)
  {
    if (!v19)
    {
      *(void *)uint64_t v16 = *(void *)v17;
      uint64_t v20 = v18[5];
      uint64_t v21 = &v16[v20];
      uint64_t v22 = a3;
      uint64_t v23 = &v17[v20];
      uint64_t v24 = type metadata accessor for Date();
      uint64_t v25 = v23;
      a3 = v22;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v21, v25, v24);
      *(void *)&v16[v18[6]] = *(void *)&v17[v18[6]];
      *(void *)&v16[v18[7]] = *(void *)&v17[v18[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, (uint64_t)v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    sub_1002FF184((uint64_t)v16, (void (*)(void))type metadata accessor for DetailHeroChartLollipopPosition);
LABEL_6:
    uint64_t v26 = sub_10017DF08(&qword_100E6B670);
    memcpy(v16, v17, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)uint64_t v16 = *(void *)v17;
  uint64_t v85 = v18[5];
  id v86 = &v16[v85];
  uint64_t v87 = a3;
  uint64_t v88 = &v17[v85];
  uint64_t v89 = type metadata accessor for Date();
  uint64_t v90 = v88;
  a3 = v87;
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 24))(v86, v90, v89);
  *(void *)&v16[v18[6]] = *(void *)&v17[v18[6]];
  *(void *)&v16[v18[7]] = *(void *)&v17[v18[7]];
LABEL_7:
  uint64_t v95 = a3;
  uint64_t v27 = v6[9];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  uint64_t v30 = type metadata accessor for Date();
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 24);
  v31(v28, v29, v30);
  v31(&a1[v6[10]], &a2[v6[10]], v30);
  uint64_t v32 = v6[11];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v35 = sub_10017DF08(&qword_100E6B7C8);
  uint64_t v92 = *(void *)(v35 - 8);
  uint64_t v91 = *(void (**)(char *, char *, uint64_t))(v92 + 24);
  v91(v33, v34, v35);
  uint64_t v36 = a3[5];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  uint64_t v39 = type metadata accessor for Calendar();
  uint64_t v97 = *(void (**)(char *, char *))(*(void *)(v39 - 8) + 24);
  uint64_t v98 = v39;
  v97(v37, v38);
  uint64_t v40 = (int *)type metadata accessor for MonthlyAveragesChartInput();
  uint64_t v96 = v30;
  v31(&v37[v40[5]], &v38[v40[5]], v30);
  uint64_t v41 = v40[6];
  uint64_t v42 = &v37[v41];
  uint64_t v43 = &v38[v41];
  uint64_t v44 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 24))(v42, v43, v44);
  uint64_t v45 = v40[7];
  uint64_t v46 = &v37[v45];
  uint64_t v47 = &v38[v45];
  uint64_t v48 = sub_10017DF08(&qword_100E65258);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 24))(v46, v47, v48);
  uint64_t v49 = v40[8];
  uint64_t v50 = &v37[v49];
  uint64_t v51 = &v38[v49];
  uint64_t v52 = sub_10017DF08(&qword_100E6B7D0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 24))(v50, v51, v52);
  ((void (*)(char *, char *, uint64_t))v93)(&v37[v40[9]], &v38[v40[9]], v94);
  *(void *)&a1[v95[6]] = *(void *)&a2[v95[6]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v53 = v95[7];
    uint64_t v54 = &a1[v53];
    uint64_t v55 = &a2[v53];
    sub_1002FF184((uint64_t)&a1[v53], (void (*)(void))type metadata accessor for NewsDataModel);
    type metadata accessor for NewsDataModel();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v54 = *(void *)v55;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v56 = type metadata accessor for News();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v57 = v95[8];
  uint64_t v58 = &a1[v57];
  uint64_t v59 = &a2[v57];
  int v60 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&a1[v57], 1, v35);
  int v61 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v35);
  if (!v60)
  {
    if (!v61)
    {
      v91(v58, v59, v35);
      goto LABEL_18;
    }
    (*(void (**)(char *, uint64_t))(v92 + 8))(v58, v35);
    goto LABEL_17;
  }
  if (v61)
  {
LABEL_17:
    uint64_t v62 = sub_10017DF08(&qword_100E6B7D8);
    memcpy(v58, v59, *(void *)(*(void *)(v62 - 8) + 64));
    goto LABEL_18;
  }
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v58, v59, v35);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v35);
LABEL_18:
  ((void (*)(char *, char *, uint64_t))v99)(&a1[v95[9]], &a2[v95[9]], v100);
  v31(&a1[v95[10]], &a2[v95[10]], v96);
  uint64_t v63 = v95[11];
  uint64_t v64 = &a1[v63];
  int v65 = &a2[v63];
  uint64_t v66 = *(void **)&a1[v63];
  uint64_t v67 = *(void **)&a2[v63];
  *(void *)uint64_t v64 = v67;
  id v68 = v67;

  uint64_t v69 = (void *)*((void *)v64 + 1);
  id v70 = (void *)*((void *)v65 + 1);
  *((void *)v64 + 1) = v70;
  id v71 = v70;

  id v72 = (void *)*((void *)v64 + 2);
  id v73 = (void *)*((void *)v65 + 2);
  *((void *)v64 + 2) = v73;
  id v74 = v73;

  id v75 = (void *)*((void *)v64 + 3);
  id v76 = (void *)*((void *)v65 + 3);
  *((void *)v64 + 3) = v76;
  id v77 = v76;

  long long v78 = (void *)*((void *)v64 + 4);
  uint64_t v79 = (void *)*((void *)v65 + 4);
  *((void *)v64 + 4) = v79;
  id v80 = v79;

  uint64_t v81 = (void *)*((void *)v64 + 5);
  uint64_t v82 = (void *)*((void *)v65 + 5);
  *((void *)v64 + 5) = v82;
  id v83 = v82;

  ((void (*)(char *, char *, uint64_t))v97)(&a1[v95[12]], &a2[v95[12]], v98);
  return a1;
}

char *sub_1002FC3F0(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = (int *)type metadata accessor for TemperatureAveragesHeroChartInput();
  uint64_t v7 = v6[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v74 = type metadata accessor for TimeZone();
  id v73 = *(void (**)(char *, char *))(*(void *)(v74 - 8) + 32);
  v73(v8, v9);
  uint64_t v10 = v6[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for Locale();
  uint64_t v67 = *(void (**)(char *, char *))(*(void *)(v13 - 8) + 32);
  uint64_t v68 = v13;
  v67(v11, v12);
  *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
  uint64_t v14 = v6[8];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, (uint64_t)v17))
  {
    uint64_t v18 = sub_10017DF08(&qword_100E6B670);
    memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    *(void *)uint64_t v15 = *(void *)v16;
    uint64_t v19 = v17[5];
    uint64_t v20 = &v15[v19];
    uint64_t v21 = a3;
    uint64_t v22 = &v16[v19];
    uint64_t v23 = type metadata accessor for Date();
    uint64_t v24 = v22;
    a3 = v21;
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v20, v24, v23);
    *(void *)&v15[v17[6]] = *(void *)&v16[v17[6]];
    *(void *)&v15[v17[7]] = *(void *)&v16[v17[7]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, (uint64_t)v17);
  }
  id v71 = a3;
  uint64_t v25 = v6[9];
  uint64_t v26 = &a1[v25];
  uint64_t v27 = &a2[v25];
  uint64_t v28 = type metadata accessor for Date();
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32);
  v29(v26, v27, v28);
  v29(&a1[v6[10]], &a2[v6[10]], v28);
  uint64_t v30 = v6[11];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v33 = sub_10017DF08(&qword_100E6B7C8);
  uint64_t v66 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32);
  v66(v31, v32, v33);
  uint64_t v34 = a3[5];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  uint64_t v37 = type metadata accessor for Calendar();
  uint64_t v69 = *(void (**)(char *, char *))(*(void *)(v37 - 8) + 32);
  uint64_t v70 = v37;
  v69(v35, v36);
  uint64_t v38 = (int *)type metadata accessor for MonthlyAveragesChartInput();
  id v72 = v29;
  v29(&v35[v38[5]], &v36[v38[5]], v28);
  uint64_t v39 = v38[6];
  uint64_t v40 = &v35[v39];
  uint64_t v41 = &v36[v39];
  uint64_t v42 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  uint64_t v43 = v38[7];
  uint64_t v44 = &v35[v43];
  uint64_t v45 = &v36[v43];
  uint64_t v46 = sub_10017DF08(&qword_100E65258);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  uint64_t v47 = v38[8];
  uint64_t v48 = &v35[v47];
  uint64_t v49 = &v36[v47];
  uint64_t v50 = sub_10017DF08(&qword_100E6B7D0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
  ((void (*)(char *, char *, uint64_t))v67)(&v35[v38[9]], &v36[v38[9]], v68);
  uint64_t v51 = v71[7];
  *(void *)&a1[v71[6]] = *(void *)&a2[v71[6]];
  uint64_t v52 = &a1[v51];
  uint64_t v53 = &a2[v51];
  uint64_t v54 = type metadata accessor for NewsDataModel();
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
  }
  else
  {
    uint64_t v55 = type metadata accessor for News();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v52, v53, v55);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v56 = v71[8];
  uint64_t v57 = &a1[v56];
  uint64_t v58 = &a2[v56];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v56], 1, v33))
  {
    uint64_t v59 = sub_10017DF08(&qword_100E6B7D8);
    memcpy(v57, v58, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    v66(v57, v58, v33);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v57, 0, 1, v33);
  }
  ((void (*)(char *, char *, uint64_t))v73)(&a1[v71[9]], &a2[v71[9]], v74);
  v72(&a1[v71[10]], &a2[v71[10]], v28);
  uint64_t v60 = v71[11];
  uint64_t v61 = v71[12];
  uint64_t v62 = &a1[v60];
  uint64_t v63 = &a2[v60];
  long long v64 = *((_OWORD *)v63 + 1);
  *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
  *((_OWORD *)v62 + 1) = v64;
  *((_OWORD *)v62 + 2) = *((_OWORD *)v63 + 2);
  ((void (*)(char *, char *, uint64_t))v69)(&a1[v61], &a2[v61], v70);
  return a1;
}

char *sub_1002FC9BC(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for TemperatureAveragesHeroChartInput();
  uint64_t v7 = v6[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for TimeZone();
  uint64_t v87 = *(void (**)(char *, char *))(*(void *)(v10 - 8) + 40);
  uint64_t v88 = v10;
  v87(v8, v9);
  uint64_t v11 = v6[6];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = type metadata accessor for Locale();
  uint64_t v81 = *(void (**)(char *, char *))(*(void *)(v14 - 8) + 40);
  uint64_t v82 = v14;
  v81(v12, v13);
  *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
  swift_bridgeObjectRelease();
  uint64_t v15 = v6[8];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
  LODWORD(v12) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, (uint64_t)v18);
  int v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, (uint64_t)v18);
  if (v12)
  {
    if (!v19)
    {
      *(void *)uint64_t v16 = *(void *)v17;
      uint64_t v20 = v18[5];
      uint64_t v21 = &v16[v20];
      uint64_t v22 = a3;
      uint64_t v23 = &v17[v20];
      uint64_t v24 = type metadata accessor for Date();
      uint64_t v25 = v23;
      a3 = v22;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v21, v25, v24);
      *(void *)&v16[v18[6]] = *(void *)&v17[v18[6]];
      *(void *)&v16[v18[7]] = *(void *)&v17[v18[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, (uint64_t)v18);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    sub_1002FF184((uint64_t)v16, (void (*)(void))type metadata accessor for DetailHeroChartLollipopPosition);
LABEL_6:
    uint64_t v26 = sub_10017DF08(&qword_100E6B670);
    memcpy(v16, v17, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  *(void *)uint64_t v16 = *(void *)v17;
  uint64_t v73 = v18[5];
  uint64_t v74 = &v16[v73];
  id v75 = a3;
  id v76 = &v17[v73];
  uint64_t v77 = type metadata accessor for Date();
  long long v78 = v76;
  a3 = v75;
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 40))(v74, v78, v77);
  *(void *)&v16[v18[6]] = *(void *)&v17[v18[6]];
  *(void *)&v16[v18[7]] = *(void *)&v17[v18[7]];
LABEL_7:
  id v83 = a3;
  uint64_t v27 = v6[9];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = &a2[v27];
  uint64_t v30 = type metadata accessor for Date();
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 40);
  v31(v28, v29, v30);
  v31(&a1[v6[10]], &a2[v6[10]], v30);
  uint64_t v32 = v6[11];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v35 = sub_10017DF08(&qword_100E6B7C8);
  uint64_t v80 = *(void *)(v35 - 8);
  uint64_t v79 = *(void (**)(char *, char *, uint64_t))(v80 + 40);
  v79(v33, v34, v35);
  uint64_t v36 = a3[5];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  uint64_t v86 = type metadata accessor for Calendar();
  uint64_t v84 = *(void (**)(char *, char *))(*(void *)(v86 - 8) + 40);
  v84(v37, v38);
  uint64_t v39 = (int *)type metadata accessor for MonthlyAveragesChartInput();
  uint64_t v85 = v30;
  v31(&v37[v39[5]], &v38[v39[5]], v30);
  uint64_t v40 = v39[6];
  uint64_t v41 = &v37[v40];
  uint64_t v42 = &v38[v40];
  uint64_t v43 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 40))(v41, v42, v43);
  uint64_t v44 = v39[7];
  uint64_t v45 = &v37[v44];
  uint64_t v46 = &v38[v44];
  uint64_t v47 = sub_10017DF08(&qword_100E65258);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 40))(v45, v46, v47);
  uint64_t v48 = v39[8];
  uint64_t v49 = &v37[v48];
  uint64_t v50 = &v38[v48];
  uint64_t v51 = sub_10017DF08(&qword_100E6B7D0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 40))(v49, v50, v51);
  ((void (*)(char *, char *, uint64_t))v81)(&v37[v39[9]], &v38[v39[9]], v82);
  *(void *)&a1[v83[6]] = *(void *)&a2[v83[6]];
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v52 = v83[7];
    uint64_t v53 = &a1[v52];
    uint64_t v54 = &a2[v52];
    sub_1002FF184((uint64_t)&a1[v52], (void (*)(void))type metadata accessor for NewsDataModel);
    uint64_t v55 = type metadata accessor for NewsDataModel();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      uint64_t v56 = type metadata accessor for News();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v53, v54, v56);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v57 = v83[8];
  uint64_t v58 = &a1[v57];
  uint64_t v59 = &a2[v57];
  int v60 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&a1[v57], 1, v35);
  int v61 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v35);
  if (!v60)
  {
    if (!v61)
    {
      v79(v58, v59, v35);
      goto LABEL_17;
    }
    (*(void (**)(char *, uint64_t))(v80 + 8))(v58, v35);
    goto LABEL_16;
  }
  if (v61)
  {
LABEL_16:
    uint64_t v62 = sub_10017DF08(&qword_100E6B7D8);
    memcpy(v58, v59, *(void *)(*(void *)(v62 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v58, v59, v35);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v35);
LABEL_17:
  ((void (*)(char *, char *, uint64_t))v87)(&a1[v83[9]], &a2[v83[9]], v88);
  v31(&a1[v83[10]], &a2[v83[10]], v85);
  uint64_t v63 = v83[11];
  long long v64 = &a1[v63];
  int v65 = &a2[v63];
  uint64_t v66 = *(void **)&a1[v63];
  *(void *)long long v64 = *(void *)v65;

  uint64_t v67 = (void *)*((void *)v64 + 1);
  *((void *)v64 + 1) = *((void *)v65 + 1);

  uint64_t v68 = (void *)*((void *)v64 + 2);
  *((void *)v64 + 2) = *((void *)v65 + 2);

  uint64_t v69 = (void *)*((void *)v64 + 3);
  *((void *)v64 + 3) = *((void *)v65 + 3);

  uint64_t v70 = (void *)*((void *)v64 + 4);
  *((void *)v64 + 4) = *((void *)v65 + 4);

  id v71 = (void *)*((void *)v64 + 5);
  *((void *)v64 + 5) = *((void *)v65 + 5);

  ((void (*)(char *, char *, uint64_t))v84)(&a1[v83[12]], &a2[v83[12]], v86);
  return a1;
}

uint64_t sub_1002FD13C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002FD150);
}

uint64_t sub_1002FD150(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for TemperatureAveragesHeroChartInput();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_21:
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  type metadata accessor for MonthlyAveragesChartInput();
  sub_100162F30();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v12 = a3[5];
LABEL_20:
    uint64_t v9 = a1 + v12;
    goto LABEL_21;
  }
  if (a2 != 2147483646)
  {
    type metadata accessor for NewsDataModel();
    sub_100162F30();
    if (*(_DWORD *)(v17 + 84) == a2)
    {
      uint64_t v8 = v16;
      uint64_t v12 = a3[7];
    }
    else
    {
      sub_10017DF08(&qword_100E6B7D8);
      sub_100162F30();
      if (*(_DWORD *)(v19 + 84) == a2)
      {
        uint64_t v8 = v18;
        uint64_t v12 = a3[8];
      }
      else
      {
        type metadata accessor for TimeZone();
        sub_100162F30();
        if (*(_DWORD *)(v21 + 84) == a2)
        {
          uint64_t v8 = v20;
          uint64_t v12 = a3[9];
        }
        else
        {
          type metadata accessor for Date();
          sub_100162F30();
          if (*(_DWORD *)(v23 + 84) == a2)
          {
            uint64_t v8 = v22;
            uint64_t v12 = a3[10];
          }
          else
          {
            uint64_t v8 = type metadata accessor for Calendar();
            uint64_t v12 = a3[12];
          }
        }
      }
    }
    goto LABEL_20;
  }
  unint64_t v13 = *(void *)(a1 + a3[6]);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  int v14 = v13 - 1;
  if (v14 < 0) {
    int v14 = -1;
  }
  return (v14 + 1);
}

uint64_t sub_1002FD2C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002FD2D8);
}

void sub_1002FD2D8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  type metadata accessor for TemperatureAveragesHeroChartInput();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    type metadata accessor for MonthlyAveragesChartInput();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      if (a3 == 2147483646)
      {
        *(void *)(a1 + a4[6]) = a2;
        return;
      }
      type metadata accessor for NewsDataModel();
      sub_100162F30();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[7];
      }
      else
      {
        sub_10017DF08(&qword_100E6B7D8);
        sub_100162F30();
        if (*(_DWORD *)(v18 + 84) == a3)
        {
          uint64_t v10 = v17;
          uint64_t v14 = a4[8];
        }
        else
        {
          type metadata accessor for TimeZone();
          sub_100162F30();
          if (*(_DWORD *)(v20 + 84) == a3)
          {
            uint64_t v10 = v19;
            uint64_t v14 = a4[9];
          }
          else
          {
            type metadata accessor for Date();
            sub_100162F30();
            if (*(_DWORD *)(v22 + 84) == a3)
            {
              uint64_t v10 = v21;
              uint64_t v14 = a4[10];
            }
            else
            {
              uint64_t v10 = type metadata accessor for Calendar();
              uint64_t v14 = a4[12];
            }
          }
        }
      }
    }
    uint64_t v11 = a1 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for TemperatureAveragesDetailInput()
{
  uint64_t result = qword_100E6B838;
  if (!qword_100E6B838) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1002FD484()
{
  type metadata accessor for TemperatureAveragesHeroChartInput();
  if (v0 <= 0x3F)
  {
    type metadata accessor for MonthlyAveragesChartInput();
    if (v1 <= 0x3F)
    {
      type metadata accessor for NewsDataModel();
      if (v2 <= 0x3F)
      {
        sub_1002FD688();
        if (v3 <= 0x3F)
        {
          type metadata accessor for TimeZone();
          if (v4 <= 0x3F)
          {
            type metadata accessor for Date();
            if (v5 <= 0x3F)
            {
              type metadata accessor for Calendar();
              if (v6 <= 0x3F) {
                swift_initStructMetadata();
              }
            }
          }
        }
      }
    }
  }
}

void sub_1002FD688()
{
  if (!qword_100E6B848)
  {
    sub_10018C6DC(&qword_100E6B7C8);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E6B848);
    }
  }
}

uint64_t sub_1002FD6E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6B7C8);
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_10017DF08(&qword_100E6B898);
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_1001626E0();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = sub_10017DF08(&qword_100E6B7D8);
  uint64_t v17 = sub_100109308(v16);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v20 = &v46[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v23 = &v46[-v22];
  __chkstk_darwin(v21);
  uint64_t v25 = &v46[-v24];
  if ((sub_1003B3624(a1, a2) & 1) == 0) {
    goto LABEL_23;
  }
  uint64_t v51 = v15;
  uint64_t v26 = type metadata accessor for TemperatureAveragesDetailInput();
  sub_1001A2B2C(*(int *)(v26 + 20));
  if ((sub_100A5FBA4() & 1) == 0) {
    goto LABEL_23;
  }
  uint64_t v48 = v6;
  uint64_t v49 = v4;
  uint64_t v50 = (int *)v26;
  uint64_t v27 = *(int *)(v26 + 24);
  uint64_t v28 = *(void *)(a2 + v27);
  if (*(void *)(a1 + v27))
  {
    if (!v28) {
      goto LABEL_23;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100BDD244();
    char v30 = v29;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v30 & 1) == 0) {
      goto LABEL_23;
    }
  }
  else if (v28)
  {
LABEL_23:
    char v44 = 0;
    return v44 & 1;
  }
  uint64_t v31 = v50;
  uint64_t v32 = sub_1001A2B2C(v50[7]);
  if ((sub_100BBEEE4(v32, v33) & 1) == 0) {
    goto LABEL_23;
  }
  sub_10006DF38(a1 + v31[8], (uint64_t)v25, &qword_100E6B7D8);
  sub_10006DF38(a2 + v31[8], (uint64_t)v23, &qword_100E6B7D8);
  uint64_t v34 = v51;
  uint64_t v35 = v51 + *(int *)(v11 + 48);
  sub_10006DF38((uint64_t)v25, v51, &qword_100E6B7D8);
  sub_10006DF38((uint64_t)v23, v35, &qword_100E6B7D8);
  uint64_t v36 = v49;
  sub_10012B520(v34, 1, v49);
  if (v37)
  {
    sub_1001781AC((uint64_t)v23, &qword_100E6B7D8);
    sub_1001781AC((uint64_t)v25, &qword_100E6B7D8);
    sub_10012B520(v35, 1, v36);
    if (v37)
    {
      sub_1001781AC(v34, &qword_100E6B7D8);
      goto LABEL_19;
    }
    goto LABEL_17;
  }
  sub_10006DF38(v34, (uint64_t)v20, &qword_100E6B7D8);
  sub_10012B520(v35, 1, v36);
  if (v37)
  {
    sub_1001781AC((uint64_t)v23, &qword_100E6B7D8);
    sub_1001781AC((uint64_t)v25, &qword_100E6B7D8);
    (*(void (**)(unsigned char *, uint64_t))(v48 + 8))(v20, v36);
LABEL_17:
    sub_1001781AC(v34, &qword_100E6B898);
    goto LABEL_23;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 32))(v10, v35, v36);
  sub_1002FF0E0();
  int v47 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
  v38(v10, v36);
  sub_1001781AC((uint64_t)v23, &qword_100E6B7D8);
  sub_1001781AC((uint64_t)v25, &qword_100E6B7D8);
  v38((uint64_t)v20, v36);
  sub_1001781AC(v34, &qword_100E6B7D8);
  if ((v47 & 1) == 0) {
    goto LABEL_23;
  }
LABEL_19:
  uint64_t v39 = v50;
  sub_1001A2B2C(v50[9]);
  if ((static TimeZone.== infix(_:_:)() & 1) == 0) {
    goto LABEL_23;
  }
  sub_1001A2B2C(v39[10]);
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    goto LABEL_23;
  }
  uint64_t v40 = (_OWORD *)(a1 + v39[11]);
  long long v41 = v40[2];
  v52[1] = v40[1];
  v52[2] = v41;
  v52[0] = *v40;
  uint64_t v42 = (_OWORD *)(a2 + v39[11]);
  long long v43 = v42[2];
  v53[1] = v42[1];
  v53[2] = v43;
  v53[0] = *v42;
  if ((sub_10011C8A8((uint64_t)v52, (id *)v53) & 1) == 0) {
    goto LABEL_23;
  }
  sub_1001A2B2C(v39[12]);
  char v44 = static Calendar.== infix(_:_:)();
  return v44 & 1;
}

uint64_t sub_1002FDB2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v226 = a4;
  uint64_t v227 = a2;
  uint64_t v248 = a5;
  type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v246 = v7;
  uint64_t v247 = v8;
  __chkstk_darwin(v7);
  sub_100162EF8();
  id v244 = v9;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v238 = (char *)&v208 - v12;
  __chkstk_darwin(v11);
  sub_100179C90();
  __chkstk_darwin(v13);
  sub_100128F8C();
  sub_100109328(v14);
  uint64_t v223 = type metadata accessor for Calendar();
  sub_100179C0C();
  uint64_t v222 = v15;
  __chkstk_darwin(v16);
  sub_100109314();
  sub_100109328(v17);
  uint64_t v236 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v221 = v18;
  __chkstk_darwin(v19);
  sub_100109314();
  uint64_t v235 = v20;
  sub_100129064();
  uint64_t v21 = type metadata accessor for TimeState();
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_100109314();
  sub_100109328(v23);
  uint64_t v220 = type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v219 = v24;
  __chkstk_darwin(v25);
  sub_100109314();
  uint64_t v234 = v26;
  sub_100129064();
  uint64_t v213 = type metadata accessor for WeatherDataModel();
  sub_100179C0C();
  uint64_t v212 = v27;
  __chkstk_darwin(v28);
  sub_100109314();
  uint64_t v211 = v29;
  uint64_t v30 = sub_10017DF08(&qword_100E63850);
  uint64_t v31 = sub_100109308(v30);
  __chkstk_darwin(v31);
  sub_100109314();
  uint64_t v214 = v32;
  uint64_t v33 = sub_10017DF08(&qword_100E6B8A8);
  uint64_t v34 = sub_100109308(v33);
  __chkstk_darwin(v34);
  sub_100109314();
  sub_100109328(v35);
  uint64_t v216 = type metadata accessor for HistoricalFacts();
  sub_100179C0C();
  uint64_t v210 = v36;
  __chkstk_darwin(v37);
  sub_100109314();
  sub_100109328(v38);
  uint64_t v39 = type metadata accessor for MonthlyAveragesChartInput();
  uint64_t v40 = sub_100109308(v39);
  __chkstk_darwin(v40);
  sub_100162EF8();
  uint64_t v232 = v41;
  __chkstk_darwin(v42);
  sub_100128F8C();
  uint64_t v230 = v43;
  uint64_t v44 = sub_10017DF08(&qword_100E6B8B0);
  uint64_t v45 = sub_100109308(v44);
  __chkstk_darwin(v45);
  sub_100109314();
  sub_100109328(v46);
  uint64_t v224 = type metadata accessor for TemperatureAveragesHeroChartInput();
  sub_100162E4C();
  __chkstk_darwin(v47);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v48);
  sub_100128F8C();
  uint64_t v237 = v49;
  uint64_t v50 = sub_10017DF08(&qword_100E6B8B8);
  uint64_t v51 = sub_100109308(v50);
  __chkstk_darwin(v51);
  sub_1001626E0();
  uint64_t v54 = v53 - v52;
  uint64_t v55 = sub_10017DF08(&qword_100E6B7D8);
  uint64_t v56 = sub_100109308(v55);
  __chkstk_darwin(v56);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v57);
  uint64_t v59 = (char *)&v208 - v58;
  uint64_t v242 = sub_10017DF08(&qword_100E6B7C8);
  sub_100179C0C();
  uint64_t v240 = v60;
  __chkstk_darwin(v61);
  sub_100109314();
  uint64_t v239 = v62;
  sub_100129064();
  uint64_t v63 = type metadata accessor for NewsDataModel();
  uint64_t v64 = sub_100109308(v63);
  __chkstk_darwin(v64);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v65);
  sub_100128F8C();
  uint64_t v245 = v66;
  uint64_t v67 = sub_100129064();
  uint64_t v68 = type metadata accessor for WeatherData(v67);
  sub_100162E4C();
  __chkstk_darwin(v69);
  sub_100109314();
  uint64_t v243 = (char *)v70;
  uint64_t v71 = sub_10017DF08(&qword_100E63770);
  uint64_t v72 = sub_100109308(v71);
  __chkstk_darwin(v72);
  sub_1001626E0();
  uint64_t v75 = v74 - v73;
  uint64_t v76 = type metadata accessor for LocationWeatherDataState(0);
  sub_100162E4C();
  uint64_t v78 = __chkstk_darwin(v77);
  uint64_t v80 = (char *)&v208 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v78);
  uint64_t v82 = (char *)&v208 - v81;
  uint64_t v233 = a1;
  uint64_t v83 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  swift_bridgeObjectRetain();
  uint64_t v84 = a3;
  uint64_t v85 = Location.id.getter();
  sub_1001BBE9C(v85, v86, v83);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10012B520(v75, 1, v76);
  if (v141)
  {
    sub_1001781AC(v75, &qword_100E63770);
    if (qword_100E62808 != -1) {
      swift_once();
    }
    uint64_t v87 = type metadata accessor for Logger();
    sub_1002102B0(v87, (uint64_t)qword_100F51F20);
    uint64_t v89 = v246;
    uint64_t v88 = v247;
    sub_100189D70();
    id v90 = v244;
    uint64_t v91 = sub_10019FC04();
    v92(v91);
    uint64_t v93 = (void *)Logger.logObject.getter();
    os_log_type_t v94 = static os_log_type_t.error.getter();
    if (sub_10019D484(v94))
    {
      sub_10017F338();
      uint64_t v95 = sub_1001851B8();
      sub_100162874(v95);
      sub_10017F9B4(7.2225e-34);
      sub_10018292C();
      uint64_t v96 = sub_100185978();
      uint64_t v98 = sub_100182F48(v96, v97);
      sub_1001A1CF4(v98);
      swift_bridgeObjectRelease();
      uint64_t v99 = sub_100179ED8();
      v100(v99);
      sub_10008B8D8((void *)&_mh_execute_header, v101, v102, "Failed to create averages temperature detail input due to missing weather data for location; location=%{private,mask.hash}s");
      sub_1001A152C();
      sub_100162EE0();
      sub_100162EE0();
    }
    else
    {
      (*(void (**)(id, void (*)(void, void, void)))(v88 + 8))(v90, v89);
    }

    goto LABEL_39;
  }
  sub_1001E0FE4(v75, (uint64_t)v82, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  sub_1001BCB6C((uint64_t)v82, (uint64_t)v80, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  int v208 = v82;
  if (EnumCaseMultiPayload != 1)
  {
    sub_1002FF184((uint64_t)v80, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    if (qword_100E62808 != -1) {
      swift_once();
    }
    uint64_t v124 = type metadata accessor for Logger();
    sub_1002102B0(v124, (uint64_t)qword_100F51F20);
    sub_100189D70();
    uint64_t v125 = sub_10019FC04();
    v126(v125);
    uint64_t v127 = (void *)Logger.logObject.getter();
    os_log_type_t v128 = static os_log_type_t.error.getter();
    if (sub_10019D484(v128))
    {
      sub_10017F338();
      uint64_t v129 = sub_1001851B8();
      sub_100162874(v129);
      sub_10017F9B4(7.2225e-34);
      sub_10018292C();
      uint64_t v130 = sub_100185978();
      uint64_t v132 = sub_100182F48(v130, v131);
      sub_1001A1CF4(v132);
      swift_bridgeObjectRelease();
      uint64_t v133 = sub_100179ED8();
      v134(v133);
      sub_10008B8D8((void *)&_mh_execute_header, v135, v136, "Failed to create averages temperature detail input due to missing weather data; location=%{private,mask.hash}s");
      sub_1001A152C();
      sub_100162EE0();
      sub_100162EE0();
    }
    else
    {

      uint64_t v157 = sub_100179ED8();
      v158(v157);
    }
    goto LABEL_38;
  }
  uint64_t v104 = sub_10017DF08(&qword_100E63748);
  uint64_t v105 = (uint64_t)&v80[*(int *)(v104 + 48)];
  uint64_t v106 = (uint64_t)&v80[*(int *)(v104 + 64)];
  uint64_t v107 = v243;
  sub_1001E0FE4((uint64_t)v80, (uint64_t)v243, (void (*)(void))type metadata accessor for WeatherData);
  sub_1001E0FE4(v106, v245, (void (*)(void))type metadata accessor for NewsDataModel);
  sub_1002FF184(v105, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
  WeatherDataModel.historicalComparisons.getter();
  uint64_t v108 = v241;
  sub_1002FEDF4(v54, (uint64_t)v59);
  sub_1001781AC(v54, &qword_100E6B8B8);
  uint64_t v109 = v242;
  sub_10012B520((uint64_t)v59, 1, v242);
  uint64_t v110 = v246;
  if (!v141)
  {
    uint64_t v137 = v239;
    (*(void (**)(uint64_t, char *, uint64_t))(v240 + 32))(v239, v59, v109);
    sub_1001B1E64(v108 + 5, v108[8]);
    uint64_t v138 = v233;
    uint64_t v139 = v84;
    uint64_t v140 = v225;
    sub_1003B39DC(v233, v107, v227, v139, v137, v226, v225);
    sub_10012B520((uint64_t)v140, 1, v224);
    if (!v141)
    {
      sub_1001E0FE4((uint64_t)v140, v237, (void (*)(void))type metadata accessor for TemperatureAveragesHeroChartInput);
      sub_1001B1E64(v108 + 10, v108[13]);
      sub_100A5FDB4(v138, v230);
      type metadata accessor for SettingReader();
      static SettingReader.shared.getter();
      if (qword_100E62658 != -1) {
        swift_once();
      }
      uint64_t v161 = SettingReader.isEnabled(_:with:)();
      swift_release();
      if (v161)
      {
        sub_100162868();
        sub_1001177B0(v162);
        sub_10012B520(v161, 1, v68);
        if (v141)
        {
          sub_1001781AC(v161, &qword_100E63850);
          uint64_t v177 = v215;
          _s7Weather24LocationCompositionStateOwst_0(v215, 1, 1, v216);
        }
        else
        {
          sub_100162868();
          uint64_t v172 = v211;
          uint64_t v173 = v213;
          (*(void (**)(uint64_t))(v171 + 16))(v211);
          sub_1002FF184(v161, (void (*)(void))type metadata accessor for WeatherData);
          uint64_t v174 = v215;
          WeatherDataModel.historicalFacts.getter();
          long long v176 = *(void (**)(uint64_t, uint64_t))(v161 + 8);
          uint64_t v175 = v161 + 8;
          v176(v172, v173);
          uint64_t v177 = v174;
          uint64_t v178 = v216;
          sub_10012B520(v174, 1, v216);
          if (!v179)
          {
            sub_100162868();
            uint64_t v207 = v209;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v206 + 32))(v209, v177, v178);
            sub_1001B1E64(v241, v241[3]);
            uint64_t v247 = sub_100732AE0(v207);
            (*(void (**)(uint64_t, uint64_t))(v175 + 8))(v207, v178);
LABEL_45:
            uint64_t v180 = v138;
            sub_1001BCB6C(v237, v231, (void (*)(void))type metadata accessor for TemperatureAveragesHeroChartInput);
            uint64_t v181 = v230;
            sub_1001BCB6C(v230, v232, (void (*)(void))type metadata accessor for MonthlyAveragesChartInput);
            sub_1001BCB6C(v245, v228, (void (*)(void))type metadata accessor for NewsDataModel);
            uint64_t v182 = v239;
            uint64_t v183 = v240;
            uint64_t v184 = v229;
            uint64_t v185 = v242;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v240 + 16))(v229, v239, v242);
            _s7Weather24LocationCompositionStateOwst_0(v184, 0, 1, v185);
            Location.timeZone.getter();
            uint64_t v186 = v218;
            sub_1001BCB6C(v180 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, v218, (void (*)(void))type metadata accessor for TimeState);
            uint64_t v246 = *(void (**)(void, void, void))(v221 + 32);
            v246(v235, v186, v236);
            uint64_t v187 = v180 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
            swift_beginAccess();
            uint64_t v188 = v187 + *(int *)(type metadata accessor for EnvironmentState() + 68);
            uint64_t v190 = *(char **)(v188 + 8);
            uint64_t v241 = *(void **)v188;
            uint64_t v189 = v241;
            uint64_t v238 = v190;
            uint64_t v191 = v185;
            uint64_t v193 = *(void **)(v188 + 16);
            uint64_t v192 = *(void **)(v188 + 24);
            uint64_t v194 = *(void **)(v188 + 32);
            id v244 = *(id *)(v188 + 40);
            id v195 = v244;
            uint64_t v196 = v189;
            uint64_t v197 = v190;
            id v198 = v193;
            id v199 = v192;
            id v200 = v194;
            sub_100162868();
            static Calendar.current.getter();
            sub_1002FF184(v181, (void (*)(void))type metadata accessor for MonthlyAveragesChartInput);
            sub_1002FF184(v237, (void (*)(void))type metadata accessor for TemperatureAveragesHeroChartInput);
            (*(void (**)(uint64_t, uint64_t))(v183 + 8))(v182, v191);
            sub_1002FF184(v245, (void (*)(void))type metadata accessor for NewsDataModel);
            sub_1002FF184((uint64_t)v243, (void (*)(void))type metadata accessor for WeatherData);
            sub_1002FF184((uint64_t)v208, (void (*)(void))type metadata accessor for LocationWeatherDataState);
            uint64_t v201 = v248;
            sub_1001E0FE4(v231, v248, (void (*)(void))type metadata accessor for TemperatureAveragesHeroChartInput);
            uint64_t v202 = (int *)type metadata accessor for TemperatureAveragesDetailInput();
            sub_1001E0FE4(v232, v201 + v202[5], (void (*)(void))type metadata accessor for MonthlyAveragesChartInput);
            *(void *)(v201 + v202[6]) = v247;
            sub_1001E0FE4(v228, v201 + v202[7], (void (*)(void))type metadata accessor for NewsDataModel);
            sub_1002FF1DC(v229, v201 + v202[8]);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v219 + 32))(v201 + v202[9], v234, v220);
            v246(v201 + v202[10], v235, v236);
            uint64_t v203 = (void *)(v201 + v202[11]);
            Swift::String v204 = v238;
            *uint64_t v203 = v241;
            v203[1] = v204;
            v203[2] = v193;
            v203[3] = v192;
            id v205 = v244;
            v203[4] = v194;
            v203[5] = v205;
            (*(void (**)(uint64_t, char *, uint64_t))(v222 + 32))(v201 + v202[12], v190, v223);
            uint64_t v168 = v201;
            uint64_t v169 = 0;
            uint64_t v167 = (uint64_t)v202;
            return _s7Weather24LocationCompositionStateOwst_0(v168, v169, 1, v167);
          }
        }
        sub_1001781AC(v177, &qword_100E6B8A8);
      }
      uint64_t v247 = 0;
      goto LABEL_45;
    }
    sub_1001781AC((uint64_t)v140, &qword_100E6B8B0);
    if (qword_100E62808 != -1) {
      swift_once();
    }
    uint64_t v142 = type metadata accessor for Logger();
    sub_1002102B0(v142, (uint64_t)qword_100F51F20);
    sub_100189D70();
    v143(v217, v139, v110);
    uint64_t v144 = (void *)Logger.logObject.getter();
    os_log_type_t v145 = static os_log_type_t.error.getter();
    if (sub_10019D484(v145))
    {
      sub_10017F338();
      uint64_t v146 = sub_1001851B8();
      sub_100162874(v146);
      sub_10017F9B4(7.2225e-34);
      sub_10018292C();
      uint64_t v147 = sub_100185978();
      uint64_t v149 = sub_100182F48(v147, v148);
      sub_1001A1CF4(v149);
      swift_bridgeObjectRelease();
      uint64_t v150 = sub_100179ED8();
      v151(v150);
      sub_10008B8D8((void *)&_mh_execute_header, v152, v153, "Failed to create hero chart input; location=%{private,mask.hash}s");
      sub_1001A152C();
      sub_100162EE0();
      sub_100162EE0();

      uint64_t v154 = sub_100181EA0();
      v155(v154);
      goto LABEL_26;
    }

    uint64_t v163 = sub_100179ED8();
    v164(v163);
    uint64_t v165 = sub_100181EA0();
    v166(v165);
LABEL_36:
    sub_1002FF184(v245, (void (*)(void))type metadata accessor for NewsDataModel);
    uint64_t v156 = (uint64_t)v107;
    goto LABEL_37;
  }
  sub_1001781AC((uint64_t)v59, &qword_100E6B7D8);
  if (qword_100E62808 != -1) {
    swift_once();
  }
  uint64_t v111 = type metadata accessor for Logger();
  sub_1002102B0(v111, (uint64_t)qword_100F51F20);
  sub_100189D70();
  uint64_t v112 = sub_10019FC04();
  v113(v112);
  uint64_t v114 = (void *)Logger.logObject.getter();
  os_log_type_t v115 = static os_log_type_t.error.getter();
  if (!sub_10019D484(v115))
  {

    uint64_t v159 = sub_100179ED8();
    v160(v159);
    goto LABEL_36;
  }
  sub_10017F338();
  uint64_t v116 = sub_1001851B8();
  sub_100162874(v116);
  sub_10017F9B4(7.2225e-34);
  sub_10018292C();
  uint64_t v117 = sub_100185978();
  uint64_t v119 = sub_100182F48(v117, v118);
  sub_1001A1CF4(v119);
  swift_bridgeObjectRelease();
  uint64_t v120 = sub_100179ED8();
  v121(v120);
  sub_10008B8D8((void *)&_mh_execute_header, v122, v123, "Failed to get temperature averages from weather comparisons; location=%{private,mask.hash}s");
  sub_1001A152C();
  sub_100162EE0();
  sub_100162EE0();

LABEL_26:
  sub_1002FF184(v245, (void (*)(void))type metadata accessor for NewsDataModel);
  uint64_t v156 = (uint64_t)v243;
LABEL_37:
  sub_1002FF184(v156, (void (*)(void))type metadata accessor for WeatherData);
LABEL_38:
  sub_1002FF184((uint64_t)v208, (void (*)(void))type metadata accessor for LocationWeatherDataState);
LABEL_39:
  uint64_t v167 = type metadata accessor for TemperatureAveragesDetailInput();
  uint64_t v168 = v248;
  uint64_t v169 = 1;
  return _s7Weather24LocationCompositionStateOwst_0(v168, v169, 1, v167);
}

uint64_t sub_1002FEDF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for HistoricalComparison();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E6B8B8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10006DF38(a1, (uint64_t)v10, &qword_100E6B8B8);
  uint64_t v11 = type metadata accessor for HistoricalComparisons();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11) == 1)
  {
    sub_1001781AC((uint64_t)v10, &qword_100E6B8B8);
    uint64_t v12 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v12 = (void *)HistoricalComparisons.comparisons.getter();
    (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  uint64_t v13 = v12[2];
  if (v13)
  {
    uint64_t v28 = v12;
    uint64_t v29 = a2;
    uint64_t v27 = v5;
    uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    uint64_t v14 = v5 + 16;
    uint64_t v15 = v16;
    uint64_t v17 = (char *)v12 + ((*(unsigned __int8 *)(v14 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 64));
    int v18 = enum case for HistoricalComparison.highTemperature(_:);
    uint64_t v19 = *(void *)(v14 + 56);
    while (1)
    {
      v15(v7, v17, v4);
      if ((*(unsigned int (**)(char *, uint64_t))(v14 + 72))(v7, v4) == v18) {
        break;
      }
      (*(void (**)(char *, uint64_t))(v14 - 8))(v7, v4);
      v17 += v19;
      if (!--v13)
      {
        swift_bridgeObjectRelease();
        a2 = v29;
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v27 + 96))(v7, v4);
    uint64_t v23 = sub_10017DF08(&qword_100E6B7C8);
    uint64_t v24 = v29;
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v29, v7, v23);
    uint64_t v21 = v24;
    uint64_t v22 = 0;
    uint64_t v20 = v23;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_10:
    uint64_t v20 = sub_10017DF08(&qword_100E6B7C8);
    uint64_t v21 = a2;
    uint64_t v22 = 1;
  }
  return _s7Weather24LocationCompositionStateOwst_0(v21, v22, 1, v20);
}

unint64_t sub_1002FF0E0()
{
  unint64_t result = qword_100E6B8A0;
  if (!qword_100E6B8A0)
  {
    sub_10018C6DC(&qword_100E6B7C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6B8A0);
  }
  return result;
}

unint64_t sub_1002FF134()
{
  unint64_t result = qword_100E66470;
  if (!qword_100E66470)
  {
    type metadata accessor for Location();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E66470);
  }
  return result;
}

uint64_t sub_1002FF184(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1002FF1DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6B7D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t destroy for TemperatureAveragesDetailInputFactory(uint64_t a1)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 40);

  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 80);
}

_OWORD *initializeWithCopy for TemperatureAveragesDetailInputFactory(_OWORD *a1, _OWORD *a2)
{
  long long v4 = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)((char *)a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  long long v5 = a2[4];
  a1[4] = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))((uint64_t)a1 + 40, (uint64_t)a2 + 40);
  long long v6 = *(_OWORD *)((char *)a2 + 104);
  *(_OWORD *)((char *)a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
  return a1;
}

uint64_t *assignWithCopy for TemperatureAveragesDetailInputFactory(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

void *initializeWithTake for TemperatureAveragesDetailInputFactory(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x78uLL);
}

uint64_t assignWithTake for TemperatureAveragesDetailInputFactory(uint64_t a1, uint64_t a2)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 80);
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  return a1;
}

uint64_t getEnumTagSinglePayload for TemperatureAveragesDetailInputFactory(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 120))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TemperatureAveragesDetailInputFactory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TemperatureAveragesDetailInputFactory()
{
  return &type metadata for TemperatureAveragesDetailInputFactory;
}

uint64_t *sub_1002FF4EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  long long v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *long long v4 = *a2;
    uint64_t v17 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (uint64_t *)((char *)a1 + v7);
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = *(uint64_t *)((char *)a2 + v7 + 8);
    *uint64_t v8 = *(uint64_t *)((char *)a2 + v7);
    v8[1] = v10;
    swift_retain();
    swift_retain();
    uint64_t v11 = *(int *)(sub_10017DF08(&qword_100E6B8C0) + 32);
    uint64_t v12 = (char *)v8 + v11;
    uint64_t v13 = &v9[v11];
    uint64_t v14 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
    unint64_t v118 = v4;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, (uint64_t)v14))
    {
      uint64_t v15 = sub_10017DF08(&qword_100E6B8D0);
      memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      uint64_t v18 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v12, v13, v18);
      uint64_t v19 = v14[5];
      uint64_t v20 = &v12[v19];
      uint64_t v21 = &v13[v19];
      uint64_t v22 = *((void *)v21 + 1);
      *(void *)uint64_t v20 = *(void *)v21;
      *((void *)v20 + 1) = v22;
      uint64_t v23 = v14[6];
      uint64_t v24 = &v12[v23];
      uint64_t v25 = &v13[v23];
      uint64_t v26 = *((void *)v25 + 1);
      *(void *)uint64_t v24 = *(void *)v25;
      *((void *)v24 + 1) = v26;
      uint64_t v27 = v14[7];
      os_log_type_t v115 = &v13[v27];
      __dsta = &v12[v27];
      uint64_t v28 = type metadata accessor for TimeZone();
      uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v29(__dsta, v115, v28);
      uint64_t v30 = v14[8];
      uint64_t v31 = &v12[v30];
      uint64_t v32 = &v13[v30];
      uint64_t v33 = sub_10017DF08(&qword_100E65250);
      uint64_t v34 = *(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16);
      v34(v31, v32, v33);
      v34(&v12[v14[9]], &v13[v14[9]], v33);
      uint64_t v35 = v14[10];
      uint64_t v36 = &v12[v35];
      uint64_t v37 = &v13[v35];
      uint64_t v38 = *((void *)v37 + 1);
      *(void *)uint64_t v36 = *(void *)v37;
      *((void *)v36 + 1) = v38;
      uint64_t v39 = v14[11];
      uint64_t v40 = &v12[v39];
      uint64_t v41 = &v13[v39];
      uint64_t v42 = *((void *)v41 + 1);
      *(void *)uint64_t v40 = *(void *)v41;
      *((void *)v40 + 1) = v42;
      *(void *)&v12[v14[12]] = *(void *)&v13[v14[12]];
      v12[v14[13]] = v13[v14[13]];
      uint64_t v43 = v14[14];
      uint64_t v44 = &v12[v43];
      uint64_t v45 = &v13[v43];
      uint64_t v46 = *((void *)v45 + 1);
      *(void *)uint64_t v44 = *(void *)v45;
      *((void *)v44 + 1) = v46;
      uint64_t v47 = v14[15];
      __dst = &v12[v47];
      uint64_t v48 = &v13[v47];
      uint64_t v49 = type metadata accessor for Precipitation();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v49))
      {
        uint64_t v50 = sub_10017DF08(&qword_100E6B8C8);
        memcpy(__dst, v48, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(__dst, v48, v49);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v49);
      }
      v12[v14[16]] = v13[v14[16]];
      uint64_t v51 = v14[17];
      uint64_t v52 = &v12[v51];
      uint64_t v53 = &v13[v51];
      uint64_t v54 = *((void *)v53 + 1);
      *(void *)uint64_t v52 = *(void *)v53;
      *((void *)v52 + 1) = v54;
      uint64_t v55 = v14[18];
      uint64_t v56 = &v12[v55];
      uint64_t v57 = &v13[v55];
      uint64_t v58 = *((void *)v57 + 1);
      *(void *)uint64_t v56 = *(void *)v57;
      *((void *)v56 + 1) = v58;
      uint64_t v59 = v14[19];
      uint64_t v60 = &v12[v59];
      uint64_t v61 = &v13[v59];
      uint64_t v62 = *((void *)v61 + 1);
      *(void *)uint64_t v60 = *(void *)v61;
      *((void *)v60 + 1) = v62;
      *(void *)&v12[v14[20]] = *(void *)&v13[v14[20]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, (uint64_t)v14);
      long long v4 = v118;
    }
    uint64_t v63 = *(int *)(a3 + 24);
    uint64_t v64 = (char *)v4 + v63;
    uint64_t v65 = (char *)a2 + v63;
    uint64_t v66 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16))(v64, v65, v66);
    uint64_t v67 = v14[5];
    uint64_t v68 = &v64[v67];
    uint64_t v69 = &v65[v67];
    uint64_t v70 = *((void *)v69 + 1);
    *(void *)uint64_t v68 = *(void *)v69;
    *((void *)v68 + 1) = v70;
    uint64_t v71 = v14[6];
    uint64_t v72 = &v64[v71];
    uint64_t v73 = &v65[v71];
    uint64_t v74 = *((void *)v73 + 1);
    *(void *)uint64_t v72 = *(void *)v73;
    *((void *)v72 + 1) = v74;
    uint64_t v75 = v14[7];
    uint64_t v76 = &v64[v75];
    uint64_t v77 = &v65[v75];
    uint64_t v78 = type metadata accessor for TimeZone();
    uint64_t v79 = *(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v79(v76, v77, v78);
    uint64_t v80 = v14[8];
    uint64_t v81 = &v64[v80];
    uint64_t v82 = &v65[v80];
    uint64_t v83 = sub_10017DF08(&qword_100E65250);
    uint64_t v84 = *(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16);
    v84(v81, v82, v83);
    v84(&v64[v14[9]], &v65[v14[9]], v83);
    uint64_t v85 = v14[10];
    uint64_t v86 = &v64[v85];
    uint64_t v87 = &v65[v85];
    uint64_t v88 = *((void *)v87 + 1);
    *(void *)uint64_t v86 = *(void *)v87;
    *((void *)v86 + 1) = v88;
    uint64_t v89 = v14[11];
    id v90 = &v64[v89];
    uint64_t v91 = &v65[v89];
    uint64_t v92 = *((void *)v91 + 1);
    *(void *)id v90 = *(void *)v91;
    *((void *)v90 + 1) = v92;
    *(void *)&v64[v14[12]] = *(void *)&v65[v14[12]];
    v64[v14[13]] = v65[v14[13]];
    uint64_t v93 = v14[14];
    os_log_type_t v94 = &v64[v93];
    uint64_t v95 = &v65[v93];
    uint64_t v96 = *((void *)v95 + 1);
    *(void *)os_log_type_t v94 = *(void *)v95;
    *((void *)v94 + 1) = v96;
    uint64_t v97 = v14[15];
    uint64_t v98 = &v64[v97];
    uint64_t v99 = &v65[v97];
    uint64_t v100 = type metadata accessor for Precipitation();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v99, 1, v100))
    {
      uint64_t v101 = sub_10017DF08(&qword_100E6B8C8);
      memcpy(v98, v99, *(void *)(*(void *)(v101 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16))(v98, v99, v100);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v98, 0, 1, v100);
    }
    v64[v14[16]] = v65[v14[16]];
    uint64_t v102 = v14[17];
    uint64_t v103 = &v64[v102];
    uint64_t v104 = &v65[v102];
    uint64_t v105 = *((void *)v104 + 1);
    *(void *)uint64_t v103 = *(void *)v104;
    *((void *)v103 + 1) = v105;
    uint64_t v106 = v14[18];
    uint64_t v107 = &v64[v106];
    uint64_t v108 = &v65[v106];
    uint64_t v109 = *((void *)v108 + 1);
    *(void *)uint64_t v107 = *(void *)v108;
    *((void *)v107 + 1) = v109;
    uint64_t v110 = v14[19];
    uint64_t v111 = &v64[v110];
    uint64_t v112 = &v65[v110];
    uint64_t v113 = *((void *)v112 + 1);
    *(void *)uint64_t v111 = *(void *)v112;
    *((void *)v111 + 1) = v113;
    *(void *)&v64[v14[20]] = *(void *)&v65[v14[20]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return v118;
  }
  return (uint64_t *)v17;
}

unsigned char *sub_1002FFBAC(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  long long v4 = a2;
  int v5 = a1;
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  *(void *)&a1[v6] = *(void *)&a2[v6];
  swift_retain();
  swift_release();
  *((void *)v7 + 1) = *((void *)v8 + 1);
  swift_retain();
  swift_release();
  uint64_t v9 = *(int *)(sub_10017DF08(&qword_100E6B8C0) + 32);
  uint64_t v10 = &v7[v9];
  uint64_t v11 = &v8[v9];
  uint64_t v12 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, (uint64_t)v12);
  int v14 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, (uint64_t)v12);
  if (!v13)
  {
    if (v14)
    {
      sub_10030076C((uint64_t)v10);
      goto LABEL_7;
    }
    uint64_t v146 = v3;
    uint64_t v147 = v4;
    uint64_t v47 = v5;
    uint64_t v48 = type metadata accessor for Date();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v48 - 8) + 24))(v10, v11, v48);
    uint64_t v49 = v12[5];
    uint64_t v50 = &v10[v49];
    uint64_t v51 = &v11[v49];
    void *v50 = *v51;
    v50[1] = v51[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v52 = v12[6];
    uint64_t v53 = &v10[v52];
    uint64_t v54 = &v11[v52];
    *uint64_t v53 = *v54;
    v53[1] = v54[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v55 = v12[7];
    uint64_t v56 = &v10[v55];
    uint64_t v57 = &v11[v55];
    uint64_t v58 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 24))(v56, v57, v58);
    uint64_t v59 = v12[8];
    uint64_t v60 = &v10[v59];
    uint64_t v61 = &v11[v59];
    uint64_t v62 = sub_10017DF08(&qword_100E65250);
    uint64_t v63 = *(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 24);
    v63(v60, v61, v62);
    v63(&v10[v12[9]], &v11[v12[9]], v62);
    uint64_t v64 = v12[10];
    uint64_t v65 = &v10[v64];
    uint64_t v66 = &v11[v64];
    *uint64_t v65 = *v66;
    v65[1] = v66[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v67 = v12[11];
    uint64_t v68 = &v10[v67];
    uint64_t v69 = &v11[v67];
    *uint64_t v68 = *v69;
    v68[1] = v69[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&v10[v12[12]] = *(void *)&v11[v12[12]];
    v10[v12[13]] = v11[v12[13]];
    uint64_t v70 = v12[14];
    uint64_t v71 = &v10[v70];
    uint64_t v72 = &v11[v70];
    *uint64_t v71 = *v72;
    v71[1] = v72[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v73 = v12[15];
    uint64_t v74 = &v10[v73];
    uint64_t v75 = &v11[v73];
    uint64_t v76 = type metadata accessor for Precipitation();
    int v77 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v74, 1, v76);
    int v78 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v75, 1, v76);
    if (v77)
    {
      if (!v78)
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16))(v74, v75, v76);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v74, 0, 1, v76);
LABEL_16:
        v10[v12[16]] = v11[v12[16]];
        uint64_t v90 = v12[17];
        uint64_t v91 = &v10[v90];
        uint64_t v92 = &v11[v90];
        *uint64_t v91 = *v92;
        v91[1] = v92[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v93 = v12[18];
        os_log_type_t v94 = &v10[v93];
        uint64_t v95 = &v11[v93];
        *os_log_type_t v94 = *v95;
        v94[1] = v95[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v96 = v12[19];
        uint64_t v97 = &v10[v96];
        uint64_t v98 = &v11[v96];
        *uint64_t v97 = *v98;
        v97[1] = v98[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)&v10[v12[20]] = *(void *)&v11[v12[20]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        int v5 = v47;
        uint64_t v3 = v146;
        long long v4 = v147;
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v88 = *(void *)(v76 - 8);
      if (!v78)
      {
        (*(void (**)(char *, char *, uint64_t))(v88 + 24))(v74, v75, v76);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v88 + 8))(v74, v76);
    }
    uint64_t v89 = sub_10017DF08(&qword_100E6B8C8);
    memcpy(v74, v75, *(void *)(*(void *)(v89 - 8) + 64));
    goto LABEL_16;
  }
  if (v14)
  {
LABEL_7:
    uint64_t v46 = sub_10017DF08(&qword_100E6B8D0);
    memcpy(v10, v11, *(void *)(*(void *)(v46 - 8) + 64));
    goto LABEL_17;
  }
  uint64_t v145 = v3;
  uint64_t v144 = v5;
  uint64_t v15 = type metadata accessor for Date();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 16))(v10, v11, v15);
  uint64_t v16 = v12[5];
  uint64_t v17 = &v10[v16];
  uint64_t v18 = &v11[v16];
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  uint64_t v19 = v12[6];
  uint64_t v20 = &v10[v19];
  uint64_t v21 = &v11[v19];
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  uint64_t v22 = v12[7];
  uint64_t v23 = &v10[v22];
  uint64_t v24 = &v11[v22];
  uint64_t v25 = type metadata accessor for TimeZone();
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v26(v23, v24, v25);
  uint64_t v27 = v12[8];
  uint64_t v28 = &v10[v27];
  uint64_t v29 = &v11[v27];
  uint64_t v30 = sub_10017DF08(&qword_100E65250);
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16);
  v31(v28, v29, v30);
  v31(&v10[v12[9]], &v11[v12[9]], v30);
  uint64_t v32 = v12[10];
  uint64_t v33 = &v10[v32];
  uint64_t v34 = &v11[v32];
  *uint64_t v33 = *v34;
  v33[1] = v34[1];
  uint64_t v35 = v12[11];
  uint64_t v36 = &v10[v35];
  uint64_t v37 = &v11[v35];
  void *v36 = *v37;
  v36[1] = v37[1];
  *(void *)&v10[v12[12]] = *(void *)&v11[v12[12]];
  v10[v12[13]] = v11[v12[13]];
  uint64_t v38 = v12[14];
  uint64_t v39 = &v10[v38];
  uint64_t v40 = &v11[v38];
  *uint64_t v39 = *v40;
  v39[1] = v40[1];
  uint64_t v41 = v12[15];
  uint64_t v42 = &v10[v41];
  uint64_t v43 = &v11[v41];
  uint64_t v44 = type metadata accessor for Precipitation();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v44))
  {
    uint64_t v45 = sub_10017DF08(&qword_100E6B8C8);
    memcpy(v42, v43, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v44);
  }
  int v5 = v144;
  v10[v12[16]] = v11[v12[16]];
  uint64_t v79 = v12[17];
  uint64_t v80 = &v10[v79];
  uint64_t v81 = &v11[v79];
  *uint64_t v80 = *v81;
  v80[1] = v81[1];
  uint64_t v82 = v12[18];
  uint64_t v83 = &v10[v82];
  uint64_t v84 = &v11[v82];
  void *v83 = *v84;
  v83[1] = v84[1];
  uint64_t v85 = v12[19];
  uint64_t v86 = &v10[v85];
  uint64_t v87 = &v11[v85];
  void *v86 = *v87;
  v86[1] = v87[1];
  *(void *)&v10[v12[20]] = *(void *)&v11[v12[20]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, (uint64_t)v12);
  uint64_t v3 = v145;
LABEL_17:
  uint64_t v99 = *(int *)(v3 + 24);
  uint64_t v100 = &v5[v99];
  uint64_t v101 = &v4[v99];
  uint64_t v102 = type metadata accessor for Date();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v102 - 8) + 24))(v100, v101, v102);
  uint64_t v103 = v12[5];
  uint64_t v104 = &v100[v103];
  uint64_t v105 = &v101[v103];
  *uint64_t v104 = *v105;
  v104[1] = v105[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v106 = v12[6];
  uint64_t v107 = &v100[v106];
  uint64_t v108 = &v101[v106];
  *uint64_t v107 = *v108;
  v107[1] = v108[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v109 = v12[7];
  uint64_t v110 = &v100[v109];
  uint64_t v111 = &v101[v109];
  uint64_t v112 = type metadata accessor for TimeZone();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v112 - 8) + 24))(v110, v111, v112);
  uint64_t v113 = v12[8];
  uint64_t v114 = &v100[v113];
  os_log_type_t v115 = &v101[v113];
  uint64_t v116 = sub_10017DF08(&qword_100E65250);
  uint64_t v117 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v116 - 8) + 24);
  v117(v114, v115, v116);
  v117(&v100[v12[9]], &v101[v12[9]], v116);
  uint64_t v118 = v12[10];
  uint64_t v119 = &v100[v118];
  uint64_t v120 = &v101[v118];
  *uint64_t v119 = *v120;
  v119[1] = v120[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v121 = v12[11];
  uint64_t v122 = &v100[v121];
  uint64_t v123 = &v101[v121];
  *uint64_t v122 = *v123;
  v122[1] = v123[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v100[v12[12]] = *(void *)&v101[v12[12]];
  v100[v12[13]] = v101[v12[13]];
  uint64_t v124 = v12[14];
  uint64_t v125 = &v100[v124];
  unsigned int v126 = &v101[v124];
  *uint64_t v125 = *v126;
  v125[1] = v126[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v127 = v12[15];
  os_log_type_t v128 = &v100[v127];
  uint64_t v129 = &v101[v127];
  uint64_t v130 = type metadata accessor for Precipitation();
  LODWORD(v114) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v128, 1, v130);
  int v131 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v129, 1, v130);
  if (!v114)
  {
    uint64_t v132 = *(void *)(v130 - 8);
    if (!v131)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v132 + 24))(v128, v129, v130);
      goto LABEL_23;
    }
    (*(void (**)(unsigned char *, uint64_t))(v132 + 8))(v128, v130);
    goto LABEL_22;
  }
  if (v131)
  {
LABEL_22:
    uint64_t v133 = sub_10017DF08(&qword_100E6B8C8);
    memcpy(v128, v129, *(void *)(*(void *)(v133 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v130 - 8) + 16))(v128, v129, v130);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v128, 0, 1, v130);
LABEL_23:
  v100[v12[16]] = v101[v12[16]];
  uint64_t v134 = v12[17];
  uint64_t v135 = &v100[v134];
  uint64_t v136 = &v101[v134];
  *uint64_t v135 = *v136;
  v135[1] = v136[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v137 = v12[18];
  uint64_t v138 = &v100[v137];
  uint64_t v139 = &v101[v137];
  *uint64_t v138 = *v139;
  v138[1] = v139[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v140 = v12[19];
  char v141 = &v100[v140];
  uint64_t v142 = &v101[v140];
  *char v141 = *v142;
  v141[1] = v142[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v100[v12[20]] = *(void *)&v101[v12[20]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_10030076C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *sub_1003007C8(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = *(void *)&a2[v6 + 8];
  void *v7 = *(void *)&a2[v6];
  v7[1] = v9;
  uint64_t v10 = *(int *)(sub_10017DF08(&qword_100E6B8C0) + 32);
  uint64_t v11 = (char *)v7 + v10;
  uint64_t v12 = &v8[v10];
  int v13 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, (uint64_t)v13))
  {
    uint64_t v14 = sub_10017DF08(&qword_100E6B8D0);
    memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    uint64_t v15 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v11, v12, v15);
    *(_OWORD *)&v11[v13[5]] = *(_OWORD *)&v12[v13[5]];
    *(_OWORD *)&v11[v13[6]] = *(_OWORD *)&v12[v13[6]];
    uint64_t v16 = v13[7];
    uint64_t v17 = &v11[v16];
    uint64_t v18 = &v12[v16];
    uint64_t v19 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
    uint64_t v20 = v13[8];
    uint64_t v21 = &v11[v20];
    uint64_t v22 = &v12[v20];
    uint64_t v23 = sub_10017DF08(&qword_100E65250);
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32);
    v24(v21, v22, v23);
    v24(&v11[v13[9]], &v12[v13[9]], v23);
    *(_OWORD *)&v11[v13[10]] = *(_OWORD *)&v12[v13[10]];
    *(_OWORD *)&v11[v13[11]] = *(_OWORD *)&v12[v13[11]];
    *(void *)&v11[v13[12]] = *(void *)&v12[v13[12]];
    v11[v13[13]] = v12[v13[13]];
    *(_OWORD *)&v11[v13[14]] = *(_OWORD *)&v12[v13[14]];
    uint64_t v25 = v13[15];
    uint64_t v26 = &v11[v25];
    uint64_t v27 = &v12[v25];
    uint64_t v28 = type metadata accessor for Precipitation();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28))
    {
      uint64_t v29 = sub_10017DF08(&qword_100E6B8C8);
      memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
    }
    v11[v13[16]] = v12[v13[16]];
    *(_OWORD *)&v11[v13[17]] = *(_OWORD *)&v12[v13[17]];
    *(_OWORD *)&v11[v13[18]] = *(_OWORD *)&v12[v13[18]];
    *(_OWORD *)&v11[v13[19]] = *(_OWORD *)&v12[v13[19]];
    *(void *)&v11[v13[20]] = *(void *)&v12[v13[20]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, (uint64_t)v13);
  }
  uint64_t v30 = *(int *)(a3 + 24);
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v33 = type metadata accessor for Date();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
  *(_OWORD *)&v31[v13[5]] = *(_OWORD *)&v32[v13[5]];
  *(_OWORD *)&v31[v13[6]] = *(_OWORD *)&v32[v13[6]];
  uint64_t v34 = v13[7];
  uint64_t v35 = &v31[v34];
  uint64_t v36 = &v32[v34];
  uint64_t v37 = type metadata accessor for TimeZone();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
  uint64_t v38 = v13[8];
  uint64_t v39 = &v31[v38];
  uint64_t v40 = &v32[v38];
  uint64_t v41 = sub_10017DF08(&qword_100E65250);
  uint64_t v42 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v41 - 8) + 32);
  v42(v39, v40, v41);
  v42(&v31[v13[9]], &v32[v13[9]], v41);
  *(_OWORD *)&v31[v13[10]] = *(_OWORD *)&v32[v13[10]];
  *(_OWORD *)&v31[v13[11]] = *(_OWORD *)&v32[v13[11]];
  *(void *)&v31[v13[12]] = *(void *)&v32[v13[12]];
  v31[v13[13]] = v32[v13[13]];
  *(_OWORD *)&v31[v13[14]] = *(_OWORD *)&v32[v13[14]];
  uint64_t v43 = v13[15];
  uint64_t v44 = &v31[v43];
  uint64_t v45 = &v32[v43];
  uint64_t v46 = type metadata accessor for Precipitation();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v46))
  {
    uint64_t v47 = sub_10017DF08(&qword_100E6B8C8);
    memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v46);
  }
  v31[v13[16]] = v32[v13[16]];
  *(_OWORD *)&v31[v13[17]] = *(_OWORD *)&v32[v13[17]];
  *(_OWORD *)&v31[v13[18]] = *(_OWORD *)&v32[v13[18]];
  *(_OWORD *)&v31[v13[19]] = *(_OWORD *)&v32[v13[19]];
  *(void *)&v31[v13[20]] = *(void *)&v32[v13[20]];
  return a1;
}

unsigned char *sub_100300D10(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  *(void *)&a1[v6] = *(void *)&a2[v6];
  swift_release();
  *((void *)v7 + 1) = *((void *)v8 + 1);
  swift_release();
  uint64_t v9 = *(int *)(sub_10017DF08(&qword_100E6B8C0) + 32);
  uint64_t v10 = &v7[v9];
  uint64_t v11 = &v8[v9];
  uint64_t v12 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, (uint64_t)v12);
  int v14 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, (uint64_t)v12);
  if (!v13)
  {
    if (v14)
    {
      sub_10030076C((uint64_t)v10);
      goto LABEL_7;
    }
    uint64_t v31 = type metadata accessor for Date();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v31 - 8) + 40))(v10, v11, v31);
    uint64_t v32 = v12[5];
    uint64_t v33 = &v10[v32];
    uint64_t v34 = (uint64_t *)&v11[v32];
    uint64_t v36 = *v34;
    uint64_t v35 = v34[1];
    *uint64_t v33 = v36;
    v33[1] = v35;
    swift_bridgeObjectRelease();
    uint64_t v37 = v12[6];
    uint64_t v38 = &v10[v37];
    uint64_t v39 = (uint64_t *)&v11[v37];
    uint64_t v41 = *v39;
    uint64_t v40 = v39[1];
    *uint64_t v38 = v41;
    v38[1] = v40;
    swift_bridgeObjectRelease();
    uint64_t v42 = v12[7];
    uint64_t v43 = &v10[v42];
    uint64_t v44 = &v11[v42];
    uint64_t v45 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 40))(v43, v44, v45);
    uint64_t v46 = v12[8];
    uint64_t v47 = &v10[v46];
    uint64_t v48 = &v11[v46];
    uint64_t v49 = sub_10017DF08(&qword_100E65250);
    uint64_t v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 40);
    v50(v47, v48, v49);
    v50(&v10[v12[9]], &v11[v12[9]], v49);
    uint64_t v51 = v12[10];
    uint64_t v52 = &v10[v51];
    uint64_t v53 = (uint64_t *)&v11[v51];
    uint64_t v55 = *v53;
    uint64_t v54 = v53[1];
    *uint64_t v52 = v55;
    v52[1] = v54;
    swift_bridgeObjectRelease();
    uint64_t v56 = v12[11];
    uint64_t v57 = &v10[v56];
    uint64_t v58 = (uint64_t *)&v11[v56];
    uint64_t v60 = *v58;
    uint64_t v59 = v58[1];
    *uint64_t v57 = v60;
    v57[1] = v59;
    swift_bridgeObjectRelease();
    *(void *)&v10[v12[12]] = *(void *)&v11[v12[12]];
    v10[v12[13]] = v11[v12[13]];
    uint64_t v61 = v12[14];
    uint64_t v62 = &v10[v61];
    uint64_t v63 = (uint64_t *)&v11[v61];
    uint64_t v65 = *v63;
    uint64_t v64 = v63[1];
    *uint64_t v62 = v65;
    v62[1] = v64;
    swift_bridgeObjectRelease();
    uint64_t v66 = v12[15];
    uint64_t v67 = &v10[v66];
    uint64_t v68 = &v11[v66];
    uint64_t v69 = type metadata accessor for Precipitation();
    LODWORD(v50) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v67, 1, v69);
    int v70 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v68, 1, v69);
    if (v50)
    {
      if (!v70)
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 32))(v67, v68, v69);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v67, 0, 1, v69);
LABEL_16:
        v10[v12[16]] = v11[v12[16]];
        uint64_t v73 = v12[17];
        uint64_t v74 = &v10[v73];
        uint64_t v75 = (uint64_t *)&v11[v73];
        uint64_t v77 = *v75;
        uint64_t v76 = v75[1];
        *uint64_t v74 = v77;
        v74[1] = v76;
        swift_bridgeObjectRelease();
        uint64_t v78 = v12[18];
        uint64_t v79 = &v10[v78];
        uint64_t v80 = (uint64_t *)&v11[v78];
        uint64_t v82 = *v80;
        uint64_t v81 = v80[1];
        *uint64_t v79 = v82;
        v79[1] = v81;
        swift_bridgeObjectRelease();
        uint64_t v83 = v12[19];
        uint64_t v84 = &v10[v83];
        uint64_t v85 = (uint64_t *)&v11[v83];
        uint64_t v87 = *v85;
        uint64_t v86 = v85[1];
        *uint64_t v84 = v87;
        v84[1] = v86;
        swift_bridgeObjectRelease();
        *(void *)&v10[v12[20]] = *(void *)&v11[v12[20]];
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v71 = *(void *)(v69 - 8);
      if (!v70)
      {
        (*(void (**)(char *, char *, uint64_t))(v71 + 40))(v67, v68, v69);
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v71 + 8))(v67, v69);
    }
    uint64_t v72 = sub_10017DF08(&qword_100E6B8C8);
    memcpy(v67, v68, *(void *)(*(void *)(v72 - 8) + 64));
    goto LABEL_16;
  }
  if (v14)
  {
LABEL_7:
    uint64_t v30 = sub_10017DF08(&qword_100E6B8D0);
    memcpy(v10, v11, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_17;
  }
  uint64_t v149 = v3;
  uint64_t v15 = type metadata accessor for Date();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 32))(v10, v11, v15);
  *(_OWORD *)&v10[v12[5]] = *(_OWORD *)&v11[v12[5]];
  *(_OWORD *)&v10[v12[6]] = *(_OWORD *)&v11[v12[6]];
  uint64_t v16 = v12[7];
  uint64_t v17 = &v10[v16];
  uint64_t v18 = &v11[v16];
  uint64_t v19 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  uint64_t v20 = v12[8];
  uint64_t v21 = &v10[v20];
  uint64_t v22 = &v11[v20];
  uint64_t v23 = sub_10017DF08(&qword_100E65250);
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32);
  v24(v21, v22, v23);
  v24(&v10[v12[9]], &v11[v12[9]], v23);
  *(_OWORD *)&v10[v12[10]] = *(_OWORD *)&v11[v12[10]];
  *(_OWORD *)&v10[v12[11]] = *(_OWORD *)&v11[v12[11]];
  *(void *)&v10[v12[12]] = *(void *)&v11[v12[12]];
  v10[v12[13]] = v11[v12[13]];
  *(_OWORD *)&v10[v12[14]] = *(_OWORD *)&v11[v12[14]];
  uint64_t v25 = v12[15];
  uint64_t v26 = &v10[v25];
  uint64_t v27 = &v11[v25];
  uint64_t v28 = type metadata accessor for Precipitation();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28))
  {
    uint64_t v29 = sub_10017DF08(&qword_100E6B8C8);
    memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
  }
  uint64_t v3 = v149;
  v10[v12[16]] = v11[v12[16]];
  *(_OWORD *)&v10[v12[17]] = *(_OWORD *)&v11[v12[17]];
  *(_OWORD *)&v10[v12[18]] = *(_OWORD *)&v11[v12[18]];
  *(_OWORD *)&v10[v12[19]] = *(_OWORD *)&v11[v12[19]];
  *(void *)&v10[v12[20]] = *(void *)&v11[v12[20]];
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, (uint64_t)v12);
LABEL_17:
  uint64_t v88 = *(int *)(v3 + 24);
  uint64_t v89 = &a1[v88];
  uint64_t v90 = &a2[v88];
  uint64_t v91 = type metadata accessor for Date();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v91 - 8) + 40))(v89, v90, v91);
  uint64_t v92 = v12[5];
  uint64_t v93 = &v89[v92];
  os_log_type_t v94 = (uint64_t *)&v90[v92];
  uint64_t v96 = *v94;
  uint64_t v95 = v94[1];
  void *v93 = v96;
  v93[1] = v95;
  swift_bridgeObjectRelease();
  uint64_t v97 = v12[6];
  uint64_t v98 = &v89[v97];
  uint64_t v99 = (uint64_t *)&v90[v97];
  uint64_t v101 = *v99;
  uint64_t v100 = v99[1];
  *uint64_t v98 = v101;
  v98[1] = v100;
  swift_bridgeObjectRelease();
  uint64_t v102 = v12[7];
  uint64_t v103 = &v89[v102];
  uint64_t v104 = &v90[v102];
  uint64_t v105 = type metadata accessor for TimeZone();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v105 - 8) + 40))(v103, v104, v105);
  uint64_t v106 = v12[8];
  uint64_t v107 = &v89[v106];
  uint64_t v108 = &v90[v106];
  uint64_t v109 = sub_10017DF08(&qword_100E65250);
  uint64_t v110 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v109 - 8) + 40);
  v110(v107, v108, v109);
  v110(&v89[v12[9]], &v90[v12[9]], v109);
  uint64_t v111 = v12[10];
  uint64_t v112 = &v89[v111];
  uint64_t v113 = (uint64_t *)&v90[v111];
  uint64_t v115 = *v113;
  uint64_t v114 = v113[1];
  *uint64_t v112 = v115;
  v112[1] = v114;
  swift_bridgeObjectRelease();
  uint64_t v116 = v12[11];
  uint64_t v117 = &v89[v116];
  uint64_t v118 = (uint64_t *)&v90[v116];
  uint64_t v120 = *v118;
  uint64_t v119 = v118[1];
  void *v117 = v120;
  v117[1] = v119;
  swift_bridgeObjectRelease();
  *(void *)&v89[v12[12]] = *(void *)&v90[v12[12]];
  v89[v12[13]] = v90[v12[13]];
  uint64_t v121 = v12[14];
  uint64_t v122 = &v89[v121];
  uint64_t v123 = (uint64_t *)&v90[v121];
  uint64_t v125 = *v123;
  uint64_t v124 = v123[1];
  *uint64_t v122 = v125;
  v122[1] = v124;
  swift_bridgeObjectRelease();
  uint64_t v126 = v12[15];
  uint64_t v127 = &v89[v126];
  os_log_type_t v128 = &v90[v126];
  uint64_t v129 = type metadata accessor for Precipitation();
  LODWORD(v110) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v127, 1, v129);
  int v130 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v128, 1, v129);
  if (!v110)
  {
    uint64_t v131 = *(void *)(v129 - 8);
    if (!v130)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v131 + 40))(v127, v128, v129);
      goto LABEL_23;
    }
    (*(void (**)(unsigned char *, uint64_t))(v131 + 8))(v127, v129);
    goto LABEL_22;
  }
  if (v130)
  {
LABEL_22:
    uint64_t v132 = sub_10017DF08(&qword_100E6B8C8);
    memcpy(v127, v128, *(void *)(*(void *)(v132 - 8) + 64));
    goto LABEL_23;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v129 - 8) + 32))(v127, v128, v129);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v127, 0, 1, v129);
LABEL_23:
  v89[v12[16]] = v90[v12[16]];
  uint64_t v133 = v12[17];
  uint64_t v134 = &v89[v133];
  uint64_t v135 = (uint64_t *)&v90[v133];
  uint64_t v137 = *v135;
  uint64_t v136 = v135[1];
  *uint64_t v134 = v137;
  v134[1] = v136;
  swift_bridgeObjectRelease();
  uint64_t v138 = v12[18];
  uint64_t v139 = &v89[v138];
  uint64_t v140 = (uint64_t *)&v90[v138];
  uint64_t v142 = *v140;
  uint64_t v141 = v140[1];
  *uint64_t v139 = v142;
  v139[1] = v141;
  swift_bridgeObjectRelease();
  uint64_t v143 = v12[19];
  uint64_t v144 = &v89[v143];
  uint64_t v145 = (uint64_t *)&v90[v143];
  uint64_t v147 = *v145;
  uint64_t v146 = v145[1];
  *uint64_t v144 = v147;
  v144[1] = v146;
  swift_bridgeObjectRelease();
  *(void *)&v89[v12[20]] = *(void *)&v90[v12[20]];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1003016D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003016E8);
}

uint64_t sub_1003016E8(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_10017DF08(&qword_100E6B8C0);
    sub_100162F30();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v12 = v10;
      uint64_t v13 = *(int *)(a3 + 20);
    }
    else
    {
      uint64_t v12 = type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
      uint64_t v13 = *(int *)(a3 + 24);
    }
    return _s7Weather24LocationCompositionStateOwet_0((uint64_t)&a1[v13], a2, v12);
  }
}

uint64_t sub_100301798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003017AC);
}

unsigned char *sub_1003017AC(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *unint64_t result = a2 + 1;
  }
  else
  {
    sub_10017DF08(&qword_100E6B8C0);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 20);
    }
    else
    {
      uint64_t v10 = type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
      uint64_t v11 = *(int *)(a4 + 24);
    }
    return (unsigned char *)_s7Weather24LocationCompositionStateOwst_0((uint64_t)&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t sub_100301854()
{
  uint64_t v0 = type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  __chkstk_darwin(v0);
  uint64_t v22 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10017DF08(&qword_100E6B9A0);
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  BOOL v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E6B8D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v21 - v10;
  __chkstk_darwin(v12);
  int v14 = (char *)&v21 - v13;
  type metadata accessor for DailyForecastRowViewButtonStyle();
  sub_10017DF08(&qword_100E6B8C0);
  Binding.wrappedValue.getter();
  sub_100302BF8();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v0);
  uint64_t v15 = (uint64_t)&v5[*(int *)(v3 + 56)];
  sub_10006DF38((uint64_t)v14, (uint64_t)v5, &qword_100E6B8D0);
  sub_10006DF38((uint64_t)v11, v15, &qword_100E6B8D0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v5, 1, v0) == 1)
  {
    sub_100178110((uint64_t)v11, &qword_100E6B8D0);
    sub_100178110((uint64_t)v14, &qword_100E6B8D0);
    int v16 = _s7Weather24LocationCompositionStateOwet_0(v15, 1, v0);
    if (v16 == 1) {
      uint64_t v17 = &qword_100E6B8D0;
    }
    else {
      uint64_t v17 = &qword_100E6B9A0;
    }
    if (v16 == 1) {
      char v18 = -1;
    }
    else {
      char v18 = 0;
    }
  }
  else
  {
    sub_10006DF38((uint64_t)v5, (uint64_t)v8, &qword_100E6B8D0);
    if (_s7Weather24LocationCompositionStateOwet_0(v15, 1, v0) == 1)
    {
      sub_100178110((uint64_t)v11, &qword_100E6B8D0);
      sub_100178110((uint64_t)v14, &qword_100E6B8D0);
      sub_10030076C((uint64_t)v8);
      char v18 = 0;
      uint64_t v17 = &qword_100E6B9A0;
    }
    else
    {
      uint64_t v19 = (uint64_t)v22;
      sub_100302C84();
      char v18 = sub_1001444F4((uint64_t)v8, v19);
      sub_10030076C(v19);
      uint64_t v17 = &qword_100E6B8D0;
      sub_100178110((uint64_t)v11, &qword_100E6B8D0);
      sub_100178110((uint64_t)v14, &qword_100E6B8D0);
      sub_10030076C((uint64_t)v8);
    }
  }
  sub_100178110((uint64_t)v5, v17);
  return v18 & 1;
}

uint64_t sub_100301B7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a1;
  uint64_t v51 = a2;
  uint64_t v50 = type metadata accessor for PrimitiveButtonStyleConfiguration();
  sub_100179C0C();
  uint64_t v48 = v3;
  uint64_t v49 = *(void *)(v4 + 64);
  __chkstk_darwin(v5);
  uint64_t v47 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DailyForecastRowViewButtonStyle();
  uint64_t v8 = sub_100164920(v7);
  uint64_t v45 = v9;
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v8);
  uint64_t v46 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v42 = (char *)&v40 - v13;
  uint64_t v14 = type metadata accessor for PrimitiveButtonStyleConfiguration.Label();
  sub_100179C0C();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10017DF08(&qword_100E6B978);
  uint64_t v43 = v20;
  sub_100162880();
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  PrimitiveButtonStyleConfiguration.label.getter();
  uint64_t v40 = v2;
  char v24 = *v2;
  char v25 = sub_100301854();
  uint64_t v26 = static Alignment.center.getter();
  uint64_t v28 = v27;
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  uint64_t v44 = v23;
  v29(v23, v19, v14);
  uint64_t v30 = &v23[*(int *)(v20 + 36)];
  *uint64_t v30 = v24;
  v30[1] = v25 & 1;
  *(_OWORD *)(v30 + 8) = xmmword_100C315B0;
  *((void *)v30 + 3) = v26;
  *((void *)v30 + 4) = v28;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v14);
  sub_100302BF8();
  uint64_t v31 = ((*(unsigned __int8 *)(v45 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80)) + v11;
  swift_allocObject();
  sub_100302C84();
  sub_100302BF8();
  uint64_t v33 = v47;
  uint64_t v32 = v48;
  uint64_t v34 = v50;
  (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v47, v41, v50);
  uint64_t v35 = v32;
  unint64_t v36 = (v31 + *(unsigned __int8 *)(v32 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  uint64_t v37 = swift_allocObject();
  sub_100302C84();
  (*(void (**)(unint64_t, char *, uint64_t))(v35 + 32))(v37 + v36, v33, v34);
  sub_10022F36C();
  uint64_t v38 = (uint64_t)v44;
  View._onButtonGesture(pressing:perform:)();
  swift_release();
  swift_release();
  return sub_100178110(v38, &qword_100E6B978);
}

uint64_t sub_100301F28(char a1)
{
  uint64_t v2 = type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  __chkstk_darwin(v2);
  uint64_t v31 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100E6B9A0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E6B8D0);
  __chkstk_darwin(v7 - 8);
  uint64_t v32 = (uint64_t)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v30 - v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v30 - v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v30 - v16;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)v30 - v19;
  type metadata accessor for DailyForecastRowViewButtonStyle();
  if (a1)
  {
    sub_100302BF8();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v2);
    sub_10006DF38((uint64_t)v20, (uint64_t)v17, &qword_100E6B8D0);
    sub_10017DF08(&qword_100E6B8C0);
LABEL_11:
    Binding.wrappedValue.setter();
    uint64_t v25 = (uint64_t)v20;
    char v24 = &qword_100E6B8D0;
    return sub_100178110(v25, v24);
  }
  v30[1] = sub_10017DF08(&qword_100E6B8C0);
  Binding.wrappedValue.getter();
  sub_100302BF8();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v2);
  uint64_t v21 = (uint64_t)&v6[*(int *)(v4 + 48)];
  sub_10006DF38((uint64_t)v14, (uint64_t)v6, &qword_100E6B8D0);
  sub_10006DF38((uint64_t)v11, v21, &qword_100E6B8D0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v2) == 1)
  {
    sub_100178110((uint64_t)v11, &qword_100E6B8D0);
    sub_100178110((uint64_t)v14, &qword_100E6B8D0);
    if (_s7Weather24LocationCompositionStateOwet_0(v21, 1, v2) == 1)
    {
      uint64_t v22 = (uint64_t)v17;
      sub_100178110((uint64_t)v6, &qword_100E6B8D0);
LABEL_10:
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 1, 1, v2);
      sub_10006DF38((uint64_t)v20, v22, &qword_100E6B8D0);
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v23 = v32;
    sub_10006DF38((uint64_t)v6, v32, &qword_100E6B8D0);
    if (_s7Weather24LocationCompositionStateOwet_0(v21, 1, v2) != 1)
    {
      uint64_t v22 = (uint64_t)v17;
      uint64_t v26 = (uint64_t)v31;
      sub_100302C84();
      uint64_t v27 = v23;
      char v28 = sub_1001444F4(v23, v26);
      sub_10030076C(v26);
      sub_100178110((uint64_t)v11, &qword_100E6B8D0);
      sub_100178110((uint64_t)v14, &qword_100E6B8D0);
      sub_10030076C(v27);
      uint64_t result = sub_100178110((uint64_t)v6, &qword_100E6B8D0);
      if ((v28 & 1) == 0) {
        return result;
      }
      goto LABEL_10;
    }
    sub_100178110((uint64_t)v11, &qword_100E6B8D0);
    sub_100178110((uint64_t)v14, &qword_100E6B8D0);
    sub_10030076C(v23);
  }
  char v24 = &qword_100E6B9A0;
  uint64_t v25 = (uint64_t)v6;
  return sub_100178110(v25, v24);
}

void sub_100302370()
{
  uint64_t v0 = type metadata accessor for DailyForecastRowViewButtonStyle();
  __chkstk_darwin(v0);
  uint64_t v1 = sub_10017DF08(&qword_100E6B8D0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)aBlock - v5;
  sub_100302BF8();
  uint64_t v7 = type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 0, 1, v7);
  sub_10006DF38((uint64_t)v6, (uint64_t)v3, &qword_100E6B8D0);
  sub_10017DF08(&qword_100E6B8C0);
  Binding.wrappedValue.setter();
  sub_100178110((uint64_t)v6, &qword_100E6B8D0);
  PrimitiveButtonStyleConfiguration.trigger()();
  uint64_t v8 = self;
  sub_100302BF8();
  uint64_t v9 = swift_allocObject();
  sub_100302C84();
  aBlock[4] = sub_100302C44;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10010A4D4;
  aBlock[3] = &unk_100E10AD0;
  uint64_t v10 = _Block_copy(aBlock);
  swift_release();
  [v8 setCompletionBlock:v10];
  _Block_release(v10);
}

uint64_t sub_100302610()
{
  uint64_t v0 = sub_10017DF08(&qword_100E6B8D0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v8 - v4;
  uint64_t v6 = type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 1, 1, v6);
  type metadata accessor for DailyForecastRowViewButtonStyle();
  sub_10006DF38((uint64_t)v5, (uint64_t)v2, &qword_100E6B8D0);
  sub_10017DF08(&qword_100E6B8C0);
  Binding.wrappedValue.setter();
  return sub_100178110((uint64_t)v5, &qword_100E6B8D0);
}

uint64_t sub_100302710(char a1)
{
  uint64_t v2 = type metadata accessor for DailyForecastRowViewButtonStyle();
  sub_1001627C0(v2);

  return sub_100301F28(a1);
}

uint64_t sub_100302760()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DailyForecastRowViewButtonStyle();
  sub_100179EF0();
  uint64_t v35 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v33 = *(void *)(v4 + 64);
  uint64_t v36 = type metadata accessor for PrimitiveButtonStyleConfiguration();
  sub_100179C0C();
  uint64_t v6 = v5;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v34 = (v35 + 16) & ~v35;
  uint64_t v8 = v0 + v34;
  uint64_t v9 = v0 + v34 + *(int *)(v2 + 20);
  swift_release();
  swift_release();
  uint64_t v10 = v9 + *(int *)(sub_10017DF08(&qword_100E6B8C0) + 32);
  uint64_t v11 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v10, 1, (uint64_t)v11))
  {
    uint64_t v32 = v0;
    type metadata accessor for Date();
    sub_100162E4C();
    sub_100162F0C();
    v12();
    sub_1001631C0();
    sub_1001631C0();
    type metadata accessor for TimeZone();
    sub_100162E4C();
    sub_100162F0C();
    v13();
    uint64_t v14 = v10 + v11[8];
    uint64_t v15 = sub_10017DF08(&qword_100E65250);
    sub_100162E4C();
    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
    v17(v14, v15);
    v17(v10 + v11[9], v15);
    sub_1001631C0();
    sub_1001631C0();
    sub_1001631C0();
    uint64_t v18 = v10 + v11[15];
    uint64_t v19 = type metadata accessor for Precipitation();
    if (!_s7Weather24LocationCompositionStateOwet_0(v18, 1, v19))
    {
      sub_100162880();
      (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v18, v19);
    }
    sub_1001631C0();
    sub_1001631C0();
    sub_1001631C0();
    swift_bridgeObjectRelease();
    uint64_t v1 = v32;
  }
  uint64_t v21 = v8 + *(int *)(v2 + 24);
  type metadata accessor for Date();
  sub_100162E4C();
  sub_100162F0C();
  v22();
  sub_1001631A8();
  sub_1001631A8();
  type metadata accessor for TimeZone();
  sub_100162E4C();
  sub_100162F0C();
  v23();
  uint64_t v24 = v21 + v11[8];
  uint64_t v25 = sub_10017DF08(&qword_100E65250);
  sub_100162E4C();
  uint64_t v27 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
  v27(v24, v25);
  v27(v21 + v11[9], v25);
  sub_1001631A8();
  sub_1001631A8();
  sub_1001631A8();
  uint64_t v28 = v21 + v11[15];
  uint64_t v29 = type metadata accessor for Precipitation();
  if (!sub_1001810A0(v29))
  {
    sub_100162880();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v25);
  }
  sub_1001631A8();
  sub_1001631A8();
  sub_1001631A8();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1 + ((v34 + v33 + v7) & ~v7), v36);

  return swift_deallocObject();
}

void sub_100302B70()
{
  uint64_t v0 = type metadata accessor for DailyForecastRowViewButtonStyle();
  sub_100164920(v0);
  uint64_t v1 = type metadata accessor for PrimitiveButtonStyleConfiguration();
  sub_1001627C0(v1);

  sub_100302370();
}

uint64_t sub_100302BF8()
{
  uint64_t v1 = sub_10019FC1C();
  v2(v1);
  sub_100162E4C();
  uint64_t v3 = sub_10011BFA4();
  v4(v3);
  return v0;
}

uint64_t sub_100302C44()
{
  uint64_t v0 = type metadata accessor for DailyForecastRowViewButtonStyle();
  sub_1001627C0(v0);

  return sub_100302610();
}

uint64_t sub_100302C84()
{
  uint64_t v2 = sub_10019FC1C();
  v3(v2);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v0, v1);
  return v0;
}

uint64_t sub_100302CD8@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a2;
  int v42 = a1;
  LODWORD(v43) = (a1 & 0x100) == 0;
  uint64_t v46 = type metadata accessor for BlendMode();
  uint64_t v2 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v45 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Color.RGBColorSpace();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E6B9A8);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v44 = type metadata accessor for RoundedCornersShape();
  uint64_t v41 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100E6B9B0);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v40 = (uint64_t)&v40 - v19;
  uint64_t v20 = sub_10017DF08(&qword_100E6B9B8);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v22 = static HorizontalAlignment.center.getter();
  *((void *)v22 + 1) = 0;
  v22[16] = 1;
  RoundedCornersShape.init(corners:radius:)();
  uint64_t v43 = &v22[*(int *)(sub_10017DF08(&qword_100E6B9C0) + 44)];
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Color.RGBColorSpace.sRGB(_:), v4);
  uint64_t v23 = Color.init(_:white:opacity:)();
  uint64_t v24 = v45;
  uint64_t v25 = v46;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v45, enum case for BlendMode.plusLighter(_:), v46);
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))((char *)v11 + *(int *)(v9 + 44), v24, v25);
  *uint64_t v11 = v23;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v24, v25);
  uint64_t v26 = v41;
  uint64_t v27 = v44;
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v17, v13, v44);
  sub_10006DF38((uint64_t)v11, (uint64_t)&v17[*(int *)(v15 + 60)], &qword_100E6B9A8);
  *(_WORD *)&v17[*(int *)(v15 + 64)] = 256;
  sub_100178110((uint64_t)v11, &qword_100E6B9A8);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v13, v27);
  uint64_t v28 = v40;
  sub_1003032BC((uint64_t)v17, v40);
  sub_1003032BC(v28, (uint64_t)v43);
  LOBYTE(v28) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v37 = v47;
  sub_10006DF38((uint64_t)v22, v47, &qword_100E6B9B8);
  uint64_t v38 = v37 + *(int *)(sub_10017DF08(&qword_100E6B9C8) + 36);
  *(unsigned char *)uint64_t v38 = v28;
  *(void *)(v38 + 8) = v30;
  *(void *)(v38 + 16) = v32;
  *(void *)(v38 + 24) = v34;
  *(void *)(v38 + 32) = v36;
  *(unsigned char *)(v38 + 40) = 0;
  return sub_100178110((uint64_t)v22, &qword_100E6B9B8);
}

uint64_t sub_1003031B0@<X0>(uint64_t a1@<X8>)
{
  if (v1[1]) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return sub_100302CD8(v2 | *v1, a1);
}

uint64_t getEnumTagSinglePayload for DailyComponentForecastRowBackgroundView(unsigned __int8 *a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && a1[24])
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *a1;
      BOOL v4 = v3 >= 2;
      int v2 = (v3 + 2147483646) & 0x7FFFFFFF;
      if (!v4) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DailyComponentForecastRowBackgroundView(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_100303260()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1003032BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6B9B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100303328()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7Weather27PagingContentOffsetsStorage__offsets;
  uint64_t v2 = sub_10017DF08(&qword_100E6BAD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1003033CC()
{
  return type metadata accessor for PagingContentOffsetsStorage();
}

uint64_t getEnumTagSinglePayload for PagingContentOffsets(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PagingContentOffsets(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 41) = v3;
  return result;
}

uint64_t sub_10030342C(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 16))
  {
    if (!*(unsigned char *)(a2 + 16)) {
      return 0;
    }
  }
  else
  {
    if (*(unsigned char *)(a2 + 16)) {
      return 0;
    }
    if (*(double *)a1 != *(double *)a2 || *(double *)(a1 + 8) != *(double *)(a2 + 8)) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 40))
  {
    if ((*(unsigned char *)(a2 + 40) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*(unsigned char *)(a2 + 40)) {
      return 0;
    }
    if (*(double *)(a1 + 24) != *(double *)(a2 + 24) || *(double *)(a1 + 32) != *(double *)(a2 + 32)) {
      return 0;
    }
  }
  return 1;
}

uint64_t sub_1003036A4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for NotificationsOptInAction();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  sub_100166440(a1, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for NotificationsOptInAction);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v1;
  sub_100164CA0((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6, (void (*)(void))type metadata accessor for NotificationsOptInAction);
  swift_retain();
  asyncMain(block:)();
  return swift_release();
}

void sub_1003037DC(uint64_t a1, void (*a2)(void))
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100162EB8();
  unint64_t v6 = *(uint64_t (**)(uint64_t))(a1 + 16);
  if (v6)
  {
    a2(0);
    sub_100189D7C();
    swift_storeEnumTagMultiPayload();
    type metadata accessor for ViewAction();
    sub_100189D7C();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v8 = 0;
    memset(v7, 0, sizeof(v7));
    swift_retain();
    sub_1001AAF58(v2, (uint64_t)v7, v6);
    sub_100178160((uint64_t)v7, (uint64_t *)&unk_100EA01F0);
    sub_100158A74(v2, (void (*)(void))type metadata accessor for MainAction);
    sub_1001361AC((uint64_t)v6);
  }
}

void sub_1003038F8(uint64_t a1, char a2)
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100162EB8();
  unint64_t v6 = *(uint64_t (**)(uint64_t))(a1 + 16);
  if (v6)
  {
    *uint64_t v2 = a2;
    type metadata accessor for ModalViewAction();
    sub_100189D7C();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v8 = 0;
    memset(v7, 0, sizeof(v7));
    swift_retain();
    sub_1001AAF58((uint64_t)v2, (uint64_t)v7, v6);
    sub_100178160((uint64_t)v7, (uint64_t *)&unk_100EA01F0);
    sub_100158A74((uint64_t)v2, (void (*)(void))type metadata accessor for MainAction);
    sub_1001361AC((uint64_t)v6);
  }
}

uint64_t sub_1003039FC()
{
  uint64_t v0 = type metadata accessor for NotificationsOptInAction();
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_storeEnumTagMultiPayload();
  sub_1003036A4((uint64_t)v2);
  return sub_100158A74((uint64_t)v2, (void (*)(void))type metadata accessor for NotificationsOptInAction);
}

uint64_t sub_100303AAC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for MainAction();
  uint64_t result = __chkstk_darwin(v4);
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v8 = (char *)v10 - v7;
  uint64_t v9 = *(uint64_t (**)(uint64_t))(a1 + 16);
  if (v9)
  {
    sub_100166440(a2, (uint64_t)v10 - v7, (void (*)(void))type metadata accessor for NotificationsOptInAction);
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = 0;
    memset(v10, 0, sizeof(v10));
    swift_retain();
    sub_1001AAF58((uint64_t)v8, (uint64_t)v10, v9);
    sub_100178160((uint64_t)v10, (uint64_t *)&unk_100EA01F0);
    sub_100158A74((uint64_t)v8, (void (*)(void))type metadata accessor for MainAction);
    return sub_1001361AC((uint64_t)v9);
  }
  return result;
}

uint64_t sub_100303BD0(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for MainAction();
  uint64_t result = __chkstk_darwin(v4);
  unint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(uint64_t (**)(uint64_t))(a1 + 16);
  if (v8)
  {
    unsigned char *v7 = a2;
    type metadata accessor for NotificationsOptInAction();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = 0;
    memset(v9, 0, sizeof(v9));
    swift_retain();
    sub_1001AAF58((uint64_t)v7, (uint64_t)v9, v8);
    sub_100178160((uint64_t)v9, (uint64_t *)&unk_100EA01F0);
    sub_100158A74((uint64_t)v7, (void (*)(void))type metadata accessor for MainAction);
    return sub_1001361AC((uint64_t)v8);
  }
  return result;
}

uint64_t sub_100303CF0()
{
  sub_1001361AC(*(void *)(v0 + 16));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 32);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 72);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 112);
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_100303D38()
{
  sub_100303CF0();

  return swift_deallocClassInstance();
}

uint64_t sub_100303D6C(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xE) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100303D80()
{
  return sub_1003039FC();
}

void sub_100303D9C()
{
  sub_1003038F8(v0, 2);
}

void sub_100303DBC()
{
  sub_1003038F8(v0, 1);
}

void sub_100303DDC()
{
  sub_1003037DC(v0, (void (*)(void))type metadata accessor for LocationViewerViewAction);
}

void sub_100303E10()
{
  sub_1003037DC(v0, (void (*)(void))type metadata accessor for ListViewAction);
}

uint64_t sub_100303E44()
{
  type metadata accessor for NotificationsOptInAction();
  swift_release();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 4)
  {
    type metadata accessor for Date();
LABEL_6:
    sub_100162E4C();
    uint64_t v1 = sub_100162728();
    v2(v1);
    goto LABEL_8;
  }
  if (EnumCaseMultiPayload != 3)
  {
    if (EnumCaseMultiPayload != 2) {
      goto LABEL_8;
    }
    type metadata accessor for Location();
    goto LABEL_6;
  }
  swift_bridgeObjectRelease();
LABEL_8:

  return swift_deallocObject();
}

uint64_t sub_100303F58()
{
  uint64_t v1 = *(void *)(type metadata accessor for NotificationsOptInAction() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_100303AAC(v2, v3);
}

uint64_t sub_100303FBC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100303FF4()
{
  return sub_100303BD0(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

void *sub_100304000(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    uint64_t v6 = _swiftEmptyArrayStorage;
    do
    {
      if (*(void *)(a2 + 16))
      {
        sub_100246CDC(*(unsigned __int8 *)(a1 + v5 + 32));
        if (v7)
        {
          swift_retain();
          UVIndex.ExposureCategory.rangeValue.getter();
          uint64_t v8 = Gradient.Stop.init(color:location:)();
          uint64_t v10 = v9;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1007E9824();
            uint64_t v6 = v13;
          }
          unint64_t v11 = v6[2];
          if (v11 >= v6[3] >> 1)
          {
            sub_1007E9824();
            uint64_t v6 = v14;
          }
          v6[2] = v11 + 1;
          uint64_t v12 = &v6[2 * v11];
          void v12[4] = v8;
          v12[5] = v10;
        }
      }
      ++v5;
    }
    while (v3 != v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v6;
}

uint64_t sub_100304160@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1003043B0(a1, (uint64_t (*)(void))&type metadata accessor for DetailChartDataElement, a2);
}

uint64_t sub_100304178@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100146624(a1, type metadata accessor for ConditionDetailLegend, (void (*)(void))type metadata accessor for ConditionDetailLegend, a2);
}

uint64_t sub_1003041A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1003043B0(a1, (uint64_t (*)(void))&type metadata accessor for HourWeather, a2);
}

uint64_t sub_1003041BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100146624(a1, type metadata accessor for DayPickerViewModel.CalendarDayViewModel, (void (*)(void))type metadata accessor for DayPickerViewModel.CalendarDayViewModel, a2);
}

uint64_t sub_1003041E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100146624(a1, type metadata accessor for ScrubberDay, (void (*)(void))type metadata accessor for ScrubberDay, a2);
}

uint64_t sub_100304214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100146624(a1, type metadata accessor for ScrubberHour, (void (*)(void))type metadata accessor for ScrubberHour, a2);
}

uint64_t sub_100304240(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1) {
    return *(void *)(a1 + 8 * v1 + 24);
  }
  else {
    return 0;
  }
}

uint64_t sub_100304264@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100146624(a1, type metadata accessor for ComparisonCapsuleViewModel.Row, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row, a2);
}

uint64_t sub_100304290@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v4 = (uint64_t *)(result + 40 * v3);
    uint64_t v6 = *(v4 - 1);
    uint64_t v5 = *v4;
    char v7 = (void *)v4[1];
    uint64_t v8 = v4[2];
    uint64_t v9 = v4[3];
    swift_bridgeObjectRetain();
    id v10 = v7;
    uint64_t result = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
    char v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  *a2 = v6;
  a2[1] = v5;
  a2[2] = v7;
  a2[3] = v8;
  a2[4] = v9;
  return result;
}

uint64_t sub_100304314(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = *(void *)(a1 + 32 * v1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_100304380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1003043B0(a1, (uint64_t (*)(void))&type metadata accessor for PrecipitationTotalPlatterViewModel.SectionModel, a2);
}

uint64_t sub_100304398@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1003043B0(a1, (uint64_t (*)(void))&type metadata accessor for PrecipitationTotalPlatterViewModel.RowModel, a2);
}

uint64_t sub_1003043B0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  if (*(void *)(a1 + 16))
  {
    uint64_t v4 = a2(0);
    sub_100162E4C();
    sub_10008B8B4();
    v5();
    uint64_t v6 = a3;
    uint64_t v7 = 0;
    uint64_t v8 = 1;
    uint64_t v9 = v4;
  }
  else
  {
    a2(0);
    uint64_t v6 = sub_100162E38();
  }

  return _s7Weather24LocationCompositionStateOwst_0(v6, v7, v8, v9);
}

id sub_100304468()
{
  id result = sub_100304488();
  qword_100F512E8 = (uint64_t)result;
  return result;
}

id sub_100304488()
{
  uint64_t v0 = type metadata accessor for Locale();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [objc_allocWithZone((Class)NSDateFormatter) init];
  static Locale.autoupdatingCurrent.getter();
  Class isa = Locale._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  [v4 setLocale:isa];

  NSString v6 = String._bridgeToObjectiveC()();
  [v4 setLocalizedDateFormatFromTemplate:v6];

  [v4 setTimeStyle:1];
  return v4;
}

uint64_t sub_1003045D4()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t sub_1003046AC()
{
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  type metadata accessor for DetailChartViewModelFactory.FormattedHoursCacheKey(0);

  return static TimeZone.== infix(_:_:)();
}

Swift::Int sub_10030470C()
{
  return Hasher._finalize()();
}

uint64_t sub_1003047F4()
{
  type metadata accessor for DetailChartCondition();
  sub_100313918(&qword_100E63988, (void (*)(uint64_t))&type metadata accessor for DetailChartCondition);
  dispatch thunk of Hashable.hash(into:)();
  uint64_t v1 = type metadata accessor for DetailChartViewModelFactory.MarkerLabelCacheKey(0);
  uint64_t v2 = v1;
  if ((*(void *)(v0 + *(int *)(v1 + 20)) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = *(void *)(v0 + *(int *)(v1 + 20));
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  Hasher._combine(_:)(v3);
  Hasher._combine(_:)(*(unsigned char *)(v0 + *(int *)(v2 + 24)));
  type metadata accessor for ConditionUnits();
  sub_100313918(&qword_100E6BF90, (void (*)(uint64_t))&type metadata accessor for ConditionUnits);
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t sub_1003048F8(uint64_t a1, uint64_t a2)
{
  if ((sub_100889C5C(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for DetailChartViewModelFactory.MarkerLabelCacheKey(0);
  if (*(double *)(a1 + *(int *)(v4 + 20)) != *(double *)(a2 + *(int *)(v4 + 20))
    || *(unsigned __int8 *)(a1 + *(int *)(v4 + 24)) != *(unsigned __int8 *)(a2 + *(int *)(v4 + 24)))
  {
    return 0;
  }

  return static ConditionUnits.== infix(_:_:)();
}

Swift::Int sub_100304988()
{
  return Hasher._finalize()();
}

Swift::Int sub_100304A74()
{
  return sub_100305230((void (*)(unsigned char *))sub_1003047F4);
}

Swift::Int sub_100304AA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003052C0(a1, a2, a3, (void (*)(unsigned char *))sub_1003047F4);
}

void sub_100304AC0()
{
  uint64_t v1 = type metadata accessor for ExtremaResult();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E6BCB0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DetailChartCondition();
  sub_100313918(&qword_100E63988, (void (*)(uint64_t))&type metadata accessor for DetailChartCondition);
  dispatch thunk of Hashable.hash(into:)();
  uint64_t v8 = (int *)type metadata accessor for DetailChartViewModelFactory.PeakMarkerRequestContext(0);
  Hasher._combine(_:)(*(unsigned char *)(v0 + v8[5]));
  sub_1001B7204(v0 + v8[6], (uint64_t)v7, &qword_100E6BCB0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v1) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    Hasher._combine(_:)(1u);
    sub_100313918(&qword_100E6BF88, (void (*)(uint64_t))&type metadata accessor for ExtremaResult);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  type metadata accessor for ConditionUnits();
  sub_100313918(&qword_100E6BF90, (void (*)(uint64_t))&type metadata accessor for ConditionUnits);
  dispatch thunk of Hashable.hash(into:)();
  Hasher._combine(_:)(*(unsigned char *)(v0 + v8[8]));
  Hasher._combine(_:)(*(unsigned char *)(v0 + v8[9]));
  if (*(void *)(v0 + v8[10]))
  {
    Hasher._combine(_:)(1u);
    swift_retain();
    Color.hash(into:)();
    swift_release();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
}

uint64_t sub_100304DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ExtremaResult();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E6BF98);
  __chkstk_darwin(v8);
  id v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E6BCB0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v37 - v15;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v37 - v18;
  if ((sub_100889C5C(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v20 = type metadata accessor for DetailChartViewModelFactory.PeakMarkerRequestContext(0);
  if (*(unsigned __int8 *)(a1 + *(int *)(v20 + 20)) != *(unsigned __int8 *)(a2 + *(int *)(v20 + 20))) {
    return 0;
  }
  uint64_t v40 = v5;
  uint64_t v21 = *(int *)(v20 + 24);
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  uint64_t v24 = v20;
  uint64_t v38 = v22;
  sub_1001B7204(v22 + v21, (uint64_t)v19, &qword_100E6BCB0);
  uint64_t v39 = (int *)v24;
  uint64_t v25 = *(int *)(v24 + 24);
  uint64_t v26 = v23;
  sub_1001B7204(v23 + v25, (uint64_t)v16, &qword_100E6BCB0);
  uint64_t v27 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1001B7204((uint64_t)v19, (uint64_t)v10, &qword_100E6BCB0);
  sub_1001B7204((uint64_t)v16, v27, &qword_100E6BCB0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v4) != 1)
  {
    sub_1001B7204((uint64_t)v10, (uint64_t)v13, &qword_100E6BCB0);
    if (_s7Weather24LocationCompositionStateOwet_0(v27, 1, v4) != 1)
    {
      uint64_t v28 = v40;
      (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v7, v27, v4);
      sub_100313918(&qword_100E6BFA0, (void (*)(uint64_t))&type metadata accessor for ExtremaResult);
      char v29 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v30 = *(void (**)(char *, uint64_t))(v28 + 8);
      v30(v7, v4);
      sub_100178110((uint64_t)v16, &qword_100E6BCB0);
      sub_100178110((uint64_t)v19, &qword_100E6BCB0);
      v30(v13, v4);
      sub_100178110((uint64_t)v10, &qword_100E6BCB0);
      if ((v29 & 1) == 0) {
        return 0;
      }
      goto LABEL_10;
    }
    sub_100178110((uint64_t)v16, &qword_100E6BCB0);
    sub_100178110((uint64_t)v19, &qword_100E6BCB0);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v13, v4);
LABEL_8:
    sub_100178110((uint64_t)v10, &qword_100E6BF98);
    return 0;
  }
  sub_100178110((uint64_t)v16, &qword_100E6BCB0);
  sub_100178110((uint64_t)v19, &qword_100E6BCB0);
  if (_s7Weather24LocationCompositionStateOwet_0(v27, 1, v4) != 1) {
    goto LABEL_8;
  }
  sub_100178110((uint64_t)v10, &qword_100E6BCB0);
LABEL_10:
  uint64_t v32 = v38;
  uint64_t v31 = v39;
  if ((static ConditionUnits.== infix(_:_:)() & 1) == 0
    || *(unsigned __int8 *)(v32 + v31[8]) != *(unsigned __int8 *)(v26 + v31[8])
    || *(unsigned __int8 *)(v32 + v31[9]) != *(unsigned __int8 *)(v26 + v31[9]))
  {
    return 0;
  }
  uint64_t v34 = v31[10];
  uint64_t v35 = *(void *)(v26 + v34);
  if (*(void *)(v32 + v34))
  {
    if (v35)
    {
      swift_retain();
      swift_retain();
      char v36 = static Color.== infix(_:_:)();
      swift_release();
      swift_release();
      if (v36) {
        return 1;
      }
    }
  }
  else if (!v35)
  {
    return 1;
  }
  return 0;
}

Swift::Int sub_100305230(void (*a1)(unsigned char *))
{
  Hasher.init(_seed:)();
  a1(v3);
  return Hasher._finalize()();
}

Swift::Int sub_100305278()
{
  return sub_100305230((void (*)(unsigned char *))sub_100304AC0);
}

Swift::Int sub_1003052A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1003052C0(a1, a2, a3, (void (*)(unsigned char *))sub_100304AC0);
}

Swift::Int sub_1003052C0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  Hasher.init(_seed:)();
  a4(v6);
  return Hasher._finalize()();
}

void *sub_100305308(long long *a1, long long *a2, long long *a3)
{
  v3[17] = 6;
  sub_10017DF08(&qword_100E6BEA8);
  swift_allocObject();
  v3[18] = Cache.init()();
  sub_10017DF08(&qword_100E6BEB0);
  swift_allocObject();
  v3[19] = Cache.init()();
  sub_10017DF08(&qword_100E6BEB8);
  swift_allocObject();
  v3[20] = Cache.init()();
  sub_1001262E4(a1, (uint64_t)(v3 + 2));
  sub_1001262E4(a2, (uint64_t)(v3 + 7));
  sub_1001262E4(a3, (uint64_t)(v3 + 12));
  return v3;
}

uint64_t sub_1003053E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t x4_0@<X4>, char a6@<W5>, int a7@<W6>, void *a8@<X8>, double a9@<D0>, double a10@<D1>)
{
  LODWORD(v1595) = a7;
  v1574 = (void *)x4_0;
  uint64_t v1519 = a3;
  uint64_t v1490 = a2;
  v1552 = a8;
  LODWORD(v1565) = a6 & 1;
  uint64_t v15 = sub_10017DF08(&qword_100E6BCB0);
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_100109314();
  uint64_t v1460 = v17;
  sub_100129064();
  uint64_t v18 = type metadata accessor for DetailChartDataElement.ValueLabel();
  uint64_t v19 = sub_100109308(v18);
  __chkstk_darwin(v19);
  sub_100109314();
  v1444 = v20;
  sub_100129064();
  type metadata accessor for HourWeather.SecondValueUseCase();
  sub_100179C0C();
  uint64_t v1442 = v22;
  uint64_t v1443 = v21;
  __chkstk_darwin(v21);
  sub_100109314();
  uint64_t v1441 = v23;
  sub_100129064();
  type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v1439 = v25;
  uint64_t v1440 = v24;
  __chkstk_darwin(v24);
  sub_100109314();
  uint64_t v1438 = v26;
  sub_100129064();
  type metadata accessor for CurrentWeather();
  sub_100179C0C();
  v1436 = v28;
  v1639._object = v27;
  __chkstk_darwin(v27);
  sub_100109314();
  uint64_t v1437 = v29;
  uint64_t v30 = sub_10017DF08(&qword_100E6B6C8);
  uint64_t v31 = sub_100109308(v30);
  __chkstk_darwin(v31);
  sub_100109314();
  v1633._object = v32;
  sub_100129064();
  type metadata accessor for WeatherValueCalculationContext();
  sub_100179C0C();
  *((void *)&v1434 + 1) = v34;
  v1435 = v33;
  __chkstk_darwin(v33);
  sub_100109314();
  uint64_t v1447 = v35;
  sub_100129064();
  uint64_t v1471 = type metadata accessor for Calendar.Component();
  sub_100179C0C();
  uint64_t v1456 = v36;
  __chkstk_darwin(v37);
  sub_100109314();
  uint64_t v1470 = v38;
  uint64_t v39 = sub_10017DF08(&qword_100E6BEC0);
  uint64_t v40 = sub_100109308(v39);
  __chkstk_darwin(v40);
  sub_100109314();
  uint64_t v1451 = v41;
  uint64_t v1455 = type metadata accessor for HourWeather();
  sub_100179C0C();
  uint64_t v1457 = v42;
  __chkstk_darwin(v43);
  sub_100162EF8();
  uint64_t v1452 = v44;
  sub_1001626D4();
  __chkstk_darwin(v45);
  sub_100109770();
  uint64_t v1445 = v46;
  sub_1001626D4();
  __chkstk_darwin(v47);
  sub_100128F8C();
  uint64_t v1454 = v48;
  sub_100129064();
  v1497 = (void (*)(void))type metadata accessor for DetailChartDataElement();
  sub_100179C0C();
  uint64_t v1499 = v49;
  __chkstk_darwin(v50);
  sub_100162EF8();
  uint64_t v1446 = v51;
  sub_1001626D4();
  __chkstk_darwin(v52);
  sub_100109770();
  *(void *)&long long v1434 = v53;
  sub_1001626D4();
  __chkstk_darwin(v54);
  sub_100109770();
  uint64_t v1453 = v55;
  sub_1001626D4();
  __chkstk_darwin(v56);
  sub_100128F8C();
  uint64_t v1459 = v57;
  uint64_t v58 = sub_10017DF08(&qword_100E6BEC8);
  uint64_t v59 = sub_100109308(v58);
  __chkstk_darwin(v59);
  sub_100109314();
  uint64_t v1512 = v60;
  uint64_t v1510 = sub_10017DF08(&qword_100E6BED0);
  sub_100179C0C();
  uint64_t v1509 = v61;
  __chkstk_darwin(v62);
  sub_100162EF8();
  uint64_t v1507 = v63;
  sub_1001626D4();
  __chkstk_darwin(v64);
  sub_100128F8C();
  uint64_t v1508 = v65;
  uint64_t v66 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v67 = sub_100109308(v66);
  __chkstk_darwin(v67);
  sub_100162EF8();
  uint64_t v1461 = v68;
  sub_1001626D4();
  __chkstk_darwin(v69);
  sub_100109770();
  uint64_t v1465 = v70;
  sub_1001626D4();
  __chkstk_darwin(v71);
  sub_100109770();
  uint64_t v1464 = v72;
  sub_1001626D4();
  __chkstk_darwin(v73);
  sub_100109770();
  uint64_t v1501 = v74;
  sub_1001626D4();
  __chkstk_darwin(v75);
  sub_100109770();
  uint64_t v1496 = v76;
  sub_1001626D4();
  __chkstk_darwin(v77);
  sub_100128F8C();
  uint64_t v1495 = v78;
  sub_100129064();
  *(void *)&long long v1528 = type metadata accessor for Color.RGBColorSpace();
  sub_100179C0C();
  *(void *)&long long v1527 = v79;
  __chkstk_darwin(v80);
  sub_100109314();
  uint64_t v1529 = v81;
  sub_100129064();
  uint64_t v1549 = type metadata accessor for ChartPastDataTreatment();
  sub_100179C0C();
  uint64_t v1550 = v82;
  __chkstk_darwin(v83);
  sub_100109314();
  uint64_t v1559 = v84;
  uint64_t v85 = sub_100129064();
  uint64_t v86 = type metadata accessor for ChartViewModel.Background(v85);
  uint64_t v87 = sub_100109308(v86);
  __chkstk_darwin(v87);
  sub_100109314();
  uint64_t v1551 = v88;
  sub_100129064();
  uint64_t v1567 = type metadata accessor for ConditionUnits();
  sub_100179C0C();
  uint64_t v1566 = v89;
  __chkstk_darwin(v90);
  uint64_t v1547 = v91;
  v1556 = (char *)&v1629._object - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_100129064();
  uint64_t v93 = type metadata accessor for ConditionDetailChartDataInput(v92);
  sub_100179C0C();
  uint64_t v1545 = v94;
  __chkstk_darwin(v95);
  uint64_t v1546 = v96;
  uint64_t v1548 = (uint64_t)&v1629._object - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100129064();
  uint64_t v1539 = type metadata accessor for ChartViewModelInterpolationMode();
  sub_100179C0C();
  uint64_t v1540 = v97;
  __chkstk_darwin(v98);
  sub_100109314();
  uint64_t v1584 = v99;
  sub_100129064();
  uint64_t v1543 = type metadata accessor for ChartPeakMarkStyle();
  sub_100179C0C();
  uint64_t v1544 = v100;
  __chkstk_darwin(v101);
  sub_100109314();
  v1561 = v102;
  sub_100129064();
  uint64_t v103 = type metadata accessor for ChartDateStep();
  uint64_t v104 = sub_100109308(v103);
  __chkstk_darwin(v104);
  sub_100162EF8();
  v1522 = v105;
  sub_1001626D4();
  __chkstk_darwin(v106);
  sub_100109770();
  v1514 = v107;
  sub_1001626D4();
  __chkstk_darwin(v108);
  sub_100128F8C();
  v1573 = v109;
  sub_100129064();
  uint64_t v1553 = type metadata accessor for ChartKind();
  sub_100179C0C();
  v1554 = v110;
  __chkstk_darwin(v111);
  sub_100162EF8();
  *(void *)&long long v1526 = v112;
  sub_1001626D4();
  __chkstk_darwin(v113);
  sub_100109770();
  uint64_t v1513 = v114;
  sub_1001626D4();
  __chkstk_darwin(v115);
  sub_100128F8C();
  uint64_t v1532 = v116;
  uint64_t v117 = sub_10017DF08(&qword_100E6BED8);
  uint64_t v118 = sub_100109308(v117);
  __chkstk_darwin(v118);
  sub_100109314();
  uint64_t v1535 = v119;
  sub_100129064();
  uint64_t v1538 = type metadata accessor for ChartLineColor();
  sub_100179C0C();
  uint64_t v1533 = v120;
  __chkstk_darwin(v121);
  sub_100109314();
  v1534 = v122;
  sub_100129064();
  uint64_t v1581 = type metadata accessor for ChartLineStyle();
  sub_100179C0C();
  uint64_t v1582 = v123;
  __chkstk_darwin(v124);
  sub_100162EF8();
  uint64_t v1475 = v125;
  sub_1001626D4();
  __chkstk_darwin(v126);
  sub_100109770();
  v1466 = v127;
  sub_1001626D4();
  __chkstk_darwin(v128);
  sub_100109770();
  uint64_t v1531 = v129;
  sub_1001626D4();
  __chkstk_darwin(v130);
  sub_100109770();
  uint64_t v1483 = v131;
  sub_1001626D4();
  __chkstk_darwin(v132);
  sub_100109770();
  uint64_t v1484 = v133;
  sub_1001626D4();
  __chkstk_darwin(v134);
  sub_100128F8C();
  uint64_t v1570 = v135;
  sub_100129064();
  uint64_t v136 = type metadata accessor for TemperatureScaleConfiguration.Gradient();
  uint64_t v137 = sub_100109308(v136);
  __chkstk_darwin(v137);
  sub_100109314();
  uint64_t v1488 = v138;
  sub_100129064();
  uint64_t v1596 = type metadata accessor for DetailChartGradientModel();
  sub_100179C0C();
  uint64_t v1590 = v139;
  __chkstk_darwin(v140);
  sub_100162EF8();
  uint64_t v1474 = v141;
  sub_1001626D4();
  __chkstk_darwin(v142);
  sub_100109770();
  *(void *)&long long v1525 = v143;
  sub_1001626D4();
  __chkstk_darwin(v144);
  sub_100109770();
  uint64_t v1511 = v145;
  sub_1001626D4();
  __chkstk_darwin(v146);
  sub_100109770();
  uint64_t v1478 = v147;
  sub_1001626D4();
  __chkstk_darwin(v148);
  sub_100109770();
  uint64_t v1481 = v149;
  sub_1001626D4();
  __chkstk_darwin(v150);
  sub_100109770();
  v1530 = (uint64_t *)v151;
  sub_1001626D4();
  __chkstk_darwin(v152);
  sub_100128F8C();
  uint64_t v1578 = v153;
  uint64_t v154 = sub_100129064();
  uint64_t v1489 = type metadata accessor for DetailChartViewModelFactory.PeakMarkerRequestContext(v154);
  sub_100162E4C();
  __chkstk_darwin(v155);
  sub_100162EF8();
  uint64_t v1473 = v156;
  sub_1001626D4();
  __chkstk_darwin(v157);
  sub_100109770();
  v1477 = (void (*)(uint64_t *, uint64_t, uint64_t))v158;
  sub_1001626D4();
  __chkstk_darwin(v159);
  sub_100128F8C();
  uint64_t v1500 = v160;
  sub_100129064();
  uint64_t v1518 = type metadata accessor for FloatingPointRoundingRule();
  sub_100179C0C();
  uint64_t v1517 = v161;
  __chkstk_darwin(v162);
  sub_100109314();
  uint64_t v1516 = v163;
  sub_100129064();
  type metadata accessor for AppConfiguration();
  sub_100179C0C();
  uint64_t v1486 = v165;
  uint64_t v1487 = v164;
  __chkstk_darwin(v164);
  sub_100109314();
  uint64_t v1485 = v166;
  sub_100129064();
  type metadata accessor for TemperatureScaleConfiguration();
  sub_100179C0C();
  uint64_t v1479 = v168;
  uint64_t v1480 = v167;
  __chkstk_darwin(v167);
  sub_100162EF8();
  uint64_t v1482 = v169;
  sub_1001626D4();
  __chkstk_darwin(v170);
  sub_100128F8C();
  uint64_t v1498 = v171;
  sub_100129064();
  v1594 = (void *)type metadata accessor for DetailChartCondition();
  sub_100179C0C();
  uint64_t v1591 = v172;
  __chkstk_darwin(v173);
  sub_100162EF8();
  uint64_t v1563 = v174;
  sub_1001626D4();
  __chkstk_darwin(v175);
  sub_100128F8C();
  uint64_t v1555 = v176;
  sub_100129064();
  uint64_t v1599 = type metadata accessor for ChartDarkeningScrim();
  sub_100179C0C();
  uint64_t v1583 = v177;
  __chkstk_darwin(v178);
  sub_100162EF8();
  uint64_t v1521 = v179;
  sub_1001626D4();
  __chkstk_darwin(v180);
  sub_100109770();
  uint64_t v1506 = v181;
  sub_1001626D4();
  __chkstk_darwin(v182);
  sub_100109770();
  uint64_t v1579 = v183;
  sub_1001626D4();
  __chkstk_darwin(v184);
  sub_100128F8C();
  uint64_t v1598 = v185;
  sub_100129064();
  uint64_t v1586 = type metadata accessor for ChartLineStrokeStyle();
  sub_100179C0C();
  uint64_t v1585 = v186;
  __chkstk_darwin(v187);
  sub_100162EF8();
  v1469 = v188;
  sub_1001626D4();
  __chkstk_darwin(v189);
  sub_100109770();
  uint64_t v1537 = v190;
  sub_1001626D4();
  __chkstk_darwin(v191);
  sub_100128F8C();
  uint64_t v1597 = v192;
  uint64_t v193 = sub_10017DF08(&qword_100E6B640);
  uint64_t v194 = sub_100109308(v193);
  __chkstk_darwin(v194);
  sub_100162EF8();
  uint64_t v1458 = v195;
  sub_1001626D4();
  __chkstk_darwin(v196);
  sub_100109770();
  uint64_t v1463 = v197;
  sub_1001626D4();
  __chkstk_darwin(v198);
  sub_100109770();
  uint64_t v1462 = v199;
  sub_1001626D4();
  __chkstk_darwin(v200);
  sub_100109770();
  uint64_t v1520 = v201;
  sub_1001626D4();
  __chkstk_darwin(v202);
  sub_100109770();
  uint64_t v1494 = v203;
  sub_1001626D4();
  __chkstk_darwin(v204);
  sub_100109770();
  uint64_t v1492 = v205;
  sub_1001626D4();
  __chkstk_darwin(v206);
  sub_100109770();
  uint64_t v1505 = v207;
  sub_1001626D4();
  __chkstk_darwin(v208);
  sub_100109770();
  uint64_t v1491 = v209;
  sub_1001626D4();
  __chkstk_darwin(v210);
  sub_100109770();
  uint64_t v1572 = v211;
  sub_1001626D4();
  __chkstk_darwin(v212);
  uint64_t v214 = (char *)&v1629._object - v213;
  uint64_t v1588 = type metadata accessor for DetailChartExtrema();
  sub_100179C0C();
  uint64_t v1589 = v215;
  __chkstk_darwin(v216);
  sub_100162EF8();
  uint64_t v1524 = v217;
  sub_1001626D4();
  __chkstk_darwin(v218);
  sub_100109770();
  uint64_t v1504 = v219;
  sub_1001626D4();
  __chkstk_darwin(v220);
  sub_100109770();
  *(void *)&long long v1580 = v221;
  sub_1001626D4();
  __chkstk_darwin(v222);
  uint64_t v224 = (char *)&v1629._object - v223;
  uint64_t v1568 = type metadata accessor for Calendar();
  sub_100179C0C();
  uint64_t v1569 = v225;
  __chkstk_darwin(v226);
  sub_100162EF8();
  uint64_t v1493 = v227;
  sub_1001626D4();
  __chkstk_darwin(v228);
  uint64_t v230 = (char *)&v1629._object - v229;
  type metadata accessor for Date();
  sub_100179C0C();
  __chkstk_darwin(v231);
  sub_100162EF8();
  uint64_t v1468 = v232;
  sub_1001626D4();
  __chkstk_darwin(v233);
  sub_100109770();
  uint64_t v1467 = v234;
  sub_1001626D4();
  __chkstk_darwin(v235);
  sub_100109770();
  uint64_t v1448 = v236;
  sub_1001626D4();
  __chkstk_darwin(v237);
  sub_100109770();
  uint64_t v1472 = v238;
  sub_1001626D4();
  __chkstk_darwin(v239);
  sub_100109770();
  uint64_t v1476 = v240;
  sub_1001626D4();
  __chkstk_darwin(v241);
  sub_100109770();
  v1523 = v242;
  sub_1001626D4();
  __chkstk_darwin(v243);
  sub_100109770();
  *((void *)&v1502 + 1) = v244;
  sub_1001626D4();
  __chkstk_darwin(v245);
  sub_100109770();
  *(void *)&long long v1502 = v246;
  sub_1001626D4();
  __chkstk_darwin(v247);
  sub_100109770();
  uint64_t v1503 = v248;
  sub_1001626D4();
  __chkstk_darwin(v249);
  sub_100109770();
  uint64_t v1577 = v250;
  sub_1001626D4();
  __chkstk_darwin(v251);
  v253 = (char *)&v1629._object - v252;
  uint64_t v1571 = v254;
  uint64_t v255 = *(void (**)(void))(v254 + 16);
  v1593 = (_OWORD *)v256;
  uint64_t v1558 = v254 + 16;
  v1557 = v255;
  ((void (*)(char *, uint64_t))v255)((char *)&v1629._object - v252, a1);
  uint64_t v257 = a1 + *(int *)(v93 + 40);
  v1560 = v230;
  uint64_t v1450 = v257;
  static Calendar.currentCalendar(with:)();
  uint64_t v1626 = 0;
  char v1627 = 1;
  uint64_t v1624 = 0;
  char v1625 = 1;
  uint64_t v1622 = 0;
  char v1623 = 1;
  uint64_t v1620 = 0;
  char v1621 = 1;
  uint64_t v1618 = 0;
  char v1619 = 1;
  uint64_t v1616 = 0;
  char v1617 = 1;
  uint64_t v258 = a1;
  uint64_t v1449 = *(int *)(v93 + 44);
  uint64_t v259 = *(void *)(a1 + v1449);
  v1601 = v10;
  uint64_t v1602 = a1;
  uint64_t v1603 = a4;
  double v1604 = a9;
  double v1605 = a10;
  char v1606 = (char)v1595;
  v1607 = &v1626;
  v1608 = &v1624;
  v1609 = &v1622;
  v1610 = &v1620;
  v1611 = &v1618;
  v1612 = (void **)&v1616;
  swift_bridgeObjectRetain();
  sub_100A96224((uint64_t)sub_1003139A8, (uint64_t)&v1600, v259, (uint64_t)v1615, v260, v261, v262, v263);
  v1595 = (void *)v264;
  v1536 = 0;
  swift_bridgeObjectRelease();
  LOBYTE(v1433) = v1617;
  uint64_t v1432 = v1616;
  LOBYTE(v1429) = v1619;
  uint64_t v1426 = v1618;
  v1587 = v224;
  DetailChartExtrema.init(minValue:maxValue:minSecondValue:maxSecondValue:minThirdValue:maxThirdValue:)();
  v1592 = v214;
  v1515 = v10;
  uint64_t v1576 = a4;
  v1562 = v253;
  sub_10030D264(a1, (uint64_t)v1574, (int)v1565, v10, a4, (uint64_t)v253, (uint64_t)v214);
  sub_10030D804(a1, v1597);
  uint64_t v1613 = 0;
  sub_100313918(&qword_100E6BEE0, (void (*)(uint64_t))&type metadata accessor for ChartDarkeningScrim);
  dispatch thunk of OptionSet.init(rawValue:)();
  uint64_t v265 = *(int *)(v93 + 36);
  if (!*(unsigned char *)(a1 + v265))
  {
    uint64_t v266 = v1579;
    static ChartDarkeningScrim.dimmingEffect.getter();
    sub_100A60928();
    (*(void (**)(uint64_t, uint64_t))(v1583 + 8))(v266, v1599);
  }
  id v1565 = self;
  id v267 = [v1565 mainBundle];
  sub_1001631D8();
  sub_100184948();
  v268._uint64_t countAndFlagsBits = 1701669204;
  v268._object = (void *)0xE400000000000000;
  Swift::String v272 = NSLocalizedString(_:tableName:bundle:value:comment:)(v269, v270, v271, v268, v1629);
  uint64_t countAndFlagsBits = v272._countAndFlagsBits;
  object = v272._object;

  uint64_t v273 = a1 + *(int *)(v93 + 24);
  uint64_t v274 = v1591;
  uint64_t v275 = *(void (**)(void))(v1591 + 16);
  uint64_t v276 = v1555;
  uint64_t v277 = (uint64_t)v1594;
  uint64_t v1564 = v1591 + 16;
  sub_100162808();
  ((void (*)(uint64_t, uint64_t))v275)(v278, v279);
  uint64_t v280 = (*(uint64_t (**)(uint64_t, uint64_t))(v274 + 88))(v276, v277);
  uint64_t v281 = &OBJC_INSTANCE_METHODS__TtC7Weather27LocalSearchCompleterManager;
  uint64_t v282 = &unk_100C31000;
  uint64_t v1575 = v93;
  v1574 = (void *)v273;
  if (v280 == enum case for DetailChartCondition.humidity(_:))
  {
    sub_10017DF08(&qword_100E6BEE8);
    uint64_t v283 = swift_allocObject();
    *(_OWORD *)(v283 + 16) = xmmword_100C31870;
    static Color.green.getter();
    uint64_t v284 = Gradient.Stop.init(color:location:)();
    sub_10018C838(v284, v285);
    static Color.cyan.getter();
    *(void *)(v283 + 48) = Gradient.Stop.init(color:location:)();
    *(void *)(v283 + 56) = v286;
    static Color.blue.getter();
    *(void *)(v283 + 64) = Gradient.Stop.init(color:location:)();
    *(void *)(v283 + 72) = v287;
    sub_1001631E8();
    v296(v288, v289, v290, v291, v292, v293, v294, v295, *((void *)&v1434 + 1));
    Color.init(_:red:green:blue:opacity:)();
    *(void *)(v283 + 80) = Gradient.Stop.init(color:location:)();
    *(void *)(v283 + 88) = v297;
    Gradient.init(stops:)();
    sub_1001097C0();
    uint64_t v298 = v1578;
    DetailChartGradientModel.init(gradient:startValue:endValue:)();
    sub_1001A87BC();
    sub_100162808();
    v299();
    if (qword_100E62450 != -1) {
      swift_once();
    }
    sub_100188FC0();
    sub_10058C7C4();
    uint64_t v300 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v1590 + 16);
    uint64_t v301 = v1596;
    v300(v1534, v298, v1596);
    sub_10018B478();
    sub_1001631E8();
    v302();
    v300(v1530, v298, v301);
    sub_1001523B4();
    uint64_t v303 = type metadata accessor for ChartAreaStyle();
    sub_100182F60(v303);
    sub_10017DF08(&qword_100E6BEF0);
    uint64_t v304 = sub_10016288C();
    *(_OWORD *)(v304 + 16) = xmmword_100C25ED0;
    *(_OWORD *)(v304 + 32) = xmmword_100C31860;
    sub_1001649B4();
    sub_1001D24FC();
    sub_100162808();
    v275();
    uint64_t v1564 = DetailChartCondition.id.getter();
    uint64_t v1555 = v305;
    sub_100162F0C();
    v306();
    uint64_t v307 = sub_10017DF08(&qword_100E6BEF8);
    uint64_t v308 = v1532;
    int64_t v309 = v1532 + *(int *)(v307 + 48);
    uint64_t v310 = v1581;
    sub_100162808();
    v311();
    sub_1001A1548(v308);
    sub_10018B2DC();
    sub_1001631E8();
    v312();
    uint64_t v313 = (uint64_t)v1593;
    sub_100162808();
    v314();
    sub_100162808();
    v315();
    sub_10018295C();
    sub_10030D9E0(3, v309, 6, v310);
    v1594 = (void *)v316;
    uint64_t v317 = sub_10017DF08(&qword_100E6BF00);
    uint64_t v318 = (uint64_t)v1573 + *(int *)(v317 + 48);
    void *v1573 = 6;
    _s7Weather24LocationCompositionStateOwst_0(v318, 1, 1, v313);
    uint64_t v319 = v1583;
    sub_100162808();
    uint64_t v321 = v320();
    sub_100183458(v321, v322, &qword_100E6B640);
    uint64_t v323 = sub_1001D1808();
    v324(v323);
    uint64_t v1591 = DetailChartCondition.title.getter();
    uint64_t v1575 = v325;
    id v326 = v1565;
    id v327 = [v1565 mainBundle];
    sub_1001631D8();
    v1574 = (void *)sub_100189D88(v328, 0x8000000100C9A060);
    uint64_t v1563 = v329;

    id v330 = [v326 mainBundle:v1633._object v1436 v1639._object v1437 v1438 v1439 v1440];
    sub_1001631D8();
    sub_100184948();
    v331._uint64_t countAndFlagsBits = 0x79746964696D7548;
    v331._object = (void *)0xE800000000000000;
    uint64_t v335 = NSLocalizedString(_:tableName:bundle:value:comment:)(v332, v333, v334, v331, v1633)._countAndFlagsBits;
    sub_10019AA70(v335);
    uint64_t v1558 = v336;

    uint64_t v337 = v258;
    uint64_t v338 = v1548;
    sub_10014EBB0(v337, v1548, (void (*)(void))type metadata accessor for ConditionDetailChartDataInput);
    uint64_t v339 = v1566;
    v340 = v1556;
    uint64_t v341 = v1567;
    sub_100162808();
    v342();
    sub_10017B26C();
    uint64_t v345 = v344 & ~v343;
    sub_100189DB4();
    uint64_t v346 = swift_allocObject();
    sub_1003139F8(v338, (uint64_t)v330 + v346);
    (*(void (**)(uint64_t, char *, uint64_t))(v339 + 32))(v346 + v345, v340, v341);
    uint64_t v347 = sub_10017DF08(&qword_100E6BF10);
    uint64_t v348 = v1551;
    sub_100163050(v1551, v349, v350, v347);
    sub_10058C858();
    double v351 = sub_10058C80C();
    uint64_t v352 = v1561;
    double *v1561 = v351;
    sub_10018E02C();
    sub_1001631E8();
    v353();
    uint64_t v354 = v1559;
    sub_1001631E8();
    v355();
    *(void *)&long long v1434 = sub_100313A5C;
    *((void *)&v1434 + 1) = v346;
    sub_10018BECC();
    uint64_t v1432 = v1558;
    sub_1001A45B4();
    uint64_t v1419 = v1563;
    uint64_t v1415 = (uint64_t)v1574;
    uint64_t v1413 = v1575;
    uint64_t v1408 = v1591;
    uint64_t v1401 = v1584;
    *(_OWORD *)v1396 = v356;
    *(_OWORD *)&v1396[16] = v356;
    sub_1001097C0();
    sub_10018A86C();
    uint64_t v1387 = v357;
    sub_1001D3F9C();
    sub_100719DD8(v1564, v1555, v308, v1577, (uint64_t)v1595, v1580, (uint64_t)v1594, (uint64_t)v1573, v358, v359, v360, v361, v1385, v1386, v348, v1387, v1389, v1391, (uint64_t)v352,
      7,
      *(uint64_t *)v1396,
      *(long long *)&v1396[8],
      *(uint64_t *)&v1396[24],
      0x40u,
      v1401,
      v354,
      v1408,
      v1413,
      v1415,
      v1419,
      v1423,
      v1426,
      v1429,
      v1432,
      v1433,
      (uint64_t)v1629._object,
      v1434,
      *((char **)&v1434 + 1));
    sub_100162F0C();
    v362();
    sub_100162F0C();
    v363();
    (*(void (**)(uint64_t, uint64_t))(v319 + 8))(v1598, v1599);
    goto LABEL_7;
  }
  uint64_t v366 = v280;
  uint64_t v1529 = v265;
  uint64_t v1555 = v258;
  uint64_t v367 = (void (*)(void))v1580;
  if (v280 == enum case for DetailChartCondition.pressure(_:))
  {
    v1629._object = v275;
    uint64_t v368 = sub_10030EE28();
    sub_10017DF08(&qword_100E6BEE8);
    uint64_t v369 = swift_allocObject();
    long long v1580 = xmmword_100C25ED0;
    *(_OWORD *)(v369 + 16) = xmmword_100C25ED0;
    static Color.purple.getter();
    Color.opacity(_:)();
    swift_release();
    uint64_t v370 = Gradient.Stop.init(color:location:)();
    sub_10018C838(v370, v371);
    static Color.purple.getter();
    *(void *)(v369 + 48) = Gradient.Stop.init(color:location:)();
    *(void *)(v369 + 56) = v372;
    Gradient.init(stops:)();
    type metadata accessor for PressureFormatter();
    static PressureFormatter.minPressure.getter();
    char v373 = (void *)ConditionUnits.pressure.getter();
    Measurement<>.converted(to:)();

    v374 = *(void (**)(void))(v1509 + 8);
    sub_100164FC8();
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))v374)(v375, v376, v377, v378, v379, v380, v381, v382, *((void *)&v1434 + 1));
    Measurement.value.getter();
    sub_100164FC8();
    v374();
    static PressureFormatter.maxPressure.getter();
    uint64_t v383 = (void *)ConditionUnits.pressure.getter();
    Measurement<>.converted(to:)();

    sub_100164FC8();
    v374();
    Measurement.value.getter();
    sub_100164FC8();
    v374();
    DetailChartGradientModel.init(gradient:startValue:endValue:)();
    sub_100162808();
    v384();
    if (qword_100E62450 != -1) {
      swift_once();
    }
    sub_100188FC0();
    sub_10058C7C4();
    uint64_t *v1534 = static Color.purple.getter();
    sub_1001631E8();
    v385();
    sub_100162808();
    v386();
    uint64_t v387 = v1535;
    ChartAreaStyle.init(gradient:opacity:)();
    uint64_t v388 = type metadata accessor for ChartAreaStyle();
    _s7Weather24LocationCompositionStateOwst_0(v387, 0, 1, v388);
    sub_10017DF08(&qword_100E6BEF0);
    uint64_t v389 = sub_10016288C();
    *(_OWORD *)(v389 + 16) = v1580;
    *(_OWORD *)(v389 + 32) = xmmword_100C31860;
    ChartLineStyle.init(strokeStyle:lineThickness:lineColor:lineDash:opacity:opacityIncreasedContrast:areaStyle:)();
    DetailChartExtrema.maxValue.getter();
    uint64_t v390 = (uint64_t)v1593;
    uint64_t v391 = v1595;
    if (v392) {
      Array<A>.maxValue.getter();
    }
    DetailChartExtrema.minValue.getter();
    if (v421) {
      Array<A>.minValue.getter();
    }
    uint64_t v434 = v1517;
    uint64_t v435 = *(void (**)(void))(v1517 + 104);
    uint64_t v419 = v1518;
    sub_100163E7C();
    v435();
    Double.nearestMultiple(of:roundingRule:)();
    double v437 = v436;
    uint64_t v438 = *(void (**)(void))(v434 + 8);
    sub_100164938();
    v438();
    sub_100163E7C();
    v435();
    Double.nearestMultiple(of:roundingRule:)();
    double v440 = v439;
    sub_100164938();
    v438();
    uint64_t v441 = v1563;
    sub_100162808();
    v442();
    uint64_t v412 = DetailChartCondition.id.getter();
    uint64_t v444 = v443;
    sub_100162F0C();
    v445();
    sub_10017DF08(&qword_100E6BEF8);
    uint64_t v446 = v1526;
    sub_10019B860();
    uint64_t v447 = v1581;
    sub_100162808();
    v448();
    sub_10018A348(v446, 0);
    uint64_t v449 = v1512;
    sub_10018A348(v1512, 1);
    sub_10020E72C(v449, v441, &qword_100E6BEC8);
    sub_1001631E8();
    v450();
    uint64_t v451 = v1555;
    sub_100162808();
    v452();
    sub_100162808();
    v453();
    int64_t v454 = v391[2] - 1;
    swift_bridgeObjectRetain();
    sub_10030D9E0(1, v454, 2, (uint64_t)v391);
    if (v440 <= v437)
    {
      uint64_t v1591 = v455;
      v1594 = (void *)v444;
      uint64_t v456 = sub_10017DF08(&qword_100E6BF00);
      uint64_t v457 = (uint64_t)v1522 + *(int *)(v456 + 48);
      void *v1522 = 6;
      uint64_t v458 = v1501;
      _s7Weather24LocationCompositionStateOwst_0(v1501, 1, 1, v390);
      sub_10020E72C(v458, v457, (uint64_t *)&unk_100E73CA0);
      sub_100162808();
      v459();
      sub_1001B7204((uint64_t)v1592, v1520, &qword_100E6B640);
      uint64_t v460 = (void *)ConditionUnits.pressure.getter();
      LOBYTE(v458) = NSUnitPressure.isMetric.getter();

      *(void *)&long long v1580 = v412;
      if (v458)
      {
        uint64_t v1579 = 0;
        uint64_t v1577 = 0;
        LODWORD(v1578) = 128;
      }
      else
      {
        uint64_t v1579 = ConditionUnits.pressure.getter();
        LODWORD(v1578) = 4;
        uint64_t v1577 = 1;
      }
      uint64_t v461 = v1566;
      uint64_t v462 = sub_1001D1808();
      v463(v462);
      uint64_t v464 = DetailChartCondition.title.getter();
      sub_10012B594(v464, v465);
      id v466 = v1565;
      id v467 = [v1565 mainBundle];
      sub_1001631D8();
      v1573 = (void *)sub_100189D88(0xD000000000000030, 0x8000000100C99E30);
      uint64_t v1572 = v468;

      id v469 = [v466 mainBundle:v1633._object v1436 v1639._object v1437 v1438 v1439 v1440];
      sub_10008B8F8();
      sub_1001631D8();
      v470._object = (void *)0x8000000100C99EB0;
      v470._uint64_t countAndFlagsBits = 0xD000000000000030;
      v471._uint64_t countAndFlagsBits = 0x6572757373657250;
      v471._object = (void *)0xE800000000000000;
      Swift::String v472 = NSLocalizedString(_:tableName:bundle:value:comment:)(v470, (Swift::String_optional)0, (NSBundle)v469, v471, v1635);

      uint64_t v473 = v1548;
      sub_10014EBB0(v451, v1548, (void (*)(void))type metadata accessor for ConditionDetailChartDataInput);
      unint64_t v474 = v1556;
      uint64_t v475 = v1567;
      sub_100162808();
      v476();
      sub_100188994();
      sub_10019B0E8();
      uint64_t v479 = v478 & ~v477;
      sub_100189DB4();
      uint64_t v480 = (char *)swift_allocObject();
      sub_1003139F8(v473, (uint64_t)v469 + (void)v480);
      (*(void (**)(char *, char *, uint64_t))(v461 + 32))(&v480[v479], v474, v475);
      uint64_t v481 = sub_10017DF08(&qword_100E6BF10);
      uint64_t v482 = v1551;
      sub_100163050(v1551, v483, v484, v481);
      double v485 = sub_10058C858();
      double v486 = sub_10058C80C();
      unint64_t v487 = v1561;
      double *v1561 = v486;
      sub_10018E02C();
      sub_1001631E8();
      v488();
      uint64_t v489 = v1559;
      sub_1001631E8();
      v490();
      long long v1434 = 0uLL;
      v1435 = sub_100313A5C;
      v1633._object = v480;
      v1629._object = v472._object;
      uint64_t v1432 = (uint64_t)object;
      uint64_t v1430 = countAndFlagsBits;
      uint64_t v1427 = v1572;
      v1424 = v1573;
      uint64_t v1420 = (uint64_t)v1574;
      uint64_t v1416 = v1575;
      uint64_t v1409 = v1584;
      unsigned __int8 v1406 = v1578;
      uint64_t v1402 = v1577;
      sub_1001190FC();
      sub_100719DD8(v1580, (uint64_t)v1594, v1526, (uint64_t)v1523, (uint64_t)v1595, v1524, v1591, (uint64_t)v1522, v1552, v440, v437, v485, v368, 0, v482, v1521, v1520, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v487,
        v491,
        *(uint64_t *)&v1398[8],
        *(unint64_t *)&v1398[16],
        v1402,
        v1406,
        v1409,
        v489,
        v1416,
        v1420,
        (uint64_t)v1424,
        v1427,
        v1430,
        v1432,
        v472._countAndFlagsBits,
        (uint64_t)v1629._object,
        v1434,
        *((uint64_t *)&v1434 + 1),
        (uint64_t)v1435,
        (char *)v1633._object);
      sub_100162F0C();
      v492();
      goto LABEL_55;
    }
    __break(1u);
    goto LABEL_196;
  }
  if (v280 == enum case for DetailChartCondition.precipitationTotal(_:))
  {
    sub_10030E940(1, (uint64_t)v1595);
    v1629._object = v275;
    sub_1001DE200();
    uint64_t v394 = v393;
    unint64_t v396 = v395;
    swift_bridgeObjectRetain();
    uint64_t v391 = sub_1001B63C0(v273, (uint64_t)v275, v394, v396, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t))sub_100903C54);
    sub_10017DF08(&qword_100E646B0);
    uint64_t v397 = swift_allocObject();
    *(_OWORD *)(v397 + 16) = xmmword_100C251B0;
    *(void *)(v397 + 32) = static Color.cyan.getter();
    uint64_t v1613 = v397;
    specialized Array._endMutation()();
    Gradient.init(colors:)();
    DetailChartGradientModel.init(gradient:startValue:endValue:)();
    id v398 = v1565;
    id v399 = [v1565 mainBundle:v1434 v1435 v1633._object v1436 v1639._object v1437 v1438 v1439 v1440];
    sub_1001631D8();
    uint64_t v1582 = sub_100164F9C(v400, v401, (uint64_t)"This chart shows precipitation intensity over time.");
    uint64_t v1581 = v402;

    id v403 = [v398 mainBundle];
    sub_1001631D8();
    sub_100164FD4();
    v404._object = (void *)0x8000000100C99FF0;
    Swift::String v406 = NSLocalizedString(_:tableName:bundle:value:comment:)(v405, (Swift::String_optional)0, (NSBundle)v403, v404, v1634);
    uint64_t v1578 = v406._countAndFlagsBits;
    v1573 = v406._object;

    sub_1001D24FC();
    sub_100162808();
    v407();
    *(void *)&long long v1580 = DetailChartCondition.id.getter();
    uint64_t v1579 = v408;
    sub_100162F0C();
    v409();
    sub_100162808();
    v410();
    sub_10018B2DC();
    sub_1001631E8();
    v411();
    uint64_t v412 = (uint64_t)v1593;
    sub_100162808();
    v413();
    sub_100162808();
    v414();
    uint64_t v415 = sub_10017DF08(&qword_100E6BF00);
    uint64_t v416 = (uint64_t)v1514 + *(int *)(v415 + 48);
    void *v1514 = 6;
    uint64_t v417 = v1491;
    sub_10043F6C8((uint64_t)v391, v1491);
    uint64_t v418 = sub_10011C004();
    uint64_t v419 = (uint64_t)v1497;
    sub_10012B520(v418, v420, (uint64_t)v1497);
    if (v515)
    {
      sub_100178110(v417, &qword_100E6B640);
      uint64_t v494 = 1;
    }
    else
    {
      DetailChartDataElement.date.getter();
      sub_1001EC3D8();
      sub_100127BA4();
      v493();
      uint64_t v494 = 0;
    }
    uint64_t v447 = v1492;
    sub_1001D1574(v416, v494);
    uint64_t v451 = (uint64_t)v1595;
    if (qword_100E62450 == -1)
    {
LABEL_30:
      sub_100188FC0();
      sub_10058C7E8();
      sub_100162808();
      v495();
      sub_1001B7204((uint64_t)v1592, v1505, &qword_100E6B640);
      sub_10043F6C8((uint64_t)v391, v447);
      sub_10012B520(v447, 1, v419);
      uint64_t v496 = v1496;
      v1594 = v391;
      if (v515)
      {
        sub_100178110(v447, &qword_100E6B640);
        uint64_t v512 = v1495;
        sub_1001D1574(v1495, 1);
        uint64_t v497 = v1494;
      }
      else
      {
        DetailChartDataElement.date.getter();
        sub_100127BA4();
        v510();
        static Calendar.current.getter();
        uint64_t v511 = v1495;
        Date.wc_addMinutes(_:calendar:)();
        uint64_t v512 = v511;
        uint64_t v391 = v1594;
        sub_100127BA4();
        v513();
        sub_100127BA4();
        v514();
        sub_1001D1574(v511, 0);
        sub_10012B520(v511, 1, v412);
        uint64_t v497 = v1494;
        if (!v515)
        {
          sub_1001CB730();
          sub_1001C8694();
          v524();
          goto LABEL_45;
        }
      }
      Date.init()();
      sub_100178110(v512, (uint64_t *)&unk_100E73CA0);
LABEL_45:
      sub_1003043B0((uint64_t)v391, (uint64_t (*)(void))&type metadata accessor for DetailChartDataElement, v497);
      sub_10012B520(v497, 1, v419);
      if (v515)
      {
        sub_100178110(v497, &qword_100E6B640);
        sub_1001D1574(v496, 1);
      }
      else
      {
        DetailChartDataElement.date.getter();
        sub_100162F0C();
        v525();
        static Calendar.current.getter();
        Date.wc_addMinutes(_:calendar:)();
        sub_100127BA4();
        v526();
        sub_100127BA4();
        v527();
        _s7Weather24LocationCompositionStateOwst_0(v496, 0, 1, v412);
        sub_10012B520(v496, 1, v412);
        if (!v528)
        {
          sub_1001CB730();
          sub_1001C8694();
          v533();
LABEL_54:
          uint64_t v534 = (uint64_t)v1574;
          uint64_t v1591 = sub_10030E9F4(v451, (uint64_t)v1574);
          swift_bridgeObjectRelease();
          uint64_t v535 = v1555;
          uint64_t v536 = v1584;
          sub_10008B8B4();
          v537();
          uint64_t v538 = v534;
          v1595 = (void *)DetailChartCondition.title.getter();
          uint64_t v540 = v539;
          uint64_t v541 = v1548;
          sub_10014EBB0(v535, v1548, (void (*)(void))type metadata accessor for ConditionDetailChartDataInput);
          uint64_t v542 = v1566;
          uint64_t v543 = v1556;
          uint64_t v544 = v1567;
          sub_100162808();
          v545();
          sub_10017B26C();
          sub_10018C3F0();
          uint64_t v546 = (void *)swift_allocObject();
          sub_1003139F8(v541, (uint64_t)v546 + v538);
          (*(void (**)(char *, char *, uint64_t))(v542 + 32))((char *)v391 + (void)v546, v543, v544);
          uint64_t v547 = sub_10017DF08(&qword_100E6BF10);
          uint64_t v548 = v1551;
          sub_100163050(v1551, v549, v550, v547);
          double v551 = sub_10058C80C();
          uint64_t v552 = v1561;
          double *v1561 = v551;
          sub_1001631E8();
          v553();
          uint64_t v554 = v1559;
          sub_1001631E8();
          v555();
          v1435 = sub_100313A5C;
          v1633._object = v546;
          long long v1434 = 0u;
          v1629._object = v1573;
          uint64_t v1433 = v1578;
          uint64_t v1432 = (uint64_t)object;
          uint64_t v1431 = countAndFlagsBits;
          uint64_t v1428 = v1581;
          uint64_t v1425 = v1582;
          uint64_t v1417 = (uint64_t)v1595;
          uint64_t v1399 = v1591;
          long long v1397 = v1502;
          uint64_t v1390 = v1505;
          uint64_t v1388 = v1506;
          sub_1001D3F9C();
          sub_10071A8F8(v1580, v1579, v1513, v1503, (uint64_t)v1594, 0, (uint64_t)v1514, v556, v557, v558, v559, v1385, v1386, v548, v1388, v1390, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v552, 7,
            v1397,
            *((uint64_t *)&v1397 + 1),
            v1399,
            1uLL,
            0,
            128,
            v536,
            v554,
            v1417,
            v540,
            v1425,
            v1428,
            v1431,
            v1432,
            v1433,
            (uint64_t)v1629._object,
            v1434,
            *((uint64_t *)&v1434 + 1),
            (uint64_t)v1435,
            (uint64_t)v1633._object);
LABEL_55:
          sub_100162F0C();
          v560();
          sub_100162F0C();
          v561();
          sub_100162F0C();
          v562();
          uint64_t v365 = (uint64_t)v1592;
          goto LABEL_56;
        }
      }
      Date.init()();
      sub_100178110(v496, (uint64_t *)&unk_100E73CA0);
      goto LABEL_54;
    }
LABEL_196:
    swift_once();
    goto LABEL_30;
  }
  if (v280 == enum case for DetailChartCondition.temperature(_:))
  {
    sub_1001A4B40();
    dispatch thunk of AppConfigurationManagerType.appConfiguration.getter();
    AppConfiguration.temperatureScale.getter();
    sub_100162F0C();
    v430(v422, v423, v424, v425, v426, v427, v428, v429, *((void *)&v1434 + 1));
    *(double *)&uint64_t v431 = COERCE_DOUBLE(DetailChartExtrema.maxValue.getter());
    if (v432)
    {
      Array<A>.maxValue.getter();
      double v433 = v516;
    }
    else
    {
      double v433 = *(double *)&v431;
    }
    *(double *)&uint64_t v517 = COERCE_DOUBLE(DetailChartExtrema.maxSecondValue.getter());
    if (v518)
    {
      Array<A>.maxSecondValue.getter();
      double v519 = v529;
    }
    else
    {
      double v519 = *(double *)&v517;
    }
    *(double *)&uint64_t v530 = COERCE_DOUBLE(DetailChartExtrema.maxThirdValue.getter());
    if (v531)
    {
      Array<A>.maxThirdValue.getter();
      double v532 = v566;
    }
    else
    {
      double v532 = *(double *)&v530;
    }
    sub_10030D978((uint64_t)_swiftEmptyArrayStorage, v433, v519, v532);
    double v568 = v567;
    *(double *)&uint64_t v569 = COERCE_DOUBLE(DetailChartExtrema.minValue.getter());
    if (v570)
    {
      Array<A>.minValue.getter();
      double v571 = v572;
    }
    else
    {
      double v571 = *(double *)&v569;
    }
    *(double *)&uint64_t v573 = COERCE_DOUBLE(DetailChartExtrema.minSecondValue.getter());
    if (v574)
    {
      Array<A>.minSecondValue.getter();
      double v575 = v576;
    }
    else
    {
      double v575 = *(double *)&v573;
    }
    *(double *)&uint64_t v577 = COERCE_DOUBLE(DetailChartExtrema.minThirdValue.getter());
    if (v578)
    {
      Array<A>.minThirdValue.getter();
      double v579 = v580;
    }
    else
    {
      double v579 = *(double *)&v577;
    }
    sub_10030D9AC((uint64_t)_swiftEmptyArrayStorage, v571, v575, v579);
    double v582 = sub_10030D8FC(v568, v581);
    uint64_t v583 = v1517;
    uint64_t v584 = *(void (**)(void))(v1517 + 104);
    sub_100163E7C();
    v584();
    Double.nearestMultiple(of:roundingRule:)();
    double v586 = v585;
    v587 = *(void (**)(void))(v583 + 8);
    sub_100164FC8();
    v587();
    sub_100163E7C();
    v584();
    Double.nearestMultiple(of:roundingRule:)();
    double v589 = v588;
    sub_100164FC8();
    v587();
    uint64_t v590 = (void *)ConditionUnits.temperature.getter();
    TemperatureScaleConfiguration.gradientValueRange(for:)();

    id v591 = [v1565 mainBundle];
    sub_10008B8F8();
    sub_1001631D8();
    sub_10018AEC0();
    Swift::String v596 = NSLocalizedString(_:tableName:bundle:value:comment:)(v592, v593, v594, v595, v1630);
    uint64_t v1531 = v596._countAndFlagsBits;
    *(void *)&long long v1528 = v596._object;

    uint64_t v597 = v1500;
    uint64_t v598 = (uint64_t)v1594;
    ((void (*)(uint64_t, void *, void *))v275)(v1500, &unk_100C31000, v1594);
    BOOL v599 = *(unsigned char *)(v1555 + v1529) == 1;
    uint64_t v600 = (int *)v1489;
    sub_1001B7204(v1490, v597 + *(int *)(v1489 + 24), &qword_100E6BCB0);
    uint64_t v601 = *(void *)(v1566 + 16);
    uint64_t v1529 = v1566 + 16;
    *(void *)&long long v1527 = v601;
    sub_100162808();
    v609(v602, v603, v604, v605, v606, v607, v608);
    *(unsigned char *)(v597 + v600[5]) = v599;
    *(unsigned char *)(v597 + v600[8]) = 1;
    *(unsigned char *)(v597 + v600[9]) = 1;
    *(void *)(v597 + v600[10]) = 0;
    TemperatureScaleConfiguration.gradient.getter();
    Gradient.init(_:)();
    uint64_t v610 = v1578;
    DetailChartGradientModel.init(gradient:startValue:endValue:)();
    sub_100162808();
    v618(v611, v612, v613, v614, v615, v616, v617);
    if (qword_100E62450 != -1) {
      swift_once();
    }
    sub_100188FC0();
    sub_10058C7C4();
    uint64_t v366 = v1590 + 16;
    uint64_t v619 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v1590 + 16);
    uint64_t v620 = v1596;
    v619(v1534, v610, v1596);
    sub_10018B478();
    sub_1001631E8();
    v628(v621, v622, v623, v624, v625, v626, v627);
    uint64_t v629 = v610;
    uint64_t v630 = (uint64_t)v1530;
    v619(v1530, v629, v620);
    sub_1001523B4();
    uint64_t v631 = type metadata accessor for ChartAreaStyle();
    sub_100182F60(v631);
    sub_10017DF08(&qword_100E6BEF0);
    uint64_t v632 = (__n128 *)sub_10016288C();
    sub_1001EA940(v632, (__n128)xmmword_100C25ED0, (__n128)xmmword_100C31860);
    sub_1001649B4();
    ((void (*)(uint64_t, void *, uint64_t))v275)(v1563, v1574, v598);
    uint64_t v1538 = DetailChartCondition.id.getter();
    uint64_t v1564 = v633;
    sub_100162F0C();
    v641(v634, v635, v636, v637, v638, v639, v640);
    sub_10017DF08(&qword_100E6BEF8);
    sub_1001846A8();
    sub_100162808();
    v649(v642, v643, v644, v645, v646, v647, v648);
    sub_1001A1548(v598);
    sub_1001631E8();
    v657(v650, v651, v652, v653, v654, v655, v656);
    sub_10018A258();
    sub_100162808();
    v665(v658, v659, v660, v661, v662, v663, v664);
    sub_100162808();
    v673(v666, v667, v668, v669, v670, v671, v672);
    sub_10018295C();
    sub_10018689C();
    v1594 = (void *)v674;
    uint64_t v675 = v1573;
    if (v586 <= v589)
    {
      uint64_t v676 = (uint64_t)v675 + *(int *)(sub_10017DF08(&qword_100E6BF00) + 48);
      *uint64_t v675 = 6;
      sub_10018A348(v676, 1);
      double v677 = sub_10058C7E8();
      sub_100162808();
      uint64_t v686 = v685(v678, v679, v680, v681, v682, v683, v684);
      sub_100183458(v686, v687, &qword_100E6B640);
      uint64_t v1591 = (uint64_t)sub_10030DD38(v1500);
      uint64_t v688 = sub_10017DF08(&qword_100E6BF08);
      int v689 = v1561;
      char v690 = (char *)v1561 + *(int *)(v688 + 48);
      *int v689 = sub_10058C80C();
      v619((uint64_t *)v690, v1578, v1596);
      sub_10018E02C();
      sub_1001631E8();
      v698(v691, v692, v693, v694, v695, v696, v697);
      uint64_t v1563 = ConditionUnits.temperature.getter();
      uint64_t v699 = sub_1001D1808();
      v700(v699);
      uint64_t v701 = (uint64_t)v1574;
      uint64_t v702 = DetailChartCondition.title.getter();
      sub_10012B594(v702, v703);
      id v704 = [v1565 mainBundle:v1633._object v1436 v1639._object v1437 v1438 v1439 v1440];
      sub_10019C988();
      sub_1001631D8();
      sub_100127AA8();
      uint64_t v712 = sub_100176D04(v705, v706, v707, v708, v1628, v709, v710, v711);
      sub_10019AA70(v712);
      uint64_t v714 = v713;

      uint64_t v715 = v1548;
      sub_10014EBB0(v630, v1548, (void (*)(void))type metadata accessor for ConditionDetailChartDataInput);
      uint64_t v716 = v1556;
      uint64_t v717 = v1567;
      sub_100162808();
      v718();
      sub_1001093A0();
      uint64_t v721 = v720 & ~v719;
      sub_10019ADE4();
      uint64_t v724 = (v722 + v721) & ~v723;
      sub_100189DB4();
      uint64_t v725 = swift_allocObject();
      sub_1003139F8(v715, v725 + v721);
      (*(void (**)(uint64_t, char *, uint64_t))(v701 + 32))(v725 + v724, v716, v717);
      uint64_t v726 = sub_10017DF08(&qword_100E6BF10);
      uint64_t v727 = v1551;
      sub_100163050(v1551, v728, v729, v726);
      uint64_t v730 = v1559;
      sub_1001631E8();
      v731();
      *(void *)&long long v1434 = sub_100313A5C;
      *((void *)&v1434 + 1) = v725;
      sub_10018BECC();
      sub_1001A45B4();
      uint64_t v1421 = v1528;
      sub_1001BFCBC();
      uint64_t v1410 = v732;
      uint64_t v1403 = v1584;
      *(_OWORD *)&v1398[8] = v733;
      sub_1001190FC();
      uint64_t v1392 = v734;
      sub_10018A86C();
      sub_10019D4A0(v1538, v1564, v1552, v586, v589, v677, *(uint64_t *)&v582, 0, v727, v735, v1389, v1391, (uint64_t)v689, v1392, v1395, *(long long *)v1398, *(uint64_t *)&v1398[16], 0, v1403,
        v730,
        v1410,
        v1412,
        v1414,
        v1421,
        v1423,
        v1426,
        v1429,
        v714,
        v1433,
        (uint64_t)v1629._object,
        v1434,
        *((char **)&v1434 + 1));
      sub_100162F0C();
      v736();
      sub_100162F0C();
      v737();
      sub_1003153FC(v1500, (void (*)(void))type metadata accessor for DetailChartViewModelFactory.PeakMarkerRequestContext);
      (*(void (**)(uint64_t, uint64_t))(v1479 + 8))(v1498, v1480);
LABEL_99:
      sub_100162F0C();
      v1003();
LABEL_7:
      sub_100162F0C();
      v364();
      uint64_t v365 = (uint64_t)v1592;
LABEL_56:
      sub_100178110(v365, &qword_100E6B640);
      sub_100162F0C();
      v563();
      sub_100162F0C();
      v564();
      return (*(uint64_t (**)(char *, _OWORD *))(v1571 + 8))(v1562, v1593);
    }
    __break(1u);
LABEL_198:
    swift_once();
LABEL_94:
    sub_100188FC0();
    sub_10058C7C4();
    uint64_t v850 = v1590;
    uint64_t v1570 = *(void *)(v1590 + 16);
    uint64_t v851 = v1534;
    sub_1001886D8();
    v852();
    *(void *)&long long v1526 = *(void *)(v1533 + 104);
    ((void (*)(uint64_t *, void, uint64_t))v1526)(v851, enum case for ChartLineColor.gradient(_:), v1538);
    uint64_t v1533 = type metadata accessor for ChartAreaStyle();
    sub_100163050(v1535, v853, v854, v1533);
    uint64_t v1529 = sub_10017DF08(&qword_100E6BEF0);
    uint64_t v855 = sub_10016288C();
    long long v1527 = xmmword_100C25ED0;
    long long v1528 = xmmword_100C31860;
    *(_OWORD *)(v855 + 16) = xmmword_100C25ED0;
    *(_OWORD *)(v855 + 32) = xmmword_100C31860;
    sub_1001A6894();
    v1523 = sub_10030DD38((uint64_t)v619);
    uint64_t v856 = Color.init(hex:)();
    sub_10017DF08(&qword_100E646B0);
    uint64_t v857 = swift_allocObject();
    *(_OWORD *)(v857 + 16) = xmmword_100C251B0;
    *(void *)(v857 + 32) = Color.opacity(_:)();
    v1614 = (void *)v857;
    specialized Array._endMutation()();
    Gradient.init(colors:)();
    sub_1001097C0();
    DetailChartGradientModel.init(gradient:startValue:endValue:)();
    sub_100162808();
    v858();
    sub_10058C7C4();
    *uint64_t v851 = v856;
    ((void (*)(uint64_t *, void, uint64_t))v1526)(v851, enum case for ChartLineColor.color(_:), v1538);
    uint64_t v859 = v1578;
    uint64_t v1531 = v850 + 16;
    sub_1001886D8();
    v860();
    uint64_t v1538 = v856;
    swift_retain();
    ChartAreaStyle.init(gradient:opacity:)();
    uint64_t v861 = sub_1001279C4();
    _s7Weather24LocationCompositionStateOwst_0(v861, v862, v863, v1533);
    uint64_t v864 = sub_10016288C();
    long long v865 = v1528;
    *(_OWORD *)(v864 + 16) = v1527;
    *(_OWORD *)(v864 + 32) = v865;
    sub_1001A6894();
    uint64_t v866 = sub_1001D24FC();
    uint64_t v867 = v366;
    uint64_t v869 = v868;
    uint64_t v870 = (uint64_t)v1594;
    v871(v866, v867, v1594);
    uint64_t v872 = (uint64_t)v1574;
    char v873 = sub_100889C5C((uint64_t)v1574, v859);
    uint64_t v874 = *(void (**)(uint64_t, uint64_t))(v869 + 8);
    v874(v859, v870);
    id v875 = [v1565 mainBundle];
    sub_10008B8F8();
    sub_1001631D8();
    if (v873) {
      uint64_t v878 = "This chart shows what the temperature feels like over time.";
    }
    else {
      uint64_t v878 = "This chart shows what the temperature feels like, in direct sun, over time.";
    }
    uint64_t v1591 = sub_100164F9C(v876, v877, (uint64_t)v878);
    uint64_t v1537 = v879;
    uint64_t v520 = (void (*)(void))v1581;

    sub_1001D24FC();
    uint64_t v880 = (uint64_t)v1594;
    sub_100162808();
    v888(v881, v882, v883, v884, v885, v886, v887);
    uint64_t v1564 = DetailChartCondition.id.getter();
    uint64_t v1578 = v889;
    v874((uint64_t)v875, v880);
    uint64_t v890 = sub_10017DF08(&qword_100E6BEF8);
    uint64_t v891 = v1532 + *(int *)(v890 + 48);
    uint64_t v892 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v1582 + 16);
    sub_100179020();
    v892(v893, v894, v895, v896, v897, v898, v899);
    uint64_t v900 = sub_1001279C4();
    _s7Weather24LocationCompositionStateOwst_0(v900, v901, v902, (uint64_t)v520);
    sub_100179020();
    v892(v903, v904, v905, v906, v907, v908, v909);
    _s7Weather24LocationCompositionStateOwst_0(v891, 0, 1, (uint64_t)v520);
    sub_1001631E8();
    v917(v910, v911, v912, v913, v914, v915, v916);
    uint64_t v918 = (uint64_t)v1593;
    sub_100162808();
    v926(v919, v920, v921, v922, v923, v924, v925);
    sub_100162808();
    v934(v927, v928, v929, v930, v931, v932, v933);
    sub_10018295C();
    sub_10018689C();
    v1594 = (void *)v935;
    if (v586 <= v589)
    {
      uint64_t v936 = sub_10017DF08(&qword_100E6BF00);
      uint64_t v937 = sub_1001A2B44(v936);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v937, v938, v939, v918);
      double v940 = sub_10058C7E8();
      sub_100162808();
      uint64_t v949 = v948(v941, v942, v943, v944, v945, v946, v947);
      sub_100183458(v949, v950, &qword_100E6B640);
      sub_10017DF08(&qword_100E6BF08);
      uint64_t v951 = v1561;
      *uint64_t v951 = sub_10058C80C();
      sub_100162808();
      v959(v952, v953, v954, v955, v956, v957, v958);
      sub_10018E02C();
      sub_1001631E8();
      v967(v960, v961, v962, v963, v964, v965, v966);
      uint64_t v1570 = ConditionUnits.temperature.getter();
      uint64_t v968 = v1555;
      uint64_t v969 = sub_1001D1808();
      v970(v969);
      uint64_t v971 = (uint64_t)v1574;
      uint64_t v972 = DetailChartCondition.title.getter();
      sub_10012B594(v972, v973);
      uint64_t v974 = [v1565 mainBundle:v1633._object v1436 v1639._object v1437 v1438 v1439 v1440];
      sub_10019C988();
      sub_1001631D8();
      v975.super.Class isa = v974;
      uint64_t v980 = sub_100176D04(v976, 0x8000000100C9A1E0, 0, 0, v975, v977, v978, v979);
      sub_10019AA70(v980);
      uint64_t v982 = v981;

      uint64_t v983 = v968;
      uint64_t v984 = v1548;
      sub_10014EBB0(v983, v1548, (void (*)(void))type metadata accessor for ConditionDetailChartDataInput);
      uint64_t v985 = v1556;
      uint64_t v986 = v1567;
      sub_100162808();
      v987();
      sub_1001093A0();
      uint64_t v990 = v989 & ~v988;
      sub_10019ADE4();
      sub_10018C3F0();
      uint64_t v991 = swift_allocObject();
      sub_1003139F8(v984, v991 + v990);
      (*(void (**)(uint64_t, char *, uint64_t))(v971 + 32))(v991 + v872, v985, v986);
      uint64_t v992 = sub_10017DF08(&qword_100E6BF10);
      uint64_t v993 = v1551;
      sub_100163050(v1551, v994, v995, v992);
      uint64_t v996 = v1559;
      sub_1001631E8();
      v997();
      *(void *)&long long v1434 = sub_100313A5C;
      *((void *)&v1434 + 1) = v991;
      v1629._object = (void *)0xE000000000000000;
      sub_1001A45B4();
      uint64_t v1422 = v1537;
      sub_1001BFCBC();
      uint64_t v1411 = v998;
      uint64_t v1404 = v1584;
      sub_1001190FC();
      uint64_t v1394 = v999;
      sub_10018A86C();
      sub_10019D4A0(v1564, v1578, v1552, v586, v589, v940, *(uint64_t *)&v582, 0, v993, v1000, v1389, v1391, (uint64_t)v951, v1394, v1395, *(unint64_t *)v1398, 0, 0, v1404,
        v996,
        v1411,
        v1412,
        v1414,
        v1422,
        v1423,
        v1426,
        v1429,
        v982,
        0,
        (uint64_t)v1629._object,
        v1434,
        *((char **)&v1434 + 1));
      swift_release();
      uint64_t v1001 = *(void (**)(void))(v1582 + 8);
      sub_1001851F4();
      v1001();
      v1002 = *(void (**)(void))(v1590 + 8);
      sub_1001D0E38();
      v1002();
      sub_1001851F4();
      v1001();
      sub_1001D0E38();
      v1002();
      sub_1003153FC((uint64_t)v1477, (void (*)(void))type metadata accessor for DetailChartViewModelFactory.PeakMarkerRequestContext);
      (*(void (**)(uint64_t, uint64_t))(v1479 + 8))(v1482, v1480);
      goto LABEL_99;
    }
    __break(1u);
LABEL_200:
    swift_once();
LABEL_105:
    sub_100188FC0();
    sub_10058C7C4();
    v1022 = *(void (**)(void))(v1590 + 16);
    uint64_t v281 = (__objc2_meth_list *)v1534;
    sub_100179020();
    v1022();
    sub_10018B478();
    sub_1001631E8();
    v1023();
    uint64_t v1024 = (uint64_t)v1530;
    uint64_t v1533 = (uint64_t)v1022;
    sub_100179020();
    v1022();
    sub_1001523B4();
    uint64_t v1025 = type metadata accessor for ChartAreaStyle();
    sub_100182F60(v1025);
    sub_10017DF08(&qword_100E6BEF0);
    v1026 = (__n128 *)sub_10016288C();
    sub_1001EA940(v1026, (__n128)xmmword_100C25ED0, (__n128)xmmword_100C31860);
    sub_1001649B4();
    sub_100162808();
    v520();
    uint64_t v1027 = DetailChartCondition.id.getter();
    sub_10012606C(v1027, v1028);
    sub_100162F0C();
    v1029();
    sub_10017DF08(&qword_100E6BEF8);
    uint64_t v1030 = v1532;
    sub_100162808();
    v1031();
    sub_1001A1548(v1030);
    sub_10018B2DC();
    sub_1001631E8();
    v1032();
    sub_10018A258();
    uint64_t v282 = v1593;
    sub_100162808();
    v1033();
    sub_100162808();
    v1034();
    uint64_t v1035 = (uint64_t)v1595;
    int64_t v1036 = v1595[2] - 1;
    swift_bridgeObjectRetain();
    uint64_t v275 = v1536;
    sub_10030D9E0(1, v1036, 2, v1035);
    v1594 = (void *)v1037;
    if (v582 >= 0.0)
    {
      uint64_t v1038 = sub_10017DF08(&qword_100E6BF00);
      v1039 = sub_1001A2B44(v1038);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v1039, v1040, v1041, (uint64_t)v282);
      sub_100162808();
      uint64_t v1043 = v1042();
      sub_100183458(v1043, v1044, &qword_100E6B640);
      uint64_t v1591 = (uint64_t)sub_10030DD38(v1500);
      sub_10017DF08(&qword_100E6BF08);
      v1045 = v1561;
      double *v1045 = sub_10058C80C();
      sub_100179020();
      v1046();
      sub_1001631E8();
      v1047();
      v1048 = v1574;
      uint64_t v1563 = sub_10030E9F4(v1035, (uint64_t)v1574);
      uint64_t v1049 = sub_1001D1808();
      v1050(v1049);
      uint64_t v1051 = DetailChartCondition.title.getter();
      sub_10012B594(v1051, v1052);
      id v1053 = v1565;
      id v1054 = [v1565 mainBundle];
      sub_100128FB0();
      sub_1001631D8();
      uint64_t v1558 = sub_100189D88(v1055, 0x8000000100C99D50);
      v1557 = (void (*)(void))v1056;

      id v1057 = [v1053 mainBundle:v1633._object v1436 v1639._object v1437 v1438 v1439 v1440];
      sub_1001631D8();
      sub_100184948();
      v1058._uint64_t countAndFlagsBits = 0x7865646E49205655;
      v1058._object = (void *)0xE800000000000000;
      uint64_t v1062 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1059, v1060, v1061, v1058, v1637)._countAndFlagsBits;
      sub_10019AA70(v1062);
      uint64_t v1064 = v1063;

      uint64_t v1065 = v1548;
      sub_10014EBB0(v1024, v1548, (void (*)(void))type metadata accessor for ConditionDetailChartDataInput);
      v1066 = v1556;
      uint64_t v1067 = v1567;
      sub_100162808();
      v1068();
      sub_100188994();
      uint64_t v1069 = v1566;
      sub_10019B0E8();
      uint64_t v1072 = v1071 & ~v1070;
      sub_100189DB4();
      uint64_t v1073 = swift_allocObject();
      sub_1003139F8(v1065, (uint64_t)v1057 + v1073);
      (*(void (**)(uint64_t, char *, uint64_t))(v1069 + 32))(v1073 + v1072, v1066, v1067);
      uint64_t v1074 = sub_10017DF08(&qword_100E6BF10);
      uint64_t v1075 = v1551;
      sub_100163050(v1551, v1076, v1077, v1074);
      double v1078 = sub_10058C858();
      uint64_t v1079 = v1559;
      sub_1001631E8();
      v1080();
      *(void *)&long long v1434 = sub_100313A5C;
      *((void *)&v1434 + 1) = v1073;
      sub_10018BECC();
      sub_1001A45B4();
      sub_10019D4A0(v1564, v1538, v1552, 0.0, v582, v1078, 0x3FF0000000000000, 0, v1075, v1579, v1572, v1591, (uint64_t)v1561, 7, v1563, v1081, 0, 0x80u, v1584,
        v1079,
        v1575,
        (uint64_t)v1574,
        v1558,
        (uint64_t)v1557,
        v1423,
        v1426,
        v1429,
        v1064,
        v1433,
        (uint64_t)v1629._object,
        v1434,
        *((char **)&v1434 + 1));
      sub_100162F0C();
      v1082();
      sub_100162F0C();
      v1083();
      sub_1003153FC(v1500, (void (*)(void))type metadata accessor for DetailChartViewModelFactory.PeakMarkerRequestContext);
      goto LABEL_99;
    }
    __break(1u);
LABEL_202:
    swift_once();
LABEL_79:
    sub_100188FC0();
    sub_10058C7C4();
    uint64_t v759 = static Color.white.getter();
    uint64_t v760 = (uint64_t)v1534;
    uint64_t *v1534 = v759;
    sub_10018B478();
    sub_1001631E8();
    v761();
    uint64_t v762 = v1530;
    sub_100162808();
    v763();
    ChartAreaStyle.init(gradient:opacity:)();
    uint64_t v764 = type metadata accessor for ChartAreaStyle();
    sub_100182F60(v764);
    sub_10017DF08(&qword_100E6BEF0);
    uint64_t v765 = sub_10016288C();
    long long v766 = v282[134];
    *(_OWORD *)(v765 + 16) = *(_OWORD *)&v281[474].entrysize;
    *(_OWORD *)(v765 + 32) = v766;
    sub_1001649B4();
    sub_1001D24FC();
    sub_100128A4C();
    sub_100162808();
    v275();
    uint64_t v767 = DetailChartCondition.id.getter();
    sub_10012606C(v767, v768);
    sub_100162F0C();
    v769();
    sub_10017DF08(&qword_100E6BEF8);
    sub_1001846A8();
    sub_100162808();
    v770();
    sub_1001A1548(v760);
    sub_1001631E8();
    v771();
    uint64_t v772 = v1555;
    uint64_t v773 = (uint64_t)v1593;
    sub_100162808();
    v774();
    sub_100162808();
    v775();
    sub_10018295C();
    sub_10018689C();
    v1594 = (void *)v776;
    uint64_t v777 = sub_10017DF08(&qword_100E6BF00);
    sub_100172308(v777);
    sub_100162808();
    uint64_t v779 = v778();
    sub_100183458(v779, v780, &qword_100E6B640);
    uint64_t v1591 = ConditionUnits.visibility.getter();
    uint64_t v781 = sub_1001D1808();
    v782(v781);
    uint64_t v783 = DetailChartCondition.title.getter();
    sub_10012B594(v783, v784);
    id v785 = v1565;
    id v786 = [v1565 mainBundle];
    sub_100128FB0();
    sub_1001631D8();
    uint64_t v1563 = sub_100164F9C(v787, v788, (uint64_t)"This chart shows visibility over time.");
    uint64_t v1558 = v789;

    id v790 = [v785 mainBundle:v1633._object v1436 v1639._object v1437 v1438 v1439 v1440];
    sub_1001631D8();
    sub_100184948();
    v791._uint64_t countAndFlagsBits = 0x696C696269736956;
    v791._object = (void *)0xEA00000000007974;
    uint64_t v795 = NSLocalizedString(_:tableName:bundle:value:comment:)(v792, v793, v794, v791, v1636)._countAndFlagsBits;
    sub_10019AA70(v795);
    v1557 = (void (*)(void))v796;

    uint64_t v797 = v1548;
    sub_10014EBB0(v772, v1548, (void (*)(void))type metadata accessor for ConditionDetailChartDataInput);
    uint64_t v798 = v1566;
    uint64_t v799 = v1556;
    uint64_t v800 = v1567;
    sub_100162808();
    v801();
    sub_100188994();
    sub_10019B0E8();
    uint64_t v802 = v773;
    uint64_t v805 = v804 & ~v803;
    sub_100189DB4();
    uint64_t v806 = swift_allocObject();
    sub_1003139F8(v797, (uint64_t)v790 + v806);
    (*(void (**)(uint64_t, char *, uint64_t))(v798 + 32))(v806 + v805, v799, v800);
    uint64_t v807 = sub_10017DF08(&qword_100E6BF10);
    uint64_t v808 = v1551;
    sub_100163050(v1551, v809, v810, v807);
    double v811 = sub_10058C858();
    double v812 = sub_10058C80C();
    uint64_t v813 = v1561;
    double *v1561 = v812;
    sub_1001631E8();
    v814();
    sub_1001631E8();
    v815();
    *(void *)&long long v1434 = sub_100313A5C;
    *((void *)&v1434 + 1) = v806;
    sub_10018BECC();
    uint64_t v1432 = (uint64_t)v1557;
    sub_1001A45B4();
    sub_10018239C();
    *(_OWORD *)&v1398[8] = v816;
    sub_1001190FC();
    uint64_t v1393 = v817;
    sub_10018A86C();
    sub_10019D4A0(v1564, v1538, v1552, v820, v582, v811, v819, 0, v808, v818, v1389, v1391, (uint64_t)v813, v1393, v1395, *(long long *)v1398, *(uint64_t *)&v1398[16], 1u, v1400,
      v1405,
      v1407,
      v1412,
      v1414,
      v1418,
      v1423,
      v1426,
      v1429,
      v1432,
      v1433,
      (uint64_t)v1629._object,
      v1434,
      *((char **)&v1434 + 1));
    sub_100162F0C();
    v821();
    sub_100162F0C();
    v822();
    sub_100164F40();
    v823();
    sub_100162F0C();
    v824();
    sub_100178110((uint64_t)v1592, &qword_100E6B640);
    sub_100162F0C();
    v825();
    sub_100162F0C();
    v826();
    return (*(uint64_t (**)(char *, uint64_t))(v1571 + 8))(v1562, v802);
  }
  if (v280 == enum case for DetailChartCondition.temperatureFeelsLike(_:))
  {
    v1629._object = v275;
    sub_1001A4B40();
    dispatch thunk of AppConfigurationManagerType.appConfiguration.getter();
    AppConfiguration.temperatureScale.getter();
    sub_100162F0C();
    v506(v498, v499, v500, v501, v502, v503, v504, v505, *((void *)&v1434 + 1));
    *(double *)&uint64_t v507 = COERCE_DOUBLE(DetailChartExtrema.maxValue.getter());
    if (v508)
    {
      Array<A>.maxValue.getter();
      double v509 = v738;
    }
    else
    {
      double v509 = *(double *)&v507;
    }
    *(double *)&uint64_t v739 = COERCE_DOUBLE(DetailChartExtrema.maxSecondValue.getter());
    if (v740) {
      Array<A>.maxSecondValue.getter();
    }
    else {
      double v741 = *(double *)&v739;
    }
    if (v509 > v741) {
      double v827 = v509;
    }
    else {
      double v827 = v741;
    }
    *(double *)&uint64_t v828 = COERCE_DOUBLE(DetailChartExtrema.minValue.getter());
    if (v829)
    {
      Array<A>.minValue.getter();
      double v830 = v831;
    }
    else
    {
      double v830 = *(double *)&v828;
    }
    *(double *)&uint64_t v832 = COERCE_DOUBLE(DetailChartExtrema.minSecondValue.getter());
    if (v833) {
      Array<A>.minSecondValue.getter();
    }
    else {
      double v834 = *(double *)&v832;
    }
    if (v834 >= v830) {
      double v835 = v830;
    }
    else {
      double v835 = v834;
    }
    double v582 = sub_10030D8FC(v827, v835);
    uint64_t v836 = v1517;
    v837 = *(void (**)(void))(v1517 + 104);
    sub_100163E7C();
    v837();
    Double.nearestMultiple(of:roundingRule:)();
    double v586 = v838;
    uint64_t v839 = *(void (**)(uint64_t))(v836 + 8);
    uint64_t v840 = sub_1001D402C();
    v839(v840);
    sub_100163E7C();
    v837();
    Double.nearestMultiple(of:roundingRule:)();
    double v589 = v841;
    uint64_t v842 = sub_1001D402C();
    v839(v842);
    uint64_t v843 = (void *)ConditionUnits.temperature.getter();
    TemperatureScaleConfiguration.gradientValueRange(for:)();

    uint64_t v619 = v1477;
    sub_100162808();
    v844();
    LOBYTE(v836) = *(unsigned char *)(v1555 + v1529) == 1;
    uint64_t v845 = (int *)v1489;
    sub_1001B7204(v1490, (uint64_t)v619 + *(int *)(v1489 + 24), &qword_100E6BCB0);
    uint64_t v846 = *(void *)(v1566 + 16);
    *(void *)&long long v1525 = v1566 + 16;
    uint64_t v1524 = v846;
    sub_100162808();
    v847();
    *((unsigned char *)v619 + v845[5]) = v836;
    *((unsigned char *)v619 + v845[8]) = 1;
    *((unsigned char *)v619 + v845[9]) = 1;
    *(void *)((char *)v619 + v845[10]) = 0;
    TemperatureScaleConfiguration.gradient.getter();
    Gradient.init(_:)();
    DetailChartGradientModel.init(gradient:startValue:endValue:)();
    uint64_t v848 = *(void *)(v1585 + 16);
    uint64_t v1531 = v1585 + 16;
    v1530 = (uint64_t *)v848;
    sub_100162808();
    v849();
    if (qword_100E62450 == -1) {
      goto LABEL_94;
    }
    goto LABEL_198;
  }
  if (v280 == enum case for DetailChartCondition.uvIndex(_:))
  {
    uint64_t v520 = v275;
    *(double *)&uint64_t v521 = COERCE_DOUBLE(DetailChartExtrema.maxValue.getter());
    if (v522) {
      Array<A>.maxValue.getter();
    }
    else {
      double v523 = *(double *)&v521;
    }
    v1004 = v1536;
    if (v523 <= 9.0) {
      double v582 = 11.0;
    }
    else {
      double v582 = v523 + 2.0;
    }
    sub_10017DF08(&qword_100E6BF20);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100C31880;
    *(unsigned char *)(inited + 32) = 0;
    *(void *)(inited + 40) = static Color.green.getter();
    *(unsigned char *)(inited + 48) = 1;
    *(void *)(inited + 56) = static Color.yellow.getter();
    *(unsigned char *)(inited + 64) = 2;
    *(void *)(inited + 72) = static Color.orange.getter();
    *(unsigned char *)(inited + 80) = 3;
    *(void *)(inited + 88) = static Color.pink.getter();
    *(unsigned char *)(inited + 96) = 4;
    *(void *)(inited + 104) = static Color.purple.getter();
    sub_100315244();
    uint64_t v1006 = Dictionary.init(dictionaryLiteral:)();
    uint64_t v1007 = static UVIndex.ExposureCategory.allCases.getter();
    swift_bridgeObjectRetain();
    sub_100304000(v1007, v1006);
    v1536 = v1004;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v1008 = v1500;
    sub_100162808();
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))v520)(v1009, v1010, v1011, v1012, v1013, v1014, v1015, v1016, *((void *)&v1434 + 1));
    uint64_t v1017 = sub_10016EEC0();
    sub_1001B7204(v1017, v1008 + v1018, &qword_100E6BCB0);
    sub_100315450();
    uint64_t v1529 = v1019;
    sub_100162808();
    v1020();
    *(unsigned char *)(v1008 + *(int *)(v93 + 20)) = v1006;
    *(unsigned char *)(v1008 + *(int *)(v93 + 32)) = 1;
    *(unsigned char *)(v1008 + *(int *)(v93 + 36)) = 0;
    *(void *)(v1008 + *(int *)(v93 + 40)) = 0;
    Gradient.init(stops:)();
    DetailChartGradientModel.init(gradient:startValue:endValue:)();
    sub_100162808();
    v1021();
    if (qword_100E62450 == -1) {
      goto LABEL_105;
    }
    goto LABEL_200;
  }
  if (v280 == enum case for DetailChartCondition.visibility(_:))
  {
    v742 = (void *)ConditionUnits.visibility.getter();
    char v743 = NSUnitLength.isMetricVisibility.getter();

    if (v743) {
      double v582 = 45.0;
    }
    else {
      double v582 = 30.0;
    }
    sub_10017DF08(&qword_100E6BEE8);
    uint64_t v744 = swift_allocObject();
    *(_OWORD *)(v744 + 16) = xmmword_100C31870;
    static Color.white.getter();
    Color.opacity(_:)();
    sub_100119498();
    uint64_t v745 = Gradient.Stop.init(color:location:)();
    sub_10018C838(v745, v746);
    static Color.white.getter();
    Color.opacity(_:)();
    sub_100119498();
    *(void *)(v744 + 48) = Gradient.Stop.init(color:location:)();
    *(void *)(v744 + 56) = v747;
    static Color.white.getter();
    Color.opacity(_:)();
    sub_100119498();
    *(void *)(v744 + 64) = Gradient.Stop.init(color:location:)();
    *(void *)(v744 + 72) = v748;
    static Color.white.getter();
    Color.opacity(_:)();
    sub_100119498();
    *(void *)(v744 + 80) = Gradient.Stop.init(color:location:)();
    *(void *)(v744 + 88) = v749;
    Gradient.init(stops:)();
    DetailChartGradientModel.init(gradient:startValue:endValue:)();
    sub_100162808();
    v758(v750, v751, v752, v753, v754, v755, v756, v757, *((void *)&v1434 + 1));
    if (qword_100E62450 == -1) {
      goto LABEL_79;
    }
    goto LABEL_202;
  }
  v1629._object = v275;
  if (v280 == enum case for DetailChartCondition.wind(_:))
  {
    uint64_t v1084 = sub_10030EFE4();
    v1085 = (void *)ConditionUnits.windSpeed.getter();
    sub_1001ABC4C(0, (unint64_t *)&qword_100E6BF18);
    v1086 = (void *)static NSUnitSpeed.beaufort.getter();
    char v1087 = static NSObject.== infix(_:_:)();

    uint64_t v1088 = v1519;
    DetailChartExtrema.maxValue.getter();
    if (v1087)
    {
      sub_100150274();
      if (v1090)
      {
        Array<A>.maxValue.getter();
        double v1091 = v1124;
      }
      else
      {
        double v1091 = v1089;
      }
      *(double *)&uint64_t v1125 = COERCE_DOUBLE(DetailChartExtrema.maxSecondValue.getter());
      if (v1126) {
        Array<A>.maxSecondValue.getter();
      }
      else {
        double v1127 = *(double *)&v1125;
      }
      if (v1091 > v1127) {
        double v1127 = v1091;
      }
      if ((~*(void *)&v1127 & 0x7FF0000000000000) == 0)
      {
LABEL_204:
        __break(1u);
        goto LABEL_205;
      }
      if (v1127 <= -9.22337204e18)
      {
LABEL_205:
        __break(1u);
        goto LABEL_206;
      }
      if (v1127 >= 9.22337204e18)
      {
LABEL_206:
        __break(1u);
        goto LABEL_207;
      }
      if (static Beaufort.maxLevel.getter() >= (uint64_t)v1127) {
        uint64_t v1129 = static Beaufort.maxLevel.getter();
      }
      else {
        uint64_t v1129 = static Beaufort.maxExtendedLevel.getter();
      }
      double v1146 = (double)v1129;
      double v1143 = 0.0;
    }
    else
    {
      sub_100150274();
      if (v1112) {
        Array<A>.maxValue.getter();
      }
      DetailChartExtrema.maxSecondValue.getter();
      if (v1128) {
        Array<A>.maxSecondValue.getter();
      }
      DetailChartExtrema.minValue.getter();
      if (v1130) {
        Array<A>.minValue.getter();
      }
      DetailChartExtrema.minSecondValue.getter();
      if (v1131) {
        Array<A>.minSecondValue.getter();
      }
      uint64_t v1132 = v1517;
      v1133 = *(void (**)(void))(v1517 + 104);
      sub_100163E7C();
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))v1133)(v1134, v1135, v1136, v1137, v1138, v1139, v1140, v1141, *((void *)&v1434 + 1));
      Double.nearestMultiple(of:roundingRule:)();
      double v1143 = v1142;
      v1144 = *(void (**)(void))(v1132 + 8);
      sub_100164FC8();
      v1144();
      if (v1143 < 0.0) {
        double v1143 = 0.0;
      }
      sub_100163E7C();
      v1133();
      Double.nearestMultiple(of:roundingRule:)();
      double v1146 = v1145;
      sub_100164FC8();
      v1144();
    }
    v1264 = (void *)ConditionUnits.windSpeed.getter();
    static DetailChartGradientModel.windGradientModel(startValue:windSpeedUnit:)();

    uint64_t v1265 = *(void *)(v93 + 16);
    uint64_t v1531 = v93 + 16;
    *(void *)&long long v1528 = v1265;
    sub_1001886D8();
    v1266();
    if (qword_100E62450 != -1) {
      swift_once();
    }
    sub_100188FC0();
    sub_10058C7C4();
    v1267 = *(void (**)(void))(v1590 + 16);
    v1268 = v1534;
    v1269 = (int *)v1596;
    sub_10012B95C();
    v1267();
    LODWORD(v1527) = enum case for ChartLineColor.gradient(_:);
    uint64_t v1270 = v1533 + 104;
    uint64_t v1533 = *(void *)(v1533 + 104);
    ((void (*)(uint64_t *))v1533)(v1268);
    sub_10012B95C();
    v1267();
    uint64_t v1271 = v1535;
    ChartAreaStyle.init(gradient:opacity:)();
    v1530 = (uint64_t *)type metadata accessor for ChartAreaStyle();
    uint64_t v1272 = sub_1001279C4();
    _s7Weather24LocationCompositionStateOwst_0(v1272, v1273, v1274, v1275);
    uint64_t v1276 = sub_10017DF08(&qword_100E6BEF0);
    uint64_t v1277 = sub_10016288C();
    long long v1525 = xmmword_100C25ED0;
    long long v1526 = xmmword_100C31860;
    *(_OWORD *)(v1277 + 16) = xmmword_100C25ED0;
    *(_OWORD *)(v1277 + 32) = xmmword_100C31860;
    ChartLineStyle.init(strokeStyle:lineThickness:lineColor:lineDash:opacity:opacityIncreasedContrast:areaStyle:)();
    sub_100162808();
    v1278();
    sub_10058C7C4();
    sub_10012B95C();
    v1267();
    ((void (*)(uint64_t *, void, uint64_t))v1533)(v1268, v1527, v1538);
    _s7Weather24LocationCompositionStateOwst_0(v1271, 1, 1, (uint64_t)v1530);
    uint64_t v1279 = sub_10016288C();
    long long v1280 = v1526;
    *(_OWORD *)(v1279 + 16) = v1525;
    *(_OWORD *)(v1279 + 32) = v1280;
    uint64_t v282 = v1466;
    ChartLineStyle.init(strokeStyle:lineThickness:lineColor:lineDash:opacity:opacityIncreasedContrast:areaStyle:)();
    uint64_t v1281 = v1500;
    sub_100128A4C();
    v1282 = (void (*)(uint64_t, uint64_t, uint64_t))v1629._object;
    ((void (*)(void))v1629._object)();
    uint64_t v1283 = v1555;
    uint64_t v1284 = sub_10016EEC0();
    sub_1001B7204(v1284, v1281 + v1285, &qword_100E6BCB0);
    uint64_t v1286 = *(void *)(v1566 + 16);
    uint64_t v1537 = v1566 + 16;
    uint64_t v1535 = v1286;
    sub_100162808();
    v1287();
    *(unsigned char *)(v1281 + v1269[5]) = &qword_100F51778;
    *(unsigned char *)(v1281 + v1269[8]) = 0;
    *(unsigned char *)(v1281 + v1269[9]) = 0;
    *(void *)(v1281 + v1269[10]) = 0;
    uint64_t v1288 = sub_1001D24FC();
    v1282(v1288, v1276, v1270);
    uint64_t v1538 = DetailChartCondition.id.getter();
    uint64_t v1564 = v1289;
    sub_100162F0C();
    v1290();
    uint64_t v1291 = sub_10017DF08(&qword_100E6BEF8);
    uint64_t v1292 = v1532;
    uint64_t v1088 = v1532 + *(int *)(v1291 + 48);
    v1293 = *(void (**)(void))(v1582 + 16);
    uint64_t v1294 = v1581;
    sub_100179020();
    v1293();
    _s7Weather24LocationCompositionStateOwst_0(v1292, 0, 1, v1294);
    sub_100179020();
    v1293();
    _s7Weather24LocationCompositionStateOwst_0(v1088, 0, 1, v1294);
    sub_10018B2DC();
    sub_1001631E8();
    v1295();
    sub_100162808();
    v1296();
    sub_100162808();
    v1297();
    sub_10018295C();
    sub_10018689C();
    v1594 = (void *)v1298;
    if (v1143 <= v1146)
    {
      uint64_t v1299 = sub_10017DF08(&qword_100E6BF00);
      sub_100172308(v1299);
      sub_100162808();
      uint64_t v1301 = v1300();
      sub_100183458(v1301, v1302, &qword_100E6B640);
      uint64_t v1591 = (uint64_t)sub_10030DD38(v1281);
      uint64_t v1303 = sub_1001D1808();
      v1304(v1303);
      uint64_t v1305 = DetailChartCondition.title.getter();
      sub_10012B594(v1305, v1306);
      id v1307 = v1565;
      id v1308 = [v1565 mainBundle];
      sub_1001631D8();
      sub_100164FD4();
      sub_10018AEC0();
      v1632._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
      Swift::String v1313 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1309, v1310, v1311, v1312, v1632);
      uint64_t v1563 = v1313._countAndFlagsBits;
      uint64_t v1558 = (uint64_t)v1313._object;

      id v1314 = [v1307 mainBundle:v1633._object v1436 v1639._object v1437 v1438 v1439 v1440];
      sub_1001631D8();
      sub_100164FD4();
      sub_100127AA8();
      Swift::String v1319 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1315, v1316, v1317, v1318, v1638);
      v1557 = (void (*)(void))v1319._countAndFlagsBits;
      v1554 = v1319._object;

      id v1320 = [v1307 mainBundle];
      sub_1001631D8();
      sub_100164FD4();
      v1321._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
      v1322._uint64_t countAndFlagsBits = 0x7374737547;
      v1322._object = (void *)0xE500000000000000;
      Swift::String v1323 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1321, (Swift::String_optional)0, (NSBundle)v1320, v1322, v1639);

      uint64_t v1324 = v1283;
      uint64_t v1325 = v1548;
      sub_10014EBB0(v1324, v1548, (void (*)(void))type metadata accessor for ConditionDetailChartDataInput);
      v1326 = v1556;
      uint64_t v1327 = v1567;
      sub_100162808();
      v1328();
      sub_100188994();
      uint64_t v1329 = v1566;
      sub_10018C3F0();
      v1330 = (void *)swift_allocObject();
      sub_1003139F8(v1325, (uint64_t)v1330 - 0x2FFFFFFFFFFFFFD4);
      (*(void (**)(char *, char *, uint64_t))(v1329 + 32))((char *)&stru_100E5BFF0.type + (void)v1330, v1326, v1327);
      uint64_t v1331 = sub_10017DF08(&qword_100E6BF10);
      uint64_t v1332 = v1551;
      sub_100163050(v1551, v1333, v1334, v1331);
      double v1335 = sub_10058C858();
      double v1336 = sub_10058C80C();
      v1337 = v1561;
      double *v1561 = v1336;
      sub_10018E02C();
      sub_1001631E8();
      v1338();
      sub_1001631E8();
      v1339();
      v1436 = sub_100313A5C;
      v1639._object = v1330;
      v1435 = (uint64_t (*)())v1323._countAndFlagsBits;
      v1633._object = v1323._object;
      *((void *)&v1434 + 1) = v1554;
      *(void *)&long long v1434 = v1557;
      v1629._object = object;
      uint64_t v1433 = countAndFlagsBits;
      sub_10018239C();
      sub_10018A86C();
      sub_10019D4A0(v1538, v1564, v1552, v1143, v1146, v1335, v1084, 0, v1332, v1340, v1395, *(uint64_t *)v1398, (uint64_t)v1337, 7, 0, 0, 0, 0x80u, v1414,
        v1418,
        v1423,
        v1426,
        v1429,
        v1432,
        v1433,
        (uint64_t)v1629._object,
        v1434,
        *((uint64_t *)&v1434 + 1),
        (uint64_t)v1435,
        (uint64_t)v1633._object,
        (uint64_t)v1436,
        (char *)v1639._object);
      sub_1003153FC(v1500, (void (*)(void))type metadata accessor for DetailChartViewModelFactory.PeakMarkerRequestContext);
      v1341 = *(void (**)(void))(v1582 + 8);
      sub_10017C964();
      v1341();
      sub_10017C964();
      v1341();
      (*(void (**)(uint64_t, uint64_t))(v1590 + 8))(v1578, v1596);
      goto LABEL_99;
    }
    __break(1u);
    goto LABEL_204;
  }
  if (v280 != enum case for DetailChartCondition.chanceOfRain(_:)) {
    goto LABEL_212;
  }
  sub_10017DF08(&qword_100E6BEE8);
  *(_OWORD *)(sub_10016288C() + 16) = xmmword_100C251B0;
  static Color.cyan.getter();
  uint64_t v1092 = Gradient.Stop.init(color:location:)();
  sub_10018C838(v1092, v1093);
  Gradient.init(stops:)();
  uint64_t v1094 = v1473;
  sub_100162808();
  v1097(v1095, v1096);
  BOOL v1098 = *(unsigned char *)(v258 + v1529) == 1;
  v1099 = (int *)v1489;
  sub_1001B7204(v1490, v1094 + *(int *)(v1489 + 24), &qword_100E6BCB0);
  sub_100315450();
  v1530 = (uint64_t *)v1100;
  sub_100162808();
  v1103(v1101, v1102);
  uint64_t v1104 = static Color.cyan.getter();
  *(unsigned char *)(v1094 + v1099[5]) = v1098;
  *(unsigned char *)(v1094 + v1099[8]) = 1;
  *(unsigned char *)(v1094 + v1099[9]) = 0;
  *(void *)(v1094 + v1099[10]) = v1104;
  uint64_t v1105 = v1462;
  uint64_t v1106 = (uint64_t)v1595;
  sub_10043F6C8((uint64_t)v1595, v1462);
  uint64_t v1107 = sub_10011C004();
  sub_10012B520(v1107, v1108, (uint64_t)v1497);
  uint64_t v1109 = v1464;
  if (v515)
  {
    sub_100178110(v1105, &qword_100E6B640);
    uint64_t v1122 = (uint64_t)v1593;
    _s7Weather24LocationCompositionStateOwst_0(v1109, 1, 1, (uint64_t)v1593);
    uint64_t v1110 = v1472;
    uint64_t v1111 = v1463;
  }
  else
  {
    DetailChartDataElement.date.getter();
    sub_1001EC3D8();
    sub_100127BA4();
    v1121(v1113, v1114, v1115, v1116, v1117, v1118, v1119, v1120, *((void *)&v1434 + 1));
    uint64_t v1122 = (uint64_t)v1593;
    _s7Weather24LocationCompositionStateOwst_0(v1109, 0, 1, (uint64_t)v1593);
    sub_10012B520(v1109, 1, v1122);
    uint64_t v1110 = v1472;
    uint64_t v1111 = v1463;
    if (!v1123)
    {
      sub_1001CB730();
      sub_1001C8694();
      v1147();
      goto LABEL_142;
    }
  }
  Date.init()();
  sub_100178110(v1109, (uint64_t *)&unk_100E73CA0);
LABEL_142:
  sub_1003043B0(v1106, (uint64_t (*)(void))&type metadata accessor for DetailChartDataElement, v1111);
  uint64_t v1148 = sub_10011C004();
  sub_10012B520(v1148, v1149, (uint64_t)v1497);
  if (v515)
  {
    sub_100178110(v1111, &qword_100E6B640);
    uint64_t v1152 = v1465;
    sub_1001D1574(v1465, 1);
    uint64_t v1150 = v1590;
  }
  else
  {
    uint64_t v1151 = v1465;
    DetailChartDataElement.date.getter();
    sub_1001EC3D8();
    uint64_t v1152 = v1151;
    sub_100127BA4();
    v1153();
    _s7Weather24LocationCompositionStateOwst_0(v1151, 0, 1, v1122);
    sub_10012B520(v1151, 1, v1122);
    uint64_t v1150 = v1590;
    if (!v1154)
    {
      sub_1001CB730();
      sub_1001C8694();
      v1155();
      goto LABEL_148;
    }
  }
  Date.init()();
  sub_100178110(v1152, (uint64_t *)&unk_100E73CA0);
LABEL_148:
  uint64_t v1156 = (uint64_t)v1562;
  uint64_t v1157 = v1476;
  char v1158 = static Date.> infix(_:_:)();
  sub_10030F180(v1158 & 1, v1157, v1110, v1156, v1469);
  sub_1001097C0();
  DetailChartGradientModel.init(gradient:startValue:endValue:)();
  sub_1001A87BC();
  sub_100162808();
  v1159();
  v1160 = *(void (**)(void))(v1150 + 16);
  sub_1001886D8();
  v1160();
  sub_1001631E8();
  v1161();
  uint64_t v1533 = v1150 + 16;
  *(void *)&long long v1528 = v1160;
  sub_1001886D8();
  v1160();
  ChartAreaStyle.init(gradient:opacity:)();
  uint64_t v1162 = type metadata accessor for ChartAreaStyle();
  sub_100182F60(v1162);
  sub_10017DF08(&qword_100E6BEF0);
  uint64_t v1163 = sub_10016288C();
  *(_OWORD *)(v1163 + 16) = xmmword_100C25ED0;
  *(_OWORD *)(v1163 + 32) = xmmword_100C31860;
  sub_1001649B4();
  v1614 = v1595;
  uint64_t v1164 = v1555;
  if (*(unsigned char *)(v1555 + v1529) != 1)
  {
    uint64_t v1169 = v1460;
    uint64_t v1170 = (uint64_t)v1593;
    uint64_t v1168 = v1490;
    goto LABEL_153;
  }
  uint64_t v1165 = v1458;
  sub_1001B7204((uint64_t)v1592, v1458, &qword_100E6B640);
  uint64_t v1166 = sub_10011C004();
  sub_10012B520(v1166, v1167, (uint64_t)v1497);
  uint64_t v1168 = v1490;
  if (v515)
  {
    sub_100178110(v1165, &qword_100E6B640);
    uint64_t v1169 = v1460;
    uint64_t v1170 = (uint64_t)v1593;
    goto LABEL_153;
  }
  uint64_t v1181 = *(void *)(v1499 + 32);
  *(void *)&long long v1527 = v1499 + 32;
  *(void *)&long long v1526 = v1181;
  sub_1001627D4();
  v1182();
  uint64_t v1183 = *(void *)(v1164 + v1449);
  uint64_t v1184 = *(void *)(v1183 + 16);
  uint64_t v1170 = (uint64_t)v1593;
  if (v1184)
  {
    v1595 = *(void **)(v1457 + 16);
    sub_100129058();
    uint64_t v1168 = v1183 + v1185;
    LODWORD(v1570) = enum case for Calendar.Component.hour(_:);
    uint64_t v1538 = v1456 + 104;
    uint64_t v1537 = v1456 + 8;
    v1534 = (uint64_t *)(v1186 - 8);
    uint64_t v1578 = v1186;
    uint64_t v1535 = *(void *)(v1186 + 56);
    *(void *)&long long v1525 = v1183;
    swift_bridgeObjectRetain();
    uint64_t v1187 = v1455;
    uint64_t v1164 = v1445;
    uint64_t v367 = (void (*)(void))v1577;
    uint64_t v1170 = v1471;
    while (1)
    {
      sub_10008B8B4();
      v1188();
      HourWeather.date.getter();
      sub_1001631E8();
      v1189();
      char v1190 = Calendar.isDate(_:equalTo:toGranularity:)();
      sub_100162F0C();
      v1191();
      sub_100164F40();
      v1192();
      if (v1190) {
        break;
      }
      sub_100162F0C();
      v1193();
      v1168 += v1535;
      if (!--v1184)
      {
        sub_100214D54();
        uint64_t v1195 = v1451;
        goto LABEL_179;
      }
    }
    uint64_t v1195 = v1451;
    sub_1001627D4();
    v1342();
    sub_100214D54();
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v1194 = 1;
    uint64_t v1187 = v1455;
    uint64_t v1184 = v1575;
    uint64_t v1195 = v1451;
  }
LABEL_179:
  _s7Weather24LocationCompositionStateOwst_0(v1195, v1194, 1, v1187);
  swift_bridgeObjectRelease();
  uint64_t v1343 = sub_10011C004();
  sub_10012B520(v1343, v1344, v1187);
  if (v515)
  {
    sub_100162F0C();
    v1345();
    sub_100178110(v1195, &qword_100E6BEC0);
    uint64_t v1169 = v1460;
    goto LABEL_153;
  }
  sub_1001627D4();
  v1346();
  v1347 = v1515;
  v1595 = (void *)sub_10030C64C((uint64_t)v1562, v1450);
  uint64_t v1578 = v1348;
  sub_100162808();
  v1349();
  sub_1001B7204(v1164 + *(int *)(v1184 + 52), (uint64_t)v1633._object, &qword_100E6B6C8);
  sub_100162808();
  v1350();
  sub_100162808();
  v1351();
  sub_10008B8B4();
  v1352();
  sub_10008B8B4();
  v1353();
  WeatherValueCalculationContext.init(hourWeather:dayWeather:chartCondition:units:currentWeather:timeZone:)();
  sub_1001B1E64(v1347 + 12, v1347[15]);
  uint64_t v1570 = dispatch thunk of DetailChartDataPointValueCalculatorType.accessibilityValueDescription(for:)();
  uint64_t v1538 = v1354;
  v1355 = v1562;
  sub_100162808();
  v1356();
  DetailChartDataElement.value.getter();
  uint64_t v1358 = v1441;
  uint64_t v1357 = v1442;
  uint64_t v1359 = v1443;
  (*(void (**)(uint64_t, void, uint64_t))(v1442 + 104))(v1441, enum case for HourWeather.SecondValueUseCase.chart(_:), v1443);
  HourWeather.secondValue(for:units:useCase:)();
  (*(void (**)(uint64_t, uint64_t))(v1357 + 8))(v1358, v1359);
  sub_10030C814(v1444);
  swift_bridgeObjectRetain();
  v1629._object = (void *)sub_10030D0FC();
  *(void *)&long long v1434 = 0;
  uint64_t v1433 = v1538;
  uint64_t v1432 = v1570;
  uint64_t v1360 = DetailChartDataElement.init(date:value:secondValue:thirdValue:valueLabel:dateLabel:accessibilityDateString:accessibilityValueDescription:color:textColor:)();
  v1361 = (void (*)(void))((char *)&v1434 + 8);
  uint64_t v1362 = (uint64_t)v1614;
  __chkstk_darwin(v1360);
  v1629._object = v1355;
  swift_bridgeObjectRetain();
  v1363 = v1536;
  unint64_t v1364 = sub_100A969F8(sub_100313A60, (uint64_t)&v1432, v1362);
  unint64_t v1366 = v1365;
  swift_bridgeObjectRelease();
  v1536 = v1363;
  if ((v1366 & 1) == 0)
  {
    if ((v1364 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v367 = v1497;
      if (v1364 < *(void *)(v1362 + 16))
      {
        v1367 = (void *)v1499;
        sub_100129058();
        v1595 = (void *)v1368;
        v1363 = (void (*)(void))v1367[9];
        unint64_t v1366 = (void)v1363 * v1364;
        v1361 = (void (*)(void))v1367[2];
        sub_100162808();
        v1361();
        DetailChartDataElement.date.getter();
        uint64_t v367 = (void (*)(void))v1367[1];
        sub_100164938();
        v367();
        Date.distance(to:)();
        double v1370 = v1369;
        sub_100127BA4();
        v1371();
        static DetailChartCondition.chanceOfRainNowHourThreshold.getter();
        if (v1370 > v1372)
        {
LABEL_189:
          uint64_t v282 = v1593;
          goto LABEL_191;
        }
        uint64_t v1373 = (uint64_t)v1614;
        if (swift_isUniquelyReferenced_nonNull_native()) {
          goto LABEL_187;
        }
        goto LABEL_210;
      }
    }
    __break(1u);
LABEL_210:
    uint64_t v1373 = sub_100ABB534();
    v1614 = (void *)v1373;
LABEL_187:
    unint64_t v1374 = *(void *)(v1373 + 16);
    if (v1364 < v1374)
    {
      unint64_t v1375 = v1374 - 1;
      v1376 = (char *)v1595 + v1373 + v1366;
      sub_100164938();
      v367();
      sub_1007EB0DC((uint64_t)v1363 + (void)v1376, v1375 - v1364);
      *(void *)(v1373 + 16) = v1375;
      v1614 = (void *)v1373;
      goto LABEL_189;
    }
    __break(1u);
LABEL_212:
    uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
    __break(1u);
    return result;
  }
  v1361 = *(void (**)(void))(v1499 + 16);
  uint64_t v282 = v1593;
LABEL_191:
  ((void (*)(uint64_t, uint64_t, void (*)(void)))v1361)(v1446, v1453, v1497);
  uint64_t v1088 = (uint64_t)v1614;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_207:
  }
    uint64_t v1088 = sub_1007E96BC(0, *(void *)(v1088 + 16) + 1, 1, v1088);
  uint64_t v1377 = v1490;
  unint64_t v1379 = *(void *)(v1088 + 16);
  unint64_t v1378 = *(void *)(v1088 + 24);
  if (v1379 >= v1378 >> 1) {
    uint64_t v1088 = sub_1007E96BC(v1378 > 1, v1379 + 1, 1, v1088);
  }
  *(void *)(v1088 + 16) = v1379 + 1;
  uint64_t v1380 = v1499;
  sub_100129058();
  sub_1001627D4();
  v1381();
  v1614 = (void *)v1088;
  v1382 = *(void (**)(void))(v1380 + 8);
  sub_100164938();
  v1382();
  sub_100162F0C();
  v1383();
  sub_100162F0C();
  v1384();
  sub_100164938();
  v1382();
  uint64_t v1169 = v1460;
  uint64_t v1170 = (uint64_t)v282;
  uint64_t v1164 = v1555;
  uint64_t v1168 = v1377;
LABEL_153:
  sub_10030F524((uint64_t *)&v1614);
  if (!*(unsigned char *)(v1164 + v1529))
  {
    uint64_t v1171 = v1579;
    static ChartDarkeningScrim.hashPatternEffect.getter();
    sub_100A60928();
    (*(void (**)(uint64_t, uint64_t))(v1583 + 8))(v1171, v1599);
  }
  sub_1001B7204(v1168, v1169, &qword_100E6BCB0);
  uint64_t v1172 = type metadata accessor for ExtremaResult();
  sub_10012B520(v1169, 1, v1172);
  if (v515)
  {
    sub_100178110(v1169, &qword_100E6BCB0);
    uint64_t v1175 = v1461;
    sub_1001D1574(v1461, 1);
  }
  else
  {
    uint64_t v1173 = v1164;
    uint64_t v1174 = v1461;
    ExtremaResult.maxDate.getter();
    uint64_t v1175 = v1174;
    uint64_t v1164 = v1173;
    sub_100162F0C();
    v1176();
    sub_1001D1574(v1175, 0);
    uint64_t v1177 = sub_10011C004();
    sub_10012B520(v1177, v1178, v1170);
    if (!v1179)
    {
      sub_1001C8694();
      v1196();
      uint64_t v1197 = v1456;
      uint64_t v1198 = v1170;
      uint64_t v1200 = v1470;
      uint64_t v1199 = v1471;
      (*(void (**)(uint64_t, void, uint64_t))(v1456 + 104))(v1470, enum case for Calendar.Component.hour(_:), v1471);
      char v1201 = Calendar.isDate(_:equalTo:toGranularity:)();
      uint64_t v1202 = v1200;
      uint64_t v1170 = v1198;
      uint64_t v1164 = v1173;
      (*(void (**)(uint64_t, uint64_t))(v1197 + 8))(v1202, v1199);
      sub_100127BA4();
      v1203();
      uint64_t v1180 = 7;
      if (v1201) {
        uint64_t v1180 = 8;
      }
      goto LABEL_168;
    }
  }
  sub_100178110(v1175, (uint64_t *)&unk_100E73CA0);
  uint64_t v1180 = 7;
LABEL_168:
  uint64_t v1570 = v1180;
  uint64_t v1204 = v1563;
  sub_100162808();
  v1205();
  v1595 = (void *)DetailChartCondition.id.getter();
  uint64_t v1578 = v1206;
  sub_100162F0C();
  v1207();
  sub_10017DF08(&qword_100E6BEF8);
  uint64_t v1208 = v1532;
  sub_10019B860();
  sub_100162808();
  v1209();
  sub_10018A348(v1208, 0);
  sub_10018A348(v1204, 1);
  sub_1001631E8();
  v1210();
  uint64_t v1211 = v1164;
  v1212 = v1557;
  sub_1001886D8();
  v1212();
  uint64_t v1213 = (uint64_t)v1614;
  sub_100162808();
  v1214();
  uint64_t v1215 = sub_10017DF08(&qword_100E6BF00);
  v1216 = sub_1001A2B44(v1215);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v1216, v1217, v1218, v1170);
  uint64_t v1219 = qword_100E62450;
  v1594 = (void *)v1213;
  swift_bridgeObjectRetain();
  if (v1219 != -1) {
    swift_once();
  }
  sub_100188FC0();
  double v1220 = sub_10058C7E8();
  sub_100162808();
  uint64_t v1222 = v1221();
  sub_100183458(v1222, v1223, &qword_100E6B640);
  uint64_t v1591 = (uint64_t)sub_10030DD38(v1473);
  sub_10017DF08(&qword_100E6BF08);
  v1224 = v1561;
  double *v1561 = 1.0;
  sub_100162808();
  v1225();
  sub_1001631E8();
  v1226();
  sub_1001886D8();
  v1212();
  sub_1001886D8();
  v1212();
  uint64_t v1227 = sub_1001D1808();
  v1228(v1227);
  sub_1001631E8();
  v1229();
  uint64_t v1230 = (uint64_t)v1574;
  uint64_t v1231 = DetailChartCondition.title.getter();
  sub_10012B594(v1231, v1232);
  id v1233 = [v1565 mainBundle];
  sub_10008B8F8();
  sub_1001631D8();
  sub_100127AA8();
  v1234._uint64_t countAndFlagsBits = 0x6C6175746341;
  v1234._object = (void *)0xE600000000000000;
  uint64_t v1238 = NSLocalizedString(_:tableName:bundle:value:comment:)(v1235, v1236, v1237, v1234, v1631)._countAndFlagsBits;
  sub_10019AA70(v1238);
  uint64_t v1240 = v1239;

  uint64_t v1241 = v1211;
  uint64_t v1242 = v1548;
  sub_10014EBB0(v1241, v1548, (void (*)(void))type metadata accessor for ConditionDetailChartDataInput);
  v1243 = v1556;
  uint64_t v1244 = v1567;
  sub_100162808();
  v1245();
  sub_1001093A0();
  uint64_t v1248 = v1247 & ~v1246;
  sub_10019ADE4();
  uint64_t v1251 = (v1249 + v1248) & ~v1250;
  sub_100189DB4();
  uint64_t v1252 = swift_allocObject();
  sub_1003139F8(v1242, v1252 + v1248);
  (*(void (**)(uint64_t, char *, uint64_t))(v1230 + 32))(v1252 + v1251, v1243, v1244);
  uint64_t v1253 = sub_10017DF08(&qword_100E6BF10);
  uint64_t v1254 = v1551;
  sub_100163050(v1551, v1255, v1256, v1253);
  sub_10071A8F8((uint64_t)v1595, v1578, v1532, v1577, (uint64_t)v1594, 0, (uint64_t)v1573, v1552, 0.0, 1.2, v1220, 0x3FC999999999999ALL, 0, v1254, v1579, v1572, v1591, (uint64_t)v1224, v1570,
    v1467,
    v1468,
    0,
    0,
    0,
    64,
    v1584,
    v1559,
    v1575,
    (uint64_t)v1574,
    0,
    0xE000000000000000,
    countAndFlagsBits,
    (uint64_t)object,
    0,
    0xE000000000000000,
    (uint64_t)v1565,
    v1240,
    (uint64_t)sub_100313A5C,
    v1252);
  sub_100162F0C();
  v1257();
  sub_100162F0C();
  v1258();
  v1259 = *(void (**)(void))(v1585 + 8);
  sub_1001851F4();
  v1259();
  v1260 = *(void (**)(void))(v1571 + 8);
  sub_1001D0E38();
  v1260();
  sub_1001D0E38();
  v1260();
  sub_1003153FC(v1473, (void (*)(void))type metadata accessor for DetailChartViewModelFactory.PeakMarkerRequestContext);
  sub_100162F0C();
  v1261();
  sub_1001851F4();
  v1259();
  sub_100178110((uint64_t)v1592, &qword_100E6B640);
  sub_100162F0C();
  v1262();
  sub_100162F0C();
  v1263();
  sub_1001D0E38();
  v1260();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10030BC74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v92 = a9;
  uint64_t v87 = a6;
  uint64_t v88 = a7;
  int v86 = a5;
  uint64_t v97 = a4;
  uint64_t v96 = a2;
  uint64_t v89 = a10;
  uint64_t v90 = a8;
  uint64_t v14 = type metadata accessor for DetailChartDataElement.ValueLabel();
  __chkstk_darwin(v14 - 8);
  uint64_t v91 = (uint64_t *)((char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v80 = type metadata accessor for HourWeather.SecondValueUseCase();
  uint64_t v79 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v78 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = type metadata accessor for TimeZone();
  uint64_t v76 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v75 = (uint64_t *)((char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v74 = type metadata accessor for CurrentWeather();
  uint64_t v73 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v72 = (char *)&v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = type metadata accessor for ConditionUnits();
  uint64_t v70 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  uint64_t v69 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for DetailChartCondition();
  uint64_t v67 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v66 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10017DF08(&qword_100E6B6C8);
  __chkstk_darwin(v21 - 8);
  uint64_t v65 = (uint64_t)&v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = type metadata accessor for HourWeather();
  uint64_t v23 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v64 = (char *)&v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for WeatherValueCalculationContext();
  uint64_t v84 = *(void *)(v25 - 8);
  uint64_t v85 = v25;
  __chkstk_darwin(v25);
  uint64_t v95 = (char *)&v63 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for Date();
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v63 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  HourWeather.date.getter();
  uint64_t v31 = (int *)type metadata accessor for ConditionDetailChartDataInput(0);
  uint64_t v32 = a3 + v31[10];
  uint64_t v33 = sub_10030C64C((uint64_t)v30, v32);
  uint64_t v81 = v34;
  uint64_t v82 = v33;
  uint64_t v35 = *(void (**)(char *, uint64_t))(v28 + 8);
  uint64_t v83 = v30;
  v35(v30, v27);
  uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  uint64_t v94 = a1;
  v36(v64, a1, v93);
  sub_1001B7204(a3 + v31[13], v65, &qword_100E6B6C8);
  uint64_t v93 = a3 + v31[6];
  (*(void (**)(char *))(v67 + 16))(v66);
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v69, v97, v71);
  (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v72, a3 + v31[12], v74);
  (*(void (**)(void *, uint64_t, uint64_t))(v76 + 16))(v75, v32, v77);
  WeatherValueCalculationContext.init(hourWeather:dayWeather:chartCondition:units:currentWeather:timeZone:)();
  uint64_t v37 = *(void *)(v96 + 120);
  uint64_t v75 = (void *)(v96 + 96);
  sub_1001B1E64((void *)(v96 + 96), v37);
  dispatch thunk of DetailChartDataPointValueCalculatorType.value(for:)();
  Double.clamped(to:)();
  double v39 = v38;
  LODWORD(v77) = enum case for HourWeather.SecondValueUseCase.chart(_:);
  uint64_t v40 = v79;
  uint64_t v76 = *(void *)(v79 + 104);
  uint64_t v41 = v78;
  uint64_t v42 = v80;
  ((void (*)(char *))v76)(v78);
  HourWeather.secondValue(for:units:useCase:)();
  uint64_t v43 = *(void (**)(char *, uint64_t))(v40 + 8);
  v43(v41, v42);
  Double.clamped(to:)();
  double v45 = v44;
  ((void (*)(char *, void, uint64_t))v76)(v41, v77, v42);
  double v46 = COERCE_DOUBLE(HourWeather.thirdValue(for:units:useCase:)());
  char v48 = v47;
  int v49 = v47 & 1;
  v43(v41, v42);
  if ((v48 & 1) == 0)
  {
    Double.clamped(to:)();
    double v46 = v50;
  }
  if (v86)
  {
    sub_1001B1E64(v75, *(void *)(v96 + 120));
    dispatch thunk of DetailChartDataPointValueCalculatorType.accessibilityValueDescription(for:)();
  }
  uint64_t v51 = v87;
  double v52 = *(double *)v87;
  if (*(double *)v87 >= v39) {
    double v52 = v39;
  }
  if (*(unsigned char *)(v87 + 8)) {
    double v52 = v39;
  }
  *(double *)uint64_t v87 = v52;
  *(unsigned char *)(v51 + 8) = 0;
  uint64_t v53 = v88;
  double v54 = *(double *)v88;
  if (v39 > *(double *)v88) {
    double v54 = v39;
  }
  if (*(unsigned char *)(v88 + 8)) {
    double v54 = v39;
  }
  *(double *)uint64_t v88 = v54;
  *(unsigned char *)(v53 + 8) = 0;
  uint64_t v55 = v90;
  double v56 = *(double *)v90;
  if (*(double *)v90 >= v45) {
    double v56 = v45;
  }
  if (*(unsigned char *)(v90 + 8)) {
    double v56 = v45;
  }
  *(double *)uint64_t v90 = v56;
  *(unsigned char *)(v55 + 8) = 0;
  uint64_t v57 = v89;
  double v58 = *(double *)v89;
  if (v45 > *(double *)v89) {
    double v58 = v45;
  }
  if (*(unsigned char *)(v89 + 8)) {
    double v58 = v45;
  }
  *(double *)uint64_t v89 = v58;
  *(unsigned char *)(v57 + 8) = 0;
  if (!v49)
  {
    double v59 = v46;
    double v60 = *(double *)a11;
    if (*(double *)a11 >= v46) {
      double v60 = v46;
    }
    if (*(unsigned char *)(a11 + 8)) {
      double v60 = v46;
    }
    *(double *)a11 = v60;
    *(unsigned char *)(a11 + 8) = 0;
    double v61 = *(double *)a12;
    if (*(double *)a12 < v46) {
      double v61 = v46;
    }
    if (!*(unsigned char *)(a12 + 8)) {
      double v59 = v61;
    }
    *(double *)a12 = v59;
    *(unsigned char *)(a12 + 8) = 0;
  }
  HourWeather.date.getter();
  sub_10030C814(v91);
  swift_bridgeObjectRetain();
  sub_10030D0FC();
  DetailChartDataElement.init(date:value:secondValue:thirdValue:valueLabel:dateLabel:accessibilityDateString:accessibilityValueDescription:color:textColor:)();
  return (*(uint64_t (**)(char *, uint64_t))(v84 + 8))(v95, v85);
}

uint64_t sub_10030C64C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DetailChartViewModelFactory.FormattedHoursCacheKey(0);
  uint64_t v5 = v4 - 8;
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v10 = (char *)&v18 - v9;
  uint64_t v11 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v10, a1, v11);
  uint64_t v12 = &v10[*(int *)(v5 + 28)];
  uint64_t v13 = type metadata accessor for TimeZone();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v12, a2, v13);
  Cache.subscript.getter();
  if (v19)
  {
    uint64_t v14 = v18;
  }
  else
  {
    uint64_t v14 = Date.formattedHours(timeZone:forAccessibility:)();
    uint64_t v16 = v15;
    sub_10014EBB0((uint64_t)v10, (uint64_t)v8, (void (*)(void))type metadata accessor for DetailChartViewModelFactory.FormattedHoursCacheKey);
    uint64_t v18 = v14;
    uint64_t v19 = v16;
    swift_bridgeObjectRetain();
    Cache.subscript.setter();
  }
  sub_1003153FC((uint64_t)v10, (void (*)(void))type metadata accessor for DetailChartViewModelFactory.FormattedHoursCacheKey);
  return v14;
}

uint64_t sub_10030C814@<X0>(void *a1@<X8>)
{
  sub_10017DF08(&qword_100E6BF38);
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_100109314();
  sub_100129064();
  type metadata accessor for Wind();
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_100109314();
  sub_10017DF08(&qword_100E6B648);
  sub_100179C0C();
  uint64_t v68 = v3;
  __chkstk_darwin(v4);
  sub_100162EF8();
  sub_1001626D4();
  __chkstk_darwin(v5);
  sub_100128F8C();
  type metadata accessor for HourWeather();
  sub_100179C0C();
  uint64_t v71 = v7;
  uint64_t v72 = v6;
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v70 = v8;
  sub_100129064();
  type metadata accessor for UVIndex();
  sub_100179C0C();
  uint64_t v69 = v9;
  __chkstk_darwin(v10);
  sub_100109314();
  sub_100129064();
  uint64_t v11 = type metadata accessor for PressureTrend();
  sub_100179C0C();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = type metadata accessor for WeatherCondition();
  sub_100179C0C();
  uint64_t v20 = v19;
  __chkstk_darwin(v21);
  sub_1001626E0();
  uint64_t v24 = v23 - v22;
  uint64_t v25 = type metadata accessor for DetailChartCondition();
  sub_100179C0C();
  uint64_t v27 = v26;
  __chkstk_darwin(v28);
  sub_1001626E0();
  uint64_t v31 = v30 - v29;
  sub_100162808();
  v32();
  int v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 88))(v31, v25);
  if (v33 == enum case for DetailChartCondition.humidity(_:))
  {
    sub_1001ABC4C(0, (unint64_t *)&qword_100E66F90);
    Class isa = (void *)static NSNumberFormatter.percent.getter();
    HourWeather.humidity.getter();
    v35.super.super.Class isa = Double._bridgeToObjectiveC()().super.super.isa;
    id v36 = [isa stringFromNumber:v35.super.super.isa];
    goto LABEL_3;
  }
  if (v33 == enum case for DetailChartCondition.pressure(_:))
  {
    uint64_t v38 = (uint64_t)a1 + *(int *)(sub_10017DF08(&qword_100E6BF40) + 48);
    HourWeather.pressureTrend.getter();
    PressureTrend.symbolName.getter();
    sub_1001DE200();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v17, v11);
    *a1 = v17;
    a1[1] = v25;
    uint64_t v39 = type metadata accessor for Image.TemplateRenderingMode();
    sub_100163050(v38, v40, v41, v39);
    type metadata accessor for DetailChartDataElement.ValueLabel();
    sub_100162E4C();
LABEL_28:
    sub_1001631E8();
    return v60();
  }
  if (v33 == enum case for DetailChartCondition.precipitationTotal(_:)
    || v33 == enum case for DetailChartCondition.temperature(_:)
    || v33 == enum case for DetailChartCondition.temperatureFeelsLike(_:))
  {
    HourWeather.condition.getter();
    char v44 = HourWeather.isDaylight.getter();
    Swift::String_optional v45 = WeatherCondition.conditionIconName(isDaytime:)(v44 & 1);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v24, v18);
    uint64_t countAndFlagsBits = 0x2E78616D2E6E7573;
    if (v45.value._object) {
      uint64_t countAndFlagsBits = v45.value._countAndFlagsBits;
    }
    object = (void *)0xEC0000006C6C6966;
    if (v45.value._object) {
      object = v45.value._object;
    }
    *a1 = countAndFlagsBits;
    a1[1] = object;
    uint64_t v48 = (uint64_t)a1 + *(int *)(sub_10017DF08(&qword_100E6BF40) + 48);
    static Image.TemplateRenderingMode.macSafeOriginal.getter();
    uint64_t v49 = type metadata accessor for Image.TemplateRenderingMode();
    _s7Weather24LocationCompositionStateOwst_0(v48, 0, 1, v49);
    goto LABEL_20;
  }
  if (v33 == enum case for DetailChartCondition.uvIndex(_:))
  {
    sub_1001ABC4C(0, (unint64_t *)&qword_100E66F90);
    double v50 = (void *)static NSNumberFormatter.digits.getter();
    HourWeather.uvIndex.getter();
    uint64_t v51 = UVIndex.value.getter();
    double v52 = *(void (**)(void))(v69 + 8);
    sub_100164F40();
    v52();
    id v53 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v51];
    id v54 = [v50 stringFromNumber:v53];

    if (v54)
    {
      uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v57 = v56;
    }
    else
    {
      uint64_t v55 = 0;
      uint64_t v57 = 0;
    }
    sub_100162808();
    v66();
    if (!v57)
    {
      HourWeather.uvIndex.getter();
      UVIndex.value.getter();
      sub_100164F40();
      v52();
      uint64_t v55 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v57 = v67;
    }
    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v70, v72);
    *a1 = v55;
    a1[1] = v57;
    type metadata accessor for DetailChartDataElement.ValueLabel();
    sub_100162E4C();
    goto LABEL_28;
  }
  if (v33 == enum case for DetailChartCondition.visibility(_:))
  {
    HourWeather.visibility.getter();
    double v58 = (void *)ConditionUnits.visibility.getter();
    Measurement<>.converted(to:)();

    double v59 = *(void (**)(void))(v68 + 8);
    sub_10017C964();
    v59();
    Measurement.value.getter();
    sub_10017C964();
    v59();
    sub_1001ABC4C(0, (unint64_t *)&qword_100E66F90);
    v35.super.super.Class isa = (Class)static NSNumberFormatter.decimal.getter();
    Class isa = Double._bridgeToObjectiveC()().super.super.isa;
    id v37 = [(objc_class *)v35.super.super.isa stringFromNumber:isa];

    if (v37) {
      goto LABEL_4;
    }
    goto LABEL_26;
  }
  if (v33 == enum case for DetailChartCondition.wind(_:))
  {
    HourWeather.wind.getter();
    Wind.direction.getter();
    sub_100162F0C();
    v62();
    Measurement.value.getter();
    uint64_t v64 = v63;
    sub_100162F0C();
    v65();
    *a1 = v64;
LABEL_20:
    type metadata accessor for DetailChartDataElement.ValueLabel();
    sub_100162E4C();
    goto LABEL_28;
  }
  if (v33 == enum case for DetailChartCondition.chanceOfRain(_:))
  {
    sub_1001ABC4C(0, (unint64_t *)&qword_100E66F90);
    Class isa = (void *)static NSNumberFormatter.percent.getter();
    HourWeather.precipitationChance.getter();
    v35.super.super.Class isa = Double._bridgeToObjectiveC()().super.super.isa;
    id v36 = [isa stringFromNumber:v35.super.super.isa];
LABEL_3:
    id v37 = v36;

    if (v37)
    {
LABEL_4:
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      sub_1001DE200();

LABEL_27:
      *a1 = v35.super.super.isa;
      a1[1] = isa;
      type metadata accessor for DetailChartDataElement.ValueLabel();
      sub_100162E4C();
      goto LABEL_28;
    }
LABEL_26:
    v35.super.super.Class isa = 0;
    Class isa = (void *)0xE000000000000000;
    goto LABEL_27;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_10030D0FC()
{
  uint64_t v0 = type metadata accessor for Precipitation();
  sub_100179C0C();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = type metadata accessor for DetailChartCondition();
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  sub_100162808();
  v14();
  int v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 88))(v13, v7);
  int v16 = enum case for DetailChartCondition.precipitationTotal(_:);
  sub_10017F000();
  v17();
  uint64_t v18 = 0;
  if (v15 == v16)
  {
    HourWeather.precipitation.getter();
    uint64_t v18 = Precipitation.chartColor.getter();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v6, v0);
  }
  return v18;
}

uint64_t sub_10030D264@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v54 = a5;
  uint64_t v55 = a6;
  uint64_t v51 = a2;
  double v52 = a4;
  LODWORD(v53) = a3;
  uint64_t v60 = a7;
  uint64_t v61 = a1;
  uint64_t v59 = type metadata accessor for TimeZone();
  uint64_t v50 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  double v58 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DetailChartDataElement.ValueLabel();
  uint64_t v56 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v57 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  int v16 = (char *)v43 - v15;
  uint64_t v17 = type metadata accessor for ChartViewModelInterpolationMode();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10017DF08(&qword_100E6BF78);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for ConditionDetailChartDataInput(0);
  if (*(unsigned char *)(v61 + *(int *)(v24 + 36)) == 1)
  {
    uint64_t v25 = (int *)v24;
    uint64_t v44 = v17;
    uint64_t v45 = v18;
    double v46 = v14;
    uint64_t v47 = v8;
    uint64_t v48 = v11;
    uint64_t v49 = v10;
    uint64_t v26 = v50;
    uint64_t v27 = v55;
    uint64_t v28 = v61;
    if (v53)
    {
      uint64_t v32 = v52[10];
      uint64_t v53 = v52[11];
      sub_1001B1E64(v52 + 7, v32);
      double v52 = (void *)(v28 + v25[6]);
      uint64_t v33 = v25[10];
      v43[2] = *(void *)(v28 + v25[11]);
      uint64_t v34 = v25[13];
      v43[0] = v28 + v25[12];
      v43[1] = v28 + v34;
      uint64_t v51 = v28 + v33;
      (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v20, v28 + v25[14], v44);
      MidpointInterpolator.InterpolationMode.init(_:)();
      dispatch thunk of CurrentMarkerValueCalculatorType.value(for:hourlyWeather:currentWeather:dayWeather:units:timeZone:maxRange:interpolationMode:)();
      sub_100178110((uint64_t)v23, &qword_100E6BF78);
    }
    uint64_t v54 = Double.chartValueAccessibilityDescription(for:units:)();
    uint64_t v35 = v57;
    uint64_t v36 = v27;
    uint64_t v37 = v48;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v16, v36, v48);
    Double.clamped(to:)();
    uint64_t v38 = v49;
    *uint64_t v49 = 0;
    v38[1] = 0xE000000000000000;
    (*(void (**)(void *, void, uint64_t))(v56 + 104))(v38, enum case for DetailChartDataElement.ValueLabel.text(_:), v47);
    uint64_t v39 = v46;
    CurrentWeather.date.getter();
    uint64_t v40 = v58;
    static TimeZone.current.getter();
    Date.formattedHours(timeZone:forAccessibility:)();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v40, v59);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v39, v37);
    uint64_t v41 = v60;
    DetailChartDataElement.init(date:value:secondValue:thirdValue:valueLabel:dateLabel:accessibilityDateString:accessibilityValueDescription:color:textColor:)();
    uint64_t v42 = type metadata accessor for DetailChartDataElement();
    return _s7Weather24LocationCompositionStateOwst_0(v41, 0, 1, v42);
  }
  else
  {
    uint64_t v29 = type metadata accessor for DetailChartDataElement();
    uint64_t v30 = v60;
    return _s7Weather24LocationCompositionStateOwst_0(v30, 1, 1, v29);
  }
}

uint64_t sub_10030D804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ConditionDetailChartDataInput(0);
  if (!*(unsigned char *)(a1 + *(int *)(v4 + 36)))
  {
    uint64_t v5 = a1 + *(int *)(v4 + 32);
    uint64_t v6 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, v5, v6);
    goto LABEL_5;
  }
  if (*(unsigned char *)(a1 + *(int *)(v4 + 36)) == 1)
  {
    CurrentWeather.date.getter();
LABEL_5:
    uint64_t v7 = (unsigned int *)&enum case for ChartLineStrokeStyle.dashed(_:);
    goto LABEL_7;
  }
  uint64_t v7 = (unsigned int *)&enum case for ChartLineStrokeStyle.solid(_:);
LABEL_7:
  uint64_t v8 = *v7;
  uint64_t v9 = type metadata accessor for ChartLineStrokeStyle();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 104);

  return v10(a2, v8, v9);
}

double sub_10030D8FC(double a1, double a2)
{
  double v2 = a1 - a2;
  double result = 15.0;
  if (v2 <= 72.0)
  {
    double result = 12.0;
    if (v2 <= 60.0)
    {
      double result = 10.0;
      if (v2 <= 48.0)
      {
        double result = 8.0;
        if (v2 <= 36.0)
        {
          double result = 6.0;
          if (v2 <= 30.0)
          {
            double result = 3.0;
            if (v2 > 18.0) {
              return 5.0;
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10030D978(uint64_t result, double a2, double a3, double a4)
{
  if (a2 <= a3) {
    a2 = a3;
  }
  if (a2 <= a4) {
    a2 = a4;
  }
  uint64_t v4 = *(void *)(result + 16);
  if (v4)
  {
    uint64_t v5 = (double *)(result + 32);
    do
    {
      double v6 = *v5++;
      double v7 = v6;
      if (a2 <= v6) {
        a2 = v7;
      }
      --v4;
    }
    while (v4);
  }
  return result;
}

uint64_t sub_10030D9AC(uint64_t result, double a2, double a3, double a4)
{
  if (a3 < a2) {
    a2 = a3;
  }
  if (a2 > a4) {
    a2 = a4;
  }
  uint64_t v4 = *(void *)(result + 16);
  if (v4)
  {
    uint64_t v5 = (double *)(result + 32);
    do
    {
      double v6 = *v5++;
      double v7 = v6;
      if (v6 < a2) {
        a2 = v7;
      }
      --v4;
    }
    while (v4);
  }
  return result;
}

void sub_10030D9E0(int64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v38 = type metadata accessor for DetailChartDataElement();
  sub_100179C0C();
  uint64_t v42 = v8;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  sub_100128F8C();
  v36[0] = v13;
  int64_t v40 = a2;
  uint64_t v41 = a3;
  uint64_t v14 = sub_100315378(a1, a2, a3);
  uint64_t v43 = _swiftEmptyArrayStorage;
  sub_1007F3414();
  if ((v14 & 0x8000000000000000) == 0)
  {
    uint64_t v15 = v43;
    uint64_t v39 = a4;
    if (v14)
    {
      sub_100129058();
      uint64_t v37 = v16;
      v36[3] = a4 + v16;
      v36[2] = v17 + 16;
      uint64_t v18 = (void (**)(char *, char *, uint64_t))(v17 + 32);
      uint64_t v19 = v41;
      uint64_t v20 = v38;
      while (1)
      {
        BOOL v21 = a1 <= v40;
        if (v19 > 0) {
          BOOL v21 = a1 >= v40;
        }
        if (v21) {
          break;
        }
        if (__OFADD__(a1, v19)) {
          int64_t v22 = ((a1 + v19) >> 63) ^ 0x8000000000000000;
        }
        else {
          int64_t v22 = a1 + v19;
        }
        if (a1 < 0) {
          goto LABEL_34;
        }
        if ((unint64_t)a1 >= *(void *)(a4 + 16)) {
          goto LABEL_35;
        }
        uint64_t v23 = *(void *)(v42 + 72);
        sub_10008B8B4();
        v24();
        uint64_t v43 = v15;
        unint64_t v25 = v15[2];
        if (v25 >= v15[3] >> 1)
        {
          sub_1007F3414();
          uint64_t v15 = v43;
        }
        v15[2] = v25 + 1;
        (*v18)((char *)v15 + v37 + v25 * v23, v12, v20);
        a1 = v22;
        --v14;
        a4 = v39;
        uint64_t v19 = v41;
        if (!v14) {
          goto LABEL_17;
        }
      }
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
    }
    else
    {
      int64_t v22 = a1;
      uint64_t v19 = v41;
LABEL_17:
      BOOL v26 = v22 <= v40;
      if (v19 > 0) {
        BOOL v26 = v22 >= v40;
      }
      if (v26)
      {
LABEL_20:
        swift_bridgeObjectRelease();
        return;
      }
      uint64_t v37 = v42 + 16;
      uint64_t v27 = (void (**)(unint64_t, uint64_t, uint64_t))(v42 + 32);
      uint64_t v28 = v36[0];
      uint64_t v29 = v38;
      while (1)
      {
        int64_t v30 = __OFADD__(v22, v19) ? ((v22 + v19) >> 63) ^ 0x8000000000000000 : v22 + v19;
        if (v22 < 0) {
          break;
        }
        if ((unint64_t)v22 >= *(void *)(a4 + 16)) {
          goto LABEL_37;
        }
        unint64_t v31 = (*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
        uint64_t v32 = *(void *)(v42 + 72);
        sub_10008B8B4();
        v33();
        uint64_t v43 = v15;
        unint64_t v34 = v15[2];
        if (v34 >= v15[3] >> 1)
        {
          sub_1007F3414();
          uint64_t v15 = v43;
        }
        v15[2] = v34 + 1;
        (*v27)((unint64_t)v15 + v31 + v34 * v32, v28, v29);
        uint64_t v19 = v41;
        BOOL v35 = v30 <= v40;
        if (v41 > 0) {
          BOOL v35 = v30 >= v40;
        }
        int64_t v22 = v30;
        a4 = v39;
        if (v35) {
          goto LABEL_20;
        }
      }
    }
    __break(1u);
LABEL_37:
    __break(1u);
  }
  __break(1u);
}

void *sub_10030DD38(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DetailChartDataElement();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v122 = v2;
  uint64_t v123 = v3;
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v121 = (char *)&v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v118 = (char *)&v98 - v6;
  uint64_t v7 = sub_10017DF08(&qword_100E6B640);
  uint64_t v103 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v120 = (char *)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v119 = (char *)&v98 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v106 = (uint64_t)&v98 - v13;
  __chkstk_darwin(v12);
  uint64_t v105 = (uint64_t)&v98 - v14;
  uint64_t v15 = type metadata accessor for DetailChartViewModelFactory.PeakMarkerRequestContext(0);
  uint64_t v16 = (int *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v104 = (uint64_t)&v98 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for ConditionUnits();
  uint64_t v117 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v98 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10017DF08(&qword_100E6BCB0);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v100 = (uint64_t)&v98 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v107 = (uint64_t)&v98 - v25;
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v98 - v26;
  uint64_t v28 = type metadata accessor for DetailChartCondition();
  uint64_t v29 = *(void **)(v28 - 8);
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v110 = (char *)&v98 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v109 = (char *)&v98 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v98 - v35;
  __chkstk_darwin(v34);
  uint64_t v38 = (void (*)(char *, uint64_t, uint64_t))((char *)&v98 - v37);
  uint64_t v113 = (void (*)(char *, uint64_t, uint64_t))v29[2];
  v113((char *)&v98 - v37, a1, v28);
  uint64_t v39 = v16[8];
  LODWORD(v101) = *(unsigned __int8 *)(a1 + v16[7]);
  uint64_t v115 = v27;
  sub_1001B7204(a1 + v39, (uint64_t)v27, &qword_100E6BCB0);
  uint64_t v40 = a1 + v16[9];
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v117 + 16);
  uint64_t v114 = v20;
  uint64_t v116 = v18;
  v41(v20, v40, v18);
  uint64_t v42 = v16[11];
  int v102 = *(unsigned __int8 *)(a1 + v16[10]);
  LODWORD(v111) = *(unsigned __int8 *)(a1 + v42);
  uint64_t v43 = enum case for DetailChartCondition.chanceOfRain(_:);
  uint64_t v112 = (void (*)(char *, uint64_t, uint64_t))v29[13];
  v112(v36, enum case for DetailChartCondition.chanceOfRain(_:), v28);
  sub_100313918((unint64_t *)&qword_100E63990, (void (*)(uint64_t))&type metadata accessor for DetailChartCondition);
  LOBYTE(v16) = dispatch thunk of static Equatable.== infix(_:_:)();
  double v46 = (char *)v29[1];
  uint64_t v44 = (char *)(v29 + 1);
  uint64_t v45 = v46;
  ((void (*)(char *, uint64_t))v46)(v36, v28);
  if ((v16 & 1) == 0)
  {
    uint64_t v99 = a1;
    v112(v36, enum case for DetailChartCondition.temperature(_:), v28);
    char v49 = sub_100889C5C((uint64_t)v38, (uint64_t)v36);
    ((void (*)(char *, uint64_t))v45)(v36, v28);
    uint64_t v50 = (uint64_t)v109;
    v113(v109, (uint64_t)v38, v28);
    if (v49)
    {
      ((void (*)(uint64_t, uint64_t))v45)(v50, v28);
      uint64_t v51 = (uint64_t)v110;
      v113(v110, (uint64_t)v38, v28);
      uint64_t v52 = v117;
      uint64_t v53 = (uint64_t)v115;
    }
    else
    {
      v112(v36, v43, v28);
      char v54 = sub_100889C5C(v50, (uint64_t)v36);
      ((void (*)(char *, uint64_t))v45)(v36, v28);
      ((void (*)(uint64_t, uint64_t))v45)(v50, v28);
      uint64_t v51 = (uint64_t)v110;
      v113(v110, (uint64_t)v38, v28);
      uint64_t v52 = v117;
      uint64_t v53 = (uint64_t)v115;
      if ((v54 & 1) == 0)
      {
        v112(v36, enum case for DetailChartCondition.temperatureFeelsLike(_:), v28);
        char v67 = sub_100889C5C(v51, (uint64_t)v36);
        ((void (*)(char *, uint64_t))v45)(v36, v28);
        ((void (*)(uint64_t, uint64_t))v45)(v51, v28);
        int v55 = v111;
        if (v101 && (v67 & 1) == 0)
        {
          (*(void (**)(char *, uint64_t))(v52 + 8))(v114, v116);
          uint64_t v47 = v53;
          goto LABEL_3;
        }
LABEL_8:
        uint64_t v109 = v45;
        uint64_t v110 = v44;
        uint64_t v112 = (void (*)(char *, uint64_t, uint64_t))v28;
        uint64_t v113 = v38;
        uint64_t v56 = v108;
        uint64_t v57 = *(void *)(v108 + 160);
        uint64_t v58 = v99;
        Cache.subscript.getter();
        uint64_t v48 = v124;
        uint64_t v59 = v116;
        if (v124)
        {
          (*(void (**)(char *, uint64_t))(v52 + 8))(v114, v116);
LABEL_10:
          uint64_t v60 = v53;
LABEL_29:
          sub_100178110(v60, &qword_100E6BCB0);
          ((void (*)(void (*)(char *, uint64_t, uint64_t), void (*)(char *, uint64_t, uint64_t)))v109)(v113, v112);
          return v48;
        }
        uint64_t v61 = v107;
        sub_1001B7204(v53, v107, &qword_100E6BCB0);
        uint64_t v62 = type metadata accessor for ExtremaResult();
        int v63 = _s7Weather24LocationCompositionStateOwet_0(v61, 1, v62);
        uint64_t v101 = v57;
        if (v63 == 1)
        {
          uint64_t v64 = v106;
          uint64_t v65 = (uint64_t)v114;
          uint64_t v66 = v105;
        }
        else
        {
          ExtremaResult.minValue.getter();
          double v69 = v68;
          uint64_t v70 = v61;
          uint64_t v71 = *(void (**)(uint64_t, uint64_t))(*(void *)(v62 - 8) + 8);
          v71(v70, v62);
          uint64_t v72 = v100;
          sub_1001B7204(v53, v100, &qword_100E6BCB0);
          if (_s7Weather24LocationCompositionStateOwet_0(v72, 1, v62) != 1)
          {
            ExtremaResult.maxValue.getter();
            double v97 = v96;
            v71(v72, v62);
            uint64_t v64 = v106;
            uint64_t v65 = (uint64_t)v114;
            uint64_t v66 = v105;
            int v55 = v111;
            if (v97 <= v69)
            {
              sub_10014EBB0(v58, v104, (void (*)(void))type metadata accessor for DetailChartViewModelFactory.PeakMarkerRequestContext);
              uint64_t v48 = _swiftEmptyArrayStorage;
              uint64_t v124 = _swiftEmptyArrayStorage;
              Cache.subscript.setter();
              (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v65, v59);
              goto LABEL_10;
            }
LABEL_19:
            int v73 = v55;
            uint64_t v74 = v113;
            sub_10030F628(v53, v73, v56, (uint64_t)v113, v65, v66);
            sub_10031097C(v53, v102, v56, (uint64_t)v74, v65, v58, v64);
            sub_10017DF08(&qword_100E6BF48);
            uint64_t v75 = *(void *)(v103 + 72);
            unint64_t v76 = (*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80);
            uint64_t v77 = swift_allocObject();
            *(_OWORD *)(v77 + 16) = xmmword_100C25ED0;
            uint64_t v111 = v77;
            unint64_t v78 = v77 + v76;
            sub_1001B7204(v66, v77 + v76, &qword_100E6B640);
            sub_1001B7204(v64, v78 + v75, &qword_100E6B640);
            char v79 = 0;
            uint64_t v80 = 0;
            uint64_t v81 = v122;
            uint64_t v82 = (void (**)(char *, uint64_t, uint64_t))(v123 + 32);
            uint64_t v48 = _swiftEmptyArrayStorage;
            uint64_t v83 = (uint64_t)v120;
            uint64_t v84 = v121;
            uint64_t v85 = (uint64_t)v119;
            do
            {
              char v86 = v79;
              sub_1001B7204(v78 + v80 * v75, v85, &qword_100E6B640);
              sub_10020E72C(v85, v83, &qword_100E6B640);
              if (_s7Weather24LocationCompositionStateOwet_0(v83, 1, v81) == 1)
              {
                sub_100178110(v83, &qword_100E6B640);
              }
              else
              {
                uint64_t v87 = *v82;
                uint64_t v88 = v83;
                uint64_t v89 = v118;
                (*v82)(v118, v88, v81);
                v87(v84, (uint64_t)v89, v81);
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v48 = (void *)sub_1007E96BC(0, v48[2] + 1, 1, (uint64_t)v48);
                }
                unint64_t v91 = v48[2];
                unint64_t v90 = v48[3];
                uint64_t v92 = v123;
                uint64_t v83 = (uint64_t)v120;
                if (v91 >= v90 >> 1)
                {
                  uint64_t v94 = sub_1007E96BC(v90 > 1, v91 + 1, 1, (uint64_t)v48);
                  uint64_t v92 = v123;
                  uint64_t v48 = (void *)v94;
                }
                v48[2] = v91 + 1;
                unint64_t v93 = (unint64_t)v48
                    + ((*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80))
                    + *(void *)(v92 + 72) * v91;
                uint64_t v84 = v121;
                uint64_t v81 = v122;
                v87((char *)v93, (uint64_t)v121, v122);
                uint64_t v85 = (uint64_t)v119;
              }
              char v79 = 1;
              uint64_t v80 = 1;
            }
            while ((v86 & 1) == 0);
            swift_setDeallocating();
            sub_1006BB0EC();
            sub_10014EBB0(v99, v104, (void (*)(void))type metadata accessor for DetailChartViewModelFactory.PeakMarkerRequestContext);
            uint64_t v124 = v48;
            swift_bridgeObjectRetain();
            Cache.subscript.setter();
            sub_100178110(v106, &qword_100E6B640);
            sub_100178110(v105, &qword_100E6B640);
            (*(void (**)(char *, uint64_t))(v117 + 8))(v114, v116);
            uint64_t v60 = (uint64_t)v115;
            goto LABEL_29;
          }
          uint64_t v107 = v72;
          uint64_t v64 = v106;
          uint64_t v65 = (uint64_t)v114;
          uint64_t v66 = v105;
          int v55 = v111;
        }
        sub_100178110(v107, &qword_100E6BCB0);
        goto LABEL_19;
      }
    }
    ((void (*)(uint64_t, uint64_t))v45)(v51, v28);
    int v55 = v111;
    goto LABEL_8;
  }
  (*(void (**)(char *, uint64_t))(v117 + 8))(v114, v116);
  uint64_t v47 = (uint64_t)v115;
LABEL_3:
  sub_100178110(v47, &qword_100E6BCB0);
  ((void (*)(void (*)(char *, uint64_t, uint64_t), uint64_t))v45)(v38, v28);
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10030E940(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v3 = *(void *)(a2 + 16);
  double result = sub_1001A6F30(0, (v3 - result) & ~((uint64_t)(v3 - result) >> 63), v3);
  if (v4) {
    unint64_t v5 = v3;
  }
  else {
    unint64_t v5 = result;
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_9;
  }
  if (v3 >= v5)
  {
    type metadata accessor for DetailChartDataElement();
    return a2;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_10030E9F4(uint64_t a1, uint64_t a2)
{
  uint64_t v32 = a2;
  uint64_t v3 = type metadata accessor for DetailChartCondition();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E6B640);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10043F6C8(a1, (uint64_t)v9);
  uint64_t v17 = type metadata accessor for DetailChartDataElement();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v17) == 1)
  {
    sub_100178110((uint64_t)v9, &qword_100E6B640);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 1, 1, v13);
  }
  else
  {
    DetailChartDataElement.date.getter();
    (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v9, v17);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v13);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v32, v3);
      int v20 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
      if (v20 == enum case for DetailChartCondition.precipitationTotal(_:))
      {
        uint64_t v21 = static ApparentPrecipitationIntensityCategory.allCases.getter();
        __chkstk_darwin(v21);
        *(&v32 - 2) = (uint64_t)v16;
        sub_100A960D4((uint64_t)sub_1003153DC, (uint64_t)(&v32 - 4), v21, (uint64_t)&v33, v22, v23, v24, v25);
      }
      else
      {
        if (v20 != enum case for DetailChartCondition.uvIndex(_:))
        {
          (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
          (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
          return 0;
        }
        uint64_t v27 = static UVIndex.ExposureCategory.allCases.getter();
        __chkstk_darwin(v27);
        *(&v32 - 2) = (uint64_t)v16;
        sub_100A96100((uint64_t)sub_1003153BC, (uint64_t)(&v32 - 4), v27, (uint64_t)v34, v28, v29, v30, v31, v32, v33);
      }
      uint64_t v18 = v26;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      return v18;
    }
  }
  sub_100178110((uint64_t)v12, (uint64_t *)&unk_100E73CA0);
  return 0;
}

double sub_10030EE28()
{
  uint64_t v0 = (void *)ConditionUnits.pressure.getter();
  uint64_t v1 = self;
  id v2 = v0;
  id v3 = [v1 inchesOfMercury];
  sub_1001ABC4C(0, &qword_100E6BF30);
  char v4 = static NSObject.== infix(_:_:)();

  if (v4)
  {

    return 0.5;
  }
  else
  {
    id v6 = v2;
    id v7 = [v1 hectopascals];
    char v8 = static NSObject.== infix(_:_:)();

    if ((v8 & 1) != 0
      || (id v6 = v6,
          id v9 = [v1 millibars],
          char v10 = static NSObject.== infix(_:_:)(),
          v6,
          v9,
          (v10 & 1) != 0))
    {

      return 15.0;
    }
    else
    {
      id v11 = v6;
      id v12 = [v1 millimetersOfMercury];
      char v13 = static NSObject.== infix(_:_:)();

      if (v13)
      {

        return 10.0;
      }
      else
      {
        id v14 = [v1 kilopascals];
        char v15 = static NSObject.== infix(_:_:)();

        double result = 1.0;
        if (v15) {
          return 1.5;
        }
      }
    }
  }
  return result;
}

double sub_10030EFE4()
{
  uint64_t v0 = (void *)ConditionUnits.windSpeed.getter();
  uint64_t v1 = self;
  id v2 = v0;
  id v3 = [v1 metersPerSecond];
  sub_1001ABC4C(0, (unint64_t *)&qword_100E6BF18);
  char v4 = static NSObject.== infix(_:_:)();

  if (v4)
  {

    return 2.0;
  }
  else
  {
    id v6 = v2;
    id v7 = [v1 kilometersPerHour];
    char v8 = static NSObject.== infix(_:_:)();

    if (v8) {
      goto LABEL_6;
    }
    id v6 = v6;
    id v9 = [v1 milesPerHour];
    char v10 = static NSObject.== infix(_:_:)();

    if ((v10 & 1) != 0
      || (id v6 = v6,
          id v11 = [v1 knots],
          char v12 = static NSObject.== infix(_:_:)(),
          v6,
          v11,
          (v12 & 1) != 0))
    {
LABEL_6:

      return 5.0;
    }
    else
    {
      char v13 = (void *)static NSUnitSpeed.beaufort.getter();
      char v14 = static NSObject.== infix(_:_:)();

      double result = 5.0;
      if (v14) {
        return 1.0;
      }
    }
  }
  return result;
}

uint64_t sub_10030F180@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v29 = a4;
  uint64_t v30 = a3;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  char v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  char v14 = (char *)&v29 - v13;
  uint64_t v15 = type metadata accessor for DateInterval();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v19(v14, a2, v8);
    v19(v12, v30, v8);
    DateInterval.init(start:end:)();
    uint64_t v20 = v29;
    char v21 = DateInterval.contains(_:)();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    if (v21) {
      uint64_t v22 = v20;
    }
    else {
      uint64_t v22 = v30;
    }
    v19(a5, v22, v8);
    uint64_t v27 = enum case for ChartLineStrokeStyle.solidFrom(_:);
    uint64_t v28 = type metadata accessor for ChartLineStrokeStyle();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(a5, v27, v28);
  }
  else
  {
    uint64_t v23 = enum case for ChartLineStrokeStyle.solid(_:);
    uint64_t v24 = type metadata accessor for ChartLineStrokeStyle();
    uint64_t v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 104);
    return v25(a5, v23, v24);
  }
}

uint64_t sub_10030F438()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  DetailChartDataElement.date.getter();
  char v4 = static Date.> infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4 & 1;
}

void sub_10030F524(uint64_t *a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for DetailChartDataElement() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = sub_100ABB534();
  }
  uint64_t v4 = *(void *)(v3 + 16);
  v5[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_100313A80((uint64_t)v5);
  *a1 = v3;
}

uint64_t sub_10030F5D0()
{
  type metadata accessor for ConditionDetailChartDataInput(0);

  return Double.chartValueAccessibilityDescription(for:units:)();
}

uint64_t sub_10030F628@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v41 = a5;
  uint64_t v43 = a4;
  uint64_t v46 = a3;
  uint64_t v47 = a6;
  LODWORD(v44) = a2;
  uint64_t v7 = sub_10017DF08(&qword_100E6BF50);
  __chkstk_darwin(v7 - 8);
  uint64_t v42 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TimeZone();
  uint64_t v39 = *(void *)(v9 - 8);
  uint64_t v40 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DetailChartDataElement.ValueLabel();
  __chkstk_darwin(v12 - 8);
  uint64_t v45 = (void *)((char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v38 = *(void *)(v14 - 8);
  uint64_t v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v18 = sub_10017DF08(&qword_100E6BCB0);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for ExtremaResult();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)v37 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B7204(a1, (uint64_t)v20, &qword_100E6BCB0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21) == 1)
  {
    sub_100178110((uint64_t)v20, &qword_100E6BCB0);
LABEL_6:
    uint64_t v34 = 1;
    uint64_t v33 = v47;
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v20, v21);
  if ((v44 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
    goto LABEL_6;
  }
  ExtremaResult.minDate.getter();
  ExtremaResult.minValue.getter();
  ExtremaResult.minValue.getter();
  uint64_t v25 = v43;
  uint64_t v26 = v41;
  sub_10030FB14(v43, 0, v41, v45, v27);
  ExtremaResult.minDate.getter();
  static TimeZone.current.getter();
  uint64_t v44 = Date.formattedHours(timeZone:forAccessibility:)();
  v37[1] = v28;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v11, v40);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v17, v14);
  ExtremaResult.minValue.getter();
  double v30 = v29;
  uint64_t v31 = type metadata accessor for ConditionUnits();
  uint64_t v32 = v42;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v42, v26, v31);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v31);
  sub_10030FE2C(v25, 0, v32, v30);
  sub_100178110((uint64_t)v32, &qword_100E6BF50);
  uint64_t v33 = v47;
  DetailChartDataElement.init(date:value:secondValue:thirdValue:valueLabel:dateLabel:accessibilityDateString:accessibilityValueDescription:color:textColor:)();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  uint64_t v34 = 0;
LABEL_7:
  uint64_t v35 = type metadata accessor for DetailChartDataElement();
  return _s7Weather24LocationCompositionStateOwst_0(v33, v34, 1, v35);
}

uint64_t sub_10030FB14@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t *a4@<X8>, double a5@<D0>)
{
  uint64_t v31 = a4;
  uint64_t v9 = sub_10017DF08(&qword_100E6BF68);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v30 - v13;
  uint64_t v15 = type metadata accessor for DetailChartViewModelFactory.MarkerLabelCacheKey(0);
  uint64_t v16 = (int *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v30 - v20;
  uint64_t v22 = type metadata accessor for DetailChartCondition();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16);
  uint64_t v30 = a1;
  v23(v21, a1, v22);
  uint64_t v24 = &v21[v16[9]];
  uint64_t v25 = type metadata accessor for ConditionUnits();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v24, a3, v25);
  *(double *)&v21[v16[7]] = a5;
  v21[v16[8]] = a2;
  Cache.subscript.getter();
  uint64_t v26 = type metadata accessor for DetailChartDataElement.ValueLabel();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v26) == 1)
  {
    sub_100178110((uint64_t)v14, &qword_100E6BF68);
    int v27 = a2 & 1;
    uint64_t v28 = v31;
    sub_100310E88(v30, v27, a3, v31, a5);
    sub_10014EBB0((uint64_t)v21, (uint64_t)v19, (void (*)(void))type metadata accessor for DetailChartViewModelFactory.MarkerLabelCacheKey);
    (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v26 - 8) + 16))(v12, v28, v26);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v26);
    Cache.subscript.setter();
    return sub_1003153FC((uint64_t)v21, (void (*)(void))type metadata accessor for DetailChartViewModelFactory.MarkerLabelCacheKey);
  }
  else
  {
    sub_1003153FC((uint64_t)v21, (void (*)(void))type metadata accessor for DetailChartViewModelFactory.MarkerLabelCacheKey);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v31, v14, v26);
  }
}

uint64_t sub_10030FE2C(uint64_t a1, int a2, char *a3, double a4)
{
  uint64_t v88 = a1;
  uint64_t v89 = a3;
  int v76 = a2;
  uint64_t v5 = sub_10017DF08(&qword_100E63730);
  __chkstk_darwin(v5 - 8);
  uint64_t v78 = (uint64_t)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for NSUnitPressure.BaseWeatherFormatStyle();
  uint64_t v82 = *(void *)(v7 - 8);
  uint64_t v83 = v7;
  uint64_t v8 = __chkstk_darwin(v7);
  char v86 = (char *)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v77 = (char *)&v68 - v10;
  uint64_t v11 = sub_10017DF08(&qword_100E6BED0);
  uint64_t v80 = *(void *)(v11 - 8);
  uint64_t v81 = v11;
  __chkstk_darwin(v11);
  char v79 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for WeatherFormatPlaceholder();
  uint64_t v85 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v84 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle();
  uint64_t v74 = *(void *)(v14 - 8);
  uint64_t v75 = v14;
  __chkstk_darwin(v14);
  int v73 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_10017DF08(&qword_100E65250);
  uint64_t v71 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v17 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10017DF08(&qword_100E6BF50);
  uint64_t v19 = __chkstk_darwin(v18 - 8);
  uint64_t v21 = (char *)&v68 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v68 - v22;
  uint64_t v24 = type metadata accessor for ConditionUnits();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v28 = (char *)&v68 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v68 - v29;
  uint64_t v31 = type metadata accessor for DetailChartCondition();
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v68 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v34, v88, v31);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v32 + 88))(v34, v31);
  if (result == enum case for DetailChartCondition.pressure(_:))
  {
    sub_1001B7204((uint64_t)v89, (uint64_t)v21, &qword_100E6BF50);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v24) != 1)
    {
      uint64_t v70 = v25;
      uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
      uint64_t v69 = v24;
      v40(v28, v21, v24);
      ConditionUnits.pressure.getter();
      sub_1001ABC4C(0, &qword_100E6BF30);
      uint64_t v41 = v79;
      Measurement.init(value:unit:)();
      uint64_t v42 = type metadata accessor for Locale();
      uint64_t v43 = v78;
      _s7Weather24LocationCompositionStateOwst_0(v78, 1, 1, v42);
      static Set<>.full.getter();
      uint64_t v44 = v77;
      static WeatherFormatStyle<>.weather(_:locale:)();
      swift_bridgeObjectRelease();
      sub_100178110(v43, &qword_100E63730);
      NSUnitPressure.BaseWeatherFormatStyle.accessible.getter();
      uint64_t v45 = v83;
      uint64_t v89 = *(char **)(v82 + 8);
      ((void (*)(char *, uint64_t))v89)(v44, v83);
      uint64_t v47 = v84;
      uint64_t v46 = v85;
      (*(void (**)(char *, void, uint64_t))(v85 + 104))(v84, enum case for WeatherFormatPlaceholder.none(_:), v87);
      type metadata accessor for UnitManager();
      static UnitManager.standard.getter();
      sub_100313918((unint64_t *)&qword_100E6BF58, (void (*)(uint64_t))&type metadata accessor for NSUnitPressure.BaseWeatherFormatStyle);
      uint64_t v48 = v81;
      uint64_t v39 = Measurement.formatted<A>(_:placeholder:unitManager:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v47, v87);
      ((void (*)(char *, uint64_t))v89)(v86, v45);
      (*(void (**)(char *, uint64_t))(v80 + 8))(v41, v48);
      (*(void (**)(char *, uint64_t))(v70 + 8))(v28, v69);
      return v39;
    }
    uint64_t v36 = (uint64_t)v21;
LABEL_11:
    sub_100178110(v36, &qword_100E6BF50);
    return 0;
  }
  if (result == enum case for DetailChartCondition.temperature(_:)
    || result == enum case for DetailChartCondition.temperatureFeelsLike(_:))
  {
    sub_1001B7204((uint64_t)v89, (uint64_t)v23, &qword_100E6BF50);
    uint64_t v38 = v24;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24) != 1)
    {
      uint64_t v70 = v25;
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v30, v23, v24);
      uint64_t v89 = v30;
      ConditionUnits.temperature.getter();
      sub_1001ABC4C(0, (unint64_t *)&qword_100E659A0);
      Measurement.init(value:unit:)();
      char v49 = v73;
      static WeatherFormatStyle<>.weather.getter();
      uint64_t v51 = v84;
      uint64_t v50 = v85;
      uint64_t v52 = v87;
      (*(void (**)(char *, void, uint64_t))(v85 + 104))(v84, enum case for WeatherFormatPlaceholder.none(_:), v87);
      type metadata accessor for UnitManager();
      static UnitManager.standard.getter();
      sub_100313918((unint64_t *)&qword_100E6BF60, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
      uint64_t v53 = v72;
      uint64_t v54 = v75;
      uint64_t v55 = Measurement.formatted<A>(_:placeholder:unitManager:)();
      uint64_t v88 = v56;
      swift_release();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v51, v52);
      (*(void (**)(char *, uint64_t))(v74 + 8))(v49, v54);
      (*(void (**)(char *, uint64_t))(v71 + 8))(v17, v53);
      uint64_t v57 = (objc_class *)[self mainBundle];
      if (v76)
      {
        unint64_t v58 = 0xD000000000000046;
        unint64_t v67 = 0x8000000100C9A390;
        uint64_t v59 = 0x20666F2068676948;
        unint64_t v60 = 0xEA00000000004025;
        v61.super.Class isa = v57;
        uint64_t v62 = 0;
        unint64_t v63 = 0xE000000000000000;
      }
      else
      {
        unint64_t v67 = 0x8000000100C9A340;
        uint64_t v59 = 0x2520666F20776F4CLL;
        unint64_t v60 = 0xE900000000000040;
        v61.super.Class isa = v57;
        uint64_t v62 = 0;
        unint64_t v63 = 0xE000000000000000;
        unint64_t v58 = 0xD000000000000045;
      }
      NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v59, (Swift::String_optional)0, v61, *(Swift::String *)&v62, *(Swift::String *)&v58);

      sub_10017DF08(&qword_100E64020);
      uint64_t v65 = swift_allocObject();
      *(_OWORD *)(v65 + 16) = xmmword_100C251B0;
      *(void *)(v65 + 56) = &type metadata for String;
      *(void *)(v65 + 64) = sub_10012B7C0();
      uint64_t v66 = v88;
      *(void *)(v65 + 32) = v55;
      *(void *)(v65 + 40) = v66;
      uint64_t v39 = static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v89, v38);
      return v39;
    }
    uint64_t v36 = (uint64_t)v23;
    goto LABEL_11;
  }
  if (result == enum case for DetailChartCondition.uvIndex(_:))
  {
    uint64_t v90 = *(void *)&a4;
    sub_100146A70();
    return BinaryFloatingPoint.formatted()()._countAndFlagsBits;
  }
  double v64 = round(a4);
  if ((~*(void *)&v64 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v64 <= -9.22337204e18)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v64 < 9.22337204e18)
  {
    uint64_t v90 = (uint64_t)v64;
    uint64_t v39 = dispatch thunk of CustomStringConvertible.description.getter();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v34, v31);
    return v39;
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_10031097C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v47 = a3;
  uint64_t v48 = a6;
  uint64_t v45 = a5;
  uint64_t v46 = a4;
  LODWORD(v49) = a2;
  uint64_t v51 = a7;
  uint64_t v8 = sub_10017DF08(&qword_100E6BF50);
  __chkstk_darwin(v8 - 8);
  uint64_t v44 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TimeZone();
  uint64_t v42 = *(void *)(v10 - 8);
  uint64_t v43 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DetailChartDataElement.ValueLabel();
  __chkstk_darwin(v13 - 8);
  uint64_t v50 = (void *)((char *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v41 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)v40 - v19;
  uint64_t v21 = sub_10017DF08(&qword_100E6BCB0);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for ExtremaResult();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)v40 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B7204(a1, (uint64_t)v23, &qword_100E6BCB0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24) == 1)
  {
    sub_100178110((uint64_t)v23, &qword_100E6BCB0);
LABEL_6:
    uint64_t v37 = 1;
    uint64_t v36 = v51;
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v27, v23, v24);
  if ((v49 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
    goto LABEL_6;
  }
  v40[1] = v20;
  ExtremaResult.maxDate.getter();
  ExtremaResult.maxValue.getter();
  ExtremaResult.maxValue.getter();
  uint64_t v28 = v45;
  uint64_t v29 = v46;
  sub_10030FB14(v46, 1, v45, v50, v30);
  ExtremaResult.maxDate.getter();
  static TimeZone.current.getter();
  uint64_t v49 = Date.formattedHours(timeZone:forAccessibility:)();
  v40[2] = v31;
  (*(void (**)(char *, uint64_t))(v42 + 8))(v12, v43);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v18, v15);
  ExtremaResult.maxValue.getter();
  double v33 = v32;
  uint64_t v34 = type metadata accessor for ConditionUnits();
  uint64_t v35 = v44;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v44, v28, v34);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v34);
  sub_10030FE2C(v29, 1, v35, v33);
  sub_100178110((uint64_t)v35, &qword_100E6BF50);
  type metadata accessor for DetailChartViewModelFactory.PeakMarkerRequestContext(0);
  swift_retain();
  uint64_t v36 = v51;
  DetailChartDataElement.init(date:value:secondValue:thirdValue:valueLabel:dateLabel:accessibilityDateString:accessibilityValueDescription:color:textColor:)();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
  uint64_t v37 = 0;
LABEL_7:
  uint64_t v38 = type metadata accessor for DetailChartDataElement();
  return _s7Weather24LocationCompositionStateOwst_0(v36, v37, 1, v38);
}

uint64_t sub_100310E88@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t *a4@<X8>, double a5@<D0>)
{
  uint64_t v70 = a3;
  int v69 = a2;
  uint64_t v75 = a4;
  uint64_t v7 = type metadata accessor for WeatherFormatPlaceholder();
  uint64_t v73 = *(void *)(v7 - 8);
  uint64_t v74 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = &v68[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_10017DF08(&qword_100E63730);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = &v68[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for NSUnitPressure.BaseWeatherFormatStyle();
  uint64_t v72 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = &v68[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_10017DF08(&qword_100E6BED0);
  uint64_t v71 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v18 = &v68[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = type metadata accessor for DetailChartCondition();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = &v68[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v20 + 16))(v22, a1, v19);
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v20 + 88))(v22, v19);
  if (result == enum case for DetailChartCondition.pressure(_:))
  {
    ConditionUnits.pressure.getter();
    sub_1001ABC4C(0, &qword_100E6BF30);
    Measurement.init(value:unit:)();
    static Set<>.value.getter();
    uint64_t v24 = type metadata accessor for Locale();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 1, 1, v24);
    static WeatherFormatStyle<>.weather(_:locale:)();
    swift_bridgeObjectRelease();
    sub_100178110((uint64_t)v12, &qword_100E63730);
    uint64_t v26 = v73;
    uint64_t v25 = v74;
    (*(void (**)(unsigned char *, void, uint64_t))(v73 + 104))(v9, enum case for WeatherFormatPlaceholder.none(_:), v74);
    type metadata accessor for UnitManager();
    static UnitManager.standard.getter();
    sub_100313918((unint64_t *)&qword_100E6BF58, (void (*)(uint64_t))&type metadata accessor for NSUnitPressure.BaseWeatherFormatStyle);
    uint64_t v27 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    uint64_t v29 = v28;
    swift_release();
    (*(void (**)(unsigned char *, uint64_t))(v26 + 8))(v9, v25);
    (*(void (**)(unsigned char *, uint64_t))(v72 + 8))(v15, v13);
    (*(void (**)(unsigned char *, uint64_t))(v71 + 8))(v18, v16);
    double v30 = v75;
    *uint64_t v75 = v27;
    v30[1] = v29;
    uint64_t v31 = enum case for DetailChartDataElement.ValueLabel.text(_:);
    uint64_t v32 = type metadata accessor for DetailChartDataElement.ValueLabel();
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104))(v30, v31, v32);
  }
  double v33 = v75;
  if (result == enum case for DetailChartCondition.temperature(_:)
    || result == enum case for DetailChartCondition.temperatureFeelsLike(_:))
  {
    uint64_t v35 = (objc_class *)[self mainBundle];
    if (v69)
    {
      unint64_t v36 = 0xD000000000000026;
      unint64_t v67 = 0x8000000100C9A410;
      uint64_t v37 = 72;
      unint64_t v38 = 0xE100000000000000;
      v39.super.Class isa = v35;
      uint64_t v40 = 0;
      unint64_t v41 = 0xE000000000000000;
    }
    else
    {
      unint64_t v67 = 0x8000000100C9A3E0;
      uint64_t v37 = 76;
      unint64_t v38 = 0xE100000000000000;
      v39.super.Class isa = v35;
      uint64_t v40 = 0;
      unint64_t v41 = 0xE000000000000000;
      unint64_t v36 = 0xD000000000000025;
    }
    Swift::String v53 = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v37, (Swift::String_optional)0, v39, *(Swift::String *)&v40, *(Swift::String *)&v36);
    object = v53._object;
    uint64_t countAndFlagsBits = v53._countAndFlagsBits;
    goto LABEL_18;
  }
  if (result != enum case for DetailChartCondition.uvIndex(_:))
  {
    if (result != enum case for DetailChartCondition.chanceOfRain(_:))
    {
      double v60 = round(a5);
      if ((~*(void *)&v60 & 0x7FF0000000000000) != 0)
      {
        if (v60 > -9.22337204e18)
        {
          if (v60 < 9.22337204e18)
          {
            uint64_t v76 = (uint64_t)v60;
            *double v33 = dispatch thunk of CustomStringConvertible.description.getter();
            v33[1] = v61;
            uint64_t v62 = enum case for DetailChartDataElement.ValueLabel.text(_:);
            uint64_t v63 = type metadata accessor for DetailChartDataElement.ValueLabel();
            (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v63 - 8) + 104))(v33, v62, v63);
            return (*(uint64_t (**)(unsigned char *, uint64_t))(v20 + 8))(v22, v19);
          }
          goto LABEL_35;
        }
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
        return result;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    sub_1001ABC4C(0, (unint64_t *)&qword_100E66F90);
    unint64_t v58 = (void *)static NSNumberFormatter.percent.getter();
    Class isa = Double._bridgeToObjectiveC()().super.super.isa;
    uint64_t v35 = (objc_class *)[v58 stringFromNumber:isa];

    if (!v35)
    {
      uint64_t v54 = 0;
      unint64_t v55 = 0xE000000000000000;
      goto LABEL_19;
    }
    uint64_t countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
LABEL_18:
    uint64_t v54 = countAndFlagsBits;
    unint64_t v55 = (unint64_t)object;

LABEL_19:
    *double v33 = v54;
    v33[1] = v55;
    uint64_t v56 = enum case for DetailChartDataElement.ValueLabel.text(_:);
    uint64_t v57 = type metadata accessor for DetailChartDataElement.ValueLabel();
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v57 - 8) + 104))(v33, v56, v57);
  }
  sub_1001ABC4C(0, (unint64_t *)&qword_100E66F90);
  uint64_t result = static NSNumberFormatter.digits.getter();
  double v42 = round(a5);
  if ((~*(void *)&v42 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v42 <= -9.22337204e18)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (v42 >= 9.22337204e18)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v43 = (void *)result;
  uint64_t v44 = v33;
  uint64_t v45 = (uint64_t)v42;
  id v46 = [objc_allocWithZone((Class)NSNumber) initWithInteger:(uint64_t)v42];
  id v47 = [v43 stringFromNumber:v46];

  if (v47)
  {
    uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v50 = v49;
  }
  else
  {
    uint64_t v76 = v45;
    uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v50 = v64;
  }
  *uint64_t v44 = v48;
  v44[1] = v50;
  uint64_t v65 = enum case for DetailChartDataElement.ValueLabel.text(_:);
  uint64_t v66 = type metadata accessor for DetailChartDataElement.ValueLabel();
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v66 - 8) + 104))(v44, v65, v66);
}

uint64_t sub_1003116E8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v17 = a1;
  uint64_t v2 = type metadata accessor for TimeZone();
  uint64_t v18 = *(void *)(v2 - 8);
  uint64_t v19 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DetailChartDataElement.ValueLabel();
  uint64_t v5 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v7 = (uint64_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  ApparentPrecipitationIntensityCategory.rangeValue.getter();
  uint64_t v12 = ApparentPrecipitationIntensityCategory.standaloneDescription.getter();
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v17, v8);
  uint64_t *v7 = v12;
  v7[1] = v14;
  (*(void (**)(uint64_t *, void, uint64_t))(v5 + 104))(v7, enum case for DetailChartDataElement.ValueLabel.text(_:), v16);
  swift_bridgeObjectRetain();
  static TimeZone.current.getter();
  Date.formattedHours(timeZone:forAccessibility:)();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v4, v19);
  return DetailChartDataElement.init(date:value:secondValue:thirdValue:valueLabel:dateLabel:accessibilityDateString:accessibilityValueDescription:color:textColor:)();
}

uint64_t sub_100311984@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v3 = type metadata accessor for TimeZone();
  uint64_t v16 = *(void *)(v3 - 8);
  uint64_t v17 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DetailChartDataElement.ValueLabel();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  UVIndex.ExposureCategory.rangeValue.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  *uint64_t v9 = UVIndex.ExposureCategory.localizedString.getter();
  v9[1] = v14;
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, enum case for DetailChartDataElement.ValueLabel.text(_:), v6);
  static TimeZone.current.getter();
  Date.formattedHours(timeZone:forAccessibility:)();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v17);
  UVIndex.ExposureCategory.localizedString.getter();
  return DetailChartDataElement.init(date:value:secondValue:thirdValue:valueLabel:dateLabel:accessibilityDateString:accessibilityValueDescription:color:textColor:)();
}

uint64_t sub_100311C28()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 56);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 96);
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_100311C70()
{
  sub_100311C28();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DetailChartViewModelFactory()
{
  return self;
}

void *sub_100311CC8(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for DetailChartCondition();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for ExtremaResult();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_10017DF08(&qword_100E6BCB0);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v14 = a3[7];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = type metadata accessor for ConditionUnits();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *((unsigned char *)a1 + v18) = *((unsigned char *)a2 + v18);
    *(void *)((char *)a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  }
  swift_retain();
  return a1;
}

uint64_t sub_100311EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DetailChartCondition();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = type metadata accessor for ExtremaResult();
  if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  uint64_t v8 = type metadata accessor for ConditionUnits();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  return swift_release();
}

uint64_t sub_100311FB8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for DetailChartCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ExtremaResult();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_10017DF08(&qword_100E6BCB0);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for ConditionUnits();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_retain();
  return a1;
}

uint64_t sub_100312148(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for DetailChartCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ExtremaResult();
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v14 = sub_10017DF08(&qword_100E6BCB0);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_7:
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = type metadata accessor for ConditionUnits();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100312374(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for DetailChartCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ExtremaResult();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_10017DF08(&qword_100E6BCB0);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for ConditionUnits();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_100312500(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for DetailChartCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ExtremaResult();
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v10);
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10);
  if (!v11)
  {
    uint64_t v13 = *(void *)(v10 - 8);
    if (!v12)
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 40))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v14 = sub_10017DF08(&qword_100E6BCB0);
    memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
LABEL_7:
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = type metadata accessor for ConditionUnits();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  uint64_t v19 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v19) = *(unsigned char *)(a2 + v19);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_release();
  return a1;
}

uint64_t sub_10031271C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100312730);
}

uint64_t sub_100312730(uint64_t a1, uint64_t a2, int *a3)
{
  sub_10017902C();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == v3)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v4;
LABEL_8:
    return _s7Weather24LocationCompositionStateOwet_0(v9, v3, v8);
  }
  sub_10017DF08(&qword_100E6BCB0);
  sub_100162F30();
  if (*(_DWORD *)(v11 + 84) == v3)
  {
    uint64_t v8 = v10;
    uint64_t v12 = a3[6];
LABEL_7:
    uint64_t v9 = v4 + v12;
    goto LABEL_8;
  }
  type metadata accessor for ConditionUnits();
  sub_100162F30();
  if (*(_DWORD *)(v14 + 84) == v3)
  {
    uint64_t v8 = v13;
    uint64_t v12 = a3[7];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(v4 + a3[10]);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  int v17 = v16 - 1;
  if (v17 < 0) {
    int v17 = -1;
  }
  return (v17 + 1);
}

uint64_t sub_10031280C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100312820);
}

void sub_100312820(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_10017902C();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = v5;
  }
  else
  {
    sub_10017DF08(&qword_100E6BCB0);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[6];
    }
    else
    {
      type metadata accessor for ConditionUnits();
      sub_100162F30();
      if (*(_DWORD *)(v16 + 84) != a3)
      {
        *(void *)(v5 + a4[10]) = v4;
        return;
      }
      uint64_t v10 = v15;
      uint64_t v14 = a4[7];
    }
    uint64_t v11 = v5 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, v4, v4, v10);
}

uint64_t type metadata accessor for DetailChartViewModelFactory.PeakMarkerRequestContext(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E6BD10);
}

void sub_10031290C()
{
  type metadata accessor for DetailChartCondition();
  if (v0 <= 0x3F)
  {
    sub_100312A24();
    if (v1 <= 0x3F)
    {
      type metadata accessor for ConditionUnits();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_100312A24()
{
  if (!qword_100E6BD20)
  {
    type metadata accessor for ExtremaResult();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E6BD20);
    }
  }
}

void *sub_100312A7C(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for DetailChartCondition();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
    *((unsigned char *)a1 + v8) = *((unsigned char *)a2 + v8);
    uint64_t v9 = a3[7];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for ConditionUnits();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  return a1;
}

uint64_t sub_100312B98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DetailChartCondition();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 28);
  uint64_t v6 = type metadata accessor for ConditionUnits();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_100312C40(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for DetailChartCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for ConditionUnits();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  return a1;
}

uint64_t sub_100312D0C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for DetailChartCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for ConditionUnits();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_100312DDC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for DetailChartCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for ConditionUnits();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t sub_100312EA8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for DetailChartCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for ConditionUnits();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_100312F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100312F88);
}

uint64_t sub_100312F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10017902C();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == v3)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v4;
  }
  else
  {
    if (v3 == 254)
    {
      unsigned int v10 = *(unsigned __int8 *)(v4 + *(int *)(a3 + 24));
      if (v10 >= 2) {
        return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = type metadata accessor for ConditionUnits();
    uint64_t v9 = v4 + *(int *)(a3 + 28);
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, v3, v8);
}

uint64_t sub_100313038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10031304C);
}

void sub_10031304C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_10017902C();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = v5;
  }
  else
  {
    if (a3 == 254)
    {
      *(unsigned char *)(v5 + *(int *)(a4 + 24)) = v4 + 1;
      return;
    }
    uint64_t v10 = type metadata accessor for ConditionUnits();
    uint64_t v11 = v5 + *(int *)(a4 + 28);
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, v4, v4, v10);
}

uint64_t type metadata accessor for DetailChartViewModelFactory.MarkerLabelCacheKey(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E6BDC0);
}

uint64_t sub_100313108()
{
  uint64_t result = type metadata accessor for DetailChartCondition();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ConditionUnits();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1003131E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_1003132F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for TimeZone();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_100313398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_100313450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_100313508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_1003135C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_100313678(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10031368C);
}

uint64_t sub_10031368C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    uint64_t v8 = type metadata accessor for TimeZone();
    uint64_t v9 = a1 + *(int *)(a3 + 20);
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_100313708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10031371C);
}

uint64_t sub_10031371C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    uint64_t v10 = type metadata accessor for TimeZone();
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  return _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for DetailChartViewModelFactory.FormattedHoursCacheKey(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E6BE58);
}

uint64_t sub_1003137C0()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TimeZone();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100313888()
{
  return sub_100313918(&qword_100E6BE90, (void (*)(uint64_t))type metadata accessor for DetailChartViewModelFactory.FormattedHoursCacheKey);
}

uint64_t sub_1003138D0()
{
  return sub_100313918(&qword_100E6BE98, (void (*)(uint64_t))type metadata accessor for DetailChartViewModelFactory.MarkerLabelCacheKey);
}

uint64_t sub_100313918(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100313960()
{
  return sub_100313918(&qword_100E6BEA0, (void (*)(uint64_t))type metadata accessor for DetailChartViewModelFactory.PeakMarkerRequestContext);
}

uint64_t sub_1003139A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10030BC74(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned __int8 *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 80), a2, *(void *)(v2 + 88), *(void *)(v2 + 96), *(void *)(v2 + 104));
}

uint64_t sub_1003139F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConditionDetailChartDataInput(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100313A60()
{
  return sub_10030F438() & 1;
}

void sub_100313A80(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v165 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v165 - 8);
  uint64_t v5 = __chkstk_darwin(v165);
  uint64_t v164 = (char *)&v143 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v163 = (char *)&v143 - v7;
  uint64_t v8 = type metadata accessor for DetailChartDataElement();
  uint64_t v154 = *(void **)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v151 = (char *)&v143 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v170 = (char *)&v143 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v162 = (char *)&v143 - v14;
  __chkstk_darwin(v13);
  uint64_t v166 = (char *)&v143 - v15;
  Swift::Int v16 = *(void *)(a1 + 8);
  Swift::Int v17 = _minimumMergeRunLength(_:)(v16);
  if (v17 >= v16)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      if (v16) {
        sub_100314748(0, v16, 1, (void *)a1);
      }
      return;
    }
    goto LABEL_145;
  }
  Swift::Int v18 = v17;
  uint64_t v145 = sub_100AD53F8(v16 / 2);
  unint64_t v153 = v19;
  Swift::Int v146 = v16;
  if (v16 <= 0)
  {
LABEL_106:
    uint64_t v21 = (char *)_swiftEmptyArrayStorage;
    unint64_t v86 = _swiftEmptyArrayStorage[2];
LABEL_107:
    if (v86 < 2)
    {
      uint64_t v136 = v146;
LABEL_120:
      swift_bridgeObjectRelease();
      if (v136 >= -1) {
        goto LABEL_121;
      }
      goto LABEL_149;
    }
    uint64_t v137 = *(void *)a1;
    uint64_t v136 = v146;
    while (1)
    {
      unint64_t v138 = v86 - 2;
      if (v86 < 2) {
        break;
      }
      if (!v137) {
        goto LABEL_153;
      }
      uint64_t v139 = v21;
      uint64_t v140 = *(void *)&v21[16 * v138 + 32];
      a1 = *(void *)&v21[16 * v86 + 24];
      sub_100314B14(v137 + v154[9] * v140, v137 + v154[9] * *(void *)&v21[16 * v86 + 16], v137 + v154[9] * a1, v153);
      if (v2) {
        goto LABEL_104;
      }
      if (a1 < v140) {
        goto LABEL_140;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v139 = sub_10031515C();
      }
      if (v138 >= *((void *)v139 + 2)) {
        goto LABEL_141;
      }
      uint64_t v141 = &v139[16 * v138 + 32];
      *(void *)uint64_t v141 = v140;
      *((void *)v141 + 1) = a1;
      unint64_t v142 = *((void *)v139 + 2);
      if (v86 > v142) {
        goto LABEL_142;
      }
      memmove(&v139[16 * v86 + 16], &v139[16 * v86 + 32], 16 * (v142 - v86));
      uint64_t v21 = v139;
      *((void *)v139 + 2) = v142 - 1;
      unint64_t v86 = v142 - 1;
      if (v142 <= 2) {
        goto LABEL_120;
      }
    }
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
    return;
  }
  Swift::Int v147 = v18;
  Swift::Int v20 = 0;
  uint64_t v160 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v161 = v154 + 2;
  uint64_t v159 = (void (**)(char *, uint64_t))(v154 + 1);
  uint64_t v174 = (char **)(v154 + 4);
  uint64_t v21 = (char *)_swiftEmptyArrayStorage;
  uint64_t v167 = (void *)a1;
  uint64_t v169 = v8;
  while (1)
  {
    Swift::Int v22 = v20 + 1;
    uint64_t v150 = v21;
    Swift::Int v152 = v20;
    if (v20 + 1 >= v16)
    {
      id v46 = (void (*)(void))v20;
      Swift::Int v47 = v147;
    }
    else
    {
      uint64_t v23 = *(void *)a1;
      uint64_t v172 = (void (*)(void))v154[9];
      uint64_t v24 = v172;
      uint64_t v173 = (char *)(v20 + 1);
      uint64_t v25 = (void (*)(void))v154[2];
      v25();
      Swift::Int v171 = v16;
      uint64_t v26 = v162;
      uint64_t v168 = v25;
      ((void (*)(char *, uint64_t, uint64_t))v25)(v162, v23 + (void)v24 * v20, v8);
      uint64_t v27 = v163;
      DetailChartDataElement.date.getter();
      uint64_t v28 = v164;
      DetailChartDataElement.date.getter();
      LODWORD(v158) = static Date.< infix(_:_:)();
      uint64_t v29 = (char *)*v160;
      uint64_t v30 = v165;
      (*v160)(v28, v165);
      uint64_t v157 = (void (*)(char *, uint64_t))v29;
      ((void (*)(char *, uint64_t))v29)(v27, v30);
      uint64_t v31 = (void (*)(char *, uint64_t))v154[1];
      uint64_t v32 = v26;
      Swift::Int v16 = v171;
      uint64_t v33 = v169;
      v31(v32, v169);
      uint64_t v156 = (char *)v31;
      v31(v166, v33);
      Swift::Int v22 = v20 + 2;
      uint64_t v148 = v23;
      if (v20 + 2 >= v16)
      {
        a1 = (uint64_t)v167;
      }
      else
      {
        uint64_t v144 = v2;
        uint64_t v155 = (void)v172 * (void)v173;
        uint64_t v34 = v23;
        Swift::Int v149 = (void)v172 * v22;
        while (1)
        {
          Swift::Int v35 = v22;
          unint64_t v36 = v166;
          uint64_t v37 = v168;
          uint64_t v38 = v169;
          ((void (*)(char *, uint64_t, uint64_t))v168)(v166, v34 + v149, v169);
          NSBundle v39 = v162;
          ((void (*)(char *, uint64_t, uint64_t))v37)(v162, v34 + v155, v38);
          uint64_t v40 = v163;
          DetailChartDataElement.date.getter();
          unint64_t v41 = v164;
          DetailChartDataElement.date.getter();
          LODWORD(v173) = static Date.< infix(_:_:)();
          double v42 = v41;
          uint64_t v43 = v165;
          uint64_t v44 = v157;
          v157(v42, v165);
          v44(v40, v43);
          uint64_t v45 = (void (*)(char *, uint64_t))v156;
          ((void (*)(char *, uint64_t))v156)(v39, v38);
          v45(v36, v38);
          if ((v158 ^ v173)) {
            break;
          }
          Swift::Int v22 = v35 + 1;
          Swift::Int v16 = v171;
          v34 += (uint64_t)v172;
          if (v35 + 1 >= v171)
          {
            Swift::Int v22 = v171;
            a1 = (uint64_t)v167;
            uint64_t v2 = v144;
            goto LABEL_13;
          }
        }
        a1 = (uint64_t)v167;
        uint64_t v2 = v144;
        Swift::Int v22 = v35;
        Swift::Int v16 = v171;
      }
LABEL_13:
      uint64_t v48 = v150;
      uint64_t v8 = v169;
      Swift::Int v47 = v147;
      id v46 = (void (*)(void))v152;
      if (v158)
      {
        if (v22 < v152) {
          goto LABEL_146;
        }
        if (v152 < v22)
        {
          uint64_t v49 = 0;
          uint64_t v50 = v172;
          uint64_t v51 = (void)v172 * (v22 - 1);
          Swift::Int v52 = v22 * (void)v172;
          uint64_t v53 = v152 * (void)v172;
          uint64_t v168 = (void (*)(void))v22;
          do
          {
            if (v46 != (void (*)(void))(v22 + v49 - 1))
            {
              uint64_t v54 = v148;
              if (!v148) {
                goto LABEL_152;
              }
              uint64_t v55 = v2;
              unint64_t v56 = v148 + v53;
              uint64_t v158 = v148 + v51;
              uint64_t v57 = v169;
              uint64_t v173 = *v174;
              ((void (*)(char *, uint64_t, uint64_t, char *))v173)(v151, v148 + v53, v169, v48);
              if (v53 < v51 || v56 >= v54 + v52)
              {
                uint64_t v59 = v158;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v59 = v158;
                if (v53 != v51) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              ((void (*)(uint64_t, char *, uint64_t))v173)(v59, v151, v57);
              uint64_t v48 = v150;
              uint64_t v2 = v55;
              a1 = (uint64_t)v167;
              Swift::Int v22 = (Swift::Int)v168;
              uint64_t v50 = v172;
            }
            id v46 = (void (*)(void))((char *)v46 + 1);
            --v49;
            v51 -= (uint64_t)v50;
            v52 -= (uint64_t)v50;
            v53 += (uint64_t)v50;
          }
          while ((uint64_t)v46 < v22 + v49);
          uint64_t v8 = v169;
          Swift::Int v47 = v147;
          id v46 = (void (*)(void))v152;
          Swift::Int v16 = v171;
        }
      }
    }
    if (v22 < v16)
    {
      if (__OFSUB__(v22, v46)) {
        goto LABEL_144;
      }
      if (v22 - (uint64_t)v46 < v47)
      {
        if (__OFADD__(v46, v47)) {
          goto LABEL_147;
        }
        if ((uint64_t)v46 + v47 >= v16) {
          Swift::Int v60 = v16;
        }
        else {
          Swift::Int v60 = (Swift::Int)v46 + v47;
        }
        if (v60 < (uint64_t)v46) {
          goto LABEL_148;
        }
        if (v22 != v60)
        {
          uint64_t v144 = v2;
          uint64_t v61 = (char *)v154[9];
          uint64_t v155 = v154[2];
          uint64_t v156 = v61;
          uint64_t v62 = (void)v61 * (v22 - 1);
          Swift::Int v63 = v22 * (void)v61;
          Swift::Int v149 = v60;
          do
          {
            uint64_t v64 = 0;
            uint64_t v168 = (void (*)(void))v22;
            uint64_t v157 = (void (*)(char *, uint64_t))v63;
            uint64_t v158 = v62;
            while (1)
            {
              uint64_t v65 = *(void *)a1;
              Swift::Int v171 = v63 + v64;
              uint64_t v172 = v46;
              uint64_t v66 = (char *)(v63 + v64 + v65);
              unint64_t v67 = v166;
              uint64_t v68 = (void (*)(char *, uint64_t, uint64_t))v155;
              ((void (*)(char *, char *, uint64_t))v155)(v166, v66, v8);
              uint64_t v69 = v62 + v64 + v65;
              uint64_t v70 = v162;
              v68(v162, v69, v8);
              uint64_t v71 = v163;
              DetailChartDataElement.date.getter();
              uint64_t v72 = (uint64_t *)a1;
              uint64_t v73 = v164;
              DetailChartDataElement.date.getter();
              LODWORD(v173) = static Date.< infix(_:_:)();
              uint64_t v74 = *v160;
              uint64_t v75 = v73;
              uint64_t v76 = v165;
              (*v160)(v75, v165);
              uint64_t v77 = v71;
              uint64_t v8 = v169;
              v74(v77, v76);
              uint64_t v78 = *v159;
              (*v159)(v70, v8);
              v78(v67, v8);
              if ((v173 & 1) == 0) {
                break;
              }
              uint64_t v79 = *v72;
              if (!*v72) {
                goto LABEL_150;
              }
              Swift::Int v63 = (Swift::Int)v157;
              uint64_t v62 = v158;
              uint64_t v80 = (char *)(v79 + v158 + v64);
              uint64_t v81 = *v174;
              ((void (*)(char *, char *, uint64_t))*v174)(v170, (char *)v157 + v79 + v64, v8);
              swift_arrayInitWithTakeFrontToBack();
              ((void (*)(char *, char *, uint64_t))v81)(v80, v170, v8);
              v64 -= (uint64_t)v156;
              id v46 = (void (*)(void))((char *)v172 + 1);
              a1 = (uint64_t)v167;
              uint64_t v82 = v168;
              if (v168 == (void (*)(void))((char *)v172 + 1)) {
                goto LABEL_46;
              }
            }
            uint64_t v82 = v168;
            a1 = (uint64_t)v72;
            Swift::Int v63 = (Swift::Int)v157;
            uint64_t v62 = v158;
LABEL_46:
            Swift::Int v22 = (Swift::Int)v82 + 1;
            v62 += (uint64_t)v156;
            v63 += (Swift::Int)v156;
            id v46 = (void (*)(void))v152;
          }
          while (v22 != v149);
          Swift::Int v22 = v149;
          uint64_t v2 = v144;
        }
      }
    }
    if (v22 < (uint64_t)v46) {
      goto LABEL_143;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v168 = (void (*)(void))v22;
    if (isUniquelyReferenced_nonNull_native) {
      uint64_t v21 = v150;
    }
    else {
      uint64_t v21 = sub_1001AA1B0(0, *((void *)v150 + 2) + 1, 1, v150);
    }
    unint64_t v85 = *((void *)v21 + 2);
    unint64_t v84 = *((void *)v21 + 3);
    unint64_t v86 = v85 + 1;
    if (v85 >= v84 >> 1) {
      uint64_t v21 = sub_1001AA1B0((char *)(v84 > 1), v85 + 1, 1, v21);
    }
    *((void *)v21 + 2) = v86;
    uint64_t v87 = v21 + 32;
    uint64_t v88 = &v21[16 * v85 + 32];
    uint64_t v89 = v168;
    *(void *)uint64_t v88 = v46;
    *((void *)v88 + 1) = v89;
    if (v85) {
      break;
    }
    unint64_t v86 = 1;
    uint64_t v8 = v169;
LABEL_97:
    Swift::Int v16 = *(void *)(a1 + 8);
    Swift::Int v20 = (Swift::Int)v168;
    if ((uint64_t)v168 >= v16) {
      goto LABEL_107;
    }
  }
  uint64_t v8 = v169;
  while (1)
  {
    unint64_t v90 = v86 - 1;
    if (v86 >= 4)
    {
      uint64_t v95 = &v87[16 * v86];
      uint64_t v96 = *((void *)v95 - 8);
      uint64_t v97 = *((void *)v95 - 7);
      BOOL v101 = __OFSUB__(v97, v96);
      uint64_t v98 = v97 - v96;
      if (v101) {
        goto LABEL_128;
      }
      uint64_t v100 = *((void *)v95 - 6);
      uint64_t v99 = *((void *)v95 - 5);
      BOOL v101 = __OFSUB__(v99, v100);
      uint64_t v93 = v99 - v100;
      char v94 = v101;
      if (v101) {
        goto LABEL_129;
      }
      unint64_t v102 = v86 - 2;
      uint64_t v103 = &v87[16 * v86 - 32];
      uint64_t v105 = *(void *)v103;
      uint64_t v104 = *((void *)v103 + 1);
      BOOL v101 = __OFSUB__(v104, v105);
      uint64_t v106 = v104 - v105;
      if (v101) {
        goto LABEL_130;
      }
      BOOL v101 = __OFADD__(v93, v106);
      uint64_t v107 = v93 + v106;
      if (v101) {
        goto LABEL_132;
      }
      if (v107 >= v98)
      {
        uint64_t v125 = &v87[16 * v90];
        uint64_t v127 = *(void *)v125;
        uint64_t v126 = *((void *)v125 + 1);
        BOOL v101 = __OFSUB__(v126, v127);
        uint64_t v128 = v126 - v127;
        if (v101) {
          goto LABEL_138;
        }
        BOOL v118 = v93 < v128;
        goto LABEL_86;
      }
    }
    else
    {
      if (v86 != 3)
      {
        uint64_t v119 = *((void *)v21 + 4);
        uint64_t v120 = *((void *)v21 + 5);
        BOOL v101 = __OFSUB__(v120, v119);
        uint64_t v112 = v120 - v119;
        char v113 = v101;
        goto LABEL_80;
      }
      uint64_t v92 = *((void *)v21 + 4);
      uint64_t v91 = *((void *)v21 + 5);
      BOOL v101 = __OFSUB__(v91, v92);
      uint64_t v93 = v91 - v92;
      char v94 = v101;
    }
    if (v94) {
      goto LABEL_131;
    }
    unint64_t v102 = v86 - 2;
    uint64_t v108 = &v87[16 * v86 - 32];
    uint64_t v110 = *(void *)v108;
    uint64_t v109 = *((void *)v108 + 1);
    BOOL v111 = __OFSUB__(v109, v110);
    uint64_t v112 = v109 - v110;
    char v113 = v111;
    if (v111) {
      goto LABEL_133;
    }
    uint64_t v114 = &v87[16 * v90];
    uint64_t v116 = *(void *)v114;
    uint64_t v115 = *((void *)v114 + 1);
    BOOL v101 = __OFSUB__(v115, v116);
    uint64_t v117 = v115 - v116;
    if (v101) {
      goto LABEL_135;
    }
    if (__OFADD__(v112, v117)) {
      goto LABEL_137;
    }
    if (v112 + v117 >= v93)
    {
      BOOL v118 = v93 < v117;
LABEL_86:
      if (v118) {
        unint64_t v90 = v102;
      }
      goto LABEL_88;
    }
LABEL_80:
    if (v113) {
      goto LABEL_134;
    }
    uint64_t v121 = &v87[16 * v90];
    uint64_t v123 = *(void *)v121;
    uint64_t v122 = *((void *)v121 + 1);
    BOOL v101 = __OFSUB__(v122, v123);
    uint64_t v124 = v122 - v123;
    if (v101) {
      goto LABEL_136;
    }
    if (v124 < v112) {
      goto LABEL_97;
    }
LABEL_88:
    unint64_t v129 = v90 - 1;
    if (v90 - 1 >= v86)
    {
      __break(1u);
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
LABEL_131:
      __break(1u);
LABEL_132:
      __break(1u);
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
      goto LABEL_139;
    }
    uint64_t v130 = *(void *)a1;
    if (!*(void *)a1) {
      goto LABEL_151;
    }
    uint64_t v131 = v21;
    uint64_t v132 = &v87[16 * v129];
    uint64_t v133 = *(void *)v132;
    a1 = (uint64_t)&v87[16 * v90];
    uint64_t v134 = *(void *)(a1 + 8);
    sub_100314B14(v130 + v154[9] * *(void *)v132, v130 + v154[9] * *(void *)a1, v130 + v154[9] * v134, v153);
    if (v2) {
      break;
    }
    if (v134 < v133) {
      goto LABEL_125;
    }
    if (v90 > *((void *)v131 + 2)) {
      goto LABEL_126;
    }
    *(void *)uint64_t v132 = v133;
    *(void *)&v87[16 * v129 + 8] = v134;
    unint64_t v135 = *((void *)v131 + 2);
    if (v90 >= v135) {
      goto LABEL_127;
    }
    unint64_t v86 = v135 - 1;
    memmove(&v87[16 * v90], (const void *)(a1 + 16), 16 * (v135 - 1 - v90));
    uint64_t v21 = v131;
    *((void *)v131 + 2) = v135 - 1;
    BOOL v118 = v135 > 2;
    a1 = (uint64_t)v167;
    uint64_t v8 = v169;
    if (!v118) {
      goto LABEL_97;
    }
  }
  uint64_t v136 = v146;
LABEL_104:
  swift_bridgeObjectRelease();
  if (v136 < -1)
  {
    __break(1u);
    goto LABEL_106;
  }
LABEL_121:
  *(void *)(v145 + 16) = 0;
  swift_bridgeObjectRelease();
}

uint64_t sub_100314748(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v46 = a1;
  uint64_t v56 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v56 - 8);
  uint64_t v8 = __chkstk_darwin(v56);
  uint64_t v55 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v54 = (char *)&v44 - v10;
  uint64_t v11 = type metadata accessor for DetailChartDataElement();
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v62 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v53 = (char *)&v44 - v15;
  uint64_t result = __chkstk_darwin(v14);
  Swift::Int v52 = (char *)&v44 - v18;
  uint64_t v60 = a3;
  uint64_t v45 = a2;
  if (a3 != a2)
  {
    Swift::Int v20 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
    uint64_t v19 = v17 + 16;
    uint64_t v21 = *(void *)(v19 + 56);
    uint64_t v48 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v49 = v20;
    Swift::Int v47 = (void (**)(char *, uint64_t))(v19 - 8);
    uint64_t v50 = v19;
    uint64_t v51 = v11;
    uint64_t v61 = (void (**)(char *, uint64_t, uint64_t))(v19 + 16);
    uint64_t v22 = v21 * (v60 - 1);
    uint64_t v57 = v21;
    uint64_t v23 = v21 * v60;
    while (2)
    {
      uint64_t v24 = 0;
      uint64_t v64 = v46;
      uint64_t v58 = v23;
      uint64_t v59 = v22;
      do
      {
        uint64_t v25 = *a4;
        uint64_t v63 = v23 + v24;
        uint64_t v26 = v23 + v24 + v25;
        uint64_t v27 = v52;
        uint64_t v28 = v49;
        v49(v52, v26, v11);
        uint64_t v29 = v22 + v24 + v25;
        uint64_t v30 = v53;
        v28(v53, v29, v11);
        uint64_t v31 = v54;
        DetailChartDataElement.date.getter();
        uint64_t v32 = a4;
        uint64_t v33 = v55;
        DetailChartDataElement.date.getter();
        int v65 = static Date.< infix(_:_:)();
        uint64_t v34 = *v48;
        Swift::Int v35 = v33;
        uint64_t v36 = v56;
        (*v48)(v35, v56);
        uint64_t v37 = v36;
        a4 = v32;
        uint64_t v11 = v51;
        v34(v31, v37);
        uint64_t v38 = *v47;
        NSBundle v39 = v30;
        uint64_t v22 = v59;
        (*v47)(v39, v11);
        uint64_t v40 = v27;
        uint64_t v23 = v58;
        uint64_t result = ((uint64_t (*)(char *, uint64_t))v38)(v40, v11);
        if ((v65 & 1) == 0) {
          break;
        }
        uint64_t v41 = *a4;
        if (!*a4)
        {
          __break(1u);
          return result;
        }
        uint64_t v42 = v41 + v22 + v24;
        uint64_t v43 = *v61;
        (*v61)(v62, v41 + v23 + v24, v11);
        swift_arrayInitWithTakeFrontToBack();
        uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v43)(v42, v62, v11);
        v24 -= v57;
        ++v64;
      }
      while (v60 != v64);
      v22 += v57;
      v23 += v57;
      if (++v60 != v45) {
        continue;
      }
      break;
    }
  }
  return result;
}

void sub_100314B14(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v83 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v83 - 8);
  uint64_t v9 = __chkstk_darwin(v83);
  uint64_t v82 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v81 = (char *)&v68 - v11;
  uint64_t v87 = type metadata accessor for DetailChartDataElement();
  uint64_t v12 = *(void *)(v87 - 8);
  uint64_t v13 = __chkstk_darwin(v87);
  uint64_t v80 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v79 = (char *)&v68 - v15;
  uint64_t v17 = *(void *)(v16 + 72);
  if (!v17)
  {
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  int64_t v18 = a2 - a1;
  if (a2 - a1 == 0x8000000000000000 && v17 == -1) {
    goto LABEL_76;
  }
  int64_t v20 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v17 == -1) {
    goto LABEL_77;
  }
  unint64_t v86 = a1;
  uint64_t v22 = v18 / v17;
  uint64_t v23 = v20 / v17;
  uint64_t v78 = v17;
  if (v18 / v17 >= v20 / v17)
  {
    sub_1007EB0DC(a2, v20 / v17);
    uint64_t v24 = (char *)(a4 + v23 * v17);
    if (v23 * v17 >= 1 && v86 < a2)
    {
      uint64_t v73 = -v17;
      uint64_t v27 = *(void (**)(char *))(v12 + 16);
      uint64_t v71 = (void (**)(char *, uint64_t))(v8 + 8);
      uint64_t v72 = v27;
      uint64_t v77 = v12 + 16;
      unint64_t v69 = a4;
      uint64_t v70 = (void (**)(char *, uint64_t))(v12 + 8);
      uint64_t v28 = v79;
      uint64_t v29 = v80;
      do
      {
        uint64_t v30 = v73;
        unint64_t v84 = (unint64_t)v24;
        unint64_t v85 = a3 + v73;
        uint64_t v75 = &v24[v73];
        unint64_t v76 = a3;
        uint64_t v31 = v87;
        uint64_t v32 = v72;
        v72(v28);
        uint64_t v74 = (void (**)(char *, uint64_t))(a2 + v30);
        v32(v29);
        unint64_t v33 = a2;
        uint64_t v34 = v81;
        DetailChartDataElement.date.getter();
        Swift::Int v35 = v82;
        DetailChartDataElement.date.getter();
        char v36 = static Date.< infix(_:_:)();
        uint64_t v37 = *v71;
        uint64_t v38 = v35;
        uint64_t v39 = v83;
        (*v71)(v38, v83);
        v37(v34, v39);
        uint64_t v40 = *v70;
        (*v70)(v29, v31);
        v40(v28, v31);
        if (v36)
        {
          uint64_t v41 = (char *)v84;
          a3 = v85;
          if (v76 < v33 || v85 >= v33)
          {
            a2 = (unint64_t)v74;
            swift_arrayInitWithTakeFrontToBack();
            a4 = v69;
            unint64_t v43 = v86;
            uint64_t v17 = v78;
          }
          else
          {
            unint64_t v43 = v86;
            uint64_t v17 = v78;
            a2 = (unint64_t)v74;
            if (v76 != v33) {
              swift_arrayInitWithTakeBackToFront();
            }
            a4 = v69;
          }
          uint64_t v24 = v41;
        }
        else
        {
          a3 = v85;
          BOOL v44 = v76 < v84 || v85 >= v84;
          a2 = v33;
          if (v44)
          {
            uint64_t v45 = v75;
            swift_arrayInitWithTakeFrontToBack();
            uint64_t v24 = v45;
            a4 = v69;
            unint64_t v43 = v86;
            uint64_t v17 = v78;
          }
          else
          {
            uint64_t v17 = v78;
            if (v76 == v84)
            {
              uint64_t v24 = v75;
            }
            else
            {
              uint64_t v46 = v75;
              swift_arrayInitWithTakeBackToFront();
              uint64_t v24 = v46;
            }
            a4 = v69;
            unint64_t v43 = v86;
          }
        }
      }
      while ((unint64_t)v24 > a4 && a2 > v43);
    }
  }
  else
  {
    sub_1007EB0DC(v86, v18 / v17);
    uint64_t v24 = (char *)(a4 + v22 * v17);
    if (v22 * v17 >= 1 && a2 < a3)
    {
      unint64_t v84 = a4 + v22 * v17;
      unint64_t v85 = a3;
      uint64_t v48 = *(char **)(v12 + 16);
      uint64_t v74 = (void (**)(char *, uint64_t))(v8 + 8);
      uint64_t v75 = v48;
      uint64_t v77 = v12 + 16;
      uint64_t v73 = v12 + 8;
      uint64_t v49 = v79;
      uint64_t v50 = v80;
      do
      {
        unint64_t v76 = a2;
        unint64_t v51 = a2;
        uint64_t v52 = v87;
        uint64_t v53 = v75;
        ((void (*)(char *, unint64_t, uint64_t))v75)(v49, v51, v87);
        ((void (*)(char *, unint64_t, uint64_t))v53)(v50, a4, v52);
        uint64_t v54 = v81;
        DetailChartDataElement.date.getter();
        uint64_t v55 = v82;
        DetailChartDataElement.date.getter();
        char v56 = static Date.< infix(_:_:)();
        unint64_t v57 = a4;
        uint64_t v58 = *v74;
        uint64_t v59 = v55;
        uint64_t v60 = v83;
        (*v74)(v59, v83);
        v58(v54, v60);
        uint64_t v61 = *(void (**)(char *, uint64_t))v73;
        (*(void (**)(char *, uint64_t))v73)(v50, v52);
        v61(v49, v52);
        if (v56)
        {
          uint64_t v17 = v78;
          a2 = v76 + v78;
          unint64_t v62 = v86;
          if (v86 < v76 || v86 >= a2) {
            goto LABEL_60;
          }
          if (v86 != v76) {
            goto LABEL_64;
          }
        }
        else
        {
          a2 = v76;
          uint64_t v17 = v78;
          a4 += v78;
          unint64_t v62 = v86;
          if (v86 < v57 || v86 >= a4)
          {
LABEL_60:
            swift_arrayInitWithTakeFrontToBack();
            goto LABEL_65;
          }
          if (v86 != v57) {
LABEL_64:
          }
            swift_arrayInitWithTakeBackToFront();
        }
LABEL_65:
        uint64_t v24 = (char *)v84;
        unint64_t v86 = v62 + v17;
      }
      while (a4 < v84 && a2 < v85);
    }
  }
  uint64_t v66 = &v24[-a4];
  if (v17 != -1 || v66 != (char *)0x8000000000000000)
  {
    sub_1007EB0DC(a4, (uint64_t)v66 / v17);
    return;
  }
LABEL_78:
  __break(1u);
}

char *sub_10031515C()
{
  unint64_t v0 = (char *)sub_10017FA34();
  return sub_1001AA1B0(v0, v1, v2, v3);
}

uint64_t sub_100315170()
{
  return sub_10030F5D0();
}

unint64_t sub_100315244()
{
  unint64_t result = qword_100E6BF28;
  if (!qword_100E6BF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6BF28);
  }
  return result;
}

void sub_1003152A8()
{
}

void sub_1003152B8()
{
}

void sub_1003152C8()
{
  uint64_t v0 = sub_10017FA34();
  sub_1007F3F24(v0, v1, v2, v3);
}

void sub_1003152D8()
{
}

void sub_1003152E8()
{
}

void sub_1003152F8()
{
}

void sub_100315308()
{
}

void sub_100315318()
{
}

void sub_100315328()
{
}

void sub_100315338()
{
}

void sub_100315348()
{
}

void sub_100315358()
{
}

void sub_100315368()
{
}

uint64_t sub_100315378(int64_t a1, int64_t a2, uint64_t a3)
{
  uint64_t result = 0;
  while (1)
  {
    BOOL v5 = a1 <= a2;
    if (a3 > 0) {
      BOOL v5 = a1 >= a2;
    }
    if (v5) {
      break;
    }
    BOOL v6 = __OFADD__(a1, a3);
    a1 += a3;
    if (v6) {
      a1 = (a1 >> 63) ^ 0x8000000000000000;
    }
    BOOL v6 = __OFADD__(result++, 1);
    if (v6)
    {
      __break(1u);
      return result;
    }
  }
  return result;
}

uint64_t sub_1003153BC@<X0>(uint64_t a1@<X8>)
{
  return sub_100311984(*(void *)(v1 + 16), a1);
}

uint64_t sub_1003153DC@<X0>(uint64_t a1@<X8>)
{
  return sub_1003116E8(*(void *)(v1 + 16), a1);
}

uint64_t sub_1003153FC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

void sub_100315450()
{
  *(void *)(v0 + 856) = *(void *)(v0 + 1136) + 16;
}

uint64_t View.withWeatherAnimation(reason:animation:enabled:_:)(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    unsigned __int16 v3 = a1;
    swift_retain();
    Transaction.animation.setter();
    Transaction.animationFrameInterval.setter();
    uint64_t v4 = sub_100231A98(v3);
    if (v4)
    {
      Transaction.animationFrameInterval.setter();
      uint64_t v4 = Transaction.animationReason.setter();
    }
    __chkstk_darwin(v4);
    swift_retain();
    withTransaction<A>(_:_:)();
    swift_release();
    return swift_release();
  }
  else
  {
    __chkstk_darwin(a1);
    return withTransaction<A>(_:_:)();
  }
}

uint64_t sub_1003155D4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_100315604(uint64_t (*a1)(void))
{
  return sub_1003155D4(a1);
}

uint64_t sub_10031561C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v106 = a4;
  uint64_t v107 = a2;
  type metadata accessor for Calendar.SearchDirection();
  sub_100179C0C();
  uint64_t v93 = v7;
  uint64_t v94 = v6;
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v92 = v8;
  uint64_t v102 = type metadata accessor for Calendar.RepeatedTimePolicy();
  sub_100179C0C();
  uint64_t v91 = v9;
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v89 = v11;
  uint64_t v101 = type metadata accessor for Calendar.MatchingPolicy();
  sub_100179C0C();
  uint64_t v88 = v12;
  __chkstk_darwin(v13);
  sub_100109314();
  uint64_t v87 = v14;
  uint64_t v15 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v15 - 8);
  sub_100162EF8();
  uint64_t v90 = v16;
  sub_1001626D4();
  __chkstk_darwin(v17);
  sub_100109770();
  uint64_t v98 = v18;
  sub_1001626D4();
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v86 - v20;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v86 - v23;
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v86 - v26;
  uint64_t v28 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v30 = v29;
  __chkstk_darwin(v31);
  sub_100162EF8();
  uint64_t v86 = v32;
  sub_1001626D4();
  __chkstk_darwin(v33);
  sub_100109770();
  uint64_t v100 = v34;
  sub_1001626D4();
  __chkstk_darwin(v35);
  sub_100109770();
  uint64_t v103 = v36;
  sub_1001626D4();
  __chkstk_darwin(v37);
  sub_100109770();
  uint64_t v104 = v38;
  sub_1001626D4();
  __chkstk_darwin(v39);
  sub_100109770();
  uint64_t v96 = v40;
  sub_1001626D4();
  __chkstk_darwin(v41);
  sub_100109770();
  uint64_t v97 = v42;
  sub_1001626D4();
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v86 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v86 - v47;
  uint64_t v105 = type metadata accessor for Calendar();
  sub_100179C0C();
  uint64_t v50 = v49;
  __chkstk_darwin(v51);
  sub_100109314();
  uint64_t v108 = v52;
  uint64_t v99 = a3;
  static Calendar.currentCalendar(with:)();
  sub_1001C7278(a1, (uint64_t)v27);
  sub_100179F0C((uint64_t)v27);
  if (v57)
  {
    uint64_t v24 = v27;
    uint64_t v56 = v107;
    uint64_t v53 = v30;
  }
  else
  {
    uint64_t v95 = v50;
    uint64_t v54 = v30;
    uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    v55(v48, v27, v28);
    uint64_t v56 = v107;
    sub_1001C7278(v107, (uint64_t)v24);
    sub_100179F0C((uint64_t)v24);
    if (!v57)
    {
      v55(v45, v24, v28);
      uint64_t v65 = Date.secondsSinceMidnight(calendar:)();
      uint64_t result = Date.secondsSinceMidnight(calendar:)();
      if (!__OFSUB__(v65, result))
      {
        unint64_t v67 = *(void (**)(void))(v54 + 8);
        sub_10017C974();
        v67();
        sub_10017C974();
        v67();
        uint64_t v68 = sub_1001A1D18();
        return v69(v68);
      }
      goto LABEL_23;
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(v48, v28);
    uint64_t v53 = v30;
    uint64_t v50 = v95;
  }
  sub_1001E7540((uint64_t)v24);
  sub_1001C7278(a1, (uint64_t)v21);
  sub_100179F0C((uint64_t)v21);
  if (!v57)
  {
    sub_1001627D4();
    v61();
    Date.startOfDay(timeZone:)();
    Date.wc_addDays(_:calendar:)();
    Date.wc_addSeconds(_:calendar:)();
    uint64_t v62 = Date.secondsSinceMidnight(calendar:)();
    uint64_t result = Date.secondsSinceMidnight(calendar:)();
    if (!__OFSUB__(v62, result))
    {
      uint64_t v63 = *(void (**)(void))(v53 + 8);
      sub_10017FA48();
      v63();
      sub_10017FA48();
      v63();
      sub_10017FA48();
      v63();
      sub_10017FA48();
      v63();
      sub_1001631F4();
      return v64();
    }
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_1001E7540((uint64_t)v21);
  uint64_t v58 = v98;
  sub_1001C7278(v56, v98);
  sub_100179F0C(v58);
  if (v57)
  {
    sub_1001631F4();
    v59();
    uint64_t v60 = v58;
    return sub_1001E7540(v60);
  }
  uint64_t v95 = v50;
  uint64_t v107 = v53;
  uint64_t v103 = *(void *)(v53 + 32);
  uint64_t v104 = v53 + 32;
  sub_1001627D4();
  v70();
  uint64_t v71 = v88;
  uint64_t v72 = v87;
  (*(void (**)(uint64_t, void, uint64_t))(v88 + 104))(v87, enum case for Calendar.MatchingPolicy.nextTime(_:), v101);
  uint64_t v73 = v91;
  uint64_t v74 = v89;
  (*(void (**)(uint64_t, void, uint64_t))(v91 + 104))(v89, enum case for Calendar.RepeatedTimePolicy.first(_:), v102);
  uint64_t v75 = v92;
  uint64_t v76 = v93;
  uint64_t v77 = v94;
  (*(void (**)(uint64_t, void, uint64_t))(v93 + 104))(v92, enum case for Calendar.SearchDirection.forward(_:), v94);
  uint64_t v78 = v90;
  Calendar.date(bySettingHour:minute:second:of:matchingPolicy:repeatedTimePolicy:direction:)();
  (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v75, v77);
  (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v74, v102);
  (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v72, v101);
  sub_100179F0C(v78);
  if (v79)
  {
    (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v100, v28);
    (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v108, v105);
    uint64_t v60 = v78;
    return sub_1001E7540(v60);
  }
  uint64_t v80 = v107;
  sub_1001627D4();
  v81();
  uint64_t v82 = Date.secondsSinceMidnight(calendar:)();
  uint64_t result = Date.secondsSinceMidnight(calendar:)();
  if (!__OFSUB__(v82, result))
  {
    uint64_t v83 = *(void (**)(void))(v80 + 8);
    sub_10017C974();
    v83();
    sub_10017C974();
    v83();
    uint64_t v84 = sub_1001810C0();
    return v85(v84);
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_100315E94(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v2 - 8);
  sub_1001626E0();
  uint64_t v5 = v4 - v3;
  uint64_t v6 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  type metadata accessor for Calendar();
  sub_100179C0C();
  __chkstk_darwin(v13);
  sub_1001626E0();
  static Calendar.currentCalendar(with:)();
  sub_1001C7278(a1, v5);
  if (_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6) == 1)
  {
    uint64_t v14 = sub_1001838E8();
    v15(v14);
    return sub_1001E7540(v5);
  }
  else
  {
    sub_1001627D4();
    v17();
    uint64_t v18 = Date.secondsSinceMidnight(calendar:)();
    uint64_t result = Date.secondsSinceMidnight(calendar:)();
    if (__OFSUB__(v18, result))
    {
      __break(1u);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v12, v6);
      uint64_t v19 = sub_1001838E8();
      return v20(v19);
    }
  }
  return result;
}

uint64_t type metadata accessor for SunriseSunsetProportionCalculator()
{
  return self;
}

uint64_t destroy for SevereMessageEvent()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SevereMessageEvent(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SevereMessageEvent(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SevereMessageEvent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SevereMessageEvent()
{
  return &type metadata for SevereMessageEvent;
}

void sub_10031622C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v1 + 32);

  sub_100707A58(a1, v3);
}

uint64_t sub_1003162B4(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  BOOL v5 = a1[2] == a2[2] && a1[3] == a2[3];
  if (!v5 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = a1[4];
  uint64_t v7 = a2[4];

  return sub_100BD8D5C(v6, v7);
}

Swift::Int sub_100316344()
{
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  sub_100707A58((uint64_t)v2, *(void *)(v0 + 32));
  return Hasher._finalize()();
}

Swift::Int sub_1003163E0()
{
  uint64_t v1 = *(void *)(v0 + 32);
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  sub_100707A58((uint64_t)v3, v1);
  return Hasher._finalize()();
}

unint64_t sub_100316484()
{
  unint64_t result = qword_100E6C048;
  if (!qword_100E6C048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6C048);
  }
  return result;
}

uint64_t sub_1003164D0()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC7Weather34LocalPresetLocationsViewController_editedWeatherDataState);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_10031654C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)(v4 + OBJC_IVAR____TtC7Weather34LocalPresetLocationsViewController_editedWeatherDataState);
  swift_beginAccess();
  *uint64_t v9 = a1;
  v9[1] = a2;
  _OWORD v9[2] = a3;
  v9[3] = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id sub_1003165FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v5 = &v3[OBJC_IVAR____TtC7Weather34LocalPresetLocationsViewController_presetName];
  *(void *)BOOL v5 = a1;
  *((void *)v5 + 1) = a2;
  sub_100318728(a3, (uint64_t)&v3[OBJC_IVAR____TtC7Weather34LocalPresetLocationsViewController_appState], (void (*)(void))type metadata accessor for PresetAppState);
  uint64_t v6 = (uint64_t *)(a3 + *(int *)(type metadata accessor for PresetAppState() + 24));
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];
  uint64_t v9 = v6[2];
  uint64_t v10 = v6[3];
  uint64_t v11 = &v3[OBJC_IVAR____TtC7Weather34LocalPresetLocationsViewController_editedWeatherDataState];
  *(void *)uint64_t v11 = v7;
  *((void *)v11 + 1) = v8;
  *((void *)v11 + 2) = v9;
  *((void *)v11 + 3) = v10;
  v14.receiver = v3;
  v14.super_class = (Class)type metadata accessor for LocalPresetLocationsViewController();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  [super initWithStyle:2];
  sub_1003188A0(a3, (void (*)(void))type metadata accessor for PresetAppState);
  return v12;
}

uint64_t sub_1003166EC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7Weather34LocalPresetLocationsViewController_appState;
  uint64_t v2 = (uint64_t *)(v1 + *(int *)(type metadata accessor for PresetAppState() + 24));
  uint64_t v3 = *v2;
  uint64_t v4 = v2[1];
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return sub_10031654C(v3, v4, v5, v6);
}

void sub_100316774()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC7Weather34LocalPresetLocationsViewController_presetName + 8];
  if (v2)
  {
    uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC7Weather34LocalPresetLocationsViewController_presetName];
    sub_100316B28(v3, v2);
  }
  else
  {
    sub_1001ABC4C(0, &qword_100E6C0A8);
    id v4 = sub_10071090C(0x6572502065766153, 0xEB00000000746573, 0xD00000000000001ELL, 0x8000000100C9A4E0, 1);
    v11[4] = sub_1003169CC;
    v11[5] = 0;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    v11[2] = sub_1003169EC;
    v11[3] = &unk_100E10E50;
    uint64_t v5 = _Block_copy(v11);
    [v4 addTextFieldWithConfigurationHandler:v5];
    _Block_release(v5);
    sub_1001ABC4C(0, &qword_100E6C0B0);
    uint64_t v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v6;
    *(void *)(v7 + 24) = v1;
    id v8 = v1;
    id v9 = sub_1007109C4(1702256979, 0xE400000000000000, 0, (uint64_t)sub_100318510, v7);
    [v4 addAction:v9];

    id v10 = sub_1007109C4(0x6C65636E6143, 0xE600000000000000, 1, 0, 0);
    [v4 addAction:v10];

    [v8 presentViewController:v4 animated:1 completion:0];
  }
}

void sub_1003169CC(void *a1)
{
}

void sub_1003169EC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_100316A54()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t result = sub_10031857C((void *)result);
    if (result)
    {
      uint64_t v1 = result;
      unint64_t v2 = result & 0xC000000000000001;
      sub_100076028(0, (result & 0xC000000000000001) == 0, result);
      if (v2) {
        id v3 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v3 = *(id *)(v1 + 32);
      }
      id v4 = v3;
      swift_bridgeObjectRelease();
      uint64_t result = sub_1003185F4(v4);
      if (v5)
      {
        uint64_t v6 = HIBYTE(v5) & 0xF;
        if ((v5 & 0x2000000000000000) == 0) {
          uint64_t v6 = result & 0xFFFFFFFFFFFFLL;
        }
        if (v6) {
          sub_100316B28((void *)result, (void *)v5);
        }
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100316B28(void *a1, void *a2)
{
  uint64_t v54 = a1;
  uint64_t v55 = a2;
  uint64_t v48 = type metadata accessor for PresetAppState();
  sub_100162E4C();
  __chkstk_darwin(v3);
  uint64_t v53 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL.DirectoryHint();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_10012B938();
  type metadata accessor for URL();
  sub_100179C0C();
  uint64_t v51 = v10;
  uint64_t v52 = v9;
  __chkstk_darwin(v9);
  uint64_t v50 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  objc_super v14 = (char *)&v47 - v13;
  type metadata accessor for LocalPreset();
  sub_100047CB0();
  uint64_t v15 = self;
  id v16 = [v15 defaultManager];
  URL.path.getter();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned __int8 v18 = [v16 fileExistsAtPath:v17];

  if ((v18 & 1) == 0)
  {
    id v19 = [v15 defaultManager];
    URL._bridgeToObjectiveC()(v20);
    uint64_t v22 = v21;
    v56[0] = 0;
    unsigned int v23 = [v19 createDirectoryAtURL:v21 withIntermediateDirectories:1 attributes:0 error:v56];

    if (v23)
    {
      id v24 = v56[0];
    }
    else
    {
      id v25 = v56[0];
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_errorRelease();
    }
  }
  uint64_t v26 = (uint64_t)v53;
  uint64_t v27 = v50;
  v56[0] = v54;
  v56[1] = v55;
  swift_bridgeObjectRetain();
  v28._uint64_t countAndFlagsBits = 1918984494;
  v28._object = (void *)0xE400000000000000;
  String.append(_:)(v28);
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v2, enum case for URL.DirectoryHint.notDirectory(_:), v5);
  sub_10014A85C();
  uint64_t v53 = v14;
  URL.appending<A>(path:directoryHint:)();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2, v5);
  swift_bridgeObjectRelease();
  uint64_t v29 = v49;
  sub_100318728((uint64_t)v49 + OBJC_IVAR____TtC7Weather34LocalPresetLocationsViewController_appState, v26, (void (*)(void))type metadata accessor for PresetAppState);
  uint64_t v30 = sub_1003164D0();
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v37 = (uint64_t *)(v26 + *(int *)(v48 + 24));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *uint64_t v37 = v30;
  v37[1] = v32;
  void v37[2] = v34;
  v37[3] = v36;
  type metadata accessor for JSONEncoder();
  swift_allocObject();
  JSONEncoder.init()();
  sub_1003183F0();
  uint64_t v38 = dispatch thunk of JSONEncoder.encode<A>(_:)();
  unint64_t v40 = v39;
  swift_release();
  Data.write(to:options:)();
  id v44 = [v29 navigationController];
  if (v44)
  {
    uint64_t v45 = v44;
    id v46 = [v44 popViewControllerAnimated:1];

    sub_100318440(v38, v40);
  }
  else
  {
    sub_100318440(v38, v40);
  }
  uint64_t v41 = v52;
  uint64_t v42 = *(void (**)(char *, uint64_t))(v51 + 8);
  v42(v27, v52);
  v42(v53, v41);
  return sub_1003188A0(v26, (void (*)(void))type metadata accessor for PresetAppState);
}

void sub_1003171E8()
{
}

void sub_10031724C()
{
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for LocalPresetLocationsViewController();
  [super viewDidLoad];
  id v1 = [v0 tableView];
  if (v1)
  {
    uint64_t v2 = v1;
    sub_1001ABC4C(0, (unint64_t *)&qword_100E73CE0);
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    NSString v4 = String._bridgeToObjectiveC()();
    [v2 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v4];

    if (*(void *)&v0[OBJC_IVAR____TtC7Weather34LocalPresetLocationsViewController_presetName + 8])
    {
      uint64_t v5 = *(void *)&v0[OBJC_IVAR____TtC7Weather34LocalPresetLocationsViewController_presetName];
      uint64_t v6 = *(void *)&v0[OBJC_IVAR____TtC7Weather34LocalPresetLocationsViewController_presetName + 8];
    }
    else
    {
      uint64_t v6 = 0xEA00000000007465;
      uint64_t v5 = 0x736572502077654ELL;
    }
    swift_bridgeObjectRetain();
    sub_10040BF9C(v5, v6, v0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1003173A8(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return 1;
  }
  uint64_t v4 = v2 + OBJC_IVAR____TtC7Weather34LocalPresetLocationsViewController_appState;
  uint64_t v5 = v4 + *(int *)(type metadata accessor for PresetAppState() + 20);
  return *(void *)(*(void *)(v5 + *(int *)(type metadata accessor for LocationsState() + 24)) + 16);
}

uint64_t sub_100317428(uint64_t a1, uint64_t a2)
{
  if (a2) {
    return 0;
  }
  else {
    return 0x6E6F697461636F4CLL;
  }
}

unint64_t sub_100317468(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = 0xD00000000000001BLL;
  unint64_t v3 = 0xD000000000000031;
  if (a2) {
    unint64_t v3 = 0;
  }
  if (a2 != 1) {
    unint64_t v2 = v3;
  }
  if (a2 == 2) {
    return 0xD00000000000003BLL;
  }
  else {
    return v2;
  }
}

id sub_1003174F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  a5(a1, a4);
  if (v5)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }

  return v6;
}

id sub_10031754C(void *a1)
{
  NSString v2 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v4 = [a1 dequeueReusableCellWithIdentifier:v2 forIndexPath:isa];

  if (IndexPath.section.getter())
  {
    if (IndexPath.section.getter() == 1)
    {
      sub_100318004((uint64_t)v4);
    }
    else if (IndexPath.section.getter() == 2)
    {
      sub_100318030((uint64_t)v4);
    }
  }
  else
  {
    unint64_t v5 = IndexPath.row.getter();
    sub_100317DC8(v4, v5);
  }
  return v4;
}

void sub_100317730()
{
  uint64_t v1 = sub_10017DF08(&qword_100E63770);
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_10017C704();
  uint64_t v3 = type metadata accessor for LocationWeatherDataState(v2);
  sub_100162E4C();
  __chkstk_darwin(v4);
  NSString v6 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v54 - v8;
  uint64_t v10 = type metadata accessor for LocationModel();
  sub_100179C0C();
  uint64_t v64 = v11;
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v14);
  __chkstk_darwin(v15);
  NSString v17 = (char *)&v54 - v16;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v54 - v19;
  if (!IndexPath.section.getter())
  {
    uint64_t v61 = v0;
    uint64_t v62 = v3;
    char v57 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v58 = v6;
    uint64_t v63 = v17;
    uint64_t v22 = (double *)&v65[OBJC_IVAR____TtC7Weather34LocalPresetLocationsViewController_appState];
    unsigned int v23 = (char *)v22 + *(int *)(type metadata accessor for PresetAppState() + 20);
    uint64_t v24 = *(void *)&v23[*(int *)(type metadata accessor for LocationsState() + 24)];
    unint64_t v25 = IndexPath.row.getter();
    if ((v25 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v25 < *(void *)(v24 + 16))
    {
      uint64_t v55 = v22;
      uint64_t v56 = v9;
      uint64_t v26 = v64;
      uint64_t v27 = v20;
      uint64_t v28 = *(unsigned __int8 *)(v64 + 80);
      uint64_t v29 = v24 + ((v28 + 32) & ~v28) + *(void *)(v64 + 72) * v25;
      uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(v64 + 16);
      v54(v27, v29, v10);
      uint64_t v60 = v27;
      uint64_t v30 = LocationModel.id.getter();
      uint64_t v59 = v10;
      uint64_t v31 = v30;
      uint64_t v33 = v32;
      sub_1003164D0();
      uint64_t v34 = v61;
      sub_1001BBE9C(v31, v33, v35);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (_s7Weather24LocationCompositionStateOwet_0(v34, 1, v62) == 1)
      {
        (*(void (**)(char *, uint64_t))(v26 + 8))(v60, v59);
        sub_100318664(v34);
      }
      else
      {
        uint64_t v37 = (uint64_t)v56;
        sub_1003186C4(v34, (uint64_t)v56);
        uint64_t v38 = v59;
        unint64_t v39 = v60;
        unint64_t v40 = (void (*)(char *, char *, uint64_t))v54;
        v54(v63, (uint64_t)v60, v59);
        double v41 = *v55;
        uint64_t v42 = (uint64_t)v58;
        sub_100318728(v37, (uint64_t)v58, (void (*)(void))type metadata accessor for LocationWeatherDataState);
        uint64_t v43 = v57;
        v40(v57, v39, v38);
        uint64_t v44 = (v28 + 24) & ~v28;
        uint64_t v45 = swift_allocObject();
        uint64_t v47 = v64;
        id v46 = v65;
        *(void *)(v45 + 16) = v65;
        (*(void (**)(uint64_t, char *, uint64_t))(v47 + 32))(v45 + v44, v43, v38);
        id v48 = objc_allocWithZone((Class)type metadata accessor for WeatherDataEditorViewController());
        id v49 = v46;
        id v50 = sub_1009BBCB0((uint64_t)v63, v42, (uint64_t)sub_10031882C, v45, v41);
        if (v50)
        {
          uint64_t v51 = v50;
          id v52 = [v49 navigationController];
          if (v52)
          {
            id v53 = v52;
            [v52 pushViewController:v51 animated:1];

            uint64_t v51 = v53;
          }
        }
        sub_1003188A0(v37, (void (*)(void))type metadata accessor for LocationWeatherDataState);
        (*(void (**)(char *, uint64_t))(v47 + 8))(v39, v38);
      }
      goto LABEL_19;
    }
    __break(1u);
    return;
  }
  if (IndexPath.section.getter() == 1)
  {
    sub_100179F2C();
    sub_1003166EC();
    return;
  }
  if (IndexPath.section.getter() != 2)
  {
LABEL_19:
    sub_100179F2C();
    return;
  }
  sub_100179F2C();
  sub_100316774();
}

uint64_t sub_100317BC4(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E63770);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocationModel.id.getter();
  sub_100318728(a1, (uint64_t)v4, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  uint64_t v5 = type metadata accessor for LocationWeatherDataState(0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 0, 1, v5);
  swift_beginAccess();
  sub_100176B1C();
  return swift_endAccess();
}

uint64_t sub_100317DC8(void *a1, unint64_t a2)
{
  unsigned int v23 = a1;
  uint64_t v5 = type metadata accessor for UIListContentConfiguration();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_10017C704();
  uint64_t v9 = type metadata accessor for LocationModel();
  sub_100179C0C();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v24[-1] - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = OBJC_IVAR____TtC7Weather34LocalPresetLocationsViewController_appState;
  uint64_t v16 = *(int *)(type metadata accessor for PresetAppState() + 20);
  uint64_t result = type metadata accessor for LocationsState();
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v18 = *(void *)(v2 + v15 + v16 + *(int *)(result + 24));
    if (*(void *)(v18 + 16) > a2)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v14, v18+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * a2, v9);
      static UIListContentConfiguration.subtitleCell()();
      LocationModel.name.getter();
      UIListContentConfiguration.text.setter();
      id v19 = [self labelColor];
      uint64_t v20 = (void (*)(uint64_t *, void))UIListContentConfiguration.textProperties.modify();
      UIListContentConfiguration.TextProperties.color.setter();
      v20(v24, 0);
      v24[3] = v5;
      v24[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
      uint64_t v21 = sub_100170694(v24);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16))(v21, v3, v5);
      uint64_t v22 = v23;
      UITableViewCell.contentConfiguration.setter();
      [v22 setAccessoryType:1];
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v3, v5);
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v9);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100318004(uint64_t a1)
{
  return sub_100318058(a1, 0x6843207465736552, 0xED00007365676E61, (SEL *)&selRef_redColor);
}

uint64_t sub_100318030(uint64_t a1)
{
  return sub_100318058(a1, 0x6572502065766153, 0xEB00000000746573, (SEL *)&selRef_greenColor);
}

uint64_t sub_100318058(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v6 = type metadata accessor for UIListContentConfiguration();
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_10012B938();
  static UIListContentConfiguration.subtitleCell()();
  UIListContentConfiguration.text.setter();
  id v10 = [self *a4];
  uint64_t v11 = (void (*)(uint64_t *, void))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.color.setter();
  v11(v14, 0);
  v14[3] = v6;
  v14[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  uint64_t v12 = sub_100170694(v14);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v8 + 16))(v12, v4, v6);
  UITableViewCell.contentConfiguration.setter();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v4, v6);
}

void sub_1003181A0()
{
}

void sub_1003181E0()
{
}

id sub_100318238()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LocalPresetLocationsViewController();
  [super dealloc];
}

uint64_t sub_1003182FC()
{
  return type metadata accessor for LocalPresetLocationsViewController();
}

uint64_t type metadata accessor for LocalPresetLocationsViewController()
{
  uint64_t result = qword_100E6C090;
  if (!qword_100E6C090) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10031834C()
{
  uint64_t result = type metadata accessor for PresetAppState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_1003183F0()
{
  unint64_t result = qword_100E6C0A0;
  if (!qword_100E6C0A0)
  {
    type metadata accessor for PresetAppState();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6C0A0);
  }
  return result;
}

uint64_t sub_100318440(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_100318498()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1003184D0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100318510()
{
  return sub_100316A54();
}

void sub_100318518(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a3 setText:v4];
}

uint64_t sub_10031857C(void *a1)
{
  id v2 = [a1 textFields];

  if (!v2) {
    return 0;
  }
  sub_1001ABC4C(0, &qword_100E6C0B8);
  uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_1003185F4(void *a1)
{
  id v2 = [a1 text];

  if (!v2) {
    return 0;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v3;
}

uint64_t sub_100318664(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E63770);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003186C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationWeatherDataState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100318728(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_100318788()
{
  uint64_t v1 = type metadata accessor for LocationModel();
  sub_100179C0C();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);

  return swift_deallocObject();
}

uint64_t sub_10031882C(uint64_t a1)
{
  type metadata accessor for LocationModel();

  return sub_100317BC4(a1);
}

uint64_t sub_1003188A0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1003188F8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6C0C0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  if (a3)
  {
    return Image.init(_:bundle:)();
  }
  else
  {
    Image.init(systemName:)();
    static SymbolRenderingMode.hierarchical.getter();
    uint64_t v7 = type metadata accessor for SymbolRenderingMode();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 0, 1, v7);
    uint64_t v8 = Image.symbolRenderingMode(_:)();
    swift_release();
    sub_100318DA8((uint64_t)v6);
    return v8;
  }
}

uint64_t static TipViewModel.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_100318B64((long long *)a1, (uint64_t)&v16);
  sub_100318B64((long long *)a2, (uint64_t)&v15);
  sub_100318B64(&v16, (uint64_t)v17);
  uint64_t v4 = v17[0];
  uint64_t v5 = v17[1];
  if (v18)
  {
    sub_100318B64(&v15, (uint64_t)v19);
    if ((v20 & 1) == 0)
    {
LABEL_3:
      char v6 = 0;
      return v6 & 1;
    }
  }
  else
  {
    sub_100318B64(&v15, (uint64_t)v19);
    if (v20) {
      goto LABEL_3;
    }
  }
  BOOL v7 = v4 == v19[0] && v5 == v19[1];
  if (v7 || (v8 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v6 = 0, (v8 & 1) != 0))
  {
    BOOL v9 = *(void *)(a1 + 24) == *(void *)(a2 + 24) && *(void *)(a1 + 32) == *(void *)(a2 + 32);
    if (v9 || (v10 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v6 = 0, (v10 & 1) != 0))
    {
      BOOL v11 = *(void *)(a1 + 40) == *(void *)(a2 + 40) && *(void *)(a1 + 48) == *(void *)(a2 + 48);
      if (v11 || (v12 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v6 = 0, (v12 & 1) != 0))
      {
        if (*(void *)(a1 + 56) == *(void *)(a2 + 56) && *(void *)(a1 + 64) == *(void *)(a2 + 64)) {
          char v6 = 1;
        }
        else {
          char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
        }
      }
    }
  }
  return v6 & 1;
}

uint64_t static ImageSource.__derived_enum_equals(_:_:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a3)
  {
    if ((a6 & 1) == 0) {
      return 0;
    }
  }
  else if (a6)
  {
    return 0;
  }
  if (a1 == a4 && a2 == a5) {
    return 1;
  }
  else {
    return _stringCompareWithSmolCheck(_:_:expecting:)();
  }
}

uint64_t sub_100318B64(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  *(unsigned char *)(a2 + 16) = *((unsigned char *)a1 + 16);
  *(_OWORD *)a2 = v2;
  return a2;
}

uint64_t sub_100318B7C(void *__src, const void *a2)
{
  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return static TipViewModel.__derived_struct_equals(_:_:)((uint64_t)v4, (uint64_t)__dst) & 1;
}

uint64_t sub_100318BD4(uint64_t a1, uint64_t a2)
{
  return static ImageSource.__derived_enum_equals(_:_:)(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

ValueMetadata *type metadata accessor for TipViewModel()
{
  return &type metadata for TipViewModel;
}

uint64_t destroy for ImageSource()
{
  return sub_100249EF8();
}

uint64_t _s7Weather11ImageSourceOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_100249E9C();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for ImageSource(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_100249E9C();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_100249EF8();
  return a1;
}

uint64_t assignWithTake for ImageSource(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_100249EF8();
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageSource(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ImageSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100318D84(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_100318D8C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ImageSource()
{
  return &type metadata for ImageSource;
}

uint64_t sub_100318DA8(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E6C0C0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100318E08@<X0>(char a1@<W0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6C0D0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  BOOL v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1)
  {
    case 3:
    case 4:
    case 5:
      Dictionary.init(dictionaryLiteral:)();
      sub_100187BD4();
      break;
    default:
      Dictionary.init(dictionaryLiteral:)();
      break;
  }
  ShortDescription.init(name:_:)();
  a2[3] = v4;
  a2[4] = sub_10031919C();
  char v8 = sub_100170694(a2);
  return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v5 + 32))(v8, v7, v4);
}

uint64_t sub_100319108@<X0>(uint64_t *a1@<X8>)
{
  return sub_100318E08(*v1, a1);
}

uint64_t sub_100319110()
{
  sub_1003191F0();

  return ShortDescribable.description.getter();
}

unint64_t sub_100319150()
{
  unint64_t result = qword_100E6C0C8;
  if (!qword_100E6C0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6C0C8);
  }
  return result;
}

unint64_t sub_10031919C()
{
  unint64_t result = qword_100E6C0D8;
  if (!qword_100E6C0D8)
  {
    sub_10018C6DC(&qword_100E6C0D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6C0D8);
  }
  return result;
}

unint64_t sub_1003191F0()
{
  unint64_t result = qword_100E6C0E0;
  if (!qword_100E6C0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6C0E0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NotificationsOptInViewAction(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 5) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v5 = v6 - 6;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for NotificationsOptInViewAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100319390);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationsOptInViewAction()
{
  return &type metadata for NotificationsOptInViewAction;
}

unint64_t sub_1003193CC()
{
  unint64_t result = qword_100E6C0E8;
  if (!qword_100E6C0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6C0E8);
  }
  return result;
}

uint64_t sub_100319418()
{
  uint64_t v1 = sub_10017DF08(&qword_100E634B0);
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_100109314();
  uint64_t v65 = v3;
  uint64_t v64 = type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v66 = v5;
  uint64_t v6 = sub_10017DF08(&qword_100E63770);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v69 = v8;
  uint64_t v9 = sub_10017DF08(&qword_100E63850);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_100109314();
  unint64_t v67 = (char *)v11;
  uint64_t v68 = type metadata accessor for WeatherData(0);
  sub_100179C0C();
  uint64_t v63 = v12;
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v15);
  __chkstk_darwin(v16);
  char v18 = (char *)&v58 - v17;
  uint64_t v19 = sub_10017DF08(&qword_100E6C1B8);
  uint64_t v20 = sub_100109308(v19);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for SunriseSunsetDetailViewState();
  sub_100179C0C();
  uint64_t v62 = v24;
  uint64_t v26 = *(void *)(v25 + 64);
  __chkstk_darwin(v27);
  __n128 v29 = __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v58 - v30;
  uint64_t v32 = v0;
  (*(void (**)(uint64_t *__return_ptr, __n128))(v0 + 152))(v70, v29);
  uint64_t v33 = v70[0];
  sub_1005496D8(v70[0], (uint64_t)v22);
  uint64_t v34 = sub_1001A1D34();
  if (_s7Weather24LocationCompositionStateOwet_0(v34, v35, v23) == 1)
  {
    swift_release();
    uint64_t v36 = &qword_100E6C1B8;
    return sub_100178110((uint64_t)v22, v36);
  }
  uint64_t v59 = (uint64_t)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = (uint64_t)&v58 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = v66;
  uint64_t v61 = v18;
  sub_10031A268((uint64_t)v22, (uint64_t)v31, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewState);
  uint64_t v38 = *(void *)(v33 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  swift_bridgeObjectRetain();
  uint64_t v39 = Location.id.getter();
  uint64_t v40 = v69;
  sub_1001BBE9C(v39, v41, v38);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v42 = type metadata accessor for LocationWeatherDataState(0);
  if (_s7Weather24LocationCompositionStateOwet_0(v40, 1, v42) == 1)
  {
    sub_100178110(v40, &qword_100E63770);
    uint64_t v22 = v67;
    uint64_t v43 = sub_1001A1D34();
    _s7Weather24LocationCompositionStateOwst_0(v43, v44, 1, v45);
LABEL_6:
    swift_release();
    sub_10031A2C8((uint64_t)v31, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewState);
    uint64_t v36 = &qword_100E63850;
    return sub_100178110((uint64_t)v22, v36);
  }
  uint64_t v22 = v67;
  sub_1001177B0((uint64_t)v67);
  sub_10031A2C8(v40, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  uint64_t v46 = sub_1001A1D34();
  if (_s7Weather24LocationCompositionStateOwet_0(v46, v47, v68) == 1) {
    goto LABEL_6;
  }
  uint64_t v49 = (uint64_t)v61;
  sub_10031A268((uint64_t)v22, (uint64_t)v61, (void (*)(void))type metadata accessor for WeatherData);
  if (!v31[*(int *)(v23 + 24)])
  {
    sub_1001B1E64((void *)(v32 + 112), *(void *)(v32 + 136));
    sub_100289AD4();
    if ((v50 & 1) == 0)
    {
      *uint64_t v37 = 1;
      swift_storeEnumTagMultiPayload();
      sub_1001D1824();
      sub_10017E178();
      sub_100178110((uint64_t)v70, (uint64_t *)&unk_100EA01F0);
      sub_10031A2C8((uint64_t)v37, (void (*)(void))type metadata accessor for MainAction);
      swift_release();
      uint64_t v51 = v65;
      static TaskPriority.userInitiated.getter();
      uint64_t v52 = type metadata accessor for TaskPriority();
      _s7Weather24LocationCompositionStateOwst_0(v51, 0, 1, v52);
      uint64_t v53 = v59;
      sub_10014FD30(v49, v59, (void (*)(void))type metadata accessor for WeatherData);
      sub_10014FD30((uint64_t)v31, v60, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewState);
      unint64_t v54 = (*(unsigned __int8 *)(v63 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
      unint64_t v55 = (v14 + *(unsigned __int8 *)(v62 + 80) + v54) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80);
      uint64_t v56 = (void *)swift_allocObject();
      id v56[2] = 0;
      v56[3] = 0;
      v56[4] = v32;
      sub_10031A268(v53, (uint64_t)v56 + v54, (void (*)(void))type metadata accessor for WeatherData);
      sub_10031A268(v60, (uint64_t)v56 + v55, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewState);
      swift_retain();
      uint64_t v57 = v65;
      sub_10088CC5C(v65, (uint64_t)&unk_100E6C1C8, (uint64_t)v56);
      swift_release();
      swift_release();
      sub_100178110(v57, &qword_100E634B0);
      goto LABEL_13;
    }
    *uint64_t v37 = 0;
    swift_storeEnumTagMultiPayload();
    sub_1001D1824();
    sub_10017E178();
    swift_release();
    sub_100178110((uint64_t)v70, (uint64_t *)&unk_100EA01F0);
    sub_10031A2C8((uint64_t)v37, (void (*)(void))type metadata accessor for MainAction);
  }
  swift_release();
LABEL_13:
  sub_10031A2C8(v49, (void (*)(void))type metadata accessor for WeatherData);
  return sub_10031A2C8((uint64_t)v31, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewState);
}

uint64_t sub_100319A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[10] = a5;
  v6[11] = a6;
  v6[9] = a4;
  uint64_t v7 = type metadata accessor for DispatchWorkItemFlags();
  v6[12] = v7;
  v6[13] = *(void *)(v7 - 8);
  v6[14] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for DispatchQoS();
  v6[15] = v8;
  v6[16] = *(void *)(v8 - 8);
  v6[17] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for OSSignpostID();
  v6[18] = v9;
  v6[19] = *(void *)(v9 - 8);
  v6[20] = swift_task_alloc();
  return _swift_task_switch(sub_100319BE8, 0, 0);
}

uint64_t sub_100319BE8()
{
  uint64_t v1 = (void *)v0[9];
  uint64_t v2 = (void *)v1[23];
  v0[21] = v2;
  id v3 = v2;
  OSSignpostID.init(log:)();
  static os_signpost_type_t.begin.getter();
  os_signpost(_:dso:log:name:signpostID:)();
  sub_1001B1E64(v1 + 9, v1[12]);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[22] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100319CDC;
  return sub_10028A170();
}

uint64_t sub_100319CDC()
{
  sub_100119470();
  swift_task_dealloc();
  return _swift_task_switch(sub_100319DB4, 0, 0);
}

uint64_t sub_100319DB4()
{
  uint64_t v1 = v0[14];
  uint64_t v3 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v4 = v0[9];
  static os_signpost_type_t.end.getter();
  os_signpost(_:dso:log:name:signpostID:)();
  sub_1001AB3E0();
  uint64_t v5 = (void *)static OS_dispatch_queue.main.getter();
  v0[6] = sub_10031A798;
  v0[7] = v4;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_10010A4D4;
  v0[5] = &unk_100E110F8;
  uint64_t v6 = _Block_copy(v0 + 2);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v0[8] = _swiftEmptyArrayStorage;
  sub_100216874();
  sub_10017DF08(&qword_100E75530);
  sub_100115EDC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v6);

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_100162F0C();
  v7();
  sub_100162F0C();
  v8();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100319FD8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for MainAction();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(uint64_t (**)(uint64_t))(a1 + 16);
  *uint64_t v4 = 0;
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = 0;
  memset(v7, 0, sizeof(v7));
  swift_retain();
  sub_1001AAF58((uint64_t)v4, (uint64_t)v7, v5);
  sub_100178110((uint64_t)v7, (uint64_t *)&unk_100EA01F0);
  sub_10031A2C8((uint64_t)v4, (void (*)(void))type metadata accessor for MainAction);
  return swift_release();
}

uint64_t sub_10031A0C4(uint64_t a1)
{
  uint64_t v3 = v1[7];
  uint64_t v4 = v1[8];
  sub_1001B1E64(v1 + 4, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 + 8) + 24))(a1, v3);
}

uint64_t sub_10031A120()
{
  uint64_t v1 = v0 + 4;
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  sub_1001B1E64(v1, v2);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 8) + 32))(v2);
}

uint64_t sub_10031A16C()
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 32);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 72);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 112);
  swift_release();
  swift_release();

  return v0;
}

uint64_t sub_10031A1C8()
{
  sub_10031A16C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SunriseSunsetDetailInteractor()
{
  return self;
}

uint64_t sub_10031A220(uint64_t a1)
{
  return sub_10031A0C4(a1);
}

uint64_t sub_10031A244()
{
  return sub_10031A120();
}

uint64_t sub_10031A268(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_10031A2C8(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_10031A31C()
{
  uint64_t v1 = (int *)type metadata accessor for WeatherData(0);
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = type metadata accessor for SunriseSunsetDetailViewState();
  sub_100164920(v3);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v4 = v0 + v2;
  swift_bridgeObjectRelease();
  unint64_t v5 = v0 + v2 + v1[5];
  uint64_t v6 = type metadata accessor for Locale();
  uint64_t v7 = sub_1001A1D34();
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, v8, v6)) {
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  type metadata accessor for WeatherDataModel();
  sub_100162E4C();
  sub_100162F0C();
  v9();
  uint64_t v10 = v4 + v1[7];
  sub_10017DF08(&qword_100E63738);
  uint64_t v11 = sub_1001A1D34();
  if (!_s7Weather24LocationCompositionStateOwet_0(v11, v12, v13))
  {
    type metadata accessor for Date();
    sub_100162E4C();
    (*(void (**)(uint64_t))(v14 + 8))(v10);
  }
  uint64_t v15 = v4 + v1[8];
  type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    type metadata accessor for WeatherStatisticsModel();
    sub_100162E4C();
    (*(void (**)(uint64_t))(v17 + 8))(v15);
  }
  else if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = v4 + v1[9];
  uint64_t v19 = type metadata accessor for WeatherDataOverrides();
  if (!_s7Weather24LocationCompositionStateOwet_0(v18, 1, v19))
  {
    uint64_t v20 = type metadata accessor for Date();
    if (!_s7Weather24LocationCompositionStateOwet_0(v18, 1, v20)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v18, v20);
    }
    uint64_t v21 = v18 + *(int *)(v19 + 20);
    if (!_s7Weather24LocationCompositionStateOwet_0(v21, 1, v20)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v21, v20);
    }
  }
  type metadata accessor for Location();
  sub_100162E4C();
  sub_100162F0C();
  v22();

  return swift_deallocObject();
}

uint64_t sub_10031A65C(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for WeatherData(0);
  sub_100164920(v5);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(type metadata accessor for SunriseSunsetDetailViewState() - 8) + 80);
  unint64_t v11 = v7 + v9 + v10;
  uint64_t v12 = v1[2];
  uint64_t v13 = v1[3];
  uint64_t v14 = v1[4];
  uint64_t v15 = (uint64_t)v1 + v7;
  uint64_t v16 = (uint64_t)v1 + (v11 & ~v10);
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v17;
  *uint64_t v17 = v3;
  v17[1] = sub_10004A90C;
  return sub_100319A6C(a1, v12, v13, v14, v15, v16);
}

uint64_t sub_10031A798()
{
  return sub_100319FD8(v0);
}

uint64_t sub_10031A7A0(uint64_t a1)
{
  uint64_t v43 = sub_10017DF08(&qword_100E6A4D8);
  uint64_t v3 = __chkstk_darwin(v43);
  uint64_t v42 = (uint64_t)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v41 = (char *)v34 - v6;
  __chkstk_darwin(v5);
  uint64_t v40 = (char *)v34 - v7;
  uint64_t v8 = sub_10017DF08(&qword_100E6C280);
  uint64_t v38 = *(void *)(v8 - 8);
  uint64_t v39 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = _swiftEmptyArrayStorage;
  if (!v11) {
    return (uint64_t)v12;
  }
  v34[1] = v1;
  uint64_t v49 = _swiftEmptyArrayStorage;
  sub_1007F3478();
  uint64_t result = sub_10031E358(a1);
  if ((result & 0x8000000000000000) == 0)
  {
    unint64_t v15 = result;
    if (result < 1 << *(unsigned char *)(a1 + 32))
    {
      uint64_t v16 = a1 + 64;
      uint64_t v36 = v10;
      uint64_t v37 = a1;
      uint64_t v35 = a1 + 64;
      while ((*(void *)(v16 + 8 * (v15 >> 6)) & (1 << v15)) != 0)
      {
        if (v14 != *(_DWORD *)(a1 + 36)) {
          goto LABEL_20;
        }
        uint64_t v46 = 1 << v15;
        unint64_t v47 = v15 >> 6;
        uint64_t v44 = v11;
        uint64_t v45 = v14;
        uint64_t v17 = v43;
        uint64_t v18 = v40;
        uint64_t v19 = (uint64_t)&v40[*(int *)(v43 + 48)];
        uint64_t v20 = *(void *)(a1 + 48);
        uint64_t v21 = type metadata accessor for Date();
        uint64_t v22 = *(void *)(v21 - 8);
        uint64_t v23 = *(void (**)(char *, unint64_t, uint64_t))(v22 + 16);
        v23(v18, v20 + *(void *)(v22 + 72) * v15, v21);
        uint64_t v24 = *(void *)(a1 + 56);
        uint64_t v25 = *(void *)(*(void *)(type metadata accessor for CalendarMoonPhaseData(0) - 8) + 72);
        uint64_t v48 = v15;
        sub_10031E3D8(v24 + v25 * v15, v19);
        uint64_t v26 = (uint64_t)v41;
        v23(v41, (unint64_t)v18, v21);
        sub_10031E3D8(v19, v26 + *(int *)(v17 + 48));
        uint64_t v27 = v42;
        sub_10020E72C(v26, v42, &qword_100E6A4D8);
        uint64_t v28 = (uint64_t)v18;
        uint64_t v29 = (uint64_t)v36;
        sub_1001781AC(v28, &qword_100E6A4D8);
        uint64_t v30 = *(int *)(v17 + 48);
        uint64_t v31 = *(int *)(v39 + 48);
        v23((char *)v29, v27, v21);
        *(unsigned char *)(v29 + v31) = *(unsigned char *)(v27 + v30);
        sub_1001781AC(v27, &qword_100E6A4D8);
        uint64_t v12 = v49;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1007F3478();
          uint64_t v12 = v49;
        }
        unint64_t v32 = v12[2];
        a1 = v37;
        uint64_t v33 = v48;
        if (v32 >= v12[3] >> 1)
        {
          sub_1007F3478();
          uint64_t v12 = v49;
        }
        _OWORD v12[2] = v32 + 1;
        uint64_t result = sub_10020E72C(v29, (uint64_t)v12+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v32, &qword_100E6C280);
        if (v33 >= -(-1 << *(unsigned char *)(a1 + 32))) {
          goto LABEL_21;
        }
        uint64_t v16 = v35;
        if ((*(void *)(v35 + 8 * v47) & v46) == 0) {
          goto LABEL_22;
        }
        if (v45 != *(_DWORD *)(a1 + 36)) {
          goto LABEL_23;
        }
        uint64_t result = _HashTable.occupiedBucket(after:)();
        uint64_t v11 = v44 - 1;
        if (v44 == 1) {
          return (uint64_t)v12;
        }
        unint64_t v15 = result;
        if ((result & 0x8000000000000000) == 0)
        {
          uint64_t v14 = *(unsigned int *)(a1 + 36);
          if (result < 1 << *(unsigned char *)(a1 + 32)) {
            continue;
          }
        }
        goto LABEL_24;
      }
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
    }
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_10031ABD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10031AD38(a1);
  sub_10031BB90(a1, v4, a2);
  uint64_t v5 = type metadata accessor for MoonCalendarViewModel();
  sub_10031C7D8(a2 + *(int *)(v5 + 20));
  swift_bridgeObjectRelease();

  return _s7Weather24LocationCompositionStateOwst_0(a2, 0, 1, v5);
}

id sub_10031AC94()
{
  id result = sub_10031ACB4();
  qword_100E6C1D0 = (uint64_t)result;
  return result;
}

id sub_10031ACB4()
{
  id v0 = [objc_allocWithZone((Class)NSDateFormatter) init];
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setLocalizedDateFormatFromTemplate:v1];

  [v0 setFormattingContext:2];
  return v0;
}

uint64_t sub_10031AD38(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v112 = a1;
  uint64_t v109 = type metadata accessor for CalendarMoonPhaseData(0);
  uint64_t v105 = *(void *)(v109 - 8);
  uint64_t v3 = __chkstk_darwin(v109);
  uint64_t v121 = (uint64_t)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v107 = (char *)&v90 - v5;
  uint64_t v6 = sub_10017DF08(&qword_100E6C288);
  __chkstk_darwin(v6 - 8);
  uint64_t v108 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = type metadata accessor for DayMoonData();
  uint64_t v114 = *(void *)(v128 - 8);
  __chkstk_darwin(v128);
  uint64_t v120 = (char *)&v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Calendar.Component();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = v10;
  __chkstk_darwin(v9);
  uint64_t v124 = (char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v106 = (char *)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v104 = (char *)&v90 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v119 = (uint64_t)&v90 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v117 = (uint64_t *)((char *)&v90 - v21);
  __chkstk_darwin(v20);
  uint64_t v126 = (uint64_t)&v90 - v22;
  uint64_t v98 = type metadata accessor for Date();
  uint64_t v100 = *(void *)(v98 - 8);
  uint64_t v23 = __chkstk_darwin(v98);
  uint64_t v127 = (char *)&v90 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v90 - v26;
  uint64_t v28 = __chkstk_darwin(v25);
  uint64_t v122 = (char *)&v90 - v29;
  __chkstk_darwin(v28);
  uint64_t v91 = (char *)&v90 - v30;
  uint64_t v97 = type metadata accessor for DateComponents();
  uint64_t v96 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v99 = (char *)&v90 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = type metadata accessor for Calendar();
  uint64_t v94 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v33 = (char *)&v90 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = type metadata accessor for TimeZone();
  uint64_t v92 = *(void *)(v93 - 8);
  __chkstk_darwin(v93);
  uint64_t v35 = (char *)&v90 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  Location.timeZone.getter();
  uint64_t v125 = v35;
  static Calendar.currentCalendar(with:)();
  sub_10017DF08(&qword_100E65238);
  uint64_t v36 = *(void *)(v10 + 72);
  unint64_t v37 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_100C25ED0;
  unint64_t v39 = v38 + v37;
  uint64_t v41 = v10 + 104;
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v40((char *)v39, enum case for Calendar.Component.year(_:), v9);
  unint64_t v42 = v39 + v36;
  uint64_t v43 = enum case for Calendar.Component.month(_:);
  uint64_t v90 = v9;
  uint64_t v123 = v40;
  v40((char *)v42, enum case for Calendar.Component.month(_:), v9);
  sub_1000EEDB0(v38);
  type metadata accessor for MoonCalendarInput();
  uint64_t v44 = (uint64_t)v33;
  Calendar.dateComponents(_:from:)();
  uint64_t v45 = v98;
  swift_bridgeObjectRelease();
  uint64_t v46 = v126;
  Calendar.date(from:)();
  if (_s7Weather24LocationCompositionStateOwet_0(v46, 1, v45) == 1)
  {
    unint64_t v47 = (void *)v46;
    goto LABEL_5;
  }
  uint64_t v48 = *(void (**)(char *, void *, uint64_t))(v100 + 32);
  uint64_t v49 = v91;
  char v113 = (void (**)(char *, uint64_t, uint64_t))(v100 + 32);
  BOOL v111 = v48;
  v48(v91, (void *)v46, v45);
  char v50 = v124;
  uint64_t v51 = v90;
  v123(v124, v43, v90);
  unint64_t v47 = v117;
  Calendar.date(byAdding:value:to:wrappingComponents:)();
  uint64_t v53 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v52 = v11 + 8;
  BOOL v118 = v53;
  v53(v50, v51);
  unint64_t v54 = v49;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v45) == 1)
  {
    (*(void (**)(char *, uint64_t))(v100 + 8))(v49, v98);
LABEL_5:
    sub_1001781AC((uint64_t)v47, (uint64_t *)&unk_100E73CA0);
    sub_1001457CC((unint64_t *)&qword_100E63978);
    unint64_t v55 = (void *)Dictionary.init(dictionaryLiteral:)();
    (*(void (**)(char *, uint64_t))(v96 + 8))(v99, v97);
    (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v44, v95);
    (*(void (**)(char *, uint64_t))(v92 + 8))(v125, v93);
    return (uint64_t)v55;
  }
  uint64_t v115 = v41;
  uint64_t v126 = v44;
  uint64_t v56 = v98;
  v111(v122, v47, v98);
  Location.coordinate.getter();
  uint64_t v57 = v100 + 16;
  uint64_t v110 = *(void (**)(char *, char *, uint64_t))(v100 + 16);
  v110(v27, v54, v56);
  uint64_t v117 = (void *)(v2 + 16);
  swift_beginAccess();
  uint64_t v102 = (void (**)(char *, uint64_t, uint64_t))(v114 + 32);
  uint64_t v103 = (void (**)(char *, uint64_t))(v57 - 8);
  uint64_t v101 = (void (**)(char *, uint64_t))(v114 + 8);
  LODWORD(v114) = enum case for Calendar.Component.day(_:);
  BOOL v111 = (void (*)(char *, void *, uint64_t))v57;
  char v113 = (void (**)(char *, uint64_t, uint64_t))(v57 + 24);
  unint64_t v55 = &_swiftEmptyDictionarySingleton;
  uint64_t v58 = (uint64_t)v108;
  uint64_t v59 = (uint64_t)v125;
  uint64_t v116 = v52;
  while (1)
  {
    uint64_t v60 = v56;
    uint64_t v61 = v51;
    sub_1001B1E64(v117, *(void *)(v2 + 40));
    dispatch thunk of MoonDataProviderType.dayMoonData(for:timeZone:coordinate:)();
    uint64_t v62 = v128;
    if (_s7Weather24LocationCompositionStateOwet_0(v58, 1, v128) == 1)
    {
      sub_1001781AC(v58, &qword_100E6C288);
      uint64_t v63 = v124;
      v123(v124, v114, v51);
      uint64_t v64 = (uint64_t)v106;
      Calendar.date(byAdding:value:to:wrappingComponents:)();
      v118(v63, v51);
      uint64_t v56 = v60;
      if (_s7Weather24LocationCompositionStateOwet_0(v64, 1, v60) == 1) {
        goto LABEL_24;
      }
      goto LABEL_19;
    }
    uint64_t v65 = v59;
    (*v102)(v120, v58, v62);
    int v66 = DayMoonData.phase.getter();
    char v67 = v66;
    uint64_t v68 = v119;
    uint64_t v69 = v2;
    sub_10031D15C((uint64_t)v27, v112, v65, v66, v126, (void (**)(char *, uint64_t))v2, v119);
    v110(v127, v27, v56);
    uint64_t v70 = v107;
    sub_1001262FC(v68, (uint64_t)&v107[*(int *)(v109 + 20)], (uint64_t *)&unk_100E73CA0);
    *uint64_t v70 = v67;
    sub_10031E498((uint64_t)v70, v121);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v129 = v55;
    unint64_t v72 = sub_100246B34();
    uint64_t v74 = v55[2];
    BOOL v75 = (v73 & 1) == 0;
    Swift::Int v76 = v74 + v75;
    if (__OFADD__(v74, v75)) {
      break;
    }
    unint64_t v77 = v72;
    char v78 = v73;
    sub_10017DF08(&qword_100E6C290);
    Swift::Bool v79 = _NativeDictionary.ensureUnique(isUnique:capacity:)(isUniquelyReferenced_nonNull_native, v76);
    uint64_t v56 = v60;
    if (v79)
    {
      unint64_t v80 = sub_100246B34();
      if ((v78 & 1) != (v81 & 1)) {
        goto LABEL_26;
      }
      unint64_t v77 = v80;
    }
    unint64_t v55 = v129;
    if (v78)
    {
      sub_10031E4FC(v121, v129[7] + *(void *)(v105 + 72) * v77);
    }
    else
    {
      v129[(v77 >> 6) + 8] |= 1 << v77;
      v110((char *)(v55[6] + *(void *)(v100 + 72) * v77), v127, v60);
      sub_10031E498(v121, v55[7] + *(void *)(v105 + 72) * v77);
      uint64_t v82 = v55[2];
      BOOL v83 = __OFADD__(v82, 1);
      uint64_t v84 = v82 + 1;
      if (v83) {
        goto LABEL_23;
      }
      v55[2] = v84;
      unint64_t v55 = v129;
    }
    swift_bridgeObjectRelease();
    (*v103)(v127, v60);
    sub_1001781AC(v119, (uint64_t *)&unk_100E73CA0);
    (*v101)(v120, v128);
    unint64_t v85 = v124;
    uint64_t v51 = v61;
    v123(v124, v114, v61);
    uint64_t v64 = (uint64_t)v104;
    Calendar.date(byAdding:value:to:wrappingComponents:)();
    v118(v85, v61);
    int v86 = _s7Weather24LocationCompositionStateOwet_0(v64, 1, v56);
    uint64_t v2 = v69;
    uint64_t v58 = (uint64_t)v108;
    if (v86 == 1) {
      goto LABEL_25;
    }
LABEL_19:
    (*v113)(v27, v64, v56);
    char v87 = static Date.< infix(_:_:)();
    uint64_t v59 = (uint64_t)v125;
    if ((v87 & 1) == 0)
    {
      uint64_t v88 = *v103;
      (*v103)(v122, v56);
      v88(v91, v56);
      (*(void (**)(char *, uint64_t))(v96 + 8))(v99, v97);
      (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v126, v95);
      (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v59, v93);
      v88(v27, v56);
      return (uint64_t)v55;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_10031BB90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v121 = a2;
  uint64_t v106 = a3;
  uint64_t v122 = type metadata accessor for MoonPhase.Hemisphere();
  uint64_t v120 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  uint64_t v119 = (char *)&v99 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = type metadata accessor for Calendar.Component();
  uint64_t v128 = *(void *)(v108 - 8);
  uint64_t v5 = v128;
  __chkstk_darwin(v108);
  uint64_t v105 = (char *)&v99 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v129 = (uint64_t)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v104 = (char *)&v99 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v107 = (char *)&v99 - v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v99 - v14;
  uint64_t v131 = type metadata accessor for Date();
  uint64_t v127 = *(void *)(v131 - 8);
  uint64_t v16 = __chkstk_darwin(v131);
  uint64_t v125 = (char *)&v99 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v124 = (char *)&v99 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v130 = (char *)&v99 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v102 = (char *)&v99 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v103 = (char *)&v99 - v25;
  __chkstk_darwin(v24);
  uint64_t v126 = (char *)&v99 - v26;
  uint64_t v27 = type metadata accessor for DateComponents();
  uint64_t v114 = *(void *)(v27 - 8);
  uint64_t v115 = v27;
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v99 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for TimeZone();
  uint64_t v31 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v33 = (char *)&v99 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for Calendar();
  uint64_t v111 = *(void *)(v34 - 8);
  uint64_t v112 = v34;
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)&v99 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  Location.timeZone.getter();
  static Calendar.currentCalendar(with:)();
  uint64_t v116 = v31;
  unint64_t v37 = *(void (**)(char *, uint64_t))(v31 + 8);
  uint64_t v123 = v33;
  uint64_t v38 = v33;
  uint64_t v39 = v108;
  uint64_t v117 = v30;
  v37(v38, v30);
  sub_10017DF08(&qword_100E65238);
  uint64_t v40 = *(void *)(v5 + 72);
  uint64_t v41 = v128;
  unint64_t v42 = (*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80);
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_100C25ED0;
  unint64_t v44 = v43 + v42;
  uint64_t v45 = *(void (**)(unint64_t, uint64_t, uint64_t))(v41 + 104);
  v45(v44, enum case for Calendar.Component.year(_:), v39);
  unint64_t v46 = v44 + v40;
  uint64_t v47 = enum case for Calendar.Component.month(_:);
  v45(v46, enum case for Calendar.Component.month(_:), v39);
  sub_1000EEDB0(v43);
  uint64_t v109 = type metadata accessor for MoonCalendarInput();
  uint64_t v48 = *(int *)(v109 + 24);
  uint64_t v118 = a1;
  uint64_t v49 = a1 + v48;
  Calendar.dateComponents(_:from:)();
  swift_bridgeObjectRelease();
  char v113 = v29;
  Calendar.date(from:)();
  int v50 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v131);
  uint64_t v110 = v36;
  if (v50 == 1)
  {
    uint64_t v51 = (uint64_t)v15;
    uint64_t v52 = v106;
    uint64_t v53 = v127;
    unint64_t v54 = v130;
  }
  else
  {
    uint64_t v101 = v49;
    uint64_t v55 = v131;
    uint64_t v100 = *(void (**)(char *, char *, uint64_t))(v127 + 32);
    uint64_t v99 = v127 + 32;
    v100(v126, v15, v131);
    uint64_t v56 = v105;
    v45((unint64_t)v105, v47, v39);
    uint64_t v57 = (uint64_t)v107;
    Calendar.date(byAdding:value:to:wrappingComponents:)();
    uint64_t v58 = *(void (**)(char *, uint64_t))(v128 + 8);
    v58(v56, v39);
    if (_s7Weather24LocationCompositionStateOwet_0(v57, 1, v55) == 1)
    {
      uint64_t v53 = v127;
      (*(void (**)(char *, uint64_t))(v127 + 8))(v126, v131);
      uint64_t v52 = v106;
      unint64_t v54 = v130;
      uint64_t v51 = (uint64_t)v107;
    }
    else
    {
      uint64_t v59 = v39;
      uint64_t v60 = v103;
      uint64_t v61 = v131;
      v100(v103, v107, v131);
      uint64_t v62 = v105;
      v45((unint64_t)v105, v47, v59);
      uint64_t v63 = (uint64_t)v104;
      Calendar.date(byAdding:value:to:wrappingComponents:)();
      v58(v62, v59);
      if (_s7Weather24LocationCompositionStateOwet_0(v63, 1, v61) != 1)
      {
        int v86 = v102;
        char v87 = v60;
        uint64_t v88 = v131;
        uint64_t v89 = (void (*)(uint64_t, char *, uint64_t))v100;
        v100(v102, (char *)v63, v131);
        uint64_t v90 = v118;
        Location.timeZone.getter();
        uint64_t v91 = v127;
        uint64_t v92 = *(void (**)(char *, char *, uint64_t))(v127 + 16);
        v92(v130, v86, v88);
        v92(v124, v87, v88);
        uint64_t v93 = v109;
        v92(v125, (char *)(v90 + *(int *)(v109 + 28)), v88);
        uint64_t v94 = v129;
        sub_1001262FC(v90 + *(int *)(v93 + 32), v129, (uint64_t *)&unk_100E73CA0);
        uint64_t v95 = v121;
        swift_bridgeObjectRetain();
        Location.coordinate.getter();
        uint64_t v96 = v119;
        MoonPhase.Hemisphere.init(latitude:)();
        uint64_t v97 = *(void (**)(char *, uint64_t))(v91 + 8);
        v97(v86, v88);
        v97(v87, v88);
        v97(v126, v88);
        (*(void (**)(char *, uint64_t))(v114 + 8))(v113, v115);
        (*(void (**)(char *, uint64_t))(v111 + 8))(v110, v112);
        uint64_t v52 = v106;
        char v78 = v96;
        (*(void (**)(uint64_t, char *, uint64_t))(v116 + 32))(v106, v123, v117);
        Swift::Bool v79 = (int *)type metadata accessor for CalendarViewModel(0);
        v89(v52 + v79[5], v130, v88);
        v89(v52 + v79[6], v124, v88);
        uint64_t v98 = v88;
        uint64_t v77 = v95;
        v89(v52 + v79[7], v125, v98);
        uint64_t v82 = v94;
        goto LABEL_13;
      }
      uint64_t v53 = v127;
      uint64_t v64 = *(void (**)(char *, uint64_t))(v127 + 8);
      uint64_t v65 = v131;
      v64(v60, v131);
      v64(v126, v65);
      uint64_t v51 = v63;
      uint64_t v52 = v106;
      unint64_t v54 = v130;
    }
    uint64_t v49 = v101;
  }
  sub_1001781AC(v51, (uint64_t *)&unk_100E73CA0);
  if (qword_100E627E8 != -1) {
    swift_once();
  }
  uint64_t v66 = type metadata accessor for Logger();
  sub_1002102B0(v66, (uint64_t)qword_100F51ED0);
  char v67 = Logger.logObject.getter();
  os_log_type_t v68 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v67, v68))
  {
    uint64_t v69 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v69 = 0;
    _os_log_impl((void *)&_mh_execute_header, v67, v68, "Failed to generate date range for the calendar view in the moon detail view", v69, 2u);
    swift_slowDealloc();
  }

  uint64_t v70 = v123;
  uint64_t v71 = v118;
  Location.timeZone.getter();
  unint64_t v72 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 16);
  uint64_t v73 = v131;
  v72(v54, v49, v131);
  uint64_t v74 = v124;
  v72(v124, v49, v73);
  uint64_t v75 = v109;
  Swift::Int v76 = v125;
  v72(v125, v71 + *(int *)(v109 + 28), v73);
  sub_1001262FC(v71 + *(int *)(v75 + 32), v129, (uint64_t *)&unk_100E73CA0);
  uint64_t v77 = v121;
  swift_bridgeObjectRetain();
  Location.coordinate.getter();
  char v78 = v119;
  MoonPhase.Hemisphere.init(latitude:)();
  (*(void (**)(char *, uint64_t))(v114 + 8))(v113, v115);
  (*(void (**)(char *, uint64_t))(v111 + 8))(v110, v112);
  (*(void (**)(uint64_t, char *, uint64_t))(v116 + 32))(v52, v70, v117);
  Swift::Bool v79 = (int *)type metadata accessor for CalendarViewModel(0);
  unint64_t v80 = *(void (**)(uint64_t, char *, uint64_t))(v53 + 32);
  v80(v52 + v79[5], v130, v73);
  v80(v52 + v79[6], v74, v73);
  uint64_t v81 = v73;
  uint64_t v82 = v129;
  v80(v52 + v79[7], v76, v81);
LABEL_13:
  uint64_t v83 = v122;
  uint64_t v84 = v120;
  sub_10020E72C(v82, v52 + v79[8], (uint64_t *)&unk_100E73CA0);
  *(void *)(v52 + v79[9]) = v77;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v84 + 32))(v52 + v79[10], v78, v83);
}

uint64_t sub_10031C7D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v54 = a1;
  uint64_t v1 = type metadata accessor for OverviewTableRowViewModel();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v60 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v59 = (char *)&v53 - v5;
  uint64_t v65 = type metadata accessor for Date();
  uint64_t v61 = *(void (***)(char *, uint64_t))(v65 - 8);
  __chkstk_darwin(v65);
  os_log_type_t v68 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E6C280);
  uint64_t v63 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v66 = (uint64_t)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TimeZone();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100E62218 != -1) {
    swift_once();
  }
  uint64_t v13 = (void *)qword_100E6C1D0;
  Location.timeZone.getter();
  Class isa = TimeZone._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  id v67 = v13;
  [v13 setTimeZone:isa];

  uint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v16 = sub_10031DE94(v15);
  swift_bridgeObjectRelease();
  sub_10031A7A0(v16);
  swift_release();
  sub_1001457CC((unint64_t *)&qword_100E66CC0);
  uint64_t v17 = v65;
  uint64_t v18 = Array.sorting<A>(on:)();
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(v18 + 16);
  if (v19)
  {
    uint64_t v20 = *(int *)(v7 + 48);
    unint64_t v21 = (*(unsigned __int8 *)(v63 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v63 + 80);
    uint64_t v53 = v18;
    uint64_t v22 = v18 + v21;
    uint64_t v63 = *(void *)(v63 + 72);
    uint64_t v64 = v20;
    uint64_t v62 = (void (**)(char *, uint64_t, uint64_t))(v61 + 4);
    uint64_t v58 = v2 + 32;
    uint64_t v23 = _swiftEmptyArrayStorage;
    ++v61;
    uint64_t v56 = (void *)0x8000000100C9A820;
    uint64_t v57 = (void *)0x8000000100C9A880;
    uint64_t v24 = v68;
    uint64_t v55 = v2;
    do
    {
      uint64_t v25 = v66;
      sub_1001262FC(v22, v66, &qword_100E6C280);
      (*v62)(v24, v25, v17);
      uint64_t v26 = MoonPhase.rawValue.getter();
      uint64_t v28 = v27;
      if (v26 == MoonPhase.rawValue.getter() && v28 == v29)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v31 & 1) == 0)
        {
          uint64_t v24 = v68;
          goto LABEL_18;
        }
      }
      uint64_t v24 = v68;
      Class v32 = Date._bridgeToObjectiveC()().super.isa;
      id v33 = [v67 stringForObjectValue:v32, v53, v54];

      if (v33)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        id v34 = [self mainBundle];
        v69._object = v57;
        v35._uint64_t countAndFlagsBits = 0x6E6F6F4D2077654ELL;
        v35._object = (void *)0xE800000000000000;
        v36._uint64_t countAndFlagsBits = 0;
        v36._object = (void *)0xE000000000000000;
        v69._uint64_t countAndFlagsBits = 0xD000000000000059;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v35, (Swift::String_optional)0, (NSBundle)v34, v36, v69);

        swift_bridgeObjectRetain();
        OverviewTableRowViewModel.init(id:title:value:shouldDividerHavePadding:)();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v23 = (void *)sub_1007E9858(0, v23[2] + 1, 1, (uint64_t)v23);
        }
        unint64_t v38 = v23[2];
        unint64_t v37 = v23[3];
        uint64_t v17 = v65;
        uint64_t v24 = v68;
        if (v38 >= v37 >> 1) {
          uint64_t v23 = (void *)sub_1007E9858(v37 > 1, v38 + 1, 1, (uint64_t)v23);
        }
        uint64_t v2 = v55;
        v23[2] = v38 + 1;
        (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))((unint64_t)v23+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(void *)(v2 + 72) * v38, v59, v1);
      }
LABEL_18:
      uint64_t v39 = MoonPhase.rawValue.getter();
      uint64_t v41 = v40;
      if (v39 == MoonPhase.rawValue.getter() && v41 == v42)
      {
        swift_bridgeObjectRelease_n();
LABEL_25:
        Class v45 = Date._bridgeToObjectiveC()().super.isa;
        id v46 = [v67 stringForObjectValue:v45];

        if (v46)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          id v47 = [self mainBundle];
          v70._uint64_t countAndFlagsBits = 0xD00000000000005ALL;
          v70._object = v56;
          v48._uint64_t countAndFlagsBits = 0x6F6F4D206C6C7546;
          v48._object = (void *)0xE90000000000006ELL;
          v49._uint64_t countAndFlagsBits = 0;
          v49._object = (void *)0xE000000000000000;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v48, (Swift::String_optional)0, (NSBundle)v47, v49, v70);

          swift_bridgeObjectRetain();
          OverviewTableRowViewModel.init(id:title:value:shouldDividerHavePadding:)();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v23 = (void *)sub_1007E9858(0, v23[2] + 1, 1, (uint64_t)v23);
          }
          unint64_t v51 = v23[2];
          unint64_t v50 = v23[3];
          uint64_t v17 = v65;
          uint64_t v24 = v68;
          if (v51 >= v50 >> 1) {
            uint64_t v23 = (void *)sub_1007E9858(v50 > 1, v51 + 1, 1, (uint64_t)v23);
          }
          v23[2] = v51 + 1;
          (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))((unint64_t)v23+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(void *)(v2 + 72) * v51, v60, v1);
        }
        goto LABEL_31;
      }
      char v44 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v44) {
        goto LABEL_25;
      }
LABEL_31:
      (*v61)(v24, v17);
      v22 += v63;
      --v19;
    }
    while (v19);
  }
  swift_bridgeObjectRelease();
  return OverviewTableViewModel.init(rows:)();
}

uint64_t sub_10031D068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6C280);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a1, v7);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v6, v7);
}

uint64_t sub_10031D15C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, void (**a6)(char *, uint64_t)@<X5>, uint64_t a7@<X8>)
{
  uint64_t v83 = a6;
  uint64_t v99 = a5;
  int v101 = a4;
  uint64_t v90 = a7;
  uint64_t v97 = type metadata accessor for InterpolatedEphemeris();
  uint64_t v82 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v89 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E6C298);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v96 = (uint64_t)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v95 = (char *)&v79 - v14;
  uint64_t v88 = (void (**)(void, void))type metadata accessor for Calendar.Component();
  uint64_t v84 = (void (**)(char *, uint64_t, uint64_t))*(v88 - 1);
  __chkstk_darwin(v88);
  uint64_t v16 = (char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for Date();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v93 = (char *)&v79 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v100 = (char *)&v79 - v25;
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v79 - v26;
  swift_beginAccess();
  uint64_t v28 = v21 + 16;
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  uint64_t v102 = a1;
  v29(v27, a1, v20);
  uint64_t v30 = *(int *)(type metadata accessor for MoonCalendarInput() + 20);
  uint64_t v98 = a2;
  uint64_t v31 = a2 + v30;
  uint64_t v85 = a3;
  LOBYTE(a3) = Date.isSameDay(as:timeZone:)();
  uint64_t v86 = v21;
  uint64_t v32 = v21 + 8;
  uint64_t v103 = *(void (**)(char *, uint64_t))(v21 + 8);
  v103(v27, v20);
  if (a3)
  {
    uint64_t v33 = v90;
    v29((char *)v90, v31, v20);
    uint64_t v34 = v33;
    uint64_t v35 = v20;
    return _s7Weather24LocationCompositionStateOwst_0(v34, 0, 1, v35);
  }
  uint64_t v104 = v20;
  uint64_t v36 = MoonPhase.illuminatedFraction.getter();
  if (v37)
  {
    uint64_t v75 = v102;
    swift_beginAccess();
    uint64_t v76 = v104;
    v29(v27, v75, v104);
    uint64_t v77 = v90;
    Date.noon(timeZone:)();
    v103(v27, v76);
    uint64_t v34 = v77;
    uint64_t v35 = v76;
    return _s7Weather24LocationCompositionStateOwst_0(v34, 0, 1, v35);
  }
  uint64_t v81 = v36;
  unint64_t v38 = v84;
  v84[13](v16, enum case for Calendar.Component.day(_:), (uint64_t)v88);
  uint64_t v39 = v102;
  swift_beginAccess();
  uint64_t v40 = v104;
  v29(v27, v39, v104);
  Calendar.date(byAdding:value:to:wrappingComponents:)();
  v103(v27, v40);
  uint64_t v41 = v16;
  uint64_t v42 = v40;
  ((void (*)(char *, uint64_t))v38[1])(v41, (uint64_t)v88);
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v40);
  uint64_t v94 = v32;
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v44 = v28;
    Class v45 = *(void (**)(uint64_t, char *, uint64_t))(v86 + 32);
    v86 += 32;
    unint64_t v80 = v45;
    v45((uint64_t)v100, v19, v42);
    swift_beginAccess();
    swift_beginAccess();
    v29(v27, v39, v42);
    id v46 = v27;
    id v47 = v93;
    Date.wc_addHours(_:calendar:)();
    Swift::String v48 = v47;
    Swift::String v49 = v103;
    v103(v27, v42);
    char v50 = static Date.< infix(_:_:)();
    uint64_t v92 = v29;
    uint64_t v91 = v27;
    if (v50)
    {
      uint64_t v88 = (void (**)(void, void))(v83 + 7);
      uint64_t v84 = (void (**)(char *, uint64_t, uint64_t))(v82 + 32);
      uint64_t v83 = (void (**)(char *, uint64_t))(v82 + 8);
      uint64_t v51 = 1;
      uint64_t v87 = v44;
      do
      {
        sub_10020D948((uint64_t)v88, (uint64_t)v105);
        uint64_t v52 = v48;
        sub_1001B1E64(v105, v105[3]);
        v29(v46, v39, v104);
        Location.coordinate.getter();
        uint64_t v53 = (uint64_t)v95;
        uint64_t v42 = v104;
        Swift::String v49 = v103;
        dispatch thunk of MoonInterpolationProviderType.interpolate(for:startOfDay:endOfDay:coordinate:dayMoonPhase:)();
        v49(v46, v42);
        _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v105);
        uint64_t v54 = v96;
        sub_1001262FC(v53, v96, &qword_100E6C298);
        uint64_t v55 = v97;
        if (_s7Weather24LocationCompositionStateOwet_0(v54, 1, v97) == 1)
        {
          sub_1001781AC(v53, &qword_100E6C298);
          v49(v48, v42);
          sub_1001781AC(v54, &qword_100E6C298);
        }
        else
        {
          uint64_t v56 = v89;
          (*v84)(v89, v54, v55);
          InterpolatedEphemeris.illuminatedFraction.getter();
          char v57 = sub_100634E68();
          (*v83)(v56, v55);
          sub_1001781AC(v53, &qword_100E6C298);
          if (v57)
          {
            v103(v100, v42);
            uint64_t v78 = v90;
            v80(v90, v93, v42);
            uint64_t v34 = v78;
            uint64_t v35 = v42;
            return _s7Weather24LocationCompositionStateOwst_0(v34, 0, 1, v35);
          }
          uint64_t v52 = v93;
          Swift::String v49 = v103;
          v103(v93, v42);
        }
        uint64_t v39 = v102;
        if (v51 == 25) {
          goto LABEL_14;
        }
        id v46 = v91;
        uint64_t v29 = v92;
        v92(v91, v102, v42);
        Date.wc_addHours(_:calendar:)();
        v49(v46, v42);
        Swift::String v48 = v52;
        ++v51;
      }
      while ((static Date.< infix(_:_:)() & 1) != 0);
    }
    v49(v48, v42);
LABEL_14:
    if (qword_100E627E8 != -1) {
      swift_once();
    }
    uint64_t v58 = type metadata accessor for Logger();
    sub_1002102B0(v58, (uint64_t)qword_100F51ED0);
    uint64_t v59 = Logger.logObject.getter();
    os_log_type_t v60 = static os_log_type_t.error.getter();
    int v61 = v60;
    BOOL v62 = os_log_type_enabled(v59, v60);
    uint64_t v63 = v91;
    if (v62)
    {
      uint64_t v64 = swift_slowAlloc();
      uint64_t v99 = swift_slowAlloc();
      v105[0] = v99;
      *(_DWORD *)uint64_t v64 = 136446722;
      LODWORD(v98) = v61;
      uint64_t v65 = MoonPhase.description.getter();
      uint64_t v106 = sub_10016414C(v65, v66, v105);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v64 + 12) = 2050;
      uint64_t v106 = v81;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v64 + 22) = 2082;
      swift_beginAccess();
      uint64_t v67 = v104;
      os_log_type_t v68 = v92;
      v92(v63, v102, v104);
      sub_1001457CC(&qword_100E656D8);
      uint64_t v69 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v71 = v70;
      unint64_t v72 = v103;
      v103(v63, v67);
      v105[5] = sub_10016414C(v69, v71, v105);
      uint64_t v39 = v102;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v59, (os_log_type_t)v98, "Did not find hour in day that matched expected illuminated fraction; moonPhase=%{public}s, expectedIlluminatedFr"
        "action=%{public}f, day=%{public}s",
        (uint8_t *)v64,
        0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v73 = v90;
      uint64_t v74 = v100;
    }
    else
    {

      uint64_t v73 = v90;
      uint64_t v74 = v100;
      uint64_t v67 = v104;
      unint64_t v72 = v103;
      os_log_type_t v68 = v92;
    }
    swift_beginAccess();
    v68(v63, v39, v67);
    Date.noon(timeZone:)();
    v72(v63, v67);
    v72(v74, v67);
    uint64_t v34 = v73;
    uint64_t v35 = v67;
    return _s7Weather24LocationCompositionStateOwst_0(v34, 0, 1, v35);
  }
  return result;
}

uint64_t sub_10031DE30()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 56);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MoonCalendarViewModelFactory()
{
  return self;
}

uint64_t sub_10031DE94(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    uint64_t v5 = (uint64_t *)((char *)&v10 - ((8 * v4 + 15) & 0x3FFFFFFFFFFFFFF0));
    sub_1007F3004(0, v4, v5);
    sub_10031DFF8((uint64_t)v5, v4, v2);
    if (v1) {
      swift_willThrow();
    }
    else {
      return v6;
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    sub_1007F3004(0, v4, v7);
    sub_10031DFF8((uint64_t)v7, v4, v2);
    uint64_t v2 = v8;
    swift_slowDealloc();
  }
  return v2;
}

void sub_10031DFF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v33 = a2;
  uint64_t v34 = a1;
  uint64_t v4 = type metadata accessor for CalendarMoonPhaseData(0);
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v33 - v8;
  int64_t v10 = 0;
  uint64_t v11 = *(void *)(a3 + 64);
  uint64_t v35 = 0;
  uint64_t v36 = a3 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v37 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_20;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v17 >= v37) {
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v36 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v37) {
        goto LABEL_37;
      }
      unint64_t v18 = *(void *)(v36 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v37) {
          goto LABEL_37;
        }
        unint64_t v18 = *(void *)(v36 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_19:
    unint64_t v14 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_20:
    sub_10031E3D8(*(void *)(a3 + 56) + *(void *)(v38 + 72) * v16, (uint64_t)v9);
    uint64_t v20 = MoonPhase.rawValue.getter();
    uint64_t v22 = v21;
    if (v20 == MoonPhase.rawValue.getter() && v22 == v23)
    {
      swift_bridgeObjectRelease_n();
      sub_10031E3D8((uint64_t)v9, (uint64_t)v7);
      goto LABEL_33;
    }
    char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10031E3D8((uint64_t)v9, (uint64_t)v7);
    if (v25)
    {
LABEL_33:
      sub_10031E43C((uint64_t)v7);
      sub_10031E43C((uint64_t)v9);
LABEL_34:
      *(void *)(v34 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      if (__OFADD__(v35++, 1))
      {
        __break(1u);
LABEL_37:
        sub_1007BF2D0(v34, v33, v35, a3);
        return;
      }
    }
    else
    {
      uint64_t v26 = MoonPhase.rawValue.getter();
      uint64_t v28 = v27;
      if (v26 == MoonPhase.rawValue.getter() && v28 == v29)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_33;
      }
      char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10031E43C((uint64_t)v7);
      sub_10031E43C((uint64_t)v9);
      if (v31) {
        goto LABEL_34;
      }
    }
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v37) {
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v36 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v37) {
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v36 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_19;
    }
  }
LABEL_39:
  __break(1u);
}

uint64_t sub_10031E358(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  uint64_t v2 = 64;
  for (uint64_t i = 10; i - 8 < (unint64_t)(v3 + 63) >> 6; ++i)
  {
    unint64_t v1 = *(void *)(a1 + 8 * i);
    v2 += 64;
    if (v1) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_10031E3D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CalendarMoonPhaseData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10031E43C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CalendarMoonPhaseData(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10031E498(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CalendarMoonPhaseData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10031E4FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CalendarMoonPhaseData(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_10031E560(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = type metadata accessor for LocationComponentContainerViewModel();
  sub_100162E4C();
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v7 = __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  uint64_t v8 = type metadata accessor for LocationViewComponent();
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_10017DF08(&qword_100E64E80);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = swift_retain();
  sub_1006E2E94(v18, a2);
  swift_release();
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather31LocationSevereNewsConfiguration8_Storage_map, v12, (void (*)(void))type metadata accessor for LocationViewComponent);
  uint64_t v19 = sub_10018297C();
  a2(v19);
  sub_100185204();
  _s7Weather24LocationCompositionStateOwst_0(v17, 0, 1, v4);
  sub_10016327C(OBJC_IVAR____TtCV7Weather31LocationSevereNewsConfiguration8_Storage_airQuality);
  uint64_t v20 = sub_10018297C();
  a2(v20);
  sub_100185204();
  sub_10016327C(OBJC_IVAR____TtCV7Weather31LocationSevereNewsConfiguration8_Storage_newsArticle);
  uint64_t v21 = sub_10018297C();
  a2(v21);
  sub_100185204();
  sub_10016327C(OBJC_IVAR____TtCV7Weather31LocationSevereNewsConfiguration8_Storage_severeAlert);
  uint64_t v22 = sub_10018297C();
  a2(v22);
  sub_100185204();
  sub_1002E2A3C();
}

uint64_t sub_10031E798(uint64_t a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E64E80);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_10008B8C0();
  uint64_t v10 = a1 + OBJC_IVAR____TtCV7Weather17SevereNewsContent8_Storage_map;
  swift_beginAccess();
  sub_10006DF38(v10, v7, &qword_100E64E80);
  uint64_t v115 = a1;
  if (_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8) == 1)
  {
    sub_1001781AC(v7, &qword_100E64E80);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100C28110;
    sub_10017DF08(&qword_100E6CCD0);
    unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v13 = *(void *)(v9 + 72);
    uint64_t v14 = (__n128 *)swift_allocObject();
    uint64_t v15 = sub_100183900(v14, (__n128)xmmword_100C251B0);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather17SevereNewsContent8_Storage_severeAlert, (uint64_t)v15 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 32) = sub_1001F24CC((uint64_t)v14);
    *(void *)(v11 + 40) = v16;
    *(void *)(v11 + 48) = v17;
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = v116;
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather17SevereNewsContent8_Storage_newsArticle, v18 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 56) = sub_1001F24CC(v18);
    *(void *)(v11 + 64) = v19;
    *(void *)(v11 + 72) = v20;
    uint64_t v21 = (__n128 *)sub_100163204();
    sub_100163264(v21);
    sub_10031F6A8(v22 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v23, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 80) = sub_1001F24CC(v18);
    *(void *)(v11 + 88) = v24;
    *(void *)(v11 + 96) = v25;
    uint64_t v26 = (__n128 *)sub_100163204();
    sub_100163264(v26);
    sub_10031F6A8(v27 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v28, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 104) = sub_1001F24CC(v18);
    *(void *)(v11 + 112) = v29;
    *(void *)(v11 + 120) = v30;
    uint64_t v31 = sub_100163204();
    *(_OWORD *)(v31 + 16) = v116;
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather17SevereNewsContent8_Storage_airQuality, v31 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 128) = sub_1001F24CC(v31);
    *(void *)(v11 + 136) = v32;
    *(void *)(v11 + 144) = v33;
    uint64_t v34 = v13;
    uint64_t v35 = (__n128 *)swift_allocObject();
    uint64_t v36 = (char *)sub_100183900(v35, (__n128)xmmword_100C25ED0) + v12;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
    sub_1001859A8((uint64_t)&v36[v34], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset);
    *(void *)(v11 + 152) = sub_1001F24CC((uint64_t)v35);
    *(void *)(v11 + 160) = v37;
    *(void *)(v11 + 168) = v38;
    uint64_t v39 = (__n128 *)swift_allocObject();
    sub_10016324C(v39);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_1001859A8((uint64_t)&v36[v34], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal);
    *(void *)(v11 + 176) = sub_1001F24CC((uint64_t)v35);
    *(void *)(v11 + 184) = v40;
    *(void *)(v11 + 192) = v41;
    uint64_t v42 = (__n128 *)swift_allocObject();
    sub_10016324C(v42);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_1001859A8((uint64_t)&v36[v34], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity);
    *(void *)(v11 + 200) = sub_1001F24CC((uint64_t)v35);
    *(void *)(v11 + 208) = v43;
    *(void *)(v11 + 216) = v44;
    uint64_t v45 = sub_100163204();
    *(_OWORD *)(v45 + 16) = v116;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_1001859A8(v45 + v12 + v34, OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure);
    *(void *)(v11 + 224) = sub_1001F24CC(v45);
    *(void *)(v11 + 232) = v46;
    *(void *)(v11 + 240) = v47;
    Swift::String v48 = (__n128 *)swift_allocObject();
    sub_100179F48(v48);
    uint64_t v50 = v49 + v12;
    uint64_t v51 = *(void *)(a1 + 16);
    sub_10031F6A8(v51 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v49 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v51 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v50 + v34, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 248) = sub_1001F24CC((uint64_t)v48);
    *(void *)(v11 + 256) = v52;
    *(void *)(v11 + 264) = v53;
  }
  else
  {
    sub_10031F6FC(v7, v1, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100C31F20;
    sub_10017DF08(&qword_100E6CCD0);
    uint64_t v114 = *(void *)(v9 + 72);
    uint64_t v113 = v1;
    unint64_t v54 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v55 = (__n128 *)swift_allocObject();
    uint64_t v56 = sub_100183900(v55, (__n128)xmmword_100C251B0);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather17SevereNewsContent8_Storage_severeAlert, (uint64_t)v56 + v54, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 32) = sub_1001F24CC((uint64_t)v55);
    *(void *)(v11 + 40) = v57;
    *(void *)(v11 + 48) = v58;
    uint64_t v59 = (__n128 *)sub_10017C984();
    sub_100179F54(v59);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather17SevereNewsContent8_Storage_newsArticle, v60, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 56) = sub_1001F24CC((uint64_t)v59);
    *(void *)(v11 + 64) = v61;
    *(void *)(v11 + 72) = v62;
    uint64_t v63 = (__n128 *)sub_10017C984();
    sub_10017E198(v63);
    sub_10031F6A8(v64 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v65, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 80) = sub_1001F24CC((uint64_t)v59);
    *(void *)(v11 + 88) = v66;
    *(void *)(v11 + 96) = v67;
    os_log_type_t v68 = (__n128 *)sub_10017C984();
    sub_10017E198(v68);
    sub_10031F6A8(v69 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v70, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 104) = sub_1001F24CC((uint64_t)v59);
    *(void *)(v11 + 112) = v71;
    *(void *)(v11 + 120) = v72;
    uint64_t v73 = (__n128 *)sub_10017C984();
    sub_100179F54(v73);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather17SevereNewsContent8_Storage_airQuality, v74, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 128) = sub_1001F24CC((uint64_t)v73);
    *(void *)(v11 + 136) = v75;
    *(void *)(v11 + 144) = v76;
    uint64_t v77 = (__n128 *)sub_10017C984();
    sub_100179F54(v77);
    sub_10031F6A8(v1, v78, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 152) = sub_1001F24CC((uint64_t)v77);
    *(void *)(v11 + 160) = v79;
    *(void *)(v11 + 168) = v80;
    uint64_t v81 = (__n128 *)swift_allocObject();
    uint64_t v82 = (char *)sub_100183900(v81, (__n128)xmmword_100C25ED0) + v54;
    uint64_t v83 = a1;
    uint64_t v84 = *(void *)(a1 + 16);
    uint64_t v85 = v83;
    sub_10031F6A8(v84 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v82, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v84 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v82[v114], (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 176) = sub_1001F24CC((uint64_t)v81);
    *(void *)(v11 + 184) = v86;
    *(void *)(v11 + 192) = v87;
    uint64_t v88 = (__n128 *)swift_allocObject();
    sub_100179F48(v88);
    uint64_t v90 = v89 + v54;
    uint64_t v91 = *(void *)(v85 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_10031F6A8(v91 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, v90 + v114, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 200) = sub_1001F24CC((uint64_t)v88);
    *(void *)(v11 + 208) = v92;
    *(void *)(v11 + 216) = v93;
    uint64_t v94 = (__n128 *)swift_allocObject();
    sub_100179F48(v94);
    uint64_t v96 = v95 + v54;
    uint64_t v97 = *(void *)(v115 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_10031F6A8(v97 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, v96 + v114, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 224) = sub_1001F24CC((uint64_t)v94);
    *(void *)(v11 + 232) = v98;
    *(void *)(v11 + 240) = v99;
    uint64_t v100 = (__n128 *)swift_allocObject();
    sub_100179F48(v100);
    uint64_t v102 = v101 + v54;
    uint64_t v103 = *(void *)(v115 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_10031F6A8(v103 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, v102 + v114, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 248) = sub_1001F24CC((uint64_t)v100);
    *(void *)(v11 + 256) = v104;
    *(void *)(v11 + 264) = v105;
    uint64_t v106 = (__n128 *)swift_allocObject();
    sub_100179F48(v106);
    uint64_t v108 = v107 + v54;
    uint64_t v109 = *(void *)(v115 + 16);
    sub_10031F6A8(v109 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v107 + v54, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v109 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v108 + v114, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 272) = sub_1001F24CC((uint64_t)v106);
    *(void *)(v11 + 280) = v110;
    *(void *)(v11 + 288) = v111;
    sub_10031F75C(v113, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  }
  return v11;
}

void *sub_10031F064(char a1, char a2, uint64_t a3)
{
  uint64_t v94 = a3;
  uint64_t v6 = type metadata accessor for TipPriorityQueue.GridEntry();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100162EF8();
  uint64_t v93 = v8;
  __chkstk_darwin(v9);
  uint64_t v92 = (uint64_t)&v71 - v10;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v71 - v12;
  uint64_t v14 = sub_10017DF08(&qword_100E64E80);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_10008B8C0();
  uint64_t v16 = type metadata accessor for LocationComponentViewModel();
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v71 - v21;
  uint64_t v23 = sub_10017DF08(&qword_100E6CCD8);
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_100162EF8();
  uint64_t v91 = v25;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v71 - v27;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v71 - v30;
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v71 - v33;
  if (a1)
  {
    if (a1 == 1)
    {
      if (a2)
      {
        uint64_t v35 = &qword_100E6C6B0;
        goto LABEL_11;
      }
    }
    else if (a2)
    {
      uint64_t v35 = &qword_100E6CAC0;
      goto LABEL_11;
    }
    uint64_t v35 = &qword_100E6C8B8;
  }
  else if (a2)
  {
    uint64_t v35 = &qword_100E6C2A0;
  }
  else
  {
    uint64_t v35 = &qword_100E6C4A8;
  }
LABEL_11:
  char v36 = *((unsigned char *)v35 + 224);
  uint64_t v37 = *v35;
  uint64_t v77 = v35[1];
  uint64_t v78 = v37;
  uint64_t v76 = v35[2];
  uint64_t v75 = v35[3];
  uint64_t v38 = v35[8];
  uint64_t v81 = v35[9];
  uint64_t v82 = v38;
  uint64_t v39 = v35[10];
  uint64_t v79 = v35[11];
  uint64_t v80 = v39;
  uint64_t v74 = v35[24];
  uint64_t v73 = v35[25];
  uint64_t v72 = v35[26];
  uint64_t v71 = v35[27];
  uint64_t v40 = v35[53];
  uint64_t v85 = v35[54];
  uint64_t v86 = v40;
  uint64_t v41 = v35[55];
  uint64_t v83 = v35[56];
  uint64_t v84 = v41;
  uint64_t v42 = v35[61];
  uint64_t v89 = v35[62];
  uint64_t v90 = v42;
  uint64_t v43 = v94 + OBJC_IVAR____TtCV7Weather17SevereNewsContent8_Storage_map;
  uint64_t v45 = v35[63];
  uint64_t v44 = v35[64];
  uint64_t v87 = v45;
  uint64_t v88 = v44;
  swift_beginAccess();
  sub_10006DF38(v43, v3, &qword_100E64E80);
  uint64_t v46 = type metadata accessor for LocationComponentContainerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0(v3, 1, v46) == 1)
  {
    sub_1001781AC(v3, &qword_100E64E80);
LABEL_16:
    uint64_t v47 = 1;
    goto LABEL_17;
  }
  sub_10031F6A8(v3 + *(int *)(v46 + 20), (uint64_t)v19, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  sub_10031F75C(v3, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_10031F6FC((uint64_t)v19, (uint64_t)v22, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  if (v36)
  {
    sub_10031F75C((uint64_t)v22, (void (*)(void))type metadata accessor for LocationComponentViewModel);
    goto LABEL_16;
  }
  sub_10031F6FC((uint64_t)v22, (uint64_t)v31, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v47 = 0;
  Swift::String v48 = &v31[*(int *)(v6 + 20)];
  uint64_t v49 = v73;
  *(void *)Swift::String v48 = v74;
  *((void *)v48 + 1) = v49;
  uint64_t v50 = v71;
  *((void *)v48 + 2) = v72;
  *((void *)v48 + 3) = v50;
LABEL_17:
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, v47, 1, v6);
  sub_10031F640((uint64_t)v31, (uint64_t)v34);
  sub_10031F6A8(v94 + *(int *)(v46 + 20) + OBJC_IVAR____TtCV7Weather17SevereNewsContent8_Storage_airQuality, (uint64_t)v28, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v51 = &v28[*(int *)(v6 + 20)];
  uint64_t v52 = v77;
  *(void *)uint64_t v51 = v78;
  *((void *)v51 + 1) = v52;
  uint64_t v53 = v75;
  *((void *)v51 + 2) = v76;
  *((void *)v51 + 3) = v53;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v6);
  uint64_t v54 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
  sub_10031F6A8(v54, (uint64_t)v13, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v55 = &v13[*(int *)(v6 + 20)];
  uint64_t v56 = v81;
  *(void *)uint64_t v55 = v82;
  *((void *)v55 + 1) = v56;
  uint64_t v57 = v79;
  *((void *)v55 + 2) = v80;
  *((void *)v55 + 3) = v57;
  uint64_t v58 = v91;
  sub_10006DF38((uint64_t)v34, v91, &qword_100E6CCD8);
  uint64_t v59 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
  uint64_t v60 = v92;
  sub_10031F6A8(v59, v92, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v61 = (uint64_t *)(v60 + *(int *)(v6 + 20));
  uint64_t v62 = v85;
  *uint64_t v61 = v86;
  v61[1] = v62;
  uint64_t v63 = v83;
  void v61[2] = v84;
  v61[3] = v63;
  uint64_t v64 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
  uint64_t v65 = v93;
  sub_10031F6A8(v64, v93, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v66 = (uint64_t *)(v65 + *(int *)(v6 + 20));
  uint64_t v67 = v89;
  *uint64_t v66 = v90;
  v66[1] = v67;
  uint64_t v68 = v88;
  v66[2] = v87;
  v66[3] = v68;
  uint64_t v69 = sub_100AD6D18((uint64_t)v28, (uint64_t)v13, v58, v60, v65);
  sub_1001781AC((uint64_t)v34, &qword_100E6CCD8);
  return v69;
}

uint64_t sub_10031F640(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6CCD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10031F6A8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_10031F6FC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_10031F75C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_10031F7B4(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v26 = a1;
  uint64_t v24 = sub_10017DF08(&qword_100E6CD90);
  sub_100162E4C();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v22 - v9;
  sub_100215188(a3, v25);
  uint64_t v11 = v25[0];
  int64_t v12 = v25[3];
  unint64_t v13 = v25[4];
  uint64_t v22 = v25[1];
  int64_t v23 = (unint64_t)(v25[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v12 << 6);
      goto LABEL_15;
    }
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v23) {
      return swift_release();
    }
    unint64_t v18 = *(void *)(v22 + 8 * v17);
    if (!v18)
    {
      int64_t v19 = v12 + 2;
      if (v12 + 2 >= v23) {
        return swift_release();
      }
      unint64_t v18 = *(void *)(v22 + 8 * v19);
      if (v18) {
        goto LABEL_13;
      }
      int64_t v19 = v12 + 3;
      if (v12 + 3 >= v23) {
        return swift_release();
      }
      unint64_t v18 = *(void *)(v22 + 8 * v19);
      if (v18) {
        goto LABEL_13;
      }
      int64_t v19 = v12 + 4;
      if (v12 + 4 >= v23) {
        return swift_release();
      }
      unint64_t v18 = *(void *)(v22 + 8 * v19);
      if (v18)
      {
LABEL_13:
        int64_t v17 = v19;
      }
      else
      {
        int64_t v17 = v12 + 5;
        if (v12 + 5 >= v23) {
          return swift_release();
        }
        unint64_t v18 = *(void *)(v22 + 8 * v17);
        if (!v18)
        {
          int64_t v21 = v12 + 6;
          while (v21 < v23)
          {
            unint64_t v18 = *(void *)(v22 + 8 * v21++);
            if (v18)
            {
              int64_t v17 = v21 - 1;
              goto LABEL_14;
            }
          }
          return swift_release();
        }
      }
    }
LABEL_14:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
LABEL_15:
    type metadata accessor for Date();
    sub_100162E4C();
    sub_10008B8B4();
    v20();
    *(void *)&v10[*(int *)(v24 + 48)] = *(void *)(*(void *)(v11 + 56) + 8 * v16);
    sub_10020E72C((uint64_t)v10, (uint64_t)v7, &qword_100E6CD90);
    swift_bridgeObjectRetain();
    v26(v7);
    uint64_t result = sub_1001781AC((uint64_t)v7, &qword_100E6CD90);
    if (v3) {
      return swift_release();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10031FA34(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_10031FAEC(a1, a2, a3, &qword_100E6CD98, (void (*)(void *__return_ptr, uint64_t, __n128))sub_100215188, type metadata accessor for SunriseSunsetDaylightCalculator.SunActivity, (void (*)(void))type metadata accessor for SunriseSunsetDaylightCalculator.SunActivity);
}

uint64_t sub_10031FA90(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_10031FAEC(a1, a2, a3, &qword_100E6CD88, (void (*)(void *__return_ptr, uint64_t, __n128))sub_100215188, type metadata accessor for MonthSunAverage, (void (*)(void))type metadata accessor for MonthSunAverage);
}

uint64_t sub_10031FAEC(void (*a1)(char *), uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void *__return_ptr, uint64_t, __n128), uint64_t (*a6)(void), void (*a7)(void))
{
  uint64_t v39 = a7;
  char v36 = a4;
  uint64_t v37 = a6;
  uint64_t v35 = a1;
  uint64_t v34 = sub_10017DF08(a4);
  sub_100162E4C();
  __chkstk_darwin(v10);
  int64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v14 = __chkstk_darwin(v13);
  unint64_t v16 = (char *)&v31 - v15;
  a5(v38, a3, v14);
  uint64_t v17 = v38[0];
  int64_t v18 = v38[3];
  unint64_t v19 = v38[4];
  uint64_t v32 = v38[1];
  int64_t v33 = (unint64_t)(v38[2] + 64) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  while (1)
  {
    if (v19)
    {
      unint64_t v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v22 = v21 | (v18 << 6);
      goto LABEL_15;
    }
    int64_t v23 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v23 >= v33) {
      return swift_release();
    }
    unint64_t v24 = *(void *)(v32 + 8 * v23);
    if (!v24)
    {
      int64_t v25 = v18 + 2;
      if (v18 + 2 >= v33) {
        return swift_release();
      }
      unint64_t v24 = *(void *)(v32 + 8 * v25);
      if (v24) {
        goto LABEL_13;
      }
      int64_t v25 = v18 + 3;
      if (v18 + 3 >= v33) {
        return swift_release();
      }
      unint64_t v24 = *(void *)(v32 + 8 * v25);
      if (v24) {
        goto LABEL_13;
      }
      int64_t v25 = v18 + 4;
      if (v18 + 4 >= v33) {
        return swift_release();
      }
      unint64_t v24 = *(void *)(v32 + 8 * v25);
      if (v24)
      {
LABEL_13:
        int64_t v23 = v25;
      }
      else
      {
        int64_t v23 = v18 + 5;
        if (v18 + 5 >= v33) {
          return swift_release();
        }
        unint64_t v24 = *(void *)(v32 + 8 * v23);
        if (!v24)
        {
          int64_t v30 = v18 + 6;
          while (v30 < v33)
          {
            unint64_t v24 = *(void *)(v32 + 8 * v30++);
            if (v24)
            {
              int64_t v23 = v30 - 1;
              goto LABEL_14;
            }
          }
          return swift_release();
        }
      }
    }
LABEL_14:
    unint64_t v19 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
    int64_t v18 = v23;
LABEL_15:
    type metadata accessor for Date();
    sub_100162E4C();
    sub_10008B8B4();
    v26();
    uint64_t v27 = *(void *)(v17 + 56);
    uint64_t v28 = v37(0);
    sub_1003205DC(v27 + *(void *)(*(void *)(v28 - 8) + 72) * v22, (uint64_t)&v16[*(int *)(v34 + 48)], v39);
    uint64_t v29 = v36;
    sub_10020E72C((uint64_t)v16, (uint64_t)v12, v36);
    v35(v12);
    uint64_t result = sub_1001781AC((uint64_t)v12, v29);
    if (v7) {
      return swift_release();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10031FD98@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_10017DF08(&qword_100E6BBD0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100C31F30;
  *(void *)(v4 + 32) = a1;
  uint64_t v9 = v4;
  specialized Array._endMutation()();
  uint64_t v5 = (uint64_t)a2 + *(int *)(type metadata accessor for NetworkActivityCompletion() + 24);
  uint64_t v6 = type metadata accessor for NWActivity.CompletionReason();
  sub_100162E4C();
  sub_10008B8B4();
  v7();
  _s7Weather24LocationCompositionStateOwst_0(v5, 0, 1, v6);
  *a2 = _swiftEmptyArrayStorage;
  a2[1] = v9;

  return swift_retain();
}

uint64_t *sub_10031FE88(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    a1[1] = a2[1];
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for NWActivity.CompletionReason();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
    {
      uint64_t v10 = sub_10017DF08(&qword_100E6CCE0);
      memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
    }
  }
  return v5;
}

void *sub_10031FFCC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for NWActivity.CompletionReason();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8))
  {
    uint64_t v9 = sub_10017DF08(&qword_100E6CCE0);
    memcpy(v6, v7, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 0, 1, v8);
  }
  return a1;
}

void *sub_1003200BC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for NWActivity.CompletionReason();
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = sub_10017DF08(&qword_100E6CCE0);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
  return a1;
}

_OWORD *sub_10032024C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for NWActivity.CompletionReason();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7))
  {
    uint64_t v8 = sub_10017DF08(&qword_100E6CCE0);
    memcpy(v5, v6, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 0, 1, v7);
  }
  return a1;
}

void *sub_100320324(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for NWActivity.CompletionReason();
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = sub_10017DF08(&qword_100E6CCE0);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
  return a1;
}

uint64_t sub_1003204A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003204B8);
}

uint64_t sub_1003204B8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10017DF08(&qword_100E6CCE0);
    uint64_t v9 = (uint64_t)a1 + *(int *)(a3 + 24);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_100320544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100320558);
}

void *sub_100320558(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10017DF08(&qword_100E6CCE0);
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 24);
    return (void *)_s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_1003205DC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  sub_10008B8B4();
  v4();
  return a2;
}

ValueMetadata *type metadata accessor for Measure()
{
  return &type metadata for Measure;
}

uint64_t sub_100320648()
{
  sub_1000A9DE8();
  v0[42] = v1;
  v0[43] = v2;
  type metadata accessor for MainActor();
  v0[44] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[45] = v4;
  v0[46] = v3;
  return _swift_task_switch(sub_1003206DC, v4, v3);
}

void sub_1003206DC()
{
  if (qword_100E62870 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  *(void *)(v0 + 376) = sub_1002102B0(v2, (uint64_t)qword_100F52058);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Performing Measure instruction", v5, 2u);
    sub_100162EE0();
  }
  uint64_t v6 = *(char **)(v0 + 336);

  uint64_t v7 = self;
  *(void *)(v0 + 384) = v7;
  p_os_log_type_t type = &stru_100E5BFF0.type;
  id v9 = [v7 sharedApplication];
  *(void *)(v0 + 392) = v9;
  unint64_t v10 = sub_1005A0EEC(*v6);
  sub_1008FBB00(v10, v11, v9);
  [v9 _startHangTracer];
  sub_100321130((uint64_t)v6, v0 + 16);
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    __n128 v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    *(_DWORD *)__n128 v14 = 136315138;
    *(unsigned char *)(v0 + 433) = *(unsigned char *)(v0 + 16);
    uint64_t v15 = String.init<A>(describing:)();
    *(void *)(v0 + 328) = sub_10016414C(v15, v16, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v1 = &type metadata for Any;
    swift_bridgeObjectRelease();
    sub_10032118C(v0 + 16);
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Started test: %s", v14, 0xCu);
    swift_arrayDestroy();
    p_os_log_type_t type = (char **)(&stru_100E5BFF0 + 16);
    sub_100162EE0();
    sub_100162EE0();
  }
  else
  {
    sub_10032118C(v0 + 16);
  }

  uint64_t v17 = *(void **)(v0 + 344);
  uint64_t v18 = v17[2];
  *(void *)(v0 + 400) = v18;
  if (v18)
  {
    *(void *)(v0 + 408) = 0;
    unint64_t v19 = v17 + 4;
    uint64_t v20 = v17[7];
    swift_bridgeObjectRetain();
    sub_1001B1E64(v19, v20);
    unint64_t v21 = (void *)swift_task_alloc();
    *(void *)(v0 + 416) = v21;
    *unint64_t v21 = v0;
    v21[1] = sub_100320BB4;
    sub_10017FA58();
    sub_10017C7B4();
    __asm { BRAA            X4, X16 }
  }
  swift_release();
  unint64_t v24 = *(char **)(v0 + 336);
  id v25 = [*(id *)(v0 + 384) p_type[353]];
  unint64_t v26 = sub_1005A0EEC(*v24);
  sub_1008FBB0C(v26, v27, v25);

  sub_100321130((uint64_t)v24, v0 + 168);
  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.default.getter();
  BOOL v30 = os_log_type_enabled(v28, v29);
  uint64_t v31 = *(void **)(v0 + 392);
  if (v30)
  {
    uint64_t v37 = *(void **)(v0 + 392);
    uint64_t v32 = (uint8_t *)sub_100179F64();
    uint64_t v38 = swift_slowAlloc();
    *(_DWORD *)uint64_t v32 = 136315138;
    *uint64_t v1 = *(unsigned char *)(v0 + 168);
    uint64_t v33 = String.init<A>(describing:)();
    *(void *)(v0 + 320) = sub_10016414C(v33, v34, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10032118C(v0 + 168);
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "Finished test: %s", v32, 0xCu);
    swift_arrayDestroy();
    sub_100162EE0();
    sub_100162EE0();
  }
  else
  {
    sub_10032118C(v0 + 168);
  }
  sub_10017C7B4();
  __asm { BRAA            X1, X16 }
}

uint64_t sub_100320BB4()
{
  sub_1000A9DE8();
  sub_100119470();
  uint64_t v2 = v1;
  *(void *)(v1 + 424) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 360);
    uint64_t v4 = *(void *)(v2 + 368);
    uint64_t v5 = sub_100320F5C;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 360);
    uint64_t v4 = *(void *)(v2 + 368);
    uint64_t v5 = sub_100320CA8;
  }
  return _swift_task_switch(v5, v3, v4);
}

void sub_100320CA8()
{
  uint64_t v1 = *(void *)(v0 + 408) + 1;
  if (v1 == *(void *)(v0 + 400))
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v2 = *(char **)(v0 + 336);
    id v3 = [*(id *)(v0 + 384) sharedApplication];
    unint64_t v4 = sub_1005A0EEC(*v2);
    sub_1008FBB0C(v4, v5, v3);

    sub_100321130((uint64_t)v2, v0 + 168);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    BOOL v8 = os_log_type_enabled(v6, v7);
    id v9 = *(void **)(v0 + 392);
    if (v8)
    {
      unint64_t v10 = (uint8_t *)sub_100179F64();
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)unint64_t v10 = 136315138;
      *(unsigned char *)(v0 + 432) = *(unsigned char *)(v0 + 168);
      uint64_t v11 = String.init<A>(describing:)();
      *(void *)(v0 + 320) = sub_10016414C(v11, v12, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10032118C(v0 + 168);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Finished test: %s", v10, 0xCu);
      swift_arrayDestroy();
      sub_100162EE0();
      sub_100162EE0();
    }
    else
    {
      sub_10032118C(v0 + 168);
    }

    sub_10017C7B4();
    __asm { BRAA            X1, X16 }
  }
  *(void *)(v0 + 408) = v1;
  sub_1001B1E64((void *)(*(void *)(v0 + 344) + 40 * v1 + 32), *(void *)(*(void *)(v0 + 344) + 40 * v1 + 56));
  os_log_type_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 416) = v13;
  *os_log_type_t v13 = v0;
  v13[1] = sub_100320BB4;
  sub_10017FA58();
  sub_10017C7B4();
  __asm { BRAA            X4, X16 }
}

uint64_t sub_100320F5C()
{
  sub_1000A9DE8();

  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100320FC8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100321064;
  return sub_100320648();
}

uint64_t sub_100321064()
{
  sub_1000A9DE8();
  sub_100119470();
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100321130(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10032118C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1003211E0(uint64_t a1)
{
  return sub_100321218(a1, (void (*)(void))&type metadata accessor for Date);
}

uint64_t sub_1003211FC(uint64_t a1)
{
  return sub_100321218(a1, (void (*)(void))&type metadata accessor for DetailCondition);
}

uint64_t sub_100321218(uint64_t a1, void (*a2)(void))
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  id v9 = *(uint64_t (**)(uint64_t))(v2 + 16);
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v8, a1);
  type metadata accessor for ConditionDetailViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = 0;
  memset(v12, 0, sizeof(v12));
  swift_retain();
  sub_1001AAF58(v8, (uint64_t)v12, v9);
  sub_100016E7C((uint64_t)v12);
  sub_100158AC4(v8, (void (*)(void))type metadata accessor for MainAction);
  return swift_release();
}

uint64_t sub_100321354(uint64_t a1)
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_10017C9BC();
  sub_1003217C8(a1, v1);
  type metadata accessor for ConditionDetailViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_10017C9D8();
  sub_10017FA74();
  sub_100016E7C((uint64_t)v5);
  sub_100158AC4(v1, (void (*)(void))type metadata accessor for MainAction);
  return swift_release();
}

uint64_t sub_100321428()
{
  return sub_1003216B8();
}

uint64_t sub_100321430()
{
  uint64_t v1 = *(void *)(v0 + 56);
  sub_1001B1E64((void *)(v0 + 32), v1);
  sub_100179F84();
  return v2(v1);
}

uint64_t sub_100321470(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DetailCondition();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for DetailViewVisibilityTrackerModel();
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = v1[7];
  sub_1001B1E64(v1 + 4, v13);
  sub_100179F84();
  v14(v13);
  uint64_t v15 = v1[7];
  uint64_t v24 = v1[8];
  sub_1001B1E64(v1 + 4, v15);
  uint64_t v16 = type metadata accessor for ConditionDetailViewModel.Model(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v7, a1 + *(int *)(v16 + 36), v3);
  sub_1009E63A8(v7, v12);
  uint64_t v17 = a1 + *(int *)(v16 + 48);
  uint64_t v18 = v12 + *(int *)(v9 + 28);
  type metadata accessor for Location();
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v19 + 16))(v18, v17);
  uint64_t v20 = v12 + *(int *)(v9 + 32);
  uint64_t v21 = enum case for DetailViewOrigin.selector(_:);
  type metadata accessor for DetailViewOrigin();
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v22 + 104))(v20, v21);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 + 8) + 24))(v12, v15);
  return sub_100158AC4(v12, (void (*)(void))type metadata accessor for DetailViewVisibilityTrackerModel);
}

uint64_t sub_1003216B0()
{
  return sub_1003216B8();
}

uint64_t sub_1003216B8()
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v1);
  sub_10017C9BC();
  type metadata accessor for ConditionDetailViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_10017C9D8();
  sub_10017FA74();
  sub_100016E7C((uint64_t)v3);
  sub_100158AC4(v0, (void (*)(void))type metadata accessor for MainAction);
  return swift_release();
}

uint64_t type metadata accessor for ConditionDetailInteractor()
{
  return self;
}

uint64_t sub_1003217A4()
{
  return sub_100321430();
}

uint64_t sub_1003217C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DetailChartSelection();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10032182C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6CF08);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v21)
  {
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E64810);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (result)
    {
      uint64_t v5 = result;
      uint64_t v6 = sub_1000DF0C4((uint64_t)v20, v21);
      __chkstk_darwin(v6);
      uint64_t v8 = (void *)((char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v9 + 16))(v8);
      uint64_t v10 = *v8;
      uint64_t v11 = type metadata accessor for MoonDetailInteractor();
      v19[3] = v11;
      void v19[4] = &off_100E27CC8;
      v19[0] = v10;
      uint64_t v12 = type metadata accessor for MoonDetailModule();
      uint64_t v13 = (void *)swift_allocObject();
      uint64_t v14 = sub_1000DF0C4((uint64_t)v19, v11);
      __chkstk_darwin(v14);
      uint64_t v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v17 + 16))(v16);
      uint64_t v18 = *v16;
      v13[5] = v11;
      v13[6] = &off_100E27CC8;
      _OWORD v13[2] = v18;
      v13[7] = v5;
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v19);
      uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v20);
      a2[3] = v12;
      a2[4] = &off_100E15398;
      *a2 = v13;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100321A98()
{
  sub_10017DF08(&qword_100E6CF00);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E6CF08);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E6CF10);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E6CF18);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E64810);
  RegistrationContainer.register<A>(_:name:factory:)();

  return swift_release();
}

uint64_t sub_100321BDC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for Tracker();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    uint64_t v5 = result;
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E647E0);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v8)
    {
      a2[3] = (uint64_t)&type metadata for MoonDetailTracker;
      a2[4] = (uint64_t)&off_100E1F740;
      uint64_t v6 = swift_allocObject();
      *a2 = v6;
      *(void *)(v6 + 16) = v5;
      return sub_1001262E4(&v7, v6 + 24);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100321CC8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v5 = v25;
  if (v25)
  {
    uint64_t v21 = v26;
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E6CF00);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v24)
    {
      uint64_t v6 = sub_1000DF0C4((uint64_t)v23, v24);
      __chkstk_darwin(v6);
      uint64_t v8 = (_OWORD *)((char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(_OWORD *))(v9 + 16))(v8);
      v22[3] = &type metadata for MoonDetailTracker;
      void v22[4] = &off_100E1F740;
      uint64_t v10 = (_OWORD *)swift_allocObject();
      v22[0] = v10;
      long long v11 = v8[1];
      v10[1] = *v8;
      _OWORD v10[2] = v11;
      v10[3] = v8[2];
      uint64_t v12 = type metadata accessor for MoonDetailInteractor();
      uint64_t v13 = (void *)swift_allocObject();
      uint64_t v14 = sub_1000DF0C4((uint64_t)v22, (uint64_t)&type metadata for MoonDetailTracker);
      __chkstk_darwin(v14);
      uint64_t v16 = (_OWORD *)((char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(_OWORD *))(v17 + 16))(v16);
      v13[7] = &type metadata for MoonDetailTracker;
      v13[8] = &off_100E1F740;
      uint64_t v18 = (_OWORD *)swift_allocObject();
      long long v19 = v16[1];
      v18[1] = *v16;
      v18[2] = v19;
      v18[3] = v16[2];
      _OWORD v13[2] = v5;
      v13[3] = v21;
      v13[4] = v18;
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v22);
      uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v23);
      a2[3] = v12;
      a2[4] = &off_100E27CC8;
      *a2 = v13;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100321F7C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1002203E4((uint64_t (*)(void))type metadata accessor for MoonDetailInputFactory, (uint64_t)&off_100E0D8E8, a1);
}

uint64_t sub_100321F9C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6CF20);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v20)
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6CF28);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6CF30);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v16)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6CF38);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v14)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_1001B1E64(a1, a1[3]);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v12)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v11)
  {
    uint64_t v5 = sub_1000DF0C4((uint64_t)v10, v11);
    __chkstk_darwin(v5);
    uint64_t v7 = (uint64_t **)&v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
    (*(void (**)(uint64_t **))(v8 + 16))(v7);
    uint64_t v9 = sub_1003225C4(&v19, &v17, &v15, &v13, *v7);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v10);
    uint64_t result = type metadata accessor for MoonDetailViewModelFactory();
    a2[3] = result;
    a2[4] = &off_100E36400;
    *a2 = v9;
    return result;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_100322228(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v3 = v18;
  if (!v18)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = v20;
  uint64_t v4 = v21;
  uint64_t v6 = v19;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6CF10);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v17)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v7 = *sub_1001B1E64(v16, v17);
  uint64_t v14 = type metadata accessor for MoonDetailInputFactory();
  long long v15 = &off_100E0D8E8;
  v13[0] = v7;
  sub_10020D948((uint64_t)v13, (uint64_t)v12);
  uint64_t v8 = swift_allocObject();
  sub_1001262E4(v12, v8 + 16);
  swift_retain();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v16);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_10032257C;
  *(void *)(v9 + 24) = v8;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6CF18);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v17)
  {
    uint64_t v10 = *sub_1001B1E64(v16, v17);
    uint64_t v14 = type metadata accessor for MoonDetailViewModelFactory();
    long long v15 = &off_100E36400;
    v13[0] = v10;
    sub_10020D948((uint64_t)v13, (uint64_t)v12);
    uint64_t v11 = swift_allocObject();
    sub_1001262E4(v12, v11 + 16);
    swift_retain();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v16);
    sub_10017DF08(&qword_100E64810);
    swift_allocObject();
    return sub_10025992C(v3, v6, v5, v4, sub_10025969C, 0, sub_100137F50, v9, sub_1003225BC, v11);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1003224AC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1002BBB2C(a1, a3);
}

uint64_t sub_1003224F8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_100A86700(a1, a3);
}

uint64_t sub_100322544()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_10032257C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1003224AC(a1, (void *)(v2 + 16), a2);
}

uint64_t sub_100322584()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003225BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1003224F8(a1, (void *)(v2 + 16), a2);
}

void *sub_1003225C4(long long *a1, long long *a2, long long *a3, long long *a4, uint64_t *a5)
{
  uint64_t v9 = *a5;
  v18[3] = v9;
  v18[4] = &off_100E23878;
  v18[0] = a5;
  type metadata accessor for MoonDetailViewModelFactory();
  uint64_t v10 = (void *)swift_allocObject();
  uint64_t v11 = sub_1000DF0C4((uint64_t)v18, v9);
  __chkstk_darwin(v11);
  long long v13 = (uint64_t *)&v17[-v12];
  (*(void (**)(unsigned char *))(v14 + 16))(&v17[-v12]);
  uint64_t v15 = *v13;
  v10[26] = v9;
  v10[27] = &off_100E23878;
  v10[23] = v15;
  swift_beginAccess();
  v10[17] = sub_1009D950C();
  type metadata accessor for Locale();
  type metadata accessor for ConditionUnits();
  sub_1003227C0();
  Dictionary.init(dictionaryLiteral:)();
  sub_10017DF08(&qword_100E6CF48);
  swift_allocObject();
  v10[28] = Cache.init(_:)();
  sub_1001262E4(a1, (uint64_t)(v10 + 2));
  sub_1001262E4(a2, (uint64_t)(v10 + 7));
  sub_1001262E4(a3, (uint64_t)(v10 + 12));
  sub_1001262E4(a4, (uint64_t)(v10 + 18));
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v18);
  return v10;
}

unint64_t sub_1003227C0()
{
  unint64_t result = qword_100E6CF40;
  if (!qword_100E6CF40)
  {
    type metadata accessor for Locale();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6CF40);
  }
  return result;
}

uint64_t sub_100322810()
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 24);

  return swift_deallocObject();
}

uint64_t *sub_100322854(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 4u:
        uint64_t v9 = type metadata accessor for Location();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        goto LABEL_7;
      case 3u:
        uint64_t v8 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_100322AB8(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
    case 4:
      uint64_t v3 = type metadata accessor for Location();
      goto LABEL_4;
    case 3:
      uint64_t v3 = type metadata accessor for WeatherMapOverlayKind();
LABEL_4:
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

void *sub_100322B78(void *a1, const void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 4u:
      uint64_t v7 = type metadata accessor for Location();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      goto LABEL_5;
    case 3u:
      uint64_t v6 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_100322D98(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100322FC8((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 4u:
        uint64_t v7 = type metadata accessor for Location();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_6;
      case 3u:
        uint64_t v6 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_100322FC8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for InteractiveMapViewAction();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_100323024(void *a1, const void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
    case 4u:
      uint64_t v7 = type metadata accessor for Location();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      goto LABEL_5;
    case 3u:
      uint64_t v6 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_100323244(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100322FC8((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
      case 4u:
        uint64_t v7 = type metadata accessor for Location();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        goto LABEL_6;
      case 3u:
        uint64_t v6 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_100323474()
{
  id v0 = [self mainBundle];
  sub_10017C720();
  sub_10017C9F8();
  unint64_t v1 = 0xD00000000000002DLL;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, v3, v4, v5, *(Swift::String *)(&v8 - 1))._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_100323514(uint64_t a1, uint64_t a2, char a3)
{
  id v4 = [self mainBundle];
  sub_10017C720();
  sub_10017C9F8();
  if ((a3 & 1) == 0) {
    unint64_t v12 = 0xD00000000000006CLL;
  }
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v5, *(Swift::String_optional *)&v7, v9, *(Swift::String *)&v10, *(Swift::String *)(&v15 - 1))._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_10032362C()
{
  id v0 = [self mainBundle];
  sub_10017C720();
  sub_10017C9F8();
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v1, v2, v3, v4, *(Swift::String *)(&v7 - 1))._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_1003236CC()
{
  return sub_10003E10C();
}

uint64_t sub_100323704@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v71 = a6;
  uint64_t v60 = a2;
  uint64_t v61 = a5;
  uint64_t v67 = a4;
  uint64_t v68 = a3;
  uint64_t v66 = a7;
  type metadata accessor for Elevation();
  sub_100179C0C();
  uint64_t v64 = v11;
  uint64_t v65 = v10;
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v63 = v12;
  sub_100129064();
  uint64_t v70 = type metadata accessor for Calendar();
  sub_100179C0C();
  uint64_t v74 = v13;
  __chkstk_darwin(v14);
  sub_100109314();
  uint64_t v62 = v15;
  sub_100129064();
  uint64_t v69 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v72 = v16;
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v54 = v18;
  __chkstk_darwin(v19);
  uint64_t v73 = (char *)&v52 - v20;
  sub_100129064();
  type metadata accessor for WeatherConditionGradientModel();
  sub_100179C0C();
  uint64_t v58 = v22;
  uint64_t v59 = v21;
  __chkstk_darwin(v21);
  sub_1001626E0();
  uint64_t v23 = type metadata accessor for VFXTestViewModel();
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_1001626E0();
  uint64_t v27 = v26 - v25;
  type metadata accessor for SkyBackgroundGradient();
  sub_100179C0C();
  uint64_t v55 = v29;
  uint64_t v56 = v28;
  __chkstk_darwin(v28);
  sub_1001626E0();
  uint64_t v32 = v31 - v30;
  uint64_t v33 = type metadata accessor for VFXTestView();
  uint64_t v34 = v33 - 8;
  __chkstk_darwin(v33);
  sub_100109370();
  *(void *)(v7 + 56) = sub_1003236CC;
  *(void *)(v7 + 64) = 0;
  *(unsigned char *)(v7 + 72) = 0;
  swift_retain();
  sub_10017DF08(&qword_100E648E0);
  sub_1001246C8(&qword_100E648E8, &qword_100E648E0);
  uint64_t v57 = a1;
  *(void *)uint64_t v7 = ObservedObject.init(wrappedValue:)();
  *(void *)(v7 + 8) = v35;
  sub_10020D948(a2, v7 + 16);
  uint64_t v36 = v61;
  *(void *)(v7 + 80) = v67;
  *(void *)(v7 + 88) = v36;
  sub_10020D948(v71, v7 + 96);
  sub_1001B1E64(v68, v68[3]);
  swift_unknownObjectRetain();
  sub_10024E440();
  sub_1008DB01C();
  sub_100325814(v27, (void (*)(void))type metadata accessor for VFXTestViewModel);
  dispatch thunk of WeatherConditionGradientManagerType.load(for:)();
  sub_100162F0C();
  v37();
  uint64_t v53 = v34;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 32))(v7 + *(int *)(v34 + 44), v32, v56);
  uint64_t v38 = v54;
  Date.init()();
  Date.startOfDay.getter();
  uint64_t v39 = v72;
  uint64_t v40 = *(void *)(v72 + 8);
  uint64_t v59 = v72 + 8;
  uint64_t v61 = v40;
  uint64_t v41 = v69;
  sub_100162F0C();
  v42();
  uint64_t v43 = v62;
  static Calendar.current.getter();
  Date.wc_addHours(_:calendar:)();
  uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v74 + 8);
  v74 += 8;
  uint64_t v45 = v70;
  v44(v43, v70);
  uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32);
  v46(v7 + *(int *)(v34 + 48), v38, v41);
  uint64_t v72 = v39 + 32;
  static Calendar.current.getter();
  Date.wc_addHours(_:calendar:)();
  v44(v43, v45);
  uint64_t v47 = v53;
  uint64_t v48 = v69;
  v46(v7 + *(int *)(v53 + 52), v38, v69);
  static Calendar.current.getter();
  Date.wc_addHours(_:calendar:)();
  v44(v43, v70);
  v46(v7 + *(int *)(v47 + 56), v38, v48);
  uint64_t v49 = v63;
  Elevation.init(_:isPM:)();
  swift_release();
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v71);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v60);
  sub_100162F0C();
  v50();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 32))(v7 + *(int *)(v47 + 60), v49, v65);
  sub_100325AD0(v7, v66);
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v68);
}

uint64_t sub_100323C54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1;
  uint64_t v142 = a1;
  uint64_t v141 = type metadata accessor for InternalStateWeatherConditionBackgroundModifier(0) - 8;
  __chkstk_darwin(v141);
  sub_100109314();
  uint64_t v138 = v4;
  uint64_t v5 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_100162EF8();
  uint64_t v140 = v7;
  __chkstk_darwin(v8);
  sub_100109328((uint64_t)&v109 - v9);
  uint64_t v136 = type metadata accessor for WeatherConditionBackgroundOptions.DisplayLocation();
  sub_100179C0C();
  uint64_t v135 = v10;
  __chkstk_darwin(v11);
  sub_100109314();
  sub_100109328(v12);
  uint64_t v134 = type metadata accessor for WeatherConditionBackgroundConfig.CameraPositionType();
  sub_100179C0C();
  uint64_t v133 = v13;
  __chkstk_darwin(v14);
  sub_100109314();
  sub_100109328(v15);
  uint64_t v132 = type metadata accessor for VFXEffectViewID();
  sub_100179C0C();
  uint64_t v131 = v16;
  __chkstk_darwin(v17);
  sub_100109314();
  sub_100109328(v18);
  uint64_t v130 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v128 = v19;
  __chkstk_darwin(v20);
  sub_100109314();
  sub_100109328(v21);
  uint64_t v22 = type metadata accessor for WeatherConditionBackgroundOptions();
  uint64_t v23 = sub_100109308(v22);
  __chkstk_darwin(v23);
  sub_100109314();
  uint64_t v137 = v24;
  uint64_t v25 = sub_10017DF08(&qword_100E63768);
  uint64_t v26 = sub_100109308(v25);
  __chkstk_darwin(v26);
  sub_100109314();
  uint64_t v149 = v27;
  sub_100129064();
  uint64_t v121 = type metadata accessor for Elevation();
  sub_100179C0C();
  uint64_t v120 = v28;
  __chkstk_darwin(v29);
  sub_100109314();
  uint64_t v148 = v30;
  sub_100129064();
  uint64_t v118 = type metadata accessor for CloudAltitudeKind();
  sub_100179C0C();
  uint64_t v117 = v31;
  __chkstk_darwin(v32);
  sub_100109314();
  uint64_t v147 = v33;
  uint64_t v34 = sub_10017DF08(&qword_100E6D0A8);
  uint64_t v35 = sub_100109308(v34);
  __chkstk_darwin(v35);
  sub_100109314();
  uint64_t v146 = v36;
  sub_100129064();
  uint64_t v111 = type metadata accessor for WeatherCondition();
  sub_100179C0C();
  uint64_t v110 = v37;
  __chkstk_darwin(v38);
  sub_100109314();
  sub_100109328(v39);
  uint64_t v40 = type metadata accessor for VFXTestViewModel();
  uint64_t v41 = sub_100109308(v40);
  __chkstk_darwin(v41);
  sub_1001626E0();
  uint64_t v44 = v43 - v42;
  uint64_t v144 = type metadata accessor for Date();
  sub_100179C0C();
  *(void *)&long long v150 = v45;
  __chkstk_darwin(v46);
  sub_100109314();
  sub_100109328(v47);
  uint64_t v114 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v113 = v48;
  __chkstk_darwin(v49);
  sub_100162EF8();
  uint64_t v112 = v50;
  __chkstk_darwin(v51);
  uint64_t v119 = (char *)&v109 - v52;
  uint64_t v129 = type metadata accessor for BackgroundAnimationData();
  sub_100179C0C();
  uint64_t v127 = v53;
  __chkstk_darwin(v54);
  sub_100109314();
  sub_100109328(v55);
  uint64_t v56 = type metadata accessor for BackgroundAnimationKind();
  sub_100179C0C();
  uint64_t v58 = v57;
  __chkstk_darwin(v59);
  sub_1001626E0();
  uint64_t v62 = (unsigned char *)(v61 - v60);
  uint64_t v63 = type metadata accessor for SkyBackgroundGradient();
  sub_100179C0C();
  uint64_t v65 = v64;
  __chkstk_darwin(v66);
  sub_100109370();
  uint64_t v116 = v2;
  uint64_t v126 = type metadata accessor for WeatherConditionBackgroundModel();
  sub_100179C0C();
  uint64_t v124 = v67;
  __chkstk_darwin(v68);
  sub_100109314();
  uint64_t v123 = v69;
  uint64_t v70 = sub_10017DF08(&qword_100E6D0B0);
  uint64_t v71 = sub_100109308(v70);
  __chkstk_darwin(v71);
  sub_100109314();
  sub_100109328(v72);
  uint64_t v73 = (int *)type metadata accessor for VFXTestView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 16))(v2, v3 + v73[9], v63);
  uint64_t v122 = v62;
  *uint64_t v62 = 1;
  (*(void (**)(unsigned char *, void, uint64_t))(v58 + 104))(v62, enum case for BackgroundAnimationKind.vfx(_:), v56);
  static Location.current.getter();
  uint64_t v74 = v3 + v73[10];
  uint64_t v75 = *(void (**)(uint64_t, uint64_t, uint64_t))(v150 + 16);
  *(void *)&long long v150 = v150 + 16;
  uint64_t v115 = v75;
  v75(v143, v74, v144);
  uint64_t v109 = v3;
  swift_retain();
  sub_10024E440();
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v110 + 32))(v145, v44, v111);
  id v76 = [self kilometersPerHour];
  sub_100325770();
  Measurement.init(value:unit:)();
  sub_10018390C();
  sub_10017E1B0();
  v77();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v120 + 16))(v148, v3 + v73[13], v121);
  uint64_t v78 = type metadata accessor for BackgroundMoonData();
  _s7Weather24LocationCompositionStateOwst_0(v149, 1, 1, v78);
  sub_10017DF08(&qword_100E66F98);
  uint64_t v79 = swift_allocObject();
  *(_OWORD *)(v79 + 16) = xmmword_100C251B0;
  static Location.current.getter();
  Location.identifier.getter();
  sub_100162F0C();
  v80();
  uint64_t v81 = Location.Identifier.uniqueID.getter();
  uint64_t v83 = v82;
  sub_100162F0C();
  v84();
  *(void *)(v79 + 32) = v81;
  *(void *)(v79 + 40) = v83;
  sub_10018390C();
  sub_10017E1B0();
  v85();
  sub_10018390C();
  sub_10017E1B0();
  v86();
  sub_10018390C();
  sub_10017E1B0();
  v87();
  uint64_t v88 = self;
  id v89 = [v88 sharedApplication];
  UIApplication.expectedWindow.getter();

  sub_1001B1E64(v152, v152[3]);
  dispatch thunk of WindowType.bounds.getter();
  id v90 = [v88 sharedApplication];
  UIApplication.expectedWindow.getter();

  sub_1001B1E64(v151, v151[3]);
  dispatch thunk of WindowType.displayScale.getter();
  WeatherConditionBackgroundOptions.init(locationIDs:applyMask:applyLegibilityScrim:effectViewID:canShowCollisionLayer:cameraPositionType:displayLocation:windowBounds:displayScale:locationViewerOrientation:)();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v151);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v152);
  uint64_t v91 = v109;
  uint64_t v92 = v139;
  uint64_t v93 = v144;
  uint64_t v94 = v115;
  v115(v139, v109 + v73[11], v144);
  _s7Weather24LocationCompositionStateOwst_0(v92, 0, 1, v93);
  uint64_t v95 = v140;
  v94(v140, v91 + v73[12], v93);
  _s7Weather24LocationCompositionStateOwst_0(v95, 0, 1, v93);
  BackgroundAnimationData.Model.init(location:date:conditionKind:windSpeed:cloudCover:cloudKind:elevation:moonData:options:isDayTime:sunrise:sunset:isReduceMotionEnabled:)();
  sub_10018390C();
  sub_10017E1B0();
  v96();
  uint64_t v97 = v123;
  WeatherConditionBackgroundModel.init(gradient:animationKind:animationData:)();
  long long v150 = *(_OWORD *)(v91 + 80);
  uint64_t v98 = static Color.black.getter();
  uint64_t v99 = (int *)v141;
  uint64_t v100 = v138;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v124 + 16))(v138 + *(int *)(v141 + 28), v97, v126);
  sub_10020D948(v91 + 96, v100 + v99[9]);
  *(void *)uint64_t v100 = sub_100B7C184;
  *(void *)(v100 + 8) = 0;
  *(unsigned char *)(v100 + 16) = 0;
  *(_OWORD *)(v100 + v99[8]) = v150;
  uint64_t v101 = (void *)(v100 + v99[10]);
  *uint64_t v101 = 0;
  v101[1] = 0;
  v101[2] = 0;
  *(unsigned char *)(v100 + v99[11]) = 0;
  *(void *)(v100 + v99[12]) = v98;
  uint64_t v102 = v125;
  sub_1003257B0(v100, v125);
  swift_unknownObjectRetain();
  sub_100325814(v100, (void (*)(void))type metadata accessor for InternalStateWeatherConditionBackgroundModifier);
  sub_100162F0C();
  v103();
  type metadata accessor for LocationViewCollisionOptions();
  sub_100325A88(&qword_100E6D0B8, (void (*)(uint64_t))type metadata accessor for LocationViewCollisionOptions);
  uint64_t v104 = StateObject.wrappedValue.getter();
  uint64_t v105 = static ObservableObject.environmentStore.getter();
  uint64_t v106 = v142;
  sub_100325870(v102, v142);
  uint64_t v107 = (uint64_t *)(v106 + *(int *)(sub_10017DF08(&qword_100E6D0C0) + 36));
  *uint64_t v107 = v105;
  v107[1] = v104;
  return sub_1003258D8(v102);
}