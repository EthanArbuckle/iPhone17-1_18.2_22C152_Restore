uint64_t sub_100B527D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = *(void *)a2;
  v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  v8 = *(void *)(a2 + 16);
  v9 = *(unsigned char *)(a2 + 24);
  sub_100195B7C(v8, v9);
  *(void *)(a1 + 16) = v8;
  *(unsigned char *)(a1 + 24) = v9;
  v10 = *(int *)(a3 + 24);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = *(void *)(v12 + 8);
  *(void *)v11 = *(void *)v12;
  *(void *)(v11 + 8) = v13;
  v14 = *(void *)(v12 + 24);
  *(void *)(v11 + 16) = *(void *)(v12 + 16);
  *(void *)(v11 + 24) = v14;
  v15 = *(void *)(v12 + 40);
  *(void *)(v11 + 32) = *(void *)(v12 + 32);
  *(void *)(v11 + 40) = v15;
  v16 = *(void *)(v12 + 56);
  *(void *)(v11 + 48) = *(void *)(v12 + 48);
  *(void *)(v11 + 56) = v16;
  v17 = *(void *)(v12 + 72);
  *(void *)(v11 + 64) = *(void *)(v12 + 64);
  *(void *)(v11 + 72) = v17;
  v18 = *(void *)(v12 + 88);
  *(void *)(v11 + 80) = *(void *)(v12 + 80);
  *(void *)(v11 + 88) = v18;
  v19 = *(void *)(v12 + 104);
  *(void *)(v11 + 96) = *(void *)(v12 + 96);
  *(void *)(v11 + 104) = v19;
  v20 = *(void *)(v12 + 120);
  *(void *)(v11 + 112) = *(void *)(v12 + 112);
  *(void *)(v11 + 120) = v20;
  v21 = *(void *)(v12 + 136);
  *(void *)(v11 + 128) = *(void *)(v12 + 128);
  *(void *)(v11 + 136) = v21;
  v22 = *(void *)(v12 + 152);
  *(void *)(v11 + 144) = *(void *)(v12 + 144);
  *(void *)(v11 + 152) = v22;
  v23 = *(void *)(v12 + 168);
  *(void *)(v11 + 160) = *(void *)(v12 + 160);
  *(void *)(v11 + 168) = v23;
  *(_OWORD *)(v11 + 176) = *(_OWORD *)(v12 + 176);
  *(void *)(v11 + 192) = *(void *)(v12 + 192);
  v30 = type metadata accessor for WindComponentViewModel();
  v24 = *(int *)(v30 + 68);
  v28 = v12 + v24;
  v29 = v11 + v24;
  v25 = type metadata accessor for WindComponentCompassViewModel();
  v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v27(v29, v28, v25);
  *(void *)(v11 + *(int *)(v30 + 72)) = *(void *)(v12 + *(int *)(v30 + 72));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100B529B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10018F6D8(v8, v9);
  uint64_t v10 = *(void *)(a2 + 16);
  char v11 = *(unsigned char *)(a2 + 24);
  sub_100195B7C(v10, v11);
  uint64_t v12 = *(void *)(a1 + 16);
  char v13 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v10;
  *(unsigned char *)(a1 + 24) = v11;
  sub_10018F6D8(v12, v13);
  uint64_t v14 = *(int *)(a3 + 24);
  v15 = (void *)(a1 + v14);
  v16 = (void *)(a2 + v14);
  void *v15 = *(void *)(a2 + v14);
  v15[1] = *(void *)(a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[2] = v16[2];
  v15[3] = v16[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[4] = v16[4];
  v15[5] = v16[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[6] = v16[6];
  v15[7] = v16[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[8] = v16[8];
  v15[9] = v16[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[10] = v16[10];
  v15[11] = v16[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[12] = v16[12];
  v15[13] = v16[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[14] = v16[14];
  v15[15] = v16[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[16] = v16[16];
  v15[17] = v16[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[18] = v16[18];
  v15[19] = v16[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[20] = v16[20];
  v15[21] = v16[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[22] = v16[22];
  v15[23] = v16[23];
  v15[24] = v16[24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = type metadata accessor for WindComponentViewModel();
  uint64_t v18 = *(int *)(v17 + 68);
  v19 = (char *)v15 + v18;
  v20 = (char *)v16 + v18;
  uint64_t v21 = type metadata accessor for WindComponentCompassViewModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  *(void *)((char *)v15 + *(int *)(v17 + 72)) = *(void *)((char *)v16 + *(int *)(v17 + 72));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100B52C48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  long long v7 = *(_OWORD *)(a2 + v4 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)(a2 + v4);
  *(_OWORD *)(v5 + 16) = v7;
  long long v8 = *(_OWORD *)(a2 + v4 + 48);
  *(_OWORD *)(v5 + 32) = *(_OWORD *)(a2 + v4 + 32);
  *(_OWORD *)(v5 + 48) = v8;
  long long v9 = *(_OWORD *)(a2 + v4 + 80);
  *(_OWORD *)(v5 + 64) = *(_OWORD *)(a2 + v4 + 64);
  *(_OWORD *)(v5 + 80) = v9;
  long long v10 = *(_OWORD *)(a2 + v4 + 112);
  *(_OWORD *)(v5 + 96) = *(_OWORD *)(a2 + v4 + 96);
  *(_OWORD *)(v5 + 112) = v10;
  long long v11 = *(_OWORD *)(a2 + v4 + 144);
  *(_OWORD *)(v5 + 128) = *(_OWORD *)(a2 + v4 + 128);
  *(_OWORD *)(v5 + 144) = v11;
  *(_OWORD *)(v5 + 160) = *(_OWORD *)(a2 + v4 + 160);
  *(void *)(v5 + 176) = *(void *)(a2 + v4 + 176);
  *(_OWORD *)(v5 + 184) = *(_OWORD *)(a2 + v4 + 184);
  uint64_t v12 = type metadata accessor for WindComponentViewModel();
  uint64_t v13 = *(int *)(v12 + 68);
  uint64_t v14 = v5 + v13;
  uint64_t v15 = v6 + v13;
  uint64_t v16 = type metadata accessor for WindComponentCompassViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  *(void *)(v5 + *(int *)(v12 + 72)) = *(void *)(v6 + *(int *)(v12 + 72));
  return a1;
}

uint64_t sub_100B52D48(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10018F6D8(v8, v9);
  char v10 = *((unsigned char *)a2 + 24);
  uint64_t v11 = *(void *)(a1 + 16);
  char v12 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = a2[2];
  *(unsigned char *)(a1 + 24) = v10;
  sub_10018F6D8(v11, v12);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)((char *)a2 + v13);
  uint64_t v16 = *(uint64_t *)((char *)a2 + v13 + 8);
  *uint64_t v14 = *(uint64_t *)((char *)a2 + v13);
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = v15[3];
  v14[2] = v15[2];
  v14[3] = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = v15[5];
  v14[4] = v15[4];
  v14[5] = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = v15[7];
  v14[6] = v15[6];
  v14[7] = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = v15[9];
  v14[8] = v15[8];
  v14[9] = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = v15[11];
  v14[10] = v15[10];
  v14[11] = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = v15[13];
  v14[12] = v15[12];
  v14[13] = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = v15[15];
  v14[14] = v15[14];
  v14[15] = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = v15[17];
  v14[16] = v15[16];
  v14[17] = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = v15[19];
  v14[18] = v15[18];
  v14[19] = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = v15[21];
  v14[20] = v15[20];
  v14[21] = v26;
  swift_bridgeObjectRelease();
  v14[22] = v15[22];
  uint64_t v27 = v15[24];
  v14[23] = v15[23];
  v14[24] = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = type metadata accessor for WindComponentViewModel();
  uint64_t v29 = *(int *)(v28 + 68);
  v30 = (char *)v14 + v29;
  v31 = (char *)v15 + v29;
  uint64_t v32 = type metadata accessor for WindComponentCompassViewModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 40))(v30, v31, v32);
  *(void *)((char *)v14 + *(int *)(v28 + 72)) = *(void *)((char *)v15 + *(int *)(v28 + 72));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100B52EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B52F0C);
}

uint64_t sub_100B52F0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = type metadata accessor for WindComponentViewModel();
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_100B52F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B52FA0);
}

uint64_t sub_100B52FA0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = -(char)a2;
  }
  else
  {
    uint64_t v7 = type metadata accessor for WindComponentViewModel();
    uint64_t v8 = v5 + *(int *)(a4 + 24);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_100B5301C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100B53038@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v48 = a1;
  uint64_t v47 = type metadata accessor for AutomationInfo(0);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v46 = v5 - v4;
  uint64_t v45 = type metadata accessor for AccessibilityChildBehavior();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_10017DF08(&qword_100EB2670);
  sub_100162E4C();
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = sub_10017DF08(&qword_100EB2678);
  sub_100179C0C();
  uint64_t v19 = v18;
  __chkstk_darwin(v20);
  sub_1001626E0();
  uint64_t v23 = v22 - v21;
  uint64_t v44 = sub_10017DF08(&qword_100E7A050);
  sub_100162E4C();
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v43 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v43 - v28;
  sub_100B53368(v2, v16);
  static AccessibilityChildBehavior.ignore.getter();
  unint64_t v30 = sub_100B53A60();
  View.accessibilityElement(children:)();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v11, v45);
  sub_100178110(v16, &qword_100EB2670);
  uint64_t v49 = v12;
  uint64_t v50 = v30;
  swift_getOpaqueTypeConformance2();
  View.accessibilityRespondsToUserInteraction(_:)();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v23, v17);
  uint64_t v31 = v43 + *(int *)(type metadata accessor for WindComponentView(0) + 24);
  uint64_t v33 = *(void *)(v31 + 184);
  uint64_t v32 = *(void *)(v31 + 192);
  uint64_t v49 = v33;
  uint64_t v50 = v32;
  sub_10014A85C();
  ModifiedContent<>.accessibilityLabel<A>(_:)();
  sub_100178110((uint64_t)v26, &qword_100E7A050);
  type metadata accessor for AutomationCellInfo(0);
  uint64_t v34 = v46;
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_10048D678(v34, v35, v36, v37, v38, v39, v40, v41, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54);
  sub_10014D024(v34, (void (*)(void))type metadata accessor for AutomationInfo);
  return sub_100178110((uint64_t)v29, &qword_100E7A050);
}

uint64_t sub_100B53368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v41 = type metadata accessor for WindComponentContentView(0);
  __chkstk_darwin(v41);
  uint64_t v36 = (uint64_t)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_10017DF08(&qword_100EB26C0);
  __chkstk_darwin(v37);
  uint64_t v39 = (uint64_t)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for WindComponentLargeContentView(0);
  __chkstk_darwin(v38);
  uint64_t v35 = (uint64_t)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_10017DF08(&qword_100EB26A8);
  __chkstk_darwin(v42);
  uint64_t v40 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100EB26C8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for WindComponentViewModel();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SimpleWindComponentContentView(0);
  __chkstk_darwin(v13);
  uint64_t v15 = (uint64_t *)((char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v34 - v17;
  uint64_t v19 = *(void *)a1;
  char v20 = *(unsigned char *)(a1 + 8);
  sub_100195B7C(*(void *)a1, v20);
  sub_100149AE8();
  char v22 = v21;
  sub_10018F6D8(v19, v20);
  if (v22)
  {
    uint64_t v23 = type metadata accessor for WindComponentView(0);
    sub_100B54ED4(a1 + *(int *)(v23 + 24), (uint64_t)v12, (void (*)(void))type metadata accessor for WindComponentViewModel);
    uint64_t *v15 = swift_getKeyPath();
    sub_10017DF08(&qword_100E66E50);
    swift_storeEnumTagMultiPayload();
    uint64_t v24 = (char *)v15 + *(int *)(v13 + 20);
    *(void *)uint64_t v24 = swift_getKeyPath();
    v24[8] = 0;
    sub_100B54F30((uint64_t)v12, (uint64_t)v15 + *(int *)(v13 + 24), (void (*)(void))type metadata accessor for WindComponentViewModel);
    sub_100B54F30((uint64_t)v15, (uint64_t)v18, (void (*)(void))type metadata accessor for SimpleWindComponentContentView);
    sub_100B54ED4((uint64_t)v18, (uint64_t)v9, (void (*)(void))type metadata accessor for SimpleWindComponentContentView);
    swift_storeEnumTagMultiPayload();
    sub_100B53C7C(&qword_100EB2698, (void (*)(uint64_t))type metadata accessor for SimpleWindComponentContentView);
    sub_100B53BA0();
    _ConditionalContent<>.init(storage:)();
    return sub_10014D024((uint64_t)v18, (void (*)(void))type metadata accessor for SimpleWindComponentContentView);
  }
  else
  {
    uint64_t v26 = *(void *)(a1 + 16);
    char v27 = *(unsigned char *)(a1 + 24);
    sub_100195B7C(v26, v27);
    sub_100149AE8();
    char v29 = v28;
    sub_10018F6D8(v26, v27);
    uint64_t v30 = a1 + *(int *)(type metadata accessor for WindComponentView(0) + 24);
    if (v29)
    {
      uint64_t v31 = v35;
      sub_100B54ED4(v30, v35, (void (*)(void))type metadata accessor for WindComponentViewModel);
      sub_100B54ED4(v31, v39, (void (*)(void))type metadata accessor for WindComponentLargeContentView);
      swift_storeEnumTagMultiPayload();
      sub_100B53C7C(&qword_100EB26B0, (void (*)(uint64_t))type metadata accessor for WindComponentLargeContentView);
      sub_100B53C7C(&qword_100EB26B8, (void (*)(uint64_t))type metadata accessor for WindComponentContentView);
      uint64_t v32 = (uint64_t)v40;
      _ConditionalContent<>.init(storage:)();
      uint64_t v33 = type metadata accessor for WindComponentLargeContentView;
    }
    else
    {
      uint64_t v31 = v36;
      sub_100B54ED4(v30, v36, (void (*)(void))type metadata accessor for WindComponentViewModel);
      sub_100B54ED4(v31, v39, (void (*)(void))type metadata accessor for WindComponentContentView);
      swift_storeEnumTagMultiPayload();
      sub_100B53C7C(&qword_100EB26B0, (void (*)(uint64_t))type metadata accessor for WindComponentLargeContentView);
      sub_100B53C7C(&qword_100EB26B8, (void (*)(uint64_t))type metadata accessor for WindComponentContentView);
      uint64_t v32 = (uint64_t)v40;
      _ConditionalContent<>.init(storage:)();
      uint64_t v33 = type metadata accessor for WindComponentContentView;
    }
    sub_10014D024(v31, (void (*)(void))v33);
    sub_10006DF38(v32, (uint64_t)v9, &qword_100EB26A8);
    swift_storeEnumTagMultiPayload();
    sub_100B53C7C(&qword_100EB2698, (void (*)(uint64_t))type metadata accessor for SimpleWindComponentContentView);
    sub_100B53BA0();
    _ConditionalContent<>.init(storage:)();
    return sub_100178110(v32, &qword_100EB26A8);
  }
}

unint64_t sub_100B53A60()
{
  unint64_t result = qword_100EB2680;
  if (!qword_100EB2680)
  {
    sub_10018C6DC(&qword_100EB2670);
    sub_100B53AD4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB2680);
  }
  return result;
}

unint64_t sub_100B53AD4()
{
  unint64_t result = qword_100EB2688;
  if (!qword_100EB2688)
  {
    sub_10018C6DC(&qword_100EB2690);
    sub_100B53C7C(&qword_100EB2698, (void (*)(uint64_t))type metadata accessor for SimpleWindComponentContentView);
    sub_100B53BA0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB2688);
  }
  return result;
}

uint64_t type metadata accessor for SimpleWindComponentContentView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB2728);
}

unint64_t sub_100B53BA0()
{
  unint64_t result = qword_100EB26A0;
  if (!qword_100EB26A0)
  {
    sub_10018C6DC(&qword_100EB26A8);
    sub_100B53C7C(&qword_100EB26B0, (void (*)(uint64_t))type metadata accessor for WindComponentLargeContentView);
    sub_100B53C7C(&qword_100EB26B8, (void (*)(uint64_t))type metadata accessor for WindComponentContentView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB26A0);
  }
  return result;
}

uint64_t sub_100B53C7C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100B53CC4@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static HorizontalAlignment.leading.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  sub_10017DF08(&qword_100EB2778);
  return sub_100B53D0C(v1);
}

uint64_t sub_100B53D0C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SimpleWindComponentContentView(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v6 = a1 + *(int *)(v5 + 32);
  v10[1] = *(void *)(v6 + *(int *)(type metadata accessor for WindComponentViewModel() + 72));
  swift_getKeyPath();
  sub_100B54ED4(a1, (uint64_t)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for SimpleWindComponentContentView);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  sub_100B54F30((uint64_t)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, (void (*)(void))type metadata accessor for SimpleWindComponentContentView);
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100EA0FB0);
  sub_10017DF08(&qword_100EB2780);
  sub_1001246C8(&qword_100EA0FC0, &qword_100EA0FB0);
  sub_1001246C8(&qword_100EB2788, &qword_100EB2780);
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_100B53F10@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v158 = a2;
  uint64_t v139 = a3;
  uint64_t v136 = type metadata accessor for PrimaryDividerStyle();
  uint64_t v135 = *(void *)(v136 - 8);
  __chkstk_darwin(v136);
  v133 = (char *)&v128 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = type metadata accessor for Divider();
  uint64_t v132 = *(void *)(v134 - 8);
  __chkstk_darwin(v134);
  v131 = (char *)&v128 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_10017DF08(&qword_100E66F20);
  uint64_t v130 = *(void *)(v138 - 8);
  __chkstk_darwin(v138);
  v129 = (char *)&v128 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E78E78);
  __chkstk_darwin(v7 - 8);
  uint64_t v168 = (uint64_t)&v128 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v173 = (uint64_t)&v128 - v10;
  uint64_t v11 = type metadata accessor for _BlendModeEffect();
  __chkstk_darwin(v11 - 8);
  v163 = (char *)&v128 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v162 = type metadata accessor for BlendMode();
  uint64_t v161 = *(void *)(v162 - 8);
  __chkstk_darwin(v162);
  v160 = (char *)&v128 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = type metadata accessor for SimpleWindComponentContentView(0);
  __chkstk_darwin(v169);
  uint64_t v150 = (uint64_t)&v128 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = type metadata accessor for ColorSchemeContrast();
  uint64_t v153 = *(void *)(v154 - 8);
  __chkstk_darwin(v154);
  v152 = (char *)&v128 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v151 = (char *)&v128 - v17;
  uint64_t v155 = sub_10017DF08(&qword_100EA1020);
  __chkstk_darwin(v155);
  v159 = (char *)&v128 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = sub_10017DF08(&qword_100EB2790);
  __chkstk_darwin(v157);
  v142 = (char *)&v128 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v156 = (uint64_t)&v128 - v21;
  __chkstk_darwin(v22);
  uint64_t v172 = (uint64_t)&v128 - v23;
  uint64_t v24 = type metadata accessor for Font.TextStyle();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  char v27 = (char *)&v128 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = *a1;
  uint64_t v29 = a1[1];
  uint64_t v30 = a1[3];
  uint64_t v170 = a1[2];
  uint64_t v171 = v30;
  uint64_t v140 = v28;
  uint64_t v174 = v28;
  uint64_t v175 = v29;
  unint64_t v149 = sub_10014A85C();
  uint64_t v141 = v29;
  swift_bridgeObjectRetain();
  uint64_t v31 = Text.init<A>(_:)();
  uint64_t v33 = v32;
  char v35 = v34 & 1;
  unsigned int v148 = enum case for Font.TextStyle.subheadline(_:);
  uint64_t v36 = *(void (**)(void))(v25 + 104);
  uint64_t v146 = v25 + 104;
  v147 = (void (*)(char *, void, uint64_t))v36;
  uint64_t v143 = v24;
  v36(v27);
  static Font.Weight.medium.getter();
  static Font.system(_:weight:)();
  uint64_t v37 = *(void (**)(char *, uint64_t))(v25 + 8);
  uint64_t v144 = v25 + 8;
  v145 = v37;
  v37(v27, v24);
  uint64_t v38 = Text.font(_:)();
  uint64_t v40 = v39;
  LOBYTE(v25) = v41;
  swift_release();
  sub_100191924(v31, v33, v35);
  swift_bridgeObjectRelease();
  LODWORD(v174) = static HierarchicalShapeStyle.primary.getter();
  uint64_t v166 = Text.foregroundStyle<A>(_:)();
  uint64_t v165 = v42;
  int v137 = v43;
  uint64_t v167 = v44;
  sub_100191924(v38, v40, v25 & 1);
  swift_bridgeObjectRelease();
  int v164 = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  uint64_t v174 = v170;
  uint64_t v175 = v171;
  swift_bridgeObjectRetain();
  uint64_t v53 = Text.init<A>(_:)();
  uint64_t v55 = v54;
  char v57 = v56 & 1;
  uint64_t v58 = v143;
  v147(v27, v148, v143);
  static Font.Weight.medium.getter();
  static Font.system(_:weight:)();
  v145(v27, v58);
  uint64_t v59 = Text.font(_:)();
  uint64_t v61 = v60;
  LODWORD(v149) = v62;
  uint64_t v64 = v63;
  swift_release();
  char v65 = v57;
  uint64_t v66 = v158;
  sub_100191924(v53, v55, v65);
  swift_bridgeObjectRelease();
  v67 = v151;
  sub_10014BB38();
  uint64_t v68 = v153;
  v69 = v152;
  uint64_t v70 = v154;
  (*(void (**)(char *, void, uint64_t))(v153 + 104))(v152, enum case for ColorSchemeContrast.increased(_:), v154);
  v71 = v69;
  LOBYTE(v69) = static ColorSchemeContrast.== infix(_:_:)();
  v72 = *(void (**)(char *, uint64_t))(v68 + 8);
  v72(v71, v70);
  v72(v67, v70);
  uint64_t v73 = v150;
  sub_100B54ED4(v66, v150, (void (*)(void))type metadata accessor for SimpleWindComponentContentView);
  if (v69)
  {
    sub_10014D024(v73, (void (*)(void))type metadata accessor for SimpleWindComponentContentView);
    double v74 = 1.0;
  }
  else
  {
    uint64_t v75 = v73 + *(int *)(v169 + 20);
    uint64_t v76 = *(void *)v75;
    char v77 = *(unsigned char *)(v75 + 8);
    sub_100195B7C(*(void *)v75, v77);
    sub_100149AE8();
    char v79 = v78;
    sub_10018F6D8(v76, v77);
    sub_10014D024(v73, (void (*)(void))type metadata accessor for SimpleWindComponentContentView);
    if (v79) {
      double v74 = 1.0;
    }
    else {
      double v74 = 0.27;
    }
  }
  uint64_t v80 = v161;
  v81 = v160;
  uint64_t v82 = v162;
  (*(void (**)(char *, void, uint64_t))(v161 + 104))(v160, enum case for BlendMode.plusLighter(_:), v162);
  uint64_t v83 = (uint64_t)v163;
  (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v163, v81, v82);
  uint64_t v84 = (uint64_t)v159;
  sub_100B54ED4(v83, (uint64_t)&v159[*(int *)(v155 + 36)], (void (*)(void))&type metadata accessor for _BlendModeEffect);
  *(void *)uint64_t v84 = v59;
  *(void *)(v84 + 8) = v61;
  char v85 = v149 & 1;
  *(unsigned char *)(v84 + 16) = v149 & 1;
  *(void *)(v84 + 24) = v64;
  *(double *)(v84 + 32) = v74;
  swift_bridgeObjectRetain();
  sub_100190CC4(v59, v61, v85);
  sub_10014D024(v83, (void (*)(void))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v81, v82);
  sub_100191924(v59, v61, v85);
  swift_bridgeObjectRelease();
  char v86 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v88 = v87;
  uint64_t v90 = v89;
  uint64_t v92 = v91;
  uint64_t v94 = v93;
  uint64_t v95 = v156;
  sub_10006DF38(v84, v156, &qword_100EA1020);
  uint64_t v96 = v95 + *(int *)(v157 + 36);
  *(unsigned char *)uint64_t v96 = v86;
  *(void *)(v96 + 8) = v88;
  *(void *)(v96 + 16) = v90;
  *(void *)(v96 + 24) = v92;
  *(void *)(v96 + 32) = v94;
  *(unsigned char *)(v96 + 40) = 0;
  sub_100178110(v84, &qword_100EA1020);
  sub_100B56360(v95, v172);
  uint64_t v97 = v66 + *(int *)(v169 + 24);
  uint64_t v98 = type metadata accessor for WindComponentViewModel();
  uint64_t v100 = sub_100304314(*(void *)(v97 + *(int *)(v98 + 72)));
  uint64_t v102 = v101;
  uint64_t v104 = v103;
  uint64_t v105 = v173;
  if (!v99)
  {
    uint64_t v113 = v141;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10021A144(v140, v113);
    sub_10021A144(v100, 0);
LABEL_21:
    uint64_t v109 = v139;
    uint64_t v110 = v138;
    char v111 = v137;
    goto LABEL_22;
  }
  BOOL v106 = v140 == v100 && v99 == v141;
  if (!v106 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  if (v170 != v102 || v104 != v171)
  {
    char v108 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v109 = v139;
    uint64_t v110 = v138;
    char v111 = v137;
    if (v108)
    {
      uint64_t v112 = 1;
LABEL_23:
      uint64_t v114 = (uint64_t)v142;
      goto LABEL_24;
    }
LABEL_22:
    v115 = v131;
    Divider.init()();
    v116 = v133;
    static DividerStyle<>.primary.getter();
    sub_100B53C7C(&qword_100E66F38, (void (*)(uint64_t))&type metadata accessor for Divider);
    sub_100B53C7C(&qword_100E66F40, (void (*)(uint64_t))&type metadata accessor for PrimaryDividerStyle);
    v117 = v129;
    uint64_t v118 = v134;
    uint64_t v119 = v136;
    View.dividerStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v135 + 8))(v116, v119);
    (*(void (**)(char *, uint64_t))(v132 + 8))(v115, v118);
    (*(void (**)(uint64_t, char *, uint64_t))(v130 + 32))(v105, v117, v110);
    uint64_t v112 = 0;
    goto LABEL_23;
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v112 = 1;
  uint64_t v109 = v139;
  uint64_t v110 = v138;
  uint64_t v114 = (uint64_t)v142;
  char v111 = v137;
LABEL_24:
  _s7Weather24LocationCompositionStateOwst_0(v105, v112, 1, v110);
  char v120 = v111 & 1;
  LOBYTE(v174) = v111 & 1;
  uint64_t v121 = v172;
  sub_10006DF38(v172, v114, &qword_100EB2790);
  uint64_t v122 = v168;
  sub_10006DF38(v105, v168, &qword_100E78E78);
  uint64_t v123 = v166;
  uint64_t v124 = v167;
  uint64_t v125 = v165;
  *(void *)uint64_t v109 = v166;
  *(void *)(v109 + 8) = v125;
  *(unsigned char *)(v109 + 16) = v120;
  *(void *)(v109 + 24) = v124;
  *(unsigned char *)(v109 + 32) = v164;
  *(void *)(v109 + 40) = v46;
  *(void *)(v109 + 48) = v48;
  *(void *)(v109 + 56) = v50;
  *(void *)(v109 + 64) = v52;
  *(unsigned char *)(v109 + 72) = 0;
  uint64_t v126 = sub_10017DF08(&qword_100EB2798);
  sub_10006DF38(v114, v109 + *(int *)(v126 + 48), &qword_100EB2790);
  sub_10006DF38(v122, v109 + *(int *)(v126 + 64), &qword_100E78E78);
  sub_100190CC4(v123, v125, v120);
  swift_bridgeObjectRetain();
  sub_100190CC4(v123, v125, v120);
  swift_bridgeObjectRetain();
  sub_100178110(v173, &qword_100E78E78);
  sub_100178110(v121, &qword_100EB2790);
  sub_100191924(v123, v125, v120);
  swift_bridgeObjectRelease();
  sub_100178110(v122, &qword_100E78E78);
  sub_100178110(v114, &qword_100EB2790);
  sub_100191924(v123, v125, v174);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100B54ED4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_100B54F30(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t *sub_100B54F90(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(void *)v11;
    char v13 = v11[8];
    sub_100195B7C(*(void *)v11, v13);
    *(void *)uint64_t v10 = v12;
    v10[8] = v13;
    uint64_t v14 = *(int *)(a3 + 24);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = *(uint64_t *)((char *)a2 + v14 + 8);
    *(void *)uint64_t v15 = *(uint64_t *)((char *)a2 + v14);
    *((void *)v15 + 1) = v17;
    uint64_t v18 = *(uint64_t *)((char *)a2 + v14 + 24);
    *((void *)v15 + 2) = *(uint64_t *)((char *)a2 + v14 + 16);
    *((void *)v15 + 3) = v18;
    uint64_t v19 = *(uint64_t *)((char *)a2 + v14 + 40);
    *((void *)v15 + 4) = *(uint64_t *)((char *)a2 + v14 + 32);
    *((void *)v15 + 5) = v19;
    uint64_t v20 = *(uint64_t *)((char *)a2 + v14 + 56);
    *((void *)v15 + 6) = *(uint64_t *)((char *)a2 + v14 + 48);
    *((void *)v15 + 7) = v20;
    uint64_t v21 = *(uint64_t *)((char *)a2 + v14 + 72);
    *((void *)v15 + 8) = *(uint64_t *)((char *)a2 + v14 + 64);
    *((void *)v15 + 9) = v21;
    uint64_t v22 = *(uint64_t *)((char *)a2 + v14 + 88);
    *((void *)v15 + 10) = *(uint64_t *)((char *)a2 + v14 + 80);
    *((void *)v15 + 11) = v22;
    uint64_t v23 = *(uint64_t *)((char *)a2 + v14 + 104);
    *((void *)v15 + 12) = *(uint64_t *)((char *)a2 + v14 + 96);
    *((void *)v15 + 13) = v23;
    uint64_t v24 = *(uint64_t *)((char *)a2 + v14 + 120);
    *((void *)v15 + 14) = *(uint64_t *)((char *)a2 + v14 + 112);
    *((void *)v15 + 15) = v24;
    uint64_t v25 = *(uint64_t *)((char *)a2 + v14 + 136);
    *((void *)v15 + 16) = *(uint64_t *)((char *)a2 + v14 + 128);
    *((void *)v15 + 17) = v25;
    uint64_t v26 = *(uint64_t *)((char *)a2 + v14 + 152);
    *((void *)v15 + 18) = *(uint64_t *)((char *)a2 + v14 + 144);
    *((void *)v15 + 19) = v26;
    uint64_t v27 = *(uint64_t *)((char *)a2 + v14 + 168);
    *((void *)v15 + 20) = *(uint64_t *)((char *)a2 + v14 + 160);
    *((void *)v15 + 21) = v27;
    *((_OWORD *)v15 + 11) = *(_OWORD *)((char *)a2 + v14 + 176);
    *((void *)v15 + 24) = *(uint64_t *)((char *)a2 + v14 + 192);
    uint64_t v34 = type metadata accessor for WindComponentViewModel();
    uint64_t v28 = *(int *)(v34 + 68);
    uint64_t v32 = &v16[v28];
    uint64_t v33 = &v15[v28];
    uint64_t v29 = type metadata accessor for WindComponentCompassViewModel();
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v31(v33, v32, v29);
    *(void *)&v15[*(int *)(v34 + 72)] = *(void *)&v16[*(int *)(v34 + 72)];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100B55240(uint64_t a1, uint64_t a2)
{
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(a1 + *(int *)(a2 + 20)), *(unsigned char *)(a1 + *(int *)(a2 + 20) + 8));
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = v5 + *(int *)(type metadata accessor for WindComponentViewModel() + 68);
  uint64_t v7 = type metadata accessor for WindComponentCompassViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return swift_bridgeObjectRelease();
}

void *sub_100B553B0(void *a1, void *a2, uint64_t a3)
{
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  uint64_t v11 = a1;
  uint64_t v34 = a1;
  char v12 = v9[8];
  sub_100195B7C(*(void *)v9, v12);
  *(void *)uint64_t v8 = v10;
  v8[8] = v12;
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (char *)v11 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = *(void *)v15;
  *((void *)v14 + 1) = v16;
  uint64_t v17 = *((void *)v15 + 3);
  *((void *)v14 + 2) = *((void *)v15 + 2);
  *((void *)v14 + 3) = v17;
  uint64_t v18 = *((void *)v15 + 5);
  *((void *)v14 + 4) = *((void *)v15 + 4);
  *((void *)v14 + 5) = v18;
  uint64_t v19 = *((void *)v15 + 7);
  *((void *)v14 + 6) = *((void *)v15 + 6);
  *((void *)v14 + 7) = v19;
  uint64_t v20 = *((void *)v15 + 9);
  *((void *)v14 + 8) = *((void *)v15 + 8);
  *((void *)v14 + 9) = v20;
  uint64_t v21 = *((void *)v15 + 11);
  *((void *)v14 + 10) = *((void *)v15 + 10);
  *((void *)v14 + 11) = v21;
  uint64_t v22 = *((void *)v15 + 13);
  *((void *)v14 + 12) = *((void *)v15 + 12);
  *((void *)v14 + 13) = v22;
  uint64_t v23 = *((void *)v15 + 15);
  *((void *)v14 + 14) = *((void *)v15 + 14);
  *((void *)v14 + 15) = v23;
  uint64_t v24 = *((void *)v15 + 17);
  *((void *)v14 + 16) = *((void *)v15 + 16);
  *((void *)v14 + 17) = v24;
  uint64_t v25 = *((void *)v15 + 19);
  *((void *)v14 + 18) = *((void *)v15 + 18);
  *((void *)v14 + 19) = v25;
  uint64_t v26 = *((void *)v15 + 21);
  *((void *)v14 + 20) = *((void *)v15 + 20);
  *((void *)v14 + 21) = v26;
  *((_OWORD *)v14 + 11) = *((_OWORD *)v15 + 11);
  *((void *)v14 + 24) = *((void *)v15 + 24);
  uint64_t v33 = type metadata accessor for WindComponentViewModel();
  uint64_t v27 = *(int *)(v33 + 68);
  uint64_t v31 = &v15[v27];
  uint64_t v32 = &v14[v27];
  uint64_t v28 = type metadata accessor for WindComponentCompassViewModel();
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v30(v32, v31, v28);
  *(void *)&v14[*(int *)(v33 + 72)] = *(void *)&v15[*(int *)(v33 + 72)];
  swift_bridgeObjectRetain();
  return v34;
}

void *sub_100B55614(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100178110((uint64_t)a1, &qword_100E66E50);
    sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_100195B7C(*(void *)v9, v11);
  uint64_t v12 = *(void *)v8;
  char v13 = v8[8];
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  sub_10018F6D8(v12, v13);
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (void *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  void *v15 = *(void *)((char *)a2 + v14);
  v15[1] = *(void *)((char *)a2 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[2] = v16[2];
  v15[3] = v16[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[4] = v16[4];
  v15[5] = v16[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[6] = v16[6];
  v15[7] = v16[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[8] = v16[8];
  v15[9] = v16[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[10] = v16[10];
  v15[11] = v16[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[12] = v16[12];
  v15[13] = v16[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[14] = v16[14];
  v15[15] = v16[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[16] = v16[16];
  v15[17] = v16[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[18] = v16[18];
  v15[19] = v16[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[20] = v16[20];
  v15[21] = v16[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15[22] = v16[22];
  v15[23] = v16[23];
  v15[24] = v16[24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = type metadata accessor for WindComponentViewModel();
  uint64_t v18 = *(int *)(v17 + 68);
  uint64_t v19 = (char *)v15 + v18;
  uint64_t v20 = (char *)v16 + v18;
  uint64_t v21 = type metadata accessor for WindComponentCompassViewModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  *(void *)((char *)v15 + *(int *)(v17 + 72)) = *(void *)((char *)v16 + *(int *)(v17 + 72));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_100B5592C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = &a1[v8];
  char v11 = &a2[v8];
  *(void *)uint64_t v10 = *(void *)v11;
  v10[8] = v11[8];
  uint64_t v12 = &a1[v9];
  char v13 = &a2[v9];
  long long v14 = *(_OWORD *)&a2[v9 + 16];
  *(_OWORD *)uint64_t v12 = *(_OWORD *)&a2[v9];
  *((_OWORD *)v12 + 1) = v14;
  long long v15 = *(_OWORD *)&a2[v9 + 48];
  *((_OWORD *)v12 + 2) = *(_OWORD *)&a2[v9 + 32];
  *((_OWORD *)v12 + 3) = v15;
  long long v16 = *(_OWORD *)&a2[v9 + 80];
  *((_OWORD *)v12 + 4) = *(_OWORD *)&a2[v9 + 64];
  *((_OWORD *)v12 + 5) = v16;
  long long v17 = *(_OWORD *)&a2[v9 + 112];
  *((_OWORD *)v12 + 6) = *(_OWORD *)&a2[v9 + 96];
  *((_OWORD *)v12 + 7) = v17;
  long long v18 = *(_OWORD *)&a2[v9 + 144];
  *((_OWORD *)v12 + 8) = *(_OWORD *)&a2[v9 + 128];
  *((_OWORD *)v12 + 9) = v18;
  *((_OWORD *)v12 + 10) = *(_OWORD *)&a2[v9 + 160];
  *((void *)v12 + 22) = *(void *)&a2[v9 + 176];
  *(_OWORD *)(v12 + 184) = *(_OWORD *)&a2[v9 + 184];
  uint64_t v19 = type metadata accessor for WindComponentViewModel();
  uint64_t v20 = *(int *)(v19 + 68);
  uint64_t v21 = &v12[v20];
  uint64_t v22 = &v13[v20];
  uint64_t v23 = type metadata accessor for WindComponentCompassViewModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  *(void *)&v12[*(int *)(v19 + 72)] = *(void *)&v13[*(int *)(v19 + 72)];
  return a1;
}

char *sub_100B55AC0(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100178110((uint64_t)a1, &qword_100E66E50);
    uint64_t v6 = sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(void *)v10;
  LOBYTE(v10) = v10[8];
  uint64_t v12 = *(void *)v9;
  char v13 = v9[8];
  *(void *)uint64_t v9 = v11;
  v9[8] = (char)v10;
  sub_10018F6D8(v12, v13);
  uint64_t v14 = *(int *)(a3 + 24);
  long long v15 = &a1[v14];
  long long v16 = &a2[v14];
  uint64_t v17 = *(void *)&a2[v14 + 8];
  *(void *)long long v15 = *(void *)&a2[v14];
  *((void *)v15 + 1) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *((void *)v16 + 3);
  *((void *)v15 + 2) = *((void *)v16 + 2);
  *((void *)v15 + 3) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *((void *)v16 + 5);
  *((void *)v15 + 4) = *((void *)v16 + 4);
  *((void *)v15 + 5) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *((void *)v16 + 7);
  *((void *)v15 + 6) = *((void *)v16 + 6);
  *((void *)v15 + 7) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *((void *)v16 + 9);
  *((void *)v15 + 8) = *((void *)v16 + 8);
  *((void *)v15 + 9) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *((void *)v16 + 11);
  *((void *)v15 + 10) = *((void *)v16 + 10);
  *((void *)v15 + 11) = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = *((void *)v16 + 13);
  *((void *)v15 + 12) = *((void *)v16 + 12);
  *((void *)v15 + 13) = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = *((void *)v16 + 15);
  *((void *)v15 + 14) = *((void *)v16 + 14);
  *((void *)v15 + 15) = v24;
  swift_bridgeObjectRelease();
  uint64_t v25 = *((void *)v16 + 17);
  *((void *)v15 + 16) = *((void *)v16 + 16);
  *((void *)v15 + 17) = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = *((void *)v16 + 19);
  *((void *)v15 + 18) = *((void *)v16 + 18);
  *((void *)v15 + 19) = v26;
  swift_bridgeObjectRelease();
  uint64_t v27 = *((void *)v16 + 21);
  *((void *)v15 + 20) = *((void *)v16 + 20);
  *((void *)v15 + 21) = v27;
  swift_bridgeObjectRelease();
  *((void *)v15 + 22) = *((void *)v16 + 22);
  uint64_t v28 = *((void *)v16 + 24);
  *((void *)v15 + 23) = *((void *)v16 + 23);
  *((void *)v15 + 24) = v28;
  swift_bridgeObjectRelease();
  uint64_t v29 = type metadata accessor for WindComponentViewModel();
  uint64_t v30 = *(int *)(v29 + 68);
  uint64_t v31 = &v15[v30];
  uint64_t v32 = &v16[v30];
  uint64_t v33 = type metadata accessor for WindComponentCompassViewModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 40))(v31, v32, v33);
  *(void *)&v15[*(int *)(v29 + 72)] = *(void *)&v16[*(int *)(v29 + 72)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100B55D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B55D20);
}

uint64_t sub_100B55D20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10017DF08(&qword_100E6D908);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    if (a2 == 254)
    {
      unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
      if (v10 > 1) {
        return (v10 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = type metadata accessor for WindComponentViewModel();
    uint64_t v9 = a1 + *(int *)(a3 + 24);
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_100B55DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B55DE4);
}

void sub_100B55DE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_10017DF08(&qword_100E6D908);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    if (a3 == 254)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 20) + 8) = -(char)a2;
      return;
    }
    uint64_t v10 = type metadata accessor for WindComponentViewModel();
    uint64_t v11 = a1 + *(int *)(a4 + 24);
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

void sub_100B55E94()
{
  sub_10000F5F8();
  if (v0 <= 0x3F)
  {
    type metadata accessor for WindComponentViewModel();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

unint64_t sub_100B55F68()
{
  unint64_t result = qword_100EB2768;
  if (!qword_100EB2768)
  {
    sub_10018C6DC(&qword_100E7A058);
    sub_100B56014();
    sub_100B53C7C((unint64_t *)&qword_100E66BF8, (void (*)(uint64_t))type metadata accessor for AutomationInfoViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB2768);
  }
  return result;
}

unint64_t sub_100B56014()
{
  unint64_t result = qword_100EB2770;
  if (!qword_100EB2770)
  {
    sub_10018C6DC(&qword_100E7A050);
    sub_10018C6DC(&qword_100EB2670);
    sub_100B53A60();
    swift_getOpaqueTypeConformance2();
    sub_100B53C7C((unint64_t *)&qword_100EAACA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB2770);
  }
  return result;
}

uint64_t sub_100B560F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100B56110()
{
  uint64_t v1 = type metadata accessor for SimpleWindComponentContentView(0);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for ColorSchemeContrast();
    sub_100162E4C();
    sub_100162F0C();
    v3();
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(v0 + v2 + *(int *)(v1 + 20)), *(unsigned char *)(v0 + v2 + *(int *)(v1 + 20) + 8));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for WindComponentViewModel();
  type metadata accessor for WindComponentCompassViewModel();
  sub_100162E4C();
  sub_100162F0C();
  v4();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100B562E0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for SimpleWindComponentContentView(0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_100B53F10(a1, v6, a2);
}

uint64_t sub_100B56360(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100EB2790);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100B563C8()
{
  return sub_1001246C8(&qword_100EB27A0, &qword_100EB27A8);
}

uint64_t *sub_100B56404(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E669A0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  uint64_t v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    a1[1] = a2[1];
    uint64_t v7 = *(int *)(v4 + 32);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for PresentationMode();
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_retain();
    swift_retain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t sub_100B56508(uint64_t a1)
{
  swift_release();
  swift_release();
  uint64_t v2 = a1 + *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
  uint64_t v3 = type metadata accessor for PresentationMode();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

void *sub_100B56590(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_retain();
  uint64_t v5 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for PresentationMode();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  return a1;
}

void *sub_100B56628(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v4 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for PresentationMode();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

void *sub_100B566DC(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for PresentationMode();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *sub_100B56768(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  uint64_t v4 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for PresentationMode();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_100B5680C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B56820);
}

uint64_t sub_100B56820(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E669A0);

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_100B5686C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B56880);
}

uint64_t sub_100B56880(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E669A0);

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ReportWeatherSubmittedView()
{
  uint64_t result = qword_100EB2808;
  if (!qword_100EB2808) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100B56918()
{
  sub_100B569A4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_100B569A4()
{
  if (!qword_100EB2818)
  {
    type metadata accessor for PresentationMode();
    unint64_t v0 = type metadata accessor for Binding();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100EB2818);
    }
  }
}

uint64_t sub_100B569FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100B56A18@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static HorizontalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  uint64_t v3 = sub_10017DF08(&qword_100EB2848);
  return sub_100B56A64(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_100B56A64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a1;
  uint64_t v46 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v46);
  uint64_t v4 = (_OWORD *)((char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for ReportWeatherSubmittedView();
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v40 + 64);
  __chkstk_darwin(v5 - 8);
  uint64_t v44 = sub_10017DF08(&qword_100E850B8);
  uint64_t v7 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_10017DF08(&qword_100E850C0);
  __chkstk_darwin(v41);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_10017DF08(&qword_100EB2850);
  __chkstk_darwin(v43);
  char v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_10017DF08(&qword_100EB2858);
  __chkstk_darwin(v45);
  long long v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v47 = (uint64_t)&v40 - v17;
  uint64_t v18 = sub_10017DF08(&qword_100E66BC8);
  __src[10] = sub_1008749EC;
  __src[11] = 0;
  LOBYTE(__src[12]) = 0;
  __src[0] = v18;
  if (qword_100E62290 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t result = sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)__dst, &qword_100E6F2A0);
  if (*(void *)&__dst[24])
  {
    sub_1001262E4((long long *)__dst, (uint64_t)&__src[3]);
    __src[1] = sub_100B57114;
    __src[2] = 0;
    uint64_t v20 = Dictionary.init(dictionaryLiteral:)();
    __src[8] = _swiftEmptyArrayStorage;
    __src[9] = v20;
    memcpy(__dst, __src, sizeof(__dst));
    sub_100B5766C(v42, (uint64_t)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for ReportWeatherSubmittedView);
    unint64_t v21 = (*(unsigned __int8 *)(v40 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
    uint64_t v22 = swift_allocObject();
    sub_100B575A8((uint64_t)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21);
    sub_10017DF08(&qword_100E850E0);
    sub_100623584();
    Button.init(action:label:)();
    uint64_t v23 = static Color.blue.getter();
    char v24 = static Edge.Set.all.getter();
    uint64_t v25 = v44;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v9, v44);
    uint64_t v26 = &v11[*(int *)(v41 + 36)];
    *(void *)uint64_t v26 = v23;
    v26[8] = v24;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v25);
    uint64_t v27 = (char *)v4 + *(int *)(v46 + 20);
    uint64_t v28 = enum case for RoundedCornerStyle.continuous(_:);
    uint64_t v29 = type metadata accessor for RoundedCornerStyle();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104))(v27, v28, v29);
    __asm { FMOV            V0.2D, #10.0 }
    *uint64_t v4 = _Q0;
    uint64_t v35 = (uint64_t)&v13[*(int *)(v43 + 36)];
    sub_100B5766C((uint64_t)v4, v35, (void (*)(void))&type metadata accessor for RoundedRectangle);
    *(_WORD *)(v35 + *(int *)(sub_10017DF08(&qword_100E744A8) + 36)) = 256;
    sub_10006DF38((uint64_t)v11, (uint64_t)v13, &qword_100E850C0);
    sub_1004D2EC4((uint64_t)v4);
    sub_1001781AC((uint64_t)v11, &qword_100E850C0);
    char v36 = static Edge.Set.bottom.getter();
    sub_10006DF38((uint64_t)v13, (uint64_t)v15, &qword_100EB2850);
    uint64_t v37 = &v15[*(int *)(v45 + 36)];
    *uint64_t v37 = v36;
    *(_OWORD *)(v37 + 8) = 0u;
    *(_OWORD *)(v37 + 24) = 0u;
    v37[40] = 1;
    sub_1001781AC((uint64_t)v13, &qword_100EB2850);
    uint64_t v38 = v47;
    sub_100B576C0((uint64_t)v15, v47);
    sub_10006DF38((uint64_t)__dst, (uint64_t)__src, &qword_100E66B30);
    sub_10006DF38(v38, (uint64_t)v15, &qword_100EB2858);
    *(void *)a2 = 0;
    *(unsigned char *)(a2 + 8) = 1;
    sub_10006DF38((uint64_t)__src, a2 + 16, &qword_100E66B30);
    *(void *)(a2 + 120) = 0;
    *(unsigned char *)(a2 + 128) = 1;
    uint64_t v39 = sub_10017DF08(&qword_100EB2860);
    sub_10006DF38((uint64_t)v15, a2 + *(int *)(v39 + 80), &qword_100EB2858);
    sub_1001781AC(v38, &qword_100EB2858);
    sub_1001781AC((uint64_t)__dst, &qword_100E66B30);
    sub_1001781AC((uint64_t)v15, &qword_100EB2858);
    return sub_1001781AC((uint64_t)__src, &qword_100E66B30);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100B57114@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = sub_1001B1E64(a1, a1[3]);
  uint64_t v4 = self;
  id v5 = [v4 mainBundle];
  v17._countAndFlagsBits = 0xD000000000000030;
  v17._object = (void *)0x8000000100CBEE00;
  v6._countAndFlagsBits = 0x6F59206B6E616854;
  v6._object = (void *)0xE900000000000075;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  Swift::String v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v17);

  id v9 = [v4 mainBundle];
  v18._countAndFlagsBits = 0xD000000000000046;
  v10._countAndFlagsBits = 0xD000000000000057;
  v18._object = (void *)0x8000000100CBEEA0;
  v10._object = (void *)0x8000000100CBEE40;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  Swift::String v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v18);

  static Color.blue.getter();
  uint64_t v13 = Color.hex.getter();
  uint64_t v15 = v14;
  swift_release();
  uint64_t result = sub_10020D948(*v3 + 16, a2);
  *(unsigned char *)(a2 + 40) = 0;
  *(void *)(a2 + 48) = 0xD000000000000010;
  *(void *)(a2 + 56) = 0x8000000100CBEDE0;
  *(Swift::String *)(a2 + 64) = v8;
  *(Swift::String *)(a2 + 80) = v12;
  *(void *)(a2 + 96) = 0;
  *(void *)(a2 + 104) = 0;
  *(void *)(a2 + 112) = 0;
  *(void *)(a2 + 120) = v13;
  *(void *)(a2 + 128) = v15;
  return result;
}

uint64_t sub_100B572B0()
{
  uint64_t v0 = type metadata accessor for PresentationMode();
  __chkstk_darwin(v0 - 8);
  sub_10017DF08(&qword_100E669A0);
  Binding.wrappedValue.getter();
  PresentationMode.dismiss()();
  return Binding.wrappedValue.setter();
}

void *sub_100B57354@<X0>(unsigned char *a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v2 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  static Font.Weight.bold.getter();
  uint64_t v7 = Text.fontWeight(_:)();
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  char v13 = v12 & 1;
  sub_100191924(v2, v4, v6);
  swift_bridgeObjectRelease();
  uint64_t v14 = static Alignment.center.getter();
  sub_100BD7E24(__src, 0, 1, 0, 1, 0x4074600000000000, 0, 0x4049000000000000, 0, 0, 1, 0, 1, v14, v15, v7, v9, v13, v11);
  sub_100191924(v7, v9, v13);
  swift_bridgeObjectRelease();
  uint64_t result = memcpy(a1, __src, 0x90uLL);
  a1[144] = 0;
  return result;
}

uint64_t sub_100B574B4()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for ReportWeatherSubmittedView() - 8) + 80);
  uint64_t v2 = v0 + ((v1 + 16) & ~v1);
  swift_release();
  swift_release();
  uint64_t v3 = v2 + *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
  type metadata accessor for PresentationMode();
  sub_100162E4C();
  (*(void (**)(uint64_t))(v4 + 8))(v3);

  return swift_deallocObject();
}

uint64_t sub_100B575A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ReportWeatherSubmittedView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100B5760C()
{
  type metadata accessor for ReportWeatherSubmittedView();

  return sub_100B572B0();
}

uint64_t sub_100B5766C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_100B576C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100EB2858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100B57728()
{
  return sub_1001246C8(&qword_100EB2868, &qword_100EB2870);
}

uint64_t sub_100B57764(uint64_t a1, uint64_t a2, char a3, double a4, double a5)
{
  uint64_t v10 = type metadata accessor for Navigate(0);
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v14 = (uint64_t *)(v13 - v12);
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  if (qword_100E624C8 != -1) {
    swift_once();
  }
  SettingReader.read<A>(_:)();
  swift_release();
  uint64_t v15 = sub_10017DF08((uint64_t *)&unk_100EA0250);
  uint64_t v16 = (char *)v14 + *(int *)(v15 + 48);
  uint64_t v17 = *(int *)(v15 + 64);
  *uint64_t v14 = a1;
  type metadata accessor for WeatherMapOverlayKind();
  sub_100162E4C();
  (*(void (**)(char *, uint64_t))(v18 + 16))(v16, a2);
  *((unsigned char *)v14 + v17) = a3 & 1;
  type metadata accessor for Navigate.Destination(0);
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)v14 + *(int *)(v10 + 20)) = 0;
  uint64_t v19 = sub_100B579F8(a3 & 1, a1, a5);
  sub_10017DF08(&qword_100E65E98);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_100C367B0;
  *(void *)(v20 + 56) = &type metadata for Mica;
  *(void *)(v20 + 64) = &off_100E26518;
  *(unsigned char *)(v20 + 32) = 0;
  *(void *)(v20 + 96) = &type metadata for Delay;
  *(void *)(v20 + 104) = &off_100E12AD8;
  *(void *)(v20 + 72) = 0x3FF0000000000000;
  *(void *)(v20 + 136) = &type metadata for UpdateWeather;
  *(void *)(v20 + 144) = &off_100E3B100;
  *(unsigned char *)(v20 + 112) = v23;
  *(void *)(v20 + 176) = &type metadata for Delay;
  *(void *)(v20 + 184) = &off_100E12AD8;
  *(void *)(v20 + 152) = 0x3FF0000000000000;
  *(void *)(v20 + 216) = v10;
  *(void *)(v20 + 224) = &off_100E22EC8;
  unint64_t v21 = sub_100170694((uint64_t *)(v20 + 192));
  sub_100765EC8((uint64_t)v14, (uint64_t)v21, (void (*)(void))type metadata accessor for Navigate);
  *(void *)(v20 + 256) = &type metadata for Delay;
  *(void *)(v20 + 264) = &off_100E12AD8;
  *(void *)(v20 + 232) = 0x4008000000000000;
  *(void *)(v20 + 296) = &type metadata for Map;
  *(void *)(v20 + 304) = &off_100E11AD0;
  *(void *)(v20 + 272) = a1;
  *(double *)(v20 + 280) = a4;
  *(unsigned char *)(v20 + 288) = 0;
  *(void *)(v20 + 336) = &type metadata for Delay;
  *(void *)(v20 + 344) = &off_100E12AD8;
  *(void *)(v20 + 312) = 0x402E000000000000;
  *(void *)(v20 + 376) = &type metadata for Measure;
  *(void *)(v20 + 384) = &off_100E11158;
  *(void *)(v20 + 352) = v19;
  sub_100765F28((uint64_t)v14, (void (*)(void))type metadata accessor for Navigate);
  return v20;
}

uint64_t sub_100B579F8(char a1, uint64_t a2, double a3)
{
  uint64_t v6 = swift_allocObject();
  *(unsigned char *)(v6 + 16) = a1;
  v13[3] = &type metadata for Scroll;
  v13[4] = &off_100E15EF8;
  v13[0] = sub_100B584FC;
  v13[1] = v6;
  uint64_t v7 = swift_allocObject();
  *(unsigned char *)(v7 + 16) = a1;
  uint64_t v11 = &type metadata for Scroll;
  uint64_t v12 = &off_100E15EF8;
  *(void *)&long long v10 = sub_100B5860C;
  *((void *)&v10 + 1) = v7;
  sub_10017DF08(&qword_100E65E98);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100C31880;
  sub_10020D948((uint64_t)v13, v8 + 32);
  *(void *)(v8 + 96) = &type metadata for Delay;
  *(void *)(v8 + 104) = &off_100E12AD8;
  *(void *)(v8 + 72) = 0x4000000000000000;
  *(void *)(v8 + 136) = &type metadata for Map;
  *(void *)(v8 + 144) = &off_100E11AD0;
  *(void *)(v8 + 112) = a2;
  *(double *)(v8 + 120) = a3;
  *(unsigned char *)(v8 + 128) = 0;
  *(void *)(v8 + 176) = &type metadata for Delay;
  *(void *)(v8 + 184) = &off_100E12AD8;
  *(void *)(v8 + 152) = 0x402E000000000000;
  sub_1001262E4(&v10, v8 + 192);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
  return v8;
}

uint64_t sub_100B57B3C()
{
  uint64_t v0 = type metadata accessor for DispatchAction();
  sub_100162E4C();
  __chkstk_darwin(v1);
  sub_1001626E0();
  uint64_t v4 = (_WORD *)(v3 - v2);
  uint64_t v5 = type metadata accessor for Navigate(0);
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = (void *)(v8 - v7);
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  if (qword_100E624C8 != -1) {
    swift_once();
  }
  SettingReader.read<A>(_:)();
  swift_release();
  *uint64_t v9 = 0;
  type metadata accessor for Navigate.Destination(0);
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)v9 + *(int *)(v5 + 20)) = 0;
  *uint64_t v4 = 4;
  type metadata accessor for EnvironmentAction();
  sub_100180C64();
  type metadata accessor for MainAction();
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)v4 + *(int *)(v0 + 20)) = 0;
  sub_10017DF08(&qword_100E65E98);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_100C251B0;
  *(void *)(v10 + 56) = &type metadata for Scroll;
  *(void *)(v10 + 64) = &off_100E15EF8;
  *(void *)(v10 + 32) = sub_100B582A8;
  *(void *)(v10 + 40) = 0;
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_100C28110;
  *(void *)(v11 + 56) = &type metadata for Mica;
  *(void *)(v11 + 64) = &off_100E26518;
  *(unsigned char *)(v11 + 32) = 0;
  *(void *)(v11 + 96) = &type metadata for Delay;
  *(void *)(v11 + 104) = &off_100E12AD8;
  *(void *)(v11 + 72) = 0x3FF0000000000000;
  *(void *)(v11 + 136) = &type metadata for UpdateWeather;
  *(void *)(v11 + 144) = &off_100E3B100;
  *(unsigned char *)(v11 + 112) = v15;
  *(void *)(v11 + 176) = &type metadata for Delay;
  *(void *)(v11 + 184) = &off_100E12AD8;
  *(void *)(v11 + 152) = 0x3FF0000000000000;
  *(void *)(v11 + 216) = v5;
  *(void *)(v11 + 224) = &off_100E22EC8;
  uint64_t v12 = sub_100170694((uint64_t *)(v11 + 192));
  sub_100765EC8((uint64_t)v9, (uint64_t)v12, (void (*)(void))type metadata accessor for Navigate);
  *(void *)(v11 + 256) = &type metadata for Delay;
  *(void *)(v11 + 264) = &off_100E12AD8;
  *(void *)(v11 + 232) = 0x4008000000000000;
  *(void *)(v11 + 296) = v0;
  *(void *)(v11 + 304) = &off_100E39A90;
  uint64_t v13 = sub_100170694((uint64_t *)(v11 + 272));
  sub_100765EC8((uint64_t)v4, (uint64_t)v13, (void (*)(void))type metadata accessor for DispatchAction);
  *(void *)(v11 + 336) = &type metadata for Delay;
  *(void *)(v11 + 344) = &off_100E12AD8;
  *(void *)(v11 + 312) = 0x3FF0000000000000;
  *(void *)(v11 + 376) = &type metadata for Measure;
  *(void *)(v11 + 384) = &off_100E11158;
  *(void *)(v11 + 352) = v10;
  *(void *)(v11 + 416) = &type metadata for Mica;
  *(void *)(v11 + 424) = &off_100E26518;
  *(unsigned char *)(v11 + 392) = 1;
  sub_100765F28((uint64_t)v4, (void (*)(void))type metadata accessor for DispatchAction);
  sub_100765F28((uint64_t)v9, (void (*)(void))type metadata accessor for Navigate);
  return v11;
}

uint64_t sub_100B57E4C()
{
  uint64_t v0 = type metadata accessor for DispatchAction();
  sub_100162E4C();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (_WORD *)((char *)&v25 - v5);
  uint64_t v7 = type metadata accessor for Navigate(0);
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = (void *)(v10 - v9);
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  if (qword_100E624C8 != -1) {
    swift_once();
  }
  SettingReader.read<A>(_:)();
  swift_release();
  LODWORD(v25) = v26;
  *uint64_t v11 = 0;
  type metadata accessor for Navigate.Destination(0);
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)v11 + *(int *)(v7 + 20)) = 0;
  *uint64_t v6 = 4;
  type metadata accessor for EnvironmentAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for MainAction();
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)v6 + *(int *)(v0 + 20)) = 0;
  uint64_t v12 = sub_10017DF08(&qword_100E66458);
  uint64_t v13 = v0;
  uint64_t v14 = &v3[*(int *)(v12 + 48)];
  uint64_t v15 = (uint64_t)&v3[*(int *)(v12 + 64)];
  uint64_t v16 = enum case for WeatherMapOverlayKind.temperature(_:);
  type metadata accessor for WeatherMapOverlayKind();
  sub_100162E4C();
  (*(void (**)(char *, uint64_t))(v17 + 104))(v3, v16);
  type metadata accessor for LocationComponentAction(0);
  sub_100180C64();
  *(_OWORD *)uint64_t v14 = 0u;
  *((_OWORD *)v14 + 1) = 0u;
  v14[32] = 1;
  uint64_t v18 = type metadata accessor for Date();
  _s7Weather24LocationCompositionStateOwst_0(v15, 1, 1, v18);
  type metadata accessor for LocationViewAction();
  sub_100180C64();
  swift_storeEnumTagMultiPayload();
  v3[*(int *)(v13 + 20)] = 0;
  sub_10017DF08(&qword_100E65E98);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_100C251B0;
  *(void *)(v19 + 56) = &type metadata for Scroll;
  *(void *)(v19 + 64) = &off_100E15EF8;
  *(void *)(v19 + 32) = sub_100B582A8;
  *(void *)(v19 + 40) = 0;
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_100C4F040;
  *(void *)(v20 + 56) = &type metadata for Mica;
  *(void *)(v20 + 64) = &off_100E26518;
  *(unsigned char *)(v20 + 32) = 0;
  *(void *)(v20 + 96) = &type metadata for Delay;
  *(void *)(v20 + 104) = &off_100E12AD8;
  *(void *)(v20 + 72) = 0x3FF0000000000000;
  *(void *)(v20 + 136) = &type metadata for UpdateWeather;
  *(void *)(v20 + 144) = &off_100E3B100;
  *(unsigned char *)(v20 + 112) = (_BYTE)v25;
  *(void *)(v20 + 176) = &type metadata for Delay;
  *(void *)(v20 + 184) = &off_100E12AD8;
  *(void *)(v20 + 152) = 0x3FF0000000000000;
  *(void *)(v20 + 216) = v7;
  *(void *)(v20 + 224) = &off_100E22EC8;
  unint64_t v21 = sub_100170694((uint64_t *)(v20 + 192));
  sub_100765EC8((uint64_t)v11, (uint64_t)v21, (void (*)(void))type metadata accessor for Navigate);
  *(void *)(v20 + 256) = &type metadata for Delay;
  *(void *)(v20 + 264) = &off_100E12AD8;
  *(void *)(v20 + 232) = 0x4008000000000000;
  uint64_t v25 = v11;
  *(void *)(v20 + 296) = v13;
  *(void *)(v20 + 304) = &off_100E39A90;
  uint64_t v22 = sub_100170694((uint64_t *)(v20 + 272));
  sub_100765EC8((uint64_t)v6, (uint64_t)v22, (void (*)(void))type metadata accessor for DispatchAction);
  *(void *)(v20 + 336) = &type metadata for Delay;
  *(void *)(v20 + 344) = &off_100E12AD8;
  *(void *)(v20 + 312) = 0x3FF0000000000000;
  *(void *)(v20 + 376) = v13;
  *(void *)(v20 + 384) = &off_100E39A90;
  char v23 = sub_100170694((uint64_t *)(v20 + 352));
  sub_100765EC8((uint64_t)v3, (uint64_t)v23, (void (*)(void))type metadata accessor for DispatchAction);
  *(void *)(v20 + 416) = &type metadata for Delay;
  *(void *)(v20 + 424) = &off_100E12AD8;
  *(void *)(v20 + 392) = 0x3FF0000000000000;
  *(void *)(v20 + 456) = &type metadata for Measure;
  *(void *)(v20 + 464) = &off_100E11158;
  *(void *)(v20 + 432) = v19;
  *(void *)(v20 + 496) = &type metadata for Mica;
  *(void *)(v20 + 504) = &off_100E26518;
  *(unsigned char *)(v20 + 472) = 1;
  sub_100765F28((uint64_t)v3, (void (*)(void))type metadata accessor for DispatchAction);
  sub_100765F28((uint64_t)v6, (void (*)(void))type metadata accessor for DispatchAction);
  sub_100765F28((uint64_t)v25, (void (*)(void))type metadata accessor for Navigate);
  return v20;
}

uint64_t sub_100B582A8(double a1, double a2, double a3, double a4)
{
  CGRect v13 = CGRectInset(*(CGRect *)&a1, 10.0, 120.0);
  CGFloat x = v13.origin.x;
  CGFloat y = v13.origin.y;
  CGFloat width = v13.size.width;
  CGFloat height = v13.size.height;
  CGFloat v8 = v13.size.height * 3.0;
  sub_10017DF08(&qword_100E928F8);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100C25ED0;
  *(void *)(v9 + 56) = &type metadata for Down;
  *(void *)(v9 + 64) = &off_100E11EA8;
  uint64_t v10 = swift_allocObject();
  *(void *)(v9 + 32) = v10;
  *(unsigned char *)(v10 + 16) = 1;
  *(CGFloat *)(v10 + 24) = x;
  *(CGFloat *)(v10 + 32) = y;
  *(CGFloat *)(v10 + 40) = width;
  *(CGFloat *)(v10 + 48) = height;
  *(CGFloat *)(v10 + 56) = v8;
  *(void *)(v9 + 96) = &type metadata for Up;
  *(void *)(v9 + 104) = &off_100E152C8;
  uint64_t v11 = swift_allocObject();
  *(void *)(v9 + 72) = v11;
  *(unsigned char *)(v11 + 16) = 0;
  *(CGFloat *)(v11 + 24) = x;
  *(CGFloat *)(v11 + 32) = y;
  *(CGFloat *)(v11 + 40) = width;
  *(CGFloat *)(v11 + 48) = height;
  *(CGFloat *)(v11 + 56) = v8;
  return v9;
}

uint64_t sub_100B583AC(char a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  double v9 = sub_100B58510(a1, a2, a3, a4, a5);
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  v22.origin.CGFloat x = a2;
  v22.origin.CGFloat y = a3;
  v22.size.CGFloat width = a4;
  v22.size.CGFloat height = a5;
  CGFloat Width = CGRectGetWidth(v22);
  v23.origin.CGFloat x = a2;
  v23.origin.CGFloat y = a3;
  v23.size.CGFloat width = a4;
  v23.size.CGFloat height = a5;
  CGFloat Height = CGRectGetHeight(v23);
  sub_10017DF08(&qword_100E928F8);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_100C25ED0;
  *(void *)(v17 + 56) = &type metadata for Up;
  *(void *)(v17 + 64) = &off_100E152C8;
  uint64_t v18 = swift_allocObject();
  *(void *)(v17 + 32) = v18;
  *(unsigned char *)(v18 + 16) = 0;
  *(double *)(v18 + 24) = v9;
  *(void *)(v18 + 32) = v11;
  *(void *)(v18 + 40) = v13;
  *(void *)(v18 + 48) = v15;
  *(CGFloat *)(v18 + 56) = Width;
  *(void *)(v17 + 96) = &type metadata for Right;
  *(void *)(v17 + 104) = &off_100E380D0;
  uint64_t v19 = swift_allocObject();
  *(void *)(v17 + 72) = v19;
  *(unsigned char *)(v19 + 16) = 3;
  *(double *)(v19 + 24) = v9;
  *(void *)(v19 + 32) = v11;
  *(void *)(v19 + 40) = v13;
  *(void *)(v19 + 48) = v15;
  *(CGFloat *)(v19 + 56) = Height;
  return v17;
}

uint64_t sub_100B584F0()
{
  return sub_10017D164();
}

uint64_t sub_100B584FC(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  return sub_100B583AC(*(unsigned char *)(v4 + 16), a1, a2, a3, a4);
}

uint64_t sub_100B58504()
{
  return sub_10017D164();
}

double sub_100B58510(char a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  if (a1)
  {
    double v9 = CGRectGetMinX(*(CGRect *)&a2) + 50.0;
    v11.origin.CGFloat x = a2;
    v11.origin.CGFloat y = a3;
    v11.size.CGFloat width = a4;
    v11.size.CGFloat height = a5;
    CGRectGetMinY(v11);
    v12.origin.CGFloat x = a2;
    v12.origin.CGFloat y = a3;
    v12.size.CGFloat width = a4;
    v12.size.CGFloat height = a5;
    CGRectGetWidth(v12);
    v13.origin.CGFloat x = a2;
    v13.origin.CGFloat y = a3;
    v13.size.CGFloat width = a4;
    v13.size.CGFloat height = a5;
    CGRectGetHeight(v13);
  }
  else
  {
    CGRectGetWidth(*(CGRect *)&a2);
    v14.origin.CGFloat x = a2;
    v14.origin.CGFloat y = a3;
    v14.size.CGFloat width = a4;
    v14.size.CGFloat height = a5;
    CGRectGetHeight(v14);
    return 50.0;
  }
  return v9;
}

uint64_t sub_100B58600()
{
  return sub_10017D164();
}

uint64_t sub_100B58610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for MainAction();
  __chkstk_darwin(v7);
  double v9 = (void *)((char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(uint64_t (**)(uint64_t))(v4 + 16);
  *double v9 = a3;
  v9[1] = a4;
  type metadata accessor for EnvironmentAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = 0;
  memset(v12, 0, sizeof(v12));
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1001AAF58((uint64_t)v9, (uint64_t)v12, v10);
  sub_100016E7C((uint64_t)v12);
  sub_1001ABE70((uint64_t)v9);
  return swift_release();
}

ValueMetadata *type metadata accessor for ContentStatusBannerViewFactory()
{
  return &type metadata for ContentStatusBannerViewFactory;
}

void *sub_100B5873C(char a1, char a2, uint64_t a3)
{
  uint64_t v94 = a3;
  uint64_t v6 = type metadata accessor for TipPriorityQueue.GridEntry();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100162EF8();
  uint64_t v93 = v8;
  __chkstk_darwin(v9);
  uint64_t v92 = (uint64_t)&v71 - v10;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v71 - v12;
  uint64_t v14 = sub_10017DF08(&qword_100E64E80);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_10008B8C0();
  uint64_t v16 = type metadata accessor for LocationComponentViewModel();
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  CGRect v22 = (char *)&v71 - v21;
  uint64_t v23 = sub_10017DF08(&qword_100E6CCD8);
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_100162EF8();
  uint64_t v91 = v25;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v71 - v27;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v71 - v30;
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v71 - v33;
  if (a1)
  {
    if (a1 == 1)
    {
      if (a2)
      {
        uint64_t v35 = &qword_100EB2CF8;
        goto LABEL_11;
      }
    }
    else if (a2)
    {
      uint64_t v35 = &qword_100EB30C8;
      goto LABEL_11;
    }
    uint64_t v35 = &qword_100EB2EE0;
  }
  else if (a2)
  {
    uint64_t v35 = &qword_100EB2928;
  }
  else
  {
    uint64_t v35 = &qword_100EB2B10;
  }
LABEL_11:
  char v36 = *((unsigned char *)v35 + 224);
  uint64_t v37 = *v35;
  uint64_t v77 = v35[1];
  uint64_t v78 = v37;
  uint64_t v76 = v35[2];
  uint64_t v75 = v35[3];
  uint64_t v38 = v35[8];
  uint64_t v81 = v35[9];
  uint64_t v82 = v38;
  uint64_t v39 = v35[10];
  uint64_t v79 = v35[11];
  uint64_t v80 = v39;
  uint64_t v74 = v35[24];
  uint64_t v73 = v35[25];
  uint64_t v72 = v35[26];
  uint64_t v71 = v35[27];
  uint64_t v40 = v35[49];
  uint64_t v85 = v35[50];
  uint64_t v86 = v40;
  uint64_t v41 = v35[51];
  uint64_t v83 = v35[52];
  uint64_t v84 = v41;
  uint64_t v42 = v35[57];
  uint64_t v89 = v35[58];
  uint64_t v90 = v42;
  uint64_t v43 = v94 + OBJC_IVAR____TtCV7Weather10NhpContent8_Storage_map;
  uint64_t v45 = v35[59];
  uint64_t v44 = v35[60];
  uint64_t v87 = v45;
  uint64_t v88 = v44;
  swift_beginAccess();
  sub_10006DF38(v43, v3, &qword_100E64E80);
  uint64_t v46 = type metadata accessor for LocationComponentContainerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0(v3, 1, v46) == 1)
  {
    sub_1001781AC(v3, &qword_100E64E80);
LABEL_16:
    uint64_t v47 = 1;
    goto LABEL_17;
  }
  sub_10031F6A8(v3 + *(int *)(v46 + 20), (uint64_t)v19, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  sub_10031F75C(v3, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_10031F6FC((uint64_t)v19, (uint64_t)v22, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  if (v36)
  {
    sub_10031F75C((uint64_t)v22, (void (*)(void))type metadata accessor for LocationComponentViewModel);
    goto LABEL_16;
  }
  sub_10031F6FC((uint64_t)v22, (uint64_t)v31, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v47 = 0;
  uint64_t v48 = &v31[*(int *)(v6 + 20)];
  uint64_t v49 = v73;
  *(void *)uint64_t v48 = v74;
  *((void *)v48 + 1) = v49;
  uint64_t v50 = v71;
  *((void *)v48 + 2) = v72;
  *((void *)v48 + 3) = v50;
LABEL_17:
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, v47, 1, v6);
  sub_10031F640((uint64_t)v31, (uint64_t)v34);
  sub_10031F6A8(v94 + *(int *)(v46 + 20) + OBJC_IVAR____TtCV7Weather10NhpContent8_Storage_airQuality, (uint64_t)v28, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v51 = &v28[*(int *)(v6 + 20)];
  uint64_t v52 = v77;
  *(void *)uint64_t v51 = v78;
  *((void *)v51 + 1) = v52;
  uint64_t v53 = v75;
  *((void *)v51 + 2) = v76;
  *((void *)v51 + 3) = v53;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v6);
  uint64_t v54 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
  sub_10031F6A8(v54, (uint64_t)v13, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v55 = &v13[*(int *)(v6 + 20)];
  uint64_t v56 = v81;
  *(void *)uint64_t v55 = v82;
  *((void *)v55 + 1) = v56;
  uint64_t v57 = v79;
  *((void *)v55 + 2) = v80;
  *((void *)v55 + 3) = v57;
  uint64_t v58 = v91;
  sub_10006DF38((uint64_t)v34, v91, &qword_100E6CCD8);
  uint64_t v59 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
  uint64_t v60 = v92;
  sub_10031F6A8(v59, v92, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v61 = (uint64_t *)(v60 + *(int *)(v6 + 20));
  uint64_t v62 = v85;
  *uint64_t v61 = v86;
  v61[1] = v62;
  uint64_t v63 = v83;
  v61[2] = v84;
  v61[3] = v63;
  uint64_t v64 = sub_100163220(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
  uint64_t v65 = v93;
  sub_10031F6A8(v64, v93, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v66 = (uint64_t *)(v65 + *(int *)(v6 + 20));
  uint64_t v67 = v89;
  *uint64_t v66 = v90;
  v66[1] = v67;
  uint64_t v68 = v88;
  v66[2] = v87;
  v66[3] = v68;
  v69 = sub_100AD6D18((uint64_t)v28, (uint64_t)v13, v58, v60, v65);
  sub_1001781AC((uint64_t)v34, &qword_100E6CCD8);
  return v69;
}

uint64_t sub_100B58D18(uint64_t a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E64E80);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_10008B8C0();
  uint64_t v10 = a1 + OBJC_IVAR____TtCV7Weather10NhpContent8_Storage_map;
  swift_beginAccess();
  sub_10006DF38(v10, v7, &qword_100E64E80);
  uint64_t v106 = a1;
  if (_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8) == 1)
  {
    sub_1001781AC(v7, &qword_100E64E80);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100C367B0;
    sub_10017DF08(&qword_100E6CCD0);
    unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v13 = *(void *)(v9 + 72);
    uint64_t v14 = (__n128 *)swift_allocObject();
    uint64_t v15 = sub_100183900(v14, (__n128)xmmword_100C251B0);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather10NhpContent8_Storage_nextHourPrecipitation, (uint64_t)v15 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 32) = sub_1001F24CC((uint64_t)v14);
    *(void *)(v11 + 40) = v16;
    *(void *)(v11 + 48) = v17;
    uint64_t v18 = (__n128 *)swift_allocObject();
    sub_100163264(v18);
    sub_10031F6A8(v19 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v20, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 56) = sub_1001F24CC((uint64_t)v14);
    *(void *)(v11 + 64) = v21;
    *(void *)(v11 + 72) = v22;
    uint64_t v23 = (__n128 *)sub_100163204();
    sub_100163264(v23);
    sub_10031F6A8(v24 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v25, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 80) = sub_1001F24CC((uint64_t)v14);
    *(void *)(v11 + 88) = v26;
    *(void *)(v11 + 96) = v27;
    uint64_t v28 = sub_100163204();
    *(_OWORD *)(v28 + 16) = v107;
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather10NhpContent8_Storage_airQuality, v28 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 104) = sub_1001F24CC(v28);
    *(void *)(v11 + 112) = v29;
    *(void *)(v11 + 120) = v30;
    uint64_t v31 = v13;
    uint64_t v32 = (__n128 *)swift_allocObject();
    uint64_t v33 = (char *)sub_100183900(v32, (__n128)xmmword_100C25ED0) + v12;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
    sub_1001859A8((uint64_t)&v33[v31], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset);
    *(void *)(v11 + 128) = sub_1001F24CC((uint64_t)v32);
    *(void *)(v11 + 136) = v34;
    *(void *)(v11 + 144) = v35;
    char v36 = (__n128 *)swift_allocObject();
    sub_10016324C(v36);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_1001859A8((uint64_t)&v33[v31], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal);
    *(void *)(v11 + 152) = sub_1001F24CC((uint64_t)v32);
    *(void *)(v11 + 160) = v37;
    *(void *)(v11 + 168) = v38;
    uint64_t v39 = (__n128 *)swift_allocObject();
    sub_10016324C(v39);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_1001859A8((uint64_t)&v33[v31], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity);
    *(void *)(v11 + 176) = sub_1001F24CC((uint64_t)v32);
    *(void *)(v11 + 184) = v40;
    *(void *)(v11 + 192) = v41;
    uint64_t v42 = sub_100163204();
    *(_OWORD *)(v42 + 16) = v107;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_1001859A8(v42 + v12 + v31, OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure);
    *(void *)(v11 + 200) = sub_1001F24CC(v42);
    *(void *)(v11 + 208) = v43;
    *(void *)(v11 + 216) = v44;
    uint64_t v45 = (__n128 *)swift_allocObject();
    sub_100179F48(v45);
    uint64_t v47 = v46 + v12;
    uint64_t v48 = *(void *)(a1 + 16);
    sub_10031F6A8(v48 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v46 + v12, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v48 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v47 + v31, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 224) = sub_1001F24CC((uint64_t)v45);
    *(void *)(v11 + 232) = v49;
    *(void *)(v11 + 240) = v50;
  }
  else
  {
    sub_10031F6FC(v7, v1, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100C28110;
    sub_10017DF08(&qword_100E6CCD0);
    uint64_t v105 = *(void *)(v9 + 72);
    uint64_t v104 = v1;
    unint64_t v51 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v52 = (__n128 *)swift_allocObject();
    uint64_t v53 = sub_100183900(v52, (__n128)xmmword_100C251B0);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather10NhpContent8_Storage_nextHourPrecipitation, (uint64_t)v53 + v51, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 32) = sub_1001F24CC((uint64_t)v52);
    *(void *)(v11 + 40) = v54;
    *(void *)(v11 + 48) = v55;
    uint64_t v56 = (__n128 *)sub_10017C984();
    sub_10017E198(v56);
    sub_10031F6A8(v57 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, v58, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 56) = sub_1001F24CC((uint64_t)v52);
    *(void *)(v11 + 64) = v59;
    *(void *)(v11 + 72) = v60;
    uint64_t v61 = (__n128 *)sub_10017C984();
    sub_10017E198(v61);
    sub_10031F6A8(v62 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v63, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 80) = sub_1001F24CC((uint64_t)v52);
    *(void *)(v11 + 88) = v64;
    *(void *)(v11 + 96) = v65;
    uint64_t v66 = sub_10017C984();
    *(_OWORD *)(v66 + 16) = v107;
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather10NhpContent8_Storage_airQuality, v66 + v51, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 104) = sub_1001F24CC(v66);
    *(void *)(v11 + 112) = v67;
    *(void *)(v11 + 120) = v68;
    uint64_t v69 = sub_10017C984();
    *(_OWORD *)(v69 + 16) = v107;
    sub_10031F6A8(v1, v69 + v51, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 128) = sub_1001F24CC(v69);
    *(void *)(v11 + 136) = v70;
    *(void *)(v11 + 144) = v71;
    uint64_t v72 = (__n128 *)swift_allocObject();
    uint64_t v73 = (char *)sub_100183900(v72, (__n128)xmmword_100C25ED0) + v51;
    uint64_t v74 = a1;
    uint64_t v75 = *(void *)(a1 + 16);
    uint64_t v76 = v74;
    sub_10031F6A8(v75 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v73, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v75 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v73[v105], (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 152) = sub_1001F24CC((uint64_t)v72);
    *(void *)(v11 + 160) = v77;
    *(void *)(v11 + 168) = v78;
    uint64_t v79 = (__n128 *)swift_allocObject();
    sub_100179F48(v79);
    uint64_t v81 = v80 + v51;
    uint64_t v82 = *(void *)(v76 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_10031F6A8(v82 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, v81 + v105, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 176) = sub_1001F24CC((uint64_t)v79);
    *(void *)(v11 + 184) = v83;
    *(void *)(v11 + 192) = v84;
    uint64_t v85 = (__n128 *)swift_allocObject();
    sub_100179F48(v85);
    uint64_t v87 = v86 + v51;
    uint64_t v88 = *(void *)(v106 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_10031F6A8(v88 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, v87 + v105, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 200) = sub_1001F24CC((uint64_t)v85);
    *(void *)(v11 + 208) = v89;
    *(void *)(v11 + 216) = v90;
    uint64_t v91 = (__n128 *)swift_allocObject();
    sub_100179F48(v91);
    uint64_t v93 = v92 + v51;
    uint64_t v94 = *(void *)(v106 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_10031F6A8(v94 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, v93 + v105, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 224) = sub_1001F24CC((uint64_t)v91);
    *(void *)(v11 + 232) = v95;
    *(void *)(v11 + 240) = v96;
    uint64_t v97 = (__n128 *)swift_allocObject();
    sub_100179F48(v97);
    uint64_t v99 = v98 + v51;
    uint64_t v100 = *(void *)(v106 + 16);
    sub_10031F6A8(v100 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v98 + v51, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v100 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v99 + v105, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v11 + 248) = sub_1001F24CC((uint64_t)v97);
    *(void *)(v11 + 256) = v101;
    *(void *)(v11 + 264) = v102;
    sub_10031F75C(v104, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  }
  return v11;
}

void sub_100B59584(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = type metadata accessor for LocationComponentContainerViewModel();
  sub_100162E4C();
  uint64_t v6 = __chkstk_darwin(v5);
  __chkstk_darwin(v6);
  uint64_t v7 = type metadata accessor for LocationViewComponent();
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_10017DF08(&qword_100E64E80);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v17 = swift_retain();
  sub_1006E2E94(v17, a2);
  swift_release();
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather24LocationNhpConfiguration8_Storage_map, v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v11);
  sub_10031F75C(v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  _s7Weather24LocationCompositionStateOwst_0(v16, 0, 1, v4);
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather24LocationNhpConfiguration8_Storage_airQuality, v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v11);
  sub_10031F75C(v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather24LocationNhpConfiguration8_Storage_nextHourPrecipitation, v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v11);
  sub_10031F75C(v11, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_1002DB2E8();
}

uint64_t sub_100B597B0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t v8 = sub_10017DF08(qword_100E66490);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E65BC0);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(a1) = sub_100B5996C(a1);
  uint64_t v16 = type metadata accessor for WeatherMapOverlayKind();
  sub_100162E4C();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v15, a2, v16);
  sub_1001093B0();
  _s7Weather24LocationCompositionStateOwst_0(v18, v19, v20, v16);
  sub_1000747A4(a3, (uint64_t)v11, (void (*)(void))type metadata accessor for WeatherMapTrackingState);
  type metadata accessor for WeatherMapTrackingState(0);
  sub_1001093B0();
  _s7Weather24LocationCompositionStateOwst_0(v21, v22, v23, v24);
  sub_10006D9DC(5, (int)a1, (uint64_t)v15, 0, 0, (uint64_t)v11, a4);
  sub_1001781AC((uint64_t)v11, qword_100E66490);
  return sub_1001781AC((uint64_t)v15, &qword_100E65BC0);
}

uint64_t sub_100B5996C(uint64_t *a1)
{
  if (!sub_10058BCBC()) {
    goto LABEL_12;
  }
  if (sub_10058C0A8(*a1) && (sub_10058BF64() & 1) != 0) {
    return 1;
  }
  if (sub_10058BE08()) {
    return 0;
  }
LABEL_12:
  if (DeviceIsSlow()) {
    return 64;
  }
  return 65;
}

void *sub_100B599D0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(unsigned char *)(a1 + 17) = *((unsigned char *)a2 + 17);
    *(unsigned char *)(a1 + 18) = *((unsigned char *)a2 + 18);
    uint64_t v5 = *(int *)(a3 + 36);
    uint64_t v6 = a1 + v5;
    uint64_t v7 = (uint64_t)a2 + v5;
    uint64_t v8 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_100B59AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 36);
  uint64_t v3 = type metadata accessor for DynamicTypeSize();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

uint64_t sub_100B59B1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  uint64_t v4 = *(int *)(a3 + 36);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t sub_100B59BB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  uint64_t v4 = *(int *)(a3 + 36);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t sub_100B59C4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  uint64_t v4 = *(int *)(a3 + 36);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_100B59CE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  uint64_t v4 = *(int *)(a3 + 36);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_100B59D74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 17);
    if (v4 >= 2) {
      return v4 - 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = type metadata accessor for DynamicTypeSize();
    uint64_t v9 = a1 + *(int *)(a3 + 36);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_100B59DF4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 17) = a2 + 1;
  }
  else
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    uint64_t v8 = v5 + *(int *)(a4 + 36);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

BOOL sub_100B59E80(char a1, char a2)
{
  return sub_1001A139C(a2, a1);
}

uint64_t sub_100B59E90(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7461746E6569726FLL && a2 == 0xEB000000006E6F69;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000100CBF4D0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000100CBF530 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000100CBF4F0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000100CBF510 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x5463696D616E7964 && a2 == 0xEF657A6953657079)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

unint64_t sub_100B5A124(char a1)
{
  unint64_t result = 0x7461746E6569726FLL;
  switch(a1)
  {
    case 1:
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0x5463696D616E7964;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100B5A204()
{
  return sub_100B5A124(*v0);
}

uint64_t sub_100B5A20C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100B59E90(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100B5A234(uint64_t a1)
{
  unint64_t v2 = sub_100B5B498();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B5A270(uint64_t a1)
{
  unint64_t v2 = sub_100B5B498();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_100B5A2AC(char a1)
{
  double result = 1024.0;
  if ((a1 & 1) == 0) {
    return 0.0;
  }
  return result;
}

BOOL sub_100B5A2C4(char a1, char a2)
{
  double v2 = 1024.0;
  if (a1) {
    double v3 = 1024.0;
  }
  else {
    double v3 = 0.0;
  }
  if ((a2 & 1) == 0) {
    double v2 = 0.0;
  }
  return v3 < v2;
}

uint64_t sub_100B5A2EC(double a1)
{
  if (a1 == 1024.0) {
    unsigned int v1 = 1;
  }
  else {
    unsigned int v1 = 2;
  }
  if (a1 == 0.0) {
    return 0;
  }
  else {
    return v1;
  }
}

BOOL sub_100B5A30C(char *a1, char *a2)
{
  return sub_10088A67C(*a1, *a2);
}

Swift::Int sub_100B5A318()
{
  return sub_10065283C(*v0);
}

void sub_100B5A320(uint64_t a1)
{
  sub_1002C2718(a1, *v1);
}

Swift::Int sub_100B5A328(uint64_t a1)
{
  return sub_1002C46E4(a1, *v1);
}

uint64_t sub_100B5A330@<X0>(double *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100B5A2EC(*a1);
  *a2 = result;
  return result;
}

void sub_100B5A35C(double *a1@<X8>)
{
  *a1 = sub_100B5A2AC(*v1);
}

BOOL sub_100B5A388(char *a1, char *a2)
{
  return sub_100B5A2C4(*a1, *a2);
}

BOOL sub_100B5A394(char *a1, char *a2)
{
  return sub_100570400(*a1, *a2);
}

BOOL sub_100B5A3A0(char *a1, char *a2)
{
  return sub_10057007C(*a1, *a2);
}

BOOL sub_100B5A3AC(char *a1, char *a2)
{
  return sub_100570114(*a1, *a2);
}

void sub_100B5A3B8(void *a1@<X8>)
{
  *a1 = &off_100E08E38;
}

double sub_100B5A3C8(char a1)
{
  return dbl_100C7D0B8[a1];
}

BOOL sub_100B5A3DC(char a1, char a2)
{
  return sub_1001A139C(a2, a1);
}

uint64_t sub_100B5A3EC(double a1)
{
  if (a1 == 0.0) {
    return variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral();
  }
  if (a1 == 1024.0) {
    return static LocationSearchEntityFromStringResolver.__derived_struct_equals(_:_:)();
  }
  if (a1 == 1200.0) {
    return 2;
  }
  return 3;
}

BOOL sub_100B5A428(char *a1, char *a2)
{
  return sub_10088A610(*a1, *a2);
}

Swift::Int sub_100B5A434()
{
  return sub_10065287C(*v0);
}

void sub_100B5A43C(uint64_t a1)
{
  sub_1002C26E4(a1, *v1);
}

Swift::Int sub_100B5A444(uint64_t a1)
{
  return sub_1002C4728(a1, *v1);
}

uint64_t sub_100B5A44C@<X0>(double *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100B5A3EC(*a1);
  *a2 = result;
  return result;
}

void sub_100B5A478(double *a1@<X8>)
{
  *a1 = sub_100B5A3C8(*v1);
}

BOOL sub_100B5A4A4(char *a1, char *a2)
{
  return sub_100B5A3DC(*a1, *a2);
}

BOOL sub_100B5A4B0(char *a1, char *a2)
{
  return sub_100570428(*a1, *a2);
}

BOOL sub_100B5A4BC(char *a1, char *a2)
{
  return sub_1005700A4(*a1, *a2);
}

BOOL sub_100B5A4C8(char *a1, char *a2)
{
  return sub_10057013C(*a1, *a2);
}

void sub_100B5A4D4(void *a1@<X8>)
{
  *a1 = &off_100E060B0;
}

double sub_100B5A4E4(char a1)
{
  return dbl_100C7D0D0[a1];
}

uint64_t sub_100B5A4F8(double a1)
{
  if (a1 == 1.0) {
    return variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral();
  }
  if (a1 == 0.66) {
    return static LocationSearchEntityFromStringResolver.__derived_struct_equals(_:_:)();
  }
  if (a1 == 0.5) {
    return 2;
  }
  if (a1 == 0.33) {
    return 3;
  }
  return 4;
}

BOOL sub_100B5A54C(char *a1, char *a2)
{
  return sub_10088AC48(*a1, *a2);
}

Swift::Int sub_100B5A558()
{
  return sub_1006527D0(*v0);
}

void sub_100B5A560(uint64_t a1)
{
  sub_1002C2AF8(a1, *v1);
}

Swift::Int sub_100B5A568(uint64_t a1)
{
  return sub_1002C4500(a1, *v1);
}

uint64_t sub_100B5A570@<X0>(double *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100B5A4F8(*a1);
  *a2 = result;
  return result;
}

void sub_100B5A59C(double *a1@<X8>)
{
  *a1 = sub_100B5A4E4(*v1);
}

BOOL sub_100B5A5C8(char *a1, char *a2)
{
  return sub_100B59E80(*a1, *a2);
}

BOOL sub_100B5A5D4(char *a1, char *a2)
{
  return sub_1005703DC(*a1, *a2);
}

BOOL sub_100B5A5E0(char *a1, char *a2)
{
  return sub_100570058(*a1, *a2);
}

BOOL sub_100B5A5EC(char *a1, char *a2)
{
  return sub_1005700F0(*a1, *a2);
}

uint64_t sub_100B5A5F8(void *a1)
{
  uint64_t v4 = sub_10017DF08(&qword_100EB33A8);
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10012B938();
  sub_1001B1E64(a1, a1[3]);
  sub_100B5B498();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  type metadata accessor for UIInterfaceOrientation(0);
  sub_100B5B790(&qword_100EB33B0, type metadata accessor for UIInterfaceOrientation);
  sub_10017B02C();
  if (!v1)
  {
    type metadata accessor for UIUserInterfaceSizeClass(0);
    sub_100B5B790(&qword_100EB33B8, type metadata accessor for UIUserInterfaceSizeClass);
    sub_10017B02C();
    sub_100B5B5C8();
    sub_10019F868();
    sub_100B5B614();
    sub_10019F868();
    sub_100B5B660();
    sub_10019F868();
    type metadata accessor for DisplayMetrics();
    type metadata accessor for DynamicTypeSize();
    sub_100B5B790(&qword_100EB33D8, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t sub_100B5A88C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = type metadata accessor for DynamicTypeSize();
  sub_100179C0C();
  uint64_t v20 = v7;
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v21 = sub_10017DF08(&qword_100EB3368);
  sub_100179C0C();
  uint64_t v19 = v12;
  __chkstk_darwin(v13);
  sub_10012B938();
  uint64_t v14 = type metadata accessor for DisplayMetrics();
  __chkstk_darwin(v14);
  sub_100125FF8();
  sub_1001B1E64(a1, a1[3]);
  sub_100B5B498();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2)
  {
    uint64_t v16 = (uint64_t)a1;
  }
  else
  {
    uint64_t v17 = v11;
    type metadata accessor for UIInterfaceOrientation(0);
    sub_100B5B790(&qword_100EB3378, type metadata accessor for UIInterfaceOrientation);
    sub_1001D22B0();
    sub_100181C00();
    *(void *)uint64_t v4 = v22;
    type metadata accessor for UIUserInterfaceSizeClass(0);
    sub_100B5B790(&qword_100EB3380, type metadata accessor for UIUserInterfaceSizeClass);
    sub_1001D22B0();
    sub_100181C00();
    *(void *)(v4 + 8) = v22;
    sub_100B5B4E4();
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    *(unsigned char *)(v4 + 16) = v22;
    sub_100B5B530();
    sub_10017EED4();
    *(unsigned char *)(v4 + 17) = v22;
    sub_100B5B57C();
    sub_10017EED4();
    *(unsigned char *)(v4 + 18) = v22;
    sub_100B5B790(&qword_100EB33A0, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v3, v21);
    uint64_t v16 = (uint64_t)a1;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v4 + *(int *)(v14 + 36), v17, v6);
    sub_1000EB47C(v4, a2);
  }
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v16);
}

uint64_t sub_100B5AC5C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100B5A88C(a1, a2);
}

uint64_t sub_100B5AC74(void *a1)
{
  return sub_100B5A5F8(a1);
}

void sub_100B5AC8C()
{
}

uint64_t sub_100B5ACA4(uint64_t a1)
{
  return sub_1008BCBF0(a1);
}

uint64_t sub_100B5ACBC()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100B5AD1C()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100B5AD6C()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100B5ADCC()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100B5AE1C()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100B5AE7C()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_100B5AECC@<X0>(uint64_t *a1@<X8>)
{
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C31880;
  *(void *)(inited + 32) = 0x7461746E6569726FLL;
  *(void *)(inited + 40) = 0xEB000000006E6F69;
  uint64_t v4 = *v1;
  type metadata accessor for UIInterfaceOrientation(0);
  *(void *)(inited + 48) = v4;
  *(void *)(inited + 72) = v5;
  *(void *)(inited + 80) = 0xD000000000000013;
  sub_100162AD8();
  *(void *)(inited + 88) = v6;
  uint64_t v7 = v1[1];
  type metadata accessor for UIUserInterfaceSizeClass(0);
  *(void *)(inited + 96) = v7;
  *(void *)(inited + 120) = v8;
  *(void *)(inited + 128) = 0xD000000000000013;
  sub_100162AD8();
  *(void *)(inited + 136) = v9;
  *(unsigned char *)(inited + 144) = *((unsigned char *)v1 + 17);
  *(void *)(inited + 168) = &unk_100E38C18;
  *(void *)(inited + 176) = 0xD000000000000014;
  sub_100162AD8();
  *(void *)(inited + 184) = v10;
  *(unsigned char *)(inited + 192) = *((unsigned char *)v1 + 18);
  *(void *)(inited + 216) = &unk_100E38B88;
  *(void *)(inited + 224) = 0xD000000000000010;
  sub_100162AD8();
  *(void *)(inited + 232) = v11;
  LOBYTE(v11) = *((unsigned char *)v1 + 16);
  *(void *)(inited + 264) = &unk_100E38CA8;
  *(unsigned char *)(inited + 240) = v11;
  Dictionary.init(dictionaryLiteral:)();
  a1[3] = sub_10017DF08(&qword_100EB33F8);
  a1[4] = sub_1001246C8(&qword_100EB3400, &qword_100EB33F8);
  sub_100170694(a1);
  type metadata accessor for DisplayMetrics();
  return ShortDescription.init(name:_:)();
}

uint64_t sub_100B5B0A8()
{
  sub_100B5B790(&qword_100E9B660, (void (*)(uint64_t))type metadata accessor for DisplayMetrics);

  return ShortDescribable.description.getter();
}

uint64_t sub_100B5B114@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_10017DF08(&qword_100EB3408);
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  Dictionary.init(dictionaryLiteral:)();
  ShortDescription.init(name:_:)();
  a1[3] = v2;
  a1[4] = sub_1001246C8(&qword_100EB3410, &qword_100EB3408);
  uint64_t v9 = sub_100170694(a1);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v4 + 32))(v9, v8, v2);
}

uint64_t sub_100B5B35C@<X0>(uint64_t *a1@<X8>)
{
  return sub_100B5B114(a1);
}

uint64_t sub_100B5B364()
{
  sub_100B5B7D8();

  return ShortDescribable.description.getter();
}

unint64_t sub_100B5B3A4()
{
  unint64_t result = qword_100EB3350;
  if (!qword_100EB3350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB3350);
  }
  return result;
}

uint64_t sub_100B5B3F0()
{
  return sub_100B5B790(&qword_100EB3358, (void (*)(uint64_t))type metadata accessor for DisplayMetrics);
}

uint64_t sub_100B5B438(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100EB3360);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100B5B498()
{
  unint64_t result = qword_100EB3370;
  if (!qword_100EB3370)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB3370);
  }
  return result;
}

unint64_t sub_100B5B4E4()
{
  unint64_t result = qword_100EB3388;
  if (!qword_100EB3388)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB3388);
  }
  return result;
}

unint64_t sub_100B5B530()
{
  unint64_t result = qword_100EB3390;
  if (!qword_100EB3390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB3390);
  }
  return result;
}

unint64_t sub_100B5B57C()
{
  unint64_t result = qword_100EB3398;
  if (!qword_100EB3398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB3398);
  }
  return result;
}

unint64_t sub_100B5B5C8()
{
  unint64_t result = qword_100EB33C0;
  if (!qword_100EB33C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB33C0);
  }
  return result;
}

unint64_t sub_100B5B614()
{
  unint64_t result = qword_100EB33C8;
  if (!qword_100EB33C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB33C8);
  }
  return result;
}

unint64_t sub_100B5B660()
{
  unint64_t result = qword_100EB33D0;
  if (!qword_100EB33D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB33D0);
  }
  return result;
}

unint64_t sub_100B5B6AC()
{
  unint64_t result = qword_100EB33E0;
  if (!qword_100EB33E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB33E0);
  }
  return result;
}

unint64_t sub_100B5B6F8()
{
  unint64_t result = qword_100EB33E8;
  if (!qword_100EB33E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB33E8);
  }
  return result;
}

unint64_t sub_100B5B744()
{
  unint64_t result = qword_100EB33F0;
  if (!qword_100EB33F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB33F0);
  }
  return result;
}

uint64_t sub_100B5B790(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100B5B7D8()
{
  unint64_t result = qword_100EB3418;
  if (!qword_100EB3418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB3418);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DisplayMetrics.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B5B8F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DisplayMetrics.CodingKeys()
{
  return &type metadata for DisplayMetrics.CodingKeys;
}

unsigned char *sub_100B5B928(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B5B9F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *sub_100B5BA1C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B5BAE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_100B5BB10(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B5BBDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

unint64_t sub_100B5BC08()
{
  unint64_t result = qword_100EB3420;
  if (!qword_100EB3420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB3420);
  }
  return result;
}

uint64_t sub_100B5BC54()
{
  return sub_1001246C8(&qword_100EB3428, &qword_100EB3430);
}

unint64_t sub_100B5BC94()
{
  unint64_t result = qword_100EB3438;
  if (!qword_100EB3438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB3438);
  }
  return result;
}

uint64_t sub_100B5BCE0()
{
  return sub_1001246C8(&qword_100EB3440, &qword_100EB3448);
}

unint64_t sub_100B5BD20()
{
  unint64_t result = qword_100EB3450;
  if (!qword_100EB3450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB3450);
  }
  return result;
}

unint64_t sub_100B5BD70()
{
  unint64_t result = qword_100EB3458;
  if (!qword_100EB3458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB3458);
  }
  return result;
}

unint64_t sub_100B5BDC0()
{
  unint64_t result = qword_100EB3460;
  if (!qword_100EB3460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB3460);
  }
  return result;
}

unint64_t sub_100B5BE10()
{
  unint64_t result = qword_100EB3468;
  if (!qword_100EB3468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB3468);
  }
  return result;
}

uint64_t sub_100B5BE5C()
{
  uint64_t v0 = type metadata accessor for SettingAction.PostInstruction();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SettingAction();
  swift_allocObject();
  SettingAction.init(_:_:)();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for SettingAction.PostInstruction.killProcess(_:), v0);
  uint64_t v4 = dispatch thunk of SettingAction.then(_:)();
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  qword_100F52448 = v4;
  return result;
}

uint64_t sub_100B5BFB4()
{
  if (qword_100E62690 != -1) {
    swift_once();
  }
  return dispatch thunk of Updatable.save<A>(setting:value:)();
}

uint64_t *sub_100B5C050(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = type metadata accessor for Date();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
      }
      type metadata accessor for MoonDetailSelectedDate();
      swift_getEnumCaseMultiPayload();
      uint64_t v8 = type metadata accessor for Date();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100B5C1D0(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1
    || !result
    && (type metadata accessor for MoonDetailSelectedDate(),
        uint64_t result = swift_getEnumCaseMultiPayload(),
        result <= 2))
  {
    uint64_t v3 = type metadata accessor for Date();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *sub_100B5C26C(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = type metadata accessor for Date();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    type metadata accessor for MoonDetailSelectedDate();
    swift_getEnumCaseMultiPayload();
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_100B5C3A8(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100B5CCF0((uint64_t)a1, (void (*)(void))type metadata accessor for MoonDetailViewAction);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = type metadata accessor for Date();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
      }
      type metadata accessor for MoonDetailSelectedDate();
      swift_getEnumCaseMultiPayload();
      uint64_t v7 = type metadata accessor for Date();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_100B5C508(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = type metadata accessor for Date();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    type metadata accessor for MoonDetailSelectedDate();
    swift_getEnumCaseMultiPayload();
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_100B5C644(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100B5CCF0((uint64_t)a1, (void (*)(void))type metadata accessor for MoonDetailViewAction);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = type metadata accessor for Date();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
      }
      type metadata accessor for MoonDetailSelectedDate();
      swift_getEnumCaseMultiPayload();
      uint64_t v7 = type metadata accessor for Date();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100B5C7A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v3 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v40 = v4;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = type metadata accessor for MoonDetailSelectedDate();
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  type metadata accessor for MoonDetailViewAction();
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_1001626E0();
  uint64_t v17 = (char *)(v16 - v15);
  uint64_t v18 = sub_10017DF08(&qword_100EB3520);
  sub_100179C0C();
  uint64_t v20 = v19;
  __chkstk_darwin(v21);
  sub_1001626E0();
  uint64_t v24 = v23 - v22;
  sub_100B5CC90(v2, (uint64_t)v17, (void (*)(void))type metadata accessor for MoonDetailViewAction);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v40 + 32))(v8, v17, v3);
      sub_10017DF08(&qword_100E635E0);
      uint64_t inited = (__n128 *)swift_initStackObject();
      uint64_t v27 = sub_100180C80(inited, (__n128)xmmword_100C251B0);
      inited[2].n128_u64[0] = v28;
      inited[2].n128_u64[1] = v29;
      inited[4].n128_u64[1] = v3;
      uint64_t v30 = sub_100170694((uint64_t *)v27);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v40 + 16))(v30, v8, v3);
      Dictionary.init(dictionaryLiteral:)();
      ShortDescription.init(name:_:)();
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v8, v3);
    }
    else
    {
      char v36 = *v17;
      sub_10017DF08(&qword_100E635E0);
      uint64_t v37 = swift_initStackObject();
      *(_OWORD *)(v37 + 16) = xmmword_100C251B0;
      *(void *)(v37 + 32) = 0x6E694B776F727261;
      *(void *)(v37 + 40) = 0xE900000000000064;
      *(void *)(v37 + 72) = &type metadata for MoonScrubberHeaderArrowKind;
      *(unsigned char *)(v37 + 48) = v36;
      Dictionary.init(dictionaryLiteral:)();
      ShortDescription.init(name:_:)();
    }
  }
  else
  {
    sub_10041309C((uint64_t)v17, v13);
    sub_10017DF08(&qword_100E635E0);
    uint64_t v31 = (__n128 *)swift_initStackObject();
    uint64_t v32 = sub_100180C80(v31, (__n128)xmmword_100C251B0);
    v31[2].n128_u64[0] = v33;
    v31[2].n128_u64[1] = v34;
    v31[4].n128_u64[1] = v9;
    uint64_t v35 = sub_100170694((uint64_t *)v32);
    sub_100B5CC90(v13, (uint64_t)v35, (void (*)(void))type metadata accessor for MoonDetailSelectedDate);
    Dictionary.init(dictionaryLiteral:)();
    ShortDescription.init(name:_:)();
    sub_100B5CCF0(v13, (void (*)(void))type metadata accessor for MoonDetailSelectedDate);
  }
  a1[3] = v18;
  a1[4] = sub_100B5CC3C();
  uint64_t v38 = sub_100170694(a1);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v20 + 32))(v38, v24, v18);
}

uint64_t sub_100B5CBB0()
{
  sub_100B5CD48(&qword_100EB3530);

  return ShortDescribable.description.getter();
}

uint64_t sub_100B5CC08()
{
  return sub_100B5CD48(&qword_100EB3518);
}

unint64_t sub_100B5CC3C()
{
  unint64_t result = qword_100EB3528;
  if (!qword_100EB3528)
  {
    sub_10018C6DC(&qword_100EB3520);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB3528);
  }
  return result;
}

uint64_t sub_100B5CC90(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_100B5CCF0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100B5CD48(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for MoonDetailViewAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100B5CD8C(uint64_t a1)
{
  uint64_t v424 = *v1;
  sub_10017DF08(&qword_100E66CC8);
  sub_100179C0C();
  uint64_t v428 = v6;
  uint64_t v429 = v5;
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v427 = v7;
  sub_10017DF08(&qword_100E66CA0);
  sub_100179C0C();
  uint64_t v425 = v9;
  uint64_t v426 = v8;
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v431 = v10;
  sub_100129064();
  uint64_t v451 = type metadata accessor for CurrentWeather();
  sub_100179C0C();
  uint64_t v457 = v11;
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v453 = v13;
  uint64_t v14 = sub_10017DF08(&qword_100E6B8B8);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_100162EF8();
  uint64_t v430 = v16;
  sub_1001626D4();
  __chkstk_darwin(v17);
  sub_100128F8C();
  uint64_t v405 = v18;
  type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v396 = v20;
  uint64_t v397 = v19;
  __chkstk_darwin(v19);
  sub_100109314();
  uint64_t v395 = v21;
  sub_100129064();
  uint64_t v422 = type metadata accessor for WeatherMapOverlayKind();
  sub_100179C0C();
  uint64_t v404 = v22;
  __chkstk_darwin(v23);
  sub_100162EF8();
  uint64_t v398 = v24;
  sub_1001626D4();
  __chkstk_darwin(v25);
  sub_100128F8C();
  uint64_t v393 = v26;
  uint64_t v27 = sub_100129064();
  uint64_t v410 = type metadata accessor for LocationViewMapPosition.LocationMapConfiguration(v27);
  sub_100162E4C();
  __chkstk_darwin(v28);
  sub_100109314();
  v411 = v29;
  uint64_t v30 = sub_10017DF08(&qword_100EB35F0);
  uint64_t v31 = sub_100109308(v30);
  __chkstk_darwin(v31);
  sub_100162EF8();
  uint64_t v420 = v32;
  sub_1001626D4();
  __chkstk_darwin(v33);
  sub_100109770();
  uint64_t v413 = v34;
  sub_1001626D4();
  __chkstk_darwin(v35);
  sub_100128F8C();
  uint64_t v447 = v36;
  sub_100129064();
  uint64_t HourPrecipitationComponentParameters = type metadata accessor for NextHourPrecipitationComponentParameters();
  sub_100162E4C();
  __chkstk_darwin(v37);
  sub_100109314();
  uint64_t v390 = v38;
  uint64_t v39 = type metadata accessor for NewsArticleComponent();
  uint64_t v40 = sub_100109308(v39);
  __chkstk_darwin(v40);
  sub_100162EF8();
  uint64_t v400 = v41;
  sub_1001626D4();
  __chkstk_darwin(v42);
  sub_100109770();
  uint64_t v399 = v43;
  sub_1001626D4();
  __chkstk_darwin(v44);
  sub_100109770();
  uint64_t v394 = v45;
  sub_1001626D4();
  __chkstk_darwin(v46);
  sub_100109770();
  uint64_t v392 = v47;
  sub_1001626D4();
  __chkstk_darwin(v48);
  sub_100109770();
  uint64_t v391 = v49;
  sub_1001626D4();
  __chkstk_darwin(v50);
  sub_100128F8C();
  uint64_t v387 = v51;
  uint64_t v444 = type metadata accessor for WeatherAlert.Prominence();
  sub_100179C0C();
  uint64_t v452 = v52;
  __chkstk_darwin(v53);
  sub_100109314();
  uint64_t v443 = v54;
  uint64_t v55 = sub_10017DF08(&qword_100E6E830);
  uint64_t v56 = sub_100109308(v55);
  __chkstk_darwin(v56);
  sub_100162EF8();
  v438 = v57;
  sub_1001626D4();
  __chkstk_darwin(v58);
  sub_100109770();
  uint64_t v437 = v59;
  sub_1001626D4();
  __chkstk_darwin(v60);
  sub_100109770();
  uint64_t v386 = v61;
  sub_1001626D4();
  __chkstk_darwin(v62);
  sub_100109770();
  uint64_t v388 = v63;
  sub_1001626D4();
  __chkstk_darwin(v64);
  sub_100128F8C();
  v407 = v65;
  uint64_t v464 = type metadata accessor for LocationViewComponent();
  sub_100179C0C();
  uint64_t v423 = v66;
  __chkstk_darwin(v67);
  sub_100162EF8();
  uint64_t v403 = v68;
  sub_1001626D4();
  __chkstk_darwin(v69);
  sub_100109770();
  uint64_t v402 = v70;
  sub_1001626D4();
  __chkstk_darwin(v71);
  sub_100109770();
  uint64_t v446 = v72;
  sub_1001626D4();
  __chkstk_darwin(v73);
  sub_100109770();
  uint64_t v384 = v74;
  sub_1001626D4();
  __chkstk_darwin(v75);
  sub_100109770();
  uint64_t v385 = v76;
  sub_1001626D4();
  __chkstk_darwin(v77);
  sub_100109770();
  v461 = v78;
  sub_1001626D4();
  __chkstk_darwin(v79);
  sub_100128F8C();
  uint64_t v401 = v80;
  uint64_t v81 = sub_10017DF08(&qword_100E855C0);
  uint64_t v82 = sub_100109308(v81);
  __chkstk_darwin(v82);
  sub_100162EF8();
  uint64_t v433 = v83;
  sub_1001626D4();
  __chkstk_darwin(v84);
  sub_100109770();
  uint64_t v419 = v85;
  sub_1001626D4();
  __chkstk_darwin(v86);
  sub_100109770();
  uint64_t v412 = v87;
  sub_1001626D4();
  __chkstk_darwin(v88);
  sub_100109770();
  uint64_t v409 = v89;
  sub_1001626D4();
  __chkstk_darwin(v90);
  sub_100109770();
  uint64_t v408 = v91;
  sub_1001626D4();
  __chkstk_darwin(v92);
  sub_100109770();
  uint64_t v406 = v93;
  sub_1001626D4();
  __chkstk_darwin(v94);
  uint64_t v96 = (char *)&v383 - v95;
  uint64_t v97 = type metadata accessor for NewsDataModel();
  uint64_t v98 = sub_100109308(v97);
  __chkstk_darwin(v98);
  sub_1001626E0();
  uint64_t v101 = (void (**)(void, void, void))(v100 - v99);
  uint64_t v455 = type metadata accessor for PreprocessedWeatherData();
  sub_100162E4C();
  __chkstk_darwin(v102);
  uint64_t v103 = sub_100152344();
  v439 = (__n128 *)type metadata accessor for WeatherData(v103);
  sub_100162E4C();
  __chkstk_darwin(v104);
  sub_100162EF8();
  uint64_t v421 = v105;
  sub_1001626D4();
  __chkstk_darwin(v106);
  char v108 = (char *)&v383 - v107;
  type metadata accessor for Location();
  sub_100179C0C();
  __chkstk_darwin(v109);
  sub_10008B8C0();
  uint64_t v434 = v110;
  char v111 = *(uint64_t (**)())(v110 + 16);
  uint64_t v450 = v112;
  v440 = v111;
  v441 = (void *)(v110 + 16);
  ((void (*)(uint64_t, uint64_t))v111)(v3, a1);
  type metadata accessor for LocationViewConfigurationInputs();
  sub_100B6417C();
  sub_10014FF5C(a1 + v113, (uint64_t)v108, (void (*)(void))type metadata accessor for WeatherData);
  uint64_t v114 = a1 + *((int *)v1 + 6);
  uint64_t v462 = v2;
  sub_10014FF5C(v114, v2, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
  sub_10014FF5C(a1 + *((int *)v1 + 7), (uint64_t)v101, (void (*)(void))type metadata accessor for NewsDataModel);
  uint64_t v115 = *((int *)v1 + 9);
  LODWORD(v448) = *(unsigned __int8 *)(a1 + *((int *)v1 + 8));
  int v445 = *(unsigned __int8 *)(a1 + v115);
  uint64_t v116 = *((int *)v1 + 11);
  int v117 = *(unsigned __int8 *)(a1 + *((int *)v1 + 10));
  uint64_t v417 = a1;
  LODWORD(v454) = *(unsigned __int8 *)(a1 + v116);
  sub_10018440C(v1 + 2, v1[5]);
  int v436 = v117;
  v418 = sub_10005DF64((uint64_t)v108, v117);
  uint64_t v119 = v118;
  char v120 = sub_1001B1E64(v1 + 7, v1[10]);
  sub_10018440C((void *)(*v120 + 16), *(void *)(*v120 + 40));
  v459 = v96;
  v435 = v101;
  sub_1001E7608(v101, v119, (uint64_t)v96);
  type metadata accessor for LocationViewConfigurationBuilder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = _swiftEmptyArrayStorage;
  uint64_t v432 = inited + 16;
  *(void *)(inited + 24) = &_swiftEmptySetSingleton;
  *(void *)&long long v460 = v1;
  uint64_t v122 = v1[10];
  v442 = (char *)(v1 + 7);
  sub_1001B1E64(v1 + 7, v122);
  uint64_t v123 = v452;
  uint64_t v414 = *(void *)(v452 + 104);
  uint64_t v415 = v452 + 104;
  sub_1001649D0();
  v124();
  uint64_t v125 = v407;
  uint64_t v458 = v3;
  v456 = v108;
  *(void *)&long long v449 = v119;
  sub_1000C1470(v407);
  uint64_t v126 = v123 + 8;
  v127 = *(void (**)(void))(v123 + 8);
  uint64_t v452 = v126;
  sub_100127BA4();
  v127();
  sub_10012B520((uint64_t)v125, 1, v464);
  if (v189)
  {
    sub_100178110((uint64_t)v125, &qword_100E6E830);
  }
  else
  {
    uint64_t v128 = v401;
    sub_100178CEC((uint64_t)v125, v401, (void (*)(void))type metadata accessor for LocationViewComponent);
    sub_1000C13A0(v128);
    sub_1000C134C(v128, (void (*)(void))type metadata accessor for LocationViewComponent);
  }
  uint64_t v129 = inited;
  uint64_t v130 = v406;
  sub_10006DF38((uint64_t)v459, v406, &qword_100E855C0);
  uint64_t v131 = type metadata accessor for NewsComponentPosition();
  uint64_t v132 = sub_1001A1D34();
  sub_10012B520(v132, v133, v131);
  uint64_t v134 = v437;
  uint64_t v135 = (uint64_t)v418;
  v416 = v127;
  if (v189)
  {
    sub_100178110(v130, &qword_100E855C0);
  }
  else
  {
    sub_1001DE240();
    if (swift_getEnumCaseMultiPayload())
    {
      int v137 = type metadata accessor for NewsComponentPosition;
      uint64_t v138 = v130;
    }
    else
    {
      uint64_t v139 = v387;
      sub_100178CEC(v130, v387, (void (*)(void))type metadata accessor for NewsArticleComponent);
      sub_1001D4004(v139, v140, (void (*)(void))type metadata accessor for NewsArticleComponent);
      swift_storeEnumTagMultiPayload();
      sub_1000C13A0(v130);
      sub_1000C134C(v130, (void (*)(void))type metadata accessor for LocationViewComponent);
      int v137 = type metadata accessor for NewsArticleComponent;
      uint64_t v138 = v139;
    }
    sub_1000C134C(v138, (void (*)(void))v137);
  }
  if (*(void *)(v135 + 16))
  {
    Hasher.init(_seed:)();
    sub_100182298();
    Hasher._finalize()();
    sub_10018B4EC();
    sub_100199BEC();
    if (v141)
    {
      while (1)
      {
        switch(*(unsigned char *)(*(void *)(v135 + 48) + v3))
        {
          case 1:
            sub_100184848();
            goto LABEL_20;
          case 2:
            sub_100182708();
            break;
          case 3:
            sub_100126140();
            break;
          default:
            break;
        }
        char v142 = sub_10018A180();
        swift_bridgeObjectRelease();
        if (v142) {
          break;
        }
        sub_1001A4C00();
        if ((v143 & 1) == 0) {
          goto LABEL_28;
        }
      }
LABEL_20:
      uint64_t v3 = v390;
      sub_10019AF38();
      v144();
      uint64_t v145 = HourPrecipitationComponentParameters;
      sub_10014FF5C((uint64_t)v456, v3 + *(int *)(HourPrecipitationComponentParameters + 20), (void (*)(void))type metadata accessor for WeatherData);
      *(void *)(v3 + *(int *)(v145 + 24)) = _swiftEmptyArrayStorage;
      *(unsigned char *)(v3 + *(int *)(v145 + 28)) = v436;
      sub_10018440C(v442, *(void *)(v460 + 80));
      uint64_t v146 = v388;
      sub_100A63440(v3, v388);
      sub_10012B520(v146, 1, v464);
      if (v189)
      {
        sub_1000C134C(v3, (void (*)(void))type metadata accessor for NextHourPrecipitationComponentParameters);
        sub_100178110(v146, &qword_100E6E830);
      }
      else
      {
        uint64_t v147 = v146;
        uint64_t v148 = v385;
        sub_100178CEC(v147, v385, (void (*)(void))type metadata accessor for LocationViewComponent);
        sub_1000C13A0(v148);
        if (v454 & 1) != 0 || (v448)
        {
          uint64_t v149 = v148;
        }
        else
        {
          uint64_t v150 = v461;
          sub_10019AF38();
          v151();
          swift_storeEnumTagMultiPayload();
          sub_1000C13A0((uint64_t)v150);
          sub_1000C134C((uint64_t)v150, (void (*)(void))type metadata accessor for LocationViewComponent);
          uint64_t v149 = v385;
        }
        sub_1000C134C(v149, (void (*)(void))type metadata accessor for LocationViewComponent);
        sub_1000C134C(v3, (void (*)(void))type metadata accessor for NextHourPrecipitationComponentParameters);
      }
    }
LABEL_28:
    if (*(void *)(v135 + 16))
    {
      Hasher.init(_seed:)();
      sub_1001D0FCC();
      Hasher._finalize()();
      sub_10018B4EC();
      sub_100199BEC();
      if (v152)
      {
        while (2)
        {
          switch(*(unsigned char *)(*(void *)(v135 + 48) + v3))
          {
            case 1:
              goto LABEL_33;
            case 2:
              sub_100182708();
              goto LABEL_33;
            case 3:
              sub_100126140();
LABEL_33:
              char v153 = sub_10019B7D8();
              swift_bridgeObjectRelease();
              if (v153) {
                goto LABEL_37;
              }
              sub_1001A4C00();
              if ((v154 & 1) == 0) {
                break;
              }
              continue;
            default:
              swift_bridgeObjectRelease();
LABEL_37:
              sub_10018440C(v442, *(void *)(v460 + 80));
              uint64_t v155 = v386;
              sub_1000277CC(v386);
              uint64_t v156 = sub_1001A1D34();
              sub_10012B520(v156, v157, v464);
              if (v189)
              {
                sub_100178110(v155, &qword_100E6E830);
              }
              else
              {
                uint64_t v158 = v155;
                uint64_t v159 = v384;
                sub_100178CEC(v158, v384, (void (*)(void))type metadata accessor for LocationViewComponent);
                sub_1000C13A0(v159);
                sub_1000C134C(v159, (void (*)(void))type metadata accessor for LocationViewComponent);
              }
              goto LABEL_40;
          }
          break;
        }
      }
    }
  }
LABEL_40:
  BOOL v160 = sub_1002190D8();
  BOOL v161 = v160;
  char v162 = v454 ^ 1 | v448;
  if ((v162 & 1) == 0 && !v160)
  {
    v163 = v461;
    sub_10012BA78();
    swift_storeEnumTagMultiPayload();
    sub_1000C13A0((uint64_t)v163);
    sub_1000C134C((uint64_t)v163, (void (*)(void))type metadata accessor for LocationViewComponent);
  }
  uint64_t v164 = v408;
  sub_10006DF38((uint64_t)v459, v408, &qword_100E855C0);
  uint64_t v165 = sub_10011C004();
  sub_10012B520(v165, v166, v131);
  uint64_t v167 = v447;
  uint64_t v454 = v131;
  if (v189)
  {
    sub_100178110(v164, &qword_100E855C0);
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v169 = v391;
      sub_100178CEC(v164, v391, (void (*)(void))type metadata accessor for NewsArticleComponent);
      uint64_t v170 = v461;
      sub_10014FF5C(v169, (uint64_t)v461, (void (*)(void))type metadata accessor for NewsArticleComponent);
      swift_storeEnumTagMultiPayload();
      sub_1000C13A0((uint64_t)v170);
      sub_1000C134C((uint64_t)v170, (void (*)(void))type metadata accessor for LocationViewComponent);
      uint64_t v171 = type metadata accessor for NewsArticleComponent;
      uint64_t v172 = v169;
    }
    else
    {
      uint64_t v171 = type metadata accessor for NewsComponentPosition;
      uint64_t v172 = v164;
    }
    sub_1000C134C(v172, (void (*)(void))v171);
  }
  uint64_t v173 = v446;
  sub_100B5F478(v462, v135, (uint64_t)_swiftEmptyArrayStorage, v436, v446);
  sub_1000C13A0(v173);
  if (!(v162 & 1 | !v161))
  {
    uint64_t v174 = v461;
    swift_storeEnumTagMultiPayload();
    sub_1000C13A0((uint64_t)v174);
    sub_1000C134C((uint64_t)v174, (void (*)(void))type metadata accessor for LocationViewComponent);
  }
  uint64_t v463 = v129;
  uint64_t v175 = (int *)v410;
  v176 = v411;
  sub_10019AF38();
  v177();
  uint64_t v178 = (uint64_t)v456;
  sub_10014FF5C((uint64_t)v456, (uint64_t)&v176[v175[7]], (void (*)(void))type metadata accessor for WeatherData);
  uint64_t v179 = (uint64_t)&v176[v175[8]];
  v441 = (void *)(v460 + 96);
  sub_10020D948(v460 + 96, v179);
  unsigned char *v176 = v448;
  v180 = (uint64_t *)&v176[v175[6]];
  uint64_t v181 = v449;
  uint64_t *v180 = v135;
  v180[1] = v181;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100295B08(v176, v167);
  sub_1000C134C((uint64_t)v176, (void (*)(void))type metadata accessor for LocationViewMapPosition.LocationMapConfiguration);
  uint64_t v182 = v413;
  sub_10006DF38(v167, v413, &qword_100EB35F0);
  uint64_t v183 = type metadata accessor for LocationViewMapPosition(0);
  uint64_t v184 = sub_10011C004();
  sub_10012B520(v184, v185, v183);
  if (v189)
  {
    sub_100178110(v182, &qword_100EB35F0);
  }
  else
  {
    uint64_t v186 = sub_10011C004();
    uint64_t v187 = v422;
    sub_10012B520(v186, v188, v422);
    if (v189)
    {
      sub_1000C134C(v182, (void (*)(void))type metadata accessor for LocationViewMapPosition);
    }
    else
    {
      uint64_t v190 = v404;
      uint64_t v191 = v393;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v404 + 32))(v393, v182, v187);
      v192 = v461;
      sub_100162808();
      v193();
      uint64_t v194 = type metadata accessor for MapComponent();
      sub_10014FF5C(v178, (uint64_t)&v192[*(int *)(v194 + 20)], (void (*)(void))type metadata accessor for WeatherData);
      swift_storeEnumTagMultiPayload();
      sub_1001D40C4();
      sub_1000C134C((uint64_t)v192, (void (*)(void))type metadata accessor for LocationViewComponent);
      uint64_t v195 = v190;
      uint64_t v134 = v437;
      (*(void (**)(uint64_t, uint64_t))(v195 + 8))(v191, v187);
    }
  }
  v196 = v442;
  uint64_t v197 = v409;
  sub_10006DF38((uint64_t)v459, v409, &qword_100E855C0);
  sub_10012B520(v197, 1, v454);
  if (v189)
  {
    sub_100178110(v197, &qword_100E855C0);
  }
  else
  {
    int v198 = swift_getEnumCaseMultiPayload();
    if (v198 == 2)
    {
      uint64_t v199 = v197;
      uint64_t v197 = v392;
      sub_100178CEC(v199, v392, (void (*)(void))type metadata accessor for NewsArticleComponent);
      v200 = v461;
      sub_10014FF5C(v197, (uint64_t)v461, (void (*)(void))type metadata accessor for NewsArticleComponent);
      swift_storeEnumTagMultiPayload();
      sub_1001D40C4();
      sub_1000C134C((uint64_t)v200, (void (*)(void))type metadata accessor for LocationViewComponent);
      v201 = type metadata accessor for NewsArticleComponent;
    }
    else
    {
      v201 = type metadata accessor for NewsComponentPosition;
    }
    sub_1000C134C(v197, (void (*)(void))v201);
  }
  v202 = v461;
  sub_100010B10(v462, (uint64_t)v461);
  sub_1001D40C4();
  sub_1000C134C((uint64_t)v202, (void (*)(void))type metadata accessor for LocationViewComponent);
  if (!v445)
  {
    v203 = v461;
    unsigned char *v461 = 0;
    swift_storeEnumTagMultiPayload();
    sub_1001D40C4();
    sub_1000C134C((uint64_t)v203, (void (*)(void))type metadata accessor for LocationViewComponent);
  }
  uint64_t v204 = v412;
  sub_10006DF38((uint64_t)v459, v412, &qword_100E855C0);
  sub_10012B520(v204, 1, v454);
  if (v189)
  {
    sub_100178110(v204, &qword_100E855C0);
  }
  else
  {
    int v205 = swift_getEnumCaseMultiPayload();
    if (v205 == 3)
    {
      uint64_t v206 = v204;
      uint64_t v204 = v394;
      sub_100178CEC(v206, v394, (void (*)(void))type metadata accessor for NewsArticleComponent);
      v207 = v461;
      sub_10014FF5C(v204, (uint64_t)v461, (void (*)(void))type metadata accessor for NewsArticleComponent);
      swift_storeEnumTagMultiPayload();
      sub_1001D40C4();
      sub_1000C134C((uint64_t)v207, (void (*)(void))type metadata accessor for LocationViewComponent);
      v208 = type metadata accessor for NewsArticleComponent;
    }
    else
    {
      v208 = type metadata accessor for NewsComponentPosition;
    }
    sub_1000C134C(v204, (void (*)(void))v208);
  }
  v209 = v438;
  uint64_t v210 = v420;
  sub_10018440C(v196, *(void *)(v460 + 80));
  sub_1000277CC(v134);
  uint64_t v211 = sub_100127A44();
  sub_10012B520(v211, v212, v464);
  if (v189)
  {
    sub_100178110(v134, &qword_100E6E830);
  }
  else
  {
    uint64_t v213 = v134;
    uint64_t v214 = v402;
    sub_100178CEC(v213, v402, (void (*)(void))type metadata accessor for LocationViewComponent);
    sub_1000C13A0(v214);
    sub_1000C134C(v214, (void (*)(void))type metadata accessor for LocationViewComponent);
  }
  sub_10006DF38(v167, v210, &qword_100EB35F0);
  sub_10012B520(v210, 1, v183);
  if (v189)
  {
    sub_100178110(v210, &qword_100EB35F0);
    v215 = v439;
  }
  else
  {
    uint64_t v216 = v422;
    int v217 = _s7Weather24LocationCompositionStateOwet_0(v210, 1, v422);
    sub_1000C134C(v210, (void (*)(void))type metadata accessor for LocationViewMapPosition);
    v215 = v439;
    if (v217 == 1)
    {
      sub_1001B1E64(v441, *(void *)(v460 + 120));
      uint64_t v218 = v178 + v215[1].n128_i32[2];
      uint64_t v219 = v395;
      Location.identifier.getter();
      uint64_t v220 = v398;
      uint64_t v221 = v218;
      v215 = v439;
      sub_10009D708(v221, v135, v449, v219, v398);
      sub_100162F0C();
      v222();
      uint64_t v223 = v404;
      uint64_t v224 = v216;
      v225 = v461;
      sub_10018AF6C();
      sub_100162808();
      v226();
      type metadata accessor for MapComponent();
      sub_1001628A4();
      sub_10014FF5C(v178, v227, (void (*)(void))type metadata accessor for WeatherData);
      sub_10012BA78();
      swift_storeEnumTagMultiPayload();
      sub_100127B4C();
      sub_1000C134C((uint64_t)v225, (void (*)(void))type metadata accessor for LocationViewComponent);
      (*(void (**)(uint64_t, uint64_t))(v223 + 8))(v220, v224);
      v209 = v438;
    }
  }
  sub_1001B1E64(v196, *(void *)(v460 + 80));
  sub_1001649D0();
  v228();
  sub_1000C1470(v209);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100127BA4();
  v229();
  sub_10012B520((uint64_t)v209, 1, v464);
  if (v189)
  {
    sub_100178110((uint64_t)v209, &qword_100E6E830);
  }
  else
  {
    uint64_t v230 = v403;
    sub_100178CEC((uint64_t)v209, v403, (void (*)(void))type metadata accessor for LocationViewComponent);
    sub_100127B4C();
    sub_1000C134C(v230, (void (*)(void))type metadata accessor for LocationViewComponent);
  }
  uint64_t v231 = v454;
  uint64_t v232 = v419;
  sub_10006DF38((uint64_t)v459, v419, &qword_100E855C0);
  uint64_t v233 = sub_1001A1D34();
  sub_10012B520(v233, v234, v231);
  if (v189)
  {
    sub_100178110(v232, &qword_100E855C0);
    uint64_t v235 = v421;
  }
  else
  {
    int v236 = swift_getEnumCaseMultiPayload();
    uint64_t v235 = v421;
    if (v236 == 4)
    {
      uint64_t v237 = v399;
      sub_100178CEC(v232, v399, (void (*)(void))type metadata accessor for NewsArticleComponent);
      sub_1001D4004(v237, v238, (void (*)(void))type metadata accessor for NewsArticleComponent);
      sub_10012BA78();
      swift_storeEnumTagMultiPayload();
      sub_100127B4C();
      sub_1000C134C(v232, (void (*)(void))type metadata accessor for LocationViewComponent);
      v239 = type metadata accessor for NewsArticleComponent;
      uint64_t v240 = v237;
    }
    else
    {
      v239 = type metadata accessor for NewsComponentPosition;
      uint64_t v240 = v232;
    }
    sub_1000C134C(v240, (void (*)(void))v239);
  }
  if (qword_100E62A10 != -1) {
    swift_once();
  }
  sub_100217B3C();
  Configurable.setting<A>(_:)();
  int v241 = v465[239];
  sub_10014FF5C(v178, v235, (void (*)(void))type metadata accessor for WeatherData);
  if (v241 == 1)
  {
    sub_1000C134C(v235, (void (*)(void))type metadata accessor for WeatherData);
LABEL_100:
    sub_10017DF08(&qword_100E6E840);
    sub_1001A882C();
    uint64_t v249 = v248;
    uint64_t v448 = v248;
    uint64_t v251 = v250;
    uint64_t v452 = v250;
    *(void *)&long long v449 = v252 | 7;
    uint64_t v443 = v248 + 2 * v250;
    uint64_t v444 = v253;
    uint64_t v254 = swift_allocObject();
    long long v460 = xmmword_100C25ED0;
    *(_OWORD *)(v254 + 16) = xmmword_100C25ED0;
    uint64_t v255 = v254 + v249;
    v256 = &v456[v215[1].n128_i32[2]];
    uint64_t v257 = v430;
    WeatherDataModel.historicalComparisons.getter();
    sub_1001278D0(v257, v255, &qword_100E6B8B8);
    swift_storeEnumTagMultiPayload();
    uint64_t v258 = v455;
    uint64_t v259 = v462;
    sub_10014FF5C(v462 + *(int *)(v455 + 24), v255 + v251, (void (*)(void))type metadata accessor for FeelsLikeComponentPreprocessedDataModel);
    swift_storeEnumTagMultiPayload();
    sub_1001DA998();
    swift_setDeallocating();
    sub_1000C12E0();
    v260 = v461;
    WeatherDataModel.currentWeather.getter();
    sub_1001097EC(v465);
    uint64_t v261 = type metadata accessor for WindComponent();
    sub_1001097EC(&v260[*(int *)(v261 + 20)]);
    swift_storeEnumTagMultiPayload();
    sub_100049160((uint64_t)v465);
    sub_1000C13A0((uint64_t)v260);
    v440 = type metadata accessor for LocationViewComponent;
    sub_1000C134C((uint64_t)v260, (void (*)(void))type metadata accessor for LocationViewComponent);
    v262 = (__n128 *)swift_allocObject();
    sub_10019B8E8(v262);
    uint64_t v265 = v263 + v264;
    WeatherDataModel.currentWeather.getter();
    uint64_t v266 = v259 + *(int *)(v258 + 40);
    WeatherDataModel.dailyForecast.getter();
    WeatherDataModel.hourlyForecast.getter();
    v267 = *(char **)(v457 + 32);
    v457 += 32;
    v442 = v267;
    sub_1001190D4();
    v268();
    type metadata accessor for UVIndexComponent();
    sub_100B6417C();
    sub_10014FF5C(v266, v265 + v269, (void (*)(void))type metadata accessor for UVIndexComponentPreprocessedDataModel);
    sub_1001190D4();
    v270();
    sub_1001190D4();
    v271();
    swift_storeEnumTagMultiPayload();
    v441 = v256;
    WeatherDataModel.currentWeather.getter();
    WeatherDataModel.dailyForecast.getter();
    SunriseSunsetModel.init(currentWeather:dailyForecast:)();
    swift_storeEnumTagMultiPayload();
    sub_1001DA998();
    swift_setDeallocating();
    sub_1000C12E0();
    v439 = (__n128 *)swift_allocObject();
    sub_10019B8E8(v439);
    v274 = (void *)(v272 + v273);
    v275 = (void *)(v259 + *(int *)(v455 + 36));
    uint64_t v276 = v275[1];
    uint64_t v277 = v275[2];
    uint64_t v278 = v275[3];
    uint64_t v279 = v275[4];
    uint64_t v280 = v275[5];
    uint64_t v281 = v275[6];
    uint64_t v282 = v275[7];
    uint64_t v283 = v275[8];
    uint64_t v284 = v275[9];
    uint64_t v285 = v275[10];
    uint64_t v286 = v275[11];
    uint64_t v287 = v275[12];
    uint64_t v288 = v275[13];
    void *v274 = *v275;
    v274[1] = v276;
    v274[2] = v277;
    v274[3] = v278;
    v274[4] = v279;
    v274[5] = v280;
    v274[6] = v281;
    v274[7] = v282;
    v274[8] = v283;
    v274[9] = v284;
    v274[10] = v285;
    v274[11] = v286;
    v274[12] = v287;
    v274[13] = v288;
    swift_storeEnumTagMultiPayload();
    v289 = (char *)v274 + v452;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    WeatherDataModel.currentWeather.getter();
    sub_100129030();
    uint64_t v291 = *v290;
    uint64_t v292 = v290[1];
    uint64_t v294 = v290[2];
    uint64_t v293 = v290[3];
    uint64_t v296 = v290[4];
    uint64_t v295 = v290[5];
    uint64_t v297 = v451;
    sub_1001190D4();
    v298();
    v299 = &v289[*(int *)(type metadata accessor for VisibilityComponent() + 20)];
    *(void *)v299 = v291;
    *((void *)v299 + 1) = v292;
    *((void *)v299 + 2) = v294;
    *((void *)v299 + 3) = v293;
    *((void *)v299 + 4) = v296;
    *((void *)v299 + 5) = v295;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v300 = v439;
    sub_1001DA998();
    swift_setDeallocating();
    sub_1000C12E0();
    uint64_t v301 = (uint64_t)v456;
    sub_1001D4004((uint64_t)v456, v302, (void (*)(void))type metadata accessor for WeatherData);
    sub_1001DE240();
    swift_storeEnumTagMultiPayload();
    sub_1000C13A0((uint64_t)v300);
    sub_1000C134C((uint64_t)v300, (void (*)(void))v440);
    v303 = (__n128 *)swift_allocObject();
    sub_10019B8E8(v303);
    uint64_t v306 = v304 + v305;
    uint64_t v307 = v453;
    v308 = v441;
    WeatherDataModel.currentWeather.getter();
    v309 = v442;
    ((void (*)(uint64_t, uint64_t, uint64_t))v442)(v306, v307, v297);
    sub_10018AF6C();
    swift_storeEnumTagMultiPayload();
    uint64_t v310 = v306 + v452;
    WeatherDataModel.currentWeather.getter();
    sub_10018A2A8();
    sub_1001628A4();
    sub_10014FF5C((uint64_t)v308, v311, (void (*)(void))type metadata accessor for PressureComponentPreprocessedDataModel);
    uint64_t v312 = v297;
    uint64_t v313 = v301;
    uint64_t v314 = v463;
    ((void (*)(uint64_t, uint64_t, uint64_t))v309)(v310, v307, v312);
    swift_storeEnumTagMultiPayload();
    sub_1001DA998();
    swift_setDeallocating();
    goto LABEL_102;
  }
  uint64_t v242 = v405;
  WeatherDataModel.historicalComparisons.getter();
  uint64_t v243 = type metadata accessor for HistoricalComparisons();
  uint64_t v244 = sub_1001A1D34();
  sub_10012B520(v244, v245, v243);
  if (v189)
  {
    sub_1000C134C(v235, (void (*)(void))type metadata accessor for WeatherData);
    sub_100178110(v242, &qword_100E6B8B8);
  }
  else
  {
    char v246 = HistoricalComparisons.hasDeviationsFromTrend.getter();
    sub_1000C134C(v235, (void (*)(void))type metadata accessor for WeatherData);
    sub_100162F0C();
    v247();
    if (v246) {
      goto LABEL_100;
    }
  }
  v441 = (void *)sub_10017DF08(&qword_100E6E840);
  sub_1001A882C();
  uint64_t v443 = v316;
  uint64_t v444 = v315 + 2 * v316;
  uint64_t v317 = v315;
  uint64_t v452 = v315;
  uint64_t v318 = v316;
  *(void *)&long long v460 = v319 | 7;
  uint64_t v320 = swift_allocObject();
  long long v449 = xmmword_100C25ED0;
  *(_OWORD *)(v320 + 16) = xmmword_100C25ED0;
  uint64_t v321 = v320 + v317;
  uint64_t v322 = v455;
  uint64_t v323 = v462;
  sub_10014FF5C(v462 + *(int *)(v455 + 24), v321, (void (*)(void))type metadata accessor for FeelsLikeComponentPreprocessedDataModel);
  swift_storeEnumTagMultiPayload();
  uint64_t v324 = v321 + v318;
  v325 = &v456[v215[1].n128_i32[2]];
  WeatherDataModel.currentWeather.getter();
  uint64_t v326 = v323 + *(int *)(v322 + 40);
  WeatherDataModel.dailyForecast.getter();
  WeatherDataModel.hourlyForecast.getter();
  uint64_t v327 = *(void *)(v457 + 32);
  v457 += 32;
  uint64_t v448 = v327;
  sub_1001190D4();
  v328();
  type metadata accessor for UVIndexComponent();
  sub_100B6417C();
  sub_10014FF5C(v326, v324 + v329, (void (*)(void))type metadata accessor for UVIndexComponentPreprocessedDataModel);
  sub_1001190D4();
  v330();
  sub_1001190D4();
  v331();
  swift_storeEnumTagMultiPayload();
  sub_1001DA998();
  swift_setDeallocating();
  sub_1000C12E0();
  v332 = v461;
  WeatherDataModel.currentWeather.getter();
  uint64_t v333 = v455;
  sub_1001097EC(v465);
  uint64_t v334 = type metadata accessor for WindComponent();
  sub_1001097EC(&v332[*(int *)(v334 + 20)]);
  sub_10012BA78();
  swift_storeEnumTagMultiPayload();
  sub_100049160((uint64_t)v465);
  sub_100127B4C();
  v440 = type metadata accessor for LocationViewComponent;
  sub_1000C134C((uint64_t)v332, (void (*)(void))type metadata accessor for LocationViewComponent);
  v335 = (__n128 *)swift_allocObject();
  sub_1001D2618(v335);
  v442 = v325;
  WeatherDataModel.currentWeather.getter();
  WeatherDataModel.dailyForecast.getter();
  SunriseSunsetModel.init(currentWeather:dailyForecast:)();
  swift_storeEnumTagMultiPayload();
  v336 = &v332[v443];
  v337 = (void *)(v323 + *(int *)(v333 + 36));
  uint64_t v338 = v337[1];
  uint64_t v339 = v337[2];
  uint64_t v340 = v337[3];
  uint64_t v341 = v337[4];
  uint64_t v342 = v337[5];
  uint64_t v343 = v337[6];
  uint64_t v344 = v337[7];
  uint64_t v345 = v337[8];
  uint64_t v346 = v337[9];
  uint64_t v347 = v337[10];
  uint64_t v348 = v337[11];
  uint64_t v349 = v337[12];
  uint64_t v350 = v337[13];
  void *v336 = *v337;
  v336[1] = v338;
  v336[2] = v339;
  v336[3] = v340;
  v336[4] = v341;
  v336[5] = v342;
  v336[6] = v343;
  v336[7] = v344;
  v336[8] = v345;
  v336[9] = v346;
  v336[10] = v347;
  v336[11] = v348;
  v336[12] = v349;
  v336[13] = v350;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1001DA998();
  swift_setDeallocating();
  sub_1000C12E0();
  v351 = (__n128 *)swift_allocObject();
  sub_1001D2618(v351);
  WeatherDataModel.currentWeather.getter();
  sub_100129030();
  uint64_t v354 = *v352;
  uint64_t v353 = v352[1];
  uint64_t v356 = v352[2];
  uint64_t v355 = v352[3];
  uint64_t v358 = v352[4];
  uint64_t v357 = v352[5];
  sub_1001190D4();
  v359();
  v360 = (void *)(v340 + *(int *)(type metadata accessor for VisibilityComponent() + 20));
  void *v360 = v354;
  v360[1] = v353;
  v360[2] = v356;
  v360[3] = v355;
  v360[4] = v358;
  v360[5] = v357;
  sub_10012BA78();
  swift_storeEnumTagMultiPayload();
  uint64_t v361 = v340 + v443;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v362 = v442;
  WeatherDataModel.currentWeather.getter();
  sub_10008B910();
  v363();
  sub_10012BA78();
  swift_storeEnumTagMultiPayload();
  sub_1001DA998();
  swift_setDeallocating();
  uint64_t v313 = (uint64_t)v456;
  sub_1000C12E0();
  sub_1001D4004(v313, v364, (void (*)(void))type metadata accessor for WeatherData);
  sub_10018AF6C();
  swift_storeEnumTagMultiPayload();
  sub_100127B4C();
  uint64_t v314 = v463;
  sub_1000C134C(v361, (void (*)(void))v440);
  v365 = (__n128 *)swift_allocObject();
  sub_1001D2618(v365);
  uint64_t v366 = v430;
  WeatherDataModel.historicalComparisons.getter();
  sub_1001278D0(v366, v361, &qword_100E6B8B8);
  sub_10018AF6C();
  swift_storeEnumTagMultiPayload();
  WeatherDataModel.currentWeather.getter();
  sub_10018A2A8();
  sub_1001628A4();
  sub_10014FF5C((uint64_t)v362, v367, (void (*)(void))type metadata accessor for PressureComponentPreprocessedDataModel);
  sub_1001DE240();
  sub_10008B910();
  v368();
  swift_storeEnumTagMultiPayload();
  sub_1001DA998();
  swift_setDeallocating();
LABEL_102:
  sub_1000C12E0();
  uint64_t v369 = (uint64_t)v459;
  uint64_t v370 = v433;
  sub_10006DF38((uint64_t)v459, v433, &qword_100E855C0);
  uint64_t v371 = sub_10011C004();
  sub_10012B520(v371, v372, v454);
  uint64_t v373 = v447;
  if (v189)
  {
    sub_100178110(v370, &qword_100E855C0);
  }
  else
  {
    int v374 = swift_getEnumCaseMultiPayload();
    if (v374 == 5)
    {
      uint64_t v375 = v400;
      sub_100178CEC(v370, v400, (void (*)(void))type metadata accessor for NewsArticleComponent);
      v376 = v461;
      sub_10014FF5C(v375, (uint64_t)v461, (void (*)(void))type metadata accessor for NewsArticleComponent);
      swift_storeEnumTagMultiPayload();
      sub_1000C13A0((uint64_t)v376);
      sub_1000C134C((uint64_t)v376, (void (*)(void))type metadata accessor for LocationViewComponent);
      v377 = type metadata accessor for NewsArticleComponent;
      uint64_t v378 = v375;
    }
    else
    {
      v377 = type metadata accessor for NewsComponentPosition;
      uint64_t v378 = v370;
    }
    sub_1000C134C(v378, (void (*)(void))v377);
  }
  if (v445 == 1)
  {
    v379 = v461;
    unsigned char *v461 = 1;
    swift_storeEnumTagMultiPayload();
    sub_1000C13A0((uint64_t)v379);
    sub_1000C134C((uint64_t)v379, (void (*)(void))type metadata accessor for LocationViewComponent);
  }
  sub_100178110(v373, &qword_100EB35F0);
  sub_1000C134C(v446, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_100178110(v369, &qword_100E855C0);
  sub_1000C134C((uint64_t)v435, (void (*)(void))type metadata accessor for NewsDataModel);
  sub_1000C134C(v462, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
  sub_1000C134C(v313, (void (*)(void))type metadata accessor for WeatherData);
  sub_100162F0C();
  v380();
  swift_beginAccess();
  uint64_t v381 = *(void *)(v314 + 16);
  swift_setDeallocating();
  swift_bridgeObjectRetain();
  sub_10000DD14();
  swift_deallocClassInstance();
  return v381;
}

uint64_t sub_100B5F478@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X5>, int a4@<W6>, uint64_t a5@<X8>)
{
  int v42 = a4;
  uint64_t v34 = a3;
  uint64_t v36 = a2;
  uint64_t v41 = (char *)a1;
  uint64_t v33 = type metadata accessor for WeatherAlert.Prominence();
  uint64_t v6 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v32 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E6D1C8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E66CA0);
  uint64_t v39 = *(void *)(v11 - 8);
  uint64_t v40 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_10017DF08(&qword_100E66CC8);
  uint64_t v35 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for HourlyForecastComponentPreprocessedDataModel();
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for CurrentWeather();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for WeatherData(0);
  WeatherDataModel.currentWeather.getter();
  uint64_t v23 = type metadata accessor for PreprocessedWeatherData();
  sub_10014FF5C((uint64_t)&v41[*(int *)(v23 + 28)], (uint64_t)v18, (void (*)(void))type metadata accessor for HourlyForecastComponentPreprocessedDataModel);
  WeatherDataModel.hourlyForecast.getter();
  uint64_t v38 = v13;
  WeatherDataModel.dailyForecast.getter();
  uint64_t v41 = v10;
  WeatherDataModel.weatherChanges.getter();
  if (*(void *)(v36 + 16))
  {
    BOOL v24 = 0;
  }
  else
  {
    uint64_t v25 = v32;
    uint64_t v26 = v33;
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v32, enum case for WeatherAlert.Prominence.high(_:), v33);
    uint64_t v27 = Array<A>.alerts(prominence:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v25, v26);
    uint64_t v28 = *(void *)(v27 + 16);
    swift_bridgeObjectRelease();
    BOOL v24 = v28 == 0;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v20 + 32))(a5, v22, v19);
  unint64_t v29 = (int *)type metadata accessor for HourlyForecastComponent();
  sub_100178CEC((uint64_t)v18, a5 + v29[5], (void (*)(void))type metadata accessor for HourlyForecastComponentPreprocessedDataModel);
  (*(void (**)(uint64_t, char *, uint64_t))(v35 + 32))(a5 + v29[6], v15, v37);
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(a5 + v29[7], v38, v40);
  sub_1001278D0((uint64_t)v41, a5 + v29[8], &qword_100E6D1C8);
  *(unsigned char *)(a5 + v29[9]) = v24;
  *(unsigned char *)(a5 + v29[10]) = v42 & 1;
  type metadata accessor for LocationViewComponent();
  return swift_storeEnumTagMultiPayload();
}

unint64_t sub_100B5F904(uint64_t a1)
{
  uint64_t v4 = v1;
  uint64_t HourPrecipitationComponentParameters = type metadata accessor for NextHourPrecipitationComponentParameters();
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v7);
  sub_100128F8C();
  sub_100109328(v8);
  uint64_t v550 = type metadata accessor for ArticlePlacementLocation();
  sub_100179C0C();
  uint64_t v551 = v9;
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v549 = v11;
  uint64_t v12 = sub_10017DF08(&qword_100EB35E8);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v14);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v15);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v16);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v17);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v18);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v19);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v20);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v21);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v22);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v23);
  sub_100128F8C();
  sub_100109328(v24);
  uint64_t v554 = type metadata accessor for NewsArticleComponent();
  sub_100162E4C();
  __chkstk_darwin(v25);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v26);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v27);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v28);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v29);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v30);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v31);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v32);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v33);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v34);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v35);
  sub_100128F8C();
  sub_100109328(v36);
  v571[0] = type metadata accessor for WeatherAlert.Prominence();
  sub_100179C0C();
  v572 = v37;
  __chkstk_darwin(v38);
  sub_100109314();
  uint64_t v570 = v39;
  uint64_t v40 = sub_10017DF08(&qword_100E6E830);
  uint64_t v41 = sub_100109308(v40);
  __chkstk_darwin(v41);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v42);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v43);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v44);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v45);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v46);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v47);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v48);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v49);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v50);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v51);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v52);
  sub_100128F8C();
  sub_100109328(v53);
  uint64_t v580 = type metadata accessor for LocationViewComponent();
  sub_100162E4C();
  __chkstk_darwin(v54);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v55);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v56);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v57);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v58);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v59);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v60);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v61);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v62);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v63);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v64);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v65);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v66);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v67);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v68);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v69);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v70);
  sub_100128F8C();
  uint64_t v544 = v71;
  uint64_t v72 = sub_10017DF08(&qword_100E855C0);
  uint64_t v73 = sub_100109308(v72);
  __chkstk_darwin(v73);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v74);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v75);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v76);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v77);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v78);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v79);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v80);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v81);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v82);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v83);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v84);
  sub_100128F8C();
  v577 = (uint64_t *)v85;
  v581 = (void *)type metadata accessor for Location.Identifier();
  sub_100179C0C();
  v578 = v86;
  __chkstk_darwin(v87);
  sub_1001626E0();
  uint64_t v90 = v89 - v88;
  uint64_t v567 = type metadata accessor for WeatherMapOverlayKind();
  sub_100179C0C();
  uint64_t v563 = v91;
  __chkstk_darwin(v92);
  sub_100109314();
  v574[1] = v93;
  sub_100129064();
  uint64_t v94 = type metadata accessor for NewsDataModel();
  uint64_t v95 = sub_100109308(v94);
  __chkstk_darwin(v95);
  sub_100152344();
  uint64_t v96 = type metadata accessor for PreprocessedWeatherData();
  uint64_t v97 = sub_100109308(v96);
  __chkstk_darwin(v97);
  sub_10008B8C0();
  uint64_t v98 = type metadata accessor for WeatherData(0);
  __chkstk_darwin(v98);
  sub_1001626E0();
  uint64_t v101 = v100 - v99;
  type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v103 = v102;
  __chkstk_darwin(v104);
  sub_1001626E0();
  uint64_t v107 = v106 - v105;
  uint64_t v566 = v103;
  char v108 = *(void (**)(void, void))(v103 + 16);
  v571[1] = v109;
  uint64_t v557 = v103 + 16;
  v556 = v108;
  v108(v107, a1);
  type metadata accessor for LocationViewConfigurationInputs();
  sub_100B6417C();
  sub_10014FF5C(a1 + v110, v101, (void (*)(void))type metadata accessor for WeatherData);
  uint64_t v111 = a1 + *(int *)(v1 + 24);
  uint64_t v575 = v3;
  sub_10014FF5C(v111, v3, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
  sub_10014FF5C(a1 + *(int *)(v1 + 28), v2, (void (*)(void))type metadata accessor for NewsDataModel);
  uint64_t v112 = *(int *)(v1 + 40);
  uint64_t v564 = a1;
  LODWORD(v103) = *(unsigned __int8 *)(a1 + v112);
  sub_10018440C((void *)(v1 + 16), *(void *)(v1 + 40));
  LODWORD(v573) = v103;
  uint64_t v113 = sub_10005DF64(v101, v103);
  uint64_t v115 = v114;
  unint64_t v116 = (unint64_t)sub_1001B1E64((void *)(v1 + 96), *(void *)(v1 + 120));
  uint64_t v579 = v101;
  v574[0] = v107;
  Location.identifier.getter();
  uint64_t v117 = sub_1001DE240();
  sub_10009D708(v117, v118, v115, v90, v119);
  sub_100162F0C();
  v120();
  v578 = (uint64_t (*)())(v1 + 56);
  uint64_t v121 = sub_1001B1E64((void *)(v4 + 56), *(void *)(v4 + 80));
  sub_10018440C((void *)(*v121 + 16), *(void *)(*v121 + 40));
  uint64_t v565 = v2;
  uint64_t v122 = (void (**)(void, void, void))v2;
  uint64_t v123 = v569;
  uint64_t v576 = v115;
  sub_1001E7608(v122, v115, (uint64_t)v577);
  v581 = v113;
  if (v113[2])
  {
    sub_10011C120();
    sub_1001D0FCC();
    Hasher._finalize()();
    sub_10018B4EC();
    if ((*(void *)(v101 + 56 + ((v116 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v116))
    {
      uint64_t v125 = ~v124;
      while (2)
      {
        switch(*(unsigned char *)(v581[6] + v116))
        {
          case 1:
            goto LABEL_7;
          case 2:
            sub_100182708();
            goto LABEL_7;
          case 3:
            sub_100126140();
LABEL_7:
            char v126 = sub_10019B7D8();
            swift_bridgeObjectRelease();
            if (v126) {
              goto LABEL_11;
            }
            unint64_t v116 = (v116 + 1) & v125;
            if (((*(void *)(v101 + 56 + ((v116 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v116) & 1) == 0) {
              goto LABEL_14;
            }
            continue;
          default:
            swift_bridgeObjectRelease();
LABEL_11:
            sub_10018440C(v578, *(void *)(v1 + 80));
            uint64_t v127 = v574[0];
            sub_1000277CC(v545);
            uint64_t v128 = sub_1001A1D34();
            sub_10012B520(v128, v129, v580);
            if (v158)
            {
              sub_100178110(v545, &qword_100E6E830);
              goto LABEL_14;
            }
            sub_100178CEC(v545, v544, (void (*)(void))type metadata accessor for LocationViewComponent);
            sub_1001B1E64(v578, *(void *)(v1 + 80));
            uint64_t v155 = (uint64_t)v572 + 104;
            v562 = (char *)*((void *)v572 + 13);
            ((void (*)(uint64_t, void, void))v562)(v570, enum case for WeatherAlert.Prominence.high(_:), v571[0]);
            sub_1000C1470(v569);
            uint64_t v156 = (uint64_t)v572 + 8;
            uint64_t v157 = (void (*)(uint64_t, void))*((void *)v572 + 1);
            v157(v570, v571[0]);
            sub_10012B520((uint64_t)v569, 1, v580);
            if (!v158)
            {
              uint64_t v167 = v574[0];
              uint64_t v168 = v579;
              sub_100178CEC((uint64_t)v569, v526, (void (*)(void))type metadata accessor for LocationViewComponent);
              uint64_t v169 = sub_100150320();
              sub_100188E8C(v169, v170, (uint64_t)&v554);
              uint64_t v171 = type metadata accessor for NewsComponentPosition();
              sub_10012B520(v156, 1, v171);
              if (v172)
              {
                sub_100178110(v156, &qword_100E855C0);
                uint64_t v184 = v527;
                sub_100185818(v527);
              }
              else
              {
                uint64_t v182 = sub_1001A3668();
                v183(v182);
                uint64_t v184 = v527;
                sub_100629334(v4, v527);
                uint64_t v185 = sub_1001CA978();
                v186(v185);
                sub_1000C134C(v156, (void (*)(void))type metadata accessor for NewsComponentPosition);
                sub_10012B520(v527, 1, v554);
                if (!v187)
                {
                  v578 = type metadata accessor for NewsArticleComponent;
                  sub_100178CEC(v527, v518, (void (*)(void))type metadata accessor for NewsArticleComponent);
                  sub_10018B2B8();
                  sub_100214E0C(v367, v368, v369, v167, (uint64_t)v581, v527);
                  sub_100128AE0();
                  swift_bridgeObjectRelease();
                  uint64_t v370 = sub_100178110((uint64_t)v123, &qword_100E855C0);
                  sub_1001A4A6C(v370, (void (*)(void))type metadata accessor for NewsDataModel);
                  sub_1000C134C(v127, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
                  sub_100162F0C();
                  v371();
                  uint64_t v372 = sub_10019F88C();
                  v373(v372);
                  type metadata accessor for MapComponent();
                  sub_10017F35C();
                  sub_100178CEC(v168, v374, (void (*)(void))type metadata accessor for WeatherData);
                  sub_1001EA8C4();
                  sub_100178CEC(v544, v553, (void (*)(void))type metadata accessor for LocationViewComponent);
                  sub_100179200(v526, (uint64_t)v582);
                  sub_10019CC58(v518);
                  swift_storeEnumTagMultiPayload();
                  type metadata accessor for LocationElevatedAqiSevereNewsConfiguration._Storage(0);
                  sub_100181044();
                  sub_10019D39C();
                  sub_1002CCBEC();
                  unint64_t v376 = 0x7000000000000004;
                  return v375 | v376;
                }
              }
              sub_100178110(v184, &qword_100EB35E8);
              uint64_t v188 = sub_100172564();
              sub_100B639C4(v188, v189, v190, v191, v192, v193, v194);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v195 = sub_100178110((uint64_t)v123, &qword_100E855C0);
              sub_1001A4A6C(v195, (void (*)(void))type metadata accessor for NewsDataModel);
              sub_1000C134C(v155, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
              sub_100162F0C();
              v196();
              uint64_t v197 = sub_10017B058();
              v198(v197);
              type metadata accessor for MapComponent();
              sub_1001628A4();
              sub_100178CEC(v168, v199, (void (*)(void))type metadata accessor for WeatherData);
              sub_100165450();
              sub_100178CEC(v544, v553, (void (*)(void))type metadata accessor for LocationViewComponent);
              sub_100178CEC(v526, v552, (void (*)(void))type metadata accessor for LocationViewComponent);
              type metadata accessor for LocationElevatedAqiSevereConfiguration._Storage(0);
              sub_100181044();
              sub_1001D1498();
              return sub_1002CC2C4() | 0x2000000000000000;
            }
            sub_100178110((uint64_t)v569, &qword_100E6E830);
            uint64_t v159 = v570;
            BOOL v160 = sub_1001B1E64(v578, *(void *)(v4 + 80));
            ((void (*)(uint64_t, void, void))v562)(v570, enum case for WeatherAlert.Prominence.low(_:), v571[0]);
            uint64_t v161 = *v160;
            uint64_t v162 = v579;
            sub_1000C1470(v525);
            v157(v570, v571[0]);
            sub_10012B520((uint64_t)v525, 1, v580);
            if (!v158)
            {
              sub_100178CEC((uint64_t)v525, v520, (void (*)(void))type metadata accessor for LocationViewComponent);
              sub_1001D16AC();
              sub_100B639C4(v173, v174, v575, v574[0], (uint64_t)v581, v576, v573);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v175 = sub_100178110((uint64_t)v577, &qword_100E855C0);
              sub_1001A4A6C(v175, (void (*)(void))type metadata accessor for NewsDataModel);
              sub_1000C134C(v575, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
              uint64_t v176 = sub_1001D22C4();
              v177(v176);
              uint64_t v178 = sub_10019F88C();
              v179(v178);
              type metadata accessor for MapComponent();
              sub_10017F35C();
              sub_100178CEC(v579, v180, (void (*)(void))type metadata accessor for WeatherData);
              swift_storeEnumTagMultiPayload();
              sub_10017B510(v520);
              sub_10018A518((uint64_t)v574);
              type metadata accessor for LocationElevatedAqiMinorAlertConfiguration._Storage(0);
              sub_100181044();
              sub_100184E38();
              return sub_1002CB41C() | 0xC000000000000000;
            }
            uint64_t v163 = v574[0];
            sub_100178110((uint64_t)v525, &qword_100E6E830);
            uint64_t v164 = sub_100150320();
            sub_100188E8C(v164, v165, (uint64_t)v547);
            uint64_t v166 = type metadata accessor for NewsComponentPosition();
            sub_10012B520(v161, 1, v166);
            if (v158)
            {
              sub_100178110(v161, &qword_100E855C0);
              uint64_t v356 = v519;
              sub_100185818(v519);
            }
            else
            {
              uint64_t v354 = sub_1001A3668();
              v355(v354);
              uint64_t v356 = v519;
              sub_100629334(v4, v519);
              uint64_t v357 = sub_1001CA978();
              v358(v357);
              sub_1000C134C(v161, (void (*)(void))type metadata accessor for NewsComponentPosition);
              sub_10012B520(v519, 1, v554);
              if (!v359)
              {
                v578 = type metadata accessor for NewsArticleComponent;
                sub_100178CEC(v519, v511, (void (*)(void))type metadata accessor for NewsArticleComponent);
                sub_10018B2B8();
                sub_100214E0C(v427, v428, v429, v163, (uint64_t)v581, v519);
                sub_100128AE0();
                swift_bridgeObjectRelease();
                uint64_t v430 = sub_100178110(v159, &qword_100E855C0);
                sub_1001A4A6C(v430, (void (*)(void))type metadata accessor for NewsDataModel);
                sub_1000C134C((uint64_t)v525, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
                sub_100162F0C();
                v431();
                uint64_t v432 = sub_10019F88C();
                v433(v432);
                type metadata accessor for MapComponent();
                sub_10017F35C();
                sub_100178CEC(v162, v434, (void (*)(void))type metadata accessor for WeatherData);
                swift_storeEnumTagMultiPayload();
                sub_10018885C((void (*)(void))type metadata accessor for LocationViewComponent, (uint64_t)v574);
                sub_1001912E4(v511);
                swift_storeEnumTagMultiPayload();
                type metadata accessor for LocationElevatedAqiNewsConfiguration._Storage(0);
                sub_100181044();
                sub_100184E38();
                uint64_t v375 = sub_1002CBAC4();
                unint64_t v376 = 0x3000000000000004;
                return v375 | v376;
              }
            }
            sub_100178110(v356, &qword_100EB35E8);
            uint64_t v360 = v575;
            sub_100214E0C(v162, v564, v575, v163, (uint64_t)v581, v576);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v361 = sub_100178110(v159, &qword_100E855C0);
            sub_1001A4A6C(v361, (void (*)(void))type metadata accessor for NewsDataModel);
            sub_1000C134C(v360, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
            sub_100162F0C();
            v362();
            uint64_t v363 = sub_10017B058();
            v364(v363);
            type metadata accessor for MapComponent();
            sub_1001628A4();
            sub_100178CEC(v162, v365, (void (*)(void))type metadata accessor for WeatherData);
            sub_10018AF6C();
            swift_storeEnumTagMultiPayload();
            sub_100164080((void (*)(void))type metadata accessor for LocationViewComponent, (uint64_t)v574);
            type metadata accessor for LocationElevatedAqiConfiguration._Storage(0);
            sub_100181044();
            uint64_t v366 = sub_10019AA7C();
            uint64_t v375 = sub_1002CACA8(v366);
            unint64_t v376 = 0x8000000000000004;
            break;
        }
        return v375 | v376;
      }
    }
  }
LABEL_14:
  uint64_t v130 = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v560 = v1;
  sub_1001B1E64(v578, *(void *)(v1 + 80));
  uint64_t v131 = (uint64_t)v572 + 104;
  uint64_t v132 = (void (*)(uint64_t))*((void *)v572 + 13);
  uint64_t v133 = sub_100183384();
  v132(v133);
  uint64_t v134 = v559;
  uint64_t v135 = v574[0];
  uint64_t v136 = v579;
  sub_1000C1470(v559);
  int v137 = (void (*)(void))*((void *)v572 + 1);
  ((void (*)(uint64_t, uint64_t *))v137)(v1, v569);
  sub_10012B520((uint64_t)v559, 1, v580);
  if (!v158)
  {
    sub_100178CEC((uint64_t)v559, v555, (void (*)(void))type metadata accessor for LocationViewComponent);
    uint64_t v146 = (uint64_t)v562;
    sub_100162808();
    v147();
    uint64_t v148 = HourPrecipitationComponentParameters;
    sub_10014FF5C(v579, (uint64_t)&v562[*(int *)(HourPrecipitationComponentParameters + 20)], (void (*)(void))type metadata accessor for WeatherData);
    *(void *)&v562[*(int *)(HourPrecipitationComponentParameters + 24)] = _swiftEmptyArrayStorage;
    sub_10019CA18(*(int *)(v148 + 28));
    uint64_t v150 = v135;
    if (v149)
    {
      sub_10011C120();
      sub_100182298();
      uint64_t v146 = (uint64_t)v582;
      Hasher._finalize()();
      sub_10015854C();
      uint64_t v148 = v136 + 56;
      sub_100119168();
      if (v152)
      {
        uint64_t v153 = ~v151;
        while (1)
        {
          uint64_t v136 = 0xEA00000000007974;
          switch(*((unsigned char *)v134 + v581[6]))
          {
            case 1:
              sub_100184848();
              goto LABEL_75;
            case 2:
              sub_1001871A8();
              break;
            case 3:
              uint64_t v136 = 0xE400000000000000;
              sub_100126140();
              break;
            default:
              break;
          }
          uint64_t v146 = sub_10018A180();
          swift_bridgeObjectRelease();
          if (v146) {
            break;
          }
          uint64_t v134 = (uint64_t *)(((unint64_t)v134 + 1) & v153);
          sub_1001CB78C();
          if ((v154 & 1) == 0) {
            goto LABEL_78;
          }
        }
LABEL_75:
        sub_10018440C(v578, *(void *)(v560 + 80));
        uint64_t v136 = v535;
        sub_100A63440((uint64_t)v562, v535);
        sub_10012B520(v535, 1, v580);
        if (!v158)
        {
          sub_100178CEC(v535, v534, (void (*)(void))type metadata accessor for LocationViewComponent);
          sub_10018440C(v578, *(void *)(v560 + 80));
          sub_10018E07C((uint64_t)&v552);
          sub_10012B520(v535, 1, v580);
          if (v306)
          {
            sub_100178110(v535, &qword_100E6E830);
            uint64_t v307 = sub_100150320();
            sub_100188E8C(v307, v308, (uint64_t)&v541);
            uint64_t v309 = type metadata accessor for NewsComponentPosition();
            sub_10012B520(v146, 1, v309);
            if (v158)
            {
              sub_100178110(v146, &qword_100E855C0);
              uint64_t v391 = v515;
              sub_100185818(v515);
            }
            else
            {
              uint64_t v389 = sub_100185FC4();
              v390(v389);
              uint64_t v391 = v515;
              sub_100629334((uint64_t)v134, v515);
              uint64_t v392 = sub_10012B75C();
              v393(v392);
              sub_1000C134C(v146, (void (*)(void))type metadata accessor for NewsComponentPosition);
              sub_10012B520(v515, 1, v554);
              if (!v394)
              {
                v578 = type metadata accessor for NewsArticleComponent;
                sub_100178CEC(v515, v507, (void (*)(void))type metadata accessor for NewsArticleComponent);
                sub_1001A1AFC();
                swift_bridgeObjectRelease();
                uint64_t v457 = swift_bridgeObjectRelease();
                sub_1001836B8(v457, (void (*)(void))type metadata accessor for NextHourPrecipitationComponentParameters);
                uint64_t v458 = sub_100178110((uint64_t)v123, &qword_100E855C0);
                sub_1001A4A6C(v458, (void (*)(void))type metadata accessor for NewsDataModel);
                sub_1000C134C((uint64_t)v134, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
                uint64_t v459 = sub_1001A2A0C();
                v460(v459);
                uint64_t v461 = sub_10019F88C();
                v462(v461);
                type metadata accessor for MapComponent();
                sub_10017F35C();
                sub_100178CEC(v4, v463, (void (*)(void))type metadata accessor for WeatherData);
                sub_100166E4C();
                sub_100178CEC(v555, v553, (void (*)(void))type metadata accessor for LocationViewComponent);
                sub_100179200(v534, (uint64_t)v582);
                sub_10019CC58(v507);
                swift_storeEnumTagMultiPayload();
                type metadata accessor for LocationNoAqiSevereNhpNewsConfiguration._Storage(0);
                sub_100181044();
                sub_10019D39C();
                sub_1002D3AE4();
                return v464 | 0x8000000000000000;
              }
            }
            sub_100178110(v391, &qword_100EB35E8);
            uint64_t v395 = v579;
            sub_100182DE4(v579);
            sub_100128AE0();
            uint64_t v396 = swift_bridgeObjectRelease();
            sub_1001836B8(v396, (void (*)(void))type metadata accessor for NextHourPrecipitationComponentParameters);
            uint64_t v397 = sub_100178110((uint64_t)v123, &qword_100E855C0);
            sub_1001A4A6C(v397, (void (*)(void))type metadata accessor for NewsDataModel);
            sub_1000C134C(v148, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
            uint64_t v398 = sub_1001A2A0C();
            v399(v398);
            uint64_t v400 = sub_10017B058();
            v401(v400);
            type metadata accessor for MapComponent();
            sub_1001628A4();
            sub_100178CEC(v395, v402, (void (*)(void))type metadata accessor for WeatherData);
            sub_100165450();
            sub_100178CEC(v555, v553, (void (*)(void))type metadata accessor for LocationViewComponent);
            sub_10018AC6C((uint64_t)&v564);
            type metadata accessor for LocationNoAqiSevereNhpConfiguration._Storage(0);
            sub_100181044();
            sub_1001D1498();
            uint64_t v375 = sub_1002D31C8();
            unint64_t v376 = 0x4000000000000004;
            return v375 | v376;
          }
          sub_100178CEC(v535, v517, (void (*)(void))type metadata accessor for LocationViewComponent);
          if (v581[2])
          {
            sub_10011C120();
            sub_1001D0FCC();
            uint64_t v146 = (uint64_t)v582;
            Hasher._finalize()();
            sub_10015854C();
            sub_100119168();
            if (v334)
            {
              uint64_t v335 = ~v333;
              while (2)
              {
                switch(*((unsigned char *)v134 + v581[6]))
                {
                  case 1:
                    goto LABEL_108;
                  case 2:
                    sub_1001871A8();
                    goto LABEL_108;
                  case 3:
                    sub_100126140();
LABEL_108:
                    uint64_t v146 = sub_10019B7D8();
                    swift_bridgeObjectRelease();
                    if (v146) {
                      goto LABEL_131;
                    }
                    uint64_t v134 = (uint64_t *)(((unint64_t)v134 + 1) & v335);
                    sub_1001CB78C();
                    if ((v336 & 1) == 0) {
                      break;
                    }
                    continue;
                  default:
                    swift_bridgeObjectRelease();
LABEL_131:
                    uint64_t v488 = v579;
                    uint64_t v489 = sub_100172564();
                    sub_100B639C4(v489, v490, v491, v492, v493, v494, v495);
                    swift_bridgeObjectRelease();
                    uint64_t v496 = swift_bridgeObjectRelease();
                    sub_1001836B8(v496, (void (*)(void))type metadata accessor for NextHourPrecipitationComponentParameters);
                    uint64_t v497 = sub_100178110((uint64_t)v577, &qword_100E855C0);
                    sub_1001A4A6C(v497, (void (*)(void))type metadata accessor for NewsDataModel);
                    sub_1000C134C(v148, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
                    uint64_t v498 = sub_1001A2A0C();
                    v499(v498);
                    uint64_t v500 = sub_10017B058();
                    v501(v500);
                    type metadata accessor for MapComponent();
                    sub_1001628A4();
                    sub_100178CEC(v488, v502, (void (*)(void))type metadata accessor for WeatherData);
                    sub_100165450();
                    sub_100178CEC(v555, v553, (void (*)(void))type metadata accessor for LocationViewComponent);
                    sub_10018AC6C((uint64_t)&v564);
                    sub_100179200(v517, (uint64_t)&v567);
                    type metadata accessor for LocationSevereNhpAqiConfiguration._Storage(0);
                    sub_100181044();
                    sub_1001EC4B0();
                    sub_1002D59D0();
                    return v503 | 0x6000000000000000;
                }
                break;
              }
            }
          }
          sub_100188E8C((uint64_t)v577, &qword_100E855C0, (uint64_t)&v538);
          uint64_t v337 = type metadata accessor for NewsComponentPosition();
          sub_10012B520(v146, 1, v337);
          if (v158)
          {
            sub_100178110(v146, &qword_100E855C0);
            uint64_t v412 = v513;
            sub_100185818(v513);
          }
          else
          {
            uint64_t v410 = sub_100185FC4();
            v411(v410);
            uint64_t v412 = v513;
            sub_100629334((uint64_t)v134, v513);
            uint64_t v413 = sub_10012B75C();
            v414(v413);
            sub_1000C134C(v146, (void (*)(void))type metadata accessor for NewsComponentPosition);
            sub_10012B520(v513, 1, v554);
            if (!v415)
            {
              sub_100178CEC(v513, v506, (void (*)(void))type metadata accessor for NewsArticleComponent);
              uint64_t v465 = v579;
              sub_1001D16AC();
              uint64_t v466 = v575;
              sub_100B639C4(v467, v468, v575, v150, (uint64_t)v581, v576, v573);
              v578 = v469;
              swift_bridgeObjectRelease();
              uint64_t v470 = swift_bridgeObjectRelease();
              sub_1001836B8(v470, (void (*)(void))type metadata accessor for NextHourPrecipitationComponentParameters);
              uint64_t v471 = sub_100178110((uint64_t)v577, &qword_100E855C0);
              sub_1001A4A6C(v471, (void (*)(void))type metadata accessor for NewsDataModel);
              sub_1000C134C(v466, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
              uint64_t v472 = sub_1001A2A0C();
              v473(v472);
              uint64_t v474 = sub_10019F88C();
              v475(v474);
              type metadata accessor for MapComponent();
              sub_10017F35C();
              sub_100178CEC(v465, v476, (void (*)(void))type metadata accessor for WeatherData);
              sub_1001EA8C4();
              sub_100178CEC(v555, v553, (void (*)(void))type metadata accessor for LocationViewComponent);
              sub_100179200(v534, (uint64_t)v582);
              sub_1001BFD40(v506);
              swift_storeEnumTagMultiPayload();
              sub_100178CEC(v517, v505, (void (*)(void))type metadata accessor for LocationViewComponent);
              type metadata accessor for LocationSevereNhpNewsConfiguration._Storage(0);
              sub_100181044();
              sub_10019D39C();
              uint64_t v375 = sub_1002D6C80();
              unint64_t v376 = 0xA000000000000004;
              return v375 | v376;
            }
          }
          sub_100178110(v412, &qword_100EB35E8);
          uint64_t v416 = v579;
          sub_1001D16AC();
          uint64_t v417 = v575;
          sub_100B639C4(v418, v419, v575, v150, (uint64_t)v581, v576, v573);
          swift_bridgeObjectRelease();
          uint64_t v420 = swift_bridgeObjectRelease();
          sub_1001836B8(v420, (void (*)(void))type metadata accessor for NextHourPrecipitationComponentParameters);
          uint64_t v421 = sub_100178110((uint64_t)v577, &qword_100E855C0);
          sub_1001A4A6C(v421, (void (*)(void))type metadata accessor for NewsDataModel);
          sub_1000C134C(v417, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
          uint64_t v422 = sub_1001A2A0C();
          v423(v422);
          uint64_t v424 = sub_10017B058();
          v425(v424);
          type metadata accessor for MapComponent();
          sub_1001628A4();
          sub_100178CEC(v416, v426, (void (*)(void))type metadata accessor for WeatherData);
          sub_100165450();
          sub_100178CEC(v555, v553, (void (*)(void))type metadata accessor for LocationViewComponent);
          sub_10018AC6C((uint64_t)&v564);
          sub_100179200(v517, (uint64_t)&v567);
          type metadata accessor for LocationSevereNhpConfiguration._Storage(0);
          sub_100181044();
          sub_1001EC4B0();
          sub_1002D61A8();
          unint64_t v376 = 0x5000000000000004;
          return v375 | v376;
        }
        sub_100178110(v535, &qword_100E6E830);
      }
    }
LABEL_78:
    sub_10018440C(v578, *(void *)(v560 + 80));
    sub_10018E07C((uint64_t)&v576);
    sub_10012B520(v136, 1, v580);
    if (v158)
    {
      sub_100178110(v136, &qword_100E6E830);
      uint64_t v278 = (uint64_t)v577;
      sub_10006DF38((uint64_t)v577, v541, &qword_100E855C0);
      uint64_t v279 = type metadata accessor for NewsComponentPosition();
      sub_10012B520(v541, 1, v279);
      if (v158)
      {
        sub_100178110(v541, &qword_100E855C0);
        sub_100B64158((uint64_t)&v569);
      }
      else
      {
        sub_100186E4C();
        v284();
        sub_100629334(v549, v539);
        uint64_t v148 = v551 + 8;
        uint64_t v146 = v539;
        uint64_t v278 = (uint64_t)v577;
        (*(void (**)(uint64_t, uint64_t *))(v551 + 8))(v549, v134);
        sub_1000C134C(v541, (void (*)(void))type metadata accessor for NewsComponentPosition);
        sub_10012B520(v539, 1, v554);
        if (!v285)
        {
          v578 = type metadata accessor for NewsArticleComponent;
          sub_100178CEC(v539, v522, (void (*)(void))type metadata accessor for NewsArticleComponent);
          sub_1001A1AFC();
          swift_bridgeObjectRelease();
          uint64_t v310 = swift_bridgeObjectRelease();
          sub_1001836B8(v310, (void (*)(void))type metadata accessor for NextHourPrecipitationComponentParameters);
          uint64_t v311 = sub_100178110(v278, &qword_100E855C0);
          sub_1001A4A6C(v311, (void (*)(void))type metadata accessor for NewsDataModel);
          sub_1000C134C((uint64_t)v134, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
          uint64_t v312 = sub_1001A2A0C();
          v313(v312);
          uint64_t v314 = sub_10019F88C();
          v315(v314);
          type metadata accessor for MapComponent();
          sub_10017F35C();
          sub_100178CEC(v278, v316, (void (*)(void))type metadata accessor for WeatherData);
          sub_100166E4C();
          sub_10018885C((void (*)(void))type metadata accessor for LocationViewComponent, (uint64_t)v583);
          sub_1001912E4(v522);
          sub_100176EAC();
          type metadata accessor for LocationNoAqiSevereNewsConfiguration._Storage(0);
          sub_100181044();
          sub_100184E38();
          return sub_1002D2890() | 0x4000000000000000;
        }
      }
      sub_100178110(v146, &qword_100EB35E8);
      uint64_t v286 = v579;
      sub_100182DE4(v579);
      sub_100128AE0();
      uint64_t v287 = swift_bridgeObjectRelease();
      sub_1001836B8(v287, (void (*)(void))type metadata accessor for NextHourPrecipitationComponentParameters);
      uint64_t v288 = sub_100178110(v278, &qword_100E855C0);
      sub_1001A4A6C(v288, (void (*)(void))type metadata accessor for NewsDataModel);
      sub_1000C134C(v148, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      uint64_t v289 = sub_1001A2A0C();
      v290(v289);
      uint64_t v291 = sub_10017B058();
      v292(v291);
      type metadata accessor for MapComponent();
      sub_1001628A4();
      sub_100178CEC(v286, v293, (void (*)(void))type metadata accessor for WeatherData);
      sub_100165450();
      sub_100164080((void (*)(void))type metadata accessor for LocationViewComponent, (uint64_t)v583);
      type metadata accessor for LocationNoAqiSevereConfiguration._Storage(0);
      sub_100181044();
      uint64_t v294 = sub_10019AA7C();
      uint64_t v375 = sub_1002D1EB8(v294);
      unint64_t v376 = 0x9000000000000000;
      return v375 | v376;
    }
    sub_100178CEC(v136, v546, (void (*)(void))type metadata accessor for LocationViewComponent);
    uint64_t v280 = sub_100150320();
    sub_100188E8C(v280, v281, (uint64_t)v571);
    uint64_t v282 = type metadata accessor for NewsComponentPosition();
    sub_10012B520(v146, 1, v282);
    if (v283)
    {
      sub_100178110(v146, &qword_100E855C0);
      sub_100B64158((uint64_t)v568);
    }
    else
    {
      sub_100186E4C();
      v295();
      uint64_t v296 = v146;
      sub_100629334(v549, v538);
      uint64_t v148 = v551 + 8;
      uint64_t v146 = v538;
      (*(void (**)(uint64_t, uint64_t *))(v551 + 8))(v549, v134);
      uint64_t v123 = v577;
      sub_1000C134C(v296, (void (*)(void))type metadata accessor for NewsComponentPosition);
      sub_10012B520(v538, 1, v554);
      if (!v297)
      {
        v578 = type metadata accessor for NewsArticleComponent;
        sub_100178CEC(v538, v521, (void (*)(void))type metadata accessor for NewsArticleComponent);
        sub_1001A1AFC();
        swift_bridgeObjectRelease();
        uint64_t v317 = swift_bridgeObjectRelease();
        sub_1001836B8(v317, (void (*)(void))type metadata accessor for NextHourPrecipitationComponentParameters);
        uint64_t v318 = sub_100178110((uint64_t)v123, &qword_100E855C0);
        sub_1001A4A6C(v318, (void (*)(void))type metadata accessor for NewsDataModel);
        sub_1000C134C((uint64_t)v134, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
        uint64_t v319 = sub_1001A2A0C();
        v320(v319);
        uint64_t v321 = sub_10019F88C();
        v322(v321);
        type metadata accessor for MapComponent();
        sub_10017F35C();
        sub_100178CEC(v150, v323, (void (*)(void))type metadata accessor for WeatherData);
        sub_100166E4C();
        sub_100178CEC(v555, v553, (void (*)(void))type metadata accessor for LocationViewComponent);
        sub_1001912E4(v521);
        sub_100176EAC();
        sub_100178CEC(v546, v537, (void (*)(void))type metadata accessor for LocationViewComponent);
        type metadata accessor for LocationSevereNewsConfiguration._Storage(0);
        sub_100181044();
        sub_100184E38();
        sub_1002D4EDC();
        unint64_t v376 = 0x6000000000000004;
        return v375 | v376;
      }
    }
    sub_100178110(v146, &qword_100EB35E8);
    uint64_t v298 = v579;
    sub_100182DE4(v579);
    sub_100128AE0();
    uint64_t v299 = swift_bridgeObjectRelease();
    sub_1001836B8(v299, (void (*)(void))type metadata accessor for NextHourPrecipitationComponentParameters);
    uint64_t v300 = sub_100178110((uint64_t)v123, &qword_100E855C0);
    sub_1001A4A6C(v300, (void (*)(void))type metadata accessor for NewsDataModel);
    sub_1000C134C(v148, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
    uint64_t v301 = sub_1001A2A0C();
    v302(v301);
    uint64_t v303 = sub_10017B058();
    v304(v303);
    type metadata accessor for MapComponent();
    sub_1001628A4();
    sub_100178CEC(v298, v305, (void (*)(void))type metadata accessor for WeatherData);
    sub_100165450();
    sub_100178CEC(v555, v553, (void (*)(void))type metadata accessor for LocationViewComponent);
    sub_10018AC6C((uint64_t)&v575);
    type metadata accessor for LocationSevereConfiguration._Storage(0);
    sub_100181044();
    sub_1001D1498();
    return sub_1002D45C8() | 0x1000000000000000;
  }
  v572 = (uint64_t (*)())((char *)v572 + 8);
  sub_100178110((uint64_t)v559, &qword_100E6E830);
  sub_100162808();
  v138();
  uint64_t v139 = HourPrecipitationComponentParameters;
  sub_10014FF5C(v579, v561 + *(int *)(HourPrecipitationComponentParameters + 20), (void (*)(void))type metadata accessor for WeatherData);
  *(void *)(v561 + *(int *)(HourPrecipitationComponentParameters + 24)) = _swiftEmptyArrayStorage;
  sub_10019CA18(*(int *)(v139 + 28));
  uint64_t v140 = v560;
  if (v141)
  {
    sub_10011C120();
    sub_100182298();
    uint64_t v142 = (uint64_t)v582;
    Swift::Int v143 = Hasher._finalize()();
    uint64_t v144 = -1 << *(unsigned char *)(v136 + 32);
    unint64_t v145 = v143 & ~v144;
    uint64_t v139 = v136 + 56;
    if ((*(void *)(v136 + 56 + ((v145 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v145))
    {
      uint64_t v130 = ~v144;
      while (1)
      {
        uint64_t v136 = 0xEA00000000007974;
        switch(*(unsigned char *)(v581[6] + v145))
        {
          case 1:
            sub_100184848();
            goto LABEL_48;
          case 2:
            sub_1001871A8();
            break;
          case 3:
            uint64_t v136 = 0xE400000000000000;
            sub_100126140();
            break;
          default:
            break;
        }
        uint64_t v142 = sub_10018A180();
        swift_bridgeObjectRelease();
        if (v142) {
          break;
        }
        unint64_t v145 = (v145 + 1) & v130;
        if (((*(void *)(v139 + ((v145 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v145) & 1) == 0) {
          goto LABEL_51;
        }
      }
LABEL_48:
      sub_10018440C(v578, *(void *)(v560 + 80));
      uint64_t v136 = v536;
      sub_100A63440(v561, v536);
      uint64_t v200 = v580;
      sub_10012B520(v536, 1, v580);
      if (!v158)
      {
        sub_100178CEC(v536, v533, (void (*)(void))type metadata accessor for LocationViewComponent);
        sub_10018440C(v578, *(void *)(v560 + 80));
        sub_10021042C((uint64_t)&v553);
        sub_10012B520(v536, 1, v200);
        if (!v244)
        {
          sub_100178CEC(v536, v524, (void (*)(void))type metadata accessor for LocationViewComponent);
          uint64_t v324 = sub_1001B1E64(v578, *(void *)(v140 + 80));
          uint64_t v325 = sub_100183384();
          v132(v325);
          uint64_t v326 = *v324;
          sub_10019B2B4((uint64_t)v543);
          sub_100127BA4();
          v137();
          uint64_t v327 = sub_100127A44();
          sub_10012B520(v327, v328, v200);
          uint64_t v330 = v139;
          uint64_t v331 = v130;
          if (v329)
          {
            sub_100178110(v131, &qword_100E6E830);
            sub_100188E8C((uint64_t)v577, &qword_100E855C0, (uint64_t)v531);
            uint64_t v332 = type metadata accessor for NewsComponentPosition();
            sub_10012B520(v326, 1, v332);
            if (v158)
            {
              sub_100178110(v326, &qword_100E855C0);
              uint64_t v439 = v510;
              sub_100185818(v510);
            }
            else
            {
              sub_10016EF48();
              uint64_t v436 = *(void *)(v435 - 256);
              uint64_t v437 = v550;
              sub_1001649D0();
              v438();
              uint64_t v439 = v510;
              sub_100629334(v436, v510);
              ((void (*)(uint64_t, uint64_t))v324[1])(v436, v437);
              sub_1000C134C(v326, (void (*)(void))type metadata accessor for NewsComponentPosition);
              sub_10012B520(v510, 1, v554);
              if (!v440)
              {
                v578 = type metadata accessor for NewsArticleComponent;
                sub_100178CEC(v510, v504, (void (*)(void))type metadata accessor for NewsArticleComponent);
                uint64_t v477 = v330;
                sub_1001D16AC();
                uint64_t v478 = v575;
                sub_100119528(v479, v480, v575, v331, (uint64_t)v581, v576);
                uint64_t v573 = v481;
                swift_bridgeObjectRelease();
                uint64_t v482 = swift_bridgeObjectRelease();
                sub_10018C698(v482, (void (*)(void))type metadata accessor for NextHourPrecipitationComponentParameters);
                uint64_t v483 = sub_100178110((uint64_t)v577, &qword_100E855C0);
                sub_1001A4A6C(v483, (void (*)(void))type metadata accessor for NewsDataModel);
                sub_1000C134C(v478, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
                sub_100162F0C();
                v484();
                sub_1001A2FC8();
                v485();
                type metadata accessor for MapComponent();
                sub_10017F35C();
                sub_100178CEC(v477, v486, (void (*)(void))type metadata accessor for WeatherData);
                swift_storeEnumTagMultiPayload();
                sub_100178CEC(v533, v553, (void (*)(void))type metadata accessor for LocationViewComponent);
                sub_1001912E4(v504);
                sub_100176EAC();
                sub_100178CEC(v524, v537, (void (*)(void))type metadata accessor for LocationViewComponent);
                type metadata accessor for LocationNhpNewsConfiguration._Storage(0);
                sub_100181044();
                sub_100184E38();
                sub_1002CF1DC();
                return v487 | 0x7000000000000000;
              }
            }
            sub_100178110(v439, &qword_100EB35E8);
            uint64_t v441 = v575;
            sub_100119528(v330, v564, v575, v331, (uint64_t)v581, v576);
            swift_bridgeObjectRelease();
            uint64_t v442 = swift_bridgeObjectRelease();
            sub_10018C698(v442, (void (*)(void))type metadata accessor for NextHourPrecipitationComponentParameters);
            uint64_t v443 = sub_100178110((uint64_t)v577, &qword_100E855C0);
            sub_1001A4A6C(v443, (void (*)(void))type metadata accessor for NewsDataModel);
            sub_1000C134C(v441, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
            sub_100162F0C();
            v444();
            sub_1001A2FC8();
            v445();
            type metadata accessor for MapComponent();
            sub_1001628A4();
            sub_100178CEC(v330, v446, (void (*)(void))type metadata accessor for WeatherData);
            swift_storeEnumTagMultiPayload();
            sub_100178CEC(v533, v553, (void (*)(void))type metadata accessor for LocationViewComponent);
            sub_10018AC6C((uint64_t)&v551);
            type metadata accessor for LocationNhpConfiguration._Storage(0);
            sub_100181044();
            uint64_t v375 = sub_1002CDD8C();
            unint64_t v376 = 0x1000000000000004;
          }
          else
          {
            sub_100178CEC(v131, v508, (void (*)(void))type metadata accessor for LocationViewComponent);
            uint64_t v403 = v575;
            sub_100119528(v330, v564, v575, v130, (uint64_t)v581, (uint64_t)v324);
            swift_bridgeObjectRelease();
            uint64_t v404 = swift_bridgeObjectRelease();
            sub_10018C698(v404, (void (*)(void))type metadata accessor for NextHourPrecipitationComponentParameters);
            uint64_t v405 = sub_100178110((uint64_t)v577, &qword_100E855C0);
            sub_1001A4A6C(v405, (void (*)(void))type metadata accessor for NewsDataModel);
            sub_1000C134C(v403, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
            sub_100162F0C();
            v406();
            uint64_t v407 = sub_10019F88C();
            v408(v407);
            type metadata accessor for MapComponent();
            sub_10017F35C();
            sub_100178CEC(v330, v409, (void (*)(void))type metadata accessor for WeatherData);
            swift_storeEnumTagMultiPayload();
            sub_10017B510(v508);
            sub_10018A518((uint64_t)&v563);
            sub_1001BFD40(v524);
            type metadata accessor for LocationNhpMinorAlertConfiguration._Storage(0);
            sub_100181044();
            sub_10019D39C();
            sub_1002CE6C4();
            unint64_t v376 = 0xB000000000000004;
          }
          return v375 | v376;
        }
        sub_100178110(v536, &qword_100E6E830);
        sub_100188E8C((uint64_t)v577, &qword_100E855C0, (uint64_t)&v542);
        uint64_t v245 = type metadata accessor for NewsComponentPosition();
        if (_s7Weather24LocationCompositionStateOwet_0(v142, 1, v245) == 1)
        {
          sub_100178110(v142, &qword_100E855C0);
          uint64_t v246 = v516;
          sub_100185818(v516);
          uint64_t v247 = v579;
        }
        else
        {
          uint64_t v377 = sub_100185FC4();
          v378(v377);
          uint64_t v246 = v516;
          sub_100629334(v139, v516);
          uint64_t v379 = sub_10012B75C();
          v380(v379);
          sub_1000C134C(v142, (void (*)(void))type metadata accessor for NewsComponentPosition);
          sub_10012B520(v516, 1, v554);
          uint64_t v247 = v579;
          uint64_t v381 = v574[0];
          if (!v158)
          {
            v572 = type metadata accessor for NewsArticleComponent;
            sub_100178CEC(v516, v509, (void (*)(void))type metadata accessor for NewsArticleComponent);
            uint64_t v447 = sub_10018B22C();
            uint64_t v448 = v575;
            sub_100B639C4(v447, v449, v575, v381, (uint64_t)v581, v576, v573);
            v578 = v450;
            swift_bridgeObjectRelease();
            uint64_t v451 = swift_bridgeObjectRelease();
            sub_10018C698(v451, (void (*)(void))type metadata accessor for NextHourPrecipitationComponentParameters);
            uint64_t v452 = sub_100178110((uint64_t)v577, &qword_100E855C0);
            sub_1001A4A6C(v452, (void (*)(void))type metadata accessor for NewsDataModel);
            sub_1000C134C(v448, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
            uint64_t v453 = sub_1001D22C4();
            v454(v453);
            sub_1001A2FC8();
            v455();
            type metadata accessor for MapComponent();
            sub_10017F35C();
            sub_100178CEC(v247, v456, (void (*)(void))type metadata accessor for WeatherData);
            swift_storeEnumTagMultiPayload();
            sub_10018885C((void (*)(void))type metadata accessor for LocationViewComponent, (uint64_t)&v563);
            sub_1000A9E60(v509);
            swift_storeEnumTagMultiPayload();
            type metadata accessor for LocationNoAqiNhpNewsConfiguration._Storage(0);
            sub_100181044();
            sub_100184E38();
            uint64_t v375 = sub_1002D15A0();
            unint64_t v376 = 0x5000000000000000;
            return v375 | v376;
          }
        }
        sub_100178110(v246, &qword_100EB35E8);
        sub_100164C50();
        v578 = v382;
        swift_bridgeObjectRelease();
        uint64_t v383 = swift_bridgeObjectRelease();
        sub_10018C698(v383, (void (*)(void))type metadata accessor for NextHourPrecipitationComponentParameters);
        uint64_t v384 = sub_100178110((uint64_t)v577, &qword_100E855C0);
        sub_1001A4A6C(v384, (void (*)(void))type metadata accessor for NewsDataModel);
        sub_1000C134C((uint64_t)v137, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
        uint64_t v385 = sub_1001D22C4();
        v386(v385);
        sub_1001A2FC8();
        v387();
        type metadata accessor for MapComponent();
        sub_1001628A4();
        sub_100178CEC(v247, v388, (void (*)(void))type metadata accessor for WeatherData);
        swift_storeEnumTagMultiPayload();
        sub_100164080((void (*)(void))type metadata accessor for LocationViewComponent, (uint64_t)&v563);
        type metadata accessor for LocationNoAqiNhpConfiguration._Storage(0);
        sub_100181044();
        uint64_t v375 = sub_1002D0DD4((uint64_t)v578);
        unint64_t v376 = 0x9000000000000004;
        return v375 | v376;
      }
      sub_100178110(v536, &qword_100E6E830);
    }
  }
LABEL_51:
  sub_10018440C(v578, *(void *)(v560 + 80));
  sub_10021042C((uint64_t)&v577);
  sub_10012B520(v136, 1, v580);
  if (v158)
  {
    sub_100178110(v136, &qword_100E6E830);
    uint64_t v201 = sub_100150320();
    sub_10006DF38(v201, v542, v202);
    uint64_t v203 = type metadata accessor for NewsComponentPosition();
    if (_s7Weather24LocationCompositionStateOwet_0(v542, 1, v203) == 1)
    {
      sub_100178110(v542, &qword_100E855C0);
      uint64_t v204 = v540;
      sub_100185818(v540);
    }
    else
    {
      uint64_t v217 = sub_1001A3668();
      v218(v217);
      uint64_t v204 = v540;
      sub_100629334(v560, v540);
      uint64_t v219 = sub_1001CA978();
      v220(v219);
      sub_1000C134C(v542, (void (*)(void))type metadata accessor for NewsComponentPosition);
      sub_10012B520(v540, 1, v554);
      if (!v158)
      {
        sub_100178CEC(v540, v523, (void (*)(void))type metadata accessor for NewsArticleComponent);
        uint64_t v252 = v579;
        uint64_t v253 = sub_10018B22C();
        sub_100214E0C(v253, v254, v575, v574[0], (uint64_t)v581, v576);
        uint64_t v256 = v255;
        swift_bridgeObjectRelease();
        uint64_t v257 = swift_bridgeObjectRelease();
        sub_10018C698(v257, (void (*)(void))type metadata accessor for NextHourPrecipitationComponentParameters);
        uint64_t v258 = sub_100178110((uint64_t)v123, &qword_100E855C0);
        sub_1001A4A6C(v258, (void (*)(void))type metadata accessor for NewsDataModel);
        sub_1000C134C(v575, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
        sub_100162F0C();
        v259();
        uint64_t v260 = sub_10019F88C();
        v261(v260);
        type metadata accessor for MapComponent();
        sub_10017F35C();
        sub_100178CEC(v252, v262, (void (*)(void))type metadata accessor for WeatherData);
        swift_storeEnumTagMultiPayload();
        sub_10017B510(v523);
        swift_storeEnumTagMultiPayload();
        type metadata accessor for LocationNoAqiNewsConfiguration._Storage(0);
        sub_100181044();
        return sub_1002D05EC(v256) | 4;
      }
    }
    sub_100178110(v204, &qword_100EB35E8);
    uint64_t v221 = v579;
    uint64_t v222 = sub_10018B22C();
    uint64_t v223 = v574[0];
    sub_100214E0C(v222, v224, v575, v574[0], (uint64_t)v581, v576);
    uint64_t v226 = v225;
    swift_bridgeObjectRelease();
    uint64_t v227 = swift_bridgeObjectRelease();
    sub_10018C698(v227, (void (*)(void))type metadata accessor for NextHourPrecipitationComponentParameters);
    uint64_t v228 = sub_100178110((uint64_t)v123, &qword_100E855C0);
    sub_1001A4A6C(v228, (void (*)(void))type metadata accessor for NewsDataModel);
    sub_1000C134C(v575, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
    sub_100162F0C();
    v229();
    uint64_t v230 = sub_10017B058();
    v231(v230);
    type metadata accessor for MapComponent();
    sub_1001628A4();
    sub_100178CEC(v221, v232, (void (*)(void))type metadata accessor for WeatherData);
    sub_100165450();
    type metadata accessor for LocationNoAqiConfiguration._Storage(0);
    uint64_t v233 = sub_100181044();
    *(void *)(v233 + 16) = v226;
    sub_100178CEC(v223, v233 + OBJC_IVAR____TtCV7Weather26LocationNoAqiConfiguration8_Storage_map, (void (*)(void))type metadata accessor for LocationViewComponent);
    return v233 | 0xA000000000000000;
  }
  else
  {
    sub_100178CEC(v136, v548, (void (*)(void))type metadata accessor for LocationViewComponent);
    int v205 = sub_1001B1E64(v578, *(void *)(v560 + 80));
    uint64_t v206 = sub_100183384();
    v132(v206);
    sub_10019B2B4((uint64_t)&v573);
    uint64_t v207 = v580;
    sub_100127BA4();
    v137();
    uint64_t v208 = sub_100127A44();
    sub_10012B520(v208, v209, v207);
    if (!v210)
    {
      sub_100178CEC(v131, v532, (void (*)(void))type metadata accessor for LocationViewComponent);
      uint64_t v234 = sub_10018B22C();
      uint64_t v235 = v575;
      sub_100B639C4(v234, v236, v575, v130, (uint64_t)v581, (uint64_t)v205, v573);
      swift_bridgeObjectRelease();
      uint64_t v237 = swift_bridgeObjectRelease();
      sub_10018C698(v237, (void (*)(void))type metadata accessor for NextHourPrecipitationComponentParameters);
      uint64_t v238 = sub_100178110((uint64_t)v577, &qword_100E855C0);
      sub_1001A4A6C(v238, (void (*)(void))type metadata accessor for NewsDataModel);
      sub_1000C134C(v235, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
      uint64_t v239 = sub_1001D22C4();
      v240(v239);
      uint64_t v241 = sub_10019F88C();
      v242(v241);
      type metadata accessor for MapComponent();
      sub_10017F35C();
      sub_100178CEC(v139, v243, (void (*)(void))type metadata accessor for WeatherData);
      swift_storeEnumTagMultiPayload();
      sub_10017B510(v532);
      sub_10018A518((uint64_t)&v578);
      type metadata accessor for LocationMinorAlertConfiguration._Storage(0);
      sub_100181044();
      sub_100184E38();
      uint64_t v375 = sub_1002CD6E4();
      unint64_t v376 = 0xB000000000000000;
      return v375 | v376;
    }
    sub_100178110(v131, &qword_100E6E830);
    sub_100188E8C((uint64_t)v577, &qword_100E855C0, (uint64_t)&v561);
    uint64_t v211 = type metadata accessor for NewsComponentPosition();
    if (_s7Weather24LocationCompositionStateOwet_0(v207, 1, v211) == 1)
    {
      sub_100178110(v207, &qword_100E855C0);
      uint64_t v212 = v530;
      uint64_t v213 = sub_100127A44();
      uint64_t v214 = v554;
      _s7Weather24LocationCompositionStateOwst_0(v213, v215, 1, v554);
      uint64_t v216 = v529;
    }
    else
    {
      sub_1001649D0();
      v248();
      uint64_t v212 = v530;
      sub_100629334(v549, v530);
      sub_100127BA4();
      v249();
      sub_1000C134C(v207, (void (*)(void))type metadata accessor for NewsComponentPosition);
      uint64_t v250 = sub_100127A44();
      uint64_t v214 = v554;
      sub_10012B520(v250, v251, v554);
      uint64_t v216 = v529;
      if (!v158)
      {
        v572 = type metadata accessor for NewsArticleComponent;
        sub_100178CEC(v530, v514, (void (*)(void))type metadata accessor for NewsArticleComponent);
        uint64_t v338 = sub_10018B22C();
        uint64_t v339 = v575;
        sub_100B639C4(v338, v340, v575, v130, (uint64_t)v581, v576, v573);
        v578 = v341;
        swift_bridgeObjectRelease();
        uint64_t v342 = swift_bridgeObjectRelease();
        sub_10018C698(v342, (void (*)(void))type metadata accessor for NextHourPrecipitationComponentParameters);
        uint64_t v343 = sub_100178110((uint64_t)v577, &qword_100E855C0);
        sub_1001A4A6C(v343, (void (*)(void))type metadata accessor for NewsDataModel);
        sub_1000C134C(v339, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
        uint64_t v344 = sub_1001D22C4();
        v345(v344);
        sub_1001A2FC8();
        v346();
        type metadata accessor for MapComponent();
        sub_10017F35C();
        sub_100178CEC(v139, v347, (void (*)(void))type metadata accessor for WeatherData);
        sub_100166E4C();
        sub_100178CEC(v548, v553, (void (*)(void))type metadata accessor for LocationViewComponent);
        sub_1000A9E60(v514);
        sub_100176EAC();
        type metadata accessor for LocationDefaultNewsConfiguration._Storage(0);
        sub_100181044();
        sub_100184E38();
        uint64_t v375 = sub_1002C9C10();
        unint64_t v376 = 0x2000000000000004;
        return v375 | v376;
      }
    }
    sub_100178110(v212, &qword_100EB35E8);
    sub_10006DF38((uint64_t)v577, v216, &qword_100E855C0);
    sub_10012B520(v216, 1, v211);
    if (v158)
    {
      sub_100178110(v216, &qword_100E855C0);
      uint64_t v266 = v528;
      _s7Weather24LocationCompositionStateOwst_0(v528, 1, 1, v214);
    }
    else
    {
      sub_10016EF48();
      uint64_t v264 = *(void *)(v263 - 256);
      sub_1001649D0();
      v265();
      uint64_t v266 = v528;
      sub_100629334(v264, v528);
      (*(void (**)(uint64_t, uint64_t))(v211 + 8))(v264, v550);
      sub_1000C134C(v216, (void (*)(void))type metadata accessor for NewsComponentPosition);
      sub_10012B520(v528, 1, v214);
      if (!v267)
      {
        sub_100178CEC(v528, v512, (void (*)(void))type metadata accessor for NewsArticleComponent);
        sub_100164C50();
        swift_bridgeObjectRelease();
        uint64_t v348 = swift_bridgeObjectRelease();
        sub_10018C698(v348, (void (*)(void))type metadata accessor for NextHourPrecipitationComponentParameters);
        uint64_t v349 = sub_100178110((uint64_t)v577, &qword_100E855C0);
        sub_1001A4A6C(v349, (void (*)(void))type metadata accessor for NewsDataModel);
        sub_1000C134C(v214, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
        uint64_t v350 = sub_1001D22C4();
        v351(v350);
        sub_1001A2FC8();
        v352();
        type metadata accessor for MapComponent();
        sub_10017F35C();
        sub_100178CEC(v139, v353, (void (*)(void))type metadata accessor for WeatherData);
        sub_100166E4C();
        sub_10018885C((void (*)(void))type metadata accessor for LocationViewComponent, (uint64_t)&v578);
        sub_10014FF5C(v512, v552, (void (*)(void))type metadata accessor for ArticleModel);
        *(unsigned char *)(v552 + *(int *)(v554 + 20)) = 1;
        sub_1000C134C(v512, (void (*)(void))type metadata accessor for NewsArticleComponent);
        sub_100176EAC();
        type metadata accessor for LocationDefaultTrendNewsConfiguration._Storage(0);
        sub_100181044();
        sub_100184E38();
        return sub_1002CA380() | 0x3000000000000000;
      }
    }
    sub_100178110(v266, &qword_100EB35E8);
    uint64_t v268 = sub_10018B22C();
    uint64_t v269 = v575;
    sub_100B639C4(v268, v270, v575, v130, (uint64_t)v581, v576, v573);
    swift_bridgeObjectRelease();
    uint64_t v271 = swift_bridgeObjectRelease();
    sub_10018C698(v271, (void (*)(void))type metadata accessor for NextHourPrecipitationComponentParameters);
    uint64_t v272 = sub_100178110((uint64_t)v577, &qword_100E855C0);
    sub_1001A4A6C(v272, (void (*)(void))type metadata accessor for NewsDataModel);
    sub_1000C134C(v269, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
    uint64_t v273 = sub_1001D22C4();
    v274(v273);
    sub_1001A2FC8();
    v275();
    type metadata accessor for MapComponent();
    sub_1001628A4();
    sub_100178CEC(v139, v276, (void (*)(void))type metadata accessor for WeatherData);
    sub_100165450();
    sub_100164080((void (*)(void))type metadata accessor for LocationViewComponent, (uint64_t)&v578);
    type metadata accessor for LocationDefaultConfiguration._Storage(0);
    sub_100181044();
    uint64_t v277 = sub_10019AA7C();
    return sub_1002C9520(v277);
  }
}

void sub_100B639C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  LODWORD(v80) = a7;
  uint64_t v79 = a5;
  uint64_t v78 = a4;
  uint64_t v9 = sub_10017DF08(&qword_100E66CA0);
  __chkstk_darwin(v9 - 8);
  uint64_t v81 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CurrentWeather();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = type metadata accessor for LocationViewComponent();
  __chkstk_darwin(v12);
  uint64_t v90 = (uint64_t)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v89 = (char *)&v78 - v15;
  __chkstk_darwin(v16);
  uint64_t v87 = (char *)&v78 - v17;
  __chkstk_darwin(v18);
  uint64_t v84 = (char *)&v78 - v19;
  __chkstk_darwin(v20);
  uint64_t v95 = (char *)&v78 - v21;
  __chkstk_darwin(v22);
  uint64_t v94 = (uint64_t)&v78 - v23;
  __chkstk_darwin(v24);
  uint64_t v92 = (uint64_t *)((char *)&v78 - v25);
  __chkstk_darwin(v26);
  uint64_t v93 = (char *)&v78 - v27;
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v78 - v29;
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)&v78 - v32;
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)&v78 - v35;
  __chkstk_darwin(v37);
  uint64_t v88 = (char *)&v78 - v38;
  uint64_t v85 = a1;
  sub_100B5F478(a3, v79, (uint64_t)_swiftEmptyArrayStorage, (int)v80, (uint64_t)&v78 - v38);
  type metadata accessor for WeatherData(0);
  WeatherDataModel.currentWeather.getter();
  uint64_t v39 = (int *)type metadata accessor for PreprocessedWeatherData();
  uint64_t v40 = *(void *)(a3 + v39[5]);
  uint64_t v41 = *(int *)(type metadata accessor for DailyForecastComponent() + 20);
  uint64_t v86 = v36;
  *(void *)&v36[v41] = v40;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  WeatherDataModel.currentWeather.getter();
  uint64_t v42 = a3 + v39[10];
  uint64_t v43 = type metadata accessor for UVIndexComponent();
  sub_10014FF5C(v42, (uint64_t)&v33[*(int *)(v43 + 20)], (void (*)(void))type metadata accessor for UVIndexComponentPreprocessedDataModel);
  WeatherDataModel.dailyForecast.getter();
  uint64_t v83 = v33;
  WeatherDataModel.hourlyForecast.getter();
  swift_storeEnumTagMultiPayload();
  WeatherDataModel.currentWeather.getter();
  WeatherDataModel.dailyForecast.getter();
  uint64_t v82 = v30;
  SunriseSunsetModel.init(currentWeather:dailyForecast:)();
  uint64_t v91 = v12;
  swift_storeEnumTagMultiPayload();
  uint64_t v44 = v93;
  WeatherDataModel.currentWeather.getter();
  uint64_t v45 = (const void *)(a3 + v39[13]);
  memcpy(__dst, v45, sizeof(__dst));
  uint64_t v46 = type metadata accessor for WindComponent();
  memcpy(&v44[*(int *)(v46 + 20)], v45, 0xE8uLL);
  swift_storeEnumTagMultiPayload();
  uint64_t v47 = v39[9];
  uint64_t v80 = v39;
  uint64_t v48 = (uint64_t *)(a3 + v47);
  uint64_t v49 = *v48;
  uint64_t v50 = v48[1];
  uint64_t v51 = v48[2];
  uint64_t v52 = v48[3];
  uint64_t v53 = v48[4];
  uint64_t v54 = v48[5];
  uint64_t v55 = v48[6];
  uint64_t v56 = v48[7];
  uint64_t v57 = v48[8];
  uint64_t v58 = v48[9];
  uint64_t v59 = v48[10];
  uint64_t v60 = v48[11];
  uint64_t v62 = v48[12];
  uint64_t v61 = (char *)v48[13];
  uint64_t v81 = v61;
  uint64_t v63 = v92;
  *uint64_t v92 = v49;
  v63[1] = v50;
  v63[2] = v51;
  v63[3] = v52;
  v63[4] = v53;
  v63[5] = v54;
  v63[6] = v55;
  v63[7] = v56;
  v63[8] = v57;
  v63[9] = v58;
  v63[10] = v59;
  v63[11] = v60;
  v63[12] = v62;
  v63[13] = v61;
  swift_storeEnumTagMultiPayload();
  sub_10014FF5C(a3 + v39[6], v94, (void (*)(void))type metadata accessor for FeelsLikeComponentPreprocessedDataModel);
  swift_storeEnumTagMultiPayload();
  sub_100049160((uint64_t)__dst);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  WeatherDataModel.currentWeather.getter();
  swift_storeEnumTagMultiPayload();
  uint64_t v64 = v84;
  WeatherDataModel.currentWeather.getter();
  uint64_t v65 = v80;
  uint64_t v66 = a3;
  uint64_t v67 = (uint64_t *)(a3 + v80[11]);
  uint64_t v69 = *v67;
  uint64_t v68 = v67[1];
  uint64_t v71 = v67[2];
  uint64_t v70 = v67[3];
  uint64_t v73 = v67[4];
  uint64_t v72 = v67[5];
  uint64_t v74 = &v64[*(int *)(type metadata accessor for VisibilityComponent() + 20)];
  *(void *)uint64_t v74 = v69;
  *((void *)v74 + 1) = v68;
  *((void *)v74 + 2) = v71;
  *((void *)v74 + 3) = v70;
  *((void *)v74 + 4) = v73;
  *((void *)v74 + 5) = v72;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v75 = v87;
  WeatherDataModel.currentWeather.getter();
  uint64_t v76 = v66 + v65[12];
  uint64_t v77 = type metadata accessor for PressureComponent();
  sub_10014FF5C(v76, (uint64_t)&v75[*(int *)(v77 + 20)], (void (*)(void))type metadata accessor for PressureComponentPreprocessedDataModel);
  swift_storeEnumTagMultiPayload();
  WeatherDataModel.historicalComparisons.getter();
  swift_storeEnumTagMultiPayload();
  sub_10014FF5C(v85, v90, (void (*)(void))type metadata accessor for WeatherData);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for LocationCommonConfigurationComponents._Storage(0);
  swift_allocObject();
  sub_1002C70AC();
}

uint64_t sub_100B64110(uint64_t a1)
{
  return sub_100B5CD8C(a1);
}

unint64_t sub_100B64134(uint64_t a1)
{
  return sub_100B5F904(a1);
}

uint64_t sub_100B64158@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(a1 - 256);
  return _s7Weather24LocationCompositionStateOwst_0(v3, 1, 1, v1);
}

uint64_t *sub_100B64188(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = *(int *)(a3 + 28);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for WeatherDescription();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 32)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 32));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_100B64298(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for WeatherDescription();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100B64324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for WeatherDescription();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 32)) = *(void *)(a2 + *(int *)(a3 + 32));
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100B643E4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for WeatherDescription();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 32)) = *(void *)((char *)a2 + *(int *)(a3 + 32));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_100B644B4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for WeatherDescription();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(a3 + 32)) = *(void *)((char *)a2 + *(int *)(a3 + 32));
  return a1;
}

void *sub_100B6454C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for WeatherDescription();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)((char *)a1 + *(int *)(a3 + 32)) = *(void *)((char *)a2 + *(int *)(a3 + 32));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100B64604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B64618);
}

uint64_t sub_100B64618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for WeatherDescription();
    uint64_t v9 = a1 + *(int *)(a3 + 28);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_100B646A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B646B4);
}

uint64_t sub_100B646B4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for WeatherDescription();
    uint64_t v8 = v5 + *(int *)(a4 + 28);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_100B64734()
{
  uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v26 = v1;
  v2._countAndFlagsBits = 8236;
  v2._object = (void *)0xE200000000000000;
  String.append(_:)(v2);
  uint64_t v3 = *(void *)(v0 + 16);
  unint64_t v4 = *(void **)(v0 + 24);
  swift_bridgeObjectRetain();
  v5._countAndFlagsBits = v3;
  v5._object = v4;
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  sub_10012B78C();
  uint64_t v7 = v6;
  unint64_t v8 = *(void *)(v6 + 16);
  if (v8 >= *(void *)(v6 + 24) >> 1)
  {
    sub_10012B78C();
    uint64_t v7 = v22;
  }
  *(void *)(v7 + 16) = v8 + 1;
  uint64_t v9 = v7 + 16 * v8;
  *(void *)(v9 + 32) = v25;
  *(void *)(v9 + 40) = v26;
  type metadata accessor for UVIndexComponentViewModel();
  uint64_t v10 = WeatherDescription.string.getter();
  uint64_t v12 = v11;
  unint64_t v13 = *(void *)(v7 + 16);
  if (v13 >= *(void *)(v7 + 24) >> 1)
  {
    sub_1001884BC();
    uint64_t v7 = v23;
  }
  *(void *)(v7 + 16) = v13 + 1;
  uint64_t v14 = v7 + 16 * v13;
  *(void *)(v14 + 32) = v10;
  *(void *)(v14 + 40) = v12;
  id v15 = [self mainBundle];
  v27._countAndFlagsBits = 0xD000000000000033;
  v27._object = (void *)0x8000000100CBF5D0;
  v16._object = (void *)0x8000000100CBF5A0;
  v16._countAndFlagsBits = 0xD000000000000024;
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  Swift::String v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v27);

  unint64_t v19 = *(void *)(v7 + 16);
  if (v19 >= *(void *)(v7 + 24) >> 1)
  {
    sub_1001884BC();
    uint64_t v7 = v24;
  }
  *(void *)(v7 + 16) = v19 + 1;
  *(Swift::String *)(v7 + 16 * v19 + 32) = v18;
  sub_10017DF08(&qword_100E91BC0);
  sub_10012BB8C();
  uint64_t v20 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_100B64954(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2 || *(double *)(a1 + 8) != *(double *)(a2 + 8)) {
    return 0;
  }
  BOOL v4 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
  if (!v4 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  uint64_t v5 = type metadata accessor for UVIndexComponentViewModel();
  if ((static WeatherDescription.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(v5 + 32);
  uint64_t v7 = *(void **)(a1 + v6);
  unint64_t v8 = *(void **)(a2 + v6);

  return sub_1001508B0(v7, v8);
}

uint64_t sub_100B64A14()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 56);

  return swift_deallocObject();
}

id sub_100B64A54()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if (v1)
  {
    id v2 = *(id *)(v0 + 16);
  }
  else
  {
    id v3 = [objc_allocWithZone((Class)NSDateFormatter) init];
    [v3 setDateStyle:3];
    [v3 setTimeStyle:3];
    BOOL v4 = *(void **)(v0 + 16);
    *(void *)(v0 + 16) = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

void sub_100B64AE8(uint64_t a1, const void *a2)
{
  uint64_t v47 = a2;
  v46[3] = type metadata accessor for JSONEncoder.OutputFormatting();
  sub_100179C0C();
  v46[1] = v4;
  __chkstk_darwin(v5);
  sub_1001626E0();
  v46[2] = v7 - v6;
  type metadata accessor for URL();
  sub_100179C0C();
  uint64_t v49 = v8;
  uint64_t v50 = v9;
  __chkstk_darwin(v8);
  uint64_t v48 = (char *)v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v51 = (char *)v46 - v12;
  uint64_t v13 = type metadata accessor for JSONEncoder.DateEncodingStrategy();
  sub_100179C0C();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  sub_1001626E0();
  unint64_t v19 = (id *)(v18 - v17);
  uint64_t v20 = self;
  id v21 = [v20 defaultManager];
  uint64_t v52 = v2 + OBJC_IVAR____TtC7Weather18DiagnosticRecorder_diagnosticsFileURL;
  URL.path.getter();
  NSString v22 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned __int8 v23 = [v21 fileExistsAtPath:v22];

  if (v23)
  {
LABEL_4:
    type metadata accessor for JSONEncoder();
    swift_allocObject();
    JSONEncoder.init()();
    id *v19 = sub_100B64A54();
    (*(void (**)(id *, void, uint64_t))(v15 + 104))(v19, enum case for JSONEncoder.DateEncodingStrategy.formatted(_:), v13);
    dispatch thunk of JSONEncoder.dateEncodingStrategy.setter();
    type metadata accessor for LocationWeatherDataState(0);
    swift_retain();
    uint64_t v28 = Dictionary.init(dictionaryLiteral:)();
    uint64_t v29 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 24);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1002D8B5C();
      uint64_t v31 = v30;
      swift_release();
      a1 = v31;
    }
    uint64_t v32 = (void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData);
    *uint64_t v32 = 0xD000000000000052;
    v32[1] = 0x8000000100CBF6A0;
    v32[2] = v28;
    v32[3] = v29;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    URL.appendingPathComponent(_:)();
    __dst[0] = a1;
    sub_100B659A4();
    swift_retain();
    dispatch thunk of JSONEncoder.encode<A>(_:)();
    swift_release();
    Data.write(to:options:)();
    sub_10017DF08(&qword_100EB3800);
    uint64_t v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = xmmword_100C25ED0;
    static JSONEncoder.OutputFormatting.prettyPrinted.getter();
    static JSONEncoder.OutputFormatting.sortedKeys.getter();
    __dst[0] = v41;
    sub_100128EFC(&qword_100EB3808, (void (*)(uint64_t))&type metadata accessor for JSONEncoder.OutputFormatting);
    sub_10017DF08(&qword_100EB3810);
    sub_10012470C(&qword_100EB3818, &qword_100EB3810);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    dispatch thunk of JSONEncoder.outputFormatting.setter();
    URL.appendingPathComponent(_:)();
    memcpy(__dst, v47, sizeof(__dst));
    sub_100B659F0();
    uint64_t v42 = dispatch thunk of JSONEncoder.encode<A>(_:)();
    unint64_t v44 = v43;
    Data.write(to:options:)();
    sub_100318440(v42, v44);
    sub_100180C98();
    swift_release();
    uint64_t v45 = *(void (**)(void))(v50 + 8);
    sub_10017C964();
    v45();
    sub_10017C964();
    v45();
    swift_release();
    return;
  }
  id v24 = [v20 defaultManager];
  URL.path.getter();
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  __dst[0] = 0;
  unsigned int v26 = [v24 createDirectoryAtPath:v25 withIntermediateDirectories:1 attributes:0 error:__dst];

  if (v26)
  {
    id v27 = (id)__dst[0];
    goto LABEL_4;
  }
  id v33 = (id)__dst[0];
  uint64_t v34 = _convertNSErrorToError(_:)();

  swift_willThrow();
  if (qword_100E62860 != -1) {
    swift_once();
  }
  uint64_t v35 = type metadata accessor for Logger();
  sub_1002102B0(v35, (uint64_t)qword_100F52028);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v36, v37))
  {
    uint64_t v38 = (uint8_t *)swift_slowAlloc();
    __dst[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v38 = 136446210;
    uint64_t v53 = v34;
    swift_errorRetain();
    sub_10017DF08(&qword_100E77F30);
    uint64_t v39 = String.init<A>(describing:)();
    uint64_t v53 = sub_10016414C(v39, v40, __dst);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "Failed to process main state for diagnostics, error=%{public}s", v38, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
}

uint64_t sub_100B65328()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  sub_100179C0C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  type metadata accessor for DispatchQoS();
  sub_100179C0C();
  __chkstk_darwin(v8);
  sub_1001626E0();
  aBlock[4] = sub_100B6599C;
  uint64_t v13 = v0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10010A4D4;
  aBlock[3] = &unk_100E38D10;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  sub_100128EFC((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10017DF08(&qword_100E75530);
  sub_10012470C((unint64_t *)&qword_100EA0210, &qword_100E75530);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v9);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v1);
  sub_10017C964();
  v10();
  return swift_release();
}

uint64_t sub_100B6554C()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  URL.appendingPathComponent(_:)();
  id v4 = [self defaultManager];
  URL._bridgeToObjectiveC()(v5);
  uint64_t v7 = v6;
  id v14 = 0;
  unsigned int v8 = [v4 removeItemAtURL:v6 error:&v14];

  if (v8)
  {
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t))(v1 + 8);
    id v10 = v14;
    return v9(v3, v0);
  }
  else
  {
    id v12 = v14;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return swift_errorRelease();
  }
}

uint64_t sub_100B65714()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7Weather18DiagnosticRecorder_diagnosticsFileURL;
  uint64_t v2 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_100B657BC()
{
  return type metadata accessor for DiagnosticRecorder();
}

uint64_t type metadata accessor for DiagnosticRecorder()
{
  uint64_t result = qword_100EB3768;
  if (!qword_100EB3768) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100B6580C()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100B658A8()
{
  uint64_t v1 = type metadata accessor for URL();
  sub_100179C0C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  *(void *)(v0 + 16) = 0;
  type metadata accessor for AppGroup();
  static AppGroup.weather.getter();
  AppGroup.containerURL.getter();
  swift_release();
  URL.appendingPathComponent(_:)();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v7, v1);
  return v0;
}

uint64_t sub_100B6599C()
{
  return sub_100B6554C();
}

unint64_t sub_100B659A4()
{
  unint64_t result = qword_100EB37F8;
  if (!qword_100EB37F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB37F8);
  }
  return result;
}

unint64_t sub_100B659F0()
{
  unint64_t result = qword_100EB3820;
  if (!qword_100EB3820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB3820);
  }
  return result;
}

uint64_t sub_100B65A3C(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    type metadata accessor for LocationComponentHeaderViewModel(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v11 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v11;
        uint64_t v12 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v12;
        uint64_t v13 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v13;
        uint64_t v14 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v14;
        *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
        uint64_t v15 = a2[10];
        *(void *)(a1 + 72) = a2[9];
        *(void *)(a1 + 80) = v15;
        *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v16 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v16;
        uint64_t v17 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v17;
        uint64_t v18 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v18;
        uint64_t v19 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v19;
        uint64_t v20 = a2[9];
        *(void *)(a1 + 64) = a2[8];
        *(void *)(a1 + 72) = v20;
        uint64_t v21 = a2[11];
        *(void *)(a1 + 80) = a2[10];
        *(void *)(a1 + 88) = v21;
        *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
        NSString v22 = v6;
        uint64_t v23 = a2[14];
        *(void *)(a1 + 104) = a2[13];
        *(void *)(a1 + 112) = v23;
        *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v6 = v22;
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v24 = type metadata accessor for WeatherDescription();
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
        uint64_t v25 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
        uint64_t v26 = *(int *)(v25 + 20);
        uint64_t v27 = a1 + v26;
        uint64_t v28 = (uint64_t)a2 + v26;
        uint64_t v30 = *(uint64_t *)((char *)a2 + v26);
        uint64_t v29 = *(uint64_t *)((char *)a2 + v26 + 8);
        *(void *)uint64_t v27 = v30;
        *(void *)(v27 + 8) = v29;
        uint64_t v31 = *(void *)(v28 + 24);
        *(void *)(v27 + 16) = *(void *)(v28 + 16);
        *(void *)(v27 + 24) = v31;
        *(unsigned char *)(v27 + 32) = *(unsigned char *)(v28 + 32);
        uint64_t v32 = *(void *)(v28 + 48);
        *(void *)(v27 + 40) = *(void *)(v28 + 40);
        *(void *)(v27 + 48) = v32;
        *(unsigned char *)(a1 + *(int *)(v25 + 24)) = *((unsigned char *)a2 + *(int *)(v25 + 24));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 5u:
        uint64_t v33 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v33;
        uint64_t v34 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v34;
        *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
        uint64_t v35 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v35;
        uint64_t v36 = a2[9];
        *(void *)(a1 + 64) = a2[8];
        *(void *)(a1 + 72) = v36;
        uint64_t v37 = a2[11];
        *(void *)(a1 + 80) = a2[10];
        *(void *)(a1 + 88) = v37;
        *(void *)(a1 + 96) = a2[12];
        *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
        uint64_t v38 = a2[15];
        *(void *)(a1 + 112) = a2[14];
        *(void *)(a1 + 120) = v38;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v7 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v7;
        uint64_t v8 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v8;
        *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
        uint64_t v9 = a2[6];
        *(void *)(a1 + 40) = a2[5];
        *(void *)(a1 + 48) = v9;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v39 = v6[5];
    unint64_t v40 = (void *)(a1 + v39);
    uint64_t v41 = (uint64_t *)((char *)a2 + v39);
    uint64_t v42 = type metadata accessor for LocationComponentViewModel();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *unint64_t v40 = *v41;
        *(_OWORD *)(v40 + 1) = *(_OWORD *)(v41 + 1);
        *(_OWORD *)(v40 + 3) = *(_OWORD *)(v41 + 3);
        uint64_t v43 = v41[6];
        v40[5] = v41[5];
        v40[6] = v43;
        uint64_t v44 = v41[8];
        v40[7] = v41[7];
        v40[8] = v44;
        uint64_t v45 = v41[10];
        v40[9] = v41[9];
        v40[10] = v45;
        v40[11] = v41[11];
        *((_WORD *)v40 + 48) = *((_WORD *)v41 + 48);
        v40[13] = v41[13];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_67;
      case 1u:
        *unint64_t v40 = *v41;
        uint64_t v46 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
        uint64_t v47 = v46[5];
        uint64_t v48 = (char *)v40 + v47;
        uint64_t v49 = (char *)v41 + v47;
        swift_bridgeObjectRetain();
        uint64_t v50 = sub_10017DF08(&qword_100E65250);
        uint64_t v51 = *(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16);
        v51(v48, v49, v50);
        v51((char *)v40 + v46[6], (char *)v41 + v46[6], v50);
        v51((char *)v40 + v46[7], (char *)v41 + v46[7], v50);
        uint64_t v52 = v46[8];
        uint64_t v53 = (void *)((char *)v40 + v52);
        uint64_t v54 = (void *)((char *)v41 + v52);
        uint64_t v55 = v54[1];
        *uint64_t v53 = *v54;
        v53[1] = v55;
        uint64_t v56 = v46[9];
        uint64_t v57 = (void *)((char *)v40 + v56);
        uint64_t v58 = (void *)((char *)v41 + v56);
        uint64_t v59 = v58[1];
        *uint64_t v57 = *v58;
        v57[1] = v59;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_67;
      case 2u:
        uint64_t v276 = v6;
        uint64_t v60 = v41[1];
        *unint64_t v40 = *v41;
        v40[1] = v60;
        uint64_t v61 = v41[3];
        v40[2] = v41[2];
        v40[3] = v61;
        uint64_t v62 = type metadata accessor for FeelsLikeComponentViewModel(0);
        uint64_t v63 = *(int *)(v62 + 24);
        uint64_t v64 = (void *)((char *)v40 + v63);
        uint64_t v65 = (void *)((char *)v41 + v63);
        uint64_t v66 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v66))
        {
          uint64_t v67 = sub_10017DF08(&qword_100E63750);
          memcpy(v64, v65, *(void *)(*(void *)(v67 - 8) + 64));
        }
        else
        {
          uint64_t v167 = v65[1];
          *uint64_t v64 = *v65;
          v64[1] = v167;
          uint64_t v168 = *(int *)(v66 + 20);
          uint64_t v169 = (char *)v64 + v168;
          uint64_t v170 = (char *)v65 + v168;
          uint64_t v267 = (uint64_t)v64;
          uint64_t v171 = type metadata accessor for TemperatureScaleConfiguration();
          uint64_t v263 = *(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 16);
          swift_bridgeObjectRetain();
          v263(v169, v170, v171);
          char v172 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
          *(void *)&v169[v172[5]] = *(void *)&v170[v172[5]];
          *(void *)&v169[v172[6]] = *(void *)&v170[v172[6]];
          *(void *)&v169[v172[7]] = *(void *)&v170[v172[7]];
          uint64_t v173 = v172[8];
          uint64_t v174 = &v169[v173];
          uint64_t v175 = &v170[v173];
          uint64_t v177 = *(void *)v175;
          uint64_t v176 = *((void *)v175 + 1);
          *(void *)uint64_t v174 = v177;
          *((void *)v174 + 1) = v176;
          v169[v172[9]] = v170[v172[9]];
          swift_bridgeObjectRetain();
          _s7Weather24LocationCompositionStateOwst_0(v267, 0, 1, v66);
        }
        uint64_t v6 = v276;
        uint64_t v178 = *(int *)(v62 + 28);
        uint64_t v179 = (void *)((char *)v40 + v178);
        uint64_t v180 = (void *)((char *)v41 + v178);
        uint64_t v181 = v180[1];
        *uint64_t v179 = *v180;
        v179[1] = v181;
        swift_bridgeObjectRetain();
        goto LABEL_67;
      case 3u:
        *unint64_t v40 = *v41;
        swift_bridgeObjectRetain();
        goto LABEL_67;
      case 4u:
        *(_OWORD *)unint64_t v40 = *(_OWORD *)v41;
        v40[2] = v41[2];
        swift_bridgeObjectRetain();
        goto LABEL_67;
      case 5u:
        uint64_t v277 = v6;
        uint64_t v68 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v68 - 8) + 16))(v40, v41, v68);
        uint64_t v69 = (int *)type metadata accessor for MapComponentViewModel();
        uint64_t v70 = v69[5];
        uint64_t v71 = (char *)v40 + v70;
        uint64_t v72 = (char *)v41 + v70;
        uint64_t v73 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
        uint64_t v74 = v69[6];
        uint64_t v75 = (char *)v40 + v74;
        uint64_t v76 = (void *)((char *)v41 + v74);
        uint64_t v77 = type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v76, 1, v77))
        {
          uint64_t v78 = sub_10017DF08(&qword_100E63850);
          memcpy(v75, v76, *(void *)(*(void *)(v78 - 8) + 64));
          uint64_t v6 = v277;
          goto LABEL_66;
        }
        uint64_t v264 = (int *)v77;
        uint64_t v268 = v69;
        uint64_t v182 = v75;
        uint64_t v183 = v76[1];
        *uint64_t v182 = *v76;
        v182[1] = v183;
        uint64_t v184 = *(int *)(v77 + 20);
        uint64_t v185 = v182;
        uint64_t v186 = (char *)v182 + v184;
        char v187 = (char *)v76 + v184;
        uint64_t v188 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v187, 1, v188))
        {
          uint64_t v189 = sub_10017DF08(&qword_100E63730);
          memcpy(v186, v187, *(void *)(*(void *)(v189 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v188 - 8) + 16))(v186, v187, v188);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v186, 0, 1, v188);
        }
        uint64_t v207 = v264[6];
        uint64_t v208 = (char *)v185 + v207;
        uint64_t v209 = (char *)v76 + v207;
        uint64_t v210 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v210 - 8) + 16))(v208, v209, v210);
        uint64_t v211 = v264[7];
        uint64_t v212 = (char *)v185 + v211;
        uint64_t v213 = (char *)v76 + v211;
        uint64_t v214 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v213, 1, v214))
        {
          uint64_t v215 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v212, v213, *(void *)(*(void *)(v215 - 8) + 64));
        }
        else
        {
          uint64_t v216 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v216 - 8) + 16))(v212, v213, v216);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v212, 0, 1, v214);
        }
        uint64_t v217 = v264[8];
        uint64_t v218 = (void *)((char *)v185 + v217);
        uint64_t v219 = (void *)((char *)v76 + v217);
        uint64_t v220 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v275 = (uint64_t)v185;
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v223 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v223 - 8) + 16))(v218, v219, v223);
          goto LABEL_54;
        }
        if (!EnumCaseMultiPayload)
        {
          uint64_t v222 = v219[1];
          *uint64_t v218 = *v219;
          v218[1] = v222;
          swift_bridgeObjectRetain();
LABEL_54:
          swift_storeEnumTagMultiPayload();
          goto LABEL_56;
        }
        memcpy(v218, v219, *(void *)(*(void *)(v220 - 8) + 64));
LABEL_56:
        uint64_t v69 = v268;
        uint64_t v224 = v264[9];
        uint64_t v225 = (char *)v185 + v224;
        uint64_t v226 = (char *)v76 + v224;
        uint64_t v227 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v226, 1, v227))
        {
          uint64_t v228 = sub_10017DF08(&qword_100E63740);
          memcpy(v225, v226, *(void *)(*(void *)(v228 - 8) + 64));
          uint64_t v6 = v277;
          uint64_t v229 = (uint64_t)v264;
          uint64_t v230 = v275;
        }
        else
        {
          uint64_t v261 = v227;
          uint64_t v231 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v226, 1, v231))
          {
            uint64_t v232 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v225, v226, *(void *)(*(void *)(v232 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v231 - 8) + 16))(v225, v226, v231);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v225, 0, 1, v231);
          }
          uint64_t v229 = (uint64_t)v264;
          uint64_t v233 = *(int *)(v261 + 20);
          uint64_t v259 = (uint64_t)v225;
          uint64_t v234 = &v225[v233];
          uint64_t v235 = &v226[v233];
          uint64_t v230 = v275;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v235, 1, v231))
          {
            uint64_t v236 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v234, v235, *(void *)(*(void *)(v236 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v231 - 8) + 16))(v234, v235, v231);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v234, 0, 1, v231);
          }
          uint64_t v6 = v277;
          _s7Weather24LocationCompositionStateOwst_0(v259, 0, 1, v261);
          uint64_t v69 = v268;
        }
        _s7Weather24LocationCompositionStateOwst_0(v230, 0, 1, v229);
LABEL_66:
        uint64_t v237 = v69[7];
        uint64_t v238 = (void *)((char *)v40 + v237);
        uint64_t v239 = (void *)((char *)v41 + v237);
        uint64_t v240 = v239[1];
        *uint64_t v238 = *v239;
        v238[1] = v240;
        swift_bridgeObjectRetain();
LABEL_67:
        swift_storeEnumTagMultiPayload();
LABEL_68:
        uint64_t v241 = v6[7];
        *(_WORD *)(a1 + v6[6]) = *(_WORD *)((char *)a2 + v6[6]);
        uint64_t v242 = (unsigned char *)(a1 + v241);
        uint64_t v243 = (char *)a2 + v241;
        uint64_t v244 = type metadata accessor for LocationComponentAction(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v243, 1, v244))
        {
          uint64_t v245 = sub_10017DF08(&qword_100E7AF78);
          memcpy(v242, v243, *(void *)(*(void *)(v245 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v246 = type metadata accessor for URL();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v246 - 8) + 16))(v242, v243, v246);
              uint64_t v247 = sub_10017DF08(&qword_100E66478);
              v242[*(int *)(v247 + 48)] = v243[*(int *)(v247 + 48)];
              goto LABEL_76;
            case 1u:
              uint64_t v248 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v248 - 8) + 16))(v242, v243, v248);
              goto LABEL_76;
            case 2u:
              uint64_t v249 = type metadata accessor for DetailCondition();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v249 - 8) + 16))(v242, v243, v249);
              uint64_t v250 = sub_10017DF08(&qword_100E66488);
              v242[*(int *)(v250 + 48)] = v243[*(int *)(v250 + 48)];
              goto LABEL_76;
            case 4u:
              *uint64_t v242 = *v243;
              uint64_t v251 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
              uint64_t v252 = &v242[v251];
              uint64_t v253 = &v243[v251];
              uint64_t v254 = type metadata accessor for Location();
              (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v254 - 8) + 16))(v252, v253, v254);
LABEL_76:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v242, v243, *(void *)(*(void *)(v244 - 8) + 64));
              break;
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v242, 0, 1, v244);
        }
        break;
      case 6u:
        uint64_t v79 = v41[1];
        *unint64_t v40 = *v41;
        v40[1] = v79;
        int v80 = *((unsigned __int8 *)v41 + 32);
        swift_bridgeObjectRetain();
        uint64_t v278 = v6;
        if (v80 == 255)
        {
          *((_OWORD *)v40 + 1) = *((_OWORD *)v41 + 1);
          *((unsigned char *)v40 + 32) = *((unsigned char *)v41 + 32);
        }
        else
        {
          uint64_t v81 = v41[2];
          uint64_t v82 = v41[3];
          sub_1001F3C64(v81, v82, v80);
          v40[2] = v81;
          v40[3] = v82;
          *((unsigned char *)v40 + 32) = v80;
        }
        v40[5] = v41[5];
        uint64_t v190 = (int *)type metadata accessor for MoonComponentViewModel();
        uint64_t v191 = v190[7];
        v274 = (char *)v40 + v191;
        uint64_t v192 = (char *)v41 + v191;
        uint64_t v193 = type metadata accessor for Date();
        int v194 = *(void (**)(char *, char *, uint64_t))(*(void *)(v193 - 8) + 16);
        swift_bridgeObjectRetain();
        v194(v274, v192, v193);
        *((unsigned char *)v40 + v190[8]) = *((unsigned char *)v41 + v190[8]);
        *(void *)((char *)v40 + v190[9]) = *(void *)((char *)v41 + v190[9]);
        swift_storeEnumTagMultiPayload();
        uint64_t v6 = v278;
        goto LABEL_68;
      case 7u:
        uint64_t v83 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v279 = v6;
          uint64_t v84 = v41[1];
          *unint64_t v40 = *v41;
          v40[1] = v84;
          uint64_t v269 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v85 = v269[5];
          uint64_t v86 = (char *)v40 + v85;
          uint64_t v87 = (char *)v41 + v85;
          uint64_t v88 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v87, 1, v88))
          {
            uint64_t v89 = sub_10017DF08(&qword_100E749B0);
            memcpy(v86, v87, *(void *)(*(void *)(v89 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16))(v86, v87, v88);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v86, 0, 1, v88);
          }
          uint64_t v195 = v269[6];
          v196 = (void *)((char *)v40 + v195);
          uint64_t v197 = (void *)((char *)v41 + v195);
          uint64_t v198 = v197[1];
          void *v196 = *v197;
          v196[1] = v198;
          uint64_t v199 = v269[7];
          uint64_t v200 = (char *)v40 + v199;
          uint64_t v201 = (char *)v41 + v199;
          v202 = *(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16);
          swift_bridgeObjectRetain();
          v202(v200, v201, v88);
          uint64_t v203 = v269[8];
          uint64_t v204 = (char *)v40 + v203;
          int v205 = (char *)v41 + v203;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41 + v203, 1, v88))
          {
            uint64_t v206 = sub_10017DF08(&qword_100E749B0);
            memcpy(v204, v205, *(void *)(*(void *)(v206 - 8) + 64));
          }
          else
          {
            v202(v204, v205, v88);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v204, 0, 1, v88);
          }
          uint64_t v6 = v279;
          *((unsigned char *)v40 + v269[9]) = *((unsigned char *)v41 + v269[9]);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v40, v41, *(void *)(*(void *)(v83 - 8) + 64));
        }
        goto LABEL_67;
      case 8u:
        uint64_t v90 = v41[1];
        *unint64_t v40 = *v41;
        v40[1] = v90;
        uint64_t v91 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel() + 20);
        uint64_t v92 = (char *)v40 + v91;
        uint64_t v270 = (char *)v41 + v91;
        uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
        uint64_t v94 = *(void (**)(char *, char *, uint64_t))(*(void *)(HourPrecipitationChartViewModel - 8) + 16);
        swift_bridgeObjectRetain();
        v94(v92, v270, HourPrecipitationChartViewModel);
        goto LABEL_67;
      case 9u:
        uint64_t v95 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v95 - 8) + 16))(v40, v41, v95);
        uint64_t v96 = type metadata accessor for NotificationsOptInComponentViewModel();
        *((unsigned char *)v40 + *(int *)(v96 + 20)) = *((unsigned char *)v41 + *(int *)(v96 + 20));
        goto LABEL_67;
      case 0xAu:
        uint64_t v97 = v41[1];
        *unint64_t v40 = *v41;
        v40[1] = v97;
        uint64_t v98 = v41[3];
        v40[2] = v41[2];
        v40[3] = v98;
        uint64_t v99 = v41[5];
        v40[4] = v41[4];
        v40[5] = v99;
        uint64_t v100 = v41[7];
        v40[6] = v41[6];
        v40[7] = v100;
        uint64_t v101 = v41[9];
        v40[8] = v41[8];
        v40[9] = v101;
        uint64_t v102 = v41[10];
        uint64_t v103 = v41[11];
        v40[10] = v102;
        v40[11] = v103;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_67;
      case 0xBu:
        uint64_t v104 = type metadata accessor for PressureTrend();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v104 - 8) + 16))(v40, v41, v104);
        uint64_t v105 = (int *)type metadata accessor for PressureComponentViewModel();
        uint64_t v106 = v105[5];
        uint64_t v107 = (void *)((char *)v40 + v106);
        char v108 = (void *)((char *)v41 + v106);
        uint64_t v110 = *v108;
        uint64_t v109 = v108[1];
        *uint64_t v107 = v110;
        v107[1] = v109;
        uint64_t v111 = v105[6];
        uint64_t v112 = (void *)((char *)v40 + v111);
        uint64_t v113 = (void *)((char *)v41 + v111);
        uint64_t v114 = v113[1];
        *uint64_t v112 = *v113;
        v112[1] = v114;
        uint64_t v115 = v105[7];
        unint64_t v116 = (void *)((char *)v40 + v115);
        uint64_t v117 = (void *)((char *)v41 + v115);
        uint64_t v118 = v117[1];
        void *v116 = *v117;
        v116[1] = v118;
        *(void *)((char *)v40 + v105[8]) = *(void *)((char *)v41 + v105[8]);
        uint64_t v119 = v105[9];
        char v120 = (void *)((char *)v40 + v119);
        uint64_t v121 = (void *)((char *)v41 + v119);
        uint64_t v122 = v121[1];
        *char v120 = *v121;
        v120[1] = v122;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_67;
      case 0xDu:
        uint64_t v123 = v41[1];
        *unint64_t v40 = *v41;
        v40[1] = v123;
        uint64_t v124 = v41[3];
        v40[2] = v41[2];
        v40[3] = v124;
        uint64_t v125 = v41[5];
        v40[4] = v41[4];
        v40[5] = v125;
        uint64_t v126 = v41[7];
        v40[6] = v41[6];
        v40[7] = v126;
        v40[8] = v41[8];
        uint64_t v127 = type metadata accessor for SevereAlertComponentViewModel();
        uint64_t v128 = *(int *)(v127 + 36);
        uint64_t v265 = (char *)v40 + v128;
        uint64_t v271 = v127;
        uint64_t v262 = (char *)v41 + v128;
        uint64_t v129 = type metadata accessor for WeatherAlert.Prominence();
        uint64_t v260 = *(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v260(v265, v262, v129);
        *(void *)((char *)v40 + *(int *)(v271 + 40)) = *(void *)((char *)v41 + *(int *)(v271 + 40));
        goto LABEL_67;
      case 0xEu:
        uint64_t v130 = type metadata accessor for SunriseSunsetViewModel();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v130 - 8) + 16))(v40, v41, v130);
        goto LABEL_67;
      case 0xFu:
        uint64_t v131 = v41[1];
        *unint64_t v40 = *v41;
        v40[1] = v131;
        uint64_t v132 = v41[3];
        v40[2] = v41[2];
        v40[3] = v132;
        uint64_t v133 = v41[5];
        v40[4] = v41[4];
        v40[5] = v133;
        uint64_t v134 = v41[7];
        v40[6] = v41[6];
        v40[7] = v134;
        uint64_t v135 = v41[9];
        v40[8] = v41[8];
        v40[9] = v135;
        uint64_t v136 = v41[11];
        v40[10] = v41[10];
        v40[11] = v136;
        uint64_t v280 = v6;
        uint64_t v137 = v41[13];
        v40[12] = v41[12];
        v40[13] = v137;
        uint64_t v138 = v41[15];
        v40[14] = v41[14];
        v40[15] = v138;
        uint64_t v139 = v41[17];
        v40[16] = v41[16];
        v40[17] = v139;
        uint64_t v140 = v41[19];
        v40[18] = v41[18];
        v40[19] = v140;
        uint64_t v141 = v41[21];
        v40[20] = v41[20];
        v40[21] = v141;
        uint64_t v142 = v41[23];
        v40[22] = v41[22];
        v40[23] = v142;
        uint64_t v143 = v41[24];
        uint64_t v144 = v41[25];
        v40[24] = v143;
        v40[25] = v144;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v6 = v280;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_67;
      case 0x10u:
        *(_OWORD *)unint64_t v40 = *(_OWORD *)v41;
        uint64_t v145 = v41[3];
        v40[2] = v41[2];
        v40[3] = v145;
        uint64_t v146 = type metadata accessor for UVIndexComponentViewModel();
        uint64_t v147 = *(int *)(v146 + 28);
        uint64_t v266 = (char *)v41 + v147;
        uint64_t v272 = (char *)v40 + v147;
        uint64_t v148 = type metadata accessor for WeatherDescription();
        uint64_t v149 = v6;
        uint64_t v150 = *(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 16);
        swift_bridgeObjectRetain();
        v150(v272, v266, v148);
        uint64_t v6 = v149;
        *(void *)((char *)v40 + *(int *)(v146 + 32)) = *(void *)((char *)v41 + *(int *)(v146 + 32));
        swift_bridgeObjectRetain();
        goto LABEL_67;
      case 0x11u:
        uint64_t v151 = v41[1];
        *unint64_t v40 = *v41;
        v40[1] = v151;
        uint64_t v152 = v41[3];
        v40[2] = v41[2];
        v40[3] = v152;
        uint64_t v153 = v41[5];
        v40[4] = v41[4];
        v40[5] = v153;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_67;
      case 0x12u:
        uint64_t v154 = v41[1];
        *unint64_t v40 = *v41;
        v40[1] = v154;
        uint64_t v155 = v41[3];
        v40[2] = v41[2];
        v40[3] = v155;
        uint64_t v281 = v6;
        uint64_t v156 = v41[5];
        v40[4] = v41[4];
        v40[5] = v156;
        uint64_t v157 = v41[7];
        v40[6] = v41[6];
        v40[7] = v157;
        uint64_t v158 = v41[9];
        v40[8] = v41[8];
        v40[9] = v158;
        uint64_t v159 = v41[11];
        v40[10] = v41[10];
        v40[11] = v159;
        uint64_t v160 = v41[13];
        v40[12] = v41[12];
        v40[13] = v160;
        uint64_t v161 = v41[15];
        v40[14] = v41[14];
        v40[15] = v161;
        uint64_t v162 = v41[17];
        v40[16] = v41[16];
        v40[17] = v162;
        uint64_t v163 = v41[19];
        v40[18] = v41[18];
        v40[19] = v163;
        uint64_t v164 = v41[21];
        v40[20] = v41[20];
        v40[21] = v164;
        *((_OWORD *)v40 + 11) = *((_OWORD *)v41 + 11);
        v40[24] = v41[24];
        uint64_t v273 = type metadata accessor for WindComponentViewModel();
        uint64_t v165 = *(int *)(v273 + 68);
        uint64_t v257 = (char *)v41 + v165;
        uint64_t v258 = (char *)v40 + v165;
        uint64_t v166 = type metadata accessor for WindComponentCompassViewModel();
        uint64_t v256 = *(void (**)(char *, char *, uint64_t))(*(void *)(v166 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v6 = v281;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v256(v258, v257, v166);
        *(void *)((char *)v40 + *(int *)(v273 + 72)) = *(void *)((char *)v41 + *(int *)(v273 + 72));
        swift_bridgeObjectRetain();
        goto LABEL_67;
      default:
        memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
        goto LABEL_68;
    }
  }
  return a1;
}

uint64_t sub_100B67480(uint64_t a1, uint64_t a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1002004A4(a1, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
    type metadata accessor for LocationComponentHeaderViewModel(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(unsigned char *)(a1 + 120) = *(unsigned char *)(a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v6 = type metadata accessor for WeatherDescription();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
        uint64_t v8 = *(int *)(v7 + 20);
        uint64_t v9 = a1 + v8;
        *(void *)uint64_t v9 = *(void *)(a2 + v8);
        *(void *)(v9 + 8) = *(void *)(a2 + v8 + 8);
        *(void *)(v9 + 16) = *(void *)(a2 + v8 + 16);
        *(void *)(v9 + 24) = *(void *)(a2 + v8 + 24);
        *(unsigned char *)(v9 + 32) = *(unsigned char *)(a2 + v8 + 32);
        *(void *)(v9 + 40) = *(void *)(a2 + v8 + 40);
        *(void *)(v9 + 48) = *(void *)(a2 + v8 + 48);
        *(unsigned char *)(a1 + *(int *)(v7 + 24)) = *(unsigned char *)(a2 + *(int *)(v7 + 24));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 5u:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        *(void *)(a1 + 72) = *(void *)(a2 + 72);
        *(void *)(a1 + 80) = *(void *)(a2 + 80);
        *(void *)(a1 + 88) = *(void *)(a2 + 88);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
        *(void *)(a1 + 112) = *(void *)(a2 + 112);
        *(void *)(a1 + 120) = *(void *)(a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      default:
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = a3[5];
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(a2 + v10);
    sub_1002004A4(a1 + v10, (void (*)(void))type metadata accessor for LocationComponentViewModel);
    uint64_t v13 = type metadata accessor for LocationComponentViewModel();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *uint64_t v11 = *v12;
        *(_OWORD *)(v11 + 1) = *(_OWORD *)(v12 + 1);
        v11[3] = v12[3];
        v11[4] = v12[4];
        v11[5] = v12[5];
        v11[6] = v12[6];
        v11[7] = v12[7];
        v11[8] = v12[8];
        v11[9] = v12[9];
        v11[10] = v12[10];
        v11[11] = v12[11];
        *((unsigned char *)v11 + 96) = *((unsigned char *)v12 + 96);
        *((unsigned char *)v11 + 97) = *((unsigned char *)v12 + 97);
        v11[13] = v12[13];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_66;
      case 1u:
        *uint64_t v11 = *v12;
        uint64_t v14 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
        uint64_t v15 = v14[5];
        uint64_t v16 = (char *)v11 + v15;
        uint64_t v17 = (char *)v12 + v15;
        swift_bridgeObjectRetain();
        uint64_t v18 = sub_10017DF08(&qword_100E65250);
        uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
        v19(v16, v17, v18);
        v19((char *)v11 + v14[6], (char *)v12 + v14[6], v18);
        v19((char *)v11 + v14[7], (char *)v12 + v14[7], v18);
        uint64_t v20 = v14[8];
        uint64_t v21 = (void *)((char *)v11 + v20);
        NSString v22 = (void *)((char *)v12 + v20);
        *uint64_t v21 = *v22;
        v21[1] = v22[1];
        uint64_t v23 = v14[9];
        uint64_t v24 = (void *)((char *)v11 + v23);
        uint64_t v25 = (void *)((char *)v12 + v23);
        *uint64_t v24 = *v25;
        v24[1] = v25[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_66;
      case 2u:
        v196 = a3;
        *uint64_t v11 = *v12;
        v11[1] = v12[1];
        v11[2] = v12[2];
        v11[3] = v12[3];
        uint64_t v26 = type metadata accessor for FeelsLikeComponentViewModel(0);
        uint64_t v27 = *(int *)(v26 + 24);
        uint64_t v28 = (void *)((char *)v11 + v27);
        uint64_t v29 = (void *)((char *)v12 + v27);
        uint64_t v30 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30))
        {
          uint64_t v31 = sub_10017DF08(&qword_100E63750);
          memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          *uint64_t v28 = *v29;
          v28[1] = v29[1];
          uint64_t v84 = *(int *)(v30 + 20);
          uint64_t v85 = (char *)v28 + v84;
          uint64_t v86 = (char *)v29 + v84;
          uint64_t v188 = (uint64_t)v28;
          uint64_t v87 = type metadata accessor for TemperatureScaleConfiguration();
          uint64_t v184 = *(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16);
          swift_bridgeObjectRetain();
          v184(v85, v86, v87);
          uint64_t v88 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
          *(void *)&v85[v88[5]] = *(void *)&v86[v88[5]];
          *(void *)&v85[v88[6]] = *(void *)&v86[v88[6]];
          *(void *)&v85[v88[7]] = *(void *)&v86[v88[7]];
          uint64_t v89 = v88[8];
          uint64_t v90 = &v85[v89];
          uint64_t v91 = &v86[v89];
          *(void *)uint64_t v90 = *(void *)v91;
          *((void *)v90 + 1) = *((void *)v91 + 1);
          v85[v88[9]] = v86[v88[9]];
          swift_bridgeObjectRetain();
          _s7Weather24LocationCompositionStateOwst_0(v188, 0, 1, v30);
        }
        a3 = v196;
        uint64_t v92 = *(int *)(v26 + 28);
        uint64_t v93 = (void *)((char *)v11 + v92);
        uint64_t v94 = (void *)((char *)v12 + v92);
        *uint64_t v93 = *v94;
        v93[1] = v94[1];
        swift_bridgeObjectRetain();
        goto LABEL_66;
      case 3u:
        *uint64_t v11 = *v12;
        swift_bridgeObjectRetain();
        goto LABEL_66;
      case 4u:
        *uint64_t v11 = *v12;
        v11[1] = v12[1];
        v11[2] = v12[2];
        swift_bridgeObjectRetain();
        goto LABEL_66;
      case 5u:
        uint64_t v197 = a3;
        uint64_t v32 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 16))(v11, v12, v32);
        uint64_t v33 = (int *)type metadata accessor for MapComponentViewModel();
        uint64_t v34 = v33[5];
        uint64_t v35 = (char *)v11 + v34;
        uint64_t v36 = (char *)v12 + v34;
        uint64_t v37 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
        uint64_t v38 = v33[6];
        uint64_t v39 = (void *)((char *)v11 + v38);
        unint64_t v40 = (void *)((char *)v12 + v38);
        uint64_t v41 = type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
        {
          uint64_t v42 = sub_10017DF08(&qword_100E63850);
          memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
          a3 = v197;
          goto LABEL_65;
        }
        uint64_t v185 = (int *)v41;
        uint64_t v189 = v33;
        *uint64_t v39 = *v40;
        v39[1] = v40[1];
        uint64_t v95 = *(int *)(v41 + 20);
        uint64_t v96 = v39;
        uint64_t v97 = (char *)v39 + v95;
        uint64_t v98 = (char *)v40 + v95;
        uint64_t v99 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v98, 1, v99))
        {
          uint64_t v100 = sub_10017DF08(&qword_100E63730);
          memcpy(v97, v98, *(void *)(*(void *)(v100 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 16))(v97, v98, v99);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v97, 0, 1, v99);
        }
        uint64_t v118 = v185[6];
        uint64_t v119 = (char *)v39 + v118;
        char v120 = (char *)v40 + v118;
        uint64_t v121 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 16))(v119, v120, v121);
        uint64_t v122 = v185[7];
        uint64_t v123 = (char *)v96 + v122;
        uint64_t v124 = (char *)v40 + v122;
        uint64_t v125 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v124, 1, v125))
        {
          uint64_t v126 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v123, v124, *(void *)(*(void *)(v126 - 8) + 64));
        }
        else
        {
          uint64_t v127 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 16))(v123, v124, v127);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v123, 0, 1, v125);
        }
        uint64_t v128 = v185[8];
        uint64_t v129 = (void *)((char *)v96 + v128);
        uint64_t v130 = (void *)((char *)v40 + v128);
        uint64_t v131 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v195 = (uint64_t)v96;
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v133 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v133 - 8) + 16))(v129, v130, v133);
          goto LABEL_53;
        }
        if (!EnumCaseMultiPayload)
        {
          void *v129 = *v130;
          v129[1] = v130[1];
          swift_bridgeObjectRetain();
LABEL_53:
          swift_storeEnumTagMultiPayload();
          goto LABEL_55;
        }
        memcpy(v129, v130, *(void *)(*(void *)(v131 - 8) + 64));
LABEL_55:
        uint64_t v33 = v189;
        uint64_t v134 = v185[9];
        uint64_t v135 = (char *)v96 + v134;
        uint64_t v136 = (char *)v40 + v134;
        uint64_t v137 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v136, 1, v137))
        {
          uint64_t v138 = sub_10017DF08(&qword_100E63740);
          memcpy(v135, v136, *(void *)(*(void *)(v138 - 8) + 64));
          a3 = v197;
          uint64_t v139 = (uint64_t)v185;
          uint64_t v140 = v195;
        }
        else
        {
          uint64_t v182 = v137;
          uint64_t v141 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v136, 1, v141))
          {
            uint64_t v142 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v135, v136, *(void *)(*(void *)(v142 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 16))(v135, v136, v141);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v135, 0, 1, v141);
          }
          uint64_t v139 = (uint64_t)v185;
          uint64_t v143 = *(int *)(v182 + 20);
          uint64_t v180 = (uint64_t)v135;
          uint64_t v144 = &v135[v143];
          uint64_t v145 = &v136[v143];
          uint64_t v140 = v195;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v145, 1, v141))
          {
            uint64_t v146 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v144, v145, *(void *)(*(void *)(v146 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 16))(v144, v145, v141);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v144, 0, 1, v141);
          }
          a3 = v197;
          _s7Weather24LocationCompositionStateOwst_0(v180, 0, 1, v182);
          uint64_t v33 = v189;
        }
        _s7Weather24LocationCompositionStateOwst_0(v140, 0, 1, v139);
LABEL_65:
        uint64_t v147 = v33[7];
        uint64_t v148 = (void *)((char *)v11 + v147);
        uint64_t v149 = (void *)((char *)v12 + v147);
        *uint64_t v148 = *v149;
        v148[1] = v149[1];
        swift_bridgeObjectRetain();
LABEL_66:
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        *uint64_t v11 = *v12;
        v11[1] = v12[1];
        int v43 = *((unsigned __int8 *)v12 + 32);
        swift_bridgeObjectRetain();
        uint64_t v198 = a3;
        if (v43 == 255)
        {
          long long v101 = *((_OWORD *)v12 + 1);
          *((unsigned char *)v11 + 32) = *((unsigned char *)v12 + 32);
          *((_OWORD *)v11 + 1) = v101;
        }
        else
        {
          uint64_t v44 = v12[2];
          uint64_t v45 = v12[3];
          sub_1001F3C64(v44, v45, v43);
          v11[2] = v44;
          v11[3] = v45;
          *((unsigned char *)v11 + 32) = v43;
        }
        v11[5] = v12[5];
        uint64_t v102 = (int *)type metadata accessor for MoonComponentViewModel();
        uint64_t v103 = v102[7];
        int v194 = (char *)v11 + v103;
        uint64_t v104 = (char *)v12 + v103;
        uint64_t v105 = type metadata accessor for Date();
        uint64_t v106 = *(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 16);
        swift_bridgeObjectRetain();
        v106(v194, v104, v105);
        *((unsigned char *)v11 + v102[8]) = *((unsigned char *)v12 + v102[8]);
        *(void *)((char *)v11 + v102[9]) = *(void *)((char *)v12 + v102[9]);
        swift_storeEnumTagMultiPayload();
        a3 = v198;
        break;
      case 7u:
        uint64_t v46 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v199 = a3;
          *uint64_t v11 = *v12;
          v11[1] = v12[1];
          uint64_t v190 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v47 = v190[5];
          uint64_t v48 = (char *)v11 + v47;
          uint64_t v49 = (char *)v12 + v47;
          uint64_t v50 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v50))
          {
            uint64_t v51 = sub_10017DF08(&qword_100E749B0);
            memcpy(v48, v49, *(void *)(*(void *)(v51 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v50);
          }
          uint64_t v107 = v190[6];
          char v108 = (void *)((char *)v11 + v107);
          uint64_t v109 = (void *)((char *)v12 + v107);
          *char v108 = *v109;
          v108[1] = v109[1];
          uint64_t v110 = v190[7];
          uint64_t v111 = (char *)v11 + v110;
          uint64_t v112 = (char *)v12 + v110;
          uint64_t v113 = *(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16);
          swift_bridgeObjectRetain();
          v113(v111, v112, v50);
          uint64_t v114 = v190[8];
          uint64_t v115 = (char *)v11 + v114;
          unint64_t v116 = (char *)v12 + v114;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12 + v114, 1, v50))
          {
            uint64_t v117 = sub_10017DF08(&qword_100E749B0);
            memcpy(v115, v116, *(void *)(*(void *)(v117 - 8) + 64));
          }
          else
          {
            v113(v115, v116, v50);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v115, 0, 1, v50);
          }
          a3 = v199;
          *((unsigned char *)v11 + v190[9]) = *((unsigned char *)v12 + v190[9]);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v11, v12, *(void *)(*(void *)(v46 - 8) + 64));
        }
        goto LABEL_66;
      case 8u:
        *uint64_t v11 = *v12;
        v11[1] = v12[1];
        uint64_t v52 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel() + 20);
        uint64_t v53 = (char *)v11 + v52;
        uint64_t v191 = (char *)v12 + v52;
        uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
        uint64_t v55 = *(void (**)(char *, char *, uint64_t))(*(void *)(HourPrecipitationChartViewModel - 8) + 16);
        swift_bridgeObjectRetain();
        v55(v53, v191, HourPrecipitationChartViewModel);
        goto LABEL_66;
      case 9u:
        uint64_t v56 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v56 - 8) + 16))(v11, v12, v56);
        uint64_t v57 = type metadata accessor for NotificationsOptInComponentViewModel();
        *((unsigned char *)v11 + *(int *)(v57 + 20)) = *((unsigned char *)v12 + *(int *)(v57 + 20));
        goto LABEL_66;
      case 0xAu:
        *uint64_t v11 = *v12;
        v11[1] = v12[1];
        v11[2] = v12[2];
        v11[3] = v12[3];
        v11[4] = v12[4];
        v11[5] = v12[5];
        v11[6] = v12[6];
        v11[7] = v12[7];
        v11[8] = v12[8];
        v11[9] = v12[9];
        v11[10] = v12[10];
        v11[11] = v12[11];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_66;
      case 0xBu:
        uint64_t v58 = type metadata accessor for PressureTrend();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v58 - 8) + 16))(v11, v12, v58);
        uint64_t v59 = (int *)type metadata accessor for PressureComponentViewModel();
        uint64_t v60 = v59[5];
        uint64_t v61 = (void *)((char *)v11 + v60);
        uint64_t v62 = (void *)((char *)v12 + v60);
        *uint64_t v61 = *v62;
        v61[1] = v62[1];
        uint64_t v63 = v59[6];
        uint64_t v64 = (void *)((char *)v11 + v63);
        uint64_t v65 = (void *)((char *)v12 + v63);
        *uint64_t v64 = *v65;
        v64[1] = v65[1];
        uint64_t v66 = v59[7];
        uint64_t v67 = (void *)((char *)v11 + v66);
        uint64_t v68 = (void *)((char *)v12 + v66);
        void *v67 = *v68;
        v67[1] = v68[1];
        *(void *)((char *)v11 + v59[8]) = *(void *)((char *)v12 + v59[8]);
        uint64_t v69 = v59[9];
        uint64_t v70 = (void *)((char *)v11 + v69);
        uint64_t v71 = (void *)((char *)v12 + v69);
        *uint64_t v70 = *v71;
        v70[1] = v71[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_66;
      case 0xDu:
        *uint64_t v11 = *v12;
        v11[1] = v12[1];
        v11[2] = v12[2];
        v11[3] = v12[3];
        v11[4] = v12[4];
        v11[5] = v12[5];
        v11[6] = v12[6];
        v11[7] = v12[7];
        v11[8] = v12[8];
        uint64_t v72 = type metadata accessor for SevereAlertComponentViewModel();
        uint64_t v73 = *(int *)(v72 + 36);
        uint64_t v186 = (char *)v11 + v73;
        uint64_t v192 = v72;
        uint64_t v183 = (char *)v12 + v73;
        uint64_t v74 = type metadata accessor for WeatherAlert.Prominence();
        uint64_t v181 = *(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v181(v186, v183, v74);
        *(void *)((char *)v11 + *(int *)(v192 + 40)) = *(void *)((char *)v12 + *(int *)(v192 + 40));
        goto LABEL_66;
      case 0xEu:
        uint64_t v75 = type metadata accessor for SunriseSunsetViewModel();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v75 - 8) + 16))(v11, v12, v75);
        goto LABEL_66;
      case 0xFu:
        *uint64_t v11 = *v12;
        v11[1] = v12[1];
        v11[2] = v12[2];
        v11[3] = v12[3];
        v11[4] = v12[4];
        v11[5] = v12[5];
        v11[6] = v12[6];
        v11[7] = v12[7];
        v11[8] = v12[8];
        v11[9] = v12[9];
        v11[10] = v12[10];
        v11[11] = v12[11];
        v11[12] = v12[12];
        v11[13] = v12[13];
        v11[14] = v12[14];
        v11[15] = v12[15];
        v11[16] = v12[16];
        v11[17] = v12[17];
        v11[18] = v12[18];
        v11[19] = v12[19];
        v11[20] = v12[20];
        v11[21] = v12[21];
        v11[22] = v12[22];
        v11[23] = v12[23];
        v11[24] = v12[24];
        v11[25] = v12[25];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_66;
      case 0x10u:
        *uint64_t v11 = *v12;
        v11[1] = v12[1];
        v11[2] = v12[2];
        v11[3] = v12[3];
        uint64_t v76 = type metadata accessor for UVIndexComponentViewModel();
        uint64_t v77 = *(int *)(v76 + 28);
        char v187 = (char *)v12 + v77;
        uint64_t v193 = (char *)v11 + v77;
        uint64_t v78 = type metadata accessor for WeatherDescription();
        uint64_t v79 = a3;
        int v80 = *(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 16);
        swift_bridgeObjectRetain();
        v80(v193, v187, v78);
        a3 = v79;
        *(void *)((char *)v11 + *(int *)(v76 + 32)) = *(void *)((char *)v12 + *(int *)(v76 + 32));
        swift_bridgeObjectRetain();
        goto LABEL_66;
      case 0x11u:
        *uint64_t v11 = *v12;
        v11[1] = v12[1];
        v11[2] = v12[2];
        v11[3] = v12[3];
        v11[4] = v12[4];
        v11[5] = v12[5];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_66;
      case 0x12u:
        *uint64_t v11 = *v12;
        v11[1] = v12[1];
        v11[2] = v12[2];
        v11[3] = v12[3];
        v11[4] = v12[4];
        v11[5] = v12[5];
        v11[6] = v12[6];
        v11[7] = v12[7];
        v11[8] = v12[8];
        v11[9] = v12[9];
        v11[10] = v12[10];
        v11[11] = v12[11];
        v11[12] = v12[12];
        v11[13] = v12[13];
        v11[14] = v12[14];
        v11[15] = v12[15];
        v11[16] = v12[16];
        v11[17] = v12[17];
        v11[18] = v12[18];
        v11[19] = v12[19];
        v11[20] = v12[20];
        v11[21] = v12[21];
        v11[22] = v12[22];
        v11[23] = v12[23];
        v11[24] = v12[24];
        uint64_t v81 = type metadata accessor for WindComponentViewModel();
        uint64_t v82 = *(int *)(v81 + 68);
        uint64_t v178 = (char *)v11 + v82;
        uint64_t v179 = v81;
        uint64_t v177 = (char *)v12 + v82;
        uint64_t v83 = type metadata accessor for WindComponentCompassViewModel();
        uint64_t v176 = *(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v176(v178, v177, v83);
        *(void *)((char *)v11 + *(int *)(v179 + 72)) = *(void *)((char *)v12 + *(int *)(v179 + 72));
        swift_bridgeObjectRetain();
        goto LABEL_66;
      default:
        memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
        break;
    }
  }
  *(_WORD *)(a1 + a3[6]) = *(_WORD *)(a2 + a3[6]);
  uint64_t v150 = a3[7];
  uint64_t v151 = (unsigned char *)(a1 + v150);
  uint64_t v152 = (unsigned char *)(a2 + v150);
  uint64_t v153 = type metadata accessor for LocationComponentAction(0);
  int v154 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v151, 1, v153);
  int v155 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v152, 1, v153);
  if (v154)
  {
    if (!v155)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v156 = type metadata accessor for URL();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v156 - 8) + 16))(v151, v152, v156);
          uint64_t v157 = sub_10017DF08(&qword_100E66478);
          v151[*(int *)(v157 + 48)] = v152[*(int *)(v157 + 48)];
          goto LABEL_82;
        case 1u:
          uint64_t v161 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v161 - 8) + 16))(v151, v152, v161);
          goto LABEL_82;
        case 2u:
          uint64_t v162 = type metadata accessor for DetailCondition();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v162 - 8) + 16))(v151, v152, v162);
          uint64_t v163 = sub_10017DF08(&qword_100E66488);
          v151[*(int *)(v163 + 48)] = v152[*(int *)(v163 + 48)];
          goto LABEL_82;
        case 4u:
          unsigned char *v151 = *v152;
          uint64_t v164 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
          uint64_t v165 = &v151[v164];
          uint64_t v166 = &v152[v164];
          uint64_t v167 = type metadata accessor for Location();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v167 - 8) + 16))(v165, v166, v167);
LABEL_82:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v151, v152, *(void *)(*(void *)(v153 - 8) + 64));
          break;
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v151, 0, 1, v153);
      return a1;
    }
    goto LABEL_73;
  }
  if (v155)
  {
    sub_1002004A4((uint64_t)v151, (void (*)(void))type metadata accessor for LocationComponentAction);
LABEL_73:
    size_t v158 = *(void *)(*(void *)(sub_10017DF08(&qword_100E7AF78) - 8) + 64);
LABEL_74:
    memcpy(v151, v152, v158);
    return a1;
  }
  if (a1 != a2)
  {
    sub_1002004A4((uint64_t)v151, (void (*)(void))type metadata accessor for LocationComponentAction);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v159 = type metadata accessor for URL();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v159 - 8) + 16))(v151, v152, v159);
        uint64_t v160 = sub_10017DF08(&qword_100E66478);
        v151[*(int *)(v160 + 48)] = v152[*(int *)(v160 + 48)];
        break;
      case 1u:
        uint64_t v168 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v168 - 8) + 16))(v151, v152, v168);
        break;
      case 2u:
        uint64_t v169 = type metadata accessor for DetailCondition();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v169 - 8) + 16))(v151, v152, v169);
        uint64_t v170 = sub_10017DF08(&qword_100E66488);
        v151[*(int *)(v170 + 48)] = v152[*(int *)(v170 + 48)];
        break;
      case 4u:
        unsigned char *v151 = *v152;
        uint64_t v171 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
        char v172 = &v151[v171];
        uint64_t v173 = &v152[v171];
        uint64_t v174 = type metadata accessor for Location();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v174 - 8) + 16))(v172, v173, v174);
        break;
      default:
        size_t v158 = *(void *)(*(void *)(v153 - 8) + 64);
        goto LABEL_74;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unsigned char *sub_100B692EC(unsigned char *a1, unsigned char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for LocationComponentHeaderViewModel(0);
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    uint64_t v7 = type metadata accessor for WeatherDescription();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    uint64_t v8 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
    uint64_t v9 = *(int *)(v8 + 20);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    long long v12 = *((_OWORD *)v11 + 1);
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    *((_OWORD *)v10 + 1) = v12;
    *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
    *((void *)v10 + 6) = *((void *)v11 + 6);
    a1[*(int *)(v8 + 24)] = a2[*(int *)(v8 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v13 = a3[5];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = type metadata accessor for LocationComponentViewModel();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *(void *)uint64_t v14 = *(void *)v15;
      uint64_t v17 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
      uint64_t v18 = v17[5];
      uint64_t v19 = &v14[v18];
      uint64_t v20 = &v15[v18];
      uint64_t v21 = sub_10017DF08(&qword_100E65250);
      NSString v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32);
      v22(v19, v20, v21);
      v22(&v14[v17[6]], &v15[v17[6]], v21);
      v22(&v14[v17[7]], &v15[v17[7]], v21);
      *(_OWORD *)&v14[v17[8]] = *(_OWORD *)&v15[v17[8]];
      *(_OWORD *)&v14[v17[9]] = *(_OWORD *)&v15[v17[9]];
      goto LABEL_51;
    case 2u:
      long long v23 = *((_OWORD *)v15 + 1);
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v23;
      uint64_t v24 = type metadata accessor for FeelsLikeComponentViewModel(0);
      uint64_t v25 = *(int *)(v24 + 24);
      uint64_t v26 = &v14[v25];
      uint64_t v27 = &v15[v25];
      uint64_t v28 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28))
      {
        uint64_t v29 = sub_10017DF08(&qword_100E63750);
        memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        *(_OWORD *)uint64_t v26 = *(_OWORD *)v27;
        uint64_t v85 = *(int *)(v28 + 20);
        uint64_t v152 = v24;
        uint64_t v86 = &v26[v85];
        uint64_t v87 = &v27[v85];
        uint64_t v88 = type metadata accessor for TemperatureScaleConfiguration();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 32))(v86, v87, v88);
        uint64_t v89 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        *(void *)&v86[v89[5]] = *(void *)&v87[v89[5]];
        *(void *)&v86[v89[6]] = *(void *)&v87[v89[6]];
        *(void *)&v86[v89[7]] = *(void *)&v87[v89[7]];
        *(_OWORD *)&v86[v89[8]] = *(_OWORD *)&v87[v89[8]];
        v86[v89[9]] = v87[v89[9]];
        uint64_t v24 = v152;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
      }
      *(_OWORD *)&v14[*(int *)(v24 + 28)] = *(_OWORD *)&v15[*(int *)(v24 + 28)];
      goto LABEL_51;
    case 5u:
      uint64_t v30 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v14, v15, v30);
      uint64_t v31 = (int *)type metadata accessor for MapComponentViewModel();
      uint64_t v32 = v31[5];
      uint64_t v33 = &v14[v32];
      uint64_t v34 = &v15[v32];
      uint64_t v35 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v33, v34, v35);
      uint64_t v36 = v31[6];
      uint64_t v37 = &v14[v36];
      uint64_t v38 = &v15[v36];
      uint64_t v39 = type metadata accessor for WeatherData(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
      {
        uint64_t v40 = sub_10017DF08(&qword_100E63850);
        memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        uint64_t v145 = v31;
        *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
        __dst = (int *)v39;
        uint64_t v153 = v37;
        uint64_t v90 = *(int *)(v39 + 20);
        uint64_t v91 = &v37[v90];
        uint64_t v92 = &v38[v90];
        uint64_t v93 = type metadata accessor for Locale();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v92, 1, v93))
        {
          uint64_t v94 = sub_10017DF08(&qword_100E63730);
          memcpy(v91, v92, *(void *)(*(void *)(v94 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 32))(v91, v92, v93);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v91, 0, 1, v93);
        }
        uint64_t v100 = __dst[6];
        uint64_t v146 = (char *)v153 + v100;
        long long v101 = &v38[v100];
        uint64_t v102 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32))(v146, v101, v102);
        uint64_t v103 = __dst[7];
        uint64_t v104 = (char *)v153 + v103;
        uint64_t v105 = &v38[v103];
        uint64_t v106 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v105, 1, v106))
        {
          uint64_t v107 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v104, v105, *(void *)(*(void *)(v107 - 8) + 64));
        }
        else
        {
          uint64_t v108 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 32))(v104, v105, v108);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v104, 0, 1, v106);
        }
        uint64_t v109 = __dst[8];
        uint64_t v110 = (char *)v153 + v109;
        uint64_t v111 = &v38[v109];
        uint64_t v112 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v113 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 32))(v110, v111, v113);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v110, v111, *(void *)(*(void *)(v112 - 8) + 64));
        }
        uint64_t v115 = (uint64_t)__dst;
        uint64_t v114 = (uint64_t)v153;
        uint64_t v116 = __dst[9];
        uint64_t v147 = (char *)v153 + v116;
        uint64_t v117 = (uint64_t)&v38[v116];
        uint64_t v118 = type metadata accessor for WeatherDataOverrides();
        __src = (char *)v117;
        int v119 = _s7Weather24LocationCompositionStateOwet_0(v117, 1, v118);
        uint64_t v31 = v145;
        if (v119)
        {
          uint64_t v120 = sub_10017DF08(&qword_100E63740);
          memcpy(v147, __src, *(void *)(*(void *)(v120 - 8) + 64));
        }
        else
        {
          uint64_t v143 = v118;
          uint64_t v121 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)__src, 1, v121))
          {
            uint64_t v122 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            uint64_t v123 = v147;
            memcpy(v147, __src, *(void *)(*(void *)(v122 - 8) + 64));
          }
          else
          {
            uint64_t v123 = v147;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 32))(v147, __src, v121);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v147, 0, 1, v121);
          }
          uint64_t v124 = *(int *)(v143 + 20);
          uint64_t v125 = &v123[v124];
          uint64_t v126 = &__src[v124];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&__src[v124], 1, v121))
          {
            uint64_t v127 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v125, v126, *(void *)(*(void *)(v127 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 32))(v125, v126, v121);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v125, 0, 1, v121);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v147, 0, 1, v143);
          uint64_t v115 = (uint64_t)__dst;
          uint64_t v114 = (uint64_t)v153;
        }
        _s7Weather24LocationCompositionStateOwst_0(v114, 0, 1, v115);
      }
      *(_OWORD *)&v14[v31[7]] = *(_OWORD *)&v15[v31[7]];
      goto LABEL_51;
    case 6u:
      long long v41 = *((_OWORD *)v15 + 1);
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v41;
      v14[32] = v15[32];
      *((void *)v14 + 5) = *((void *)v15 + 5);
      uint64_t v42 = (int *)type metadata accessor for MoonComponentViewModel();
      uint64_t v43 = v42[7];
      uint64_t v44 = &v14[v43];
      uint64_t v45 = &v15[v43];
      uint64_t v46 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
      v14[v42[8]] = v15[v42[8]];
      *(void *)&v14[v42[9]] = *(void *)&v15[v42[9]];
      goto LABEL_51;
    case 7u:
      uint64_t v47 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
        uint64_t v151 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v48 = v151[5];
        uint64_t v49 = &v14[v48];
        uint64_t v50 = &v15[v48];
        uint64_t v51 = type metadata accessor for URL();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v51))
        {
          uint64_t v52 = sub_10017DF08(&qword_100E749B0);
          memcpy(v49, v50, *(void *)(*(void *)(v52 - 8) + 64));
          uint64_t v53 = *(void *)(v51 - 8);
        }
        else
        {
          uint64_t v95 = v49;
          __dstb = v49;
          uint64_t v53 = *(void *)(v51 - 8);
          (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v95, v50, v51);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstb, 0, 1, v51);
        }
        *(_OWORD *)&v14[v151[6]] = *(_OWORD *)&v15[v151[6]];
        uint64_t v96 = *(void (**)(char *, char *, uint64_t))(v53 + 32);
        v96(&v14[v151[7]], &v15[v151[7]], v51);
        uint64_t v97 = v151[8];
        __dsta = &v14[v97];
        uint64_t v98 = &v15[v97];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v15[v97], 1, v51))
        {
          uint64_t v99 = sub_10017DF08(&qword_100E749B0);
          memcpy(__dsta, v98, *(void *)(*(void *)(v99 - 8) + 64));
        }
        else
        {
          v96(__dsta, v98, v51);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v51);
        }
        v14[v151[9]] = v15[v151[9]];
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v14, v15, *(void *)(*(void *)(v47 - 8) + 64));
      }
      goto LABEL_51;
    case 8u:
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      uint64_t v54 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel() + 20);
      uint64_t v55 = &v14[v54];
      uint64_t v56 = &v15[v54];
      uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(HourPrecipitationChartViewModel - 8) + 32))(v55, v56, HourPrecipitationChartViewModel);
      goto LABEL_51;
    case 9u:
      uint64_t v58 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v14, v15, v58);
      uint64_t v59 = type metadata accessor for NotificationsOptInComponentViewModel();
      v14[*(int *)(v59 + 20)] = v15[*(int *)(v59 + 20)];
      goto LABEL_51;
    case 0xBu:
      uint64_t v60 = type metadata accessor for PressureTrend();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v14, v15, v60);
      uint64_t v61 = (int *)type metadata accessor for PressureComponentViewModel();
      *(_OWORD *)&v14[v61[5]] = *(_OWORD *)&v15[v61[5]];
      *(_OWORD *)&v14[v61[6]] = *(_OWORD *)&v15[v61[6]];
      *(_OWORD *)&v14[v61[7]] = *(_OWORD *)&v15[v61[7]];
      *(void *)&v14[v61[8]] = *(void *)&v15[v61[8]];
      *(_OWORD *)&v14[v61[9]] = *(_OWORD *)&v15[v61[9]];
      goto LABEL_51;
    case 0xDu:
      long long v62 = *((_OWORD *)v15 + 1);
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v62;
      *((void *)v14 + 4) = *((void *)v15 + 4);
      *(_OWORD *)(v14 + 40) = *(_OWORD *)(v15 + 40);
      *(_OWORD *)(v14 + 56) = *(_OWORD *)(v15 + 56);
      uint64_t v63 = type metadata accessor for SevereAlertComponentViewModel();
      uint64_t v64 = *(int *)(v63 + 36);
      uint64_t v65 = &v14[v64];
      uint64_t v66 = &v15[v64];
      uint64_t v67 = type metadata accessor for WeatherAlert.Prominence();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 32))(v65, v66, v67);
      *(void *)&v14[*(int *)(v63 + 40)] = *(void *)&v15[*(int *)(v63 + 40)];
      goto LABEL_51;
    case 0xEu:
      uint64_t v68 = type metadata accessor for SunriseSunsetViewModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v14, v15, v68);
      goto LABEL_51;
    case 0x10u:
      long long v69 = *((_OWORD *)v15 + 1);
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v69;
      uint64_t v70 = type metadata accessor for UVIndexComponentViewModel();
      uint64_t v71 = *(int *)(v70 + 28);
      uint64_t v72 = &v14[v71];
      uint64_t v73 = &v15[v71];
      uint64_t v74 = type metadata accessor for WeatherDescription();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 32))(v72, v73, v74);
      *(void *)&v14[*(int *)(v70 + 32)] = *(void *)&v15[*(int *)(v70 + 32)];
      goto LABEL_51;
    case 0x12u:
      long long v75 = *((_OWORD *)v15 + 1);
      *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
      *((_OWORD *)v14 + 1) = v75;
      long long v76 = *((_OWORD *)v15 + 3);
      *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
      *((_OWORD *)v14 + 3) = v76;
      long long v77 = *((_OWORD *)v15 + 5);
      *((_OWORD *)v14 + 4) = *((_OWORD *)v15 + 4);
      *((_OWORD *)v14 + 5) = v77;
      long long v78 = *((_OWORD *)v15 + 7);
      *((_OWORD *)v14 + 6) = *((_OWORD *)v15 + 6);
      *((_OWORD *)v14 + 7) = v78;
      long long v79 = *((_OWORD *)v15 + 9);
      *((_OWORD *)v14 + 8) = *((_OWORD *)v15 + 8);
      *((_OWORD *)v14 + 9) = v79;
      *((_OWORD *)v14 + 10) = *((_OWORD *)v15 + 10);
      *((void *)v14 + 22) = *((void *)v15 + 22);
      *(_OWORD *)(v14 + 184) = *(_OWORD *)(v15 + 184);
      uint64_t v80 = type metadata accessor for WindComponentViewModel();
      uint64_t v81 = *(int *)(v80 + 68);
      uint64_t v82 = &v14[v81];
      uint64_t v83 = &v15[v81];
      uint64_t v84 = type metadata accessor for WindComponentCompassViewModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 32))(v82, v83, v84);
      *(void *)&v14[*(int *)(v80 + 72)] = *(void *)&v15[*(int *)(v80 + 72)];
LABEL_51:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
      break;
  }
  uint64_t v128 = a3[7];
  *(_WORD *)&a1[a3[6]] = *(_WORD *)&a2[a3[6]];
  uint64_t v129 = &a1[v128];
  uint64_t v130 = &a2[v128];
  uint64_t v131 = type metadata accessor for LocationComponentAction(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v130, 1, v131))
  {
    uint64_t v132 = sub_10017DF08(&qword_100E7AF78);
    memcpy(v129, v130, *(void *)(*(void *)(v132 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v133 = type metadata accessor for URL();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v133 - 8) + 32))(v129, v130, v133);
        uint64_t v134 = sub_10017DF08(&qword_100E66478);
        v129[*(int *)(v134 + 48)] = v130[*(int *)(v134 + 48)];
        goto LABEL_60;
      case 1u:
        uint64_t v135 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v135 - 8) + 32))(v129, v130, v135);
        goto LABEL_60;
      case 2u:
        uint64_t v136 = type metadata accessor for DetailCondition();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v136 - 8) + 32))(v129, v130, v136);
        uint64_t v137 = sub_10017DF08(&qword_100E66488);
        v129[*(int *)(v137 + 48)] = v130[*(int *)(v137 + 48)];
        goto LABEL_60;
      case 4u:
        unsigned char *v129 = *v130;
        uint64_t v138 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
        uint64_t v139 = &v129[v138];
        uint64_t v140 = &v130[v138];
        uint64_t v141 = type metadata accessor for Location();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v141 - 8) + 32))(v139, v140, v141);
LABEL_60:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v129, v130, *(void *)(*(void *)(v131 - 8) + 64));
        break;
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v129, 0, 1, v131);
  }
  return a1;
}

unsigned char *sub_100B6A468(unsigned char *a1, unsigned char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1002004A4((uint64_t)a1, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
    uint64_t v6 = type metadata accessor for LocationComponentHeaderViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      uint64_t v7 = type metadata accessor for WeatherDescription();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v8 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
      uint64_t v9 = *(int *)(v8 + 20);
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      long long v12 = *((_OWORD *)v11 + 1);
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v12;
      *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
      *((void *)v10 + 6) = *((void *)v11 + 6);
      a1[*(int *)(v8 + 24)] = a2[*(int *)(v8 + 24)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v13 = a3[5];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    sub_1002004A4((uint64_t)&a1[v13], (void (*)(void))type metadata accessor for LocationComponentViewModel);
    uint64_t v16 = type metadata accessor for LocationComponentViewModel();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)uint64_t v14 = *(void *)v15;
        uint64_t v17 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
        uint64_t v18 = v17[5];
        __dstb = &v14[v18];
        uint64_t v19 = &v15[v18];
        uint64_t v20 = sub_10017DF08(&qword_100E65250);
        uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32);
        v21(__dstb, v19, v20);
        v21(&v14[v17[6]], &v15[v17[6]], v20);
        v21(&v14[v17[7]], &v15[v17[7]], v20);
        *(_OWORD *)&v14[v17[8]] = *(_OWORD *)&v15[v17[8]];
        *(_OWORD *)&v14[v17[9]] = *(_OWORD *)&v15[v17[9]];
        goto LABEL_52;
      case 2u:
        long long v22 = *((_OWORD *)v15 + 1);
        *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
        *((_OWORD *)v14 + 1) = v22;
        uint64_t v23 = type metadata accessor for FeelsLikeComponentViewModel(0);
        uint64_t v24 = *(int *)(v23 + 24);
        uint64_t v25 = &v14[v24];
        uint64_t v26 = &v15[v24];
        uint64_t v27 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27))
        {
          uint64_t v28 = sub_10017DF08(&qword_100E63750);
          memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
          uint64_t v84 = *(int *)(v27 + 20);
          uint64_t v163 = v23;
          uint64_t v85 = &v25[v84];
          uint64_t v86 = &v26[v84];
          uint64_t v87 = type metadata accessor for TemperatureScaleConfiguration();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 32))(v85, v86, v87);
          uint64_t v88 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
          *(void *)&v85[v88[5]] = *(void *)&v86[v88[5]];
          *(void *)&v85[v88[6]] = *(void *)&v86[v88[6]];
          *(void *)&v85[v88[7]] = *(void *)&v86[v88[7]];
          *(_OWORD *)&v85[v88[8]] = *(_OWORD *)&v86[v88[8]];
          v85[v88[9]] = v86[v88[9]];
          uint64_t v23 = v163;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v27);
        }
        *(_OWORD *)&v14[*(int *)(v23 + 28)] = *(_OWORD *)&v15[*(int *)(v23 + 28)];
        goto LABEL_52;
      case 5u:
        uint64_t v29 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v14, v15, v29);
        uint64_t v30 = (int *)type metadata accessor for MapComponentViewModel();
        uint64_t v31 = v30[5];
        uint64_t v32 = &v14[v31];
        uint64_t v33 = &v15[v31];
        uint64_t v34 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
        uint64_t v35 = v30[6];
        uint64_t v36 = &v14[v35];
        uint64_t v37 = &v15[v35];
        uint64_t v38 = type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v38))
        {
          uint64_t v39 = sub_10017DF08(&qword_100E63850);
          memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
        }
        else
        {
          int v155 = v30;
          *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
          __dst = (int *)v38;
          uint64_t v164 = v36;
          uint64_t v89 = *(int *)(v38 + 20);
          uint64_t v90 = &v36[v89];
          uint64_t v91 = &v37[v89];
          uint64_t v92 = type metadata accessor for Locale();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v91, 1, v92))
          {
            uint64_t v93 = sub_10017DF08(&qword_100E63730);
            memcpy(v90, v91, *(void *)(*(void *)(v93 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 32))(v90, v91, v92);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v90, 0, 1, v92);
          }
          uint64_t v99 = __dst[6];
          uint64_t v156 = (char *)v164 + v99;
          uint64_t v100 = &v37[v99];
          uint64_t v101 = type metadata accessor for WeatherDataModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 32))(v156, v100, v101);
          uint64_t v102 = __dst[7];
          uint64_t v103 = (char *)v164 + v102;
          uint64_t v104 = &v37[v102];
          uint64_t v105 = sub_10017DF08(&qword_100E63738);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v104, 1, v105))
          {
            uint64_t v106 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v103, v104, *(void *)(*(void *)(v106 - 8) + 64));
          }
          else
          {
            uint64_t v107 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 32))(v103, v104, v107);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v103, 0, 1, v105);
          }
          uint64_t v108 = __dst[8];
          uint64_t v109 = (char *)v164 + v108;
          uint64_t v110 = &v37[v108];
          uint64_t v111 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v112 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 32))(v109, v110, v112);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v109, v110, *(void *)(*(void *)(v111 - 8) + 64));
          }
          uint64_t v114 = (uint64_t)__dst;
          uint64_t v113 = (uint64_t)v164;
          uint64_t v115 = __dst[9];
          uint64_t v157 = (char *)v164 + v115;
          uint64_t v116 = (uint64_t)&v37[v115];
          uint64_t v117 = type metadata accessor for WeatherDataOverrides();
          __src = (char *)v116;
          int v118 = _s7Weather24LocationCompositionStateOwet_0(v116, 1, v117);
          uint64_t v30 = v155;
          if (v118)
          {
            uint64_t v119 = sub_10017DF08(&qword_100E63740);
            memcpy(v157, __src, *(void *)(*(void *)(v119 - 8) + 64));
          }
          else
          {
            uint64_t v153 = v117;
            uint64_t v120 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)__src, 1, v120))
            {
              uint64_t v121 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              uint64_t v122 = v157;
              memcpy(v157, __src, *(void *)(*(void *)(v121 - 8) + 64));
            }
            else
            {
              uint64_t v122 = v157;
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 32))(v157, __src, v120);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v157, 0, 1, v120);
            }
            uint64_t v123 = *(int *)(v153 + 20);
            uint64_t v124 = &v122[v123];
            uint64_t v125 = &__src[v123];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&__src[v123], 1, v120))
            {
              uint64_t v126 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v124, v125, *(void *)(*(void *)(v126 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 32))(v124, v125, v120);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v124, 0, 1, v120);
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v157, 0, 1, v153);
            uint64_t v114 = (uint64_t)__dst;
            uint64_t v113 = (uint64_t)v164;
          }
          _s7Weather24LocationCompositionStateOwst_0(v113, 0, 1, v114);
        }
        *(_OWORD *)&v14[v30[7]] = *(_OWORD *)&v15[v30[7]];
        goto LABEL_52;
      case 6u:
        long long v40 = *((_OWORD *)v15 + 1);
        *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
        *((_OWORD *)v14 + 1) = v40;
        v14[32] = v15[32];
        *((void *)v14 + 5) = *((void *)v15 + 5);
        long long v41 = (int *)type metadata accessor for MoonComponentViewModel();
        uint64_t v42 = v41[7];
        uint64_t v43 = &v14[v42];
        uint64_t v44 = &v15[v42];
        uint64_t v45 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
        v14[v41[8]] = v15[v41[8]];
        *(void *)&v14[v41[9]] = *(void *)&v15[v41[9]];
        goto LABEL_52;
      case 7u:
        uint64_t v46 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
          uint64_t v162 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v47 = v162[5];
          uint64_t v48 = &v14[v47];
          uint64_t v49 = &v15[v47];
          uint64_t v50 = type metadata accessor for URL();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v50))
          {
            uint64_t v51 = sub_10017DF08(&qword_100E749B0);
            memcpy(v48, v49, *(void *)(*(void *)(v51 - 8) + 64));
            uint64_t v52 = *(void *)(v50 - 8);
          }
          else
          {
            uint64_t v94 = v48;
            __dstc = v48;
            uint64_t v52 = *(void *)(v50 - 8);
            (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v94, v49, v50);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstc, 0, 1, v50);
          }
          *(_OWORD *)&v14[v162[6]] = *(_OWORD *)&v15[v162[6]];
          uint64_t v95 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
          v95(&v14[v162[7]], &v15[v162[7]], v50);
          uint64_t v96 = v162[8];
          __dsta = &v14[v96];
          uint64_t v97 = &v15[v96];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v15[v96], 1, v50))
          {
            uint64_t v98 = sub_10017DF08(&qword_100E749B0);
            memcpy(__dsta, v97, *(void *)(*(void *)(v98 - 8) + 64));
          }
          else
          {
            v95(__dsta, v97, v50);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v50);
          }
          v14[v162[9]] = v15[v162[9]];
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v14, v15, *(void *)(*(void *)(v46 - 8) + 64));
        }
        goto LABEL_52;
      case 8u:
        *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
        uint64_t v53 = *(int *)(type metadata accessor for NextHourPrecipitationComponentViewModel() + 20);
        uint64_t v54 = &v14[v53];
        uint64_t v55 = &v15[v53];
        uint64_t HourPrecipitationChartViewModel = type metadata accessor for NextHourPrecipitationChartViewModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(HourPrecipitationChartViewModel - 8) + 32))(v54, v55, HourPrecipitationChartViewModel);
        goto LABEL_52;
      case 9u:
        uint64_t v57 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v14, v15, v57);
        uint64_t v58 = type metadata accessor for NotificationsOptInComponentViewModel();
        v14[*(int *)(v58 + 20)] = v15[*(int *)(v58 + 20)];
        goto LABEL_52;
      case 0xBu:
        uint64_t v59 = type metadata accessor for PressureTrend();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v14, v15, v59);
        uint64_t v60 = (int *)type metadata accessor for PressureComponentViewModel();
        *(_OWORD *)&v14[v60[5]] = *(_OWORD *)&v15[v60[5]];
        *(_OWORD *)&v14[v60[6]] = *(_OWORD *)&v15[v60[6]];
        *(_OWORD *)&v14[v60[7]] = *(_OWORD *)&v15[v60[7]];
        *(void *)&v14[v60[8]] = *(void *)&v15[v60[8]];
        *(_OWORD *)&v14[v60[9]] = *(_OWORD *)&v15[v60[9]];
        goto LABEL_52;
      case 0xDu:
        long long v61 = *((_OWORD *)v15 + 1);
        *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
        *((_OWORD *)v14 + 1) = v61;
        *((void *)v14 + 4) = *((void *)v15 + 4);
        *(_OWORD *)(v14 + 40) = *(_OWORD *)(v15 + 40);
        *(_OWORD *)(v14 + 56) = *(_OWORD *)(v15 + 56);
        uint64_t v62 = type metadata accessor for SevereAlertComponentViewModel();
        uint64_t v63 = *(int *)(v62 + 36);
        uint64_t v64 = &v14[v63];
        uint64_t v65 = &v15[v63];
        uint64_t v66 = type metadata accessor for WeatherAlert.Prominence();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v64, v65, v66);
        *(void *)&v14[*(int *)(v62 + 40)] = *(void *)&v15[*(int *)(v62 + 40)];
        goto LABEL_52;
      case 0xEu:
        uint64_t v67 = type metadata accessor for SunriseSunsetViewModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 32))(v14, v15, v67);
        goto LABEL_52;
      case 0x10u:
        long long v68 = *((_OWORD *)v15 + 1);
        *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
        *((_OWORD *)v14 + 1) = v68;
        uint64_t v69 = type metadata accessor for UVIndexComponentViewModel();
        uint64_t v70 = *(int *)(v69 + 28);
        uint64_t v71 = &v14[v70];
        uint64_t v72 = &v15[v70];
        uint64_t v73 = type metadata accessor for WeatherDescription();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32))(v71, v72, v73);
        *(void *)&v14[*(int *)(v69 + 32)] = *(void *)&v15[*(int *)(v69 + 32)];
        goto LABEL_52;
      case 0x12u:
        long long v74 = *((_OWORD *)v15 + 1);
        *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
        *((_OWORD *)v14 + 1) = v74;
        long long v75 = *((_OWORD *)v15 + 3);
        *((_OWORD *)v14 + 2) = *((_OWORD *)v15 + 2);
        *((_OWORD *)v14 + 3) = v75;
        long long v76 = *((_OWORD *)v15 + 5);
        *((_OWORD *)v14 + 4) = *((_OWORD *)v15 + 4);
        *((_OWORD *)v14 + 5) = v76;
        long long v77 = *((_OWORD *)v15 + 7);
        *((_OWORD *)v14 + 6) = *((_OWORD *)v15 + 6);
        *((_OWORD *)v14 + 7) = v77;
        long long v78 = *((_OWORD *)v15 + 9);
        *((_OWORD *)v14 + 8) = *((_OWORD *)v15 + 8);
        *((_OWORD *)v14 + 9) = v78;
        *((_OWORD *)v14 + 10) = *((_OWORD *)v15 + 10);
        *((void *)v14 + 22) = *((void *)v15 + 22);
        *(_OWORD *)(v14 + 184) = *(_OWORD *)(v15 + 184);
        uint64_t v79 = type metadata accessor for WindComponentViewModel();
        uint64_t v80 = *(int *)(v79 + 68);
        uint64_t v81 = &v14[v80];
        uint64_t v82 = &v15[v80];
        uint64_t v83 = type metadata accessor for WindComponentCompassViewModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 32))(v81, v82, v83);
        *(void *)&v14[*(int *)(v79 + 72)] = *(void *)&v15[*(int *)(v79 + 72)];
LABEL_52:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
        break;
    }
  }
  uint64_t v127 = a3[7];
  *(_WORD *)&a1[a3[6]] = *(_WORD *)&a2[a3[6]];
  uint64_t v128 = &a1[v127];
  uint64_t v129 = &a2[v127];
  uint64_t v130 = type metadata accessor for LocationComponentAction(0);
  int v131 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v128, 1, v130);
  int v132 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v129, 1, v130);
  if (v131)
  {
    if (!v132)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v133 = type metadata accessor for URL();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v133 - 8) + 32))(v128, v129, v133);
          uint64_t v134 = sub_10017DF08(&qword_100E66478);
          v128[*(int *)(v134 + 48)] = v129[*(int *)(v134 + 48)];
          goto LABEL_68;
        case 1u:
          uint64_t v138 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v138 - 8) + 32))(v128, v129, v138);
          goto LABEL_68;
        case 2u:
          uint64_t v139 = type metadata accessor for DetailCondition();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v139 - 8) + 32))(v128, v129, v139);
          uint64_t v140 = sub_10017DF08(&qword_100E66488);
          v128[*(int *)(v140 + 48)] = v129[*(int *)(v140 + 48)];
          goto LABEL_68;
        case 4u:
          *uint64_t v128 = *v129;
          uint64_t v141 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
          uint64_t v142 = &v128[v141];
          uint64_t v143 = &v129[v141];
          uint64_t v144 = type metadata accessor for Location();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v144 - 8) + 32))(v142, v143, v144);
LABEL_68:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v128, v129, *(void *)(*(void *)(v130 - 8) + 64));
          break;
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v128, 0, 1, v130);
      return a1;
    }
    goto LABEL_59;
  }
  if (v132)
  {
    sub_1002004A4((uint64_t)v128, (void (*)(void))type metadata accessor for LocationComponentAction);
LABEL_59:
    size_t v135 = *(void *)(*(void *)(sub_10017DF08(&qword_100E7AF78) - 8) + 64);
LABEL_60:
    memcpy(v128, v129, v135);
    return a1;
  }
  if (a1 != a2)
  {
    sub_1002004A4((uint64_t)v128, (void (*)(void))type metadata accessor for LocationComponentAction);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v136 = type metadata accessor for URL();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v136 - 8) + 32))(v128, v129, v136);
        uint64_t v137 = sub_10017DF08(&qword_100E66478);
        v128[*(int *)(v137 + 48)] = v129[*(int *)(v137 + 48)];
        break;
      case 1u:
        uint64_t v145 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v145 - 8) + 32))(v128, v129, v145);
        break;
      case 2u:
        uint64_t v146 = type metadata accessor for DetailCondition();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v146 - 8) + 32))(v128, v129, v146);
        uint64_t v147 = sub_10017DF08(&qword_100E66488);
        v128[*(int *)(v147 + 48)] = v129[*(int *)(v147 + 48)];
        break;
      case 4u:
        *uint64_t v128 = *v129;
        uint64_t v148 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
        uint64_t v149 = &v128[v148];
        uint64_t v150 = &v129[v148];
        uint64_t v151 = type metadata accessor for Location();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v151 - 8) + 32))(v149, v150, v151);
        break;
      default:
        size_t v135 = *(void *)(*(void *)(v130 - 8) + 64);
        goto LABEL_60;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100B6B868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for LocationComponentHeaderViewModel(0);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    type metadata accessor for LocationComponentViewModel();
    sub_100162F30();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v12 = *(int *)(a3 + 20);
    }
    else
    {
      uint64_t v8 = sub_10017DF08(&qword_100E7AF78);
      uint64_t v12 = *(int *)(a3 + 28);
    }
    uint64_t v9 = a1 + v12;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_100B6B90C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for LocationComponentHeaderViewModel(0);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    type metadata accessor for LocationComponentViewModel();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = *(int *)(a4 + 20);
    }
    else
    {
      uint64_t v10 = sub_10017DF08(&qword_100E7AF78);
      uint64_t v14 = *(int *)(a4 + 28);
    }
    uint64_t v11 = a1 + v14;
  }

  return _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

BOOL sub_100B6B9B8(uint64_t a1, uint64_t a2)
{
  type metadata accessor for LocationComponentAction(0);
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = sub_10017DF08(&qword_100EB38C8);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_10017DF08(&qword_100E7AF78);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = &v28[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = &v28[-v18];
  __chkstk_darwin(v17);
  uint64_t v21 = &v28[-v20];
  sub_100365CFC();
  if ((v22 & 1) == 0) {
    return 0;
  }
  uint64_t v23 = (int *)type metadata accessor for LocationComponentContainerViewModel();
  if ((sub_1009F1F2C(a1 + v23[5], (double *)(a2 + v23[5])) & 1) == 0
    || !sub_100B6BD0C(*(unsigned __int8 *)(a1 + v23[6]) | (*(unsigned __int8 *)(a1 + v23[6] + 1) << 8), *(unsigned __int8 *)(a2 + v23[6]) | (*(unsigned __int8 *)(a2 + v23[6] + 1) << 8)))
  {
    return 0;
  }
  sub_100B6BE00(a1 + v23[7], (uint64_t)v21);
  sub_100B6BE00(a2 + v23[7], (uint64_t)v19);
  uint64_t v24 = v12 + *(int *)(v8 + 48);
  sub_100B6BE00((uint64_t)v21, v12);
  sub_100B6BE00((uint64_t)v19, v24);
  sub_100162F8C(v12);
  if (v25)
  {
    sub_1001781AC((uint64_t)v19, &qword_100E7AF78);
    sub_1001781AC((uint64_t)v21, &qword_100E7AF78);
    sub_100162F8C(v24);
    if (v25)
    {
      sub_1001781AC(v12, &qword_100E7AF78);
      return 1;
    }
    goto LABEL_12;
  }
  sub_100B6BE00(v12, (uint64_t)v16);
  sub_100162F8C(v24);
  if (v25)
  {
    sub_1001781AC((uint64_t)v19, &qword_100E7AF78);
    sub_1001781AC((uint64_t)v21, &qword_100E7AF78);
    sub_1002004A4((uint64_t)v16, (void (*)(void))type metadata accessor for LocationComponentAction);
LABEL_12:
    sub_1001781AC(v12, &qword_100EB38C8);
    return 0;
  }
  sub_100B6BE68(v24, v7);
  char v26 = sub_1003466E8((uint64_t)v16, v7);
  sub_1002004A4(v7, (void (*)(void))type metadata accessor for LocationComponentAction);
  sub_1001781AC((uint64_t)v19, &qword_100E7AF78);
  sub_1001781AC((uint64_t)v21, &qword_100E7AF78);
  sub_1002004A4((uint64_t)v16, (void (*)(void))type metadata accessor for LocationComponentAction);
  sub_1001781AC(v12, &qword_100E7AF78);
  return (v26 & 1) != 0;
}

uint64_t sub_100B6BCDC()
{
  return sub_1001F26C0();
}

BOOL sub_100B6BD0C(__int16 a1, __int16 a2)
{
  if ((a1 & 0x100) != 0)
  {
    switch((char)a1)
    {
      case 1:
        if ((a2 & 0x100) == 0 || a2 != 1) {
          return 0;
        }
        break;
      case 2:
        if ((a2 & 0x100) == 0 || a2 != 2) {
          return 0;
        }
        break;
      case 3:
        if ((a2 & 0x100) == 0 || a2 <= 2u) {
          return 0;
        }
        break;
      default:
        if ((a2 & 0x100) == 0 || (_BYTE)a2) {
          return 0;
        }
        break;
    }
    return 1;
  }
  else
  {
    return (a2 & 0x100) == 0 && a1 == a2;
  }
}

BOOL sub_100B6BDB0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_100B6BD0C(*a1 | (a1[1] << 8), *a2 | (a2[1] << 8));
}

uint64_t sub_100B6BDD8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100B6BCDC();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100B6BE00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E7AF78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100B6BE68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationComponentAction(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for LocationComponentContainerViewModel.ContentInsets(unsigned __int16 *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  unsigned int v2 = a2 + 0xFFFF;
  if ((a2 + 0xFFFF) <= 0xFFFEFFFF) {
    unsigned int v3 = 2;
  }
  else {
    unsigned int v3 = 4;
  }
  if (v2 < 0xFF0000) {
    unsigned int v3 = 1;
  }
  if (v2 >= 0x10000) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0;
  }
  switch(v4)
  {
    case 1:
      uint64_t v4 = *((unsigned __int8 *)a1 + 2);
      if (!*((unsigned char *)a1 + 2)) {
        return v4;
      }
      goto LABEL_17;
    case 2:
      uint64_t v4 = a1[1];
      if (!a1[1]) {
        return v4;
      }
      goto LABEL_17;
    case 3:
      __break(1u);
      JUMPOUT(0x100B6BF64);
    case 4:
      uint64_t v4 = *(unsigned int *)(a1 + 1);
      if (v4) {
LABEL_17:
      }
        uint64_t v4 = (*a1 | (v4 << 16)) - 0xFFFF;
      break;
    default:
      return v4;
  }
  return v4;
}

uint64_t storeEnumTagSinglePayload for LocationComponentContainerViewModel.ContentInsets(uint64_t result, int a2, int a3)
{
  unsigned int v3 = a3 + 0xFFFF;
  if ((a3 + 0xFFFF) <= 0xFFFEFFFF) {
    int v4 = 2;
  }
  else {
    int v4 = 4;
  }
  if (v3 < 0xFF0000) {
    int v4 = 1;
  }
  if (v3 >= 0x10000) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2)
  {
    unsigned int v7 = ((a2 - 1) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 1;
    switch(v6)
    {
      case 1:
        *(unsigned char *)(result + 2) = v7;
        return result;
      case 2:
        *(_WORD *)(result + 2) = v7;
        return result;
      case 3:
        goto LABEL_21;
      case 4:
        *(_DWORD *)(result + 2) = v7;
        return result;
      default:
        return result;
    }
  }
  switch(v6)
  {
    case 1:
      *(unsigned char *)(result + 2) = 0;
      break;
    case 2:
      *(_WORD *)(result + 2) = 0;
      break;
    case 3:
LABEL_21:
      __break(1u);
      JUMPOUT(0x100B6C034);
    case 4:
      *(_DWORD *)(result + 2) = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100B6C05C(unsigned __int8 *a1)
{
  if (a1[1]) {
    return (*a1 | (a1[1] << 8)) - 255;
  }
  else {
    return 0;
  }
}

unsigned char *sub_100B6C07C(unsigned char *result, int a2)
{
  if (a2)
  {
    *uint64_t result = a2 - 1;
    unsigned int v2 = ((a2 - 1) >> 8) + 1;
  }
  else
  {
    LOBYTE(v2) = 0;
  }
  result[1] = v2;
  return result;
}

ValueMetadata *type metadata accessor for LocationComponentContainerViewModel.ContentInsets()
{
  return &type metadata for LocationComponentContainerViewModel.ContentInsets;
}

uint64_t sub_100B6C0B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v52 = a1;
  uint64_t v49 = *v1;
  uint64_t v50 = type metadata accessor for AirQualityScaleCategory();
  sub_100179C0C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AirQualityScale();
  sub_100179C0C();
  uint64_t v9 = v8;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v51 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v14 = __chkstk_darwin(v13);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v42 - v15;
  if (qword_100E62A38 != -1) {
    swift_once();
  }
  sub_100B6C6B0();
  Configurable.setting<A>(_:)();
  if (v53)
  {
    LODWORD(v49) = 0;
  }
  else
  {
    AirQuality.scale.getter();
    LODWORD(v49) = AirQualityScale.isNumerical.getter();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v16, v7);
  }
  uint64_t v48 = AirQuality.index.getter();
  AirQuality.scale.getter();
  uint64_t v17 = AirQualityScale.range.getter();
  uint64_t v46 = v18;
  uint64_t v47 = v17;
  uint64_t v19 = *(void (**)(void))(v9 + 8);
  sub_10017DC5C();
  v19();
  AirQuality.scale.getter();
  Swift::Int v20 = AirQuality.index.getter();
  Swift::Double v21 = AirQualityScale.fraction(for:)(v20);
  sub_10017DC5C();
  v19();
  AirQuality.currentScaleCategory.getter();
  uint64_t v22 = AirQualityScaleCategory.description.getter();
  uint64_t v44 = v23;
  uint64_t v45 = v22;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v50);
  AirQuality.scale.getter();
  uint64_t v50 = AirQualityScale.displayName.getter();
  uint64_t v43 = v24;
  sub_10017DC5C();
  v19();
  uint64_t v25 = AirQuality.displayDescription.getter();
  uint64_t v42 = v26;
  AirQuality.scale.getter();
  uint64_t v27 = AirQualityScale.displayName.getter();
  uint64_t v29 = v28;
  sub_10017DC5C();
  v19();
  char v30 = AirQuality.isSignificant.getter();
  AirQuality.scale.getter();
  uint64_t v31 = AirQualityScale.gradientStops.getter();
  sub_10017DC5C();
  v19();
  uint64_t v32 = v52;
  sub_100B6C4B8(v52);
  uint64_t v33 = (int *)type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v34 = v32 + v33[5];
  uint64_t v35 = v47;
  *(void *)uint64_t v34 = v48;
  *(void *)(v34 + 8) = v35;
  *(void *)(v34 + 16) = v46;
  *(Swift::Double *)(v34 + 24) = v21;
  uint64_t v36 = v44;
  *(void *)(v34 + 32) = v45;
  *(void *)(v34 + 40) = v36;
  uint64_t v37 = v43;
  *(void *)(v34 + 48) = v50;
  *(void *)(v34 + 56) = v37;
  uint64_t v38 = v42;
  *(void *)(v34 + 64) = v25;
  *(void *)(v34 + 72) = v38;
  *(void *)(v34 + 80) = v27;
  *(void *)(v34 + 88) = v29;
  *(unsigned char *)(v34 + 96) = v49 & 1;
  *(unsigned char *)(v34 + 97) = v30 & 1;
  *(void *)(v34 + 104) = v31;
  type metadata accessor for LocationComponentViewModel();
  swift_storeEnumTagMultiPayload();
  uint64_t v39 = (unsigned char *)(v32 + v33[7]);
  *uint64_t v39 = 0;
  uint64_t v40 = type metadata accessor for LocationComponentAction(0);
  swift_storeEnumTagMultiPayload();
  uint64_t result = _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v40);
  *(_WORD *)(v32 + v33[6]) = 256;
  return result;
}

uint64_t sub_100B6C4B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v20 = type metadata accessor for AirQualityScaleCategory();
  uint64_t v2 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AirQualityScale();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  AirQuality.scale.getter();
  uint64_t v9 = AirQualityScale.displayLabel.getter();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  AirQuality.currentScaleCategory.getter();
  uint64_t v12 = AirQualityScaleCategory.glyph.getter();
  unint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v20);
  if (v14) {
    uint64_t v15 = v12;
  }
  else {
    uint64_t v15 = 0x776F6C2E697161;
  }
  if (v14) {
    unint64_t v16 = v14;
  }
  else {
    unint64_t v16 = 0xE700000000000000;
  }
  char v17 = AirQuality.isSignificant.getter();
  *(void *)a1 = v9;
  *(void *)(a1 + 8) = v11;
  *(void *)(a1 + 16) = v15;
  *(void *)(a1 + 24) = v16;
  *(unsigned char *)(a1 + 32) = v17 & 1;
  type metadata accessor for LocationComponentHeaderViewModel(0);
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 48) = 0;
  return swift_storeEnumTagMultiPayload();
}

unint64_t sub_100B6C6B0()
{
  unint64_t result = qword_100EB3968;
  if (!qword_100EB3968)
  {
    type metadata accessor for AirQualityComponentViewModelFactory();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB3968);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ChangeMacAppState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B6C7C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChangeMacAppState()
{
  return &type metadata for ChangeMacAppState;
}

uint64_t sub_100B6C800(uint64_t a1, char a2)
{
  *(unsigned char *)(v2 + 36) = a2;
  *(void *)(v2 + 16) = a1;
  type metadata accessor for MainActor();
  *(void *)(v2 + 24) = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100B6C89C, v4, v3);
}

void *sub_100B6C89C()
{
  swift_release();
  if (qword_100E62870 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_1002102B0(v1, (uint64_t)qword_100F52058);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    int v4 = *(unsigned __int8 *)(v0 + 36);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 67109120;
    *(_DWORD *)(v0 + 32) = v4;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Performing change application state instruction: %{BOOL}d", v5, 8u);
    swift_slowDealloc();
  }

  sub_1001B1E64((void *)(*(void *)(v0 + 16) + 112), *(void *)(*(void *)(v0 + 16) + 136));
  sub_10017DF08(&qword_100EB3980);
  unint64_t result = (void *)dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    if (*(unsigned char *)(v0 + 36) == 1)
    {
      return (void *)_assertionFailure(_:_:file:line:flags:)();
    }
    else
    {
      [result deactivate];
      swift_unknownObjectRelease();
      uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
      return (void *)v7();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100B6CAC8(uint64_t a1)
{
  char v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1002205C0;
  return sub_100B6C800(a1, v4);
}

uint64_t sub_100B6CB64@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v8)
  {
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E647D8);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v6)
    {
      type metadata accessor for TimeMonitor();
      swift_allocObject();
      uint64_t v5 = sub_1003D78C8(v8, v9, v10, v11, v6, v7);
      uint64_t result = sub_1000A23E0(&qword_100EB3AC0, (void (*)(uint64_t))type metadata accessor for TimeMonitor);
      *a2 = v5;
      a2[1] = result;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for TemperatureChartHeaderStyle()
{
  return self;
}

uint64_t sub_100B6CCD0()
{
  return sub_100B6CE30((unsigned int *)&enum case for Font.TextStyle.largeTitle(_:), (void (*)(uint64_t))&static Font.Weight.medium.getter);
}

uint64_t sub_100B6CD10()
{
  return sub_100B6CF60((unsigned int *)&enum case for Font.TextStyle.largeTitle(_:), (void (*)(uint64_t))&static Font.Weight.medium.getter);
}

uint64_t sub_100B6CD50()
{
  return sub_100B6CFC4();
}

uint64_t sub_100B6CD74()
{
  return sub_100B6D020((unsigned int *)&enum case for Font.TextStyle.largeTitle(_:), (void (*)(uint64_t))&static Font.Weight.medium.getter);
}

double sub_100B6CDB4()
{
  return sub_100B6D0A8((double (*)(void))&static Font.Weight.medium.getter);
}

void sub_100B6CDEC(uint64_t a1)
{
}

double sub_100B6CE0C()
{
  if ((*(unsigned char *)(v0 + 24) & 1) == 0) {
    return *(double *)(v0 + 16);
  }
  *(void *)(v0 + 16) = 0x4052000000000000;
  *(unsigned char *)(v0 + 24) = 0;
  return 72.0;
}

uint64_t sub_100B6CE30(unsigned int *a1, void (*a2)(uint64_t))
{
  uint64_t v5 = type metadata accessor for Font.TextStyle();
  uint64_t v6 = *(void *)(v5 - 8);
  __n128 v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v2 + 32))
  {
    uint64_t v10 = *(void *)(v2 + 32);
  }
  else
  {
    uint64_t v11 = (*(uint64_t (**)(char *, void, uint64_t, __n128))(v6 + 104))(v9, *a1, v5, v7);
    a2(v11);
    uint64_t v10 = static Font.system(_:weight:)();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    *(void *)(v2 + 32) = v10;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v10;
}

uint64_t sub_100B6CF60(unsigned int *a1, void (*a2)(uint64_t))
{
  if (*(void *)(v2 + 48))
  {
    uint64_t v3 = *(void *)(v2 + 48);
  }
  else
  {
    uint64_t v3 = sub_100B6CE30(a1, a2);
    *(void *)(v2 + 48) = v3;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v3;
}

uint64_t sub_100B6CFC4()
{
  if (*(void *)(v0 + 56))
  {
    uint64_t v1 = *(void *)(v0 + 56);
  }
  else
  {
    uint64_t v1 = static Color.secondary.getter();
    *(void *)(v0 + 56) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_100B6D020(unsigned int *a1, void (*a2)(uint64_t))
{
  if (*(void *)(v2 + 80))
  {
    uint64_t v3 = *(void *)(v2 + 80);
  }
  else
  {
    uint64_t v3 = sub_100B6CE30(a1, a2);
    *(void *)(v2 + 80) = v3;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v3;
}

double sub_100B6D084()
{
  if ((*(unsigned char *)(v0 + 120) & 1) == 0) {
    return *(double *)(v0 + 112);
  }
  *(void *)(v0 + 112) = 0x4033000000000000;
  *(unsigned char *)(v0 + 120) = 0;
  return 19.0;
}

double sub_100B6D0A8(double (*a1)(void))
{
  if ((*(unsigned char *)(v1 + 152) & 1) == 0) {
    return *(double *)(v1 + 144);
  }
  double result = a1();
  *(double *)(v1 + 144) = result;
  *(unsigned char *)(v1 + 152) = 0;
  return result;
}

uint64_t type metadata accessor for ChanceOfRainChartHeaderStyle()
{
  return self;
}

double sub_100B6D100()
{
  *(void *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 24) = 1;
  double result = 0.0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(void *)(v0 + 64) = 0;
  *(unsigned char *)(v0 + 72) = 1;
  *(void *)(v0 + 88) = 0;
  *(void *)(v0 + 96) = 0;
  *(void *)(v0 + 80) = 0;
  *(unsigned char *)(v0 + 104) = 1;
  *(void *)(v0 + 112) = 0;
  *(unsigned char *)(v0 + 120) = 1;
  *(void *)(v0 + 128) = 0;
  *(unsigned char *)(v0 + 136) = 1;
  *(void *)(v0 + 144) = 0;
  *(_WORD *)(v0 + 152) = 1;
  return result;
}

double sub_100B6D148()
{
  return sub_100B6CE0C();
}

double sub_100B6D16C()
{
  return sub_100B6D084();
}

uint64_t sub_100B6D190()
{
  return sub_100B6CE30((unsigned int *)&enum case for Font.TextStyle.title2(_:), (void (*)(uint64_t))&static Font.Weight.semibold.getter);
}

uint64_t sub_100B6D1D0()
{
  return sub_100B6CF60((unsigned int *)&enum case for Font.TextStyle.title2(_:), (void (*)(uint64_t))&static Font.Weight.semibold.getter);
}

uint64_t sub_100B6D210()
{
  return sub_100B6D020((unsigned int *)&enum case for Font.TextStyle.title2(_:), (void (*)(uint64_t))&static Font.Weight.semibold.getter);
}

double sub_100B6D250()
{
  return sub_100B6D0A8((double (*)(void))&static Font.Weight.regular.getter);
}

void sub_100B6D288(uint64_t a1)
{
}

void sub_100B6D2A8(uint64_t a1, void (*a2)(void), uint64_t *a3)
{
  a2();
  uint64_t v4 = swift_allocObject();
  sub_100B6D100();
  *a3 = v4;
}

unsigned char *storeEnumTagSinglePayload for InteractiveMapPresentationContext(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *double result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B6D3D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InteractiveMapPresentationContext()
{
  return &type metadata for InteractiveMapPresentationContext;
}

unint64_t sub_100B6D40C()
{
  unint64_t result = qword_100EB3E10;
  if (!qword_100EB3E10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB3E10);
  }
  return result;
}

uint64_t sub_100B6D458(char a1)
{
  if (a1) {
    return 0xD000000000000012;
  }
  else {
    return 0x776569566E69616DLL;
  }
}

uint64_t sub_100B6D494()
{
  return sub_100B6D458(*v0);
}

uint64_t *sub_100B6D49C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for PrecipitationTotalPlatterViewModel();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_100B6D568(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PrecipitationTotalPlatterViewModel();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_100B6D5CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PrecipitationTotalPlatterViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100B6D648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PrecipitationTotalPlatterViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100B6D6C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PrecipitationTotalPlatterViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100B6D740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PrecipitationTotalPlatterViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100B6D7BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B6D7D0);
}

uint64_t sub_100B6D7D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PrecipitationTotalPlatterViewModel();

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_100B6D818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B6D82C);
}

uint64_t sub_100B6D82C()
{
  type metadata accessor for PrecipitationTotalPlatterViewModel();
  uint64_t v0 = sub_10016350C();

  return _s7Weather24LocationCompositionStateOwst_0(v0, v1, v2, v3);
}

uint64_t type metadata accessor for PrecipitationTotalPlatterView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB3E70);
}

uint64_t sub_100B6D88C()
{
  uint64_t result = type metadata accessor for PrecipitationTotalPlatterViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100B6D924()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100B6D940@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for PrecipitationTotalPlatterView(0);
  uint64_t v4 = sub_100164920(v3);
  uint64_t v6 = v5;
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v4);
  *(void *)a1 = static HorizontalAlignment.leading.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  sub_10017DF08(&qword_100EB3EA8);
  v12[1] = PrecipitationTotalPlatterViewModel.sections.getter();
  swift_getKeyPath();
  sub_100B6E504(v1, (uint64_t)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for PrecipitationTotalPlatterView);
  unint64_t v9 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = swift_allocObject();
  sub_100B6E4B0((uint64_t)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v10 + v9, (void (*)(void))type metadata accessor for PrecipitationTotalPlatterView);
  sub_10017DF08(&qword_100EB3EB0);
  sub_10017DF08(&qword_100EB3EB8);
  sub_1001246C8(&qword_100EB3EC0, &qword_100EB3EB0);
  sub_100B6E558(&qword_100EB3EC8, (void (*)(uint64_t))&type metadata accessor for PrecipitationTotalPlatterViewModel.SectionModel);
  sub_1001246C8(&qword_100EB3ED0, &qword_100EB3EB8);
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_100B6DB54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v84 = a2;
  uint64_t v88 = a3;
  uint64_t v4 = type metadata accessor for Divider();
  uint64_t v77 = *(void *)(v4 - 8);
  uint64_t v78 = v4;
  __chkstk_darwin(v4);
  long long v76 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_10017DF08(&qword_100E66250);
  __chkstk_darwin(v87);
  long long v75 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PrecipitationTotalPlatterViewModel.SectionModel();
  uint64_t v79 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v72 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_10017DF08(&qword_100EB3ED8) - 8;
  __chkstk_darwin(v82);
  uint64_t v81 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100EB3EE0);
  __chkstk_darwin(v11 - 8);
  uint64_t v73 = (uint64_t)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v80 = (char *)&v71 - v14;
  __chkstk_darwin(v15);
  uint64_t v89 = (uint64_t)&v71 - v16;
  uint64_t v17 = sub_10017DF08(&qword_100E66278);
  __chkstk_darwin(v17 - 8);
  uint64_t v86 = (uint64_t)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v85 = (uint64_t)&v71 - v20;
  uint64_t v21 = type metadata accessor for Font.TextStyle();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for PrecipitationTotalSection(0);
  uint64_t v26 = v25 - 8;
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v71 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v30 = __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v71 - v31;
  uint64_t v74 = v8;
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16);
  v33(v28, a1, v7, v30);
  *(void *)&v28[*(int *)(v26 + 28)] = 0x4010000000000000;
  uint64_t v34 = *(int *)(v26 + 32);
  (*(void (**)(char *, void, uint64_t))(v22 + 104))(v24, enum case for Font.TextStyle.caption(_:), v21);
  static Font.Weight.medium.getter();
  uint64_t v35 = static Font.system(_:weight:)();
  uint64_t v36 = v24;
  uint64_t v37 = v21;
  uint64_t v38 = (uint64_t)v81;
  uint64_t v39 = (uint64_t)v28;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v36, v37);
  uint64_t v40 = v89;
  *(void *)&v28[v34] = v35;
  uint64_t v41 = v79;
  uint64_t v42 = (uint64_t)v80;
  uint64_t v83 = v39;
  sub_100B6E4B0(v39, (uint64_t)v32, (void (*)(void))type metadata accessor for PrecipitationTotalSection);
  ((void (*)(uint64_t, uint64_t, uint64_t))v33)(v40, a1, v41);
  _s7Weather24LocationCompositionStateOwst_0(v40, 0, 1, v41);
  uint64_t v43 = PrecipitationTotalPlatterViewModel.sections.getter();
  sub_100304380(v43, v42);
  swift_bridgeObjectRelease();
  uint64_t v44 = v38 + *(int *)(v82 + 56);
  sub_10006DF38(v40, v38, &qword_100EB3EE0);
  sub_10006DF38(v42, v44, &qword_100EB3EE0);
  if (_s7Weather24LocationCompositionStateOwet_0(v38, 1, v41) != 1)
  {
    uint64_t v47 = v73;
    sub_10006DF38(v38, v73, &qword_100EB3EE0);
    if (_s7Weather24LocationCompositionStateOwet_0(v44, 1, v41) != 1)
    {
      uint64_t v48 = v74;
      uint64_t v49 = v72;
      (*(void (**)(char *, uint64_t, uint64_t))(v74 + 32))(v72, v44, v41);
      sub_100B6E558(&qword_100EB3EF0, (void (*)(uint64_t))&type metadata accessor for PrecipitationTotalPlatterViewModel.SectionModel);
      LODWORD(v82) = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v50 = *(void (**)(char *, uint64_t))(v48 + 8);
      v50(v49, v41);
      sub_100178110(v42, &qword_100EB3EE0);
      sub_100178110(v89, &qword_100EB3EE0);
      v50((char *)v47, v41);
      sub_100178110(v38, &qword_100EB3EE0);
      uint64_t v46 = v87;
      if (v82)
      {
        uint64_t v45 = 1;
        goto LABEL_9;
      }
LABEL_10:
      uint64_t v52 = v76;
      Divider.init()();
      char v53 = static Edge.Set.vertical.getter();
      type metadata accessor for PrecipitationTotalPlatterView(0);
      EdgeInsets.init(_all:)();
      uint64_t v55 = v54;
      uint64_t v57 = v56;
      uint64_t v59 = v58;
      uint64_t v61 = v60;
      uint64_t v63 = v77;
      uint64_t v62 = v78;
      uint64_t v64 = (uint64_t)v75;
      (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v75, v52, v78);
      uint64_t v65 = v64 + *(int *)(v46 + 36);
      *(unsigned char *)uint64_t v65 = v53;
      *(void *)(v65 + 8) = v55;
      *(void *)(v65 + 16) = v57;
      *(void *)(v65 + 24) = v59;
      *(void *)(v65 + 32) = v61;
      *(unsigned char *)(v65 + 40) = 0;
      (*(void (**)(char *, uint64_t))(v63 + 8))(v52, v62);
      uint64_t v51 = v85;
      sub_10024D364(v64, v85, &qword_100E66250);
      uint64_t v45 = 0;
      goto LABEL_11;
    }
    sub_100178110(v42, &qword_100EB3EE0);
    sub_100178110(v40, &qword_100EB3EE0);
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v47, v41);
LABEL_6:
    sub_100178110(v38, &qword_100EB3ED8);
    uint64_t v46 = v87;
    goto LABEL_10;
  }
  sub_100178110(v42, &qword_100EB3EE0);
  sub_100178110(v40, &qword_100EB3EE0);
  if (_s7Weather24LocationCompositionStateOwet_0(v44, 1, v41) != 1) {
    goto LABEL_6;
  }
  sub_100178110(v38, &qword_100EB3EE0);
  uint64_t v45 = 1;
  uint64_t v46 = v87;
LABEL_9:
  uint64_t v51 = v85;
LABEL_11:
  _s7Weather24LocationCompositionStateOwst_0(v51, v45, 1, v46);
  uint64_t v66 = v83;
  sub_100B6E504((uint64_t)v32, v83, (void (*)(void))type metadata accessor for PrecipitationTotalSection);
  uint64_t v67 = v86;
  sub_10006DF38(v51, v86, &qword_100E66278);
  uint64_t v68 = v88;
  sub_100B6E504(v66, v88, (void (*)(void))type metadata accessor for PrecipitationTotalSection);
  uint64_t v69 = sub_10017DF08(&qword_100EB3EE8);
  sub_10006DF38(v67, v68 + *(int *)(v69 + 48), &qword_100E66278);
  sub_100178110(v51, &qword_100E66278);
  sub_100B707B4((uint64_t)v32, (void (*)(void))type metadata accessor for PrecipitationTotalSection);
  sub_100178110(v67, &qword_100E66278);
  return sub_100B707B4(v66, (void (*)(void))type metadata accessor for PrecipitationTotalSection);
}

uint64_t sub_100B6E3BC()
{
  uint64_t v0 = type metadata accessor for PrecipitationTotalPlatterView(0);
  sub_100164920(v0);
  type metadata accessor for PrecipitationTotalPlatterViewModel();
  sub_100162E4C();
  sub_100162F0C();
  v1();

  return swift_deallocObject();
}

uint64_t sub_100B6E464(uint64_t a1)
{
  return sub_100B6FAF4(a1, type metadata accessor for PrecipitationTotalPlatterView, (uint64_t (*)(uint64_t, uint64_t))sub_100B6DB54);
}

uint64_t type metadata accessor for PrecipitationTotalSection(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB3F50);
}

uint64_t sub_100B6E4B0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t sub_100B6E504(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_100B6E558(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_100B6E5A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for PrecipitationTotalPlatterViewModel.SectionModel();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
  }
  swift_retain();
  return a1;
}

uint64_t sub_100B6E674(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PrecipitationTotalPlatterViewModel.SectionModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_release();
}

uint64_t sub_100B6E6E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PrecipitationTotalPlatterViewModel.SectionModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_retain();
  return a1;
}

uint64_t sub_100B6E770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PrecipitationTotalPlatterViewModel.SectionModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100B6E808(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PrecipitationTotalPlatterViewModel.SectionModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_100B6E88C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for PrecipitationTotalPlatterViewModel.SectionModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_release();
  return a1;
}

uint64_t sub_100B6E918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B6E92C);
}

uint64_t sub_100B6E92C()
{
  sub_100181A2C();
  type metadata accessor for PrecipitationTotalPlatterViewModel.SectionModel();
  sub_100162F30();
  if (*(_DWORD *)(v4 + 84) != v1) {
    return sub_10017B088(*(int *)(v2 + 24));
  }

  return _s7Weather24LocationCompositionStateOwet_0(v0, v1, v3);
}

uint64_t sub_100B6E99C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B6E9B0);
}

void sub_100B6E9B0()
{
  sub_100183C30();
  type metadata accessor for PrecipitationTotalPlatterViewModel.SectionModel();
  sub_100162F30();
  if (*(_DWORD *)(v4 + 84) == v3)
  {
    uint64_t v5 = sub_10016350C();
    _s7Weather24LocationCompositionStateOwst_0(v5, v6, v7, v8);
  }
  else
  {
    *(void *)(v1 + *(int *)(v2 + 24)) = (v0 - 1);
  }
}

uint64_t sub_100B6EA1C()
{
  uint64_t result = type metadata accessor for PrecipitationTotalPlatterViewModel.SectionModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100B6EAC4()
{
  return sub_1001246C8(&qword_100EB3F90, &qword_100EB3F98);
}

uint64_t sub_100B6EB00()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100B6EB1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v89 = a1;
  uint64_t v3 = type metadata accessor for PrecipitationTotalSection(0);
  uint64_t v87 = *(void *)(v3 - 8);
  uint64_t v4 = *(void *)(v87 + 64);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100EB3FA0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v92 = (char *)&v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v91 = (char *)&v71 - v10;
  uint64_t v81 = sub_10017DF08(&qword_100E65370);
  __chkstk_darwin(v81);
  uint64_t v84 = (uint64_t *)((char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_10017DF08(&qword_100E65378);
  __chkstk_darwin(v12 - 8);
  uint64_t v82 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_10017DF08(&qword_100EB3FA8);
  __chkstk_darwin(v80);
  uint64_t v15 = (char *)&v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_10017DF08(&qword_100EB3FB0);
  __chkstk_darwin(v83);
  uint64_t v85 = (uint64_t)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_10017DF08(&qword_100EB3FB8);
  __chkstk_darwin(v88);
  uint64_t v18 = (char *)&v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10017DF08(&qword_100EB3FC0);
  __chkstk_darwin(v19 - 8);
  uint64_t v90 = (uint64_t)&v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v71 - v22;
  uint64_t v24 = PrecipitationTotalPlatterViewModel.SectionModel.title.getter();
  if (v25)
  {
    uint64_t v93 = v24;
    uint64_t v94 = v25;
    sub_10014A85C();
    uint64_t v26 = Text.init<A>(_:)();
    long long v76 = v23;
    uint64_t v74 = v3;
    long long v75 = v18;
    uint64_t v27 = v26;
    uint64_t v29 = v28;
    uint64_t v78 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v77 = v4;
    char v31 = v30 & 1;
    uint64_t v72 = Text.font(_:)();
    uint64_t v86 = v1;
    uint64_t v33 = v32;
    uint64_t v73 = v34;
    uint64_t v79 = v7;
    char v36 = v35 & 1;
    sub_100191924(v27, v29, v31);
    swift_bridgeObjectRelease();
    uint64_t v37 = enum case for Text.Case.uppercase(_:);
    uint64_t v38 = type metadata accessor for Text.Case();
    uint64_t v39 = (uint64_t)v82;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 104))(v82, v37, v38);
    _s7Weather24LocationCompositionStateOwst_0(v39, 0, 1, v38);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v41 = v84;
    sub_10006DF38(v39, (uint64_t)v84 + *(int *)(v81 + 28), &qword_100E65378);
    *uint64_t v41 = KeyPath;
    sub_10006DF38((uint64_t)v41, (uint64_t)&v15[*(int *)(v80 + 36)], &qword_100E65370);
    uint64_t v42 = v72;
    *(void *)uint64_t v15 = v72;
    *((void *)v15 + 1) = v33;
    v15[16] = v36;
    *((void *)v15 + 3) = v73;
    sub_100190CC4(v42, v33, v36);
    swift_bridgeObjectRetain();
    sub_100178110((uint64_t)v41, &qword_100E65370);
    sub_100178110(v39, &qword_100E65378);
    char v43 = v36;
    uint64_t v7 = v79;
    sub_100191924(v42, v33, v43);
    swift_bridgeObjectRelease();
    uint64_t v44 = static Color.secondary.getter();
    uint64_t v45 = swift_getKeyPath();
    uint64_t v46 = v85;
    sub_10006DF38((uint64_t)v15, v85, &qword_100EB3FA8);
    uint64_t v47 = (uint64_t *)(v46 + *(int *)(v83 + 36));
    *uint64_t v47 = v45;
    v47[1] = v44;
    uint64_t v5 = v78;
    sub_100178110((uint64_t)v15, &qword_100EB3FA8);
    LOBYTE(v44) = static Edge.Set.bottom.getter();
    EdgeInsets.init(_all:)();
    uint64_t v49 = v48;
    uint64_t v51 = v50;
    uint64_t v53 = v52;
    uint64_t v55 = v54;
    uint64_t v56 = (uint64_t)v75;
    sub_10006DF38(v46, (uint64_t)v75, &qword_100EB3FB0);
    uint64_t v57 = v88;
    uint64_t v58 = v56 + *(int *)(v88 + 36);
    *(unsigned char *)uint64_t v58 = v44;
    uint64_t v23 = v76;
    *(void *)(v58 + 8) = v49;
    *(void *)(v58 + 16) = v51;
    *(void *)(v58 + 24) = v53;
    *(void *)(v58 + 32) = v55;
    *(unsigned char *)(v58 + 40) = 0;
    uint64_t v2 = v86;
    sub_100178110(v46, &qword_100EB3FB0);
    sub_10024D364(v56, (uint64_t)v23, &qword_100EB3FB8);
    uint64_t v59 = 0;
    uint64_t v60 = v57;
  }
  else
  {
    uint64_t v59 = 1;
    uint64_t v60 = v88;
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, v59, 1, v60);
  uint64_t v93 = PrecipitationTotalPlatterViewModel.SectionModel.rows.getter();
  swift_getKeyPath();
  sub_100B6E504(v2, (uint64_t)v5, (void (*)(void))type metadata accessor for PrecipitationTotalSection);
  unint64_t v61 = (*(unsigned __int8 *)(v87 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
  uint64_t v62 = swift_allocObject();
  sub_100B6E4B0((uint64_t)v5, v62 + v61, (void (*)(void))type metadata accessor for PrecipitationTotalSection);
  sub_10017DF08(&qword_100EB3FC8);
  sub_10017DF08(&qword_100EB3FD0);
  sub_1001246C8(&qword_100EB3FD8, &qword_100EB3FC8);
  sub_100B6E558(&qword_100EB3FE0, (void (*)(uint64_t))&type metadata accessor for PrecipitationTotalPlatterViewModel.RowModel);
  sub_100B6FB8C();
  uint64_t v63 = v91;
  ForEach<>.init(_:id:content:)();
  uint64_t v64 = v90;
  sub_10006DF38((uint64_t)v23, v90, &qword_100EB3FC0);
  uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  uint64_t v66 = v92;
  v65(v92, v63, v6);
  uint64_t v67 = v89;
  sub_10006DF38(v64, v89, &qword_100EB3FC0);
  uint64_t v68 = sub_10017DF08(&qword_100EB3FF8);
  v65((char *)(v67 + *(int *)(v68 + 48)), v66, v6);
  uint64_t v69 = *(void (**)(char *, uint64_t))(v7 + 8);
  v69(v63, v6);
  sub_100178110((uint64_t)v23, &qword_100EB3FC0);
  v69(v66, v6);
  return sub_100178110(v64, &qword_100EB3FC0);
}

uint64_t sub_100B6F390@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v58 = a3;
  uint64_t v59 = a2;
  uint64_t v4 = type metadata accessor for PrecipitationTotalPlatterViewModel.RowModel();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v48 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_10017DF08(&qword_100EB4000) - 8;
  __chkstk_darwin(v54);
  uint64_t v53 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100EB4008);
  __chkstk_darwin(v8 - 8);
  uint64_t v49 = (uint64_t)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v52 = (char *)&v48 - v11;
  __chkstk_darwin(v12);
  uint64_t v51 = (char *)&v48 - v13;
  uint64_t v14 = type metadata accessor for Font.TextStyle();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for PrecipitationTotalRow(0);
  uint64_t v19 = (int *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_10017DF08(&qword_100EB3FD0);
  __n128 v22 = __chkstk_darwin(v56);
  uint64_t v57 = (uint64_t)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = v5;
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16);
  v24(v21, a1, v4, v22);
  *(void *)&v21[v19[7]] = 0x4020000000000000;
  *(void *)&v21[v19[8]] = 0x4030000000000000;
  uint64_t v25 = v19[9];
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, enum case for Font.TextStyle.body(_:), v14);
  static Font.Weight.semibold.getter();
  uint64_t v26 = static Font.system(_:weight:)();
  uint64_t v27 = v17;
  uint64_t v28 = (uint64_t)v51;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v27, v14);
  *(void *)&v21[v25] = v26;
  uint64_t v29 = (uint64_t)v52;
  int v55 = static Edge.Set.bottom.getter();
  ((void (*)(uint64_t, uint64_t, uint64_t))v24)(v28, a1, v4);
  uint64_t v30 = (uint64_t)v53;
  _s7Weather24LocationCompositionStateOwst_0(v28, 0, 1, v4);
  uint64_t v31 = PrecipitationTotalPlatterViewModel.SectionModel.rows.getter();
  sub_100304398(v31, v29);
  swift_bridgeObjectRelease();
  uint64_t v32 = v30 + *(int *)(v54 + 56);
  sub_10006DF38(v28, v30, &qword_100EB4008);
  sub_10006DF38(v29, v32, &qword_100EB4008);
  if (_s7Weather24LocationCompositionStateOwet_0(v30, 1, v4) != 1)
  {
    uint64_t v33 = v49;
    sub_10006DF38(v30, v49, &qword_100EB4008);
    if (_s7Weather24LocationCompositionStateOwet_0(v32, 1, v4) != 1)
    {
      uint64_t v34 = v50;
      char v35 = v48;
      (*(void (**)(char *, uint64_t, uint64_t))(v50 + 32))(v48, v32, v4);
      sub_100B6E558(&qword_100EB4010, (void (*)(uint64_t))&type metadata accessor for PrecipitationTotalPlatterViewModel.RowModel);
      LODWORD(v54) = dispatch thunk of static Equatable.== infix(_:_:)();
      char v36 = *(void (**)(char *, uint64_t))(v34 + 8);
      v36(v35, v4);
      sub_100178110(v29, &qword_100EB4008);
      sub_100178110(v28, &qword_100EB4008);
      v36((char *)v33, v4);
      sub_100178110(v30, &qword_100EB4008);
      if (v54) {
        goto LABEL_9;
      }
LABEL_8:
      type metadata accessor for PrecipitationTotalSection(0);
      goto LABEL_9;
    }
    sub_100178110(v29, &qword_100EB4008);
    sub_100178110(v28, &qword_100EB4008);
    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v33, v4);
LABEL_6:
    sub_100178110(v30, &qword_100EB4000);
    goto LABEL_8;
  }
  sub_100178110(v29, &qword_100EB4008);
  sub_100178110(v28, &qword_100EB4008);
  if (_s7Weather24LocationCompositionStateOwet_0(v32, 1, v4) != 1) {
    goto LABEL_6;
  }
  sub_100178110(v30, &qword_100EB4008);
LABEL_9:
  EdgeInsets.init(_all:)();
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v45 = v57;
  sub_100B6E504((uint64_t)v21, v57, (void (*)(void))type metadata accessor for PrecipitationTotalRow);
  uint64_t v46 = v45 + *(int *)(v56 + 36);
  *(unsigned char *)uint64_t v46 = v55;
  *(void *)(v46 + 8) = v38;
  *(void *)(v46 + 16) = v40;
  *(void *)(v46 + 24) = v42;
  *(void *)(v46 + 32) = v44;
  *(unsigned char *)(v46 + 40) = 0;
  sub_100B707B4((uint64_t)v21, (void (*)(void))type metadata accessor for PrecipitationTotalRow);
  return sub_10024D364(v45, v58, &qword_100EB3FD0);
}

uint64_t sub_100B6F9E4()
{
  type metadata accessor for PrecipitationTotalSection(0);
  type metadata accessor for PrecipitationTotalPlatterViewModel.SectionModel();
  sub_100162E4C();
  sub_100162F0C();
  v0();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100B6FAC8(uint64_t a1)
{
  return sub_100B6FAF4(a1, type metadata accessor for PrecipitationTotalSection, (uint64_t (*)(uint64_t, uint64_t))sub_100B6F390);
}

uint64_t sub_100B6FAF4(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(a2(0) - 8);
  uint64_t v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return a3(a1, v6);
}

unint64_t sub_100B6FB8C()
{
  unint64_t result = qword_100EB3FE8;
  if (!qword_100EB3FE8)
  {
    sub_10018C6DC(&qword_100EB3FD0);
    sub_100B6E558(&qword_100EB3FF0, (void (*)(uint64_t))type metadata accessor for PrecipitationTotalRow);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB3FE8);
  }
  return result;
}

uint64_t type metadata accessor for PrecipitationTotalRow(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB4070);
}

uint64_t sub_100B6FC58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v22 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v2 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100EB40C0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100EB40C8);
  uint64_t v20 = *(void *)(v8 - 8);
  uint64_t v21 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10017DF08(&qword_100EB40D0);
  __chkstk_darwin(v23);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v7 = static VerticalAlignment.lastTextBaseline.getter();
  *((void *)v7 + 1) = 0;
  v7[16] = 0;
  uint64_t v13 = sub_10017DF08(&qword_100EB40D8);
  sub_100B6FF9C(v1, (uint64_t)&v7[*(int *)(v13 + 44)]);
  static AccessibilityChildBehavior.ignore.getter();
  uint64_t v14 = sub_1001246C8(&qword_100EB40E0, &qword_100EB40C0);
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v22);
  sub_100178110((uint64_t)v7, &qword_100EB40C0);
  uint64_t v27 = PrecipitationTotalPlatterViewModel.RowModel.accessibilityLabel.getter();
  uint64_t v28 = v15;
  uint64_t v25 = v5;
  uint64_t v26 = v14;
  swift_getOpaqueTypeConformance2();
  sub_10014A85C();
  uint64_t v16 = v21;
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v16);
  uint64_t v27 = PrecipitationTotalPlatterViewModel.RowModel.accessibilityAmount.getter();
  uint64_t v28 = v17;
  ModifiedContent<>.accessibilityValue<A>(_:)();
  swift_bridgeObjectRelease();
  return sub_100178110((uint64_t)v12, &qword_100EB40D0);
}

uint64_t sub_100B6FF9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v90 = a2;
  uint64_t v3 = type metadata accessor for Font.TextStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v79 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_10017DF08(&qword_100EB40E8);
  __chkstk_darwin(v85);
  uint64_t v84 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100EB40F0);
  __chkstk_darwin(v8 - 8);
  uint64_t v87 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v79 - v11;
  uint64_t v13 = type metadata accessor for PrecipitationTotalPlatterViewModel.ColorModel();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10017DF08(&qword_100EB40F8);
  __chkstk_darwin(v17 - 8);
  uint64_t v89 = (uint64_t)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v79 - v20;
  PrecipitationTotalPlatterViewModel.RowModel.colorModel.getter();
  int v22 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13);
  uint64_t v88 = v21;
  uint64_t v86 = v14;
  uint64_t v91 = v13;
  uint64_t v82 = v3;
  uint64_t v80 = v6;
  if (v22 == 1)
  {
    sub_100178110((uint64_t)v12, &qword_100EB40F0);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 1, 1, v85);
    uint64_t v23 = enum case for Font.TextStyle.body(_:);
    uint64_t v24 = a1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    uint64_t v83 = Image.init(systemName:)();
    LODWORD(v81) = enum case for Font.TextStyle.body(_:);
    (*(void (**)(char *))(v4 + 104))(v6);
    static Font.Weight.medium.getter();
    uint64_t v25 = a1;
    uint64_t v26 = static Font.system(_:weight:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v79 = v16;
    uint64_t v28 = KeyPath;
    uint64_t v29 = PrecipitationTotalPlatterViewModel.ColorModel.color.getter();
    uint64_t v30 = swift_getKeyPath();
    char v31 = static Edge.Set.trailing.getter();
    type metadata accessor for PrecipitationTotalRow(0);
    EdgeInsets.init(_all:)();
    uint64_t v92 = v83;
    uint64_t v93 = v28;
    uint64_t v94 = v26;
    uint64_t v95 = v30;
    uint64_t v96 = v29;
    char v97 = v31;
    uint64_t v98 = v32;
    uint64_t v99 = v33;
    uint64_t v100 = v34;
    uint64_t v101 = v35;
    char v102 = 0;
    sub_10017DF08(&qword_100EB4108);
    uint64_t v24 = v25;
    sub_100B70DC8();
    uint64_t v36 = (uint64_t)v84;
    View.accessibilityHidden(_:)();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v23 = v81;
    (*(void (**)(char *, uint64_t))(v86 + 8))(v79, v91);
    sub_10024D364(v36, (uint64_t)v21, &qword_100EB40E8);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v85);
  }
  uint64_t v92 = PrecipitationTotalPlatterViewModel.RowModel.label.getter();
  uint64_t v93 = v37;
  sub_10014A85C();
  uint64_t v38 = Text.init<A>(_:)();
  uint64_t v40 = v39;
  char v42 = v41 & 1;
  uint64_t v43 = type metadata accessor for PrecipitationTotalRow(0);
  uint64_t v84 = (char *)Text.font(_:)();
  uint64_t v83 = v44;
  LODWORD(v79) = v45;
  uint64_t v85 = v46;
  sub_100191924(v38, v40, v42);
  swift_bridgeObjectRelease();
  uint64_t v81 = *(void *)(v24 + *(int *)(v43 + 24));
  uint64_t v92 = PrecipitationTotalPlatterViewModel.RowModel.amount.getter();
  uint64_t v93 = v47;
  uint64_t v48 = Text.init<A>(_:)();
  uint64_t v50 = v49;
  LOBYTE(v43) = v51 & 1;
  uint64_t v52 = v80;
  uint64_t v53 = v82;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 104))(v80, v23, v82);
  static Font.Weight.medium.getter();
  static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v52, v53);
  uint64_t v54 = Text.font(_:)();
  uint64_t v56 = v55;
  char v58 = v57;
  swift_release();
  sub_100191924(v48, v50, v43);
  swift_bridgeObjectRelease();
  uint64_t v59 = (uint64_t)v87;
  PrecipitationTotalPlatterViewModel.RowModel.colorModel.getter();
  uint64_t v60 = v91;
  if (_s7Weather24LocationCompositionStateOwet_0(v59, 1, v91) == 1)
  {
    sub_100178110(v59, &qword_100EB40F0);
    static Color.secondary.getter();
  }
  else
  {
    PrecipitationTotalPlatterViewModel.ColorModel.color.getter();
    (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v59, v60);
  }
  char v61 = v58 & 1;
  char v62 = v79 & 1;
  uint64_t v63 = Text.foregroundColor(_:)();
  uint64_t v65 = v64;
  uint64_t v91 = v66;
  char v68 = v67 & 1;
  sub_100191924(v54, v56, v61);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v70 = (uint64_t)v88;
  uint64_t v69 = v89;
  sub_10006DF38((uint64_t)v88, v89, &qword_100EB40F8);
  LOBYTE(v92) = v62;
  uint64_t v71 = v90;
  sub_10006DF38(v69, v90, &qword_100EB40F8);
  uint64_t v72 = (int *)sub_10017DF08(&qword_100EB4100);
  uint64_t v73 = v71 + v72[12];
  uint64_t v74 = (uint64_t)v84;
  uint64_t v75 = v83;
  *(void *)uint64_t v73 = v84;
  *(void *)(v73 + 8) = v75;
  *(unsigned char *)(v73 + 16) = v62;
  *(void *)(v73 + 24) = v85;
  uint64_t v76 = v71 + v72[16];
  *(void *)uint64_t v76 = v81;
  *(unsigned char *)(v76 + 8) = 0;
  uint64_t v77 = v71 + v72[20];
  *(void *)uint64_t v77 = v63;
  *(void *)(v77 + 8) = v65;
  *(unsigned char *)(v77 + 16) = v68;
  *(void *)(v77 + 24) = v91;
  sub_100190CC4(v74, v75, v62);
  swift_bridgeObjectRetain();
  sub_100190CC4(v63, v65, v68);
  swift_bridgeObjectRetain();
  sub_100178110(v70, &qword_100EB40F8);
  sub_100191924(v63, v65, v68);
  swift_bridgeObjectRelease();
  sub_100191924(v74, v75, v92);
  swift_bridgeObjectRelease();
  return sub_100178110(v69, &qword_100EB40F8);
}

uint64_t sub_100B707B4(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t *sub_100B70808(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for PrecipitationTotalPlatterViewModel.RowModel();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  }
  swift_retain();
  return a1;
}

uint64_t sub_100B708E8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PrecipitationTotalPlatterViewModel.RowModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_release();
}

uint64_t sub_100B7095C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for PrecipitationTotalPlatterViewModel.RowModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_retain();
  return a1;
}

uint64_t sub_100B709F0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for PrecipitationTotalPlatterViewModel.RowModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100B70A94(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for PrecipitationTotalPlatterViewModel.RowModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100B70B24(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for PrecipitationTotalPlatterViewModel.RowModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_release();
  return a1;
}

uint64_t sub_100B70BBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B70BD0);
}

uint64_t sub_100B70BD0()
{
  sub_100181A2C();
  type metadata accessor for PrecipitationTotalPlatterViewModel.RowModel();
  sub_100162F30();
  if (*(_DWORD *)(v4 + 84) != v1) {
    return sub_10017B088(*(int *)(v2 + 28));
  }

  return _s7Weather24LocationCompositionStateOwet_0(v0, v1, v3);
}

uint64_t sub_100B70C40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B70C54);
}

void sub_100B70C54()
{
  sub_100183C30();
  type metadata accessor for PrecipitationTotalPlatterViewModel.RowModel();
  sub_100162F30();
  if (*(_DWORD *)(v4 + 84) == v3)
  {
    uint64_t v5 = sub_10016350C();
    _s7Weather24LocationCompositionStateOwst_0(v5, v6, v7, v8);
  }
  else
  {
    *(void *)(v1 + *(int *)(v2 + 28)) = (v0 - 1);
  }
}

uint64_t sub_100B70CC0()
{
  uint64_t result = type metadata accessor for PrecipitationTotalPlatterViewModel.RowModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100B70D68()
{
  return sub_1001246C8(&qword_100EB40B0, &qword_100EB40B8);
}

uint64_t sub_100B70DA4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100B70DC8()
{
  unint64_t result = qword_100EB4110;
  if (!qword_100EB4110)
  {
    sub_10018C6DC(&qword_100EB4108);
    sub_100282844();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB4110);
  }
  return result;
}

unint64_t sub_100B70E48()
{
  unint64_t result = qword_100EB4118[0];
  if (!qword_100EB4118[0])
  {
    sub_10018C6DC(&qword_100EB40D0);
    sub_10018C6DC(&qword_100EB40C0);
    sub_1001246C8(&qword_100EB40E0, &qword_100EB40C0);
    swift_getOpaqueTypeConformance2();
    sub_100B6E558((unint64_t *)&qword_100EAACA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100EB4118);
  }
  return result;
}

double sub_100B70F54@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = static Color.primary.getter();
  uint64_t v3 = static Color.secondary.getter();
  uint64_t v4 = static Color.primary.getter();
  static Font.title3.getter();
  static Font.Weight.medium.getter();
  uint64_t v5 = Font.weight(_:)();
  swift_release();
  static Font.title3.getter();
  static Font.Weight.medium.getter();
  uint64_t v6 = Font.weight(_:)();
  swift_release();
  static Font.title3.getter();
  static Font.Weight.medium.getter();
  uint64_t v7 = Font.weight(_:)();
  swift_release();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(_OWORD *)(a1 + 48) = xmmword_100C7DAF0;
  *(_OWORD *)(a1 + 64) = xmmword_100C7DB00;
  double result = 40.0;
  *(_OWORD *)(a1 + 80) = xmmword_100C7DB10;
  *(unsigned char *)(a1 + 96) = 0;
  return result;
}

double sub_100B71034@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Font.TextStyle();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v18 = static Color.primary.getter();
  uint64_t v17 = static Color.secondary.getter();
  uint64_t v16 = static Color.secondary.getter();
  uint64_t v4 = *(void (**)(uint64_t))(v3 + 104);
  uint64_t v5 = sub_1001884F8();
  v4(v5);
  static Font.Weight.bold.getter();
  uint64_t v15 = static Font.system(_:weight:)();
  uint64_t v6 = *(void (**)(uint64_t))(v3 + 8);
  uint64_t v7 = sub_10017DC80();
  v6(v7);
  uint64_t v8 = sub_1001884F8();
  v4(v8);
  static Font.Weight.regular.getter();
  static Font.system(_:weight:)();
  uint64_t v9 = sub_10017DC80();
  v6(v9);
  uint64_t v10 = Font.monospacedDigit()();
  swift_release();
  uint64_t v11 = sub_1001884F8();
  v4(v11);
  static Font.Weight.regular.getter();
  static Font.system(_:weight:)();
  uint64_t v12 = sub_10017DC80();
  v6(v12);
  uint64_t v13 = Font.monospacedDigit()();
  swift_release();
  *(void *)a1 = v18;
  *(void *)(a1 + 8) = v17;
  *(void *)(a1 + 16) = v16;
  *(void *)(a1 + 24) = v15;
  *(void *)(a1 + 32) = v10;
  *(void *)(a1 + 40) = v13;
  *(_OWORD *)(a1 + 48) = xmmword_100C7DB20;
  *(_OWORD *)(a1 + 64) = xmmword_100C7DB30;
  double result = 80.0;
  *(_OWORD *)(a1 + 80) = xmmword_100C7DB40;
  *(unsigned char *)(a1 + 96) = 1;
  return result;
}

void type metadata accessor for ComparisonYesterdayTemperatureCapsuleRowViewStyle()
{
}

void type metadata accessor for ComparisonMonthlyTemperatureCapsuleRowViewStyle()
{
}

void type metadata accessor for ComparisonMonthlyPrecipitationCapsuleRowViewStyle()
{
}

uint64_t sub_100B7122C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_100B71288(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100B71318(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  return a1;
}

uint64_t sub_100B71410(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  return a1;
}

void type metadata accessor for ComparisonSunriseSunsetCapsuleRowViewStyle()
{
}

uint64_t sub_100B714A4()
{
  return swift_retain();
}

uint64_t sub_100B714AC()
{
  return swift_retain();
}

uint64_t sub_100B714B4()
{
  return swift_retain();
}

uint64_t sub_100B714BC()
{
  return swift_retain();
}

uint64_t sub_100B714C4()
{
  return swift_retain();
}

uint64_t sub_100B714CC()
{
  return swift_retain();
}

double sub_100B714D4()
{
  return *(double *)(v0 + 56);
}

double sub_100B714DC()
{
  return *(double *)(v0 + 64);
}

double sub_100B714E4()
{
  return *(double *)(v0 + 72);
}

double sub_100B714EC()
{
  return *(double *)(v0 + 80);
}

double sub_100B714F4()
{
  return *(double *)(v0 + 88);
}

uint64_t sub_100B714FC()
{
  return *(unsigned __int8 *)(v0 + 96);
}

uint64_t sub_100B7150C(uint64_t a1, void (*a2)(void))
{
  static Font.body.getter();
  a2();
  uint64_t v3 = Font.weight(_:)();
  swift_release();
  return v3;
}

double sub_100B71554()
{
  return 8.0;
}

double sub_100B7155C()
{
  return 10.0;
}

double sub_100B71564()
{
  return 20.0;
}

double sub_100B7156C()
{
  return 40.0;
}

double sub_100B71578()
{
  return 130.0;
}

uint64_t sub_100B71584()
{
  return j___s7SwiftUI5ColorV7primaryACvgZ(*v0);
}

uint64_t sub_100B7158C()
{
  return j___s7SwiftUI5ColorV9secondaryACvgZ(*v0);
}

uint64_t sub_100B71594()
{
  return sub_100B7150C(*v0, (void (*)(void))&static Font.Weight.bold.getter);
}

uint64_t sub_100B715C4()
{
  return sub_100B7150C(*v0, (void (*)(void))&static Font.Weight.medium.getter);
}

double sub_100B715F4()
{
  return sub_100B71554();
}

double sub_100B715FC()
{
  return sub_100B7155C();
}

double sub_100B71604()
{
  return sub_100B71564();
}

double sub_100B7160C()
{
  return sub_100B7156C();
}

double sub_100B71614()
{
  return sub_100B71578();
}

uint64_t sub_100B7161C()
{
  return static LocationSearchEntityFromStringResolver.__derived_struct_equals(_:_:)();
}

uint64_t type metadata accessor for DetailViewWidthReader()
{
  return sub_100109098();
}

uint64_t sub_100B71698()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100B716DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = a3;
  v10[3] = a4;
  v10[4] = a1;
  v10[5] = a2;
  type metadata accessor for _ConditionalContent();
  uint64_t v16 = &protocol witness table for Color;
  uint64_t v17 = a4;
  swift_retain();
  swift_getWitnessTable();
  uint64_t v14 = GeometryReader.init(content:)();
  uint64_t v15 = v11;
  uint64_t v12 = type metadata accessor for GeometryReader();
  swift_getWitnessTable();
  sub_100121584((uint64_t)&v14, v12, (uint64_t)v18);
  swift_release();
  uint64_t v14 = v18[0];
  uint64_t v15 = v18[1];
  sub_100121584((uint64_t)&v14, v12, a5);
  return swift_release();
}

uint64_t sub_100B71834@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  int v22 = a2;
  uint64_t v23 = a5;
  uint64_t v7 = *(void *)(a3 - 8);
  __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v21 - v11;
  uint64_t v13 = type metadata accessor for _ConditionalContent();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v21 - v15;
  GeometryProxy.size.getter();
  if (v17 == 0.0)
  {
    uint64_t v24 = static Color.clear.getter();
    sub_1000E95C0();
    swift_release();
  }
  else
  {
    uint64_t v18 = GeometryProxy.size.getter();
    v22(v18);
    sub_100121584((uint64_t)v9, a3, (uint64_t)v12);
    uint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
    v19(v9, a3);
    sub_100121584((uint64_t)v12, a3, (uint64_t)v9);
    sub_100121F14();
    v19(v9, a3);
    v19(v12, a3);
  }
  uint64_t v25 = &protocol witness table for Color;
  uint64_t v26 = a4;
  swift_getWitnessTable();
  sub_100121584((uint64_t)v16, v13, v23);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_100B71ADC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100B716DC(*v2, v2[1], *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_100B71AEC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100B71B24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100B71834(a1, *(void (**)(uint64_t))(v2 + 32), *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_100B71B30()
{
  return swift_getWitnessTable();
}

uint64_t sub_100B71BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[5];
  uint64_t v6 = v2[6];
  sub_1001B1E64(v2 + 2, v5);
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(a1, a2, v5, v6);
  if (v8)
  {
    sub_100733914(v7, v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1001B1E64(v2 + 8, v2[11]);
    sub_1003ADAD8();
    int v9 = *(unsigned __int8 *)(*sub_1001B1E64(v2 + 8, v2[11]) + 16);
    if (v9 == 33) {
      return 0;
    }
    sub_1001B1E64(v2 + 13, v2[16]);
    sub_1008F08D0(v9);
  }
  return 1;
}

uint64_t sub_100B71CB4()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 64);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 104);
  return v0;
}

uint64_t sub_100B71CEC()
{
  sub_100B71CB4();

  return swift_deallocClassInstance();
}

void *sub_100B71D20(uint64_t a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E639E8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = _swiftEmptyArrayStorage;
  if (v7)
  {
    v14[1] = v1;
    uint64_t v15 = _swiftEmptyArrayStorage;
    sub_1007F3594();
    uint64_t v8 = v15;
    uint64_t v9 = *(void *)(type metadata accessor for SavedLocation() - 8);
    uint64_t v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    do
    {
      SavedLocation.location.getter();
      uint64_t v15 = v8;
      unint64_t v12 = v8[2];
      if (v12 >= v8[3] >> 1)
      {
        sub_1007F3594();
        uint64_t v8 = v15;
      }
      v8[2] = v12 + 1;
      sub_100360330((uint64_t)v6, (uint64_t)v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v12);
      v10 += v11;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t sub_100B71F8C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 56) + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations;
  uint64_t v3 = *(void *)(v2 + *(int *)(type metadata accessor for LocationsState() + 20));
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = *(void *)(type metadata accessor for SavedLocation() - 8);
    uint64_t v6 = v3 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v7 = *(void *)(v5 + 72);
    swift_bridgeObjectRetain();
    uint64_t v8 = v4 - 1;
    do
    {
      uint64_t v9 = v8;
      char v10 = static SavedLocation.== infix(_:_:)();
      if (v10) {
        break;
      }
      uint64_t v8 = v9 - 1;
      v6 += v7;
    }
    while (v9);
    char v11 = v10 ^ 1;
    swift_bridgeObjectRelease();
  }
  else
  {
    char v11 = 1;
  }
  return v11 & 1;
}

uint64_t sub_100B7208C()
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 24);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 64);

  return v0;
}

uint64_t sub_100B720C4()
{
  sub_100B7208C();

  return swift_deallocClassInstance();
}

uint64_t sub_100B720F8(uint64_t a1)
{
  return sub_100B71F8C(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_100B72118()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100B72150()
{
  uint64_t v0 = type metadata accessor for TimeState();
  sub_100164920(v0);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for Date();
  sub_100162E4C();
  sub_100162F0C();
  v1();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t *sub_100B7223C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
      {
        uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
      }
    }
    else
    {
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100B72398(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for Date();
    uint64_t result = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
    if (!result)
    {
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
      return v4(a1, v2);
    }
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_100B7244C(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v4))
    {
      uint64_t v5 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v4);
    }
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_100B72558(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_100B76DCC((uint64_t)a1, (void (*)(void))type metadata accessor for ListLocationRowPrimaryText);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v4))
      {
        uint64_t v5 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v4);
      }
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_100B72690(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
    {
      uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_100B727A4(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100B76DCC((uint64_t)a1, (void (*)(void))type metadata accessor for ListLocationRowPrimaryText);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
      {
        uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void *sub_100B728DC(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for LocationModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    char v10 = (char *)a1 + v8;
    char v11 = (char *)a2 + v8;
    *(void *)char v10 = *(void *)v11;
    v10[8] = v11[8];
    unint64_t v12 = (void *)((char *)a1 + v9);
    uint64_t v13 = (void *)((char *)a2 + v9);
    uint64_t v14 = v13[1];
    *unint64_t v12 = *v13;
    v12[1] = v14;
    uint64_t v15 = a3[7];
    uint64_t v16 = (void *)((char *)a1 + v15);
    double v17 = (void *)((char *)a2 + v15);
    type metadata accessor for ListLocationRowPrimaryText(0);
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v18 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
      {
        uint64_t v19 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
      }
    }
    else
    {
      uint64_t v21 = v17[1];
      void *v16 = *v17;
      v16[1] = v21;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v22 = a3[8];
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = *(void *)v24;
    uint64_t v26 = *((void *)v24 + 1);
    uint64_t v27 = *((void *)v24 + 2);
    uint64_t v28 = *((void *)v24 + 3);
    char v29 = v24[32];
    sub_100193004(*(void *)v24, v26, v27, v28, v29);
    *(void *)uint64_t v23 = v25;
    *((void *)v23 + 1) = v26;
    *((void *)v23 + 2) = v27;
    *((void *)v23 + 3) = v28;
    v23[32] = v29;
    uint64_t v30 = a3[10];
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    char v31 = (char *)a1 + v30;
    uint64_t v32 = (char *)a2 + v30;
    uint64_t v33 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v33))
    {
      uint64_t v34 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v33);
    }
    uint64_t v35 = a3[11];
    uint64_t v36 = (char *)a1 + v35;
    uint64_t v37 = (char *)a2 + v35;
    uint64_t v38 = type metadata accessor for TimeZone();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v38))
    {
      uint64_t v39 = sub_10017DF08(&qword_100E6D1D8);
      memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v38);
    }
    uint64_t v40 = a3[12];
    uint64_t v41 = a3[13];
    char v42 = (void *)((char *)a1 + v40);
    uint64_t v43 = (void *)((char *)a2 + v40);
    uint64_t v84 = v43[1];
    *char v42 = *v43;
    v42[1] = v84;
    uint64_t v44 = (void *)((char *)a1 + v41);
    int v45 = (void *)((char *)a2 + v41);
    uint64_t v85 = v45[1];
    *uint64_t v44 = *v45;
    v44[1] = v85;
    uint64_t v46 = a3[15];
    *((unsigned char *)a1 + a3[14]) = *((unsigned char *)a2 + a3[14]);
    uint64_t v47 = (void *)((char *)a1 + v46);
    uint64_t v48 = (void *)((char *)a2 + v46);
    uint64_t v49 = v48[1];
    *uint64_t v47 = *v48;
    v47[1] = v49;
    uint64_t v50 = a3[16];
    uint64_t v51 = a3[17];
    uint64_t v52 = (void *)((char *)a1 + v50);
    uint64_t v53 = (void *)((char *)a2 + v50);
    uint64_t v54 = v53[1];
    *uint64_t v52 = *v53;
    v52[1] = v54;
    uint64_t v55 = (void *)((char *)a1 + v51);
    uint64_t v56 = (void *)((char *)a2 + v51);
    uint64_t v57 = v56[1];
    *uint64_t v55 = *v56;
    v55[1] = v57;
    uint64_t v58 = a3[18];
    uint64_t v59 = a3[19];
    uint64_t v60 = (void *)((char *)a1 + v58);
    char v61 = (void *)((char *)a2 + v58);
    uint64_t v62 = v61[1];
    *uint64_t v60 = *v61;
    v60[1] = v62;
    uint64_t v63 = (void *)((char *)a1 + v59);
    uint64_t v64 = (void *)((char *)a2 + v59);
    uint64_t v65 = v64[1];
    *uint64_t v63 = *v64;
    v63[1] = v65;
    uint64_t v66 = a3[20];
    uint64_t v67 = a3[21];
    char v68 = (void *)((char *)a1 + v66);
    uint64_t v69 = (void *)((char *)a2 + v66);
    uint64_t v70 = *v69;
    uint64_t v71 = v69[1];
    LOBYTE(v69) = *((unsigned char *)a2 + v67);
    *char v68 = v70;
    v68[1] = v71;
    *((unsigned char *)a1 + v67) = (_BYTE)v69;
    uint64_t v72 = a3[22];
    uint64_t v82 = (char *)a1 + v72;
    uint64_t v83 = (char *)a2 + v72;
    uint64_t v73 = type metadata accessor for WeatherConditionBackgroundModel();
    uint64_t v81 = *(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v81(v82, v83, v73);
    uint64_t v74 = a3[24];
    *((unsigned char *)a1 + a3[23]) = *((unsigned char *)a2 + a3[23]);
    *((unsigned char *)a1 + v74) = *((unsigned char *)a2 + v74);
    uint64_t v75 = a3[25];
    uint64_t v76 = a3[26];
    uint64_t v77 = (void *)((char *)a1 + v75);
    uint64_t v78 = (void *)((char *)a2 + v75);
    uint64_t v79 = v78[1];
    *uint64_t v77 = *v78;
    v77[1] = v79;
    *(void *)((char *)a1 + v76) = *(void *)((char *)a2 + v76);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100B72DDC(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for LocationModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + a2[7];
  type metadata accessor for ListLocationRowPrimaryText(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for Date();
    if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = a1 + a2[8];
  sub_100191D78(*(void *)v7, *(void *)(v7 + 8), *(void *)(v7 + 16), *(void *)(v7 + 24), *(unsigned char *)(v7 + 32));
  uint64_t v8 = a1 + a2[10];
  uint64_t v9 = type metadata accessor for Date();
  if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  }
  uint64_t v10 = a1 + a2[11];
  uint64_t v11 = type metadata accessor for TimeZone();
  if (!_s7Weather24LocationCompositionStateOwet_0(v10, 1, v11)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = a1 + a2[22];
  uint64_t v13 = type metadata accessor for WeatherConditionBackgroundModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100B73074(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for LocationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = (void *)(a1 + v8);
  uint64_t v12 = (void *)(a2 + v8);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  uint64_t v14 = a3[7];
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (void *)(a2 + v14);
  type metadata accessor for ListLocationRowPrimaryText(0);
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
    {
      uint64_t v18 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
    }
  }
  else
  {
    uint64_t v19 = v16[1];
    void *v15 = *v16;
    v15[1] = v19;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v20 = a3[8];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  uint64_t v23 = *(void *)v22;
  uint64_t v24 = *(void *)(v22 + 8);
  uint64_t v25 = *(void *)(v22 + 16);
  uint64_t v26 = *(void *)(v22 + 24);
  char v27 = *(unsigned char *)(v22 + 32);
  sub_100193004(*(void *)v22, v24, v25, v26, v27);
  *(void *)uint64_t v21 = v23;
  *(void *)(v21 + 8) = v24;
  *(void *)(v21 + 16) = v25;
  *(void *)(v21 + 24) = v26;
  *(unsigned char *)(v21 + 32) = v27;
  uint64_t v28 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  char v29 = (void *)(a1 + v28);
  uint64_t v30 = (const void *)(a2 + v28);
  uint64_t v31 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31))
  {
    uint64_t v32 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
  }
  uint64_t v33 = a3[11];
  uint64_t v34 = (void *)(a1 + v33);
  uint64_t v35 = (const void *)(a2 + v33);
  uint64_t v36 = type metadata accessor for TimeZone();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v36))
  {
    uint64_t v37 = sub_10017DF08(&qword_100E6D1D8);
    memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, v36);
  }
  uint64_t v38 = a3[12];
  uint64_t v39 = a3[13];
  uint64_t v40 = (void *)(a1 + v38);
  uint64_t v41 = (void *)(a2 + v38);
  uint64_t v82 = v41[1];
  *uint64_t v40 = *v41;
  v40[1] = v82;
  char v42 = (void *)(a1 + v39);
  uint64_t v43 = (void *)(a2 + v39);
  uint64_t v83 = v43[1];
  *char v42 = *v43;
  v42[1] = v83;
  uint64_t v44 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  int v45 = (void *)(a1 + v44);
  uint64_t v46 = (void *)(a2 + v44);
  uint64_t v47 = v46[1];
  *int v45 = *v46;
  v45[1] = v47;
  uint64_t v48 = a3[16];
  uint64_t v49 = a3[17];
  uint64_t v50 = (void *)(a1 + v48);
  uint64_t v51 = (void *)(a2 + v48);
  uint64_t v52 = v51[1];
  *uint64_t v50 = *v51;
  v50[1] = v52;
  uint64_t v53 = (void *)(a1 + v49);
  uint64_t v54 = (void *)(a2 + v49);
  uint64_t v55 = v54[1];
  *uint64_t v53 = *v54;
  v53[1] = v55;
  uint64_t v56 = a3[18];
  uint64_t v57 = a3[19];
  uint64_t v58 = (void *)(a1 + v56);
  uint64_t v59 = (void *)(a2 + v56);
  uint64_t v60 = v59[1];
  *uint64_t v58 = *v59;
  v58[1] = v60;
  char v61 = (void *)(a1 + v57);
  uint64_t v62 = (void *)(a2 + v57);
  uint64_t v63 = v62[1];
  *char v61 = *v62;
  v61[1] = v63;
  uint64_t v64 = a3[20];
  uint64_t v65 = a3[21];
  uint64_t v66 = (void *)(a1 + v64);
  uint64_t v67 = (uint64_t *)(a2 + v64);
  uint64_t v68 = *v67;
  uint64_t v69 = v67[1];
  LOBYTE(v67) = *(unsigned char *)(a2 + v65);
  *uint64_t v66 = v68;
  v66[1] = v69;
  *(unsigned char *)(a1 + v65) = (_BYTE)v67;
  uint64_t v70 = a3[22];
  uint64_t v80 = a1 + v70;
  uint64_t v81 = a2 + v70;
  uint64_t v71 = type metadata accessor for WeatherConditionBackgroundModel();
  uint64_t v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v71 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v79(v80, v81, v71);
  uint64_t v72 = a3[24];
  *(unsigned char *)(a1 + a3[23]) = *(unsigned char *)(a2 + a3[23]);
  *(unsigned char *)(a1 + v72) = *(unsigned char *)(a2 + v72);
  uint64_t v73 = a3[25];
  uint64_t v74 = a3[26];
  uint64_t v75 = (void *)(a1 + v73);
  uint64_t v76 = (void *)(a2 + v73);
  uint64_t v77 = v76[1];
  *uint64_t v75 = *v76;
  v75[1] = v77;
  *(void *)(a1 + v74) = *(void *)(a2 + v74);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100B73524(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for LocationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  char v10 = *(unsigned char *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(unsigned char *)(v8 + 8) = v10;
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v14 = a3[7];
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    sub_100B76DCC(a1 + v14, (void (*)(void))type metadata accessor for ListLocationRowPrimaryText);
    type metadata accessor for ListLocationRowPrimaryText(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
      {
        uint64_t v18 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
      }
    }
    else
    {
      void *v15 = *v16;
      v15[1] = v16[1];
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = *(void *)v21;
  uint64_t v23 = *(void *)(v21 + 8);
  uint64_t v24 = *(void *)(v21 + 16);
  uint64_t v25 = *(void *)(v21 + 24);
  char v26 = *(unsigned char *)(v21 + 32);
  sub_100193004(*(void *)v21, v23, v24, v25, v26);
  uint64_t v27 = *(void *)v20;
  uint64_t v28 = *(void *)(v20 + 8);
  uint64_t v29 = *(void *)(v20 + 16);
  uint64_t v30 = *(void *)(v20 + 24);
  *(void *)uint64_t v20 = v22;
  *(void *)(v20 + 8) = v23;
  *(void *)(v20 + 16) = v24;
  *(void *)(v20 + 24) = v25;
  char v31 = *(unsigned char *)(v20 + 32);
  *(unsigned char *)(v20 + 32) = v26;
  sub_100191D78(v27, v28, v29, v30, v31);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v32 = a3[10];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (const void *)(a2 + v32);
  uint64_t v35 = type metadata accessor for Date();
  LODWORD(v25) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v35);
  int v36 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35);
  if (v25)
  {
    if (!v36)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v35);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  uint64_t v37 = *(void *)(v35 - 8);
  if (v36)
  {
    (*(void (**)(void *, uint64_t))(v37 + 8))(v33, v35);
LABEL_13:
    uint64_t v38 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v33, v34, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, const void *, uint64_t))(v37 + 24))(v33, v34, v35);
LABEL_14:
  uint64_t v39 = a3[11];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (const void *)(a2 + v39);
  uint64_t v42 = type metadata accessor for TimeZone();
  int v43 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v42);
  int v44 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v42);
  if (!v43)
  {
    uint64_t v45 = *(void *)(v42 - 8);
    if (!v44)
    {
      (*(void (**)(void *, const void *, uint64_t))(v45 + 24))(v40, v41, v42);
      goto LABEL_20;
    }
    (*(void (**)(void *, uint64_t))(v45 + 8))(v40, v42);
    goto LABEL_19;
  }
  if (v44)
  {
LABEL_19:
    uint64_t v46 = sub_10017DF08(&qword_100E6D1D8);
    memcpy(v40, v41, *(void *)(*(void *)(v46 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v42);
LABEL_20:
  uint64_t v47 = a3[12];
  uint64_t v48 = (void *)(a1 + v47);
  uint64_t v49 = (void *)(a2 + v47);
  *uint64_t v48 = *v49;
  v48[1] = v49[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v50 = a3[13];
  uint64_t v51 = (void *)(a1 + v50);
  uint64_t v52 = (void *)(a2 + v50);
  *uint64_t v51 = *v52;
  v51[1] = v52[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  uint64_t v53 = a3[15];
  uint64_t v54 = (void *)(a1 + v53);
  uint64_t v55 = (void *)(a2 + v53);
  *uint64_t v54 = *v55;
  v54[1] = v55[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v56 = a3[16];
  uint64_t v57 = (void *)(a1 + v56);
  uint64_t v58 = (void *)(a2 + v56);
  *uint64_t v57 = *v58;
  v57[1] = v58[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v59 = a3[17];
  uint64_t v60 = (void *)(a1 + v59);
  char v61 = (void *)(a2 + v59);
  *uint64_t v60 = *v61;
  v60[1] = v61[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v62 = a3[18];
  uint64_t v63 = (void *)(a1 + v62);
  uint64_t v64 = (void *)(a2 + v62);
  *uint64_t v63 = *v64;
  v63[1] = v64[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v65 = a3[19];
  uint64_t v66 = (void *)(a1 + v65);
  uint64_t v67 = (void *)(a2 + v65);
  *uint64_t v66 = *v67;
  v66[1] = v67[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v68 = a3[20];
  uint64_t v69 = (void *)(a1 + v68);
  uint64_t v70 = (void *)(a2 + v68);
  void *v69 = *v70;
  v69[1] = v70[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[21]) = *(unsigned char *)(a2 + a3[21]);
  uint64_t v71 = a3[22];
  uint64_t v72 = a1 + v71;
  uint64_t v73 = a2 + v71;
  uint64_t v74 = type metadata accessor for WeatherConditionBackgroundModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 24))(v72, v73, v74);
  *(unsigned char *)(a1 + a3[23]) = *(unsigned char *)(a2 + a3[23]);
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  uint64_t v75 = a3[25];
  uint64_t v76 = (void *)(a1 + v75);
  uint64_t v77 = (void *)(a2 + v75);
  *uint64_t v76 = *v77;
  v76[1] = v77[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[26]) = *(void *)(a2 + a3[26]);
  return a1;
}

uint64_t sub_100B73BC0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for LocationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  long long v11 = *(_OWORD *)(a2 + v8);
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  *(_OWORD *)(a1 + v8) = v11;
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = type metadata accessor for ListLocationRowPrimaryText(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v16))
    {
      uint64_t v17 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 32))(v13, v14, v16);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v16);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  uint64_t v18 = a3[8];
  uint64_t v19 = a3[9];
  uint64_t v20 = a1 + v18;
  uint64_t v21 = (long long *)(a2 + v18);
  long long v22 = *v21;
  long long v23 = v21[1];
  *(unsigned char *)(v20 + 32) = *((unsigned char *)v21 + 32);
  LOBYTE(v21) = *(unsigned char *)(a2 + v19);
  *(_OWORD *)uint64_t v20 = v22;
  *(_OWORD *)(v20 + 16) = v23;
  *(unsigned char *)(a1 + v19) = (_BYTE)v21;
  uint64_t v24 = a3[10];
  uint64_t v25 = (void *)(a1 + v24);
  char v26 = (const void *)(a2 + v24);
  uint64_t v27 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27))
  {
    uint64_t v28 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v27);
  }
  uint64_t v29 = a3[11];
  uint64_t v30 = (void *)(a1 + v29);
  char v31 = (const void *)(a2 + v29);
  uint64_t v32 = type metadata accessor for TimeZone();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v32))
  {
    uint64_t v33 = sub_10017DF08(&qword_100E6D1D8);
    memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v32);
  }
  uint64_t v34 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v34) = *(_OWORD *)(a2 + v34);
  uint64_t v35 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  *(_OWORD *)(a1 + v35) = *(_OWORD *)(a2 + v35);
  uint64_t v36 = a3[17];
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  *(_OWORD *)(a1 + v36) = *(_OWORD *)(a2 + v36);
  uint64_t v37 = a3[19];
  *(_OWORD *)(a1 + a3[18]) = *(_OWORD *)(a2 + a3[18]);
  *(_OWORD *)(a1 + v37) = *(_OWORD *)(a2 + v37);
  uint64_t v38 = a3[21];
  *(_OWORD *)(a1 + a3[20]) = *(_OWORD *)(a2 + a3[20]);
  *(unsigned char *)(a1 + v38) = *(unsigned char *)(a2 + v38);
  uint64_t v39 = a3[22];
  uint64_t v40 = a1 + v39;
  uint64_t v41 = a2 + v39;
  uint64_t v42 = type metadata accessor for WeatherConditionBackgroundModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  uint64_t v43 = a3[24];
  *(unsigned char *)(a1 + a3[23]) = *(unsigned char *)(a2 + a3[23]);
  *(unsigned char *)(a1 + v43) = *(unsigned char *)(a2 + v43);
  uint64_t v44 = a3[26];
  *(_OWORD *)(a1 + a3[25]) = *(_OWORD *)(a2 + a3[25]);
  *(void *)(a1 + v44) = *(void *)(a2 + v44);
  return a1;
}

uint64_t sub_100B73F9C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for LocationModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  long long v11 = (void *)(a1 + v8);
  uint64_t v12 = (uint64_t *)(a2 + v8);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  *long long v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v15 = a3[7];
    uint64_t v16 = (void *)(a1 + v15);
    uint64_t v17 = (const void *)(a2 + v15);
    sub_100B76DCC(a1 + v15, (void (*)(void))type metadata accessor for ListLocationRowPrimaryText);
    uint64_t v18 = type metadata accessor for ListLocationRowPrimaryText(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v19))
      {
        uint64_t v20 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v19 - 8) + 32))(v16, v17, v19);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v19);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
  }
  uint64_t v21 = a3[8];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  char v24 = *(unsigned char *)(v23 + 32);
  uint64_t v25 = *(void *)v22;
  uint64_t v26 = *(void *)(v22 + 8);
  uint64_t v27 = *(void *)(v22 + 16);
  uint64_t v28 = *(void *)(v22 + 24);
  long long v29 = *(_OWORD *)(v23 + 16);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  *(_OWORD *)(v22 + 16) = v29;
  char v30 = *(unsigned char *)(v22 + 32);
  *(unsigned char *)(v22 + 32) = v24;
  sub_100191D78(v25, v26, v27, v28, v30);
  uint64_t v31 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (const void *)(a2 + v31);
  uint64_t v34 = type metadata accessor for Date();
  int v35 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v34);
  int v36 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34);
  if (v35)
  {
    if (!v36)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  uint64_t v37 = *(void *)(v34 - 8);
  if (v36)
  {
    (*(void (**)(void *, uint64_t))(v37 + 8))(v32, v34);
LABEL_13:
    uint64_t v38 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v32, v33, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(void *, const void *, uint64_t))(v37 + 40))(v32, v33, v34);
LABEL_14:
  uint64_t v39 = a3[11];
  uint64_t v40 = (void *)(a1 + v39);
  uint64_t v41 = (const void *)(a2 + v39);
  uint64_t v42 = type metadata accessor for TimeZone();
  int v43 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v42);
  int v44 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v42);
  if (!v43)
  {
    uint64_t v45 = *(void *)(v42 - 8);
    if (!v44)
    {
      (*(void (**)(void *, const void *, uint64_t))(v45 + 40))(v40, v41, v42);
      goto LABEL_20;
    }
    (*(void (**)(void *, uint64_t))(v45 + 8))(v40, v42);
    goto LABEL_19;
  }
  if (v44)
  {
LABEL_19:
    uint64_t v46 = sub_10017DF08(&qword_100E6D1D8);
    memcpy(v40, v41, *(void *)(*(void *)(v46 - 8) + 64));
    goto LABEL_20;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v42);
LABEL_20:
  uint64_t v47 = a3[12];
  uint64_t v48 = (void *)(a1 + v47);
  uint64_t v49 = (uint64_t *)(a2 + v47);
  uint64_t v51 = *v49;
  uint64_t v50 = v49[1];
  *uint64_t v48 = v51;
  v48[1] = v50;
  swift_bridgeObjectRelease();
  uint64_t v52 = a3[13];
  uint64_t v53 = (void *)(a1 + v52);
  uint64_t v54 = (uint64_t *)(a2 + v52);
  uint64_t v56 = *v54;
  uint64_t v55 = v54[1];
  *uint64_t v53 = v56;
  v53[1] = v55;
  swift_bridgeObjectRelease();
  uint64_t v57 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  uint64_t v58 = (void *)(a1 + v57);
  uint64_t v59 = (uint64_t *)(a2 + v57);
  uint64_t v61 = *v59;
  uint64_t v60 = v59[1];
  *uint64_t v58 = v61;
  v58[1] = v60;
  swift_bridgeObjectRelease();
  uint64_t v62 = a3[16];
  uint64_t v63 = (void *)(a1 + v62);
  uint64_t v64 = (uint64_t *)(a2 + v62);
  uint64_t v66 = *v64;
  uint64_t v65 = v64[1];
  *uint64_t v63 = v66;
  v63[1] = v65;
  swift_bridgeObjectRelease();
  uint64_t v67 = a3[17];
  uint64_t v68 = (void *)(a1 + v67);
  uint64_t v69 = (uint64_t *)(a2 + v67);
  uint64_t v71 = *v69;
  uint64_t v70 = v69[1];
  *uint64_t v68 = v71;
  v68[1] = v70;
  swift_bridgeObjectRelease();
  uint64_t v72 = a3[18];
  uint64_t v73 = (void *)(a1 + v72);
  uint64_t v74 = (uint64_t *)(a2 + v72);
  uint64_t v76 = *v74;
  uint64_t v75 = v74[1];
  *uint64_t v73 = v76;
  v73[1] = v75;
  swift_bridgeObjectRelease();
  uint64_t v77 = a3[19];
  uint64_t v78 = (void *)(a1 + v77);
  uint64_t v79 = (uint64_t *)(a2 + v77);
  uint64_t v81 = *v79;
  uint64_t v80 = v79[1];
  *uint64_t v78 = v81;
  v78[1] = v80;
  swift_bridgeObjectRelease();
  uint64_t v82 = a3[20];
  uint64_t v83 = (void *)(a1 + v82);
  uint64_t v84 = (uint64_t *)(a2 + v82);
  uint64_t v86 = *v84;
  uint64_t v85 = v84[1];
  *uint64_t v83 = v86;
  v83[1] = v85;
  swift_bridgeObjectRelease();
  uint64_t v87 = a3[22];
  *(unsigned char *)(a1 + a3[21]) = *(unsigned char *)(a2 + a3[21]);
  uint64_t v88 = a1 + v87;
  uint64_t v89 = a2 + v87;
  uint64_t v90 = type metadata accessor for WeatherConditionBackgroundModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v90 - 8) + 40))(v88, v89, v90);
  uint64_t v91 = a3[24];
  *(unsigned char *)(a1 + a3[23]) = *(unsigned char *)(a2 + a3[23]);
  *(unsigned char *)(a1 + v91) = *(unsigned char *)(a2 + v91);
  uint64_t v92 = a3[25];
  uint64_t v93 = (void *)(a1 + v92);
  uint64_t v94 = (uint64_t *)(a2 + v92);
  uint64_t v96 = *v94;
  uint64_t v95 = v94[1];
  *uint64_t v93 = v96;
  v93[1] = v95;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[26]) = *(void *)(a2 + a3[26]);
  return a1;
}

uint64_t sub_100B7455C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B74570);
}

uint64_t sub_100B74570(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for LocationModel();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    if (a2 == 0x7FFFFFFF) {
      return sub_100185838(a1 + a3[6]);
    }
    type metadata accessor for ListLocationRowPrimaryText(0);
    sub_100162F30();
    if (*(_DWORD *)(v12 + 84) == a2)
    {
      uint64_t v8 = v11;
      uint64_t v13 = a3[7];
    }
    else
    {
      sub_10017DF08((uint64_t *)&unk_100E73CA0);
      sub_100162F30();
      if (*(_DWORD *)(v15 + 84) == a2)
      {
        uint64_t v8 = v14;
        uint64_t v13 = a3[10];
      }
      else
      {
        sub_10017DF08(&qword_100E6D1D8);
        sub_100162F30();
        if (*(_DWORD *)(v17 + 84) == a2)
        {
          uint64_t v8 = v16;
          uint64_t v13 = a3[11];
        }
        else
        {
          uint64_t v8 = type metadata accessor for WeatherConditionBackgroundModel();
          uint64_t v13 = a3[22];
        }
      }
    }
    uint64_t v9 = a1 + v13;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_100B74688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B7469C);
}

void sub_100B7469C()
{
  sub_100183C30();
  type metadata accessor for LocationModel();
  sub_100162F30();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v1;
  }
  else
  {
    if (v3 == 0x7FFFFFFF)
    {
      *(void *)(v1 + v2[6] + 8) = (v0 - 1);
      return;
    }
    type metadata accessor for ListLocationRowPrimaryText(0);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == v3)
    {
      uint64_t v6 = v8;
      uint64_t v10 = v2[7];
    }
    else
    {
      sub_10017DF08((uint64_t *)&unk_100E73CA0);
      sub_100162F30();
      if (*(_DWORD *)(v12 + 84) == v3)
      {
        uint64_t v6 = v11;
        uint64_t v10 = v2[10];
      }
      else
      {
        sub_10017DF08(&qword_100E6D1D8);
        sub_100162F30();
        if (*(_DWORD *)(v14 + 84) == v3)
        {
          uint64_t v6 = v13;
          uint64_t v10 = v2[11];
        }
        else
        {
          uint64_t v6 = type metadata accessor for WeatherConditionBackgroundModel();
          uint64_t v10 = v2[22];
        }
      }
    }
    uint64_t v7 = v1 + v10;
  }

  _s7Weather24LocationCompositionStateOwst_0(v7, v0, v0, v6);
}

void *sub_100B747B0()
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_10017DF08(&qword_100E6D1D8);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_100162E88();
  uint64_t v5 = (int *)type metadata accessor for ListLocationViewModel(0);
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  uint64_t v25 = &_swiftEmptySetSingleton;
  uint64_t v11 = (void *)(v1 + *(int *)(v10 + 48));
  BOOL v12 = *v11 == 0x6320796C74726170 && v11[1] == 0xED00007964756F6CLL;
  if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
    sub_1007ECE1C(&v22, 0);
  }
  uint64_t v13 = (void *)(v1 + v5[18]);
  if (*v13 == 11565 && v13[1] == 0xE200000000000000)
  {
    sub_100B77180(v1, v9, (void (*)(void))type metadata accessor for ListLocationViewModel);
LABEL_19:
    sub_100B76DCC(v9, (void (*)(void))type metadata accessor for ListLocationViewModel);
    goto LABEL_20;
  }
  char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
  sub_100B77180(v2, v9, (void (*)(void))type metadata accessor for ListLocationViewModel);
  if (v15) {
    goto LABEL_19;
  }
  uint64_t v16 = (void *)(v9 + v5[19]);
  if (*v16 == 11565 && v16[1] == 0xE200000000000000) {
    goto LABEL_19;
  }
  char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
  sub_100B76DCC(v9, (void (*)(void))type metadata accessor for ListLocationViewModel);
  if (v18) {
LABEL_20:
  }
    sub_1007ECE1C(&v23, 2u);
  sub_10006DF38(v2 + v5[11], v0, &qword_100E6D1D8);
  uint64_t v19 = type metadata accessor for TimeZone();
  int v20 = _s7Weather24LocationCompositionStateOwet_0(v0, 1, v19);
  sub_1001781AC(v0, &qword_100E6D1D8);
  if (v20 == 1) {
    sub_1007ECE1C(&v24, 1u);
  }
  return v25;
}

void sub_100B74A38()
{
  sub_100162EA0();
  uint64_t v2 = v1;
  uint64_t v77 = v3;
  uint64_t v73 = sub_10017DF08(&qword_100EB44C0);
  sub_100162E4C();
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v79 = v5;
  uint64_t v6 = sub_10017DF08(&qword_100E639D8);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_100162EF8();
  uint64_t v75 = v8;
  sub_1001626D4();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v70 - v10;
  uint64_t v78 = type metadata accessor for ListLocationViewModel.CacheEntry(0);
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_1001626E0();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = sub_10017DF08(&qword_100E6D1D8);
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v72 = v18;
  sub_1001626D4();
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)v70 - v20;
  __chkstk_darwin(v22);
  unsigned __int8 v24 = (char *)v70 - v23;
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)v70 - v26;
  uint64_t v28 = type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v30 = v29;
  __chkstk_darwin(v31);
  sub_100162EF8();
  uint64_t v71 = v32;
  sub_1001626D4();
  __chkstk_darwin(v33);
  sub_100188F80();
  sub_10006DF38(v2, (uint64_t)v27, &qword_100E6D1D8);
  sub_100163F10((uint64_t)v27);
  if (!v54)
  {
    uint64_t v74 = v30;
    v70[0] = *(void *)(v30 + 32);
    ((void (*)(uint64_t, char *, uint64_t))v70[0])(v0, v27, v28);
    uint64_t v34 = TimeZone.identifier.getter();
    uint64_t v76 = v35;
    if (qword_100E62B98 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v36 = qword_100EB4318;
    uint64_t v37 = v76;
    swift_bridgeObjectRetain();
    v70[1] = v34;
    sub_100A03A04(v34, v37, v36);
    swift_bridgeObjectRelease();
    sub_10012B520((uint64_t)v11, 1, v78);
    uint64_t v38 = v79;
    if (v54)
    {
      sub_1001781AC((uint64_t)v11, &qword_100E639D8);
      swift_endAccess();
      uint64_t v39 = v77;
    }
    else
    {
      sub_100B76D70((uint64_t)v11, v15, (void (*)(void))type metadata accessor for ListLocationViewModel.CacheEntry);
      swift_endAccess();
      uint64_t v39 = v77;
      char v40 = static Date.== infix(_:_:)();
      if (v40)
      {
        uint64_t v41 = sub_10018A1C0();
        v42(v41);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_100B76DCC(v15, (void (*)(void))type metadata accessor for ListLocationViewModel.CacheEntry);
        goto LABEL_29;
      }
      sub_100B76DCC(v15, (void (*)(void))type metadata accessor for ListLocationViewModel.CacheEntry);
    }
    uint64_t v43 = v74;
    if (qword_100E62BA0 != -1) {
      swift_once();
    }
    int v44 = (void *)qword_100F52460;
    id v45 = [(id)qword_100F52460 timeZone];
    if (v45)
    {
      uint64_t v46 = v45;
      static TimeZone._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v47 = 0;
    }
    else
    {
      uint64_t v47 = 1;
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, v47, 1, v28);
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v21, v0, v28);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v28);
    uint64_t v48 = v38 + *(int *)(v73 + 48);
    sub_10006DF38((uint64_t)v24, v79, &qword_100E6D1D8);
    sub_1001833A8();
    uint64_t v49 = v79;
    sub_10006DF38(v50, v51, v52);
    sub_100163F10(v49);
    if (v54)
    {
      sub_1001781AC((uint64_t)v21, &qword_100E6D1D8);
      uint64_t v49 = v79;
      sub_1001781AC((uint64_t)v24, &qword_100E6D1D8);
      sub_100163F10(v48);
      if (v54)
      {
        sub_1001781AC(v49, &qword_100E6D1D8);
LABEL_28:
        Class isa = Date._bridgeToObjectiveC()().super.isa;
        id v60 = [v44 stringFromDate:isa];

        uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v63 = v62;

        type metadata accessor for Date();
        sub_100162E4C();
        uint64_t v65 = v75;
        (*(void (**)(uint64_t, uint64_t))(v64 + 16))(v75, v39);
        uint64_t v66 = v78;
        uint64_t v67 = (uint64_t *)(v65 + *(int *)(v78 + 20));
        uint64_t *v67 = v61;
        v67[1] = v63;
        _s7Weather24LocationCompositionStateOwst_0(v65, 0, 1, v66);
        swift_beginAccess();
        swift_bridgeObjectRetain();
        sub_100245378();
        swift_endAccess();
        uint64_t v68 = sub_10018A1C0();
        v69(v68);
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t v53 = v72;
      sub_10006DF38(v49, v72, &qword_100E6D1D8);
      sub_100163F10(v48);
      if (!v54)
      {
        uint64_t v73 = (uint64_t)v44;
        uint64_t v55 = v71;
        ((void (*)(uint64_t, uint64_t, uint64_t))v70[0])(v71, v48, v28);
        sub_100B76D08(&qword_100EB44C8, (void (*)(uint64_t))&type metadata accessor for TimeZone);
        char v56 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v57 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
        v57(v55, v28);
        sub_1001781AC((uint64_t)v21, &qword_100E6D1D8);
        sub_1001781AC((uint64_t)v24, &qword_100E6D1D8);
        v57(v53, v28);
        int v44 = (void *)v73;
        sub_1001781AC(v49, &qword_100E6D1D8);
        uint64_t v39 = v77;
        if (v56) {
          goto LABEL_28;
        }
        goto LABEL_27;
      }
      sub_1001781AC((uint64_t)v21, &qword_100E6D1D8);
      sub_1001781AC((uint64_t)v24, &qword_100E6D1D8);
      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v53, v28);
      uint64_t v39 = v77;
    }
    sub_1001781AC(v49, &qword_100EB44C0);
LABEL_27:
    Class v58 = TimeZone._bridgeToObjectiveC()().super.isa;
    [v44 setTimeZone:v58];

    goto LABEL_28;
  }
  sub_1001781AC((uint64_t)v27, &qword_100E6D1D8);
LABEL_29:
  sub_100162694();
}

uint64_t sub_100B751A0@<X0>(uint64_t a1@<X1>, char a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, long long *a6@<X6>, char a7@<W7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,char a28,uint64_t a29,char a30,char a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  type metadata accessor for LocationModel();
  sub_100162E4C();
  sub_1001190D4();
  v40();
  uint64_t v41 = (int *)type metadata accessor for ListLocationViewModel(0);
  uint64_t v42 = a8 + v41[5];
  *(void *)uint64_t v42 = a1;
  *(unsigned char *)(v42 + 8) = a2 & 1;
  uint64_t v43 = (void *)(a8 + v41[6]);
  *uint64_t v43 = a3;
  v43[1] = a4;
  sub_100B76D70(a5, a8 + v41[7], (void (*)(void))type metadata accessor for ListLocationRowPrimaryText);
  sub_1000C81DC(a6, a8 + v41[8]);
  *(unsigned char *)(a8 + v41[9]) = a7;
  sub_1001278D0(a9, a8 + v41[10], (uint64_t *)&unk_100E73CA0);
  sub_1001278D0(a10, a8 + v41[11], &qword_100E6D1D8);
  int v44 = (void *)(a8 + v41[12]);
  *int v44 = a11;
  v44[1] = a12;
  id v45 = (void *)(a8 + v41[13]);
  *id v45 = a13;
  v45[1] = a14;
  *(unsigned char *)(a8 + v41[14]) = a15;
  uint64_t v46 = (void *)(a8 + v41[15]);
  *uint64_t v46 = a16;
  v46[1] = a17;
  uint64_t v47 = (void *)(a8 + v41[16]);
  *uint64_t v47 = a18;
  v47[1] = a19;
  uint64_t v48 = (void *)(a8 + v41[17]);
  *uint64_t v48 = a20;
  v48[1] = a21;
  uint64_t v49 = (void *)(a8 + v41[18]);
  *uint64_t v49 = a22;
  v49[1] = a23;
  uint64_t v50 = (void *)(a8 + v41[19]);
  *uint64_t v50 = a24;
  v50[1] = a25;
  uint64_t v51 = (void *)(a8 + v41[20]);
  *uint64_t v51 = a26;
  v51[1] = a27;
  *(unsigned char *)(a8 + v41[21]) = a28;
  type metadata accessor for WeatherConditionBackgroundModel();
  sub_100162E4C();
  sub_1001190D4();
  uint64_t result = v52();
  *(unsigned char *)(a8 + v41[23]) = a30;
  *(unsigned char *)(a8 + v41[24]) = a31;
  char v54 = (void *)(a8 + v41[25]);
  *char v54 = a32;
  v54[1] = a33;
  *(void *)(a8 + v41[26]) = a34;
  return result;
}

BOOL sub_100B754B0(void *a1, uint64_t *a2)
{
  return sub_100A63024(a1, *a2);
}

uint64_t sub_100B754B8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_10071DA3C(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_100B754EC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1006BF950(*a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_100B75520(uint64_t *a1)
{
  return sub_100A6302C(*a1);
}

uint64_t sub_100B75528(uint64_t *a1)
{
  return sub_100A63028(*a1);
}

uint64_t sub_100B75530(uint64_t *a1)
{
  return sub_10071DA34(*a1);
}

uint64_t sub_100B75538@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10071DA30(*a1, *v2);
  *a2 = result;
  return result;
}

BOOL sub_100B75568(uint64_t *a1)
{
  return sub_10071DA38(*a1, *v1);
}

uint64_t sub_100B75574(uint64_t *a1)
{
  return sub_10071DA40(*a1);
}

uint64_t sub_100B7557C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100719A44();
  *a1 = result;
  return result;
}

void sub_100B755A4()
{
  sub_100162EA0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v134 = v7;
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v132 = v9;
  uint64_t v135 = sub_10017DF08(&qword_100EB44C0);
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v138 = v11;
  uint64_t v12 = sub_10017DF08(&qword_100E6D1D8);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_100162EF8();
  uint64_t v133 = v14;
  sub_1001626D4();
  __chkstk_darwin(v15);
  uint64_t v136 = (uint64_t)&v127 - v16;
  sub_1001626D4();
  __chkstk_darwin(v17);
  uint64_t v137 = (uint64_t)&v127 - v18;
  uint64_t v19 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v139 = v20;
  __chkstk_darwin(v21);
  sub_1001626E0();
  uint64_t v24 = v23 - v22;
  uint64_t v25 = sub_10017DF08(&qword_100E64D60);
  sub_100162E4C();
  __chkstk_darwin(v26);
  sub_100162E88();
  uint64_t v27 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v28 = sub_100109308(v27);
  __chkstk_darwin(v28);
  sub_10016278C();
  uint64_t v31 = v29 - v30;
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v127 - v33;
  __chkstk_darwin(v35);
  sub_100188F80();
  if ((static LocationModel.== infix(_:_:)() & 1) == 0) {
    goto LABEL_36;
  }
  uint64_t v36 = type metadata accessor for ListLocationViewModel(0);
  uint64_t v37 = (int *)v36;
  uint64_t v38 = *(int *)(v36 + 20);
  uint64_t v39 = (void *)(v5 + v38);
  char v40 = *(unsigned char *)(v5 + v38 + 8);
  uint64_t v41 = (void *)(v3 + v38);
  int v42 = *(unsigned __int8 *)(v3 + v38 + 8);
  if (v40)
  {
    if (!v42) {
      goto LABEL_36;
    }
  }
  else
  {
    if (*v39 != *v41) {
      LOBYTE(v42) = 1;
    }
    if (v42) {
      goto LABEL_36;
    }
  }
  uint64_t v131 = v6;
  uint64_t v43 = *(int *)(v36 + 24);
  uint64_t v44 = *(void *)(v5 + v43);
  uint64_t v45 = *(void *)(v5 + v43 + 8);
  uint64_t v46 = (void *)(v3 + v43);
  BOOL v47 = v44 == *v46 && v45 == v46[1];
  if (!v47)
  {
    uint64_t v48 = v37;
    char v49 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t v37 = v48;
    if ((v49 & 1) == 0) {
      goto LABEL_36;
    }
  }
  uint64_t v50 = v37;
  sub_100B766C0();
  if ((v51 & 1) == 0) {
    goto LABEL_36;
  }
  sub_1000C81DC((long long *)(v5 + v50[8]), (uint64_t)v140);
  sub_1000C81DC((long long *)(v3 + v50[8]), (uint64_t)v141);
  if ((sub_100B76BD0(v140, v141) & 1) == 0 || *(unsigned __int8 *)(v5 + v50[9]) != *(unsigned __int8 *)(v3 + v50[9])) {
    goto LABEL_36;
  }
  uint64_t v52 = v50[10];
  uint64_t v129 = v5;
  sub_10006DF38(v5 + v52, v1, (uint64_t *)&unk_100E73CA0);
  uint64_t v128 = v50;
  uint64_t v53 = v50[10];
  uint64_t v130 = v3;
  sub_10006DF38(v3 + v53, (uint64_t)v34, (uint64_t *)&unk_100E73CA0);
  uint64_t v54 = v0 + *(int *)(v25 + 48);
  sub_10006DF38(v1, v0, (uint64_t *)&unk_100E73CA0);
  sub_10006DF38((uint64_t)v34, v54, (uint64_t *)&unk_100E73CA0);
  sub_10012B520(v0, 1, v19);
  if (v47)
  {
    sub_1001781AC((uint64_t)v34, (uint64_t *)&unk_100E73CA0);
    sub_1001781AC(v1, (uint64_t *)&unk_100E73CA0);
    sub_10012B520(v54, 1, v19);
    uint64_t v55 = v131;
    if (v47)
    {
      sub_1001781AC(v0, (uint64_t *)&unk_100E73CA0);
      goto LABEL_26;
    }
LABEL_24:
    uint64_t v57 = &qword_100E64D60;
    uint64_t v58 = v0;
LABEL_35:
    sub_1001781AC(v58, v57);
    goto LABEL_36;
  }
  sub_10006DF38(v0, v31, (uint64_t *)&unk_100E73CA0);
  sub_10012B520(v54, 1, v19);
  uint64_t v55 = v131;
  if (v56)
  {
    sub_1001781AC((uint64_t)v34, (uint64_t *)&unk_100E73CA0);
    sub_1001781AC(v1, (uint64_t *)&unk_100E73CA0);
    (*(void (**)(uint64_t, uint64_t))(v139 + 8))(v31, v19);
    goto LABEL_24;
  }
  uint64_t v59 = v139;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v139 + 32))(v24, v54, v19);
  sub_100B76D08((unint64_t *)&qword_100E63980, (void (*)(uint64_t))&type metadata accessor for Date);
  char v60 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v61 = *(void (**)(void))(v59 + 8);
  sub_10017F3C8();
  sub_100164F40();
  v61();
  sub_1001781AC((uint64_t)v34, (uint64_t *)&unk_100E73CA0);
  sub_1001781AC(v1, (uint64_t *)&unk_100E73CA0);
  sub_100164F40();
  v61();
  sub_1001781AC(v0, (uint64_t *)&unk_100E73CA0);
  if ((v60 & 1) == 0) {
    goto LABEL_36;
  }
LABEL_26:
  uint64_t v62 = v128;
  uint64_t v63 = v137;
  sub_10006DF38(v129 + v128[11], v137, &qword_100E6D1D8);
  uint64_t v64 = v136;
  sub_10006DF38(v130 + v62[11], v136, &qword_100E6D1D8);
  uint64_t v65 = v138;
  uint64_t v66 = v138 + *(int *)(v135 + 48);
  sub_10006DF38(v63, v138, &qword_100E6D1D8);
  sub_10006DF38(v64, v66, &qword_100E6D1D8);
  sub_10012B520(v65, 1, v55);
  if (v47)
  {
    sub_1001781AC(v64, &qword_100E6D1D8);
    sub_1001781AC(v63, &qword_100E6D1D8);
    sub_10012B520(v66, 1, v55);
    if (v47)
    {
      sub_1001781AC(v65, &qword_100E6D1D8);
      goto LABEL_38;
    }
    goto LABEL_34;
  }
  uint64_t v67 = v133;
  sub_10006DF38(v65, v133, &qword_100E6D1D8);
  sub_10012B520(v66, 1, v55);
  if (v68)
  {
    sub_1001781AC(v64, &qword_100E6D1D8);
    sub_1001781AC(v63, &qword_100E6D1D8);
    (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v67, v55);
LABEL_34:
    uint64_t v57 = &qword_100EB44C0;
    uint64_t v58 = v65;
    goto LABEL_35;
  }
  uint64_t v69 = v134;
  uint64_t v70 = v132;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v134 + 32))(v132, v66, v55);
  sub_100B76D08(&qword_100EB44C8, (void (*)(uint64_t))&type metadata accessor for TimeZone);
  char v71 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v72 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
  v72(v70, v55);
  sub_1001781AC(v64, &qword_100E6D1D8);
  sub_1001781AC(v63, &qword_100E6D1D8);
  v72(v67, v55);
  sub_1001781AC(v65, &qword_100E6D1D8);
  if ((v71 & 1) == 0) {
    goto LABEL_36;
  }
LABEL_38:
  sub_10017B0A0(v128[12]);
  BOOL v75 = v47 && v73 == v74;
  if (v75 || (_stringCompareWithSmolCheck(_:_:expecting:)(), sub_10017DC94(), (v76 & 1) != 0))
  {
    sub_1001842E8();
    if (v82)
    {
      if (!v77) {
        goto LABEL_36;
      }
      sub_10017FD94(v78);
      if (!v47 || v83 != v84)
      {
        _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_10017DC94();
        if ((v86 & 1) == 0) {
          goto LABEL_36;
        }
      }
    }
    else if (v77)
    {
      goto LABEL_36;
    }
    if (*(unsigned __int8 *)(v80 + *(int *)(v81 + 56)) != *(unsigned __int8 *)(v79 + *(int *)(v81 + 56))) {
      goto LABEL_36;
    }
    sub_1001842E8();
    if (v90)
    {
      if (!v87) {
        goto LABEL_36;
      }
      sub_10017FD94(v88);
      if (!v47 || v91 != v92)
      {
        _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_10017DC94();
        if ((v94 & 1) == 0) {
          goto LABEL_36;
        }
      }
    }
    else if (v87)
    {
      goto LABEL_36;
    }
    sub_10017B0A0(*(int *)(v89 + 64));
    BOOL v97 = v47 && v95 == v96;
    if (v97 || (_stringCompareWithSmolCheck(_:_:expecting:)(), sub_10017DC94(), (v98 & 1) != 0))
    {
      sub_1001842E8();
      if (v102)
      {
        if (!v99) {
          goto LABEL_36;
        }
        sub_10017FD94(v100);
        if (!v47 || v103 != v104)
        {
          _stringCompareWithSmolCheck(_:_:expecting:)();
          sub_10017DC94();
          if ((v106 & 1) == 0) {
            goto LABEL_36;
          }
        }
      }
      else if (v99)
      {
        goto LABEL_36;
      }
      sub_10017B0A0(*(int *)(v101 + 72));
      BOOL v110 = v47 && v107 == v108;
      if (v110 || (_stringCompareWithSmolCheck(_:_:expecting:)(), sub_10017DC94(), (v111 & 1) != 0))
      {
        sub_10017B0A0(*(int *)(v109 + 76));
        BOOL v115 = v47 && v112 == v113;
        if (v115 || (_stringCompareWithSmolCheck(_:_:expecting:)(), sub_10017DC94(), (v116 & 1) != 0))
        {
          sub_10017B0A0(*(int *)(v114 + 80));
          BOOL v122 = v47 && v117 == v118;
          if (v122 || (_stringCompareWithSmolCheck(_:_:expecting:)(), sub_10017DC94(), (v123 & 1) != 0))
          {
            if (*(unsigned __int8 *)(v120 + *(int *)(v121 + 84)) == *(unsigned __int8 *)(v119 + *(int *)(v121 + 84))
              && (static WeatherConditionBackgroundModel.== infix(_:_:)() & 1) != 0)
            {
              sub_100162CE8();
              if (v47)
              {
                sub_100162CE8();
                if (v47)
                {
                  sub_10017B0A0(v128[25]);
                  if (!v47 || v124 != v125)
                  {
                    _stringCompareWithSmolCheck(_:_:expecting:)();
                    sub_10017DC94();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
LABEL_36:
  sub_100162694();
}

uint64_t sub_100B75EE0()
{
  swift_bridgeObjectRetain();
  sub_10017F3C8();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100B75F3C()
{
  return sub_100B75EE0();
}

uint64_t sub_100B75F44@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = j___s11WeatherCore13LocationModelO2idSSvg();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_100B75F6C()
{
  sub_100162EA0();
  uint64_t v2 = v0;
  uint64_t v45 = v3;
  uint64_t v4 = sub_10017DF08(&qword_100E6D1D8);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_100109370();
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C6C080;
  *(void *)(inited + 32) = 0x6E65727275437369;
  *(void *)(inited + 40) = 0xE900000000000074;
  uint64_t v7 = (int *)type metadata accessor for ListLocationViewModel(0);
  *(unsigned char *)(inited + 48) = *(unsigned char *)(v0 + v7[9]);
  *(void *)(inited + 72) = &type metadata for Bool;
  *(void *)(inited + 80) = 1702125924;
  *(void *)(inited + 88) = 0xE400000000000000;
  *(void *)(inited + 96) = sub_100633140();
  *(void *)(inited + 104) = v8;
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 128) = 0x656E6F5A656D6974;
  *(void *)(inited + 136) = 0xE800000000000000;
  sub_10006DF38(v0 + v7[11], v1, &qword_100E6D1D8);
  uint64_t v9 = type metadata accessor for TimeZone();
  sub_10012B520(v1, 1, v9);
  if (v10)
  {
    sub_1001781AC(v1, &qword_100E6D1D8);
    uint64_t v11 = (uint64_t *)(inited + 144);
    *(void *)(inited + 168) = &type metadata for String;
  }
  else
  {
    uint64_t v12 = TimeZone.identifier.getter();
    unint64_t v14 = v13;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v1, v9);
    uint64_t v11 = (uint64_t *)(inited + 144);
    *(void *)(inited + 168) = &type metadata for String;
    if (v14)
    {
      *uint64_t v11 = v12;
      goto LABEL_7;
    }
  }
  *uint64_t v11 = 0;
  unint64_t v14 = 0xE000000000000000;
LABEL_7:
  *(void *)(inited + 152) = v14;
  *(void *)(inited + 176) = 0x7470697263736564;
  *(void *)(inited + 184) = 0xEB000000006E6F69;
  uint64_t v15 = (void *)(v2 + v7[12]);
  uint64_t v44 = v15[1];
  *(void *)(inited + 192) = *v15;
  *(void *)(inited + 200) = v44;
  *(void *)(inited + 216) = &type metadata for String;
  *(void *)(inited + 224) = 0x7470697263736564;
  *(void *)(inited + 232) = 0xEF6E6F63496E6F69;
  uint64_t v16 = (uint64_t *)(v2 + v7[13]);
  unint64_t v17 = v16[1];
  if (v17) {
    uint64_t v18 = *v16;
  }
  else {
    uint64_t v18 = 0;
  }
  if (v17) {
    unint64_t v19 = v17;
  }
  else {
    unint64_t v19 = 0xE000000000000000;
  }
  *(void *)(inited + 240) = v18;
  *(void *)(inited + 248) = v19;
  *(void *)(inited + 264) = &type metadata for String;
  *(void *)(inited + 272) = 0xD000000000000021;
  sub_100162AD8();
  *(void *)(inited + 280) = v22;
  uint64_t v23 = (uint64_t *)(v2 + v7[15]);
  uint64_t v24 = v23[1];
  if (v24) {
    uint64_t v25 = *v23;
  }
  else {
    uint64_t v25 = 0;
  }
  if (v24) {
    uint64_t v20 = v24;
  }
  *(void *)(inited + 288) = v25;
  *(void *)(inited + 296) = v20;
  *(void *)(inited + 312) = &type metadata for String;
  *(void *)(inited + 320) = v21 | 2;
  sub_100162AD8();
  *(void *)(inited + 328) = v26;
  uint64_t v27 = (void *)(v2 + v7[16]);
  uint64_t v28 = v27[1];
  *(void *)(inited + 336) = *v27;
  *(void *)(inited + 344) = v28;
  *(void *)(inited + 360) = &type metadata for String;
  *(void *)(inited + 368) = 0x706D655468676968;
  *(void *)(inited + 376) = 0xEF65727574617265;
  uint64_t v29 = (void *)(v2 + v7[18]);
  uint64_t v30 = v29[1];
  *(void *)(inited + 384) = *v29;
  *(void *)(inited + 392) = v30;
  *(void *)(inited + 408) = &type metadata for String;
  strcpy((char *)(inited + 416), "lowTemperature");
  *(unsigned char *)(inited + 431) = -18;
  uint64_t v31 = (void *)(v2 + v7[19]);
  uint64_t v32 = v31[1];
  *(void *)(inited + 432) = *v31;
  *(void *)(inited + 440) = v32;
  *(void *)(inited + 456) = &type metadata for String;
  *(void *)(inited + 464) = v33 + 20;
  sub_100162AD8();
  *(void *)(inited + 472) = v34;
  uint64_t v35 = (void *)(v2 + v7[20]);
  uint64_t v36 = v35[1];
  *(void *)(inited + 480) = *v35;
  *(void *)(inited + 488) = v36;
  *(void *)(inited + 504) = &type metadata for String;
  *(void *)(inited + 512) = v37;
  sub_100162AD8();
  *(void *)(inited + 520) = v38;
  LOBYTE(v38) = *(unsigned char *)(v2 + v7[21]);
  *(void *)(inited + 552) = &type metadata for Bool;
  *(unsigned char *)(inited + 528) = v38;
  *(void *)(inited + 560) = 0x6974726556657375;
  *(void *)(inited + 568) = 0xEF747865546C6163;
  LOBYTE(v38) = *(unsigned char *)(v2 + v7[24]);
  *(void *)(inited + 600) = &type metadata for Bool;
  *(unsigned char *)(inited + 576) = v38;
  *(void *)(inited + 608) = v39;
  sub_100162AD8();
  *(void *)(inited + 616) = v40;
  uint64_t v41 = *(void *)(v2 + v7[26]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v42 = sub_100B7641C(v41);
  *(void *)(inited + 648) = &type metadata for String;
  *(void *)(inited + 624) = v42;
  *(void *)(inited + 632) = v43;
  Dictionary.init(dictionaryLiteral:)();
  v45[3] = sub_10017DF08(&qword_100EB44D8);
  v45[4] = sub_1001246C8(&qword_100EB44E0, &qword_100EB44D8);
  sub_100170694(v45);
  ShortDescription.init(name:_:)();
  sub_100162694();
}

uint64_t sub_100B7641C(char a1)
{
  if (a1)
  {
    sub_10012B78C();
    uint64_t v2 = v5;
    unint64_t v6 = v5[2];
    if (v6 >= v5[3] >> 1)
    {
      sub_10012B78C();
      uint64_t v2 = v11;
    }
    v2[2] = v6 + 1;
    uint64_t v7 = &v2[2 * v6];
    v7[4] = 0x6964616568627573;
    v7[5] = 0xEA0000000000676ELL;
    if ((a1 & 2) != 0) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = _swiftEmptyArrayStorage;
    if ((a1 & 2) != 0)
    {
LABEL_3:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_10012B78C();
        uint64_t v2 = v9;
      }
      unint64_t v3 = v2[2];
      if (v3 >= v2[3] >> 1)
      {
        sub_10012B78C();
        uint64_t v2 = v10;
      }
      v2[2] = v3 + 1;
      uint64_t v4 = &v2[2 * v3];
      v4[4] = 0x74617265706D6574;
      v4[5] = 0xEB00000000657275;
      goto LABEL_12;
    }
  }
  if (!v2[2])
  {
    swift_bridgeObjectRelease();
    return sub_10017F3C8();
  }
LABEL_12:
  sub_10017DF08(&qword_100E91BC0);
  sub_1001246C8((unint64_t *)&qword_100E73CB0, &qword_100E91BC0);
  BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  return sub_10017F3C8();
}

uint64_t sub_100B765E4(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 48));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_100B7661C()
{
  return sub_100B7641C(*v0);
}

void sub_100B76624()
{
  qword_100EB4318 = (uint64_t)&_swiftEmptyDictionarySingleton;
}

id sub_100B76638()
{
  id result = sub_100B76658();
  qword_100F52460 = (uint64_t)result;
  return result;
}

id sub_100B76658()
{
  id v0 = [objc_allocWithZone((Class)NSDateFormatter) init];
  [v0 setDateStyle:0];
  [v0 setTimeStyle:1];

  return v0;
}

void sub_100B766C0()
{
  sub_100162EA0();
  uint64_t v52 = v3;
  uint64_t v53 = v4;
  type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v50 = v6;
  uint64_t v51 = v5;
  __chkstk_darwin(v5);
  sub_100109314();
  v49[1] = v7;
  uint64_t v8 = sub_10017DF08(&qword_100E64D60);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_100109370();
  uint64_t v10 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_10016278C();
  uint64_t v14 = v12 - v13;
  __chkstk_darwin(v15);
  sub_100188F80();
  type metadata accessor for ListLocationRowPrimaryText(0);
  sub_100162E4C();
  __chkstk_darwin(v16);
  sub_10016278C();
  uint64_t v19 = v17 - v18;
  __chkstk_darwin(v20);
  uint64_t v22 = (void *)((char *)v49 - v21);
  uint64_t v23 = sub_10017DF08(&qword_100EB44D0);
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_100162E88();
  uint64_t v26 = (uint64_t *)(v0 + *(int *)(v25 + 56));
  sub_100B77180(v52, v0, (void (*)(void))type metadata accessor for ListLocationRowPrimaryText);
  sub_1001833A8();
  sub_100B77180(v27, v28, v29);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v30 = v1;
    uint64_t v31 = v51;
    sub_100B77180(v0, v19, (void (*)(void))type metadata accessor for ListLocationRowPrimaryText);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v32 = v30;
      sub_1001278D0((uint64_t)v26, v30, (uint64_t *)&unk_100E73CA0);
      uint64_t v33 = v2 + *(int *)(v8 + 48);
      sub_1001278D0(v19, v2, (uint64_t *)&unk_100E73CA0);
      sub_1001833A8();
      sub_10006DF38(v34, v35, v36);
      uint64_t v37 = v31;
      sub_10012B520(v2, 1, v31);
      if (v44)
      {
        sub_1001781AC(v32, (uint64_t *)&unk_100E73CA0);
        sub_100163F10(v33);
        if (v44)
        {
          sub_1001781AC(v2, (uint64_t *)&unk_100E73CA0);
LABEL_22:
          sub_100B76DCC(v0, (void (*)(void))type metadata accessor for ListLocationRowPrimaryText);
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t v43 = v14;
        sub_10006DF38(v2, v14, (uint64_t *)&unk_100E73CA0);
        sub_100163F10(v33);
        uint64_t v45 = v50;
        if (!v44)
        {
          uint64_t v46 = sub_10017F3C8();
          v47(v46);
          sub_100B76D08((unint64_t *)&qword_100E63980, (void (*)(uint64_t))&type metadata accessor for Date);
          dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v48 = *(void (**)(void))(v45 + 8);
          sub_100164F40();
          v48();
          sub_1001781AC(v32, (uint64_t *)&unk_100E73CA0);
          sub_100164F40();
          v48();
          sub_1001781AC(v2, (uint64_t *)&unk_100E73CA0);
          goto LABEL_22;
        }
        sub_1001781AC(v32, (uint64_t *)&unk_100E73CA0);
        (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v43, v37);
      }
      sub_1001781AC(v2, &qword_100E64D60);
      goto LABEL_22;
    }
    sub_1001781AC(v19, (uint64_t *)&unk_100E73CA0);
  }
  else
  {
    sub_100B77180(v0, (uint64_t)v22, (void (*)(void))type metadata accessor for ListLocationRowPrimaryText);
    uint64_t v39 = *v22;
    uint64_t v38 = v22[1];
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v40 = *v26;
      uint64_t v41 = v26[1];
      if (v39 == v40 && v38 == v41)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_22;
    }
    swift_bridgeObjectRelease();
  }
  sub_1001781AC(v0, &qword_100EB44D0);
LABEL_23:
  sub_100162694();
}

uint64_t sub_100B76B84()
{
  return sub_100B76D08(&qword_100EB44B8, (void (*)(uint64_t))type metadata accessor for ListLocationViewModel);
}

uint64_t sub_100B76BD0(long long *a1, long long *a2)
{
  sub_1000C81DC(a1, (uint64_t)&v22);
  if (!v26)
  {
    uint64_t v12 = v22;
    uint64_t v13 = v23;
    sub_1000C81DC(a2, (uint64_t)&v19);
    if (!v21)
    {
      if (v12 != v19.i64[0] || v13 != v19.i64[1]) {
        goto LABEL_19;
      }
      goto LABEL_25;
    }
LABEL_24:
    char v10 = 0;
    return v10 & 1;
  }
  if (v26 != 1)
  {
    sub_1000C81DC(a2, (uint64_t)&v19);
    int8x16_t v15 = vorrq_s8(v19, v20);
    int8x8_t v16 = vorr_s8(*(int8x8_t *)v15.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v15, v15, 8uLL));
    if (v21 == 2 && *(void *)&v16 == 0) {
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  uint64_t v3 = v22;
  uint64_t v4 = v23;
  uint64_t v5 = v24;
  uint64_t v6 = v25;
  sub_1000C81DC(a2, (uint64_t)&v19);
  if (v21 != 1) {
    goto LABEL_24;
  }
  int8x16_t v7 = v20;
  BOOL v8 = v3 == v19.i64[0] && v4 == v19.i64[1];
  if (v8 || (char v9 = _stringCompareWithSmolCheck(_:_:expecting:)(), v10 = 0, (v9 & 1) != 0))
  {
    if (v5 != v7.i64[0] || v6 != v7.i64[1])
    {
      sub_1001833A8();
LABEL_19:
      char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
      return v10 & 1;
    }
LABEL_25:
    char v10 = 1;
  }
  return v10 & 1;
}

uint64_t sub_100B76D08(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ListLocationViewModel.CacheEntry(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB4540);
}

uint64_t sub_100B76D70(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  sub_1001190D4();
  v4();
  return a2;
}

uint64_t sub_100B76DCC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100B76E24(long long *a1, long long *a2)
{
  sub_1000C81DC(a1, (uint64_t)v4);
  sub_1000C81DC(a2, (uint64_t)v5);
  return sub_100B76BD0(v4, v5) & 1;
}

uint64_t sub_100B76E70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B76E84);
}

uint64_t sub_100B76E84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) != a2) {
    return sub_100185838(a1 + *(int *)(a3 + 20));
  }

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
}

uint64_t sub_100B76F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B76F18);
}

void sub_100B76F18()
{
  sub_100183C30();
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    _s7Weather24LocationCompositionStateOwst_0(v1, v0, v0, v4);
  }
  else
  {
    *(void *)(v1 + *(int *)(v2 + 20) + 8) = (v0 - 1);
  }
}

uint64_t sub_100B76F94()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for ListLocationViewModel.DimmedAttributes()
{
}

void type metadata accessor for ListLocationRowSecondaryText()
{
}

unint64_t sub_100B77044()
{
  unint64_t result = qword_100EB4578;
  if (!qword_100EB4578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB4578);
  }
  return result;
}

unint64_t sub_100B77094()
{
  unint64_t result = qword_100EB4580;
  if (!qword_100EB4580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB4580);
  }
  return result;
}

unint64_t sub_100B770E4()
{
  unint64_t result = qword_100EB4588;
  if (!qword_100EB4588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB4588);
  }
  return result;
}

unint64_t sub_100B77134()
{
  unint64_t result = qword_100EB4590;
  if (!qword_100EB4590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB4590);
  }
  return result;
}

uint64_t sub_100B77180(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

unsigned char *sub_100B771D4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100B772A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

void type metadata accessor for ListLocationViewModel.RedactedElement()
{
}

unint64_t sub_100B772D8()
{
  unint64_t result = qword_100EB4598;
  if (!qword_100EB4598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB4598);
  }
  return result;
}

uint64_t sub_100B77328()
{
  type metadata accessor for SettingReader();
  static SettingReader.shared.getter();
  static Settings.VFX.foregroundEffects.getter();
  DeviceSupportsForegroundEffects();
  char v0 = SettingReader.isEnabled(_:with:)();
  swift_release();
  uint64_t result = swift_release();
  byte_100EB45A9 = v0 & 1;
  return result;
}

uint64_t sub_100B77398()
{
  return dispatch thunk of WeatherConditionPlaybackCoordinatorType.play(_:)();
}

void sub_100B773E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for WeatherConditionBackgroundModifier(0);
  uint64_t v6 = v5 - 8;
  uint64_t v25 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v25 + 64);
  __chkstk_darwin(v5);
  uint64_t v8 = sub_10017DF08(&qword_100EAA930);
  __chkstk_darwin(v8 - 8);
  char v10 = (void (*)(char *, uint64_t, uint64_t))((char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_10017DF08(&qword_100EB3360);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100E64A60);
  __chkstk_darwin(v14 - 8);
  int8x8_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100EB4860);
  State.wrappedValue.getter();
  uint64_t v17 = a3 + *(int *)(v6 + 48);
  uint64_t v18 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v13, a2, v18);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v18);
  uint64_t v19 = type metadata accessor for TargetWindowSizeClass();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 1, 1, v19);
  sub_1000FDF14((uint64_t)v16, v17, (uint64_t)v13, v10, 0, 0);
  sub_100178110((uint64_t)v10, &qword_100EAA930);
  sub_100178110((uint64_t)v13, &qword_100EB3360);
  sub_100178110((uint64_t)v16, &qword_100E64A60);
  int8x16_t v20 = self;
  sub_1001C9BA4(a3, (uint64_t)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
  unint64_t v21 = (*(unsigned __int8 *)(v25 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  uint64_t v22 = swift_allocObject();
  sub_1001CA430((uint64_t)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v22 + v21);
  aBlock[4] = sub_100B80378;
  void aBlock[5] = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10010A4D4;
  aBlock[3] = &unk_100E399D0;
  uint64_t v23 = _Block_copy(aBlock);
  swift_release();
  [v20 setCompletionBlock:v23];
  _Block_release(v23);
}

uint64_t sub_100B7774C(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E64A60);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for WeatherConditionBackgroundModel();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (int *)type metadata accessor for WeatherConditionBackgroundModifier(0);
  char v10 = (uint64_t *)(a1 + v9[28]);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  v19[1] = v12;
  v19[2] = v11;
  sub_10017DF08(&qword_100EB4A88);
  State.wrappedValue.getter();
  sub_10001F54C((uint64_t)v4);
  swift_release();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v4, 1, v5) == 1) {
    return sub_100178110((uint64_t)v4, &qword_100E64A60);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  uint64_t v14 = a1 + v9[25];
  uint64_t v15 = *(void *)v14;
  char v16 = *(unsigned char *)(v14 + 8);
  sub_100195B7C(*(void *)v14, v16);
  sub_100149AE8();
  char v18 = v17;
  sub_10018F6D8(v15, v16);
  sub_100079A9C((uint64_t)v8, v18 & 1, *(unsigned __int8 *)(a1 + v9[16]));
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100B77948(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)type metadata accessor for WeatherConditionBackgroundModifier(0);
  uint64_t v4 = a2 + v3[10];
  uint64_t v5 = a2 + v3[25];
  uint64_t v6 = *(void *)v5;
  char v7 = *(unsigned char *)(v5 + 8);
  sub_100195B7C(*(void *)v5, v7);
  sub_100149AE8();
  char v9 = v8;
  sub_10018F6D8(v6, v7);
  return sub_100079A9C(v4, v9 & 1, *(unsigned __int8 *)(a2 + v3[16]));
}

uint64_t sub_100B779D8(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  int v4 = *a2;
  uint64_t v5 = type metadata accessor for WeatherConditionBackgroundModifier(0);
  uint64_t v6 = a3 + *(int *)(v5 + 40);
  uint64_t v7 = a3 + *(int *)(v5 + 100);
  uint64_t v8 = *(void *)v7;
  char v9 = *(unsigned char *)(v7 + 8);
  sub_100195B7C(*(void *)v7, v9);
  sub_100149AE8();
  char v11 = v10;
  sub_10018F6D8(v8, v9);
  return sub_100079A9C(v6, v11 & 1, v4);
}

uint64_t sub_100B77A64(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v30 = a3;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v33 = *(void *)(v4 - 8);
  uint64_t v34 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v31 = *(void *)(v7 - 8);
  uint64_t v32 = v7;
  __chkstk_darwin(v7);
  char v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for WeatherConditionBackgroundModifier(0);
  uint64_t v28 = *(void *)(v10 - 8);
  uint64_t v11 = *(void *)(v28 + 64);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = type metadata accessor for DispatchTime();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  char v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)&v27 - v18;
  int v20 = *a2;
  uint64_t v29 = v17;
  static DispatchTime.now()();
  if (v20 == 1)
  {
    + infix(_:_:)();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  }
  sub_1001AB3E0();
  unint64_t v21 = (void *)static OS_dispatch_queue.main.getter();
  sub_1001C9BA4(v30, (uint64_t)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
  unint64_t v22 = (*(unsigned __int8 *)(v28 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v23 = swift_allocObject();
  sub_1001CA430((uint64_t)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + v22);
  *(unsigned char *)(v23 + v22 + v11) = v20;
  aBlock[4] = sub_100B80314;
  void aBlock[5] = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10010A4D4;
  aBlock[3] = &unk_100E39980;
  uint64_t v24 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = &_swiftEmptyArrayStorage;
  sub_1001CA9B8((unint64_t *)&qword_100EA0200, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_10017DF08(&qword_100E75530);
  sub_1001246C8((unint64_t *)&qword_100EA0210, &qword_100E75530);
  uint64_t v25 = v34;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v24);

  (*(void (**)(char *, uint64_t))(v33 + 8))(v6, v25);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v32);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v19, v29);
}

uint64_t sub_100B77EE4(uint64_t a1, int a2)
{
  int v28 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100EAA930);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (void (*)(char *, uint64_t, uint64_t))&v27[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_10017DF08(&qword_100EB3360);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v27[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_10017DF08(&qword_100E64A60);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = &v27[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v14 = &v27[-v13];
  uint64_t v15 = type metadata accessor for WeatherConditionBackgroundModel();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = &v27[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = type metadata accessor for WeatherConditionBackgroundModifier(0);
  int v20 = (uint64_t *)(a1 + *(int *)(v19 + 112));
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  uint64_t v29 = v22;
  uint64_t v30 = v21;
  sub_10017DF08(&qword_100EB4A88);
  State.wrappedValue.getter();
  sub_10001F54C((uint64_t)v14);
  swift_release();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15) == 1) {
    return sub_100178110((uint64_t)v14, &qword_100E64A60);
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v16 + 32))(v18, v14, v15);
  char v24 = v28;
  if ((v28 & 1) == 0)
  {
    sub_10017DF08(&qword_100EB4860);
    State.wrappedValue.getter();
    uint64_t v25 = type metadata accessor for DynamicTypeSize();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 1, 1, v25);
    uint64_t v26 = type metadata accessor for TargetWindowSizeClass();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 1, 1, v26);
    sub_1000FDF14((uint64_t)v12, (uint64_t)v18, (uint64_t)v8, v5, 0, 0);
    sub_100178110((uint64_t)v5, &qword_100EAA930);
    sub_100178110((uint64_t)v8, &qword_100EB3360);
    sub_100178110((uint64_t)v12, &qword_100E64A60);
  }
  sub_100079A9C((uint64_t)v18, v24 & 1, *(unsigned __int8 *)(a1 + *(int *)(v19 + 64)));
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v16 + 8))(v18, v15);
}

void sub_100B78210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v44 = a2;
  uint64_t v4 = sub_10017DF08(&qword_100EAA930);
  uint64_t v40 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v40 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v43 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for WeatherConditionBackgroundModifier(0);
  uint64_t v39 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v39 + 64);
  __chkstk_darwin(v6);
  uint64_t v42 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v41 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for BackgroundAnimationKind();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  WeatherConditionBackgroundModel.animationKind.getter();
  if ((*(unsigned int (**)(char *, uint64_t))(v12 + 88))(v14, v11) == enum case for BackgroundAnimationKind.vfx(_:))
  {
    uint64_t v15 = v41;
    uint64_t v16 = (uint64_t)v42;
    uint64_t v37 = v7;
    uint64_t v38 = v5;
    uint64_t v17 = a3;
    uint64_t v18 = (uint64_t)v43;
    uint64_t v19 = type metadata accessor for TargetWindowSizeClass();
    uint64_t v20 = v44;
    if (_s7Weather24LocationCompositionStateOwet_0(v44, 1, v19) != 1)
    {
      Date.init()();
      Date.timeIntervalSince1970.getter();
      uint64_t v22 = v21;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v8);
      uint64_t v23 = a3 + *(int *)(v6 + 92);
      uint64_t v25 = *(void *)(v23 + 8);
      aBlock = *(void ***)v23;
      char v24 = aBlock;
      uint64_t v46 = v25;
      uint64_t v51 = v22;
      sub_10017DF08(&qword_100EB4AB8);
      State.wrappedValue.setter();
      aBlock = v24;
      uint64_t v46 = v25;
      State.wrappedValue.getter();
      uint64_t v26 = v51;
      uint64_t v27 = self;
      uint64_t v28 = v17;
      uint64_t v29 = v16;
      sub_1001C9BA4(v28, v16, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
      uint64_t v30 = v18;
      sub_10006DF38(v20, v18, &qword_100EAA930);
      unint64_t v31 = (*(unsigned __int8 *)(v39 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
      unint64_t v32 = (v37 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v33 = (*(unsigned __int8 *)(v40 + 80) + v32 + 8) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
      uint64_t v34 = swift_allocObject();
      sub_1001CA430(v29, v34 + v31);
      *(void *)(v34 + v32) = v26;
      sub_10020E72C(v30, v34 + v33, &qword_100EAA930);
      char v49 = sub_100B7FF94;
      uint64_t v50 = v34;
      aBlock = _NSConcreteStackBlock;
      uint64_t v46 = 1107296256;
      BOOL v47 = sub_10010A4D4;
      uint64_t v48 = &unk_100E39930;
      uint64_t v35 = _Block_copy(&aBlock);
      swift_release();
      [v27 setCompletionBlock:v35];
      _Block_release(v35);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_100B786AC(uint64_t a1, void (*a2)(char *, uint64_t, uint64_t), double a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100EB3360);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E64A60);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v38 - v13;
  uint64_t v15 = type metadata accessor for WeatherConditionBackgroundModel();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (int *)type metadata accessor for WeatherConditionBackgroundModifier(0);
  uint64_t v20 = (uint64_t *)(a1 + v19[28]);
  uint64_t v22 = *v20;
  uint64_t v21 = v20[1];
  uint64_t v39 = v22;
  uint64_t v40 = v21;
  sub_10017DF08(&qword_100EB4A88);
  State.wrappedValue.getter();
  sub_10001F54C((uint64_t)v14);
  swift_release();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15) == 1) {
    return sub_100178110((uint64_t)v14, &qword_100E64A60);
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v14, v15);
  char v24 = (uint64_t *)(a1 + v19[21]);
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  uint64_t v39 = v26;
  uint64_t v40 = v25;
  sub_10017DF08(&qword_100EB4A78);
  State.wrappedValue.getter();
  int v27 = *(unsigned __int8 *)(*(void *)&v41 + 16);
  swift_release();
  if (v27 == 1)
  {
    uint64_t v29 = (uint64_t *)(a1 + v19[23]);
    uint64_t v30 = *v29;
    uint64_t v31 = v29[1];
    uint64_t v39 = v30;
    uint64_t v40 = v31;
    sub_10017DF08(&qword_100EB4AB8);
    State.wrappedValue.getter();
    v28.n128_f64[0] = v41;
    if (v41 == a3)
    {
      sub_10017DF08(&qword_100EB4860);
      State.wrappedValue.getter();
      uint64_t v32 = type metadata accessor for DynamicTypeSize();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 1, 1, v32);
      sub_1000FDF14((uint64_t)v12, (uint64_t)v18, (uint64_t)v8, a2, 0, 0);
      sub_100178110((uint64_t)v8, &qword_100EB3360);
      sub_100178110((uint64_t)v12, &qword_100E64A60);
      uint64_t v33 = a1 + v19[25];
      uint64_t v34 = *(void *)v33;
      char v35 = *(unsigned char *)(v33 + 8);
      sub_100195B7C(*(void *)v33, v35);
      sub_100149AE8();
      char v37 = v36;
      sub_10018F6D8(v34, v35);
      sub_100079A9C((uint64_t)v18, v37 & 1, *(unsigned __int8 *)(a1 + v19[16]));
    }
  }
  return (*(uint64_t (**)(char *, uint64_t, __n128))(v16 + 8))(v18, v15, v28);
}

void sub_100B78A18(uint64_t a1)
{
  uint64_t v28 = type metadata accessor for VFXEffectViewID();
  uint64_t v2 = *(void *)(v28 - 8);
  uint64_t v3 = __chkstk_darwin(v28);
  int v27 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v23 - v5;
  uint64_t v26 = type metadata accessor for WeatherConditionBackgroundOptions();
  uint64_t v7 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for BackgroundAnimationData();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for WeatherConditionBackgroundModifier(0);
  uint64_t v15 = *(int *)(v14 + 84);
  uint64_t v25 = a1;
  uint64_t v16 = (uint64_t *)(a1 + v15);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  uint64_t v29 = v18;
  uint64_t v30 = v17;
  sub_10017DF08(&qword_100EB4A78);
  State.wrappedValue.getter();
  *(unsigned char *)(v31 + 16) = 0;
  swift_release();
  uint64_t v19 = a1 + *(int *)(v14 + 40);
  uint64_t v23 = v14;
  uint64_t v24 = v19;
  WeatherConditionBackgroundModel.animationData.getter();
  BackgroundAnimationData.options.getter();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  WeatherConditionBackgroundOptions.effectViewID.getter();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v26);
  uint64_t v21 = v27;
  uint64_t v20 = v28;
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v27, enum case for VFXEffectViewID.locationViewer(_:), v28);
  LOBYTE(v13) = static VFXEffectViewID.== infix(_:_:)();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v2 + 8);
  v22(v21, v20);
  v22(v6, v20);
  if ((v13 & 1) == 0) {
    goto LABEL_5;
  }
  if (qword_100E62BA8 != -1) {
    swift_once();
  }
  Namespace.wrappedValue.getter();
  swift_beginAccess();
  sub_100A51E50();
  swift_endAccess();
  if (!*((void *)off_100EB45A0 + 2)) {
LABEL_5:
  }
    sub_100B78D84(v24);
}

void sub_100B78D84(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for VFXEffectViewID();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v49 = v2;
  uint64_t v50 = v3;
  __chkstk_darwin(v2);
  uint64_t v48 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for WeatherConditionBackgroundOptions();
  BOOL v47 = *(void (**)(char *, uint64_t))(v51 - 8);
  uint64_t v5 = __chkstk_darwin(v51);
  uint64_t v46 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v40 - v7;
  uint64_t v9 = type metadata accessor for BackgroundAnimationData();
  uint64_t v53 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v40 - v13;
  uint64_t v15 = sub_10017DF08(&qword_100E64A60);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v18 = (char *)v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)v40 - v19;
  uint64_t v21 = type metadata accessor for BackgroundAnimationKind();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)v40 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = a1;
  if (WeatherConditionBackgroundModel.canShowAnimatedBackground.getter())
  {
    uint64_t v42 = v20;
    uint64_t v43 = v18;
    uint64_t v44 = v14;
    uint64_t v45 = v9;
    double v41 = v12;
    WeatherConditionBackgroundModel.animationKind.getter();
    if ((*(unsigned int (**)(char *, uint64_t))(v22 + 88))(v24, v21) == enum case for BackgroundAnimationKind.vfx(_:))
    {
      uint64_t v25 = type metadata accessor for WeatherConditionBackgroundModel();
      uint64_t v26 = (uint64_t)v42;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 1, 1, v25);
      v40[1] = type metadata accessor for WeatherConditionBackgroundModifier(0);
      sub_10006DF38(v26, (uint64_t)v43, &qword_100E64A60);
      sub_10017DF08(&qword_100EB4860);
      State.wrappedValue.setter();
      sub_100178110(v26, &qword_100E64A60);
      int v27 = v44;
      WeatherConditionBackgroundModel.animationData.getter();
      BackgroundAnimationData.options.getter();
      uint64_t v29 = v53 + 8;
      uint64_t v28 = *(void (**)(char *, uint64_t))(v53 + 8);
      v28(v27, v45);
      uint64_t v30 = v48;
      WeatherConditionBackgroundOptions.effectViewID.getter();
      uint64_t v31 = (void (*)(char *, uint64_t))*((void *)v47 + 1);
      v31(v8, v51);
      uint64_t v32 = v49;
      uint64_t v33 = v50;
      int v34 = (*(uint64_t (**)(char *, uint64_t))(v50 + 88))(v30, v49);
      if (v34 == enum case for VFXEffectViewID.list(_:))
      {
        (*(void (**)(char *, uint64_t))(v33 + 96))(v30, v32);
        swift_bridgeObjectRelease();
      }
      else
      {
        BOOL v47 = v31;
        if (v34 == enum case for VFXEffectViewID.locationViewer(_:)
          || v34 == enum case for VFXEffectViewID.locationPreview(_:)
          || v34 == enum case for VFXEffectViewID.mapInteractionPreview(_:)
          || v34 == enum case for VFXEffectViewID.vfxTestView(_:))
        {
          uint64_t ObjectType = swift_getObjectType();
          sub_10017DF08(&qword_100E972E8);
          uint64_t v53 = v29;
          *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C251B0;
          uint64_t v38 = v41;
          WeatherConditionBackgroundModel.animationData.getter();
          uint64_t v39 = v46;
          BackgroundAnimationData.options.getter();
          v28(v38, v45);
          WeatherConditionBackgroundOptions.effectViewID.getter();
          v47(v39, v51);
          dispatch thunk of WeatherConditionBackgroundManagerType.addRemovalRequests(for:)();
          swift_bridgeObjectRelease();
          swift_getObjectType();
          WeatherConditionBackgroundManagerType.executeRequests()();
        }
        else if (v34 != enum case for VFXEffectViewID.poster(_:))
        {
          (*(void (**)(char *, uint64_t))(v50 + 8))(v48, v49);
        }
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
    }
  }
}

uint64_t sub_100B7936C()
{
  uint64_t v0 = type metadata accessor for BackgroundAnimationKind();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v10 - v5;
  type metadata accessor for WeatherConditionBackgroundModifier(0);
  WeatherConditionBackgroundModel.animationKind.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for BackgroundAnimationKind.mica(_:), v0);
  char v7 = static BackgroundAnimationKind.== infix(_:_:)();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v4, v0);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v8)(v6, v0);
  if (v7)
  {
    type metadata accessor for WeatherMicaConditionBackground();
    sub_1001CA9B8(&qword_100EB4A70, (void (*)(uint64_t))type metadata accessor for WeatherMicaConditionBackground);
    *(unsigned char *)(StateObject.wrappedValue.getter()
             + OBJC_IVAR____TtC7Weather30WeatherMicaConditionBackground_isWindowActive) = 0;
    swift_release();
    StateObject.wrappedValue.getter();
    sub_1001CA9B8(&qword_100E767B0, (void (*)(uint64_t))type metadata accessor for WeatherMicaConditionBackground);
    WeatherConditionPlaybackCoordinatorType.pause(_:)(0);
    return swift_release();
  }
  return result;
}

uint64_t sub_100B795A0()
{
  uint64_t v0 = type metadata accessor for WeatherConditionBackgroundOptions.DisplayLocation();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for WeatherConditionBackgroundOptions();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for BackgroundAnimationData();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for WeatherConditionBackgroundModifier(0);
  WeatherConditionBackgroundModel.animationData.getter();
  BackgroundAnimationData.options.getter();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  WeatherConditionBackgroundOptions.displayLocation.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  char v12 = WeatherConditionBackgroundOptions.DisplayLocation.canDisplayForegroundEffects.getter();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  if ((v12 & 1) == 0) {
    return 0;
  }
  if (qword_100E62BB8 != -1) {
    swift_once();
  }
  return byte_100EB45A9;
}

uint64_t sub_100B79810@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v87 = a2;
  uint64_t v78 = sub_10017DF08(&qword_100EB4AE8);
  __chkstk_darwin(v78);
  uint64_t v70 = (char *)&v68 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_10017DF08(&qword_100EB4AF0);
  __chkstk_darwin(v85);
  uint64_t v86 = (uint64_t)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_10017DF08(&qword_100EB4AF8);
  __chkstk_darwin(v77);
  uint64_t v81 = (uint64_t)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_10017DF08(&qword_100EB4B00);
  __chkstk_darwin(v84);
  uint64_t v82 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100EB4B08);
  __chkstk_darwin(v7 - 8);
  char v76 = (uint64_t *)((char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_10017DF08(&qword_100EB4B10);
  __chkstk_darwin(v9 - 8);
  BOOL v75 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_10017DF08(&qword_100EB4B18);
  uint64_t v11 = __chkstk_darwin(v72);
  uint64_t v68 = (uint64_t)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v69 = (uint64_t)&v68 - v13;
  uint64_t v14 = sub_10017DF08(&qword_100EB4A80);
  __chkstk_darwin(v14 - 8);
  uint64_t v88 = (uint64_t)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for WeatherVFXViewModel();
  uint64_t v74 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  uint64_t v73 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_10017DF08(&qword_100EB4B20);
  __chkstk_darwin(v80);
  uint64_t v18 = (char *)&v68 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for BackgroundAnimationKind();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10017DF08(&qword_100EB4B28);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v26 = (char *)&v68 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v91 = (char *)&v68 - v27;
  uint64_t v28 = type metadata accessor for AnimatedGradient();
  __chkstk_darwin(v28 - 8);
  uint64_t v83 = type metadata accessor for AnimatedLinearGradient();
  uint64_t v89 = *(void *)(v83 - 8);
  uint64_t v29 = __chkstk_darwin(v83);
  uint64_t v90 = (char *)&v68 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v32 = (char *)&v68 - v31;
  type metadata accessor for WeatherConditionBackgroundModifier(0);
  sub_10017DF08(&qword_100EB4850);
  State.wrappedValue.getter();
  uint64_t v92 = v32;
  uint64_t v33 = a1;
  AnimatedLinearGradient.init(gradient:)();
  WeatherConditionBackgroundModel.animationKind.getter();
  int v34 = (*(uint64_t (**)(char *, uint64_t))(v20 + 88))(v22, v19);
  if (v34 == enum case for BackgroundAnimationKind.vfx(_:))
  {
    char v35 = v73;
    uint64_t v37 = v74;
    uint64_t v36 = (uint64_t)v75;
    uint64_t v38 = v76;
    uint64_t v39 = v88;
    WeatherVFXConditionBackground.backgroundEffectModel.getter();
    int v40 = _s7Weather24LocationCompositionStateOwet_0(v39, 1, v79);
    char v71 = v26;
    if (v40 == 1)
    {
      sub_100178110(v88, &qword_100EB4A80);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 1, 1, v72);
    }
    else
    {
      uint64_t v48 = (uint64_t)v35;
      uint64_t v49 = v35;
      uint64_t v50 = v79;
      (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v49, v88, v79);
      *uint64_t v38 = static Alignment.center.getter();
      v38[1] = v51;
      uint64_t v52 = sub_10017DF08(&qword_100EB4B70);
      sub_100B7A3D0(v33, v48, (uint64_t)v38 + *(int *)(v52 + 44));
      sub_10006DF38((uint64_t)v38, v36, &qword_100EB4B08);
      sub_100178110((uint64_t)v38, &qword_100EB4B08);
      if (WeatherVFXConditionBackground.isLoaded.getter()) {
        double v53 = 1.0;
      }
      else {
        double v53 = 0.0;
      }
      uint64_t v54 = v68;
      sub_10006DF38(v36, v68, &qword_100EB4B10);
      uint64_t v55 = v72;
      *(double *)(v54 + *(int *)(v72 + 36)) = v53;
      sub_100178110(v36, &qword_100EB4B10);
      uint64_t v56 = v54;
      uint64_t v57 = v69;
      sub_10020E72C(v56, v69, &qword_100EB4B18);
      sub_10020E72C(v57, (uint64_t)v18, &qword_100EB4B18);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v55);
      (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v48, v50);
    }
    uint64_t v58 = v86;
    uint64_t v42 = v87;
    uint64_t v43 = v83;
    sub_10006DF38((uint64_t)v18, v81, &qword_100EB4B20);
    swift_storeEnumTagMultiPayload();
    sub_100B80444();
    sub_1001CB0D4();
    uint64_t v59 = (uint64_t)v82;
    _ConditionalContent<>.init(storage:)();
    sub_10006DF38(v59, v58, &qword_100EB4B00);
    swift_storeEnumTagMultiPayload();
    sub_100B803C8();
    uint64_t v60 = (uint64_t)v91;
    _ConditionalContent<>.init(storage:)();
    sub_100178110(v59, &qword_100EB4B00);
    sub_100178110((uint64_t)v18, &qword_100EB4B20);
    uint64_t v26 = v71;
    uint64_t v61 = v90;
    BOOL v47 = v92;
    goto LABEL_13;
  }
  if (v34 != enum case for BackgroundAnimationKind.mica(_:))
  {
    swift_storeEnumTagMultiPayload();
    sub_100B803C8();
    uint64_t v60 = (uint64_t)v91;
    _ConditionalContent<>.init(storage:)();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    uint64_t v42 = v87;
    uint64_t v61 = v90;
    BOOL v47 = v92;
    uint64_t v43 = v83;
LABEL_13:
    uint64_t v44 = v89;
    goto LABEL_16;
  }
  char v71 = v26;
  type metadata accessor for WeatherMicaConditionBackground();
  sub_1001CA9B8(&qword_100EB4A70, (void (*)(uint64_t))type metadata accessor for WeatherMicaConditionBackground);
  StateObject.wrappedValue.getter();
  char v41 = sub_10043695C();
  swift_release();
  uint64_t v42 = v87;
  uint64_t v43 = v83;
  uint64_t v44 = v89;
  if (v41)
  {
    StateObject.wrappedValue.getter();
    sub_100436878();
    swift_release();
    uint64_t v45 = (uint64_t)v70;
    MicaView.init(animation:)();
    uint64_t v46 = 0;
    BOOL v47 = v92;
  }
  else
  {
    uint64_t v46 = 1;
    BOOL v47 = v92;
    uint64_t v45 = (uint64_t)v70;
  }
  uint64_t v62 = type metadata accessor for MicaView();
  _s7Weather24LocationCompositionStateOwst_0(v45, v46, 1, v62);
  sub_10006DF38(v45, v81, &qword_100EB4AE8);
  swift_storeEnumTagMultiPayload();
  sub_100B80444();
  sub_1001CB0D4();
  uint64_t v63 = (uint64_t)v82;
  _ConditionalContent<>.init(storage:)();
  sub_10006DF38(v63, v86, &qword_100EB4B00);
  swift_storeEnumTagMultiPayload();
  sub_100B803C8();
  uint64_t v60 = (uint64_t)v91;
  _ConditionalContent<>.init(storage:)();
  sub_100178110(v63, &qword_100EB4B00);
  sub_100178110(v45, &qword_100EB4AE8);
  uint64_t v26 = v71;
  uint64_t v61 = v90;
LABEL_16:
  uint64_t v64 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
  v64(v61, v47, v43);
  sub_10006DF38(v60, (uint64_t)v26, &qword_100EB4B28);
  v64(v42, v61, v43);
  uint64_t v65 = sub_10017DF08(&qword_100EB4B68);
  sub_10006DF38((uint64_t)v26, (uint64_t)&v42[*(int *)(v65 + 48)], &qword_100EB4B28);
  sub_100178110(v60, &qword_100EB4B28);
  uint64_t v66 = *(void (**)(char *, uint64_t))(v44 + 8);
  v66(v47, v43);
  sub_100178110((uint64_t)v26, &qword_100EB4B28);
  return ((uint64_t (*)(char *, uint64_t))v66)(v61, v43);
}

uint64_t sub_100B7A3D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v145 = a2;
  *(void *)&long long v163 = a1;
  uint64_t v149 = a3;
  uint64_t v3 = type metadata accessor for _BlendModeEffect();
  __chkstk_darwin(v3 - 8);
  uint64_t v141 = (char *)&v121 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = type metadata accessor for BlendMode();
  uint64_t v140 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  uint64_t v139 = (char *)&v121 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = sub_10017DF08(&qword_100EB4B78);
  __chkstk_darwin(v154);
  uint64_t v138 = (char *)&v121 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100EB4B80);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v156 = (uint64_t)&v121 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  int v155 = (char *)&v121 - v10;
  uint64_t v11 = sub_10017DF08(&qword_100EB4B88);
  __chkstk_darwin(v11 - 8);
  uint64_t v127 = (char *)&v121 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = sub_10017DF08(&qword_100EB4B90);
  __chkstk_darwin(v161);
  uint64_t v126 = (uint64_t)&v121 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100EB4A80);
  __chkstk_darwin(v14 - 8);
  uint64_t v152 = (char *)&v121 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100EB4B98);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v148 = (char *)&v121 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v165 = (uint64_t)&v121 - v19;
  uint64_t v160 = type metadata accessor for WeatherVFXView();
  uint64_t v158 = *(void *)(v160 - 8);
  __chkstk_darwin(v160);
  uint64_t v157 = (char *)&v121 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = sub_10017DF08(&qword_100EB4BA0);
  __chkstk_darwin(v150);
  uint64_t v151 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))((char *)&v121 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v147 = type metadata accessor for WeatherVFXViewModel();
  uint64_t v146 = *(void *)(v147 - 8);
  uint64_t v22 = __chkstk_darwin(v147);
  uint64_t v143 = (char *)&v121 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = v23;
  __chkstk_darwin(v22);
  uint64_t v159 = (char *)&v121 - v24;
  uint64_t v137 = type metadata accessor for WeatherConditionBackgroundOptions.DisplayLocation();
  uint64_t v136 = *(void *)(v137 - 8);
  uint64_t v25 = __chkstk_darwin(v137);
  uint64_t v135 = (char *)&v121 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v134 = (char *)&v121 - v27;
  uint64_t v133 = type metadata accessor for WeatherConditionBackgroundOptions();
  uint64_t v132 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  uint64_t v131 = (char *)&v121 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = type metadata accessor for BackgroundAnimationData();
  uint64_t v129 = *(void *)(v130 - 8);
  __chkstk_darwin(v130);
  uint64_t v128 = (char *)&v121 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for WeatherConditionBackgroundModifier(0);
  uint64_t v122 = *(void *)(v30 - 8);
  uint64_t v31 = __chkstk_darwin(v30);
  uint64_t v124 = (uint64_t)&v121 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = v32;
  __chkstk_darwin(v31);
  uint64_t v144 = (uint64_t)&v121 - v33;
  uint64_t v34 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v35 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v37 = (char *)&v121 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_10017DF08(&qword_100E662F0);
  uint64_t v39 = v38 - 8;
  __chkstk_darwin(v38);
  char v41 = (char *)&v121 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_10017DF08(&qword_100E65ED8);
  uint64_t v43 = __chkstk_darwin(v42 - 8);
  uint64_t v45 = (char *)&v121 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __chkstk_darwin(v43);
  uint64_t v48 = (char *)&v121 - v47;
  __chkstk_darwin(v46);
  uint64_t v50 = (char *)&v121 - v49;
  uint64_t v51 = sub_10017DF08(&qword_100EB4BA8);
  uint64_t v52 = __chkstk_darwin(v51 - 8);
  uint64_t v153 = (uint64_t)&v121 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v52);
  uint64_t v164 = (uint64_t)&v121 - v54;
  uint64_t v162 = v30;
  sub_10019B2FC();
  (*(void (**)(char *, void, uint64_t))(v35 + 104))(v48, enum case for UserInterfaceSizeClass.regular(_:), v34);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v34);
  uint64_t v55 = (uint64_t)&v41[*(int *)(v39 + 56)];
  sub_10006DF38((uint64_t)v50, (uint64_t)v41, &qword_100E65ED8);
  sub_10006DF38((uint64_t)v48, v55, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v34) == 1)
  {
    sub_100178110((uint64_t)v48, &qword_100E65ED8);
    sub_100178110((uint64_t)v50, &qword_100E65ED8);
    int v56 = _s7Weather24LocationCompositionStateOwet_0(v55, 1, v34);
    uint64_t v57 = v146;
    if (v56 == 1)
    {
      sub_100178110((uint64_t)v41, &qword_100E65ED8);
      uint64_t v58 = v163;
      uint64_t v59 = v144;
      sub_1001C9BA4(v163, v144, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
      uint64_t v60 = v147;
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  sub_10006DF38((uint64_t)v41, (uint64_t)v45, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0(v55, 1, v34) == 1)
  {
    sub_100178110((uint64_t)v48, &qword_100E65ED8);
    sub_100178110((uint64_t)v50, &qword_100E65ED8);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v45, v34);
    uint64_t v57 = v146;
LABEL_6:
    sub_100178110((uint64_t)v41, &qword_100E662F0);
    uint64_t v58 = v163;
    uint64_t v59 = v144;
    sub_1001C9BA4(v163, v144, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
    uint64_t v60 = v147;
LABEL_7:
    sub_1000FFDCC(v59, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
    uint64_t v61 = v145;
    goto LABEL_11;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v37, v55, v34);
  sub_1001CA9B8(&qword_100E65F28, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
  char v62 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v63 = *(void (**)(char *, uint64_t))(v35 + 8);
  v63(v37, v34);
  sub_100178110((uint64_t)v48, &qword_100E65ED8);
  sub_100178110((uint64_t)v50, &qword_100E65ED8);
  v63(v45, v34);
  sub_100178110((uint64_t)v41, &qword_100E65ED8);
  uint64_t v58 = v163;
  uint64_t v59 = v144;
  sub_1001C9BA4(v163, v144, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
  uint64_t v60 = v147;
  uint64_t v57 = v146;
  if ((v62 & 1) == 0) {
    goto LABEL_7;
  }
LABEL_9:
  uint64_t v64 = v128;
  WeatherConditionBackgroundModel.animationData.getter();
  uint64_t v65 = v131;
  BackgroundAnimationData.options.getter();
  (*(void (**)(char *, uint64_t))(v129 + 8))(v64, v130);
  uint64_t v66 = v134;
  WeatherConditionBackgroundOptions.displayLocation.getter();
  (*(void (**)(char *, uint64_t))(v132 + 8))(v65, v133);
  uint64_t v67 = v136;
  uint64_t v68 = v135;
  uint64_t v69 = v137;
  (*(void (**)(char *, void, uint64_t))(v136 + 104))(v135, enum case for WeatherConditionBackgroundOptions.DisplayLocation.locationViewer(_:), v137);
  LOBYTE(v65) = static WeatherConditionBackgroundOptions.DisplayLocation.== infix(_:_:)();
  uint64_t v70 = *(void (**)(char *, uint64_t))(v67 + 8);
  v70(v68, v69);
  v70(v66, v69);
  sub_1000FFDCC(v59, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
  uint64_t v61 = v145;
  if (v65)
  {
    char v71 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 16);
    uint64_t v72 = v159;
    v71(v159, v145, v60);
    uint64_t v73 = v124;
    sub_1001C9BA4(v58, v124, (void (*)(void))type metadata accessor for WeatherConditionBackgroundModifier);
    unint64_t v74 = (*(unsigned __int8 *)(v57 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
    unint64_t v75 = (v125 + *(unsigned __int8 *)(v122 + 80) + v74) & ~(unint64_t)*(unsigned __int8 *)(v122 + 80);
    uint64_t v76 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v57 + 32))(v76 + v74, v72, v60);
    sub_1001CA430(v73, v76 + v75);
    uint64_t v77 = v151;
    int *v151 = sub_100B80930;
    v77[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))v76;
    swift_storeEnumTagMultiPayload();
    sub_10017DF08(&qword_100EB4BB0);
    sub_1001246C8(&qword_100EB4BB8, &qword_100EB4BB0);
    sub_1001CA9B8(&qword_100EB4BC0, (void (*)(uint64_t))&type metadata accessor for WeatherVFXView);
    _ConditionalContent<>.init(storage:)();
    goto LABEL_12;
  }
LABEL_11:
  char v71 = *(void (**)(char *, uint64_t, uint64_t))(v57 + 16);
  v71(v159, v61, v60);
  sub_100B795A0();
  uint64_t v78 = v157;
  WeatherVFXView.init(model:foregroundEffectsEnabled:)();
  uint64_t v79 = v158;
  uint64_t v80 = v160;
  (*(void (**)(uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>), char *, uint64_t))(v158 + 16))(v151, v78, v160);
  swift_storeEnumTagMultiPayload();
  sub_10017DF08(&qword_100EB4BB0);
  sub_1001246C8(&qword_100EB4BB8, &qword_100EB4BB0);
  sub_1001CA9B8(&qword_100EB4BC0, (void (*)(uint64_t))&type metadata accessor for WeatherVFXView);
  _ConditionalContent<>.init(storage:)();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v78, v80);
LABEL_12:
  uint64_t v81 = v162;
  uint64_t v82 = (uint64_t)v152;
  WeatherVFXConditionBackground.collisionEffectModel.getter();
  if (_s7Weather24LocationCompositionStateOwet_0(v82, 1, v60) == 1)
  {
    sub_100178110(v82, &qword_100EB4A80);
  }
  else
  {
    uint64_t v83 = v143;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v143, v82, v60);
    uint64_t v84 = (void *)(v58 + *(int *)(v81 + 52));
    uint64_t v85 = (void *)v84[2];
    if (v85)
    {
      uint64_t v86 = v84[1];
      *(void *)&long long v163 = *v84;
      v71(v159, (uint64_t)v83, v60);
      uint64_t v87 = v157;
      WeatherVFXView.init(model:foregroundEffectsEnabled:)();
      sub_100100AF4();
      sub_100100AF4();
      static Alignment.center.getter();
      uint64_t v88 = (uint64_t)v127;
      sub_100BD8608();
      (*(void (**)(char *, uint64_t))(v158 + 8))(v87, v160);
      uint64_t v167 = 0x6F6973696C6C6F63;
      *(void *)&long long v168 = 0xEA00000000002D6ELL;
      swift_bridgeObjectRetain();
      v89._countAndFlagsBits = v86;
      v89._object = v85;
      String.append(_:)(v89);
      swift_bridgeObjectRelease();
      uint64_t v90 = v167;
      uint64_t v91 = v168;
      int v92 = static MatchedGeometryProperties.position.getter();
      static UnitPoint.center.getter();
      uint64_t v94 = v93;
      uint64_t v96 = v95;
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v98 = v60;
      uint64_t v99 = v126;
      sub_10006DF38(v88, v126, &qword_100EB4B88);
      uint64_t v100 = v99 + *(int *)(v161 + 36);
      *(void *)uint64_t v100 = v90;
      *(void *)(v100 + 8) = v91;
      *(void *)(v100 + 16) = v163;
      *(_DWORD *)(v100 + 24) = v92;
      *(void *)(v100 + 32) = v94;
      *(void *)(v100 + 40) = v96;
      *(unsigned char *)(v100 + 48) = 0;
      *(void *)(v100 + 56) = KeyPath;
      *(unsigned char *)(v100 + 64) = 0;
      sub_100178110(v88, &qword_100EB4B88);
      (*(void (**)(char *, uint64_t))(v57 + 8))(v143, v98);
      sub_10020E72C(v99, v165, &qword_100EB4B90);
      uint64_t v101 = 0;
      goto LABEL_18;
    }
    (*(void (**)(char *, uint64_t))(v57 + 8))(v83, v60);
  }
  uint64_t v101 = 1;
LABEL_18:
  uint64_t v102 = 1;
  _s7Weather24LocationCompositionStateOwst_0(v165, v101, 1, v161);
  WeatherVFXConditionBackground.backgroundMask.getter();
  sub_10020E72C((uint64_t)v166, (uint64_t)&v167, &qword_100EB4BC8);
  uint64_t v103 = v167;
  uint64_t v104 = (uint64_t)v155;
  uint64_t v105 = v154;
  if (v167)
  {
    long long v163 = v168;
    uint64_t v106 = v169;
    uint64_t v107 = v170;
    uint64_t v108 = v140;
    uint64_t v109 = v139;
    uint64_t v110 = v142;
    (*(void (**)(char *, void, uint64_t))(v140 + 104))(v139, enum case for BlendMode.destinationOut(_:), v142);
    uint64_t v111 = (uint64_t)v141;
    (*(void (**)(char *, char *, uint64_t))(v108 + 16))(v141, v109, v110);
    uint64_t v112 = (uint64_t)v138;
    sub_1001C9BA4(v111, (uint64_t)&v138[*(int *)(v105 + 36)], (void (*)(void))&type metadata accessor for _BlendModeEffect);
    *(void *)uint64_t v112 = v103;
    *(_OWORD *)(v112 + 8) = v163;
    *(void *)(v112 + 24) = v106;
    *(void *)(v112 + 32) = v107;
    *(_WORD *)(v112 + 40) = 0;
    swift_bridgeObjectRetain();
    sub_1000FFDCC(v111, (void (*)(void))&type metadata accessor for _BlendModeEffect);
    (*(void (**)(char *, uint64_t))(v108 + 8))(v109, v110);
    sub_100295014((uint64_t)v166);
    sub_10020E72C(v112, v104, &qword_100EB4B78);
    uint64_t v102 = 0;
  }
  uint64_t v113 = v149;
  uint64_t v114 = (uint64_t)v148;
  _s7Weather24LocationCompositionStateOwst_0(v104, v102, 1, v105);
  uint64_t v115 = v164;
  uint64_t v116 = v153;
  sub_10006DF38(v164, v153, &qword_100EB4BA8);
  uint64_t v117 = v165;
  sub_10006DF38(v165, v114, &qword_100EB4B98);
  uint64_t v118 = v156;
  sub_10006DF38(v104, v156, &qword_100EB4B80);
  sub_10006DF38(v116, v113, &qword_100EB4BA8);
  uint64_t v119 = sub_10017DF08(&qword_100EB4BD0);
  sub_10006DF38(v114, v113 + *(int *)(v119 + 48), &qword_100EB4B98);
  sub_10006DF38(v118, v113 + *(int *)(v119 + 64), &qword_100EB4B80);
  sub_100178110(v104, &qword_100EB4B80);
  sub_100178110(v117, &qword_100EB4B98);
  sub_100178110(v115, &qword_100EB4BA8);
  sub_100178110(v118, &qword_100EB4B80);
  sub_100178110(v114, &qword_100EB4B98);
  return sub_100178110(v116, &qword_100EB4BA8);
}

uint64_t sub_100B7B8B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v52 = a3;
  uint64_t v53 = a1;
  uint64_t v4 = type metadata accessor for GeometryProxy();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v49 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v48 - v8;
  uint64_t v10 = type metadata accessor for WeatherVFXViewModel();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for WeatherVFXView();
  uint64_t v50 = *(void *)(v14 - 8);
  uint64_t v51 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_10017DF08(&qword_100EB4BD8);
  __chkstk_darwin(v48);
  uint64_t v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
  sub_100B795A0();
  WeatherVFXView.init(model:foregroundEffectsEnabled:)();
  uint64_t v19 = self;
  id v20 = [v19 sharedApplication];
  uint64_t v21 = (void *)UIApplication.maybeWindow.getter();

  if (v21)
  {
    [v21 bounds];
    CGFloat v23 = v22;
    CGFloat v25 = v24;
    CGFloat v27 = v26;
    CGFloat v29 = v28;

    v57.origin.CGFloat x = v23;
    v57.origin.CGFloat y = v25;
    v57.size.CGFloat width = v27;
    v57.size.CGFloat height = v29;
    CGRectGetWidth(v57);
  }
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v30(v9, v53, v4);
  if (!v21) {
    GeometryProxy.size.getter();
  }
  uint64_t v31 = *(void (**)(char *, uint64_t))(v5 + 8);
  v31(v9, v4);
  id v32 = [v19 sharedApplication];
  uint64_t v33 = (void *)UIApplication.maybeWindow.getter();

  if (v33)
  {
    [v33 bounds];
    CGFloat v35 = v34;
    CGFloat v37 = v36;
    CGFloat v39 = v38;
    CGFloat v41 = v40;

    v58.origin.CGFloat x = v35;
    v58.origin.CGFloat y = v37;
    v58.size.CGFloat width = v39;
    v58.size.CGFloat height = v41;
    CGRectGetHeight(v58);
  }
  uint64_t v42 = v49;
  v30(v49, v53, v4);
  if (!v33) {
    GeometryProxy.size.getter();
  }
  v31(v42, v4);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v44 = v50;
  uint64_t v43 = v51;
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v18, v16, v51);
  uint64_t v45 = &v18[*(int *)(v48 + 36)];
  long long v46 = v55;
  *(_OWORD *)uint64_t v45 = v54;
  *((_OWORD *)v45 + 1) = v46;
  *((_OWORD *)v45 + 2) = v56;
  (*(void (**)(char *, uint64_t))(v44 + 8))(v16, v43);
  return sub_10020E72C((uint64_t)v18, v52, &qword_100EB4BD8);
}

uint64_t sub_100B7BD34()
{
  uint64_t v0 = type metadata accessor for AnimatedGradient();
  __chkstk_darwin(v0 - 8);
  type metadata accessor for WeatherConditionBackgroundModifier(0);
  sub_10017DF08(&qword_100EB4850);
  State.wrappedValue.getter();
  AnimatedGradient.setGradient(gradient:)();
  return State.wrappedValue.setter();
}

uint64_t sub_100B7BE00()
{
  return type metadata accessor for WeatherConditionBackgroundModifierState(0);
}

uint64_t sub_100B7BE08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v28 = a2;
  uint64_t v29 = sub_10017DF08(&qword_100EB4BE0);
  __chkstk_darwin(v29);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100EB4BE8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100EB4BF0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v2[7];
  char v13 = *((unsigned char *)v2 + 64);
  sub_100195B7C(v12, v13);
  sub_100149AE8();
  char v15 = v14;
  sub_10018F6D8(v12, v13);
  if (v15)
  {
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v16(v11, v27, v8);
    v16(v7, (uint64_t)v11, v8);
    swift_storeEnumTagMultiPayload();
    sub_1001246C8(&qword_100EB4BF8, &qword_100EB4BF0);
    sub_100B809D0();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    uint64_t v19 = *v2;
    uint64_t v18 = v2[1];
    uint64_t v20 = v2[2];
    int v21 = *((_DWORD *)v2 + 6);
    uint64_t v22 = v2[4];
    uint64_t v23 = v2[5];
    char v24 = *((unsigned char *)v2 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v4, v27, v8);
    CGFloat v25 = &v4[*(int *)(v29 + 36)];
    *(void *)CGFloat v25 = v19;
    *((void *)v25 + 1) = v18;
    *((void *)v25 + 2) = v20;
    *((_DWORD *)v25 + 6) = v21;
    *((void *)v25 + 4) = v22;
    *((void *)v25 + 5) = v23;
    v25[48] = v24;
    sub_10006DF38((uint64_t)v4, (uint64_t)v7, &qword_100EB4BE0);
    swift_storeEnumTagMultiPayload();
    sub_1001246C8(&qword_100EB4BF8, &qword_100EB4BF0);
    sub_100B809D0();
    swift_bridgeObjectRetain();
    _ConditionalContent<>.init(storage:)();
    return sub_100178110((uint64_t)v4, &qword_100EB4BE0);
  }
}

uint64_t sub_100B7C130@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  memcpy(__dst, v2, sizeof(__dst));
  return sub_100B7BE08(a1, a2);
}

uint64_t sub_100B7C184()
{
  return sub_10001638C((void (*)(void))&type metadata accessor for WeatherVFXConditionBackground, (uint64_t (*)(void))&WeatherVFXConditionBackground.init());
}

uint64_t sub_100B7C1B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v4 = type metadata accessor for WeatherConditionBackgroundModel();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for InternalStateWeatherConditionBackgroundModifier(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2 + v8[5], v4);
  uint64_t v9 = v8[7];
  uint64_t v10 = (uint64_t *)(v2 + v8[6]);
  uint64_t v11 = *v10;
  uint64_t v23 = v10[1];
  sub_10020D948(v2 + v9, (uint64_t)v25);
  type metadata accessor for WeatherVFXConditionBackground();
  sub_1001CA9B8(&qword_100E70F28, (void (*)(uint64_t))&type metadata accessor for WeatherVFXConditionBackground);
  swift_unknownObjectRetain();
  uint64_t v12 = StateObject.wrappedValue.getter();
  char v13 = (uint64_t *)(v2 + v8[8]);
  uint64_t v14 = *v13;
  uint64_t v15 = v13[1];
  uint64_t v16 = v13[2];
  char v17 = *(unsigned char *)(v2 + v8[9]);
  uint64_t v18 = *(void *)(v2 + v8[10]);
  sub_10017DF08(&qword_100EB4838);
  swift_bridgeObjectRetain();
  swift_retain();
  LOBYTE(v21) = v17;
  sub_1000D9728((uint64_t)v7, v11, v23, (uint64_t)v25, v12, v14, v15, v16, v21, v18, v22, v23, v24, v25[0], v25[1], v25[2], v25[3], v25[4], v25[5],
    v25[6],
    v26,
    v27);
  uint64_t v19 = sub_10017DF08(&qword_100EB4840);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(a2, v24, v19);
}

id sub_100B7C41C()
{
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 BOOLForKey:v1];

  return v2;
}

void sub_100B7C4CC()
{
  Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
  NSString v2 = String._bridgeToObjectiveC()();
  [v0 setValue:isa forKey:v2];
}

uint64_t sub_100B7C548()
{
  return static Published.subscript.setter();
}

uint64_t sub_100B7C5B8()
{
  sub_10017DF08(&qword_100EB4858);
  uint64_t result = NSKeyValueObservedChange.newValue.getter();
  if (v1 != 2)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      sub_100B7C548();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_100B7C644()
{
  uint64_t v1 = v0
     + OBJC_IVAR____TtC7WeatherP33_5624985E7B87C7961D79AEAA50BEAAE138AnimatedBackgroundsUserDefaultsMonitor__animatedBackgroundsEnabled;
  uint64_t v2 = sub_10017DF08(&qword_100E76778);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC7WeatherP33_5624985E7B87C7961D79AEAA50BEAAE138AnimatedBackgroundsUserDefaultsMonitor_observer));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC7WeatherP33_5624985E7B87C7961D79AEAA50BEAAE138AnimatedBackgroundsUserDefaultsMonitor_defaults));
  return v0;
}

uint64_t sub_100B7C6CC()
{
  sub_100B7C644();

  return swift_deallocClassInstance();
}

uint64_t sub_100B7C720()
{
  return type metadata accessor for AnimatedBackgroundsUserDefaultsMonitor(0);
}

uint64_t sub_100B7C728@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1001CAA88();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100B7C758()
{
  return sub_100B7C548();
}

void *sub_100B7C780(void *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    uint64_t v4 = (void *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = *a2;
    uint64_t v8 = a2[1];
    char v9 = *((unsigned char *)a2 + 16);
    sub_100195B88();
    *uint64_t v4 = v7;
    v4[1] = v8;
    *((unsigned char *)v4 + 16) = v9;
    uint64_t v10 = a3[5];
    uint64_t v11 = (char *)v4 + v10;
    uint64_t v12 = (uint64_t)a2 + v10;
    uint64_t v13 = type metadata accessor for WeatherConditionBackgroundModel();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    uint64_t v14 = a3[7];
    *(_OWORD *)((char *)v4 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    long long v17 = *(_OWORD *)((char *)a2 + v14 + 24);
    *(_OWORD *)((char *)v4 + v14 + 24) = v17;
    uint64_t v18 = v17;
    uint64_t v19 = **(void (***)(char *, uint64_t, uint64_t))(v17 - 8);
    swift_unknownObjectRetain();
    v19(v15, v16, v18);
    uint64_t v20 = a3[8];
    uint64_t v21 = a3[9];
    uint64_t v22 = (char *)v4 + v20;
    uint64_t v23 = (uint64_t)a2 + v20;
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    *((void *)v22 + 2) = *(void *)(v23 + 16);
    *((unsigned char *)v4 + v21) = *((unsigned char *)a2 + v21);
    *(void *)((char *)v4 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_100B7C924(uint64_t a1, uint64_t a2)
{
  sub_10018F6E4();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for WeatherConditionBackgroundModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + *(int *)(a2 + 28));
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_100B7C9E0(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  char v8 = *((unsigned char *)a2 + 16);
  sub_100195B88();
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  uint64_t v9 = a3[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = (uint64_t)a2 + v9;
  uint64_t v12 = type metadata accessor for WeatherConditionBackgroundModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  uint64_t v13 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = (uint64_t)a2 + v13;
  long long v16 = *(_OWORD *)((char *)a2 + v13 + 24);
  *(_OWORD *)(a1 + v13 + 24) = v16;
  uint64_t v17 = v16;
  uint64_t v18 = **(void (***)(uint64_t, uint64_t, uint64_t))(v16 - 8);
  swift_unknownObjectRetain();
  v18(v14, v15, v17);
  uint64_t v19 = a3[8];
  uint64_t v20 = a3[9];
  uint64_t v21 = a1 + v19;
  uint64_t v22 = (uint64_t)a2 + v19;
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *(void *)(v21 + 16) = *(void *)(v22 + 16);
  *(unsigned char *)(a1 + v20) = *((unsigned char *)a2 + v20);
  *(void *)(a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_100B7CB38(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = a2[1];
  char v8 = *((unsigned char *)a2 + 16);
  sub_100195B88();
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v8;
  sub_10018F6E4();
  uint64_t v9 = a3[5];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = (uint64_t)a2 + v9;
  uint64_t v12 = type metadata accessor for WeatherConditionBackgroundModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)((char *)a2 + v13);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v14[1] = v16;
  sub_1000C1E18((uint64_t *)(a1 + a3[7]), (uint64_t *)((char *)a2 + a3[7]));
  uint64_t v17 = a3[8];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (uint64_t *)((char *)a2 + v17);
  *uint64_t v18 = *v19;
  v18[1] = v19[1];
  void v18[2] = v19[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
  *(void *)(a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100B7CC7C(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = a3[5];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for WeatherConditionBackgroundModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  long long v13 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v13;
  *(void *)(v11 + 32) = *(void *)(v12 + 32);
  uint64_t v14 = a3[8];
  uint64_t v15 = a3[9];
  uint64_t v16 = a1 + v14;
  uint64_t v17 = (long long *)(a2 + v14);
  long long v18 = *v17;
  *(void *)(v16 + 16) = *((void *)v17 + 2);
  *(_OWORD *)uint64_t v16 = v18;
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_100B7CD64(uint64_t a1, uint64_t a2, int *a3)
{
  char v6 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v6;
  sub_10018F6E4();
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for WeatherConditionBackgroundModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)(a1 + v11);
  long long v13 = (void *)(a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  swift_unknownObjectRelease();
  v12[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + v15);
  long long v18 = *(_OWORD *)(v17 + 16);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *(_OWORD *)(v16 + 16) = v18;
  *(void *)(v16 + 32) = *(void *)(v17 + 32);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(void *)(v20 + 16) = *(void *)(v21 + 16);
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(void *)(a1 + v22) = *(void *)(a2 + v22);
  swift_release();
  return a1;
}

uint64_t sub_100B7CE8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B7CEA0);
}

uint64_t sub_100B7CEA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for WeatherConditionBackgroundModel();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) != a2) {
    return sub_10019DE74(*(int *)(a3 + 24));
  }
  uint64_t v8 = v6;
  uint64_t v9 = a1 + *(int *)(a3 + 20);

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_100B7CF20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B7CF34);
}

void sub_100B7CF34()
{
  sub_100150288();
  type metadata accessor for WeatherConditionBackgroundModel();
  sub_100162F30();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v1 + *(int *)(v2 + 20);
    _s7Weather24LocationCompositionStateOwst_0(v7, v0, v0, v6);
  }
  else
  {
    *(void *)(v1 + *(int *)(v2 + 24)) = (v0 - 1);
  }
}

uint64_t type metadata accessor for InternalStateWeatherConditionBackgroundModifier(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB47E8);
}

uint64_t sub_100B7CFD4()
{
  uint64_t result = type metadata accessor for WeatherConditionBackgroundModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100B7D0A0()
{
  return swift_getOpaqueTypeConformance2();
}

id sub_100B7D0E4@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 weather_vfx_animatedBackgrounds_enabled];
  *a2 = (_BYTE)result;
  return result;
}

id sub_100B7D118(unsigned __int8 *a1, id *a2)
{
  return [*a2 setWeather_vfx_animatedBackgrounds_enabled:*a1];
}

uint64_t sub_100B7D12C()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100B7D164()
{
  return sub_100B7C5B8();
}

void *sub_100B7D16C(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v10 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    a1[1] = a2[1];
    uint64_t v6 = a3[5];
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    swift_retain();
    sub_10017DF08(&qword_100E62D60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = a3[6];
    uint64_t v12 = (void *)((char *)a1 + v11);
    long long v13 = (void *)((char *)a2 + v11);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
      {
        uint64_t v15 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
      }
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v16 = a3[7];
    uint64_t v17 = (void *)((char *)a1 + v16);
    long long v18 = (void *)((char *)a2 + v16);
    sub_10017DF08(&qword_100E83C68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v19 = type metadata accessor for TargetWindowSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
      {
        uint64_t v20 = sub_10017DF08(&qword_100EAA930);
        memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
      }
    }
    else
    {
      *uint64_t v17 = *v18;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v21 = a3[8];
    uint64_t v22 = (char *)a1 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = *(void *)v23;
    char v25 = v23[8];
    sub_100195B7C(*(void *)v23, v25);
    *(void *)uint64_t v22 = v24;
    v22[8] = v25;
    uint64_t v26 = a3[9];
    uint64_t v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    uint64_t v29 = *(void *)v28;
    char v30 = v28[8];
    sub_100195B7C(*(void *)v28, v30);
    *(void *)uint64_t v27 = v29;
    v27[8] = v30;
    uint64_t v31 = a3[10];
    id v32 = (char *)a1 + v31;
    uint64_t v33 = (char *)a2 + v31;
    uint64_t v103 = type metadata accessor for WeatherConditionBackgroundModel();
    uint64_t v102 = *(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 16);
    v102(v32, v33, v103);
    uint64_t v34 = a3[12];
    *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
    CGFloat v35 = (char *)a1 + v34;
    double v36 = (char *)a2 + v34;
    long long v37 = *(_OWORD *)((char *)a2 + v34 + 24);
    *(_OWORD *)((char *)a1 + v34 + 24) = v37;
    uint64_t v38 = v37;
    CGFloat v39 = **(void (***)(char *, char *, uint64_t))(v37 - 8);
    swift_unknownObjectRetain();
    v39(v35, v36, v38);
    uint64_t v40 = a3[13];
    uint64_t v41 = a3[14];
    uint64_t v42 = (char *)a1 + v40;
    uint64_t v43 = (char *)a2 + v40;
    *(_OWORD *)uint64_t v42 = *(_OWORD *)v43;
    *((void *)v42 + 2) = *((void *)v43 + 2);
    *(void *)((char *)a1 + v41) = *(void *)((char *)a2 + v41);
    uint64_t v44 = a3[16];
    *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
    *((unsigned char *)a1 + v44) = *((unsigned char *)a2 + v44);
    uint64_t v45 = a3[17];
    long long v46 = (char *)a1 + v45;
    uint64_t v47 = (char *)a2 + v45;
    uint64_t v48 = type metadata accessor for AnimatedGradient();
    uint64_t v49 = *(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_retain();
    v49(v46, v47, v48);
    uint64_t v10 = a1;
    uint64_t v50 = sub_10017DF08(&qword_100EB4850);
    *(void *)&v46[*(int *)(v50 + 28)] = *(void *)&v47[*(int *)(v50 + 28)];
    uint64_t v51 = a3[18];
    uint64_t v52 = (char *)a1 + v51;
    uint64_t v53 = (char *)a2 + v51;
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v103))
    {
      uint64_t v54 = sub_10017DF08(&qword_100E64A60);
      memcpy(v52, v53, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      v102(v52, v53, v103);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v103);
    }
    uint64_t v55 = sub_10017DF08(&qword_100EB4860);
    *(void *)&v52[*(int *)(v55 + 28)] = *(void *)&v53[*(int *)(v55 + 28)];
    uint64_t v56 = a3[19];
    CGRect v57 = (char *)a1 + v56;
    CGRect v58 = (char *)a2 + v56;
    uint64_t v59 = type metadata accessor for TargetWindowSizeClass();
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v58, 1, v59))
    {
      uint64_t v60 = sub_10017DF08(&qword_100EAA930);
      memcpy(v57, v58, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v57, 0, 1, v59);
    }
    uint64_t v61 = sub_10017DF08(&qword_100EB4868);
    *(void *)&v57[*(int *)(v61 + 28)] = *(void *)&v58[*(int *)(v61 + 28)];
    uint64_t v62 = a3[20];
    uint64_t v63 = (char *)a1 + v62;
    uint64_t v64 = (char *)a2 + v62;
    uint64_t v65 = type metadata accessor for CollisionViewMetrics();
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, v65))
    {
      uint64_t v66 = sub_10017DF08(&qword_100EB4848);
      memcpy(v63, v64, *(void *)(*(void *)(v66 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(v63, v64, v65);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v63, 0, 1, v65);
    }
    uint64_t v67 = sub_10017DF08(&qword_100EB4870);
    *(void *)&v63[*(int *)(v67 + 28)] = *(void *)&v64[*(int *)(v67 + 28)];
    uint64_t v68 = a3[21];
    uint64_t v69 = a3[22];
    uint64_t v70 = (void *)((char *)a1 + v68);
    char v71 = (void *)((char *)a2 + v68);
    uint64_t v72 = v71[1];
    *uint64_t v70 = *v71;
    v70[1] = v72;
    uint64_t v73 = (void *)((char *)a1 + v69);
    unint64_t v74 = (void *)((char *)a2 + v69);
    uint64_t v75 = v74[1];
    *uint64_t v73 = *v74;
    v73[1] = v75;
    uint64_t v76 = a3[23];
    uint64_t v77 = a3[24];
    uint64_t v78 = (void *)((char *)a1 + v76);
    uint64_t v79 = (void *)((char *)a2 + v76);
    uint64_t v80 = v79[1];
    *uint64_t v78 = *v79;
    v78[1] = v80;
    uint64_t v81 = (char *)a1 + v77;
    uint64_t v82 = *(void *)((char *)a2 + v77);
    uint64_t v83 = *(void *)((char *)a2 + v77 + 8);
    char v104 = *((unsigned char *)a2 + v77 + 16);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100195B88();
    *(void *)uint64_t v81 = v82;
    *((void *)v81 + 1) = v83;
    v81[16] = v104;
    uint64_t v84 = a3[25];
    uint64_t v85 = (char *)v10 + v84;
    uint64_t v86 = (char *)a2 + v84;
    uint64_t v87 = *(void *)v86;
    LOBYTE(v72) = v86[8];
    sub_100195B7C(*(void *)v86, v72);
    *(void *)uint64_t v85 = v87;
    v85[8] = v72;
    uint64_t v88 = a3[26];
    uint64_t v89 = a3[27];
    uint64_t v90 = (void *)((char *)v10 + v88);
    uint64_t v91 = (void *)((char *)a2 + v88);
    uint64_t v92 = v91[1];
    *uint64_t v90 = *v91;
    v90[1] = v92;
    uint64_t v93 = (char *)v10 + v89;
    uint64_t v94 = *(void *)((char *)a2 + v89);
    uint64_t v95 = *(void *)((char *)a2 + v89 + 8);
    LOBYTE(v75) = *((unsigned char *)a2 + v89 + 16);
    swift_retain();
    sub_100195B88();
    *(void *)uint64_t v93 = v94;
    *((void *)v93 + 1) = v95;
    v93[16] = v75;
    uint64_t v96 = a3[28];
    uint64_t v97 = a3[29];
    uint64_t v98 = (void *)((char *)v10 + v96);
    uint64_t v99 = (void *)((char *)a2 + v96);
    uint64_t v100 = v99[1];
    *uint64_t v98 = *v99;
    v98[1] = v100;
    *(_DWORD *)((char *)v10 + v97) = *(_DWORD *)((char *)a2 + v97);
    swift_retain();
  }
  swift_retain();
  return v10;
}

_OWORD *sub_100B7D9B4(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10017DF08(&qword_100E62D60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  long long v13 = (char *)a2 + v11;
  uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15))
    {
      uint64_t v16 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v15);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  uint64_t v17 = a3[7];
  long long v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = sub_10017DF08(&qword_100E83C68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = type metadata accessor for TargetWindowSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v21))
    {
      uint64_t v22 = sub_10017DF08(&qword_100EAA930);
      memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v18, v19, v21);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v21);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  uint64_t v23 = a3[8];
  uint64_t v24 = a3[9];
  char v25 = (char *)a1 + v23;
  uint64_t v26 = (char *)a2 + v23;
  *(void *)char v25 = *(void *)v26;
  v25[8] = v26[8];
  uint64_t v27 = (char *)a1 + v24;
  uint64_t v28 = (char *)a2 + v24;
  *(void *)uint64_t v27 = *(void *)v28;
  v27[8] = v28[8];
  uint64_t v29 = a3[10];
  char v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = type metadata accessor for WeatherConditionBackgroundModel();
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32);
  v33(v30, v31, v32);
  uint64_t v34 = a3[12];
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)((char *)a2 + a3[11]);
  CGFloat v35 = (char *)a1 + v34;
  double v36 = (char *)a2 + v34;
  long long v37 = *((_OWORD *)v36 + 1);
  *(_OWORD *)CGFloat v35 = *(_OWORD *)v36;
  *((_OWORD *)v35 + 1) = v37;
  *((void *)v35 + 4) = *((void *)v36 + 4);
  uint64_t v38 = a3[13];
  uint64_t v39 = a3[14];
  uint64_t v40 = (char *)a1 + v38;
  uint64_t v41 = (char *)a2 + v38;
  *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
  *((void *)v40 + 2) = *((void *)v41 + 2);
  *(void *)((char *)a1 + v39) = *(void *)((char *)a2 + v39);
  uint64_t v42 = a3[16];
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  *((unsigned char *)a1 + v42) = *((unsigned char *)a2 + v42);
  uint64_t v43 = a3[17];
  uint64_t v44 = (char *)a1 + v43;
  uint64_t v45 = (char *)a2 + v43;
  uint64_t v46 = type metadata accessor for AnimatedGradient();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v44, v45, v46);
  uint64_t v47 = sub_10017DF08(&qword_100EB4850);
  *(void *)&v44[*(int *)(v47 + 28)] = *(void *)&v45[*(int *)(v47 + 28)];
  uint64_t v48 = a3[18];
  uint64_t v49 = (char *)a1 + v48;
  uint64_t v50 = (char *)a2 + v48;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2 + v48, 1, v32))
  {
    uint64_t v51 = sub_10017DF08(&qword_100E64A60);
    memcpy(v49, v50, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    v33(v49, v50, v32);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, v32);
  }
  uint64_t v52 = sub_10017DF08(&qword_100EB4860);
  *(void *)&v49[*(int *)(v52 + 28)] = *(void *)&v50[*(int *)(v52 + 28)];
  uint64_t v53 = a3[19];
  uint64_t v54 = (char *)a1 + v53;
  uint64_t v55 = (char *)a2 + v53;
  uint64_t v56 = type metadata accessor for TargetWindowSizeClass();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v55, 1, v56))
  {
    uint64_t v57 = sub_10017DF08(&qword_100EAA930);
    memcpy(v54, v55, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v54, v55, v56);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v54, 0, 1, v56);
  }
  uint64_t v58 = sub_10017DF08(&qword_100EB4868);
  *(void *)&v54[*(int *)(v58 + 28)] = *(void *)&v55[*(int *)(v58 + 28)];
  uint64_t v59 = a3[20];
  uint64_t v60 = (char *)a1 + v59;
  uint64_t v61 = (char *)a2 + v59;
  uint64_t v62 = type metadata accessor for CollisionViewMetrics();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v62))
  {
    uint64_t v63 = sub_10017DF08(&qword_100EB4848);
    memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v62);
  }
  uint64_t v64 = sub_10017DF08(&qword_100EB4870);
  *(void *)&v60[*(int *)(v64 + 28)] = *(void *)&v61[*(int *)(v64 + 28)];
  uint64_t v65 = a3[22];
  *(_OWORD *)((char *)a1 + a3[21]) = *(_OWORD *)((char *)a2 + a3[21]);
  *(_OWORD *)((char *)a1 + v65) = *(_OWORD *)((char *)a2 + v65);
  uint64_t v66 = a3[24];
  *(_OWORD *)((char *)a1 + a3[23]) = *(_OWORD *)((char *)a2 + a3[23]);
  uint64_t v67 = (char *)a1 + v66;
  uint64_t v68 = (char *)a2 + v66;
  *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
  v67[16] = v68[16];
  uint64_t v69 = a3[25];
  uint64_t v70 = a3[26];
  char v71 = (char *)a1 + v69;
  uint64_t v72 = (char *)a2 + v69;
  *(void *)char v71 = *(void *)v72;
  v71[8] = v72[8];
  *(_OWORD *)((char *)a1 + v70) = *(_OWORD *)((char *)a2 + v70);
  uint64_t v73 = a3[27];
  uint64_t v74 = a3[28];
  uint64_t v75 = (char *)a1 + v73;
  uint64_t v76 = (char *)a2 + v73;
  v75[16] = v76[16];
  *(_OWORD *)uint64_t v75 = *(_OWORD *)v76;
  *(_OWORD *)((char *)a1 + v74) = *(_OWORD *)((char *)a2 + v74);
  *(_DWORD *)((char *)a1 + a3[29]) = *(_DWORD *)((char *)a2 + a3[29]);
  return a1;
}

void *sub_100B7E06C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_100178110((uint64_t)a1 + v6, &qword_100E62D60);
    uint64_t v9 = sub_10017DF08(&qword_100E62D60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
    uint64_t v11 = a3[6];
    uint64_t v12 = (char *)a1 + v11;
    long long v13 = (char *)a2 + v11;
    sub_100178110((uint64_t)a1 + v11, (uint64_t *)&unk_100EAA560);
    uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15))
      {
        uint64_t v16 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v15);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
    uint64_t v17 = a3[7];
    long long v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    sub_100178110((uint64_t)a1 + v17, &qword_100E83C68);
    uint64_t v20 = sub_10017DF08(&qword_100E83C68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = type metadata accessor for TargetWindowSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v21))
      {
        uint64_t v22 = sub_10017DF08(&qword_100EAA930);
        memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v18, v19, v21);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v21);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
  }
  uint64_t v23 = a3[8];
  uint64_t v24 = (char *)a1 + v23;
  char v25 = (char *)a2 + v23;
  uint64_t v26 = *(void *)v25;
  LOBYTE(v25) = v25[8];
  uint64_t v27 = *(void *)v24;
  char v28 = v24[8];
  *(void *)uint64_t v24 = v26;
  v24[8] = (char)v25;
  sub_10018F6D8(v27, v28);
  uint64_t v29 = a3[9];
  char v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = *(void *)v31;
  LOBYTE(v31) = v31[8];
  uint64_t v33 = *(void *)v30;
  char v34 = v30[8];
  *(void *)char v30 = v32;
  v30[8] = (char)v31;
  sub_10018F6D8(v33, v34);
  uint64_t v35 = a3[10];
  double v36 = (char *)a1 + v35;
  long long v37 = (char *)a2 + v35;
  uint64_t v38 = type metadata accessor for WeatherConditionBackgroundModel();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v39 + 40);
  v40(v36, v37, v38);
  uint64_t v41 = a3[11];
  uint64_t v42 = (void *)((char *)a1 + v41);
  uint64_t v43 = (void *)((char *)a2 + v41);
  uint64_t v44 = v43[1];
  *uint64_t v42 = *v43;
  swift_unknownObjectRelease();
  v42[1] = v44;
  uint64_t v45 = a3[12];
  uint64_t v46 = (char *)a1 + v45;
  uint64_t v47 = (char *)a2 + v45;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1 + v45);
  long long v48 = *((_OWORD *)v47 + 1);
  *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
  *((_OWORD *)v46 + 1) = v48;
  *((void *)v46 + 4) = *((void *)v47 + 4);
  uint64_t v49 = a3[13];
  uint64_t v50 = (char *)a1 + v49;
  uint64_t v51 = (char *)a2 + v49;
  *(_OWORD *)uint64_t v50 = *(_OWORD *)v51;
  *((void *)v50 + 2) = *((void *)v51 + 2);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[14]) = *(void *)((char *)a2 + a3[14]);
  swift_release();
  uint64_t v52 = a3[16];
  *(void *)((char *)a1 + a3[15]) = *(void *)((char *)a2 + a3[15]);
  *((unsigned char *)a1 + v52) = *((unsigned char *)a2 + v52);
  uint64_t v53 = a3[17];
  uint64_t v54 = (char *)a1 + v53;
  uint64_t v55 = (char *)a2 + v53;
  uint64_t v56 = type metadata accessor for AnimatedGradient();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 40))(v54, v55, v56);
  uint64_t v57 = sub_10017DF08(&qword_100EB4850);
  *(void *)&v54[*(int *)(v57 + 28)] = *(void *)&v55[*(int *)(v57 + 28)];
  swift_release();
  uint64_t v58 = a3[18];
  uint64_t v59 = (char *)a1 + v58;
  uint64_t v60 = (char *)a2 + v58;
  int v61 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1 + v58, 1, v38);
  int v62 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v38);
  if (v61)
  {
    if (!v62)
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v59, v60, v38);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, 0, 1, v38);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (v62)
  {
    (*(void (**)(char *, uint64_t))(v39 + 8))(v59, v38);
LABEL_22:
    uint64_t v63 = sub_10017DF08(&qword_100E64A60);
    memcpy(v59, v60, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_23;
  }
  v40(v59, v60, v38);
LABEL_23:
  uint64_t v64 = sub_10017DF08(&qword_100EB4860);
  *(void *)&v59[*(int *)(v64 + 28)] = *(void *)&v60[*(int *)(v64 + 28)];
  swift_release();
  uint64_t v65 = a3[19];
  uint64_t v66 = (char *)a1 + v65;
  uint64_t v67 = (char *)a2 + v65;
  uint64_t v68 = type metadata accessor for TargetWindowSizeClass();
  int v69 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, v68);
  int v70 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v67, 1, v68);
  if (v69)
  {
    if (!v70)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v66, v67, v68);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v66, 0, 1, v68);
      goto LABEL_29;
    }
    goto LABEL_28;
  }
  uint64_t v71 = *(void *)(v68 - 8);
  if (v70)
  {
    (*(void (**)(char *, uint64_t))(v71 + 8))(v66, v68);
LABEL_28:
    uint64_t v72 = sub_10017DF08(&qword_100EAA930);
    memcpy(v66, v67, *(void *)(*(void *)(v72 - 8) + 64));
    goto LABEL_29;
  }
  (*(void (**)(char *, char *, uint64_t))(v71 + 40))(v66, v67, v68);
LABEL_29:
  uint64_t v73 = sub_10017DF08(&qword_100EB4868);
  *(void *)&v66[*(int *)(v73 + 28)] = *(void *)&v67[*(int *)(v73 + 28)];
  swift_release();
  uint64_t v74 = a3[20];
  uint64_t v75 = (char *)a1 + v74;
  uint64_t v76 = (char *)a2 + v74;
  uint64_t v77 = type metadata accessor for CollisionViewMetrics();
  int v78 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v75, 1, v77);
  int v79 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v76, 1, v77);
  if (!v78)
  {
    uint64_t v80 = *(void *)(v77 - 8);
    if (!v79)
    {
      (*(void (**)(char *, char *, uint64_t))(v80 + 40))(v75, v76, v77);
      goto LABEL_35;
    }
    (*(void (**)(char *, uint64_t))(v80 + 8))(v75, v77);
    goto LABEL_34;
  }
  if (v79)
  {
LABEL_34:
    uint64_t v81 = sub_10017DF08(&qword_100EB4848);
    memcpy(v75, v76, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_35;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 32))(v75, v76, v77);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v75, 0, 1, v77);
LABEL_35:
  uint64_t v82 = sub_10017DF08(&qword_100EB4870);
  *(void *)&v75[*(int *)(v82 + 28)] = *(void *)&v76[*(int *)(v82 + 28)];
  swift_release();
  uint64_t v83 = a3[21];
  uint64_t v84 = (char *)a1 + v83;
  uint64_t v85 = (char *)a2 + v83;
  *(void *)((char *)a1 + v83) = *(void *)((char *)a2 + v83);
  swift_release();
  *((void *)v84 + 1) = *((void *)v85 + 1);
  swift_release();
  uint64_t v86 = a3[22];
  uint64_t v87 = (void *)((char *)a1 + v86);
  uint64_t v88 = (void *)((char *)a2 + v86);
  *uint64_t v87 = *v88;
  v87[1] = v88[1];
  swift_release();
  uint64_t v89 = a3[23];
  uint64_t v90 = (void *)((char *)a1 + v89);
  uint64_t v91 = (void *)((char *)a2 + v89);
  *uint64_t v90 = *v91;
  v90[1] = v91[1];
  swift_release();
  uint64_t v92 = a3[24];
  uint64_t v93 = (char *)a1 + v92;
  uint64_t v94 = (char *)a2 + v92;
  char v95 = v94[16];
  *(_OWORD *)uint64_t v93 = *(_OWORD *)v94;
  v93[16] = v95;
  sub_10018F6E4();
  uint64_t v96 = a3[25];
  uint64_t v97 = (char *)a1 + v96;
  uint64_t v98 = (char *)a2 + v96;
  uint64_t v99 = *(void *)v98;
  LOBYTE(v98) = v98[8];
  uint64_t v100 = *(void *)v97;
  char v101 = v97[8];
  *(void *)uint64_t v97 = v99;
  v97[8] = (char)v98;
  sub_10018F6D8(v100, v101);
  uint64_t v102 = a3[26];
  uint64_t v103 = (void *)((char *)a1 + v102);
  char v104 = (void *)((char *)a2 + v102);
  uint64_t v106 = *v104;
  uint64_t v105 = v104[1];
  *uint64_t v103 = v106;
  v103[1] = v105;
  swift_release();
  uint64_t v107 = a3[27];
  uint64_t v108 = (char *)a1 + v107;
  uint64_t v109 = (char *)a2 + v107;
  char v110 = v109[16];
  *(_OWORD *)uint64_t v108 = *(_OWORD *)v109;
  v108[16] = v110;
  sub_10018F6E4();
  uint64_t v111 = a3[28];
  uint64_t v112 = (char *)a1 + v111;
  uint64_t v113 = (char *)a2 + v111;
  *(void *)((char *)a1 + v111) = *(void *)((char *)a2 + v111);
  swift_release();
  *((void *)v112 + 1) = *((void *)v113 + 1);
  swift_release();
  *(_DWORD *)((char *)a1 + a3[29]) = *(_DWORD *)((char *)a2 + a3[29]);
  return a1;
}

uint64_t sub_100B7EA04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B7EA18);
}

uint64_t sub_100B7EA18(uint64_t a1, uint64_t a2, int *a3)
{
  sub_10017DF08(&qword_100E79530);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a3[5];
  }
  else
  {
    sub_10017DF08((uint64_t *)&unk_100EAA540);
    sub_100162F30();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v9 = a3[6];
    }
    else
    {
      sub_10017DF08(&qword_100EB4878);
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a2)
      {
        uint64_t v8 = v12;
        uint64_t v9 = a3[7];
      }
      else
      {
        type metadata accessor for WeatherConditionBackgroundModel();
        sub_100162F30();
        if (*(_DWORD *)(v15 + 84) == a2)
        {
          uint64_t v8 = v14;
          uint64_t v9 = a3[10];
        }
        else
        {
          if (a2 == 0x7FFFFFFF) {
            return sub_10019DE74(a3[11]);
          }
          sub_10017DF08(&qword_100EB4850);
          sub_100162F30();
          if (*(_DWORD *)(v18 + 84) == a2)
          {
            uint64_t v8 = v17;
            uint64_t v9 = a3[17];
          }
          else
          {
            sub_10017DF08(&qword_100EB4860);
            sub_100162F30();
            if (*(_DWORD *)(v20 + 84) == a2)
            {
              uint64_t v8 = v19;
              uint64_t v9 = a3[18];
            }
            else
            {
              sub_10017DF08(&qword_100EB4868);
              sub_100162F30();
              if (*(_DWORD *)(v22 + 84) == a2)
              {
                uint64_t v8 = v21;
                uint64_t v9 = a3[19];
              }
              else
              {
                uint64_t v8 = sub_10017DF08(&qword_100EB4870);
                uint64_t v9 = a3[20];
              }
            }
          }
        }
      }
    }
  }

  return _s7Weather24LocationCompositionStateOwet_0(a1 + v9, a2, v8);
}

uint64_t sub_100B7EBAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B7EBC0);
}

void sub_100B7EBC0()
{
  sub_100150288();
  sub_10017DF08(&qword_100E79530);
  sub_100162F30();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v2[5];
  }
  else
  {
    sub_10017DF08((uint64_t *)&unk_100EAA540);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == v3)
    {
      uint64_t v6 = v8;
      uint64_t v7 = v2[6];
    }
    else
    {
      sub_10017DF08(&qword_100EB4878);
      sub_100162F30();
      if (*(_DWORD *)(v11 + 84) == v3)
      {
        uint64_t v6 = v10;
        uint64_t v7 = v2[7];
      }
      else
      {
        type metadata accessor for WeatherConditionBackgroundModel();
        sub_100162F30();
        if (*(_DWORD *)(v13 + 84) == v3)
        {
          uint64_t v6 = v12;
          uint64_t v7 = v2[10];
        }
        else
        {
          if (v3 == 0x7FFFFFFF)
          {
            *(void *)(v1 + v2[11]) = (v0 - 1);
            return;
          }
          sub_10017DF08(&qword_100EB4850);
          sub_100162F30();
          if (*(_DWORD *)(v15 + 84) == v3)
          {
            uint64_t v6 = v14;
            uint64_t v7 = v2[17];
          }
          else
          {
            sub_10017DF08(&qword_100EB4860);
            sub_100162F30();
            if (*(_DWORD *)(v17 + 84) == v3)
            {
              uint64_t v6 = v16;
              uint64_t v7 = v2[18];
            }
            else
            {
              sub_10017DF08(&qword_100EB4868);
              sub_100162F30();
              if (*(_DWORD *)(v19 + 84) == v3)
              {
                uint64_t v6 = v18;
                uint64_t v7 = v2[19];
              }
              else
              {
                uint64_t v6 = sub_10017DF08(&qword_100EB4870);
                uint64_t v7 = v2[20];
              }
            }
          }
        }
      }
    }
  }

  _s7Weather24LocationCompositionStateOwst_0(v1 + v7, v0, v0, v6);
}

uint64_t destroy for OptionalMatchedGeometryEffectModifier(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 56);
  char v3 = *(unsigned char *)(a1 + 64);

  return sub_10018F6D8(v2, v3);
}

uint64_t initializeWithCopy for OptionalMatchedGeometryEffectModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)(a2 + 56);
  char v5 = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  sub_100195B7C(v4, v5);
  *(void *)(a1 + 56) = v4;
  *(unsigned char *)(a1 + 64) = v5;
  return a1;
}

uint64_t assignWithCopy for OptionalMatchedGeometryEffectModifier(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = v2[2];
  *(_DWORD *)(a1 + 24) = *((_DWORD *)v2 + 6);
  *(void *)(a1 + 32) = v2[4];
  *(void *)(a1 + 40) = v2[5];
  *(unsigned char *)(a1 + 48) = *((unsigned char *)v2 + 48);
  uint64_t v4 = v2[7];
  LOBYTE(v2) = *((unsigned char *)v2 + 64);
  sub_100195B7C(v4, (char)v2);
  uint64_t v5 = *(void *)(a1 + 56);
  char v6 = *(unsigned char *)(a1 + 64);
  *(void *)(a1 + 56) = v4;
  *(unsigned char *)(a1 + 64) = (_BYTE)v2;
  sub_10018F6D8(v5, v6);
  return a1;
}

void *initializeWithTake for OptionalMatchedGeometryEffectModifier(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x41uLL);
}

uint64_t assignWithTake for OptionalMatchedGeometryEffectModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  char v5 = *(unsigned char *)(a2 + 64);
  uint64_t v6 = *(void *)(a1 + 56);
  char v7 = *(unsigned char *)(a1 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = v5;
  sub_10018F6D8(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for OptionalMatchedGeometryEffectModifier(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 65))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OptionalMatchedGeometryEffectModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)id result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 65) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OptionalMatchedGeometryEffectModifier()
{
  return &type metadata for OptionalMatchedGeometryEffectModifier;
}

unint64_t sub_100B7EFCC()
{
  unint64_t result = qword_100EB4998;
  if (!qword_100EB4998)
  {
    sub_10018C6DC(&qword_100EB4838);
    sub_1001246C8(&qword_100EB49A0, &qword_100EB4840);
    sub_1001CA9B8((unint64_t *)&qword_100E85A50, (void (*)(uint64_t))type metadata accessor for WeatherConditionBackgroundModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB4998);
  }
  return result;
}

uint64_t sub_100B7F09C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100B7F0C0()
{
  return sub_100225B6C();
}

uint64_t sub_100B7F0DC()
{
  uint64_t v0 = type metadata accessor for WeatherConditionBackgroundModifier(0);
  sub_1001627C0(v0);
  uint64_t v1 = sub_10017238C();

  return sub_100B77948(v1, v2);
}

uint64_t sub_100B7F124()
{
  return sub_100B7F318();
}

unint64_t sub_100B7F13C()
{
  unint64_t result = qword_100EB4A50;
  if (!qword_100EB4A50)
  {
    sub_10018C6DC(&qword_100EB49F8);
    sub_10018C6DC(&qword_100EB49E8);
    type metadata accessor for DynamicTypeSize();
    sub_10018C6DC(&qword_100EB49E0);
    type metadata accessor for WeatherConditionBackgroundModel();
    sub_1001246C8(&qword_100EB4A40, &qword_100EB49E0);
    sub_1001CA9B8((unint64_t *)&qword_100E64A80, (void (*)(uint64_t))&type metadata accessor for WeatherConditionBackgroundModel);
    swift_getOpaqueTypeConformance2();
    sub_1001CA9B8(&qword_100E651F0, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
    swift_getOpaqueTypeConformance2();
    sub_1001246C8(&qword_100EB4A58, &qword_100EB4A60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB4A50);
  }
  return result;
}

uint64_t sub_100B7F300()
{
  return sub_100B7F318();
}

uint64_t sub_100B7F318()
{
  uint64_t v0 = type metadata accessor for WeatherConditionBackgroundModifier(0);
  sub_1001627C0(v0);
  uint64_t v1 = sub_100183368();

  return v2(v1);
}

uint64_t sub_100B7F37C()
{
  return sub_100225B6C();
}

uint64_t sub_100B7F3A0()
{
  return sub_1002259B4((uint64_t (*)(uint64_t))sub_100B78A18);
}

uint64_t sub_100B7F3C0(uint64_t a1)
{
  return sub_100225AFC(a1, (uint64_t (*)(uint64_t))sub_100B7936C);
}

uint64_t sub_100B7F3D8()
{
  sub_10017B0B8();
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = type metadata accessor for WeatherConditionBackgroundModel();
  sub_100179C0C();
  uint64_t v7 = v6;
  uint64_t v8 = v1 + ((v4 + 16) & ~v4);
  swift_release();
  sub_10017DF08(&qword_100E62D60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for DynamicTypeSize();
    sub_100162E4C();
    sub_100162F0C();
    v9();
  }
  else
  {
    swift_release();
  }
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for UserInterfaceSizeClass();
    if (!sub_1001632AC(v10))
    {
      sub_100162880();
      sub_100162F0C();
      v11();
    }
  }
  else
  {
    swift_release();
  }
  sub_10017DF08(&qword_100E83C68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for TargetWindowSizeClass();
    if (!sub_1001632AC(v12))
    {
      sub_100162880();
      sub_100162F0C();
      v13();
    }
  }
  else
  {
    swift_release();
  }
  sub_10018C6B0(v0[8]);
  sub_10018C6B0(v0[9]);
  uint64_t v14 = *(void (**)(void))(v7 + 8);
  sub_100164944();
  v14();
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v8 + v0[12]);
  swift_bridgeObjectRelease();
  swift_release();
  type metadata accessor for AnimatedGradient();
  sub_100162E4C();
  sub_100162F0C();
  v15();
  sub_10017DF08(&qword_100EB4850);
  sub_10019DCE8();
  uint64_t v16 = v8 + v0[18];
  if (!sub_1001A1B54()) {
    ((void (*)(uint64_t, uint64_t))v14)(v16, v5);
  }
  sub_10017DF08(&qword_100EB4860);
  sub_10019DCE8();
  uint64_t v17 = v8 + v0[19];
  uint64_t v18 = type metadata accessor for TargetWindowSizeClass();
  if (!sub_1001632AC(v18))
  {
    sub_100162880();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v2);
  }
  sub_10017DF08(&qword_100EB4868);
  sub_10019DCE8();
  uint64_t v20 = v8 + v0[20];
  uint64_t v21 = type metadata accessor for CollisionViewMetrics();
  if (!_s7Weather24LocationCompositionStateOwet_0(v20, 1, v21))
  {
    sub_100162880();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v20, v21);
  }
  sub_10017DF08(&qword_100EB4870);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_10018F6E4();
  sub_10018C6B0(v0[25]);
  swift_release();
  sub_10018F6E4();
  swift_release();
  swift_release();
  sub_100164944();
  v14();

  return swift_deallocObject();
}

uint64_t sub_100B7F834()
{
  sub_100162EA0();
  sub_10017B0B8();
  swift_release();
  sub_10019D3B0();
  sub_10017DF08(&qword_100E62D60);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for DynamicTypeSize();
    sub_100162E4C();
    sub_100162F0C();
    v0();
  }
  else
  {
    swift_release();
  }
  sub_100188768();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (sub_10017A0C8() == 1)
  {
    uint64_t v1 = type metadata accessor for UserInterfaceSizeClass();
    if (!sub_100129098(v1))
    {
      sub_100162880();
      sub_100162F0C();
      v2();
    }
  }
  else
  {
    swift_release();
  }
  sub_1001640A0();
  sub_10017DF08(&qword_100E83C68);
  if (sub_10017A0C8() == 1)
  {
    uint64_t v3 = type metadata accessor for TargetWindowSizeClass();
    if (!sub_100129098(v3))
    {
      sub_100162880();
      sub_100162F0C();
      v4();
    }
  }
  else
  {
    swift_release();
  }
  sub_100181C48();
  sub_100162E4C();
  uint64_t v6 = *(void (**)(uint64_t))(v5 + 8);
  uint64_t v7 = sub_100185804();
  v6(v7);
  sub_100188EA4();
  sub_1001A4A84();
  sub_1001D14B0();
  sub_100188CC0();
  sub_100162E4C();
  sub_100162F0C();
  v8();
  sub_10017DF08(&qword_100EB4850);
  sub_10019DCE8();
  if (!sub_1001A1B54())
  {
    uint64_t v9 = sub_100186E74();
    v6(v9);
  }
  sub_10017DF08(&qword_100EB4860);
  sub_10019DCE8();
  uint64_t v10 = sub_10019B810();
  if (!sub_100129098(v10))
  {
    sub_100162880();
    uint64_t v11 = sub_100162CFC();
    v12(v11);
  }
  sub_10017DF08(&qword_100EB4868);
  sub_1001D16B8();
  sub_10017F744();
  if (!sub_100164A14((uint64_t)v6))
  {
    sub_100162880();
    uint64_t v13 = sub_10018AC9C();
    v14(v13);
  }
  sub_10017DF08(&qword_100EB4870);
  sub_10012B664();
  sub_1001833B4();
  swift_release();
  sub_1001A36A8();
  sub_1001A36A8();
  sub_1001D2300();
  sub_1001A02F0();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100162694();
  return swift_deallocObject();
}

uint64_t sub_100B7FB34()
{
  sub_10017B0B8();
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v5 = *(void *)(v4 + 64) + v3;
  uint64_t v6 = sub_10017DF08(&qword_100EAA930);
  sub_100164920(v6);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v1 + v3;
  swift_release();
  sub_10017DF08(&qword_100E62D60);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for DynamicTypeSize();
    sub_100162E4C();
    sub_100162F0C();
    v10();
  }
  else
  {
    swift_release();
  }
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (sub_10017A0C8() == 1)
  {
    uint64_t v11 = type metadata accessor for UserInterfaceSizeClass();
    if (!sub_100129098(v11))
    {
      sub_100162880();
      sub_100162F0C();
      v12();
    }
  }
  else
  {
    swift_release();
  }
  sub_10017DF08(&qword_100E83C68);
  if (sub_10017A0C8() == 1)
  {
    uint64_t v13 = type metadata accessor for TargetWindowSizeClass();
    if (!sub_100129098(v13))
    {
      sub_100162880();
      sub_100162F0C();
      v14();
    }
  }
  else
  {
    swift_release();
  }
  uint64_t v15 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + v8;
  sub_10017B358(v0[8]);
  sub_10017B358(v0[9]);
  sub_100176DB8();
  uint64_t v16 = type metadata accessor for WeatherConditionBackgroundModel();
  sub_100162E4C();
  uint64_t v18 = *(void (**)(unint64_t, uint64_t))(v17 + 8);
  v18(v5, v16);
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v9 + v0[12]);
  swift_bridgeObjectRelease();
  swift_release();
  sub_100176DB8();
  type metadata accessor for AnimatedGradient();
  sub_100162E4C();
  sub_100162F0C();
  v19();
  sub_10017DF08(&qword_100EB4850);
  sub_10019DCE8();
  unint64_t v20 = v9 + v0[18];
  if (!sub_1001A1B54()) {
    v18(v20, v16);
  }
  uint64_t v21 = v15 + 8;
  sub_10017DF08(&qword_100EB4860);
  sub_10019DCE8();
  sub_100176DB8();
  uint64_t v22 = type metadata accessor for TargetWindowSizeClass();
  if (!sub_1001A1B54())
  {
    sub_100162880();
    (*(void (**)(unint64_t, uint64_t))(v23 + 8))(v20, v22);
  }
  uint64_t v24 = v21 & ~v8;
  sub_10017DF08(&qword_100EB4868);
  sub_10019DCE8();
  sub_100176DB8();
  uint64_t v25 = type metadata accessor for CollisionViewMetrics();
  if (!sub_1001632AC(v25))
  {
    sub_100162880();
    (*(void (**)(unint64_t, uint64_t))(v26 + 8))(v20, v21);
  }
  sub_10017DF08(&qword_100EB4870);
  sub_10019DCE8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_10018F6E4();
  sub_10017B358(v0[25]);
  swift_release();
  sub_10018F6E4();
  swift_release();
  swift_release();
  if (!sub_100164A14(v1 + v24))
  {
    sub_100162880();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v1 + v24, v22);
  }

  return swift_deallocObject();
}

uint64_t sub_100B7FF94()
{
  uint64_t v1 = type metadata accessor for WeatherConditionBackgroundModifier(0);
  sub_100164920(v1);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v5 = (*(void *)(v4 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = sub_10017DF08(&qword_100EAA930);
  sub_1001627C0(v6);
  double v8 = *(double *)(v0 + v5);
  uint64_t v9 = (void (*)(char *, uint64_t, uint64_t))(v0
                                                     + ((v5 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)));

  return sub_100B786AC(v0 + v3, v9, v8);
}

uint64_t sub_100B80030()
{
  sub_100162EA0();
  sub_10017B0B8();
  swift_release();
  sub_10019D3B0();
  sub_10017DF08(&qword_100E62D60);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for DynamicTypeSize();
    sub_100162E4C();
    sub_100162F0C();
    v0();
  }
  else
  {
    swift_release();
  }
  sub_100188768();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (sub_10017A0C8() == 1)
  {
    uint64_t v1 = type metadata accessor for UserInterfaceSizeClass();
    if (!sub_100129098(v1))
    {
      sub_100162880();
      sub_100162F0C();
      v2();
    }
  }
  else
  {
    swift_release();
  }
  sub_1001640A0();
  sub_10017DF08(&qword_100E83C68);
  if (sub_10017A0C8() == 1)
  {
    uint64_t v3 = type metadata accessor for TargetWindowSizeClass();
    if (!sub_100129098(v3))
    {
      sub_100162880();
      sub_100162F0C();
      v4();
    }
  }
  else
  {
    swift_release();
  }
  sub_100181C48();
  sub_100162E4C();
  uint64_t v6 = *(void (**)(uint64_t))(v5 + 8);
  uint64_t v7 = sub_100185804();
  v6(v7);
  sub_100188EA4();
  sub_1001A4A84();
  sub_1001D14B0();
  sub_100188CC0();
  sub_100162E4C();
  sub_100162F0C();
  v8();
  sub_10017DF08(&qword_100EB4850);
  sub_10019DCE8();
  if (!sub_1001A1B54())
  {
    uint64_t v9 = sub_100186E74();
    v6(v9);
  }
  sub_10017DF08(&qword_100EB4860);
  sub_10019DCE8();
  uint64_t v10 = sub_10019B810();
  if (!sub_100129098(v10))
  {
    sub_100162880();
    uint64_t v11 = sub_100162CFC();
    v12(v11);
  }
  sub_10017DF08(&qword_100EB4868);
  sub_1001D16B8();
  sub_10017F744();
  if (!sub_100164A14((uint64_t)v6))
  {
    sub_100162880();
    uint64_t v13 = sub_10018AC9C();
    v14(v13);
  }
  sub_10017DF08(&qword_100EB4870);
  sub_10012B664();
  sub_1001833B4();
  swift_release();
  sub_1001A36A8();
  sub_1001A36A8();
  sub_1001D2300();
  sub_1001A02F0();
  swift_release();
  sub_100162694();
  return swift_deallocObject();
}

uint64_t sub_100B80314()
{
  uint64_t v1 = type metadata accessor for WeatherConditionBackgroundModifier(0);
  sub_100164920(v1);
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  unint64_t v6 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  int v7 = *(unsigned __int8 *)(v0 + v6 + *(void *)(v5 + 64));

  return sub_100B77EE4(v0 + v6, v7);
}

uint64_t sub_100B80378()
{
  return sub_1002259B4(sub_100B7774C);
}

uint64_t sub_100B80394()
{
  return sub_1002259B4((uint64_t (*)(uint64_t))sub_100B77398);
}

uint64_t sub_100B803AC()
{
  return sub_100B7BD34();
}

unint64_t sub_100B803C8()
{
  unint64_t result = qword_100EB4B30;
  if (!qword_100EB4B30)
  {
    sub_10018C6DC(&qword_100EB4B00);
    sub_100B80444();
    sub_1001CB0D4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB4B30);
  }
  return result;
}

unint64_t sub_100B80444()
{
  unint64_t result = qword_100EB4B38;
  if (!qword_100EB4B38)
  {
    sub_10018C6DC(&qword_100EB4B20);
    sub_100B804B8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB4B38);
  }
  return result;
}

unint64_t sub_100B804B8()
{
  unint64_t result = qword_100EB4B40;
  if (!qword_100EB4B40)
  {
    sub_10018C6DC(&qword_100EB4B18);
    sub_100B80534();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB4B40);
  }
  return result;
}

unint64_t sub_100B80534()
{
  unint64_t result = qword_100EB4B48;
  if (!qword_100EB4B48)
  {
    sub_10018C6DC(&qword_100EB4B10);
    sub_1001246C8(&qword_100EB4B50, &qword_100EB4B08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB4B48);
  }
  return result;
}

uint64_t sub_100B805DC()
{
  uint64_t v1 = type metadata accessor for WeatherVFXViewModel();
  sub_100179C0C();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  sub_10017B0B8();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  swift_release();
  sub_10019D3B0();
  sub_10017DF08(&qword_100E62D60);
  if (sub_10017A0C8() == 1)
  {
    type metadata accessor for DynamicTypeSize();
    sub_100162E4C();
    sub_100162F0C();
    v5();
  }
  else
  {
    swift_release();
  }
  sub_100188768();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (sub_10017A0C8() == 1)
  {
    uint64_t v6 = type metadata accessor for UserInterfaceSizeClass();
    if (!sub_100129098(v6))
    {
      sub_100162880();
      sub_100162F0C();
      v7();
    }
  }
  else
  {
    swift_release();
  }
  sub_1001640A0();
  sub_10017DF08(&qword_100E83C68);
  if (sub_10017A0C8() == 1)
  {
    uint64_t v8 = type metadata accessor for TargetWindowSizeClass();
    if (!sub_100129098(v8))
    {
      sub_100162880();
      sub_100162F0C();
      v9();
    }
  }
  else
  {
    swift_release();
  }
  sub_100181C48();
  sub_100162E4C();
  uint64_t v11 = *(void (**)(uint64_t))(v10 + 8);
  uint64_t v12 = sub_100185804();
  v11(v12);
  sub_100188EA4();
  sub_1001A4A84();
  sub_1001D14B0();
  sub_100188CC0();
  sub_100162E4C();
  sub_100162F0C();
  v13();
  sub_10017DF08(&qword_100EB4850);
  sub_10019DCE8();
  if (!sub_1001A1B54())
  {
    uint64_t v14 = sub_100186E74();
    v11(v14);
  }
  sub_10017DF08(&qword_100EB4860);
  sub_10019DCE8();
  uint64_t v15 = sub_10019B810();
  if (!sub_100129098(v15))
  {
    sub_100162880();
    uint64_t v16 = sub_100162CFC();
    v17(v16);
  }
  sub_10017DF08(&qword_100EB4868);
  sub_1001D16B8();
  sub_10017F744();
  if (!sub_100164A14((uint64_t)v11))
  {
    sub_100162880();
    uint64_t v18 = sub_10018AC9C();
    v19(v18);
  }
  sub_10017DF08(&qword_100EB4870);
  sub_10012B664();
  sub_1001833B4();
  swift_release();
  sub_1001A36A8();
  sub_1001A36A8();
  sub_1001D2300();
  sub_1001A02F0();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100B80930@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for WeatherVFXViewModel();
  sub_100164920(v5);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = type metadata accessor for WeatherConditionBackgroundModifier(0);
  sub_1001627C0(v8);

  return sub_100B7B8B8(a1, v2 + v7, a2);
}

unint64_t sub_100B809D0()
{
  unint64_t result = qword_100EB4C00;
  if (!qword_100EB4C00)
  {
    sub_10018C6DC(&qword_100EB4BE0);
    sub_1001246C8(&qword_100EB4BF8, &qword_100EB4BF0);
    sub_1001246C8(&qword_100E743F8, &qword_100E74400);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB4C00);
  }
  return result;
}

unint64_t sub_100B80A98()
{
  unint64_t result = qword_100EB4C08;
  if (!qword_100EB4C08)
  {
    sub_10018C6DC(&qword_100EB4C10);
    sub_10009CADC();
    sub_1001246C8(&qword_100EB49D8, &qword_100EB49A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB4C08);
  }
  return result;
}

unint64_t sub_100B80B3C()
{
  unint64_t result = qword_100EB4C18;
  if (!qword_100EB4C18)
  {
    sub_10018C6DC(&qword_100EB4C20);
    sub_1001246C8(&qword_100EB4BF8, &qword_100EB4BF0);
    sub_100B809D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB4C18);
  }
  return result;
}

uint64_t *sub_100B80BFC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_100B80CF8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
  if (!result)
  {
    unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
    return v4(a1, v2);
  }
  return result;
}

void *sub_100B80D80(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *sub_100B80E40(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  return a1;
}

void *sub_100B80F88(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

void *sub_100B81048(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  return a1;
}

uint64_t sub_100B81190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B811A4);
}

uint64_t sub_100B811A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  unsigned int v5 = _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_100B811EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B81200);
}

uint64_t sub_100B81200(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for Date();

  return _s7Weather24LocationCompositionStateOwst_0(a1, v5, a3, v6);
}

uint64_t sub_100B8125C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();

  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
}

uint64_t sub_100B812A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v4);
}

uint64_t type metadata accessor for ScrubberDateSelection()
{
  uint64_t result = qword_100EB4C98;
  if (!qword_100EB4C98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100B81334(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = type metadata accessor for ScrubberDateSelection();
  __chkstk_darwin(v9 - 8);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_10017DF08(&qword_100EB4CA8);
  __chkstk_darwin(v13 - 8);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v18 = v15 - v14 + *(int *)(v17 + 56);
  sub_100B81554(a1, v15 - v14);
  sub_100B81554(a2, v18);
  sub_10017A364(v16);
  if (!v20)
  {
    sub_100B81554(v16, v12);
    sub_10017A364(v18);
    if (!v20)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v8, v18, v4);
      char v19 = static Date.== infix(_:_:)();
      uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
      v21(v8, v4);
      v21(v12, v4);
      sub_1002AEE0C(v16);
      return v19 & 1;
    }
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v12, v4);
LABEL_9:
    sub_100B815B8(v16);
    char v19 = 0;
    return v19 & 1;
  }
  sub_10017A364(v18);
  if (!v20) {
    goto LABEL_9;
  }
  sub_1002AEE0C(v16);
  char v19 = 1;
  return v19 & 1;
}

uint64_t sub_100B81554(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScrubberDateSelection();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100B815B8(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100EB4CA8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *sub_100B81618(uint64_t *a1, unsigned __int8 *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *(char **)a2;
    *a1 = *(void *)a2;
    a1 = (uint64_t *)&v9[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for MainAction();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v8 = type metadata accessor for AppConfiguration();
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        goto LABEL_216;
      case 2u:
        uint64_t v17 = type metadata accessor for EnvironmentAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v28 = type metadata accessor for Locale();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v28 - 8) + 16))(a1, a2, v28);
            goto LABEL_215;
          case 3u:
            uint64_t v36 = type metadata accessor for ActivityAction();
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 1)
            {
              type metadata accessor for PreviewLocation();
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  uint64_t v207 = type metadata accessor for LocationOfInterest();
                  (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v207 - 8) + 16))(a1, a2, v207);
                  break;
                case 2u:
                  uint64_t v208 = *((void *)a2 + 1);
                  uint64_t v398 = *(void **)a2;
                  *a1 = *(void *)a2;
                  a1[1] = v208;
                  uint64_t v209 = *((void *)a2 + 3);
                  a1[2] = *((void *)a2 + 2);
                  a1[3] = v209;
                  uint64_t v210 = *((void *)a2 + 5);
                  a1[4] = *((void *)a2 + 4);
                  a1[5] = v210;
                  a1[6] = *((void *)a2 + 6);
                  uint64_t v211 = type metadata accessor for SearchLocation();
                  uint64_t v212 = *(int *)(v211 + 32);
                  uint64_t v404 = (char *)a1 + v212;
                  uint64_t v409 = v211;
                  uint64_t v387 = &a2[v212];
                  uint64_t v213 = type metadata accessor for Location();
                  id v214 = v398;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v387, 1, v213))
                  {
                    uint64_t v215 = sub_10017DF08(&qword_100E639E8);
                    memcpy(v404, v387, *(void *)(*(void *)(v215 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v213 - 8) + 16))(v404, v387, v213);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v404, 0, 1, v213);
                  }
                  uint64_t v362 = *(int *)(v409 + 36);
                  uint64_t v363 = (char *)a1 + v362;
                  uint64_t v364 = &a2[v362];
                  *(_OWORD *)uint64_t v363 = *(_OWORD *)v364;
                  v363[16] = v364[16];
                  break;
                case 3u:
                  *(_OWORD *)a1 = *(_OWORD *)a2;
                  uint64_t v216 = *((void *)a2 + 3);
                  a1[2] = *((void *)a2 + 2);
                  a1[3] = v216;
                  swift_bridgeObjectRetain();
                  break;
                default:
                  uint64_t v146 = type metadata accessor for Location();
                  (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v146 - 8) + 16))(a1, a2, v146);
                  break;
              }
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              if (EnumCaseMultiPayload) {
                goto LABEL_101;
              }
              type metadata accessor for SavedLocation();
              if (swift_getEnumCaseMultiPayload() == 1) {
                uint64_t v94 = type metadata accessor for SavedLocation.Placeholder();
              }
              else {
                uint64_t v94 = type metadata accessor for Location();
              }
              (*(void (**)(uint64_t *, unsigned __int8 *))(*(void *)(v94 - 8) + 16))(a1, a2);
              swift_storeEnumTagMultiPayload();
            }
            goto LABEL_214;
          case 4u:
            uint64_t v84 = *((void *)a2 + 1);
            *a1 = *(void *)a2;
            a1[1] = v84;
            swift_bridgeObjectRetain();
            goto LABEL_215;
          case 9u:
            unint64_t v95 = *((void *)a2 + 1);
            if (v95 >= 2)
            {
              *a1 = *(void *)a2;
              a1[1] = v95;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)a1 = *(_OWORD *)a2;
            }
            goto LABEL_215;
          case 0xBu:
            uint64_t v36 = type metadata accessor for ConfiguredUnitsAction();
            int v96 = swift_getEnumCaseMultiPayload();
            if (v96 == 1)
            {
              uint64_t v147 = type metadata accessor for UnitConfiguration.Temperature();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v147))
              {
                uint64_t v148 = sub_10017DF08(&qword_100E6F620);
                memcpy(a1, a2, *(void *)(*(void *)(v148 - 8) + 64));
              }
              else
              {
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v147 - 8) + 16))(a1, a2, v147);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v147);
              }
            }
            else
            {
              if (v96) {
                goto LABEL_101;
              }
              uint64_t v97 = type metadata accessor for ConfiguredUnit();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v97 - 8) + 16))(a1, a2, v97);
            }
            break;
          default:
            goto LABEL_61;
        }
        goto LABEL_214;
      case 3u:
        uint64_t v10 = type metadata accessor for LocationsAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v11 = type metadata accessor for CurrentLocation();
            if (swift_getEnumCaseMultiPayload() > 2)
            {
              memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
            }
            else
            {
              uint64_t v168 = type metadata accessor for Location();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v168 - 8) + 16))(a1, a2, v168);
              swift_storeEnumTagMultiPayload();
            }
            goto LABEL_142;
          case 1u:
            uint64_t v78 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v78 - 8) + 16))(a1, a2, v78);
            uint64_t v79 = sub_10017DF08(&qword_100E6F628);
            *((unsigned char *)a1 + *(int *)(v79 + 48)) = a2[*(int *)(v79 + 48)];
            goto LABEL_142;
          case 2u:
            uint64_t v80 = *((void *)a2 + 1);
            *a1 = *(void *)a2;
            a1[1] = v80;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_142;
          case 5u:
            *a1 = *(void *)a2;
            swift_bridgeObjectRetain();
            goto LABEL_142;
          case 6u:
            uint64_t v85 = *(void *)a2;
            uint64_t v86 = *((void *)a2 + 1);
            unsigned __int8 v87 = a2[16];
            sub_10015458C(*(void *)a2, v86, v87);
            *a1 = v85;
            a1[1] = v86;
            *((unsigned char *)a1 + 16) = v87;
LABEL_142:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
            break;
        }
        goto LABEL_216;
      case 4u:
        uint64_t v29 = type metadata accessor for NotificationsAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v30 = type metadata accessor for LocationModel();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v30))
            {
              uint64_t v31 = type metadata accessor for NotificationLocation();
              memcpy(a1, a2, *(void *)(*(void *)(v31 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v30 - 8) + 16))(a1, a2, v30);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v30);
            }
            uint64_t v140 = *(int *)(sub_10017DF08((uint64_t *)&unk_100EAC3E0) + 48);
            uint64_t v141 = (char *)a1 + v140;
            uint64_t v142 = &a2[v140];
            uint64_t v143 = type metadata accessor for URL();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v142, 1, v143))
            {
              uint64_t v144 = sub_10017DF08(&qword_100E749B0);
              memcpy(v141, v142, *(void *)(*(void *)(v144 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v143 - 8) + 16))(v141, v142, v143);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v141, 0, 1, v143);
            }
            goto LABEL_119;
          case 2u:
            uint64_t v98 = type metadata accessor for NotificationSubscription.Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v98 - 8) + 16))(a1, a2, v98);
            uint64_t v99 = *(int *)(sub_10017DF08(&qword_100E6F630) + 48);
            uint64_t v100 = (char *)a1 + v99;
            char v101 = &a2[v99];
            uint64_t v102 = type metadata accessor for NotificationSubscription.Kind();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v102 - 8) + 16))(v100, v101, v102);
            goto LABEL_119;
          case 3u:
          case 4u:
            *a1 = *(void *)a2;
            swift_bridgeObjectRetain();
            goto LABEL_119;
          case 5u:
            uint64_t v103 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v103 - 8) + 16))(a1, a2, v103);
            uint64_t v104 = *(int *)(sub_10017DF08(&qword_100E6F638) + 48);
            uint64_t v105 = (char *)a1 + v104;
            uint64_t v106 = &a2[v104];
            uint64_t v107 = type metadata accessor for NotificationSubscription.Kind();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v107 - 8) + 16))(v105, v106, v107);
LABEL_119:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v29 - 8) + 64));
            break;
        }
        goto LABEL_216;
      case 5u:
        uint64_t v17 = type metadata accessor for NotificationsOptInAction();
        int v32 = swift_getEnumCaseMultiPayload();
        switch(v32)
        {
          case 4:
            goto LABEL_15;
          case 3:
            *a1 = *(void *)a2;
            *((unsigned char *)a1 + 8) = a2[8];
            swift_bridgeObjectRetain();
            break;
          case 2:
            uint64_t v33 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v33 - 8) + 16))(a1, a2, v33);
            uint64_t v34 = sub_10017DF08(&qword_100E6BBD8);
            *((unsigned char *)a1 + *(int *)(v34 + 48)) = a2[*(int *)(v34 + 48)];
            break;
          default:
            goto LABEL_61;
        }
        goto LABEL_215;
      case 6u:
        uint64_t v12 = type metadata accessor for ViewAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v13 = type metadata accessor for ListViewAction();
            int v14 = swift_getEnumCaseMultiPayload();
            if (v14 == 2) {
              goto LABEL_121;
            }
            if (v14) {
              goto LABEL_168;
            }
            uint64_t v15 = type metadata accessor for LocationModel();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
            uint64_t v16 = sub_10017DF08(&qword_100E6F640);
            *((unsigned char *)a1 + *(int *)(v16 + 48)) = a2[*(int *)(v16 + 48)];
            goto LABEL_208;
          case 1u:
            uint64_t v13 = type metadata accessor for LocationViewerViewAction();
            int v81 = swift_getEnumCaseMultiPayload();
            if (v81 == 2)
            {
LABEL_121:
              uint64_t v145 = type metadata accessor for Location.Identifier();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v145 - 8) + 16))(a1, a2, v145);
            }
            else if (v81 == 1)
            {
              uint64_t v169 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v169 - 8) + 16))(a1, a2, v169);
            }
            else
            {
              if (v81)
              {
LABEL_168:
                memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
                goto LABEL_209;
              }
              uint64_t v82 = type metadata accessor for LocationModel();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v82 - 8) + 16))(a1, a2, v82);
            }
LABEL_208:
            swift_storeEnumTagMultiPayload();
LABEL_209:
            swift_storeEnumTagMultiPayload();
            break;
          case 3u:
            uint64_t v13 = type metadata accessor for SearchViewAction();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                uint64_t v83 = type metadata accessor for CodableError();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v83 - 8) + 16))(a1, a2, v83);
                goto LABEL_208;
              case 1u:
                *a1 = *(void *)a2;
                swift_bridgeObjectRetain();
                goto LABEL_208;
              case 2u:
                uint64_t v196 = *((void *)a2 + 1);
                *a1 = *(void *)a2;
                a1[1] = v196;
                swift_bridgeObjectRetain();
                goto LABEL_208;
              case 3u:
              case 6u:
                uint64_t v197 = type metadata accessor for Location();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v197 - 8) + 16))(a1, a2, v197);
                goto LABEL_208;
              case 4u:
                uint64_t v198 = type metadata accessor for LocationOfInterest();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v198 - 8) + 16))(a1, a2, v198);
                goto LABEL_208;
              case 5u:
                uint64_t v199 = *((void *)a2 + 1);
                uint64_t v397 = *(void **)a2;
                *a1 = *(void *)a2;
                a1[1] = v199;
                uint64_t v200 = *((void *)a2 + 3);
                a1[2] = *((void *)a2 + 2);
                a1[3] = v200;
                uint64_t v201 = *((void *)a2 + 5);
                a1[4] = *((void *)a2 + 4);
                a1[5] = v201;
                a1[6] = *((void *)a2 + 6);
                uint64_t v202 = type metadata accessor for SearchLocation();
                uint64_t v203 = *(int *)(v202 + 32);
                uint64_t v403 = (char *)a1 + v203;
                uint64_t v408 = v202;
                uint64_t v204 = &a2[v203];
                uint64_t v394 = type metadata accessor for Location();
                id v205 = v397;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v204, 1, v394))
                {
                  uint64_t v206 = sub_10017DF08(&qword_100E639E8);
                  memcpy(v403, v204, *(void *)(*(void *)(v206 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v394 - 8) + 16))(v403, v204, v394);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v403, 0, 1, v394);
                }
                uint64_t v359 = *(int *)(v408 + 36);
                uint64_t v360 = (char *)a1 + v359;
                uint64_t v361 = &a2[v359];
                *(_OWORD *)uint64_t v360 = *(_OWORD *)v361;
                v360[16] = v361[16];
                goto LABEL_208;
              default:
                goto LABEL_168;
            }
          case 4u:
            uint64_t v88 = type metadata accessor for InteractiveMapViewAction();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
              case 1u:
              case 2u:
              case 4u:
                uint64_t v195 = type metadata accessor for Location();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v195 - 8) + 16))(a1, a2, v195);
                goto LABEL_164;
              case 3u:
                uint64_t v194 = type metadata accessor for WeatherMapOverlayKind();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v194 - 8) + 16))(a1, a2, v194);
LABEL_164:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(a1, a2, *(void *)(*(void *)(v88 - 8) + 64));
                break;
            }
            goto LABEL_209;
          case 5u:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *((unsigned char *)a1 + 16) = a2[16];
            *((unsigned char *)a1 + 17) = a2[17];
            *((unsigned char *)a1 + 18) = a2[18];
            uint64_t v89 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
            uint64_t v90 = (char *)a1 + v89;
            uint64_t v91 = &a2[v89];
            uint64_t v92 = type metadata accessor for DynamicTypeSize();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v92 - 8) + 16))(v90, v91, v92);
            goto LABEL_209;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
            goto LABEL_216;
        }
        goto LABEL_216;
      case 7u:
        uint64_t v17 = type metadata accessor for ModalViewAction();
        int v35 = swift_getEnumCaseMultiPayload();
        if (v35 == 3)
        {
          uint64_t v46 = *(void *)a2;
          if ((~*(void *)a2 & 0xF000000000000006) != 0)
          {
            uint64_t v108 = *((void *)a2 + 1);
            uint64_t v109 = *((void *)a2 + 2);
            uint64_t v110 = *((void *)a2 + 3);
            uint64_t v111 = *((void *)a2 + 5);
            uint64_t v382 = *((void *)a2 + 6);
            uint64_t v386 = *((void *)a2 + 4);
            uint64_t v378 = *((void *)a2 + 7);
            uint64_t v392 = *((void *)a2 + 8);
            uint64_t v396 = *((void *)a2 + 9);
            uint64_t v402 = *((void *)a2 + 10);
            uint64_t v406 = *((void *)a2 + 11);
            sub_100274EDC(v46);
            *a1 = v46;
            a1[1] = v108;
            a1[2] = v109;
            a1[3] = v110;
            a1[4] = v386;
            a1[5] = v111;
            a1[6] = v382;
            a1[7] = v378;
            a1[8] = v392;
            a1[9] = v396;
            a1[10] = v402;
            a1[11] = v406;
          }
          else
          {
            memcpy(a1, a2, 0x60uLL);
          }
        }
        else
        {
          if (v35) {
            goto LABEL_61;
          }
          uint64_t v36 = type metadata accessor for LocationPreviewViewAction();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v37 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v37 - 8) + 16))(a1, a2, v37);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
LABEL_101:
            memcpy(a1, a2, *(void *)(*(void *)(v36 - 8) + 64));
          }
        }
        goto LABEL_215;
      case 8u:
        uint64_t v17 = type metadata accessor for LocationViewAction();
        int v38 = swift_getEnumCaseMultiPayload();
        if (v38 == 2)
        {
          uint64_t v57 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v57 - 8) + 16))(a1, a2, v57);
          uint64_t v58 = *(int *)(sub_10017DF08(&qword_100E66450) + 48);
          uint64_t v59 = (char *)a1 + v58;
          uint64_t v60 = &a2[v58];
          uint64_t v61 = type metadata accessor for LocationOfInterest();
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
          uint64_t v62 = *(int *)(sub_10017DF08(&qword_100E66448) + 48);
          uint64_t v63 = (char *)a1 + v62;
          uint64_t v64 = &a2[v62];
          long long v65 = *((_OWORD *)v64 + 1);
          *(_OWORD *)uint64_t v63 = *(_OWORD *)v64;
          *((_OWORD *)v63 + 1) = v65;
          v63[32] = v64[32];
        }
        else if (v38 == 1)
        {
          uint64_t v66 = type metadata accessor for LocationComponentAction(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v67 = type metadata accessor for URL();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v67 - 8) + 16))(a1, a2, v67);
              uint64_t v68 = sub_10017DF08(&qword_100E66478);
              *((unsigned char *)a1 + *(int *)(v68 + 48)) = a2[*(int *)(v68 + 48)];
              goto LABEL_133;
            case 1u:
              uint64_t v149 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v149 - 8) + 16))(a1, a2, v149);
              goto LABEL_133;
            case 2u:
              uint64_t v150 = type metadata accessor for DetailCondition();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v150 - 8) + 16))(a1, a2, v150);
              uint64_t v151 = sub_10017DF08(&qword_100E66488);
              *((unsigned char *)a1 + *(int *)(v151 + 48)) = a2[*(int *)(v151 + 48)];
              goto LABEL_133;
            case 4u:
              *(unsigned char *)a1 = *a2;
              uint64_t v152 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
              uint64_t v153 = (char *)a1 + v152;
              uint64_t v154 = &a2[v152];
              uint64_t v155 = type metadata accessor for Location();
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v155 - 8) + 16))(v153, v154, v155);
LABEL_133:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(void *)(*(void *)(v66 - 8) + 64));
              break;
          }
          uint64_t v156 = sub_10017DF08(&qword_100E66458);
          uint64_t v157 = *(int *)(v156 + 48);
          uint64_t v158 = (char *)a1 + v157;
          uint64_t v159 = &a2[v157];
          long long v160 = *((_OWORD *)v159 + 1);
          *(_OWORD *)uint64_t v158 = *(_OWORD *)v159;
          *((_OWORD *)v158 + 1) = v160;
          v158[32] = v159[32];
          uint64_t v161 = *(int *)(v156 + 64);
          uint64_t v162 = (char *)a1 + v161;
          long long v163 = &a2[v161];
          uint64_t v164 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v163, 1, v164))
          {
            uint64_t v165 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v162, v163, *(void *)(*(void *)(v165 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v164 - 8) + 16))(v162, v163, v164);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v162, 0, 1, v164);
          }
        }
        else
        {
          if (v38) {
            goto LABEL_61;
          }
LABEL_38:
          uint64_t v39 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v39 - 8) + 16))(a1, a2, v39);
        }
        goto LABEL_215;
      case 9u:
        type metadata accessor for WeatherDataAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v116 = *((void *)a2 + 1);
            *a1 = *(void *)a2;
            a1[1] = v116;
            uint64_t v117 = (uint64_t *)(a2 + 16);
            unint64_t v118 = *((void *)a2 + 3);
            swift_bridgeObjectRetain();
            if (v118 >= 0xE)
            {
              a1[2] = *v117;
              a1[3] = v118;
              swift_bridgeObjectRetain();
            }
            else
            {
              *((_OWORD *)a1 + 1) = *(_OWORD *)v117;
            }
            uint64_t v166 = *((void *)a2 + 5);
            a1[4] = *((void *)a2 + 4);
            a1[5] = v166;
            goto LABEL_139;
          case 3u:
          case 9u:
            uint64_t v69 = *((void *)a2 + 1);
            *a1 = *(void *)a2;
            a1[1] = v69;
            uint64_t v70 = *((void *)a2 + 3);
            a1[2] = *((void *)a2 + 2);
            a1[3] = v70;
            swift_bridgeObjectRetain();
            goto LABEL_139;
          case 4u:
            uint64_t v119 = *((void *)a2 + 1);
            *a1 = *(void *)a2;
            a1[1] = v119;
            swift_bridgeObjectRetain();
            uint64_t v393 = (int *)sub_10017DF08(&qword_100E6BBC0);
            uint64_t v120 = v393[12];
            uint64_t v121 = (uint64_t *)((char *)a1 + v120);
            uint64_t v122 = &a2[v120];
            uint64_t v123 = *(void *)&a2[v120 + 8];
            *uint64_t v121 = *(void *)&a2[v120];
            v121[1] = v123;
            uint64_t v407 = (int *)type metadata accessor for WeatherData(0);
            uint64_t v124 = v407[5];
            uint64_t v125 = (char *)v121 + v124;
            uint64_t v126 = (char *)&v122[v124];
            uint64_t v127 = type metadata accessor for Locale();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v126, 1, v127))
            {
              uint64_t v128 = sub_10017DF08(&qword_100E63730);
              memcpy(v125, v126, *(void *)(*(void *)(v128 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 16))(v125, v126, v127);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v125, 0, 1, v127);
            }
            uint64_t v170 = v407[6];
            uint64_t v171 = (char *)v121 + v170;
            char v172 = (char *)&v122[v170];
            uint64_t v173 = type metadata accessor for WeatherDataModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v173 - 8) + 16))(v171, v172, v173);
            uint64_t v174 = v407[7];
            uint64_t v175 = (char *)v121 + v174;
            uint64_t v176 = (char *)&v122[v174];
            uint64_t v177 = sub_10017DF08(&qword_100E63738);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v176, 1, v177))
            {
              uint64_t v178 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v175, v176, *(void *)(*(void *)(v178 - 8) + 64));
            }
            else
            {
              uint64_t v179 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v179 - 8) + 16))(v175, v176, v179);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v175, 0, 1, v177);
            }
            uint64_t v180 = v407[8];
            uint64_t v181 = (void *)((char *)v121 + v180);
            uint64_t v182 = (char *)&v122[v180];
            uint64_t v183 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            int v184 = swift_getEnumCaseMultiPayload();
            if (v184 == 1)
            {
              uint64_t v186 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(void *, char *, uint64_t))(*(void *)(v186 - 8) + 16))(v181, v182, v186);
              goto LABEL_155;
            }
            if (!v184)
            {
              uint64_t v185 = *((void *)v182 + 1);
              *uint64_t v181 = *(void *)v182;
              v181[1] = v185;
              swift_bridgeObjectRetain();
LABEL_155:
              swift_storeEnumTagMultiPayload();
              goto LABEL_157;
            }
            memcpy(v181, v182, *(void *)(*(void *)(v183 - 8) + 64));
LABEL_157:
            uint64_t v187 = v407[9];
            uint64_t v188 = (char *)v121 + v187;
            uint64_t v189 = (char *)&v122[v187];
            uint64_t v190 = type metadata accessor for WeatherDataOverrides();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v189, 1, v190))
            {
              uint64_t v191 = sub_10017DF08(&qword_100E63740);
              memcpy(v188, v189, *(void *)(*(void *)(v191 - 8) + 64));
            }
            else
            {
              uint64_t v192 = type metadata accessor for Date();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v189, 1, v192))
              {
                uint64_t v193 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v188, v189, *(void *)(*(void *)(v193 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v192 - 8) + 16))(v188, v189, v192);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v188, 0, 1, v192);
              }
              uint64_t v217 = *(int *)(v190 + 20);
              uint64_t v218 = &v188[v217];
              uint64_t v219 = &v189[v217];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v189[v217], 1, v192))
              {
                uint64_t v220 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v218, v219, *(void *)(*(void *)(v220 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v192 - 8) + 16))(v218, v219, v192);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v218, 0, 1, v192);
              }
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v188, 0, 1, v190);
            }
            uint64_t v221 = v393[16];
            uint64_t v222 = (char *)a1 + v221;
            uint64_t v223 = &a2[v221];
            uint64_t v224 = type metadata accessor for UUID();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v224 - 8) + 16))(v222, v223, v224);
            uint64_t v225 = type metadata accessor for PreprocessedWeatherData();
            *(void *)&v222[*(int *)(v225 + 20)] = *(void *)&v223[*(int *)(v225 + 20)];
            uint64_t v399 = (int *)v225;
            uint64_t v405 = v223;
            uint64_t v226 = *(int *)(v225 + 24);
            uint64_t v410 = v222;
            uint64_t v227 = &v222[v226];
            uint64_t v228 = (char *)&v223[v226];
            uint64_t v229 = *(void *)&v223[v226 + 8];
            *(void *)uint64_t v227 = *(void *)&v223[v226];
            *((void *)v227 + 1) = v229;
            uint64_t v230 = *(void *)&v223[v226 + 16];
            uint64_t v231 = *((void *)v228 + 3);
            *((void *)v227 + 2) = v230;
            *((void *)v227 + 3) = v231;
            uint64_t v232 = *((void *)v228 + 5);
            *((void *)v227 + 4) = *((void *)v228 + 4);
            *((void *)v227 + 5) = v232;
            uint64_t v383 = v228;
            uint64_t v388 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
            uint64_t v233 = *(int *)(v388 + 28);
            unint64_t v376 = &v227[v233];
            uint64_t v234 = &v228[v233];
            uint64_t v235 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v236 = v235;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v234, 1, v235))
            {
              uint64_t v237 = sub_10017DF08(&qword_100E63750);
              memcpy(v376, v234, *(void *)(*(void *)(v237 - 8) + 64));
            }
            else
            {
              uint64_t v238 = *((void *)v234 + 1);
              *(void *)unint64_t v376 = *(void *)v234;
              *((void *)v376 + 1) = v238;
              uint64_t v375 = v236;
              uint64_t v239 = *(int *)(v236 + 20);
              uint64_t v240 = &v376[v239];
              uint64_t v241 = &v234[v239];
              uint64_t v242 = type metadata accessor for TemperatureScaleConfiguration();
              uint64_t v379 = *(void (**)(char *, char *, uint64_t))(*(void *)(v242 - 8) + 16);
              swift_bridgeObjectRetain();
              v379(v240, v241, v242);
              uint64_t v243 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
              *(void *)&v240[v243[5]] = *(void *)&v241[v243[5]];
              *(void *)&v240[v243[6]] = *(void *)&v241[v243[6]];
              *(void *)&v240[v243[7]] = *(void *)&v241[v243[7]];
              uint64_t v244 = v243[8];
              uint64_t v245 = &v240[v244];
              uint64_t v246 = &v241[v244];
              uint64_t v248 = *(void *)v246;
              uint64_t v247 = *((void *)v246 + 1);
              *(void *)uint64_t v245 = v248;
              *((void *)v245 + 1) = v247;
              v240[v243[9]] = v241[v243[9]];
              swift_bridgeObjectRetain();
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v376, 0, 1, v375);
            }
            uint64_t v249 = *(int *)(v388 + 32);
            uint64_t v250 = &v227[v249];
            uint64_t v251 = (void *)((char *)v383 + v249);
            uint64_t v252 = v251[1];
            *(void *)uint64_t v250 = *v251;
            *((void *)v250 + 1) = v252;
            uint64_t v253 = v399[7];
            uint64_t v254 = &v410[v253];
            uint64_t v255 = &v405[v253];
            *(void *)&v410[v253] = *(void *)&v405[v253];
            uint64_t v256 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
            uint64_t v257 = &v254[v256];
            uint64_t v258 = &v255[v256];
            uint64_t v259 = type metadata accessor for WeatherDescription();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v389 = v259;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v258, 1, v259))
            {
              uint64_t v260 = sub_10017DF08(&qword_100E63758);
              memcpy(v257, v258, *(void *)(*(void *)(v260 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v259 - 8) + 16))(v257, v258, v259);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v257, 0, 1, v259);
            }
            uint64_t v261 = v399[8];
            uint64_t v262 = &v410[v261];
            uint64_t v263 = &v405[v261];
            uint64_t v384 = *(void *)&v405[v261 + 8];
            *(void *)uint64_t v262 = *(void *)&v405[v261];
            *((void *)v262 + 1) = v384;
            uint64_t v380 = *(void *)&v405[v261 + 24];
            *((void *)v262 + 2) = *(void *)&v405[v261 + 16];
            *((void *)v262 + 3) = v380;
            uint64_t v264 = *(void *)&v405[v261 + 40];
            *((void *)v262 + 4) = *(void *)&v405[v261 + 32];
            *((void *)v262 + 5) = v264;
            uint64_t v265 = *(void *)&v405[v261 + 56];
            *((void *)v262 + 6) = *(void *)&v405[v261 + 48];
            *((void *)v262 + 7) = v265;
            uint64_t v266 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
            uint64_t v267 = &v262[v266];
            uint64_t v370 = &v263[v266];
            uint64_t v268 = type metadata accessor for Date();
            uint64_t v269 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v268 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v377 = v269;
            uint64_t v381 = v268;
            uint64_t v270 = v268;
            uint64_t v271 = v267;
            v269(v267, v370, v270);
            uint64_t v272 = type metadata accessor for WeatherConditionBackgroundTimeData();
            uint64_t v273 = *(int *)(v272 + 20);
            v274 = &v267[v273];
            uint64_t v275 = &v370[v273];
            uint64_t v276 = type metadata accessor for Elevation();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v275, 1, v276))
            {
              uint64_t v277 = sub_10017DF08(&qword_100E63760);
              memcpy(v274, v275, *(void *)(*(void *)(v277 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v276 - 8) + 16))(v274, v275, v276);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v274, 0, 1, v276);
            }
            uint64_t v278 = *(int *)(v272 + 24);
            uint64_t v279 = &v271[v278];
            uint64_t v280 = &v370[v278];
            uint64_t v281 = type metadata accessor for BackgroundMoonData();
            uint64_t v385 = v272;
            uint64_t v374 = v276;
            uint64_t v366 = v281;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v280, 1, v281))
            {
              uint64_t v282 = sub_10017DF08(&qword_100E63768);
              memcpy(v279, v280, *(void *)(*(void *)(v282 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v281 - 8) + 16))(v279, v280, v281);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v279, 0, 1, v281);
            }
            uint64_t v283 = v399[9];
            uint64_t v284 = &v410[v283];
            char v285 = &v405[v283];
            uint64_t v286 = *((void *)v285 + 1);
            *(void *)uint64_t v284 = *(void *)v285;
            *((void *)v284 + 1) = v286;
            uint64_t v287 = *((void *)v285 + 3);
            *((void *)v284 + 2) = *((void *)v285 + 2);
            *((void *)v284 + 3) = v287;
            uint64_t v288 = *((void *)v285 + 5);
            *((void *)v284 + 4) = *((void *)v285 + 4);
            *((void *)v284 + 5) = v288;
            uint64_t v289 = *((void *)v285 + 7);
            *((void *)v284 + 6) = *((void *)v285 + 6);
            *((void *)v284 + 7) = v289;
            uint64_t v290 = *((void *)v285 + 9);
            *((void *)v284 + 8) = *((void *)v285 + 8);
            *((void *)v284 + 9) = v290;
            uint64_t v291 = *((void *)v285 + 11);
            *((void *)v284 + 10) = *((void *)v285 + 10);
            *((void *)v284 + 11) = v291;
            uint64_t v292 = *((void *)v285 + 13);
            *((void *)v284 + 12) = *((void *)v285 + 12);
            *((void *)v284 + 13) = v292;
            uint64_t v293 = v399[10];
            uint64_t v368 = &v405[v293];
            uint64_t v371 = &v410[v293];
            uint64_t v367 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v389 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v367(v371, v368, v389);
            uint64_t v294 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
            uint64_t v295 = &v371[v294];
            uint64_t v296 = &v368[v294];
            uint64_t v390 = *((void *)v296 + 1);
            *(void *)uint64_t v295 = *(void *)v296;
            *((void *)v295 + 1) = v390;
            uint64_t v297 = v399[11];
            uint64_t v298 = &v410[v297];
            uint64_t v299 = &v405[v297];
            uint64_t v300 = *((void *)v299 + 1);
            *(void *)uint64_t v298 = *(void *)v299;
            *((void *)v298 + 1) = v300;
            uint64_t v301 = *((void *)v299 + 3);
            *((void *)v298 + 2) = *((void *)v299 + 2);
            *((void *)v298 + 3) = v301;
            uint64_t v302 = *((void *)v299 + 5);
            *((void *)v298 + 4) = *((void *)v299 + 4);
            *((void *)v298 + 5) = v302;
            uint64_t v303 = v399[12];
            uint64_t v304 = &v410[v303];
            uint64_t v305 = &v405[v303];
            uint64_t v306 = type metadata accessor for PressureTrend();
            uint64_t v372 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v306 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v372(v304, v305, v306);
            uint64_t v307 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
            uint64_t v308 = v307[5];
            uint64_t v309 = &v304[v308];
            uint64_t v310 = &v305[v308];
            uint64_t v311 = *((void *)v310 + 1);
            *(void *)uint64_t v309 = *(void *)v310;
            *((void *)v309 + 1) = v311;
            uint64_t v312 = v307[6];
            uint64_t v313 = &v304[v312];
            uint64_t v314 = &v305[v312];
            uint64_t v391 = *((void *)v314 + 1);
            *(void *)uint64_t v313 = *(void *)v314;
            *((void *)v313 + 1) = v391;
            uint64_t v315 = v307[7];
            uint64_t v316 = &v304[v315];
            uint64_t v317 = &v305[v315];
            uint64_t v373 = *((void *)v317 + 1);
            *(void *)uint64_t v316 = *(void *)v317;
            *((void *)v316 + 1) = v373;
            *(void *)&v304[v307[8]] = *(void *)&v305[v307[8]];
            uint64_t v318 = v307[9];
            uint64_t v319 = &v304[v318];
            uint64_t v320 = &v305[v318];
            uint64_t v369 = *((void *)v320 + 1);
            *(void *)uint64_t v319 = *(void *)v320;
            *((void *)v319 + 1) = v369;
            uint64_t v321 = v399[13];
            uint64_t v322 = &v410[v321];
            uint64_t v323 = &v405[v321];
            uint64_t v324 = *((void *)v323 + 1);
            *(void *)uint64_t v322 = *(void *)v323;
            *((void *)v322 + 1) = v324;
            uint64_t v325 = *((void *)v323 + 3);
            *((void *)v322 + 2) = *((void *)v323 + 2);
            *((void *)v322 + 3) = v325;
            uint64_t v326 = *((void *)v323 + 5);
            *((void *)v322 + 4) = *((void *)v323 + 4);
            *((void *)v322 + 5) = v326;
            uint64_t v327 = *((void *)v323 + 7);
            *((void *)v322 + 6) = *((void *)v323 + 6);
            *((void *)v322 + 7) = v327;
            uint64_t v328 = *((void *)v323 + 9);
            *((void *)v322 + 8) = *((void *)v323 + 8);
            *((void *)v322 + 9) = v328;
            uint64_t v329 = *((void *)v323 + 11);
            *((void *)v322 + 10) = *((void *)v323 + 10);
            *((void *)v322 + 11) = v329;
            uint64_t v330 = *((void *)v323 + 13);
            *((void *)v322 + 12) = *((void *)v323 + 12);
            *((void *)v322 + 13) = v330;
            uint64_t v331 = *((void *)v323 + 15);
            *((void *)v322 + 14) = *((void *)v323 + 14);
            *((void *)v322 + 15) = v331;
            uint64_t v332 = *((void *)v323 + 17);
            *((void *)v322 + 16) = *((void *)v323 + 16);
            *((void *)v322 + 17) = v332;
            uint64_t v333 = *((void *)v323 + 19);
            *((void *)v322 + 18) = *((void *)v323 + 18);
            *((void *)v322 + 19) = v333;
            uint64_t v334 = *((void *)v323 + 21);
            *((void *)v322 + 20) = *((void *)v323 + 20);
            *((void *)v322 + 21) = v334;
            uint64_t v335 = *((void *)v323 + 23);
            *((void *)v322 + 22) = *((void *)v323 + 22);
            *((void *)v322 + 23) = v335;
            uint64_t v336 = *((void *)v323 + 25);
            *((void *)v322 + 24) = *((void *)v323 + 24);
            *((void *)v322 + 25) = v336;
            *((_OWORD *)v322 + 13) = *((_OWORD *)v323 + 13);
            *((void *)v322 + 28) = *((void *)v323 + 28);
            uint64_t v337 = v399[14];
            uint64_t v338 = &v410[v337];
            uint64_t v339 = &v405[v337];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v377(v338, v339, v381);
            uint64_t v340 = *(int *)(v385 + 20);
            uint64_t v341 = &v338[v340];
            uint64_t v342 = &v339[v340];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v339[v340], 1, v374))
            {
              uint64_t v343 = sub_10017DF08(&qword_100E63760);
              memcpy(v341, v342, *(void *)(*(void *)(v343 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v374 - 8) + 16))(v341, v342, v374);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v341, 0, 1, v374);
            }
            uint64_t v344 = *(int *)(v385 + 24);
            uint64_t v345 = &v338[v344];
            uint64_t v346 = &v339[v344];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v339[v344], 1, v366))
            {
              uint64_t v347 = sub_10017DF08(&qword_100E63768);
              memcpy(v345, v346, *(void *)(*(void *)(v347 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v366 - 8) + 16))(v345, v346, v366);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v345, 0, 1, v366);
            }
            uint64_t v348 = v399[15];
            uint64_t v349 = &v410[v348];
            uint64_t v350 = &v405[v348];
            uint64_t v351 = *((void *)v350 + 1);
            *(void *)uint64_t v349 = *(void *)v350;
            *((void *)v349 + 1) = v351;
            uint64_t v352 = *((void *)v350 + 3);
            *((void *)v349 + 2) = *((void *)v350 + 2);
            *((void *)v349 + 3) = v352;
            uint64_t v353 = *((void *)v350 + 5);
            *((void *)v349 + 4) = *((void *)v350 + 4);
            *((void *)v349 + 5) = v353;
            uint64_t v354 = *((void *)v350 + 7);
            *((void *)v349 + 6) = *((void *)v350 + 6);
            *((void *)v349 + 7) = v354;
            uint64_t v355 = *((void *)v350 + 9);
            *((void *)v349 + 8) = *((void *)v350 + 8);
            *((void *)v349 + 9) = v355;
            uint64_t v356 = *((void *)v350 + 11);
            *((void *)v349 + 10) = *((void *)v350 + 10);
            *((void *)v349 + 11) = v356;
            uint64_t v411 = *((void *)v350 + 13);
            *((void *)v349 + 12) = *((void *)v350 + 12);
            *((void *)v349 + 13) = v411;
            uint64_t v357 = v393[20];
            uint64_t v395 = (uint64_t *)((char *)a1 + v357);
            uint64_t v400 = &a2[v357];
            type metadata accessor for NewsDataModel();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              *uint64_t v395 = *(void *)v400;
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v358 = type metadata accessor for News();
              (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v358 - 8) + 16))(v395, v400, v358);
            }
LABEL_214:
            swift_storeEnumTagMultiPayload();
LABEL_215:
            swift_storeEnumTagMultiPayload();
LABEL_216:
            swift_storeEnumTagMultiPayload();
LABEL_217:
            *((unsigned char *)a1 + *(int *)(a3 + 20)) = a2[*(int *)(a3 + 20)];
            break;
          case 5u:
            uint64_t v129 = *((void *)a2 + 1);
            *a1 = *(void *)a2;
            a1[1] = v129;
            swift_bridgeObjectRetain();
            uint64_t v130 = *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48);
            uint64_t v131 = (uint64_t *)((char *)a1 + v130);
            uint64_t v132 = &a2[v130];
            type metadata accessor for NewsDataModel();
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              void *v131 = *(void *)v132;
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v167 = type metadata accessor for News();
              (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v167 - 8) + 16))(v131, v132, v167);
            }
            goto LABEL_214;
          case 6u:
            uint64_t v133 = *((void *)a2 + 1);
            *a1 = *(void *)a2;
            a1[1] = v133;
            swift_bridgeObjectRetain();
            uint64_t v134 = *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
            uint64_t v135 = (char *)a1 + v134;
            uint64_t v136 = &a2[v134];
            uint64_t v137 = type metadata accessor for AvailableDataSets();
            goto LABEL_113;
          case 8u:
            uint64_t v138 = *((void *)a2 + 1);
            *a1 = *(void *)a2;
            a1[1] = v138;
            swift_bridgeObjectRetain();
            uint64_t v139 = *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
            uint64_t v135 = (char *)a1 + v139;
            uint64_t v136 = &a2[v139];
            uint64_t v137 = type metadata accessor for WeatherStatisticsModel();
LABEL_113:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v137 - 8) + 16))(v135, v136, v137);
            goto LABEL_215;
          default:
            uint64_t v40 = *((void *)a2 + 1);
            *a1 = *(void *)a2;
            a1[1] = v40;
LABEL_139:
            swift_bridgeObjectRetain();
            goto LABEL_215;
        }
        break;
      case 0xAu:
        uint64_t v17 = type metadata accessor for DebugAction();
        int v41 = swift_getEnumCaseMultiPayload();
        if (v41 == 1) {
          goto LABEL_38;
        }
        if (v41) {
          goto LABEL_61;
        }
        uint64_t v42 = type metadata accessor for WeatherCondition();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v42))
        {
          uint64_t v43 = sub_10017DF08(&qword_100E63A50);
          memcpy(a1, a2, *(void *)(*(void *)(v43 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v42 - 8) + 16))(a1, a2, v42);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v42);
        }
        uint64_t v112 = *(int *)(sub_10017DF08(&qword_100E6F648) + 48);
        uint64_t v113 = (uint64_t *)((char *)a1 + v112);
        uint64_t v114 = &a2[v112];
        uint64_t v115 = *((void *)v114 + 1);
        *uint64_t v113 = *(void *)v114;
        v113[1] = v115;
        swift_bridgeObjectRetain();
        goto LABEL_215;
      case 0xBu:
        uint64_t v17 = type metadata accessor for ConditionDetailViewAction();
        int v18 = swift_getEnumCaseMultiPayload();
        switch(v18)
        {
          case 2:
            uint64_t v47 = *((void *)a2 + 1);
            *a1 = *(void *)a2;
            a1[1] = v47;
            long long v48 = (int *)type metadata accessor for DetailChartSelection();
            uint64_t v49 = v48[5];
            uint64_t v401 = (char *)a1 + v49;
            uint64_t v50 = &a2[v49];
            uint64_t v51 = type metadata accessor for Date();
            uint64_t v52 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v51 - 8) + 16);
            swift_bridgeObjectRetain();
            v52(v401, v50, v51);
            v52((char *)a1 + v48[6], &a2[v48[6]], v51);
            v52((char *)a1 + v48[7], &a2[v48[7]], v51);
            *(uint64_t *)((char *)a1 + v48[8]) = *(void *)&a2[v48[8]];
            uint64_t v53 = v48[9];
            uint64_t v54 = (char *)a1 + v53;
            uint64_t v55 = &a2[v53];
            v54[8] = v55[8];
            *(void *)uint64_t v54 = *(void *)v55;
            goto LABEL_215;
          case 1:
            uint64_t v56 = type metadata accessor for DetailCondition();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v56 - 8) + 16))(a1, a2, v56);
            goto LABEL_215;
          case 0:
LABEL_15:
            uint64_t v19 = type metadata accessor for Date();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
            goto LABEL_215;
        }
LABEL_61:
        memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
        goto LABEL_216;
      case 0xDu:
        uint64_t v17 = type metadata accessor for MoonDetailViewAction();
        int v20 = swift_getEnumCaseMultiPayload();
        if (v20 == 1) {
          goto LABEL_15;
        }
        if (v20) {
          goto LABEL_61;
        }
        type metadata accessor for MoonDetailSelectedDate();
        swift_getEnumCaseMultiPayload();
        uint64_t v21 = type metadata accessor for Date();
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
        swift_storeEnumTagMultiPayload();
        goto LABEL_215;
      case 0xEu:
        uint64_t v17 = type metadata accessor for AveragesDetailViewAction();
        if (swift_getEnumCaseMultiPayload() != 1) {
          goto LABEL_61;
        }
        *a1 = *(void *)a2;
        uint64_t v22 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
        uint64_t v23 = v22[5];
        uint64_t v24 = (char *)a1 + v23;
        uint64_t v25 = &a2[v23];
        uint64_t v26 = type metadata accessor for Date();
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
        *(uint64_t *)((char *)a1 + v22[6]) = *(void *)&a2[v22[6]];
        *(uint64_t *)((char *)a1 + v22[7]) = *(void *)&a2[v22[7]];
        swift_storeEnumTagMultiPayload();
        goto LABEL_216;
      case 0x10u:
        uint64_t v27 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v27;
        swift_bridgeObjectRetain();
        goto LABEL_216;
      case 0x11u:
        uint64_t v44 = type metadata accessor for PerformanceTestAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v45 = type metadata accessor for DetailCondition();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v45 - 8) + 16))(a1, a2, v45);
            goto LABEL_71;
          case 2u:
            uint64_t v71 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v71 - 8) + 16))(a1, a2, v71);
            goto LABEL_71;
          case 3u:
            *a1 = *(void *)a2;
            uint64_t v72 = sub_10017DF08((uint64_t *)&unk_100EA0250);
            uint64_t v73 = *(int *)(v72 + 48);
            uint64_t v74 = (char *)a1 + v73;
            uint64_t v75 = &a2[v73];
            uint64_t v76 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v76 - 8) + 16))(v74, v75, v76);
            *((unsigned char *)a1 + *(int *)(v72 + 64)) = a2[*(int *)(v72 + 64)];
            goto LABEL_71;
          case 4u:
            uint64_t v77 = type metadata accessor for WeatherCondition();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v77 - 8) + 16))(a1, a2, v77);
LABEL_71:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v44 - 8) + 64));
            break;
        }
        goto LABEL_216;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        goto LABEL_217;
    }
  }
  return a1;
}

id sub_100B84C04(uint64_t a1)
{
  type metadata accessor for MainAction();
  id result = (id)swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      uint64_t v3 = type metadata accessor for AppConfiguration();
      goto LABEL_82;
    case 2:
      type metadata accessor for EnvironmentAction();
      id result = (id)swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 2:
          uint64_t v3 = type metadata accessor for Locale();
          goto LABEL_82;
        case 3:
          type metadata accessor for ActivityAction();
          id result = (id)swift_getEnumCaseMultiPayload();
          if (result == 1)
          {
            type metadata accessor for PreviewLocation();
            id result = (id)swift_getEnumCaseMultiPayload();
            switch((int)result)
            {
              case 0:
                goto LABEL_81;
              case 1:
                goto LABEL_52;
              case 2:
                goto LABEL_102;
              case 3:
                goto LABEL_132;
              default:
                return result;
            }
            return result;
          }
          if (result) {
            return result;
          }
          type metadata accessor for SavedLocation();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v3 = type metadata accessor for SavedLocation.Placeholder();
            goto LABEL_82;
          }
          goto LABEL_81;
        case 4:
          goto LABEL_132;
        case 9:
          id result = *(id *)(a1 + 8);
          if ((unint64_t)result >= 2) {
            goto LABEL_132;
          }
          return result;
        case 11:
          type metadata accessor for ConfiguredUnitsAction();
          id result = (id)swift_getEnumCaseMultiPayload();
          if (result == 1)
          {
            uint64_t v5 = type metadata accessor for UnitConfiguration.Temperature();
            goto LABEL_109;
          }
          if (result) {
            return result;
          }
          uint64_t v3 = type metadata accessor for ConfiguredUnit();
          break;
        default:
          return result;
      }
      goto LABEL_82;
    case 3:
      type metadata accessor for LocationsAction();
      id result = (id)swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
          type metadata accessor for CurrentLocation();
          id result = (id)swift_getEnumCaseMultiPayload();
          if (result == 2 || result == 1) {
            goto LABEL_81;
          }
          goto LABEL_26;
        case 1:
          goto LABEL_81;
        case 2:
          goto LABEL_29;
        case 5:
          goto LABEL_132;
        case 6:
          id v15 = *(id *)a1;
          uint64_t v16 = *(void *)(a1 + 8);
          unsigned __int8 v17 = *(unsigned char *)(a1 + 16);
          id result = (id)sub_10015303C((uint64_t)v15, v16, v17);
          break;
        default:
          return result;
      }
      return result;
    case 4:
      type metadata accessor for NotificationsAction();
      id result = (id)swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 1:
          uint64_t v4 = type metadata accessor for LocationModel();
          if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v4)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
          }
          a1 += *(int *)(sub_10017DF08((uint64_t *)&unk_100EAC3E0) + 48);
          uint64_t v5 = type metadata accessor for URL();
          goto LABEL_109;
        case 2:
          uint64_t v18 = type metadata accessor for NotificationSubscription.Location();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(a1, v18);
          uint64_t v19 = &qword_100E6F630;
          goto LABEL_73;
        case 3:
        case 4:
          goto LABEL_132;
        case 5:
          uint64_t v20 = type metadata accessor for Location();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(a1, v20);
          uint64_t v19 = &qword_100E6F638;
LABEL_73:
          a1 += *(int *)(sub_10017DF08(v19) + 48);
          uint64_t v3 = type metadata accessor for NotificationSubscription.Kind();
          goto LABEL_82;
        default:
          return result;
      }
    case 5:
      type metadata accessor for NotificationsOptInAction();
      id result = (id)swift_getEnumCaseMultiPayload();
      if (result == 4) {
        goto LABEL_46;
      }
      if (result == 3) {
        goto LABEL_132;
      }
      if (result != 2) {
        return result;
      }
      goto LABEL_81;
    case 6:
      type metadata accessor for ViewAction();
      id result = (id)swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
          type metadata accessor for ListViewAction();
          id result = (id)swift_getEnumCaseMultiPayload();
          if (result == 2) {
            goto LABEL_87;
          }
          goto LABEL_76;
        case 1:
          type metadata accessor for LocationViewerViewAction();
          id result = (id)swift_getEnumCaseMultiPayload();
          if (result == 2)
          {
LABEL_87:
            uint64_t v3 = type metadata accessor for Location.Identifier();
            goto LABEL_82;
          }
          if (result == 1) {
            goto LABEL_57;
          }
LABEL_76:
          if (!result)
          {
            uint64_t v3 = type metadata accessor for LocationModel();
            goto LABEL_82;
          }
          break;
        case 3:
          type metadata accessor for SearchViewAction();
          id result = (id)swift_getEnumCaseMultiPayload();
          switch((int)result)
          {
            case 0:
              uint64_t v3 = type metadata accessor for CodableError();
              goto LABEL_82;
            case 1:
            case 2:
              goto LABEL_132;
            case 3:
            case 6:
              goto LABEL_81;
            case 4:
              goto LABEL_52;
            case 5:
LABEL_102:

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              a1 += *(int *)(type metadata accessor for SearchLocation() + 32);
              uint64_t v5 = type metadata accessor for Location();
              goto LABEL_109;
            default:
              return result;
          }
          return result;
        case 4:
          type metadata accessor for InteractiveMapViewAction();
          id result = (id)swift_getEnumCaseMultiPayload();
          switch((int)result)
          {
            case 0:
            case 1:
            case 2:
            case 4:
              goto LABEL_81;
            case 3:
              goto LABEL_57;
            default:
              return result;
          }
          return result;
        case 5:
          a1 += *(int *)(type metadata accessor for DisplayMetrics() + 36);
          uint64_t v3 = type metadata accessor for DynamicTypeSize();
          goto LABEL_82;
        default:
          return result;
      }
      return result;
    case 7:
      type metadata accessor for ModalViewAction();
      id result = (id)swift_getEnumCaseMultiPayload();
      if (result == 3)
      {
        id result = *(id *)a1;
        if ((~*(void *)a1 & 0xF000000000000006) != 0) {
          return (id)sub_100274E38((uint64_t)result);
        }
      }
      else if (!result)
      {
        type metadata accessor for LocationPreviewViewAction();
        id result = (id)swift_getEnumCaseMultiPayload();
        if (result == 1) {
          goto LABEL_81;
        }
      }
      return result;
    case 8:
      type metadata accessor for LocationViewAction();
      id result = (id)swift_getEnumCaseMultiPayload();
      if (result == 2)
      {
        uint64_t v7 = type metadata accessor for Location();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
        a1 += *(int *)(sub_10017DF08(&qword_100E66450) + 48);
LABEL_52:
        uint64_t v3 = type metadata accessor for LocationOfInterest();
        goto LABEL_82;
      }
      if (result != 1)
      {
LABEL_26:
        if (result) {
          return result;
        }
LABEL_81:
        uint64_t v3 = type metadata accessor for Location();
        goto LABEL_82;
      }
      type metadata accessor for LocationComponentAction(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v8 = type metadata accessor for URL();
          goto LABEL_106;
        case 1u:
          uint64_t v8 = type metadata accessor for WeatherMapOverlayKind();
          goto LABEL_106;
        case 2u:
          uint64_t v8 = type metadata accessor for DetailCondition();
LABEL_106:
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
          break;
        case 4u:
          uint64_t v34 = a1 + *(int *)(sub_10017DF08(&qword_100E66480) + 48);
          uint64_t v35 = type metadata accessor for Location();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v34, v35);
          break;
        default:
          break;
      }
      a1 += *(int *)(sub_10017DF08(&qword_100E66458) + 64);
      uint64_t v5 = type metadata accessor for Date();
LABEL_109:
      uint64_t v36 = v5;
      id result = (id)_s7Weather24LocationCompositionStateOwet_0(a1, 1, v5);
      if (!result)
      {
        int v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8);
        uint64_t v12 = a1;
        uint64_t v13 = v36;
        goto LABEL_83;
      }
      return result;
    case 9:
      type metadata accessor for WeatherDataAction();
      id result = (id)swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
        case 1:
        case 7:
          goto LABEL_132;
        case 2:
          swift_bridgeObjectRelease();
          if (*(void *)(a1 + 24) >= 0xEuLL) {
            swift_bridgeObjectRelease();
          }
          goto LABEL_132;
        case 3:
        case 9:
LABEL_29:
          swift_bridgeObjectRelease();
          goto LABEL_132;
        case 4:
          swift_bridgeObjectRelease();
          uint64_t v21 = sub_10017DF08(&qword_100E6BBC0);
          uint64_t v22 = a1 + *(int *)(v21 + 48);
          swift_bridgeObjectRelease();
          uint64_t v23 = (int *)type metadata accessor for WeatherData(0);
          uint64_t v24 = v22 + v23[5];
          uint64_t v25 = type metadata accessor for Locale();
          if (!_s7Weather24LocationCompositionStateOwet_0(v24, 1, v25)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
          }
          uint64_t v26 = v22 + v23[6];
          uint64_t v27 = type metadata accessor for WeatherDataModel();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
          uint64_t v28 = v22 + v23[7];
          uint64_t v29 = sub_10017DF08(&qword_100E63738);
          if (!_s7Weather24LocationCompositionStateOwet_0(v28, 1, v29))
          {
            uint64_t v30 = type metadata accessor for Date();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v28, v30);
          }
          uint64_t v31 = v22 + v23[8];
          type metadata accessor for WeatherData.WeatherStatisticsState(0);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v37 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v31, v37);
          }
          else if (!EnumCaseMultiPayload)
          {
            swift_bridgeObjectRelease();
          }
          uint64_t v38 = v22 + v23[9];
          uint64_t v39 = type metadata accessor for WeatherDataOverrides();
          if (!_s7Weather24LocationCompositionStateOwet_0(v38, 1, v39))
          {
            uint64_t v40 = type metadata accessor for Date();
            if (!_s7Weather24LocationCompositionStateOwet_0(v38, 1, v40)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v38, v40);
            }
            uint64_t v41 = v38 + *(int *)(v39 + 20);
            if (!_s7Weather24LocationCompositionStateOwet_0(v41, 1, v40)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8))(v41, v40);
            }
          }
          uint64_t v69 = v21;
          uint64_t v42 = a1 + *(int *)(v21 + 64);
          uint64_t v43 = type metadata accessor for UUID();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(v42, v43);
          uint64_t v44 = (int *)type metadata accessor for PreprocessedWeatherData();
          swift_bridgeObjectRelease();
          uint64_t v45 = v42 + v44[6];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v46 = v45 + *(int *)(type metadata accessor for FeelsLikeComponentPreprocessedDataModel() + 28);
          uint64_t v47 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
          if (!_s7Weather24LocationCompositionStateOwet_0(v46, 1, v47))
          {
            swift_bridgeObjectRelease();
            uint64_t v48 = v46 + *(int *)(v47 + 20);
            uint64_t v49 = type metadata accessor for TemperatureScaleConfiguration();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v49 - 8) + 8))(v48, v49);
            type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          uint64_t v50 = v42 + v44[7];
          swift_bridgeObjectRelease();
          uint64_t v51 = v50 + *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
          uint64_t v52 = type metadata accessor for WeatherDescription();
          if (!_s7Weather24LocationCompositionStateOwet_0(v51, 1, v52)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v52 - 8) + 8))(v51, v52);
          }
          uint64_t v53 = v42 + v44[8];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v54 = v53 + *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
          uint64_t v55 = type metadata accessor for Date();
          uint64_t v56 = (void (**)(uint64_t, uint64_t))(*(void *)(v55 - 8) + 8);
          uint64_t v67 = *v56;
          (*v56)(v54, v55);
          uint64_t v57 = type metadata accessor for WeatherConditionBackgroundTimeData();
          uint64_t v58 = v54 + *(int *)(v57 + 20);
          uint64_t v59 = type metadata accessor for Elevation();
          if (!_s7Weather24LocationCompositionStateOwet_0(v58, 1, v59)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v59 - 8) + 8))(v58, v59);
          }
          uint64_t v60 = v54 + *(int *)(v57 + 24);
          uint64_t v61 = type metadata accessor for BackgroundMoonData();
          if (!_s7Weather24LocationCompositionStateOwet_0(v60, 1, v61)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v61 - 8) + 8))(v60, v61);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v52 - 8) + 8))(v42 + v44[10], v52);
          type metadata accessor for UVIndexComponentPreprocessedDataModel();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v62 = v42 + v44[12];
          uint64_t v63 = type metadata accessor for PressureTrend();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v63 - 8) + 8))(v62, v63);
          type metadata accessor for PressureComponentPreprocessedDataModel();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v64 = v42 + v44[14];
          v67(v64, v55);
          uint64_t v65 = v64 + *(int *)(v57 + 20);
          if (!_s7Weather24LocationCompositionStateOwet_0(v65, 1, v59)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v59 - 8) + 8))(v65, v59);
          }
          uint64_t v66 = v64 + *(int *)(v57 + 24);
          if (!_s7Weather24LocationCompositionStateOwet_0(v66, 1, v61)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v61 - 8) + 8))(v66, v61);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v33 = *(int *)(v69 + 80);
          goto LABEL_131;
        case 5:
          swift_bridgeObjectRelease();
          uint64_t v33 = *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48);
LABEL_131:
          a1 += v33;
          type metadata accessor for NewsDataModel();
          if (swift_getEnumCaseMultiPayload() == 1) {
            goto LABEL_132;
          }
          uint64_t v3 = type metadata accessor for News();
          break;
        case 6:
          swift_bridgeObjectRelease();
          a1 += *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
          uint64_t v3 = type metadata accessor for AvailableDataSets();
          goto LABEL_82;
        case 8:
          swift_bridgeObjectRelease();
          a1 += *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
          uint64_t v3 = type metadata accessor for WeatherStatisticsModel();
          goto LABEL_82;
        default:
          return result;
      }
      goto LABEL_82;
    case 10:
      type metadata accessor for DebugAction();
      id result = (id)swift_getEnumCaseMultiPayload();
      if (result == 1) {
        goto LABEL_81;
      }
      if (result) {
        return result;
      }
      uint64_t v6 = type metadata accessor for WeatherCondition();
      if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v6)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
      }
      sub_10017DF08(&qword_100E6F648);
LABEL_132:
      return (id)swift_bridgeObjectRelease();
    case 11:
      type metadata accessor for ConditionDetailViewAction();
      id result = (id)swift_getEnumCaseMultiPayload();
      if (result == 2)
      {
        swift_bridgeObjectRelease();
        uint64_t v9 = (int *)type metadata accessor for DetailChartSelection();
        uint64_t v10 = a1 + v9[5];
        uint64_t v11 = type metadata accessor for Date();
        uint64_t v68 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
        ((void (*)(void *__return_ptr, uint64_t, uint64_t))v68)((void *)(v11 - 8), v10, v11);
        v68(a1 + v9[6], v11);
        uint64_t v12 = a1 + v9[7];
        uint64_t v13 = v11;
        int v14 = (uint64_t (*)(uint64_t, uint64_t))v68;
      }
      else
      {
        if (result == 1)
        {
LABEL_48:
          uint64_t v3 = type metadata accessor for DetailCondition();
        }
        else
        {
LABEL_42:
          if (result) {
            return result;
          }
LABEL_46:
          uint64_t v3 = type metadata accessor for Date();
        }
LABEL_82:
        int v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
        uint64_t v13 = v3;
        uint64_t v12 = a1;
      }
LABEL_83:
      return (id)v14(v12, v13);
    case 13:
      type metadata accessor for MoonDetailViewAction();
      id result = (id)swift_getEnumCaseMultiPayload();
      if (result == 1) {
        goto LABEL_46;
      }
      if (result) {
        return result;
      }
      type metadata accessor for MoonDetailSelectedDate();
      id result = (id)swift_getEnumCaseMultiPayload();
      if (result != 2 && result != 1) {
        goto LABEL_42;
      }
      goto LABEL_46;
    case 14:
      type metadata accessor for AveragesDetailViewAction();
      id result = (id)swift_getEnumCaseMultiPayload();
      if (result != 1) {
        return result;
      }
      a1 += *(int *)(type metadata accessor for DetailHeroChartLollipopPosition(0) + 20);
      goto LABEL_46;
    case 16:
      goto LABEL_132;
    case 17:
      type metadata accessor for PerformanceTestAction();
      id result = (id)swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
          goto LABEL_48;
        case 2:
          goto LABEL_81;
        case 3:
          a1 += *(int *)(sub_10017DF08((uint64_t *)&unk_100EA0250) + 48);
LABEL_57:
          uint64_t v3 = type metadata accessor for WeatherMapOverlayKind();
          goto LABEL_82;
        case 4:
          uint64_t v3 = type metadata accessor for WeatherCondition();
          goto LABEL_82;
        default:
          return result;
      }
      return result;
    default:
      return result;
  }
}

uint64_t *sub_100B8608C(uint64_t *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for MainAction();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = type metadata accessor for AppConfiguration();
      (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_214;
    case 2u:
      uint64_t v14 = type metadata accessor for EnvironmentAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v25 = type metadata accessor for Locale();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
          goto LABEL_213;
        case 3u:
          uint64_t v33 = type metadata accessor for ActivityAction();
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 1)
          {
            type metadata accessor for PreviewLocation();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
                uint64_t v210 = type metadata accessor for LocationOfInterest();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v210 - 8) + 16))(a1, a2, v210);
                break;
              case 2u:
                uint64_t v211 = *((void *)a2 + 1);
                uint64_t v395 = *(void **)a2;
                *a1 = *(void *)a2;
                a1[1] = v211;
                uint64_t v212 = *((void *)a2 + 3);
                a1[2] = *((void *)a2 + 2);
                a1[3] = v212;
                uint64_t v213 = *((void *)a2 + 5);
                a1[4] = *((void *)a2 + 4);
                a1[5] = v213;
                a1[6] = *((void *)a2 + 6);
                uint64_t v214 = type metadata accessor for SearchLocation();
                uint64_t v215 = *(int *)(v214 + 32);
                uint64_t v399 = (char *)a1 + v215;
                uint64_t v404 = v214;
                uint64_t v216 = &a2[v215];
                uint64_t v217 = type metadata accessor for Location();
                id v218 = v395;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v216, 1, v217))
                {
                  uint64_t v219 = sub_10017DF08(&qword_100E639E8);
                  memcpy(v399, v216, *(void *)(*(void *)(v219 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v217 - 8) + 16))(v399, v216, v217);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v399, 0, 1, v217);
                }
                uint64_t v371 = *(int *)(v404 + 36);
                uint64_t v372 = (char *)a1 + v371;
                uint64_t v373 = &a2[v371];
                *(_OWORD *)uint64_t v372 = *(_OWORD *)v373;
                v372[16] = v373[16];
                break;
              case 3u:
                *(_OWORD *)a1 = *(_OWORD *)a2;
                uint64_t v220 = *((void *)a2 + 3);
                a1[2] = *((void *)a2 + 2);
                a1[3] = v220;
                swift_bridgeObjectRetain();
                break;
              default:
                uint64_t v147 = type metadata accessor for Location();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v147 - 8) + 16))(a1, a2, v147);
                break;
            }
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            if (EnumCaseMultiPayload) {
              goto LABEL_99;
            }
            type metadata accessor for SavedLocation();
            if (swift_getEnumCaseMultiPayload() == 1) {
              uint64_t v92 = type metadata accessor for SavedLocation.Placeholder();
            }
            else {
              uint64_t v92 = type metadata accessor for Location();
            }
            (*(void (**)(uint64_t *, unsigned __int8 *))(*(void *)(v92 - 8) + 16))(a1, a2);
            swift_storeEnumTagMultiPayload();
          }
          goto LABEL_212;
        case 4u:
          uint64_t v82 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v82;
          swift_bridgeObjectRetain();
          goto LABEL_213;
        case 9u:
          unint64_t v93 = *((void *)a2 + 1);
          if (v93 >= 2)
          {
            *a1 = *(void *)a2;
            a1[1] = v93;
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)a1 = *(_OWORD *)a2;
          }
          goto LABEL_213;
        case 0xBu:
          uint64_t v33 = type metadata accessor for ConfiguredUnitsAction();
          int v94 = swift_getEnumCaseMultiPayload();
          if (v94 == 1)
          {
            uint64_t v148 = type metadata accessor for UnitConfiguration.Temperature();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v148))
            {
              uint64_t v149 = sub_10017DF08(&qword_100E6F620);
              memcpy(a1, a2, *(void *)(*(void *)(v149 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v148 - 8) + 16))(a1, a2, v148);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v148);
            }
          }
          else
          {
            if (v94) {
              goto LABEL_99;
            }
            uint64_t v95 = type metadata accessor for ConfiguredUnit();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v95 - 8) + 16))(a1, a2, v95);
          }
          break;
        default:
          goto LABEL_59;
      }
      goto LABEL_212;
    case 3u:
      uint64_t v7 = type metadata accessor for LocationsAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v8 = type metadata accessor for CurrentLocation();
          if (swift_getEnumCaseMultiPayload() > 2)
          {
            memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
          }
          else
          {
            uint64_t v169 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v169 - 8) + 16))(a1, a2, v169);
            swift_storeEnumTagMultiPayload();
          }
          goto LABEL_140;
        case 1u:
          uint64_t v76 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v76 - 8) + 16))(a1, a2, v76);
          uint64_t v77 = sub_10017DF08(&qword_100E6F628);
          *((unsigned char *)a1 + *(int *)(v77 + 48)) = a2[*(int *)(v77 + 48)];
          goto LABEL_140;
        case 2u:
          uint64_t v78 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v78;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_140;
        case 5u:
          *a1 = *(void *)a2;
          swift_bridgeObjectRetain();
          goto LABEL_140;
        case 6u:
          uint64_t v83 = *(void *)a2;
          uint64_t v84 = *((void *)a2 + 1);
          unsigned __int8 v85 = a2[16];
          sub_10015458C(*(void *)a2, v84, v85);
          *a1 = v83;
          a1[1] = v84;
          *((unsigned char *)a1 + 16) = v85;
LABEL_140:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
          break;
      }
      goto LABEL_214;
    case 4u:
      uint64_t v26 = type metadata accessor for NotificationsAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v27 = type metadata accessor for LocationModel();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v27))
          {
            uint64_t v28 = type metadata accessor for NotificationLocation();
            memcpy(a1, a2, *(void *)(*(void *)(v28 - 8) + 64));
          }
          else
          {
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v27);
          }
          uint64_t v141 = *(int *)(sub_10017DF08((uint64_t *)&unk_100EAC3E0) + 48);
          uint64_t v142 = (char *)a1 + v141;
          uint64_t v143 = &a2[v141];
          uint64_t v144 = type metadata accessor for URL();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v143, 1, v144))
          {
            uint64_t v145 = sub_10017DF08(&qword_100E749B0);
            memcpy(v142, v143, *(void *)(*(void *)(v145 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v144 - 8) + 16))(v142, v143, v144);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v142, 0, 1, v144);
          }
          goto LABEL_117;
        case 2u:
          uint64_t v96 = type metadata accessor for NotificationSubscription.Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v96 - 8) + 16))(a1, a2, v96);
          uint64_t v97 = *(int *)(sub_10017DF08(&qword_100E6F630) + 48);
          uint64_t v98 = (char *)a1 + v97;
          uint64_t v99 = &a2[v97];
          uint64_t v100 = type metadata accessor for NotificationSubscription.Kind();
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v100 - 8) + 16))(v98, v99, v100);
          goto LABEL_117;
        case 3u:
        case 4u:
          *a1 = *(void *)a2;
          swift_bridgeObjectRetain();
          goto LABEL_117;
        case 5u:
          uint64_t v101 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v101 - 8) + 16))(a1, a2, v101);
          uint64_t v102 = *(int *)(sub_10017DF08(&qword_100E6F638) + 48);
          uint64_t v103 = (char *)a1 + v102;
          uint64_t v104 = &a2[v102];
          uint64_t v105 = type metadata accessor for NotificationSubscription.Kind();
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v105 - 8) + 16))(v103, v104, v105);
LABEL_117:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v26 - 8) + 64));
          break;
      }
      goto LABEL_214;
    case 5u:
      uint64_t v14 = type metadata accessor for NotificationsOptInAction();
      int v29 = swift_getEnumCaseMultiPayload();
      switch(v29)
      {
        case 4:
          goto LABEL_13;
        case 3:
          *a1 = *(void *)a2;
          *((unsigned char *)a1 + 8) = a2[8];
          swift_bridgeObjectRetain();
          break;
        case 2:
          uint64_t v30 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v30 - 8) + 16))(a1, a2, v30);
          uint64_t v31 = sub_10017DF08(&qword_100E6BBD8);
          *((unsigned char *)a1 + *(int *)(v31 + 48)) = a2[*(int *)(v31 + 48)];
          break;
        default:
          goto LABEL_59;
      }
      goto LABEL_213;
    case 6u:
      uint64_t v9 = type metadata accessor for ViewAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v10 = type metadata accessor for ListViewAction();
          int v11 = swift_getEnumCaseMultiPayload();
          if (v11 == 2) {
            goto LABEL_119;
          }
          if (v11) {
            goto LABEL_166;
          }
          uint64_t v12 = type metadata accessor for LocationModel();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
          uint64_t v13 = sub_10017DF08(&qword_100E6F640);
          *((unsigned char *)a1 + *(int *)(v13 + 48)) = a2[*(int *)(v13 + 48)];
          goto LABEL_206;
        case 1u:
          uint64_t v10 = type metadata accessor for LocationViewerViewAction();
          int v79 = swift_getEnumCaseMultiPayload();
          if (v79 == 2)
          {
LABEL_119:
            uint64_t v146 = type metadata accessor for Location.Identifier();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v146 - 8) + 16))(a1, a2, v146);
          }
          else if (v79 == 1)
          {
            uint64_t v170 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v170 - 8) + 16))(a1, a2, v170);
          }
          else
          {
            if (v79)
            {
LABEL_166:
              memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
              goto LABEL_207;
            }
            uint64_t v80 = type metadata accessor for LocationModel();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v80 - 8) + 16))(a1, a2, v80);
          }
LABEL_206:
          swift_storeEnumTagMultiPayload();
LABEL_207:
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          uint64_t v10 = type metadata accessor for SearchViewAction();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v81 = type metadata accessor for CodableError();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v81 - 8) + 16))(a1, a2, v81);
              goto LABEL_206;
            case 1u:
              *a1 = *(void *)a2;
              swift_bridgeObjectRetain();
              goto LABEL_206;
            case 2u:
              uint64_t v197 = *((void *)a2 + 1);
              *a1 = *(void *)a2;
              a1[1] = v197;
              swift_bridgeObjectRetain();
              goto LABEL_206;
            case 3u:
            case 6u:
              uint64_t v198 = type metadata accessor for Location();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v198 - 8) + 16))(a1, a2, v198);
              goto LABEL_206;
            case 4u:
              uint64_t v199 = type metadata accessor for LocationOfInterest();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v199 - 8) + 16))(a1, a2, v199);
              goto LABEL_206;
            case 5u:
              uint64_t v201 = *(void **)a2;
              uint64_t v200 = *((void *)a2 + 1);
              *a1 = *(void *)a2;
              a1[1] = v200;
              uint64_t v202 = *((void *)a2 + 3);
              a1[2] = *((void *)a2 + 2);
              a1[3] = v202;
              uint64_t v203 = *((void *)a2 + 5);
              a1[4] = *((void *)a2 + 4);
              a1[5] = v203;
              a1[6] = *((void *)a2 + 6);
              uint64_t v204 = type metadata accessor for SearchLocation();
              uint64_t v205 = *(int *)(v204 + 32);
              uint64_t v398 = (char *)a1 + v205;
              uint64_t v403 = v204;
              uint64_t v206 = &a2[v205];
              uint64_t v207 = type metadata accessor for Location();
              id v208 = v201;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v206, 1, v207))
              {
                uint64_t v209 = sub_10017DF08(&qword_100E639E8);
                memcpy(v398, v206, *(void *)(*(void *)(v209 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v207 - 8) + 16))(v398, v206, v207);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v398, 0, 1, v207);
              }
              uint64_t v368 = *(int *)(v403 + 36);
              uint64_t v369 = (char *)a1 + v368;
              uint64_t v370 = &a2[v368];
              *(_OWORD *)uint64_t v369 = *(_OWORD *)v370;
              v369[16] = v370[16];
              goto LABEL_206;
            default:
              goto LABEL_166;
          }
        case 4u:
          uint64_t v86 = type metadata accessor for InteractiveMapViewAction();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
            case 1u:
            case 2u:
            case 4u:
              uint64_t v196 = type metadata accessor for Location();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v196 - 8) + 16))(a1, a2, v196);
              goto LABEL_162;
            case 3u:
              uint64_t v195 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v195 - 8) + 16))(a1, a2, v195);
LABEL_162:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(void *)(*(void *)(v86 - 8) + 64));
              break;
          }
          goto LABEL_207;
        case 5u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((unsigned char *)a1 + 16) = a2[16];
          *((unsigned char *)a1 + 17) = a2[17];
          *((unsigned char *)a1 + 18) = a2[18];
          uint64_t v87 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
          uint64_t v88 = (char *)a1 + v87;
          uint64_t v89 = &a2[v87];
          uint64_t v90 = type metadata accessor for DynamicTypeSize();
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v90 - 8) + 16))(v88, v89, v90);
          goto LABEL_207;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
          goto LABEL_214;
      }
      goto LABEL_214;
    case 7u:
      uint64_t v14 = type metadata accessor for ModalViewAction();
      int v32 = swift_getEnumCaseMultiPayload();
      if (v32 == 3)
      {
        uint64_t v43 = *(void *)a2;
        if ((~*(void *)a2 & 0xF000000000000006) != 0)
        {
          uint64_t v106 = *((void *)a2 + 1);
          uint64_t v107 = *((void *)a2 + 3);
          uint64_t v109 = *((void *)a2 + 5);
          uint64_t v108 = *((void *)a2 + 6);
          uint64_t v110 = *((void *)a2 + 7);
          uint64_t v388 = *((void *)a2 + 4);
          uint64_t v392 = *((void *)a2 + 8);
          uint64_t v394 = *((void *)a2 + 9);
          uint64_t v397 = *((void *)a2 + 10);
          uint64_t v402 = *((void *)a2 + 11);
          uint64_t v111 = *((void *)a2 + 2);
          sub_100274EDC(v43);
          *a1 = v43;
          a1[1] = v106;
          a1[2] = v111;
          a1[3] = v107;
          a1[4] = v388;
          a1[5] = v109;
          a1[6] = v108;
          a1[7] = v110;
          a1[8] = v392;
          a1[9] = v394;
          a1[10] = v397;
          a1[11] = v402;
        }
        else
        {
          memcpy(a1, a2, 0x60uLL);
        }
      }
      else
      {
        if (v32) {
          goto LABEL_59;
        }
        uint64_t v33 = type metadata accessor for LocationPreviewViewAction();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v34 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v34 - 8) + 16))(a1, a2, v34);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
LABEL_99:
          memcpy(a1, a2, *(void *)(*(void *)(v33 - 8) + 64));
        }
      }
      goto LABEL_213;
    case 8u:
      uint64_t v14 = type metadata accessor for LocationViewAction();
      int v35 = swift_getEnumCaseMultiPayload();
      if (v35 == 2)
      {
        uint64_t v55 = type metadata accessor for Location();
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v55 - 8) + 16))(a1, a2, v55);
        uint64_t v56 = *(int *)(sub_10017DF08(&qword_100E66450) + 48);
        uint64_t v57 = (char *)a1 + v56;
        uint64_t v58 = &a2[v56];
        uint64_t v59 = type metadata accessor for LocationOfInterest();
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
        uint64_t v60 = *(int *)(sub_10017DF08(&qword_100E66448) + 48);
        uint64_t v61 = (char *)a1 + v60;
        uint64_t v62 = &a2[v60];
        long long v63 = *((_OWORD *)v62 + 1);
        *(_OWORD *)uint64_t v61 = *(_OWORD *)v62;
        *((_OWORD *)v61 + 1) = v63;
        v61[32] = v62[32];
      }
      else if (v35 == 1)
      {
        uint64_t v64 = type metadata accessor for LocationComponentAction(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v65 = type metadata accessor for URL();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v65 - 8) + 16))(a1, a2, v65);
            uint64_t v66 = sub_10017DF08(&qword_100E66478);
            *((unsigned char *)a1 + *(int *)(v66 + 48)) = a2[*(int *)(v66 + 48)];
            goto LABEL_131;
          case 1u:
            uint64_t v150 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v150 - 8) + 16))(a1, a2, v150);
            goto LABEL_131;
          case 2u:
            uint64_t v151 = type metadata accessor for DetailCondition();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v151 - 8) + 16))(a1, a2, v151);
            uint64_t v152 = sub_10017DF08(&qword_100E66488);
            *((unsigned char *)a1 + *(int *)(v152 + 48)) = a2[*(int *)(v152 + 48)];
            goto LABEL_131;
          case 4u:
            *(unsigned char *)a1 = *a2;
            uint64_t v153 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
            uint64_t v154 = (char *)a1 + v153;
            uint64_t v155 = &a2[v153];
            uint64_t v156 = type metadata accessor for Location();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v156 - 8) + 16))(v154, v155, v156);
LABEL_131:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v64 - 8) + 64));
            break;
        }
        uint64_t v157 = sub_10017DF08(&qword_100E66458);
        uint64_t v158 = *(int *)(v157 + 48);
        uint64_t v159 = (char *)a1 + v158;
        long long v160 = &a2[v158];
        long long v161 = *((_OWORD *)v160 + 1);
        *(_OWORD *)uint64_t v159 = *(_OWORD *)v160;
        *((_OWORD *)v159 + 1) = v161;
        v159[32] = v160[32];
        uint64_t v162 = *(int *)(v157 + 64);
        long long v163 = (char *)a1 + v162;
        uint64_t v164 = &a2[v162];
        uint64_t v165 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v164, 1, v165))
        {
          uint64_t v166 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v163, v164, *(void *)(*(void *)(v166 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v165 - 8) + 16))(v163, v164, v165);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v163, 0, 1, v165);
        }
      }
      else
      {
        if (v35) {
          goto LABEL_59;
        }
LABEL_36:
        uint64_t v36 = type metadata accessor for Location();
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v36 - 8) + 16))(a1, a2, v36);
      }
      goto LABEL_213;
    case 9u:
      type metadata accessor for WeatherDataAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v116 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v116;
          uint64_t v117 = (uint64_t *)(a2 + 16);
          unint64_t v118 = *((void *)a2 + 3);
          swift_bridgeObjectRetain();
          if (v118 >= 0xE)
          {
            a1[2] = *v117;
            a1[3] = v118;
            swift_bridgeObjectRetain();
          }
          else
          {
            *((_OWORD *)a1 + 1) = *(_OWORD *)v117;
          }
          uint64_t v167 = *((void *)a2 + 5);
          a1[4] = *((void *)a2 + 4);
          a1[5] = v167;
          goto LABEL_137;
        case 3u:
        case 9u:
          uint64_t v67 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v67;
          uint64_t v68 = *((void *)a2 + 3);
          a1[2] = *((void *)a2 + 2);
          a1[3] = v68;
          swift_bridgeObjectRetain();
          goto LABEL_137;
        case 4u:
          uint64_t v119 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v119;
          swift_bridgeObjectRetain();
          uint64_t v393 = (int *)sub_10017DF08(&qword_100E6BBC0);
          uint64_t v120 = v393[12];
          uint64_t v121 = (uint64_t *)((char *)a1 + v120);
          uint64_t v122 = &a2[v120];
          uint64_t v123 = *(void *)&a2[v120 + 8];
          *uint64_t v121 = *(void *)&a2[v120];
          v121[1] = v123;
          uint64_t v124 = (int *)type metadata accessor for WeatherData(0);
          uint64_t v125 = v124[5];
          uint64_t v126 = (char *)v121 + v125;
          uint64_t v127 = (char *)&v122[v125];
          uint64_t v128 = type metadata accessor for Locale();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v127, 1, v128))
          {
            uint64_t v129 = sub_10017DF08(&qword_100E63730);
            memcpy(v126, v127, *(void *)(*(void *)(v129 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 16))(v126, v127, v128);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v126, 0, 1, v128);
          }
          uint64_t v171 = v124[6];
          char v172 = (char *)v121 + v171;
          uint64_t v173 = (char *)&v122[v171];
          uint64_t v174 = type metadata accessor for WeatherDataModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v174 - 8) + 16))(v172, v173, v174);
          uint64_t v175 = v124[7];
          uint64_t v176 = (char *)v121 + v175;
          uint64_t v177 = (char *)&v122[v175];
          uint64_t v178 = sub_10017DF08(&qword_100E63738);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v177, 1, v178))
          {
            uint64_t v179 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v176, v177, *(void *)(*(void *)(v179 - 8) + 64));
          }
          else
          {
            uint64_t v180 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v180 - 8) + 16))(v176, v177, v180);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v176, 0, 1, v178);
          }
          uint64_t v181 = v124[8];
          uint64_t v182 = (void *)((char *)v121 + v181);
          uint64_t v183 = (char *)&v122[v181];
          uint64_t v184 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          int v185 = swift_getEnumCaseMultiPayload();
          if (v185 == 1)
          {
            uint64_t v187 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v187 - 8) + 16))(v182, v183, v187);
            goto LABEL_153;
          }
          if (!v185)
          {
            uint64_t v186 = *((void *)v183 + 1);
            *uint64_t v182 = *(void *)v183;
            v182[1] = v186;
            swift_bridgeObjectRetain();
LABEL_153:
            swift_storeEnumTagMultiPayload();
            goto LABEL_155;
          }
          memcpy(v182, v183, *(void *)(*(void *)(v184 - 8) + 64));
LABEL_155:
          uint64_t v188 = v124[9];
          uint64_t v189 = (char *)v121 + v188;
          uint64_t v190 = (char *)&v122[v188];
          uint64_t v191 = type metadata accessor for WeatherDataOverrides();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v190, 1, v191))
          {
            uint64_t v192 = sub_10017DF08(&qword_100E63740);
            memcpy(v189, v190, *(void *)(*(void *)(v192 - 8) + 64));
          }
          else
          {
            uint64_t v193 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v190, 1, v193))
            {
              uint64_t v194 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v189, v190, *(void *)(*(void *)(v194 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v193 - 8) + 16))(v189, v190, v193);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v189, 0, 1, v193);
            }
            uint64_t v221 = *(int *)(v191 + 20);
            uint64_t v222 = &v189[v221];
            uint64_t v223 = &v190[v221];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v190[v221], 1, v193))
            {
              uint64_t v224 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v222, v223, *(void *)(*(void *)(v224 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v193 - 8) + 16))(v222, v223, v193);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v222, 0, 1, v193);
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v189, 0, 1, v191);
          }
          uint64_t v225 = v393[16];
          uint64_t v226 = (char *)a1 + v225;
          uint64_t v227 = &a2[v225];
          uint64_t v228 = type metadata accessor for UUID();
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v228 - 8) + 16))(v226, v227, v228);
          uint64_t v229 = type metadata accessor for PreprocessedWeatherData();
          *(void *)&v226[*(int *)(v229 + 20)] = *(void *)&v227[*(int *)(v229 + 20)];
          uint64_t v396 = (int *)v229;
          uint64_t v400 = v227;
          uint64_t v230 = *(int *)(v229 + 24);
          uint64_t v405 = v226;
          uint64_t v231 = &v226[v230];
          uint64_t v232 = (char *)&v227[v230];
          uint64_t v233 = *(void *)&v227[v230];
          uint64_t v234 = *((void *)v232 + 1);
          *(void *)uint64_t v231 = v233;
          *((void *)v231 + 1) = v234;
          uint64_t v235 = *((void *)v232 + 3);
          *((void *)v231 + 2) = *((void *)v232 + 2);
          *((void *)v231 + 3) = v235;
          uint64_t v236 = *((void *)v232 + 5);
          *((void *)v231 + 4) = *((void *)v232 + 4);
          *((void *)v231 + 5) = v236;
          uint64_t v237 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
          uint64_t v238 = *(int *)(v237 + 28);
          uint64_t v386 = &v231[v238];
          uint64_t v389 = v237;
          uint64_t v239 = &v232[v238];
          uint64_t v240 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v239, 1, v240))
          {
            uint64_t v241 = sub_10017DF08(&qword_100E63750);
            memcpy(v386, v239, *(void *)(*(void *)(v241 - 8) + 64));
          }
          else
          {
            uint64_t v242 = *((void *)v239 + 1);
            *(void *)uint64_t v386 = *(void *)v239;
            *((void *)v386 + 1) = v242;
            uint64_t v384 = v240;
            uint64_t v243 = *(int *)(v240 + 20);
            uint64_t v244 = &v386[v243];
            uint64_t v245 = &v239[v243];
            uint64_t v246 = type metadata accessor for TemperatureScaleConfiguration();
            uint64_t v247 = *(void (**)(char *, char *, uint64_t))(*(void *)(v246 - 8) + 16);
            swift_bridgeObjectRetain();
            v247(v244, v245, v246);
            uint64_t v248 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
            *(void *)&v244[v248[5]] = *(void *)&v245[v248[5]];
            *(void *)&v244[v248[6]] = *(void *)&v245[v248[6]];
            *(void *)&v244[v248[7]] = *(void *)&v245[v248[7]];
            uint64_t v249 = v248[8];
            uint64_t v250 = &v244[v249];
            uint64_t v251 = &v245[v249];
            uint64_t v253 = *(void *)v251;
            uint64_t v252 = *((void *)v251 + 1);
            *(void *)uint64_t v250 = v253;
            *((void *)v250 + 1) = v252;
            v244[v248[9]] = v245[v248[9]];
            swift_bridgeObjectRetain();
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v386, 0, 1, v384);
          }
          uint64_t v254 = *(int *)(v389 + 32);
          uint64_t v255 = &v231[v254];
          uint64_t v256 = &v232[v254];
          uint64_t v257 = *((void *)v256 + 1);
          *(void *)uint64_t v255 = *(void *)v256;
          *((void *)v255 + 1) = v257;
          uint64_t v258 = v396[7];
          uint64_t v259 = &v405[v258];
          uint64_t v260 = &v400[v258];
          *(void *)&v405[v258] = *(void *)&v400[v258];
          uint64_t v261 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
          uint64_t v262 = &v259[v261];
          uint64_t v263 = &v260[v261];
          uint64_t v264 = type metadata accessor for WeatherDescription();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v381 = v264;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v263, 1, v264))
          {
            uint64_t v265 = sub_10017DF08(&qword_100E63758);
            memcpy(v262, v263, *(void *)(*(void *)(v265 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v264 - 8) + 16))(v262, v263, v264);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v262, 0, 1, v264);
          }
          uint64_t v266 = v396[8];
          uint64_t v267 = &v405[v266];
          uint64_t v268 = &v400[v266];
          uint64_t v390 = *(void *)&v400[v266 + 8];
          *(void *)uint64_t v267 = *(void *)&v400[v266];
          *((void *)v267 + 1) = v390;
          uint64_t v269 = *(void *)&v400[v266 + 24];
          *((void *)v267 + 2) = *(void *)&v400[v266 + 16];
          *((void *)v267 + 3) = v269;
          uint64_t v270 = *(void *)&v400[v266 + 40];
          *((void *)v267 + 4) = *(void *)&v400[v266 + 32];
          *((void *)v267 + 5) = v270;
          uint64_t v271 = *(void *)&v400[v266 + 56];
          *((void *)v267 + 6) = *(void *)&v400[v266 + 48];
          *((void *)v267 + 7) = v271;
          uint64_t v272 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
          uint64_t v273 = &v267[v272];
          v274 = &v268[v272];
          uint64_t v275 = type metadata accessor for Date();
          uint64_t v276 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v275 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v385 = v276;
          v276(v273, v274, v275);
          uint64_t v277 = v273;
          uint64_t v278 = type metadata accessor for WeatherConditionBackgroundTimeData();
          uint64_t v279 = *(int *)(v278 + 20);
          uint64_t v280 = &v277[v279];
          uint64_t v281 = &v274[v279];
          uint64_t v282 = type metadata accessor for Elevation();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v281, 1, v282))
          {
            uint64_t v283 = sub_10017DF08(&qword_100E63760);
            memcpy(v280, v281, *(void *)(*(void *)(v283 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v282 - 8) + 16))(v280, v281, v282);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v280, 0, 1, v282);
          }
          uint64_t v284 = *(int *)(v278 + 24);
          char v285 = &v277[v284];
          uint64_t v286 = &v274[v284];
          uint64_t v287 = type metadata accessor for BackgroundMoonData();
          uint64_t v387 = v275;
          uint64_t v391 = v278;
          uint64_t v383 = v282;
          uint64_t v375 = v287;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v286, 1, v287))
          {
            uint64_t v288 = sub_10017DF08(&qword_100E63768);
            memcpy(v285, v286, *(void *)(*(void *)(v288 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v287 - 8) + 16))(v285, v286, v287);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v285, 0, 1, v287);
          }
          uint64_t v289 = v396[9];
          uint64_t v290 = &v405[v289];
          uint64_t v291 = &v400[v289];
          uint64_t v292 = *((void *)v291 + 1);
          *(void *)uint64_t v290 = *(void *)v291;
          *((void *)v290 + 1) = v292;
          uint64_t v293 = *((void *)v291 + 3);
          *((void *)v290 + 2) = *((void *)v291 + 2);
          *((void *)v290 + 3) = v293;
          uint64_t v294 = *((void *)v291 + 5);
          *((void *)v290 + 4) = *((void *)v291 + 4);
          *((void *)v290 + 5) = v294;
          uint64_t v295 = *((void *)v291 + 7);
          *((void *)v290 + 6) = *((void *)v291 + 6);
          *((void *)v290 + 7) = v295;
          uint64_t v296 = *((void *)v291 + 9);
          *((void *)v290 + 8) = *((void *)v291 + 8);
          *((void *)v290 + 9) = v296;
          uint64_t v297 = *((void *)v291 + 11);
          *((void *)v290 + 10) = *((void *)v291 + 10);
          *((void *)v290 + 11) = v297;
          uint64_t v298 = *((void *)v291 + 13);
          *((void *)v290 + 12) = *((void *)v291 + 12);
          *((void *)v290 + 13) = v298;
          uint64_t v299 = v396[10];
          uint64_t v377 = &v400[v299];
          uint64_t v379 = &v405[v299];
          unint64_t v376 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v381 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v376(v379, v377, v381);
          uint64_t v300 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
          uint64_t v301 = &v379[v300];
          uint64_t v302 = &v377[v300];
          uint64_t v303 = *((void *)v302 + 1);
          *(void *)uint64_t v301 = *(void *)v302;
          *((void *)v301 + 1) = v303;
          uint64_t v304 = v396[11];
          uint64_t v305 = &v405[v304];
          uint64_t v306 = &v400[v304];
          uint64_t v307 = *((void *)v306 + 1);
          *(void *)uint64_t v305 = *(void *)v306;
          *((void *)v305 + 1) = v307;
          uint64_t v308 = *((void *)v306 + 3);
          *((void *)v305 + 2) = *((void *)v306 + 2);
          *((void *)v305 + 3) = v308;
          uint64_t v309 = *((void *)v306 + 5);
          *((void *)v305 + 4) = *((void *)v306 + 4);
          *((void *)v305 + 5) = v309;
          uint64_t v310 = v396[12];
          uint64_t v311 = &v405[v310];
          uint64_t v312 = &v400[v310];
          uint64_t v313 = type metadata accessor for PressureTrend();
          uint64_t v314 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v313 - 8) + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v314(v311, v312, v313);
          uint64_t v315 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
          uint64_t v316 = v315[5];
          uint64_t v317 = &v311[v316];
          uint64_t v318 = &v312[v316];
          uint64_t v319 = *((void *)v318 + 1);
          *(void *)uint64_t v317 = *(void *)v318;
          *((void *)v317 + 1) = v319;
          uint64_t v320 = v315[6];
          uint64_t v321 = &v311[v320];
          uint64_t v322 = &v312[v320];
          uint64_t v382 = *((void *)v322 + 1);
          *(void *)uint64_t v321 = *(void *)v322;
          *((void *)v321 + 1) = v382;
          uint64_t v323 = v315[7];
          uint64_t v324 = &v311[v323];
          uint64_t v325 = &v312[v323];
          uint64_t v380 = *((void *)v325 + 1);
          *(void *)uint64_t v324 = *(void *)v325;
          *((void *)v324 + 1) = v380;
          *(void *)&v311[v315[8]] = *(void *)&v312[v315[8]];
          uint64_t v326 = v315[9];
          uint64_t v327 = &v311[v326];
          uint64_t v328 = &v312[v326];
          uint64_t v378 = *((void *)v328 + 1);
          *(void *)uint64_t v327 = *(void *)v328;
          *((void *)v327 + 1) = v378;
          uint64_t v329 = v396[13];
          uint64_t v330 = &v405[v329];
          uint64_t v331 = &v400[v329];
          uint64_t v332 = *((void *)v331 + 1);
          *(void *)uint64_t v330 = *(void *)v331;
          *((void *)v330 + 1) = v332;
          uint64_t v333 = *((void *)v331 + 3);
          *((void *)v330 + 2) = *((void *)v331 + 2);
          *((void *)v330 + 3) = v333;
          uint64_t v334 = *((void *)v331 + 5);
          *((void *)v330 + 4) = *((void *)v331 + 4);
          *((void *)v330 + 5) = v334;
          uint64_t v335 = *((void *)v331 + 7);
          *((void *)v330 + 6) = *((void *)v331 + 6);
          *((void *)v330 + 7) = v335;
          uint64_t v336 = *((void *)v331 + 9);
          *((void *)v330 + 8) = *((void *)v331 + 8);
          *((void *)v330 + 9) = v336;
          uint64_t v337 = *((void *)v331 + 11);
          *((void *)v330 + 10) = *((void *)v331 + 10);
          *((void *)v330 + 11) = v337;
          uint64_t v338 = *((void *)v331 + 13);
          *((void *)v330 + 12) = *((void *)v331 + 12);
          *((void *)v330 + 13) = v338;
          uint64_t v339 = *((void *)v331 + 15);
          *((void *)v330 + 14) = *((void *)v331 + 14);
          *((void *)v330 + 15) = v339;
          uint64_t v340 = *((void *)v331 + 17);
          *((void *)v330 + 16) = *((void *)v331 + 16);
          *((void *)v330 + 17) = v340;
          uint64_t v341 = *((void *)v331 + 19);
          *((void *)v330 + 18) = *((void *)v331 + 18);
          *((void *)v330 + 19) = v341;
          uint64_t v342 = *((void *)v331 + 21);
          *((void *)v330 + 20) = *((void *)v331 + 20);
          *((void *)v330 + 21) = v342;
          uint64_t v343 = *((void *)v331 + 23);
          *((void *)v330 + 22) = *((void *)v331 + 22);
          *((void *)v330 + 23) = v343;
          uint64_t v344 = *((void *)v331 + 25);
          *((void *)v330 + 24) = *((void *)v331 + 24);
          *((void *)v330 + 25) = v344;
          *((_OWORD *)v330 + 13) = *((_OWORD *)v331 + 13);
          *((void *)v330 + 28) = *((void *)v331 + 28);
          uint64_t v345 = v396[14];
          uint64_t v346 = &v405[v345];
          uint64_t v347 = &v400[v345];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v385(v346, v347, v387);
          uint64_t v348 = *(int *)(v391 + 20);
          uint64_t v349 = &v346[v348];
          uint64_t v350 = &v347[v348];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v347[v348], 1, v383))
          {
            uint64_t v351 = sub_10017DF08(&qword_100E63760);
            memcpy(v349, v350, *(void *)(*(void *)(v351 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v383 - 8) + 16))(v349, v350, v383);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v349, 0, 1, v383);
          }
          uint64_t v352 = *(int *)(v391 + 24);
          uint64_t v353 = &v346[v352];
          uint64_t v354 = &v347[v352];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v347[v352], 1, v375))
          {
            uint64_t v355 = sub_10017DF08(&qword_100E63768);
            memcpy(v353, v354, *(void *)(*(void *)(v355 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v375 - 8) + 16))(v353, v354, v375);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v353, 0, 1, v375);
          }
          uint64_t v356 = v396[15];
          uint64_t v357 = &v405[v356];
          uint64_t v358 = &v400[v356];
          uint64_t v359 = *((void *)v358 + 1);
          *(void *)uint64_t v357 = *(void *)v358;
          *((void *)v357 + 1) = v359;
          uint64_t v360 = *((void *)v358 + 3);
          *((void *)v357 + 2) = *((void *)v358 + 2);
          *((void *)v357 + 3) = v360;
          uint64_t v361 = *((void *)v358 + 5);
          *((void *)v357 + 4) = *((void *)v358 + 4);
          *((void *)v357 + 5) = v361;
          uint64_t v362 = *((void *)v358 + 7);
          *((void *)v357 + 6) = *((void *)v358 + 6);
          *((void *)v357 + 7) = v362;
          uint64_t v363 = *((void *)v358 + 9);
          *((void *)v357 + 8) = *((void *)v358 + 8);
          *((void *)v357 + 9) = v363;
          uint64_t v364 = *((void *)v358 + 11);
          *((void *)v357 + 10) = *((void *)v358 + 10);
          *((void *)v357 + 11) = v364;
          uint64_t v365 = *((void *)v358 + 13);
          *((void *)v357 + 12) = *((void *)v358 + 12);
          *((void *)v357 + 13) = v365;
          uint64_t v366 = v393[20];
          uint64_t v401 = (uint64_t *)((char *)a1 + v366);
          uint64_t v406 = &a2[v366];
          type metadata accessor for NewsDataModel();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *uint64_t v401 = *(void *)v406;
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v367 = type metadata accessor for News();
            (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v367 - 8) + 16))(v401, v406, v367);
          }
LABEL_212:
          swift_storeEnumTagMultiPayload();
LABEL_213:
          swift_storeEnumTagMultiPayload();
LABEL_214:
          swift_storeEnumTagMultiPayload();
LABEL_215:
          *((unsigned char *)a1 + *(int *)(a3 + 20)) = a2[*(int *)(a3 + 20)];
          return a1;
        case 5u:
          uint64_t v130 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v130;
          swift_bridgeObjectRetain();
          uint64_t v131 = *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48);
          uint64_t v132 = (uint64_t *)((char *)a1 + v131);
          uint64_t v133 = &a2[v131];
          type metadata accessor for NewsDataModel();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *uint64_t v132 = *(void *)v133;
            swift_bridgeObjectRetain();
          }
          else
          {
            uint64_t v168 = type metadata accessor for News();
            (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v168 - 8) + 16))(v132, v133, v168);
          }
          goto LABEL_212;
        case 6u:
          uint64_t v134 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v134;
          swift_bridgeObjectRetain();
          uint64_t v135 = *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
          uint64_t v136 = (char *)a1 + v135;
          uint64_t v137 = &a2[v135];
          uint64_t v138 = type metadata accessor for AvailableDataSets();
          goto LABEL_111;
        case 8u:
          uint64_t v139 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v139;
          swift_bridgeObjectRetain();
          uint64_t v140 = *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
          uint64_t v136 = (char *)a1 + v140;
          uint64_t v137 = &a2[v140];
          uint64_t v138 = type metadata accessor for WeatherStatisticsModel();
LABEL_111:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v138 - 8) + 16))(v136, v137, v138);
          goto LABEL_213;
        default:
          uint64_t v37 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v37;
LABEL_137:
          swift_bridgeObjectRetain();
          goto LABEL_213;
      }
    case 0xAu:
      uint64_t v14 = type metadata accessor for DebugAction();
      int v38 = swift_getEnumCaseMultiPayload();
      if (v38 == 1) {
        goto LABEL_36;
      }
      if (v38) {
        goto LABEL_59;
      }
      uint64_t v39 = type metadata accessor for WeatherCondition();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v39))
      {
        uint64_t v40 = sub_10017DF08(&qword_100E63A50);
        memcpy(a1, a2, *(void *)(*(void *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v39 - 8) + 16))(a1, a2, v39);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v39);
      }
      uint64_t v112 = *(int *)(sub_10017DF08(&qword_100E6F648) + 48);
      uint64_t v113 = (uint64_t *)((char *)a1 + v112);
      uint64_t v114 = &a2[v112];
      uint64_t v115 = *((void *)v114 + 1);
      *uint64_t v113 = *(void *)v114;
      v113[1] = v115;
      swift_bridgeObjectRetain();
      goto LABEL_213;
    case 0xBu:
      uint64_t v14 = type metadata accessor for ConditionDetailViewAction();
      int v15 = swift_getEnumCaseMultiPayload();
      switch(v15)
      {
        case 2:
          uint64_t v44 = *((void *)a2 + 1);
          *a1 = *(void *)a2;
          a1[1] = v44;
          uint64_t v45 = (int *)type metadata accessor for DetailChartSelection();
          uint64_t v46 = v45[5];
          uint64_t v47 = (char *)a1 + v46;
          uint64_t v48 = &a2[v46];
          uint64_t v49 = type metadata accessor for Date();
          uint64_t v50 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v49 - 8) + 16);
          swift_bridgeObjectRetain();
          v50(v47, v48, v49);
          v50((char *)a1 + v45[6], &a2[v45[6]], v49);
          v50((char *)a1 + v45[7], &a2[v45[7]], v49);
          *(uint64_t *)((char *)a1 + v45[8]) = *(void *)&a2[v45[8]];
          uint64_t v51 = v45[9];
          uint64_t v52 = (char *)a1 + v51;
          uint64_t v53 = &a2[v51];
          v52[8] = v53[8];
          *(void *)uint64_t v52 = *(void *)v53;
          goto LABEL_213;
        case 1:
          uint64_t v54 = type metadata accessor for DetailCondition();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v54 - 8) + 16))(a1, a2, v54);
          goto LABEL_213;
        case 0:
LABEL_13:
          uint64_t v16 = type metadata accessor for Date();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
          goto LABEL_213;
      }
LABEL_59:
      memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
      goto LABEL_214;
    case 0xDu:
      uint64_t v14 = type metadata accessor for MoonDetailViewAction();
      int v17 = swift_getEnumCaseMultiPayload();
      if (v17 == 1) {
        goto LABEL_13;
      }
      if (v17) {
        goto LABEL_59;
      }
      type metadata accessor for MoonDetailSelectedDate();
      swift_getEnumCaseMultiPayload();
      uint64_t v18 = type metadata accessor for Date();
      (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
      swift_storeEnumTagMultiPayload();
      goto LABEL_213;
    case 0xEu:
      uint64_t v14 = type metadata accessor for AveragesDetailViewAction();
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_59;
      }
      *a1 = *(void *)a2;
      uint64_t v19 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      uint64_t v20 = v19[5];
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = &a2[v20];
      uint64_t v23 = type metadata accessor for Date();
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
      *(uint64_t *)((char *)a1 + v19[6]) = *(void *)&a2[v19[6]];
      *(uint64_t *)((char *)a1 + v19[7]) = *(void *)&a2[v19[7]];
      swift_storeEnumTagMultiPayload();
      goto LABEL_214;
    case 0x10u:
      uint64_t v24 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v24;
      swift_bridgeObjectRetain();
      goto LABEL_214;
    case 0x11u:
      uint64_t v41 = type metadata accessor for PerformanceTestAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v42 = type metadata accessor for DetailCondition();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v42 - 8) + 16))(a1, a2, v42);
          goto LABEL_69;
        case 2u:
          uint64_t v69 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v69 - 8) + 16))(a1, a2, v69);
          goto LABEL_69;
        case 3u:
          *a1 = *(void *)a2;
          uint64_t v70 = sub_10017DF08((uint64_t *)&unk_100EA0250);
          uint64_t v71 = *(int *)(v70 + 48);
          uint64_t v72 = (char *)a1 + v71;
          uint64_t v73 = &a2[v71];
          uint64_t v74 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v74 - 8) + 16))(v72, v73, v74);
          *((unsigned char *)a1 + *(int *)(v70 + 64)) = a2[*(int *)(v70 + 64)];
          goto LABEL_69;
        case 4u:
          uint64_t v75 = type metadata accessor for WeatherCondition();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v75 - 8) + 16))(a1, a2, v75);
LABEL_69:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v41 - 8) + 64));
          break;
      }
      goto LABEL_214;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
      goto LABEL_215;
  }
}

uint64_t *sub_100B895FC(uint64_t *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != (uint64_t *)a2)
  {
    sub_1001ABE70((uint64_t)a1);
    uint64_t v6 = type metadata accessor for MainAction();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v7 = type metadata accessor for AppConfiguration();
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_215;
      case 2u:
        uint64_t v15 = type metadata accessor for EnvironmentAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v25 = type metadata accessor for Locale();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
            goto LABEL_214;
          case 3u:
            uint64_t v33 = type metadata accessor for ActivityAction();
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 1)
            {
              type metadata accessor for PreviewLocation();
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  uint64_t v187 = type metadata accessor for LocationOfInterest();
                  (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v187 - 8) + 16))(a1, a2, v187);
                  break;
                case 2u:
                  uint64_t v326 = *(void **)a2;
                  *a1 = *(void *)a2;
                  a1[1] = *((void *)a2 + 1);
                  a1[2] = *((void *)a2 + 2);
                  a1[3] = *((void *)a2 + 3);
                  a1[4] = *((void *)a2 + 4);
                  a1[5] = *((void *)a2 + 5);
                  a1[6] = *((void *)a2 + 6);
                  uint64_t v188 = type metadata accessor for SearchLocation();
                  uint64_t v189 = *(int *)(v188 + 32);
                  uint64_t v331 = (char *)a1 + v189;
                  uint64_t v336 = v188;
                  uint64_t v317 = &a2[v189];
                  uint64_t v190 = type metadata accessor for Location();
                  id v191 = v326;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v317, 1, v190))
                  {
                    uint64_t v192 = sub_10017DF08(&qword_100E639E8);
                    memcpy(v331, v317, *(void *)(*(void *)(v192 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v190 - 8) + 16))(v331, v317, v190);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v331, 0, 1, v190);
                  }
                  uint64_t v297 = *(int *)(v336 + 36);
                  uint64_t v298 = (char *)a1 + v297;
                  uint64_t v299 = &a2[v297];
                  long long v300 = *(_OWORD *)v299;
                  v298[16] = v299[16];
                  *(_OWORD *)uint64_t v298 = v300;
                  break;
                case 3u:
                  *(_OWORD *)a1 = *(_OWORD *)a2;
                  a1[2] = *((void *)a2 + 2);
                  a1[3] = *((void *)a2 + 3);
                  swift_bridgeObjectRetain();
                  break;
                default:
                  uint64_t v131 = type metadata accessor for Location();
                  (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v131 - 8) + 16))(a1, a2, v131);
                  break;
              }
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              if (EnumCaseMultiPayload) {
                goto LABEL_100;
              }
              type metadata accessor for SavedLocation();
              if (swift_getEnumCaseMultiPayload() == 1) {
                uint64_t v88 = type metadata accessor for SavedLocation.Placeholder();
              }
              else {
                uint64_t v88 = type metadata accessor for Location();
              }
              (*(void (**)(uint64_t *, unsigned __int8 *))(*(void *)(v88 - 8) + 16))(a1, a2);
              swift_storeEnumTagMultiPayload();
            }
            goto LABEL_213;
          case 4u:
            goto LABEL_82;
          case 9u:
            if (*((void *)a2 + 1) >= 2uLL)
            {
LABEL_82:
              *a1 = *(void *)a2;
              a1[1] = *((void *)a2 + 1);
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)a1 = *(_OWORD *)a2;
            }
            goto LABEL_214;
          case 0xBu:
            uint64_t v33 = type metadata accessor for ConfiguredUnitsAction();
            int v89 = swift_getEnumCaseMultiPayload();
            if (v89 == 1)
            {
              uint64_t v132 = type metadata accessor for UnitConfiguration.Temperature();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v132))
              {
                uint64_t v133 = sub_10017DF08(&qword_100E6F620);
                memcpy(a1, a2, *(void *)(*(void *)(v133 - 8) + 64));
              }
              else
              {
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v132 - 8) + 16))(a1, a2, v132);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v132);
              }
            }
            else
            {
              if (v89) {
                goto LABEL_100;
              }
              uint64_t v90 = type metadata accessor for ConfiguredUnit();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v90 - 8) + 16))(a1, a2, v90);
            }
            break;
          default:
            goto LABEL_60;
        }
        goto LABEL_213;
      case 3u:
        uint64_t v8 = type metadata accessor for LocationsAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v9 = type metadata accessor for CurrentLocation();
            if (swift_getEnumCaseMultiPayload() > 2)
            {
              memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
            }
            else
            {
              uint64_t v153 = type metadata accessor for Location();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v153 - 8) + 16))(a1, a2, v153);
              swift_storeEnumTagMultiPayload();
            }
            goto LABEL_141;
          case 1u:
            uint64_t v74 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v74 - 8) + 16))(a1, a2, v74);
            uint64_t v75 = sub_10017DF08(&qword_100E6F628);
            *((unsigned char *)a1 + *(int *)(v75 + 48)) = a2[*(int *)(v75 + 48)];
            goto LABEL_141;
          case 2u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_141;
          case 5u:
            *a1 = *(void *)a2;
            swift_bridgeObjectRetain();
            goto LABEL_141;
          case 6u:
            uint64_t v79 = *(void *)a2;
            uint64_t v80 = *((void *)a2 + 1);
            unsigned __int8 v81 = a2[16];
            sub_10015458C(*(void *)a2, v80, v81);
            *a1 = v79;
            a1[1] = v80;
            *((unsigned char *)a1 + 16) = v81;
LABEL_141:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
            break;
        }
        goto LABEL_215;
      case 4u:
        uint64_t v26 = type metadata accessor for NotificationsAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v27 = type metadata accessor for LocationModel();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v27))
            {
              uint64_t v28 = type metadata accessor for NotificationLocation();
              memcpy(a1, a2, *(void *)(*(void *)(v28 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v27);
            }
            uint64_t v125 = *(int *)(sub_10017DF08((uint64_t *)&unk_100EAC3E0) + 48);
            uint64_t v126 = (char *)a1 + v125;
            uint64_t v127 = &a2[v125];
            uint64_t v128 = type metadata accessor for URL();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v127, 1, v128))
            {
              uint64_t v129 = sub_10017DF08(&qword_100E749B0);
              memcpy(v126, v127, *(void *)(*(void *)(v129 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v128 - 8) + 16))(v126, v127, v128);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v126, 0, 1, v128);
            }
            goto LABEL_118;
          case 2u:
            uint64_t v91 = type metadata accessor for NotificationSubscription.Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v91 - 8) + 16))(a1, a2, v91);
            uint64_t v92 = *(int *)(sub_10017DF08(&qword_100E6F630) + 48);
            unint64_t v93 = (char *)a1 + v92;
            int v94 = &a2[v92];
            uint64_t v95 = type metadata accessor for NotificationSubscription.Kind();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v95 - 8) + 16))(v93, v94, v95);
            goto LABEL_118;
          case 3u:
          case 4u:
            *a1 = *(void *)a2;
            swift_bridgeObjectRetain();
            goto LABEL_118;
          case 5u:
            uint64_t v96 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v96 - 8) + 16))(a1, a2, v96);
            uint64_t v97 = *(int *)(sub_10017DF08(&qword_100E6F638) + 48);
            uint64_t v98 = (char *)a1 + v97;
            uint64_t v99 = &a2[v97];
            uint64_t v100 = type metadata accessor for NotificationSubscription.Kind();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v100 - 8) + 16))(v98, v99, v100);
LABEL_118:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v26 - 8) + 64));
            break;
        }
        goto LABEL_215;
      case 5u:
        uint64_t v15 = type metadata accessor for NotificationsOptInAction();
        int v29 = swift_getEnumCaseMultiPayload();
        switch(v29)
        {
          case 4:
            goto LABEL_14;
          case 3:
            *a1 = *(void *)a2;
            *((unsigned char *)a1 + 8) = a2[8];
            swift_bridgeObjectRetain();
            break;
          case 2:
            uint64_t v30 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v30 - 8) + 16))(a1, a2, v30);
            uint64_t v31 = sub_10017DF08(&qword_100E6BBD8);
            *((unsigned char *)a1 + *(int *)(v31 + 48)) = a2[*(int *)(v31 + 48)];
            break;
          default:
            goto LABEL_60;
        }
        goto LABEL_214;
      case 6u:
        uint64_t v10 = type metadata accessor for ViewAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v11 = type metadata accessor for ListViewAction();
            int v12 = swift_getEnumCaseMultiPayload();
            if (v12 == 2) {
              goto LABEL_120;
            }
            if (v12) {
              goto LABEL_167;
            }
            uint64_t v13 = type metadata accessor for LocationModel();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
            uint64_t v14 = sub_10017DF08(&qword_100E6F640);
            *((unsigned char *)a1 + *(int *)(v14 + 48)) = a2[*(int *)(v14 + 48)];
            goto LABEL_207;
          case 1u:
            uint64_t v11 = type metadata accessor for LocationViewerViewAction();
            int v76 = swift_getEnumCaseMultiPayload();
            if (v76 == 2)
            {
LABEL_120:
              uint64_t v130 = type metadata accessor for Location.Identifier();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v130 - 8) + 16))(a1, a2, v130);
            }
            else if (v76 == 1)
            {
              uint64_t v154 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v154 - 8) + 16))(a1, a2, v154);
            }
            else
            {
              if (v76)
              {
LABEL_167:
                memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
                goto LABEL_208;
              }
              uint64_t v77 = type metadata accessor for LocationModel();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v77 - 8) + 16))(a1, a2, v77);
            }
LABEL_207:
            swift_storeEnumTagMultiPayload();
LABEL_208:
            swift_storeEnumTagMultiPayload();
            break;
          case 3u:
            uint64_t v11 = type metadata accessor for SearchViewAction();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                uint64_t v78 = type metadata accessor for CodableError();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v78 - 8) + 16))(a1, a2, v78);
                goto LABEL_207;
              case 1u:
                *a1 = *(void *)a2;
                swift_bridgeObjectRetain();
                goto LABEL_207;
              case 2u:
                *a1 = *(void *)a2;
                a1[1] = *((void *)a2 + 1);
                swift_bridgeObjectRetain();
                goto LABEL_207;
              case 3u:
              case 6u:
                uint64_t v180 = type metadata accessor for Location();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v180 - 8) + 16))(a1, a2, v180);
                goto LABEL_207;
              case 4u:
                uint64_t v181 = type metadata accessor for LocationOfInterest();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v181 - 8) + 16))(a1, a2, v181);
                goto LABEL_207;
              case 5u:
                uint64_t v325 = *(void **)a2;
                *a1 = *(void *)a2;
                a1[1] = *((void *)a2 + 1);
                a1[2] = *((void *)a2 + 2);
                a1[3] = *((void *)a2 + 3);
                a1[4] = *((void *)a2 + 4);
                a1[5] = *((void *)a2 + 5);
                a1[6] = *((void *)a2 + 6);
                uint64_t v182 = type metadata accessor for SearchLocation();
                uint64_t v183 = *(int *)(v182 + 32);
                uint64_t v330 = v182;
                uint64_t v335 = (char *)a1 + v183;
                uint64_t v184 = &a2[v183];
                uint64_t v322 = type metadata accessor for Location();
                id v185 = v325;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v184, 1, v322))
                {
                  uint64_t v186 = sub_10017DF08(&qword_100E639E8);
                  memcpy(v335, v184, *(void *)(*(void *)(v186 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v322 - 8) + 16))(v335, v184, v322);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v335, 0, 1, v322);
                }
                uint64_t v293 = *(int *)(v330 + 36);
                uint64_t v294 = (char *)a1 + v293;
                uint64_t v295 = &a2[v293];
                long long v296 = *(_OWORD *)v295;
                v294[16] = v295[16];
                *(_OWORD *)uint64_t v294 = v296;
                goto LABEL_207;
              default:
                goto LABEL_167;
            }
          case 4u:
            uint64_t v82 = type metadata accessor for InteractiveMapViewAction();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
              case 1u:
              case 2u:
              case 4u:
                uint64_t v179 = type metadata accessor for Location();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v179 - 8) + 16))(a1, a2, v179);
                goto LABEL_163;
              case 3u:
                uint64_t v178 = type metadata accessor for WeatherMapOverlayKind();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v178 - 8) + 16))(a1, a2, v178);
LABEL_163:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(a1, a2, *(void *)(*(void *)(v82 - 8) + 64));
                break;
            }
            goto LABEL_208;
          case 5u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            *((unsigned char *)a1 + 16) = a2[16];
            *((unsigned char *)a1 + 17) = a2[17];
            *((unsigned char *)a1 + 18) = a2[18];
            uint64_t v83 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
            uint64_t v84 = (char *)a1 + v83;
            unsigned __int8 v85 = &a2[v83];
            uint64_t v86 = type metadata accessor for DynamicTypeSize();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v86 - 8) + 16))(v84, v85, v86);
            goto LABEL_208;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
            goto LABEL_215;
        }
        goto LABEL_215;
      case 7u:
        uint64_t v15 = type metadata accessor for ModalViewAction();
        int v32 = swift_getEnumCaseMultiPayload();
        if (v32 == 3)
        {
          uint64_t v42 = *(void *)a2;
          if ((~*(void *)a2 & 0xF000000000000006) != 0)
          {
            uint64_t v101 = *((void *)a2 + 1);
            uint64_t v102 = *((void *)a2 + 2);
            uint64_t v103 = *((void *)a2 + 3);
            uint64_t v104 = *((void *)a2 + 5);
            uint64_t v313 = *((void *)a2 + 6);
            uint64_t v316 = *((void *)a2 + 4);
            uint64_t v310 = *((void *)a2 + 7);
            uint64_t v320 = *((void *)a2 + 8);
            uint64_t v324 = *((void *)a2 + 9);
            uint64_t v329 = *((void *)a2 + 10);
            uint64_t v333 = *((void *)a2 + 11);
            sub_100274EDC(v42);
            *a1 = v42;
            a1[1] = v101;
            a1[2] = v102;
            a1[3] = v103;
            a1[4] = v316;
            a1[5] = v104;
            a1[6] = v313;
            a1[7] = v310;
            a1[8] = v320;
            a1[9] = v324;
            a1[10] = v329;
            a1[11] = v333;
          }
          else
          {
            memcpy(a1, a2, 0x60uLL);
          }
        }
        else
        {
          if (v32) {
            goto LABEL_60;
          }
          uint64_t v33 = type metadata accessor for LocationPreviewViewAction();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v34 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v34 - 8) + 16))(a1, a2, v34);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
LABEL_100:
            memcpy(a1, a2, *(void *)(*(void *)(v33 - 8) + 64));
          }
        }
        goto LABEL_214;
      case 8u:
        uint64_t v15 = type metadata accessor for LocationViewAction();
        int v35 = swift_getEnumCaseMultiPayload();
        if (v35 == 2)
        {
          uint64_t v54 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v54 - 8) + 16))(a1, a2, v54);
          uint64_t v55 = *(int *)(sub_10017DF08(&qword_100E66450) + 48);
          uint64_t v56 = (char *)a1 + v55;
          uint64_t v57 = &a2[v55];
          uint64_t v58 = type metadata accessor for LocationOfInterest();
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
          uint64_t v59 = *(int *)(sub_10017DF08(&qword_100E66448) + 48);
          uint64_t v60 = (char *)a1 + v59;
          uint64_t v61 = &a2[v59];
          long long v62 = *(_OWORD *)v61;
          long long v63 = *((_OWORD *)v61 + 1);
          v60[32] = v61[32];
          *(_OWORD *)uint64_t v60 = v62;
          *((_OWORD *)v60 + 1) = v63;
        }
        else if (v35 == 1)
        {
          uint64_t v64 = type metadata accessor for LocationComponentAction(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v65 = type metadata accessor for URL();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v65 - 8) + 16))(a1, a2, v65);
              uint64_t v66 = sub_10017DF08(&qword_100E66478);
              *((unsigned char *)a1 + *(int *)(v66 + 48)) = a2[*(int *)(v66 + 48)];
              goto LABEL_132;
            case 1u:
              uint64_t v134 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v134 - 8) + 16))(a1, a2, v134);
              goto LABEL_132;
            case 2u:
              uint64_t v135 = type metadata accessor for DetailCondition();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v135 - 8) + 16))(a1, a2, v135);
              uint64_t v136 = sub_10017DF08(&qword_100E66488);
              *((unsigned char *)a1 + *(int *)(v136 + 48)) = a2[*(int *)(v136 + 48)];
              goto LABEL_132;
            case 4u:
              *(unsigned char *)a1 = *a2;
              uint64_t v137 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
              uint64_t v138 = (char *)a1 + v137;
              uint64_t v139 = &a2[v137];
              uint64_t v140 = type metadata accessor for Location();
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v140 - 8) + 16))(v138, v139, v140);
LABEL_132:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(void *)(*(void *)(v64 - 8) + 64));
              break;
          }
          uint64_t v141 = sub_10017DF08(&qword_100E66458);
          uint64_t v142 = *(int *)(v141 + 48);
          uint64_t v143 = (char *)a1 + v142;
          uint64_t v144 = &a2[v142];
          long long v145 = *(_OWORD *)v144;
          long long v146 = *((_OWORD *)v144 + 1);
          v143[32] = v144[32];
          *(_OWORD *)uint64_t v143 = v145;
          *((_OWORD *)v143 + 1) = v146;
          uint64_t v147 = *(int *)(v141 + 64);
          uint64_t v148 = (char *)a1 + v147;
          uint64_t v149 = &a2[v147];
          uint64_t v150 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v149, 1, v150))
          {
            uint64_t v151 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v148, v149, *(void *)(*(void *)(v151 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v150 - 8) + 16))(v148, v149, v150);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v148, 0, 1, v150);
          }
        }
        else
        {
          if (v35) {
            goto LABEL_60;
          }
LABEL_37:
          uint64_t v36 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v36 - 8) + 16))(a1, a2, v36);
        }
        goto LABEL_214;
      case 9u:
        type metadata accessor for WeatherDataAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            unint64_t v108 = *((void *)a2 + 3);
            swift_bridgeObjectRetain();
            if (v108 >= 0xE)
            {
              a1[2] = *((void *)a2 + 2);
              a1[3] = *((void *)a2 + 3);
              swift_bridgeObjectRetain();
            }
            else
            {
              *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
            }
            a1[4] = *((void *)a2 + 4);
            a1[5] = *((void *)a2 + 5);
            goto LABEL_138;
          case 3u:
          case 9u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            a1[2] = *((void *)a2 + 2);
            a1[3] = *((void *)a2 + 3);
            swift_bridgeObjectRetain();
            goto LABEL_138;
          case 4u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            swift_bridgeObjectRetain();
            uint64_t v321 = (int *)sub_10017DF08(&qword_100E6BBC0);
            uint64_t v109 = v321[12];
            uint64_t v110 = (uint64_t *)((char *)a1 + v109);
            uint64_t v111 = &a2[v109];
            *uint64_t v110 = *(void *)&a2[v109];
            v110[1] = *(void *)&a2[v109 + 8];
            uint64_t v334 = (int *)type metadata accessor for WeatherData(0);
            uint64_t v112 = v334[5];
            uint64_t v113 = (char *)v110 + v112;
            uint64_t v114 = (char *)&v111[v112];
            uint64_t v115 = type metadata accessor for Locale();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v114, 1, v115))
            {
              uint64_t v116 = sub_10017DF08(&qword_100E63730);
              memcpy(v113, v114, *(void *)(*(void *)(v116 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 16))(v113, v114, v115);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v113, 0, 1, v115);
            }
            uint64_t v155 = v334[6];
            uint64_t v156 = (char *)v110 + v155;
            uint64_t v157 = (char *)&v111[v155];
            uint64_t v158 = type metadata accessor for WeatherDataModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v158 - 8) + 16))(v156, v157, v158);
            uint64_t v159 = v334[7];
            long long v160 = (char *)v110 + v159;
            long long v161 = (char *)&v111[v159];
            uint64_t v162 = sub_10017DF08(&qword_100E63738);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v161, 1, v162))
            {
              uint64_t v163 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v160, v161, *(void *)(*(void *)(v163 - 8) + 64));
            }
            else
            {
              uint64_t v164 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v164 - 8) + 16))(v160, v161, v164);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v160, 0, 1, v162);
            }
            uint64_t v165 = v334[8];
            uint64_t v166 = (void *)((char *)v110 + v165);
            uint64_t v167 = (char *)&v111[v165];
            uint64_t v168 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            int v169 = swift_getEnumCaseMultiPayload();
            if (v169 == 1)
            {
              uint64_t v170 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(void *, char *, uint64_t))(*(void *)(v170 - 8) + 16))(v166, v167, v170);
              goto LABEL_154;
            }
            if (!v169)
            {
              *uint64_t v166 = *(void *)v167;
              v166[1] = *((void *)v167 + 1);
              swift_bridgeObjectRetain();
LABEL_154:
              swift_storeEnumTagMultiPayload();
              goto LABEL_156;
            }
            memcpy(v166, v167, *(void *)(*(void *)(v168 - 8) + 64));
LABEL_156:
            uint64_t v171 = v334[9];
            char v172 = (char *)v110 + v171;
            uint64_t v173 = (char *)&v111[v171];
            uint64_t v174 = type metadata accessor for WeatherDataOverrides();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v173, 1, v174))
            {
              uint64_t v175 = sub_10017DF08(&qword_100E63740);
              memcpy(v172, v173, *(void *)(*(void *)(v175 - 8) + 64));
            }
            else
            {
              uint64_t v176 = type metadata accessor for Date();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v173, 1, v176))
              {
                uint64_t v177 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v172, v173, *(void *)(*(void *)(v177 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 16))(v172, v173, v176);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v172, 0, 1, v176);
              }
              uint64_t v193 = *(int *)(v174 + 20);
              uint64_t v194 = &v172[v193];
              uint64_t v195 = &v173[v193];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v173[v193], 1, v176))
              {
                uint64_t v196 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v194, v195, *(void *)(*(void *)(v196 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v176 - 8) + 16))(v194, v195, v176);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v194, 0, 1, v176);
              }
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v172, 0, 1, v174);
            }
            uint64_t v197 = v321[16];
            uint64_t v198 = (char *)a1 + v197;
            uint64_t v199 = &a2[v197];
            uint64_t v200 = type metadata accessor for UUID();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v200 - 8) + 16))(v198, v199, v200);
            uint64_t v201 = type metadata accessor for PreprocessedWeatherData();
            *(void *)&v198[*(int *)(v201 + 20)] = *(void *)&v199[*(int *)(v201 + 20)];
            uint64_t v327 = (int *)v201;
            uint64_t v332 = v199;
            uint64_t v202 = *(int *)(v201 + 24);
            uint64_t v337 = v198;
            uint64_t v203 = &v198[v202];
            *(void *)uint64_t v203 = *(void *)&v199[v202];
            *((void *)v203 + 1) = *(void *)&v199[v202 + 8];
            *((void *)v203 + 2) = *(void *)&v199[v202 + 16];
            *((void *)v203 + 3) = *(void *)&v199[v202 + 24];
            *((void *)v203 + 4) = *(void *)&v199[v202 + 32];
            *((void *)v203 + 5) = *(void *)&v199[v202 + 40];
            uint64_t v314 = (char *)&v199[v202];
            uint64_t v318 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
            uint64_t v204 = *(int *)(v318 + 28);
            uint64_t v308 = &v203[v204];
            uint64_t v205 = &v314[v204];
            uint64_t v206 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v205, 1, v206))
            {
              uint64_t v207 = sub_10017DF08(&qword_100E63750);
              memcpy(v308, v205, *(void *)(*(void *)(v207 - 8) + 64));
            }
            else
            {
              *(void *)uint64_t v308 = *(void *)v205;
              *((void *)v308 + 1) = *((void *)v205 + 1);
              uint64_t v208 = *(int *)(v206 + 20);
              uint64_t v209 = &v308[v208];
              uint64_t v210 = &v205[v208];
              uint64_t v211 = type metadata accessor for TemperatureScaleConfiguration();
              uint64_t v311 = *(void (**)(char *, char *, uint64_t))(*(void *)(v211 - 8) + 16);
              swift_bridgeObjectRetain();
              v311(v209, v210, v211);
              uint64_t v212 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
              *(void *)&v209[v212[5]] = *(void *)&v210[v212[5]];
              *(void *)&v209[v212[6]] = *(void *)&v210[v212[6]];
              *(void *)&v209[v212[7]] = *(void *)&v210[v212[7]];
              uint64_t v213 = v212[8];
              uint64_t v214 = &v209[v213];
              uint64_t v215 = &v210[v213];
              *(void *)uint64_t v214 = *(void *)v215;
              *((void *)v214 + 1) = *((void *)v215 + 1);
              v209[v212[9]] = v210[v212[9]];
              swift_bridgeObjectRetain();
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v308, 0, 1, v206);
            }
            uint64_t v216 = *(int *)(v318 + 32);
            uint64_t v217 = &v203[v216];
            id v218 = &v314[v216];
            *(void *)uint64_t v217 = *(void *)v218;
            *((void *)v217 + 1) = *((void *)v218 + 1);
            uint64_t v219 = v327[7];
            uint64_t v220 = &v337[v219];
            uint64_t v221 = &v332[v219];
            *(void *)&v337[v219] = *(void *)&v332[v219];
            uint64_t v222 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
            uint64_t v223 = &v220[v222];
            uint64_t v224 = &v221[v222];
            uint64_t v225 = type metadata accessor for WeatherDescription();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v319 = v225;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v224, 1, v225))
            {
              uint64_t v226 = sub_10017DF08(&qword_100E63758);
              memcpy(v223, v224, *(void *)(*(void *)(v226 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v225 - 8) + 16))(v223, v224, v225);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v223, 0, 1, v225);
            }
            uint64_t v227 = v327[8];
            uint64_t v228 = &v337[v227];
            uint64_t v229 = &v332[v227];
            *(void *)uint64_t v228 = *(void *)&v332[v227];
            *((void *)v228 + 1) = *(void *)&v332[v227 + 8];
            *((void *)v228 + 2) = *(void *)&v332[v227 + 16];
            *((void *)v228 + 3) = *(void *)&v332[v227 + 24];
            *((void *)v228 + 4) = *(void *)&v332[v227 + 32];
            *((void *)v228 + 5) = *(void *)&v332[v227 + 40];
            *((void *)v228 + 6) = *(void *)&v332[v227 + 48];
            *((void *)v228 + 7) = *(void *)&v332[v227 + 56];
            uint64_t v230 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
            uint64_t v231 = &v228[v230];
            uint64_t v305 = &v229[v230];
            uint64_t v232 = type metadata accessor for Date();
            uint64_t v233 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v232 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v309 = v233;
            uint64_t v312 = v232;
            uint64_t v234 = v232;
            uint64_t v235 = v231;
            v233(v231, v305, v234);
            uint64_t v236 = type metadata accessor for WeatherConditionBackgroundTimeData();
            uint64_t v237 = *(int *)(v236 + 20);
            uint64_t v238 = &v231[v237];
            uint64_t v239 = &v305[v237];
            uint64_t v240 = type metadata accessor for Elevation();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v239, 1, v240))
            {
              uint64_t v241 = sub_10017DF08(&qword_100E63760);
              memcpy(v238, v239, *(void *)(*(void *)(v241 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v240 - 8) + 16))(v238, v239, v240);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v238, 0, 1, v240);
            }
            uint64_t v242 = *(int *)(v236 + 24);
            uint64_t v243 = &v235[v242];
            uint64_t v244 = &v305[v242];
            uint64_t v245 = type metadata accessor for BackgroundMoonData();
            uint64_t v315 = v236;
            uint64_t v302 = v245;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v244, 1, v245))
            {
              uint64_t v246 = sub_10017DF08(&qword_100E63768);
              memcpy(v243, v244, *(void *)(*(void *)(v246 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v245 - 8) + 16))(v243, v244, v245);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v243, 0, 1, v245);
            }
            uint64_t v247 = v327[9];
            uint64_t v248 = &v337[v247];
            uint64_t v249 = &v332[v247];
            *(void *)uint64_t v248 = *(void *)v249;
            *((void *)v248 + 1) = *((void *)v249 + 1);
            *((void *)v248 + 2) = *((void *)v249 + 2);
            *((void *)v248 + 3) = *((void *)v249 + 3);
            *((void *)v248 + 4) = *((void *)v249 + 4);
            *((void *)v248 + 5) = *((void *)v249 + 5);
            *((void *)v248 + 6) = *((void *)v249 + 6);
            *((void *)v248 + 7) = *((void *)v249 + 7);
            *((void *)v248 + 8) = *((void *)v249 + 8);
            *((void *)v248 + 9) = *((void *)v249 + 9);
            *((void *)v248 + 10) = *((void *)v249 + 10);
            *((void *)v248 + 11) = *((void *)v249 + 11);
            *((void *)v248 + 12) = *((void *)v249 + 12);
            *((void *)v248 + 13) = *((void *)v249 + 13);
            uint64_t v250 = v327[10];
            uint64_t v304 = &v332[v250];
            uint64_t v306 = &v337[v250];
            uint64_t v303 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v319 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v303(v306, v304, v319);
            uint64_t v251 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
            uint64_t v252 = &v306[v251];
            uint64_t v253 = &v304[v251];
            *(void *)uint64_t v252 = *(void *)v253;
            *((void *)v252 + 1) = *((void *)v253 + 1);
            uint64_t v254 = v327[11];
            uint64_t v255 = &v337[v254];
            uint64_t v256 = &v332[v254];
            *(void *)uint64_t v255 = *(void *)v256;
            *((void *)v255 + 1) = *((void *)v256 + 1);
            *((void *)v255 + 2) = *((void *)v256 + 2);
            *((void *)v255 + 3) = *((void *)v256 + 3);
            *((void *)v255 + 4) = *((void *)v256 + 4);
            *((void *)v255 + 5) = *((void *)v256 + 5);
            uint64_t v257 = v327[12];
            uint64_t v258 = &v337[v257];
            uint64_t v259 = &v332[v257];
            uint64_t v260 = type metadata accessor for PressureTrend();
            uint64_t v307 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v260 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v307(v258, v259, v260);
            uint64_t v261 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
            uint64_t v262 = v261[5];
            uint64_t v263 = &v258[v262];
            uint64_t v264 = &v259[v262];
            *(void *)uint64_t v263 = *(void *)v264;
            *((void *)v263 + 1) = *((void *)v264 + 1);
            uint64_t v265 = v261[6];
            uint64_t v266 = &v258[v265];
            uint64_t v267 = &v259[v265];
            *(void *)uint64_t v266 = *(void *)v267;
            *((void *)v266 + 1) = *((void *)v267 + 1);
            uint64_t v268 = v261[7];
            uint64_t v269 = &v258[v268];
            uint64_t v270 = &v259[v268];
            *(void *)uint64_t v269 = *(void *)v270;
            *((void *)v269 + 1) = *((void *)v270 + 1);
            *(void *)&v258[v261[8]] = *(void *)&v259[v261[8]];
            uint64_t v271 = v261[9];
            uint64_t v272 = &v258[v271];
            uint64_t v273 = &v259[v271];
            *(void *)uint64_t v272 = *(void *)v273;
            *((void *)v272 + 1) = *((void *)v273 + 1);
            uint64_t v274 = v327[13];
            uint64_t v275 = &v337[v274];
            uint64_t v276 = &v332[v274];
            *(void *)uint64_t v275 = *(void *)v276;
            *((void *)v275 + 1) = *((void *)v276 + 1);
            *((void *)v275 + 2) = *((void *)v276 + 2);
            *((void *)v275 + 3) = *((void *)v276 + 3);
            *((void *)v275 + 4) = *((void *)v276 + 4);
            *((void *)v275 + 5) = *((void *)v276 + 5);
            *((void *)v275 + 6) = *((void *)v276 + 6);
            *((void *)v275 + 7) = *((void *)v276 + 7);
            *((void *)v275 + 8) = *((void *)v276 + 8);
            *((void *)v275 + 9) = *((void *)v276 + 9);
            *((void *)v275 + 10) = *((void *)v276 + 10);
            *((void *)v275 + 11) = *((void *)v276 + 11);
            *((void *)v275 + 12) = *((void *)v276 + 12);
            *((void *)v275 + 13) = *((void *)v276 + 13);
            *((void *)v275 + 14) = *((void *)v276 + 14);
            *((void *)v275 + 15) = *((void *)v276 + 15);
            *((void *)v275 + 16) = *((void *)v276 + 16);
            *((void *)v275 + 17) = *((void *)v276 + 17);
            *((void *)v275 + 18) = *((void *)v276 + 18);
            *((void *)v275 + 19) = *((void *)v276 + 19);
            *((void *)v275 + 20) = *((void *)v276 + 20);
            *((void *)v275 + 21) = *((void *)v276 + 21);
            *((void *)v275 + 22) = *((void *)v276 + 22);
            *((void *)v275 + 23) = *((void *)v276 + 23);
            *((void *)v275 + 24) = *((void *)v276 + 24);
            *((void *)v275 + 25) = *((void *)v276 + 25);
            *((void *)v275 + 26) = *((void *)v276 + 26);
            *((void *)v275 + 27) = *((void *)v276 + 27);
            *((void *)v275 + 28) = *((void *)v276 + 28);
            uint64_t v277 = v327[14];
            uint64_t v278 = &v337[v277];
            uint64_t v279 = &v332[v277];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v309(v278, v279, v312);
            uint64_t v280 = *(int *)(v315 + 20);
            uint64_t v281 = &v278[v280];
            uint64_t v282 = &v279[v280];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v279[v280], 1, v240))
            {
              uint64_t v283 = sub_10017DF08(&qword_100E63760);
              memcpy(v281, v282, *(void *)(*(void *)(v283 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v240 - 8) + 16))(v281, v282, v240);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v281, 0, 1, v240);
            }
            uint64_t v284 = *(int *)(v315 + 24);
            char v285 = &v278[v284];
            uint64_t v286 = &v279[v284];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v279[v284], 1, v302))
            {
              uint64_t v287 = sub_10017DF08(&qword_100E63768);
              memcpy(v285, v286, *(void *)(*(void *)(v287 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v302 - 8) + 16))(v285, v286, v302);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v285, 0, 1, v302);
            }
            uint64_t v288 = v327[15];
            uint64_t v289 = &v337[v288];
            uint64_t v290 = &v332[v288];
            *(void *)uint64_t v289 = *(void *)v290;
            *((void *)v289 + 1) = *((void *)v290 + 1);
            *((void *)v289 + 2) = *((void *)v290 + 2);
            *((void *)v289 + 3) = *((void *)v290 + 3);
            *((void *)v289 + 4) = *((void *)v290 + 4);
            *((void *)v289 + 5) = *((void *)v290 + 5);
            *((void *)v289 + 6) = *((void *)v290 + 6);
            *((void *)v289 + 7) = *((void *)v290 + 7);
            *((void *)v289 + 8) = *((void *)v290 + 8);
            *((void *)v289 + 9) = *((void *)v290 + 9);
            *((void *)v289 + 10) = *((void *)v290 + 10);
            *((void *)v289 + 11) = *((void *)v290 + 11);
            *((void *)v289 + 12) = *((void *)v290 + 12);
            *((void *)v289 + 13) = *((void *)v290 + 13);
            uint64_t v291 = v321[20];
            uint64_t v323 = (uint64_t *)((char *)a1 + v291);
            uint64_t v328 = &a2[v291];
            type metadata accessor for NewsDataModel();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              *uint64_t v323 = *(void *)v328;
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v292 = type metadata accessor for News();
              (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v292 - 8) + 16))(v323, v328, v292);
            }
LABEL_213:
            swift_storeEnumTagMultiPayload();
LABEL_214:
            swift_storeEnumTagMultiPayload();
LABEL_215:
            swift_storeEnumTagMultiPayload();
            break;
          case 5u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            swift_bridgeObjectRetain();
            uint64_t v117 = *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48);
            unint64_t v118 = (uint64_t *)((char *)a1 + v117);
            uint64_t v119 = &a2[v117];
            type metadata accessor for NewsDataModel();
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              *unint64_t v118 = *(void *)v119;
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v152 = type metadata accessor for News();
              (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v152 - 8) + 16))(v118, v119, v152);
            }
            goto LABEL_213;
          case 6u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            swift_bridgeObjectRetain();
            uint64_t v120 = *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
            uint64_t v121 = (char *)a1 + v120;
            uint64_t v122 = &a2[v120];
            uint64_t v123 = type metadata accessor for AvailableDataSets();
            goto LABEL_112;
          case 8u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            swift_bridgeObjectRetain();
            uint64_t v124 = *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
            uint64_t v121 = (char *)a1 + v124;
            uint64_t v122 = &a2[v124];
            uint64_t v123 = type metadata accessor for WeatherStatisticsModel();
LABEL_112:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v123 - 8) + 16))(v121, v122, v123);
            goto LABEL_214;
          default:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
LABEL_138:
            swift_bridgeObjectRetain();
            goto LABEL_214;
        }
        break;
      case 0xAu:
        uint64_t v15 = type metadata accessor for DebugAction();
        int v37 = swift_getEnumCaseMultiPayload();
        if (v37 == 1) {
          goto LABEL_37;
        }
        if (v37) {
          goto LABEL_60;
        }
        uint64_t v38 = type metadata accessor for WeatherCondition();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v38))
        {
          uint64_t v39 = sub_10017DF08(&qword_100E63A50);
          memcpy(a1, a2, *(void *)(*(void *)(v39 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v38 - 8) + 16))(a1, a2, v38);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v38);
        }
        uint64_t v105 = *(int *)(sub_10017DF08(&qword_100E6F648) + 48);
        uint64_t v106 = (uint64_t *)((char *)a1 + v105);
        uint64_t v107 = &a2[v105];
        *uint64_t v106 = *(void *)v107;
        v106[1] = *((void *)v107 + 1);
        swift_bridgeObjectRetain();
        goto LABEL_214;
      case 0xBu:
        uint64_t v15 = type metadata accessor for ConditionDetailViewAction();
        int v16 = swift_getEnumCaseMultiPayload();
        switch(v16)
        {
          case 2:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            uint64_t v43 = (int *)type metadata accessor for DetailChartSelection();
            uint64_t v44 = v43[5];
            uint64_t v45 = (char *)a1 + v44;
            uint64_t v46 = &a2[v44];
            uint64_t v47 = type metadata accessor for Date();
            uint64_t v48 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v47 - 8) + 16);
            swift_bridgeObjectRetain();
            v48(v45, v46, v47);
            v48((char *)a1 + v43[6], &a2[v43[6]], v47);
            v48((char *)a1 + v43[7], &a2[v43[7]], v47);
            *(uint64_t *)((char *)a1 + v43[8]) = *(void *)&a2[v43[8]];
            uint64_t v49 = v43[9];
            uint64_t v50 = (char *)a1 + v49;
            uint64_t v51 = &a2[v49];
            char v52 = v51[8];
            *(void *)uint64_t v50 = *(void *)v51;
            v50[8] = v52;
            goto LABEL_214;
          case 1:
            uint64_t v53 = type metadata accessor for DetailCondition();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v53 - 8) + 16))(a1, a2, v53);
            goto LABEL_214;
          case 0:
LABEL_14:
            uint64_t v17 = type metadata accessor for Date();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
            goto LABEL_214;
        }
LABEL_60:
        memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
        goto LABEL_215;
      case 0xDu:
        uint64_t v15 = type metadata accessor for MoonDetailViewAction();
        int v18 = swift_getEnumCaseMultiPayload();
        if (v18 == 1) {
          goto LABEL_14;
        }
        if (v18) {
          goto LABEL_60;
        }
        type metadata accessor for MoonDetailSelectedDate();
        swift_getEnumCaseMultiPayload();
        uint64_t v19 = type metadata accessor for Date();
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
        swift_storeEnumTagMultiPayload();
        goto LABEL_214;
      case 0xEu:
        uint64_t v15 = type metadata accessor for AveragesDetailViewAction();
        if (swift_getEnumCaseMultiPayload() != 1) {
          goto LABEL_60;
        }
        *a1 = *(void *)a2;
        uint64_t v20 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
        uint64_t v21 = v20[5];
        uint64_t v22 = (char *)a1 + v21;
        uint64_t v23 = &a2[v21];
        uint64_t v24 = type metadata accessor for Date();
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
        *(uint64_t *)((char *)a1 + v20[6]) = *(void *)&a2[v20[6]];
        *(uint64_t *)((char *)a1 + v20[7]) = *(void *)&a2[v20[7]];
        swift_storeEnumTagMultiPayload();
        goto LABEL_215;
      case 0x10u:
        *a1 = *(void *)a2;
        a1[1] = *((void *)a2 + 1);
        swift_bridgeObjectRetain();
        goto LABEL_215;
      case 0x11u:
        uint64_t v40 = type metadata accessor for PerformanceTestAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v41 = type metadata accessor for DetailCondition();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v41 - 8) + 16))(a1, a2, v41);
            goto LABEL_70;
          case 2u:
            uint64_t v67 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v67 - 8) + 16))(a1, a2, v67);
            goto LABEL_70;
          case 3u:
            *a1 = *(void *)a2;
            uint64_t v68 = sub_10017DF08((uint64_t *)&unk_100EA0250);
            uint64_t v69 = *(int *)(v68 + 48);
            uint64_t v70 = (char *)a1 + v69;
            uint64_t v71 = &a2[v69];
            uint64_t v72 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v72 - 8) + 16))(v70, v71, v72);
            *((unsigned char *)a1 + *(int *)(v68 + 64)) = a2[*(int *)(v68 + 64)];
            goto LABEL_70;
          case 4u:
            uint64_t v73 = type metadata accessor for WeatherCondition();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v73 - 8) + 16))(a1, a2, v73);
LABEL_70:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v40 - 8) + 64));
            break;
        }
        goto LABEL_215;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = a2[*(int *)(a3 + 20)];
  return a1;
}

void *sub_100B8CDEC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for MainAction();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v7 = type metadata accessor for AppConfiguration();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      goto LABEL_193;
    case 2u:
      uint64_t v8 = type metadata accessor for EnvironmentAction();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 11)
      {
        uint64_t v31 = type metadata accessor for ConfiguredUnitsAction();
        int v67 = swift_getEnumCaseMultiPayload();
        if (v67 == 1)
        {
          uint64_t v122 = type metadata accessor for UnitConfiguration.Temperature();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v122))
          {
            uint64_t v123 = sub_10017DF08(&qword_100E6F620);
            memcpy(a1, a2, *(void *)(*(void *)(v123 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v122 - 8) + 32))(a1, a2, v122);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v122);
          }
        }
        else
        {
          if (v67) {
            goto LABEL_104;
          }
          uint64_t v68 = type metadata accessor for ConfiguredUnit();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v68 - 8) + 32))(a1, a2, v68);
        }
        goto LABEL_191;
      }
      if (EnumCaseMultiPayload == 3)
      {
        uint64_t v31 = type metadata accessor for ActivityAction();
        int v69 = swift_getEnumCaseMultiPayload();
        if (v69 != 1)
        {
          if (v69) {
            goto LABEL_104;
          }
          type metadata accessor for SavedLocation();
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v70 = type metadata accessor for SavedLocation.Placeholder();
          }
          else {
            uint64_t v70 = type metadata accessor for Location();
          }
          (*(void (**)(void *, void *))(*(void *)(v70 - 8) + 32))(a1, a2);
          swift_storeEnumTagMultiPayload();
          goto LABEL_191;
        }
        uint64_t v124 = type metadata accessor for PreviewLocation();
        int v125 = swift_getEnumCaseMultiPayload();
        if (v125 == 2)
        {
          *a1 = *a2;
          *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
          *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
          *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
          uint64_t v252 = type metadata accessor for SearchLocation();
          uint64_t v253 = *(int *)(v252 + 32);
          __dsta = (char *)a1 + v253;
          uint64_t v254 = (char *)a2 + v253;
          uint64_t v255 = type metadata accessor for Location();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v254, 1, v255))
          {
            uint64_t v256 = sub_10017DF08(&qword_100E639E8);
            memcpy(__dsta, v254, *(void *)(*(void *)(v256 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v255 - 8) + 32))(__dsta, v254, v255);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v255);
          }
          uint64_t v261 = *(int *)(v252 + 36);
          uint64_t v262 = (char *)a1 + v261;
          uint64_t v263 = (char *)a2 + v261;
          *(_OWORD *)uint64_t v262 = *(_OWORD *)v263;
          v262[16] = v263[16];
        }
        else if (v125 == 1)
        {
          uint64_t v257 = type metadata accessor for LocationOfInterest();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v257 - 8) + 32))(a1, a2, v257);
        }
        else
        {
          if (v125)
          {
            memcpy(a1, a2, *(void *)(*(void *)(v124 - 8) + 64));
LABEL_191:
            swift_storeEnumTagMultiPayload();
            goto LABEL_192;
          }
          uint64_t v126 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v126 - 8) + 32))(a1, a2, v126);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_191;
      }
      if (EnumCaseMultiPayload != 2) {
        goto LABEL_35;
      }
      uint64_t v29 = type metadata accessor for Locale();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 32))(a1, a2, v29);
LABEL_192:
      swift_storeEnumTagMultiPayload();
LABEL_193:
      swift_storeEnumTagMultiPayload();
LABEL_194:
      *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
      return a1;
    case 3u:
      uint64_t v8 = type metadata accessor for LocationsAction();
      int v30 = swift_getEnumCaseMultiPayload();
      if (v30 == 1)
      {
        uint64_t v50 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v50 - 8) + 32))(a1, a2, v50);
        uint64_t v51 = sub_10017DF08(&qword_100E6F628);
        *((unsigned char *)a1 + *(int *)(v51 + 48)) = *((unsigned char *)a2 + *(int *)(v51 + 48));
      }
      else
      {
        if (v30) {
          goto LABEL_35;
        }
        uint64_t v31 = type metadata accessor for CurrentLocation();
        if (swift_getEnumCaseMultiPayload() > 2)
        {
LABEL_104:
          memcpy(a1, a2, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
LABEL_28:
          uint64_t v121 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v121 - 8) + 32))(a1, a2, v121);
          swift_storeEnumTagMultiPayload();
        }
      }
      goto LABEL_192;
    case 4u:
      uint64_t v8 = type metadata accessor for NotificationsAction();
      int v32 = swift_getEnumCaseMultiPayload();
      if (v32 == 5)
      {
        uint64_t v71 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v71 - 8) + 32))(a1, a2, v71);
        uint64_t v72 = *(int *)(sub_10017DF08(&qword_100E6F638) + 48);
        uint64_t v73 = (char *)a1 + v72;
        uint64_t v74 = (char *)a2 + v72;
        uint64_t v75 = type metadata accessor for NotificationSubscription.Kind();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
        goto LABEL_192;
      }
      if (v32 == 2)
      {
        uint64_t v62 = type metadata accessor for NotificationSubscription.Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v62 - 8) + 32))(a1, a2, v62);
        uint64_t v63 = *(int *)(sub_10017DF08(&qword_100E6F630) + 48);
        uint64_t v64 = (char *)a1 + v63;
        uint64_t v65 = (char *)a2 + v63;
        uint64_t v66 = type metadata accessor for NotificationSubscription.Kind();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v64, v65, v66);
        goto LABEL_192;
      }
      if (v32 != 1) {
        goto LABEL_35;
      }
      uint64_t v33 = type metadata accessor for LocationModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v33))
      {
        uint64_t v34 = type metadata accessor for NotificationLocation();
        memcpy(a1, a2, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 32))(a1, a2, v33);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v33);
      }
      uint64_t v116 = *(int *)(sub_10017DF08((uint64_t *)&unk_100EAC3E0) + 48);
      uint64_t v117 = (char *)a1 + v116;
      unint64_t v118 = (char *)a2 + v116;
      uint64_t v119 = type metadata accessor for URL();
      if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v118, 1, v119)) {
        goto LABEL_134;
      }
      uint64_t v120 = sub_10017DF08(&qword_100E749B0);
      memcpy(v117, v118, *(void *)(*(void *)(v120 - 8) + 64));
      goto LABEL_192;
    case 5u:
      uint64_t v8 = type metadata accessor for NotificationsOptInAction();
      int v9 = swift_getEnumCaseMultiPayload();
      if (v9 == 4) {
        goto LABEL_13;
      }
      if (v9 != 2) {
        goto LABEL_35;
      }
      uint64_t v10 = type metadata accessor for Location();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      uint64_t v11 = sub_10017DF08(&qword_100E6BBD8);
      *((unsigned char *)a1 + *(int *)(v11 + 48)) = *((unsigned char *)a2 + *(int *)(v11 + 48));
      goto LABEL_192;
    case 6u:
      uint64_t v12 = type metadata accessor for ViewAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v13 = type metadata accessor for ListViewAction();
          int v14 = swift_getEnumCaseMultiPayload();
          if (v14 == 2) {
            goto LABEL_125;
          }
          if (v14) {
            goto LABEL_141;
          }
          uint64_t v15 = type metadata accessor for LocationModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
          uint64_t v16 = sub_10017DF08(&qword_100E6F640);
          *((unsigned char *)a1 + *(int *)(v16 + 48)) = *((unsigned char *)a2 + *(int *)(v16 + 48));
          goto LABEL_185;
        case 1u:
          uint64_t v13 = type metadata accessor for LocationViewerViewAction();
          int v107 = swift_getEnumCaseMultiPayload();
          if (v107 == 2)
          {
LABEL_125:
            uint64_t v149 = type metadata accessor for Location.Identifier();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v149 - 8) + 32))(a1, a2, v149);
          }
          else if (v107 == 1)
          {
            uint64_t v164 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v164 - 8) + 32))(a1, a2, v164);
          }
          else
          {
            if (v107)
            {
LABEL_141:
              memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
              goto LABEL_186;
            }
            uint64_t v108 = type metadata accessor for LocationModel();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v108 - 8) + 32))(a1, a2, v108);
          }
LABEL_185:
          swift_storeEnumTagMultiPayload();
LABEL_186:
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          uint64_t v13 = type metadata accessor for SearchViewAction();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v109 = type metadata accessor for CodableError();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v109 - 8) + 32))(a1, a2, v109);
              goto LABEL_185;
            case 3u:
            case 6u:
              uint64_t v165 = type metadata accessor for Location();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v165 - 8) + 32))(a1, a2, v165);
              goto LABEL_185;
            case 4u:
              uint64_t v166 = type metadata accessor for LocationOfInterest();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v166 - 8) + 32))(a1, a2, v166);
              goto LABEL_185;
            case 5u:
              *a1 = *a2;
              *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
              *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
              *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
              uint64_t v167 = type metadata accessor for SearchLocation();
              uint64_t v168 = *(int *)(v167 + 32);
              int v169 = (char *)a1 + v168;
              uint64_t v170 = (char *)a2 + v168;
              uint64_t v171 = type metadata accessor for Location();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v170, 1, v171))
              {
                uint64_t v172 = sub_10017DF08(&qword_100E639E8);
                memcpy(v169, v170, *(void *)(*(void *)(v172 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 32))(v169, v170, v171);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v169, 0, 1, v171);
              }
              uint64_t v258 = *(int *)(v167 + 36);
              uint64_t v259 = (char *)a1 + v258;
              uint64_t v260 = (char *)a2 + v258;
              *(_OWORD *)uint64_t v259 = *(_OWORD *)v260;
              v259[16] = v260[16];
              goto LABEL_185;
            default:
              goto LABEL_141;
          }
        case 4u:
          uint64_t v110 = type metadata accessor for InteractiveMapViewAction();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
            case 1u:
            case 2u:
            case 4u:
              uint64_t v174 = type metadata accessor for Location();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v174 - 8) + 32))(a1, a2, v174);
              goto LABEL_149;
            case 3u:
              uint64_t v173 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v173 - 8) + 32))(a1, a2, v173);
LABEL_149:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(void *)(*(void *)(v110 - 8) + 64));
              break;
          }
          goto LABEL_186;
        case 5u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          *((unsigned char *)a1 + 17) = *((unsigned char *)a2 + 17);
          *((unsigned char *)a1 + 18) = *((unsigned char *)a2 + 18);
          uint64_t v111 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
          uint64_t v112 = (char *)a1 + v111;
          uint64_t v113 = (char *)a2 + v111;
          uint64_t v114 = type metadata accessor for DynamicTypeSize();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 32))(v112, v113, v114);
          goto LABEL_186;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
          goto LABEL_193;
      }
      goto LABEL_193;
    case 7u:
      uint64_t v8 = type metadata accessor for ModalViewAction();
      if (swift_getEnumCaseMultiPayload()) {
        goto LABEL_35;
      }
      uint64_t v31 = type metadata accessor for LocationPreviewViewAction();
      if (swift_getEnumCaseMultiPayload() == 1) {
        goto LABEL_28;
      }
      goto LABEL_104;
    case 8u:
      uint64_t v8 = type metadata accessor for LocationViewAction();
      int v35 = swift_getEnumCaseMultiPayload();
      if (v35 == 2)
      {
        uint64_t v76 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v76 - 8) + 32))(a1, a2, v76);
        uint64_t v77 = *(int *)(sub_10017DF08(&qword_100E66450) + 48);
        uint64_t v78 = (char *)a1 + v77;
        uint64_t v79 = (char *)a2 + v77;
        uint64_t v80 = type metadata accessor for LocationOfInterest();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 32))(v78, v79, v80);
        uint64_t v81 = *(int *)(sub_10017DF08(&qword_100E66448) + 48);
        uint64_t v82 = (char *)a1 + v81;
        uint64_t v83 = (char *)a2 + v81;
        long long v84 = *((_OWORD *)v83 + 1);
        *(_OWORD *)uint64_t v82 = *(_OWORD *)v83;
        *((_OWORD *)v82 + 1) = v84;
        v82[32] = v83[32];
      }
      else if (v35 == 1)
      {
        uint64_t v85 = type metadata accessor for LocationComponentAction(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v86 = type metadata accessor for URL();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v86 - 8) + 32))(a1, a2, v86);
            uint64_t v87 = sub_10017DF08(&qword_100E66478);
            *((unsigned char *)a1 + *(int *)(v87 + 48)) = *((unsigned char *)a2 + *(int *)(v87 + 48));
            goto LABEL_131;
          case 1u:
            uint64_t v150 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v150 - 8) + 32))(a1, a2, v150);
            goto LABEL_131;
          case 2u:
            uint64_t v151 = type metadata accessor for DetailCondition();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v151 - 8) + 32))(a1, a2, v151);
            uint64_t v152 = sub_10017DF08(&qword_100E66488);
            *((unsigned char *)a1 + *(int *)(v152 + 48)) = *((unsigned char *)a2 + *(int *)(v152 + 48));
            goto LABEL_131;
          case 4u:
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v153 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
            uint64_t v154 = (char *)a1 + v153;
            uint64_t v155 = (char *)a2 + v153;
            uint64_t v156 = type metadata accessor for Location();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 32))(v154, v155, v156);
LABEL_131:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v85 - 8) + 64));
            break;
        }
        uint64_t v157 = sub_10017DF08(&qword_100E66458);
        uint64_t v158 = *(int *)(v157 + 48);
        uint64_t v159 = (char *)a1 + v158;
        long long v160 = (char *)a2 + v158;
        long long v161 = *((_OWORD *)v160 + 1);
        *(_OWORD *)uint64_t v159 = *(_OWORD *)v160;
        *((_OWORD *)v159 + 1) = v161;
        v159[32] = v160[32];
        uint64_t v162 = *(int *)(v157 + 64);
        uint64_t v117 = (char *)a1 + v162;
        unint64_t v118 = (char *)a2 + v162;
        uint64_t v119 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v118, 1, v119))
        {
          uint64_t v163 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v117, v118, *(void *)(*(void *)(v163 - 8) + 64));
        }
        else
        {
LABEL_134:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 32))(v117, v118, v119);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v117, 0, 1, v119);
        }
      }
      else
      {
        if (v35) {
          goto LABEL_35;
        }
LABEL_39:
        uint64_t v36 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 32))(a1, a2, v36);
      }
      goto LABEL_192;
    case 9u:
      uint64_t v37 = type metadata accessor for WeatherDataAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 4u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v270 = (int *)sub_10017DF08(&qword_100E6BBC0);
          uint64_t v38 = v270[12];
          uint64_t v39 = (char *)a1 + v38;
          uint64_t v40 = (char *)a2 + v38;
          *(_OWORD *)((char *)a1 + v38) = *(_OWORD *)((char *)a2 + v38);
          uint64_t v41 = (int *)type metadata accessor for WeatherData(0);
          uint64_t v42 = v41[5];
          uint64_t v43 = &v39[v42];
          uint64_t v44 = &v40[v42];
          uint64_t v45 = type metadata accessor for Locale();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45))
          {
            uint64_t v46 = sub_10017DF08(&qword_100E63730);
            memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v45);
          }
          uint64_t v127 = v41[6];
          uint64_t v128 = &v39[v127];
          uint64_t v129 = &v40[v127];
          uint64_t v130 = type metadata accessor for WeatherDataModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 32))(v128, v129, v130);
          uint64_t v131 = v41[7];
          uint64_t v132 = &v39[v131];
          uint64_t v133 = &v40[v131];
          uint64_t v134 = sub_10017DF08(&qword_100E63738);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v133, 1, v134))
          {
            uint64_t v135 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v132, v133, *(void *)(*(void *)(v135 - 8) + 64));
          }
          else
          {
            uint64_t v136 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 32))(v132, v133, v136);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v132, 0, 1, v134);
          }
          uint64_t v137 = v41[8];
          uint64_t v138 = &v39[v137];
          uint64_t v139 = &v40[v137];
          uint64_t v140 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v141 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 32))(v138, v139, v141);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v138, v139, *(void *)(*(void *)(v140 - 8) + 64));
          }
          uint64_t v142 = v41[9];
          uint64_t v143 = &v39[v142];
          uint64_t v144 = &v40[v142];
          uint64_t v145 = type metadata accessor for WeatherDataOverrides();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v144, 1, v145))
          {
            uint64_t v146 = sub_10017DF08(&qword_100E63740);
            memcpy(v143, v144, *(void *)(*(void *)(v146 - 8) + 64));
          }
          else
          {
            uint64_t v147 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v144, 1, v147))
            {
              uint64_t v148 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v143, v144, *(void *)(*(void *)(v148 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 32))(v143, v144, v147);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v143, 0, 1, v147);
            }
            uint64_t v175 = *(int *)(v145 + 20);
            uint64_t v176 = &v143[v175];
            uint64_t v177 = &v144[v175];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v177, 1, v147))
            {
              uint64_t v178 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v176, v177, *(void *)(*(void *)(v178 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 32))(v176, v177, v147);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v176, 0, 1, v147);
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v143, 0, 1, v145);
          }
          uint64_t v179 = v270[16];
          uint64_t v180 = (char *)a1 + v179;
          uint64_t v181 = (char *)a2 + v179;
          uint64_t v182 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 32))(v180, v181, v182);
          uint64_t v183 = type metadata accessor for PreprocessedWeatherData();
          *(void *)&v180[*(int *)(v183 + 20)] = *(void *)&v181[*(int *)(v183 + 20)];
          uint64_t v271 = (int *)v183;
          uint64_t v272 = v181;
          uint64_t v184 = *(int *)(v183 + 24);
          __dst = v180;
          id v185 = &v180[v184];
          uint64_t v186 = &v181[v184];
          long long v187 = *(_OWORD *)&v181[v184 + 16];
          *(_OWORD *)id v185 = *(_OWORD *)&v181[v184];
          *((_OWORD *)v185 + 1) = v187;
          *((_OWORD *)v185 + 2) = *(_OWORD *)&v181[v184 + 32];
          uint64_t v188 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
          uint64_t v189 = *(int *)(v188 + 28);
          uint64_t v190 = &v185[v189];
          id v191 = &v186[v189];
          uint64_t v192 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v191, 1, v192))
          {
            uint64_t v193 = sub_10017DF08(&qword_100E63750);
            memcpy(v190, v191, *(void *)(*(void *)(v193 - 8) + 64));
          }
          else
          {
            *(_OWORD *)uint64_t v190 = *(_OWORD *)v191;
            uint64_t v194 = *(int *)(v192 + 20);
            uint64_t v268 = v188;
            uint64_t v195 = &v190[v194];
            uint64_t v196 = &v191[v194];
            uint64_t v197 = type metadata accessor for TemperatureScaleConfiguration();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v197 - 8) + 32))(v195, v196, v197);
            uint64_t v198 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
            *(void *)&v195[v198[5]] = *(void *)&v196[v198[5]];
            *(void *)&v195[v198[6]] = *(void *)&v196[v198[6]];
            *(void *)&v195[v198[7]] = *(void *)&v196[v198[7]];
            *(_OWORD *)&v195[v198[8]] = *(_OWORD *)&v196[v198[8]];
            v195[v198[9]] = v196[v198[9]];
            uint64_t v188 = v268;
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v190, 0, 1, v192);
          }
          *(_OWORD *)&v185[*(int *)(v188 + 32)] = *(_OWORD *)&v186[*(int *)(v188 + 32)];
          uint64_t v199 = v271[7];
          uint64_t v200 = &__dst[v199];
          uint64_t v201 = &v272[v199];
          *(void *)&__dst[v199] = *(void *)&v272[v199];
          uint64_t v202 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
          uint64_t v203 = &v200[v202];
          uint64_t v204 = &v201[v202];
          uint64_t v205 = type metadata accessor for WeatherDescription();
          uint64_t v266 = v205;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v204, 1, v205))
          {
            uint64_t v206 = sub_10017DF08(&qword_100E63758);
            memcpy(v203, v204, *(void *)(*(void *)(v206 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v205 - 8) + 32))(v203, v204, v205);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v203, 0, 1, v205);
          }
          uint64_t v207 = v271[8];
          uint64_t v208 = &__dst[v207];
          uint64_t v209 = &v272[v207];
          long long v210 = *(_OWORD *)&v272[v207 + 16];
          *(_OWORD *)uint64_t v208 = *(_OWORD *)&v272[v207];
          *((_OWORD *)v208 + 1) = v210;
          long long v211 = *(_OWORD *)&v272[v207 + 48];
          *((_OWORD *)v208 + 2) = *(_OWORD *)&v272[v207 + 32];
          *((_OWORD *)v208 + 3) = v211;
          uint64_t v212 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
          uint64_t v213 = &v208[v212];
          uint64_t v214 = &v209[v212];
          uint64_t v267 = type metadata accessor for Date();
          uint64_t v265 = *(void (**)(char *, char *))(*(void *)(v267 - 8) + 32);
          v265(v213, v214);
          uint64_t v215 = type metadata accessor for WeatherConditionBackgroundTimeData();
          uint64_t v216 = *(int *)(v215 + 20);
          uint64_t v217 = &v213[v216];
          id v218 = &v214[v216];
          uint64_t v219 = type metadata accessor for Elevation();
          uint64_t v269 = v219;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v218, 1, v219))
          {
            uint64_t v220 = sub_10017DF08(&qword_100E63760);
            memcpy(v217, v218, *(void *)(*(void *)(v220 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v219 - 8) + 32))(v217, v218, v219);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v217, 0, 1, v219);
          }
          uint64_t v221 = *(int *)(v215 + 24);
          uint64_t v222 = &v213[v221];
          uint64_t v223 = &v214[v221];
          uint64_t v224 = type metadata accessor for BackgroundMoonData();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v223, 1, v224))
          {
            uint64_t v225 = sub_10017DF08(&qword_100E63768);
            memcpy(v222, v223, *(void *)(*(void *)(v225 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v224 - 8) + 32))(v222, v223, v224);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v222, 0, 1, v224);
          }
          memcpy(&__dst[v271[9]], &v272[v271[9]], 0x70uLL);
          uint64_t v226 = v271[10];
          uint64_t v227 = &__dst[v226];
          uint64_t v228 = &v272[v226];
          (*(void (**)(char *, char *))(*(void *)(v266 - 8) + 32))(&__dst[v226], &v272[v226]);
          uint64_t v229 = type metadata accessor for UVIndexComponentPreprocessedDataModel();
          *(_OWORD *)&v227[*(int *)(v229 + 20)] = *(_OWORD *)&v228[*(int *)(v229 + 20)];
          uint64_t v230 = v271[11];
          uint64_t v231 = &__dst[v230];
          uint64_t v232 = &v272[v230];
          long long v233 = *((_OWORD *)v232 + 1);
          *(_OWORD *)uint64_t v231 = *(_OWORD *)v232;
          *((_OWORD *)v231 + 1) = v233;
          *((_OWORD *)v231 + 2) = *((_OWORD *)v232 + 2);
          uint64_t v234 = v271[12];
          uint64_t v235 = &__dst[v234];
          uint64_t v236 = &v272[v234];
          uint64_t v237 = type metadata accessor for PressureTrend();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v237 - 8) + 32))(v235, v236, v237);
          uint64_t v238 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
          *(_OWORD *)&v235[v238[5]] = *(_OWORD *)&v236[v238[5]];
          *(_OWORD *)&v235[v238[6]] = *(_OWORD *)&v236[v238[6]];
          *(_OWORD *)&v235[v238[7]] = *(_OWORD *)&v236[v238[7]];
          *(void *)&v235[v238[8]] = *(void *)&v236[v238[8]];
          *(_OWORD *)&v235[v238[9]] = *(_OWORD *)&v236[v238[9]];
          memcpy(&__dst[v271[13]], &v272[v271[13]], 0xE8uLL);
          uint64_t v239 = v271[14];
          uint64_t v240 = &__dst[v239];
          uint64_t v241 = &v272[v239];
          ((void (*)(char *, char *, uint64_t))v265)(&__dst[v239], &v272[v239], v267);
          uint64_t v242 = *(int *)(v215 + 20);
          uint64_t v243 = &v240[v242];
          uint64_t v244 = &v241[v242];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v241[v242], 1, v269))
          {
            uint64_t v245 = sub_10017DF08(&qword_100E63760);
            memcpy(v243, v244, *(void *)(*(void *)(v245 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v269 - 8) + 32))(v243, v244, v269);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v243, 0, 1, v269);
          }
          uint64_t v246 = *(int *)(v215 + 24);
          uint64_t v247 = &v240[v246];
          uint64_t v248 = &v241[v246];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v248, 1, v224))
          {
            uint64_t v249 = sub_10017DF08(&qword_100E63768);
            memcpy(v247, v248, *(void *)(*(void *)(v249 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v224 - 8) + 32))(v247, v248, v224);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v247, 0, 1, v224);
          }
          memcpy(&__dst[v271[15]], &v272[v271[15]], 0x70uLL);
          uint64_t v250 = v270[20];
          uint64_t v96 = (char *)a1 + v250;
          uint64_t v97 = (char *)a2 + v250;
          uint64_t v98 = type metadata accessor for NewsDataModel();
          if (!swift_getEnumCaseMultiPayload()) {
            goto LABEL_176;
          }
          goto LABEL_175;
        case 5u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v95 = *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48);
          uint64_t v96 = (char *)a1 + v95;
          uint64_t v97 = (char *)a2 + v95;
          uint64_t v98 = type metadata accessor for NewsDataModel();
          if (swift_getEnumCaseMultiPayload())
          {
LABEL_175:
            memcpy(v96, v97, *(void *)(*(void *)(v98 - 8) + 64));
          }
          else
          {
LABEL_176:
            uint64_t v251 = type metadata accessor for News();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v251 - 8) + 32))(v96, v97, v251);
            swift_storeEnumTagMultiPayload();
          }
          goto LABEL_177;
        case 6u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v99 = *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
          uint64_t v100 = (char *)a1 + v99;
          uint64_t v101 = (char *)a2 + v99;
          uint64_t v102 = type metadata accessor for AvailableDataSets();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32))(v100, v101, v102);
          goto LABEL_177;
        case 8u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v103 = *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
          uint64_t v104 = (char *)a1 + v103;
          uint64_t v105 = (char *)a2 + v103;
          uint64_t v106 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 32))(v104, v105, v106);
LABEL_177:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v37 - 8) + 64));
          break;
      }
      goto LABEL_193;
    case 0xAu:
      uint64_t v8 = type metadata accessor for DebugAction();
      int v47 = swift_getEnumCaseMultiPayload();
      if (v47 == 1) {
        goto LABEL_39;
      }
      if (v47) {
        goto LABEL_35;
      }
      uint64_t v48 = type metadata accessor for WeatherCondition();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v48))
      {
        uint64_t v49 = sub_10017DF08(&qword_100E63A50);
        memcpy(a1, a2, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v48 - 8) + 32))(a1, a2, v48);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v48);
      }
      uint64_t v115 = sub_10017DF08(&qword_100E6F648);
      *(_OWORD *)((char *)a1 + *(int *)(v115 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v115 + 48));
      goto LABEL_192;
    case 0xBu:
      uint64_t v8 = type metadata accessor for ConditionDetailViewAction();
      int v17 = swift_getEnumCaseMultiPayload();
      switch(v17)
      {
        case 2:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          char v52 = (int *)type metadata accessor for DetailChartSelection();
          uint64_t v53 = v52[5];
          uint64_t v54 = (char *)a1 + v53;
          uint64_t v55 = (char *)a2 + v53;
          uint64_t v56 = type metadata accessor for Date();
          uint64_t v57 = *(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32);
          v57(v54, v55, v56);
          v57((char *)a1 + v52[6], (char *)a2 + v52[6], v56);
          v57((char *)a1 + v52[7], (char *)a2 + v52[7], v56);
          *(void *)((char *)a1 + v52[8]) = *(void *)((char *)a2 + v52[8]);
          uint64_t v58 = v52[9];
          uint64_t v59 = (char *)a1 + v58;
          uint64_t v60 = (char *)a2 + v58;
          v59[8] = v60[8];
          *(void *)uint64_t v59 = *(void *)v60;
          goto LABEL_192;
        case 1:
          uint64_t v61 = type metadata accessor for DetailCondition();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v61 - 8) + 32))(a1, a2, v61);
          goto LABEL_192;
        case 0:
LABEL_13:
          uint64_t v18 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
          goto LABEL_192;
      }
LABEL_35:
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      goto LABEL_193;
    case 0xDu:
      uint64_t v8 = type metadata accessor for MoonDetailViewAction();
      int v19 = swift_getEnumCaseMultiPayload();
      if (v19 == 1) {
        goto LABEL_13;
      }
      if (v19) {
        goto LABEL_35;
      }
      type metadata accessor for MoonDetailSelectedDate();
      swift_getEnumCaseMultiPayload();
      uint64_t v20 = type metadata accessor for Date();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
      swift_storeEnumTagMultiPayload();
      goto LABEL_192;
    case 0xEu:
      uint64_t v8 = type metadata accessor for AveragesDetailViewAction();
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_35;
      }
      *a1 = *a2;
      uint64_t v21 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      uint64_t v22 = v21[5];
      uint64_t v23 = (char *)a1 + v22;
      uint64_t v24 = (char *)a2 + v22;
      uint64_t v25 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
      *(void *)((char *)a1 + v21[6]) = *(void *)((char *)a2 + v21[6]);
      *(void *)((char *)a1 + v21[7]) = *(void *)((char *)a2 + v21[7]);
      swift_storeEnumTagMultiPayload();
      goto LABEL_193;
    case 0x11u:
      uint64_t v26 = type metadata accessor for PerformanceTestAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v27 = type metadata accessor for DetailCondition();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 32))(a1, a2, v27);
          goto LABEL_81;
        case 2u:
          uint64_t v88 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v88 - 8) + 32))(a1, a2, v88);
          goto LABEL_81;
        case 3u:
          *a1 = *a2;
          uint64_t v89 = sub_10017DF08((uint64_t *)&unk_100EA0250);
          uint64_t v90 = *(int *)(v89 + 48);
          uint64_t v91 = (char *)a1 + v90;
          uint64_t v92 = (char *)a2 + v90;
          uint64_t v93 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 32))(v91, v92, v93);
          *((unsigned char *)a1 + *(int *)(v89 + 64)) = *((unsigned char *)a2 + *(int *)(v89 + 64));
          goto LABEL_81;
        case 4u:
          uint64_t v94 = type metadata accessor for WeatherCondition();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v94 - 8) + 32))(a1, a2, v94);
LABEL_81:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v26 - 8) + 64));
          break;
      }
      goto LABEL_193;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_194;
  }
}

void *sub_100B8FC88(void *a1, void *a2, uint64_t a3)
{
  if (a1 == a2) {
    goto LABEL_195;
  }
  sub_1001ABE70((uint64_t)a1);
  uint64_t v6 = type metadata accessor for MainAction();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v7 = type metadata accessor for AppConfiguration();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      goto LABEL_194;
    case 2u:
      uint64_t v8 = type metadata accessor for EnvironmentAction();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 11)
      {
        uint64_t v31 = type metadata accessor for ConfiguredUnitsAction();
        int v67 = swift_getEnumCaseMultiPayload();
        if (v67 == 1)
        {
          uint64_t v122 = type metadata accessor for UnitConfiguration.Temperature();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v122))
          {
            uint64_t v123 = sub_10017DF08(&qword_100E6F620);
            memcpy(a1, a2, *(void *)(*(void *)(v123 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v122 - 8) + 32))(a1, a2, v122);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v122);
          }
        }
        else
        {
          if (v67) {
            goto LABEL_105;
          }
          uint64_t v68 = type metadata accessor for ConfiguredUnit();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v68 - 8) + 32))(a1, a2, v68);
        }
        goto LABEL_192;
      }
      if (EnumCaseMultiPayload == 3)
      {
        uint64_t v31 = type metadata accessor for ActivityAction();
        int v69 = swift_getEnumCaseMultiPayload();
        if (v69 != 1)
        {
          if (v69) {
            goto LABEL_105;
          }
          type metadata accessor for SavedLocation();
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v70 = type metadata accessor for SavedLocation.Placeholder();
          }
          else {
            uint64_t v70 = type metadata accessor for Location();
          }
          (*(void (**)(void *, void *))(*(void *)(v70 - 8) + 32))(a1, a2);
          swift_storeEnumTagMultiPayload();
          goto LABEL_192;
        }
        uint64_t v124 = type metadata accessor for PreviewLocation();
        int v125 = swift_getEnumCaseMultiPayload();
        if (v125 == 2)
        {
          *a1 = *a2;
          *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
          *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
          *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
          uint64_t v252 = type metadata accessor for SearchLocation();
          uint64_t v253 = *(int *)(v252 + 32);
          __dsta = (char *)a1 + v253;
          uint64_t v254 = (char *)a2 + v253;
          uint64_t v255 = type metadata accessor for Location();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v254, 1, v255))
          {
            uint64_t v256 = sub_10017DF08(&qword_100E639E8);
            memcpy(__dsta, v254, *(void *)(*(void *)(v256 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v255 - 8) + 32))(__dsta, v254, v255);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v255);
          }
          uint64_t v261 = *(int *)(v252 + 36);
          uint64_t v262 = (char *)a1 + v261;
          uint64_t v263 = (char *)a2 + v261;
          *(_OWORD *)uint64_t v262 = *(_OWORD *)v263;
          v262[16] = v263[16];
        }
        else if (v125 == 1)
        {
          uint64_t v257 = type metadata accessor for LocationOfInterest();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v257 - 8) + 32))(a1, a2, v257);
        }
        else
        {
          if (v125)
          {
            memcpy(a1, a2, *(void *)(*(void *)(v124 - 8) + 64));
LABEL_192:
            swift_storeEnumTagMultiPayload();
            goto LABEL_193;
          }
          uint64_t v126 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v126 - 8) + 32))(a1, a2, v126);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_192;
      }
      if (EnumCaseMultiPayload != 2) {
        goto LABEL_36;
      }
      uint64_t v29 = type metadata accessor for Locale();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 32))(a1, a2, v29);
LABEL_193:
      swift_storeEnumTagMultiPayload();
LABEL_194:
      swift_storeEnumTagMultiPayload();
LABEL_195:
      *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
      return a1;
    case 3u:
      uint64_t v8 = type metadata accessor for LocationsAction();
      int v30 = swift_getEnumCaseMultiPayload();
      if (v30 == 1)
      {
        uint64_t v50 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v50 - 8) + 32))(a1, a2, v50);
        uint64_t v51 = sub_10017DF08(&qword_100E6F628);
        *((unsigned char *)a1 + *(int *)(v51 + 48)) = *((unsigned char *)a2 + *(int *)(v51 + 48));
      }
      else
      {
        if (v30) {
          goto LABEL_36;
        }
        uint64_t v31 = type metadata accessor for CurrentLocation();
        if (swift_getEnumCaseMultiPayload() > 2)
        {
LABEL_105:
          memcpy(a1, a2, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
LABEL_29:
          uint64_t v121 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v121 - 8) + 32))(a1, a2, v121);
          swift_storeEnumTagMultiPayload();
        }
      }
      goto LABEL_193;
    case 4u:
      uint64_t v8 = type metadata accessor for NotificationsAction();
      int v32 = swift_getEnumCaseMultiPayload();
      if (v32 == 5)
      {
        uint64_t v71 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v71 - 8) + 32))(a1, a2, v71);
        uint64_t v72 = *(int *)(sub_10017DF08(&qword_100E6F638) + 48);
        uint64_t v73 = (char *)a1 + v72;
        uint64_t v74 = (char *)a2 + v72;
        uint64_t v75 = type metadata accessor for NotificationSubscription.Kind();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
        goto LABEL_193;
      }
      if (v32 == 2)
      {
        uint64_t v62 = type metadata accessor for NotificationSubscription.Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v62 - 8) + 32))(a1, a2, v62);
        uint64_t v63 = *(int *)(sub_10017DF08(&qword_100E6F630) + 48);
        uint64_t v64 = (char *)a1 + v63;
        uint64_t v65 = (char *)a2 + v63;
        uint64_t v66 = type metadata accessor for NotificationSubscription.Kind();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v64, v65, v66);
        goto LABEL_193;
      }
      if (v32 != 1) {
        goto LABEL_36;
      }
      uint64_t v33 = type metadata accessor for LocationModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v33))
      {
        uint64_t v34 = type metadata accessor for NotificationLocation();
        memcpy(a1, a2, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 32))(a1, a2, v33);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v33);
      }
      uint64_t v116 = *(int *)(sub_10017DF08((uint64_t *)&unk_100EAC3E0) + 48);
      uint64_t v117 = (char *)a1 + v116;
      unint64_t v118 = (char *)a2 + v116;
      uint64_t v119 = type metadata accessor for URL();
      if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v118, 1, v119)) {
        goto LABEL_135;
      }
      uint64_t v120 = sub_10017DF08(&qword_100E749B0);
      memcpy(v117, v118, *(void *)(*(void *)(v120 - 8) + 64));
      goto LABEL_193;
    case 5u:
      uint64_t v8 = type metadata accessor for NotificationsOptInAction();
      int v9 = swift_getEnumCaseMultiPayload();
      if (v9 == 4) {
        goto LABEL_14;
      }
      if (v9 != 2) {
        goto LABEL_36;
      }
      uint64_t v10 = type metadata accessor for Location();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      uint64_t v11 = sub_10017DF08(&qword_100E6BBD8);
      *((unsigned char *)a1 + *(int *)(v11 + 48)) = *((unsigned char *)a2 + *(int *)(v11 + 48));
      goto LABEL_193;
    case 6u:
      uint64_t v12 = type metadata accessor for ViewAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v13 = type metadata accessor for ListViewAction();
          int v14 = swift_getEnumCaseMultiPayload();
          if (v14 == 2) {
            goto LABEL_126;
          }
          if (v14) {
            goto LABEL_142;
          }
          uint64_t v15 = type metadata accessor for LocationModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
          uint64_t v16 = sub_10017DF08(&qword_100E6F640);
          *((unsigned char *)a1 + *(int *)(v16 + 48)) = *((unsigned char *)a2 + *(int *)(v16 + 48));
          goto LABEL_186;
        case 1u:
          uint64_t v13 = type metadata accessor for LocationViewerViewAction();
          int v107 = swift_getEnumCaseMultiPayload();
          if (v107 == 2)
          {
LABEL_126:
            uint64_t v149 = type metadata accessor for Location.Identifier();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v149 - 8) + 32))(a1, a2, v149);
          }
          else if (v107 == 1)
          {
            uint64_t v164 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v164 - 8) + 32))(a1, a2, v164);
          }
          else
          {
            if (v107)
            {
LABEL_142:
              memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
              goto LABEL_187;
            }
            uint64_t v108 = type metadata accessor for LocationModel();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v108 - 8) + 32))(a1, a2, v108);
          }
LABEL_186:
          swift_storeEnumTagMultiPayload();
LABEL_187:
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          uint64_t v13 = type metadata accessor for SearchViewAction();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v109 = type metadata accessor for CodableError();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v109 - 8) + 32))(a1, a2, v109);
              goto LABEL_186;
            case 3u:
            case 6u:
              uint64_t v165 = type metadata accessor for Location();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v165 - 8) + 32))(a1, a2, v165);
              goto LABEL_186;
            case 4u:
              uint64_t v166 = type metadata accessor for LocationOfInterest();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v166 - 8) + 32))(a1, a2, v166);
              goto LABEL_186;
            case 5u:
              *a1 = *a2;
              *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
              *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
              *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
              uint64_t v167 = type metadata accessor for SearchLocation();
              uint64_t v168 = *(int *)(v167 + 32);
              int v169 = (char *)a1 + v168;
              uint64_t v170 = (char *)a2 + v168;
              uint64_t v171 = type metadata accessor for Location();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v170, 1, v171))
              {
                uint64_t v172 = sub_10017DF08(&qword_100E639E8);
                memcpy(v169, v170, *(void *)(*(void *)(v172 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 32))(v169, v170, v171);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v169, 0, 1, v171);
              }
              uint64_t v258 = *(int *)(v167 + 36);
              uint64_t v259 = (char *)a1 + v258;
              uint64_t v260 = (char *)a2 + v258;
              *(_OWORD *)uint64_t v259 = *(_OWORD *)v260;
              v259[16] = v260[16];
              goto LABEL_186;
            default:
              goto LABEL_142;
          }
        case 4u:
          uint64_t v110 = type metadata accessor for InteractiveMapViewAction();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
            case 1u:
            case 2u:
            case 4u:
              uint64_t v174 = type metadata accessor for Location();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v174 - 8) + 32))(a1, a2, v174);
              goto LABEL_150;
            case 3u:
              uint64_t v173 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v173 - 8) + 32))(a1, a2, v173);
LABEL_150:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(void *)(*(void *)(v110 - 8) + 64));
              break;
          }
          goto LABEL_187;
        case 5u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          *((unsigned char *)a1 + 17) = *((unsigned char *)a2 + 17);
          *((unsigned char *)a1 + 18) = *((unsigned char *)a2 + 18);
          uint64_t v111 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
          uint64_t v112 = (char *)a1 + v111;
          uint64_t v113 = (char *)a2 + v111;
          uint64_t v114 = type metadata accessor for DynamicTypeSize();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 32))(v112, v113, v114);
          goto LABEL_187;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
          goto LABEL_194;
      }
      goto LABEL_194;
    case 7u:
      uint64_t v8 = type metadata accessor for ModalViewAction();
      if (swift_getEnumCaseMultiPayload()) {
        goto LABEL_36;
      }
      uint64_t v31 = type metadata accessor for LocationPreviewViewAction();
      if (swift_getEnumCaseMultiPayload() == 1) {
        goto LABEL_29;
      }
      goto LABEL_105;
    case 8u:
      uint64_t v8 = type metadata accessor for LocationViewAction();
      int v35 = swift_getEnumCaseMultiPayload();
      if (v35 == 2)
      {
        uint64_t v76 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v76 - 8) + 32))(a1, a2, v76);
        uint64_t v77 = *(int *)(sub_10017DF08(&qword_100E66450) + 48);
        uint64_t v78 = (char *)a1 + v77;
        uint64_t v79 = (char *)a2 + v77;
        uint64_t v80 = type metadata accessor for LocationOfInterest();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 32))(v78, v79, v80);
        uint64_t v81 = *(int *)(sub_10017DF08(&qword_100E66448) + 48);
        uint64_t v82 = (char *)a1 + v81;
        uint64_t v83 = (char *)a2 + v81;
        long long v84 = *((_OWORD *)v83 + 1);
        *(_OWORD *)uint64_t v82 = *(_OWORD *)v83;
        *((_OWORD *)v82 + 1) = v84;
        v82[32] = v83[32];
      }
      else if (v35 == 1)
      {
        uint64_t v85 = type metadata accessor for LocationComponentAction(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v86 = type metadata accessor for URL();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v86 - 8) + 32))(a1, a2, v86);
            uint64_t v87 = sub_10017DF08(&qword_100E66478);
            *((unsigned char *)a1 + *(int *)(v87 + 48)) = *((unsigned char *)a2 + *(int *)(v87 + 48));
            goto LABEL_132;
          case 1u:
            uint64_t v150 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v150 - 8) + 32))(a1, a2, v150);
            goto LABEL_132;
          case 2u:
            uint64_t v151 = type metadata accessor for DetailCondition();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v151 - 8) + 32))(a1, a2, v151);
            uint64_t v152 = sub_10017DF08(&qword_100E66488);
            *((unsigned char *)a1 + *(int *)(v152 + 48)) = *((unsigned char *)a2 + *(int *)(v152 + 48));
            goto LABEL_132;
          case 4u:
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v153 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
            uint64_t v154 = (char *)a1 + v153;
            uint64_t v155 = (char *)a2 + v153;
            uint64_t v156 = type metadata accessor for Location();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 32))(v154, v155, v156);
LABEL_132:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v85 - 8) + 64));
            break;
        }
        uint64_t v157 = sub_10017DF08(&qword_100E66458);
        uint64_t v158 = *(int *)(v157 + 48);
        uint64_t v159 = (char *)a1 + v158;
        long long v160 = (char *)a2 + v158;
        long long v161 = *((_OWORD *)v160 + 1);
        *(_OWORD *)uint64_t v159 = *(_OWORD *)v160;
        *((_OWORD *)v159 + 1) = v161;
        v159[32] = v160[32];
        uint64_t v162 = *(int *)(v157 + 64);
        uint64_t v117 = (char *)a1 + v162;
        unint64_t v118 = (char *)a2 + v162;
        uint64_t v119 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v118, 1, v119))
        {
          uint64_t v163 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v117, v118, *(void *)(*(void *)(v163 - 8) + 64));
        }
        else
        {
LABEL_135:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 32))(v117, v118, v119);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v117, 0, 1, v119);
        }
      }
      else
      {
        if (v35) {
          goto LABEL_36;
        }
LABEL_40:
        uint64_t v36 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 32))(a1, a2, v36);
      }
      goto LABEL_193;
    case 9u:
      uint64_t v37 = type metadata accessor for WeatherDataAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 4u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v270 = (int *)sub_10017DF08(&qword_100E6BBC0);
          uint64_t v38 = v270[12];
          uint64_t v39 = (char *)a1 + v38;
          uint64_t v40 = (char *)a2 + v38;
          *(_OWORD *)((char *)a1 + v38) = *(_OWORD *)((char *)a2 + v38);
          uint64_t v41 = (int *)type metadata accessor for WeatherData(0);
          uint64_t v42 = v41[5];
          uint64_t v43 = &v39[v42];
          uint64_t v44 = &v40[v42];
          uint64_t v45 = type metadata accessor for Locale();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45))
          {
            uint64_t v46 = sub_10017DF08(&qword_100E63730);
            memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v45);
          }
          uint64_t v127 = v41[6];
          uint64_t v128 = &v39[v127];
          uint64_t v129 = &v40[v127];
          uint64_t v130 = type metadata accessor for WeatherDataModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 32))(v128, v129, v130);
          uint64_t v131 = v41[7];
          uint64_t v132 = &v39[v131];
          uint64_t v133 = &v40[v131];
          uint64_t v134 = sub_10017DF08(&qword_100E63738);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v133, 1, v134))
          {
            uint64_t v135 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v132, v133, *(void *)(*(void *)(v135 - 8) + 64));
          }
          else
          {
            uint64_t v136 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 32))(v132, v133, v136);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v132, 0, 1, v134);
          }
          uint64_t v137 = v41[8];
          uint64_t v138 = &v39[v137];
          uint64_t v139 = &v40[v137];
          uint64_t v140 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v141 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 32))(v138, v139, v141);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v138, v139, *(void *)(*(void *)(v140 - 8) + 64));
          }
          uint64_t v142 = v41[9];
          uint64_t v143 = &v39[v142];
          uint64_t v144 = &v40[v142];
          uint64_t v145 = type metadata accessor for WeatherDataOverrides();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v144, 1, v145))
          {
            uint64_t v146 = sub_10017DF08(&qword_100E63740);
            memcpy(v143, v144, *(void *)(*(void *)(v146 - 8) + 64));
          }
          else
          {
            uint64_t v147 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v144, 1, v147))
            {
              uint64_t v148 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v143, v144, *(void *)(*(void *)(v148 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 32))(v143, v144, v147);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v143, 0, 1, v147);
            }
            uint64_t v175 = *(int *)(v145 + 20);
            uint64_t v176 = &v143[v175];
            uint64_t v177 = &v144[v175];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v177, 1, v147))
            {
              uint64_t v178 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v176, v177, *(void *)(*(void *)(v178 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 32))(v176, v177, v147);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v176, 0, 1, v147);
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v143, 0, 1, v145);
          }
          uint64_t v179 = v270[16];
          uint64_t v180 = (char *)a1 + v179;
          uint64_t v181 = (char *)a2 + v179;
          uint64_t v182 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 32))(v180, v181, v182);
          uint64_t v183 = type metadata accessor for PreprocessedWeatherData();
          *(void *)&v180[*(int *)(v183 + 20)] = *(void *)&v181[*(int *)(v183 + 20)];
          uint64_t v271 = (int *)v183;
          uint64_t v272 = v181;
          uint64_t v184 = *(int *)(v183 + 24);
          __dst = v180;
          id v185 = &v180[v184];
          uint64_t v186 = &v181[v184];
          long long v187 = *(_OWORD *)&v181[v184 + 16];
          *(_OWORD *)id v185 = *(_OWORD *)&v181[v184];
          *((_OWORD *)v185 + 1) = v187;
          *((_OWORD *)v185 + 2) = *(_OWORD *)&v181[v184 + 32];
          uint64_t v188 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
          uint64_t v189 = *(int *)(v188 + 28);
          uint64_t v190 = &v185[v189];
          id v191 = &v186[v189];
          uint64_t v192 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v191, 1, v192))
          {
            uint64_t v193 = sub_10017DF08(&qword_100E63750);
            memcpy(v190, v191, *(void *)(*(void *)(v193 - 8) + 64));
          }
          else
          {
            *(_OWORD *)uint64_t v190 = *(_OWORD *)v191;
            uint64_t v194 = *(int *)(v192 + 20);
            uint64_t v268 = v188;
            uint64_t v195 = &v190[v194];
            uint64_t v196 = &v191[v194];
            uint64_t v197 = type metadata accessor for TemperatureScaleConfiguration();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v197 - 8) + 32))(v195, v196, v197);
            uint64_t v198 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
            *(void *)&v195[v198[5]] = *(void *)&v196[v198[5]];
            *(void *)&v195[v198[6]] = *(void *)&v196[v198[6]];
            *(void *)&v195[v198[7]] = *(void *)&v196[v198[7]];
            *(_OWORD *)&v195[v198[8]] = *(_OWORD *)&v196[v198[8]];
            v195[v198[9]] = v196[v198[9]];
            uint64_t v188 = v268;
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v190, 0, 1, v192);
          }
          *(_OWORD *)&v185[*(int *)(v188 + 32)] = *(_OWORD *)&v186[*(int *)(v188 + 32)];
          uint64_t v199 = v271[7];
          uint64_t v200 = &__dst[v199];
          uint64_t v201 = &v272[v199];
          *(void *)&__dst[v199] = *(void *)&v272[v199];
          uint64_t v202 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
          uint64_t v203 = &v200[v202];
          uint64_t v204 = &v201[v202];
          uint64_t v205 = type metadata accessor for WeatherDescription();
          uint64_t v266 = v205;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v204, 1, v205))
          {
            uint64_t v206 = sub_10017DF08(&qword_100E63758);
            memcpy(v203, v204, *(void *)(*(void *)(v206 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v205 - 8) + 32))(v203, v204, v205);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v203, 0, 1, v205);
          }
          uint64_t v207 = v271[8];
          uint64_t v208 = &__dst[v207];
          uint64_t v209 = &v272[v207];
          long long v210 = *(_OWORD *)&v272[v207 + 16];
          *(_OWORD *)uint64_t v208 = *(_OWORD *)&v272[v207];
          *((_OWORD *)v208 + 1) = v210;
          long long v211 = *(_OWORD *)&v272[v207 + 48];
          *((_OWORD *)v208 + 2) = *(_OWORD *)&v272[v207 + 32];
          *((_OWORD *)v208 + 3) = v211;
          uint64_t v212 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
          uint64_t v213 = &v208[v212];
          uint64_t v214 = &v209[v212];
          uint64_t v267 = type metadata accessor for Date();
          uint64_t v265 = *(void (**)(char *, char *))(*(void *)(v267 - 8) + 32);
          v265(v213, v214);
          uint64_t v215 = type metadata accessor for WeatherConditionBackgroundTimeData();
          uint64_t v216 = *(int *)(v215 + 20);
          uint64_t v217 = &v213[v216];
          id v218 = &v214[v216];
          uint64_t v219 = type metadata accessor for Elevation();
          uint64_t v269 = v219;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v218, 1, v219))
          {
            uint64_t v220 = sub_10017DF08(&qword_100E63760);
            memcpy(v217, v218, *(void *)(*(void *)(v220 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v219 - 8) + 32))(v217, v218, v219);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v217, 0, 1, v219);
          }
          uint64_t v221 = *(int *)(v215 + 24);
          uint64_t v222 = &v213[v221];
          uint64_t v223 = &v214[v221];
          uint64_t v224 = type metadata accessor for BackgroundMoonData();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v223, 1, v224))
          {
            uint64_t v225 = sub_10017DF08(&qword_100E63768);
            memcpy(v222, v223, *(void *)(*(void *)(v225 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v224 - 8) + 32))(v222, v223, v224);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v222, 0, 1, v224);
          }
          memcpy(&__dst[v271[9]], &v272[v271[9]], 0x70uLL);
          uint64_t v226 = v271[10];
          uint64_t v227 = &__dst[v226];
          uint64_t v228 = &v272[v226];
          (*(void (**)(char *, char *))(*(void *)(v266 - 8) + 32))(&__dst[v226], &v272[v226]);
          uint64_t v229 = type metadata accessor for UVIndexComponentPreprocessedDataModel();
          *(_OWORD *)&v227[*(int *)(v229 + 20)] = *(_OWORD *)&v228[*(int *)(v229 + 20)];
          uint64_t v230 = v271[11];
          uint64_t v231 = &__dst[v230];
          uint64_t v232 = &v272[v230];
          long long v233 = *((_OWORD *)v232 + 1);
          *(_OWORD *)uint64_t v231 = *(_OWORD *)v232;
          *((_OWORD *)v231 + 1) = v233;
          *((_OWORD *)v231 + 2) = *((_OWORD *)v232 + 2);
          uint64_t v234 = v271[12];
          uint64_t v235 = &__dst[v234];
          uint64_t v236 = &v272[v234];
          uint64_t v237 = type metadata accessor for PressureTrend();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v237 - 8) + 32))(v235, v236, v237);
          uint64_t v238 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
          *(_OWORD *)&v235[v238[5]] = *(_OWORD *)&v236[v238[5]];
          *(_OWORD *)&v235[v238[6]] = *(_OWORD *)&v236[v238[6]];
          *(_OWORD *)&v235[v238[7]] = *(_OWORD *)&v236[v238[7]];
          *(void *)&v235[v238[8]] = *(void *)&v236[v238[8]];
          *(_OWORD *)&v235[v238[9]] = *(_OWORD *)&v236[v238[9]];
          memcpy(&__dst[v271[13]], &v272[v271[13]], 0xE8uLL);
          uint64_t v239 = v271[14];
          uint64_t v240 = &__dst[v239];
          uint64_t v241 = &v272[v239];
          ((void (*)(char *, char *, uint64_t))v265)(&__dst[v239], &v272[v239], v267);
          uint64_t v242 = *(int *)(v215 + 20);
          uint64_t v243 = &v240[v242];
          uint64_t v244 = &v241[v242];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v241[v242], 1, v269))
          {
            uint64_t v245 = sub_10017DF08(&qword_100E63760);
            memcpy(v243, v244, *(void *)(*(void *)(v245 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v269 - 8) + 32))(v243, v244, v269);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v243, 0, 1, v269);
          }
          uint64_t v246 = *(int *)(v215 + 24);
          uint64_t v247 = &v240[v246];
          uint64_t v248 = &v241[v246];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v248, 1, v224))
          {
            uint64_t v249 = sub_10017DF08(&qword_100E63768);
            memcpy(v247, v248, *(void *)(*(void *)(v249 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v224 - 8) + 32))(v247, v248, v224);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v247, 0, 1, v224);
          }
          memcpy(&__dst[v271[15]], &v272[v271[15]], 0x70uLL);
          uint64_t v250 = v270[20];
          uint64_t v96 = (char *)a1 + v250;
          uint64_t v97 = (char *)a2 + v250;
          uint64_t v98 = type metadata accessor for NewsDataModel();
          if (!swift_getEnumCaseMultiPayload()) {
            goto LABEL_177;
          }
          goto LABEL_176;
        case 5u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v95 = *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48);
          uint64_t v96 = (char *)a1 + v95;
          uint64_t v97 = (char *)a2 + v95;
          uint64_t v98 = type metadata accessor for NewsDataModel();
          if (swift_getEnumCaseMultiPayload())
          {
LABEL_176:
            memcpy(v96, v97, *(void *)(*(void *)(v98 - 8) + 64));
          }
          else
          {
LABEL_177:
            uint64_t v251 = type metadata accessor for News();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v251 - 8) + 32))(v96, v97, v251);
            swift_storeEnumTagMultiPayload();
          }
          goto LABEL_178;
        case 6u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v99 = *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
          uint64_t v100 = (char *)a1 + v99;
          uint64_t v101 = (char *)a2 + v99;
          uint64_t v102 = type metadata accessor for AvailableDataSets();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32))(v100, v101, v102);
          goto LABEL_178;
        case 8u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v103 = *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
          uint64_t v104 = (char *)a1 + v103;
          uint64_t v105 = (char *)a2 + v103;
          uint64_t v106 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 32))(v104, v105, v106);
LABEL_178:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v37 - 8) + 64));
          break;
      }
      goto LABEL_194;
    case 0xAu:
      uint64_t v8 = type metadata accessor for DebugAction();
      int v47 = swift_getEnumCaseMultiPayload();
      if (v47 == 1) {
        goto LABEL_40;
      }
      if (v47) {
        goto LABEL_36;
      }
      uint64_t v48 = type metadata accessor for WeatherCondition();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v48))
      {
        uint64_t v49 = sub_10017DF08(&qword_100E63A50);
        memcpy(a1, a2, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v48 - 8) + 32))(a1, a2, v48);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v48);
      }
      uint64_t v115 = sub_10017DF08(&qword_100E6F648);
      *(_OWORD *)((char *)a1 + *(int *)(v115 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v115 + 48));
      goto LABEL_193;
    case 0xBu:
      uint64_t v8 = type metadata accessor for ConditionDetailViewAction();
      int v17 = swift_getEnumCaseMultiPayload();
      switch(v17)
      {
        case 2:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          char v52 = (int *)type metadata accessor for DetailChartSelection();
          uint64_t v53 = v52[5];
          uint64_t v54 = (char *)a1 + v53;
          uint64_t v55 = (char *)a2 + v53;
          uint64_t v56 = type metadata accessor for Date();
          uint64_t v57 = *(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32);
          v57(v54, v55, v56);
          v57((char *)a1 + v52[6], (char *)a2 + v52[6], v56);
          v57((char *)a1 + v52[7], (char *)a2 + v52[7], v56);
          *(void *)((char *)a1 + v52[8]) = *(void *)((char *)a2 + v52[8]);
          uint64_t v58 = v52[9];
          uint64_t v59 = (char *)a1 + v58;
          uint64_t v60 = (char *)a2 + v58;
          v59[8] = v60[8];
          *(void *)uint64_t v59 = *(void *)v60;
          goto LABEL_193;
        case 1:
          uint64_t v61 = type metadata accessor for DetailCondition();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v61 - 8) + 32))(a1, a2, v61);
          goto LABEL_193;
        case 0:
LABEL_14:
          uint64_t v18 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v18 - 8) + 32))(a1, a2, v18);
          goto LABEL_193;
      }
LABEL_36:
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      goto LABEL_194;
    case 0xDu:
      uint64_t v8 = type metadata accessor for MoonDetailViewAction();
      int v19 = swift_getEnumCaseMultiPayload();
      if (v19 == 1) {
        goto LABEL_14;
      }
      if (v19) {
        goto LABEL_36;
      }
      type metadata accessor for MoonDetailSelectedDate();
      swift_getEnumCaseMultiPayload();
      uint64_t v20 = type metadata accessor for Date();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
      swift_storeEnumTagMultiPayload();
      goto LABEL_193;
    case 0xEu:
      uint64_t v8 = type metadata accessor for AveragesDetailViewAction();
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_36;
      }
      *a1 = *a2;
      uint64_t v21 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      uint64_t v22 = v21[5];
      uint64_t v23 = (char *)a1 + v22;
      uint64_t v24 = (char *)a2 + v22;
      uint64_t v25 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
      *(void *)((char *)a1 + v21[6]) = *(void *)((char *)a2 + v21[6]);
      *(void *)((char *)a1 + v21[7]) = *(void *)((char *)a2 + v21[7]);
      swift_storeEnumTagMultiPayload();
      goto LABEL_194;
    case 0x11u:
      uint64_t v26 = type metadata accessor for PerformanceTestAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v27 = type metadata accessor for DetailCondition();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 32))(a1, a2, v27);
          goto LABEL_82;
        case 2u:
          uint64_t v88 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v88 - 8) + 32))(a1, a2, v88);
          goto LABEL_82;
        case 3u:
          *a1 = *a2;
          uint64_t v89 = sub_10017DF08((uint64_t *)&unk_100EA0250);
          uint64_t v90 = *(int *)(v89 + 48);
          uint64_t v91 = (char *)a1 + v90;
          uint64_t v92 = (char *)a2 + v90;
          uint64_t v93 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 32))(v91, v92, v93);
          *((unsigned char *)a1 + *(int *)(v89 + 64)) = *((unsigned char *)a2 + *(int *)(v89 + 64));
          goto LABEL_82;
        case 4u:
          uint64_t v94 = type metadata accessor for WeatherCondition();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v94 - 8) + 32))(a1, a2, v94);
LABEL_82:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v26 - 8) + 64));
          break;
      }
      goto LABEL_194;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_195;
  }
}

uint64_t sub_100B92B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100B92B48);
}

uint64_t sub_100B92B48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for MainAction();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  }
  else
  {
    unsigned int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v9 >= 2) {
      return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_100B92BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100B92BF8);
}

void sub_100B92BF8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for MainAction();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
}

uint64_t type metadata accessor for DispatchAction()
{
  uint64_t result = qword_100EB4D08;
  if (!qword_100EB4D08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100B92CC8()
{
  uint64_t result = type metadata accessor for MainAction();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100B92D5C(uint64_t a1)
{
  v2[9] = a1;
  v2[10] = v1;
  type metadata accessor for MainActor();
  v2[11] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100B92DF4, v4, v3);
}

uint64_t sub_100B92DF4()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_release();
  if (*(unsigned char *)(v1 + *(int *)(type metadata accessor for DispatchAction() + 20)) == 1)
  {
    *(_OWORD *)(swift_task_alloc() + 16) = *(_OWORD *)(v0 + 72);
    static Animation.default.getter();
    withAnimation<A>(_:_:)();
    swift_release();
    swift_task_dealloc();
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 80);
    uint64_t v3 = *(uint64_t (**)(uint64_t))(*(void *)(v0 + 72) + 16);
    sub_10017DF08(&qword_100E63480);
    uint64_t v4 = type metadata accessor for MainAction();
    sub_100164920(v4);
    unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_100C251B0;
    sub_10015B0C4(v2, v7 + v6);
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    *(void *)(v0 + 48) = 0;
    *(void *)(v0 + 56) = v7;
    *(unsigned char *)(v0 + 64) = 0;
    sub_1001AB2DC(v0 + 16, v3);
    sub_100998AC0(v0 + 16);
  }
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100B92F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(a1 + 16);
  sub_10017DF08(&qword_100E63480);
  uint64_t v4 = type metadata accessor for MainAction();
  sub_100164920(v4);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100C251B0;
  sub_10015B0C4(a2, v7 + v6);
  memset(v9, 0, sizeof(v9));
  uint64_t v10 = 0;
  uint64_t v11 = v7;
  char v12 = 0;
  sub_1001AB2DC((uint64_t)v9, v3);
  return sub_100998AC0((uint64_t)v9);
}

uint64_t sub_100B93054(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1002205C0;
  return sub_100B92D5C(a1);
}

uint64_t type metadata accessor for WeatherMenuModule()
{
  return self;
}

uint64_t sub_100B9310C@<X0>(uint64_t *a1@<X8>)
{
  sub_10020D948(v1 + 16, (uint64_t)(a1 + 2));
  swift_retain();
  sub_10017DF08(&qword_100E64C40);
  sub_100B93198();
  uint64_t result = ObservedObject.init(wrappedValue:)();
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t type metadata accessor for MoonCalendarModule()
{
  return self;
}

unint64_t sub_100B93198()
{
  unint64_t result = qword_100E64C48;
  if (!qword_100E64C48)
  {
    sub_10018C6DC(&qword_100E64C40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E64C48);
  }
  return result;
}

void *sub_100B931EC()
{
  return &protocol witness table for AnyView;
}

uint64_t sub_100B931F8(void *a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100EB5000);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(a1, a1[3]);
  sub_100B934C0();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100B93308(uint64_t a1)
{
  unint64_t v2 = sub_100B934C0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100B93344(uint64_t a1)
{
  unint64_t v2 = sub_100B934C0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100B93380(void *a1)
{
  return sub_100B931F8(a1);
}

uint64_t sub_100B93398@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = sub_10017DF08(&qword_100EB5010);
  a1[4] = sub_100B9350C();
  sub_100170694(a1);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_100B93434()
{
  sub_100B93560();

  return ShortDescribable.description.getter();
}

unint64_t sub_100B93474()
{
  unint64_t result = qword_100EB4FF8;
  if (!qword_100EB4FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB4FF8);
  }
  return result;
}

unint64_t sub_100B934C0()
{
  unint64_t result = qword_100EB5008;
  if (!qword_100EB5008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB5008);
  }
  return result;
}

unint64_t sub_100B9350C()
{
  unint64_t result = qword_100EB5018;
  if (!qword_100EB5018)
  {
    sub_10018C6DC(&qword_100EB5010);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB5018);
  }
  return result;
}

unint64_t sub_100B93560()
{
  unint64_t result = qword_100EB5020;
  if (!qword_100EB5020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB5020);
  }
  return result;
}

ValueMetadata *type metadata accessor for MoonCalendarViewState.CodingKeys()
{
  return &type metadata for MoonCalendarViewState.CodingKeys;
}

ValueMetadata *type metadata accessor for MoonCalendarViewState()
{
  return &type metadata for MoonCalendarViewState;
}

unint64_t sub_100B935D0()
{
  unint64_t result = qword_100EB5028;
  if (!qword_100EB5028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB5028);
  }
  return result;
}

unint64_t sub_100B93620()
{
  unint64_t result = qword_100EB5030;
  if (!qword_100EB5030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB5030);
  }
  return result;
}

uint64_t *sub_100B9366C(uint64_t *a1, unsigned __int8 *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v6 = a3;
    uint64_t v7 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v7))
    {
      uint64_t v8 = type metadata accessor for MonthlyAveragesChartModel();
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
LABEL_128:
      uint64_t v242 = *(int *)(v6 + 20);
      long long v243 = *(_OWORD *)&a2[v242 + 24];
      *(_OWORD *)((char *)a1 + v242 + 24) = v243;
      (**(void (***)(void))(v243 - 8))();
      *((unsigned char *)a1 + *(int *)(v6 + 24)) = a2[*(int *)(v6 + 24)];
      return a1;
    }
    uint64_t v10 = *(void *)a2;
    uint64_t v11 = *((void *)a2 + 1);
    unsigned __int8 v12 = a2[16];
    sub_10018F6EC(*(void *)a2, v11, v12);
    *a1 = v10;
    a1[1] = v11;
    *((unsigned char *)a1 + 16) = v12;
    uint64_t v13 = *((void *)a2 + 4);
    a1[3] = *((void *)a2 + 3);
    a1[4] = v13;
    uint64_t v14 = v7[6];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = &a2[v14];
    uint64_t v17 = type metadata accessor for WeatherDescription();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
    {
      uint64_t v18 = sub_10017DF08(&qword_100E63758);
      memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
    }
    uint64_t v19 = v7[7];
    uint64_t v20 = (uint64_t *)((char *)a1 + v19);
    uint64_t v21 = (uint64_t *)&a2[v19];
    uint64_t v22 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v23 = v21[1];
        uint64_t *v20 = *v21;
        v20[1] = v23;
        swift_bridgeObjectRetain();
        goto LABEL_66;
      case 2u:
        uint64_t v24 = type metadata accessor for AttributedString();
        goto LABEL_18;
      case 3u:
        uint64_t v24 = sub_10017DF08(&qword_100E73808);
        goto LABEL_18;
      case 4u:
        uint64_t v25 = v21[1];
        if (v25)
        {
          uint64_t *v20 = *v21;
          v20[1] = v25;
          uint64_t v26 = v21;
          uint64_t v27 = v21[2];
          uint64_t v28 = v21[3];
          v20[2] = v27;
          v20[3] = v28;
          swift_bridgeObjectRetain();
          uint64_t v21 = v26;
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v36 = *((_OWORD *)v21 + 1);
          *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
          *((_OWORD *)v20 + 1) = v36;
        }
        uint64_t v37 = type metadata accessor for DetailComponentContainerViewModel();
        uint64_t v38 = *(int *)(v37 + 20);
        uint64_t v252 = (uint64_t *)((char *)v20 + v38);
        uint64_t v254 = v37;
        uint64_t v259 = v21;
        uint64_t v39 = (uint64_t *)((char *)v21 + v38);
        uint64_t v40 = type metadata accessor for NewsArticleComponentViewModel(0);
        uint64_t v278 = v7;
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v249 = v20;
          uint64_t v275 = v22;
          uint64_t v41 = v39[1];
          *uint64_t v252 = *v39;
          v252[1] = v41;
          uint64_t v246 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v42 = v246[5];
          __dst = (char *)v252 + v42;
          uint64_t v43 = (char *)v39 + v42;
          uint64_t v44 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          uint64_t v268 = (void *)v17;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v44))
          {
            uint64_t v45 = sub_10017DF08(&qword_100E749B0);
            memcpy(__dst, v43, *(void *)(*(void *)(v45 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(__dst, v43, v44);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v44);
          }
          uint64_t v71 = v246[6];
          uint64_t v72 = (void *)((char *)v252 + v71);
          uint64_t v73 = (void *)((char *)v39 + v71);
          uint64_t v74 = v73[1];
          *uint64_t v72 = *v73;
          v72[1] = v74;
          uint64_t v75 = v246[7];
          uint64_t v76 = (char *)v252 + v75;
          uint64_t v77 = (char *)v39 + v75;
          uint64_t v78 = *(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16);
          swift_bridgeObjectRetain();
          v78(v76, v77, v44);
          uint64_t v79 = v246[8];
          uint64_t v80 = (char *)v252 + v79;
          uint64_t v81 = (char *)v39 + v79;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39 + v79, 1, v44))
          {
            uint64_t v82 = sub_10017DF08(&qword_100E749B0);
            memcpy(v80, v81, *(void *)(*(void *)(v82 - 8) + 64));
          }
          else
          {
            v78(v80, v81, v44);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v80, 0, 1, v44);
          }
          uint64_t v17 = (uint64_t)v268;
          uint64_t v46 = v254;
          *((unsigned char *)v252 + v246[9]) = *((unsigned char *)v39 + v246[9]);
          swift_storeEnumTagMultiPayload();
          uint64_t v22 = v275;
          uint64_t v20 = v249;
        }
        else
        {
          memcpy(v252, v39, *(void *)(*(void *)(v40 - 8) + 64));
          uint64_t v46 = v254;
        }
        uint64_t v83 = *(int *)(v46 + 24);
        long long v84 = (char *)v20 + v83;
        uint64_t v85 = (char *)v259 + v83;
        uint64_t v86 = type metadata accessor for DetailComponentAction();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v86))
        {
          uint64_t v87 = sub_10017DF08(&qword_100E73810);
          memcpy(v84, v85, *(void *)(*(void *)(v87 - 8) + 64));
        }
        else
        {
          uint64_t v88 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16))(v84, v85, v88);
          uint64_t v89 = sub_10017DF08(&qword_100E66478);
          v84[*(int *)(v89 + 48)] = v85[*(int *)(v89 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v84, 0, 1, v86);
        }
        uint64_t v7 = v278;
        goto LABEL_66;
      case 5u:
        uint64_t v274 = v22;
        uint64_t v277 = v7;
        uint64_t v271 = v6;
        uint64_t v267 = (void *)v17;
        if (v21[3])
        {
          uint64_t v29 = v21;
          uint64_t v30 = *v21;
          uint64_t v31 = v29[1];
          char v32 = *((unsigned char *)v29 + 16);
          sub_100190CC4(v30, v31, v32);
          uint64_t *v20 = v30;
          v20[1] = v31;
          uint64_t v21 = v29;
          *((unsigned char *)v20 + 16) = v32;
          v20[3] = v29[3];
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v47 = *((_OWORD *)v21 + 1);
          *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
          *((_OWORD *)v20 + 1) = v47;
        }
        uint64_t v48 = v21;
        uint64_t v49 = v21[4];
        uint64_t v50 = v48[5];
        uint64_t v51 = v48[6];
        uint64_t v53 = v48[7];
        uint64_t v52 = v48[8];
        uint64_t v54 = v48[9];
        uint64_t v255 = v48[10];
        char v260 = *((unsigned char *)v48 + 89);
        unsigned __int8 v55 = *((unsigned char *)v48 + 88);
        sub_10033A9E8(v49, v50, v51, v53, v52, v54, v255, v55, v260);
        v20[4] = v49;
        v20[5] = v50;
        v20[6] = v51;
        v20[7] = v53;
        v20[8] = v52;
        v20[9] = v54;
        v20[10] = v255;
        *((unsigned char *)v20 + 88) = v55;
        *((unsigned char *)v20 + 89) = v260;
        goto LABEL_65;
      case 6u:
        uint64_t v24 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_18:
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v24 - 8) + 16))(v20, v21, v24);
        goto LABEL_66;
      case 7u:
        uint64_t v33 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v20, v21, *(void *)(*(void *)(v33 - 8) + 64));
          }
          else
          {
            uint64_t v35 = v21[1];
            uint64_t *v20 = *v21;
            v20[1] = v35;
            v20[2] = v21[2];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          goto LABEL_66;
        }
        uint64_t v267 = (void *)v17;
        uint64_t v274 = v22;
        uint64_t v277 = v7;
        uint64_t v271 = v6;
        uint64_t v56 = v21[1];
        uint64_t *v20 = *v21;
        v20[1] = v56;
        uint64_t v57 = type metadata accessor for ConditionDetailMapViewModel();
        uint64_t v58 = *(int *)(v57 + 20);
        uint64_t v59 = (char *)v20 + v58;
        uint64_t v261 = v21;
        uint64_t v60 = (char *)v21 + v58;
        uint64_t v61 = type metadata accessor for Location();
        uint64_t v62 = *(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16);
        swift_bridgeObjectRetain();
        uint64_t v63 = v60;
        uint64_t v64 = v261;
        v62(v59, v63, v61);
        uint64_t v65 = (int *)v57;
        uint64_t v66 = *(int *)(v57 + 24);
        uint64_t v250 = v20;
        int v67 = (uint64_t *)((char *)v20 + v66);
        uint64_t v68 = (uint64_t *)((char *)v261 + v66);
        int v69 = (int *)type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v68, 1, (uint64_t)v69))
        {
          uint64_t v70 = sub_10017DF08(&qword_100E63850);
          memcpy(v67, v68, *(void *)(*(void *)(v70 - 8) + 64));
          goto LABEL_64;
        }
        uint64_t v90 = v68[1];
        void *v67 = *v68;
        v67[1] = v90;
        uint64_t v91 = v69[5];
        uint64_t v92 = (char *)v67 + v91;
        uint64_t v93 = (char *)v68 + v91;
        uint64_t v94 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v93, 1, v94))
        {
          uint64_t v95 = sub_10017DF08(&qword_100E63730);
          memcpy(v92, v93, *(void *)(*(void *)(v95 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 16))(v92, v93, v94);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v92, 0, 1, v94);
        }
        uint64_t v96 = v69[6];
        uint64_t v97 = (char *)v67 + v96;
        uint64_t v98 = v68;
        uint64_t v99 = (char *)v68 + v96;
        uint64_t v100 = type metadata accessor for WeatherDataModel();
        uint64_t v101 = v97;
        uint64_t v102 = v98;
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16))(v101, v99, v100);
        uint64_t v103 = v69[7];
        uint64_t v104 = (char *)v67 + v103;
        uint64_t v105 = (char *)v98 + v103;
        uint64_t v106 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v105, 1, v106))
        {
          uint64_t v107 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v104, v105, *(void *)(*(void *)(v107 - 8) + 64));
        }
        else
        {
          uint64_t v108 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16))(v104, v105, v108);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v104, 0, 1, v106);
        }
        uint64_t v109 = v69[8];
        uint64_t v110 = (void *)((char *)v67 + v109);
        uint64_t v111 = (void *)((char *)v102 + v109);
        uint64_t v112 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int v113 = swift_getEnumCaseMultiPayload();
        if (v113 == 1)
        {
          uint64_t v115 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v115 - 8) + 16))(v110, v111, v115);
          goto LABEL_52;
        }
        if (!v113)
        {
          uint64_t v114 = v111[1];
          *uint64_t v110 = *v111;
          v110[1] = v114;
          swift_bridgeObjectRetain();
LABEL_52:
          swift_storeEnumTagMultiPayload();
          goto LABEL_54;
        }
        memcpy(v110, v111, *(void *)(*(void *)(v112 - 8) + 64));
LABEL_54:
        uint64_t v116 = v69[9];
        uint64_t v117 = (char *)v67 + v116;
        unint64_t v118 = (char *)v102 + v116;
        uint64_t v119 = type metadata accessor for WeatherDataOverrides();
        uint64_t v64 = v261;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v118, 1, v119))
        {
          uint64_t v120 = sub_10017DF08(&qword_100E63740);
          memcpy(v117, v118, *(void *)(*(void *)(v120 - 8) + 64));
        }
        else
        {
          uint64_t v121 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v118, 1, v121))
          {
            uint64_t v122 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v117, v118, *(void *)(*(void *)(v122 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 16))(v117, v118, v121);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v117, 0, 1, v121);
          }
          uint64_t v123 = *(int *)(v119 + 20);
          uint64_t v124 = &v117[v123];
          int v125 = &v118[v123];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v125, 1, v121))
          {
            uint64_t v126 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v124, v125, *(void *)(*(void *)(v126 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 16))(v124, v125, v121);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v124, 0, 1, v121);
          }
          uint64_t v64 = v261;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v117, 0, 1, v119);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v67, 0, 1, (uint64_t)v69);
LABEL_64:
        uint64_t v127 = v65[7];
        uint64_t v128 = (uint64_t *)((char *)v250 + v127);
        uint64_t v129 = (uint64_t *)((char *)v64 + v127);
        uint64_t v130 = v129[1];
        *uint64_t v128 = *v129;
        v128[1] = v130;
        uint64_t v131 = v65[8];
        uint64_t v262 = (char *)v250 + v131;
        uint64_t v132 = (uint64_t)v64 + v131;
        uint64_t v133 = type metadata accessor for WeatherMapOverlayKind();
        uint64_t v134 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v133 - 8) + 16);
        swift_bridgeObjectRetain();
        v134(v262, v132, v133);
        *((unsigned char *)v250 + v65[9]) = *((unsigned char *)v64 + v65[9]);
        swift_storeEnumTagMultiPayload();
LABEL_65:
        uint64_t v6 = v271;
        uint64_t v22 = v274;
        uint64_t v7 = v277;
        uint64_t v17 = (uint64_t)v267;
LABEL_66:
        swift_storeEnumTagMultiPayload();
        uint64_t v135 = v7[8];
        uint64_t v136 = (uint64_t *)((char *)a1 + v135);
        uint64_t v137 = (char *)&a2[v135];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v135], 1, v22))
        {
          uint64_t v138 = sub_10017DF08(&qword_100E73818);
          memcpy(v136, v137, *(void *)(*(void *)(v138 - 8) + 64));
LABEL_127:
          *((unsigned char *)a1 + v7[9]) = a2[v7[9]];
          *((unsigned char *)a1 + v7[10]) = a2[v7[10]];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v7);
          goto LABEL_128;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v139 = *((void *)v137 + 1);
            *uint64_t v136 = *(void *)v137;
            v136[1] = v139;
            swift_bridgeObjectRetain();
            goto LABEL_126;
          case 2u:
            uint64_t v140 = type metadata accessor for AttributedString();
            goto LABEL_78;
          case 3u:
            uint64_t v140 = sub_10017DF08(&qword_100E73808);
            goto LABEL_78;
          case 4u:
            uint64_t v141 = *((void *)v137 + 1);
            if (v141)
            {
              *uint64_t v136 = *(void *)v137;
              v136[1] = v141;
              uint64_t v142 = *((void *)v137 + 3);
              v136[2] = *((void *)v137 + 2);
              v136[3] = v142;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v149 = *((_OWORD *)v137 + 1);
              *(_OWORD *)uint64_t v136 = *(_OWORD *)v137;
              *((_OWORD *)v136 + 1) = v149;
            }
            uint64_t v150 = type metadata accessor for DetailComponentContainerViewModel();
            uint64_t v151 = *(int *)(v150 + 20);
            uint64_t v269 = (void *)((char *)v136 + v151);
            uint64_t v152 = &v137[v151];
            uint64_t v153 = type metadata accessor for NewsArticleComponentViewModel(0);
            uint64_t v276 = v22;
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              uint64_t v256 = v150;
              uint64_t v154 = *((void *)v152 + 1);
              *uint64_t v269 = *(void *)v152;
              v269[1] = v154;
              uint64_t v263 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
              uint64_t v155 = v263[5];
              uint64_t v247 = (char *)v269 + v155;
              uint64_t v251 = v152;
              uint64_t v156 = &v152[v155];
              uint64_t v157 = type metadata accessor for URL();
              swift_bridgeObjectRetain();
              uint64_t v273 = v6;
              uint64_t v280 = v7;
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v156, 1, v157))
              {
                uint64_t v158 = sub_10017DF08(&qword_100E749B0);
                memcpy(v247, v156, *(void *)(*(void *)(v158 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 16))(v247, v156, v157);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v247, 0, 1, v157);
              }
              uint64_t v179 = v263[6];
              uint64_t v180 = (void *)((char *)v269 + v179);
              uint64_t v181 = (void *)((char *)v251 + v179);
              uint64_t v182 = v181[1];
              void *v180 = *v181;
              v180[1] = v182;
              uint64_t v183 = v263[7];
              uint64_t v248 = (char *)v269 + v183;
              uint64_t v184 = (char *)v251 + v183;
              id v185 = *(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 16);
              swift_bridgeObjectRetain();
              v185(v248, v184, v157);
              uint64_t v186 = v263[8];
              long long v187 = (char *)v269 + v186;
              uint64_t v188 = (char *)v251 + v186;
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v251 + v186, 1, v157))
              {
                uint64_t v189 = sub_10017DF08(&qword_100E749B0);
                memcpy(v187, v188, *(void *)(*(void *)(v189 - 8) + 64));
              }
              else
              {
                v185(v187, v188, v157);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v187, 0, 1, v157);
              }
              uint64_t v6 = v273;
              uint64_t v150 = v256;
              *((unsigned char *)v269 + v263[9]) = *((unsigned char *)v251 + v263[9]);
              swift_storeEnumTagMultiPayload();
              uint64_t v7 = v280;
            }
            else
            {
              memcpy(v269, v152, *(void *)(*(void *)(v153 - 8) + 64));
            }
            uint64_t v190 = *(int *)(v150 + 24);
            id v191 = (char *)v136 + v190;
            uint64_t v192 = &v137[v190];
            uint64_t v193 = type metadata accessor for DetailComponentAction();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v192, 1, v193))
            {
              uint64_t v194 = sub_10017DF08(&qword_100E73810);
              memcpy(v191, v192, *(void *)(*(void *)(v194 - 8) + 64));
            }
            else
            {
              uint64_t v195 = type metadata accessor for URL();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 16))(v191, v192, v195);
              uint64_t v196 = sub_10017DF08(&qword_100E66478);
              v191[*(int *)(v196 + 48)] = v192[*(int *)(v196 + 48)];
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v191, 0, 1, v193);
            }
            goto LABEL_125;
          case 5u:
            uint64_t v272 = v6;
            uint64_t v279 = v7;
            uint64_t v276 = v22;
            if (*((void *)v137 + 3))
            {
              uint64_t v143 = *(void *)v137;
              uint64_t v144 = *((void *)v137 + 1);
              char v145 = v137[16];
              sub_100190CC4(*(void *)v137, v144, v145);
              *uint64_t v136 = v143;
              v136[1] = v144;
              *((unsigned char *)v136 + 16) = v145;
              v136[3] = *((void *)v137 + 3);
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v159 = *((_OWORD *)v137 + 1);
              *(_OWORD *)uint64_t v136 = *(_OWORD *)v137;
              *((_OWORD *)v136 + 1) = v159;
            }
            uint64_t v160 = *((void *)v137 + 4);
            uint64_t v161 = *((void *)v137 + 5);
            uint64_t v162 = *((void *)v137 + 6);
            uint64_t v163 = *((void *)v137 + 7);
            uint64_t v164 = *((void *)v137 + 8);
            uint64_t v165 = *((void *)v137 + 9);
            uint64_t v166 = *((void *)v137 + 10);
            uint64_t v264 = v166;
            char v270 = v137[89];
            uint64_t v167 = v137[88];
            sub_10033A9E8(v160, v161, v162, v163, v164, v165, v166, v167, v270);
            v136[4] = v160;
            v136[5] = v161;
            v136[6] = v162;
            v136[7] = v163;
            v136[8] = v164;
            v136[9] = v165;
            v136[10] = v264;
            *((unsigned char *)v136 + 88) = v167;
            *((unsigned char *)v136 + 89) = v270;
            goto LABEL_124;
          case 6u:
            uint64_t v140 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_78:
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v140 - 8) + 16))(v136, v137, v140);
            goto LABEL_126;
          case 7u:
            uint64_t v146 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
            int v147 = swift_getEnumCaseMultiPayload();
            if (v147 != 1)
            {
              if (v147)
              {
                memcpy(v136, v137, *(void *)(*(void *)(v146 - 8) + 64));
              }
              else
              {
                uint64_t v148 = *((void *)v137 + 1);
                *uint64_t v136 = *(void *)v137;
                v136[1] = v148;
                v136[2] = *((void *)v137 + 2);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_storeEnumTagMultiPayload();
              }
              goto LABEL_126;
            }
            uint64_t v276 = v22;
            uint64_t v279 = v7;
            uint64_t v272 = v6;
            uint64_t v168 = *((void *)v137 + 1);
            *uint64_t v136 = *(void *)v137;
            v136[1] = v168;
            uint64_t v169 = type metadata accessor for ConditionDetailMapViewModel();
            uint64_t v170 = *(int *)(v169 + 20);
            uint64_t v265 = (char *)v136 + v170;
            uint64_t v171 = &v137[v170];
            uint64_t v172 = type metadata accessor for Location();
            uint64_t v173 = *(void (**)(char *, char *, uint64_t))(*(void *)(v172 - 8) + 16);
            swift_bridgeObjectRetain();
            v173(v265, v171, v172);
            uint64_t v266 = (int *)v169;
            uint64_t v174 = *(int *)(v169 + 24);
            uint64_t v175 = (void *)((char *)v136 + v174);
            uint64_t v176 = &v137[v174];
            uint64_t v177 = type metadata accessor for WeatherData(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v176, 1, v177))
            {
              uint64_t v178 = sub_10017DF08(&qword_100E63850);
              memcpy(v175, v176, *(void *)(*(void *)(v178 - 8) + 64));
              goto LABEL_123;
            }
            uint64_t v197 = *((void *)v176 + 1);
            *uint64_t v175 = *(void *)v176;
            v175[1] = v197;
            uint64_t v198 = *(int *)(v177 + 20);
            uint64_t v257 = (uint64_t)v175;
            uint64_t v199 = (char *)v175 + v198;
            uint64_t v200 = &v176[v198];
            uint64_t v201 = type metadata accessor for Locale();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v200, 1, v201))
            {
              uint64_t v202 = sub_10017DF08(&qword_100E63730);
              memcpy(v199, v200, *(void *)(*(void *)(v202 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v201 - 8) + 16))(v199, v200, v201);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v199, 0, 1, v201);
            }
            uint64_t v203 = *(int *)(v177 + 24);
            uint64_t v204 = v257 + v203;
            uint64_t v205 = v177;
            uint64_t v206 = &v176[v203];
            uint64_t v207 = type metadata accessor for WeatherDataModel();
            uint64_t v208 = v204;
            uint64_t v209 = v205;
            (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v207 - 8) + 16))(v208, v206, v207);
            uint64_t v210 = *(int *)(v205 + 28);
            long long v211 = (void *)(v257 + v210);
            uint64_t v212 = &v176[v210];
            uint64_t v213 = sub_10017DF08(&qword_100E63738);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v212, 1, v213))
            {
              uint64_t v214 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v211, v212, *(void *)(*(void *)(v214 - 8) + 64));
            }
            else
            {
              uint64_t v215 = type metadata accessor for Date();
              (*(void (**)(void *, char *, uint64_t))(*(void *)(v215 - 8) + 16))(v211, v212, v215);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v211, 0, 1, v213);
            }
            uint64_t v216 = *(int *)(v209 + 32);
            uint64_t v217 = (void *)(v257 + v216);
            id v218 = &v176[v216];
            uint64_t v219 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            int v220 = swift_getEnumCaseMultiPayload();
            if (v220 == 1)
            {
              uint64_t v222 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(void *, char *, uint64_t))(*(void *)(v222 - 8) + 16))(v217, v218, v222);
            }
            else
            {
              if (v220)
              {
                memcpy(v217, v218, *(void *)(*(void *)(v219 - 8) + 64));
LABEL_113:
                uint64_t v223 = *(int *)(v209 + 36);
                uint64_t v224 = (char *)(v257 + v223);
                uint64_t v225 = &v176[v223];
                uint64_t v226 = type metadata accessor for WeatherDataOverrides();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v225, 1, v226))
                {
                  uint64_t v227 = sub_10017DF08(&qword_100E63740);
                  memcpy(v224, v225, *(void *)(*(void *)(v227 - 8) + 64));
                }
                else
                {
                  uint64_t v253 = (int *)v226;
                  uint64_t v228 = type metadata accessor for Date();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v225, 1, v228))
                  {
                    uint64_t v229 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                    memcpy(v224, v225, *(void *)(*(void *)(v229 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v228 - 8) + 16))(v224, v225, v228);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v224, 0, 1, v228);
                  }
                  uint64_t v230 = v253[5];
                  uint64_t v231 = &v224[v230];
                  uint64_t v232 = &v225[v230];
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v232, 1, v228))
                  {
                    uint64_t v233 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                    memcpy(v231, v232, *(void *)(*(void *)(v233 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v228 - 8) + 16))(v231, v232, v228);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v231, 0, 1, v228);
                  }
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v224, 0, 1, (uint64_t)v253);
                }
                _s7Weather24LocationCompositionStateOwst_0(v257, 0, 1, v209);
LABEL_123:
                uint64_t v234 = v266[7];
                uint64_t v235 = (void *)((char *)v136 + v234);
                uint64_t v236 = &v137[v234];
                uint64_t v237 = *((void *)v236 + 1);
                *uint64_t v235 = *(void *)v236;
                v235[1] = v237;
                uint64_t v238 = v266[8];
                uint64_t v258 = (char *)v136 + v238;
                uint64_t v239 = &v137[v238];
                uint64_t v240 = type metadata accessor for WeatherMapOverlayKind();
                uint64_t v241 = *(void (**)(char *, char *, uint64_t))(*(void *)(v240 - 8) + 16);
                swift_bridgeObjectRetain();
                v241(v258, v239, v240);
                *((unsigned char *)v136 + v266[9]) = v137[v266[9]];
                swift_storeEnumTagMultiPayload();
LABEL_124:
                uint64_t v6 = v272;
                uint64_t v7 = v279;
LABEL_125:
                uint64_t v22 = v276;
LABEL_126:
                swift_storeEnumTagMultiPayload();
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v136, 0, 1, v22);
                goto LABEL_127;
              }
              uint64_t v221 = *((void *)v218 + 1);
              *uint64_t v217 = *(void *)v218;
              v217[1] = v221;
              swift_bridgeObjectRetain();
            }
            swift_storeEnumTagMultiPayload();
            goto LABEL_113;
          default:
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v136, v137, v17);
            goto LABEL_126;
        }
      default:
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v17 - 8) + 16))(v20, v21, v17);
        goto LABEL_66;
    }
  }
  uint64_t v9 = *(void *)a2;
  *a1 = *(void *)a2;
  a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

uint64_t sub_100B94FB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, (uint64_t)v4))
  {
    sub_10014D144(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
    swift_bridgeObjectRelease();
    uint64_t v5 = a1 + v4[6];
    uint64_t v6 = type metadata accessor for WeatherDescription();
    if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
    }
    uint64_t v7 = a1 + v4[7];
    uint64_t v8 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v7, v6);
        goto LABEL_41;
      case 1u:
        goto LABEL_24;
      case 2u:
        uint64_t v9 = type metadata accessor for AttributedString();
        goto LABEL_40;
      case 3u:
        uint64_t v9 = sub_10017DF08(&qword_100E73808);
        goto LABEL_40;
      case 4u:
        if (*(void *)(v7 + 8))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v10 = type metadata accessor for DetailComponentContainerViewModel();
        uint64_t v11 = v7 + *(int *)(v10 + 20);
        type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v72 = v10;
          swift_bridgeObjectRelease();
          unsigned __int8 v12 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v13 = v11 + v12[5];
          uint64_t v14 = type metadata accessor for URL();
          if (!_s7Weather24LocationCompositionStateOwet_0(v13, 1, v14)) {
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
          }
          swift_bridgeObjectRelease();
          uint64_t v71 = *(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8);
          v71(v11 + v12[7], v14);
          uint64_t v15 = v11 + v12[8];
          uint64_t v10 = v72;
          if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, v14)) {
            v71(v15, v14);
          }
        }
        v7 += *(int *)(v10 + 24);
        uint64_t v16 = type metadata accessor for DetailComponentAction();
        if (_s7Weather24LocationCompositionStateOwet_0(v7, 1, v16)) {
          goto LABEL_41;
        }
        uint64_t v9 = type metadata accessor for URL();
        goto LABEL_40;
      case 5u:
        if (*(void *)(v7 + 24))
        {
          sub_100191924(*(void *)v7, *(void *)(v7 + 8), *(unsigned char *)(v7 + 16));
          swift_bridgeObjectRelease();
        }
        sub_10033AB48(*(void *)(v7 + 32), *(void *)(v7 + 40), *(void *)(v7 + 48), *(void *)(v7 + 56), *(void *)(v7 + 64), *(void *)(v7 + 72), *(void *)(v7 + 80), *(unsigned __int8 *)(v7 + 88), *(unsigned char *)(v7 + 89));
        goto LABEL_41;
      case 6u:
        uint64_t v9 = type metadata accessor for PrecipitationTotalPlatterViewModel();
        goto LABEL_40;
      case 7u:
        type metadata accessor for ConditionDetailDynamicContentIdentifier();
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v18 = (int *)type metadata accessor for ConditionDetailMapViewModel();
          uint64_t v19 = v7 + v18[5];
          uint64_t v20 = type metadata accessor for Location();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
          uint64_t v21 = v7 + v18[6];
          uint64_t v22 = (int *)type metadata accessor for WeatherData(0);
          if (!_s7Weather24LocationCompositionStateOwet_0(v21, 1, (uint64_t)v22))
          {
            uint64_t v73 = v18;
            swift_bridgeObjectRelease();
            uint64_t v23 = v21 + v22[5];
            uint64_t v24 = type metadata accessor for Locale();
            if (!_s7Weather24LocationCompositionStateOwet_0(v23, 1, v24)) {
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
            }
            uint64_t v25 = v21 + v22[6];
            uint64_t v26 = type metadata accessor for WeatherDataModel();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
            uint64_t v27 = v21 + v22[7];
            uint64_t v28 = sub_10017DF08(&qword_100E63738);
            if (!_s7Weather24LocationCompositionStateOwet_0(v27, 1, v28))
            {
              uint64_t v29 = type metadata accessor for Date();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(v27, v29);
            }
            uint64_t v30 = v21 + v22[8];
            type metadata accessor for WeatherData.WeatherStatisticsState(0);
            int v31 = swift_getEnumCaseMultiPayload();
            uint64_t v18 = v73;
            if (v31 == 1)
            {
              uint64_t v32 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v30, v32);
            }
            else if (!v31)
            {
              swift_bridgeObjectRelease();
            }
            uint64_t v33 = v21 + v22[9];
            uint64_t v34 = type metadata accessor for WeatherDataOverrides();
            if (!_s7Weather24LocationCompositionStateOwet_0(v33, 1, v34))
            {
              uint64_t v35 = type metadata accessor for Date();
              if (!_s7Weather24LocationCompositionStateOwet_0(v33, 1, v35)) {
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v33, v35);
              }
              uint64_t v36 = v33 + *(int *)(v34 + 20);
              if (!_s7Weather24LocationCompositionStateOwet_0(v36, 1, v35)) {
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v36, v35);
              }
            }
          }
          swift_bridgeObjectRelease();
          v7 += v18[8];
          uint64_t v9 = type metadata accessor for WeatherMapOverlayKind();
LABEL_40:
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
        }
        else if (!EnumCaseMultiPayload)
        {
          swift_bridgeObjectRelease();
LABEL_24:
          swift_bridgeObjectRelease();
        }
LABEL_41:
        uint64_t v37 = a1 + v4[8];
        if (!_s7Weather24LocationCompositionStateOwet_0(v37, 1, v8))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v37, v6);
              goto LABEL_65;
            case 1u:
              goto LABEL_64;
            case 2u:
              uint64_t v38 = type metadata accessor for AttributedString();
              goto LABEL_59;
            case 3u:
              uint64_t v38 = sub_10017DF08(&qword_100E73808);
              goto LABEL_59;
            case 4u:
              if (*(void *)(v37 + 8))
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              uint64_t v39 = type metadata accessor for DetailComponentContainerViewModel();
              uint64_t v40 = v37 + *(int *)(v39 + 20);
              type metadata accessor for NewsArticleComponentViewModel(0);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                swift_bridgeObjectRelease();
                uint64_t v41 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
                uint64_t v42 = v40 + v41[5];
                uint64_t v43 = type metadata accessor for URL();
                if (!_s7Weather24LocationCompositionStateOwet_0(v42, 1, v43)) {
                  (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8))(v42, v43);
                }
                swift_bridgeObjectRelease();
                uint64_t v44 = *(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8);
                v44(v40 + v41[7], v43);
                uint64_t v45 = v40 + v41[8];
                if (!_s7Weather24LocationCompositionStateOwet_0(v45, 1, v43)) {
                  v44(v45, v43);
                }
              }
              uint64_t v46 = v37 + *(int *)(v39 + 24);
              uint64_t v47 = type metadata accessor for DetailComponentAction();
              if (_s7Weather24LocationCompositionStateOwet_0(v46, 1, v47)) {
                goto LABEL_65;
              }
              uint64_t v48 = type metadata accessor for URL();
              goto LABEL_83;
            case 5u:
              if (*(void *)(v37 + 24))
              {
                sub_100191924(*(void *)v37, *(void *)(v37 + 8), *(unsigned char *)(v37 + 16));
                swift_bridgeObjectRelease();
              }
              sub_10033AB48(*(void *)(v37 + 32), *(void *)(v37 + 40), *(void *)(v37 + 48), *(void *)(v37 + 56), *(void *)(v37 + 64), *(void *)(v37 + 72), *(void *)(v37 + 80), *(unsigned __int8 *)(v37 + 88), *(unsigned char *)(v37 + 89));
              goto LABEL_65;
            case 6u:
              uint64_t v38 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_59:
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v37, v38);
              goto LABEL_65;
            case 7u:
              type metadata accessor for ConditionDetailDynamicContentIdentifier();
              int v49 = swift_getEnumCaseMultiPayload();
              if (v49 == 1)
              {
                swift_bridgeObjectRelease();
                uint64_t v52 = (int *)type metadata accessor for ConditionDetailMapViewModel();
                uint64_t v53 = v37 + v52[5];
                uint64_t v54 = type metadata accessor for Location();
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v54 - 8) + 8))(v53, v54);
                uint64_t v55 = v37 + v52[6];
                uint64_t v56 = (int *)type metadata accessor for WeatherData(0);
                if (!_s7Weather24LocationCompositionStateOwet_0(v55, 1, (uint64_t)v56))
                {
                  swift_bridgeObjectRelease();
                  uint64_t v57 = v55 + v56[5];
                  uint64_t v58 = type metadata accessor for Locale();
                  if (!_s7Weather24LocationCompositionStateOwet_0(v57, 1, v58)) {
                    (*(void (**)(uint64_t, uint64_t))(*(void *)(v58 - 8) + 8))(v57, v58);
                  }
                  uint64_t v59 = v55 + v56[6];
                  uint64_t v60 = type metadata accessor for WeatherDataModel();
                  (*(void (**)(uint64_t, uint64_t))(*(void *)(v60 - 8) + 8))(v59, v60);
                  uint64_t v61 = v55 + v56[7];
                  uint64_t v62 = sub_10017DF08(&qword_100E63738);
                  if (!_s7Weather24LocationCompositionStateOwet_0(v61, 1, v62))
                  {
                    uint64_t v63 = type metadata accessor for Date();
                    (*(void (**)(uint64_t, uint64_t))(*(void *)(v63 - 8) + 8))(v61, v63);
                  }
                  uint64_t v64 = v55 + v56[8];
                  type metadata accessor for WeatherData.WeatherStatisticsState(0);
                  int v65 = swift_getEnumCaseMultiPayload();
                  if (v65 == 1)
                  {
                    uint64_t v66 = type metadata accessor for WeatherStatisticsModel();
                    (*(void (**)(uint64_t, uint64_t))(*(void *)(v66 - 8) + 8))(v64, v66);
                  }
                  else if (!v65)
                  {
                    swift_bridgeObjectRelease();
                  }
                  uint64_t v67 = v55 + v56[9];
                  uint64_t v68 = type metadata accessor for WeatherDataOverrides();
                  if (!_s7Weather24LocationCompositionStateOwet_0(v67, 1, v68))
                  {
                    uint64_t v69 = type metadata accessor for Date();
                    if (!_s7Weather24LocationCompositionStateOwet_0(v67, 1, v69)) {
                      (*(void (**)(uint64_t, uint64_t))(*(void *)(v69 - 8) + 8))(v67, v69);
                    }
                    uint64_t v70 = v67 + *(int *)(v68 + 20);
                    if (!_s7Weather24LocationCompositionStateOwet_0(v70, 1, v69)) {
                      (*(void (**)(uint64_t, uint64_t))(*(void *)(v69 - 8) + 8))(v70, v69);
                    }
                  }
                }
                swift_bridgeObjectRelease();
                uint64_t v46 = v37 + v52[8];
                uint64_t v48 = type metadata accessor for WeatherMapOverlayKind();
LABEL_83:
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 - 8) + 8))(v46, v48);
              }
              else if (!v49)
              {
                swift_bridgeObjectRelease();
LABEL_64:
                swift_bridgeObjectRelease();
              }
              break;
            default:
              goto LABEL_65;
          }
        }
        break;
      default:
        goto LABEL_41;
    }
  }
LABEL_65:
  uint64_t v50 = a1 + *(int *)(a2 + 20);

  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v50);
}

uint64_t *sub_100B95BF8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(a2, 1, (uint64_t)v6))
  {
    uint64_t v8 = *(void *)a2;
    uint64_t v9 = *(void *)(a2 + 8);
    unsigned __int8 v10 = *(unsigned char *)(a2 + 16);
    sub_10018F6EC(*(void *)a2, v9, v10);
    *a1 = v8;
    a1[1] = v9;
    *((unsigned char *)a1 + 16) = v10;
    uint64_t v11 = *(void *)(a2 + 32);
    a1[3] = *(void *)(a2 + 24);
    a1[4] = v11;
    uint64_t v12 = v6[6];
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (const void *)(a2 + v12);
    uint64_t v15 = type metadata accessor for WeatherDescription();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
    {
      uint64_t v16 = sub_10017DF08(&qword_100E63758);
      memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
    }
    uint64_t v17 = v6[7];
    uint64_t v18 = (uint64_t *)((char *)a1 + v17);
    uint64_t v19 = (uint64_t *)(a2 + v17);
    uint64_t v20 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v21 = v19[1];
        *uint64_t v18 = *v19;
        v18[1] = v21;
        swift_bridgeObjectRetain();
        goto LABEL_64;
      case 2u:
        uint64_t v22 = type metadata accessor for AttributedString();
        goto LABEL_16;
      case 3u:
        uint64_t v22 = sub_10017DF08(&qword_100E73808);
        goto LABEL_16;
      case 4u:
        uint64_t v23 = v19[1];
        if (v23)
        {
          *uint64_t v18 = *v19;
          v18[1] = v23;
          uint64_t v24 = v19[3];
          void v18[2] = v19[2];
          v18[3] = v24;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v30 = *((_OWORD *)v19 + 1);
          *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
          *((_OWORD *)v18 + 1) = v30;
        }
        uint64_t v31 = type metadata accessor for DetailComponentContainerViewModel();
        uint64_t v32 = *(int *)(v31 + 20);
        uint64_t v244 = v31;
        __dsta = (uint64_t *)((char *)v18 + v32);
        uint64_t v33 = (uint64_t *)((char *)v19 + v32);
        uint64_t v34 = type metadata accessor for NewsArticleComponentViewModel(0);
        uint64_t v271 = v6;
        char v260 = (char *)v18;
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v268 = v20;
          uint64_t v35 = v33[1];
          void *__dsta = *v33;
          __dsta[1] = v35;
          uint64_t v240 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v36 = v240[5];
          uint64_t v37 = (char *)__dsta + v36;
          uint64_t v237 = v33;
          uint64_t v38 = (char *)v33 + v36;
          uint64_t v39 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          uint64_t v255 = v15;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
          {
            uint64_t v40 = sub_10017DF08(&qword_100E749B0);
            memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
          }
          uint64_t v63 = v240[6];
          uint64_t v64 = (void *)((char *)__dsta + v63);
          int v65 = (void *)((char *)v237 + v63);
          uint64_t v66 = v65[1];
          *uint64_t v64 = *v65;
          v64[1] = v66;
          uint64_t v67 = v240[7];
          uint64_t v236 = (char *)__dsta + v67;
          uint64_t v68 = (char *)v237 + v67;
          uint64_t v69 = *(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16);
          swift_bridgeObjectRetain();
          v69(v236, v68, v39);
          uint64_t v70 = v240[8];
          uint64_t v71 = (char *)__dsta + v70;
          uint64_t v72 = (char *)v237 + v70;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v237 + v70, 1, v39))
          {
            uint64_t v73 = sub_10017DF08(&qword_100E749B0);
            memcpy(v71, v72, *(void *)(*(void *)(v73 - 8) + 64));
          }
          else
          {
            v69(v71, v72, v39);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v71, 0, 1, v39);
          }
          uint64_t v15 = v255;
          uint64_t v41 = v244;
          *((unsigned char *)__dsta + v240[9]) = *((unsigned char *)v237 + v240[9]);
          swift_storeEnumTagMultiPayload();
          uint64_t v20 = v268;
        }
        else
        {
          memcpy(__dsta, v33, *(void *)(*(void *)(v34 - 8) + 64));
          uint64_t v41 = v244;
        }
        uint64_t v74 = *(int *)(v41 + 24);
        uint64_t v75 = &v260[v74];
        uint64_t v76 = (char *)v19 + v74;
        uint64_t v77 = type metadata accessor for DetailComponentAction();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v76, 1, v77))
        {
          uint64_t v78 = sub_10017DF08(&qword_100E73810);
          memcpy(v75, v76, *(void *)(*(void *)(v78 - 8) + 64));
        }
        else
        {
          uint64_t v79 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 16))(v75, v76, v79);
          uint64_t v80 = sub_10017DF08(&qword_100E66478);
          v75[*(int *)(v80 + 48)] = v76[*(int *)(v80 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v75, 0, 1, v77);
        }
        uint64_t v6 = v271;
        goto LABEL_64;
      case 5u:
        uint64_t v267 = v20;
        char v270 = v6;
        uint64_t v264 = a3;
        uint64_t v254 = v15;
        if (v19[3])
        {
          uint64_t v25 = *v19;
          uint64_t v26 = v19[1];
          char v27 = *((unsigned char *)v19 + 16);
          sub_100190CC4(*v19, v26, v27);
          *uint64_t v18 = v25;
          v18[1] = v26;
          *((unsigned char *)v18 + 16) = v27;
          v18[3] = v19[3];
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v42 = *((_OWORD *)v19 + 1);
          *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
          *((_OWORD *)v18 + 1) = v42;
        }
        uint64_t v43 = v19[4];
        uint64_t v44 = v19[5];
        uint64_t v45 = v19[6];
        uint64_t v46 = v19[7];
        uint64_t v47 = v19[8];
        uint64_t v48 = v19[9];
        uint64_t v49 = v19[10];
        uint64_t v245 = v49;
        char __dstd = *((unsigned char *)v19 + 89);
        uint64_t v50 = *((unsigned __int8 *)v19 + 88);
        sub_10033A9E8(v43, v44, v45, v46, v47, v48, v49, v50, __dstd);
        v18[4] = v43;
        v18[5] = v44;
        v18[6] = v45;
        v18[7] = v46;
        v18[8] = v47;
        v18[9] = v48;
        v18[10] = v245;
        *((unsigned char *)v18 + 88) = v50;
        *((unsigned char *)v18 + 89) = __dstd;
        goto LABEL_63;
      case 6u:
        uint64_t v22 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_16:
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v22 - 8) + 16))(v18, v19, v22);
        goto LABEL_64;
      case 7u:
        __dst = (void *)type metadata accessor for ConditionDetailDynamicContentIdentifier();
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload != 1)
        {
          if (EnumCaseMultiPayload)
          {
            memcpy(v18, v19, *(void *)(*(__dst - 1) + 64));
          }
          else
          {
            uint64_t v29 = v19[1];
            *uint64_t v18 = *v19;
            v18[1] = v29;
            void v18[2] = v19[2];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          goto LABEL_64;
        }
        uint64_t v254 = v15;
        uint64_t v267 = v20;
        char v270 = v6;
        uint64_t v264 = a3;
        uint64_t v51 = v19[1];
        *uint64_t v18 = *v19;
        v18[1] = v51;
        uint64_t v52 = type metadata accessor for ConditionDetailMapViewModel();
        uint64_t v53 = *(int *)(v52 + 20);
        uint64_t v54 = (char *)v18 + v53;
        uint64_t v55 = (uint64_t)v19 + v53;
        uint64_t v56 = type metadata accessor for Location();
        uint64_t v261 = v18;
        uint64_t v57 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v56 - 8) + 16);
        swift_bridgeObjectRetain();
        v57(v54, v55, v56);
        uint64_t v246 = (int *)v52;
        uint64_t v58 = *(int *)(v52 + 24);
        uint64_t v59 = (uint64_t *)((char *)v261 + v58);
        uint64_t v60 = (uint64_t *)((char *)v19 + v58);
        uint64_t v61 = type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v61))
        {
          uint64_t v62 = sub_10017DF08(&qword_100E63850);
          memcpy(v59, v60, *(void *)(*(void *)(v62 - 8) + 64));
          goto LABEL_62;
        }
        uint64_t v81 = v60[1];
        *uint64_t v59 = *v60;
        v59[1] = v81;
        uint64_t v82 = *(int *)(v61 + 20);
        uint64_t v83 = (char *)v59 + v82;
        uint64_t v241 = (char *)v60;
        long long v84 = (char *)v60 + v82;
        uint64_t v85 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v84, 1, v85))
        {
          uint64_t v86 = sub_10017DF08(&qword_100E63730);
          memcpy(v83, v84, *(void *)(*(void *)(v86 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 16))(v83, v84, v85);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v83, 0, 1, v85);
        }
        uint64_t v87 = *(int *)(v61 + 24);
        uint64_t v88 = (char *)v59 + v87;
        uint64_t v89 = v61;
        uint64_t v90 = &v241[v87];
        uint64_t v91 = type metadata accessor for WeatherDataModel();
        uint64_t v92 = v88;
        uint64_t v93 = v89;
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 16))(v92, v90, v91);
        uint64_t v94 = *(int *)(v89 + 28);
        uint64_t v95 = (char *)v59 + v94;
        uint64_t v96 = &v241[v94];
        uint64_t v97 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v96, 1, v97))
        {
          uint64_t v98 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v95, v96, *(void *)(*(void *)(v98 - 8) + 64));
        }
        else
        {
          uint64_t v99 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 16))(v95, v96, v99);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v95, 0, 1, v97);
        }
        uint64_t v100 = *(int *)(v93 + 32);
        uint64_t v101 = (void *)((char *)v59 + v100);
        uint64_t v102 = &v241[v100];
        uint64_t v103 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int v104 = swift_getEnumCaseMultiPayload();
        if (v104 == 1)
        {
          uint64_t v106 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(void *, char *, uint64_t))(*(void *)(v106 - 8) + 16))(v101, v102, v106);
          goto LABEL_50;
        }
        if (!v104)
        {
          uint64_t v105 = *((void *)v102 + 1);
          *uint64_t v101 = *(void *)v102;
          v101[1] = v105;
          swift_bridgeObjectRetain();
LABEL_50:
          swift_storeEnumTagMultiPayload();
          goto LABEL_52;
        }
        memcpy(v101, v102, *(void *)(*(void *)(v103 - 8) + 64));
LABEL_52:
        uint64_t v107 = *(int *)(v93 + 36);
        uint64_t v108 = (char *)v59 + v107;
        uint64_t v109 = &v241[v107];
        uint64_t v110 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v109, 1, v110))
        {
          uint64_t v111 = sub_10017DF08(&qword_100E63740);
          memcpy(v108, v109, *(void *)(*(void *)(v111 - 8) + 64));
        }
        else
        {
          uint64_t v112 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v109, 1, v112))
          {
            uint64_t v113 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v108, v109, *(void *)(*(void *)(v113 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16))(v108, v109, v112);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v108, 0, 1, v112);
          }
          uint64_t v114 = *(int *)(v110 + 20);
          uint64_t v242 = &v108[v114];
          uint64_t v115 = &v109[v114];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v115, 1, v112))
          {
            uint64_t v116 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v242, v115, *(void *)(*(void *)(v116 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16))(v242, v115, v112);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v242, 0, 1, v112);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v108, 0, 1, v110);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, 0, 1, v93);
LABEL_62:
        uint64_t v117 = v246[7];
        unint64_t v118 = (uint64_t *)((char *)v261 + v117);
        uint64_t v119 = (uint64_t *)((char *)v19 + v117);
        uint64_t v120 = v119[1];
        *unint64_t v118 = *v119;
        v118[1] = v120;
        uint64_t v121 = v246[8];
        uint64_t v122 = (char *)v261 + v121;
        uint64_t v123 = (uint64_t)v19 + v121;
        uint64_t v124 = type metadata accessor for WeatherMapOverlayKind();
        int v125 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v124 - 8) + 16);
        swift_bridgeObjectRetain();
        v125(v122, v123, v124);
        *((unsigned char *)v261 + v246[9]) = *((unsigned char *)v19 + v246[9]);
        swift_storeEnumTagMultiPayload();
LABEL_63:
        a3 = v264;
        uint64_t v20 = v267;
        uint64_t v6 = v270;
        uint64_t v15 = v254;
LABEL_64:
        swift_storeEnumTagMultiPayload();
        uint64_t v126 = v6[8];
        uint64_t v127 = (uint64_t *)((char *)a1 + v126);
        uint64_t v128 = (char *)(a2 + v126);
        if (_s7Weather24LocationCompositionStateOwet_0(a2 + v126, 1, v20))
        {
          uint64_t v129 = sub_10017DF08(&qword_100E73818);
          memcpy(v127, v128, *(void *)(*(void *)(v129 - 8) + 64));
LABEL_125:
          *((unsigned char *)a1 + v6[9]) = *(unsigned char *)(a2 + v6[9]);
          *((unsigned char *)a1 + v6[10]) = *(unsigned char *)(a2 + v6[10]);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
          goto LABEL_126;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v130 = *((void *)v128 + 1);
            *uint64_t v127 = *(void *)v128;
            v127[1] = v130;
            swift_bridgeObjectRetain();
            goto LABEL_124;
          case 2u:
            uint64_t v131 = type metadata accessor for AttributedString();
            goto LABEL_76;
          case 3u:
            uint64_t v131 = sub_10017DF08(&qword_100E73808);
            goto LABEL_76;
          case 4u:
            uint64_t v132 = *((void *)v128 + 1);
            if (v132)
            {
              *uint64_t v127 = *(void *)v128;
              v127[1] = v132;
              uint64_t v133 = *((void *)v128 + 3);
              v127[2] = *((void *)v128 + 2);
              v127[3] = v133;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v140 = *((_OWORD *)v128 + 1);
              *(_OWORD *)uint64_t v127 = *(_OWORD *)v128;
              *((_OWORD *)v127 + 1) = v140;
            }
            uint64_t v141 = type metadata accessor for DetailComponentContainerViewModel();
            uint64_t v142 = *(int *)(v141 + 20);
            uint64_t v262 = (void *)((char *)v127 + v142);
            uint64_t v143 = &v128[v142];
            uint64_t v144 = type metadata accessor for NewsArticleComponentViewModel(0);
            uint64_t v269 = v20;
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              __dstb = (void *)v141;
              uint64_t v145 = *((void *)v143 + 1);
              void *v262 = *(void *)v143;
              v262[1] = v145;
              uint64_t v256 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
              uint64_t v146 = v256[5];
              uint64_t v238 = (char *)v262 + v146;
              long long v243 = v143;
              int v147 = &v143[v146];
              uint64_t v148 = type metadata accessor for URL();
              swift_bridgeObjectRetain();
              uint64_t v266 = a3;
              uint64_t v273 = v6;
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v147, 1, v148))
              {
                uint64_t v149 = sub_10017DF08(&qword_100E749B0);
                memcpy(v238, v147, *(void *)(*(void *)(v149 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 16))(v238, v147, v148);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v238, 0, 1, v148);
              }
              uint64_t v170 = v256[6];
              uint64_t v171 = (void *)((char *)v262 + v170);
              uint64_t v172 = &v243[v170];
              uint64_t v173 = *((void *)v172 + 1);
              *uint64_t v171 = *(void *)v172;
              v171[1] = v173;
              uint64_t v174 = v256[7];
              uint64_t v239 = (char *)v262 + v174;
              uint64_t v175 = &v243[v174];
              uint64_t v176 = *(void (**)(char *, char *, uint64_t))(*(void *)(v148 - 8) + 16);
              swift_bridgeObjectRetain();
              v176(v239, v175, v148);
              uint64_t v177 = v256[8];
              uint64_t v178 = (char *)v262 + v177;
              uint64_t v179 = &v243[v177];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v243[v177], 1, v148))
              {
                uint64_t v180 = sub_10017DF08(&qword_100E749B0);
                memcpy(v178, v179, *(void *)(*(void *)(v180 - 8) + 64));
              }
              else
              {
                v176(v178, v179, v148);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v178, 0, 1, v148);
              }
              a3 = v266;
              uint64_t v141 = (uint64_t)__dstb;
              *((unsigned char *)v262 + v256[9]) = v243[v256[9]];
              swift_storeEnumTagMultiPayload();
              uint64_t v6 = v273;
            }
            else
            {
              memcpy(v262, v143, *(void *)(*(void *)(v144 - 8) + 64));
            }
            uint64_t v181 = *(int *)(v141 + 24);
            uint64_t v182 = (char *)v127 + v181;
            uint64_t v183 = &v128[v181];
            uint64_t v184 = type metadata accessor for DetailComponentAction();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v183, 1, v184))
            {
              uint64_t v185 = sub_10017DF08(&qword_100E73810);
              memcpy(v182, v183, *(void *)(*(void *)(v185 - 8) + 64));
            }
            else
            {
              uint64_t v186 = type metadata accessor for URL();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v186 - 8) + 16))(v182, v183, v186);
              uint64_t v187 = sub_10017DF08(&qword_100E66478);
              v182[*(int *)(v187 + 48)] = v183[*(int *)(v187 + 48)];
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v182, 0, 1, v184);
            }
            goto LABEL_123;
          case 5u:
            uint64_t v265 = a3;
            uint64_t v272 = v6;
            uint64_t v269 = v20;
            if (*((void *)v128 + 3))
            {
              uint64_t v134 = *(void *)v128;
              uint64_t v135 = *((void *)v128 + 1);
              char v136 = v128[16];
              sub_100190CC4(*(void *)v128, v135, v136);
              *uint64_t v127 = v134;
              v127[1] = v135;
              *((unsigned char *)v127 + 16) = v136;
              v127[3] = *((void *)v128 + 3);
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v150 = *((_OWORD *)v128 + 1);
              *(_OWORD *)uint64_t v127 = *(_OWORD *)v128;
              *((_OWORD *)v127 + 1) = v150;
            }
            uint64_t v151 = *((void *)v128 + 4);
            uint64_t v152 = *((void *)v128 + 5);
            uint64_t v153 = *((void *)v128 + 6);
            uint64_t v154 = *((void *)v128 + 7);
            uint64_t v155 = *((void *)v128 + 8);
            uint64_t v156 = *((void *)v128 + 9);
            uint64_t v157 = *((void *)v128 + 10);
            uint64_t v257 = v157;
            char v263 = v128[89];
            uint64_t v158 = v128[88];
            sub_10033A9E8(v151, v152, v153, v154, v155, v156, v157, v158, v263);
            v127[4] = v151;
            v127[5] = v152;
            v127[6] = v153;
            v127[7] = v154;
            v127[8] = v155;
            v127[9] = v156;
            v127[10] = v257;
            *((unsigned char *)v127 + 88) = v158;
            *((unsigned char *)v127 + 89) = v263;
            goto LABEL_122;
          case 6u:
            uint64_t v131 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_76:
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v131 - 8) + 16))(v127, v128, v131);
            goto LABEL_124;
          case 7u:
            uint64_t v137 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
            int v138 = swift_getEnumCaseMultiPayload();
            if (v138 != 1)
            {
              if (v138)
              {
                memcpy(v127, v128, *(void *)(*(void *)(v137 - 8) + 64));
              }
              else
              {
                uint64_t v139 = *((void *)v128 + 1);
                *uint64_t v127 = *(void *)v128;
                v127[1] = v139;
                v127[2] = *((void *)v128 + 2);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_storeEnumTagMultiPayload();
              }
              goto LABEL_124;
            }
            uint64_t v269 = v20;
            uint64_t v272 = v6;
            uint64_t v265 = a3;
            uint64_t v159 = *((void *)v128 + 1);
            *uint64_t v127 = *(void *)v128;
            v127[1] = v159;
            uint64_t v160 = type metadata accessor for ConditionDetailMapViewModel();
            uint64_t v161 = *(int *)(v160 + 20);
            uint64_t v258 = (char *)v127 + v161;
            uint64_t v162 = &v128[v161];
            uint64_t v163 = type metadata accessor for Location();
            uint64_t v164 = *(void (**)(char *, char *, uint64_t))(*(void *)(v163 - 8) + 16);
            swift_bridgeObjectRetain();
            v164(v258, v162, v163);
            uint64_t v259 = (int *)v160;
            uint64_t v165 = *(int *)(v160 + 24);
            uint64_t v166 = (void *)((char *)v127 + v165);
            uint64_t v167 = &v128[v165];
            uint64_t v168 = type metadata accessor for WeatherData(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v167, 1, v168))
            {
              uint64_t v169 = sub_10017DF08(&qword_100E63850);
              memcpy(v166, v167, *(void *)(*(void *)(v169 - 8) + 64));
              goto LABEL_121;
            }
            uint64_t v188 = *((void *)v167 + 1);
            *uint64_t v166 = *(void *)v167;
            v166[1] = v188;
            uint64_t v189 = *(int *)(v168 + 20);
            __dstc = (char *)v166;
            uint64_t v190 = (char *)v166 + v189;
            id v191 = &v167[v189];
            uint64_t v192 = type metadata accessor for Locale();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v191, 1, v192))
            {
              uint64_t v193 = sub_10017DF08(&qword_100E63730);
              memcpy(v190, v191, *(void *)(*(void *)(v193 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v192 - 8) + 16))(v190, v191, v192);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v190, 0, 1, v192);
            }
            uint64_t v194 = *(int *)(v168 + 24);
            uint64_t v195 = &__dstc[v194];
            uint64_t v196 = v168;
            uint64_t v197 = &v167[v194];
            uint64_t v198 = type metadata accessor for WeatherDataModel();
            uint64_t v199 = v195;
            uint64_t v200 = v196;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v198 - 8) + 16))(v199, v197, v198);
            uint64_t v201 = *(int *)(v196 + 28);
            uint64_t v202 = &__dstc[v201];
            uint64_t v203 = &v167[v201];
            uint64_t v204 = sub_10017DF08(&qword_100E63738);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v203, 1, v204))
            {
              uint64_t v205 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v202, v203, *(void *)(*(void *)(v205 - 8) + 64));
            }
            else
            {
              uint64_t v206 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v206 - 8) + 16))(v202, v203, v206);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v202, 0, 1, v204);
            }
            uint64_t v207 = *(int *)(v200 + 32);
            uint64_t v208 = &__dstc[v207];
            uint64_t v209 = &v167[v207];
            uint64_t v210 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            int v211 = swift_getEnumCaseMultiPayload();
            if (v211 == 1)
            {
              uint64_t v213 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v213 - 8) + 16))(v208, v209, v213);
            }
            else
            {
              if (v211)
              {
                memcpy(v208, v209, *(void *)(*(void *)(v210 - 8) + 64));
LABEL_111:
                uint64_t v214 = *(int *)(v200 + 36);
                uint64_t v215 = &__dstc[v214];
                uint64_t v216 = &v167[v214];
                uint64_t v217 = type metadata accessor for WeatherDataOverrides();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v216, 1, v217))
                {
                  uint64_t v218 = sub_10017DF08(&qword_100E63740);
                  memcpy(v215, v216, *(void *)(*(void *)(v218 - 8) + 64));
                }
                else
                {
                  uint64_t v247 = v217;
                  uint64_t v219 = type metadata accessor for Date();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v216, 1, v219))
                  {
                    uint64_t v220 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                    memcpy(v215, v216, *(void *)(*(void *)(v220 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v219 - 8) + 16))(v215, v216, v219);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v215, 0, 1, v219);
                  }
                  uint64_t v221 = *(int *)(v247 + 20);
                  uint64_t v222 = &v215[v221];
                  uint64_t v223 = &v216[v221];
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v223, 1, v219))
                  {
                    uint64_t v224 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                    memcpy(v222, v223, *(void *)(*(void *)(v224 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v219 - 8) + 16))(v222, v223, v219);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v222, 0, 1, v219);
                  }
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v215, 0, 1, v247);
                }
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstc, 0, 1, v200);
LABEL_121:
                uint64_t v225 = v259[7];
                uint64_t v226 = (void *)((char *)v127 + v225);
                uint64_t v227 = &v128[v225];
                uint64_t v228 = *((void *)v227 + 1);
                *uint64_t v226 = *(void *)v227;
                v226[1] = v228;
                uint64_t v229 = v259[8];
                __dste = (char *)v127 + v229;
                uint64_t v230 = &v128[v229];
                uint64_t v231 = type metadata accessor for WeatherMapOverlayKind();
                uint64_t v232 = *(void (**)(char *, char *, uint64_t))(*(void *)(v231 - 8) + 16);
                swift_bridgeObjectRetain();
                v232(__dste, v230, v231);
                *((unsigned char *)v127 + v259[9]) = v128[v259[9]];
                swift_storeEnumTagMultiPayload();
LABEL_122:
                a3 = v265;
                uint64_t v6 = v272;
LABEL_123:
                uint64_t v20 = v269;
LABEL_124:
                swift_storeEnumTagMultiPayload();
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v127, 0, 1, v20);
                goto LABEL_125;
              }
              uint64_t v212 = *((void *)v209 + 1);
              *(void *)uint64_t v208 = *(void *)v209;
              *((void *)v208 + 1) = v212;
              swift_bridgeObjectRetain();
            }
            swift_storeEnumTagMultiPayload();
            goto LABEL_111;
          default:
            (*(void (**)(void *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v127, v128, v15);
            goto LABEL_124;
        }
      default:
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v15 - 8) + 16))(v18, v19, v15);
        goto LABEL_64;
    }
  }
  uint64_t v7 = type metadata accessor for MonthlyAveragesChartModel();
  memcpy(a1, (const void *)a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_126:
  uint64_t v233 = *(int *)(a3 + 20);
  long long v234 = *(_OWORD *)(a2 + v233 + 24);
  *(_OWORD *)((char *)a1 + v233 + 24) = v234;
  (**(void (***)(void))(v234 - 8))();
  *((unsigned char *)a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

char *sub_100B974C8(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, (uint64_t)v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0(a2, 1, (uint64_t)v6);
  if (!v7)
  {
    if (v8)
    {
      sub_100B9B41C((uint64_t)a1, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
      goto LABEL_7;
    }
    uint64_t v18 = *(void *)a2;
    uint64_t v19 = *(void *)(a2 + 8);
    unsigned __int8 v20 = *(unsigned char *)(a2 + 16);
    sub_10018F6EC(*(void *)a2, v19, v20);
    uint64_t v21 = *(void *)a1;
    uint64_t v22 = *((void *)a1 + 1);
    *(void *)a1 = v18;
    *((void *)a1 + 1) = v19;
    unsigned __int8 v23 = a1[16];
    a1[16] = v20;
    sub_10014D144(v21, v22, v23);
    *((void *)a1 + 3) = *(void *)(a2 + 24);
    *((void *)a1 + 4) = *(void *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v24 = v6[6];
    uint64_t v25 = &a1[v24];
    uint64_t v26 = (const void *)(a2 + v24);
    uint64_t v27 = type metadata accessor for WeatherDescription();
    int v28 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v27);
    int v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27);
    if (v28)
    {
      if (!v29)
      {
        (*(void (**)(char *, const void *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v27);
LABEL_17:
        if (a1 != (char *)a2)
        {
          uint64_t v36 = v6[7];
          uint64_t v37 = (uint64_t *)&a1[v36];
          uint64_t v38 = (void *)(a2 + v36);
          sub_100B9B41C((uint64_t)&a1[v36], (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
          type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              *uint64_t v37 = *v38;
              v37[1] = v38[1];
              swift_bridgeObjectRetain();
              goto LABEL_187;
            case 2u:
              uint64_t v45 = type metadata accessor for AttributedString();
              goto LABEL_42;
            case 3u:
              uint64_t v45 = sub_10017DF08(&qword_100E73808);
              goto LABEL_42;
            case 4u:
              if (v38[1])
              {
                *uint64_t v37 = *v38;
                v37[1] = v38[1];
                v37[2] = v38[2];
                v37[3] = v38[3];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                long long v101 = *((_OWORD *)v38 + 1);
                *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
                *((_OWORD *)v37 + 1) = v101;
              }
              uint64_t v102 = type metadata accessor for DetailComponentContainerViewModel();
              uint64_t v103 = *(int *)(v102 + 20);
              uint64_t v539 = (int *)v102;
              uint64_t v549 = (uint64_t *)((char *)v37 + v103);
              int v104 = (void *)((char *)v38 + v103);
              uint64_t v105 = type metadata accessor for NewsArticleComponentViewModel(0);
              uint64_t v592 = v27;
              uint64_t v565 = (char *)v38;
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                *uint64_t v549 = *v104;
                v549[1] = v104[1];
                v531 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
                uint64_t v106 = v531[5];
                uint64_t v526 = (char *)v549 + v106;
                __dsta = v104;
                uint64_t v107 = (char *)v104 + v106;
                uint64_t v108 = type metadata accessor for URL();
                swift_bridgeObjectRetain();
                uint64_t v109 = v549;
                v615 = v6;
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v107, 1, v108))
                {
                  uint64_t v110 = sub_10017DF08(&qword_100E749B0);
                  memcpy(v526, v107, *(void *)(*(void *)(v110 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16))(v526, v107, v108);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v526, 0, 1, v108);
                }
                uint64_t v139 = v531[6];
                long long v140 = (void *)((char *)v549 + v139);
                uint64_t v141 = &__dsta[v139];
                *long long v140 = *v141;
                v140[1] = v141[1];
                uint64_t v142 = v531[7];
                uint64_t v551 = (char *)v549 + v142;
                uint64_t v143 = &__dsta[v142];
                uint64_t v144 = *(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16);
                swift_bridgeObjectRetain();
                v144(v551, v143, v108);
                uint64_t v145 = v531[8];
                uint64_t v146 = v109;
                int v147 = (char *)v109 + v145;
                uint64_t v148 = &__dsta[v145];
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&__dsta[v145], 1, v108))
                {
                  uint64_t v149 = sub_10017DF08(&qword_100E749B0);
                  memcpy(v147, v148, *(void *)(*(void *)(v149 - 8) + 64));
                }
                else
                {
                  v144(v147, v148, v108);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v147, 0, 1, v108);
                }
                uint64_t v6 = v615;
                uint64_t v111 = v539;
                *((unsigned char *)v146 + v531[9]) = __dsta[v531[9]];
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(v549, v104, *(void *)(*(void *)(v105 - 8) + 64));
                uint64_t v111 = v539;
              }
              uint64_t v150 = v111[6];
              uint64_t v151 = (char *)v37 + v150;
              uint64_t v152 = &v565[v150];
              uint64_t v153 = type metadata accessor for DetailComponentAction();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v152, 1, v153))
              {
                uint64_t v154 = sub_10017DF08(&qword_100E73810);
                memcpy(v151, v152, *(void *)(*(void *)(v154 - 8) + 64));
              }
              else
              {
                uint64_t v155 = type metadata accessor for URL();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 16))(v151, v152, v155);
                uint64_t v156 = sub_10017DF08(&qword_100E66478);
                v151[*(int *)(v156 + 48)] = v152[*(int *)(v156 + 48)];
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v151, 0, 1, v153);
              }
              uint64_t v27 = v592;
              goto LABEL_187;
            case 5u:
              uint64_t v602 = a3;
              v612 = v6;
              uint64_t v591 = v27;
              if (v38[3])
              {
                uint64_t v46 = v38;
                uint64_t v47 = *v38;
                uint64_t v48 = v46[1];
                char v49 = *((unsigned char *)v46 + 16);
                sub_100190CC4(v47, v48, v49);
                *uint64_t v37 = v47;
                v37[1] = v48;
                uint64_t v38 = v46;
                *((unsigned char *)v37 + 16) = v49;
                v37[3] = v46[3];
                swift_bridgeObjectRetain();
              }
              else
              {
                long long v112 = *((_OWORD *)v38 + 1);
                *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
                *((_OWORD *)v37 + 1) = v112;
              }
              uint64_t v113 = v38[4];
              uint64_t v114 = v38[5];
              uint64_t v540 = (void *)v113;
              uint64_t v115 = v38[6];
              uint64_t v116 = v38[7];
              uint64_t v118 = v38[8];
              uint64_t v117 = v38[9];
              uint64_t v119 = v38[10];
              char v550 = *((unsigned char *)v38 + 89);
              uint64_t v120 = *((unsigned __int8 *)v38 + 88);
              sub_10033A9E8(v113, v114, v115, v116, v118, v117, v119, v120, v550);
              v37[4] = (uint64_t)v540;
              v37[5] = v114;
              v37[6] = v115;
              v37[7] = v116;
              v37[8] = v118;
              v37[9] = v117;
              v37[10] = v119;
              *((unsigned char *)v37 + 88) = v120;
              *((unsigned char *)v37 + 89) = v550;
              goto LABEL_186;
            case 6u:
              uint64_t v45 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_42:
              (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v45 - 8) + 16))(v37, v38, v45);
              goto LABEL_187;
            case 7u:
              uint64_t v50 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
              int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
              if (EnumCaseMultiPayload != 1)
              {
                if (EnumCaseMultiPayload)
                {
                  memcpy(v37, v38, *(void *)(*(void *)(v50 - 8) + 64));
                }
                else
                {
                  *uint64_t v37 = *v38;
                  v37[1] = v38[1];
                  v37[2] = v38[2];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_storeEnumTagMultiPayload();
                }
                goto LABEL_187;
              }
              uint64_t v591 = v27;
              uint64_t v602 = a3;
              v612 = v6;
              *uint64_t v37 = *v38;
              uint64_t v566 = v38;
              v37[1] = v38[1];
              uint64_t v121 = type metadata accessor for ConditionDetailMapViewModel();
              uint64_t v122 = *(int *)(v121 + 20);
              uint64_t v554 = v37;
              uint64_t v123 = (char *)v37 + v122;
              uint64_t v124 = (char *)v38 + v122;
              uint64_t v125 = type metadata accessor for Location();
              uint64_t v126 = *(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 16);
              swift_bridgeObjectRetain();
              uint64_t v127 = v123;
              uint64_t v128 = v554;
              v126(v127, v124, v125);
              uint64_t v541 = (int *)v121;
              uint64_t v129 = *(int *)(v121 + 24);
              uint64_t v130 = (uint64_t *)((char *)v554 + v129);
              uint64_t v131 = (void *)((char *)v38 + v129);
              uint64_t v132 = (int *)type metadata accessor for WeatherData(0);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v131, 1, (uint64_t)v132))
              {
                uint64_t v133 = sub_10017DF08(&qword_100E63850);
                memcpy(v130, v131, *(void *)(*(void *)(v133 - 8) + 64));
                goto LABEL_185;
              }
              *uint64_t v130 = *v131;
              v130[1] = v131[1];
              uint64_t v157 = v132[5];
              uint64_t v158 = (char *)v130 + v157;
              uint64_t v159 = (char *)v131 + v157;
              uint64_t v160 = type metadata accessor for Locale();
              swift_bridgeObjectRetain();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v159, 1, v160))
              {
                uint64_t v161 = sub_10017DF08(&qword_100E63730);
                memcpy(v158, v159, *(void *)(*(void *)(v161 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 16))(v158, v159, v160);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v158, 0, 1, v160);
              }
              uint64_t v185 = v132[6];
              uint64_t v186 = (char *)v130 + v185;
              uint64_t v187 = (char *)v131 + v185;
              uint64_t v188 = type metadata accessor for WeatherDataModel();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v188 - 8) + 16))(v186, v187, v188);
              uint64_t v189 = v132[7];
              uint64_t v190 = (char *)v130 + v189;
              id v191 = (char *)v131 + v189;
              uint64_t v192 = sub_10017DF08(&qword_100E63738);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v191, 1, v192))
              {
                uint64_t v193 = type metadata accessor for WeatherData.CachingState(0);
                memcpy(v190, v191, *(void *)(*(void *)(v193 - 8) + 64));
              }
              else
              {
                uint64_t v197 = type metadata accessor for Date();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v197 - 8) + 16))(v190, v191, v197);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v190, 0, 1, v192);
              }
              uint64_t v128 = v554;
              uint64_t v532 = v132;
              uint64_t v198 = v132[8];
              uint64_t v199 = (void *)((char *)v130 + v198);
              uint64_t v200 = (void *)((char *)v131 + v198);
              uint64_t v201 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
              int v202 = swift_getEnumCaseMultiPayload();
              if (v202 == 1)
              {
                uint64_t v290 = type metadata accessor for WeatherStatisticsModel();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v290 - 8) + 16))(v199, v200, v290);
                goto LABEL_163;
              }
              if (!v202)
              {
                *uint64_t v199 = *v200;
                v199[1] = v200[1];
                swift_bridgeObjectRetain();
LABEL_163:
                swift_storeEnumTagMultiPayload();
                goto LABEL_165;
              }
              memcpy(v199, v200, *(void *)(*(void *)(v201 - 8) + 64));
LABEL_165:
              uint64_t v291 = v532[9];
              uint64_t v292 = (char *)v130 + v291;
              uint64_t v293 = (char *)v131 + v291;
              uint64_t v294 = type metadata accessor for WeatherDataOverrides();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v293, 1, v294))
              {
                uint64_t v295 = sub_10017DF08(&qword_100E63740);
                memcpy(v292, v293, *(void *)(*(void *)(v295 - 8) + 64));
              }
              else
              {
                uint64_t v530 = v294;
                long long v296 = v292;
                uint64_t v297 = type metadata accessor for Date();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v293, 1, v297))
                {
                  uint64_t v298 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v296, v293, *(void *)(*(void *)(v298 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v297 - 8) + 16))(v296, v293, v297);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v296, 0, 1, v297);
                }
                uint64_t v307 = *(int *)(v530 + 20);
                uint64_t v308 = &v296[v307];
                uint64_t v309 = &v293[v307];
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v309, 1, v297))
                {
                  uint64_t v310 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v308, v309, *(void *)(*(void *)(v310 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v297 - 8) + 16))(v308, v309, v297);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v308, 0, 1, v297);
                }
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v296, 0, 1, v530);
              }
              uint64_t v38 = v566;
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v130, 0, 1, (uint64_t)v532);
LABEL_185:
              uint64_t v315 = v541[7];
              uint64_t v316 = (uint64_t *)((char *)v128 + v315);
              uint64_t v317 = (void *)((char *)v38 + v315);
              *uint64_t v316 = *v317;
              v316[1] = v317[1];
              uint64_t v318 = v541[8];
              uint64_t v319 = (char *)v554 + v318;
              uint64_t v320 = (char *)v38 + v318;
              uint64_t v321 = type metadata accessor for WeatherMapOverlayKind();
              uint64_t v322 = *(void (**)(char *, char *, uint64_t))(*(void *)(v321 - 8) + 16);
              swift_bridgeObjectRetain();
              v322(v319, v320, v321);
              *((unsigned char *)v554 + v541[9]) = *((unsigned char *)v38 + v541[9]);
              swift_storeEnumTagMultiPayload();
LABEL_186:
              a3 = v602;
              uint64_t v6 = v612;
              uint64_t v27 = v591;
LABEL_187:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v37, v38, v27);
              goto LABEL_187;
          }
        }
        uint64_t v323 = v6[8];
        uint64_t v324 = (uint64_t)&a1[v323];
        uint64_t v325 = a2 + v323;
        uint64_t v326 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
        int v327 = _s7Weather24LocationCompositionStateOwet_0(v324, 1, v326);
        int v328 = _s7Weather24LocationCompositionStateOwet_0(v325, 1, v326);
        if (v327)
        {
          if (!v328)
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
                *(void *)uint64_t v324 = *(void *)v325;
                *(void *)(v324 + 8) = *(void *)(v325 + 8);
                swift_bridgeObjectRetain();
                goto LABEL_301;
              case 2u:
                uint64_t v330 = type metadata accessor for AttributedString();
                goto LABEL_206;
              case 3u:
                uint64_t v330 = sub_10017DF08(&qword_100E73808);
                goto LABEL_206;
              case 4u:
                uint64_t v606 = a3;
                if (*(void *)(v325 + 8))
                {
                  *(void *)uint64_t v324 = *(void *)v325;
                  *(void *)(v324 + 8) = *(void *)(v325 + 8);
                  *(void *)(v324 + 16) = *(void *)(v325 + 16);
                  *(void *)(v324 + 24) = *(void *)(v325 + 24);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v344 = *(_OWORD *)(v325 + 16);
                  *(_OWORD *)uint64_t v324 = *(_OWORD *)v325;
                  *(_OWORD *)(v324 + 16) = v344;
                }
                uint64_t v345 = type metadata accessor for DetailComponentContainerViewModel();
                uint64_t v346 = *(int *)(v345 + 20);
                uint64_t v347 = (void *)(v324 + v346);
                uint64_t v348 = (void *)(v325 + v346);
                uint64_t v349 = type metadata accessor for NewsArticleComponentViewModel(0);
                if (swift_getEnumCaseMultiPayload() == 1)
                {
                  *uint64_t v347 = *v348;
                  v347[1] = v348[1];
                  v597 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
                  uint64_t v350 = v597[5];
                  v569 = v347;
                  uint64_t v535 = (char *)v348 + v350;
                  uint64_t v542 = (char *)v347 + v350;
                  uint64_t v351 = type metadata accessor for URL();
                  swift_bridgeObjectRetain();
                  v558 = (void *)v345;
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v535, 1, v351))
                  {
                    uint64_t v352 = sub_10017DF08(&qword_100E749B0);
                    memcpy(v542, v535, *(void *)(*(void *)(v352 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v351 - 8) + 16))(v542, v535, v351);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v542, 0, 1, v351);
                  }
                  uint64_t v372 = v597[6];
                  uint64_t v373 = &v569[v372];
                  uint64_t v374 = (void *)((char *)v348 + v372);
                  *uint64_t v373 = *v374;
                  v373[1] = v374[1];
                  uint64_t v375 = v597[7];
                  uint64_t v536 = (char *)v348 + v375;
                  v543 = &v569[v375];
                  unint64_t v376 = *(void (**)(char *, char *, uint64_t))(*(void *)(v351 - 8) + 16);
                  swift_bridgeObjectRetain();
                  uint64_t v377 = v543;
                  uint64_t v544 = v376;
                  v376(v377, v536, v351);
                  uint64_t v378 = v597[8];
                  uint64_t v379 = &v569[v378];
                  uint64_t v380 = (char *)v348 + v378;
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v348 + v378, 1, v351))
                  {
                    uint64_t v381 = sub_10017DF08(&qword_100E749B0);
                    memcpy(v379, v380, *(void *)(*(void *)(v381 - 8) + 64));
                  }
                  else
                  {
                    v544(v379, v380, v351);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v379, 0, 1, v351);
                  }
                  uint64_t v345 = (uint64_t)v558;
                  v569[v597[9]] = *((unsigned char *)v348 + v597[9]);
                  swift_storeEnumTagMultiPayload();
                }
                else
                {
                  memcpy(v347, v348, *(void *)(*(void *)(v349 - 8) + 64));
                }
                uint64_t v382 = *(int *)(v345 + 24);
                uint64_t v383 = (void *)(v324 + v382);
                uint64_t v384 = (const void *)(v325 + v382);
                uint64_t v385 = type metadata accessor for DetailComponentAction();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v384, 1, v385))
                {
                  uint64_t v386 = sub_10017DF08(&qword_100E73810);
                  memcpy(v383, v384, *(void *)(*(void *)(v386 - 8) + 64));
                }
                else
                {
                  uint64_t v387 = type metadata accessor for URL();
                  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v387 - 8) + 16))(v383, v384, v387);
                  uint64_t v388 = sub_10017DF08(&qword_100E66478);
                  *((unsigned char *)v383 + *(int *)(v388 + 48)) = *((unsigned char *)v384 + *(int *)(v388 + 48));
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v383, 0, 1, v385);
                }
                a3 = v606;
                goto LABEL_301;
              case 5u:
                uint64_t v607 = a3;
                v618 = v6;
                uint64_t v587 = v326;
                if (*(void *)(v325 + 24))
                {
                  uint64_t v331 = *(void *)v325;
                  uint64_t v332 = *(void *)(v325 + 8);
                  char v333 = *(unsigned char *)(v325 + 16);
                  sub_100190CC4(*(void *)v325, v332, v333);
                  *(void *)uint64_t v324 = v331;
                  *(void *)(v324 + 8) = v332;
                  *(unsigned char *)(v324 + 16) = v333;
                  *(void *)(v324 + 24) = *(void *)(v325 + 24);
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v353 = *(_OWORD *)(v325 + 16);
                  *(_OWORD *)uint64_t v324 = *(_OWORD *)v325;
                  *(_OWORD *)(v324 + 16) = v353;
                }
                uint64_t v354 = *(void *)(v325 + 32);
                uint64_t v355 = *(void *)(v325 + 40);
                uint64_t v356 = *(void *)(v325 + 48);
                uint64_t v357 = *(void *)(v325 + 56);
                uint64_t v358 = *(void *)(v325 + 64);
                uint64_t v598 = *(void *)(v325 + 72);
                uint64_t v359 = *(void *)(v325 + 80);
                uint64_t v570 = (void *)v359;
                char v360 = *(unsigned char *)(v325 + 89);
                uint64_t v361 = *(unsigned __int8 *)(v325 + 88);
                sub_10033A9E8(v354, v355, v356, v357, v358, v598, v359, v361, v360);
                *(void *)(v324 + 32) = v354;
                *(void *)(v324 + 40) = v355;
                *(void *)(v324 + 48) = v356;
                *(void *)(v324 + 56) = v357;
                *(void *)(v324 + 64) = v358;
                *(void *)(v324 + 72) = v598;
                *(void *)(v324 + 80) = v570;
                *(unsigned char *)(v324 + 88) = v361;
                *(unsigned char *)(v324 + 89) = v360;
                goto LABEL_300;
              case 6u:
                uint64_t v330 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_206:
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v330 - 8) + 16))(v324, v325, v330);
                goto LABEL_301;
              case 7u:
                uint64_t v334 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
                int v335 = swift_getEnumCaseMultiPayload();
                if (v335 != 1)
                {
                  if (v335)
                  {
                    memcpy((void *)v324, (const void *)v325, *(void *)(*(void *)(v334 - 8) + 64));
                  }
                  else
                  {
                    *(void *)uint64_t v324 = *(void *)v325;
                    *(void *)(v324 + 8) = *(void *)(v325 + 8);
                    *(void *)(v324 + 16) = *(void *)(v325 + 16);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_storeEnumTagMultiPayload();
                  }
                  goto LABEL_301;
                }
                uint64_t v587 = v326;
                uint64_t v607 = a3;
                v618 = v6;
                *(void *)uint64_t v324 = *(void *)v325;
                *(void *)(v324 + 8) = *(void *)(v325 + 8);
                uint64_t v362 = type metadata accessor for ConditionDetailMapViewModel();
                uint64_t v363 = *(int *)(v362 + 20);
                v571 = (void *)(v324 + v363);
                uint64_t v364 = v325 + v363;
                uint64_t v365 = type metadata accessor for Location();
                uint64_t v366 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v365 - 8) + 16);
                swift_bridgeObjectRetain();
                v366(v571, v364, v365);
                v572 = (int *)v362;
                uint64_t v367 = *(int *)(v362 + 24);
                uint64_t v368 = (void *)(v324 + v367);
                uint64_t v369 = (void *)(v325 + v367);
                uint64_t v370 = type metadata accessor for WeatherData(0);
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v369, 1, v370))
                {
                  uint64_t v371 = sub_10017DF08(&qword_100E63850);
                  memcpy(v368, v369, *(void *)(*(void *)(v371 - 8) + 64));
                  goto LABEL_299;
                }
                *uint64_t v368 = *v369;
                v368[1] = v369[1];
                uint64_t v560 = (int *)v370;
                uint64_t v419 = *(int *)(v370 + 20);
                uint64_t v420 = (char *)v368 + v419;
                uint64_t v421 = (char *)v369 + v419;
                uint64_t v422 = type metadata accessor for Locale();
                swift_bridgeObjectRetain();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v421, 1, v422))
                {
                  uint64_t v423 = sub_10017DF08(&qword_100E63730);
                  memcpy(v420, v421, *(void *)(*(void *)(v423 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v422 - 8) + 16))(v420, v421, v422);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v420, 0, 1, v422);
                }
                uint64_t v454 = v560[6];
                uint64_t v455 = (char *)v368 + v454;
                uint64_t v456 = (char *)v369 + v454;
                uint64_t v457 = type metadata accessor for WeatherDataModel();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v457 - 8) + 16))(v455, v456, v457);
                uint64_t v458 = v560[7];
                uint64_t v459 = (char *)v368 + v458;
                long long v460 = (char *)v369 + v458;
                uint64_t v461 = sub_10017DF08(&qword_100E63738);
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v460, 1, v461))
                {
                  uint64_t v462 = type metadata accessor for WeatherData.CachingState(0);
                  memcpy(v459, v460, *(void *)(*(void *)(v462 - 8) + 64));
                }
                else
                {
                  uint64_t v463 = type metadata accessor for Date();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v463 - 8) + 16))(v459, v460, v463);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v459, 0, 1, v461);
                }
                uint64_t v464 = v560[8];
                uint64_t v465 = (void *)((char *)v368 + v464);
                uint64_t v466 = (void *)((char *)v369 + v464);
                uint64_t v467 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
                int v468 = swift_getEnumCaseMultiPayload();
                if (v468 == 1)
                {
                  uint64_t v469 = type metadata accessor for WeatherStatisticsModel();
                  (*(void (**)(void *, void *, uint64_t))(*(void *)(v469 - 8) + 16))(v465, v466, v469);
                  goto LABEL_280;
                }
                if (!v468)
                {
                  *uint64_t v465 = *v466;
                  v465[1] = v466[1];
                  swift_bridgeObjectRetain();
LABEL_280:
                  swift_storeEnumTagMultiPayload();
                  goto LABEL_282;
                }
                memcpy(v465, v466, *(void *)(*(void *)(v467 - 8) + 64));
LABEL_282:
                uint64_t v470 = v560[9];
                uint64_t v471 = (char *)v368 + v470;
                uint64_t v472 = (char *)v369 + v470;
                uint64_t v473 = type metadata accessor for WeatherDataOverrides();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v472, 1, v473))
                {
                  uint64_t v474 = sub_10017DF08(&qword_100E63740);
                  memcpy(v471, v472, *(void *)(*(void *)(v474 - 8) + 64));
                }
                else
                {
                  uint64_t v552 = (int *)v473;
                  uint64_t v475 = type metadata accessor for Date();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v472, 1, v475))
                  {
                    uint64_t v476 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                    memcpy(v471, v472, *(void *)(*(void *)(v476 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v475 - 8) + 16))(v471, v472, v475);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v471, 0, 1, v475);
                  }
                  uint64_t v488 = v552[5];
                  uint64_t v489 = &v471[v488];
                  uint64_t v490 = &v472[v488];
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v490, 1, v475))
                  {
                    uint64_t v491 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                    memcpy(v489, v490, *(void *)(*(void *)(v491 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v475 - 8) + 16))(v489, v490, v475);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v489, 0, 1, v475);
                  }
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v471, 0, 1, (uint64_t)v552);
                }
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v368, 0, 1, (uint64_t)v560);
LABEL_299:
                uint64_t v498 = v572[7];
                v499 = (void *)(v324 + v498);
                uint64_t v500 = (void *)(v325 + v498);
                void *v499 = *v500;
                v499[1] = v500[1];
                uint64_t v501 = v572[8];
                uint64_t v561 = (void *)(v324 + v501);
                uint64_t v502 = v325 + v501;
                uint64_t v503 = type metadata accessor for WeatherMapOverlayKind();
                uint64_t v504 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v503 - 8) + 16);
                swift_bridgeObjectRetain();
                v504(v561, v502, v503);
                *(unsigned char *)(v324 + v572[9]) = *(unsigned char *)(v325 + v572[9]);
                swift_storeEnumTagMultiPayload();
LABEL_300:
                a3 = v607;
                uint64_t v6 = v618;
                uint64_t v326 = v587;
LABEL_301:
                swift_storeEnumTagMultiPayload();
                _s7Weather24LocationCompositionStateOwst_0(v324, 0, 1, v326);
                break;
              default:
                (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v324, v325, v27);
                goto LABEL_301;
            }
LABEL_317:
            a1[v6[9]] = *(unsigned char *)(a2 + v6[9]);
            a1[v6[10]] = *(unsigned char *)(a2 + v6[10]);
            goto LABEL_318;
          }
LABEL_194:
          uint64_t v329 = sub_10017DF08(&qword_100E73818);
          memcpy((void *)v324, (const void *)v325, *(void *)(*(void *)(v329 - 8) + 64));
          goto LABEL_317;
        }
        if (v328)
        {
          sub_100B9B41C(v324, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
          goto LABEL_194;
        }
        if (a1 == (char *)a2) {
          goto LABEL_317;
        }
        sub_100B9B41C(v324, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            *(void *)uint64_t v324 = *(void *)v325;
            *(void *)(v324 + 8) = *(void *)(v325 + 8);
            swift_bridgeObjectRetain();
            goto LABEL_316;
          case 2u:
            uint64_t v336 = type metadata accessor for AttributedString();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v336 - 8) + 16))(v324, v325, v336);
            goto LABEL_316;
          case 3u:
            uint64_t v337 = sub_10017DF08(&qword_100E73808);
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v337 - 8) + 16))(v324, v325, v337);
            goto LABEL_316;
          case 4u:
            if (*(void *)(v325 + 8))
            {
              *(void *)uint64_t v324 = *(void *)v325;
              *(void *)(v324 + 8) = *(void *)(v325 + 8);
              *(void *)(v324 + 16) = *(void *)(v325 + 16);
              *(void *)(v324 + 24) = *(void *)(v325 + 24);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v389 = *(_OWORD *)(v325 + 16);
              *(_OWORD *)uint64_t v324 = *(_OWORD *)v325;
              *(_OWORD *)(v324 + 16) = v389;
            }
            uint64_t v390 = type metadata accessor for DetailComponentContainerViewModel();
            uint64_t v391 = *(int *)(v390 + 20);
            uint64_t v579 = (void *)(v324 + v391);
            uint64_t v392 = (void *)(v325 + v391);
            uint64_t v393 = type metadata accessor for NewsArticleComponentViewModel(0);
            v599 = v392;
            uint64_t v609 = a3;
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              v559 = (void *)v390;
              *uint64_t v579 = *v392;
              v579[1] = v392[1];
              uint64_t v573 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
              uint64_t v394 = v573[5];
              uint64_t v545 = (char *)v579 + v394;
              uint64_t v395 = (uint64_t)v392 + v394;
              uint64_t v396 = type metadata accessor for URL();
              swift_bridgeObjectRetain();
              if (_s7Weather24LocationCompositionStateOwet_0(v395, 1, v396))
              {
                uint64_t v397 = (const void *)v395;
                uint64_t v398 = v396;
                uint64_t v399 = sub_10017DF08(&qword_100E749B0);
                memcpy(v545, v397, *(void *)(*(void *)(v399 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v396 - 8) + 16))(v545, v395, v396);
                uint64_t v398 = v396;
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v545, 0, 1, v396);
              }
              uint64_t v424 = v573[6];
              uint64_t v425 = (void *)((char *)v579 + v424);
              uint64_t v426 = (void *)((char *)v599 + v424);
              *uint64_t v425 = *v426;
              v425[1] = v426[1];
              uint64_t v427 = v573[7];
              uint64_t v537 = (char *)v599 + v427;
              uint64_t v546 = (char *)v579 + v427;
              uint64_t v428 = *(void (**)(char *, char *, uint64_t))(*(void *)(v398 - 8) + 16);
              swift_bridgeObjectRetain();
              uint64_t v429 = v546;
              v547 = v428;
              v428(v429, v537, v398);
              uint64_t v430 = v573[8];
              uint64_t v431 = (char *)v579 + v430;
              uint64_t v432 = (char *)v599 + v430;
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v599 + v430, 1, v398))
              {
                uint64_t v433 = sub_10017DF08(&qword_100E749B0);
                memcpy(v431, v432, *(void *)(*(void *)(v433 - 8) + 64));
              }
              else
              {
                v547(v431, v432, v398);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v431, 0, 1, v398);
              }
              *((unsigned char *)v579 + v573[9]) = *((unsigned char *)v599 + v573[9]);
              swift_storeEnumTagMultiPayload();
              uint64_t v390 = (uint64_t)v559;
            }
            else
            {
              memcpy(v579, v392, *(void *)(*(void *)(v393 - 8) + 64));
            }
            uint64_t v434 = *(int *)(v390 + 24);
            uint64_t v435 = (void *)(v324 + v434);
            uint64_t v436 = (const void *)(v325 + v434);
            uint64_t v437 = type metadata accessor for DetailComponentAction();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v436, 1, v437))
            {
              uint64_t v438 = sub_10017DF08(&qword_100E73810);
              memcpy(v435, v436, *(void *)(*(void *)(v438 - 8) + 64));
            }
            else
            {
              uint64_t v439 = type metadata accessor for URL();
              (*(void (**)(void *, const void *, uint64_t))(*(void *)(v439 - 8) + 16))(v435, v436, v439);
              uint64_t v440 = sub_10017DF08(&qword_100E66478);
              *((unsigned char *)v435 + *(int *)(v440 + 48)) = *((unsigned char *)v436 + *(int *)(v440 + 48));
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v435, 0, 1, v437);
            }
            a3 = v609;
            goto LABEL_316;
          case 5u:
            uint64_t v608 = a3;
            v619 = v6;
            if (*(void *)(v325 + 24))
            {
              uint64_t v338 = *(void *)v325;
              uint64_t v339 = *(void *)(v325 + 8);
              char v340 = *(unsigned char *)(v325 + 16);
              sub_100190CC4(*(void *)v325, v339, v340);
              *(void *)uint64_t v324 = v338;
              *(void *)(v324 + 8) = v339;
              *(unsigned char *)(v324 + 16) = v340;
              *(void *)(v324 + 24) = *(void *)(v325 + 24);
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v400 = *(_OWORD *)(v325 + 16);
              *(_OWORD *)uint64_t v324 = *(_OWORD *)v325;
              *(_OWORD *)(v324 + 16) = v400;
            }
            uint64_t v401 = *(void *)(v325 + 32);
            uint64_t v402 = *(void *)(v325 + 40);
            uint64_t v403 = *(void *)(v325 + 48);
            uint64_t v404 = *(void *)(v325 + 56);
            uint64_t v405 = *(void *)(v325 + 64);
            uint64_t v600 = *(void *)(v325 + 72);
            uint64_t v406 = *(void *)(v325 + 80);
            uint64_t v580 = (void *)v406;
            char v407 = *(unsigned char *)(v325 + 89);
            uint64_t v408 = *(unsigned __int8 *)(v325 + 88);
            sub_10033A9E8(v401, v402, v403, v404, v405, v600, v406, v408, v407);
            *(void *)(v324 + 32) = v401;
            *(void *)(v324 + 40) = v402;
            *(void *)(v324 + 48) = v403;
            *(void *)(v324 + 56) = v404;
            *(void *)(v324 + 64) = v405;
            *(void *)(v324 + 72) = v600;
            *(void *)(v324 + 80) = v580;
            *(unsigned char *)(v324 + 88) = v408;
            *(unsigned char *)(v324 + 89) = v407;
            swift_storeEnumTagMultiPayload();
            a3 = v608;
            uint64_t v6 = v619;
            goto LABEL_317;
          case 6u:
            uint64_t v341 = type metadata accessor for PrecipitationTotalPlatterViewModel();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v341 - 8) + 16))(v324, v325, v341);
            goto LABEL_316;
          case 7u:
            uint64_t v342 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
            int v343 = swift_getEnumCaseMultiPayload();
            if (v343 != 1)
            {
              if (v343)
              {
                memcpy((void *)v324, (const void *)v325, *(void *)(*(void *)(v342 - 8) + 64));
              }
              else
              {
                *(void *)uint64_t v324 = *(void *)v325;
                *(void *)(v324 + 8) = *(void *)(v325 + 8);
                *(void *)(v324 + 16) = *(void *)(v325 + 16);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_storeEnumTagMultiPayload();
              }
LABEL_316:
              swift_storeEnumTagMultiPayload();
              goto LABEL_317;
            }
            uint64_t v610 = a3;
            v620 = v6;
            *(void *)uint64_t v324 = *(void *)v325;
            *(void *)(v324 + 8) = *(void *)(v325 + 8);
            uint64_t v409 = type metadata accessor for ConditionDetailMapViewModel();
            uint64_t v410 = *(int *)(v409 + 20);
            v581 = (void *)(v324 + v410);
            uint64_t v411 = v325 + v410;
            uint64_t v412 = type metadata accessor for Location();
            uint64_t v413 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v412 - 8) + 16);
            swift_bridgeObjectRetain();
            v413(v581, v411, v412);
            v582 = (int *)v409;
            uint64_t v414 = *(int *)(v409 + 24);
            char v415 = (void *)(v324 + v414);
            uint64_t v416 = (void *)(v325 + v414);
            uint64_t v417 = type metadata accessor for WeatherData(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v416, 1, v417))
            {
              uint64_t v418 = sub_10017DF08(&qword_100E63850);
              memcpy(v415, v416, *(void *)(*(void *)(v418 - 8) + 64));
LABEL_315:
              uint64_t v518 = v582[7];
              uint64_t v519 = (void *)(v324 + v518);
              uint64_t v520 = (void *)(v325 + v518);
              *uint64_t v519 = *v520;
              v519[1] = v520[1];
              uint64_t v521 = v582[8];
              uint64_t v575 = (void *)(v324 + v521);
              uint64_t v522 = v325 + v521;
              uint64_t v523 = type metadata accessor for WeatherMapOverlayKind();
              uint64_t v524 = *(void (**)(void *, uint64_t, uint64_t))(*(void *)(v523 - 8) + 16);
              swift_bridgeObjectRetain();
              v524(v575, v522, v523);
              *(unsigned char *)(v324 + v582[9]) = *(unsigned char *)(v325 + v582[9]);
              swift_storeEnumTagMultiPayload();
              a3 = v610;
              uint64_t v6 = v620;
              goto LABEL_316;
            }
            *char v415 = *v416;
            v415[1] = v416[1];
            v574 = (int *)v417;
            uint64_t v449 = *(int *)(v417 + 20);
            uint64_t v450 = (char *)v415 + v449;
            uint64_t v451 = (char *)v416 + v449;
            uint64_t v452 = type metadata accessor for Locale();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v451, 1, v452))
            {
              uint64_t v453 = sub_10017DF08(&qword_100E63730);
              memcpy(v450, v451, *(void *)(*(void *)(v453 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v452 - 8) + 16))(v450, v451, v452);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v450, 0, 1, v452);
            }
            uint64_t v477 = v574[6];
            uint64_t v478 = (char *)v415 + v477;
            uint64_t v479 = (char *)v416 + v477;
            uint64_t v480 = type metadata accessor for WeatherDataModel();
            uint64_t v481 = v479;
            uint64_t v482 = (uint64_t)v574;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v480 - 8) + 16))(v478, v481, v480);
            uint64_t v483 = v574[7];
            v484 = (char *)v415 + v483;
            v485 = (char *)v416 + v483;
            uint64_t v486 = sub_10017DF08(&qword_100E63738);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v485, 1, v486))
            {
              uint64_t v487 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v484, v485, *(void *)(*(void *)(v487 - 8) + 64));
            }
            else
            {
              uint64_t v492 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v492 - 8) + 16))(v484, v485, v492);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v484, 0, 1, v486);
            }
            uint64_t v493 = v574[8];
            uint64_t v494 = (void *)((char *)v415 + v493);
            int v495 = (void *)((char *)v416 + v493);
            uint64_t v496 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            int v497 = swift_getEnumCaseMultiPayload();
            if (v497 == 1)
            {
              uint64_t v505 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v505 - 8) + 16))(v494, v495, v505);
            }
            else
            {
              if (v497)
              {
                memcpy(v494, v495, *(void *)(*(void *)(v496 - 8) + 64));
                goto LABEL_305;
              }
              *uint64_t v494 = *v495;
              v494[1] = v495[1];
              swift_bridgeObjectRetain();
            }
            swift_storeEnumTagMultiPayload();
LABEL_305:
            uint64_t v506 = v574[9];
            uint64_t v507 = (char *)v415 + v506;
            uint64_t v508 = (char *)v416 + v506;
            uint64_t v509 = type metadata accessor for WeatherDataOverrides();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v508, 1, v509))
            {
              uint64_t v510 = sub_10017DF08(&qword_100E63740);
              memcpy(v507, v508, *(void *)(*(void *)(v510 - 8) + 64));
            }
            else
            {
              uint64_t v511 = type metadata accessor for Date();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v508, 1, v511))
              {
                uint64_t v512 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v507, v508, *(void *)(*(void *)(v512 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v511 - 8) + 16))(v507, v508, v511);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v507, 0, 1, v511);
              }
              uint64_t v513 = *(int *)(v509 + 20);
              uint64_t v514 = (uint64_t)v507;
              uint64_t v515 = &v507[v513];
              uint64_t v516 = &v508[v513];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v516, 1, v511))
              {
                uint64_t v517 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v515, v516, *(void *)(*(void *)(v517 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v511 - 8) + 16))(v515, v516, v511);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v515, 0, 1, v511);
              }
              _s7Weather24LocationCompositionStateOwst_0(v514, 0, 1, v509);
              uint64_t v482 = (uint64_t)v574;
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v415, 0, 1, v482);
            goto LABEL_315;
          default:
            (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v324, v325, v27);
            goto LABEL_316;
        }
      }
    }
    else
    {
      uint64_t v34 = *(void *)(v27 - 8);
      if (!v29)
      {
        (*(void (**)(char *, const void *, uint64_t))(v34 + 24))(v25, v26, v27);
        goto LABEL_17;
      }
      (*(void (**)(char *, uint64_t))(v34 + 8))(v25, v27);
    }
    uint64_t v35 = sub_10017DF08(&qword_100E63758);
    memcpy(v25, v26, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_17;
  }
  if (!v8)
  {
    uint64_t v9 = *(void *)a2;
    uint64_t v10 = *(void *)(a2 + 8);
    unsigned __int8 v11 = *(unsigned char *)(a2 + 16);
    sub_10018F6EC(*(void *)a2, v10, v11);
    *(void *)a1 = v9;
    *((void *)a1 + 1) = v10;
    a1[16] = v11;
    *((void *)a1 + 3) = *(void *)(a2 + 24);
    *((void *)a1 + 4) = *(void *)(a2 + 32);
    uint64_t v12 = v6[6];
    uint64_t v13 = &a1[v12];
    uint64_t v14 = (const void *)(a2 + v12);
    uint64_t v15 = type metadata accessor for WeatherDescription();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
    {
      uint64_t v16 = sub_10017DF08(&qword_100E63758);
      memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
    }
    uint64_t v30 = v6[7];
    uint64_t v31 = &a1[v30];
    uint64_t v32 = (uint64_t *)(a2 + v30);
    uint64_t v33 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(void *)uint64_t v31 = *v32;
        *((void *)v31 + 1) = v32[1];
        swift_bridgeObjectRetain();
        goto LABEL_117;
      case 2u:
        uint64_t v39 = type metadata accessor for AttributedString();
        goto LABEL_28;
      case 3u:
        uint64_t v39 = sub_10017DF08(&qword_100E73808);
        goto LABEL_28;
      case 4u:
        uint64_t v588 = v15;
        if (v32[1])
        {
          *(void *)uint64_t v31 = *v32;
          *((void *)v31 + 1) = v32[1];
          *((void *)v31 + 2) = v32[2];
          *((void *)v31 + 3) = v32[3];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v52 = *((_OWORD *)v32 + 1);
          *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
          *((_OWORD *)v31 + 1) = v52;
        }
        uint64_t v553 = (int *)type metadata accessor for DetailComponentContainerViewModel();
        uint64_t v53 = v553[5];
        uint64_t v563 = &v31[v53];
        uint64_t v54 = (uint64_t *)((char *)v32 + v53);
        uint64_t v55 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v603 = a3;
          *(void *)uint64_t v563 = *v54;
          *((void *)v563 + 1) = v54[1];
          uint64_t v538 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v56 = v538[5];
          __dst = &v563[v56];
          uint64_t v529 = v54;
          uint64_t v57 = (char *)v54 + v56;
          uint64_t v58 = type metadata accessor for URL();
          swift_bridgeObjectRetain();
          v613 = v6;
          uint64_t v584 = v33;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v58))
          {
            uint64_t v59 = sub_10017DF08(&qword_100E749B0);
            memcpy(__dst, v57, *(void *)(*(void *)(v59 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(__dst, v57, v58);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v58);
          }
          uint64_t v83 = v538[6];
          long long v84 = &v563[v83];
          uint64_t v85 = (void *)((char *)v529 + v83);
          *(void *)long long v84 = *v85;
          *((void *)v84 + 1) = v85[1];
          uint64_t v86 = v538[7];
          uint64_t v87 = &v563[v86];
          uint64_t v88 = (char *)v529 + v86;
          uint64_t v89 = *(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16);
          swift_bridgeObjectRetain();
          v89(v87, v88, v58);
          uint64_t v90 = v538[8];
          uint64_t v91 = &v563[v90];
          uint64_t v92 = (char *)v529 + v90;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v529 + v90, 1, v58))
          {
            uint64_t v93 = sub_10017DF08(&qword_100E749B0);
            memcpy(v91, v92, *(void *)(*(void *)(v93 - 8) + 64));
          }
          else
          {
            v89(v91, v92, v58);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v91, 0, 1, v58);
          }
          uint64_t v6 = v613;
          uint64_t v33 = v584;
          uint64_t v60 = v553;
          v563[v538[9]] = *((unsigned char *)v529 + v538[9]);
          swift_storeEnumTagMultiPayload();
          a3 = v603;
        }
        else
        {
          memcpy(v563, v54, *(void *)(*(void *)(v55 - 8) + 64));
          uint64_t v60 = v553;
        }
        uint64_t v94 = v60[6];
        uint64_t v95 = &v31[v94];
        uint64_t v96 = (char *)v32 + v94;
        uint64_t v97 = type metadata accessor for DetailComponentAction();
        uint64_t v15 = v588;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v96, 1, v97))
        {
          uint64_t v98 = sub_10017DF08(&qword_100E73810);
          memcpy(v95, v96, *(void *)(*(void *)(v98 - 8) + 64));
        }
        else
        {
          uint64_t v99 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 16))(v95, v96, v99);
          uint64_t v100 = sub_10017DF08(&qword_100E66478);
          v95[*(int *)(v100 + 48)] = v96[*(int *)(v100 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v95, 0, 1, v97);
        }
        goto LABEL_117;
      case 5u:
        uint64_t v583 = v33;
        uint64_t v576 = a2;
        uint64_t v601 = a3;
        v611 = v6;
        uint64_t v589 = v15;
        v562 = a1;
        if (v32[3])
        {
          uint64_t v40 = *v32;
          uint64_t v41 = v32[1];
          char v42 = *((unsigned char *)v32 + 16);
          sub_100190CC4(*v32, v41, v42);
          *(void *)uint64_t v31 = v40;
          *((void *)v31 + 1) = v41;
          v31[16] = v42;
          *((void *)v31 + 3) = v32[3];
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v61 = *((_OWORD *)v32 + 1);
          *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
          *((_OWORD *)v31 + 1) = v61;
        }
        uint64_t v62 = v32[4];
        uint64_t v63 = v32[5];
        uint64_t v64 = v32[6];
        uint64_t v65 = v32[7];
        uint64_t v67 = v32[8];
        uint64_t v66 = v32[9];
        uint64_t v68 = v32[10];
        char v69 = *((unsigned char *)v32 + 89);
        uint64_t v70 = *((unsigned __int8 *)v32 + 88);
        sub_10033A9E8(v62, v63, v64, v65, v67, v66, v68, v70, v69);
        *((void *)v31 + 4) = v62;
        *((void *)v31 + 5) = v63;
        *((void *)v31 + 6) = v64;
        *((void *)v31 + 7) = v65;
        *((void *)v31 + 8) = v67;
        *((void *)v31 + 9) = v66;
        *((void *)v31 + 10) = v68;
        v31[88] = v70;
        v31[89] = v69;
        a2 = v576;
        a3 = v601;
        uint64_t v6 = v611;
        uint64_t v33 = v583;
        uint64_t v15 = v589;
        a1 = v562;
        goto LABEL_117;
      case 6u:
        uint64_t v39 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_28:
        (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v39 - 8) + 16))(v31, v32, v39);
        goto LABEL_117;
      case 7u:
        uint64_t v590 = v15;
        uint64_t v43 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
        int v44 = swift_getEnumCaseMultiPayload();
        if (v44 != 1)
        {
          if (v44)
          {
            memcpy(v31, v32, *(void *)(*(void *)(v43 - 8) + 64));
          }
          else
          {
            *(void *)uint64_t v31 = *v32;
            *((void *)v31 + 1) = v32[1];
            *((void *)v31 + 2) = v32[2];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_storeEnumTagMultiPayload();
          }
          uint64_t v15 = v590;
LABEL_117:
          swift_storeEnumTagMultiPayload();
          uint64_t v211 = v6[8];
          uint64_t v212 = &a1[v211];
          uint64_t v213 = (char *)(a2 + v211);
          if (_s7Weather24LocationCompositionStateOwet_0(a2 + v211, 1, v33))
          {
            uint64_t v214 = sub_10017DF08(&qword_100E73818);
            memcpy(v212, v213, *(void *)(*(void *)(v214 - 8) + 64));
LABEL_269:
            a1[v6[9]] = *(unsigned char *)(a2 + v6[9]);
            a1[v6[10]] = *(unsigned char *)(a2 + v6[10]);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
            goto LABEL_318;
          }
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              *(void *)uint64_t v212 = *(void *)v213;
              *((void *)v212 + 1) = *((void *)v213 + 1);
              swift_bridgeObjectRetain();
              goto LABEL_268;
            case 2u:
              uint64_t v215 = type metadata accessor for AttributedString();
              goto LABEL_129;
            case 3u:
              uint64_t v215 = sub_10017DF08(&qword_100E73808);
              goto LABEL_129;
            case 4u:
              if (*((void *)v213 + 1))
              {
                *(void *)uint64_t v212 = *(void *)v213;
                *((void *)v212 + 1) = *((void *)v213 + 1);
                *((void *)v212 + 2) = *((void *)v213 + 2);
                *((void *)v212 + 3) = *((void *)v213 + 3);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                long long v221 = *((_OWORD *)v213 + 1);
                *(_OWORD *)uint64_t v212 = *(_OWORD *)v213;
                *((_OWORD *)v212 + 1) = v221;
              }
              uint64_t v567 = (int *)type metadata accessor for DetailComponentContainerViewModel();
              uint64_t v222 = v567[5];
              v593 = &v212[v222];
              uint64_t v223 = &v213[v222];
              uint64_t v224 = type metadata accessor for NewsArticleComponentViewModel(0);
              uint64_t v586 = v33;
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                v617 = v6;
                uint64_t v225 = v593;
                *(void *)v593 = *(void *)v223;
                *((void *)v593 + 1) = *((void *)v223 + 1);
                uint64_t v557 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
                uint64_t v226 = v557[5];
                uint64_t v533 = &v593[v226];
                uint64_t v227 = &v223[v226];
                uint64_t v228 = type metadata accessor for URL();
                swift_bridgeObjectRetain();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v227, 1, v228))
                {
                  uint64_t v229 = sub_10017DF08(&qword_100E749B0);
                  memcpy(v533, v227, *(void *)(*(void *)(v229 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v228 - 8) + 16))(v533, v227, v228);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v533, 0, 1, v228);
                }
                uint64_t v251 = v557[6];
                uint64_t v252 = &v593[v251];
                uint64_t v253 = &v223[v251];
                *(void *)uint64_t v252 = *(void *)v253;
                *((void *)v252 + 1) = *((void *)v253 + 1);
                uint64_t v254 = v557[7];
                v595 = &v593[v254];
                uint64_t v534 = &v223[v254];
                uint64_t v255 = v228;
                uint64_t v256 = *(void (**)(char *, char *, uint64_t))(*(void *)(v228 - 8) + 16);
                swift_bridgeObjectRetain();
                uint64_t v257 = v595;
                v596 = v256;
                v256(v257, v534, v255);
                uint64_t v258 = v255;
                uint64_t v259 = v557[8];
                char v260 = (char *)v225 + v259;
                uint64_t v261 = &v223[v259];
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v223[v259], 1, v258))
                {
                  uint64_t v262 = sub_10017DF08(&qword_100E749B0);
                  memcpy(v260, v261, *(void *)(*(void *)(v262 - 8) + 64));
                }
                else
                {
                  v596(v260, v261, v258);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v260, 0, 1, v258);
                }
                uint64_t v6 = v617;
                uint64_t v230 = v567;
                *((unsigned char *)v225 + v557[9]) = v223[v557[9]];
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(v593, v223, *(void *)(*(void *)(v224 - 8) + 64));
                uint64_t v230 = v567;
              }
              uint64_t v263 = v230[6];
              uint64_t v264 = &v212[v263];
              uint64_t v265 = &v213[v263];
              uint64_t v266 = type metadata accessor for DetailComponentAction();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v265, 1, v266))
              {
                uint64_t v267 = sub_10017DF08(&qword_100E73810);
                memcpy(v264, v265, *(void *)(*(void *)(v267 - 8) + 64));
              }
              else
              {
                uint64_t v268 = type metadata accessor for URL();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v268 - 8) + 16))(v264, v265, v268);
                uint64_t v269 = sub_10017DF08(&qword_100E66478);
                v264[*(int *)(v269 + 48)] = v265[*(int *)(v269 + 48)];
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v264, 0, 1, v266);
              }
              goto LABEL_267;
            case 5u:
              v616 = v6;
              uint64_t v578 = a2;
              uint64_t v605 = a3;
              uint64_t v586 = v33;
              if (*((void *)v213 + 3))
              {
                uint64_t v216 = *(void *)v213;
                uint64_t v217 = *((void *)v213 + 1);
                char v218 = v213[16];
                sub_100190CC4(*(void *)v213, v217, v218);
                *(void *)uint64_t v212 = v216;
                *((void *)v212 + 1) = v217;
                v212[16] = v218;
                *((void *)v212 + 3) = *((void *)v213 + 3);
                swift_bridgeObjectRetain();
              }
              else
              {
                long long v231 = *((_OWORD *)v213 + 1);
                *(_OWORD *)uint64_t v212 = *(_OWORD *)v213;
                *((_OWORD *)v212 + 1) = v231;
              }
              uint64_t v232 = *((void *)v213 + 4);
              uint64_t v233 = *((void *)v213 + 5);
              uint64_t v234 = *((void *)v213 + 6);
              uint64_t v235 = *((void *)v213 + 7);
              uint64_t v237 = *((void *)v213 + 8);
              uint64_t v236 = *((void *)v213 + 9);
              uint64_t v594 = *((void *)v213 + 10);
              char v238 = v213[89];
              uint64_t v239 = v213[88];
              sub_10033A9E8(v232, v233, v234, v235, v237, v236, v594, v239, v238);
              *((void *)v212 + 4) = v232;
              *((void *)v212 + 5) = v233;
              *((void *)v212 + 6) = v234;
              *((void *)v212 + 7) = v235;
              *((void *)v212 + 8) = v237;
              *((void *)v212 + 9) = v236;
              *((void *)v212 + 10) = v594;
              v212[88] = v239;
              v212[89] = v238;
              goto LABEL_266;
            case 6u:
              uint64_t v215 = type metadata accessor for PrecipitationTotalPlatterViewModel();
LABEL_129:
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v215 - 8) + 16))(v212, v213, v215);
              goto LABEL_268;
            case 7u:
              uint64_t v586 = v33;
              uint64_t v219 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
              int v220 = swift_getEnumCaseMultiPayload();
              if (v220 != 1)
              {
                if (v220)
                {
                  memcpy(v212, v213, *(void *)(*(void *)(v219 - 8) + 64));
                }
                else
                {
                  *(void *)uint64_t v212 = *(void *)v213;
                  *((void *)v212 + 1) = *((void *)v213 + 1);
                  *((void *)v212 + 2) = *((void *)v213 + 2);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_storeEnumTagMultiPayload();
                }
                uint64_t v33 = v586;
                goto LABEL_268;
              }
              uint64_t v605 = a3;
              v616 = v6;
              uint64_t v578 = a2;
              *(void *)uint64_t v212 = *(void *)v213;
              *((void *)v212 + 1) = *((void *)v213 + 1);
              uint64_t v240 = type metadata accessor for ConditionDetailMapViewModel();
              uint64_t v241 = *(int *)(v240 + 20);
              uint64_t v242 = &v212[v241];
              long long v243 = &v213[v241];
              uint64_t v244 = type metadata accessor for Location();
              uint64_t v245 = *(void (**)(char *, char *, uint64_t))(*(void *)(v244 - 8) + 16);
              swift_bridgeObjectRetain();
              v245(v242, v243, v244);
              v568 = (int *)v240;
              uint64_t v246 = *(int *)(v240 + 24);
              uint64_t v247 = &v212[v246];
              uint64_t v248 = &v213[v246];
              uint64_t v249 = (int *)type metadata accessor for WeatherData(0);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v248, 1, (uint64_t)v249))
              {
                uint64_t v250 = sub_10017DF08(&qword_100E63850);
                memcpy(v247, v248, *(void *)(*(void *)(v250 - 8) + 64));
                goto LABEL_265;
              }
              *(void *)uint64_t v247 = *(void *)v248;
              *((void *)v247 + 1) = *((void *)v248 + 1);
              uint64_t v270 = v249[5];
              uint64_t v271 = &v247[v270];
              uint64_t v272 = &v248[v270];
              uint64_t v273 = type metadata accessor for Locale();
              swift_bridgeObjectRetain();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v272, 1, v273))
              {
                uint64_t v274 = sub_10017DF08(&qword_100E63730);
                memcpy(v271, v272, *(void *)(*(void *)(v274 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v273 - 8) + 16))(v271, v272, v273);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v271, 0, 1, v273);
              }
              uint64_t v275 = v249[6];
              uint64_t v276 = &v247[v275];
              uint64_t v277 = &v248[v275];
              uint64_t v278 = type metadata accessor for WeatherDataModel();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v278 - 8) + 16))(v276, v277, v278);
              uint64_t v279 = v249[7];
              uint64_t v280 = &v247[v279];
              uint64_t v281 = &v248[v279];
              uint64_t v282 = sub_10017DF08(&qword_100E63738);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v281, 1, v282))
              {
                uint64_t v283 = type metadata accessor for WeatherData.CachingState(0);
                memcpy(v280, v281, *(void *)(*(void *)(v283 - 8) + 64));
              }
              else
              {
                uint64_t v284 = type metadata accessor for Date();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v284 - 8) + 16))(v280, v281, v284);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v280, 0, 1, v282);
              }
              uint64_t v285 = v249[8];
              uint64_t v286 = &v247[v285];
              uint64_t v287 = &v248[v285];
              uint64_t v288 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
              int v289 = swift_getEnumCaseMultiPayload();
              if (v289 == 1)
              {
                uint64_t v299 = type metadata accessor for WeatherStatisticsModel();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v299 - 8) + 16))(v286, v287, v299);
              }
              else
              {
                if (v289)
                {
                  memcpy(v286, v287, *(void *)(*(void *)(v288 - 8) + 64));
LABEL_172:
                  uint64_t v300 = v249[9];
                  uint64_t v301 = &v247[v300];
                  uint64_t v302 = &v248[v300];
                  uint64_t v303 = type metadata accessor for WeatherDataOverrides();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v302, 1, v303))
                  {
                    uint64_t v304 = sub_10017DF08(&qword_100E63740);
                    memcpy(v301, v302, *(void *)(*(void *)(v304 - 8) + 64));
                  }
                  else
                  {
                    uint64_t v305 = type metadata accessor for Date();
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v302, 1, v305))
                    {
                      uint64_t v306 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                      memcpy(v301, v302, *(void *)(*(void *)(v306 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v305 - 8) + 16))(v301, v302, v305);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v301, 0, 1, v305);
                    }
                    uint64_t v311 = *(int *)(v303 + 20);
                    uint64_t v312 = &v301[v311];
                    uint64_t v313 = &v302[v311];
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v313, 1, v305))
                    {
                      uint64_t v314 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                      memcpy(v312, v313, *(void *)(*(void *)(v314 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v305 - 8) + 16))(v312, v313, v305);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v312, 0, 1, v305);
                    }
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v301, 0, 1, v303);
                  }
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v247, 0, 1, (uint64_t)v249);
LABEL_265:
                  uint64_t v441 = v568[7];
                  uint64_t v442 = &v212[v441];
                  uint64_t v443 = &v213[v441];
                  *(void *)uint64_t v442 = *(void *)v443;
                  *((void *)v442 + 1) = *((void *)v443 + 1);
                  uint64_t v444 = v568[8];
                  int v445 = &v212[v444];
                  uint64_t v446 = &v213[v444];
                  uint64_t v447 = type metadata accessor for WeatherMapOverlayKind();
                  uint64_t v448 = *(void (**)(char *, char *, uint64_t))(*(void *)(v447 - 8) + 16);
                  swift_bridgeObjectRetain();
                  v448(v445, v446, v447);
                  v212[v568[9]] = v213[v568[9]];
                  swift_storeEnumTagMultiPayload();
LABEL_266:
                  a2 = v578;
                  a3 = v605;
                  uint64_t v6 = v616;
LABEL_267:
                  uint64_t v33 = v586;
LABEL_268:
                  swift_storeEnumTagMultiPayload();
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v212, 0, 1, v33);
                  goto LABEL_269;
                }
                *(void *)uint64_t v286 = *(void *)v287;
                *((void *)v286 + 1) = *((void *)v287 + 1);
                swift_bridgeObjectRetain();
              }
              swift_storeEnumTagMultiPayload();
              goto LABEL_172;
            default:
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v212, v213, v15);
              goto LABEL_268;
          }
        }
        uint64_t v585 = v33;
        uint64_t v604 = a3;
        v614 = v6;
        uint64_t v577 = a2;
        *(void *)uint64_t v31 = *v32;
        *((void *)v31 + 1) = v32[1];
        uint64_t v71 = type metadata accessor for ConditionDetailMapViewModel();
        uint64_t v72 = *(int *)(v71 + 20);
        uint64_t v73 = &v31[v72];
        uint64_t v74 = (uint64_t)v32 + v72;
        uint64_t v75 = type metadata accessor for Location();
        uint64_t v76 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v75 - 8) + 16);
        uint64_t v548 = v31;
        swift_bridgeObjectRetain();
        v76(v73, v74, v75);
        uint64_t v77 = v31;
        uint64_t v564 = (int *)v71;
        uint64_t v78 = *(int *)(v71 + 24);
        uint64_t v79 = &v31[v78];
        uint64_t v80 = (uint64_t *)((char *)v32 + v78);
        uint64_t v81 = (int *)type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v80, 1, (uint64_t)v81))
        {
          uint64_t v82 = sub_10017DF08(&qword_100E63850);
          memcpy(v79, v80, *(void *)(*(void *)(v82 - 8) + 64));
LABEL_116:
          uint64_t v203 = v564[7];
          uint64_t v204 = (void *)((char *)v77 + v203);
          uint64_t v205 = (uint64_t *)((char *)v32 + v203);
          *uint64_t v204 = *v205;
          v204[1] = v205[1];
          uint64_t v206 = v564[8];
          uint64_t v207 = (char *)v77 + v206;
          uint64_t v208 = (uint64_t)v32 + v206;
          uint64_t v209 = type metadata accessor for WeatherMapOverlayKind();
          uint64_t v210 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v209 - 8) + 16);
          swift_bridgeObjectRetain();
          v210(v207, v208, v209);
          v548[v564[9]] = *((unsigned char *)v32 + v564[9]);
          swift_storeEnumTagMultiPayload();
          a2 = v577;
          a3 = v604;
          uint64_t v6 = v614;
          uint64_t v33 = v585;
          uint64_t v15 = v590;
          goto LABEL_117;
        }
        *(void *)uint64_t v79 = *v80;
        *((void *)v79 + 1) = v80[1];
        uint64_t v134 = v81[5];
        uint64_t v135 = &v79[v134];
        uint64_t v555 = (char *)v80;
        char v136 = (char *)v80 + v134;
        uint64_t v137 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v136, 1, v137))
        {
          uint64_t v138 = sub_10017DF08(&qword_100E63730);
          memcpy(v135, v136, *(void *)(*(void *)(v138 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 16))(v135, v136, v137);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v135, 0, 1, v137);
        }
        uint64_t v162 = v81[6];
        uint64_t v163 = &v79[v162];
        uint64_t v164 = &v555[v162];
        uint64_t v165 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v165 - 8) + 16))(v163, v164, v165);
        uint64_t v166 = v81[7];
        uint64_t v167 = &v79[v166];
        uint64_t v168 = &v555[v166];
        uint64_t v169 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v168, 1, v169))
        {
          uint64_t v170 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v167, v168, *(void *)(*(void *)(v170 - 8) + 64));
        }
        else
        {
          uint64_t v171 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 16))(v167, v168, v171);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v167, 0, 1, v169);
        }
        uint64_t v172 = v81[8];
        uint64_t v173 = &v79[v172];
        uint64_t v174 = &v555[v172];
        uint64_t v175 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int v176 = swift_getEnumCaseMultiPayload();
        if (v176 == 1)
        {
          uint64_t v177 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v177 - 8) + 16))(v173, v174, v177);
        }
        else
        {
          if (v176)
          {
            memcpy(v173, v174, *(void *)(*(void *)(v175 - 8) + 64));
            goto LABEL_99;
          }
          *(void *)uint64_t v173 = *(void *)v174;
          *((void *)v173 + 1) = *((void *)v174 + 1);
          swift_bridgeObjectRetain();
        }
        swift_storeEnumTagMultiPayload();
LABEL_99:
        uint64_t v178 = v81[9];
        uint64_t v179 = &v79[v178];
        uint64_t v180 = &v555[v178];
        uint64_t v181 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v180, 1, v181))
        {
          uint64_t v182 = sub_10017DF08(&qword_100E63740);
          memcpy(v179, v180, *(void *)(*(void *)(v182 - 8) + 64));
        }
        else
        {
          uint64_t v183 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v180, 1, v183))
          {
            uint64_t v184 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v179, v180, *(void *)(*(void *)(v184 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v183 - 8) + 16))(v179, v180, v183);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v179, 0, 1, v183);
          }
          uint64_t v194 = *(int *)(v181 + 20);
          v556 = &v179[v194];
          uint64_t v195 = &v180[v194];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v195, 1, v183))
          {
            uint64_t v196 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v556, v195, *(void *)(*(void *)(v196 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v183 - 8) + 16))(v556, v195, v183);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v556, 0, 1, v183);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v179, 0, 1, v181);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v79, 0, 1, (uint64_t)v81);
        goto LABEL_116;
      default:
        (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v15 - 8) + 16))(v31, v32, v15);
        goto LABEL_117;
    }
  }
LABEL_7:
  uint64_t v17 = type metadata accessor for MonthlyAveragesChartModel();
  memcpy(a1, (const void *)a2, *(void *)(*(void *)(v17 - 8) + 64));
LABEL_318:
  sub_1000C1E18((uint64_t *)&a1[*(int *)(a3 + 20)], (uint64_t *)(a2 + *(int *)(a3 + 20)));
  a1[*(int *)(a3 + 24)] = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100B9B41C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

_OWORD *sub_100B9B474(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6))
  {
    uint64_t v7 = type metadata accessor for MonthlyAveragesChartModel();
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
    *(_OWORD *)((char *)a1 + 24) = *(_OWORD *)((char *)a2 + 24);
    uint64_t v8 = v6[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for WeatherDescription();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_10017DF08(&qword_100E63758);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
    uint64_t v13 = v6[7];
    uint64_t v14 = (_OWORD *)((char *)a1 + v13);
    uint64_t v15 = (_OWORD *)((char *)a2 + v13);
    uint64_t v16 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v11 - 8) + 32))(v14, v15, v11);
        goto LABEL_49;
      case 2u:
        uint64_t v17 = type metadata accessor for AttributedString();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
        goto LABEL_49;
      case 3u:
        uint64_t v18 = sub_10017DF08(&qword_100E73808);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v18 - 8) + 32))(v14, v15, v18);
        goto LABEL_49;
      case 4u:
        __dst = a3;
        uint64_t v195 = (void *)v11;
        long long v19 = v15[1];
        *uint64_t v14 = *v15;
        v14[1] = v19;
        uint64_t v20 = type metadata accessor for DetailComponentContainerViewModel();
        uint64_t v21 = *(int *)(v20 + 20);
        uint64_t v22 = (char *)v14 + v21;
        unsigned __int8 v23 = (char *)v15 + v21;
        uint64_t v24 = type metadata accessor for NewsArticleComponentViewModel(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v169 = (void *)v20;
          uint64_t v199 = v16;
          *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
          uint64_t v187 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v25 = v187[5];
          uint64_t v26 = &v22[v25];
          uint64_t v27 = &v23[v25];
          uint64_t v28 = type metadata accessor for URL();
          uint64_t v181 = v22;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28))
          {
            uint64_t v29 = sub_10017DF08(&qword_100E749B0);
            memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
            uint64_t v30 = *(void *)(v28 - 8);
          }
          else
          {
            uint64_t v43 = *(void *)(v28 - 8);
            (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v26, v27, v28);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
            uint64_t v30 = v43;
          }
          a3 = __dst;
          *(_OWORD *)&v181[v187[6]] = *(_OWORD *)&v23[v187[6]];
          uint64_t v167 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
          v167(&v181[v187[7]], &v23[v187[7]], v28);
          uint64_t v44 = v187[8];
          __dsta = &v181[v44];
          uint64_t v45 = &v23[v44];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v23[v44], 1, v28))
          {
            uint64_t v46 = sub_10017DF08(&qword_100E749B0);
            memcpy(__dsta, v45, *(void *)(*(void *)(v46 - 8) + 64));
          }
          else
          {
            v167(__dsta, v45, v28);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dsta, 0, 1, v28);
          }
          uint64_t v20 = (uint64_t)v169;
          v181[v187[9]] = v23[v187[9]];
          swift_storeEnumTagMultiPayload();
          uint64_t v16 = v199;
        }
        else
        {
          memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
          a3 = __dst;
        }
        uint64_t v51 = *(int *)(v20 + 24);
        long long v52 = (char *)v14 + v51;
        uint64_t v53 = (char *)v15 + v51;
        uint64_t v54 = type metadata accessor for DetailComponentAction();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v53, 1, v54))
        {
          uint64_t v55 = sub_10017DF08(&qword_100E73810);
          memcpy(v52, v53, *(void *)(*(void *)(v55 - 8) + 64));
        }
        else
        {
          uint64_t v56 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32))(v52, v53, v56);
          uint64_t v57 = sub_10017DF08(&qword_100E66478);
          v52[*(int *)(v57 + 48)] = v53[*(int *)(v57 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v52, 0, 1, v54);
        }
        uint64_t v11 = (uint64_t)v195;
        goto LABEL_49;
      case 6u:
        uint64_t v31 = type metadata accessor for PrecipitationTotalPlatterViewModel();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v31 - 8) + 32))(v14, v15, v31);
        goto LABEL_49;
      case 7u:
        uint64_t v32 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v200 = v16;
          *uint64_t v14 = *v15;
          uint64_t v33 = type metadata accessor for ConditionDetailMapViewModel();
          uint64_t v34 = *(int *)(v33 + 20);
          uint64_t v35 = (char *)v14 + v34;
          uint64_t v36 = (char *)v15 + v34;
          uint64_t v37 = type metadata accessor for Location();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
          uint64_t v188 = (int *)v33;
          uint64_t v38 = *(int *)(v33 + 24);
          uint64_t v39 = (_OWORD *)((char *)v14 + v38);
          uint64_t v40 = (_OWORD *)((char *)v15 + v38);
          uint64_t v41 = type metadata accessor for WeatherData(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
          {
            uint64_t v42 = sub_10017DF08(&qword_100E63850);
            memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
          }
          else
          {
            *uint64_t v39 = *v40;
            uint64_t v182 = v39;
            uint64_t v183 = (int *)v41;
            uint64_t v47 = *(int *)(v41 + 20);
            uint64_t v170 = (char *)v39 + v47;
            uint64_t v48 = (char *)v40 + v47;
            uint64_t v49 = type metadata accessor for Locale();
            uint64_t v196 = (void *)v11;
            int v176 = (char *)v40;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v49))
            {
              uint64_t v50 = sub_10017DF08(&qword_100E63730);
              memcpy(v170, v48, *(void *)(*(void *)(v50 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v170, v48, v49);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v170, 0, 1, v49);
            }
            uint64_t v58 = v183[6];
            uint64_t v171 = (char *)v182 + v58;
            uint64_t v59 = (char *)v40 + v58;
            uint64_t v60 = type metadata accessor for WeatherDataModel();
            long long v61 = v59;
            uint64_t v62 = v182;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v171, v61, v60);
            uint64_t v63 = v183[7];
            uint64_t v64 = (char *)v182 + v63;
            uint64_t v65 = &v176[v63];
            uint64_t v66 = sub_10017DF08(&qword_100E63738);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v66))
            {
              uint64_t v67 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v64, v65, *(void *)(*(void *)(v67 - 8) + 64));
            }
            else
            {
              uint64_t v68 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 32))(v64, v65, v68);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v64, 0, 1, v66);
            }
            uint64_t v69 = v183[8];
            uint64_t v172 = (char *)v182 + v69;
            uint64_t v70 = &v176[v69];
            uint64_t v71 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              uint64_t v72 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 32))(v172, v70, v72);
              uint64_t v62 = v182;
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v172, v70, *(void *)(*(void *)(v71 - 8) + 64));
            }
            uint64_t v73 = v183[9];
            uint64_t v74 = (char *)v62 + v73;
            uint64_t v75 = &v176[v73];
            uint64_t v76 = type metadata accessor for WeatherDataOverrides();
            uint64_t v11 = (uint64_t)v196;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v75, 1, v76))
            {
              uint64_t v77 = sub_10017DF08(&qword_100E63740);
              memcpy(v74, v75, *(void *)(*(void *)(v77 - 8) + 64));
              uint64_t v78 = (uint64_t)v182;
            }
            else
            {
              uint64_t v173 = (int *)v76;
              uint64_t v177 = v74;
              uint64_t v79 = type metadata accessor for Date();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v75, 1, v79))
              {
                uint64_t v80 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v74, v75, *(void *)(*(void *)(v80 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v74, v75, v79);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v74, 0, 1, v79);
              }
              uint64_t v81 = v173[5];
              uint64_t v82 = &v74[v81];
              uint64_t v83 = &v75[v81];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v83, 1, v79))
              {
                uint64_t v84 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v82, v83, *(void *)(*(void *)(v84 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v82, v83, v79);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v82, 0, 1, v79);
              }
              uint64_t v78 = (uint64_t)v182;
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v177, 0, 1, (uint64_t)v173);
            }
            _s7Weather24LocationCompositionStateOwst_0(v78, 0, 1, (uint64_t)v183);
          }
          *(_OWORD *)((char *)v14 + v188[7]) = *(_OWORD *)((char *)v15 + v188[7]);
          uint64_t v85 = v188[8];
          uint64_t v86 = (char *)v14 + v85;
          uint64_t v87 = (char *)v15 + v85;
          uint64_t v88 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 32))(v86, v87, v88);
          *((unsigned char *)v14 + v188[9]) = *((unsigned char *)v15 + v188[9]);
          swift_storeEnumTagMultiPayload();
          uint64_t v16 = v200;
        }
        else
        {
          memcpy(v14, v15, *(void *)(*(void *)(v32 - 8) + 64));
        }
LABEL_49:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
        break;
    }
    uint64_t v89 = v6[8];
    uint64_t v90 = (_OWORD *)((char *)a1 + v89);
    uint64_t v91 = (_OWORD *)((char *)a2 + v89);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2 + v89, 1, v16))
    {
      uint64_t v92 = sub_10017DF08(&qword_100E73818);
      memcpy(v90, v91, *(void *)(*(void *)(v92 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v11 - 8) + 32))(v90, v91, v11);
          goto LABEL_96;
        case 2u:
          uint64_t v93 = type metadata accessor for AttributedString();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v93 - 8) + 32))(v90, v91, v93);
          goto LABEL_96;
        case 3u:
          uint64_t v94 = sub_10017DF08(&qword_100E73808);
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v94 - 8) + 32))(v90, v91, v94);
          goto LABEL_96;
        case 4u:
          long long v95 = v91[1];
          *uint64_t v90 = *v91;
          v90[1] = v95;
          uint64_t v96 = type metadata accessor for DetailComponentContainerViewModel();
          uint64_t v97 = *(int *)(v96 + 20);
          uint64_t v197 = (_OWORD *)((char *)v90 + v97);
          uint64_t v98 = (_OWORD *)((char *)v91 + v97);
          uint64_t v99 = type metadata accessor for NewsArticleComponentViewModel(0);
          uint64_t v201 = v16;
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v184 = (void *)v96;
            *uint64_t v197 = *v98;
            uint64_t v189 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
            uint64_t v100 = v189[5];
            long long v101 = (char *)v197 + v100;
            uint64_t v102 = (char *)v98 + v100;
            __dstb = (void *)type metadata accessor for URL();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v102, 1, (uint64_t)__dstb))
            {
              uint64_t v103 = sub_10017DF08(&qword_100E749B0);
              memcpy(v101, v102, *(void *)(*(void *)(v103 - 8) + 64));
              int v104 = (void (**)(void *, const void *, void *))*(__dstb - 1);
            }
            else
            {
              uint64_t v174 = (void (**)(void *, const void *, void *))*(__dstb - 1);
              v174[4](v101, v102, __dstb);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v101, 0, 1, (uint64_t)__dstb);
              int v104 = v174;
            }
            *(_OWORD *)((char *)v197 + v189[6]) = *(_OWORD *)((char *)v98 + v189[6]);
            uint64_t v168 = v104[4];
            v168((char *)v197 + v189[7], (char *)v98 + v189[7], __dstb);
            uint64_t v118 = v189[8];
            uint64_t v175 = (char *)v197 + v118;
            uint64_t v119 = (char *)v98 + v118;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v98 + v118, 1, (uint64_t)__dstb))
            {
              uint64_t v120 = sub_10017DF08(&qword_100E749B0);
              memcpy(v175, v119, *(void *)(*(void *)(v120 - 8) + 64));
            }
            else
            {
              v168(v175, v119, __dstb);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v175, 0, 1, (uint64_t)__dstb);
            }
            *((unsigned char *)v197 + v189[9]) = *((unsigned char *)v98 + v189[9]);
            swift_storeEnumTagMultiPayload();
            uint64_t v96 = (uint64_t)v184;
          }
          else
          {
            memcpy(v197, v98, *(void *)(*(void *)(v99 - 8) + 64));
          }
          uint64_t v125 = *(int *)(v96 + 24);
          uint64_t v126 = (char *)v90 + v125;
          uint64_t v127 = (char *)v91 + v125;
          uint64_t v128 = type metadata accessor for DetailComponentAction();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v127, 1, v128))
          {
            uint64_t v129 = sub_10017DF08(&qword_100E73810);
            memcpy(v126, v127, *(void *)(*(void *)(v129 - 8) + 64));
          }
          else
          {
            uint64_t v130 = type metadata accessor for URL();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 32))(v126, v127, v130);
            uint64_t v131 = sub_10017DF08(&qword_100E66478);
            v126[*(int *)(v131 + 48)] = v127[*(int *)(v131 + 48)];
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v126, 0, 1, v128);
          }
          uint64_t v16 = v201;
          goto LABEL_96;
        case 6u:
          uint64_t v105 = type metadata accessor for PrecipitationTotalPlatterViewModel();
          (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v105 - 8) + 32))(v90, v91, v105);
          goto LABEL_96;
        case 7u:
          uint64_t v202 = v16;
          uint64_t v106 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *uint64_t v90 = *v91;
            uint64_t v107 = type metadata accessor for ConditionDetailMapViewModel();
            uint64_t v108 = *(int *)(v107 + 20);
            uint64_t v109 = (char *)v90 + v108;
            uint64_t v110 = (char *)v91 + v108;
            uint64_t v111 = type metadata accessor for Location();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 32))(v109, v110, v111);
            uint64_t v198 = (int *)v107;
            uint64_t v112 = *(int *)(v107 + 24);
            uint64_t v113 = (_OWORD *)((char *)v90 + v112);
            uint64_t v114 = (_OWORD *)((char *)v91 + v112);
            uint64_t v115 = type metadata accessor for WeatherData(0);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v114, 1, v115))
            {
              uint64_t v116 = sub_10017DF08(&qword_100E63850);
              memcpy(v113, v114, *(void *)(*(void *)(v116 - 8) + 64));
              uint64_t v117 = v198;
            }
            else
            {
              *uint64_t v113 = *v114;
              uint64_t v190 = (int *)v115;
              __dstc = (char *)v113;
              uint64_t v121 = *(int *)(v115 + 20);
              uint64_t v178 = (char *)v113 + v121;
              uint64_t v122 = (char *)v114 + v121;
              uint64_t v123 = type metadata accessor for Locale();
              uint64_t v185 = (char *)v114;
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v122, 1, v123))
              {
                uint64_t v124 = sub_10017DF08(&qword_100E63730);
                memcpy(v178, v122, *(void *)(*(void *)(v124 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 32))(v178, v122, v123);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v178, 0, 1, v123);
              }
              uint64_t v132 = v190[6];
              uint64_t v179 = &__dstc[v132];
              uint64_t v133 = (char *)v114 + v132;
              uint64_t v134 = type metadata accessor for WeatherDataModel();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 32))(v179, v133, v134);
              uint64_t v135 = v190[7];
              char v136 = &__dstc[v135];
              uint64_t v137 = (char *)v114 + v135;
              uint64_t v138 = sub_10017DF08(&qword_100E63738);
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v137, 1, v138))
              {
                uint64_t v139 = type metadata accessor for WeatherData.CachingState(0);
                memcpy(v136, v137, *(void *)(*(void *)(v139 - 8) + 64));
              }
              else
              {
                uint64_t v140 = type metadata accessor for Date();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 32))(v136, v137, v140);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v136, 0, 1, v138);
              }
              uint64_t v141 = v190[8];
              uint64_t v142 = &__dstc[v141];
              uint64_t v143 = &v185[v141];
              uint64_t v144 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                uint64_t v145 = type metadata accessor for WeatherStatisticsModel();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v145 - 8) + 32))(v142, v143, v145);
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(v142, v143, *(void *)(*(void *)(v144 - 8) + 64));
              }
              uint64_t v146 = v190[9];
              int v147 = &__dstc[v146];
              uint64_t v148 = &v185[v146];
              uint64_t v149 = type metadata accessor for WeatherDataOverrides();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v148, 1, v149))
              {
                uint64_t v150 = sub_10017DF08(&qword_100E63740);
                memcpy(v147, v148, *(void *)(*(void *)(v150 - 8) + 64));
                uint64_t v117 = v198;
              }
              else
              {
                uint64_t v180 = (int *)v149;
                uint64_t v186 = v147;
                uint64_t v151 = type metadata accessor for Date();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v148, 1, v151))
                {
                  uint64_t v152 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v147, v148, *(void *)(*(void *)(v152 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 32))(v147, v148, v151);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v147, 0, 1, v151);
                }
                uint64_t v153 = v180[5];
                uint64_t v154 = &v147[v153];
                uint64_t v155 = &v148[v153];
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v155, 1, v151))
                {
                  uint64_t v156 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v154, v155, *(void *)(*(void *)(v156 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 32))(v154, v155, v151);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v154, 0, 1, v151);
                }
                uint64_t v117 = v198;
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v186, 0, 1, (uint64_t)v180);
              }
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstc, 0, 1, (uint64_t)v190);
            }
            *(_OWORD *)((char *)v90 + v117[7]) = *(_OWORD *)((char *)v91 + v117[7]);
            uint64_t v157 = v117[8];
            uint64_t v158 = (char *)v90 + v157;
            uint64_t v159 = (char *)v91 + v157;
            uint64_t v160 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v160 - 8) + 32))(v158, v159, v160);
            *((unsigned char *)v90 + v117[9]) = *((unsigned char *)v91 + v117[9]);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v90, v91, *(void *)(*(void *)(v106 - 8) + 64));
          }
          uint64_t v16 = v202;
LABEL_96:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v90, v91, *(void *)(*(void *)(v16 - 8) + 64));
          break;
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v90, 0, 1, v16);
    }
    *((unsigned char *)a1 + v6[9]) = *((unsigned char *)a2 + v6[9]);
    *((unsigned char *)a1 + v6[10]) = *((unsigned char *)a2 + v6[10]);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  }
  uint64_t v161 = a3[5];
  uint64_t v162 = a3[6];
  uint64_t v163 = (char *)a1 + v161;
  uint64_t v164 = (char *)a2 + v161;
  long long v165 = *((_OWORD *)v164 + 1);
  *(_OWORD *)uint64_t v163 = *(_OWORD *)v164;
  *((_OWORD *)v163 + 1) = v165;
  *((void *)v163 + 4) = *((void *)v164 + 4);
  *((unsigned char *)a1 + v162) = *((unsigned char *)a2 + v162);
  return a1;
}

uint64_t sub_100B9CBC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
  int v7 = _s7Weather24LocationCompositionStateOwet_0(a1, 1, (uint64_t)v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0(a2, 1, (uint64_t)v6);
  if (!v7)
  {
    if (v8)
    {
      sub_100B9B41C(a1, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
      goto LABEL_7;
    }
    char v15 = *(unsigned char *)(a2 + 16);
    uint64_t v16 = *(void *)a1;
    uint64_t v17 = *(void *)(a1 + 8);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    unsigned __int8 v18 = *(unsigned char *)(a1 + 16);
    *(unsigned char *)(a1 + 16) = v15;
    sub_10014D144(v16, v17, v18);
    uint64_t v19 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v19;
    swift_bridgeObjectRelease();
    uint64_t v20 = v6[6];
    uint64_t v21 = (void *)(a1 + v20);
    uint64_t v22 = (const void *)(a2 + v20);
    uint64_t v23 = type metadata accessor for WeatherDescription();
    int v24 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v23);
    int v25 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23);
    if (v24)
    {
      if (!v25)
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v23);
        goto LABEL_17;
      }
    }
    else
    {
      uint64_t v30 = *(void *)(v23 - 8);
      if (!v25)
      {
        (*(void (**)(void *, const void *, uint64_t))(v30 + 40))(v21, v22, v23);
LABEL_17:
        if (a1 != a2)
        {
          uint64_t v32 = v6[7];
          uint64_t v33 = (_OWORD *)(a1 + v32);
          uint64_t v34 = (_OWORD *)(a2 + v32);
          sub_100B9B41C(a1 + v32, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
          uint64_t v457 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v23 - 8) + 32))(v33, v34, v23);
              goto LABEL_144;
            case 2u:
              uint64_t v61 = type metadata accessor for AttributedString();
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v61 - 8) + 32))(v33, v34, v61);
              goto LABEL_144;
            case 3u:
              uint64_t v62 = sub_10017DF08(&qword_100E73808);
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v62 - 8) + 32))(v33, v34, v62);
              goto LABEL_144;
            case 4u:
              uint64_t v468 = a3;
              long long v63 = v34[1];
              *uint64_t v33 = *v34;
              v33[1] = v63;
              uint64_t v64 = type metadata accessor for DetailComponentContainerViewModel();
              uint64_t v65 = *(int *)(v64 + 20);
              uint64_t v66 = (char *)v33 + v65;
              uint64_t v67 = (char *)v34 + v65;
              uint64_t v68 = type metadata accessor for NewsArticleComponentViewModel(0);
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                uint64_t v421 = (void *)v64;
                *(_OWORD *)uint64_t v66 = *(_OWORD *)v67;
                uint64_t v443 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
                uint64_t v69 = v443[5];
                uint64_t v70 = &v66[v69];
                uint64_t v71 = &v67[v69];
                uint64_t v452 = type metadata accessor for URL();
                uint64_t v401 = v34;
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v452))
                {
                  uint64_t v72 = sub_10017DF08(&qword_100E749B0);
                  memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
                  uint64_t v73 = *(void *)(v452 - 8);
                }
                else
                {
                  uint64_t v73 = *(void *)(v452 - 8);
                  (*(void (**)(char *, char *, uint64_t))(v73 + 32))(v70, v71, v452);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v452);
                }
                *(_OWORD *)&v66[v443[6]] = *(_OWORD *)&v67[v443[6]];
                uint64_t v399 = *(void (**)(char *, char *, uint64_t))(v73 + 32);
                v399(&v66[v443[7]], &v67[v443[7]], v452);
                uint64_t v130 = v443[8];
                uint64_t v131 = &v66[v130];
                uint64_t v132 = &v67[v130];
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v67[v130], 1, v452))
                {
                  uint64_t v133 = sub_10017DF08(&qword_100E749B0);
                  memcpy(v131, v132, *(void *)(*(void *)(v133 - 8) + 64));
                }
                else
                {
                  v399(v131, v132, v452);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v131, 0, 1, v452);
                }
                uint64_t v34 = v401;
                v66[v443[9]] = v67[v443[9]];
                swift_storeEnumTagMultiPayload();
                uint64_t v64 = (uint64_t)v421;
              }
              else
              {
                memcpy(v66, v67, *(void *)(*(void *)(v68 - 8) + 64));
              }
              uint64_t v156 = *(int *)(v64 + 24);
              uint64_t v157 = (char *)v33 + v156;
              uint64_t v158 = (char *)v34 + v156;
              uint64_t v159 = type metadata accessor for DetailComponentAction();
              a3 = v468;
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v158, 1, v159))
              {
                uint64_t v160 = sub_10017DF08(&qword_100E73810);
                memcpy(v157, v158, *(void *)(*(void *)(v160 - 8) + 64));
              }
              else
              {
                uint64_t v161 = type metadata accessor for URL();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v161 - 8) + 32))(v157, v158, v161);
                uint64_t v162 = sub_10017DF08(&qword_100E66478);
                v157[*(int *)(v162 + 48)] = v158[*(int *)(v162 + 48)];
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v157, 0, 1, v159);
              }
              goto LABEL_144;
            case 6u:
              uint64_t v74 = type metadata accessor for PrecipitationTotalPlatterViewModel();
              (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v74 - 8) + 32))(v33, v34, v74);
              goto LABEL_144;
            case 7u:
              uint64_t v75 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
              if (swift_getEnumCaseMultiPayload() == 1)
              {
                uint64_t v469 = a3;
                *uint64_t v33 = *v34;
                uint64_t v76 = type metadata accessor for ConditionDetailMapViewModel();
                uint64_t v77 = *(int *)(v76 + 20);
                uint64_t v78 = (char *)v33 + v77;
                uint64_t v79 = (char *)v34 + v77;
                uint64_t v80 = type metadata accessor for Location();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 32))(v78, v79, v80);
                uint64_t v444 = (int *)v76;
                uint64_t v81 = *(int *)(v76 + 24);
                uint64_t v82 = (_OWORD *)((char *)v33 + v81);
                uint64_t v83 = (_OWORD *)((char *)v34 + v81);
                uint64_t v84 = (int *)type metadata accessor for WeatherData(0);
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v83, 1, (uint64_t)v84))
                {
                  uint64_t v85 = sub_10017DF08(&qword_100E63850);
                  memcpy(v82, v83, *(void *)(*(void *)(v85 - 8) + 64));
                  a3 = v469;
                }
                else
                {
                  *uint64_t v82 = *v83;
                  uint64_t v134 = v84[5];
                  uint64_t v422 = (char *)v83;
                  __dstc = (char *)v82;
                  uint64_t v135 = (char *)v82 + v134;
                  char v136 = (char *)v83 + v134;
                  uint64_t v137 = type metadata accessor for Locale();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v136, 1, v137))
                  {
                    uint64_t v138 = sub_10017DF08(&qword_100E63730);
                    memcpy(v135, v136, *(void *)(*(void *)(v138 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 32))(v135, v136, v137);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v135, 0, 1, v137);
                  }
                  uint64_t v184 = v84[6];
                  uint64_t v185 = &__dstc[v184];
                  __srcm = &v422[v184];
                  uint64_t v186 = type metadata accessor for WeatherDataModel();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v186 - 8) + 32))(v185, __srcm, v186);
                  __srce = v84;
                  uint64_t v187 = v84[7];
                  uint64_t v188 = &__dstc[v187];
                  uint64_t v189 = &v422[v187];
                  uint64_t v190 = sub_10017DF08(&qword_100E63738);
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v189, 1, v190))
                  {
                    uint64_t v191 = type metadata accessor for WeatherData.CachingState(0);
                    memcpy(v188, v189, *(void *)(*(void *)(v191 - 8) + 64));
                  }
                  else
                  {
                    uint64_t v205 = type metadata accessor for Date();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v205 - 8) + 32))(v188, v189, v205);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v188, 0, 1, v190);
                  }
                  uint64_t v206 = v84[8];
                  uint64_t v207 = &__dstc[v206];
                  uint64_t v208 = &v422[v206];
                  uint64_t v209 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
                  if (swift_getEnumCaseMultiPayload() == 1)
                  {
                    uint64_t v210 = type metadata accessor for WeatherStatisticsModel();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v210 - 8) + 32))(v207, v208, v210);
                    swift_storeEnumTagMultiPayload();
                  }
                  else
                  {
                    memcpy(v207, v208, *(void *)(*(void *)(v209 - 8) + 64));
                  }
                  uint64_t v211 = v84[9];
                  uint64_t v212 = &__dstc[v211];
                  uint64_t v213 = &v422[v211];
                  uint64_t v214 = type metadata accessor for WeatherDataOverrides();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v213, 1, v214))
                  {
                    uint64_t v215 = sub_10017DF08(&qword_100E63740);
                    memcpy(v212, v213, *(void *)(*(void *)(v215 - 8) + 64));
                    a3 = v469;
                  }
                  else
                  {
                    uint64_t v424 = (int *)v214;
                    uint64_t v233 = type metadata accessor for Date();
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v213, 1, v233))
                    {
                      uint64_t v234 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                      memcpy(v212, v213, *(void *)(*(void *)(v234 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v233 - 8) + 32))(v212, v213, v233);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v212, 0, 1, v233);
                    }
                    uint64_t v237 = v424[5];
                    uint64_t v404 = &v212[v237];
                    char v238 = &v213[v237];
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v238, 1, v233))
                    {
                      uint64_t v239 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                      memcpy(v404, v238, *(void *)(*(void *)(v239 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v233 - 8) + 32))(v404, v238, v233);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v404, 0, 1, v233);
                    }
                    a3 = v469;
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v212, 0, 1, (uint64_t)v424);
                  }
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dstc, 0, 1, (uint64_t)__srce);
                }
                *(_OWORD *)((char *)v33 + v444[7]) = *(_OWORD *)((char *)v34 + v444[7]);
                uint64_t v243 = v444[8];
                uint64_t v244 = (char *)v33 + v243;
                uint64_t v245 = (char *)v34 + v243;
                uint64_t v246 = type metadata accessor for WeatherMapOverlayKind();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v246 - 8) + 32))(v244, v245, v246);
                *((unsigned char *)v33 + v444[9]) = *((unsigned char *)v34 + v444[9]);
                swift_storeEnumTagMultiPayload();
              }
              else
              {
                memcpy(v33, v34, *(void *)(*(void *)(v75 - 8) + 64));
              }
LABEL_144:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v33, v34, *(void *)(*(void *)(v457 - 8) + 64));
              break;
          }
        }
        uint64_t v247 = v6[8];
        uint64_t v248 = (_OWORD *)(a1 + v247);
        uint64_t v249 = (_OWORD *)(a2 + v247);
        uint64_t v250 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
        int v251 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v248, 1, v250);
        int v252 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v249, 1, v250);
        if (v251)
        {
          if (!v252)
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v23 - 8) + 32))(v248, v249, v23);
                goto LABEL_235;
              case 2u:
                uint64_t v254 = type metadata accessor for AttributedString();
                (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v254 - 8) + 32))(v248, v249, v254);
                goto LABEL_235;
              case 3u:
                uint64_t v255 = sub_10017DF08(&qword_100E73808);
                (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v255 - 8) + 32))(v248, v249, v255);
                goto LABEL_235;
              case 4u:
                uint64_t v472 = a3;
                long long v256 = v249[1];
                *uint64_t v248 = *v249;
                v248[1] = v256;
                uint64_t v257 = type metadata accessor for DetailComponentContainerViewModel();
                uint64_t v258 = *(int *)(v257 + 20);
                uint64_t v259 = (_OWORD *)((char *)v248 + v258);
                char v260 = (_OWORD *)((char *)v249 + v258);
                uint64_t v261 = type metadata accessor for NewsArticleComponentViewModel(0);
                if (swift_getEnumCaseMultiPayload() == 1)
                {
                  __dste = (void *)v257;
                  *uint64_t v259 = *v260;
                  uint64_t v455 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
                  uint64_t v262 = v455[5];
                  uint64_t v263 = (char *)v259 + v262;
                  uint64_t v264 = (char *)v260 + v262;
                  uint64_t v462 = type metadata accessor for URL();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v264, 1, v462))
                  {
                    uint64_t v265 = sub_10017DF08(&qword_100E749B0);
                    memcpy(v263, v264, *(void *)(*(void *)(v265 - 8) + 64));
                    uint64_t v266 = *(void (***)(void *, const void *, uint64_t))(v462 - 8);
                  }
                  else
                  {
                    uint64_t v425 = *(void (***)(void *, const void *, uint64_t))(v462 - 8);
                    v425[4](v263, v264, v462);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v263, 0, 1, v462);
                    uint64_t v266 = v425;
                  }
                  *(_OWORD *)((char *)v259 + v455[6]) = *(_OWORD *)((char *)v260 + v455[6]);
                  __srcg = v266[4];
                  __srcg((char *)v259 + v455[7], (char *)v260 + v455[7], v462);
                  uint64_t v304 = v455[8];
                  uint64_t v426 = (char *)v259 + v304;
                  uint64_t v305 = (char *)v260 + v304;
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v260 + v304, 1, v462))
                  {
                    uint64_t v306 = sub_10017DF08(&qword_100E749B0);
                    memcpy(v426, v305, *(void *)(*(void *)(v306 - 8) + 64));
                  }
                  else
                  {
                    __srcg(v426, v305, v462);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v426, 0, 1, v462);
                  }
                  uint64_t v257 = (uint64_t)__dste;
                  *((unsigned char *)v259 + v455[9]) = *((unsigned char *)v260 + v455[9]);
                  swift_storeEnumTagMultiPayload();
                }
                else
                {
                  memcpy(v259, v260, *(void *)(*(void *)(v261 - 8) + 64));
                }
                uint64_t v311 = *(int *)(v257 + 24);
                uint64_t v312 = (char *)v248 + v311;
                uint64_t v313 = (char *)v249 + v311;
                uint64_t v314 = type metadata accessor for DetailComponentAction();
                a3 = v472;
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v313, 1, v314))
                {
                  uint64_t v315 = sub_10017DF08(&qword_100E73810);
                  memcpy(v312, v313, *(void *)(*(void *)(v315 - 8) + 64));
                }
                else
                {
                  uint64_t v316 = type metadata accessor for URL();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v316 - 8) + 32))(v312, v313, v316);
                  uint64_t v317 = sub_10017DF08(&qword_100E66478);
                  v312[*(int *)(v317 + 48)] = v313[*(int *)(v317 + 48)];
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v312, 0, 1, v314);
                }
                goto LABEL_235;
              case 6u:
                uint64_t v267 = type metadata accessor for PrecipitationTotalPlatterViewModel();
                (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v267 - 8) + 32))(v248, v249, v267);
                goto LABEL_235;
              case 7u:
                uint64_t v268 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
                if (swift_getEnumCaseMultiPayload() == 1)
                {
                  uint64_t v473 = a3;
                  *uint64_t v248 = *v249;
                  uint64_t v269 = type metadata accessor for ConditionDetailMapViewModel();
                  uint64_t v270 = *(int *)(v269 + 20);
                  uint64_t v271 = (char *)v248 + v270;
                  uint64_t v272 = (char *)v249 + v270;
                  uint64_t v273 = type metadata accessor for Location();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v273 - 8) + 32))(v271, v272, v273);
                  uint64_t v463 = (int *)v269;
                  uint64_t v274 = *(int *)(v269 + 24);
                  uint64_t v275 = (_OWORD *)((char *)v248 + v274);
                  uint64_t v276 = (_OWORD *)((char *)v249 + v274);
                  uint64_t v277 = type metadata accessor for WeatherData(0);
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v276, 1, v277))
                  {
                    uint64_t v278 = sub_10017DF08(&qword_100E63850);
                    memcpy(v275, v276, *(void *)(*(void *)(v278 - 8) + 64));
                    a3 = v473;
                  }
                  else
                  {
                    _OWORD *v275 = *v276;
                    __dstg = (int *)v277;
                    uint64_t v448 = (char *)v275;
                    uint64_t v307 = *(int *)(v277 + 20);
                    __srch = (char *)v275 + v307;
                    uint64_t v308 = (char *)v276 + v307;
                    uint64_t v309 = type metadata accessor for Locale();
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v308, 1, v309))
                    {
                      uint64_t v310 = sub_10017DF08(&qword_100E63730);
                      memcpy(__srch, v308, *(void *)(*(void *)(v310 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v309 - 8) + 32))(__srch, v308, v309);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)__srch, 0, 1, v309);
                    }
                    uint64_t v329 = __dstg[6];
                    __srcn = &v448[v329];
                    uint64_t v330 = (char *)v276 + v329;
                    uint64_t v331 = type metadata accessor for WeatherDataModel();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v331 - 8) + 32))(__srcn, v330, v331);
                    uint64_t v332 = __dstg[7];
                    char v333 = &v448[v332];
                    uint64_t v334 = (char *)v276 + v332;
                    uint64_t v335 = sub_10017DF08(&qword_100E63738);
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v334, 1, v335))
                    {
                      uint64_t v336 = type metadata accessor for WeatherData.CachingState(0);
                      memcpy(v333, v334, *(void *)(*(void *)(v336 - 8) + 64));
                    }
                    else
                    {
                      uint64_t v344 = type metadata accessor for Date();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v344 - 8) + 32))(v333, v334, v344);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v333, 0, 1, v335);
                    }
                    uint64_t v345 = __dstg[8];
                    uint64_t v346 = &v448[v345];
                    uint64_t v347 = (char *)v276 + v345;
                    uint64_t v348 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
                    if (swift_getEnumCaseMultiPayload() == 1)
                    {
                      uint64_t v349 = type metadata accessor for WeatherStatisticsModel();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v349 - 8) + 32))(v346, v347, v349);
                      swift_storeEnumTagMultiPayload();
                    }
                    else
                    {
                      memcpy(v346, v347, *(void *)(*(void *)(v348 - 8) + 64));
                    }
                    uint64_t v350 = __dstg[9];
                    uint64_t v351 = &v448[v350];
                    uint64_t v352 = (char *)v276 + v350;
                    uint64_t v353 = type metadata accessor for WeatherDataOverrides();
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v352, 1, v353))
                    {
                      uint64_t v354 = sub_10017DF08(&qword_100E63740);
                      memcpy(v351, v352, *(void *)(*(void *)(v354 - 8) + 64));
                      a3 = v473;
                    }
                    else
                    {
                      __srck = (int *)v353;
                      uint64_t v429 = v351;
                      uint64_t v355 = type metadata accessor for Date();
                      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v352, 1, v355))
                      {
                        uint64_t v356 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                        memcpy(v351, v352, *(void *)(*(void *)(v356 - 8) + 64));
                      }
                      else
                      {
                        (*(void (**)(char *, char *, uint64_t))(*(void *)(v355 - 8) + 32))(v351, v352, v355);
                        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v351, 0, 1, v355);
                      }
                      uint64_t v365 = __srck[5];
                      uint64_t v366 = &v351[v365];
                      uint64_t v367 = &v352[v365];
                      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v367, 1, v355))
                      {
                        uint64_t v368 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                        memcpy(v366, v367, *(void *)(*(void *)(v368 - 8) + 64));
                      }
                      else
                      {
                        (*(void (**)(char *, char *, uint64_t))(*(void *)(v355 - 8) + 32))(v366, v367, v355);
                        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v366, 0, 1, v355);
                      }
                      a3 = v473;
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v429, 0, 1, (uint64_t)__srck);
                    }
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v448, 0, 1, (uint64_t)__dstg);
                  }
                  *(_OWORD *)((char *)v248 + v463[7]) = *(_OWORD *)((char *)v249 + v463[7]);
                  uint64_t v380 = v463[8];
                  uint64_t v381 = (char *)v248 + v380;
                  uint64_t v382 = (char *)v249 + v380;
                  uint64_t v383 = type metadata accessor for WeatherMapOverlayKind();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v383 - 8) + 32))(v381, v382, v383);
                  *((unsigned char *)v248 + v463[9]) = *((unsigned char *)v249 + v463[9]);
                  swift_storeEnumTagMultiPayload();
                }
                else
                {
                  memcpy(v248, v249, *(void *)(*(void *)(v268 - 8) + 64));
                }
LABEL_235:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v248, v249, *(void *)(*(void *)(v250 - 8) + 64));
                break;
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v248, 0, 1, v250);
LABEL_247:
            *(unsigned char *)(a1 + v6[9]) = *(unsigned char *)(a2 + v6[9]);
            *(unsigned char *)(a1 + v6[10]) = *(unsigned char *)(a2 + v6[10]);
            goto LABEL_248;
          }
        }
        else
        {
          if (!v252)
          {
            if (a1 != a2)
            {
              sub_100B9B41C((uint64_t)v248, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
              switch(swift_getEnumCaseMultiPayload())
              {
                case 0u:
                  (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v23 - 8) + 32))(v248, v249, v23);
                  break;
                case 2u:
                  uint64_t v279 = type metadata accessor for AttributedString();
                  (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v279 - 8) + 32))(v248, v249, v279);
                  break;
                case 3u:
                  uint64_t v280 = sub_10017DF08(&qword_100E73808);
                  (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v280 - 8) + 32))(v248, v249, v280);
                  break;
                case 4u:
                  uint64_t v474 = a3;
                  long long v281 = v249[1];
                  *uint64_t v248 = *v249;
                  v248[1] = v281;
                  uint64_t v282 = type metadata accessor for DetailComponentContainerViewModel();
                  uint64_t v283 = *(int *)(v282 + 20);
                  uint64_t v284 = (_OWORD *)((char *)v248 + v283);
                  uint64_t v285 = (_OWORD *)((char *)v249 + v283);
                  uint64_t v286 = type metadata accessor for NewsArticleComponentViewModel(0);
                  if (swift_getEnumCaseMultiPayload() == 1)
                  {
                    __dstf = (void *)v282;
                    *uint64_t v284 = *v285;
                    uint64_t v456 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
                    uint64_t v287 = v456[5];
                    uint64_t v288 = (char *)v284 + v287;
                    int v289 = (char *)v285 + v287;
                    uint64_t v464 = type metadata accessor for URL();
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v289, 1, v464))
                    {
                      uint64_t v290 = sub_10017DF08(&qword_100E749B0);
                      memcpy(v288, v289, *(void *)(*(void *)(v290 - 8) + 64));
                      uint64_t v291 = *(void (***)(void *, const void *, uint64_t))(v464 - 8);
                    }
                    else
                    {
                      uint64_t v427 = *(void (***)(void *, const void *, uint64_t))(v464 - 8);
                      v427[4](v288, v289, v464);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v288, 0, 1, v464);
                      uint64_t v291 = v427;
                    }
                    *(_OWORD *)((char *)v284 + v456[6]) = *(_OWORD *)((char *)v285 + v456[6]);
                    __srci = v291[4];
                    __srci((char *)v284 + v456[7], (char *)v285 + v456[7], v464);
                    uint64_t v322 = v456[8];
                    uint64_t v428 = (char *)v284 + v322;
                    uint64_t v323 = (char *)v285 + v322;
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v285 + v322, 1, v464))
                    {
                      uint64_t v324 = sub_10017DF08(&qword_100E749B0);
                      memcpy(v428, v323, *(void *)(*(void *)(v324 - 8) + 64));
                    }
                    else
                    {
                      __srci(v428, v323, v464);
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v428, 0, 1, v464);
                    }
                    uint64_t v282 = (uint64_t)__dstf;
                    *((unsigned char *)v284 + v456[9]) = *((unsigned char *)v285 + v456[9]);
                    swift_storeEnumTagMultiPayload();
                  }
                  else
                  {
                    memcpy(v284, v285, *(void *)(*(void *)(v286 - 8) + 64));
                  }
                  uint64_t v337 = *(int *)(v282 + 24);
                  uint64_t v338 = (char *)v248 + v337;
                  uint64_t v339 = (char *)v249 + v337;
                  uint64_t v340 = type metadata accessor for DetailComponentAction();
                  a3 = v474;
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v339, 1, v340))
                  {
                    uint64_t v341 = sub_10017DF08(&qword_100E73810);
                    memcpy(v338, v339, *(void *)(*(void *)(v341 - 8) + 64));
                  }
                  else
                  {
                    uint64_t v342 = type metadata accessor for URL();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v342 - 8) + 32))(v338, v339, v342);
                    uint64_t v343 = sub_10017DF08(&qword_100E66478);
                    v338[*(int *)(v343 + 48)] = v339[*(int *)(v343 + 48)];
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v338, 0, 1, v340);
                  }
                  break;
                case 6u:
                  uint64_t v292 = type metadata accessor for PrecipitationTotalPlatterViewModel();
                  (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v292 - 8) + 32))(v248, v249, v292);
                  break;
                case 7u:
                  uint64_t v293 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
                  if (swift_getEnumCaseMultiPayload() == 1)
                  {
                    uint64_t v475 = a3;
                    *uint64_t v248 = *v249;
                    uint64_t v294 = type metadata accessor for ConditionDetailMapViewModel();
                    uint64_t v295 = *(int *)(v294 + 20);
                    long long v296 = (char *)v248 + v295;
                    uint64_t v297 = (char *)v249 + v295;
                    uint64_t v298 = type metadata accessor for Location();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v298 - 8) + 32))(v296, v297, v298);
                    uint64_t v465 = (int *)v294;
                    uint64_t v299 = *(int *)(v294 + 24);
                    uint64_t v300 = (_OWORD *)((char *)v248 + v299);
                    uint64_t v301 = (_OWORD *)((char *)v249 + v299);
                    uint64_t v302 = type metadata accessor for WeatherData(0);
                    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v301, 1, v302))
                    {
                      uint64_t v303 = sub_10017DF08(&qword_100E63850);
                      memcpy(v300, v301, *(void *)(*(void *)(v303 - 8) + 64));
                      a3 = v475;
                    }
                    else
                    {
                      _OWORD *v300 = *v301;
                      __dsth = (int *)v302;
                      uint64_t v449 = (char *)v300;
                      uint64_t v325 = *(int *)(v302 + 20);
                      __srcj = (char *)v300 + v325;
                      uint64_t v326 = (char *)v301 + v325;
                      uint64_t v327 = type metadata accessor for Locale();
                      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v326, 1, v327))
                      {
                        uint64_t v328 = sub_10017DF08(&qword_100E63730);
                        memcpy(__srcj, v326, *(void *)(*(void *)(v328 - 8) + 64));
                      }
                      else
                      {
                        (*(void (**)(char *, char *, uint64_t))(*(void *)(v327 - 8) + 32))(__srcj, v326, v327);
                        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__srcj, 0, 1, v327);
                      }
                      uint64_t v357 = __dsth[6];
                      __srco = &v449[v357];
                      uint64_t v358 = (char *)v301 + v357;
                      uint64_t v359 = type metadata accessor for WeatherDataModel();
                      (*(void (**)(char *, char *, uint64_t))(*(void *)(v359 - 8) + 32))(__srco, v358, v359);
                      uint64_t v360 = __dsth[7];
                      uint64_t v361 = &v449[v360];
                      uint64_t v362 = (char *)v301 + v360;
                      uint64_t v363 = sub_10017DF08(&qword_100E63738);
                      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v362, 1, v363))
                      {
                        uint64_t v364 = type metadata accessor for WeatherData.CachingState(0);
                        memcpy(v361, v362, *(void *)(*(void *)(v364 - 8) + 64));
                      }
                      else
                      {
                        uint64_t v369 = type metadata accessor for Date();
                        (*(void (**)(char *, char *, uint64_t))(*(void *)(v369 - 8) + 32))(v361, v362, v369);
                        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v361, 0, 1, v363);
                      }
                      uint64_t v370 = __dsth[8];
                      uint64_t v371 = &v449[v370];
                      uint64_t v372 = (char *)v301 + v370;
                      uint64_t v373 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
                      if (swift_getEnumCaseMultiPayload() == 1)
                      {
                        uint64_t v374 = type metadata accessor for WeatherStatisticsModel();
                        (*(void (**)(char *, char *, uint64_t))(*(void *)(v374 - 8) + 32))(v371, v372, v374);
                        swift_storeEnumTagMultiPayload();
                      }
                      else
                      {
                        memcpy(v371, v372, *(void *)(*(void *)(v373 - 8) + 64));
                      }
                      uint64_t v375 = __dsth[9];
                      unint64_t v376 = &v449[v375];
                      uint64_t v377 = (char *)v301 + v375;
                      uint64_t v378 = type metadata accessor for WeatherDataOverrides();
                      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v377, 1, v378))
                      {
                        uint64_t v379 = sub_10017DF08(&qword_100E63740);
                        memcpy(v376, v377, *(void *)(*(void *)(v379 - 8) + 64));
                      }
                      else
                      {
                        __srcl = (int *)v378;
                        uint64_t v430 = v376;
                        uint64_t v384 = type metadata accessor for Date();
                        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v377, 1, v384))
                        {
                          uint64_t v385 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                          memcpy(v376, v377, *(void *)(*(void *)(v385 - 8) + 64));
                        }
                        else
                        {
                          (*(void (**)(char *, char *, uint64_t))(*(void *)(v384 - 8) + 32))(v376, v377, v384);
                          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v376, 0, 1, v384);
                        }
                        uint64_t v386 = __srcl[5];
                        uint64_t v387 = &v376[v386];
                        uint64_t v388 = &v377[v386];
                        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v388, 1, v384))
                        {
                          uint64_t v389 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                          memcpy(v387, v388, *(void *)(*(void *)(v389 - 8) + 64));
                        }
                        else
                        {
                          (*(void (**)(char *, char *, uint64_t))(*(void *)(v384 - 8) + 32))(v387, v388, v384);
                          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v387, 0, 1, v384);
                        }
                        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v430, 0, 1, (uint64_t)__srcl);
                      }
                      a3 = v475;
                      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v449, 0, 1, (uint64_t)__dsth);
                    }
                    *(_OWORD *)((char *)v248 + v465[7]) = *(_OWORD *)((char *)v249 + v465[7]);
                    uint64_t v390 = v465[8];
                    uint64_t v391 = (char *)v248 + v390;
                    uint64_t v392 = (char *)v249 + v390;
                    uint64_t v393 = type metadata accessor for WeatherMapOverlayKind();
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v393 - 8) + 32))(v391, v392, v393);
                    *((unsigned char *)v248 + v465[9]) = *((unsigned char *)v249 + v465[9]);
                    swift_storeEnumTagMultiPayload();
                  }
                  else
                  {
                    memcpy(v248, v249, *(void *)(*(void *)(v293 - 8) + 64));
                  }
                  break;
                default:
                  size_t v253 = *(void *)(*(void *)(v250 - 8) + 64);
                  goto LABEL_152;
              }
              swift_storeEnumTagMultiPayload();
            }
            goto LABEL_247;
          }
          sub_100B9B41C((uint64_t)v248, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel.Body);
        }
        size_t v253 = *(void *)(*(void *)(sub_10017DF08(&qword_100E73818) - 8) + 64);
LABEL_152:
        memcpy(v248, v249, v253);
        goto LABEL_247;
      }
      (*(void (**)(void *, uint64_t))(v30 + 8))(v21, v23);
    }
    uint64_t v31 = sub_10017DF08(&qword_100E63758);
    memcpy(v21, v22, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_17;
  }
  if (v8)
  {
LABEL_7:
    uint64_t v14 = type metadata accessor for MonthlyAveragesChartModel();
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_248;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v9 = v6[6];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (const void *)(a2 + v9);
  uint64_t v12 = type metadata accessor for WeatherDescription();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
  {
    uint64_t v13 = sub_10017DF08(&qword_100E63758);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
  }
  uint64_t v26 = v6[7];
  uint64_t v27 = (_OWORD *)(a1 + v26);
  uint64_t v28 = (_OWORD *)(a2 + v26);
  uint64_t v29 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v12 - 8) + 32))(v27, v28, v12);
      goto LABEL_55;
    case 2u:
      uint64_t v35 = type metadata accessor for AttributedString();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v35 - 8) + 32))(v27, v28, v35);
      goto LABEL_55;
    case 3u:
      uint64_t v36 = sub_10017DF08(&qword_100E73808);
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v36 - 8) + 32))(v27, v28, v36);
      goto LABEL_55;
    case 4u:
      uint64_t v458 = v12;
      uint64_t v466 = a3;
      long long v37 = v28[1];
      *uint64_t v27 = *v28;
      v27[1] = v37;
      uint64_t v38 = type metadata accessor for DetailComponentContainerViewModel();
      uint64_t v39 = *(int *)(v38 + 20);
      uint64_t v40 = (_OWORD *)((char *)v27 + v39);
      uint64_t v41 = (_OWORD *)((char *)v28 + v39);
      uint64_t v42 = type metadata accessor for NewsArticleComponentViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        __src = (void *)v38;
        uint64_t v450 = v29;
        *uint64_t v40 = *v41;
        uint64_t v441 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
        uint64_t v43 = v441[5];
        uint64_t v44 = (char *)v40 + v43;
        uint64_t v45 = (char *)v41 + v43;
        uint64_t v46 = type metadata accessor for URL();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v46))
        {
          uint64_t v47 = sub_10017DF08(&qword_100E749B0);
          memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
          uint64_t v48 = *(void (***)(void *, const void *, uint64_t))(v46 - 8);
        }
        else
        {
          __dsti = *(void (***)(void *, const void *, uint64_t))(v46 - 8);
          __dsti[4](v44, v45, v46);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v46);
          uint64_t v48 = __dsti;
        }
        *(_OWORD *)((char *)v40 + v441[6]) = *(_OWORD *)((char *)v41 + v441[6]);
        uint64_t v403 = v48[4];
        v403((char *)v40 + v441[7], (char *)v41 + v441[7], v46);
        uint64_t v86 = v441[8];
        __dst = (char *)v40 + v86;
        uint64_t v87 = (char *)v41 + v86;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41 + v86, 1, v46))
        {
          uint64_t v88 = sub_10017DF08(&qword_100E749B0);
          memcpy(__dst, v87, *(void *)(*(void *)(v88 - 8) + 64));
        }
        else
        {
          v403(__dst, v87, v46);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v46);
        }
        uint64_t v29 = v450;
        uint64_t v38 = (uint64_t)__src;
        *((unsigned char *)v40 + v441[9]) = *((unsigned char *)v41 + v441[9]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
      }
      uint64_t v93 = *(int *)(v38 + 24);
      uint64_t v94 = (char *)v27 + v93;
      long long v95 = (char *)v28 + v93;
      uint64_t v96 = type metadata accessor for DetailComponentAction();
      uint64_t v12 = v458;
      a3 = v466;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, v96))
      {
        uint64_t v97 = sub_10017DF08(&qword_100E73810);
        memcpy(v94, v95, *(void *)(*(void *)(v97 - 8) + 64));
      }
      else
      {
        uint64_t v98 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 32))(v94, v95, v98);
        uint64_t v99 = sub_10017DF08(&qword_100E66478);
        v94[*(int *)(v99 + 48)] = v95[*(int *)(v99 + 48)];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v94, 0, 1, v96);
      }
      goto LABEL_55;
    case 6u:
      uint64_t v49 = type metadata accessor for PrecipitationTotalPlatterViewModel();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v49 - 8) + 32))(v27, v28, v49);
LABEL_55:
      swift_storeEnumTagMultiPayload();
      break;
    case 7u:
      uint64_t v459 = v12;
      uint64_t v50 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v451 = v29;
        uint64_t v467 = a3;
        *uint64_t v27 = *v28;
        uint64_t v51 = type metadata accessor for ConditionDetailMapViewModel();
        uint64_t v52 = *(int *)(v51 + 20);
        uint64_t v53 = (char *)v27 + v52;
        uint64_t v54 = (char *)v28 + v52;
        uint64_t v55 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
        uint64_t v442 = (int *)v51;
        uint64_t v56 = *(int *)(v51 + 24);
        uint64_t v57 = (_OWORD *)((char *)v27 + v56);
        uint64_t v58 = (_OWORD *)((char *)v28 + v56);
        uint64_t v59 = (int *)type metadata accessor for WeatherData(0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v58, 1, (uint64_t)v59))
        {
          uint64_t v60 = sub_10017DF08(&qword_100E63850);
          memcpy(v57, v58, *(void *)(*(void *)(v60 - 8) + 64));
        }
        else
        {
          *uint64_t v57 = *v58;
          uint64_t v89 = v59[5];
          __dsta = (char *)v57;
          __srca = (char *)v57 + v89;
          uint64_t v90 = (char *)v58 + v89;
          uint64_t v91 = type metadata accessor for Locale();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v90, 1, v91))
          {
            uint64_t v92 = sub_10017DF08(&qword_100E63730);
            memcpy(__srca, v90, *(void *)(*(void *)(v92 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 32))(__srca, v90, v91);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__srca, 0, 1, v91);
          }
          uint64_t v139 = v59[6];
          uint64_t v140 = &__dsta[v139];
          uint64_t v141 = (char *)v58 + v139;
          uint64_t v142 = type metadata accessor for WeatherDataModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 32))(v140, v141, v142);
          uint64_t v423 = v59;
          uint64_t v143 = v59[7];
          uint64_t v144 = &__dsta[v143];
          uint64_t v145 = (char *)v58 + v143;
          uint64_t v146 = sub_10017DF08(&qword_100E63738);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v145, 1, v146))
          {
            uint64_t v147 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v144, v145, *(void *)(*(void *)(v147 - 8) + 64));
          }
          else
          {
            uint64_t v163 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v163 - 8) + 32))(v144, v145, v163);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v144, 0, 1, v146);
          }
          uint64_t v164 = v423[8];
          __srcc = &__dsta[v164];
          long long v165 = (char *)v58 + v164;
          uint64_t v166 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v167 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v167 - 8) + 32))(__srcc, v165, v167);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(__srcc, v165, *(void *)(*(void *)(v166 - 8) + 64));
          }
          uint64_t v168 = v423[9];
          uint64_t v169 = (uint64_t)__dsta;
          uint64_t v170 = &__dsta[v168];
          uint64_t v171 = (char *)v58 + v168;
          uint64_t v172 = type metadata accessor for WeatherDataOverrides();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v171, 1, v172))
          {
            uint64_t v173 = sub_10017DF08(&qword_100E63740);
            memcpy(v170, v171, *(void *)(*(void *)(v173 - 8) + 64));
            uint64_t v174 = (uint64_t)v423;
          }
          else
          {
            __srcd = v170;
            uint64_t v182 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v171, 1, v182))
            {
              uint64_t v183 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v170, v171, *(void *)(*(void *)(v183 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 32))(v170, v171, v182);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v170, 0, 1, v182);
            }
            uint64_t v201 = *(int *)(v172 + 20);
            uint64_t v202 = &v170[v201];
            uint64_t v203 = &v171[v201];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v203, 1, v182))
            {
              uint64_t v204 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v202, v203, *(void *)(*(void *)(v204 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 32))(v202, v203, v182);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v202, 0, 1, v182);
            }
            uint64_t v174 = (uint64_t)v423;
            uint64_t v169 = (uint64_t)__dsta;
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)__srcd, 0, 1, v172);
          }
          _s7Weather24LocationCompositionStateOwst_0(v169, 0, 1, v174);
        }
        a3 = v467;
        *(_OWORD *)((char *)v27 + v442[7]) = *(_OWORD *)((char *)v28 + v442[7]);
        uint64_t v229 = v442[8];
        uint64_t v230 = (char *)v27 + v229;
        long long v231 = (char *)v28 + v229;
        uint64_t v232 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v232 - 8) + 32))(v230, v231, v232);
        *((unsigned char *)v27 + v442[9]) = *((unsigned char *)v28 + v442[9]);
        swift_storeEnumTagMultiPayload();
        uint64_t v29 = v451;
      }
      else
      {
        memcpy(v27, v28, *(void *)(*(void *)(v50 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v12 = v459;
      break;
    default:
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
      break;
  }
  uint64_t v100 = v6[8];
  long long v101 = (_OWORD *)(a1 + v100);
  uint64_t v102 = (_OWORD *)(a2 + v100);
  if (_s7Weather24LocationCompositionStateOwet_0(a2 + v100, 1, v29))
  {
    uint64_t v103 = sub_10017DF08(&qword_100E73818);
    memcpy(v101, v102, *(void *)(*(void *)(v103 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v12 - 8) + 32))(v101, v102, v12);
        goto LABEL_195;
      case 2u:
        uint64_t v104 = type metadata accessor for AttributedString();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v104 - 8) + 32))(v101, v102, v104);
        goto LABEL_195;
      case 3u:
        uint64_t v105 = sub_10017DF08(&qword_100E73808);
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v105 - 8) + 32))(v101, v102, v105);
        goto LABEL_195;
      case 4u:
        uint64_t v470 = a3;
        long long v106 = v102[1];
        *long long v101 = *v102;
        v101[1] = v106;
        uint64_t v107 = type metadata accessor for DetailComponentContainerViewModel();
        uint64_t v108 = *(int *)(v107 + 20);
        uint64_t v109 = (_OWORD *)((char *)v101 + v108);
        uint64_t v110 = (_OWORD *)((char *)v102 + v108);
        uint64_t v111 = type metadata accessor for NewsArticleComponentViewModel(0);
        uint64_t v453 = v29;
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          __dstb = (void *)v107;
          *uint64_t v109 = *v110;
          long long v460 = (int *)type metadata accessor for NewsArticleComponentContentViewModel(0);
          uint64_t v112 = v460[5];
          uint64_t v113 = (char *)v109 + v112;
          uint64_t v114 = (char *)v110 + v112;
          uint64_t v115 = type metadata accessor for URL();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v114, 1, v115))
          {
            uint64_t v116 = sub_10017DF08(&qword_100E749B0);
            memcpy(v113, v114, *(void *)(*(void *)(v116 - 8) + 64));
            uint64_t v117 = *(void (***)(void *, const void *, uint64_t))(v115 - 8);
          }
          else
          {
            int v445 = *(void (***)(void *, const void *, uint64_t))(v115 - 8);
            v445[4](v113, v114, v115);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v113, 0, 1, v115);
            uint64_t v117 = v445;
          }
          *(_OWORD *)((char *)v109 + v460[6]) = *(_OWORD *)((char *)v110 + v460[6]);
          __srcb = v117[4];
          __srcb((char *)v109 + v460[7], (char *)v110 + v460[7], v115);
          uint64_t v148 = v460[8];
          uint64_t v446 = (char *)v109 + v148;
          uint64_t v149 = (char *)v110 + v148;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v110 + v148, 1, v115))
          {
            uint64_t v150 = sub_10017DF08(&qword_100E749B0);
            memcpy(v446, v149, *(void *)(*(void *)(v150 - 8) + 64));
          }
          else
          {
            __srcb(v446, v149, v115);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v446, 0, 1, v115);
          }
          *((unsigned char *)v109 + v460[9]) = *((unsigned char *)v110 + v460[9]);
          swift_storeEnumTagMultiPayload();
          uint64_t v107 = (uint64_t)__dstb;
        }
        else
        {
          memcpy(v109, v110, *(void *)(*(void *)(v111 - 8) + 64));
        }
        uint64_t v175 = *(int *)(v107 + 24);
        int v176 = (char *)v101 + v175;
        uint64_t v177 = (char *)v102 + v175;
        uint64_t v178 = type metadata accessor for DetailComponentAction();
        a3 = v470;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v177, 1, v178))
        {
          uint64_t v179 = sub_10017DF08(&qword_100E73810);
          memcpy(v176, v177, *(void *)(*(void *)(v179 - 8) + 64));
        }
        else
        {
          uint64_t v180 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v180 - 8) + 32))(v176, v177, v180);
          uint64_t v181 = sub_10017DF08(&qword_100E66478);
          v176[*(int *)(v181 + 48)] = v177[*(int *)(v181 + 48)];
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v176, 0, 1, v178);
        }
        uint64_t v29 = v453;
        goto LABEL_195;
      case 6u:
        uint64_t v118 = type metadata accessor for PrecipitationTotalPlatterViewModel();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(void *)(v118 - 8) + 32))(v101, v102, v118);
        goto LABEL_195;
      case 7u:
        uint64_t v454 = v29;
        uint64_t v119 = type metadata accessor for ConditionDetailDynamicContentIdentifier();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v471 = a3;
          *long long v101 = *v102;
          uint64_t v120 = (int *)type metadata accessor for ConditionDetailMapViewModel();
          uint64_t v121 = v120[5];
          uint64_t v122 = (char *)v101 + v121;
          uint64_t v123 = (char *)v102 + v121;
          uint64_t v124 = type metadata accessor for Location();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 32))(v122, v123, v124);
          uint64_t v125 = v120[6];
          uint64_t v126 = (_OWORD *)((char *)v101 + v125);
          uint64_t v127 = (_OWORD *)((char *)v102 + v125);
          uint64_t v128 = type metadata accessor for WeatherData(0);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v127, 1, v128))
          {
            uint64_t v129 = sub_10017DF08(&qword_100E63850);
            memcpy(v126, v127, *(void *)(*(void *)(v129 - 8) + 64));
          }
          else
          {
            char __dstd = v120;
            uint64_t v447 = (char *)v126;
            *uint64_t v126 = *v127;
            uint64_t v461 = (int *)v128;
            uint64_t v151 = *(int *)(v128 + 20);
            uint64_t v152 = (char *)v126 + v151;
            uint64_t v153 = (char *)v127 + v151;
            uint64_t v154 = type metadata accessor for Locale();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v153, 1, v154))
            {
              uint64_t v155 = sub_10017DF08(&qword_100E63730);
              memcpy(v152, v153, *(void *)(*(void *)(v155 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v154 - 8) + 32))(v152, v153, v154);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v152, 0, 1, v154);
            }
            uint64_t v192 = v461[6];
            uint64_t v193 = &v447[v192];
            uint64_t v194 = (char *)v127 + v192;
            uint64_t v195 = type metadata accessor for WeatherDataModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v195 - 8) + 32))(v193, v194, v195);
            uint64_t v196 = v461[7];
            uint64_t v197 = &v447[v196];
            uint64_t v198 = (char *)v127 + v196;
            uint64_t v199 = sub_10017DF08(&qword_100E63738);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v198, 1, v199))
            {
              uint64_t v200 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v197, v198, *(void *)(*(void *)(v200 - 8) + 64));
            }
            else
            {
              uint64_t v216 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v216 - 8) + 32))(v197, v198, v216);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v197, 0, 1, v199);
            }
            uint64_t v217 = v461[8];
            char v218 = &v447[v217];
            uint64_t v219 = (char *)v127 + v217;
            uint64_t v220 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              uint64_t v221 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v221 - 8) + 32))(v218, v219, v221);
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              memcpy(v218, v219, *(void *)(*(void *)(v220 - 8) + 64));
            }
            uint64_t v222 = v461[9];
            uint64_t v223 = (uint64_t)v447;
            uint64_t v224 = &v447[v222];
            uint64_t v225 = (uint64_t)v127 + v222;
            uint64_t v226 = type metadata accessor for WeatherDataOverrides();
            __srcf = (char *)v225;
            int v227 = _s7Weather24LocationCompositionStateOwet_0(v225, 1, v226);
            uint64_t v120 = __dstd;
            if (v227)
            {
              uint64_t v228 = sub_10017DF08(&qword_100E63740);
              memcpy(v224, __srcf, *(void *)(*(void *)(v228 - 8) + 64));
            }
            else
            {
              uint64_t v402 = v224;
              uint64_t v235 = type metadata accessor for Date();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)__srcf, 1, v235))
              {
                uint64_t v236 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v224, __srcf, *(void *)(*(void *)(v236 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v235 - 8) + 32))(v224, __srcf, v235);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v224, 0, 1, v235);
              }
              uint64_t v240 = *(int *)(v226 + 20);
              long long v400 = &v224[v240];
              uint64_t v241 = &__srcf[v240];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&__srcf[v240], 1, v235))
              {
                uint64_t v242 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v400, v241, *(void *)(*(void *)(v242 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v235 - 8) + 32))(v400, v241, v235);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v400, 0, 1, v235);
              }
              uint64_t v223 = (uint64_t)v447;
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v402, 0, 1, v226);
            }
            _s7Weather24LocationCompositionStateOwst_0(v223, 0, 1, (uint64_t)v461);
          }
          a3 = v471;
          *(_OWORD *)((char *)v101 + v120[7]) = *(_OWORD *)((char *)v102 + v120[7]);
          uint64_t v318 = v120[8];
          uint64_t v319 = (char *)v101 + v318;
          uint64_t v320 = (char *)v102 + v318;
          uint64_t v321 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v321 - 8) + 32))(v319, v320, v321);
          *((unsigned char *)v101 + v120[9]) = *((unsigned char *)v102 + v120[9]);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v101, v102, *(void *)(*(void *)(v119 - 8) + 64));
        }
        uint64_t v29 = v454;
LABEL_195:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v101, v102, *(void *)(*(void *)(v29 - 8) + 64));
        break;
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v101, 0, 1, v29);
  }
  *(unsigned char *)(a1 + v6[9]) = *(unsigned char *)(a2 + v6[9]);
  *(unsigned char *)(a1 + v6[10]) = *(unsigned char *)(a2 + v6[10]);
  _s7Weather24LocationCompositionStateOwst_0(a1, 0, 1, (uint64_t)v6);
LABEL_248:
  uint64_t v394 = *(int *)(a3 + 20);
  uint64_t v395 = a1 + v394;
  uint64_t v396 = a2 + v394;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + v394);
  long long v397 = *(_OWORD *)(v396 + 16);
  *(_OWORD *)uint64_t v395 = *(_OWORD *)v396;
  *(_OWORD *)(v395 + 16) = v397;
  *(void *)(v395 + 32) = *(void *)(v396 + 32);
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100BA04D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BA04E8);
}

uint64_t sub_100BA04E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for MonthlyAveragesChartModel();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_100BA0578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BA058C);
}

void sub_100BA058C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for MonthlyAveragesChartModel();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
}

uint64_t type metadata accessor for MonthlyAveragesChart()
{
  uint64_t result = qword_100EB5128;
  if (!qword_100EB5128) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100BA0660()
{
  uint64_t result = type metadata accessor for MonthlyAveragesChartModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100BA0700()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100BA071C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (int *)sub_10017DF08(&qword_100E66E38);
  sub_100162E4C();
  __chkstk_darwin(v4);
  uint64_t v6 = &v33[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v36 = &v33[-v8];
  uint64_t v9 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  sub_100162E4C();
  __chkstk_darwin(v10);
  uint64_t v12 = &v33[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  char v15 = &v33[-v14];
  sub_10017DF08(&qword_100EB5168);
  sub_100162E4C();
  __chkstk_darwin(v16);
  unsigned __int8 v18 = &v33[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = type metadata accessor for MonthlyAveragesChartModel();
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = &v33[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100BA0AC8(v1, (uint64_t)v21, (void (*)(void))type metadata accessor for MonthlyAveragesChartModel);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v9) == 1)
  {
    swift_storeEnumTagMultiPayload();
    sub_100BA0B90();
    return _ConditionalContent<>.init(storage:)();
  }
  else
  {
    sub_1003F4FF4((uint64_t)v21, (uint64_t)v15);
    sub_100BA0AC8((uint64_t)v15, (uint64_t)v12, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    uint64_t v23 = type metadata accessor for MonthlyAveragesChart();
    uint64_t v24 = *(int *)(v23 + 20);
    int v34 = *(unsigned __int8 *)(v1 + *(int *)(v23 + 24));
    int v25 = (void *)(v1 + v24);
    uint64_t v35 = a1;
    uint64_t v26 = *(void *)(v1 + v24 + 24);
    uint64_t v27 = v25[4];
    uint64_t v28 = sub_1001B1E64(v25, v26);
    v37[3] = v26;
    v37[4] = *(void *)(v27 + 8);
    uint64_t v29 = sub_100170694(v37);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v29, v28, v26);
    sub_100BA0AC8((uint64_t)v12, (uint64_t)v6, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    sub_10020D948((uint64_t)v37, (uint64_t)&v6[v3[10]]);
    v6[v3[9]] = v34;
    uint64_t v30 = &v6[v3[11]];
    void *v30 = 0;
    v30[1] = 0;
    uint64_t v31 = v3[12];
    swift_beginAccess();
    *(double *)&v6[v31] = sub_100592380();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v37);
    sub_100B9B41C((uint64_t)v12, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    uint64_t v32 = v36;
    sub_1002B7594((uint64_t)v6, (uint64_t)v36);
    sub_100BA0B28((uint64_t)v32, (uint64_t)v18);
    swift_storeEnumTagMultiPayload();
    sub_100BA0B90();
    _ConditionalContent<>.init(storage:)();
    sub_100BA0BE4((uint64_t)v32);
    return sub_100B9B41C((uint64_t)v15, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
  }
}

uint64_t sub_100BA0AC8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_100BA0B28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E66E38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100BA0B90()
{
  unint64_t result = qword_100E87EE0;
  if (!qword_100E87EE0)
  {
    sub_10018C6DC(&qword_100E66E38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E87EE0);
  }
  return result;
}

uint64_t sub_100BA0BE4(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E66E38);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100BA0C48()
{
  unint64_t result = qword_100EB5170;
  if (!qword_100EB5170)
  {
    sub_10018C6DC(&qword_100EB5178);
    sub_100BA0B90();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB5170);
  }
  return result;
}

uint64_t destroy for HumidityComponentView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_10018F6D8(*(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  uint64_t v2 = *(void *)(a1 + 40);
  char v3 = *(unsigned char *)(a1 + 48);

  return sub_10018F6D8(v2, v3);
}

uint64_t initializeWithCopy for HumidityComponentView(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_100195B7C(v4, v5);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  uint64_t v6 = *(void *)(v2 + 40);
  LOBYTE(v2) = *(unsigned char *)(v2 + 48);
  sub_100195B7C(v6, v2);
  *(void *)(a1 + 40) = v6;
  *(unsigned char *)(a1 + 48) = v2;
  return a1;
}

uint64_t assignWithCopy for HumidityComponentView(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = v2[3];
  char v5 = *((unsigned char *)v2 + 32);
  sub_100195B7C(v4, v5);
  uint64_t v6 = *(void *)(a1 + 24);
  char v7 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  sub_10018F6D8(v6, v7);
  uint64_t v8 = v2[5];
  LOBYTE(v2) = *((unsigned char *)v2 + 48);
  sub_100195B7C(v8, (char)v2);
  uint64_t v9 = *(void *)(a1 + 40);
  char v10 = *(unsigned char *)(a1 + 48);
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = (_BYTE)v2;
  sub_10018F6D8(v9, v10);
  return a1;
}

uint64_t assignWithTake for HumidityComponentView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  char v5 = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(void *)(a1 + 24);
  char v7 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v5;
  sub_10018F6D8(v6, v7);
  char v8 = *(unsigned char *)(a2 + 48);
  uint64_t v9 = *(void *)(a1 + 40);
  char v10 = *(unsigned char *)(a1 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = v8;
  sub_10018F6D8(v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for HumidityComponentView(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 49))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 16);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HumidityComponentView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_100BA0F38()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100BA0F54()
{
  uint64_t v39 = type metadata accessor for AutomationInfo(0);
  __chkstk_darwin(v39);
  sub_100109314();
  uint64_t v38 = v1;
  type metadata accessor for AccessibilityChildBehavior();
  sub_100179C0C();
  uint64_t v34 = v3;
  uint64_t v35 = v2;
  __chkstk_darwin(v2);
  sub_100109314();
  uint64_t v32 = v4;
  sub_10017DF08(&qword_100E98D38);
  sub_100179C0C();
  uint64_t v36 = v5;
  uint64_t v37 = v6;
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v31 = v7;
  uint64_t v8 = sub_10017DF08(&qword_100E7A060);
  __chkstk_darwin(v8 - 8);
  sub_100109314();
  uint64_t v33 = v9;
  uint64_t v30 = static VerticalAlignment.center.getter();
  uint64_t v10 = static HorizontalAlignment.leading.getter();
  sub_100BA1384(v0, v68);
  uint64_t v28 = v68[7];
  uint64_t v29 = v68[3];
  uint64_t v26 = v68[10];
  uint64_t v27 = v68[8];
  uint64_t v24 = v68[12];
  uint64_t v25 = v68[11];
  LODWORD(v23) = BYTE2(v68[13]);
  HIDWORD(v23) = BYTE1(v68[13]);
  char v45 = 0;
  char v44 = v68[2];
  char v43 = v68[6];
  char v42 = v68[9];
  char v41 = v68[13];
  v46[0] = v10;
  v46[1] = 0;
  LOBYTE(v46[2]) = 0;
  v46[3] = v68[0];
  void v46[4] = v68[1];
  LOBYTE(v46[5]) = v68[2];
  v46[6] = v68[3];
  v46[7] = v68[4];
  v46[8] = v68[5];
  LOBYTE(v46[9]) = v68[6];
  v46[10] = v68[7];
  v46[11] = v68[8];
  LOBYTE(v46[12]) = v68[9];
  v46[13] = v68[10];
  v46[14] = v68[11];
  v46[15] = v68[12];
  LOWORD(v46[16]) = v68[13];
  BYTE2(v46[16]) = BYTE2(v68[13]);
  v46[17] = 0x3FF0000000000000;
  memcpy(v48, v46, sizeof(v48));
  char v47 = 0;
  v49[0] = v10;
  v49[1] = 0;
  char v50 = 0;
  uint64_t v51 = v68[0];
  uint64_t v52 = v68[1];
  char v53 = v68[2];
  uint64_t v54 = v68[3];
  uint64_t v55 = v68[4];
  uint64_t v56 = v68[5];
  char v57 = v68[6];
  uint64_t v58 = v68[7];
  uint64_t v59 = v68[8];
  char v60 = v68[9];
  uint64_t v61 = v68[10];
  uint64_t v62 = v68[11];
  uint64_t v63 = v68[12];
  __int16 v64 = v68[13];
  char v65 = BYTE2(v68[13]);
  uint64_t v66 = 0x3FF0000000000000;
  sub_100811CCC((uint64_t)v46);
  sub_100811D50((uint64_t)v49);
  v67[151] = 0;
  memcpy(&v67[7], v48, 0x90uLL);
  memcpy((char *)&v40[2] + 1, v67, 0x97uLL);
  v40[0] = v30;
  v40[1] = 0;
  LOBYTE(v40[2]) = 0;
  v40[21] = 0;
  LOBYTE(v40[22]) = 0;
  static AccessibilityChildBehavior.combine.getter();
  uint64_t v11 = sub_10017DF08(&qword_100E98D40);
  unint64_t v12 = sub_100811DD4();
  View.accessibilityElement(children:)();
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v32, v35);
  memcpy(v68, v40, 0xB1uLL);
  sub_100811E28((uint64_t)v68);
  v40[0] = v11;
  v40[1] = v12;
  swift_getOpaqueTypeConformance2();
  uint64_t v13 = v33;
  View.accessibilityRespondsToUserInteraction(_:)();
  (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v31, v36);
  type metadata accessor for AutomationCellInfo(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_10048D4B4(v38, v14, v15, v16, v17, v18, v19, v20, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33);
  sub_1003F8810(v38);
  return sub_1000F3400(v13, &qword_100E7A060);
}

uint64_t sub_100BA1384@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v3 = type metadata accessor for TypesettingLanguageAwareLineHeightRatio();
  uint64_t v76 = *(void *)(v3 - 8);
  uint64_t v77 = v3;
  __chkstk_darwin(v3);
  uint64_t v73 = (char *)v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E6D330);
  __chkstk_darwin(v5 - 8);
  uint64_t v80 = (uint64_t)v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (uint64_t)v60 - v8;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v74 = *(void **)(a1 + 16);
  uint64_t v75 = v10;
  Swift::String v81 = Double.formattedPercent(roundToNearestPercent:)(1);
  unint64_t v72 = sub_10014A85C();
  uint64_t v11 = Text.init<A>(_:)();
  uint64_t v13 = v12;
  char v15 = v14 & 1;
  uint64_t v16 = static Font.largeTitle.getter();
  uint64_t v17 = static Font.title2.getter();
  uint64_t v78 = a1;
  uint64_t v18 = *(void *)(a1 + 40);
  uint64_t v62 = v18;
  LODWORD(a1) = *(unsigned __int8 *)(a1 + 48);
  int v63 = a1;
  sub_100195B7C(v18, a1);
  sub_100149AE8();
  LODWORD(v71) = v19;
  sub_10018F6D8(v18, a1);
  uint64_t v20 = enum case for Font.Leading.tight(_:);
  unsigned int v66 = enum case for Font.Leading.tight(_:);
  uint64_t v21 = type metadata accessor for Font.Leading();
  uint64_t v22 = *(void *)(v21 - 8);
  char v65 = *(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 104);
  uint64_t v67 = v22 + 104;
  uint64_t v79 = v9;
  uint64_t v64 = v21;
  v65(v9, v20, v21);
  _s7Weather24LocationCompositionStateOwst_0(v9, 0, 1, v21);
  uint64_t v23 = v80;
  sub_10014A148(v9, v80);
  swift_retain();
  swift_retain();
  sub_10014A8A8(v16, v17, v71 & 1, v23);
  uint64_t v24 = Text.font(_:)();
  uint64_t v26 = v25;
  LOBYTE(v9) = v27;
  v60[1] = v28;
  swift_release();
  swift_release();
  swift_release();
  LOBYTE(v17) = v9 & 1;
  sub_100191924(v11, v13, v15);
  swift_bridgeObjectRelease();
  uint64_t v29 = v79;
  sub_1000F3400(v79, &qword_100E6D330);
  uint64_t v30 = v73;
  static TypesettingLanguageAwareLineHeightRatio.disable.getter();
  uint64_t v31 = Text.typesettingLanguageAwareLineHeightRatio(_:isEnabled:)();
  uint64_t v69 = v32;
  uint64_t v70 = v31;
  uint64_t v71 = v33;
  int v68 = v34 & 1;
  sub_100191924(v24, v26, v17);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v30, v77);
  v81._countAndFlagsBits = v75;
  v81._object = v74;
  swift_bridgeObjectRetain();
  uint64_t v35 = Text.init<A>(_:)();
  uint64_t v37 = v36;
  LOBYTE(v16) = v38 & 1;
  uint64_t v39 = static Font.subheadline.getter();
  uint64_t v40 = static Font.footnote.getter();
  uint64_t v41 = v62;
  LOBYTE(v26) = v63;
  sub_100195B7C(v62, v63);
  LOBYTE(v21) = v26;
  sub_100149AE8();
  LOBYTE(v26) = v42;
  sub_10018F6D8(v41, v21);
  uint64_t v43 = v64;
  v65(v29, v66, v64);
  _s7Weather24LocationCompositionStateOwst_0(v29, 0, 1, v43);
  uint64_t v44 = v80;
  sub_10014A148(v29, v80);
  swift_retain();
  swift_retain();
  sub_10014A8A8(v39, v40, v26 & 1, v44);
  LOBYTE(v26) = v16;
  uint64_t v80 = Text.font(_:)();
  uint64_t v46 = v45;
  LOBYTE(v29) = v47;
  uint64_t v49 = v48;
  swift_release();
  swift_release();
  swift_release();
  LOBYTE(v29) = v29 & 1;
  sub_100191924(v35, v37, v26);
  swift_bridgeObjectRelease();
  sub_1000F3400(v79, &qword_100E6D330);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v51 = *(void *)(v78 + 24);
  LOBYTE(v40) = *(unsigned char *)(v78 + 32);
  sub_100195B7C(v51, v40);
  sub_100147CF4();
  LOBYTE(v37) = v52;
  sub_10018F6D8(v51, v40);
  char v53 = v68;
  LOBYTE(v81._countAndFlagsBits) = v68;
  uint64_t v55 = v69;
  uint64_t v54 = v70;
  uint64_t v56 = v61;
  *uint64_t v61 = v70;
  v56[1] = v55;
  *((unsigned char *)v56 + 16) = v53;
  v56[3] = v71;
  v56[4] = 0x3FF0000000000000;
  v56[5] = 0;
  *((unsigned char *)v56 + 48) = 0;
  uint64_t v57 = v80;
  v56[7] = v80;
  v56[8] = v46;
  *((unsigned char *)v56 + 72) = v29;
  v56[10] = v49;
  v56[11] = KeyPath;
  v56[12] = 4;
  *((_WORD *)v56 + 52) = 0;
  *((unsigned char *)v56 + 106) = (v37 & 1) == 0;
  uint64_t v58 = v54;
  sub_100190CC4(v54, v55, v53);
  swift_bridgeObjectRetain();
  sub_100190CC4(v57, v46, v29);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100191924(v57, v46, v29);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100191924(v58, v55, v81._countAndFlagsBits);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100BA1958()
{
  return sub_100BA0F54();
}

uint64_t sub_100BA19A4(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = type metadata accessor for OSSignpostID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static os_signpost_type_t.event.getter();
  sub_1000DBCCC();
  uint64_t v6 = (void *)OS_os_log.init(subsystem:category:)();
  static OSSignpostID.exclusive.getter();
  os_signpost(_:dso:log:name:signpostID:)();

  uint64_t v7 = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return a1(v7);
}

uint64_t sub_100BA1AFC()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 120);
  uint64_t v2 = type metadata accessor for Selector.ModelState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_100BA1BC4()
{
  sub_100BA1AFC();

  return swift_deallocClassInstance();
}

uint64_t *sub_100BA1C1C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (uint64_t *)a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v6 = *(void *)(a3 + 32);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  int v9 = *(_DWORD *)(v7 + 80);
  uint64_t v10 = *(void *)(v5 + 64) + v9;
  unint64_t v11 = *(void *)(v7 + 64);
  unint64_t v12 = (v10 & ~(unint64_t)v9) + v11;
  if (v12 <= v11) {
    unint64_t v12 = *(void *)(v7 + 64);
  }
  if (v12 <= 0x20) {
    uint64_t v13 = 32;
  }
  else {
    uint64_t v13 = v12;
  }
  int v14 = *(_DWORD *)(v5 + 80) | v9;
  if ((v14 & 0x1000F8) != 0 || (unint64_t)(v13 + 1) > 0x18)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + (((v14 & 0xF8 | 7u) + 16) & ~(unint64_t)(v14 & 0xF8 | 7u)));
LABEL_20:
    swift_retain();
    return v4;
  }
  unsigned int v17 = *((unsigned __int8 *)a2 + v13);
  if (v17 >= 3) {
    unsigned int v17 = *(_DWORD *)a2 + 3;
  }
  if (v17 == 2)
  {
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    char v19 = 2;
    goto LABEL_18;
  }
  if (v17 != 1)
  {
    *(void *)a1 = *a2;
    uint64_t v20 = a2[3];
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
    *(void *)(a1 + 24) = v20;
    *(unsigned char *)(a1 + v13) = 0;
    swift_retain();
    goto LABEL_20;
  }
  unint64_t v18 = ~(unint64_t)v9;
  (*(void (**)(uint64_t, uint64_t *))(v5 + 16))(a1, a2);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v18, ((unint64_t)a2 + v10) & v18, v6);
  char v19 = 1;
LABEL_18:
  *((unsigned char *)v4 + v13) = v19;
  return v4;
}

uint64_t sub_100BA1E18(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = a1;
  uint64_t v3 = *(void *)(*(void *)(*(void *)(a2 + 24) - 8) + 64);
  uint64_t v4 = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = v3 + v7;
  unint64_t v9 = *(void *)(v5 + 64);
  unint64_t v10 = ((v3 + v7) & ~v7) + v9;
  if (v10 <= v9) {
    unint64_t v10 = *(void *)(v5 + 64);
  }
  if (v10 <= 0x20) {
    unint64_t v10 = 32;
  }
  unsigned int v11 = a1[v10];
  unsigned int v12 = v11 - 3;
  if (v11 >= 3)
  {
    if (v10 <= 3) {
      uint64_t v13 = v10;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *a1;
        goto LABEL_14;
      case 2:
        int v14 = *(unsigned __int16 *)a1;
        goto LABEL_14;
      case 3:
        int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_14;
      case 4:
        int v14 = *(_DWORD *)a1;
LABEL_14:
        int v15 = (v14 | (v12 << (8 * v10))) + 3;
        unsigned int v11 = v14 + 3;
        if (v10 < 4) {
          unsigned int v11 = v15;
        }
        break;
      default:
        break;
    }
  }
  if (v11 == 2)
  {
    unsigned int v17 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v6 + 8);
    goto LABEL_20;
  }
  if (v11 == 1)
  {
    uint64_t v16 = ~v7;
    uint64_t v19 = v6;
    (*(void (**)(unsigned __int8 *))(*(void *)(*(void *)(a2 + 24) - 8) + 8))(a1);
    a1 = (unsigned __int8 *)((unint64_t)&v2[v8] & v16);
    unsigned int v17 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v19 + 8);
LABEL_20:
    return v17(a1, v4);
  }
  swift_release();

  return swift_release();
}

unsigned __int8 *sub_100BA2034(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = *(void *)(a3 + 24);
    uint64_t v5 = *(void *)(a3 + 32);
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(void *)(v7 + 64);
    uint64_t v9 = *(void *)(v5 - 8);
    uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
    uint64_t v11 = v8 + v10;
    unint64_t v12 = *(void *)(v9 + 64);
    unint64_t v13 = ((v8 + v10) & ~v10) + v12;
    if (v13 <= v12) {
      unint64_t v13 = *(void *)(v9 + 64);
    }
    if (v13 <= 0x20) {
      uint64_t v14 = 32;
    }
    else {
      uint64_t v14 = v13;
    }
    unsigned int v15 = a1[v14];
    unsigned int v16 = v15 - 3;
    if (v15 >= 3)
    {
      if (v14 <= 3) {
        uint64_t v17 = v14;
      }
      else {
        uint64_t v17 = 4;
      }
      switch(v17)
      {
        case 1:
          int v18 = *a1;
          goto LABEL_16;
        case 2:
          int v18 = *(unsigned __int16 *)a1;
          goto LABEL_16;
        case 3:
          int v18 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_16;
        case 4:
          int v18 = *(_DWORD *)a1;
LABEL_16:
          int v19 = (v18 | (v16 << (8 * v14))) + 3;
          unsigned int v15 = v18 + 3;
          if (v14 < 4) {
            unsigned int v15 = v19;
          }
          break;
        default:
          break;
      }
    }
    uint64_t v20 = ~v10;
    if (v15 == 2)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v9 + 8))(a1, v5);
    }
    else if (v15 == 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
      (*(void (**)(unint64_t, uint64_t))(v9 + 8))((unint64_t)&a1[v11] & v20, v5);
    }
    else
    {
      swift_release();
      swift_release();
    }
    unsigned int v21 = a2[v14];
    unsigned int v22 = v21 - 3;
    if (v21 >= 3)
    {
      if (v14 <= 3) {
        uint64_t v23 = v14;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *a2;
          goto LABEL_33;
        case 2:
          int v24 = *(unsigned __int16 *)a2;
          goto LABEL_33;
        case 3:
          int v24 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_33;
        case 4:
          int v24 = *(_DWORD *)a2;
LABEL_33:
          int v25 = (v24 | (v22 << (8 * v14))) + 3;
          unsigned int v21 = v24 + 3;
          if (v14 < 4) {
            unsigned int v21 = v25;
          }
          break;
        default:
          break;
      }
    }
    if (v21 == 2)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v9 + 16))(a1, a2, v5);
      char v26 = 2;
    }
    else
    {
      if (v21 != 1)
      {
        uint64_t v27 = *((void *)a2 + 1);
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = v27;
        uint64_t v28 = *((void *)a2 + 2);
        uint64_t v29 = *((void *)a2 + 3);
        *((void *)a1 + 2) = v28;
        *((void *)a1 + 3) = v29;
        a1[v14] = 0;
        swift_retain();
        swift_retain();
        return a1;
      }
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))((unint64_t)&a1[v11] & v20, (unint64_t)&a2[v11] & v20, v5);
      char v26 = 1;
    }
    a1[v14] = v26;
  }
  return a1;
}

_OWORD *sub_100BA2360(_OWORD *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  uint64_t v6 = *(void *)(a3 + 32);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = v5 + v9;
  unint64_t v11 = *(void *)(v7 + 64);
  unint64_t v12 = ((v5 + v9) & ~v9) + v11;
  if (v12 <= v11) {
    unint64_t v12 = *(void *)(v7 + 64);
  }
  if (v12 <= 0x20) {
    uint64_t v13 = 32;
  }
  else {
    uint64_t v13 = v12;
  }
  unsigned int v14 = a2[v13];
  unsigned int v15 = v14 - 3;
  if (v14 >= 3)
  {
    if (v13 <= 3) {
      uint64_t v16 = v13;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *a2;
        goto LABEL_15;
      case 2:
        int v17 = *(unsigned __int16 *)a2;
        goto LABEL_15;
      case 3:
        int v17 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_15;
      case 4:
        int v17 = *(_DWORD *)a2;
LABEL_15:
        int v18 = (v17 | (v15 << (8 * v13))) + 3;
        unsigned int v14 = v17 + 3;
        if (v13 < 4) {
          unsigned int v14 = v18;
        }
        break;
      default:
        break;
    }
  }
  if (v14 == 2)
  {
    (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v8 + 32))(a1, a2, v6);
    char v20 = 2;
  }
  else if (v14 == 1)
  {
    uint64_t v19 = ~v9;
    (*(void (**)(_OWORD *, unsigned __int8 *))(*(void *)(*(void *)(a3 + 24) - 8) + 32))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 32))(((unint64_t)a1 + v10) & v19, (unint64_t)&a2[v10] & v19, v6);
    char v20 = 1;
  }
  else
  {
    char v20 = 0;
    long long v21 = *((_OWORD *)a2 + 1);
    *a1 = *(_OWORD *)a2;
    a1[1] = v21;
  }
  *((unsigned char *)a1 + v13) = v20;
  return a1;
}

uint64_t sub_100BA2598(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 32) - 8);
  unint64_t v4 = *(void *)(v3 + 64);
  unint64_t v5 = ((*(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) + *(unsigned __int8 *)(v3 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
     + v4;
  if (v5 <= v4) {
    unint64_t v5 = *(void *)(v3 + 64);
  }
  uint64_t v6 = 32;
  if (v5 > 0x20) {
    uint64_t v6 = v5;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_24;
  }
  uint64_t v7 = v6 + 1;
  char v8 = 8 * (v6 + 1);
  if ((v6 + 1) <= 3)
  {
    unsigned int v11 = ((a2 + ~(-1 << v8) - 253) >> v8) + 1;
    if (HIWORD(v11))
    {
      int v9 = *(_DWORD *)((char *)a1 + v7);
      if (!v9) {
        goto LABEL_24;
      }
      goto LABEL_16;
    }
    if (v11 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v7);
      if (!*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_24;
      }
      goto LABEL_16;
    }
    if (v11 < 2)
    {
LABEL_24:
      unsigned int v13 = *((unsigned __int8 *)a1 + v6);
      if (v13 >= 3) {
        return (v13 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v7);
  if (!*((unsigned char *)a1 + v7)) {
    goto LABEL_24;
  }
LABEL_16:
  int v12 = (v9 - 1) << v8;
  if (v7 > 3) {
    int v12 = 0;
  }
  if (v7)
  {
    if (v7 > 3) {
      LODWORD(v7) = 4;
    }
    switch((int)v7)
    {
      case 2:
        LODWORD(v7) = *a1;
        break;
      case 3:
        LODWORD(v7) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v7) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v7) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v7 | v12) + 254;
}

void sub_100BA2724(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(a4 + 32) - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = ((*(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + v6;
  if (v7 <= v6) {
    unint64_t v7 = *(void *)(v5 + 64);
  }
  if (v7 <= 0x20) {
    unint64_t v7 = 32;
  }
  size_t v8 = v7 + 1;
  char v9 = 8 * (v7 + 1);
  if (a3 < 0xFE)
  {
    int v10 = 0;
  }
  else if (v8 <= 3)
  {
    unsigned int v13 = ((a3 + ~(-1 << v9) - 253) >> v9) + 1;
    if (HIWORD(v13))
    {
      int v10 = 4;
    }
    else if (v13 >= 0x100)
    {
      int v10 = 2;
    }
    else
    {
      int v10 = v13 > 1;
    }
  }
  else
  {
    int v10 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v11 = a2 - 254;
    if (v8 < 4)
    {
      int v12 = (v11 >> v9) + 1;
      if (v7 != -1)
      {
        int v14 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v14;
          a1[2] = BYTE2(v14);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v14;
        }
        else
        {
          *a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, v7 + 1);
      *(_DWORD *)a1 = v11;
      int v12 = 1;
    }
    switch(v10)
    {
      case 1:
        a1[v8] = v12;
        break;
      case 2:
        *(_WORD *)&a1[v8] = v12;
        break;
      case 3:
LABEL_36:
        __break(1u);
        JUMPOUT(0x100BA2940);
      case 4:
        *(_DWORD *)&a1[v8] = v12;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v10)
    {
      case 1:
        a1[v8] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_25;
      case 2:
        *(_WORD *)&a1[v8] = 0;
        goto LABEL_24;
      case 3:
        goto LABEL_36;
      case 4:
        *(_DWORD *)&a1[v8] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_25;
      default:
LABEL_24:
        if (a2) {
LABEL_25:
        }
          a1[v7] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_100BA2968(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 32) - 8);
  unint64_t v3 = *(void *)(v2 + 64);
  unint64_t v4 = ((*(void *)(*(void *)(*(void *)(a2 + 24) - 8) + 64) + *(unsigned __int8 *)(v2 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
     + v3;
  if (v4 <= v3) {
    unint64_t v4 = *(void *)(v2 + 64);
  }
  uint64_t v5 = 32;
  if (v4 > 0x20) {
    uint64_t v5 = v4;
  }
  uint64_t v6 = a1[v5];
  int v7 = v6 - 3;
  if (v6 >= 3)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a1;
        goto LABEL_14;
      case 2:
        int v9 = *(unsigned __int16 *)a1;
        goto LABEL_14;
      case 3:
        int v9 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_14;
      case 4:
        int v9 = *(_DWORD *)a1;
LABEL_14:
        unsigned int v10 = (v9 | (v7 << (8 * v5))) + 3;
        LODWORD(v6) = v9 + 3;
        if (v5 >= 4) {
          uint64_t v6 = v6;
        }
        else {
          uint64_t v6 = v10;
        }
        break;
      default:
        return v6;
    }
  }
  return v6;
}

void sub_100BA2A78(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (a2 > 2)
  {
    uint64_t v7 = *(void *)(*(void *)(a3 + 32) - 8);
    unint64_t v8 = *(void *)(v7 + 64);
    unint64_t v9 = ((*(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
       + v8;
    if (v9 > v8) {
      unint64_t v8 = v9;
    }
    if (v8 <= 0x20) {
      size_t v10 = 32;
    }
    else {
      size_t v10 = v8;
    }
    unsigned int v11 = a2 - 3;
    if (v10 < 4)
    {
      unsigned int v12 = v11 >> (8 * v10);
      int v13 = v11 & ~(-1 << (8 * v10));
      a1[v10] = v12 + 3;
      bzero(a1, v10);
      if (v10 == 3)
      {
        *(_WORD *)a1 = v13;
        a1[2] = BYTE2(v13);
      }
      else if (v10 == 2)
      {
        *(_WORD *)a1 = v13;
      }
      else
      {
        *a1 = v13;
      }
    }
    else
    {
      a1[v10] = 3;
      bzero(a1, v10);
      *(_DWORD *)a1 = v11;
    }
  }
  else
  {
    uint64_t v4 = *(void *)(*(void *)(a3 + 32) - 8);
    unint64_t v5 = *(void *)(v4 + 64);
    unint64_t v6 = ((*(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))
       + v5;
    if (v6 <= v5) {
      unint64_t v6 = v5;
    }
    if (v6 <= 0x20) {
      unint64_t v6 = 32;
    }
    a1[v6] = a2;
  }
}

uint64_t sub_100BA2C2C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EB53C0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v21)
  {
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E64C40);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (result)
    {
      uint64_t v5 = result;
      uint64_t v6 = sub_1000DF0C4((uint64_t)v20, v21);
      __chkstk_darwin(v6);
      unint64_t v8 = (void *)((char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v9 + 16))(v8);
      uint64_t v10 = *v8;
      uint64_t v11 = type metadata accessor for MoonCalendarInteractor();
      void v19[3] = v11;
      v19[4] = &off_100E35DD0;
      v19[0] = v10;
      uint64_t v12 = type metadata accessor for MoonCalendarModule();
      int v13 = (void *)swift_allocObject();
      uint64_t v14 = sub_1000DF0C4((uint64_t)v19, v11);
      __chkstk_darwin(v14);
      uint64_t v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v17 + 16))(v16);
      uint64_t v18 = *v16;
      void v13[5] = v11;
      v13[6] = &off_100E35DD0;
      v13[2] = v18;
      v13[7] = v5;
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v19);
      uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v20);
      a2[3] = v12;
      a2[4] = &off_100E39AD0;
      *a2 = v13;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100BA2E98()
{
  sub_10017DF08(&qword_100EB53C0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100EB53C8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100EB53D0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E64C40);
  RegistrationContainer.register<A>(_:name:factory:)();

  return swift_release();
}

uint64_t sub_100BA2FA4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v5)
  {
    uint64_t v4 = type metadata accessor for MoonCalendarInteractor();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v5;
    *(void *)(result + 24) = v6;
    a2[3] = v4;
    a2[4] = (uint64_t)&off_100E35DD0;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100BA3040@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for MoonCalendarInputFactory();
  uint64_t result = swift_allocObject();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_100E26238;
  *a1 = result;
  return result;
}

uint64_t sub_100BA3088@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6CF20);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v10)
  {
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100EB53D8);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v8)
    {
      uint64_t v5 = type metadata accessor for MoonCalendarViewModelFactory();
      uint64_t v6 = swift_allocObject();
      sub_1001262E4(&v9, v6 + 16);
      uint64_t result = sub_1001262E4(&v7, v6 + 56);
      a2[3] = v5;
      a2[4] = (uint64_t)&off_100E11120;
      *a2 = v6;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100BA3184(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v3 = v18;
  if (!v18)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = v20;
  uint64_t v4 = v21;
  uint64_t v6 = v19;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EB53C8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v17)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v7 = *sub_1001B1E64(v16, v17);
  uint64_t v14 = type metadata accessor for MoonCalendarInputFactory();
  uint64_t v15 = &off_100E26238;
  v13[0] = v7;
  sub_10020D948((uint64_t)v13, (uint64_t)v12);
  uint64_t v8 = swift_allocObject();
  sub_1001262E4(v12, v8 + 16);
  swift_retain();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v16);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_100BA34D8;
  *(void *)(v9 + 24) = v8;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EB53D0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v17)
  {
    uint64_t v10 = *sub_1001B1E64(v16, v17);
    uint64_t v14 = type metadata accessor for MoonCalendarViewModelFactory();
    uint64_t v15 = &off_100E11120;
    v13[0] = v10;
    sub_10020D948((uint64_t)v13, (uint64_t)v12);
    uint64_t v11 = swift_allocObject();
    sub_1001262E4(v12, v11 + 16);
    swift_retain();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v16);
    sub_10017DF08(&qword_100E64C40);
    swift_allocObject();
    return sub_10025B5E0(v3, v6, v5, v4, sub_10025969C, 0, sub_100137F50, v9, sub_100BA3518, v11);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100BA3408@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_100725DD8(a1, a3);
}

uint64_t sub_100BA3454@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_10031ABD4(a1, a3);
}

uint64_t sub_100BA34A0()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_100BA34D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100BA3408(a1, (void *)(v2 + 16), a2);
}

uint64_t sub_100BA34E0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100BA3518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100BA3454(a1, (void *)(v2 + 16), a2);
}

void *sub_100BA3524(char a1, char a2, uint64_t a3)
{
  uint64_t v90 = a3;
  uint64_t v6 = type metadata accessor for TipPriorityQueue.GridEntry();
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100162EF8();
  uint64_t v87 = v8;
  sub_1001626D4();
  __chkstk_darwin(v9);
  uint64_t v86 = (uint64_t)&v71 - v10;
  sub_1001626D4();
  __chkstk_darwin(v11);
  uint64_t v85 = (uint64_t)&v71 - v12;
  uint64_t v13 = sub_10017DF08(&qword_100E64E80);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_10017F948();
  uint64_t v15 = type metadata accessor for LocationComponentViewModel();
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_100162EF8();
  uint64_t v18 = v17;
  sub_1001626D4();
  __chkstk_darwin(v19);
  uint64_t v71 = (uint64_t)&v71 - v20;
  uint64_t v21 = sub_10017DF08(&qword_100E6CCD8);
  uint64_t v22 = sub_100109308(v21);
  __chkstk_darwin(v22);
  sub_100162EF8();
  uint64_t v84 = v23;
  sub_1001626D4();
  __chkstk_darwin(v24);
  uint64_t v83 = (uint64_t)&v71 - v25;
  sub_1001626D4();
  __chkstk_darwin(v26);
  uint64_t v89 = (uint64_t)&v71 - v27;
  sub_1001626D4();
  __chkstk_darwin(v28);
  uint64_t v82 = (uint64_t)&v71 - v29;
  uint64_t v88 = v6;
  if (a1)
  {
    if (a1 == 1)
    {
      if (a2)
      {
        uint64_t v30 = &qword_100EB5790;
        goto LABEL_11;
      }
    }
    else if (a2)
    {
      uint64_t v30 = &qword_100EB5B20;
      goto LABEL_11;
    }
    uint64_t v30 = &qword_100EB5958;
  }
  else if (a2)
  {
    uint64_t v30 = &qword_100EB5400;
  }
  else
  {
    uint64_t v30 = &qword_100EB55C8;
  }
LABEL_11:
  char v31 = *((unsigned char *)v30 + 160);
  uint64_t v32 = *v30;
  uint64_t v73 = v30[1];
  uint64_t v72 = v30[2];
  uint64_t v33 = v30[3];
  uint64_t v34 = v30[16];
  uint64_t v35 = v30[17];
  uint64_t v36 = v30[18];
  uint64_t v37 = v30[19];
  uint64_t v38 = v30[41];
  uint64_t v76 = v30[42];
  uint64_t v77 = v38;
  uint64_t v39 = v30[43];
  uint64_t v74 = v30[44];
  uint64_t v75 = v39;
  uint64_t v40 = v30[49];
  uint64_t v80 = v30[50];
  uint64_t v81 = v40;
  uint64_t v41 = v30[51];
  uint64_t v78 = v30[52];
  uint64_t v79 = v41;
  uint64_t v42 = v90 + OBJC_IVAR____TtCV7Weather16NoAqiNewsContent8_Storage_map;
  swift_beginAccess();
  sub_10006DF38(v42, v3, &qword_100E64E80);
  uint64_t v43 = type metadata accessor for LocationComponentContainerViewModel();
  if (_s7Weather24LocationCompositionStateOwet_0(v3, 1, v43) == 1)
  {
    sub_1001781AC(v3, &qword_100E64E80);
LABEL_16:
    uint64_t v48 = 1;
    uint64_t v49 = v88;
    goto LABEL_17;
  }
  sub_10031F6A8(v3 + *(int *)(v43 + 20), v18, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  sub_10031F75C(v3, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  uint64_t v44 = v18;
  uint64_t v45 = v71;
  sub_10031F6FC(v44, v71, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  if (v31)
  {
    sub_10031F75C(v45, (void (*)(void))type metadata accessor for LocationComponentViewModel);
    goto LABEL_16;
  }
  uint64_t v46 = v45;
  uint64_t v47 = v89;
  sub_10031F6FC(v46, v89, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v48 = 0;
  uint64_t v49 = v88;
  char v50 = (uint64_t *)(v47 + *(int *)(v88 + 20));
  *char v50 = v34;
  v50[1] = v35;
  v50[2] = v36;
  v50[3] = v37;
LABEL_17:
  uint64_t v51 = v89;
  _s7Weather24LocationCompositionStateOwst_0(v89, v48, 1, v49);
  uint64_t v52 = v82;
  sub_10031F640(v51, v82);
  uint64_t v53 = v83;
  _s7Weather24LocationCompositionStateOwst_0(v83, 1, 1, v49);
  uint64_t v54 = sub_100163354(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast);
  uint64_t v55 = v85;
  sub_10031F6A8(v54, v85, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v56 = (uint64_t *)(v55 + *(int *)(v49 + 20));
  uint64_t v57 = v73;
  *uint64_t v56 = v32;
  v56[1] = v57;
  v56[2] = v72;
  v56[3] = v33;
  uint64_t v58 = v84;
  sub_10006DF38(v52, v84, &qword_100E6CCD8);
  uint64_t v59 = sub_100163354(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
  uint64_t v60 = v86;
  sub_10031F6A8(v59, v86, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  uint64_t v61 = (uint64_t *)(v60 + *(int *)(v49 + 20));
  uint64_t v62 = v76;
  *uint64_t v61 = v77;
  v61[1] = v62;
  uint64_t v63 = v74;
  v61[2] = v75;
  v61[3] = v63;
  uint64_t v64 = sub_100163354(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
  uint64_t v65 = v87;
  sub_10031F6A8(v64, v87, (void (*)(void))type metadata accessor for LocationComponentViewModel);
  unsigned int v66 = (uint64_t *)(v65 + *(int *)(v49 + 20));
  uint64_t v67 = v80;
  *unsigned int v66 = v81;
  v66[1] = v67;
  uint64_t v68 = v78;
  v66[2] = v79;
  v66[3] = v68;
  uint64_t v69 = sub_100AD6D18(v53, v55, v58, v60, v65);
  sub_1001781AC(v52, &qword_100E6CCD8);
  return v69;
}

uint64_t sub_100BA3AB0(uint64_t a1)
{
  uint64_t v4 = sub_10017DF08(&qword_100E64E80);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_10017F948();
  uint64_t v6 = type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  sub_10008B8C0();
  uint64_t v8 = a1 + OBJC_IVAR____TtCV7Weather16NoAqiNewsContent8_Storage_map;
  swift_beginAccess();
  sub_10006DF38(v8, v1, &qword_100E64E80);
  uint64_t v87 = a1;
  if (_s7Weather24LocationCompositionStateOwet_0(v1, 1, v6) == 1)
  {
    sub_1001781AC(v1, &qword_100E64E80);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_100C34240;
    sub_10017DF08(&qword_100E6CCD0);
    unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v11 = *(void *)(v7 + 72);
    uint64_t v12 = (__n128 *)swift_allocObject();
    uint64_t v13 = sub_100183900(v12, (__n128)xmmword_100C251B0);
    sub_10031F6A8(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v13 + v10, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 32) = sub_1001F24CC((uint64_t)v12);
    *(void *)(v9 + 40) = v14;
    *(void *)(v9 + 48) = v15;
    uint64_t v16 = sub_100181354();
    *(_OWORD *)(v16 + 16) = v88;
    sub_10031F6A8(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v16 + v10, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 56) = sub_1001F24CC(v16);
    *(void *)(v9 + 64) = v17;
    *(void *)(v9 + 72) = v18;
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = v88;
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather16NoAqiNewsContent8_Storage_newsArticle, v19 + v10, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 80) = sub_1001F24CC(v19);
    *(void *)(v9 + 88) = v20;
    *(void *)(v9 + 96) = v21;
    uint64_t v22 = v11;
    uint64_t v23 = (__n128 *)swift_allocObject();
    uint64_t v24 = (char *)sub_100183900(v23, (__n128)xmmword_100C25ED0) + v10;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex);
    sub_1001859A8((uint64_t)&v24[v22], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset);
    *(void *)(v9 + 104) = sub_1001F24CC((uint64_t)v23);
    *(void *)(v9 + 112) = v25;
    *(void *)(v9 + 120) = v26;
    uint64_t v27 = (__n128 *)swift_allocObject();
    sub_10016324C(v27);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_1001859A8((uint64_t)&v24[v22], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal);
    *(void *)(v9 + 128) = sub_1001F24CC((uint64_t)v23);
    *(void *)(v9 + 136) = v28;
    *(void *)(v9 + 144) = v29;
    uint64_t v30 = (__n128 *)sub_100181354();
    sub_10016324C(v30);
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_1001859A8((uint64_t)&v24[v22], OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity);
    *(void *)(v9 + 152) = sub_1001F24CC((uint64_t)v23);
    *(void *)(v9 + 160) = v31;
    *(void *)(v9 + 168) = v32;
    uint64_t v33 = sub_100181354();
    *(_OWORD *)(v33 + 16) = v88;
    sub_10017C9A0(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_1001859A8(v33 + v10 + v22, OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure);
    *(void *)(v9 + 176) = sub_1001F24CC(v33);
    *(void *)(v9 + 184) = v34;
    *(void *)(v9 + 192) = v35;
    uint64_t v36 = sub_100181354();
    *(_OWORD *)(v36 + 16) = v88;
    uint64_t v37 = *(void *)(a1 + 16);
    sub_10031F6A8(v37 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v36 + v10, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v37 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v36 + v10 + v22, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 200) = sub_1001F24CC(v36);
    *(void *)(v9 + 208) = v38;
    *(void *)(v9 + 216) = v39;
  }
  else
  {
    sub_10031F6FC(v1, v2, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10017DF08(&qword_100E6CCC8);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_100C367B0;
    sub_10017DF08(&qword_100E6CCD0);
    uint64_t v86 = *(void *)(v7 + 72);
    uint64_t v85 = v2;
    unint64_t v40 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v41 = (__n128 *)swift_allocObject();
    uint64_t v42 = sub_100183900(v41, (__n128)xmmword_100C251B0);
    sub_10031F6A8(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v42 + v40, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 32) = sub_1001F24CC((uint64_t)v41);
    *(void *)(v9 + 40) = v43;
    *(void *)(v9 + 48) = v44;
    uint64_t v45 = (__n128 *)sub_10017C984();
    sub_100179F54(v45);
    sub_10031F6A8(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v46, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 56) = sub_1001F24CC((uint64_t)v45);
    *(void *)(v9 + 64) = v47;
    *(void *)(v9 + 72) = v48;
    uint64_t v49 = (__n128 *)sub_10017C984();
    sub_100179F54(v49);
    sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather16NoAqiNewsContent8_Storage_newsArticle, v50, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 80) = sub_1001F24CC((uint64_t)v49);
    *(void *)(v9 + 88) = v51;
    *(void *)(v9 + 96) = v52;
    uint64_t v53 = (__n128 *)sub_10017C984();
    sub_100179F54(v53);
    sub_10031F6A8(v2, v54, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 104) = sub_1001F24CC((uint64_t)v53);
    *(void *)(v9 + 112) = v55;
    *(void *)(v9 + 120) = v56;
    uint64_t v57 = (__n128 *)swift_allocObject();
    uint64_t v58 = (char *)sub_100183900(v57, (__n128)xmmword_100C25ED0) + v40;
    uint64_t v59 = *(void *)(a1 + 16);
    sub_10031F6A8(v59 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v58, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v59 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)&v58[v86], (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 128) = sub_1001F24CC((uint64_t)v57);
    *(void *)(v9 + 136) = v60;
    *(void *)(v9 + 144) = v61;
    uint64_t v62 = (__n128 *)swift_allocObject();
    sub_10017A334(v62);
    uint64_t v64 = v63 + v40;
    uint64_t v65 = *(void *)(v87 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind);
    sub_10031F6A8(v65 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, v64 + v86, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 152) = sub_1001F24CC((uint64_t)v57);
    *(void *)(v9 + 160) = v66;
    *(void *)(v9 + 168) = v67;
    uint64_t v68 = (__n128 *)swift_allocObject();
    sub_10017A334(v68);
    uint64_t v70 = v69 + v40;
    uint64_t v71 = *(void *)(v87 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike);
    sub_10031F6A8(v71 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, v70 + v86, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 176) = sub_1001F24CC((uint64_t)v57);
    *(void *)(v9 + 184) = v72;
    *(void *)(v9 + 192) = v73;
    uint64_t v74 = (__n128 *)swift_allocObject();
    sub_10017A334(v74);
    uint64_t v76 = v75 + v40;
    uint64_t v77 = *(void *)(v87 + 16);
    sub_100163230(OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility);
    sub_10031F6A8(v77 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, v76 + v86, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 200) = sub_1001F24CC((uint64_t)v57);
    *(void *)(v9 + 208) = v78;
    *(void *)(v9 + 216) = v79;
    uint64_t v80 = swift_allocObject();
    *(_OWORD *)(v80 + 16) = v88;
    uint64_t v81 = *(void *)(v87 + 16);
    sub_10031F6A8(v81 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, v80 + v40, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    sub_10031F6A8(v81 + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, v80 + v40 + v86, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
    *(void *)(v9 + 224) = sub_1001F24CC(v80);
    *(void *)(v9 + 232) = v82;
    *(void *)(v9 + 240) = v83;
    sub_10031F75C(v85, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  }
  return v9;
}

uint64_t sub_100BA42AC(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v5 = type metadata accessor for LocationComponentContainerViewModel();
  sub_100162E4C();
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v25 - v10;
  uint64_t v12 = type metadata accessor for LocationViewComponent();
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_10008B8C0();
  uint64_t v14 = sub_10017DF08(&qword_100E64E80);
  uint64_t v15 = sub_100109308(v14);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v25 - v19;
  uint64_t v21 = swift_retain();
  sub_1006E2E94(v21, a2);
  uint64_t v26 = v22;
  swift_release();
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather30LocationNoAqiNewsConfiguration8_Storage_map, v2, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v2);
  sub_10031F75C(v2, (void (*)(void))type metadata accessor for LocationViewComponent);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v5);
  sub_10031F6A8(a1 + OBJC_IVAR____TtCV7Weather30LocationNoAqiNewsConfiguration8_Storage_newsArticle, v2, (void (*)(void))type metadata accessor for LocationViewComponent);
  a2(v2);
  sub_10031F75C(v2, (void (*)(void))type metadata accessor for LocationViewComponent);
  sub_10006DF38((uint64_t)v20, (uint64_t)v18, &qword_100E64E80);
  sub_10031F6A8((uint64_t)v11, (uint64_t)v9, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  type metadata accessor for NoAqiNewsContent._Storage(0);
  swift_allocObject();
  uint64_t v23 = sub_1002DC438(v26, (uint64_t)v18, (uint64_t)v9);
  sub_10031F75C((uint64_t)v11, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
  sub_1001781AC((uint64_t)v20, &qword_100E64E80);
  return v23;
}

uint64_t sub_100BA4534()
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v2);
  sub_10011BFD8();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 16);
  type metadata accessor for InteractiveMapViewAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for ViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = 0;
  memset(v5, 0, sizeof(v5));
  swift_retain();
  sub_1001AAF58(v1, (uint64_t)v5, v3);
  sub_1001781AC((uint64_t)v5, (uint64_t *)&unk_100EA01F0);
  sub_100159238(v1, (void (*)(void))type metadata accessor for MainAction);
  return swift_release();
}

uint64_t sub_100BA463C(uint64_t a1, char a2)
{
  sub_10017DF08(&qword_100E63480);
  uint64_t v3 = *(void *)(type metadata accessor for MainAction() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100C25ED0;
  uint64_t v6 = *(int *)(sub_10017DF08(&qword_100E6F628) + 48);
  type metadata accessor for Location();
  sub_100162E4C();
  uint64_t v8 = *(void (**)(void))(v7 + 16);
  sub_1001A4ABC();
  v8();
  *(unsigned char *)(v5 + v4 + v6) = a2;
  type metadata accessor for LocationsAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_1001A4ABC();
  v8();
  type metadata accessor for InteractiveMapViewAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for ViewAction();
  swift_storeEnumTagMultiPayload();
  sub_1001869E4();
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = *(uint64_t (**)(uint64_t))(v11 + 16);
  uint64_t v16 = 0;
  memset(v15, 0, sizeof(v15));
  sub_1001262FC((uint64_t)v15, (uint64_t)v12, (uint64_t *)&unk_100EA01F0);
  uint64_t v13 = v5;
  char v14 = 0;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1001AB2DC((uint64_t)v12, v9);
  sub_1001781AC((uint64_t)v12, &qword_100E63488);
  swift_bridgeObjectRelease();
  sub_1001781AC((uint64_t)v15, (uint64_t *)&unk_100EA01F0);
  return swift_release();
}

uint64_t sub_100BA4850(uint64_t a1)
{
  return sub_100BA4888(a1, (void (*)(void, __n128))&type metadata accessor for Location);
}

uint64_t sub_100BA486C(uint64_t a1)
{
  return sub_100BA4888(a1, (void (*)(void, __n128))&type metadata accessor for Location);
}

uint64_t sub_100BA4888(uint64_t a1, void (*a2)(void, __n128))
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __n128 v6 = __chkstk_darwin(v5);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(uint64_t (**)(uint64_t))(v2 + 16);
  a2(0, v6);
  sub_100162E4C();
  (*(void (**)(char *, uint64_t))(v10 + 16))(v8, a1);
  type metadata accessor for InteractiveMapViewAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for ViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = 0;
  memset(v12, 0, sizeof(v12));
  swift_retain();
  sub_1001AAF58((uint64_t)v8, (uint64_t)v12, v9);
  sub_1001781AC((uint64_t)v12, (uint64_t *)&unk_100EA01F0);
  sub_100159238((uint64_t)v8, (void (*)(void))type metadata accessor for MainAction);
  return swift_release();
}

void sub_100BA49EC(uint64_t a1)
{
  uint64_t v5 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_10016279C();
  uint64_t v9 = sub_10017DF08(&qword_100E749B0);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_10011BA28();
  uint64_t v11 = type metadata accessor for URL();
  sub_100179C0C();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_10011BFD8();
  sub_100032E54(v3);
  if (_s7Weather24LocationCompositionStateOwet_0(v3, 1, v11) == 1)
  {
    sub_1001781AC(v3, &qword_100E749B0);
    sub_1006955F4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v2, a1, v5);
    uint64_t v15 = (void *)CLLocation.init(_:)();
    id v16 = [objc_allocWithZone((Class)MKMapItem) initWithCLLocation:v15];

    if (v16)
    {
      uint64_t v17 = Dictionary.init(dictionaryLiteral:)();
      sub_100BA5D5C(v17, v16);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_1001627D4();
    v18();
    id v19 = [self sharedApplication];
    URL._bridgeToObjectiveC()(v20);
    uint64_t v22 = v21;
    type metadata accessor for OpenExternalURLOptionsKey(0);
    sub_1007FDCAC();
    Dictionary.init(dictionaryLiteral:)();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v19 openURL:v22 options:isa completionHandler:0];

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v1, v11);
  }
}

uint64_t sub_100BA4C90(uint64_t a1)
{
  return sub_100BA4888(a1, (void (*)(void, __n128))&type metadata accessor for WeatherMapOverlayKind);
}

uint64_t sub_100BA4CAC(uint64_t a1)
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  sub_1001B1E64(v1 + 9, v1[12]);
  sub_100A41D0C(a1, 0, v7, v8, v9, v10, v11, v12, v16[0], v16[1], v16[2], v16[3], v16[4], v16[5], v16[6], v16[7], v16[8], v16[9], v16[10],
    v16[11]);
  uint64_t v13 = (uint64_t (*)(uint64_t))v1[2];
  type metadata accessor for Location();
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(v6, a1);
  type metadata accessor for InteractiveMapViewAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for ViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_10017C9D8();
  sub_1001AAF58(v6, (uint64_t)v16, v13);
  sub_1001781AC((uint64_t)v16, (uint64_t *)&unk_100EA01F0);
  sub_100159238(v6, (void (*)(void))type metadata accessor for MainAction);
  return swift_release();
}

uint64_t sub_100BA4E04()
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v2);
  sub_10011BFD8();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 16);
  type metadata accessor for ViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = 0;
  memset(v5, 0, sizeof(v5));
  swift_retain();
  sub_1001AAF58(v1, (uint64_t)v5, v3);
  sub_1001781AC((uint64_t)v5, (uint64_t *)&unk_100EA01F0);
  sub_100159238(v1, (void (*)(void))type metadata accessor for MainAction);
  return swift_release();
}

uint64_t sub_100BA4EEC()
{
  uint64_t v3 = sub_10017DF08(&qword_100EB5DB0);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_100179CB8();
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_10012B938();
  uint64_t v6 = (uint64_t (*)(uint64_t))v0[2];
  type metadata accessor for InteractiveMapViewAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for ViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_10017C9D8();
  sub_1001AAF58(v2, (uint64_t)v10, v6);
  sub_1001781AC((uint64_t)v10, (uint64_t *)&unk_100EA01F0);
  sub_100159238(v2, (void (*)(void))type metadata accessor for MainAction);
  swift_release();
  sub_1001B1E64(v0 + 4, v0[7]);
  sub_10074BC24();
  uint64_t v7 = type metadata accessor for ViewData();
  _s7Weather24LocationCompositionStateOwst_0(v1, 0, 1, v7);
  uint64_t v8 = (uint64_t)v0 + OBJC_IVAR____TtC7Weather24InteractiveMapInteractor_viewData;
  swift_beginAccess();
  sub_100BA5DD4(v1, v8);
  return swift_endAccess();
}

uint64_t sub_100BA5080(char a1)
{
  uint64_t v4 = type metadata accessor for WeatherMapOverlayKind();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10012B938();
  uint64_t v8 = type metadata accessor for InteractiveMapViewEvent(0);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  sub_10011BA28();
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = *(uint64_t (**)(uint64_t))(v1 + 16);
  type metadata accessor for InteractiveMapViewAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for ViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v23 = 0;
  long long v21 = 0u;
  long long v22 = 0u;
  swift_retain();
  sub_1001AAF58(v13, (uint64_t)&v21, v14);
  sub_1001781AC((uint64_t)&v21, (uint64_t *)&unk_100EA01F0);
  sub_100159238(v13, (void (*)(void))type metadata accessor for MainAction);
  swift_release();
  sub_10020D948(v1 + 32, (uint64_t)&v21);
  sub_1001B1E64(&v21, *((uint64_t *)&v22 + 1));
  sub_100162808();
  v15();
  swift_getObjectType();
  double v16 = COERCE_DOUBLE(dispatch thunk of WeatherMapZoomControllerType.currentZoomLevel.getter());
  if (v17) {
    double v18 = 0.0;
  }
  else {
    double v18 = v16;
  }
  *uint64_t v3 = a1;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 32))(&v3[*(int *)(v9 + 28)], v2, v4);
  *(double *)&v3[*(int *)(v9 + 32)] = v18;
  sub_10074BF94();
  sub_100159238((uint64_t)v3, (void (*)(void))type metadata accessor for InteractiveMapViewEvent);
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v21);
}

uint64_t sub_100BA52E8(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v107 = a3;
  uint64_t v108 = a4;
  uint64_t v103 = a2;
  uint64_t v89 = type metadata accessor for WeatherMapExitOverlayEvent(0);
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = sub_10017DF08(&qword_100EB5DB0);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_100109314();
  sub_100109328(v13);
  uint64_t v94 = type metadata accessor for ViewData();
  sub_100179C0C();
  uint64_t v88 = v14;
  __chkstk_darwin(v15);
  sub_100109314();
  sub_100109328(v16);
  uint64_t v98 = type metadata accessor for WeatherMapStallStatistics();
  sub_100179C0C();
  uint64_t v93 = v17;
  __chkstk_darwin(v18);
  sub_100109314();
  sub_100109328(v19);
  uint64_t v102 = type metadata accessor for WeatherMapSessionStatistics();
  sub_100179C0C();
  uint64_t v92 = v20;
  __chkstk_darwin(v21);
  sub_100109314();
  sub_100109328(v22);
  uint64_t v97 = type metadata accessor for WeatherMapOverlayKind();
  sub_100179C0C();
  uint64_t v91 = v23;
  __chkstk_darwin(v24);
  sub_100109314();
  uint64_t v101 = v25;
  type metadata accessor for WeatherMapPurpose();
  sub_100179C0C();
  uint64_t v114 = v27;
  uint64_t v115 = v26;
  __chkstk_darwin(v26);
  uint64_t v28 = sub_100179CB8();
  uint64_t v29 = type metadata accessor for WeatherMapTrackingState(v28);
  uint64_t v30 = sub_100109308(v29);
  __chkstk_darwin(v30);
  sub_10016279C();
  uint64_t v31 = type metadata accessor for WeatherMap.Event();
  sub_100179C0C();
  uint64_t v33 = v32;
  __chkstk_darwin(v34);
  uint64_t v100 = (char *)v87 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  uint64_t v112 = (char *)v87 - v37;
  __chkstk_darwin(v38);
  unint64_t v40 = (char *)v87 - v39;
  uint64_t v105 = (void (*)(char *, char *, uint64_t))v33[2];
  long long v106 = v33 + 2;
  sub_100162808();
  v41();
  uint64_t v104 = (uint64_t (*)(char *, uint64_t))v33[11];
  int v42 = v104(v40, v31);
  int v43 = enum case for WeatherMap.Event.willStartLoading(_:);
  uint64_t v99 = v33;
  uint64_t v44 = (uint64_t (*)(uint64_t))v33[1];
  uint64_t v113 = v31;
  uint64_t v109 = v44;
  uint64_t v110 = v33 + 1;
  ((void (*)(char *, uint64_t))v44)(v40, v31);
  if (v42 != v43
    || (uint64_t v45 = sub_10017DF08(&qword_100E66460),
        _s7Weather24LocationCompositionStateOwst_0(v5, 1, 3, v45),
        char v46 = sub_10011EBBC(),
        uint64_t result = sub_100159238(v5, (void (*)(void))type metadata accessor for WeatherMapTrackingState),
        (v46 & 1) != 0))
  {
    uint64_t v103 = v10;
    sub_1001B1E64((void *)(v111 + 128), *(void *)(v111 + 152));
    uint64_t v48 = v108;
    *uint64_t v4 = v107;
    v4[1] = v48;
    (*(void (**)(void *, void, uint64_t))(v114 + 104))(v4, enum case for WeatherMapPurpose.interactive(_:), v115);
    swift_bridgeObjectRetain();
    uint64_t v49 = sub_100478D18();
    uint64_t v50 = v49[2];
    if (v50)
    {
      uint64_t v51 = v49 + 4;
      do
      {
        uint64_t v53 = v51[3];
        uint64_t v52 = v51[4];
        sub_1001B1E64(v51, v53);
        (*(void (**)(char *, void *, uint64_t, uint64_t))(v52 + 16))(a1, v4, v53, v52);
        v51 += 5;
        --v50;
      }
      while (v50);
    }
    swift_bridgeObjectRelease();
    (*(void (**)(void *, uint64_t))(v114 + 8))(v4, v115);
    uint64_t v55 = v112;
    uint64_t v54 = v113;
    uint64_t v56 = v105;
    v105(v112, a1, v113);
    uint64_t v57 = sub_1001869E4();
    if (((unsigned int (*)(uint64_t))v104)(v57) == enum case for WeatherMap.Event.overlay(_:))
    {
      uint64_t v58 = v100;
      v56(v100, v55, v54);
      ((void (*)(char *, uint64_t))v99[12])(v58, v54);
      uint64_t v59 = type metadata accessor for WeatherMap.Event.Overlay();
      uint64_t v60 = *(void *)(v59 - 8);
      if ((*(unsigned int (**)(char *, uint64_t))(v60 + 88))(v58, v59) == enum case for WeatherMap.Event.Overlay.remove(_:))
      {
        (*(void (**)(char *, uint64_t))(v60 + 96))(v58, v59);
        sub_10017DF08(&qword_100EAD4A0);
        uint64_t v61 = v91;
        uint64_t v62 = v97;
        sub_1001627D4();
        v63();
        uint64_t v64 = v92;
        uint64_t v65 = v95;
        sub_1001627D4();
        v66();
        uint64_t v67 = v93;
        uint64_t v68 = v96;
        uint64_t v69 = v61;
        uint64_t v70 = v98;
        sub_1001627D4();
        v71();
        uint64_t v72 = v111;
        uint64_t v73 = v111 + OBJC_IVAR____TtC7Weather24InteractiveMapInteractor_viewData;
        swift_beginAccess();
        uint64_t v74 = v73;
        uint64_t v75 = v90;
        sub_1001262FC(v74, v90, &qword_100EB5DB0);
        uint64_t v76 = v94;
        if (_s7Weather24LocationCompositionStateOwet_0(v75, 1, v94) == 1)
        {
          (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v68, v70);
          (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v65, v102);
          (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v101, v62);
          sub_1001781AC(v75, &qword_100EB5DB0);
        }
        else
        {
          uint64_t v77 = v88;
          uint64_t v78 = v87[1];
          sub_1001627D4();
          v79();
          sub_1001B1E64((void *)(v72 + 32), *(void *)(v72 + 56));
          uint64_t v80 = v103;
          sub_100162808();
          v81();
          sub_100162808();
          v82();
          sub_100162808();
          v83();
          sub_10074CA80();
          sub_100159238(v80, (void (*)(void))type metadata accessor for WeatherMapExitOverlayEvent);
          (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v78, v76);
          uint64_t v84 = sub_1001869E4();
          v85(v84);
          (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v95, v102);
          (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v101, v97);
        }
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v60 + 8))(v58, v59);
      }
    }
    uint64_t v86 = sub_1001869E4();
    return v109(v86);
  }
  return result;
}

uint64_t sub_100BA5B4C()
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 32);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 72);
  swift_unknownObjectRelease();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 128);
  sub_1001781AC(v0 + OBJC_IVAR____TtC7Weather24InteractiveMapInteractor_viewData, &qword_100EB5DB0);
  return v0;
}

uint64_t sub_100BA5BA4()
{
  sub_100BA5B4C();

  return swift_deallocClassInstance();
}

uint64_t sub_100BA5BFC()
{
  return type metadata accessor for InteractiveMapInteractor();
}

uint64_t type metadata accessor for InteractiveMapInteractor()
{
  uint64_t result = qword_100EB5CF8;
  if (!qword_100EB5CF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100BA5C4C()
{
  sub_100BA5D04();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100BA5D04()
{
  if (!qword_100EB5D08)
  {
    type metadata accessor for ViewData();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100EB5D08);
    }
  }
}

id sub_100BA5D5C(uint64_t a1, void *a2)
{
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v4 = [a2 openInMapsWithLaunchOptions:isa];

  return v4;
}

uint64_t sub_100BA5DD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100EB5DB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BA5E3C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EB5E50);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v21)
  {
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E64C78);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (result)
    {
      uint64_t v5 = result;
      uint64_t v6 = sub_1000DF0C4((uint64_t)v20, v21);
      __chkstk_darwin(v6);
      uint64_t v8 = (void *)((char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v9 + 16))(v8);
      uint64_t v10 = *v8;
      uint64_t v11 = type metadata accessor for HomeAndWorkRefinementInteractor();
      void v19[3] = v11;
      v19[4] = &off_100E34E70;
      v19[0] = v10;
      uint64_t v12 = type metadata accessor for HomeAndWorkRefinementModule();
      uint64_t v13 = (void *)swift_allocObject();
      uint64_t v14 = sub_1000DF0C4((uint64_t)v19, v11);
      __chkstk_darwin(v14);
      uint64_t v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v17 + 16))(v16);
      uint64_t v18 = *v16;
      void v13[5] = v11;
      v13[6] = &off_100E34E70;
      v13[2] = v18;
      v13[7] = v5;
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v19);
      uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v20);
      a2[3] = v12;
      a2[4] = &off_100E1FB10;
      *a2 = v13;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100BA60A8()
{
  sub_10017DF08(&qword_100EB5E50);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100EB5E58);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100EB5E60);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E64C78);
  RegistrationContainer.register<A>(_:name:factory:)();

  return swift_release();
}

uint64_t sub_100BA61B4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v5)
  {
    uint64_t v4 = type metadata accessor for HomeAndWorkRefinementInteractor();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v5;
    *(void *)(result + 24) = v6;
    a2[3] = v4;
    a2[4] = (uint64_t)&off_100E34E70;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100BA6250@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for HomeAndWorkRefinementInputFactory();
  uint64_t result = swift_allocObject();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_100E1D768;
  *a1 = result;
  return result;
}

uint64_t sub_100BA6298@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6FC60);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v7)
  {
    uint64_t v4 = type metadata accessor for HomeAndWorkRefinementViewModelFactory();
    uint64_t v5 = swift_allocObject();
    uint64_t result = sub_1001262E4(&v6, v5 + 16);
    a2[3] = v4;
    a2[4] = (uint64_t)&off_100E1CAC8;
    *a2 = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100BA633C(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v3 = v18;
  if (!v18)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = v20;
  uint64_t v4 = v21;
  uint64_t v6 = v19;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EB5E58);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v17)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v7 = *sub_1001B1E64(v16, v17);
  uint64_t v14 = type metadata accessor for HomeAndWorkRefinementInputFactory();
  uint64_t v15 = &off_100E1D768;
  v13[0] = v7;
  sub_10020D948((uint64_t)v13, (uint64_t)v12);
  uint64_t v8 = swift_allocObject();
  sub_1001262E4(v12, v8 + 16);
  swift_retain();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v16);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_100BA6690;
  *(void *)(v9 + 24) = v8;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EB5E60);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v17)
  {
    uint64_t v10 = *sub_1001B1E64(v16, v17);
    uint64_t v14 = type metadata accessor for HomeAndWorkRefinementViewModelFactory();
    uint64_t v15 = &off_100E1CAC8;
    v13[0] = v10;
    sub_10020D948((uint64_t)v13, (uint64_t)v12);
    uint64_t v11 = swift_allocObject();
    sub_1001262E4(v12, v11 + 16);
    swift_retain();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v13);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v16);
    sub_10017DF08(&qword_100E64C78);
    swift_allocObject();
    return sub_10025B774(v3, v6, v5, v4, sub_10025969C, 0, sub_100137F50, v9, sub_100BA66D0, v11);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100BA65C0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_100644BC4(a1, a3);
}

uint64_t sub_100BA660C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1005F2850(a1, a3);
}

uint64_t sub_100BA6658()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_100BA6690@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100BA65C0(a1, (void *)(v2 + 16), a2);
}

uint64_t sub_100BA6698()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100BA66D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100BA660C(a1, (void *)(v2 + 16), a2);
}

ValueMetadata *type metadata accessor for NextHourPrecipitationDetailTracker()
{
  return &type metadata for NextHourPrecipitationDetailTracker;
}

uint64_t sub_100BA66EC()
{
  return LocationOfInterest.type.getter();
}

uint64_t sub_100BA6710()
{
  uint64_t v1 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for LocationOfInterest();
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = LocationOfInterest.shortAddress.getter();
  uint64_t v15 = v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v0, v7);
  if (!v15)
  {
    LocationOfInterest.location.getter();
    uint64_t v13 = Location.inlineName.getter();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v1);
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v7);
  return v13;
}

uint64_t sub_100BA6874@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for LocationOfInterestType();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v14 - v9;
  LocationOfInterest.type.getter();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v10, v2);
  int v11 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v7, v2);
  uint64_t v12 = 0;
  if (v11 != enum case for LocationOfInterestType.home(_:))
  {
    if (v11 == enum case for LocationOfInterestType.work(_:))
    {
      uint64_t v12 = 1;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v2);
      uint64_t v12 = 0x7FFFFFFFFFFFFFFFLL;
    }
  }
  *a1 = v12;
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v10, v2);
}

char *sub_100BA69D0(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for TemperatureChartKind();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    uint64_t v9 = *(int *)(a3 + 20);
    long long v10 = *(_OWORD *)((char *)a2 + v9 + 24);
    *(_OWORD *)&a1[v9 + 24] = v10;
    (**(void (***)(void))(v10 - 8))();
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = &a1[v11];
    uint64_t v13 = (char *)a2 + v11;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v7))
    {
      uint64_t v14 = sub_10017DF08(&qword_100EA8FA0);
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      v8(v12, v13, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v7);
    }
    uint64_t v16 = sub_10017DF08(&qword_100EB5E68);
    *(void *)&v12[*(int *)(v16 + 28)] = *(void *)&v13[*(int *)(v16 + 28)];
  }
  swift_retain();
  return a1;
}

uint64_t sub_100BA6B84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TemperatureChartKind();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + *(int *)(a2 + 20));
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, v4)) {
    v5(v6, v4);
  }
  sub_10017DF08(&qword_100EB5E68);

  return swift_release();
}

uint64_t sub_100BA6C54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TemperatureChartKind();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  long long v9 = *(_OWORD *)(a2 + v8 + 24);
  *(_OWORD *)(a1 + v8 + 24) = v9;
  (**(void (***)(void))(v9 - 8))();
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)(a2 + v10);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v6))
  {
    uint64_t v13 = sub_10017DF08(&qword_100EA8FA0);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v11, (uint64_t)v12, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v6);
  }
  uint64_t v14 = sub_10017DF08(&qword_100EB5E68);
  *(void *)&v11[*(int *)(v14 + 28)] = *(void *)&v12[*(int *)(v14 + 28)];
  swift_retain();
  return a1;
}

uint64_t sub_100BA6DBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TemperatureChartKind();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  sub_1000C1E18((uint64_t *)(a1 + *(int *)(a3 + 20)), (uint64_t *)(a2 + *(int *)(a3 + 20)));
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = (char *)(a1 + v9);
  uint64_t v11 = (char *)(a2 + v9);
  int v12 = _s7Weather24LocationCompositionStateOwet_0(a1 + v9, 1, v6);
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v6);
  if (!v12)
  {
    if (!v13)
    {
      v8((uint64_t)v10, (uint64_t)v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_10017DF08(&qword_100EA8FA0);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v6);
LABEL_7:
  uint64_t v15 = sub_10017DF08(&qword_100EB5E68);
  *(void *)&v10[*(int *)(v15 + 28)] = *(void *)&v11[*(int *)(v15 + 28)];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100BA6F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TemperatureChartKind();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = a1 + v8;
  uint64_t v11 = a2 + v8;
  long long v12 = *(_OWORD *)(v11 + 16);
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *(_OWORD *)(v10 + 16) = v12;
  *(void *)(v10 + 32) = *(void *)(v11 + 32);
  int v13 = (char *)(a1 + v9);
  uint64_t v14 = (char *)(a2 + v9);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v6))
  {
    uint64_t v15 = sub_10017DF08(&qword_100EA8FA0);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v13, (uint64_t)v14, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v6);
  }
  uint64_t v16 = sub_10017DF08(&qword_100EB5E68);
  *(void *)&v13[*(int *)(v16 + 28)] = *(void *)&v14[*(int *)(v16 + 28)];
  return a1;
}

uint64_t sub_100BA709C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TemperatureChartKind();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + v9);
  long long v12 = *(_OWORD *)(v11 + 16);
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *(_OWORD *)(v10 + 16) = v12;
  *(void *)(v10 + 32) = *(void *)(v11 + 32);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (char *)(a1 + v13);
  uint64_t v15 = (char *)(a2 + v13);
  LODWORD(v10) = _s7Weather24LocationCompositionStateOwet_0(a1 + v13, 1, v6);
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v6);
  if (!v10)
  {
    if (!v16)
    {
      v8((uint64_t)v14, (uint64_t)v15, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v14, v6);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = sub_10017DF08(&qword_100EA8FA0);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v14, v15, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v6);
LABEL_7:
  uint64_t v18 = sub_10017DF08(&qword_100EB5E68);
  *(void *)&v14[*(int *)(v18 + 28)] = *(void *)&v15[*(int *)(v18 + 28)];
  swift_release();
  return a1;
}

uint64_t sub_100BA7268(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BA727C);
}

uint64_t sub_100BA727C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10017B108();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == v3)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v4;
LABEL_8:
    return _s7Weather24LocationCompositionStateOwet_0(v9, v3, v8);
  }
  if (v3 != 0x7FFFFFFF)
  {
    uint64_t v8 = sub_10017DF08(&qword_100EB5E68);
    uint64_t v9 = v4 + *(int *)(a3 + 24);
    goto LABEL_8;
  }
  unint64_t v10 = *(void *)(v4 + *(int *)(a3 + 20) + 24);
  if (v10 >= 0xFFFFFFFF) {
    LODWORD(v10) = -1;
  }
  return (v10 + 1);
}

uint64_t sub_100BA7328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BA733C);
}

void sub_100BA733C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_10017B108();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = v5;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(void *)(v5 + *(int *)(a4 + 20) + 24) = (v4 - 1);
      return;
    }
    uint64_t v10 = sub_10017DF08(&qword_100EB5E68);
    uint64_t v11 = v5 + *(int *)(a4 + 24);
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, v4, v4, v10);
}

uint64_t type metadata accessor for TemperatureChartPickerView(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100EB5EC8);
}

void sub_100BA7404()
{
  type metadata accessor for TemperatureChartKind();
  if (v0 <= 0x3F)
  {
    sub_100BA74D4();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100BA74D4()
{
  if (!qword_100EB5ED8)
  {
    sub_10018C6DC(&qword_100EA8FA0);
    unint64_t v0 = type metadata accessor for State();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100EB5ED8);
    }
  }
}

uint64_t sub_100BA7530()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100BA754C@<X0>(uint64_t a1@<X8>)
{
  v15[1] = a1;
  uint64_t v2 = type metadata accessor for TemperatureChartPickerView(0);
  uint64_t v3 = sub_100164920(v2);
  uint64_t v5 = v4;
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v3);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100BA89EC(v1, (uint64_t)v8, (void (*)(void))type metadata accessor for TemperatureChartPickerView);
  type metadata accessor for MainActor();
  uint64_t v9 = static MainActor.shared.getter();
  unint64_t v10 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v9;
  *(void *)(v11 + 24) = &protocol witness table for MainActor;
  sub_100BA9528((uint64_t)v8, v11 + v10, (void (*)(void))type metadata accessor for TemperatureChartPickerView);
  sub_100BA89EC(v1, (uint64_t)v8, (void (*)(void))type metadata accessor for TemperatureChartPickerView);
  uint64_t v12 = static MainActor.shared.getter();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = &protocol witness table for MainActor;
  sub_100BA9528((uint64_t)v8, v13 + v10, (void (*)(void))type metadata accessor for TemperatureChartPickerView);
  type metadata accessor for TemperatureChartKind();
  return Binding.init(get:set:)();
}

uint64_t sub_100BA7700@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TemperatureChartPickerView(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100EA8FA0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100EB5E68);
  State.wrappedValue.getter();
  sub_100BA89EC(a1, (uint64_t)v6, (void (*)(void))type metadata accessor for TemperatureChartPickerView);
  uint64_t v10 = type metadata accessor for TemperatureChartKind();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 16))(a2, v6, v10);
    sub_100BA8AF0((uint64_t)v6, (void (*)(void))type metadata accessor for TemperatureChartPickerView);
    return sub_1001781AC((uint64_t)v9, &qword_100EA8FA0);
  }
  else
  {
    sub_100BA8AF0((uint64_t)v6, (void (*)(void))type metadata accessor for TemperatureChartPickerView);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a2, v9, v10);
  }
}

uint64_t sub_100BA78DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v22 = a1;
  uint64_t v6 = type metadata accessor for DetailCondition();
  uint64_t v23 = *(void *)(v6 - 8);
  uint64_t v24 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100EA8FA0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v21 - v13;
  uint64_t v15 = type metadata accessor for TemperatureChartKind();
  int v16 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16);
  v16(v14, a1, v15);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v15);
  uint64_t v17 = type metadata accessor for TemperatureChartPickerView(0);
  sub_10006DF38((uint64_t)v14, (uint64_t)v11, &qword_100EA8FA0);
  sub_10017DF08(&qword_100EB5E68);
  State.wrappedValue.setter();
  sub_1001781AC((uint64_t)v14, &qword_100EA8FA0);
  sub_1001B1E64((void *)(a4 + *(int *)(v17 + 20)), *(void *)(a4 + *(int *)(v17 + 20) + 24));
  v16(v8, v22, v15);
  uint64_t v19 = v23;
  uint64_t v18 = v24;
  (*(void (**)(char *, void, uint64_t))(v23 + 104))(v8, enum case for DetailCondition.conditions(_:), v24);
  sub_1003211FC((uint64_t)v8);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v8, v18);
}

uint64_t sub_100BA7B28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10017DF08(&qword_100EB5F10);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = static HorizontalAlignment.leading.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  uint64_t v7 = sub_10017DF08(&qword_100EB5F18);
  sub_100BA7C3C(v2, &v6[*(int *)(v7 + 44)]);
  LOBYTE(v2) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v9 = v8;
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  sub_10006DF38((uint64_t)v6, a1, &qword_100EB5F10);
  uint64_t v16 = a1 + *(int *)(sub_10017DF08(&qword_100EB5F20) + 36);
  *(unsigned char *)uint64_t v16 = v2;
  *(void *)(v16 + 8) = v9;
  *(void *)(v16 + 16) = v11;
  *(void *)(v16 + 24) = v13;
  *(void *)(v16 + 32) = v15;
  *(unsigned char *)(v16 + 40) = 0;
  return sub_1001781AC((uint64_t)v6, &qword_100EB5F10);
}

uint64_t sub_100BA7C3C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  v84[1] = a1;
  uint64_t v109 = a2;
  uint64_t v105 = type metadata accessor for QuaternaryDividerStyle();
  uint64_t v107 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v99 = (char *)v84 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = type metadata accessor for Divider();
  uint64_t v103 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v97 = (char *)v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_10017DF08(&qword_100E77340);
  uint64_t v106 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  uint64_t v98 = (char *)v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_10017DF08(&qword_100E77348) - 8;
  __chkstk_darwin(v102);
  uint64_t v100 = (char *)v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v104 = (uint64_t)v84 - v7;
  uint64_t v90 = type metadata accessor for TemperatureChartKind();
  uint64_t v95 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v93 = (char *)v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TemperatureChartSelectionSummaryView(0);
  __chkstk_darwin(v9 - 8);
  uint64_t v91 = (char *)v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_10017DF08(&qword_100EB5F28) - 8;
  __chkstk_darwin(v94);
  uint64_t v92 = (uint64_t)v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_10017DF08(&qword_100EB5F30) - 8;
  __chkstk_darwin(v96);
  uint64_t v112 = (uint64_t)v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v113 = (uint64_t)v84 - v14;
  uint64_t v87 = type metadata accessor for SegmentedPickerStyle();
  uint64_t v88 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v16 = (char *)v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_10017DF08(&qword_100EB5F38);
  __chkstk_darwin(v89);
  uint64_t v18 = (char *)v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_10017DF08(&qword_100EB5F40);
  uint64_t v19 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v21 = (char *)v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_10017DF08(&qword_100EB5F48);
  uint64_t v110 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v111 = (char *)v84 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v114 = (char *)v84 - v24;
  LocalizedStringKey.init(stringLiteral:)();
  sub_100BA754C((uint64_t)v18);
  sub_10017DF08(&qword_100EB5F50);
  sub_100BA95DC(&qword_100EB5F58, (void (*)(uint64_t))&type metadata accessor for TemperatureChartKind);
  sub_100BA8980();
  uint64_t v25 = v90;
  Picker<>.init(_:selection:content:)();
  SegmentedPickerStyle.init()();
  sub_1001246C8(&qword_100EB5F68, &qword_100EB5F40);
  uint64_t v26 = v111;
  uint64_t v27 = v85;
  uint64_t v28 = v87;
  View.pickerStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v16, v28);
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v27);
  uint64_t v29 = v110;
  uint64_t v30 = v86;
  (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v114, v26, v86);
  sub_100BA754C((uint64_t)v18);
  uint64_t v31 = v93;
  Binding.wrappedValue.getter();
  sub_1001781AC((uint64_t)v18, &qword_100EB5F38);
  uint64_t v32 = v91;
  (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v91, v31, v25);
  LOBYTE(v31) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v41 = (uint64_t)v32;
  uint64_t v42 = (uint64_t)v32;
  uint64_t v43 = v92;
  sub_100BA89EC(v41, v92, (void (*)(void))type metadata accessor for TemperatureChartSelectionSummaryView);
  uint64_t v44 = v43 + *(int *)(v94 + 44);
  *(unsigned char *)uint64_t v44 = (_BYTE)v31;
  *(void *)(v44 + 8) = v34;
  *(void *)(v44 + 16) = v36;
  *(void *)(v44 + 24) = v38;
  *(void *)(v44 + 32) = v40;
  *(unsigned char *)(v44 + 40) = 0;
  sub_100BA8AF0(v42, (void (*)(void))type metadata accessor for TemperatureChartSelectionSummaryView);
  LOBYTE(v31) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  uint64_t v53 = v112;
  sub_10006DF38(v43, v112, &qword_100EB5F28);
  uint64_t v54 = v53 + *(int *)(v96 + 44);
  *(unsigned char *)uint64_t v54 = (_BYTE)v31;
  *(void *)(v54 + 8) = v46;
  *(void *)(v54 + 16) = v48;
  *(void *)(v54 + 24) = v50;
  *(void *)(v54 + 32) = v52;
  *(unsigned char *)(v54 + 40) = 0;
  sub_1001781AC(v43, &qword_100EB5F28);
  uint64_t v55 = v53;
  uint64_t v56 = v113;
  sub_10024D364(v55, v113, &qword_100EB5F30);
  uint64_t v57 = v97;
  Divider.init()();
  uint64_t v58 = v99;
  static DividerStyle<>.quaternary.getter();
  sub_100BA95DC(&qword_100E66F38, (void (*)(uint64_t))&type metadata accessor for Divider);
  sub_100BA95DC(&qword_100E77488, (void (*)(uint64_t))&type metadata accessor for QuaternaryDividerStyle);
  uint64_t v59 = v98;
  uint64_t v60 = v101;
  uint64_t v61 = v105;
  View.dividerStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v107 + 8))(v58, v61);
  (*(void (**)(char *, uint64_t))(v103 + 8))(v57, v60);
  LOBYTE(v31) = static Edge.Set.top.getter();
  swift_beginAccess();
  sub_10059263C();
  EdgeInsets.init(_all:)();
  uint64_t v63 = v62;
  uint64_t v65 = v64;
  uint64_t v67 = v66;
  uint64_t v69 = v68;
  uint64_t v70 = v106;
  uint64_t v71 = (uint64_t)v100;
  uint64_t v72 = v108;
  (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v100, v59, v108);
  uint64_t v73 = v71 + *(int *)(v102 + 44);
  *(unsigned char *)uint64_t v73 = (_BYTE)v31;
  *(void *)(v73 + 8) = v63;
  *(void *)(v73 + 16) = v65;
  *(void *)(v73 + 24) = v67;
  *(void *)(v73 + 32) = v69;
  *(unsigned char *)(v73 + 40) = 0;
  (*(void (**)(char *, uint64_t))(v70 + 8))(v59, v72);
  uint64_t v74 = v104;
  sub_10024D364(v71, v104, &qword_100E77348);
  uint64_t v75 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
  uint64_t v76 = v111;
  uint64_t v77 = v114;
  v75(v111, v114, v30);
  uint64_t v78 = v56;
  uint64_t v79 = v112;
  sub_10006DF38(v78, v112, &qword_100EB5F30);
  sub_10006DF38(v74, v71, &qword_100E77348);
  uint64_t v80 = v109;
  v75(v109, v76, v30);
  uint64_t v81 = sub_10017DF08(&qword_100EB5F70);
  sub_10006DF38(v79, (uint64_t)&v80[*(int *)(v81 + 48)], &qword_100EB5F30);
  sub_10006DF38(v71, (uint64_t)&v80[*(int *)(v81 + 64)], &qword_100E77348);
  sub_1001781AC(v74, &qword_100E77348);
  sub_1001781AC(v113, &qword_100EB5F30);
  uint64_t v82 = *(void (**)(char *, uint64_t))(v110 + 8);
  v82(v77, v30);
  sub_1001781AC(v71, &qword_100E77348);
  sub_1001781AC(v79, &qword_100EB5F30);
  return ((uint64_t (*)(char *, uint64_t))v82)(v76, v30);
}

uint64_t sub_100BA8800()
{
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_100BA8900@<X0>(uint64_t a1@<X8>)
{
  TemperatureChartKind.title.getter();
  sub_10014A85C();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t type metadata accessor for TemperatureChartSelectionSummaryView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB5FE0);
}

unint64_t sub_100BA8980()
{
  unint64_t result = qword_100EB5F60;
  if (!qword_100EB5F60)
  {
    sub_10018C6DC(&qword_100EB5F50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB5F60);
  }
  return result;
}

uint64_t sub_100BA89EC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_100BA8A44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for TemperatureChartPickerView(0);
  sub_1001627C0(v3);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_100BA7700(v5, a1);
}

uint64_t sub_100BA8A9C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for TemperatureChartPickerView(0);
  sub_1001627C0(v3);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_100BA78DC(a1, v5, v6, v7);
}

uint64_t sub_100BA8AF0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100BA8B48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TemperatureChartKind();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_100BA8BB4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TemperatureChartKind();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_100BA8C18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TemperatureChartKind();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_100BA8C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TemperatureChartKind();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_100BA8CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TemperatureChartKind();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_100BA8D44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TemperatureChartKind();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_100BA8DA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BA8DBC);
}

uint64_t sub_100BA8DBC()
{
  uint64_t v2 = sub_10017B108();

  return _s7Weather24LocationCompositionStateOwet_0(v1, v0, v2);
}

uint64_t sub_100BA8DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BA8E0C);
}

uint64_t sub_100BA8E0C()
{
  uint64_t v2 = sub_10017B108();

  return _s7Weather24LocationCompositionStateOwst_0(v1, v0, v0, v2);
}

uint64_t sub_100BA8E4C()
{
  uint64_t result = type metadata accessor for TemperatureChartKind();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_100BA8EDC()
{
  unint64_t result = qword_100EB6018;
  if (!qword_100EB6018)
  {
    sub_10018C6DC(&qword_100EB5F20);
    sub_1001246C8(&qword_100EB6020, &qword_100EB5F10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6018);
  }
  return result;
}

uint64_t sub_100BA8F7C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100BA8F98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for TemperatureChartSelectionSummaryView(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  *a1 = static Alignment.topLeading.getter();
  a1[1] = v6;
  sub_10017DF08(&qword_100EB6028);
  v12[3] = static TemperatureChartKind.allCases.getter();
  swift_getKeyPath();
  sub_100BA89EC(v1, (uint64_t)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for TemperatureChartSelectionSummaryView);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = swift_allocObject();
  sub_100BA9528((uint64_t)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v8 + v7, (void (*)(void))type metadata accessor for TemperatureChartSelectionSummaryView);
  sub_10017DF08(&qword_100EB5F78);
  sub_10017DF08(&qword_100EB6030);
  sub_1001246C8(&qword_100EB5F80, &qword_100EB5F78);
  uint64_t v9 = sub_10018C6DC(&qword_100E7A000);
  unint64_t v10 = sub_1005F9F5C();
  v12[1] = v9;
  long long v12[2] = v10;
  swift_getOpaqueTypeConformance2();
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_100BA91AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  uint64_t v3 = type metadata accessor for TemperatureChartKind();
  uint64_t v27 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v26 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = TemperatureChartKind.summary.getter();
  uint64_t v32 = v5;
  sub_10014A85C();
  uint64_t v6 = Text.init<A>(_:)();
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  static Font.footnote.getter();
  uint64_t v11 = Text.font(_:)();
  uint64_t v13 = v12;
  char v15 = v14;
  swift_release();
  sub_100191924(v6, v8, v10);
  swift_bridgeObjectRelease();
  uint64_t v31 = static Color.secondary.getter();
  uint64_t v16 = Text.foregroundStyle<A>(_:)();
  uint64_t v18 = v17;
  char v20 = v19;
  uint64_t v22 = v21;
  sub_100191924(v11, v13, v15 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v31 = v16;
  uint64_t v32 = v18;
  char v33 = v20 & 1;
  uint64_t v34 = v22;
  __int16 v35 = 256;
  uint64_t v24 = v26;
  uint64_t v23 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v26, v29, v3);
  sub_100BA95DC(&qword_100EB6038, (void (*)(uint64_t))&type metadata accessor for TemperatureChartKind);
  dispatch thunk of static Equatable.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v3);
  sub_10017DF08(&qword_100E7A000);
  sub_1005F9F5C();
  View.isHidden(_:defaultAccessibilityHidden:)();
  sub_100191924(v31, v32, v33);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100BA9450@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = TemperatureChartKind.title.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100BA947C()
{
  uint64_t v1 = type metadata accessor for TemperatureChartSelectionSummaryView(0);
  sub_100164920(v1);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  type metadata accessor for TemperatureChartKind();
  sub_100162E4C();
  (*(void (**)(uint64_t))(v4 + 8))(v3);

  return swift_deallocObject();
}

uint64_t sub_100BA9528(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t sub_100BA957C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for TemperatureChartSelectionSummaryView(0);
  sub_1001627C0(v5);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_100BA91AC(a1, v7, a2);
}

uint64_t sub_100BA95DC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100BA9624()
{
  return sub_1001246C8(&qword_100EB6040, &qword_100EB6048);
}

uint64_t sub_100BA9660(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for MainAction();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(uint64_t (**)(uint64_t))(a2 + OBJC_IVAR____TtC7Weather28LocationAuthorizationMonitor_dispatcher);
  type metadata accessor for ActivityAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for EnvironmentAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = 0;
  memset(v8, 0, sizeof(v8));
  swift_retain();
  sub_1001AAF58((uint64_t)v5, (uint64_t)v8, v6);
  sub_100016E7C((uint64_t)v8);
  sub_100159290((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for MainAction);
  return swift_release();
}

void sub_100BA9780()
{
}

uint64_t sub_100BA9840()
{
  sub_10017DF08(&qword_100E76B08);
  uint64_t updated = type metadata accessor for LocationManagerUpdateType();
  uint64_t v1 = *(void *)(updated - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_100C251B0;
  (*(void (**)(unint64_t, void, uint64_t))(v1 + 104))(v3 + v2, enum case for LocationManagerUpdateType.authorization(_:), updated);
  return v3;
}

uint64_t sub_100BA9918(uint64_t a1, int a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v2;
  *(_DWORD *)(v4 + 24) = a2;
  id v5 = v2;
  asyncMain(block:)();

  return swift_release();
}

uint64_t sub_100BA9994(uint64_t a1, unsigned int a2)
{
  uint64_t v4 = type metadata accessor for EnvironmentState();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for MainAction();
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v10 = *(uint64_t (**)(uint64_t))(a1 + OBJC_IVAR____TtC7Weather28LocationAuthorizationMonitor_dispatcher);
  *uint64_t v9 = sub_100BA9C38(a2);
  type metadata accessor for EnvironmentAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = 0;
  long long v15 = 0u;
  long long v16 = 0u;
  swift_retain();
  sub_1001AAF58((uint64_t)v9, (uint64_t)&v15, v10);
  sub_100016E7C((uint64_t)&v15);
  sub_100159290((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MainAction);
  swift_release();
  uint64_t result = sub_100020A6C();
  if (a2)
  {
    (*(void (**)(long long *__return_ptr, uint64_t))(a1
                                                            + OBJC_IVAR____TtC7Weather28LocationAuthorizationMonitor_stateReader))(&v15, result);
    uint64_t v12 = v15 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
    swift_beginAccess();
    sub_1000F1324(v12, (uint64_t)v6);
    swift_release();
    int v13 = v6[*(int *)(v4 + 48)];
    uint64_t result = sub_100159290((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for EnvironmentState);
    if (v13 == 1)
    {
      type metadata accessor for ActivityAction();
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      uint64_t v17 = 0;
      long long v15 = 0u;
      long long v16 = 0u;
      swift_retain();
      sub_1001AAF58((uint64_t)v9, (uint64_t)&v15, v10);
      sub_100016E7C((uint64_t)&v15);
      sub_100159290((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for MainAction);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_100BA9C38(unsigned int a1)
{
  if (a1 >= 5) {
    return 0;
  }
  else {
    return (0x102030400uLL >> (8 * a1));
  }
}

uint64_t sub_100BA9C58()
{
  return sub_100BA9840();
}

uint64_t sub_100BA9C70()
{
  uint64_t ObjectType = swift_getObjectType();

  return LocationManagerObserver.reducedLocationUpdates.getter(ObjectType);
}

uint64_t sub_100BA9CB0(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();

  return LocationManagerObserver.currentCLLocationDidUpdate(_:location:)(a1, a2, ObjectType);
}

uint64_t sub_100BA9D08(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();

  return LocationManagerObserver.currentLocationDidUpdate(_:location:)(a1, a2, ObjectType);
}

uint64_t sub_100BA9D60(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();

  return LocationManagerObserver.currentLocationUpdateDidFail(_:error:)(a1, a2, ObjectType);
}

uint64_t sub_100BA9DB8()
{
  sub_1001B1E64((void *)(v0 + OBJC_IVAR____TtC7Weather28LocationAuthorizationMonitor_locationManager), *(void *)(v0 + OBJC_IVAR____TtC7Weather28LocationAuthorizationMonitor_locationManager + 24));
  sub_10021A6D4();
  return dispatch thunk of LocationManagerType.removeObserver(_:)();
}

uint64_t sub_100BA9E18()
{
  return swift_deallocObject();
}

uint64_t sub_100BA9E50()
{
  return sub_100BA9994(*(void *)(v0 + 16), *(_DWORD *)(v0 + 24));
}

uint64_t sub_100BA9E5C()
{
  return swift_deallocObject();
}

uint64_t sub_100BA9E94(uint64_t a1)
{
  return sub_100BA9660(a1, *(void *)(v1 + 16));
}

unsigned char *storeEnumTagSinglePayload for AppLifecycleAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100BA9F68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppLifecycleAction()
{
  return &type metadata for AppLifecycleAction;
}

unint64_t sub_100BA9FA4()
{
  unint64_t result = qword_100EB60A0;
  if (!qword_100EB60A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB60A0);
  }
  return result;
}

ValueMetadata *type metadata accessor for MoonCalendarView()
{
  return &type metadata for MoonCalendarView;
}

uint64_t sub_100BAA000()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100BAA01C@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static HorizontalAlignment.center.getter();
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v3 = sub_10017DF08(&qword_100EB60A8);
  return sub_100BAA064(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_100BAA064@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v60 = a2;
  uint64_t v3 = type metadata accessor for OverviewTableViewModel();
  uint64_t v55 = *(void *)(v3 - 8);
  uint64_t v56 = (void (*)(char *, char *, uint64_t))v3;
  __chkstk_darwin(v3);
  uint64_t v54 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OverviewTableView();
  uint64_t v58 = *(void *)(v5 - 8);
  uint64_t v59 = v5;
  __chkstk_darwin(v5);
  uint64_t v65 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v67 = (char *)&v51 - v8;
  uint64_t v63 = type metadata accessor for Divider();
  uint64_t v57 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v68 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v66 = (char *)&v51 - v11;
  uint64_t v52 = sub_10017DF08(&qword_100E651D0);
  __chkstk_darwin(v52);
  int v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for CalendarViewModel(0);
  __chkstk_darwin(v14 - 8);
  long long v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for MoonCalendarViewModel();
  __chkstk_darwin(v53);
  uint64_t v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for CalendarView();
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_10017DF08(&qword_100EB60B0);
  uint64_t v62 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v23 = (char *)&v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v51 - v25;
  swift_retain();
  sub_100250518();
  swift_release();
  sub_100BAA868((uint64_t)v18, (uint64_t)v16);
  sub_100BAA974((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for MoonCalendarViewModel);
  sub_10020D948(a1 + 16, (uint64_t)v69);
  sub_1002B7808((uint64_t)v16, (uint64_t)v69, (uint64_t)v21);
  uint64_t v27 = enum case for DynamicTypeSize.accessibility1(_:);
  uint64_t v28 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(v13, v27, v28);
  sub_100BAA8CC(&qword_100E651F0, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result)
  {
    sub_100BAA8CC(&qword_100EB60B8, (void (*)(uint64_t))type metadata accessor for CalendarView);
    sub_1001246C8((unint64_t *)&unk_100EAADB0, &qword_100E651D0);
    View.dynamicTypeSize<A>(_:)();
    sub_100BAA914((uint64_t)v13);
    sub_100BAA974((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for CalendarView);
    uint64_t v30 = v62;
    uint64_t v31 = *(void (**)(char *, char *))(v62 + 32);
    uint64_t v51 = v26;
    uint64_t v32 = v23;
    char v33 = v23;
    uint64_t v61 = v23;
    uint64_t v34 = v64;
    v31(v26, v32);
    __int16 v35 = v66;
    Divider.init()();
    swift_retain();
    sub_100250518();
    swift_release();
    (*(void (**)(char *, char *, void))(v55 + 16))(v54, &v18[*(int *)(v53 + 20)], v56);
    sub_100BAA974((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for MoonCalendarViewModel);
    swift_beginAccess();
    sub_1009D9714();
    sub_1009D973C();
    uint64_t v36 = v67;
    OverviewTableView.init(model:rowVerticalPadding:rowHorizontalPadding:showDividerOnFirstRow:titleFont:valueFont:)();
    uint64_t v55 = *(void *)(v30 + 16);
    uint64_t v37 = v34;
    ((void (*)(char *, char *, uint64_t))v55)(v33, v26, v34);
    uint64_t v38 = v57;
    uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v57 + 16);
    v56(v68, v35, v63);
    uint64_t v39 = v58;
    uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v58 + 16);
    uint64_t v41 = v36;
    uint64_t v42 = v59;
    v40(v65, v41, v59);
    uint64_t v43 = v60;
    ((void (*)(uint64_t, char *, uint64_t))v55)(v60, v61, v37);
    uint64_t v44 = sub_10017DF08(&qword_100EB60C0);
    uint64_t v45 = v63;
    v56((char *)(v43 + *(int *)(v44 + 48)), v68, v63);
    uint64_t v46 = v65;
    v40((char *)(v43 + *(int *)(v44 + 64)), v65, v42);
    uint64_t v47 = *(void (**)(char *, uint64_t))(v39 + 8);
    v47(v67, v42);
    uint64_t v48 = *(void (**)(char *, uint64_t))(v38 + 8);
    v48(v66, v45);
    uint64_t v49 = *(void (**)(char *, uint64_t))(v62 + 8);
    uint64_t v50 = v64;
    v49(v51, v64);
    v47(v46, v42);
    v48(v68, v45);
    return ((uint64_t (*)(char *, uint64_t))v49)(v61, v50);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100BAA868(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CalendarViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BAA8CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100BAA914(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E651D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100BAA974(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100BAA9D4()
{
  return sub_1001246C8(&qword_100EB60C8, qword_100EB60D0);
}

uint64_t type metadata accessor for NhpNewsContentView()
{
  return sub_100109098();
}

uint64_t sub_100BAAA28()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100BAAA6C@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v57 = a7;
  uint64_t v58 = a6;
  uint64_t v45 = a4;
  uint64_t v52 = a3;
  v70[3] = a5;
  int v9 = a2;
  unsigned int v10 = a2 & 0x100;
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  v70[7] = a5;
  sub_10017C794();
  uint64_t v50 = sub_10017F7C0();
  uint64_t v56 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v53 = v11;
  __chkstk_darwin(v12);
  sub_100162EF8();
  uint64_t v55 = v13;
  __chkstk_darwin(v14);
  uint64_t v54 = (uint64_t)&v41 - v15;
  v70[0] = a5;
  v70[1] = a5;
  void v70[2] = a5;
  v70[3] = type metadata accessor for Optional();
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  v70[7] = a5;
  sub_10017C794();
  sub_10017F7C0();
  uint64_t v51 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v49 = v16;
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v59 = v18;
  __chkstk_darwin(v19);
  uint64_t v60 = (uint64_t)&v41 - v20;
  if (v9)
  {
    if (v9 == 1)
    {
      if (v10)
      {
        uint64_t v21 = &qword_100E8B9E0;
        goto LABEL_11;
      }
    }
    else if (v10)
    {
      uint64_t v21 = &qword_100E8BDF0;
      goto LABEL_11;
    }
    uint64_t v21 = &qword_100E8BBE8;
    goto LABEL_11;
  }
  if (v10) {
    uint64_t v21 = &qword_100E8B5D0;
  }
  else {
    uint64_t v21 = &qword_100E8B7D8;
  }
LABEL_11:
  memcpy(v70, v21, sizeof(v70));
  uint64_t v22 = memcpy(v69, v70, sizeof(v69));
  __chkstk_darwin(v22);
  uint64_t v23 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v23;
  *(&v41 - 6) = a1;
  *((unsigned char *)&v41 - 40) = v9;
  uint64_t v44 = a1;
  int v42 = v9;
  unsigned int v43 = v10 >> 8;
  *((unsigned char *)&v41 - 39) = BYTE1(v10);
  uint64_t v24 = v45;
  *(&v41 - 4) = v52;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v26 = v59;
  Group<A>.init(content:)();
  uint64_t v68 = WitnessTable;
  uint64_t v27 = v51;
  uint64_t v46 = swift_getWitnessTable();
  sub_100121584(v26, v27, v60);
  uint64_t v28 = v49;
  uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8);
  uint64_t v48 = v49 + 8;
  uint64_t v29 = v47(v26, v27);
  __chkstk_darwin(v29);
  uint64_t v30 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v30;
  *(&v41 - 6) = v44;
  *((unsigned char *)&v41 - 40) = v42;
  *((unsigned char *)&v41 - 39) = v43;
  *(&v41 - 4) = v31;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = v55;
  Group<A>.init(content:)();
  uint64_t v67 = v32;
  uint64_t v34 = v56;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v35 = v54;
  sub_100121584(v33, v34, v54);
  uint64_t v36 = v53;
  uint64_t v37 = *(void (**)(void))(v53 + 8);
  sub_10017C768();
  v37();
  uint64_t v38 = v59;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v59, v60, v27);
  uint64_t v65 = v38;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v33, v35, v34);
  uint64_t v66 = v33;
  uint64_t v63 = v27;
  uint64_t v64 = v34;
  uint64_t v61 = v46;
  uint64_t v62 = v58;
  sub_1006E9080();
  sub_10017C768();
  v37();
  uint64_t v39 = v47;
  v47(v60, v27);
  sub_10017C768();
  v37();
  return v39(v38, v27);
}

uint64_t sub_100BAAF2C@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v101 = a6;
  uint64_t v102 = a5;
  uint64_t v10 = sub_10017DF08(&qword_100E64E80);
  __chkstk_darwin(v10 - 8);
  uint64_t v99 = (uint64_t)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for Optional();
  uint64_t v112 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  uint64_t v119 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v118 = (char *)&v94 - v14;
  uint64_t v98 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v98);
  uint64_t v95 = (uint64_t)&v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v94 - v17;
  uint64_t v105 = *(void *)(a4 - 8);
  __chkstk_darwin(v19);
  uint64_t v100 = (char *)&v94 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v111 = (char *)&v94 - v22;
  __chkstk_darwin(v23);
  uint64_t v110 = (char *)&v94 - v24;
  __chkstk_darwin(v25);
  uint64_t v108 = (char *)&v94 - v26;
  __chkstk_darwin(v27);
  uint64_t v109 = (char *)&v94 - v28;
  __chkstk_darwin(v29);
  uint64_t v106 = (char *)&v94 - v30;
  __chkstk_darwin(v31);
  uint64_t v107 = (char *)&v94 - v32;
  __chkstk_darwin(v33);
  uint64_t v104 = (char *)&v94 - v34;
  __chkstk_darwin(v35);
  uint64_t v114 = (char *)&v94 - v36;
  __chkstk_darwin(v37);
  uint64_t v122 = (char *)&v94 - v38;
  __chkstk_darwin(v39);
  uint64_t v116 = (char *)&v94 - v40;
  __chkstk_darwin(v41);
  uint64_t v115 = (char *)&v94 - v42;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v94 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v94 - v47;
  uint64_t v117 = a1;
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather14NhpNewsContent8_Storage_nextHourPrecipitation, (uint64_t)v18);
  uint64_t v96 = a3;
  uint64_t v49 = a3[37];
  uint64_t v50 = a3[38];
  uint64_t v51 = a3[39];
  uint64_t v52 = a3[40];
  uint64_t v123 = a2;
  a2(v18, v49, v50, v51, v52);
  sub_1001F2B74((uint64_t)v18);
  uint64_t v103 = v48;
  sub_100121584((uint64_t)v45, a4, (uint64_t)v48);
  uint64_t v53 = v105 + 8;
  uint64_t v124 = *(void (**)(char *, uint64_t))(v105 + 8);
  v124(v45, a4);
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather14NhpNewsContent8_Storage_newsArticle, (uint64_t)v18);
  uint64_t v54 = v96;
  a2(v18, v96[33], v96[34], v96[35], v96[36]);
  sub_1001F2B74((uint64_t)v18);
  uint64_t v55 = v54;
  sub_100121584((uint64_t)v45, a4, (uint64_t)v115);
  uint64_t v56 = v124;
  v124(v45, a4);
  uint64_t v57 = v117;
  sub_1001F3734(v117 + OBJC_IVAR____TtCV7Weather14NhpNewsContent8_Storage_airQuality, (uint64_t)v18);
  v123(v18, *v55, v55[1], v55[2], v55[3]);
  uint64_t v97 = v18;
  sub_1001F2B74((uint64_t)v18);
  sub_100121584((uint64_t)v45, a4, (uint64_t)v116);
  uint64_t v121 = v45;
  uint64_t v113 = v53;
  v56(v45, a4);
  uint64_t v58 = v57 + OBJC_IVAR____TtCV7Weather14NhpNewsContent8_Storage_map;
  swift_beginAccess();
  uint64_t v59 = v58;
  uint64_t v60 = v99;
  sub_10027A764(v59, v99);
  if (_s7Weather24LocationCompositionStateOwet_0(v60, 1, v98) == 1)
  {
    sub_10027A7CC(v60);
  }
  else
  {
    uint64_t v61 = v95;
    sub_10027A82C(v60, v95);
    sub_10027A890((uint64_t)(v55 + 24), (uint64_t)v150);
    sub_10027A890((uint64_t)v150, (uint64_t)v151);
    if (v152 != 1)
    {
      uint64_t v65 = (uint64_t)v122;
      v123((char *)v61, v151[0], v151[1], v151[2], v151[3]);
      sub_1001F2B74(v61);
      uint64_t v66 = (uint64_t)v121;
      sub_100121584(v65, a4, (uint64_t)v121);
      uint64_t v67 = (void (*)(uint64_t, uint64_t))v124;
      v124((char *)v65, a4);
      uint64_t v62 = (uint64_t)v119;
      sub_100121584(v66, a4, (uint64_t)v119);
      v67(v66, a4);
      uint64_t v63 = v62;
      uint64_t v64 = 0;
      goto LABEL_7;
    }
    sub_1001F2B74(v61);
  }
  uint64_t v62 = (uint64_t)v119;
  uint64_t v63 = (uint64_t)v119;
  uint64_t v64 = 1;
LABEL_7:
  _s7Weather24LocationCompositionStateOwst_0(v63, v64, 1, a4);
  sub_1000CA354();
  uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v112 + 8);
  uint64_t v99 = (v112 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v68(v62, v120);
  uint64_t v69 = a4;
  uint64_t v70 = v117;
  uint64_t v71 = (uint64_t)v97;
  sub_1001F3734(*(void *)(v117 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v97);
  uint64_t v72 = (void (*)(uint64_t, void, void, void, void))v123;
  uint64_t v73 = (uint64_t)v122;
  v123((char *)v71, v55[16], v55[17], v55[18], v55[19]);
  sub_1001F2B74(v71);
  sub_100121584(v73, v69, (uint64_t)v121);
  v124((char *)v73, v69);
  sub_1001F3734(*(void *)(v70 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, v71);
  uint64_t v74 = (uint64_t)v114;
  v72(v71, v55[8], v55[9], v55[10], v55[11]);
  sub_1001F2B74(v71);
  sub_100121584(v74, v69, v73);
  v124((char *)v74, v69);
  sub_1001F3734(*(void *)(v70 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, v71);
  uint64_t v75 = (uint64_t)v104;
  v72(v71, v55[53], v55[54], v55[55], v55[56]);
  sub_1001F2B74(v71);
  uint64_t v76 = v102;
  sub_100121584(v75, v69, v74);
  uint64_t v77 = v124;
  v124((char *)v75, v69);
  sub_1001F3734(*(void *)(v117 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, v71);
  uint64_t v78 = (uint64_t)v107;
  v123((char *)v71, v55[49], v55[50], v55[51], v55[52]);
  sub_1001F2B74(v71);
  sub_100121584(v78, v69, v75);
  uint64_t v79 = v77;
  v77((char *)v78, v69);
  uint64_t v80 = *(void (**)(uint64_t, char *, uint64_t))(v105 + 16);
  v80(v78, v103, v69);
  uint64_t v142 = v78;
  uint64_t v81 = v106;
  v80((uint64_t)v106, v115, v69);
  uint64_t v143 = v81;
  uint64_t v82 = v109;
  v80((uint64_t)v109, v116, v69);
  uint64_t v144 = v82;
  uint64_t v83 = v112 + 16;
  uint64_t v84 = (uint64_t)v119;
  (*(void (**)(char *, char *, uint64_t))(v112 + 16))(v119, v118, v120);
  uint64_t v145 = v84;
  uint64_t v85 = v108;
  v80((uint64_t)v108, v121, v69);
  uint64_t v146 = v85;
  uint64_t v86 = v110;
  v80((uint64_t)v110, v122, v69);
  uint64_t v147 = v86;
  uint64_t v87 = v111;
  v80((uint64_t)v111, v114, v69);
  uint64_t v148 = v87;
  uint64_t v88 = v100;
  uint64_t v89 = v104;
  v80((uint64_t)v100, v104, v69);
  uint64_t v149 = v88;
  uint64_t v90 = v88;
  uint64_t v134 = v69;
  uint64_t v135 = v69;
  uint64_t v91 = v120;
  uint64_t v136 = v69;
  uint64_t v137 = v120;
  uint64_t v138 = v69;
  uint64_t v139 = v69;
  uint64_t v140 = v69;
  uint64_t v141 = v69;
  uint64_t v126 = v76;
  uint64_t v127 = v76;
  uint64_t v128 = v76;
  uint64_t v125 = v76;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v130 = v76;
  uint64_t v131 = v76;
  uint64_t v132 = v76;
  uint64_t v133 = v76;
  sub_1006E9080();
  v79(v89, v69);
  v79(v114, v69);
  v79(v122, v69);
  v79(v121, v69);
  uint64_t v92 = *(void (**)(char *, uint64_t))(v83 - 8);
  v92(v118, v91);
  v79(v116, v69);
  v79(v115, v69);
  v79(v103, v69);
  v79(v90, v69);
  v79(v111, v69);
  v79(v110, v69);
  v79(v108, v69);
  v92(v119, v91);
  v79(v109, v69);
  v79(v106, v69);
  return ((uint64_t (*)(char *, uint64_t))v79)(v107, v69);
}

uint64_t sub_100BABA9C@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v102 = a5;
  uint64_t v84 = a6;
  uint64_t v10 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = *(void *)(a4 - 8);
  uint64_t v13 = v82;
  __chkstk_darwin(v14);
  uint64_t v83 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v98 = (char *)&v82 - v17;
  __chkstk_darwin(v18);
  uint64_t v97 = (char *)&v82 - v19;
  __chkstk_darwin(v20);
  uint64_t v96 = (char *)&v82 - v21;
  __chkstk_darwin(v22);
  uint64_t v95 = (char *)&v82 - v23;
  __chkstk_darwin(v24);
  uint64_t v93 = (char *)&v82 - v25;
  __chkstk_darwin(v26);
  uint64_t v92 = (char *)&v82 - v27;
  __chkstk_darwin(v28);
  uint64_t v90 = (char *)&v82 - v29;
  __chkstk_darwin(v30);
  uint64_t v89 = (char *)&v82 - v31;
  __chkstk_darwin(v32);
  uint64_t v101 = (char *)&v82 - v33;
  __chkstk_darwin(v34);
  uint64_t v87 = (char *)&v82 - v35;
  __chkstk_darwin(v36);
  uint64_t v86 = (char *)&v82 - v37;
  __chkstk_darwin(v38);
  uint64_t v100 = (char *)&v82 - v39;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v82 - v41;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v82 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v82 - v47;
  uint64_t v94 = (char *)&v82 - v47;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v12);
  uint64_t v49 = a3[61];
  uint64_t v50 = a3[62];
  uint64_t v51 = a3[63];
  uint64_t v52 = a3[64];
  uint64_t v99 = a2;
  a2(v12, v49, v50, v51, v52);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v45, a4, (uint64_t)v48);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v91 = v45;
  v53(v45, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)v12);
  a2(v12, a3[45], a3[46], a3[47], a3[48]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v42, a4, (uint64_t)v45);
  uint64_t v88 = v42;
  v53(v42, a4);
  uint64_t v85 = a1;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v12);
  uint64_t v54 = (uint64_t)v100;
  v99(v12, a3[12], a3[13], a3[14], a3[15]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v54, a4, (uint64_t)v42);
  uint64_t v55 = v54;
  v53((char *)v54, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)v12);
  uint64_t v56 = (uint64_t)v86;
  uint64_t v57 = v99;
  v99(v12, a3[20], a3[21], a3[22], a3[23]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v56, a4, v55);
  v53((char *)v56, a4);
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v12);
  uint64_t v58 = (uint64_t)v87;
  v57(v12, a3[57], a3[58], a3[59], a3[60]);
  sub_1001F2B74((uint64_t)v12);
  uint64_t v59 = v58;
  sub_100121584(v58, a4, v56);
  v53((char *)v58, a4);
  uint64_t v60 = v85;
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)v12);
  uint64_t v61 = (uint64_t)v101;
  uint64_t v62 = v99;
  v99(v12, a3[41], a3[42], a3[43], a3[44]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v61, a4, v59);
  v53((char *)v61, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, (uint64_t)v12);
  uint64_t v63 = (uint64_t)v89;
  v62(v12, a3[29], a3[30], a3[31], a3[32]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v63, a4, (uint64_t)v101);
  v53((char *)v63, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, (uint64_t)v12);
  uint64_t v64 = a3[4];
  uint64_t v65 = a3[5];
  uint64_t v66 = a3[6];
  uint64_t v67 = a3[7];
  uint64_t v68 = (uint64_t)v90;
  v62(v12, v64, v65, v66, v67);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v68, a4, v63);
  v53((char *)v68, a4);
  uint64_t v69 = *(void (**)(uint64_t, char *, uint64_t))(v82 + 16);
  v69(v68, v94, a4);
  uint64_t v119 = v68;
  uint64_t v70 = v92;
  v69((uint64_t)v92, v91, a4);
  uint64_t v120 = v70;
  uint64_t v71 = v93;
  v69((uint64_t)v93, v88, a4);
  uint64_t v121 = v71;
  uint64_t v72 = v95;
  v69((uint64_t)v95, v100, a4);
  uint64_t v122 = v72;
  uint64_t v73 = v96;
  uint64_t v74 = v86;
  v69((uint64_t)v96, v86, a4);
  uint64_t v123 = v73;
  uint64_t v75 = v97;
  uint64_t v76 = v87;
  v69((uint64_t)v97, v87, a4);
  uint64_t v124 = v75;
  uint64_t v77 = v98;
  uint64_t v78 = (uint64_t)v101;
  v69((uint64_t)v98, v101, a4);
  uint64_t v125 = v77;
  uint64_t v79 = v83;
  uint64_t v80 = v89;
  v69((uint64_t)v83, v89, a4);
  uint64_t v126 = v79;
  uint64_t v111 = a4;
  uint64_t v112 = a4;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v115 = a4;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v103 = v102;
  uint64_t v104 = v102;
  uint64_t v105 = v102;
  uint64_t v106 = v102;
  uint64_t v107 = v102;
  uint64_t v108 = v102;
  uint64_t v109 = v102;
  uint64_t v110 = v102;
  sub_1006E9080();
  v53(v80, a4);
  v53((char *)v78, a4);
  v53(v76, a4);
  v53(v74, a4);
  v53(v100, a4);
  v53(v88, a4);
  v53(v91, a4);
  v53(v94, a4);
  v53(v79, a4);
  v53(v98, a4);
  v53(v97, a4);
  v53(v96, a4);
  v53(v95, a4);
  v53(v93, a4);
  v53(v92, a4);
  return ((uint64_t (*)(char *, uint64_t))v53)(v90, a4);
}

uint64_t sub_100BAC4E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(v2 + 9)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_100BAAA6C(*(void *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_100BAC510()
{
  return sub_100BAC540((uint64_t (*)(void, void, void, void, void, void, void))sub_100BAAF2C);
}

uint64_t sub_100BAC528()
{
  return sub_100BAC540((uint64_t (*)(void, void, void, void, void, void, void))sub_100BABA9C);
}

uint64_t sub_100BAC540(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  if (*(unsigned char *)(v1 + 41)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return a1(*(void *)(v1 + 32), v2 | *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100BAC618(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Location.Identifier();
  uint64_t v37 = *(void *)(v4 - 8);
  uint64_t v38 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SavedLocation();
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v29 - v11;
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.geocode.getter();
  sub_10016698C(a2, (uint64_t)v12, (void (*)(void))&type metadata accessor for SavedLocation);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v39 = v16;
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  int v36 = v18;
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v35 = v2;
    uint64_t v20 = v19;
    uint64_t v31 = (void *)swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    uint64_t v41 = v33;
    *(_DWORD *)uint64_t v20 = 141558531;
    uint64_t v40 = 1752392040;
    uint64_t v34 = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v20 + 12) = 2081;
    uint64_t v29 = v20 + 14;
    os_log_t v30 = v17;
    SavedLocation.identifier.getter();
    uint64_t v21 = Location.Identifier.id.getter();
    uint64_t v32 = v13;
    uint64_t v22 = v10;
    uint64_t v23 = a2;
    unint64_t v25 = v24;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v6, v38);
    uint64_t v40 = sub_10016414C(v21, v25, &v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    a2 = v23;
    uint64_t v10 = v22;
    swift_bridgeObjectRelease();
    sub_1001592F0((uint64_t)v12, (void (*)(void))&type metadata accessor for SavedLocation);
    *(_WORD *)(v20 + 22) = 2114;
    swift_errorRetain();
    uint64_t v26 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v40 = v26;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v31 = v26;
    swift_errorRelease();
    swift_errorRelease();
    os_log_t v27 = v30;
    _os_log_impl((void *)&_mh_execute_header, v30, (os_log_type_t)v36, "Failed to reverse geo code location: %{private,mask.hash}s due to: %{public}@", (uint8_t *)v20, 0x20u);
    sub_10017DF08(&qword_100EAC3F0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v34 + 8))(v39, v32);
  }
  else
  {
    sub_1001592F0((uint64_t)v12, (void (*)(void))&type metadata accessor for SavedLocation);
    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(char *, uint64_t))(v14 + 8))(v39, v13);
  }
  sub_10016698C(a2, (uint64_t)v10, (void (*)(void))&type metadata accessor for SavedLocation);
  sub_10017DF08(&qword_100EB6228);
  swift_allocObject();
  return Promise.init(value:)();
}

uint64_t sub_100BACAC0()
{
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 48);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 96);
  sub_1001361AC(*(void *)(v0 + 136));
  return v0;
}

uint64_t sub_100BACB0C()
{
  sub_100BACAC0();

  return swift_deallocClassInstance();
}

uint64_t sub_100BACB40()
{
  return swift_deallocObject();
}

uint64_t sub_100BACB50()
{
  type metadata accessor for SavedLocation();
  if (swift_getEnumCaseMultiPayload() == 1) {
    type metadata accessor for SavedLocation.Placeholder();
  }
  else {
    type metadata accessor for Location();
  }
  sub_100162E4C();
  uint64_t v0 = sub_100162728();
  v1(v0);

  return swift_deallocObject();
}

uint64_t sub_100BACC3C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for SavedLocation() - 8);
  return sub_100BAC618(a1, v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

uint64_t *sub_100BACCA8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for WeatherDescription();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_100BACD8C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for WeatherDescription();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_100BACE04(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for WeatherDescription();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

void *sub_100BACE9C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for WeatherDescription();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *sub_100BACF30(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for WeatherDescription();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_100BACFAC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for WeatherDescription();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_100BAD038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BAD04C);
}

uint64_t sub_100BAD04C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for WeatherDescription();
    uint64_t v9 = (uint64_t)a1 + *(int *)(a3 + 20);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_100BAD0D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BAD0E8);
}

void *sub_100BAD0E8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for WeatherDescription();
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 20);
    return (void *)_s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SunriseSunsetMonthlyViewModel()
{
  uint64_t result = qword_100EB6290;
  if (!qword_100EB6290) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100BAD1B0()
{
  uint64_t result = type metadata accessor for WeatherDescription();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100BAD24C(uint64_t *a1, uint64_t *a2)
{
  if ((sub_100BD898C(*a1, *a2) & 1) == 0) {
    return 0;
  }
  type metadata accessor for SunriseSunsetMonthlyViewModel();

  return static WeatherDescription.== infix(_:_:)();
}

uint64_t sub_100BAD2B4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1937207154 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000100CC0040)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100BAD394(char a1)
{
  if (a1) {
    return 0xD000000000000015;
  }
  else {
    return 1937207154;
  }
}

uint64_t sub_100BAD3C8(void *a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100EB62F0);
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  sub_1001B1E64(a1, a1[3]);
  sub_100BAD938();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_10017DF08(&qword_100EB62D8);
  sub_100BADA90(&qword_100EB62F8, (void (*)(void))sub_100BADB00);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for SunriseSunsetMonthlyViewModel();
    type metadata accessor for WeatherDescription();
    sub_1003499A8(&qword_100E6E448);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_100BAD590@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = type metadata accessor for WeatherDescription();
  sub_100179C0C();
  uint64_t v17 = v4;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  sub_10017DF08(&qword_100EB62C8);
  sub_100179C0C();
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v10 = type metadata accessor for SunriseSunsetMonthlyViewModel();
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = (char *)(v12 - v11);
  sub_1001B1E64(a1, a1[3]);
  sub_100BAD938();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  sub_10017DF08(&qword_100EB62D8);
  sub_100BADA90(&qword_100EB62E0, (void (*)(void))sub_100BAD984);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  *(void *)uint64_t v13 = v20;
  sub_1003499A8(&qword_100E6E438);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v14 = sub_10019F5EC();
  v15(v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 32))(&v13[*(int *)(v10 + 20)], v8, v19);
  sub_100BAD9D0((uint64_t)v13, a2);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  return sub_100BADA34((uint64_t)v13);
}

uint64_t sub_100BAD85C()
{
  return sub_100BAD394(*v0);
}

uint64_t sub_100BAD864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100BAD2B4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100BAD88C(uint64_t a1)
{
  unint64_t v2 = sub_100BAD938();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BAD8C8(uint64_t a1)
{
  unint64_t v2 = sub_100BAD938();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100BAD908@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100BAD590(a1, a2);
}

uint64_t sub_100BAD920(void *a1)
{
  return sub_100BAD3C8(a1);
}

unint64_t sub_100BAD938()
{
  unint64_t result = qword_100EB62D0;
  if (!qword_100EB62D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB62D0);
  }
  return result;
}

unint64_t sub_100BAD984()
{
  unint64_t result = qword_100EB62E8;
  if (!qword_100EB62E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB62E8);
  }
  return result;
}

uint64_t sub_100BAD9D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SunriseSunsetMonthlyViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BADA34(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SunriseSunsetMonthlyViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100BADA90(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(&qword_100EB62D8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100BADB00()
{
  unint64_t result = qword_100EB6300;
  if (!qword_100EB6300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6300);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SunriseSunsetMonthlyViewModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100BADC18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SunriseSunsetMonthlyViewModel.CodingKeys()
{
  return &type metadata for SunriseSunsetMonthlyViewModel.CodingKeys;
}

unint64_t sub_100BADC54()
{
  unint64_t result = qword_100EB6308;
  if (!qword_100EB6308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6308);
  }
  return result;
}

unint64_t sub_100BADCA4()
{
  unint64_t result = qword_100EB6310;
  if (!qword_100EB6310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6310);
  }
  return result;
}

unint64_t sub_100BADCF4()
{
  unint64_t result = qword_100EB6318;
  if (!qword_100EB6318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6318);
  }
  return result;
}

uint64_t destroy for LocationsOfInterestState(uint64_t a1)
{
  return sub_10015303C(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s7Weather24LocationsOfInterestStateOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_10015458C(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for LocationsOfInterestState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_10015458C(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_10015303C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for LocationsOfInterestState(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_10015303C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationsOfInterestState(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFD && *(unsigned char *)(a1 + 17))
    {
      int v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 3) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationsOfInterestState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100BADEC4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 2u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_100BADEDC(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)unint64_t result = a2 - 3;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for LocationsOfInterestState()
{
  return &type metadata for LocationsOfInterestState;
}

uint64_t sub_100BADF14(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 7824750 && a2 == 0xE300000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x6465766173 && a2 == 0xE500000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x64657461647075 && a2 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_100BAE09C(char a1)
{
  uint64_t result = 1701736302;
  switch(a1)
  {
    case 1:
      uint64_t result = 7824750;
      break;
    case 2:
      uint64_t result = 0x6465766173;
      break;
    case 3:
      uint64_t result = 0x64657461647075;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_100BAE11C()
{
  return 0xD000000000000013;
}

uint64_t sub_100BAE138(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x8000000100CB6FC0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_100BAE1C0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x8000000100CC0090
    || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000100CB6FC0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_100BAE2B0(char a1)
{
  if (a1) {
    return 0xD000000000000013;
  }
  else {
    return 0xD000000000000016;
  }
}

uint64_t sub_100BAE2EC(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_10017DF08(&qword_100EB6370);
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_100109314();
  sub_10017DF08(&qword_100EB6378);
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_100109314();
  sub_10017DF08(&qword_100EB6380);
  sub_100179C0C();
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v8 = sub_10017DF08(&qword_100EB6388);
  sub_100179C0C();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  sub_10017DF08(&qword_100EB6390);
  sub_100179C0C();
  __chkstk_darwin(v15);
  sub_1001626E0();
  sub_1001B1E64(a1, a1[3]);
  sub_100BAF668();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  switch(a4)
  {
    case 1:
      sub_100BAF700();
      sub_1001A13E4();
      sub_10017DF08(&qword_100E662A8);
      sub_100BAF7E4((unint64_t *)&qword_100E906B8, &qword_100E8B2D0);
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      sub_100162F0C();
      v16();
      sub_100181C9C();
      goto LABEL_7;
    case 2:
      sub_100BAF6B4();
      sub_1001A13E4();
      sub_10017DF08(&qword_100E662A8);
      sub_100BAF7E4((unint64_t *)&qword_100E906B8, &qword_100E8B2D0);
      sub_1001D2354();
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      if (!v21)
      {
        sub_1001D2354();
        KeyedEncodingContainer.encode<A>(_:forKey:)();
      }
      goto LABEL_6;
    case 3:
      sub_100BAF798();
      sub_1001A13E4();
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v14, v8);
      sub_100181C9C();
      sub_100162F0C();
      return v20();
    default:
      sub_100BAF74C();
      sub_1001A13E4();
      sub_10017DF08(&qword_100E662A8);
      sub_100BAF7E4((unint64_t *)&qword_100E906B8, &qword_100E8B2D0);
      KeyedEncodingContainer.encode<A>(_:forKey:)();
LABEL_6:
      sub_100162F0C();
      v17();
LABEL_7:
      sub_100162F0C();
      return v18();
  }
}

uint64_t sub_100BAE7E0(void *a1)
{
  sub_10017DF08(&qword_100EB6320);
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_100109314();
  sub_10017DF08(&qword_100EB6328);
  sub_100179C0C();
  __chkstk_darwin(v3);
  sub_100109314();
  sub_10017DF08(&qword_100EB6330);
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_1001626E0();
  sub_10017DF08(&qword_100EB6338);
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_10017DF08(&qword_100EB6340);
  sub_100179C0C();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_1001626E0();
  uint64_t v15 = v14 - v13;
  uint64_t v37 = (uint64_t)a1;
  sub_1001B1E64(a1, a1[3]);
  sub_100BAF668();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v38) {
    goto LABEL_12;
  }
  uint64_t v16 = v15;
  uint64_t v17 = KeyedDecodingContainer.allKeys.getter();
  uint64_t v18 = *(void *)(v17 + 16);
  if (!v18)
  {
LABEL_8:
    uint64_t v8 = type metadata accessor for DecodingError();
    swift_allocError();
    os_log_t v27 = v26;
    sub_10017DF08(&qword_100E67280);
    *os_log_t v27 = &type metadata for LocationsOfInterestState;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v8 - 8) + 104))(v27, enum case for DecodingError.typeMismatch(_:), v8);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v16, v9);
    goto LABEL_12;
  }
  uint64_t v19 = *(unsigned __int8 *)(v17 + 32);
  sub_100723214(1, v18, v17, v17 + 32, 0, (2 * v18) | 1);
  uint64_t v21 = v20;
  unint64_t v23 = v22;
  swift_bridgeObjectRelease();
  if (v21 != v23 >> 1)
  {
    uint64_t v16 = v15;
    goto LABEL_8;
  }
  switch(v19)
  {
    case 1:
      LOBYTE(v39) = 1;
      sub_100BAF74C();
      sub_10017B124();
      sub_10017DF08(&qword_100E662A8);
      sub_100BAF7E4((unint64_t *)&qword_100EA04C0, &qword_100E8B208);
      sub_100163D88();
      sub_100162F0C();
      v29();
      swift_unknownObjectRelease();
      sub_100162F0C();
      v30();
      uint64_t v8 = v39;
      break;
    case 2:
      LOBYTE(v39) = 2;
      sub_100BAF700();
      sub_10017B124();
      sub_10017DF08(&qword_100E662A8);
      sub_100BAF7E4((unint64_t *)&qword_100EA04C0, &qword_100E8B208);
      sub_100163D88();
      uint64_t v31 = sub_1001A2A48();
      v32(v31);
      swift_unknownObjectRelease();
      sub_100162F0C();
      v33();
      uint64_t v8 = v39;
      break;
    case 3:
      LOBYTE(v39) = 3;
      sub_100BAF6B4();
      sub_10017B124();
      sub_10017DF08(&qword_100E662A8);
      sub_100BAF7E4((unint64_t *)&qword_100EA04C0, &qword_100E8B208);
      sub_1001A0330();
      uint64_t v8 = v39;
      sub_1001A0330();
      sub_100162F0C();
      v34();
      swift_unknownObjectRelease();
      uint64_t v35 = sub_10017EF0C();
      v36(v35);
      break;
    default:
      sub_100BAF798();
      sub_10017B124();
      sub_100162F0C();
      v24();
      swift_unknownObjectRelease();
      sub_100162F0C();
      v25();
      uint64_t v8 = 0;
      break;
  }
LABEL_12:
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v37);
  return v8;
}

uint64_t sub_100BAEF64()
{
  return sub_100BAE09C(*v0);
}

uint64_t sub_100BAEF6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100BADF14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100BAEF94(uint64_t a1)
{
  unint64_t v2 = sub_100BAF668();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BAEFD0(uint64_t a1)
{
  unint64_t v2 = sub_100BAF668();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100BAF010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100BAE138(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_100BAF03C(uint64_t a1)
{
  unint64_t v2 = sub_100BAF74C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BAF078(uint64_t a1)
{
  unint64_t v2 = sub_100BAF74C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100BAF0B4(uint64_t a1)
{
  unint64_t v2 = sub_100BAF798();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BAF0F0(uint64_t a1)
{
  unint64_t v2 = sub_100BAF798();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100BAF12C(uint64_t a1)
{
  unint64_t v2 = sub_100BAF700();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BAF168(uint64_t a1)
{
  unint64_t v2 = sub_100BAF700();

  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t sub_100BAF1A4()
{
  return sub_100BAE2B0(*v0);
}

uint64_t sub_100BAF1AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100BAE1C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100BAF1D4(uint64_t a1)
{
  unint64_t v2 = sub_100BAF6B4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BAF210(uint64_t a1)
{
  unint64_t v2 = sub_100BAF6B4();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100BAF24C(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_100BAF268@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100BAE7E0(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_100BAF298(void *a1)
{
  return sub_100BAE2EC(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
}

uint64_t sub_100BAF2B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  switch(a3)
  {
    case 2:
      sub_10017DF08(&qword_100E635E0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100C25ED0;
      *(void *)(inited + 32) = 0xD000000000000016;
      *(void *)(inited + 40) = 0x8000000100CC0090;
      uint64_t v8 = sub_10017DF08(&qword_100E662A8);
      *(void *)(inited + 48) = a1;
      *(void *)(inited + 72) = v8;
      *(void *)(inited + 80) = 0xD000000000000013;
      *(void *)(inited + 120) = v8;
      *(void *)(inited + 88) = 0x8000000100CB6FC0;
      *(void *)(inited + 96) = a2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      Dictionary.init(dictionaryLiteral:)();
      *(void *)(a4 + 24) = sub_10017DF08(&qword_100EB6398);
      unint64_t v9 = sub_100BAF8A8();
      sub_1001842FC(v9);
      break;
    case 3:
      Dictionary.init(dictionaryLiteral:)();
      *(void *)(a4 + 24) = sub_10017DF08(&qword_100EB6398);
      unint64_t v10 = sub_100BAF8A8();
      sub_1001842FC(v10);
      break;
    default:
      sub_10017DF08(&qword_100E635E0);
      uint64_t v11 = swift_initStackObject();
      *(_OWORD *)(v11 + 16) = xmmword_100C251B0;
      *(void *)(v11 + 32) = 0xD000000000000013;
      *(void *)(v11 + 40) = 0x8000000100CB6FC0;
      *(void *)(v11 + 72) = sub_10017DF08(&qword_100E662A8);
      *(void *)(v11 + 48) = a1;
      swift_bridgeObjectRetain();
      Dictionary.init(dictionaryLiteral:)();
      *(void *)(a4 + 24) = sub_10017DF08(&qword_100EB6398);
      unint64_t v12 = sub_100BAF8A8();
      sub_1001842FC(v12);
      break;
  }
  return ShortDescription.init(name:_:)();
}

uint64_t sub_100BAF5CC@<X0>(uint64_t a1@<X8>)
{
  return sub_100BAF2B8(*(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16), a1);
}

uint64_t sub_100BAF5D8()
{
  sub_100BAF8FC();

  return ShortDescribable.description.getter();
}

void sub_100BAF614(uint64_t a1@<X8>)
{
  sub_1008C1338();
  if (!v1)
  {
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    *(unsigned char *)(a1 + 16) = v5;
  }
}

void sub_100BAF644(uint64_t a1)
{
  sub_1008C0A04(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned char *)(v1 + 16));
}

unint64_t sub_100BAF668()
{
  unint64_t result = qword_100EB6348;
  if (!qword_100EB6348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6348);
  }
  return result;
}

unint64_t sub_100BAF6B4()
{
  unint64_t result = qword_100EB6350;
  if (!qword_100EB6350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6350);
  }
  return result;
}

unint64_t sub_100BAF700()
{
  unint64_t result = qword_100EB6358;
  if (!qword_100EB6358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6358);
  }
  return result;
}

unint64_t sub_100BAF74C()
{
  unint64_t result = qword_100EB6360;
  if (!qword_100EB6360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6360);
  }
  return result;
}

unint64_t sub_100BAF798()
{
  unint64_t result = qword_100EB6368;
  if (!qword_100EB6368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6368);
  }
  return result;
}

uint64_t sub_100BAF7E4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(&qword_100E662A8);
    sub_100BAF864(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100BAF864(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for LocationOfInterest();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100BAF8A8()
{
  unint64_t result = qword_100EB63A0;
  if (!qword_100EB63A0)
  {
    sub_10018C6DC(&qword_100EB6398);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB63A0);
  }
  return result;
}

unint64_t sub_100BAF8FC()
{
  unint64_t result = qword_100EB63A8;
  if (!qword_100EB63A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB63A8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LocationsOfInterestState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100BAFA14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationsOfInterestState.CodingKeys()
{
  return &type metadata for LocationsOfInterestState.CodingKeys;
}

ValueMetadata *type metadata accessor for LocationsOfInterestState.NoneCodingKeys()
{
  return &type metadata for LocationsOfInterestState.NoneCodingKeys;
}

ValueMetadata *type metadata accessor for LocationsOfInterestState.NewCodingKeys()
{
  return &type metadata for LocationsOfInterestState.NewCodingKeys;
}

unsigned char *_s7Weather24LocationsOfInterestStateO13NewCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100BAFB0CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationsOfInterestState.SavedCodingKeys()
{
  return &type metadata for LocationsOfInterestState.SavedCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for LocationsOfInterestState.UpdatedCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100BAFC10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationsOfInterestState.UpdatedCodingKeys()
{
  return &type metadata for LocationsOfInterestState.UpdatedCodingKeys;
}

unint64_t sub_100BAFC4C()
{
  unint64_t result = qword_100EB63B0;
  if (!qword_100EB63B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB63B0);
  }
  return result;
}

unint64_t sub_100BAFC9C()
{
  unint64_t result = qword_100EB63B8;
  if (!qword_100EB63B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB63B8);
  }
  return result;
}

unint64_t sub_100BAFCEC()
{
  unint64_t result = qword_100EB63C0;
  if (!qword_100EB63C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB63C0);
  }
  return result;
}

unint64_t sub_100BAFD3C()
{
  unint64_t result = qword_100EB63C8;
  if (!qword_100EB63C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB63C8);
  }
  return result;
}

unint64_t sub_100BAFD8C()
{
  unint64_t result = qword_100EB63D0;
  if (!qword_100EB63D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB63D0);
  }
  return result;
}

unint64_t sub_100BAFDDC()
{
  unint64_t result = qword_100EB63D8;
  if (!qword_100EB63D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB63D8);
  }
  return result;
}

unint64_t sub_100BAFE2C()
{
  unint64_t result = qword_100EB63E0;
  if (!qword_100EB63E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB63E0);
  }
  return result;
}

unint64_t sub_100BAFE7C()
{
  unint64_t result = qword_100EB63E8;
  if (!qword_100EB63E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB63E8);
  }
  return result;
}

unint64_t sub_100BAFECC()
{
  unint64_t result = qword_100EB63F0;
  if (!qword_100EB63F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB63F0);
  }
  return result;
}

unint64_t sub_100BAFF1C()
{
  unint64_t result = qword_100EB63F8;
  if (!qword_100EB63F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB63F8);
  }
  return result;
}

unint64_t sub_100BAFF6C()
{
  unint64_t result = qword_100EB6400;
  if (!qword_100EB6400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6400);
  }
  return result;
}

unint64_t sub_100BAFFBC()
{
  unint64_t result = qword_100EB6408;
  if (!qword_100EB6408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6408);
  }
  return result;
}

unint64_t sub_100BB000C()
{
  unint64_t result = qword_100EB6410;
  if (!qword_100EB6410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6410);
  }
  return result;
}

unint64_t sub_100BB005C()
{
  unint64_t result = qword_100EB6418;
  if (!qword_100EB6418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6418);
  }
  return result;
}

void *sub_100BB00AC(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Location();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    unint64_t v10 = (char *)a1 + v8;
    uint64_t v11 = (char *)a2 + v8;
    long long v12 = *((_OWORD *)v11 + 1);
    *(_OWORD *)unint64_t v10 = *(_OWORD *)v11;
    *((_OWORD *)v10 + 1) = v12;
    v10[32] = v11[32];
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
  }
  return a1;
}

uint64_t sub_100BB0190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  long long v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(unsigned char *)(v9 + 32) = *(unsigned char *)(v10 + 32);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  return a1;
}

uint64_t sub_100BB0224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (long long *)(a2 + v7);
  long long v10 = *v9;
  long long v11 = v9[1];
  *(unsigned char *)(v8 + 32) = *((unsigned char *)v9 + 32);
  *(_OWORD *)uint64_t v8 = v10;
  *(_OWORD *)(v8 + 16) = v11;
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_100BB02BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  long long v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(unsigned char *)(v9 + 32) = *(unsigned char *)(v10 + 32);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  return a1;
}

uint64_t sub_100BB0350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  long long v11 = *(_OWORD *)(v10 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *(_OWORD *)(v9 + 16) = v11;
  *(unsigned char *)(v9 + 32) = *(unsigned char *)(v10 + 32);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  return a1;
}

uint64_t sub_100BB03E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BB03F8);
}

uint64_t sub_100BB03F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Location();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  }
  else
  {
    unsigned int v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
    if (v9 >= 3) {
      return v9 - 2;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_100BB0480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BB0494);
}

void sub_100BB0494(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Location();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 2;
  }
}

uint64_t sub_100BB051C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65636F7250746F6ELL && a2 == 0xEC00000064657373;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x69737365636F7270 && a2 == 0xEA0000000000676ELL;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x65737365636F7270 && a2 == 0xE900000000000064)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_100BB069C(char a1)
{
  if (!a1) {
    return 0x65636F7250746F6ELL;
  }
  if (a1 == 1) {
    return 0x69737365636F7270;
  }
  return 0x65737365636F7270;
}

uint64_t sub_100BB0704()
{
  return sub_100BB069C(*v0);
}

uint64_t sub_100BB070C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100BB051C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100BB0734(uint64_t a1)
{
  unint64_t v2 = sub_100BB1D0C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BB0770(uint64_t a1)
{
  unint64_t v2 = sub_100BB1D0C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100BB07AC(uint64_t a1)
{
  unint64_t v2 = sub_100BB1DF0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BB07E8(uint64_t a1)
{
  unint64_t v2 = sub_100BB1DF0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100BB0824(uint64_t a1)
{
  unint64_t v2 = sub_100BB1D58();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BB0860(uint64_t a1)
{
  unint64_t v2 = sub_100BB1D58();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100BB089C(uint64_t a1)
{
  unint64_t v2 = sub_100BB1DA4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BB08D8(uint64_t a1)
{
  unint64_t v2 = sub_100BB1DA4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100BB0914(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 0x6552656372756F73 && a2 == 0xEA00000000007463;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x7461745361746164 && a2 == 0xE900000000000065)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v8) {
        return 2;
      }
      else {
        return 3;
      }
    }
  }
}

uint64_t sub_100BB0A7C(char a1)
{
  if (!a1) {
    return 0x6E6F697461636F6CLL;
  }
  if (a1 == 1) {
    return 0x6552656372756F73;
  }
  return 0x7461745361746164;
}

BOOL sub_100BB0ADC(uint64_t a1, uint64_t a2)
{
  if ((static Location.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for SunriseSunsetDetailViewState();
  uint64_t v5 = *(int *)(v4 + 20);
  BOOL v6 = (CGRect *)(a1 + v5);
  char v7 = *(unsigned char *)(a1 + v5 + 32);
  uint64_t v8 = a2 + v5;
  if ((v7 & 1) == 0)
  {
    if ((*(unsigned char *)(v8 + 32) & 1) != 0 || !CGRectEqualToRect(*v6, *(CGRect *)v8)) {
      return 0;
    }
    return *(unsigned __int8 *)(a1 + *(int *)(v4 + 24)) == *(unsigned __int8 *)(a2 + *(int *)(v4 + 24));
  }
  if (*(unsigned char *)(v8 + 32)) {
    return *(unsigned __int8 *)(a1 + *(int *)(v4 + 24)) == *(unsigned __int8 *)(a2 + *(int *)(v4 + 24));
  }
  return 0;
}

uint64_t sub_100BB0B74(void *a1)
{
  uint64_t v4 = sub_10017DF08(&qword_100EB64D8);
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10012B938();
  sub_1001B1E64(a1, a1[3]);
  sub_100BB1ACC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  type metadata accessor for Location();
  sub_100BB1CC4(&qword_100E6F9F8, (void (*)(uint64_t))&type metadata accessor for Location);
  sub_10016347C();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for SunriseSunsetDetailViewState();
    type metadata accessor for CGRect(0);
    sub_100BB1CC4(&qword_100E6FA10, type metadata accessor for CGRect);
    sub_10016347C();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    sub_100BB1C24();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t sub_100BB0D7C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v19 = v5;
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v20 = v7;
  uint64_t v21 = sub_10017DF08(&qword_100EB64C0);
  sub_100179C0C();
  uint64_t v18 = v8;
  __chkstk_darwin(v9);
  sub_100109370();
  uint64_t v10 = type metadata accessor for SunriseSunsetDetailViewState();
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  uint64_t v15 = v12 - v11 + *(int *)(v14 + 20);
  *(_OWORD *)uint64_t v15 = 0u;
  *(_OWORD *)(v15 + 16) = 0u;
  *(unsigned char *)(v15 + 32) = 1;
  sub_1001B1E64(a1, a1[3]);
  sub_100BB1ACC();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v22) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  LOBYTE(v23) = 0;
  sub_100BB1CC4(&qword_100E6F9D0, (void (*)(uint64_t))&type metadata accessor for Location);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v13, v20, v4);
  type metadata accessor for CGRect(0);
  sub_100BB1CC4(&qword_100E6F9E8, type metadata accessor for CGRect);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  *(_OWORD *)uint64_t v15 = v23;
  *(_OWORD *)(v15 + 16) = v24;
  *(unsigned char *)(v15 + 32) = v25;
  sub_100BB1B18();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v2, v21);
  *(unsigned char *)(v13 + *(int *)(v10 + 24)) = 0;
  sub_100BB1B64(v13, a2);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  return sub_100BB1BC8(v13);
}

uint64_t sub_100BB10F4()
{
  return sub_100BB0A7C(*v0);
}

uint64_t sub_100BB10FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100BB0914(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100BB1124(uint64_t a1)
{
  unint64_t v2 = sub_100BB1ACC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BB1160(uint64_t a1)
{
  unint64_t v2 = sub_100BB1ACC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100BB11A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100BB0D7C(a1, a2);
}

uint64_t sub_100BB11B8(void *a1)
{
  return sub_100BB0B74(a1);
}

void sub_100BB11D0()
{
}

uint64_t sub_100BB11E8()
{
  return sub_1008C3564();
}

uint64_t sub_100BB1200@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = sub_10017DF08(&qword_100EB64E8);
  a1[4] = sub_100BB1C70();
  sub_100170694(a1);
  type metadata accessor for SunriseSunsetDetailViewState();
  return ShortDescription.init(name:_:)();
}

uint64_t sub_100BB12A0(void *a1, char a2)
{
  sub_10017DF08(&qword_100EB6540);
  sub_100179C0C();
  uint64_t v27 = v5;
  uint64_t v28 = v4;
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v26 = v6;
  sub_10017DF08(&qword_100EB6548);
  sub_100179C0C();
  uint64_t v24 = v8;
  uint64_t v25 = v7;
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_10017DF08(&qword_100EB6550);
  sub_100179C0C();
  uint64_t v23 = v13;
  __chkstk_darwin(v14);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = sub_10017DF08(&qword_100EB6558);
  sub_100179C0C();
  uint64_t v20 = v19;
  __chkstk_darwin(v21);
  sub_100125FF8();
  sub_1001B1E64(a1, a1[3]);
  sub_100BB1D0C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  if (a2)
  {
    if (a2 == 1)
    {
      sub_100BB1DA4();
      sub_100178FC0();
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v11, v25);
    }
    else
    {
      sub_100BB1D58();
      sub_100178FC0();
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    }
  }
  else
  {
    sub_100BB1DF0();
    sub_100178FC0();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v17, v12);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v2, v18);
}

char *sub_100BB151C(void *a1)
{
  uint64_t v32 = sub_10017DF08(&qword_100EB6500);
  sub_100179C0C();
  uint64_t v35 = v5;
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v37 = v7;
  sub_10017DF08(&qword_100EB6508);
  sub_100179C0C();
  uint64_t v33 = v9;
  uint64_t v34 = v8;
  __chkstk_darwin(v8);
  sub_10012B938();
  uint64_t v10 = sub_10017DF08(&qword_100EB6510);
  sub_100179C0C();
  uint64_t v31 = v11;
  __chkstk_darwin(v12);
  sub_100125FF8();
  uint64_t v13 = sub_10017DF08(&qword_100EB6518);
  sub_100179C0C();
  uint64_t v36 = v14;
  __chkstk_darwin(v15);
  sub_100109370();
  sub_1001B1E64(a1, a1[3]);
  sub_100BB1D0C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v38) {
    goto LABEL_9;
  }
  uint64_t v39 = (uint64_t)a1;
  uint64_t v16 = KeyedDecodingContainer.allKeys.getter();
  uint64_t v17 = *(void *)(v16 + 16);
  if (!v17
    || (uint64_t v18 = v3,
        int v3 = (char *)*(unsigned __int8 *)(v16 + 32),
        sub_100723214(1, v17, v16, v16 + 32, 0, (2 * v17) | 1),
        uint64_t v20 = v19,
        unint64_t v22 = v21,
        swift_bridgeObjectRelease(),
        v20 != v22 >> 1))
  {
    uint64_t v23 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v25 = v24;
    int v3 = (char *)v24 + *(int *)(sub_10017DF08(&qword_100E67280) + 48);
    *uint64_t v25 = &type metadata for SunriseSunsetDetailViewState.DataState;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v23 - 8) + 104))(v25, enum case for DecodingError.typeMismatch(_:), v23);
    swift_willThrow();
    swift_unknownObjectRelease();
    uint64_t v26 = sub_100179EA4();
    v27(v26);
    a1 = (void *)v39;
LABEL_9:
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
    return v3;
  }
  if (v3)
  {
    if (v3 == 1)
    {
      sub_100BB1DA4();
      sub_10018519C();
      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v1, v34);
    }
    else
    {
      sub_100BB1D58();
      sub_10018519C();
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v37, v32);
    }
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v18, v13);
  }
  else
  {
    sub_100BB1DF0();
    sub_10018519C();
    (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v2, v10);
    swift_unknownObjectRelease();
    uint64_t v29 = sub_100179EA4();
    v30(v29);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v39);
  return v3;
}

uint64_t sub_100BB19B8@<X0>(uint64_t *a1@<X8>)
{
  return sub_100BB1200(a1);
}

uint64_t sub_100BB19D0()
{
  sub_100BB1CC4(&qword_100EB64F8, (void (*)(uint64_t))type metadata accessor for SunriseSunsetDetailViewState);

  return ShortDescribable.description.getter();
}

char *sub_100BB1A3C@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100BB151C(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_100BB1A68(void *a1)
{
  return sub_100BB12A0(a1, *v1);
}

uint64_t sub_100BB1A84()
{
  return sub_100BB1CC4(&qword_100EB64B8, (void (*)(uint64_t))type metadata accessor for SunriseSunsetDetailViewState);
}

unint64_t sub_100BB1ACC()
{
  unint64_t result = qword_100EB64C8;
  if (!qword_100EB64C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB64C8);
  }
  return result;
}

unint64_t sub_100BB1B18()
{
  unint64_t result = qword_100EB64D0;
  if (!qword_100EB64D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB64D0);
  }
  return result;
}

uint64_t sub_100BB1B64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SunriseSunsetDetailViewState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BB1BC8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SunriseSunsetDetailViewState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100BB1C24()
{
  unint64_t result = qword_100EB64E0;
  if (!qword_100EB64E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB64E0);
  }
  return result;
}

unint64_t sub_100BB1C70()
{
  unint64_t result = qword_100EB64F0;
  if (!qword_100EB64F0)
  {
    sub_10018C6DC(&qword_100EB64E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB64F0);
  }
  return result;
}

uint64_t sub_100BB1CC4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100BB1D0C()
{
  unint64_t result = qword_100EB6520;
  if (!qword_100EB6520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6520);
  }
  return result;
}

unint64_t sub_100BB1D58()
{
  unint64_t result = qword_100EB6528;
  if (!qword_100EB6528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6528);
  }
  return result;
}

unint64_t sub_100BB1DA4()
{
  unint64_t result = qword_100EB6530;
  if (!qword_100EB6530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6530);
  }
  return result;
}

unint64_t sub_100BB1DF0()
{
  unint64_t result = qword_100EB6538;
  if (!qword_100EB6538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6538);
  }
  return result;
}

ValueMetadata *type metadata accessor for SunriseSunsetDetailViewState.DataState.CodingKeys()
{
  return &type metadata for SunriseSunsetDetailViewState.DataState.CodingKeys;
}

ValueMetadata *type metadata accessor for SunriseSunsetDetailViewState.DataState.NotProcessedCodingKeys()
{
  return &type metadata for SunriseSunsetDetailViewState.DataState.NotProcessedCodingKeys;
}

ValueMetadata *type metadata accessor for SunriseSunsetDetailViewState.DataState.ProcessingCodingKeys()
{
  return &type metadata for SunriseSunsetDetailViewState.DataState.ProcessingCodingKeys;
}

ValueMetadata *type metadata accessor for SunriseSunsetDetailViewState.DataState.ProcessedCodingKeys()
{
  return &type metadata for SunriseSunsetDetailViewState.DataState.ProcessedCodingKeys;
}

ValueMetadata *type metadata accessor for SunriseSunsetDetailViewState.CodingKeys()
{
  return &type metadata for SunriseSunsetDetailViewState.CodingKeys;
}

unsigned char *_s7Weather28SunriseSunsetDetailViewStateV9DataStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100BB1F5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SunriseSunsetDetailViewState.DataState()
{
  return &type metadata for SunriseSunsetDetailViewState.DataState;
}

unint64_t sub_100BB1F98()
{
  unint64_t result = qword_100EB6560;
  if (!qword_100EB6560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6560);
  }
  return result;
}

unint64_t sub_100BB1FE8()
{
  unint64_t result = qword_100EB6568;
  if (!qword_100EB6568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6568);
  }
  return result;
}

unint64_t sub_100BB2038()
{
  unint64_t result = qword_100EB6570;
  if (!qword_100EB6570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6570);
  }
  return result;
}

unint64_t sub_100BB2088()
{
  unint64_t result = qword_100EB6578;
  if (!qword_100EB6578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6578);
  }
  return result;
}

unint64_t sub_100BB20D8()
{
  unint64_t result = qword_100EB6580;
  if (!qword_100EB6580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6580);
  }
  return result;
}

unint64_t sub_100BB2128()
{
  unint64_t result = qword_100EB6588;
  if (!qword_100EB6588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6588);
  }
  return result;
}

unint64_t sub_100BB2178()
{
  unint64_t result = qword_100EB6590;
  if (!qword_100EB6590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6590);
  }
  return result;
}

unint64_t sub_100BB21C8()
{
  unint64_t result = qword_100EB6598;
  if (!qword_100EB6598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6598);
  }
  return result;
}

unint64_t sub_100BB2218()
{
  unint64_t result = qword_100EB65A0;
  if (!qword_100EB65A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB65A0);
  }
  return result;
}

unint64_t sub_100BB2268()
{
  unint64_t result = qword_100EB65A8;
  if (!qword_100EB65A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB65A8);
  }
  return result;
}

unint64_t sub_100BB22B8()
{
  unint64_t result = qword_100EB65B0;
  if (!qword_100EB65B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB65B0);
  }
  return result;
}

unint64_t sub_100BB2308()
{
  unint64_t result = qword_100EB65B8;
  if (!qword_100EB65B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB65B8);
  }
  return result;
}

unint64_t sub_100BB2358()
{
  unint64_t result = qword_100EB65C0;
  if (!qword_100EB65C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB65C0);
  }
  return result;
}

uint64_t sub_100BB23A4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  type metadata accessor for UVIndex();
  sub_100179C0C();
  uint64_t v37 = v4;
  uint64_t v38 = v3;
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v35 = v9;
  uint64_t v36 = v8;
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v34 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v32 = v13;
  __chkstk_darwin(v14);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = type metadata accessor for DetailCondition();
  sub_100179C0C();
  uint64_t v20 = v19;
  __chkstk_darwin(v21);
  sub_1001626E0();
  uint64_t v24 = v23 - v22;
  uint64_t v25 = type metadata accessor for ConditionDetailInput.Input(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 16))(v24, a1 + *(int *)(v25 + 32), v18);
  LODWORD(a1) = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 88))(v24, v18);
  int v26 = enum case for DetailCondition.uvIndex(_:);
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v24, v18);
  if a1 != v26 || (uint64_t v27 = DetailChartDataPoint.value.getter(), (v28))
  {
    uint64_t v31 = type metadata accessor for ConditionDetailPlatterViewModel(0);
    return _s7Weather24LocationCompositionStateOwst_0(a2, 1, 1, v31);
  }
  else
  {
    double v29 = *(double *)&v27;
    sub_1001B1E64(v33, v33[3]);
    DetailChartDataPoint.date.getter();
    Location.timeZone.getter();
    sub_10073269C(v29);
    sub_1002818B8(a2);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v7, v38);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v12, v36);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8))(v17, v34);
  }
}

ValueMetadata *type metadata accessor for ConditionDetailLollipopPlatterViewModelFactory()
{
  return &type metadata for ConditionDetailLollipopPlatterViewModelFactory;
}

uint64_t sub_100BB2678@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_10017DF08(&qword_100EB65D0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Dictionary.init(dictionaryLiteral:)();
  ShortDescription.init(name:_:)();
  a1[3] = v2;
  a1[4] = sub_100BB2868();
  uint64_t v6 = sub_100170694(a1);
  return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v3 + 32))(v6, v5, v2);
}

uint64_t sub_100BB27D4@<X0>(uint64_t *a1@<X8>)
{
  return sub_100BB2678(a1);
}

uint64_t sub_100BB27DC()
{
  sub_100BB28BC();

  return ShortDescribable.description.getter();
}

unint64_t sub_100BB281C()
{
  unint64_t result = qword_100EB65C8;
  if (!qword_100EB65C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB65C8);
  }
  return result;
}

unint64_t sub_100BB2868()
{
  unint64_t result = qword_100EB65D8;
  if (!qword_100EB65D8)
  {
    sub_10018C6DC(&qword_100EB65D0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB65D8);
  }
  return result;
}

unint64_t sub_100BB28BC()
{
  unint64_t result = qword_100EB65E0;
  if (!qword_100EB65E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB65E0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SunriseSunsetDetailViewAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100BB29D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SunriseSunsetDetailViewAction()
{
  return &type metadata for SunriseSunsetDetailViewAction;
}

unint64_t sub_100BB2A10()
{
  unint64_t result = qword_100EB65E8;
  if (!qword_100EB65E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB65E8);
  }
  return result;
}

char *LocationSearchCompleter.__allocating_init(searchCompleter:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return LocationSearchCompleter.init(searchCompleter:)(a1);
}

Swift::Void __swiftcall LocationSearchCompleter.searchLocations(for:)(Swift::String a1)
{
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  unsigned int v4 = *(void **)(v1 + OBJC_IVAR____TtC7Weather23LocationSearchCompleter_searchCompleter);
  id v5 = [v4 queryFragment];
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  if (v6 == countAndFlagsBits && v8 == object)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0)
    {
      NSString v11 = String._bridgeToObjectiveC()();
      [v4 setQueryFragment:v11];

      return;
    }
  }

  _s7Weather23LocationSearchCompleterC25completerDidUpdateResultsyySo07MKLocalcD0CF_0();
}

uint64_t LocationSearchCompleter.onUpdate.getter()
{
  return sub_100BB2C54(&OBJC_IVAR____TtC7Weather23LocationSearchCompleter_onUpdate, (void (*)(void, void))sub_10005BEBC);
}

uint64_t LocationSearchCompleter.onUpdate.setter(uint64_t a1, uint64_t a2)
{
  return sub_100BB2CDC(a1, a2, &OBJC_IVAR____TtC7Weather23LocationSearchCompleter_onUpdate, (uint64_t (*)(uint64_t, uint64_t))sub_1001361AC);
}

uint64_t (*LocationSearchCompleter.onUpdate.modify())()
{
  return j_j__swift_endAccess_0;
}

uint64_t LocationSearchCompleter.onError.getter()
{
  return sub_100BB2C54(&OBJC_IVAR____TtC7Weather23LocationSearchCompleter_onError, (void (*)(void, void))sub_100BB341C);
}

uint64_t sub_100BB2C54(void *a1, void (*a2)(void, void))
{
  unsigned int v4 = (void *)(v2 + *a1);
  swift_beginAccess();
  uint64_t v5 = *v4;
  a2(*v4, v4[1]);
  return v5;
}

uint64_t LocationSearchCompleter.onError.setter(uint64_t a1, uint64_t a2)
{
  return sub_100BB2CDC(a1, a2, &OBJC_IVAR____TtC7Weather23LocationSearchCompleter_onError, (uint64_t (*)(uint64_t, uint64_t))sub_100BB3420);
}

uint64_t sub_100BB2CDC(uint64_t a1, uint64_t a2, void *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v8 = (uint64_t *)(v4 + *a3);
  swift_beginAccess();
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  *uint64_t v8 = a1;
  v8[1] = a2;
  return a4(v9, v10);
}

uint64_t (*LocationSearchCompleter.onError.modify())()
{
  return j__swift_endAccess_0;
}

char *LocationSearchCompleter.init(searchCompleter:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = &v1[OBJC_IVAR____TtC7Weather23LocationSearchCompleter_onUpdate];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  uint64_t v5 = &v1[OBJC_IVAR____TtC7Weather23LocationSearchCompleter_onError];
  *(void *)uint64_t v5 = 0;
  *((void *)v5 + 1) = 0;
  *(void *)&v1[OBJC_IVAR____TtC7Weather23LocationSearchCompleter_searchCompleter] = a1;
  v13.receiver = v1;
  v13.super_class = ObjectType;
  id v6 = a1;
  uint64_t v7 = (char *)[super init];
  uint64_t v8 = *(void **)&v7[OBJC_IVAR____TtC7Weather23LocationSearchCompleter_searchCompleter];
  uint64_t v9 = v7;
  [v8 w_applyLocalitiesAndLandmarksFilterType];
  uint64_t v10 = v9;
  id v11 = v8;
  [v11 setDelegate:v10];

  return v10;
}

uint64_t _s7Weather23LocationSearchCompleterC25completerDidUpdateResultsyySo07MKLocalcD0CF_0()
{
  uint64_t v1 = (void (**)(uint64_t))(v0 + OBJC_IVAR____TtC7Weather23LocationSearchCompleter_onUpdate);
  uint64_t result = swift_beginAccess();
  id v3 = *v1;
  if (*v1)
  {
    uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC7Weather23LocationSearchCompleter_searchCompleter);
    swift_retain();
    id v5 = [v4 results];
    sub_100477D2C();
    uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    v3(v6);
    sub_1001361AC((uint64_t)v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void LocationSearchCompleter.init()()
{
}

uint64_t LocationSearchCompleter.completer(_:didFailWithError:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Logger.intents.getter();
  id v8 = v2;
  swift_errorRetain();
  uint64_t v9 = (char *)v8;
  swift_errorRetain();
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.error.getter();
  int v12 = v11;
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v29 = v5;
    uint64_t v14 = v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v28 = v15;
    *(_DWORD *)uint64_t v14 = 141558531;
    uint64_t v30 = 1752392040;
    v31[0] = v15;
    HIDWORD(v26) = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v14 + 12) = 2085;
    id v16 = [*(id *)&v9[OBJC_IVAR____TtC7Weather23LocationSearchCompleter_searchCompleter] queryFragment];
    uint64_t v27 = v4;
    id v17 = v16;
    uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v20 = v19;

    uint64_t v30 = sub_10016414C(v18, v20, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 22) = 2082;
    uint64_t v30 = a2;
    swift_errorRetain();
    sub_10017DF08(&qword_100E77F30);
    uint64_t v21 = String.init<A>(describing:)();
    uint64_t v30 = sub_10016414C(v21, v22, v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, BYTE4(v26), "Received an error while requesting a local search completion. searchQuery=%{sensitive,mask.hash}s, error=%{public}s", (uint8_t *)v14, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v29 + 8))(v7, v27);
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v23 = &v9[OBJC_IVAR____TtC7Weather23LocationSearchCompleter_onError];
  uint64_t result = swift_beginAccess();
  uint64_t v25 = *(void (**)(uint64_t))v23;
  if (*(void *)v23)
  {
    swift_retain();
    v25(a2);
    return sub_1001361AC((uint64_t)v25);
  }
  return result;
}

uint64_t type metadata accessor for LocationSearchCompleter()
{
  return self;
}

uint64_t *sub_100BB3424(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for CurrentWeather();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = *((void *)v10 + 1);
    *(void *)uint64_t v9 = *(void *)v10;
    *((void *)v9 + 1) = v11;
    uint64_t v12 = *((void *)v10 + 3);
    *((void *)v9 + 2) = *((void *)v10 + 2);
    *((void *)v9 + 3) = v12;
    uint64_t v13 = *((void *)v10 + 5);
    *((void *)v9 + 4) = *((void *)v10 + 4);
    *((void *)v9 + 5) = v13;
    uint64_t v14 = *((void *)v10 + 7);
    *((void *)v9 + 6) = *((void *)v10 + 6);
    *((void *)v9 + 7) = v14;
    uint64_t v15 = *((void *)v10 + 9);
    *((void *)v9 + 8) = *((void *)v10 + 8);
    *((void *)v9 + 9) = v15;
    uint64_t v16 = *((void *)v10 + 11);
    *((void *)v9 + 10) = *((void *)v10 + 10);
    *((void *)v9 + 11) = v16;
    uint64_t v17 = *((void *)v10 + 13);
    *((void *)v9 + 12) = *((void *)v10 + 12);
    *((void *)v9 + 13) = v17;
    uint64_t v18 = *((void *)v10 + 15);
    *((void *)v9 + 14) = *((void *)v10 + 14);
    *((void *)v9 + 15) = v18;
    uint64_t v19 = *((void *)v10 + 17);
    *((void *)v9 + 16) = *((void *)v10 + 16);
    *((void *)v9 + 17) = v19;
    uint64_t v20 = *((void *)v10 + 19);
    *((void *)v9 + 18) = *((void *)v10 + 18);
    *((void *)v9 + 19) = v20;
    uint64_t v21 = *((void *)v10 + 21);
    *((void *)v9 + 20) = *((void *)v10 + 20);
    *((void *)v9 + 21) = v21;
    uint64_t v22 = *((void *)v10 + 23);
    *((void *)v9 + 22) = *((void *)v10 + 22);
    *((void *)v9 + 23) = v22;
    uint64_t v23 = *((void *)v10 + 25);
    *((void *)v9 + 24) = *((void *)v10 + 24);
    *((void *)v9 + 25) = v23;
    *((_OWORD *)v9 + 13) = *((_OWORD *)v10 + 13);
    *((void *)v9 + 28) = *((void *)v10 + 28);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100BB3600(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(void *)(v8 + 8) = v10;
  uint64_t v11 = *(void *)(v9 + 24);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = v11;
  uint64_t v12 = *(void *)(v9 + 40);
  *(void *)(v8 + 32) = *(void *)(v9 + 32);
  *(void *)(v8 + 40) = v12;
  uint64_t v13 = *(void *)(v9 + 56);
  *(void *)(v8 + 48) = *(void *)(v9 + 48);
  *(void *)(v8 + 56) = v13;
  uint64_t v14 = *(void *)(v9 + 72);
  *(void *)(v8 + 64) = *(void *)(v9 + 64);
  *(void *)(v8 + 72) = v14;
  uint64_t v15 = *(void *)(v9 + 88);
  *(void *)(v8 + 80) = *(void *)(v9 + 80);
  *(void *)(v8 + 88) = v15;
  uint64_t v16 = *(void *)(v9 + 104);
  *(void *)(v8 + 96) = *(void *)(v9 + 96);
  *(void *)(v8 + 104) = v16;
  uint64_t v17 = *(void *)(v9 + 120);
  *(void *)(v8 + 112) = *(void *)(v9 + 112);
  *(void *)(v8 + 120) = v17;
  uint64_t v18 = *(void *)(v9 + 136);
  *(void *)(v8 + 128) = *(void *)(v9 + 128);
  *(void *)(v8 + 136) = v18;
  uint64_t v19 = *(void *)(v9 + 152);
  *(void *)(v8 + 144) = *(void *)(v9 + 144);
  *(void *)(v8 + 152) = v19;
  uint64_t v20 = *(void *)(v9 + 168);
  *(void *)(v8 + 160) = *(void *)(v9 + 160);
  *(void *)(v8 + 168) = v20;
  uint64_t v21 = *(void *)(v9 + 184);
  *(void *)(v8 + 176) = *(void *)(v9 + 176);
  *(void *)(v8 + 184) = v21;
  uint64_t v22 = *(void *)(v9 + 200);
  *(void *)(v8 + 192) = *(void *)(v9 + 192);
  *(void *)(v8 + 200) = v22;
  *(_OWORD *)(v8 + 208) = *(_OWORD *)(v9 + 208);
  *(void *)(v8 + 224) = *(void *)(v9 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100BB378C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  _OWORD v8[2] = v9[2];
  v8[3] = v9[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[4] = v9[4];
  v8[5] = v9[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[6] = v9[6];
  v8[7] = v9[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[8] = v9[8];
  v8[9] = v9[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[10] = v9[10];
  v8[11] = v9[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[12] = v9[12];
  v8[13] = v9[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[14] = v9[14];
  v8[15] = v9[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[16] = v9[16];
  v8[17] = v9[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[18] = v9[18];
  v8[19] = v9[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[20] = v9[20];
  v8[21] = v9[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[22] = v9[22];
  v8[23] = v9[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[24] = v9[24];
  v8[25] = v9[25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8[26] = v9[26];
  v8[27] = v9[27];
  v8[28] = v9[28];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100BB39D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  memcpy((void *)(a1 + *(int *)(a3 + 20)), (const void *)(a2 + *(int *)(a3 + 20)), 0xE8uLL);
  return a1;
}

uint64_t sub_100BB3A54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = v9[3];
  _OWORD v8[2] = v9[2];
  v8[3] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = v9[5];
  v8[4] = v9[4];
  v8[5] = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = v9[7];
  v8[6] = v9[6];
  v8[7] = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = v9[9];
  v8[8] = v9[8];
  v8[9] = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = v9[11];
  v8[10] = v9[10];
  v8[11] = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = v9[13];
  v8[12] = v9[12];
  v8[13] = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = v9[15];
  v8[14] = v9[14];
  v8[15] = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = v9[17];
  v8[16] = v9[16];
  v8[17] = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = v9[19];
  v8[18] = v9[18];
  v8[19] = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = v9[21];
  v8[20] = v9[20];
  v8[21] = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = v9[23];
  v8[22] = v9[22];
  v8[23] = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = v9[25];
  v8[24] = v9[24];
  v8[25] = v22;
  swift_bridgeObjectRelease();
  v8[26] = v9[26];
  uint64_t v23 = v9[28];
  v8[27] = v9[27];
  v8[28] = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100BB3BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BB3BCC);
}

uint64_t sub_100BB3BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for CurrentWeather();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_100BB3C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BB3C70);
}

void sub_100BB3C70(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for CurrentWeather();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
}

uint64_t sub_100BB3CFC(uint64_t a1, uint64_t a2)
{
  if (static CurrentWeather.== infix(_:_:)())
  {
    uint64_t v4 = type metadata accessor for WindComponent();
    memcpy(v7, (const void *)(a1 + *(int *)(v4 + 20)), sizeof(v7));
    memcpy(__dst, (const void *)(a2 + *(int *)(v4 + 20)), sizeof(__dst));
    char v5 = sub_100A3DD38((uint64_t)v7, (uint64_t)__dst);
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_100BB3D84@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v22 = type metadata accessor for CurrentWeather();
  sub_100179C0C();
  uint64_t v20 = v5;
  __chkstk_darwin(v6);
  sub_10012B938();
  uint64_t v23 = sub_10017DF08(&qword_100EB66C8);
  sub_100179C0C();
  uint64_t v21 = v7;
  __chkstk_darwin(v8);
  uint64_t v9 = type metadata accessor for WindComponent();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(a1, a1[3]);
  sub_100BB42BC();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  uint64_t v12 = (uint64_t)v11;
  uint64_t v13 = v20;
  __src[0] = 0;
  sub_1004EFF30(&qword_100E7CDD8);
  uint64_t v14 = v22;
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v12, v3, v14);
  __src[255] = 1;
  sub_100AB1DA0();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  uint64_t v15 = sub_10019F8BC();
  v16(v15);
  memcpy((void *)(v12 + *(int *)(v9 + 20)), __src, 0xE8uLL);
  sub_100BB4308(v12, v19);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  return sub_100BB436C(v12);
}

uint64_t sub_100BB4080(void *a1)
{
  uint64_t v4 = v1;
  uint64_t v6 = sub_10017DF08(&qword_100EB66D8);
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_10012B938();
  sub_1001B1E64(a1, a1[3]);
  sub_100BB42BC();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  __dst[247] = 0;
  type metadata accessor for CurrentWeather();
  sub_1004EFF30(&qword_100E7CDF0);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for WindComponent();
    memcpy(__dst, (const void *)(v4 + *(int *)(v10 + 20)), 0xE8uLL);
    __dst[246] = 1;
    sub_100AB1EF0();
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v3, v6);
}

uint64_t sub_100BB4210(uint64_t a1)
{
  unint64_t v2 = sub_100BB42BC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BB424C(uint64_t a1)
{
  unint64_t v2 = sub_100BB42BC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100BB4288@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100BB3D84(a1, a2);
}

uint64_t sub_100BB42A0(void *a1)
{
  return sub_100BB4080(a1);
}

unint64_t sub_100BB42BC()
{
  unint64_t result = qword_100EB66D0;
  if (!qword_100EB66D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB66D0);
  }
  return result;
}

uint64_t sub_100BB4308(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WindComponent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BB436C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WindComponent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for WindComponent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100BB4494);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WindComponent.CodingKeys()
{
  return &type metadata for WindComponent.CodingKeys;
}

unint64_t sub_100BB44D0()
{
  unint64_t result = qword_100EB66E0;
  if (!qword_100EB66E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB66E0);
  }
  return result;
}

unint64_t sub_100BB4520()
{
  unint64_t result = qword_100EB66E8;
  if (!qword_100EB66E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB66E8);
  }
  return result;
}

unint64_t sub_100BB4570()
{
  unint64_t result = qword_100EB66F0;
  if (!qword_100EB66F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB66F0);
  }
  return result;
}

uint64_t sub_100BB45BC()
{
  uint64_t v2 = sub_10017DF08(&qword_100E63F80);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_100162E88();
  uint64_t v4 = type metadata accessor for Font.TextStyle();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_100152344();
  uint64_t v8 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_100162EB8();
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  sub_10019DD00();
  swift_bridgeObjectRetain();
  Image.init(systemName:)();
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)();
  swift_release();
  sub_10019DD00();
  LocalizedStringKey.init(stringInterpolation:)();
  uint64_t v10 = sub_10017DCAC();
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  sub_1001649D0();
  v15();
  uint64_t v16 = type metadata accessor for Font.Design();
  _s7Weather24LocationCompositionStateOwst_0(v0, 1, 1, v16);
  static Font.system(_:design:weight:)();
  sub_100AB5918(v0);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v1, v4);
  uint64_t v17 = Text.font(_:)();
  swift_release();
  sub_100191924(v10, v12, v14);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_100BB47D4()
{
  uint64_t v26 = type metadata accessor for Font.Leading();
  sub_100179C0C();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_100162EB8();
  uint64_t v4 = sub_10017DF08(&qword_100E63F80);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = type metadata accessor for Font.TextStyle();
  sub_100179C0C();
  uint64_t v11 = v10;
  __chkstk_darwin(v12);
  sub_1001626E0();
  uint64_t v15 = v14 - v13;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v16 = Text.init<A>(_:)();
  uint64_t v18 = v17;
  char v20 = v19 & 1;
  sub_1001649D0();
  v21();
  uint64_t v22 = type metadata accessor for Font.Design();
  _s7Weather24LocationCompositionStateOwst_0(v8, 1, 1, v22);
  static Font.system(_:design:weight:)();
  sub_100AB5918(v8);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v15, v9);
  sub_1001649D0();
  v23();
  Font.leading(_:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0, v26);
  uint64_t v24 = Text.font(_:)();
  swift_release();
  sub_100191924(v16, v18, v20);
  swift_bridgeObjectRelease();
  return v24;
}

unint64_t sub_100BB4A68()
{
  unint64_t result = qword_100EB66F8;
  if (!qword_100EB66F8)
  {
    sub_10018C6DC(&qword_100E8CD00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB66F8);
  }
  return result;
}

uint64_t sub_100BB4ABC(char a1)
{
  id v2 = [self mainBundle];
  unint64_t v13 = 0x8000000100CC01A0;
  sub_10017FAD0();
  if (a1)
  {
    uint64_t v8 = 0x7469706963657250;
    unint64_t v9 = 0xED00006E6F697461;
  }
  else
  {
    uint64_t v8 = 0x74617265706D6554;
    unint64_t v9 = 0xEB00000000657275;
  }
  unint64_t v10 = 0xD000000000000048;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, *(Swift::String_optional *)&v5, v7, *(Swift::String *)&v8, *(Swift::String *)(&v13 - 1))._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_100BB4BC4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74617265706D6574 && a2 == 0xEB00000000657275;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7469706963657270 && a2 == 0xED00006E6F697461)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100BB4CF0(char a1)
{
  if (a1) {
    return 0x7469706963657270;
  }
  else {
    return 0x74617265706D6574;
  }
}

uint64_t sub_100BB4D3C(void *a1, char a2)
{
  sub_10017DF08(&qword_100EB6738);
  sub_100179C0C();
  uint64_t v24 = v4;
  uint64_t v25 = v3;
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v23 = sub_10017DF08(&qword_100EB6740);
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = sub_10017DF08(&qword_100EB6748);
  sub_100179C0C();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  sub_1001626E0();
  uint64_t v20 = v19 - v18;
  sub_1001B1E64(a1, a1[3]);
  sub_100BB5568();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  uint64_t v21 = (uint64_t (**)(uint64_t, uint64_t))(v16 + 8);
  if (a2)
  {
    sub_100BB55B4();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v7, v25);
  }
  else
  {
    sub_100BB5600();
    KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v13, v23);
  }
  return (*v21)(v20, v14);
}

uint64_t sub_100BB4F5C(uint64_t a1)
{
  uint64_t v37 = sub_10017DF08(&qword_100EB6708);
  sub_100179C0C();
  uint64_t v35 = v2;
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v6 = v5 - v4;
  uint64_t v7 = sub_10017DF08(&qword_100EB6710);
  sub_100179C0C();
  uint64_t v34 = v8;
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_10017DF08(&qword_100EB6718);
  sub_100179C0C();
  uint64_t v36 = v14;
  __chkstk_darwin(v15);
  sub_1001626E0();
  uint64_t v18 = v17 - v16;
  sub_1001B1E64((void *)a1, *(void *)(a1 + 24));
  sub_100BB5568();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v38) {
    goto LABEL_8;
  }
  uint64_t v39 = a1;
  uint64_t v19 = KeyedDecodingContainer.allKeys.getter();
  uint64_t v20 = *(void *)(v19 + 16);
  if (!v20
    || (a1 = *(unsigned __int8 *)(v19 + 32),
        sub_100723214(1, v20, v19, v19 + 32, 0, (2 * v20) | 1),
        uint64_t v22 = v21,
        unint64_t v24 = v23,
        swift_bridgeObjectRelease(),
        v22 != v24 >> 1))
  {
    uint64_t v27 = v18;
    uint64_t v28 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v30 = v29;
    sub_10017DF08(&qword_100E67280);
    void *v30 = &type metadata for AveragesKind;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v28 - 8) + 104))(v30, enum case for DecodingError.typeMismatch(_:), v28);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v27, v13);
    a1 = v39;
LABEL_8:
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
    return a1;
  }
  if (a1)
  {
    sub_100BB55B4();
    sub_10017A110();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v6, v37);
    swift_unknownObjectRelease();
    uint64_t v25 = sub_10018124C();
    v26(v25);
    a1 = a1;
  }
  else
  {
    sub_100BB5600();
    sub_10017A110();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v12, v7);
    swift_unknownObjectRelease();
    uint64_t v32 = sub_10018124C();
    v33(v32);
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v39);
  return a1;
}

uint64_t sub_100BB5324()
{
  return sub_100BB4CF0(*v0);
}

uint64_t sub_100BB532C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100BB4BC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100BB5354(uint64_t a1)
{
  unint64_t v2 = sub_100BB5568();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BB5390(uint64_t a1)
{
  unint64_t v2 = sub_100BB5568();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100BB53CC(uint64_t a1)
{
  unint64_t v2 = sub_100BB55B4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BB5408(uint64_t a1)
{
  unint64_t v2 = sub_100BB55B4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100BB5444(uint64_t a1)
{
  unint64_t v2 = sub_100BB5600();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BB5480(uint64_t a1)
{
  unint64_t v2 = sub_100BB5600();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_100BB54BC(void *a1@<X8>)
{
  *a1 = &off_100E07B70;
}

unint64_t sub_100BB54D0()
{
  unint64_t result = qword_100EB6700;
  if (!qword_100EB6700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6700);
  }
  return result;
}

uint64_t sub_100BB551C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100BB4F5C(a1);
  if (!v2) {
    *a2 = result & 1;
  }
  return result;
}

uint64_t sub_100BB554C(void *a1)
{
  return sub_100BB4D3C(a1, *v1);
}

unint64_t sub_100BB5568()
{
  unint64_t result = qword_100EB6720;
  if (!qword_100EB6720)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6720);
  }
  return result;
}

unint64_t sub_100BB55B4()
{
  unint64_t result = qword_100EB6728;
  if (!qword_100EB6728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6728);
  }
  return result;
}

unint64_t sub_100BB5600()
{
  unint64_t result = qword_100EB6730;
  if (!qword_100EB6730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6730);
  }
  return result;
}

unsigned char *_s7Weather12AveragesKindOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100BB5718);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AveragesKind.CodingKeys()
{
  return &type metadata for AveragesKind.CodingKeys;
}

ValueMetadata *type metadata accessor for AveragesKind.TemperatureCodingKeys()
{
  return &type metadata for AveragesKind.TemperatureCodingKeys;
}

ValueMetadata *type metadata accessor for AveragesKind.PrecipitationCodingKeys()
{
  return &type metadata for AveragesKind.PrecipitationCodingKeys;
}

unint64_t sub_100BB5774()
{
  unint64_t result = qword_100EB6750;
  if (!qword_100EB6750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6750);
  }
  return result;
}

unint64_t sub_100BB57C4()
{
  unint64_t result = qword_100EB6758;
  if (!qword_100EB6758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6758);
  }
  return result;
}

unint64_t sub_100BB5814()
{
  unint64_t result = qword_100EB6760;
  if (!qword_100EB6760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6760);
  }
  return result;
}

unint64_t sub_100BB5864()
{
  unint64_t result = qword_100EB6768;
  if (!qword_100EB6768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6768);
  }
  return result;
}

unint64_t sub_100BB58B4()
{
  unint64_t result = qword_100EB6770;
  if (!qword_100EB6770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6770);
  }
  return result;
}

unint64_t sub_100BB5904()
{
  unint64_t result = qword_100EB6778;
  if (!qword_100EB6778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6778);
  }
  return result;
}

unint64_t sub_100BB5954()
{
  unint64_t result = qword_100EB6780;
  if (!qword_100EB6780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6780);
  }
  return result;
}

unint64_t sub_100BB59B4(unint64_t a1)
{
  unint64_t v1 = (a1 >> 59) & 0x1E | (a1 >> 2) & 1;
  unint64_t result = 0x746C7561666564;
  switch(v1)
  {
    case 1uLL:
      unint64_t result = 0x77654E6971416F6ELL;
      break;
    case 2uLL:
      unint64_t result = 0x657265766573;
      break;
    case 3uLL:
      unint64_t result = 7366766;
      break;
    case 4uLL:
      unint64_t result = 0xD000000000000011;
      break;
    case 5uLL:
      unint64_t result = 0x4E746C7561666564;
      break;
    case 6uLL:
      unint64_t result = 0xD000000000000010;
      break;
    case 7uLL:
    case 0x11uLL:
      unint64_t result = 0x6465746176656C65;
      break;
    case 8uLL:
    case 9uLL:
    case 0x12uLL:
      unint64_t result = 0x7665536971416F6ELL;
      break;
    case 0xAuLL:
    case 0x13uLL:
      unint64_t result = 0x70684E6971416F6ELL;
      break;
    case 0xBuLL:
      unint64_t result = 0x684E657265766573;
      break;
    case 0xCuLL:
    case 0x15uLL:
      unint64_t result = 0x684E657265766573;
      break;
    case 0xDuLL:
      unint64_t result = 0x654E657265766573;
      break;
    case 0xEuLL:
      unint64_t result = 0x7377654E70686ELL;
      break;
    case 0xFuLL:
    case 0x18uLL:
      unint64_t result = 0xD000000000000015;
      break;
    case 0x10uLL:
      unint64_t result = 0xD000000000000012;
      break;
    case 0x14uLL:
      unint64_t result = 0x6971416F6ELL;
      break;
    case 0x16uLL:
      unint64_t result = 0x656C41726F6E696DLL;
      break;
    case 0x17uLL:
      unint64_t result = 0x726F6E694D70686ELL;
      break;
    case 0x19uLL:
      unint64_t result = 0x7974706D65;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100BB5CCC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6E656E6F706D6F63 && a2 == 0xEA00000000007374)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_100BB5D60()
{
  return 0x6E656E6F706D6F63;
}

void *sub_100BB5D7C(void *a1)
{
  sub_10017DF08(&qword_100EB67C8);
  sub_100179C0C();
  __chkstk_darwin(v3);
  char v4 = sub_1001B1E64(a1, a1[3]);
  sub_100BB634C();
  sub_100163110();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_10017DF08(&qword_100EB67D8);
    sub_100BB6398(&qword_100EB67E0, &qword_100EB67D8, (void (*)(void))sub_100BB6410);
    sub_10017DCE0();
    uint64_t v5 = sub_100179EBC();
    v6(v5);
    char v4 = v8;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  return v4;
}

uint64_t sub_100BB5EB0(uint64_t a1, uint64_t a2)
{
  if (a1 == 1937207154 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_100BB5F28()
{
  return 1937207154;
}

void *sub_100BB5F38(void *a1)
{
  sub_10017DF08(&qword_100EB67A0);
  sub_100179C0C();
  __chkstk_darwin(v3);
  char v4 = sub_1001B1E64(a1, a1[3]);
  sub_100BB62B4();
  sub_100163110();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_10017DF08(&qword_100EB67B0);
    sub_100BB6398(&qword_100EB67B8, &qword_100EB67B0, (void (*)(void))sub_100BB6300);
    sub_10017DCE0();
    uint64_t v5 = sub_100179EBC();
    v6(v5);
    char v4 = v8;
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  return v4;
}

uint64_t sub_100BB606C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100BB5CCC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_100BB6098(uint64_t a1)
{
  unint64_t v2 = sub_100BB634C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BB60D4(uint64_t a1)
{
  unint64_t v2 = sub_100BB634C();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_100BB6110@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_100BB5D7C(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_100BB613C(void *a1, void *a2)
{
  return sub_100BB5CC8(*a1, *a2);
}

uint64_t sub_100BB614C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100BB5EB0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_100BB6178(uint64_t a1)
{
  unint64_t v2 = sub_100BB62B4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BB61B4(uint64_t a1)
{
  unint64_t v2 = sub_100BB62B4();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_100BB61F0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_100BB5F38(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_100BB621C(void *a1, void *a2)
{
  return sub_100BB5EAC(*a1, *a2);
}

uint64_t sub_100BB6278()
{
  sub_10021CDB4();

  return ShortDescribable.description.getter();
}

unint64_t sub_100BB62B4()
{
  unint64_t result = qword_100EB67A8;
  if (!qword_100EB67A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB67A8);
  }
  return result;
}

unint64_t sub_100BB6300()
{
  unint64_t result = qword_100EB67C0;
  if (!qword_100EB67C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB67C0);
  }
  return result;
}

unint64_t sub_100BB634C()
{
  unint64_t result = qword_100EB67D0;
  if (!qword_100EB67D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB67D0);
  }
  return result;
}

uint64_t sub_100BB6398(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100BB6410()
{
  unint64_t result = qword_100E6A860;
  if (!qword_100E6A860)
  {
    type metadata accessor for LocationViewComponent();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E6A860);
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationViewConfiguration.Row.CodingKeys()
{
  return &type metadata for LocationViewConfiguration.Row.CodingKeys;
}

unsigned char *_s7Weather25LocationViewConfigurationV3RowV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100BB6510);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationViewConfiguration.CodingKeys()
{
  return &type metadata for LocationViewConfiguration.CodingKeys;
}

unint64_t sub_100BB654C()
{
  unint64_t result = qword_100EB67E8;
  if (!qword_100EB67E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB67E8);
  }
  return result;
}

unint64_t sub_100BB659C()
{
  unint64_t result = qword_100EB67F0;
  if (!qword_100EB67F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB67F0);
  }
  return result;
}

unint64_t sub_100BB65EC()
{
  unint64_t result = qword_100EB67F8;
  if (!qword_100EB67F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB67F8);
  }
  return result;
}

unint64_t sub_100BB663C()
{
  unint64_t result = qword_100EB6800;
  if (!qword_100EB6800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6800);
  }
  return result;
}

unint64_t sub_100BB668C()
{
  unint64_t result = qword_100EB6808;
  if (!qword_100EB6808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6808);
  }
  return result;
}

unint64_t sub_100BB66DC()
{
  unint64_t result = qword_100EB6810;
  if (!qword_100EB6810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6810);
  }
  return result;
}

ValueMetadata *type metadata accessor for UVIndexComparisonTextBuilder()
{
  return &type metadata for UVIndexComparisonTextBuilder;
}

uint64_t sub_100BB6738(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E6BCB0);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = &v21[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v7 = &v21[-v6];
  uint64_t v8 = type metadata accessor for PastDataComparisonTextContext();
  sub_10047AA38(a1 + *(int *)(v8 + 48), (uint64_t)v7);
  uint64_t v9 = type metadata accessor for ExtremaResult();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9) != 1)
  {
    ExtremaResult.maxValue.getter();
    double v11 = v10;
    uint64_t v12 = *(void (**)(unsigned char *, uint64_t))(*(void *)(v9 - 8) + 8);
    v12(v7, v9);
    sub_10047AA38(a1 + *(int *)(v8 + 40), (uint64_t)v4);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v4, 1, v9) != 1)
    {
      double v17 = round(v11);
      ExtremaResult.maxValue.getter();
      double v19 = v18;
      v12(v4, v9);
      if (v17 >= round(v19)) {
        sub_10018854C();
      }
      else {
        LocalizedStringKey.init(stringLiteral:)();
      }
      return Text.init(_:tableName:bundle:comment:)();
    }
    uint64_t v7 = v4;
  }
  sub_10047AAA0((uint64_t)v7);
  if (qword_100E627E8 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_1002102B0(v13, (uint64_t)qword_100F51ED0);
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v16 = 0;
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Missing extrema values for building UV index comparison text", v16, 2u);
    swift_slowDealloc();
  }

  LocalizedStringKey.init(stringLiteral:)();
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_100BB6A68(uint64_t a1)
{
  return sub_100BB6738(a1);
}

uint64_t *sub_100BB6A8C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    double v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    os_log_type_t v15 = (uint64_t *)((char *)v7 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    void *v15 = *v16;
    v15[1] = v17;
    double v18 = (uint64_t *)((char *)v7 + v14);
    double v19 = (uint64_t *)((char *)a2 + v14);
    uint64_t v20 = v19[1];
    *double v18 = *v19;
    v18[1] = v20;
    uint64_t v21 = a3[8];
    uint64_t v22 = (char *)v7 + v21;
    unint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = type metadata accessor for TimeZone();
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v25(v22, v23, v24);
  }
  return v7;
}

uint64_t sub_100BB6C00(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = type metadata accessor for TimeZone();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

void *sub_100BB6CE0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  double v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)((char *)a1 + v11);
  uint64_t v14 = (void *)((char *)a2 + v11);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = (void *)((char *)a1 + v12);
  uint64_t v17 = (void *)((char *)a2 + v12);
  uint64_t v18 = v17[1];
  void *v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = a3[8];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = type metadata accessor for TimeZone();
  unint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v23(v20, v21, v22);
  return a1;
}

void *sub_100BB6E08(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  return a1;
}

void *sub_100BB6F44(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  uint64_t v11 = a3[8];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

void *sub_100BB702C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  *uint64_t v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  void *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[8];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  uint64_t v23 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 40))(v21, v22, v23);
  return a1;
}

uint64_t sub_100BB7140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BB7154);
}

uint64_t sub_100BB7154(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_100163020(*a1);
  }
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v8 + 84) == a2)
  {
    uint64_t v9 = v7;
    uint64_t v10 = *(int *)(a3 + 20);
  }
  else
  {
    uint64_t v9 = type metadata accessor for TimeZone();
    uint64_t v10 = *(int *)(a3 + 32);
  }

  return _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1 + v10, a2, v9);
}

uint64_t sub_100BB71F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BB7208);
}

void *sub_100BB7208(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    type metadata accessor for Date();
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 20);
    }
    else
    {
      uint64_t v10 = type metadata accessor for TimeZone();
      uint64_t v11 = *(int *)(a4 + 32);
    }
    return (void *)_s7Weather24LocationCompositionStateOwst_0((uint64_t)v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for DayPickerViewModel(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB6870);
}

uint64_t sub_100BB72D0()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TimeZone();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100BB73B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v8 = __chkstk_darwin(v7);
  __chkstk_darwin(v8);
  Date.startOfDay.getter();
  Date.init()();
  Date.startOfDay.getter();
  uint64_t v9 = *(void (**)(void))(v6 + 8);
  sub_10017DC5C();
  v9();
  char v10 = static Date.== infix(_:_:)();
  sub_10017DC5C();
  v9();
  sub_10017DC5C();
  v9();
  if (v10)
  {
    id v11 = [self mainBundle];
    v16._object = (void *)0x8000000100CC04F0;
    v12._uint64_t countAndFlagsBits = 0x25202C7961646F54;
    v12._object = (void *)0xE900000000000040;
    v13._uint64_t countAndFlagsBits = 0;
    v13._object = (void *)0xE000000000000000;
    v16._uint64_t countAndFlagsBits = 0xD000000000000071;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v16);

    sub_10017DF08(&qword_100E64020);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_100C251B0;
    *(void *)(v14 + 56) = &type metadata for String;
    *(void *)(v14 + 64) = sub_10012B7C0();
    *(void *)(v14 + 32) = a2;
    *(void *)(v14 + 40) = a3;
    swift_bridgeObjectRetain();
    a2 = static String.localizedStringWithFormat(_:_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return a2;
}

uint64_t sub_100BB7614()
{
  sub_100BDD44C();
  if ((v0 & 1) == 0) {
    return 0;
  }
  uint64_t v1 = type metadata accessor for DayPickerViewModel(0);
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  sub_10017CC9C(*(int *)(v1 + 24));
  BOOL v4 = v4 && v2 == v3;
  if (!v4 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  sub_10017CC9C(*(int *)(v1 + 28));
  BOOL v7 = v4 && v5 == v6;
  if (!v7 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }

  return static TimeZone.== infix(_:_:)();
}

uint64_t sub_100BB76DC@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = sub_10017DF08(&qword_100EB68C8);
  a1[4] = sub_100047B30(&qword_100EB68D0, &qword_100EB68C8);
  sub_100170694(a1);
  type metadata accessor for DayPickerViewModel(0);
  return ShortDescription.init(name:_:)();
}

BOOL sub_100BB7794(uint64_t a1, uint64_t a2)
{
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  BOOL v4 = (int *)type metadata accessor for DayPickerViewModel.CalendarDayViewModel(0);
  sub_10017CC9C(v4[5]);
  BOOL v7 = v7 && v5 == v6;
  if (v7 || (char v8 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v8 & 1) != 0))
  {
    sub_10017CC9C(v4[6]);
    if (v7 && v10 == v11) {
      return *(unsigned __int8 *)(a1 + v4[7]) == *(unsigned __int8 *)(a2 + v4[7]);
    }
    char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
    BOOL result = 0;
    if (v13) {
      return *(unsigned __int8 *)(a1 + v4[7]) == *(unsigned __int8 *)(a2 + v4[7]);
    }
  }
  return result;
}

uint64_t sub_100BB7838@<X0>(uint64_t *a1@<X8>)
{
  return sub_100BB76DC(a1);
}

uint64_t sub_100BB7850()
{
  sub_100BB7A8C(&qword_100EB68D8, (void (*)(uint64_t))type metadata accessor for DayPickerViewModel);

  return ShortDescribable.description.getter();
}

uint64_t sub_100BB78C0@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = sub_10017DF08(&qword_100EB68E0);
  a1[4] = sub_100047B30(&qword_100EB68E8, &qword_100EB68E0);
  sub_100170694(a1);
  type metadata accessor for ConditionDetailViewModel(0);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_100BB7978@<X0>(uint64_t *a1@<X8>)
{
  return sub_100BB78C0(a1);
}

uint64_t sub_100BB7990()
{
  sub_100BB7A8C(&qword_100EB68F0, (void (*)(uint64_t))type metadata accessor for ConditionDetailViewModel);

  return ShortDescribable.description.getter();
}

uint64_t sub_100BB79FC()
{
  return sub_100BB7A8C(&qword_100EB68B8, (void (*)(uint64_t))type metadata accessor for ConditionDetailViewModel);
}

uint64_t sub_100BB7A44()
{
  return sub_100BB7A8C(&qword_100EB68C0, (void (*)(uint64_t))type metadata accessor for DayPickerViewModel);
}

uint64_t sub_100BB7A8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for DayPickerViewModel.CalendarDayViewModel(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB6950);
}

void *sub_100BB7AF4(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (void *)((char *)a1 + v8);
    uint64_t v11 = (void *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    char v13 = (void *)((char *)a1 + v9);
    uint64_t v14 = (void *)((char *)a2 + v9);
    uint64_t v15 = v14[1];
    *char v13 = *v14;
    v13[1] = v15;
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100BB7BF0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100BB7C78(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  uint64_t v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  uint64_t v12 = (void *)(a1 + v8);
  char v13 = (void *)(a2 + v8);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100BB7D24(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100BB7DF8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100BB7E88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[6];
  char v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *char v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100BB7F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BB7F50);
}

uint64_t sub_100BB7F50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) != a2) {
    return sub_100163020(*(void *)(a1 + *(int *)(a3 + 20) + 8));
  }

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
}

uint64_t sub_100BB7FD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BB7FE8);
}

void sub_100BB7FE8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
}

uint64_t sub_100BB8074()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DayPickerViewModel.CalendarDayViewModel.DayTense(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100BB81E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DayPickerViewModel.CalendarDayViewModel.DayTense()
{
  return &type metadata for DayPickerViewModel.CalendarDayViewModel.DayTense;
}

unint64_t sub_100BB821C()
{
  unint64_t result = qword_100EB6990;
  if (!qword_100EB6990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6990);
  }
  return result;
}

void *sub_100BB8268(uint64_t a1, uint64_t *a2, int *a3)
{
  unsigned int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[4];
    uint64_t v10 = a2[5];
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    uint64_t v11 = a3[8];
    uint64_t v17 = a1 + v11;
    uint64_t v12 = (uint64_t)a2 + v11;
    *(void *)(a1 + 32) = v9;
    *(void *)(a1 + 40) = v10;
    uint64_t v13 = type metadata accessor for Date();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v17, v12, v13);
    v14((uint64_t)v4 + a3[9], (uint64_t)a2 + a3[9], v13);
    *((unsigned char *)v4 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  }
  return v4;
}

uint64_t sub_100BB83BC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 36);

  return v8(v6, v5);
}

uint64_t sub_100BB847C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v10 = a3[8];
  uint64_t v15 = a1 + v10;
  uint64_t v11 = a2 + v10;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v15, v11, v12);
  v13(a1 + a3[9], a2 + a3[9], v12);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_100BB8580(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = a3[8];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(a1 + a3[9], a2 + a3[9], v9);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_100BB86A0(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = a3[8];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(a1 + a3[9], a2 + a3[9], v10);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_100BB8770(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v9 = a3[8];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40);
  v13(v10, v11, v12);
  v13(a1 + a3[9], a2 + a3[9], v12);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  return a1;
}

uint64_t sub_100BB8860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BB8874);
}

uint64_t sub_100BB8874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = a1 + *(int *)(a3 + 32);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_100BB88FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BB8910);
}

uint64_t sub_100BB8910(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = v5 + *(int *)(a4 + 32);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for MoonScrubberHeaderViewModel(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB69F0);
}

uint64_t sub_100BB89B0()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_100BB8A60(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[6];
    *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v9], 1, v7))
    {
      uint64_t v12 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v7);
    }
    uint64_t v14 = a3[7];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v14], 1, v7))
    {
      uint64_t v17 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v8(v15, v16, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v7);
    }
    a1[a3[8]] = a2[a3[8]];
  }
  return a1;
}

uint64_t sub_100BB8C40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v8(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v4)) {
    v8(v5, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 28);
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v6, 1, v4);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
  }
  return result;
}

char *sub_100BB8D3C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v8], 1, v6))
  {
    uint64_t v11 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v6);
  }
  uint64_t v12 = a3[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v12], 1, v6))
  {
    uint64_t v15 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v7(v13, v14, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v6);
  }
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

char *sub_100BB8ECC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&a1[v9], 1, v6);
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v8(v10, v11, v6);
LABEL_7:
  uint64_t v15 = a3[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  int v18 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&a1[v15], 1, v6);
  int v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v6);
  if (!v18)
  {
    if (!v19)
    {
      v8(v16, v17, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v16, v17, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v6);
LABEL_13:
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

char *sub_100BB9144(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v8], 1, v6))
  {
    uint64_t v11 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v6);
  }
  uint64_t v12 = a3[7];
  int v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v12], 1, v6))
  {
    uint64_t v15 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v7(v13, v14, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v6);
  }
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

char *sub_100BB92D4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&a1[v9], 1, v6);
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v6);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
LABEL_6:
    uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  v8(v10, v11, v6);
LABEL_7:
  uint64_t v15 = a3[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  int v18 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&a1[v15], 1, v6);
  int v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v6);
  if (!v18)
  {
    if (!v19)
    {
      v8(v16, v17, v6);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v16, v6);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v16, v17, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v6);
LABEL_13:
  a1[a3[8]] = a2[a3[8]];
  return a1;
}

uint64_t sub_100BB9548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BB955C);
}

uint64_t sub_100BB955C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    sub_10017DF08((uint64_t *)&unk_100E73CA0);
    sub_100162F30();
    if (*(_DWORD *)(v11 + 84) != a2)
    {
      unsigned int v13 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 32));
      if (v13 >= 2) {
        return ((v13 + 2147483646) & 0x7FFFFFFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v10;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_100BB9624(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BB9638);
}

void sub_100BB9638(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_10017DF08((uint64_t *)&unk_100E73CA0);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 32)) = a2 + 1;
      return;
    }
    uint64_t v10 = v12;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for MoonViewModel(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB6A98);
}

void sub_100BB970C()
{
  type metadata accessor for Date();
  if (v0 <= 0x3F)
  {
    sub_1000159D8();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

BOOL sub_100BB97EC(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 || (char v5 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v5 & 1) != 0))
  {
    BOOL v7 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
    if (v7 || (char v8 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v8 & 1) != 0))
    {
      BOOL v9 = *(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40);
      if (v9 || (char v10 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v10 & 1) != 0))
      {
        if (*(unsigned __int8 *)(a1 + 48) == *(unsigned __int8 *)(a2 + 48)
          && (uint64_t v11 = type metadata accessor for MoonScrubberHeaderViewModel(0), (static Date.== infix(_:_:)() & 1) != 0)
          && (static Date.== infix(_:_:)() & 1) != 0)
        {
          return *(unsigned __int8 *)(a1 + *(int *)(v11 + 40)) == *(unsigned __int8 *)(a2 + *(int *)(v11 + 40));
        }
        else
        {
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t sub_100BB98F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v56 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v55 = &v48[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_10017DF08(&qword_100E64D60);
  __chkstk_darwin(v6);
  sub_100162EF8();
  uint64_t v54 = (unsigned char *)v7;
  __chkstk_darwin(v8);
  char v10 = &v48[-v9];
  uint64_t v11 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v11 - 8);
  sub_100162EF8();
  uint64_t v53 = v12;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = &v48[-v15];
  uint64_t v17 = __chkstk_darwin(v14);
  int v19 = &v48[-v18];
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v22 = &v48[-v21];
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = &v48[-v24];
  __chkstk_darwin(v23);
  uint64_t v27 = &v48[-v26];
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    goto LABEL_21;
  }
  uint64_t v28 = type metadata accessor for MoonViewModel(0);
  if (*(double *)(a1 + *(int *)(v28 + 20)) != *(double *)(a2 + *(int *)(v28 + 20))) {
    goto LABEL_21;
  }
  uint64_t v29 = *(int *)(v28 + 24);
  uint64_t v30 = a1;
  uint64_t v31 = v28;
  uint64_t v50 = v30;
  sub_1001C7278(v30 + v29, (uint64_t)v27);
  uint64_t v51 = v31;
  uint64_t v52 = a2;
  sub_1001C7278(a2 + *(int *)(v31 + 24), (uint64_t)v25);
  uint64_t v32 = (uint64_t)&v10[*(int *)(v6 + 48)];
  sub_1001C7278((uint64_t)v27, (uint64_t)v10);
  sub_1001C7278((uint64_t)v25, v32);
  sub_100162F8C((uint64_t)v10);
  if (v33)
  {
    sub_1000F3400((uint64_t)v25, (uint64_t *)&unk_100E73CA0);
    sub_1000F3400((uint64_t)v27, (uint64_t *)&unk_100E73CA0);
    sub_100162F8C(v32);
    if (!v33) {
      goto LABEL_20;
    }
    sub_1000F3400((uint64_t)v10, (uint64_t *)&unk_100E73CA0);
  }
  else
  {
    sub_1001C7278((uint64_t)v10, (uint64_t)v22);
    sub_100162F8C(v32);
    if (v33)
    {
      sub_1000F3400((uint64_t)v25, (uint64_t *)&unk_100E73CA0);
      sub_1000F3400((uint64_t)v27, (uint64_t *)&unk_100E73CA0);
      (*(void (**)(unsigned char *, uint64_t))(v56 + 8))(v22, v4);
LABEL_20:
      sub_1000F3400((uint64_t)v10, &qword_100E64D60);
      goto LABEL_21;
    }
    sub_10019F8D8();
    v34();
    sub_1006BA560();
    int v49 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v35 = *(void (**)(unsigned char *, uint64_t))(v56 + 8);
    v35(v55, v4);
    sub_1000F3400((uint64_t)v25, (uint64_t *)&unk_100E73CA0);
    sub_1000F3400((uint64_t)v27, (uint64_t *)&unk_100E73CA0);
    v35(v22, v4);
    sub_1000F3400((uint64_t)v10, (uint64_t *)&unk_100E73CA0);
    if ((v49 & 1) == 0) {
      goto LABEL_21;
    }
  }
  uint64_t v37 = v50;
  uint64_t v36 = v51;
  sub_1001C7278(v50 + *(int *)(v51 + 28), (uint64_t)v19);
  sub_1001C7278(v52 + *(int *)(v36 + 28), (uint64_t)v16);
  char v10 = v54;
  uint64_t v38 = (uint64_t)&v54[*(int *)(v6 + 48)];
  sub_1001C7278((uint64_t)v19, (uint64_t)v54);
  sub_1001C7278((uint64_t)v16, v38);
  sub_100162F8C((uint64_t)v10);
  if (v33)
  {
    sub_1000F3400((uint64_t)v16, (uint64_t *)&unk_100E73CA0);
    sub_1000F3400((uint64_t)v19, (uint64_t *)&unk_100E73CA0);
    sub_100162F8C(v38);
    if (v33)
    {
      sub_1000F3400((uint64_t)v10, (uint64_t *)&unk_100E73CA0);
LABEL_24:
      char v41 = *(unsigned char *)(v37 + *(int *)(v51 + 32)) ^ *(unsigned char *)(v52 + *(int *)(v51 + 32)) ^ 1;
      return v41 & 1;
    }
    goto LABEL_20;
  }
  uint64_t v39 = v53;
  sub_1001C7278((uint64_t)v10, v53);
  sub_100162F8C(v38);
  if (v40)
  {
    sub_1000F3400((uint64_t)v16, (uint64_t *)&unk_100E73CA0);
    sub_1000F3400((uint64_t)v19, (uint64_t *)&unk_100E73CA0);
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v39, v4);
    goto LABEL_20;
  }
  uint64_t v43 = v55;
  uint64_t v44 = v56;
  sub_10019F8D8();
  v45();
  sub_1006BA560();
  char v46 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v47 = *(void (**)(unsigned char *, uint64_t))(v44 + 8);
  v47(v43, v4);
  sub_1000F3400((uint64_t)v16, (uint64_t *)&unk_100E73CA0);
  sub_1000F3400((uint64_t)v19, (uint64_t *)&unk_100E73CA0);
  v47((unsigned char *)v39, v4);
  sub_1000F3400((uint64_t)v10, (uint64_t *)&unk_100E73CA0);
  if (v46) {
    goto LABEL_24;
  }
LABEL_21:
  char v41 = 0;
  return v41 & 1;
}

uint64_t sub_100BB9E6C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = self;
  id v5 = a1;
  id v6 = [v4 celsius];
  sub_1001433AC();
  char v7 = static NSObject.== infix(_:_:)();

  if (v7)
  {

    uint64_t v8 = (unsigned int *)&enum case for TemperatureScale.celsius(_:);
  }
  else
  {
    id v9 = v5;
    id v10 = [v4 fahrenheit];
    char v11 = static NSObject.== infix(_:_:)();

    if ((v11 & 1) == 0)
    {
      id v18 = v9;
      id v19 = [v4 kelvin];
      char v20 = static NSObject.== infix(_:_:)();

      uint64_t v15 = type metadata accessor for TemperatureScale();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104);
      if (v20) {
        uint64_t v21 = (unsigned int *)&enum case for TemperatureScale.kelvin(_:);
      }
      else {
        uint64_t v21 = (unsigned int *)&enum case for TemperatureScale.unknown(_:);
      }
      uint64_t v17 = *v21;
      uint64_t v16 = a2;
      goto LABEL_10;
    }

    uint64_t v8 = (unsigned int *)&enum case for TemperatureScale.fahrenheit(_:);
  }
  uint64_t v12 = *v8;
  uint64_t v13 = type metadata accessor for TemperatureScale();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);
  uint64_t v15 = v13;
  uint64_t v16 = a2;
  uint64_t v17 = v12;
LABEL_10:

  return v14(v16, v17, v15);
}

uint64_t *sub_100BBA028(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    char v7 = (int *)type metadata accessor for HomeAndWorkRefinementContentViewModel(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      uint64_t v10 = v7[5];
      char v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = type metadata accessor for Location();
      uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      v14(v11, v12, v13);
      uint64_t v15 = v7[6];
      uint64_t v16 = (char *)a1 + v15;
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = type metadata accessor for LocationOfInterest();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      uint64_t v19 = v7[7];
      char v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      uint64_t v22 = type metadata accessor for AttributedString();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
      *((unsigned char *)a1 + v7[8]) = *((unsigned char *)a2 + v7[8]);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v7);
    }
  }
  return a1;
}

uint64_t type metadata accessor for HomeAndWorkRefinementContentViewModel(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB6BB8);
}

uint64_t sub_100BBA220(uint64_t a1)
{
  uint64_t v2 = (int *)type metadata accessor for HomeAndWorkRefinementContentViewModel(0);
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(a1, 1, (uint64_t)v2);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = a1 + v2[5];
    uint64_t v5 = type metadata accessor for Location();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
    uint64_t v6 = a1 + v2[6];
    uint64_t v7 = type metadata accessor for LocationOfInterest();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    uint64_t v8 = a1 + v2[7];
    uint64_t v9 = type metadata accessor for AttributedString();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    return v10(v8, v9);
  }
  return result;
}

void *sub_100BBA34C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for HomeAndWorkRefinementContentViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = v6[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Location();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = v6[6];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = type metadata accessor for LocationOfInterest();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = v6[7];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = type metadata accessor for AttributedString();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  }
  return a1;
}

void *sub_100BBA4E8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for HomeAndWorkRefinementContentViewModel(0);
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, (uint64_t)v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6);
  if (!v7)
  {
    if (!v8)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v23 = v6[5];
      uint64_t v24 = (char *)a1 + v23;
      uint64_t v25 = (char *)a2 + v23;
      uint64_t v26 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
      uint64_t v27 = v6[6];
      uint64_t v28 = (char *)a1 + v27;
      uint64_t v29 = (char *)a2 + v27;
      uint64_t v30 = type metadata accessor for LocationOfInterest();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
      uint64_t v31 = v6[7];
      uint64_t v32 = (char *)a1 + v31;
      char v33 = (char *)a2 + v31;
      uint64_t v34 = type metadata accessor for AttributedString();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 24))(v32, v33, v34);
      *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
      return a1;
    }
    sub_100BBC168((uint64_t)a1, (void (*)(void))type metadata accessor for HomeAndWorkRefinementContentViewModel);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v9 = v6[5];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Location();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  uint64_t v14 = v6[6];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for LocationOfInterest();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  uint64_t v18 = v6[7];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  return a1;
}

_OWORD *sub_100BBA7CC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for HomeAndWorkRefinementContentViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = v6[5];
    int v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Location();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    uint64_t v11 = v6[6];
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = type metadata accessor for LocationOfInterest();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    uint64_t v15 = v6[7];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = type metadata accessor for AttributedString();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  }
  return a1;
}

void *sub_100BBA94C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for HomeAndWorkRefinementContentViewModel(0);
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, (uint64_t)v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6);
  if (!v7)
  {
    if (!v8)
    {
      uint64_t v22 = a2[1];
      *a1 = *a2;
      a1[1] = v22;
      swift_bridgeObjectRelease();
      uint64_t v23 = v6[5];
      uint64_t v24 = (char *)a1 + v23;
      uint64_t v25 = (char *)a2 + v23;
      uint64_t v26 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
      uint64_t v27 = v6[6];
      uint64_t v28 = (char *)a1 + v27;
      uint64_t v29 = (char *)a2 + v27;
      uint64_t v30 = type metadata accessor for LocationOfInterest();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
      uint64_t v31 = v6[7];
      uint64_t v32 = (char *)a1 + v31;
      char v33 = (char *)a2 + v31;
      uint64_t v34 = type metadata accessor for AttributedString();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
      *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
      return a1;
    }
    sub_100BBC168((uint64_t)a1, (void (*)(void))type metadata accessor for HomeAndWorkRefinementContentViewModel);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v9 = v6[5];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  uint64_t v13 = v6[6];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for LocationOfInterest();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  uint64_t v17 = v6[7];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  return a1;
}

uint64_t sub_100BBABFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BBAC10);
}

uint64_t sub_100BBAC10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomeAndWorkRefinementContentViewModel(0);
  unsigned int v5 = _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_100BBAC58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BBAC6C);
}

uint64_t sub_100BBAC6C(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for HomeAndWorkRefinementContentViewModel(0);

  return _s7Weather24LocationCompositionStateOwst_0(a1, v5, a3, v6);
}

uint64_t sub_100BBACC8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HomeAndWorkRefinementContentViewModel(0);

  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
}

uint64_t sub_100BBAD0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HomeAndWorkRefinementContentViewModel(0);

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v4);
}

uint64_t type metadata accessor for HomeAndWorkRefinementViewModel(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100EB6B50);
}

uint64_t sub_100BBAD78()
{
  uint64_t result = type metadata accessor for HomeAndWorkRefinementContentViewModel(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void *sub_100BBADF0(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Location();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = (char *)v4 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = type metadata accessor for LocationOfInterest();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = a3[7];
    uint64_t v18 = (char *)v4 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = type metadata accessor for AttributedString();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  }
  return v4;
}

uint64_t sub_100BBAF84(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = type metadata accessor for LocationOfInterest();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + a2[7];
  uint64_t v9 = type metadata accessor for AttributedString();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);

  return v10(v8, v9);
}

void *sub_100BBB084(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Location();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for LocationOfInterest();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = a3[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

void *sub_100BBB1C8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for LocationOfInterest();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

_OWORD *sub_100BBB308(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for LocationOfInterest();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

void *sub_100BBB430(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for LocationOfInterest();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = type metadata accessor for AttributedString();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_100BBB560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BBB574);
}

uint64_t sub_100BBB574(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    type metadata accessor for Location();
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a3[5];
    }
    else
    {
      type metadata accessor for LocationOfInterest();
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a2)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a3[6];
      }
      else
      {
        uint64_t v10 = type metadata accessor for AttributedString();
        uint64_t v11 = a3[7];
      }
    }
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v11, a2, v10);
  }
}

uint64_t sub_100BBB644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BBB658);
}

uint64_t sub_100BBB658(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    type metadata accessor for Location();
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a4[5];
    }
    else
    {
      type metadata accessor for LocationOfInterest();
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a3)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a4[6];
      }
      else
      {
        uint64_t v10 = type metadata accessor for AttributedString();
        uint64_t v11 = a4[7];
      }
    }
    return _s7Weather24LocationCompositionStateOwst_0(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_100BBB724()
{
  uint64_t result = type metadata accessor for Location();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for LocationOfInterest();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for AttributedString();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_100BBB83C(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (v5 = _stringCompareWithSmolCheck(_:_:expecting:)(), char v6 = 0, (v5 & 1) != 0))
  {
    uint64_t v7 = type metadata accessor for HomeAndWorkRefinementContentViewModel(0);
    if ((static Location.== infix(_:_:)() & 1) != 0
      && (static LocationOfInterest.== infix(_:_:)() & 1) != 0
      && (static AttributedString.== infix(_:_:)() & 1) != 0)
    {
      char v6 = *((unsigned char *)a1 + *(int *)(v7 + 32)) ^ *((unsigned char *)a2 + *(int *)(v7 + 32)) ^ 1;
    }
    else
    {
      char v6 = 0;
    }
  }
  return v6 & 1;
}

uint64_t sub_100BBB904@<X0>(uint64_t *a1@<X8>)
{
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C251B0;
  *(void *)(inited + 32) = 0x656C746974;
  *(void *)(inited + 40) = 0xE500000000000000;
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v5;
  *(void *)(inited + 56) = v4;
  swift_bridgeObjectRetain();
  Dictionary.init(dictionaryLiteral:)();
  a1[3] = sub_10017DF08(&qword_100EB6C18);
  a1[4] = sub_100047B30(&qword_100EB6C20, &qword_100EB6C18);
  sub_10023C310(a1);
  type metadata accessor for HomeAndWorkRefinementContentViewModel(0);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_100BBBA0C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for HomeAndWorkRefinementContentViewModel(0);
  sub_100162E4C();
  __chkstk_darwin(v6);
  uint64_t v7 = sub_10019F8EC();
  __chkstk_darwin(v7 - 8);
  sub_1001626E0();
  uint64_t v10 = (void *)(v9 - v8);
  uint64_t v11 = sub_10017DF08(&qword_100EB6C10);
  __chkstk_darwin(v11 - 8);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  uint64_t v16 = v13 - v12 + *(int *)(v15 + 56);
  sub_100BBC1C0(a1, v13 - v12, (void (*)(void))type metadata accessor for HomeAndWorkRefinementViewModel);
  sub_100BBC1C0(a2, v16, (void (*)(void))type metadata accessor for HomeAndWorkRefinementViewModel);
  sub_100162F8C(v14);
  if (v18)
  {
    sub_100162F8C(v16);
    if (v18) {
      goto LABEL_5;
    }
  }
  else
  {
    sub_100BBC1C0(v14, (uint64_t)v10, (void (*)(void))type metadata accessor for HomeAndWorkRefinementViewModel);
    sub_100162F8C(v16);
    if (!v18)
    {
      sub_100287C90(v16, (uint64_t)v2);
      BOOL v19 = *v10 == *v2 && v10[1] == v2[1];
      if (!v19 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
        || (static Location.== infix(_:_:)() & 1) == 0
        || (static LocationOfInterest.== infix(_:_:)() & 1) == 0
        || (static AttributedString.== infix(_:_:)() & 1) == 0
        || *((unsigned __int8 *)v10 + *(int *)(v5 + 32)) != *((unsigned __int8 *)v2 + *(int *)(v5 + 32)))
      {
        sub_100BBC168((uint64_t)v2, (void (*)(void))type metadata accessor for HomeAndWorkRefinementContentViewModel);
        sub_100BBC168((uint64_t)v10, (void (*)(void))type metadata accessor for HomeAndWorkRefinementContentViewModel);
        sub_100BBC168(v14, (void (*)(void))type metadata accessor for HomeAndWorkRefinementViewModel);
        return 0;
      }
      sub_100BBC168((uint64_t)v2, (void (*)(void))type metadata accessor for HomeAndWorkRefinementContentViewModel);
      sub_100BBC168((uint64_t)v10, (void (*)(void))type metadata accessor for HomeAndWorkRefinementContentViewModel);
LABEL_5:
      sub_100BBC168(v14, (void (*)(void))type metadata accessor for HomeAndWorkRefinementViewModel);
      return 1;
    }
    sub_100BBC168((uint64_t)v10, (void (*)(void))type metadata accessor for HomeAndWorkRefinementContentViewModel);
  }
  sub_100BBC108(v14);
  return 0;
}

uint64_t sub_100BBBCBC()
{
  sub_100BBC0C0(&qword_100EB6C28, (void (*)(uint64_t))type metadata accessor for HomeAndWorkRefinementContentViewModel);

  return ShortDescribable.description.getter();
}

uint64_t sub_100BBBD2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v4 = type metadata accessor for HomeAndWorkRefinementContentViewModel(0);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_10019F8EC();
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  sub_100BBC1C0(v1, v8 - v7, (void (*)(void))type metadata accessor for HomeAndWorkRefinementViewModel);
  if (_s7Weather24LocationCompositionStateOwet_0(v9, 1, v4) == 1)
  {
    sub_10017DF08(&qword_100E635E0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100C251B0;
    *(void *)(inited + 32) = 0x746E65746E6F63;
    *(void *)(inited + 40) = 0xE700000000000000;
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = 0x7974706D65;
    *(void *)(inited + 56) = 0xE500000000000000;
    Dictionary.init(dictionaryLiteral:)();
    a1[3] = sub_10017DF08(&qword_100EB6C30);
    a1[4] = sub_100047B30(&qword_100EB6C38, &qword_100EB6C30);
    sub_10023C310(a1);
    sub_10017B168();
    return ShortDescription.init(name:_:)();
  }
  else
  {
    sub_100287C90(v9, v2);
    sub_10017DF08(&qword_100E635E0);
    uint64_t v12 = swift_initStackObject();
    *(_OWORD *)(v12 + 16) = xmmword_100C251B0;
    *(void *)(v12 + 32) = 0x746E65746E6F63;
    *(void *)(v12 + 40) = 0xE700000000000000;
    *(void *)(v12 + 72) = v4;
    uint64_t v13 = sub_10023C310((uint64_t *)(v12 + 48));
    sub_100BBC1C0(v2, (uint64_t)v13, (void (*)(void))type metadata accessor for HomeAndWorkRefinementContentViewModel);
    Dictionary.init(dictionaryLiteral:)();
    a1[3] = sub_10017DF08(&qword_100EB6C30);
    a1[4] = sub_100047B30(&qword_100EB6C38, &qword_100EB6C30);
    sub_10023C310(a1);
    sub_10017B168();
    ShortDescription.init(name:_:)();
    return sub_100BBC168(v2, (void (*)(void))type metadata accessor for HomeAndWorkRefinementContentViewModel);
  }
}

uint64_t sub_100BBBFC4()
{
  sub_100BBC0C0(&qword_100EB6C40, (void (*)(uint64_t))type metadata accessor for HomeAndWorkRefinementViewModel);

  return ShortDescribable.description.getter();
}

uint64_t sub_100BBC030()
{
  return sub_100BBC0C0(&qword_100EB6C00, (void (*)(uint64_t))type metadata accessor for HomeAndWorkRefinementViewModel);
}

uint64_t sub_100BBC078()
{
  return sub_100BBC0C0(&qword_100EB6C08, (void (*)(uint64_t))type metadata accessor for HomeAndWorkRefinementContentViewModel);
}

uint64_t sub_100BBC0C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100BBC108(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100EB6C10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100BBC168(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100BBC1C0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_100BBC220@<X0>(unsigned __int16 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v9 = (int *)type metadata accessor for NotificationSettingsInput();
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v67 - v13;
  if (*a1 != 2 && (*a1 & 0x100) != 0)
  {
    uint64_t result = sub_10018856C();
    goto LABEL_36;
  }
  uint64_t v2 = *((unsigned __int8 *)a1 + 24);
  uint64_t v22 = v2;
  uint64_t v16 = v9[13];
  uint64_t v17 = "userNotDetermined";
  if (*((unsigned char *)a1 + v16))
  {
    sub_10017DD0C();
    switch(v18)
    {
      case 1:
        goto LABEL_9;
      case 2:
        goto LABEL_10;
      default:
        goto LABEL_11;
    }
  }
  char v20 = 0x80;
  unint64_t v21 = 1;
  unint64_t v3 = *((unsigned __int8 *)a1 + 24);
  uint64_t countAndFlagsBits = v3;
  unint64_t object = v3;
  uint64_t v23 = (void *)v3;
  unint64_t v25 = v3;
  uint64_t v6 = v3;
  unint64_t v26 = v3;
  uint64_t result = v3;
  uint64_t v4 = v3;
  switch(*((unsigned char *)a1 + 24))
  {
    case 1:
LABEL_9:
      unint64_t object = (unint64_t)v17;
      uint64_t v74 = v16;
      swift_bridgeObjectRelease();
      sub_100BBD35C((uint64_t)a1, (uint64_t)v14);
      goto LABEL_12;
    case 2:
LABEL_10:
      sub_1001A1400();
      goto LABEL_11;
    case 3:
LABEL_11:
      unint64_t object = (unint64_t)v17;
      uint64_t v74 = v16;
      uint64_t v4 = sub_10019F914();
      swift_bridgeObjectRelease();
      sub_100BBD35C((uint64_t)a1, (uint64_t)v14);
      if (v4)
      {
LABEL_12:
        sub_100BBD3C0((uint64_t)v14);
        sub_100BBD35C((uint64_t)a1, (uint64_t)v12);
      }
      else
      {
        char v27 = v14[v9[12]];
        sub_100BBD3C0((uint64_t)v14);
        sub_100BBD35C((uint64_t)a1, (uint64_t)v12);
        if ((v27 & 1) == 0)
        {
          sub_100BBD3C0((uint64_t)v12);
          goto LABEL_18;
        }
      }
      unint64_t v3 = v12[v9[13]];
      sub_100BBD3C0((uint64_t)v12);
      if (v3 == 1)
      {
LABEL_18:
        uint64_t v22 = 0;
        unint64_t v3 = 0;
        uint64_t countAndFlagsBits = 0;
        unint64_t object = 0;
        uint64_t v23 = 0;
        unint64_t v25 = 0;
        uint64_t v6 = 0;
        unint64_t v26 = 0;
        uint64_t result = 0;
        uint64_t v4 = 0;
        uint64_t v2 = 0;
        char v20 = 0;
        unint64_t v21 = *((unsigned __int8 *)a1 + v74) | ((unint64_t)*((unsigned __int8 *)a1 + v9[14]) << 8);
        goto LABEL_36;
      }
      sub_10017DD0C();
      switch(v2)
      {
        case 1:
          swift_bridgeObjectRelease();
          goto LABEL_22;
        case 2:
          sub_1001A1400();
          break;
        case 3:
          unint64_t v3 = (object - 32) | 0x8000000000000000;
          break;
        default:
          break;
      }
      uint64_t v2 = sub_10019F914();
      swift_bridgeObjectRelease();
      if ((v2 & 1) == 0)
      {
        char v41 = self;
        id v42 = [v41 mainBundle];
        sub_1001631D8();
        uint64_t v74 = sub_10017FF10(0x1000000000000059, 0x8000000100CC05B0, v43, v44, v45, v46, v47, v48);
        unint64_t v50 = v49;

        id v51 = [v41 mainBundle];
        sub_1001631D8();
        uint64_t v59 = sub_10017FF10(v52, 0x8000000100C9A940, v53, v54, v55, v56, v57, v58);
        uint64_t v61 = v60;

        id v62 = [v41 mainBundle];
        sub_1001631D8();
        v63._unint64_t object = (void *)0x8000000100C9E090;
        v64._uint64_t countAndFlagsBits = 0;
        v64._unint64_t object = (void *)0xE000000000000000;
        Swift::String v65 = NSLocalizedString(_:tableName:bundle:value:comment:)(v63, (Swift::String_optional)0, (NSBundle)v62, v64, v80);
        unint64_t object = (unint64_t)v65._object;

        static Color.blue.getter();
        uint64_t v4 = Color.hex.getter();
        uint64_t v2 = v66;
        swift_release();
        uint64_t result = v61;
        unint64_t v26 = v59;
        unint64_t v25 = v50;
        uint64_t countAndFlagsBits = v65._countAndFlagsBits;
        uint64_t v23 = (void *)v74;
        char v20 = 65;
        unint64_t v3 = 0xEF6C6C69662E6873;
        uint64_t v22 = 0x616C732E6C6C6562;
        uint64_t v6 = 2;
LABEL_35:
        unint64_t v21 = 1;
        goto LABEL_36;
      }
LABEL_22:
      if (*((unsigned char *)a1 + v9[17]) != 1)
      {
        uint64_t result = sub_10018856C();
        goto LABEL_35;
      }
      sub_100BBC880((uint64_t)a1, (uint64_t)v75);
      unint64_t v3 = v75[2];
      uint64_t v73 = v75[1];
      uint64_t v74 = v75[0];
      uint64_t v69 = v75[3];
      v80._unint64_t object = (void *)v76;
      int v70 = v77;
      int v71 = v78;
      int v72 = v79;
      uint64_t v28 = *(void *)((char *)a1 + v9[10]);
      __chkstk_darwin(v29);
      *(&v67 - 2) = (uint64_t)a1;
      swift_bridgeObjectRetain();
      uint64_t v30 = sub_100887CE0((uint64_t)sub_100BBD41C, (uint64_t)(&v67 - 4), v28);
      uint64_t v31 = swift_bridgeObjectRelease();
      uint64_t v68 = *a1;
      __chkstk_darwin(v31);
      *(&v67 - 2) = (uint64_t)a1;
      swift_bridgeObjectRetain();
      sub_10021522C();
      uint64_t v6 = sub_100BBD1DC(v32, (uint64_t)a1);
      unint64_t v34 = v33;
      swift_bridgeObjectRelease();
      unint64_t v26 = v34;
      uint64_t countAndFlagsBits = v69;
      uint64_t v23 = v30;
      uint64_t result = 0;
      uint64_t v4 = 0;
      uint64_t v2 = 0;
      uint64_t v35 = 256;
      if (!v70) {
        uint64_t v35 = 0;
      }
      uint64_t v36 = v35 | (uint64_t)v80._object;
      uint64_t v37 = 0x10000;
      if (v71) {
        uint64_t v38 = 0x10000;
      }
      else {
        uint64_t v38 = 0;
      }
      uint64_t v39 = 0x1000000;
      if (!v72) {
        uint64_t v39 = 0;
      }
      unint64_t object = v36 | v38 | v39;
      uint64_t v40 = __rev16(a1[12]);
      if (!*((unsigned char *)a1 + v9[11])) {
        uint64_t v37 = 0;
      }
      unint64_t v25 = v40 & 0xFFFFFFFFFEFFFFFFLL | ((unint64_t)(v68 & 1) << 24) | v37;
      uint64_t v22 = v73;
      unint64_t v21 = v74;
      char v20 = 64;
LABEL_36:
      *(void *)a2 = v21;
      *(void *)(a2 + 8) = v22;
      *(void *)(a2 + 16) = v3;
      *(void *)(a2 + 24) = countAndFlagsBits;
      *(void *)(a2 + 32) = object;
      *(void *)(a2 + 40) = v23;
      *(void *)(a2 + 48) = v25;
      *(void *)(a2 + 56) = v6;
      *(void *)(a2 + 64) = v26;
      *(void *)(a2 + 72) = result;
      *(void *)(a2 + 80) = v4;
      *(void *)(a2 + 88) = v2;
      *(unsigned char *)(a2 + 96) = v20;
      return result;
    default:
      goto LABEL_36;
  }
}

void sub_100BBC880(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E639E8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (uint64_t)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Location();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for NotificationSettingsInput();
  sub_1000EB4E0(a1 + *(int *)(v11 + 36), v6);
  int v12 = _s7Weather24LocationCompositionStateOwet_0(v6, 1, v7);
  if (v12 == 1)
  {
    sub_10085EB44(v6);
    LOBYTE(v6) = 0;
    char v24 = 0;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v10, v6, v7);
    uint64_t v13 = *(void *)(a1 + 8);
    uint64_t v14 = *(void *)(v13 + 16);
    uint64_t v44 = v7;
    uint64_t v46 = v8;
    int v45 = v12;
    if (v14)
    {
      uint64_t v15 = v13 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
      uint64_t v16 = *(void *)(v8 + 72);
      swift_bridgeObjectRetain();
      uint64_t v17 = v14 - 1;
      while (1)
      {
        uint64_t v18 = v17;
        uint64_t v19 = Location.id.getter();
        uint64_t v21 = v20;
        if (v19 == Location.id.getter() && v21 == v22) {
          break;
        }
        char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v24 & 1) == 0)
        {
          uint64_t v17 = v18 - 1;
          v15 += v16;
          if (v18) {
            continue;
          }
        }
        goto LABEL_14;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v24 = 1;
LABEL_14:
      swift_bridgeObjectRelease();
      uint64_t v8 = v46;
      int v12 = v45;
    }
    else
    {
      char v24 = 0;
    }
    uint64_t v25 = *(void *)(a1 + 16);
    uint64_t v6 = *(void *)(v25 + 16);
    if (v6)
    {
      uint64_t v26 = v25 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
      uint64_t v27 = *(void *)(v8 + 72);
      uint64_t v43 = *(void *)(a1 + 16);
      swift_bridgeObjectRetain();
      uint64_t v28 = v6 - 1;
      while (1)
      {
        uint64_t v29 = v28;
        uint64_t v30 = Location.id.getter();
        uint64_t v32 = v31;
        if (v30 == Location.id.getter() && v32 == v33) {
          break;
        }
        LOBYTE(v6) = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v6 & 1) == 0)
        {
          uint64_t v28 = v29 - 1;
          v26 += v27;
          if (v29) {
            continue;
          }
        }
        goto LABEL_25;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      LOBYTE(v6) = 1;
LABEL_25:
      uint64_t v8 = v46;
      swift_bridgeObjectRelease();
      int v12 = v45;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v44);
  }
  BOOL v35 = v12 != 1;
  uint64_t v36 = static Location.currentLocationID.getter();
  uint64_t v38 = v37;
  id v39 = [self mainBundle];
  v47._unint64_t object = (void *)0x8000000100CC0920;
  v40._uint64_t countAndFlagsBits = 0x7461636F4C20794DLL;
  v40._unint64_t object = (void *)0xEB000000006E6F69;
  v41._uint64_t countAndFlagsBits = 0;
  v41._unint64_t object = (void *)0xE000000000000000;
  v47._uint64_t countAndFlagsBits = 0xD000000000000026;
  Swift::String v42 = NSLocalizedString(_:tableName:bundle:value:comment:)(v40, (Swift::String_optional)0, (NSBundle)v39, v41, v47);

  *(void *)a2 = v36;
  *(void *)(a2 + 8) = v38;
  *(Swift::String *)(a2 + 16) = v42;
  *(unsigned char *)(a2 + 32) = v24 & 1;
  *(unsigned char *)(a2 + 33) = v35;
  *(unsigned char *)(a2 + 34) = v6 & 1;
  *(unsigned char *)(a2 + 35) = v35;
}

uint64_t sub_100BBCC58@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  type metadata accessor for NotificationSettingsInput();
  uint64_t v49 = a1;
  Location.id.getter();
  sub_10013F4E8();
  char v5 = v4;
  swift_bridgeObjectRelease();
  Location.id.getter();
  sub_10013F4D0();
  char v7 = v6;
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 & 1) != 0 || (v7)
  {
    uint64_t v9 = Location.inlineName.getter();
    uint64_t v45 = v10;
    uint64_t result = Location.id.getter();
    uint64_t v43 = v11;
    uint64_t v44 = result;
    uint64_t v12 = *(void *)(a1 + 8);
    uint64_t v13 = *(void *)(v12 + 16);
    char v48 = v5;
    char v47 = v7;
    uint64_t v46 = v9;
    if (v13)
    {
      uint64_t v14 = *(void *)(type metadata accessor for Location() - 8);
      uint64_t v15 = v12 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
      uint64_t v16 = *(void *)(v14 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        uint64_t v17 = Location.id.getter();
        uint64_t v19 = v18;
        if (v17 == Location.id.getter() && v19 == v20)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          int v23 = 1;
          goto LABEL_16;
        }
        char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v22) {
          break;
        }
        v15 += v16;
        if (!--v13)
        {
          int v23 = 0;
          goto LABEL_16;
        }
      }
      int v23 = 1;
LABEL_16:
      uint64_t result = swift_bridgeObjectRelease();
      char v5 = v48;
    }
    else
    {
      int v23 = 0;
    }
    uint64_t v24 = *(void *)(v49 + 16);
    uint64_t v25 = *(void *)(v24 + 16);
    if (v25)
    {
      int v50 = v23;
      uint64_t v26 = *(void *)(type metadata accessor for Location() - 8);
      uint64_t v27 = v24 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
      uint64_t v28 = *(void *)(v26 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        uint64_t v29 = Location.id.getter();
        uint64_t v31 = v30;
        if (v29 == Location.id.getter() && v31 == v32)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          int v35 = 0x10000;
          goto LABEL_29;
        }
        char v34 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v34) {
          break;
        }
        v27 += v28;
        if (!--v25)
        {
          int v35 = 0;
          goto LABEL_29;
        }
      }
      int v35 = 0x10000;
LABEL_29:
      uint64_t result = swift_bridgeObjectRelease();
      char v5 = v48;
      char v36 = v47;
      uint64_t v38 = v45;
      uint64_t v37 = v46;
      uint64_t v40 = v43;
      uint64_t v39 = v44;
      int v23 = v50;
    }
    else
    {
      int v35 = 0;
      char v36 = v47;
      uint64_t v38 = v45;
      uint64_t v37 = v46;
      uint64_t v40 = v43;
      uint64_t v39 = v44;
    }
    if (v5) {
      int v41 = 256;
    }
    else {
      int v41 = 0;
    }
    if (v36) {
      int v42 = 0x1000000;
    }
    else {
      int v42 = 0;
    }
    *(void *)a2 = v39;
    *(void *)(a2 + 8) = v40;
    *(void *)(a2 + 16) = v37;
    *(void *)(a2 + 24) = v38;
    *(_DWORD *)(a2 + 32) = v42 | v41 | v23 | v35;
  }
  else
  {
    *(_DWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_100BBCFDC(uint64_t a1, uint64_t a2)
{
  uint64_t v18 = a2;
  uint64_t v3 = type metadata accessor for Location();
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  __chkstk_darwin(v3);
  char v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for NotificationSettingsInput();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  Location.id.getter();
  uint64_t v9 = (uint64_t)v5;
  uint64_t v10 = v19;
  sub_100864E28();
  char v12 = v11;
  swift_bridgeObjectRelease();
  sub_100BBD35C(v18, (uint64_t)v8);
  uint64_t v13 = v20;
  (*(void (**)(uint64_t, uint64_t))(v10 + 16))(v9, a1);
  if (v12)
  {
    Location.id.getter();
    uint64_t v18 = v9;
    sub_10013F4D0();
    char v15 = v14;
    uint64_t v9 = v18;
    swift_bridgeObjectRelease();
  }
  else
  {
    char v15 = 1;
  }
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v13);
  sub_100BBD3C0((uint64_t)v8);
  return v15 & 1;
}

uint64_t sub_100BBD1DC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2)
  {
    uint64_t v4 = (objc_class *)[self mainBundle];
    uint64_t v6 = 0x1000000000000043;
    unint64_t v10 = 0xD000000000000064;
    unint64_t v14 = 0x8000000100CC08B0;
    char v11 = "Notifications aren’t supported for the locations in your list. %@";
LABEL_6:
    unint64_t v5 = (unint64_t)(v11 - 32) | 0x8000000000000000;
    v7.super.Class isa = v4;
    uint64_t v8 = 0;
    unint64_t v9 = 0xE000000000000000;
    goto LABEL_7;
  }
  uint64_t v3 = *(void *)(*(void *)(a2 + *(int *)(type metadata accessor for NotificationSettingsInput() + 40)) + 16);
  uint64_t v4 = (objc_class *)[self mainBundle];
  if (v2 != v3)
  {
    uint64_t v6 = 0x1000000000000044;
    unint64_t v10 = 0xD000000000000065;
    unint64_t v14 = 0x8000000100CC0730;
    char v11 = "Notifications aren’t supported for some locations in your list. %@";
    goto LABEL_6;
  }
  unint64_t v14 = 0x8000000100CC07F0;
  unint64_t v5 = 0x8000000100CC07A0;
  uint64_t v6 = 0x1000000000000041;
  v7.super.Class isa = v4;
  uint64_t v8 = 0;
  unint64_t v9 = 0xE000000000000000;
  unint64_t v10 = 0xD000000000000061;
LABEL_7:
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v6, (Swift::String_optional)0, v7, *(Swift::String *)&v8, *(Swift::String *)&v10)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_100BBD35C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NotificationSettingsInput();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BBD3C0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NotificationSettingsInput();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100BBD41C@<X0>(uint64_t a1@<X8>)
{
  return sub_100BBCC58(*(void *)(v1 + 16), a1);
}

uint64_t sub_100BBD438(uint64_t a1)
{
  return sub_100BBCFDC(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_100BBD458@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = sub_10017DF08(&qword_100EB6CE8);
  a1[4] = sub_100BBD574();
  sub_100170694(a1);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_100BBD4E8()
{
  sub_100BBD5C8();

  return ShortDescribable.description.getter();
}

unint64_t sub_100BBD528()
{
  unint64_t result = qword_100EB6CE0;
  if (!qword_100EB6CE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6CE0);
  }
  return result;
}

unint64_t sub_100BBD574()
{
  unint64_t result = qword_100EB6CF0;
  if (!qword_100EB6CF0)
  {
    sub_10018C6DC(&qword_100EB6CE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6CF0);
  }
  return result;
}

unint64_t sub_100BBD5C8()
{
  unint64_t result = qword_100EB6CF8;
  if (!qword_100EB6CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6CF8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NextHourPrecipitationDetailViewAction(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100BBD6B0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for NextHourPrecipitationDetailViewAction()
{
  return &type metadata for NextHourPrecipitationDetailViewAction;
}

unint64_t sub_100BBD6EC()
{
  unint64_t result = qword_100EB6D00;
  if (!qword_100EB6D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6D00);
  }
  return result;
}

uint64_t sub_100BBD738@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EB6DB0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v21)
  {
    sub_1001B1E64(a1, a1[3]);
    sub_10017DF08(&qword_100E64CA8);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (result)
    {
      uint64_t v5 = result;
      uint64_t v6 = sub_1000DF0C4((uint64_t)v20, v21);
      __chkstk_darwin(v6);
      uint64_t v8 = (void *)((char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v9 + 16))(v8);
      uint64_t v10 = *v8;
      uint64_t v11 = type metadata accessor for NotificationSettingsInteractor();
      void v19[3] = v11;
      v19[4] = &off_100E1CED0;
      v19[0] = v10;
      uint64_t v12 = type metadata accessor for NotificationSettingsModule();
      uint64_t v13 = (void *)swift_allocObject();
      uint64_t v14 = sub_1000DF0C4((uint64_t)v19, v11);
      __chkstk_darwin(v14);
      uint64_t v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v17 + 16))(v16);
      uint64_t v18 = *v16;
      void v13[5] = v11;
      v13[6] = &off_100E1CED0;
      v13[2] = v18;
      v13[7] = v5;
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v19);
      uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v20);
      a2[3] = v12;
      a2[4] = &off_100E12B60;
      *a2 = v13;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100BBD9A4()
{
  sub_10017DF08(&qword_100EB6DA0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100EB6DA8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100EB6DB0);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100EB6DB8);
  RegistrationContainer.register<A>(_:name:factory:)();
  swift_release();
  sub_10017DF08(&qword_100E64CA8);
  RegistrationContainer.register<A>(_:name:factory:)();

  return swift_release();
}

uint64_t sub_100BBDAE8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for Tracker();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    a2[3] = (uint64_t)&type metadata for NotificationSettingsTracker;
    a2[4] = (uint64_t)&off_100E17890;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100BBDB58@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000107D4((uint64_t (*)(void))type metadata accessor for PrivacySplashPresenter, (uint64_t)&off_100E2CD30, a1);
}

uint64_t sub_100BBDB78@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v31)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v19 = v31;
  uint64_t v5 = v34;
  uint64_t v20 = v32;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E647D8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v6 = v29;
  if (!v29)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v7 = v30;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B60);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v28)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E96470);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v26)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v18 = v33;
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for WeatherDataUpdater();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v8 = result;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EB6DA0);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v24)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EB6DA8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v22)
  {
    uint64_t v9 = sub_1000DF0C4((uint64_t)v23, v24);
    __chkstk_darwin(v9);
    uint64_t v11 = (uint64_t *)((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v12 + 16))(v11);
    uint64_t v13 = sub_1000DF0C4((uint64_t)v21, v22);
    __chkstk_darwin(v13);
    uint64_t v15 = (uint64_t **)((char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t **))(v16 + 16))(v15);
    uint64_t v17 = sub_100BBE560(v19, v20, v18, v5, v6, v7, &v27, &v25, v8, *v11, *v15);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v21);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v23);
    uint64_t result = type metadata accessor for NotificationSettingsInteractor();
    a2[3] = result;
    a2[4] = &off_100E1CED0;
    *a2 = v17;
    return result;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_100BBDF5C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000107D4((uint64_t (*)(void))type metadata accessor for NotificationSettingsInputFactory, (uint64_t)&off_100E12120, a1);
}

uint64_t sub_100BBDF7C(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E64798);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v3 = v20;
  if (!v20)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = v22;
  uint64_t v4 = v23;
  uint64_t v6 = v21;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100EB6DB8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v19)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v7 = *sub_1001B1E64(v18, v19);
  uint64_t v16 = type metadata accessor for NotificationSettingsInputFactory();
  uint64_t v17 = &off_100E12120;
  v15[0] = v7;
  sub_10020D948((uint64_t)v15, (uint64_t)v14);
  uint64_t v8 = swift_allocObject();
  sub_1001262E4(v14, v8 + 16);
  swift_retain();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v15);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v18);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_100BBE3D8;
  *(void *)(v9 + 24) = v8;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E90C70);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v19)
  {
    uint64_t v10 = *sub_1001B1E64(v18, v19);
    uint64_t v16 = type metadata accessor for NotificationSettingsViewModelFactory();
    uint64_t v17 = &off_100E3AD68;
    v15[0] = v10;
    sub_10020D948((uint64_t)v15, (uint64_t)v14);
    uint64_t v11 = swift_allocObject();
    sub_1001262E4(v14, v11 + 16);
    swift_retain();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v15);
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v18);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = sub_100BBE3E0;
    *(void *)(v12 + 24) = v11;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = sub_100BBE3E8;
    *(void *)(v13 + 24) = v12;
    sub_10017DF08(&qword_100E64CA8);
    swift_allocObject();
    return sub_10025B908(v3, v6, v5, v4, sub_10025969C, 0, sub_100137F50, v9, sub_100BBE428, v13);
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_100BBE258@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_10035EB78(a1, a3);
}

uint64_t sub_100BBE2A4@<X0>(unsigned __int16 *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  sub_1001B1E64(a2, a2[3]);
  sub_100BBC220(a1, (uint64_t)v6);
  return sub_1002764FC((uint64_t)v6, a3);
}

double sub_100BBE304@<D0>(void (*a1)(_OWORD *__return_ptr)@<X1>, uint64_t a2@<X8>)
{
  a1(v10);
  char v3 = v11;
  double result = *(double *)v10;
  long long v5 = v10[1];
  long long v6 = v10[2];
  long long v7 = v10[3];
  long long v8 = v10[4];
  long long v9 = v10[5];
  *(_OWORD *)a2 = v10[0];
  *(_OWORD *)(a2 + 16) = v5;
  *(_OWORD *)(a2 + 32) = v6;
  *(_OWORD *)(a2 + 48) = v7;
  *(_OWORD *)(a2 + 64) = v8;
  *(_OWORD *)(a2 + 80) = v9;
  *(unsigned char *)(a2 + 96) = v3;
  return result;
}

uint64_t sub_100BBE35C@<X0>(void (*a1)(void *__return_ptr)@<X1>, uint64_t a2@<X8>)
{
  a1(v4);
  return sub_100BBE430((uint64_t)v4, a2);
}

uint64_t sub_100BBE3A0()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_100BBE3D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100BBE258(a1, (void *)(v2 + 16), a2);
}

uint64_t sub_100BBE3E0@<X0>(unsigned __int16 *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100BBE2A4(a1, (void *)(v2 + 16), a2);
}

double sub_100BBE3E8@<D0>(uint64_t a1@<X8>)
{
  return sub_100BBE304(*(void (**)(_OWORD *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_100BBE3F0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100BBE428@<X0>(uint64_t a1@<X8>)
{
  return sub_100BBE35C(*(void (**)(void *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_100BBE430(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100EB6DC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_100BBE498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, long long *a7, long long *a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  a12[22] = &type metadata for NotificationSettingsTracker;
  a12[23] = &off_100E17890;
  a12[19] = a10;
  a12[27] = type metadata accessor for PrivacySplashPresenter();
  a12[28] = &off_100E2CD30;
  a12[24] = a11;
  a12[2] = a1;
  a12[3] = a2;
  a12[4] = a3;
  a12[5] = a4;
  a12[6] = a5;
  a12[7] = a6;
  sub_1001262E4(a7, (uint64_t)(a12 + 8));
  sub_1001262E4(a8, (uint64_t)(a12 + 13));
  a12[18] = a9;
  return a12;
}

void *sub_100BBE560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, long long *a7, long long *a8, uint64_t a9, uint64_t a10, uint64_t *a11)
{
  uint64_t v30 = a7;
  uint64_t v31 = a8;
  uint64_t v29 = a6;
  uint64_t v16 = *a11;
  v33[3] = &type metadata for NotificationSettingsTracker;
  v33[4] = &off_100E17890;
  v33[0] = a10;
  v32[3] = v16;
  v32[4] = &off_100E2CD30;
  v32[0] = a11;
  type metadata accessor for NotificationSettingsInteractor();
  uint64_t v17 = (void *)swift_allocObject();
  uint64_t v18 = sub_1000DF0C4((uint64_t)v33, (uint64_t)&type metadata for NotificationSettingsTracker);
  __chkstk_darwin(v18);
  uint64_t v20 = (uint64_t *)((char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v21 + 16))(v20);
  uint64_t v22 = sub_1000DF0C4((uint64_t)v32, v16);
  __chkstk_darwin(v22);
  uint64_t v24 = (uint64_t *)((char *)&v28 - v23);
  (*(void (**)(char *))(v25 + 16))((char *)&v28 - v23);
  uint64_t v26 = sub_100BBE498(a1, a2, a3, a4, a5, v29, v30, v31, a9, *v20, *v24, v17);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v32);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v33);
  return v26;
}

uint64_t *sub_100BBE7B0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v7 = type metadata accessor for News();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_100BBE8B0(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_100BBFD04((uint64_t)a1, (void (*)(void))type metadata accessor for NewsDataModel);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v4 = type metadata accessor for News();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_100BBE984(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = type metadata accessor for News();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_100BBEA38(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100BBFD04((uint64_t)a1, (void (*)(void))type metadata accessor for NewsDataModel);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for News();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_100BBEB10(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for ArticlePlacementLocation();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for ArticlePlacement();
  uint64_t v9 = *(void *)(v37 - 8);
  uint64_t v10 = __chkstk_darwin(v37);
  uint64_t v29 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v10);
  char v36 = (char *)&v24 - v13;
  uint64_t v14 = _swiftEmptyArrayStorage;
  uint64_t v38 = _swiftEmptyArrayStorage;
  uint64_t v33 = *(void *)(a1 + 16);
  if (v33)
  {
    uint64_t v24 = v2;
    uint64_t v25 = v9;
    unint64_t v15 = 0;
    uint64_t v31 = (void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v32 = v9 + 16;
    uint64_t v27 = a1;
    uint64_t v28 = (void (**)(char *, char *, uint64_t))(v9 + 32);
    uint64_t v30 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
    uint64_t v26 = v6;
    while (v15 < *(void *)(a1 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
      uint64_t v34 = *(void *)(v9 + 72);
      unint64_t v35 = v16;
      (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v36, a1 + v16 + v34 * v15, v37);
      ArticlePlacement.location.getter();
      uint64_t v17 = *(void *)(a2 + 16);
      if (v17)
      {
        uint64_t v18 = a2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
        uint64_t v19 = a2;
        uint64_t v20 = *(void *)(v6 + 72);
        sub_100BBFF30(&qword_100EB6E78, (void (*)(uint64_t))&type metadata accessor for ArticlePlacementLocation);
        swift_bridgeObjectRetain();
        while ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
        {
          v18 += v20;
          if (!--v17)
          {
            a2 = v19;
            swift_bridgeObjectRelease();
            uint64_t v6 = v26;
            a1 = v27;
            uint64_t v9 = v25;
            goto LABEL_9;
          }
        }
        a2 = v19;
        swift_bridgeObjectRelease();
        (*v31)(v8, v5);
        uint64_t v21 = *v28;
        (*v28)(v29, v36, v37);
        uint64_t v22 = v38;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1007F31B0();
          uint64_t v22 = v38;
        }
        uint64_t v6 = v26;
        unint64_t v23 = v22[2];
        if (v23 >= v22[3] >> 1)
        {
          sub_1007F31B0();
          uint64_t v22 = v38;
        }
        v22[2] = v23 + 1;
        uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v21)((char *)v22 + v35 + v23 * v34, v29, v37);
        uint64_t v38 = v22;
        a1 = v27;
        uint64_t v9 = v25;
      }
      else
      {
LABEL_9:
        (*v31)(v8, v5);
        uint64_t result = (*v30)(v36, v37);
      }
      if (++v15 == v33)
      {
        uint64_t v14 = v38;
        goto LABEL_17;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_17:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (uint64_t)v14;
  }
  return result;
}

uint64_t sub_100BBEEE4(uint64_t a1, uint64_t a2)
{
  uint64_t v30 = type metadata accessor for News();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  type metadata accessor for NewsDataModel();
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_10016278C();
  uint64_t v13 = v11 - v12;
  __chkstk_darwin(v14);
  unint64_t v16 = (char *)&v29 - v15;
  uint64_t v17 = sub_10017DF08(&qword_100EB6E70);
  __chkstk_darwin(v17 - 8);
  sub_1001626E0();
  uint64_t v20 = v19 - v18;
  uint64_t v22 = v19 - v18 + *(int *)(v21 + 56);
  sub_1001E936C(a1, v19 - v18, (void (*)(void))type metadata accessor for NewsDataModel);
  sub_1001E936C(a2, v22, (void (*)(void))type metadata accessor for NewsDataModel);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1001E936C(v20, v13, (void (*)(void))type metadata accessor for NewsDataModel);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_100BDDAC0();
      char v24 = v23;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_9:
      sub_100BBFD04(v20, (void (*)(void))type metadata accessor for NewsDataModel);
      return v24 & 1;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1001E936C(v20, (uint64_t)v16, (void (*)(void))type metadata accessor for NewsDataModel);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v26 = v30;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v9, v22, v30);
      char v24 = static News.== infix(_:_:)();
      uint64_t v27 = *(void (**)(void))(v5 + 8);
      sub_100163348();
      v27();
      ((void (*)(char *, uint64_t))v27)(v16, v26);
      goto LABEL_9;
    }
    sub_100163348();
    v25();
  }
  sub_100BBFCA4(v20);
  char v24 = 0;
  return v24 & 1;
}

uint64_t sub_100BBF1A4(void *a1)
{
  sub_10017DF08(&qword_100EB6ED0);
  sub_100179C0C();
  __chkstk_darwin(v4);
  sub_100109314();
  sub_10017DF08(&qword_100EB6ED8);
  sub_100179C0C();
  __chkstk_darwin(v5);
  sub_1001626E0();
  type metadata accessor for News();
  sub_100179C0C();
  uint64_t v17 = v7;
  uint64_t v18 = v6;
  __chkstk_darwin(v6);
  sub_10017FDD0();
  type metadata accessor for NewsDataModel();
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_100125FF8();
  sub_10017DF08(&qword_100EB6EE0);
  sub_100179C0C();
  __chkstk_darwin(v9);
  sub_1001626E0();
  sub_1001B1E64(a1, a1[3]);
  sub_100BBFD58();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_1001E936C(v19, v2, (void (*)(void))type metadata accessor for NewsDataModel);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100BBFDA4();
    sub_1001A36C0();
    sub_10017DF08(&qword_100EB6EA8);
    sub_100BBFE9C(&qword_100EB6EE8, &qword_100EB6EF0);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_100162F0C();
    v10();
    uint64_t v11 = sub_100185850();
    v12(v11);
    return swift_bridgeObjectRelease();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v1, v2, v18);
    sub_100BBFE50();
    sub_1001A36C0();
    sub_100BBFF30(&qword_100EB6EF8, (void (*)(uint64_t))&type metadata accessor for News);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    sub_100162F0C();
    v14();
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v1, v18);
    uint64_t v15 = sub_100185850();
    return v16(v15);
  }
}

uint64_t sub_100BBF55C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v52 = a2;
  sub_10017DF08(&qword_100EB6E80);
  sub_100179C0C();
  uint64_t v55 = v3;
  uint64_t v56 = v4;
  __chkstk_darwin(v3);
  sub_100109314();
  uint64_t v57 = v5;
  sub_10017DF08(&qword_100EB6E88);
  sub_100179C0C();
  uint64_t v53 = v7;
  uint64_t v54 = v6;
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v59 = v8;
  uint64_t v60 = sub_10017DF08(&qword_100EB6E90);
  sub_100179C0C();
  uint64_t v58 = v9;
  __chkstk_darwin(v10);
  sub_100125FF8();
  uint64_t v11 = type metadata accessor for NewsDataModel();
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_10016278C();
  uint64_t v15 = (void *)(v13 - v14);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v47 - v17;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v47 - v20;
  sub_1001B1E64(a1, a1[3]);
  sub_100BBFD58();
  uint64_t v22 = v61;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v22) {
    goto LABEL_8;
  }
  uint64_t v49 = v21;
  int v50 = v18;
  char v48 = v15;
  uint64_t v51 = v11;
  uint64_t v61 = a1;
  uint64_t v23 = KeyedDecodingContainer.allKeys.getter();
  uint64_t v24 = *(void *)(v23 + 16);
  if (!v24
    || (char v25 = *(unsigned char *)(v23 + 32),
        sub_100723214(1, v24, v23, v23 + 32, 0, (2 * v24) | 1),
        uint64_t v27 = v26,
        unint64_t v29 = v28,
        swift_bridgeObjectRelease(),
        v27 != v29 >> 1))
  {
    uint64_t v30 = v51;
    uint64_t v31 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v33 = v32;
    sub_10017DF08(&qword_100E67280);
    *uint64_t v33 = v30;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v31 - 8) + 104))(v33, enum case for DecodingError.typeMismatch(_:), v31);
    swift_willThrow();
    swift_unknownObjectRelease();
    sub_100163348();
    v34();
    a1 = v61;
LABEL_8:
    uint64_t v35 = (uint64_t)a1;
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v35);
  }
  if (v25)
  {
    char v64 = 1;
    sub_100BBFDA4();
    sub_10018432C();
    sub_10017DF08(&qword_100EB6EA8);
    sub_100BBFE9C(&qword_100EB6EB0, &qword_100EB6EB8);
    sub_100186010();
    uint64_t v38 = sub_1001A1414();
    v39(v38);
    swift_unknownObjectRelease();
    sub_100163348();
    v40();
    int v41 = v48;
    *char v48 = v62;
    swift_storeEnumTagMultiPayload();
    uint64_t v42 = (uint64_t)v41;
  }
  else
  {
    char v63 = 0;
    sub_100BBFE50();
    sub_10018432C();
    type metadata accessor for News();
    sub_100BBFF30(&qword_100EB6EC8, (void (*)(uint64_t))&type metadata accessor for News);
    uint64_t v37 = (uint64_t)v50;
    sub_100186010();
    uint64_t v43 = sub_1001A1414();
    v44(v43);
    swift_unknownObjectRelease();
    sub_100163348();
    v45();
    swift_storeEnumTagMultiPayload();
    uint64_t v42 = v37;
  }
  uint64_t v46 = (uint64_t)v49;
  sub_100BBFDF0(v42, (uint64_t)v49, (void (*)(void))type metadata accessor for NewsDataModel);
  sub_100BBFDF0(v46, v52, (void (*)(void))type metadata accessor for NewsDataModel);
  uint64_t v35 = (uint64_t)v61;
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v35);
}

uint64_t sub_100BBFB08(uint64_t a1)
{
  unint64_t v2 = sub_100BBFD58();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BBFB44(uint64_t a1)
{
  unint64_t v2 = sub_100BBFD58();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100BBFB80(uint64_t a1)
{
  unint64_t v2 = sub_100BBFDA4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BBFBBC(uint64_t a1)
{
  unint64_t v2 = sub_100BBFDA4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100BBFBF8(uint64_t a1)
{
  unint64_t v2 = sub_100BBFE50();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BBFC34(uint64_t a1)
{
  unint64_t v2 = sub_100BBFE50();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100BBFC74@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100BBF55C(a1, a2);
}

uint64_t sub_100BBFC8C(void *a1)
{
  return sub_100BBF1A4(a1);
}

uint64_t sub_100BBFCA4(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100EB6E70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100BBFD04(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

unint64_t sub_100BBFD58()
{
  unint64_t result = qword_100EB6E98;
  if (!qword_100EB6E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6E98);
  }
  return result;
}

unint64_t sub_100BBFDA4()
{
  unint64_t result = qword_100EB6EA0;
  if (!qword_100EB6EA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6EA0);
  }
  return result;
}

uint64_t sub_100BBFDF0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

unint64_t sub_100BBFE50()
{
  unint64_t result = qword_100EB6EC0;
  if (!qword_100EB6EC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6EC0);
  }
  return result;
}

uint64_t sub_100BBFE9C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(&qword_100EB6EA8);
    sub_100BBFF30(a2, (void (*)(uint64_t))type metadata accessor for NewsArticlePlacement);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100BBFF30(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NewsDataModel.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100BC0044);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NewsDataModel.CodingKeys()
{
  return &type metadata for NewsDataModel.CodingKeys;
}

ValueMetadata *type metadata accessor for NewsDataModel.LoadingCodingKeys()
{
  return &type metadata for NewsDataModel.LoadingCodingKeys;
}

unsigned char *_s7Weather13NewsDataModelO17LoadingCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100BC012CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for NewsDataModel.LoadedCodingKeys()
{
  return &type metadata for NewsDataModel.LoadedCodingKeys;
}

unint64_t sub_100BC0168()
{
  unint64_t result = qword_100EB6F00;
  if (!qword_100EB6F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6F00);
  }
  return result;
}

unint64_t sub_100BC01B8()
{
  unint64_t result = qword_100EB6F08;
  if (!qword_100EB6F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6F08);
  }
  return result;
}

unint64_t sub_100BC0208()
{
  unint64_t result = qword_100EB6F10;
  if (!qword_100EB6F10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6F10);
  }
  return result;
}

unint64_t sub_100BC0258()
{
  unint64_t result = qword_100EB6F18;
  if (!qword_100EB6F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6F18);
  }
  return result;
}

unint64_t sub_100BC02A8()
{
  unint64_t result = qword_100EB6F20;
  if (!qword_100EB6F20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6F20);
  }
  return result;
}

unint64_t sub_100BC02F8()
{
  unint64_t result = qword_100EB6F28;
  if (!qword_100EB6F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6F28);
  }
  return result;
}

unint64_t sub_100BC0348()
{
  unint64_t result = qword_100EB6F30;
  if (!qword_100EB6F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6F30);
  }
  return result;
}

unint64_t sub_100BC0398()
{
  unint64_t result = qword_100EB6F38;
  if (!qword_100EB6F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6F38);
  }
  return result;
}

unint64_t sub_100BC03E8()
{
  unint64_t result = qword_100EB6F40;
  if (!qword_100EB6F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB6F40);
  }
  return result;
}

uint64_t *sub_100BC0434(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100EAA560) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v5))
      {
        uint64_t v6 = sub_10017DF08(&qword_100E65ED8);
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v5);
      }
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100BC059C(uint64_t a1)
{
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for UserInterfaceSizeClass();
    uint64_t result = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
    if (!result)
    {
      int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
      return v4(a1, v2);
    }
  }
  else
  {
    return swift_release();
  }
  return result;
}

void *sub_100BC0664(void *a1, void *a2)
{
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v4))
    {
      uint64_t v5 = sub_10017DF08(&qword_100E65ED8);
      memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v4);
    }
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_100BC077C(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1001781AC((uint64_t)a1, (uint64_t *)&unk_100EAA560);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v4))
      {
        uint64_t v5 = sub_10017DF08(&qword_100E65ED8);
        memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v4);
      }
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_100BC08AC(void *a1, const void *a2)
{
  uint64_t v4 = sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v5))
    {
      uint64_t v6 = sub_10017DF08(&qword_100E65ED8);
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v5);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
  }
  return a1;
}

void *sub_100BC09CC(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_1001781AC((uint64_t)a1, (uint64_t *)&unk_100EAA560);
    uint64_t v4 = sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v5 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v5))
      {
        uint64_t v6 = sub_10017DF08(&qword_100E65ED8);
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v5);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_100BC0B04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BC0B18);
}

uint64_t sub_100BC0B18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08((uint64_t *)&unk_100EAA540);

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_100BC0B64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BC0B78);
}

uint64_t sub_100BC0B78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08((uint64_t *)&unk_100EAA540);

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SearchResultButtonStyle()
{
  uint64_t result = qword_100EB6FA0;
  if (!qword_100EB6FA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100BC0C10()
{
  sub_1002308A0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100BC0C9C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100BC0CB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v83 = a2;
  uint64_t v7 = type metadata accessor for UserInterfaceSizeClass();
  sub_100179C0C();
  uint64_t v69 = v8;
  __chkstk_darwin(v9);
  sub_100109314();
  sub_100109338(v10);
  uint64_t v11 = sub_10017DF08(&qword_100E662F0);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = sub_10017DF08(&qword_100E65ED8);
  __chkstk_darwin(v16 - 8);
  uint64_t v68 = (uint64_t)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v67 - v19;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v67 - v22;
  uint64_t v24 = type metadata accessor for ButtonStyleConfiguration.Label();
  sub_100179C0C();
  uint64_t v26 = v25;
  __chkstk_darwin(v27);
  sub_1001626E0();
  uint64_t v30 = v29 - v28;
  uint64_t v31 = sub_10017DF08(&qword_100EB6FD8);
  __chkstk_darwin(v31 - 8);
  sub_1001626E0();
  uint64_t v34 = v33 - v32;
  uint64_t v72 = sub_10017DF08(&qword_100EB6FE0);
  sub_100162E4C();
  __chkstk_darwin(v35);
  sub_100109314();
  sub_100109338(v36);
  uint64_t v73 = sub_10017DF08(&qword_100EB6FE8);
  sub_100162E4C();
  __chkstk_darwin(v37);
  sub_100109314();
  sub_100109338(v38);
  uint64_t v75 = sub_10017DF08(&qword_100EB6FF0);
  sub_100162E4C();
  __chkstk_darwin(v39);
  sub_100109314();
  sub_100109338(v40);
  uint64_t v76 = sub_10017DF08(&qword_100EB6FF8);
  sub_100162E4C();
  __chkstk_darwin(v41);
  sub_100109314();
  uint64_t v81 = v42;
  uint64_t v80 = sub_10017DF08(&qword_100EB7000);
  sub_100162E4C();
  __chkstk_darwin(v43);
  sub_100109314();
  sub_100109338(v44);
  uint64_t v82 = a1;
  ButtonStyleConfiguration.label.getter();
  static Alignment.leading.getter();
  uint64_t v74 = v34;
  sub_10017EF24();
  sub_100BD8648();
  uint64_t v45 = v30;
  uint64_t v46 = v69;
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v45, v24);
  char v47 = static Edge.Set.horizontal.getter();
  sub_10019B2FC();
  (*(void (**)(char *, void, uint64_t))(v46 + 104))(v20, enum case for UserInterfaceSizeClass.compact(_:), v7);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v7);
  uint64_t v48 = v15 + *(int *)(v12 + 56);
  sub_1001262FC((uint64_t)v23, v15, &qword_100E65ED8);
  sub_1001262FC((uint64_t)v20, v48, &qword_100E65ED8);
  sub_100181520(v15);
  if (v50)
  {
    sub_1001781AC((uint64_t)v20, &qword_100E65ED8);
    sub_1001781AC((uint64_t)v23, &qword_100E65ED8);
    sub_100181520(v48);
    uint64_t v49 = v81;
    if (v50)
    {
      sub_1001781AC(v15, &qword_100E65ED8);
      goto LABEL_10;
    }
  }
  else
  {
    sub_1001262FC(v15, v68, &qword_100E65ED8);
    sub_100181520(v48);
    if (!v50)
    {
      uint64_t v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 32);
      int v70 = v23;
      v52(v67, v48, v7);
      sub_1000D8C50(&qword_100E65F28, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
      dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v53 = *(void (**)(void))(v46 + 8);
      sub_10011C034();
      v53();
      sub_1001781AC((uint64_t)v20, &qword_100E65ED8);
      sub_1001781AC((uint64_t)v70, &qword_100E65ED8);
      sub_10011C034();
      v53();
      sub_1001781AC(v15, &qword_100E65ED8);
      uint64_t v49 = v81;
      goto LABEL_10;
    }
    sub_1001781AC((uint64_t)v20, &qword_100E65ED8);
    sub_1001781AC((uint64_t)v23, &qword_100E65ED8);
    sub_10011C034();
    v51();
    uint64_t v49 = v81;
  }
  sub_1001781AC(v15, &qword_100E662F0);
LABEL_10:
  EdgeInsets.init(_all:)();
  sub_1001812B4();
  uint64_t v54 = v74;
  uint64_t v55 = v71;
  sub_1001262FC(v74, v71, &qword_100EB6FD8);
  uint64_t v56 = v55 + *(int *)(v72 + 36);
  *(unsigned char *)uint64_t v56 = v47;
  *(void *)(v56 + 8) = v2;
  *(void *)(v56 + 16) = v3;
  *(void *)(v56 + 24) = v4;
  *(void *)(v56 + 32) = v5;
  *(unsigned char *)(v56 + 40) = 0;
  sub_1001781AC(v54, &qword_100EB6FD8);
  char v57 = static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  sub_1001812B4();
  uint64_t v58 = v78;
  sub_1001262FC(v55, v78, &qword_100EB6FE0);
  uint64_t v59 = v58 + *(int *)(v73 + 36);
  *(unsigned char *)uint64_t v59 = v57;
  *(void *)(v59 + 8) = v2;
  *(void *)(v59 + 16) = v3;
  *(void *)(v59 + 24) = v4;
  *(void *)(v59 + 32) = v5;
  *(unsigned char *)(v59 + 40) = 0;
  sub_1001781AC(v55, &qword_100EB6FE0);
  static Alignment.center.getter();
  sub_10017EF24();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v60 = v77;
  sub_1001262FC(v58, v77, &qword_100EB6FE8);
  memcpy((void *)(v60 + *(int *)(v75 + 36)), __src, 0x70uLL);
  sub_1001781AC(v58, &qword_100EB6FE8);
  sub_1001262FC(v60, v49, &qword_100EB6FF0);
  *(unsigned char *)(v49 + *(int *)(v76 + 36)) = 0;
  sub_1001781AC(v60, &qword_100EB6FF0);
  if (ButtonStyleConfiguration.isPressed.getter())
  {
    sub_1001B71C4();
    static UIColor.cellSelectionTintColor.getter();
    uint64_t v61 = Color.init(_:)();
  }
  else
  {
    uint64_t v61 = static Color.clear.getter();
  }
  uint64_t v62 = v61;
  char v63 = static Edge.Set.all.getter();
  uint64_t v64 = v79;
  sub_1001262FC(v49, v79, &qword_100EB6FF8);
  uint64_t v65 = v64 + *(int *)(v80 + 36);
  *(void *)uint64_t v65 = v62;
  *(unsigned char *)(v65 + 8) = v63;
  sub_1001781AC(v49, &qword_100EB6FF8);
  return sub_100BC14C0(v64, v83);
}

uint64_t sub_100BC14C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100EB7000);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100BC152C()
{
  unint64_t result = qword_100EB7008;
  if (!qword_100EB7008)
  {
    sub_10018C6DC(&qword_100EB7000);
    sub_100BC15CC();
    sub_1001246C8(&qword_100E825E0, &qword_100E825E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB7008);
  }
  return result;
}

unint64_t sub_100BC15CC()
{
  unint64_t result = qword_100EB7010;
  if (!qword_100EB7010)
  {
    sub_10018C6DC(&qword_100EB6FF8);
    sub_100BC16C8(&qword_100EB7018, &qword_100EB6FF0, (void (*)(void))sub_100BC1698);
    sub_1001246C8(&qword_100E80338, &qword_100E80340);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB7010);
  }
  return result;
}

uint64_t sub_100BC1698()
{
  return sub_100BC16C8(&qword_100EB7020, &qword_100EB6FE8, (void (*)(void))sub_100BC1744);
}

uint64_t sub_100BC16C8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100BC1744()
{
  return sub_100BC16C8(&qword_100EB7028, &qword_100EB6FE0, (void (*)(void))sub_100BC1774);
}

unint64_t sub_100BC1774()
{
  unint64_t result = qword_100EB7030;
  if (!qword_100EB7030)
  {
    sub_10018C6DC(&qword_100EB6FD8);
    sub_1000D8C50(&qword_100E80328, (void (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB7030);
  }
  return result;
}

void *sub_100BC1898(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_100176980((uint64_t)a1, (void (*)(void))type metadata accessor for WeatherDataAction);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        unint64_t v4 = a2[3];
        swift_bridgeObjectRetain();
        if (v4 >= 0xE)
        {
          a1[2] = a2[2];
          a1[3] = a2[3];
          swift_bridgeObjectRetain();
        }
        else
        {
          *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        }
        a1[4] = a2[4];
        a1[5] = a2[5];
        goto LABEL_16;
      case 3u:
      case 9u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        swift_bridgeObjectRetain();
        goto LABEL_16;
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        uint64_t v5 = sub_10017DF08(&qword_100E6BBC0);
        uint64_t v6 = *(int *)(v5 + 48);
        uint64_t v7 = (void *)((char *)a1 + v6);
        uint64_t v8 = (char *)a2 + v6;
        *uint64_t v7 = *(void *)((char *)a2 + v6);
        v7[1] = *(void *)((char *)a2 + v6 + 8);
        uint64_t v9 = (int *)type metadata accessor for WeatherData(0);
        uint64_t v10 = v9[5];
        uint64_t v11 = (char *)v7 + v10;
        uint64_t v12 = &v8[v10];
        uint64_t v13 = type metadata accessor for Locale();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13))
        {
          uint64_t v14 = sub_10017DF08(&qword_100E63730);
          memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
        }
        uint64_t v24 = v9[6];
        uint64_t v25 = (char *)v7 + v24;
        uint64_t v26 = &v8[v24];
        uint64_t v27 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
        uint64_t v28 = v9[7];
        uint64_t v29 = (char *)v7 + v28;
        uint64_t v30 = &v8[v28];
        uint64_t v31 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31))
        {
          uint64_t v32 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
        }
        else
        {
          uint64_t v33 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v29, v30, v33);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
        }
        uint64_t v34 = v9[8];
        uint64_t v35 = (void *)((char *)v7 + v34);
        uint64_t v36 = &v8[v34];
        uint64_t v37 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v39 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(void *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v35, v36, v39);
          goto LABEL_26;
        }
        if (!EnumCaseMultiPayload)
        {
          *uint64_t v35 = *(void *)v36;
          v35[1] = *((void *)v36 + 1);
          swift_bridgeObjectRetain();
LABEL_26:
          swift_storeEnumTagMultiPayload();
          goto LABEL_28;
        }
        memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
LABEL_28:
        uint64_t v40 = v9[9];
        uint64_t v41 = (char *)v7 + v40;
        uint64_t v42 = &v8[v40];
        uint64_t v43 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43))
        {
          uint64_t v44 = sub_10017DF08(&qword_100E63740);
          memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
        }
        else
        {
          uint64_t v45 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v45))
          {
            uint64_t v46 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v41, v42, *(void *)(*(void *)(v46 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v41, v42, v45);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v45);
          }
          uint64_t v47 = *(int *)(v43 + 20);
          uint64_t v48 = &v41[v47];
          uint64_t v49 = &v42[v47];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v42[v47], 1, v45))
          {
            uint64_t v50 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v48, v49, v45);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v45);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v43);
        }
        uint64_t v160 = v5;
        uint64_t v51 = *(int *)(v5 + 64);
        uint64_t v52 = (char *)a1 + v51;
        uint64_t v53 = (char *)a2 + v51;
        uint64_t v54 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
        uint64_t v55 = type metadata accessor for PreprocessedWeatherData();
        *(void *)&v52[*(int *)(v55 + 20)] = *(void *)&v53[*(int *)(v55 + 20)];
        uint64_t v161 = (int *)v55;
        uint64_t v162 = v53;
        uint64_t v56 = *(int *)(v55 + 24);
        uint64_t v163 = v52;
        char v57 = &v52[v56];
        uint64_t v58 = &v53[v56];
        *(void *)char v57 = *(void *)&v53[v56];
        *((void *)v57 + 1) = *(void *)&v53[v56 + 8];
        *((void *)v57 + 2) = *(void *)&v53[v56 + 16];
        *((void *)v57 + 3) = *(void *)&v53[v56 + 24];
        *((void *)v57 + 4) = *(void *)&v53[v56 + 32];
        *((void *)v57 + 5) = *(void *)&v53[v56 + 40];
        uint64_t v59 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
        uint64_t v60 = *(int *)(v59 + 28);
        __dst = &v57[v60];
        uint64_t v159 = v59;
        uint64_t v61 = &v58[v60];
        uint64_t v62 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v62))
        {
          uint64_t v63 = sub_10017DF08(&qword_100E63750);
          memcpy(__dst, v61, *(void *)(*(void *)(v63 - 8) + 64));
        }
        else
        {
          *(void *)__dst = *(void *)v61;
          *((void *)__dst + 1) = *((void *)v61 + 1);
          uint64_t v64 = *(int *)(v62 + 20);
          uint64_t v65 = &__dst[v64];
          uint64_t v66 = &v61[v64];
          uint64_t v67 = type metadata accessor for TemperatureScaleConfiguration();
          uint64_t v156 = *(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16);
          swift_bridgeObjectRetain();
          v156(v65, v66, v67);
          uint64_t v68 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
          *(void *)&v65[v68[5]] = *(void *)&v66[v68[5]];
          *(void *)&v65[v68[6]] = *(void *)&v66[v68[6]];
          *(void *)&v65[v68[7]] = *(void *)&v66[v68[7]];
          uint64_t v69 = v68[8];
          int v70 = &v65[v69];
          uint64_t v71 = &v66[v69];
          *(void *)int v70 = *(void *)v71;
          *((void *)v70 + 1) = *((void *)v71 + 1);
          v65[v68[9]] = v66[v68[9]];
          swift_bridgeObjectRetain();
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v62);
        }
        uint64_t v72 = *(int *)(v159 + 32);
        uint64_t v73 = &v57[v72];
        uint64_t v74 = &v58[v72];
        *(void *)uint64_t v73 = *(void *)v74;
        *((void *)v73 + 1) = *((void *)v74 + 1);
        uint64_t v75 = v161[7];
        uint64_t v76 = &v163[v75];
        uint64_t v77 = &v162[v75];
        *(void *)&v163[v75] = *(void *)&v162[v75];
        uint64_t v78 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
        uint64_t v79 = &v76[v78];
        uint64_t v80 = &v77[v78];
        uint64_t v81 = type metadata accessor for WeatherDescription();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v152 = v81;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v80, 1, v81))
        {
          uint64_t v82 = sub_10017DF08(&qword_100E63758);
          memcpy(v79, v80, *(void *)(*(void *)(v82 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v81 - 8) + 16))(v79, v80, v81);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v79, 0, 1, v81);
        }
        uint64_t v83 = v161[8];
        uint64_t v84 = &v163[v83];
        uint64_t v85 = &v162[v83];
        *(void *)uint64_t v84 = *(void *)&v162[v83];
        *((void *)v84 + 1) = *(void *)&v162[v83 + 8];
        *((void *)v84 + 2) = *(void *)&v162[v83 + 16];
        *((void *)v84 + 3) = *(void *)&v162[v83 + 24];
        *((void *)v84 + 4) = *(void *)&v162[v83 + 32];
        *((void *)v84 + 5) = *(void *)&v162[v83 + 40];
        *((void *)v84 + 6) = *(void *)&v162[v83 + 48];
        *((void *)v84 + 7) = *(void *)&v162[v83 + 56];
        uint64_t v86 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
        uint64_t v87 = &v84[v86];
        uint64_t v154 = &v85[v86];
        uint64_t v88 = type metadata accessor for Date();
        uint64_t v89 = *(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v157 = v89;
        v89(v87, v154, v88);
        uint64_t v90 = type metadata accessor for WeatherConditionBackgroundTimeData();
        uint64_t v91 = *(int *)(v90 + 20);
        uint64_t v92 = &v87[v91];
        uint64_t v93 = &v154[v91];
        uint64_t v94 = type metadata accessor for Elevation();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v93, 1, v94))
        {
          uint64_t v95 = sub_10017DF08(&qword_100E63760);
          memcpy(v92, v93, *(void *)(*(void *)(v95 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 16))(v92, v93, v94);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v92, 0, 1, v94);
        }
        uint64_t v96 = *(int *)(v90 + 24);
        uint64_t v97 = &v87[v96];
        uint64_t v98 = &v154[v96];
        uint64_t v99 = type metadata accessor for BackgroundMoonData();
        uint64_t v155 = v99;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v98, 1, v99))
        {
          uint64_t v100 = sub_10017DF08(&qword_100E63768);
          memcpy(v97, v98, *(void *)(*(void *)(v100 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 16))(v97, v98, v99);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v97, 0, 1, v99);
        }
        uint64_t v101 = v161[9];
        uint64_t v102 = &v163[v101];
        uint64_t v103 = &v162[v101];
        *(void *)uint64_t v102 = *(void *)v103;
        *((void *)v102 + 1) = *((void *)v103 + 1);
        *((void *)v102 + 2) = *((void *)v103 + 2);
        *((void *)v102 + 3) = *((void *)v103 + 3);
        *((void *)v102 + 4) = *((void *)v103 + 4);
        *((void *)v102 + 5) = *((void *)v103 + 5);
        *((void *)v102 + 6) = *((void *)v103 + 6);
        *((void *)v102 + 7) = *((void *)v103 + 7);
        *((void *)v102 + 8) = *((void *)v103 + 8);
        *((void *)v102 + 9) = *((void *)v103 + 9);
        *((void *)v102 + 10) = *((void *)v103 + 10);
        *((void *)v102 + 11) = *((void *)v103 + 11);
        *((void *)v102 + 12) = *((void *)v103 + 12);
        *((void *)v102 + 13) = *((void *)v103 + 13);
        uint64_t v104 = v161[10];
        uint64_t v105 = &v163[v104];
        uint64_t v151 = &v162[v104];
        uint64_t v150 = *(void (**)(char *, char *, uint64_t))(*(void *)(v152 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v150(v105, v151, v152);
        uint64_t v106 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
        uint64_t v107 = &v105[v106];
        uint64_t v108 = &v151[v106];
        *(void *)uint64_t v107 = *(void *)v108;
        *((void *)v107 + 1) = *((void *)v108 + 1);
        uint64_t v109 = v161[11];
        uint64_t v110 = &v163[v109];
        uint64_t v111 = &v162[v109];
        *(void *)uint64_t v110 = *(void *)v111;
        *((void *)v110 + 1) = *((void *)v111 + 1);
        *((void *)v110 + 2) = *((void *)v111 + 2);
        *((void *)v110 + 3) = *((void *)v111 + 3);
        *((void *)v110 + 4) = *((void *)v111 + 4);
        *((void *)v110 + 5) = *((void *)v111 + 5);
        uint64_t v112 = v161[12];
        uint64_t v113 = &v163[v112];
        uint64_t v114 = &v162[v112];
        uint64_t v115 = type metadata accessor for PressureTrend();
        uint64_t v153 = *(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v153(v113, v114, v115);
        uint64_t v116 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
        uint64_t v117 = v116[5];
        uint64_t v118 = &v113[v117];
        uint64_t v119 = &v114[v117];
        *(void *)uint64_t v118 = *(void *)v119;
        *((void *)v118 + 1) = *((void *)v119 + 1);
        uint64_t v120 = v116[6];
        uint64_t v121 = &v113[v120];
        uint64_t v122 = &v114[v120];
        *(void *)uint64_t v121 = *(void *)v122;
        *((void *)v121 + 1) = *((void *)v122 + 1);
        uint64_t v123 = v116[7];
        uint64_t v124 = &v113[v123];
        uint64_t v125 = &v114[v123];
        *(void *)uint64_t v124 = *(void *)v125;
        *((void *)v124 + 1) = *((void *)v125 + 1);
        *(void *)&v113[v116[8]] = *(void *)&v114[v116[8]];
        uint64_t v126 = v116[9];
        uint64_t v127 = &v113[v126];
        uint64_t v128 = &v114[v126];
        *(void *)uint64_t v127 = *(void *)v128;
        *((void *)v127 + 1) = *((void *)v128 + 1);
        uint64_t v129 = v161[13];
        uint64_t v130 = &v163[v129];
        uint64_t v131 = &v162[v129];
        *(void *)uint64_t v130 = *(void *)v131;
        *((void *)v130 + 1) = *((void *)v131 + 1);
        *((void *)v130 + 2) = *((void *)v131 + 2);
        *((void *)v130 + 3) = *((void *)v131 + 3);
        *((void *)v130 + 4) = *((void *)v131 + 4);
        *((void *)v130 + 5) = *((void *)v131 + 5);
        *((void *)v130 + 6) = *((void *)v131 + 6);
        *((void *)v130 + 7) = *((void *)v131 + 7);
        *((void *)v130 + 8) = *((void *)v131 + 8);
        *((void *)v130 + 9) = *((void *)v131 + 9);
        *((void *)v130 + 10) = *((void *)v131 + 10);
        *((void *)v130 + 11) = *((void *)v131 + 11);
        *((void *)v130 + 12) = *((void *)v131 + 12);
        *((void *)v130 + 13) = *((void *)v131 + 13);
        *((void *)v130 + 14) = *((void *)v131 + 14);
        *((void *)v130 + 15) = *((void *)v131 + 15);
        *((void *)v130 + 16) = *((void *)v131 + 16);
        *((void *)v130 + 17) = *((void *)v131 + 17);
        *((void *)v130 + 18) = *((void *)v131 + 18);
        *((void *)v130 + 19) = *((void *)v131 + 19);
        *((void *)v130 + 20) = *((void *)v131 + 20);
        *((void *)v130 + 21) = *((void *)v131 + 21);
        *((void *)v130 + 22) = *((void *)v131 + 22);
        *((void *)v130 + 23) = *((void *)v131 + 23);
        *((void *)v130 + 24) = *((void *)v131 + 24);
        *((void *)v130 + 25) = *((void *)v131 + 25);
        *((void *)v130 + 26) = *((void *)v131 + 26);
        *((void *)v130 + 27) = *((void *)v131 + 27);
        *((void *)v130 + 28) = *((void *)v131 + 28);
        uint64_t v132 = v161[14];
        uint64_t v149 = &v163[v132];
        uint64_t v133 = &v162[v132];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v157(v149, v133, v88);
        uint64_t v134 = *(int *)(v90 + 20);
        uint64_t v135 = &v149[v134];
        uint64_t v136 = &v133[v134];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v133[v134], 1, v94))
        {
          uint64_t v137 = sub_10017DF08(&qword_100E63760);
          memcpy(v135, v136, *(void *)(*(void *)(v137 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 16))(v135, v136, v94);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v135, 0, 1, v94);
        }
        uint64_t v138 = *(int *)(v90 + 24);
        uint64_t v139 = &v149[v138];
        uint64_t v140 = &v133[v138];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v133[v138], 1, v155))
        {
          uint64_t v141 = sub_10017DF08(&qword_100E63768);
          memcpy(v139, v140, *(void *)(*(void *)(v141 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v155 - 8) + 16))(v139, v140, v155);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v139, 0, 1, v155);
        }
        uint64_t v142 = v161[15];
        uint64_t v143 = &v163[v142];
        uint64_t v144 = &v162[v142];
        *(void *)uint64_t v143 = *(void *)v144;
        *((void *)v143 + 1) = *((void *)v144 + 1);
        *((void *)v143 + 2) = *((void *)v144 + 2);
        *((void *)v143 + 3) = *((void *)v144 + 3);
        *((void *)v143 + 4) = *((void *)v144 + 4);
        *((void *)v143 + 5) = *((void *)v144 + 5);
        *((void *)v143 + 6) = *((void *)v144 + 6);
        *((void *)v143 + 7) = *((void *)v144 + 7);
        *((void *)v143 + 8) = *((void *)v144 + 8);
        *((void *)v143 + 9) = *((void *)v144 + 9);
        *((void *)v143 + 10) = *((void *)v144 + 10);
        *((void *)v143 + 11) = *((void *)v144 + 11);
        *((void *)v143 + 12) = *((void *)v144 + 12);
        *((void *)v143 + 13) = *((void *)v144 + 13);
        uint64_t v145 = *(int *)(v160 + 80);
        uint64_t v164 = (void *)((char *)a1 + v145);
        uint64_t v146 = (void *)((char *)a2 + v145);
        type metadata accessor for NewsDataModel();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *uint64_t v164 = *v146;
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v147 = type metadata accessor for News();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v147 - 8) + 16))(v164, v146, v147);
        }
LABEL_58:
        swift_storeEnumTagMultiPayload();
LABEL_59:
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        uint64_t v15 = *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48);
        uint64_t v16 = (void *)((char *)a1 + v15);
        uint64_t v17 = (void *)((char *)a2 + v15);
        type metadata accessor for NewsDataModel();
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          void *v16 = *v17;
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v23 = type metadata accessor for News();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v16, v17, v23);
        }
        goto LABEL_58;
      case 6u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        uint64_t v18 = *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
        uint64_t v19 = (char *)a1 + v18;
        uint64_t v20 = (char *)a2 + v18;
        uint64_t v21 = type metadata accessor for AvailableDataSets();
        goto LABEL_13;
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        uint64_t v22 = *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
        uint64_t v19 = (char *)a1 + v22;
        uint64_t v20 = (char *)a2 + v22;
        uint64_t v21 = type metadata accessor for WeatherStatisticsModel();
LABEL_13:
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
        goto LABEL_59;
      default:
        *a1 = *a2;
        a1[1] = a2[1];
LABEL_16:
        swift_bridgeObjectRetain();
        goto LABEL_59;
    }
  }
  return a1;
}

_OWORD *sub_100BC2C08(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 4u:
      *a1 = *a2;
      uint64_t v6 = sub_10017DF08(&qword_100E6BBC0);
      uint64_t v7 = *(int *)(v6 + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      *(_OWORD *)((char *)a1 + v7) = *(_OWORD *)((char *)a2 + v7);
      uint64_t v10 = (int *)type metadata accessor for WeatherData(0);
      uint64_t v11 = v10[5];
      uint64_t v12 = &v8[v11];
      uint64_t v13 = &v9[v11];
      uint64_t v14 = type metadata accessor for Locale();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
      {
        uint64_t v15 = sub_10017DF08(&qword_100E63730);
        memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
      }
      uint64_t v28 = v10[6];
      uint64_t v29 = &v8[v28];
      uint64_t v30 = &v9[v28];
      uint64_t v31 = type metadata accessor for WeatherDataModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
      uint64_t v32 = v10[7];
      uint64_t v33 = &v8[v32];
      uint64_t v34 = &v9[v32];
      uint64_t v35 = sub_10017DF08(&qword_100E63738);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35))
      {
        uint64_t v36 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v33, v34, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        uint64_t v37 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v33, v34, v37);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v35);
      }
      uint64_t v38 = v10[8];
      uint64_t v39 = &v8[v38];
      uint64_t v40 = &v9[v38];
      uint64_t v41 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v42 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v39, v40, v42);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
      }
      uint64_t v43 = v10[9];
      uint64_t v44 = &v8[v43];
      uint64_t v45 = &v9[v43];
      uint64_t v46 = type metadata accessor for WeatherDataOverrides();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v46))
      {
        uint64_t v47 = sub_10017DF08(&qword_100E63740);
        memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        uint64_t v48 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v48))
        {
          uint64_t v49 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v44, v45, *(void *)(*(void *)(v49 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v44, v45, v48);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v48);
        }
        uint64_t v50 = *(int *)(v46 + 20);
        uint64_t v51 = &v44[v50];
        uint64_t v52 = &v45[v50];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v48))
        {
          uint64_t v53 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v51, v52, v48);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v51, 0, 1, v48);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v46);
      }
      uint64_t v132 = v6;
      uint64_t v133 = a2;
      uint64_t v54 = *(int *)(v6 + 64);
      uint64_t v129 = a1;
      uint64_t v55 = (char *)a1 + v54;
      uint64_t v56 = (char *)a2 + v54;
      uint64_t v57 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
      uint64_t v58 = (int *)type metadata accessor for PreprocessedWeatherData();
      *(void *)&v55[v58[5]] = *(void *)&v56[v58[5]];
      uint64_t v59 = v58[6];
      uint64_t v60 = &v55[v59];
      uint64_t v61 = &v56[v59];
      long long v62 = *(_OWORD *)&v56[v59 + 16];
      *(_OWORD *)uint64_t v60 = *(_OWORD *)&v56[v59];
      *((_OWORD *)v60 + 1) = v62;
      *((_OWORD *)v60 + 2) = *(_OWORD *)&v56[v59 + 32];
      uint64_t v63 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
      uint64_t v64 = *(int *)(v63 + 28);
      uint64_t v65 = &v60[v64];
      uint64_t v66 = &v61[v64];
      uint64_t v67 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, v67))
      {
        uint64_t v68 = sub_10017DF08(&qword_100E63750);
        memcpy(v65, v66, *(void *)(*(void *)(v68 - 8) + 64));
      }
      else
      {
        *(_OWORD *)uint64_t v65 = *(_OWORD *)v66;
        uint64_t v69 = *(int *)(v67 + 20);
        int v70 = &v65[v69];
        uint64_t v71 = &v66[v69];
        uint64_t v72 = type metadata accessor for TemperatureScaleConfiguration();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 32))(v70, v71, v72);
        uint64_t v73 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
        *(void *)&v70[v73[5]] = *(void *)&v71[v73[5]];
        *(void *)&v70[v73[6]] = *(void *)&v71[v73[6]];
        *(void *)&v70[v73[7]] = *(void *)&v71[v73[7]];
        *(_OWORD *)&v70[v73[8]] = *(_OWORD *)&v71[v73[8]];
        v70[v73[9]] = v71[v73[9]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 0, 1, v67);
      }
      *(_OWORD *)&v60[*(int *)(v63 + 32)] = *(_OWORD *)&v61[*(int *)(v63 + 32)];
      uint64_t v74 = v58[7];
      uint64_t v75 = &v55[v74];
      uint64_t v76 = &v56[v74];
      *(void *)&v55[v74] = *(void *)&v56[v74];
      uint64_t v77 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
      uint64_t v78 = &v75[v77];
      uint64_t v79 = &v76[v77];
      uint64_t v80 = type metadata accessor for WeatherDescription();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v79, 1, v80))
      {
        uint64_t v81 = sub_10017DF08(&qword_100E63758);
        memcpy(v78, v79, *(void *)(*(void *)(v81 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 32))(v78, v79, v80);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v78, 0, 1, v80);
      }
      uint64_t v82 = v58[8];
      uint64_t v83 = &v55[v82];
      uint64_t v84 = &v56[v82];
      long long v85 = *(_OWORD *)&v56[v82 + 16];
      *(_OWORD *)uint64_t v83 = *(_OWORD *)&v56[v82];
      *((_OWORD *)v83 + 1) = v85;
      long long v86 = *(_OWORD *)&v56[v82 + 48];
      *((_OWORD *)v83 + 2) = *(_OWORD *)&v56[v82 + 32];
      *((_OWORD *)v83 + 3) = v86;
      uint64_t v87 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
      uint64_t v88 = &v83[v87];
      uint64_t v89 = &v84[v87];
      uint64_t v90 = type metadata accessor for Date();
      uint64_t v130 = *(void (**)(char *, char *))(*(void *)(v90 - 8) + 32);
      uint64_t v131 = v90;
      v130(v88, v89);
      uint64_t v134 = type metadata accessor for WeatherConditionBackgroundTimeData();
      uint64_t v91 = *(int *)(v134 + 20);
      uint64_t v92 = &v88[v91];
      uint64_t v93 = &v89[v91];
      uint64_t v94 = type metadata accessor for Elevation();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v93, 1, v94))
      {
        uint64_t v95 = v94;
        uint64_t v96 = sub_10017DF08(&qword_100E63760);
        memcpy(v92, v93, *(void *)(*(void *)(v96 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 32))(v92, v93, v94);
        uint64_t v95 = v94;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v92, 0, 1, v94);
      }
      a1 = v129;
      uint64_t v97 = *(int *)(v134 + 24);
      uint64_t v98 = &v88[v97];
      uint64_t v99 = &v89[v97];
      uint64_t v100 = type metadata accessor for BackgroundMoonData();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v99, 1, v100))
      {
        uint64_t v101 = sub_10017DF08(&qword_100E63768);
        memcpy(v98, v99, *(void *)(*(void *)(v101 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 32))(v98, v99, v100);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v98, 0, 1, v100);
      }
      memcpy(&v55[v58[9]], &v56[v58[9]], 0x70uLL);
      uint64_t v102 = v58[10];
      uint64_t v103 = &v55[v102];
      uint64_t v104 = &v56[v102];
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 32))(&v55[v102], &v56[v102], v80);
      uint64_t v105 = type metadata accessor for UVIndexComponentPreprocessedDataModel();
      *(_OWORD *)&v103[*(int *)(v105 + 20)] = *(_OWORD *)&v104[*(int *)(v105 + 20)];
      uint64_t v106 = v58[11];
      uint64_t v107 = &v55[v106];
      uint64_t v108 = &v56[v106];
      long long v109 = *((_OWORD *)v108 + 1);
      *(_OWORD *)uint64_t v107 = *(_OWORD *)v108;
      *((_OWORD *)v107 + 1) = v109;
      *((_OWORD *)v107 + 2) = *((_OWORD *)v108 + 2);
      uint64_t v110 = v58[12];
      uint64_t v111 = &v55[v110];
      uint64_t v112 = &v56[v110];
      uint64_t v113 = type metadata accessor for PressureTrend();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 32))(v111, v112, v113);
      uint64_t v114 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
      *(_OWORD *)&v111[v114[5]] = *(_OWORD *)&v112[v114[5]];
      *(_OWORD *)&v111[v114[6]] = *(_OWORD *)&v112[v114[6]];
      *(_OWORD *)&v111[v114[7]] = *(_OWORD *)&v112[v114[7]];
      *(void *)&v111[v114[8]] = *(void *)&v112[v114[8]];
      *(_OWORD *)&v111[v114[9]] = *(_OWORD *)&v112[v114[9]];
      memcpy(&v55[v58[13]], &v56[v58[13]], 0xE8uLL);
      uint64_t v115 = v58[14];
      uint64_t v116 = &v55[v115];
      uint64_t v117 = &v56[v115];
      ((void (*)(char *, char *, uint64_t))v130)(&v55[v115], &v56[v115], v131);
      uint64_t v118 = *(int *)(v134 + 20);
      uint64_t v119 = &v116[v118];
      uint64_t v120 = &v117[v118];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v117[v118], 1, v95))
      {
        uint64_t v121 = sub_10017DF08(&qword_100E63760);
        memcpy(v119, v120, *(void *)(*(void *)(v121 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 32))(v119, v120, v95);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v119, 0, 1, v95);
      }
      uint64_t v122 = *(int *)(v134 + 24);
      uint64_t v123 = &v116[v122];
      uint64_t v124 = &v117[v122];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v124, 1, v100))
      {
        uint64_t v125 = sub_10017DF08(&qword_100E63768);
        memcpy(v123, v124, *(void *)(*(void *)(v125 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 32))(v123, v124, v100);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v123, 0, 1, v100);
      }
      memcpy(&v55[v58[15]], &v56[v58[15]], 0x70uLL);
      uint64_t v126 = *(int *)(v132 + 80);
      uint64_t v17 = (char *)v129 + v126;
      uint64_t v18 = (char *)v133 + v126;
      uint64_t v19 = type metadata accessor for NewsDataModel();
      if (swift_getEnumCaseMultiPayload()) {
        goto LABEL_5;
      }
      goto LABEL_45;
    case 5u:
      *a1 = *a2;
      uint64_t v16 = *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48);
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = type metadata accessor for NewsDataModel();
      if (swift_getEnumCaseMultiPayload())
      {
LABEL_5:
        memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
LABEL_45:
        uint64_t v127 = type metadata accessor for News();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 32))(v17, v18, v127);
        swift_storeEnumTagMultiPayload();
      }
      goto LABEL_46;
    case 6u:
      *a1 = *a2;
      uint64_t v20 = *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      uint64_t v23 = type metadata accessor for AvailableDataSets();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
      goto LABEL_46;
    case 8u:
      *a1 = *a2;
      uint64_t v24 = *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
      uint64_t v25 = (char *)a1 + v24;
      uint64_t v26 = (char *)a2 + v24;
      uint64_t v27 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
LABEL_46:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *sub_100BC39F0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100176980((uint64_t)a1, (void (*)(void))type metadata accessor for WeatherDataAction);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 4u:
        *a1 = *a2;
        uint64_t v6 = sub_10017DF08(&qword_100E6BBC0);
        uint64_t v7 = *(int *)(v6 + 48);
        uint64_t v8 = (char *)a1 + v7;
        uint64_t v9 = (char *)a2 + v7;
        *(_OWORD *)((char *)a1 + v7) = *(_OWORD *)((char *)a2 + v7);
        uint64_t v10 = (int *)type metadata accessor for WeatherData(0);
        uint64_t v11 = v10[5];
        uint64_t v12 = &v8[v11];
        uint64_t v13 = &v9[v11];
        uint64_t v14 = type metadata accessor for Locale();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
        {
          uint64_t v15 = sub_10017DF08(&qword_100E63730);
          memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
        }
        uint64_t v28 = v10[6];
        uint64_t v29 = &v8[v28];
        uint64_t v30 = &v9[v28];
        uint64_t v31 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
        uint64_t v32 = v10[7];
        uint64_t v33 = &v8[v32];
        uint64_t v34 = &v9[v32];
        uint64_t v35 = sub_10017DF08(&qword_100E63738);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35))
        {
          uint64_t v36 = type metadata accessor for WeatherData.CachingState(0);
          memcpy(v33, v34, *(void *)(*(void *)(v36 - 8) + 64));
        }
        else
        {
          uint64_t v37 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v33, v34, v37);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v35);
        }
        uint64_t v38 = v10[8];
        uint64_t v39 = &v8[v38];
        uint64_t v40 = &v9[v38];
        uint64_t v41 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v42 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v39, v40, v42);
          swift_storeEnumTagMultiPayload();
        }
        else
        {
          memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
        }
        uint64_t v43 = v10[9];
        uint64_t v44 = &v8[v43];
        uint64_t v45 = &v9[v43];
        uint64_t v46 = type metadata accessor for WeatherDataOverrides();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v46))
        {
          uint64_t v47 = sub_10017DF08(&qword_100E63740);
          memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
        }
        else
        {
          uint64_t v48 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v48))
          {
            uint64_t v49 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v44, v45, *(void *)(*(void *)(v49 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v44, v45, v48);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v48);
          }
          uint64_t v50 = *(int *)(v46 + 20);
          uint64_t v51 = &v44[v50];
          uint64_t v52 = &v45[v50];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v48))
          {
            uint64_t v53 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v51, v52, v48);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v51, 0, 1, v48);
          }
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v46);
        }
        uint64_t v130 = v6;
        uint64_t v54 = *(int *)(v6 + 64);
        uint64_t v55 = (char *)a1 + v54;
        uint64_t v56 = (char *)a2 + v54;
        uint64_t v57 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
        uint64_t v58 = (int *)type metadata accessor for PreprocessedWeatherData();
        *(void *)&v55[v58[5]] = *(void *)&v56[v58[5]];
        uint64_t v59 = v58[6];
        uint64_t v131 = v55;
        uint64_t v60 = &v55[v59];
        uint64_t v61 = &v56[v59];
        long long v62 = *(_OWORD *)&v56[v59 + 16];
        *(_OWORD *)uint64_t v60 = *(_OWORD *)&v56[v59];
        *((_OWORD *)v60 + 1) = v62;
        *((_OWORD *)v60 + 2) = *(_OWORD *)&v56[v59 + 32];
        uint64_t v63 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
        uint64_t v64 = *(int *)(v63 + 28);
        uint64_t v65 = &v60[v64];
        uint64_t v66 = &v61[v64];
        uint64_t v67 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
        uint64_t v132 = v58;
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, v67))
        {
          uint64_t v68 = sub_10017DF08(&qword_100E63750);
          memcpy(v65, v66, *(void *)(*(void *)(v68 - 8) + 64));
        }
        else
        {
          *(_OWORD *)uint64_t v65 = *(_OWORD *)v66;
          uint64_t v69 = *(int *)(v67 + 20);
          int v70 = &v65[v69];
          uint64_t v71 = &v66[v69];
          uint64_t v72 = type metadata accessor for TemperatureScaleConfiguration();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 32))(v70, v71, v72);
          uint64_t v73 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
          *(void *)&v70[v73[5]] = *(void *)&v71[v73[5]];
          *(void *)&v70[v73[6]] = *(void *)&v71[v73[6]];
          *(void *)&v70[v73[7]] = *(void *)&v71[v73[7]];
          *(_OWORD *)&v70[v73[8]] = *(_OWORD *)&v71[v73[8]];
          v70[v73[9]] = v71[v73[9]];
          uint64_t v58 = v132;
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 0, 1, v67);
        }
        *(_OWORD *)&v60[*(int *)(v63 + 32)] = *(_OWORD *)&v61[*(int *)(v63 + 32)];
        uint64_t v74 = v58[7];
        uint64_t v75 = &v131[v74];
        uint64_t v76 = &v56[v74];
        *(void *)&v131[v74] = *(void *)&v56[v74];
        uint64_t v77 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
        uint64_t v78 = &v75[v77];
        uint64_t v79 = &v76[v77];
        uint64_t v80 = type metadata accessor for WeatherDescription();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v79, 1, v80))
        {
          uint64_t v81 = sub_10017DF08(&qword_100E63758);
          memcpy(v78, v79, *(void *)(*(void *)(v81 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 32))(v78, v79, v80);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v78, 0, 1, v80);
        }
        uint64_t v82 = v58[8];
        uint64_t v83 = &v131[v82];
        uint64_t v84 = &v56[v82];
        long long v85 = *(_OWORD *)&v56[v82 + 16];
        *(_OWORD *)uint64_t v83 = *(_OWORD *)&v56[v82];
        *((_OWORD *)v83 + 1) = v85;
        long long v86 = *(_OWORD *)&v56[v82 + 48];
        *((_OWORD *)v83 + 2) = *(_OWORD *)&v56[v82 + 32];
        *((_OWORD *)v83 + 3) = v86;
        uint64_t v87 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
        uint64_t v88 = &v83[v87];
        uint64_t v89 = &v84[v87];
        uint64_t v90 = type metadata accessor for Date();
        uint64_t v128 = *(void (**)(char *, char *))(*(void *)(v90 - 8) + 32);
        uint64_t v129 = v90;
        v128(v88, v89);
        uint64_t v133 = type metadata accessor for WeatherConditionBackgroundTimeData();
        uint64_t v91 = *(int *)(v133 + 20);
        uint64_t v92 = &v88[v91];
        uint64_t v93 = &v89[v91];
        uint64_t v94 = type metadata accessor for Elevation();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v93, 1, v94))
        {
          uint64_t v95 = sub_10017DF08(&qword_100E63760);
          memcpy(v92, v93, *(void *)(*(void *)(v95 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 32))(v92, v93, v94);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v92, 0, 1, v94);
        }
        uint64_t v96 = *(int *)(v133 + 24);
        uint64_t v97 = &v88[v96];
        uint64_t v98 = &v89[v96];
        uint64_t v99 = type metadata accessor for BackgroundMoonData();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v98, 1, v99))
        {
          uint64_t v100 = sub_10017DF08(&qword_100E63768);
          memcpy(v97, v98, *(void *)(*(void *)(v100 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 32))(v97, v98, v99);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v97, 0, 1, v99);
        }
        memcpy(&v131[v132[9]], &v56[v132[9]], 0x70uLL);
        uint64_t v101 = v132[10];
        uint64_t v102 = &v131[v101];
        uint64_t v103 = &v56[v101];
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 32))(&v131[v101], &v56[v101], v80);
        uint64_t v104 = type metadata accessor for UVIndexComponentPreprocessedDataModel();
        *(_OWORD *)&v102[*(int *)(v104 + 20)] = *(_OWORD *)&v103[*(int *)(v104 + 20)];
        uint64_t v105 = v132[11];
        uint64_t v106 = &v131[v105];
        uint64_t v107 = &v56[v105];
        long long v108 = *((_OWORD *)v107 + 1);
        *(_OWORD *)uint64_t v106 = *(_OWORD *)v107;
        *((_OWORD *)v106 + 1) = v108;
        *((_OWORD *)v106 + 2) = *((_OWORD *)v107 + 2);
        uint64_t v109 = v132[12];
        uint64_t v110 = &v131[v109];
        uint64_t v111 = &v56[v109];
        uint64_t v112 = type metadata accessor for PressureTrend();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 32))(v110, v111, v112);
        uint64_t v113 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
        *(_OWORD *)&v110[v113[5]] = *(_OWORD *)&v111[v113[5]];
        *(_OWORD *)&v110[v113[6]] = *(_OWORD *)&v111[v113[6]];
        *(_OWORD *)&v110[v113[7]] = *(_OWORD *)&v111[v113[7]];
        *(void *)&v110[v113[8]] = *(void *)&v111[v113[8]];
        *(_OWORD *)&v110[v113[9]] = *(_OWORD *)&v111[v113[9]];
        memcpy(&v131[v132[13]], &v56[v132[13]], 0xE8uLL);
        uint64_t v114 = v132[14];
        uint64_t v115 = &v131[v114];
        uint64_t v116 = &v56[v114];
        ((void (*)(char *, char *, uint64_t))v128)(&v131[v114], &v56[v114], v129);
        uint64_t v117 = *(int *)(v133 + 20);
        uint64_t v118 = &v115[v117];
        uint64_t v119 = &v116[v117];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v116[v117], 1, v94))
        {
          uint64_t v120 = sub_10017DF08(&qword_100E63760);
          memcpy(v118, v119, *(void *)(*(void *)(v120 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 32))(v118, v119, v94);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v118, 0, 1, v94);
        }
        uint64_t v121 = *(int *)(v133 + 24);
        uint64_t v122 = &v115[v121];
        uint64_t v123 = &v116[v121];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v123, 1, v99))
        {
          uint64_t v124 = sub_10017DF08(&qword_100E63768);
          memcpy(v122, v123, *(void *)(*(void *)(v124 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v99 - 8) + 32))(v122, v123, v99);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v122, 0, 1, v99);
        }
        memcpy(&v131[v132[15]], &v56[v132[15]], 0x70uLL);
        uint64_t v125 = *(int *)(v130 + 80);
        uint64_t v17 = (char *)a1 + v125;
        uint64_t v18 = (char *)a2 + v125;
        uint64_t v19 = type metadata accessor for NewsDataModel();
        if (swift_getEnumCaseMultiPayload()) {
          goto LABEL_6;
        }
        goto LABEL_46;
      case 5u:
        *a1 = *a2;
        uint64_t v16 = *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48);
        uint64_t v17 = (char *)a1 + v16;
        uint64_t v18 = (char *)a2 + v16;
        uint64_t v19 = type metadata accessor for NewsDataModel();
        if (swift_getEnumCaseMultiPayload())
        {
LABEL_6:
          memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
LABEL_46:
          uint64_t v126 = type metadata accessor for News();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 32))(v17, v18, v126);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_47;
      case 6u:
        *a1 = *a2;
        uint64_t v20 = *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
        uint64_t v21 = (char *)a1 + v20;
        uint64_t v22 = (char *)a2 + v20;
        uint64_t v23 = type metadata accessor for AvailableDataSets();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
        goto LABEL_47;
      case 8u:
        *a1 = *a2;
        uint64_t v24 = *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
        uint64_t v25 = (char *)a1 + v24;
        uint64_t v26 = (char *)a2 + v24;
        uint64_t v27 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
LABEL_47:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

unsigned char *storeEnumTagSinglePayload for UpdateWeather(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100BC48FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UpdateWeather()
{
  return &type metadata for UpdateWeather;
}

uint64_t sub_100BC4934(uint64_t a1, char a2)
{
  *(unsigned char *)(v2 + 118) = a2;
  *(void *)(v2 + 24) = a1;
  uint64_t v3 = type metadata accessor for ConditionCode();
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = *(void *)(v3 - 8);
  *(void *)(v2 + 48) = swift_task_alloc();
  sub_10017DF08(&qword_100EB70F0);
  *(void *)(v2 + 56) = swift_task_alloc();
  *(void *)(v2 + 64) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v2 + 72) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v2 + 80) = v5;
  *(void *)(v2 + 88) = v4;
  return _swift_task_switch(sub_100BC4A6C, v5, v4);
}

uint64_t sub_100BC4A6C()
{
  uint64_t v24 = v0;
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 32);
  sub_100BC5130(*(unsigned char *)(v0 + 118), v2);
  sub_100BC52F8(v2, v1);
  int v4 = _s7Weather24LocationCompositionStateOwet_0(v1, 1, v3);
  if (v4 == 1)
  {
    sub_100BC5360(*(void *)(v0 + 56));
    type metadata accessor for SettingReader();
    static SettingReader.shared.getter();
    if (qword_100E624D0 != -1) {
      swift_once();
    }
    SettingReader.read<A>(_:)();
    swift_release();
    int v5 = *(unsigned __int8 *)(v0 + 116);
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 40) + 32))(*(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 32));
    if (qword_100E62870 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_1002102B0(v6, (uint64_t)qword_100F52058);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      char v9 = *(unsigned char *)(v0 + 118);
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136315138;
      *(unsigned char *)(v0 + 117) = v9;
      uint64_t v11 = String.init<A>(describing:)();
      *(void *)(v0 + 16) = sub_10016414C(v11, v12, &v23);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Performing Override instruction: %s", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v13 = *(void *)(v0 + 40);
    uint64_t v14 = *(void *)(v0 + 48);
    uint64_t v15 = *(void *)(v0 + 32);
    StubPPTWeatherDataManager.setupStubData(for:)();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v15);
    int v5 = 1;
  }
  if (qword_100E62870 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_1002102B0(v16, (uint64_t)qword_100F52058);
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 67109120;
    *(_DWORD *)(v0 + 112) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Performing UpdateWeather instruction; forceUpdateWeather=%{BOOL}d",
      v19,
      8u);
    swift_slowDealloc();
  }

  sub_100A41EA4();
  if (v4 == 1)
  {
    sub_100BC5360(*(void *)(v0 + 64));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
    return v20();
  }
  else
  {
    uint64_t v22 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_100BC4EDC;
    return sub_1003846E4();
  }
}

uint64_t sub_100BC4EDC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 104) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 88);
  uint64_t v4 = *(void *)(v2 + 80);
  if (v0) {
    int v5 = sub_100BC50A0;
  }
  else {
    int v5 = sub_100BC5018;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_100BC5018()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_release();
  sub_100BC5360(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100BC50A0()
{
  uint64_t v1 = *(void *)(v0 + 64);
  swift_release();
  sub_100BC5360(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100BC5130@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  switch(a1)
  {
    case 1:
      uint64_t v6 = (unsigned int *)&enum case for ConditionCode.clear(_:);
      goto LABEL_9;
    case 2:
      uint64_t v6 = (unsigned int *)&enum case for ConditionCode.cloudy(_:);
      goto LABEL_9;
    case 3:
      uint64_t v6 = (unsigned int *)&enum case for ConditionCode.mostlyCloudy(_:);
      goto LABEL_9;
    case 4:
      uint64_t v6 = (unsigned int *)&enum case for ConditionCode.rain(_:);
      goto LABEL_9;
    case 5:
      uint64_t v6 = (unsigned int *)&enum case for ConditionCode.thunderstorms(_:);
      goto LABEL_9;
    case 6:
      uint64_t v6 = (unsigned int *)&enum case for ConditionCode.strongStorms(_:);
LABEL_9:
      uint64_t v7 = *v6;
      uint64_t v8 = type metadata accessor for ConditionCode();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 104))(a2, v7, v8);
      uint64_t v4 = a2;
      uint64_t v5 = 0;
      uint64_t v3 = v8;
      break;
    default:
      uint64_t v3 = type metadata accessor for ConditionCode();
      uint64_t v4 = a2;
      uint64_t v5 = 1;
      break;
  }

  return _s7Weather24LocationCompositionStateOwst_0(v4, v5, 1, v3);
}

uint64_t sub_100BC525C(uint64_t a1)
{
  char v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1002205C0;
  return sub_100BC4934(a1, v4);
}

uint64_t sub_100BC52F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100EB70F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BC5360(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100EB70F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100BC53C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1001AB3E0();
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    uint64_t v8 = *(void *)(v1 + 56);
    swift_retain();
    os_unfair_lock_lock((os_unfair_lock_t)(v8 + 24));
    sub_100BC6730((unint64_t *)(v8 + 16));
    os_unfair_lock_unlock((os_unfair_lock_t)(v8 + 24));
    swift_release();
    return sub_100BC5534();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100BC5520()
{
  if (*(unsigned char *)(v0 + 72) == 1) {
    return sub_100BC5534();
  }
  return result;
}

uint64_t sub_100BC5534()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1001AB3E0();
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    uint64_t result = sub_100BC57E8();
    if (result)
    {
      uint64_t v8 = v1[5];
      uint64_t v9 = v1[6];
      sub_1001B1E64(v1 + 2, v8);
      uint64_t v10 = *(void (**)(void (*)(), void *, uint64_t, uint64_t))(v9 + 24);
      swift_retain();
      v10(sub_100BC66B0, v1, v8, v9);
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100BC56AC(unint64_t *a1, uint64_t a2)
{
  unint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100EB71B8);
  sub_100BC674C();
  uint64_t v4 = Collection<>.insertionIndex(of:orderBy:)();
  swift_bridgeObjectRelease();
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_retain();
  }
  if (v5 < v4)
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    return sub_100BC6440(v4, v4, a2);
  }
  __break(1u);
  return result;
}

BOOL sub_100BC57C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)a2 + 56);
  uint64_t v3 = *(void *)(*(void *)a1 + 56);
  BOOL v4 = v2 == v3;
  BOOL v5 = v2 < v3;
  if (v4) {
    return *(void *)(*(void *)a2 + 48) < *(void *)(*(void *)a1 + 48);
  }
  else {
    return v5;
  }
}

uint64_t sub_100BC57E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  BOOL v5 = (uint64_t *)((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1001AB3E0();
  *BOOL v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if (*(unsigned char *)(v1 + 72) == 1 && !*(void *)(v1 + 64))
    {
      uint64_t v9 = *(void *)(v1 + 56);
      swift_retain();
      os_unfair_lock_lock((os_unfair_lock_t)(v9 + 24));
      sub_100BC62E0((void *)(v9 + 16), &v12);
      os_unfair_lock_unlock((os_unfair_lock_t)(v9 + 24));
      BOOL v10 = v12;
      swift_release();
      return !v10;
    }
    else
    {
      return 0;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100BC5968(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  BOOL v5 = (void *)((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1001AB3E0();
  *BOOL v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    if (sub_100BC57E8())
    {
      uint64_t v7 = self;
      aBlock[4] = sub_100BC66B8;
      void aBlock[5] = a1;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1003169EC;
      aBlock[3] = &unk_100E3B110;
      uint64_t v8 = _Block_copy(aBlock);
      swift_retain();
      swift_release();
      id v9 = [v7 scheduledTimerWithTimeInterval:0 repeats:v8 block:0.1];
      _Block_release(v8);
      BOOL v10 = *(void **)(a1 + 64);
      *(void *)(a1 + 64) = v9;
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100BC5B54(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for DispatchPredicate();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (uint64_t *)((char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1001AB3E0();
  *char v6 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v4 + 104))(v6, enum case for DispatchPredicate.onQueue(_:), v3);
  char v7 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    id v9 = *(void **)(a2 + 64);
    *(void *)(a2 + 64) = 0;

    uint64_t v10 = sub_100BC5C80();
    return sub_100BC5534(v10);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100BC5C80()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1001AB3E0();
  *uint64_t v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    uint64_t result = sub_100BC5E34();
    if (*(unsigned char *)(v1 + 72) == 1)
    {
      uint64_t v8 = *(void *)(v1 + 40);
      uint64_t v9 = *(void *)(v1 + 48);
      sub_1001B1E64((void *)(v1 + 16), v8);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
      if ((result & 1) == 0)
      {
        uint64_t v10 = *(void *)(v1 + 56);
        swift_retain();
        os_unfair_lock_lock((os_unfair_lock_t)(v10 + 24));
        sub_100BC635C((void *)(v10 + 16), &v13);
        os_unfair_lock_unlock((os_unfair_lock_t)(v10 + 24));
        uint64_t v11 = v13;
        uint64_t result = swift_release();
        if (v11)
        {
          sub_10071E424();
          return swift_release();
        }
      }
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100BC5E34()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_100BC5EA8((unint64_t *)(v1 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));

  return swift_release();
}

uint64_t sub_100BC5EA8(unint64_t *a1)
{
  unint64_t v3 = *a1;
  if (*a1 >> 62) {
    goto LABEL_72;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v4) {
    goto LABEL_3;
  }
LABEL_55:
  swift_bridgeObjectRelease();
  if (*a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  while (1)
  {
LABEL_57:
    if (*a1 >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v3 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if ((uint64_t)v3 >= v6) {
      return sub_10007ED90(v6, v3);
    }
    __break(1u);
LABEL_76:
    specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_5:
    char v5 = sub_100135710();
    swift_release();
    if (v5)
    {
      uint64_t v6 = 0;
    }
    else
    {
      if (v4 == 1) {
        goto LABEL_55;
      }
      uint64_t v17 = 5;
      while (1)
      {
        uint64_t v6 = v17 - 4;
        if (v1) {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          swift_retain();
        }
        char v18 = sub_100135710();
        swift_release();
        if (v18) {
          break;
        }
        uint64_t v19 = v17 - 3;
        if (__OFADD__(v6, 1)) {
          goto LABEL_65;
        }
        ++v17;
        if (v19 == v4) {
          goto LABEL_55;
        }
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v4 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
LABEL_79:
      swift_bridgeObjectRetain();
      uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    if (*a1 >> 62) {
      goto LABEL_79;
    }
    uint64_t v7 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_10:
    if (v4 != v7)
    {
      unint64_t v1 = v6 + 5;
      while (1)
      {
        unint64_t v3 = v1 - 4;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if ((v3 & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_62:
            __break(1u);
LABEL_63:
            __break(1u);
LABEL_64:
            __break(1u);
LABEL_65:
            __break(1u);
LABEL_66:
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
LABEL_70:
            __break(1u);
LABEL_71:
            __break(1u);
LABEL_72:
            swift_bridgeObjectRetain();
            uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
            if (!v4) {
              goto LABEL_55;
            }
LABEL_3:
            unint64_t v1 = v3 & 0xC000000000000001;
            if ((v3 & 0xC000000000000001) == 0)
            {
              swift_retain();
              goto LABEL_5;
            }
            goto LABEL_76;
          }
          if (v3 >= *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_62;
          }
          swift_retain();
        }
        char v8 = sub_100135710();
        swift_release();
        if ((v8 & 1) == 0)
        {
          if (v3 != v6)
          {
            uint64_t v9 = *a1;
            if ((*a1 & 0xC000000000000001) != 0)
            {
              uint64_t v10 = specialized _ArrayBuffer._getElementSlowPath(_:)();
              uint64_t v9 = *a1;
            }
            else
            {
              if (v6 < 0) {
                goto LABEL_66;
              }
              if ((unint64_t)v6 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_67;
              }
              uint64_t v10 = *(void *)(v9 + 8 * v6 + 32);
              swift_retain();
            }
            if ((v9 & 0xC000000000000001) != 0)
            {
              uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)();
              uint64_t v9 = *a1;
            }
            else
            {
              if ((v3 & 0x8000000000000000) != 0) {
                goto LABEL_68;
              }
              if (v3 >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                goto LABEL_69;
              }
              uint64_t v11 = *(void *)(v9 + 8 * v1);
              swift_retain();
            }
            int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
            *a1 = v9;
            if (!isUniquelyReferenced_nonNull_bridgeObject || v9 < 0 || (v9 & 0x4000000000000000) != 0)
            {
              uint64_t v9 = sub_100ABB510(v9);
              *a1 = v9;
            }
            *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v11;
            swift_release();
            specialized Array._endMutation()();
            uint64_t v13 = *a1;
            int v14 = swift_isUniquelyReferenced_nonNull_bridgeObject();
            *a1 = v13;
            if (!v14 || v13 < 0 || (v13 & 0x4000000000000000) != 0)
            {
              uint64_t v13 = sub_100ABB510(v13);
              *a1 = v13;
            }
            if ((v3 & 0x8000000000000000) != 0) {
              goto LABEL_70;
            }
            if (v3 >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_71;
            }
            *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 8 * v1) = v10;
            swift_release();
            specialized Array._endMutation()();
          }
          if (__OFADD__(v6++, 1)) {
            goto LABEL_64;
          }
        }
        uint64_t v4 = v1 - 3;
        if (__OFADD__(v3, 1)) {
          goto LABEL_63;
        }
        if (*a1 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v16 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        ++v1;
        if (v4 == v16) {
          goto LABEL_57;
        }
      }
    }
  }
}

void *sub_100BC62E0@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  if (*result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = (void *)swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((*result & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  *a2 = v3 == 0;
  return result;
}

uint64_t sub_100BC635C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  if (!(*a1 >> 62))
  {
    if (*(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
LABEL_9:
    uint64_t result = 0;
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v6) {
    goto LABEL_9;
  }
LABEL_3:
  uint64_t result = sub_100BC66C0();
  if (!result)
  {
    if (*a1 >> 62) {
      goto LABEL_12;
    }
    uint64_t v5 = *(void *)((*a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (__OFSUB__(v5, 1))
    {
      __break(1u);
LABEL_12:
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    uint64_t result = sub_100289528(v5 - 1);
  }
LABEL_10:
  *a2 = result;
  return result;
}

uint64_t sub_100BC6440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = a3;
    uint64_t v5 = a2;
    uint64_t v6 = a1;
    if (!(*v4 >> 62))
    {
      uint64_t v8 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
LABEL_4:
  if (v8 < v5)
  {
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v9 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v7 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (!(*v4 >> 62))
  {
    uint64_t v10 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_9;
  }
LABEL_32:
  swift_bridgeObjectRetain();
  uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
LABEL_9:
  uint64_t v11 = v10 + v7;
  if (__OFADD__(v10, v7))
  {
    __break(1u);
    goto LABEL_34;
  }
  unint64_t v12 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v4 = v12;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v12 & 0x8000000000000000) != 0
    || (v12 & 0x4000000000000000) != 0
    || (uint64_t v14 = v12 & 0xFFFFFFFFFFFFFF8, v11 > *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v12 >> 62))
    {
LABEL_15:
      swift_bridgeObjectRetain();
      unint64_t v12 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *uint64_t v4 = v12;
      uint64_t v14 = v12 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_16;
    }
LABEL_34:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
LABEL_16:
  uint64_t v15 = (void *)(v14 + 32 + 8 * v6);
  type metadata accessor for WireframeContentManager();
  swift_arrayDestroy();
  if (!v7) {
    goto LABEL_24;
  }
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v16 = *(void *)(v14 + 16);
  }
  if (__OFSUB__(v16, v5))
  {
    __break(1u);
    goto LABEL_37;
  }
  uint64_t result = sub_1007EAF74(v14 + 32 + 8 * v5, v16 - v5, v15 + 1);
  if (v12 >> 62)
  {
LABEL_37:
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  uint64_t v18 = *(void *)(v14 + 16);
LABEL_22:
  if (__OFADD__(v18, v7))
  {
    __break(1u);
    return result;
  }
  *(void *)(v14 + 16) = v18 + v7;
LABEL_24:
  void *v15 = v3;

  return specialized Array._endMutation()();
}

void sub_100BC66B0()
{
  sub_100BC5968(v0);
}

uint64_t sub_100BC66B8(uint64_t a1)
{
  return sub_100BC5B54(a1, v1);
}

uint64_t sub_100BC66C0()
{
  uint64_t v1 = *v0;
  uint64_t result = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v0 = v1;
  if (!result || v1 < 0 || (v1 & 0x4000000000000000) != 0)
  {
    uint64_t result = sub_100ABB510(v1);
    uint64_t v1 = result;
    *uint64_t v0 = result;
  }
  uint64_t v3 = v1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    uint64_t v5 = v4 - 1;
    uint64_t v6 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 8 * v5 + 0x20);
    *(void *)(v3 + 16) = v5;
    specialized Array._endMutation()();
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100BC6730(unint64_t *a1)
{
  return sub_100BC56AC(a1, v1);
}

unint64_t sub_100BC674C()
{
  unint64_t result = qword_100EB71C0;
  if (!qword_100EB71C0)
  {
    sub_10018C6DC(&qword_100EB71B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB71C0);
  }
  return result;
}

id sub_100BC67A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v139 = a2;
  uint64_t v137 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v136 = v3;
  __chkstk_darwin(v4);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v5);
  sub_100109328((uint64_t)&v131 - v6);
  uint64_t v7 = type metadata accessor for TemperatureScaleConfiguration.Gradient();
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_100109314();
  sub_100109328(v9);
  uint64_t v10 = type metadata accessor for DetailChartGradientModel();
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_100109314();
  sub_100109338(v12);
  uint64_t v153 = (void (*)(void))sub_10017DF08(&qword_100E7DC28);
  sub_100179C0C();
  uint64_t v166 = v13;
  __chkstk_darwin(v14);
  sub_100109314();
  sub_100109338(v15);
  uint64_t v151 = sub_10017DF08(&qword_100E65250);
  sub_100179C0C();
  uint64_t v150 = v16;
  __chkstk_darwin(v17);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v18);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v19);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v20);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v21);
  uint64_t v23 = sub_100109328((uint64_t)&v131 - v22);
  uint64_t v24 = type metadata accessor for DetailHeroChartLollipopModel(v23);
  uint64_t v25 = sub_100109308(v24);
  __chkstk_darwin(v25);
  sub_100109314();
  sub_100109338(v26);
  uint64_t v27 = sub_10017DF08(&qword_100E64FA0);
  uint64_t v28 = sub_100109308(v27);
  __chkstk_darwin(v28);
  sub_100109314();
  sub_100109338(v29);
  uint64_t v30 = sub_10017DF08(&qword_100E64FA8);
  uint64_t v31 = sub_100109308(v30);
  __chkstk_darwin(v31);
  sub_100109314();
  sub_100109328(v32);
  uint64_t v148 = (void *)type metadata accessor for FloatingPointRoundingRule();
  sub_100179C0C();
  uint64_t v147 = v33;
  __chkstk_darwin(v34);
  sub_100109314();
  sub_100109338(v35);
  uint64_t v36 = sub_10017DF08(&qword_100E6BCB0);
  uint64_t v37 = sub_100109308(v36);
  __chkstk_darwin(v37);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v38);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v39);
  sub_100109328((uint64_t)&v131 - v40);
  uint64_t v144 = (void (*)(char *, uint64_t))type metadata accessor for AppConfiguration();
  sub_100179C0C();
  uint64_t v42 = v41;
  __chkstk_darwin(v43);
  sub_1001626E0();
  uint64_t v46 = v45 - v44;
  uint64_t v47 = type metadata accessor for TemperatureScaleConfiguration();
  uint64_t v48 = sub_100109308(v47);
  __chkstk_darwin(v48);
  sub_100109314();
  sub_100109328(v49);
  type metadata accessor for ConditionUnits();
  sub_100179C0C();
  __chkstk_darwin(v50);
  sub_1001626E0();
  type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  uint64_t v51 = (int *)type metadata accessor for TemperatureAveragesHeroChartInput();
  uint64_t v157 = a1 + v51[6];
  UnitManager.conditionUnits(locale:)();
  swift_release();
  uint64_t v52 = (void *)ConditionUnits.temperature.getter();
  uint64_t v53 = sub_100163EE8();
  v54(v53);
  unint64_t v145 = sub_1001433AC();
  id v55 = [self celsius];
  char v56 = static NSObject.== infix(_:_:)();

  if (v56) {
    double v57 = 3.0;
  }
  else {
    double v57 = 5.0;
  }
  sub_1001B1E64(v165, v165[3]);
  sub_100163EE8();
  dispatch thunk of AppConfigurationManagerType.appConfiguration.getter();
  AppConfiguration.temperatureScale.getter();
  (*(void (**)(uint64_t, void))(v42 + 8))(v46, v144);
  uint64_t v58 = a1;
  uint64_t v59 = sub_100163EE8();
  uint64_t v142 = v52;
  long long v62 = sub_100BC7480(v59, v60, (uint64_t)v52, v61);
  uint64_t v64 = v63;
  uint64_t v65 = sub_100163EE8();
  uint64_t v144 = (void (*)(char *, uint64_t))sub_100BC83A4(v65, v66, (uint64_t)v52);
  uint64_t v140 = v67;
  uint64_t v69 = v68;
  uint64_t v143 = v51;
  uint64_t v70 = v51[9];
  uint64_t v71 = v51[10];
  uint64_t v141 = v58;
  uint64_t v72 = v58 + v70;
  uint64_t v73 = v58 + v71;
  uint64_t v74 = v158;
  sub_1001A1440();
  uint64_t v75 = v159;
  sub_1001A1440();
  uint64_t v76 = v160;
  uint64_t v132 = v72;
  uint64_t v133 = v73;
  sub_1001A1440();
  uint64_t v77 = v74;
  double v78 = sub_100BC8D3C(v74, (uint64_t)v62);
  double v80 = v79;
  uint64_t v134 = v64;
  double v81 = sub_100BC9004(v75, v76, v64);
  double v83 = v82;
  uint64_t v84 = enum case for FloatingPointRoundingRule.up(_:);
  uint64_t v85 = v147;
  long long v86 = *(void (**)(uint64_t, uint64_t, void *))(v147 + 104);
  uint64_t v87 = v146;
  uint64_t v88 = (uint64_t)v148;
  v86(v146, enum case for FloatingPointRoundingRule.up(_:), v148);
  Double.nearestMultiple(of:roundingRule:)();
  double v90 = v89;
  uint64_t v91 = *(void (**)(uint64_t))(v85 + 8);
  uint64_t v92 = sub_100189738();
  v91(v92);
  v86(v87, v84, (void *)v88);
  Double.nearestMultiple(of:roundingRule:)();
  double v94 = v93;
  uint64_t v95 = sub_100189738();
  v91(v95);
  sub_1002F95D0(v94, v90, v57);
  uint64_t v147 = v96;
  uint64_t v97 = v77;
  uint64_t v98 = v77;
  uint64_t v99 = v142;
  uint64_t v100 = v141;
  sub_100BC9394(v98, v142, v141, v154, v90);
  sub_100BC9DA0(v97, v155);
  uint64_t v148 = v62;
  uint64_t v101 = v100;
  uint64_t v102 = v165;
  sub_100BCA008(v144, v140, v69, v101, v99, v156);
  uint64_t v103 = v102;
  swift_bridgeObjectRelease();
  uint64_t v104 = v150;
  swift_bridgeObjectRelease();
  uint64_t v105 = v151;
  swift_bridgeObjectRelease();
  sub_10017DF08(&qword_100E6B7C8);
  uint64_t v106 = v149;
  Trend.currentValue.getter();
  Measurement<>.converted(to:)();
  uint64_t v107 = *(void (**)(void))(v104 + 8);
  sub_10017CA60();
  v107();
  uint64_t v108 = v152;
  Trend.baseline.getter();
  uint64_t v109 = v153;
  TrendBaseline.value.getter();
  v166[1](v108, v109);
  Measurement<>.converted(to:)();
  uint64_t v153 = v107;
  ((void (*)(uint64_t, uint64_t))v107)(v106, v105);
  id v110 = v99;
  Measurement.init(value:unit:)();
  uint64_t v166 = (void (**)(void, void (*)(void)))v110;
  Measurement.init(value:unit:)();
  sub_1001B1E64(v103 + 6, v103[9]);
  uint64_t v111 = v157;
  sub_100571410(v157, 0, (uint64_t)v167);
  sub_1001B1E64(v103 + 6, v103[9]);
  sub_100571410(v111, 1, (uint64_t)v171);
  uint64_t v112 = v167[0];
  uint64_t v113 = v167[1];
  uint64_t v114 = v169;
  uint64_t v115 = v170;
  sub_10024D364((uint64_t)v168, (uint64_t)v176, &qword_100E65F18);
  sub_1002F8DD8((uint64_t)v176);
  TemperatureScaleConfiguration.gradientValueRange(for:)();
  TemperatureScaleConfiguration.gradient.getter();
  Gradient.init(_:)();
  id result = (id)DetailChartGradientModel.init(gradient:startValue:endValue:)();
  if (v78 <= v80 + 0.01) {
    double v78 = v80 + 0.01;
  }
  if (v80 > v78)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v81 <= v83 + 0.01) {
    double v81 = v83 + 0.01;
  }
  if (v83 > v81) {
    goto LABEL_15;
  }
  *(void *)&long long v177 = v112;
  *((void *)&v177 + 1) = v113;
  uint64_t v178 = v171[0];
  uint64_t v179 = v171[1];
  uint64_t v180 = v114;
  uint64_t v181 = v115;
  uint64_t v182 = v173;
  uint64_t v183 = v174;
  sub_10024D364((uint64_t)v172, (uint64_t)v175, &qword_100E65F18);
  sub_1002F8DD8((uint64_t)v175);
  uint64_t v117 = v162;
  uint64_t v118 = sub_100BCB1F8(v80, v78, v83, v81, (uint64_t)v166, v163, v162, v161, v157);
  uint64_t v120 = v119;
  uint64_t v122 = v121;
  char v124 = v123;
  uint64_t v125 = v153;
  ((void (*)(uint64_t, uint64_t))v153)(v117, v105);
  sub_10017CA60();
  v125();
  sub_10017CA60();
  v125();
  sub_10017CA60();
  v125();
  sub_1001781AC(v160, &qword_100E6BCB0);
  sub_1001781AC(v159, &qword_100E6BCB0);
  id result = (id)sub_1001781AC(v158, &qword_100E6BCB0);
  if (v94 > v90)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  uint64_t v126 = *(void (**)(uint64_t, uint64_t, uint64_t))(v136 + 16);
  uint64_t v127 = v138;
  uint64_t v128 = v137;
  v126(v138, v132, v137);
  uint64_t v129 = v135;
  v126(v135, v133, v128);
  sub_1002805DC(&v177, (uint64_t)v148, v134, v118, v120, v122, v124 & 1, (uint64_t)v166, v139, v94, v90, v80, v78, v83, v81, v164, v147, (unint64_t)v166, 0,
    0,
    v155,
    v154,
    (uint64_t)v156,
    v127,
    v129);
  id v130 = v166;

  return v130;
}

void *sub_100BC7480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v98 = a4;
  uint64_t v121 = a3;
  uint64_t v128 = a2;
  uint64_t v97 = type metadata accessor for WeatherFormatPlaceholder();
  uint64_t v123 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v96 = (char *)v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle();
  uint64_t v122 = *(void **)(v95 - 8);
  __chkstk_darwin(v95);
  double v94 = (char *)v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for DetailChartDataElement.ValueLabel();
  uint64_t v109 = *(void (***)(void *, void, uint64_t))(v120 - 8);
  __chkstk_darwin(v120);
  uint64_t v119 = (void *)((char *)v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v118 = sub_10017DF08(&qword_100E9D3A0);
  char v124 = *(void (***)(char *, uint64_t))(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v117 = (char *)v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_10017DF08(&qword_100E65250);
  uint64_t v125 = *(void (***)(char *, uint64_t))(v115 - 8);
  uint64_t v9 = __chkstk_darwin(v115);
  double v93 = (char *)v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v116 = (char *)v74 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v114 = (char *)v74 - v14;
  __chkstk_darwin(v13);
  uint64_t v113 = (char *)v74 - v15;
  uint64_t v112 = type metadata accessor for DetailChartDataElement();
  uint64_t v99 = *(void *)(v112 - 8);
  uint64_t v16 = __chkstk_darwin(v112);
  uint64_t v18 = (char *)v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)v74 - v19;
  uint64_t v92 = type metadata accessor for Date();
  uint64_t v110 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v129 = (char *)v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for HourTemperatureStatistics();
  uint64_t v107 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v127 = (char *)v74 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for HourWeather();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v126 = (char *)v74 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_10017DF08(&qword_100E6B6D8);
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)v74 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  uint64_t v31 = v128;
  swift_bridgeObjectRetain();
  sub_100BCBB84(1, a1, v31, 1);
  if (*(void *)(v32 + 16))
  {
    uint64_t v111 = *(void *)(v32 + 16);
    double v90 = v20;
    long long v86 = &v30[*(int *)(v27 + 48)];
    uint64_t v33 = v32;
    uint64_t v85 = type metadata accessor for UnitManager();
    unint64_t v34 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    v74[1] = v33;
    uint64_t v35 = v33 + v34;
    uint64_t v84 = *(void *)(v28 + 72);
    double v83 = (void (**)(char *, char *, uint64_t))(v25 + 32);
    double v82 = (void (**)(char *, char *, uint64_t))(v107 + 32);
    double v81 = (void (**)(char *, uint64_t))(v110 + 8);
    ++v124;
    ++v125;
    LODWORD(v110) = enum case for DetailChartDataElement.ValueLabel.text(_:);
    v109 += 13;
    unsigned int v80 = enum case for WeatherFormatPlaceholder.none(_:);
    double v79 = (void (**)(char *, void, uint64_t))(v123 + 104);
    double v78 = (void (**)(char *, uint64_t))(v123 + 8);
    uint64_t v77 = (void (**)(char *, uint64_t))(v122 + 1);
    uint64_t v108 = v99 + 32;
    uint64_t v76 = (void (**)(char *, uint64_t))(v107 + 8);
    uint64_t v75 = (void (**)(char *, uint64_t))(v25 + 8);
    uint64_t v36 = _swiftEmptyArrayStorage;
    uint64_t v122 = _swiftEmptyArrayStorage;
    uint64_t v38 = v126;
    uint64_t v37 = v127;
    uint64_t v91 = v18;
    uint64_t v89 = v22;
    uint64_t v88 = v24;
    uint64_t v87 = v30;
    do
    {
      uint64_t v106 = v36;
      uint64_t v107 = v35;
      sub_1001262FC(v35, (uint64_t)v30, &qword_100E6B6D8);
      (*v83)(v38, v30, v24);
      (*v82)(v37, v86, v22);
      uint64_t v39 = v129;
      HourWeather.date.getter();
      uint64_t v123 = Date.formattedHours(timeZone:forAccessibility:)();
      uint64_t v128 = v40;
      (*v81)(v39, v92);
      HourWeather.date.getter();
      uint64_t v41 = v114;
      HourWeather.temperature.getter();
      uint64_t v42 = v113;
      uint64_t v43 = v115;
      Measurement<>.converted(to:)();
      uint64_t v44 = *v125;
      (*v125)(v41, v43);
      Measurement.value.getter();
      v44(v42, v43);
      uint64_t v45 = v117;
      HourTemperatureStatistics.percentiles.getter();
      uint64_t v46 = v116;
      uint64_t v47 = v118;
      Percentiles.p50.getter();
      uint64_t v104 = *v124;
      v104(v45, v47);
      Measurement<>.converted(to:)();
      v44(v46, v43);
      Measurement.value.getter();
      v44(v41, v43);
      uint64_t v49 = v119;
      uint64_t v48 = v120;
      *uint64_t v119 = 0;
      v49[1] = 0xE000000000000000;
      uint64_t v103 = *v109;
      v103(v49, v110, v48);
      swift_bridgeObjectRetain_n();
      uint64_t v50 = v93;
      HourWeather.temperature.getter();
      Measurement<>.converted(to:)();
      v44(v50, v43);
      uint64_t v51 = v94;
      static WeatherFormatStyle<>.weather.getter();
      uint64_t v52 = v96;
      uint64_t v53 = v97;
      (*v79)(v96, v80, v97);
      static UnitManager.standard.getter();
      sub_100187008((unint64_t *)&qword_100E6BF60, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
      uint64_t v54 = v95;
      uint64_t v102 = (void (*)(unint64_t, char *, uint64_t))Measurement.formatted<A>(_:placeholder:unitManager:)();
      swift_release();
      (*v78)(v52, v53);
      (*v77)(v51, v54);
      uint64_t v105 = v44;
      v44(v46, v43);
      id v55 = v90;
      DetailChartDataElement.init(date:value:secondValue:thirdValue:valueLabel:dateLabel:accessibilityDateString:accessibilityValueDescription:color:textColor:)();
      uint64_t v56 = (uint64_t)v122;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v56 = sub_1007E96BC(0, *(void *)(v56 + 16) + 1, 1, v56);
      }
      unint64_t v58 = *(void *)(v56 + 16);
      unint64_t v57 = *(void *)(v56 + 24);
      if (v58 >= v57 >> 1) {
        uint64_t v56 = sub_1007E96BC(v57 > 1, v58 + 1, 1, v56);
      }
      *(void *)(v56 + 16) = v58 + 1;
      unint64_t v59 = (*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80);
      uint64_t v122 = (void *)v56;
      unint64_t v101 = v59;
      uint64_t v100 = *(void *)(v99 + 72);
      uint64_t v102 = *(void (**)(unint64_t, char *, uint64_t))(v99 + 32);
      v102(v56 + v59 + v100 * v58, v55, v112);
      HourWeather.date.getter();
      uint64_t v60 = v117;
      HourTemperatureStatistics.percentiles.getter();
      uint64_t v61 = v114;
      uint64_t v62 = v118;
      Percentiles.p90.getter();
      uint64_t v63 = v104;
      v104(v60, v62);
      uint64_t v64 = v113;
      uint64_t v65 = v115;
      Measurement<>.converted(to:)();
      uint64_t v66 = v105;
      v105(v61, v65);
      Measurement.value.getter();
      v66(v64, v65);
      HourTemperatureStatistics.percentiles.getter();
      uint64_t v67 = v116;
      Percentiles.p10.getter();
      v63(v60, v62);
      Measurement<>.converted(to:)();
      v66(v67, v65);
      Measurement.value.getter();
      v66(v61, v65);
      uint64_t v69 = v119;
      uint64_t v68 = v120;
      *uint64_t v119 = 0;
      v69[1] = 0xE000000000000000;
      v103(v69, v110, v68);
      swift_bridgeObjectRetain();
      uint64_t v70 = v91;
      DetailChartDataElement.init(date:value:secondValue:thirdValue:valueLabel:dateLabel:accessibilityDateString:accessibilityValueDescription:color:textColor:)();
      uint64_t v36 = v106;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v36 = (void *)sub_1007E96BC(0, v36[2] + 1, 1, (uint64_t)v36);
      }
      uint64_t v30 = v87;
      unint64_t v72 = v36[2];
      unint64_t v71 = v36[3];
      uint64_t v38 = v126;
      if (v72 >= v71 >> 1) {
        uint64_t v36 = (void *)sub_1007E96BC(v71 > 1, v72 + 1, 1, (uint64_t)v36);
      }
      v36[2] = v72 + 1;
      v102((unint64_t)v36 + v101 + v72 * v100, v70, v112);
      uint64_t v37 = v127;
      uint64_t v22 = v89;
      (*v76)(v127, v89);
      uint64_t v24 = v88;
      (*v75)(v38, v88);
      uint64_t v35 = v107 + v84;
      --v111;
    }
    while (v111);
    swift_bridgeObjectRelease();
    return v122;
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
}

void *sub_100BC83A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v78 = sub_10017DF08(&qword_100E9D3A0);
  double v83 = *(char **)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v77 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  __chkstk_darwin(v7 - 8);
  uint64_t v88 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E65250);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v87 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  long long v86 = (char *)&v63 - v13;
  uint64_t v85 = type metadata accessor for InterpolationElement();
  uint64_t v14 = *(void *)(v85 - 8);
  uint64_t v15 = __chkstk_darwin(v85);
  uint64_t v17 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v76 = (char *)&v63 - v19;
  __chkstk_darwin(v18);
  unint64_t v72 = (char *)&v63 - v20;
  uint64_t v74 = type metadata accessor for HourTemperatureStatistics();
  uint64_t v21 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  double v90 = (char *)&v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for HourWeather();
  uint64_t v23 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v89 = (char *)&v63 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10017DF08(&qword_100EB71C8);
  __chkstk_darwin(v25 - 8);
  uint64_t v27 = (char *)&v63 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = a1;
  uint64_t v92 = 0;
  uint64_t v93 = a2;
  uint64_t v94 = 0;
  char v95 = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100BCC144((uint64_t)v27);
  uint64_t v28 = sub_10017DF08(&qword_100E6B6D8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28) == 1)
  {
    double v79 = _swiftEmptyArrayStorage;
    unsigned int v80 = _swiftEmptyArrayStorage;
    double v81 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v66 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    uint64_t v65 = (void (**)(char *, char *, uint64_t))(v21 + 32);
    uint64_t v30 = v23 + 32;
    uint64_t v31 = (void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v70 = v14;
    uint64_t v84 = v14 + 32;
    uint64_t v75 = (void (**)(char *, uint64_t))(v83 + 8);
    uint64_t v64 = (void (**)(char *, uint64_t))(v21 + 8);
    uint64_t v68 = v30;
    uint64_t v63 = (void (**)(char *, uint64_t))(v30 - 24);
    double v79 = _swiftEmptyArrayStorage;
    unsigned int v80 = _swiftEmptyArrayStorage;
    double v81 = _swiftEmptyArrayStorage;
    uint64_t v71 = a3;
    uint64_t v32 = v74;
    unint64_t v34 = v89;
    uint64_t v33 = v90;
    uint64_t v35 = v73;
    uint64_t v69 = v17;
    uint64_t v67 = v27;
    do
    {
      uint64_t v36 = &v27[*(int *)(v28 + 48)];
      v66(v34, v27, v35);
      (*v65)(v33, v36, v32);
      uint64_t v37 = v87;
      HourWeather.temperature.getter();
      uint64_t v38 = v86;
      Measurement<>.converted(to:)();
      uint64_t v39 = *v31;
      (*v31)(v37, v9);
      Measurement.value.getter();
      v39(v38, v9);
      HourWeather.date.getter();
      uint64_t v40 = v72;
      InterpolationElement.init(value:date:)();
      uint64_t v41 = (uint64_t)v81;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v41 = sub_1007E9DE8(0, *(void *)(v41 + 16) + 1, 1, v41);
      }
      unint64_t v43 = *(void *)(v41 + 16);
      unint64_t v42 = *(void *)(v41 + 24);
      if (v43 >= v42 >> 1) {
        uint64_t v41 = sub_1007E9DE8(v42 > 1, v43 + 1, 1, v41);
      }
      *(void *)(v41 + 16) = v43 + 1;
      unint64_t v44 = (*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
      double v81 = (void *)v41;
      unint64_t v82 = v44;
      unint64_t v45 = v41 + v44;
      uint64_t v46 = *(void *)(v70 + 72);
      double v83 = *(char **)(v70 + 32);
      ((void (*)(unint64_t, char *, uint64_t))v83)(v45 + v46 * v43, v40, v85);
      uint64_t v47 = v77;
      HourTemperatureStatistics.percentiles.getter();
      uint64_t v48 = v87;
      uint64_t v49 = v78;
      Percentiles.p90.getter();
      uint64_t v50 = *v75;
      (*v75)(v47, v49);
      uint64_t v51 = v86;
      Measurement<>.converted(to:)();
      v39(v48, v9);
      Measurement.value.getter();
      v39(v51, v9);
      HourWeather.date.getter();
      InterpolationElement.init(value:date:)();
      uint64_t v52 = (uint64_t)v79;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v52 = sub_1007E9DE8(0, *(void *)(v52 + 16) + 1, 1, v52);
      }
      unint64_t v54 = *(void *)(v52 + 16);
      unint64_t v53 = *(void *)(v52 + 24);
      if (v54 >= v53 >> 1) {
        uint64_t v52 = sub_1007E9DE8(v53 > 1, v54 + 1, 1, v52);
      }
      *(void *)(v52 + 16) = v54 + 1;
      double v79 = (void *)v52;
      ((void (*)(unint64_t, char *, uint64_t))v83)(v52 + v82 + v54 * v46, v76, v85);
      id v55 = v77;
      HourTemperatureStatistics.percentiles.getter();
      uint64_t v56 = v87;
      uint64_t v57 = v78;
      Percentiles.p10.getter();
      v50(v55, v57);
      unint64_t v58 = v86;
      Measurement<>.converted(to:)();
      v39(v56, v9);
      Measurement.value.getter();
      v39(v58, v9);
      HourWeather.date.getter();
      unint64_t v59 = v69;
      InterpolationElement.init(value:date:)();
      uint64_t v60 = (uint64_t)v80;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v60 = sub_1007E9DE8(0, *(void *)(v60 + 16) + 1, 1, v60);
      }
      unint64_t v62 = *(void *)(v60 + 16);
      unint64_t v61 = *(void *)(v60 + 24);
      if (v62 >= v61 >> 1) {
        uint64_t v60 = sub_1007E9DE8(v61 > 1, v62 + 1, 1, v60);
      }
      uint64_t v35 = v73;
      *(void *)(v60 + 16) = v62 + 1;
      unsigned int v80 = (void *)v60;
      ((void (*)(unint64_t, char *, uint64_t))v83)(v60 + v82 + v62 * v46, v59, v85);
      uint64_t v33 = v90;
      uint64_t v32 = v74;
      (*v64)(v90, v74);
      unint64_t v34 = v89;
      (*v63)(v89, v35);
      uint64_t v27 = v67;
      sub_100BCC144((uint64_t)v67);
      uint64_t v28 = sub_10017DF08(&qword_100E6B6D8);
    }
    while (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28) != 1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v81;
}

double sub_100BC8D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DetailChartDataElement();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E6BCB0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ExtremaResult();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001262FC(a1, (uint64_t)v10, &qword_100E6BCB0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11) == 1)
  {
    sub_1001781AC((uint64_t)v10, &qword_100E6BCB0);
    uint64_t v15 = *(void *)(a2 + 16);
    if (v15)
    {
      uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      uint64_t v17 = v5 + 16;
      uint64_t v16 = v18;
      uint64_t v19 = a2 + ((*(unsigned __int8 *)(v17 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 64));
      uint64_t v20 = *(void *)(v17 + 56);
      swift_bridgeObjectRetain();
      double v21 = -1.79769313e308;
      double v22 = 1.79769313e308;
      do
      {
        v16(v7, v19, v4);
        DetailChartDataElement.value.getter();
        if (v21 <= v23) {
          double v21 = v23;
        }
        DetailChartDataElement.value.getter();
        if (v24 < v22) {
          double v22 = v24;
        }
        (*(void (**)(char *, uint64_t))(v17 - 8))(v7, v4);
        v19 += v20;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease();
    }
    else
    {
      return -1.79769313e308;
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    ExtremaResult.maxValue.getter();
    double v21 = v25;
    ExtremaResult.minValue.getter();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return v21;
}

double sub_100BC9004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v36 = a2;
  uint64_t v37 = a3;
  uint64_t v4 = type metadata accessor for DetailChartDataElement();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E6BCB0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v36 - v12;
  uint64_t v14 = type metadata accessor for ExtremaResult();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v36 - v19;
  sub_1001262FC(a1, (uint64_t)v13, &qword_100E6BCB0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14) == 1)
  {
    uint64_t v11 = v13;
  }
  else
  {
    double v21 = v13;
    double v22 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v22(v20, v21, v14);
    sub_1001262FC(v36, (uint64_t)v11, &qword_100E6BCB0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v14) != 1)
    {
      v22(v18, v11, v14);
      ExtremaResult.maxValue.getter();
      double v29 = v33;
      ExtremaResult.minValue.getter();
      unint64_t v34 = *(void (**)(char *, uint64_t))(v15 + 8);
      v34(v18, v14);
      v34(v20, v14);
      return v29;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  }
  sub_1001781AC((uint64_t)v11, &qword_100E6BCB0);
  uint64_t v23 = *(void *)(v37 + 16);
  if (!v23) {
    return -1.79769313e308;
  }
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v24 = v5 + 16;
  double v25 = v26;
  uint64_t v27 = v37 + ((*(unsigned __int8 *)(v24 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 64));
  uint64_t v28 = *(void *)(v24 + 56);
  swift_bridgeObjectRetain();
  double v29 = -1.79769313e308;
  double v30 = 1.79769313e308;
  do
  {
    v25(v7, v27, v4);
    DetailChartDataElement.value.getter();
    if (v29 <= v31) {
      double v29 = v31;
    }
    DetailChartDataElement.secondValue.getter();
    if (v32 < v30) {
      double v30 = v32;
    }
    (*(void (**)(char *, uint64_t))(v24 - 8))(v7, v4);
    v27 += v28;
    --v23;
  }
  while (v23);
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t sub_100BC9394@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v88 = a3;
  id v79 = a2;
  uint64_t v93 = a4;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v90 = *(void *)(v7 - 8);
  uint64_t v91 = v7;
  __chkstk_darwin(v7);
  uint64_t v89 = (char *)v71 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for WeatherFormatPlaceholder();
  uint64_t v86 = *(void *)(v9 - 8);
  uint64_t v87 = v9;
  __chkstk_darwin(v9);
  double v83 = (char *)v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E63730);
  __chkstk_darwin(v11 - 8);
  uint64_t v78 = (uint64_t)v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle();
  uint64_t v81 = *(void *)(v13 - 8);
  uint64_t v82 = v13;
  __chkstk_darwin(v13);
  unsigned int v80 = (char *)v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Locale.Language();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = type metadata accessor for Locale();
  uint64_t v19 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  double v21 = (char *)v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10017DF08(&qword_100E65250);
  uint64_t v84 = *(void *)(v22 - 8);
  uint64_t v85 = v22;
  __chkstk_darwin(v22);
  uint64_t v94 = (char *)v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10017DF08(&qword_100E6BCB0);
  __chkstk_darwin(v24 - 8);
  uint64_t v26 = (char *)v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for ExtremaResult();
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  double v30 = (char *)v71 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = a1;
  uint64_t v33 = v32;
  sub_1001262FC(v31, (uint64_t)v26, &qword_100E6BCB0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v33) == 1)
  {
    sub_1001781AC((uint64_t)v26, &qword_100E6BCB0);
    unint64_t v34 = (int *)type metadata accessor for PeakUpperMarkModel(0);
    uint64_t v35 = v93;
    uint64_t v36 = 1;
  }
  else
  {
    uint64_t v76 = v28;
    uint64_t v77 = v33;
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v30, v26, v33);
    uint64_t v75 = v30;
    ExtremaResult.maxValue.getter();
    sub_1001433AC();
    id v37 = v79;
    Measurement.init(value:unit:)();
    static Locale.current.getter();
    Locale.language.getter();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v92);
    char v38 = Locale.Language.prefersFullTemperatureScale.getter();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    if (v38)
    {
      static Set<>.value.getter();
      uint64_t v39 = v78;
      _s7Weather24LocationCompositionStateOwst_0(v78, 1, 1, v92);
      uint64_t v40 = v80;
      static WeatherFormatStyle<>.weather(_:locale:)();
      swift_bridgeObjectRelease();
      sub_1001781AC(v39, &qword_100E63730);
      unsigned int v73 = enum case for WeatherFormatPlaceholder.none(_:);
      uint64_t v41 = v86;
      unint64_t v72 = *(void (**)(char *))(v86 + 104);
      unint64_t v42 = v83;
      uint64_t v43 = v87;
      v72(v83);
      v71[1] = type metadata accessor for UnitManager();
      static UnitManager.standard.getter();
      v71[0] = sub_100187008((unint64_t *)&qword_100E6BF60, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
      uint64_t v44 = v85;
      uint64_t v45 = v82;
      id v79 = (id)Measurement.formatted<A>(_:placeholder:unitManager:)();
      uint64_t v74 = v46;
      swift_release();
      uint64_t v86 = *(void *)(v41 + 8);
      ((void (*)(char *, uint64_t))v86)(v42, v43);
      uint64_t v81 = *(void *)(v81 + 8);
      ((void (*)(char *, uint64_t))v81)(v40, v45);
      static Set<>.unit.getter();
      _s7Weather24LocationCompositionStateOwst_0(v39, 1, 1, v92);
      static WeatherFormatStyle<>.weather(_:locale:)();
      swift_bridgeObjectRelease();
      sub_1001781AC(v39, &qword_100E63730);
      ((void (*)(char *, void, uint64_t))v72)(v42, v73, v43);
      static UnitManager.standard.getter();
      uint64_t v47 = Measurement.formatted<A>(_:placeholder:unitManager:)();
      uint64_t v49 = v48;
      swift_release();
      uint64_t v50 = v47;
      ((void (*)(char *, uint64_t))v86)(v42, v43);
      uint64_t v51 = v44;
      ((void (*)(char *, uint64_t))v81)(v40, v45);
    }
    else
    {
      uint64_t v52 = v80;
      static WeatherFormatStyle<>.weather.getter();
      uint64_t v54 = v86;
      uint64_t v53 = v87;
      id v55 = v83;
      (*(void (**)(char *, void, uint64_t))(v86 + 104))(v83, enum case for WeatherFormatPlaceholder.none(_:), v87);
      type metadata accessor for UnitManager();
      static UnitManager.standard.getter();
      sub_100187008((unint64_t *)&qword_100E6BF60, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
      uint64_t v51 = v85;
      uint64_t v56 = v82;
      id v79 = (id)Measurement.formatted<A>(_:placeholder:unitManager:)();
      uint64_t v74 = v57;
      swift_release();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v53);
      (*(void (**)(char *, uint64_t))(v81 + 8))(v52, v56);
      uint64_t v50 = 0;
      uint64_t v49 = 0;
    }
    uint64_t v58 = v93;
    uint64_t v59 = type metadata accessor for TemperatureAveragesHeroChartInput();
    uint64_t v60 = v89;
    uint64_t v62 = v90;
    uint64_t v61 = v91;
    (*(void (**)(char *, uint64_t, uint64_t))(v90 + 16))(v89, v88 + *(int *)(v59 + 36), v91);
    id v63 = [self mainBundle];
    v95._unint64_t object = (void *)0x8000000100CC0EF0;
    v64._uint64_t countAndFlagsBits = 0x9980E27961646F54;
    v64._unint64_t object = (void *)0xAE00686769482073;
    v65._uint64_t countAndFlagsBits = 0;
    v65._unint64_t object = (void *)0xE000000000000000;
    v95._uint64_t countAndFlagsBits = 0xD000000000000035;
    Swift::String v66 = NSLocalizedString(_:tableName:bundle:value:comment:)(v64, (Swift::String_optional)0, (NSBundle)v63, v65, v95);

    (*(void (**)(char *, uint64_t))(v84 + 8))(v94, v51);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v75, v77);
    (*(void (**)(uint64_t, char *, uint64_t))(v62 + 32))(v58, v60, v61);
    unint64_t v34 = (int *)type metadata accessor for PeakUpperMarkModel(0);
    *(double *)(v58 + v34[5]) = a5;
    uint64_t v67 = (void *)(v58 + v34[6]);
    uint64_t v68 = v74;
    void *v67 = v79;
    v67[1] = v68;
    uint64_t v69 = (uint64_t *)(v58 + v34[7]);
    uint64_t *v69 = v50;
    v69[1] = v49;
    *(Swift::String *)(v58 + v34[8]) = v66;
    uint64_t v35 = v58;
    uint64_t v36 = 0;
  }
  return _s7Weather24LocationCompositionStateOwst_0(v35, v36, 1, (uint64_t)v34);
}

uint64_t sub_100BC9DA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E6BCB0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for ExtremaResult();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001262FC(a1, (uint64_t)v10, &qword_100E6BCB0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11) == 1)
  {
    sub_1001781AC((uint64_t)v10, &qword_100E6BCB0);
    uint64_t v15 = type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel(0);
    uint64_t v16 = a2;
    uint64_t v17 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    ExtremaResult.maxDate.getter();
    ExtremaResult.maxValue.getter();
    uint64_t v19 = v18;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, v4);
    uint64_t v15 = type metadata accessor for TemperatureAveragesHeroChartViewModel.PeakMarkModel(0);
    *(void *)(a2 + *(int *)(v15 + 20)) = v19;
    uint64_t v16 = a2;
    uint64_t v17 = 0;
  }
  return _s7Weather24LocationCompositionStateOwst_0(v16, v17, 1, v15);
}

uint64_t sub_100BCA008@<X0>(void (*a1)(char *, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, void *a5@<X5>, void *a6@<X8>)
{
  id v138 = a5;
  uint64_t v172 = a4;
  uint64_t v153 = a3;
  uint64_t v156 = a2;
  uint64_t v159 = a1;
  uint64_t v167 = a6;
  uint64_t v7 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v7 - 8);
  uint64_t v142 = (char *)&v128 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = type metadata accessor for AttributedString();
  uint64_t v145 = *(void *)(v146 - 8);
  __chkstk_darwin(v146);
  uint64_t v143 = (char *)&v128 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = type metadata accessor for LollipopDetailViewModel(0);
  __chkstk_darwin(v147);
  uint64_t v148 = (uint64_t *)((char *)&v128 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v141 = type metadata accessor for LollipopMarkModel(0);
  __chkstk_darwin(v141);
  uint64_t v144 = (char *)&v128 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = type metadata accessor for MidpointInterpolator.InterpolationMode();
  unint64_t v161 = *(void *)(v164 - 8);
  uint64_t v12 = __chkstk_darwin(v164);
  uint64_t v152 = (char *)&v128 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v155 = (char *)&v128 - v15;
  __chkstk_darwin(v14);
  uint64_t v163 = (char *)&v128 - v16;
  uint64_t v165 = type metadata accessor for MidpointInterpolator();
  uint64_t v160 = *(void *)(v165 - 8);
  uint64_t v17 = __chkstk_darwin(v165);
  uint64_t v151 = (char *)&v128 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v154 = (char *)&v128 - v20;
  __chkstk_darwin(v19);
  uint64_t v158 = (char *)&v128 - v21;
  uint64_t v166 = type metadata accessor for Date();
  uint64_t v171 = *(void *)(v166 - 8);
  uint64_t v22 = __chkstk_darwin(v166);
  uint64_t v157 = (char *)&v128 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v162 = (char *)&v128 - v24;
  uint64_t v25 = sub_10017DF08(&qword_100E6B670);
  __chkstk_darwin(v25 - 8);
  uint64_t v27 = (char *)&v128 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = type metadata accessor for DetailHeroChartLollipopPosition(0);
  __chkstk_darwin(v169);
  uint64_t v168 = (uint64_t *)((char *)&v128 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v140 = type metadata accessor for DetailHeroChartLollipopModel(0);
  __chkstk_darwin(v140);
  uint64_t v170 = (uint64_t *)((char *)&v128 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v30 = sub_10017DF08(&qword_100E65250);
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v135 = (char *)&v128 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v150 = (char *)&v128 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v149 = (char *)&v128 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v40 = (char *)&v128 - v39;
  uint64_t v41 = __chkstk_darwin(v38);
  uint64_t v43 = (char *)&v128 - v42;
  __chkstk_darwin(v41);
  uint64_t v45 = (char *)&v128 - v44;
  uint64_t v139 = v6;
  uint64_t v46 = *(void *)(v6 + 72);
  uint64_t v134 = (void *)(v6 + 48);
  sub_1001B1E64((void *)(v6 + 48), v46);
  uint64_t v47 = self;
  id v48 = [v47 celsius];
  unint64_t v49 = sub_1001433AC();
  Measurement.init(value:unit:)();
  id v50 = [v47 celsius];
  Measurement.init(value:unit:)();
  id v51 = [v47 celsius];
  unint64_t v133 = v49;
  Measurement.init(value:unit:)();
  uint64_t v52 = (int *)type metadata accessor for TemperatureAveragesHeroChartInput();
  uint64_t v53 = v172;
  uint64_t v132 = v172 + v52[6];
  sub_10057278C(v132, (uint64_t *)&v173);
  uint64_t v54 = *(void (**)(char *, uint64_t))(v31 + 8);
  v54(v40, v30);
  v54(v43, v30);
  uint64_t v55 = v53;
  uint64_t v56 = v170;
  uint64_t v137 = v30;
  uint64_t v136 = v31 + 8;
  v54(v45, v30);
  uint64_t v57 = v169;
  sub_100BCC364((uint64_t)&v173, v56);
  long long v182 = v173;
  sub_1002F8DD8((uint64_t)&v182);
  sub_10024D364((uint64_t)v174, (uint64_t)v181, &qword_100E65F18);
  sub_1002F8DD8((uint64_t)v181);
  long long v180 = v175;
  sub_1002F8DD8((uint64_t)&v180);
  sub_1001262FC(v55 + v52[8], (uint64_t)v27, &qword_100E6B670);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v57) == 1)
  {
    sub_1001781AC((uint64_t)v27, &qword_100E6B670);
    return sub_1000B0CF0((uint64_t)v56, (uint64_t)v167, (void (*)(void))type metadata accessor for DetailHeroChartLollipopModel);
  }
  else
  {
    uint64_t v129 = v54;
    uint64_t v58 = v168;
    sub_1000B0CF0((uint64_t)v27, (uint64_t)v168, (void (*)(void))type metadata accessor for DetailHeroChartLollipopPosition);
    uint64_t v59 = (char *)v58 + *(int *)(v57 + 20);
    uint64_t v60 = (char *)(v55 + v52[10]);
    sub_100187008((unint64_t *)&qword_100E66CC0, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v61 = v166;
    char v62 = dispatch thunk of static Comparable.< infix(_:_:)();
    uint64_t v63 = v171;
    Swift::String v64 = *(void (**)(char *, uint64_t, uint64_t))(v171 + 16);
    uint64_t v131 = v171 + 16;
    id v130 = v64;
    Swift::String v65 = v157;
    if (v62)
    {
      Swift::String v66 = v157;
      uint64_t v67 = v60;
    }
    else
    {
      Swift::String v66 = v157;
      uint64_t v67 = v59;
    }
    v64(v66, (uint64_t)v67, v61);
    unint64_t v68 = v161;
    unint64_t v161 = (unint64_t)v52;
    uint64_t v69 = v172 + v52[9];
    uint64_t v70 = v65;
    if (dispatch thunk of static Comparable.>= infix(_:_:)())
    {
      uint64_t v71 = v162;
      unint64_t v72 = v162;
      uint64_t v73 = v69;
    }
    else
    {
      uint64_t v71 = v162;
      unint64_t v72 = v162;
      uint64_t v73 = (uint64_t)v70;
    }
    v130(v72, v73, v61);
    uint64_t v74 = v158;
    uint64_t v75 = *(char **)(v63 + 8);
    uint64_t v171 = v63 + 8;
    uint64_t v162 = v75;
    ((void (*)(char *, uint64_t))v75)(v70, v61);
    MidpointInterpolator.init()();
    uint64_t v76 = enum case for MidpointInterpolator.InterpolationMode.cubic(_:);
    uint64_t v77 = *(void (**)(void))(v68 + 104);
    uint64_t v78 = v163;
    uint64_t v79 = v164;
    ((void (*)(char *, void, uint64_t))v77)(v163, enum case for MidpointInterpolator.InterpolationMode.cubic(_:), v164);
    MidpointInterpolator.interpolationValue(data:date:interpolationMode:)();
    uint64_t v81 = v80;
    uint64_t v159 = *(void (**)(char *, uint64_t))(v68 + 8);
    v159(v78, v79);
    uint64_t v163 = *(char **)(v160 + 8);
    ((void (*)(char *, uint64_t))v163)(v74, v165);
    uint64_t v82 = v154;
    MidpointInterpolator.init()();
    double v83 = v71;
    uint64_t v84 = v155;
    ((void (*)(char *, uint64_t, uint64_t))v77)(v155, v76, v79);
    MidpointInterpolator.interpolationValue(data:date:interpolationMode:)();
    v159(v84, v79);
    ((void (*)(char *, uint64_t))v163)(v82, v165);
    uint64_t v85 = v151;
    MidpointInterpolator.init()();
    uint64_t v86 = v152;
    v77();
    MidpointInterpolator.interpolationValue(data:date:interpolationMode:)();
    uint64_t v87 = v83;
    v159(v86, v79);
    ((void (*)(char *, uint64_t))v163)(v85, v165);
    id v89 = v138;
    Measurement.init(value:unit:)();
    id v90 = v89;
    Measurement.init(value:unit:)();
    id v91 = v90;
    uint64_t v92 = v135;
    Measurement.init(value:unit:)();
    sub_1001B1E64(v134, *(void *)(v139 + 72));
    sub_10057278C(v132, v176);
    uint64_t v94 = v176[0];
    uint64_t v93 = v176[1];
    uint64_t v95 = v179;
    uint64_t v164 = v178;
    uint64_t v96 = qword_100E62210;
    swift_bridgeObjectRetain();
    uint64_t v165 = v95;
    swift_bridgeObjectRetain();
    uint64_t v97 = v166;
    if (v96 != -1) {
      swift_once();
    }
    uint64_t v98 = (void *)qword_100F512E8;
    Class isa = TimeZone._bridgeToObjectiveC()().super.isa;
    [v98 setTimeZone:isa];

    Class v100 = Date._bridgeToObjectiveC()().super.isa;
    id v101 = [v98 stringFromDate:v100];

    uint64_t v172 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v163 = v102;

    uint64_t v103 = v168;
    uint64_t v104 = *v168;
    uint64_t v105 = (uint64_t)v144;
    v130(v144, (uint64_t)v87, v97);
    uint64_t v106 = *(void *)((char *)v103 + *(int *)(v169 + 24));
    uint64_t v107 = *(void *)((char *)v103 + *(int *)(v169 + 28));
    uint64_t v108 = v141;
    *(void *)(v105 + *(int *)(v141 + 20)) = v81;
    *(void *)(v105 + *(int *)(v108 + 24)) = v106;
    *(void *)(v105 + *(int *)(v108 + 28)) = v107;
    AttributeContainer.init()();
    uint64_t v109 = v143;
    AttributedString.init(_:attributes:)();
    uint64_t v110 = v176[2];
    if (!v177) {
      uint64_t v110 = 0;
    }
    uint64_t v169 = v110;
    unint64_t v111 = 0xE000000000000000;
    if (v177) {
      unint64_t v111 = v177;
    }
    unint64_t v161 = v111;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v112 = v92;
    uint64_t v160 = v94;
    uint64_t v113 = v137;
    uint64_t v114 = v129;
    v129(v112, v137);
    v114(v150, v113);
    v114(v149, v113);
    ((void (*)(char *, uint64_t))v162)(v87, v97);
    sub_100BCC4D0((uint64_t)v103, (void (*)(void))type metadata accessor for DetailHeroChartLollipopPosition);
    sub_100BCC4D0((uint64_t)v170, (void (*)(void))type metadata accessor for DetailHeroChartLollipopModel);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v115 = (uint64_t)v148;
    uint64_t v116 = v163;
    *uint64_t v148 = v172;
    *(void *)(v115 + 8) = v116;
    uint64_t v117 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
    (*(void (**)(uint64_t, char *, uint64_t))(v145 + 32))(v115 + v117[5], v109, v146);
    uint64_t v118 = (uint64_t *)(v115 + v117[6]);
    *uint64_t v118 = v160;
    v118[1] = v93;
    uint64_t v119 = (uint64_t *)(v115 + v117[7]);
    unint64_t v120 = v161;
    *uint64_t v119 = v169;
    v119[1] = v120;
    uint64_t v121 = (void *)(v115 + v117[8]);
    *uint64_t v121 = 0;
    v121[1] = 0;
    uint64_t v122 = (uint64_t *)(v115 + v117[9]);
    uint64_t v123 = v164;
    uint64_t v124 = v165;
    *uint64_t v122 = v164;
    v122[1] = v124;
    uint64_t v125 = (uint64_t *)(v115 + v117[10]);
    *uint64_t v125 = v123;
    v125[1] = v124;
    *(unsigned char *)(v115 + v117[11]) = 0;
    swift_storeEnumTagMultiPayload();
    uint64_t v126 = v167;
    *uint64_t v167 = v104;
    uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
    sub_1000B0CF0(v105, (uint64_t)v126 + *(int *)(active + 20), (void (*)(void))type metadata accessor for LollipopMarkModel);
    sub_1000B0CF0(v115, (uint64_t)v126 + *(int *)(active + 24), (void (*)(void))type metadata accessor for LollipopDetailViewModel);
    return swift_storeEnumTagMultiPayload();
  }
}

uint64_t sub_100BCB1F8(double a1, double a2, double a3, double a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v81 = a9;
  uint64_t v84 = a8;
  uint64_t v87 = a7;
  uint64_t v88 = a6;
  uint64_t v89 = type metadata accessor for ConditionDetailLegendForeground(0);
  __chkstk_darwin(v89);
  uint64_t v85 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for WeatherFormatPlaceholder();
  uint64_t v15 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v17 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10017DF08(&qword_100E63730);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v82 = type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle();
  uint64_t v90 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  uint64_t v22 = (char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for Locale();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v80 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  uint64_t v83 = v24 + 16;
  v80(v20, a9, v23);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v23);
  static Set<>.full.getter();
  static WeatherFormatStyle<>.weather(_:locale:)();
  swift_bridgeObjectRelease();
  sub_1001781AC((uint64_t)v20, &qword_100E63730);
  LODWORD(v79) = enum case for WeatherFormatPlaceholder.none(_:);
  uint64_t v78 = *(uint64_t (**)(uint64_t))(v15 + 104);
  v78((uint64_t)v17);
  uint64_t v77 = type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  uint64_t v76 = sub_10017DF08(&qword_100E65250);
  uint64_t v75 = sub_100187008((unint64_t *)&qword_100E6BF60, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
  uint64_t v25 = v82;
  uint64_t v26 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v86 = v27;
  uint64_t v87 = v26;
  swift_release();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v15 + 8);
  uint64_t v74 = v15 + 8;
  uint64_t v29 = v73;
  v28(v17, v73);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v90 + 8);
  v90 += 8;
  v30(v22, v25);
  v80(v20, v81, v23);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v23);
  static Set<>.full.getter();
  static WeatherFormatStyle<>.weather(_:locale:)();
  swift_bridgeObjectRelease();
  sub_1001781AC((uint64_t)v20, &qword_100E63730);
  ((void (*)(char *, void, uint64_t))v78)(v17, v79, v29);
  static UnitManager.standard.getter();
  uint64_t v31 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v83 = v32;
  uint64_t v84 = v31;
  swift_release();
  v28(v17, v29);
  v30(v22, v25);
  sub_10017DF08(&qword_100E6B660);
  uint64_t v33 = (int *)(type metadata accessor for ConditionDetailLegend(0) - 8);
  uint64_t v34 = *(void *)v33;
  uint64_t v77 = *(void *)(*(void *)v33 + 72);
  unint64_t v35 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  uint64_t v36 = swift_allocObject();
  long long v82 = xmmword_100C25ED0;
  uint64_t v90 = v36;
  *(_OWORD *)(v36 + 16) = xmmword_100C25ED0;
  uint64_t v37 = (Swift::String *)(v36 + v35);
  uint64_t v38 = self;
  id v39 = [v38 mainBundle];
  v40._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v91._uint64_t countAndFlagsBits = 0xD000000000000051;
  v91._unint64_t object = (void *)0x8000000100CC0B40;
  v40._unint64_t object = (void *)0x8000000100CC0B10;
  v41._uint64_t countAndFlagsBits = 0x7961646F54;
  v41._unint64_t object = (void *)0xE500000000000000;
  Swift::String v42 = NSLocalizedString(_:tableName:bundle:value:comment:)(v40, (Swift::String_optional)0, (NSBundle)v39, v41, v91);

  uint64_t v80 = (void (*)(char *, uint64_t, uint64_t))type metadata accessor for DetailChartGradientModel();
  uint64_t v43 = *((void *)v80 - 1);
  uint64_t v79 = *(void (**)(char *, uint64_t, void *))(v43 + 16);
  uint64_t v81 = v43 + 16;
  uint64_t v44 = (uint64_t)v85;
  v79(v85, v88, v80);
  uint64_t v45 = type metadata accessor for ConditionDetailLegendForeground.LegendGradient(0);
  uint64_t v46 = (double *)(v44 + *(int *)(v45 + 20));
  *uint64_t v46 = a1;
  v46[1] = a2;
  *(void *)(v44 + *(int *)(v45 + 24)) = 0x3FF0000000000000;
  swift_storeEnumTagMultiPayload();
  id v47 = [v38 mainBundle];
  v48._uint64_t countAndFlagsBits = 0xD000000000000041;
  v92._uint64_t countAndFlagsBits = 0xD000000000000050;
  v92._unint64_t object = (void *)0x8000000100CC0C40;
  v48._unint64_t object = (void *)0x8000000100CC0BA0;
  v49._unint64_t object = (void *)0x8000000100CC0BF0;
  v49._uint64_t countAndFlagsBits = 0xD000000000000042;
  Swift::String v50 = NSLocalizedString(_:tableName:bundle:value:comment:)(v48, (Swift::String_optional)0, (NSBundle)v47, v49, v92);

  *uint64_t v37 = v42;
  v37[1] = v42;
  uint64_t v51 = (uint64_t)v37 + v33[8];
  uint64_t v78 = type metadata accessor for ConditionDetailLegendForeground;
  sub_1000B0CF0(v44, v51, (void (*)(void))type metadata accessor for ConditionDetailLegendForeground);
  *(Swift::String *)((char *)v37 + v33[9]) = v50;
  uint64_t v52 = (uint64_t *)((char *)&v37->_countAndFlagsBits + v77);
  swift_bridgeObjectRetain();
  id v53 = [v38 mainBundle];
  v54._uint64_t countAndFlagsBits = 0xD000000000000017;
  v55._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
  v93._unint64_t object = (void *)0x8000000100CC0CF0;
  v55._unint64_t object = (void *)0x8000000100CC0CA0;
  v54._unint64_t object = (void *)0x8000000100CC0CD0;
  v93._uint64_t countAndFlagsBits = 0x1000000000000086;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v55, (Swift::String_optional)0, (NSBundle)v53, v54, v93);

  sub_10017DF08(&qword_100E64020);
  uint64_t v56 = swift_allocObject();
  *(_OWORD *)(v56 + 16) = v82;
  *(void *)(v56 + 56) = &type metadata for String;
  unint64_t v57 = sub_10012B7C0();
  uint64_t v58 = v86;
  *(void *)(v56 + 32) = v87;
  *(void *)(v56 + 40) = v58;
  *(void *)(v56 + 96) = &type metadata for String;
  *(void *)(v56 + 104) = v57;
  uint64_t v59 = v84;
  *(void *)(v56 + 64) = v57;
  *(void *)(v56 + 72) = v59;
  *(void *)(v56 + 80) = v83;
  uint64_t v60 = String.init(format:_:)();
  uint64_t v62 = v61;
  swift_bridgeObjectRelease();
  v79((char *)v44, v88, v80);
  uint64_t v63 = (double *)(v44 + *(int *)(v45 + 20));
  *uint64_t v63 = a3;
  v63[1] = a4;
  *(void *)(v44 + *(int *)(v45 + 24)) = 0x3FE0000000000000;
  swift_storeEnumTagMultiPayload();
  id v64 = [v38 mainBundle];
  v65._uint64_t countAndFlagsBits = 0xD000000000000049;
  v94._uint64_t countAndFlagsBits = 0xD000000000000057;
  v94._unint64_t object = (void *)0x8000000100CC0E20;
  v66._unint64_t object = (void *)0x8000000100CC0D80;
  v65._unint64_t object = (void *)0x8000000100CC0DD0;
  v66._uint64_t countAndFlagsBits = 0xD000000000000042;
  Swift::String v67 = NSLocalizedString(_:tableName:bundle:value:comment:)(v66, (Swift::String_optional)0, (NSBundle)v64, v65, v94);

  *uint64_t v52 = v60;
  v52[1] = v62;
  v52[2] = v60;
  v52[3] = v62;
  sub_1000B0CF0(v44, (uint64_t)v52 + v33[8], (void (*)(void))v78);
  *(Swift::String *)((char *)v52 + v33[9]) = v67;
  swift_bridgeObjectRetain();
  id v68 = [v38 mainBundle];
  v69._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v95._uint64_t countAndFlagsBits = 0xD000000000000043;
  v95._unint64_t object = (void *)0x8000000100CC0EA0;
  v69._unint64_t object = (void *)0x8000000100CC0E80;
  v70._uint64_t countAndFlagsBits = 0;
  v70._unint64_t object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v69, (Swift::String_optional)0, (NSBundle)v68, v70, v95);

  return v90;
}

void sub_100BCBB84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for HourWeather();
  uint64_t v50 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v53 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E6B6D8);
  uint64_t v48 = *(void *)(v10 - 8);
  uint64_t v49 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v47 = (uint64_t)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v52 = (uint64_t)&v39 - v14;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v39 - v15;
  if ((a1 & 0x8000000000000000) == 0)
  {
    if (!a1)
    {
      sub_1002F9178();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    Swift::String v54 = _swiftEmptyArrayStorage;
    Swift::String v55 = _swiftEmptyArrayStorage;
    sub_100BCC528(a2, a3, a4, (uint64_t)v56);
    long long v58 = v56[1];
    long long v59 = v56[0];
    if ((v57 & 1) != 0
      || (uint64_t v17 = v59, v45 = *(void *)(v59 + 16), v46 = *((void *)&v59 + 1), *((void *)&v59 + 1) == v45))
    {
LABEL_32:
      sub_100295014((uint64_t)&v59);
      sub_100295014((uint64_t)&v58);
      swift_release();
      return;
    }
    unint64_t v51 = 0;
    unint64_t v18 = *((void *)&v58 + 1);
    uint64_t v19 = v58;
    uint64_t v44 = v50 + 16;
    uint64_t v43 = (void (**)(char *, char *, uint64_t))(v50 + 32);
    unint64_t v20 = v46;
    uint64_t v21 = _swiftEmptyArrayStorage;
    uint64_t v42 = v8;
    uint64_t v39 = a1;
    uint64_t v41 = v59;
    uint64_t v40 = v58;
    while ((v46 & 0x8000000000000000) == 0)
    {
      if (v20 >= *(void *)(v17 + 16)) {
        goto LABEL_34;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v50 + 16))(v53, v17+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(void *)(v50 + 72) * v20, v8);
      unint64_t v22 = *(void *)(v19 + 16);
      if (v18 == v22)
      {
        (*(void (**)(char *, uint64_t))(v50 + 8))(v53, v8);
        goto LABEL_32;
      }
      if (v18 >= v22) {
        goto LABEL_35;
      }
      uint64_t v23 = type metadata accessor for HourTemperatureStatistics();
      uint64_t v24 = *(void *)(v23 - 8);
      unint64_t v25 = v19
          + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))
          + *(void *)(v24 + 72) * v18;
      uint64_t v26 = &v16[*(int *)(v49 + 48)];
      (*v43)(v16, v53, v8);
      (*(void (**)(char *, unint64_t, uint64_t))(v24 + 16))(v26, v25, v23);
      sub_10024D364((uint64_t)v16, v52, &qword_100E6B6D8);
      unint64_t v27 = v21[2];
      if ((uint64_t)v27 >= a1)
      {
        if (v51 >= v27) {
          goto LABEL_36;
        }
        unint64_t v30 = (*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
        uint64_t v31 = *(void *)(v48 + 72);
        uint64_t v32 = v31 * v51;
        sub_1001262FC((uint64_t)v21 + v30 + v31 * v51, v47, &qword_100E6B6D8);
        uint64_t v33 = v55;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1007F37B8();
          uint64_t v33 = v55;
        }
        unint64_t v34 = v33[2];
        if (v34 >= v33[3] >> 1)
        {
          sub_1007F37B8();
          uint64_t v33 = v55;
        }
        v33[2] = v34 + 1;
        sub_10024D364(v47, (uint64_t)v33 + v30 + v34 * v31, &qword_100E6B6D8);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        Swift::String v54 = v21;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1003152F8();
          uint64_t v21 = v36;
          Swift::String v54 = v36;
        }
        uint64_t v8 = v42;
        unint64_t v37 = v51;
        if (v51 >= v21[2]) {
          goto LABEL_37;
        }
        sub_100BCC818(v52, (uint64_t)v21 + v30 + v32);
        uint64_t v38 = v37 + 1;
        uint64_t v21 = v54;
        a1 = v39;
        if (v38 >= v39) {
          unint64_t v51 = 0;
        }
        else {
          unint64_t v51 = v38;
        }
        uint64_t v17 = v41;
        uint64_t v19 = v40;
      }
      else
      {
        char v28 = swift_isUniquelyReferenced_nonNull_native();
        Swift::String v54 = v21;
        if ((v28 & 1) == 0)
        {
          sub_1007F37B8();
          uint64_t v21 = v54;
        }
        unint64_t v29 = v21[2];
        uint64_t v17 = v41;
        uint64_t v19 = v40;
        if (v29 >= v21[3] >> 1)
        {
          sub_1007F37B8();
          uint64_t v21 = v54;
        }
        v21[2] = v29 + 1;
        sub_10024D364(v52, (uint64_t)v21+ ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))+ *(void *)(v48 + 72) * v29, &qword_100E6B6D8);
        uint64_t v8 = v42;
      }
      ++v20;
      ++v18;
      if (v45 == v20) {
        goto LABEL_32;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
  }
  __break(1u);
}

void sub_100BCC144(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for HourWeather();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  if (*(unsigned char *)(v1 + 32) == 1)
  {
    sub_10017DF08(&qword_100E6B6D8);
    uint64_t v10 = sub_100162E38();
    goto LABEL_4;
  }
  unint64_t v14 = *(void *)(v1 + 8);
  unint64_t v15 = *(void *)(*(void *)v1 + 16);
  if (v14 == v15) {
    goto LABEL_9;
  }
  if (v14 >= v15)
  {
    __break(1u);
  }
  else
  {
    uint64_t v16 = *(void (**)(uint64_t, unint64_t, uint64_t))(v5 + 16);
    unint64_t v17 = *(void *)v1
        + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
        + *(void *)(v5 + 72) * v14;
    *(void *)(v1 + 8) = v14 + 1;
    v16(v9, v17, v3);
    uint64_t v19 = *(void *)(v1 + 16);
    unint64_t v18 = *(void *)(v1 + 24);
    unint64_t v20 = *(void *)(v19 + 16);
    if (v18 == v20)
    {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
LABEL_9:
      *(unsigned char *)(v1 + 32) = 1;
      sub_10017DF08(&qword_100E6B6D8);
      uint64_t v10 = sub_100162E38();
LABEL_4:
      _s7Weather24LocationCompositionStateOwst_0(v10, v11, v12, v13);
      return;
    }
    if (v18 < v20)
    {
      uint64_t v21 = type metadata accessor for HourTemperatureStatistics();
      sub_100179C0C();
      uint64_t v23 = v22;
      unint64_t v24 = v18 + 1;
      unint64_t v26 = v19
          + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))
          + *(void *)(v25 + 72) * v18;
      *(void *)(v1 + 24) = v24;
      uint64_t v27 = sub_10017DF08(&qword_100E6B6D8);
      uint64_t v28 = a1 + *(int *)(v27 + 48);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, v9, v3);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v23 + 16))(v28, v26, v21);
      uint64_t v10 = a1;
      uint64_t v11 = 0;
      uint64_t v12 = 1;
      uint64_t v13 = v27;
      goto LABEL_4;
    }
  }
  __break(1u);
}

uint64_t sub_100BCC364@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AttributeContainer();
  __chkstk_darwin(v4 - 8);
  type metadata accessor for TemperatureAveragesHeroChartInput();
  uint64_t v5 = Date.formattedShortMonthAndDay(timeZone:)();
  uint64_t v7 = v6;
  swift_bridgeObjectRetain();
  AttributeContainer.init()();
  uint64_t v8 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
  AttributedString.init(_:attributes:)();
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  *a2 = v5;
  a2[1] = v7;
  *(_OWORD *)((char *)a2 + v8[6]) = xmmword_100C313A0;
  uint64_t v11 = (uint64_t *)((char *)a2 + v8[7]);
  *uint64_t v11 = 0;
  v11[1] = 0xE000000000000000;
  uint64_t v12 = (uint64_t *)((char *)a2 + v8[8]);
  *uint64_t v12 = 0;
  v12[1] = 0;
  uint64_t v13 = (uint64_t *)((char *)a2 + v8[9]);
  *uint64_t v13 = v9;
  v13[1] = v10;
  *(_OWORD *)((char *)a2 + v8[10]) = xmmword_100C313A0;
  *((unsigned char *)a2 + v8[11]) = 0;
  type metadata accessor for LollipopDetailViewModel(0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for DetailHeroChartLollipopModel(0);
  swift_storeEnumTagMultiPayload();
  return swift_bridgeObjectRetain();
}

uint64_t sub_100BCC4D0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

void sub_100BCC528(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v36 = type metadata accessor for HourWeather();
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v35 = v11;
  uint64_t v12 = sub_10017DF08(&qword_100EB71C8);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_100109314();
  uint64_t v34 = v14;
  if (a3 < 1)
  {
    char v28 = 0;
    a3 = 0;
    uint64_t v15 = 0;
LABEL_14:
    *(void *)a4 = a1;
    *(void *)(a4 + 8) = v15;
    *(void *)(a4 + 16) = a2;
    *(void *)(a4 + 24) = a3;
    *(unsigned char *)(a4 + 32) = v28;
  }
  else
  {
    uint64_t v15 = *(void *)(a1 + 16);
    uint64_t v30 = a4;
    uint64_t v31 = (void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
    swift_bridgeObjectRetain();
    uint64_t v33 = a2;
    swift_bridgeObjectRetain();
    unint64_t v16 = 0;
    uint64_t v32 = v9;
    while (1)
    {
      if (v15 == v16)
      {
        unint64_t v16 = v15;
        a2 = v33;
LABEL_12:
        uint64_t v29 = sub_10017DF08(&qword_100E6B6D8);
        char v28 = 1;
        _s7Weather24LocationCompositionStateOwst_0(v34, 1, 1, v29);
        sub_1001781AC(v34, &qword_100EB71C8);
        swift_bridgeObjectRelease();
        a3 = v16;
        goto LABEL_13;
      }
      a2 = v33;
      if (v16 >= *(void *)(a1 + 16)) {
        break;
      }
      unint64_t v17 = v16 + 1;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v9 + 16))(v35, a1+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v16, v36);
      unint64_t v18 = *(void *)(v33 + 16);
      if (v16 == v18)
      {
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v35, v36);
        uint64_t v15 = v16 + 1;
        goto LABEL_12;
      }
      if (v16 >= v18) {
        goto LABEL_16;
      }
      uint64_t v19 = type metadata accessor for HourTemperatureStatistics();
      sub_100179C0C();
      uint64_t v20 = a3;
      uint64_t v21 = a1;
      uint64_t v23 = v22;
      unint64_t v25 = v33
          + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))
          + *(void *)(v24 + 72) * v16;
      uint64_t v26 = sub_10017DF08(&qword_100E6B6D8);
      uint64_t v27 = v34 + *(int *)(v26 + 48);
      (*v31)(v34, v35, v36);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v23 + 16))(v27, v25, v19);
      a1 = v21;
      a3 = v20;
      uint64_t v9 = v32;
      _s7Weather24LocationCompositionStateOwst_0(v34, 0, 1, v26);
      sub_1001781AC(v34, &qword_100EB71C8);
      unint64_t v16 = v17;
      if (a3 == v17)
      {
        a2 = v33;
        swift_bridgeObjectRelease();
        char v28 = 0;
        uint64_t v15 = a3;
LABEL_13:
        swift_bridgeObjectRelease();
        a4 = v30;
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
  }
}

uint64_t sub_100BCC818(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6B6D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t destroy for TemperatureAveragesHeroChartViewModelFactory(uint64_t a1)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  swift_release();

  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 48);
}

uint64_t initializeWithCopy for TemperatureAveragesHeroChartViewModelFactory(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  uint64_t v5 = a2 + 48;
  long long v6 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_retain();
  v8(a1 + 48, v5, v7);
  return a1;
}

uint64_t *assignWithCopy for TemperatureAveragesHeroChartViewModelFactory(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  sub_1000C1E18(a1 + 6, a2 + 6);
  return a1;
}

uint64_t assignWithTake for TemperatureAveragesHeroChartViewModelFactory(uint64_t a1, uint64_t a2)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 48);
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v6;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  return a1;
}

ValueMetadata *type metadata accessor for TemperatureAveragesHeroChartViewModelFactory()
{
  return &type metadata for TemperatureAveragesHeroChartViewModelFactory;
}

uint64_t *sub_100BCCA58(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(type metadata accessor for WeatherActivity() - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = type metadata accessor for Location.Identifier();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 2, v7);
    }
  }
  return a1;
}

void *sub_100BCCB5C(void *a1, const void *a2)
{
  uint64_t v4 = type metadata accessor for Location.Identifier();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 2, v4))
  {
    uint64_t v5 = type metadata accessor for WeatherActivity();
    memcpy(a1, a2, *(void *)(*(void *)(v5 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 2, v4);
  }
  return a1;
}

void *sub_100BCCC20(void *a1, const void *a2)
{
  uint64_t v4 = type metadata accessor for Location.Identifier();
  int v5 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 2, v4);
  int v6 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 2, v4);
  if (!v5)
  {
    uint64_t v7 = *(void *)(v4 - 8);
    if (!v6)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 40))(a1, a2, v4);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v4);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    uint64_t v8 = type metadata accessor for WeatherActivity();
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 2, v4);
  return a1;
}

uint64_t sub_100BCCD64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BCCD78);
}

uint64_t sub_100BCCD78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherActivity();

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_100BCCDC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BCCDD4);
}

uint64_t sub_100BCCDD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherActivity();

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v4);
}

uint64_t sub_100BCCE20()
{
  uint64_t v1 = type metadata accessor for ActivityModifier();
  sub_100164920(v1);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = type metadata accessor for Location.Identifier();
  if (!_s7Weather24LocationCompositionStateOwet_0(v0 + v3, 2, v4)) {
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v3, v4);
  }

  return swift_deallocObject();
}

uint64_t sub_100BCCEF0()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 88);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 128);
  return v0;
}

uint64_t sub_100BCCF54()
{
  sub_100BCCEF0();

  return swift_deallocClassInstance();
}

uint64_t sub_100BCCF88@<X0>(uint64_t a1@<X8>)
{
  sub_10020D948(v1 + 16, (uint64_t)v4);
  swift_retain();
  return sub_1003DD640(v4, a1);
}

uint64_t type metadata accessor for NotificationsOptInModule()
{
  return self;
}

uint64_t sub_100BCD004()
{
  uint64_t v1 = type metadata accessor for CocoaError.Code();
  __chkstk_darwin(v1);
  UnfairLock.lock()();
  uint64_t v2 = sub_100BCD498();
  if (v3 >> 60 == 15)
  {
LABEL_9:
    UnfairLock.unlock()();
    return 0;
  }
  uint64_t v4 = v2;
  unint64_t v5 = v3;
  type metadata accessor for BinaryDecoder();
  static BinaryDecoder.decode<A>(_:from:)();
  if (v12 >= *(void *)(v0 + qword_100EB1948))
  {
    if (qword_100E627C8 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_1002102B0(v7, (uint64_t)qword_100F51E70);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 134349056;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Hash size overflow:%{public}ld", v10, 0xCu);
      swift_slowDealloc();
    }
    sub_1003FC164(v4, v5);

    goto LABEL_9;
  }
  static BinaryDecoder.decode<A>(_:from:)();
  sub_1003FC164(v4, v5);
  uint64_t v6 = v12;
  UnfairLock.unlock()();
  return v6;
}

uint64_t sub_100BCD498()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CocoaError.Code();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  os_log_type_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v36 - v12;
  if (*(unsigned char *)(v1 + qword_100EB1958) == 1)
  {
    uint64_t v40 = qword_100EB1958;
    uint64_t v41 = v5;
    uint64_t v42 = v3;
    uint64_t v43 = v11;
    if (qword_100E627C8 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    uint64_t v15 = sub_1002102B0(v14, (uint64_t)qword_100F51E70);
    swift_retain_n();
    uint64_t v39 = v15;
    unint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v16, v17))
    {
      unint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      uint64_t v46 = v37;
      *(_DWORD *)unint64_t v18 = 136446210;
      uint64_t v36 = v18 + 4;
      sub_1007FC544((uint64_t)v13);
      uint64_t v19 = URL.absoluteString.getter();
      uint64_t v38 = v2;
      uint64_t v21 = v20;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v43);
      uint64_t v44 = v19;
      uint64_t v45 = v21;
      uint64_t v22 = String.init<A>(_:)();
      uint64_t v44 = sub_10016414C(v22, v23, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Read data from state file: %{public}s", v18, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v29 = *(uint64_t (**)(char *))(v1 + qword_100EB1970);
    swift_retain();
    sub_1007FC544((uint64_t)v9);
    uint64_t v28 = v29(v9);
    unint64_t v31 = v30;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v43);
    swift_release();
    uint64_t v32 = (uint64_t *)(v1 + qword_100EB1950);
    uint64_t v33 = *(void *)(v1 + qword_100EB1950);
    unint64_t v34 = *(void *)(v1 + qword_100EB1950 + 8);
    *uint64_t v32 = v28;
    v32[1] = v31;
    sub_1007FD228(v28, v31);
    sub_1003FC164(v33, v34);
    *(unsigned char *)(v1 + v40) = 0;
  }
  else
  {
    if (qword_100E627C8 != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    sub_1002102B0(v24, (uint64_t)qword_100F51E70);
    unint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "Found cached persistence data, use cache instead", v27, 2u);
      swift_slowDealloc();
    }

    uint64_t v28 = *(void *)(v1 + qword_100EB1950);
    sub_100BCE39C(v28, *(void *)(v1 + qword_100EB1950 + 8));
  }
  return v28;
}

void sub_100BCDB2C(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CocoaError.Code();
  v19[1] = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v4 = sub_10017DF08(&qword_100EB7568);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  os_log_type_t v9 = (char *)v19 - v8;
  v19[2] = *(void *)(v1 + qword_100EB1960);
  UnfairLock.lock()();
  uint64_t v10 = sub_10017DF08(&qword_100E981C0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 1, 1, v10);
  uint64_t v11 = sub_100BCD498();
  if (v12 >> 60 == 15)
  {
    sub_1001781AC((uint64_t)v9, &qword_100EB7568);
    _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v10);
  }
  else
  {
    uint64_t v13 = v11;
    unint64_t v14 = v12;
    v19[0] = a1;
    type metadata accessor for BinaryDecoder();
    sub_1001246C8(&qword_100E981D8, &qword_100E981C0);
    sub_1001246C8(&qword_100E981E0, &qword_100E981C0);
    static BinaryDecoder.decode<A>(_:from:)();
    sub_1001781AC((uint64_t)v9, &qword_100EB7568);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v6, 0, 1, v10);
    sub_10024D364((uint64_t)v6, (uint64_t)v9, &qword_100EB7568);
    if (qword_100E627C8 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_1002102B0(v15, (uint64_t)qword_100F51E70);
    sub_1007FD228(v13, v14);
    unint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      unint64_t v18 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)unint64_t v18 = 134349056;
      v19[4] = Data.count.getter() / 1024;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      sub_1003FC164(v13, v14);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Read state data from disk with size %{public}ld kb", v18, 0xCu);
      swift_slowDealloc();

      sub_1003FC164(v13, v14);
    }
    else
    {
      sub_1003FC164(v13, v14);
      sub_1003FC164(v13, v14);
    }
    sub_10024D364((uint64_t)v9, v19[0], &qword_100EB7568);
  }
  UnfairLock.unlock()();
}

uint64_t sub_100BCE110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E639E8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Location();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64((void *)(a1 + 64), *(void *)(a1 + 88));
  dispatch thunk of LocationManagerType.currentLocation.getter();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7) == 1)
  {
    sub_1001781AC((uint64_t)v6, &qword_100E639E8);
    uint64_t v11 = 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    Location.identifier.getter();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    uint64_t v11 = 0;
  }
  uint64_t v12 = type metadata accessor for Location.Identifier();
  return _s7Weather24LocationCompositionStateOwst_0(a2, v11, 1, v12);
}

uint64_t sub_100BCE2C8()
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 24);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 64);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 104);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 144);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 184);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 224);
  return v0;
}

uint64_t sub_100BCE318()
{
  sub_100BCE2C8();

  return swift_deallocClassInstance();
}

unint64_t sub_100BCE34C()
{
  unint64_t result = qword_100EB7578;
  if (!qword_100EB7578)
  {
    type metadata accessor for CocoaError.Code();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB7578);
  }
  return result;
}

uint64_t sub_100BCE39C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1007FD228(a1, a2);
  }
  return a1;
}

void sub_100BCE3B0()
{
  if (static Date.== infix(_:_:)())
  {
    type metadata accessor for ConditionDetailChartInputs(0);
    sub_100BD9894();
  }
}

void sub_100BCE410()
{
  if (static ConditionDetailChartHeaderInput.== infix(_:_:)())
  {
    type metadata accessor for ConditionDetailChartInput(0);
    sub_100BCE470();
  }
}

void sub_100BCE470()
{
  sub_100162EA0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  uint64_t v5 = type metadata accessor for DayWeather();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_10016279C();
  uint64_t v9 = sub_10017DF08(&qword_100EB7828);
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = sub_10017DF08(&qword_100E6B6C8);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_10016278C();
  uint64_t v18 = v16 - v17;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v34 - v20;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v34 - v23;
  sub_100179C64();
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    goto LABEL_21;
  }
  uint64_t v35 = v7;
  unint64_t v25 = (int *)type metadata accessor for ConditionDetailChartDataInput(0);
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    goto LABEL_21;
  }
  uint64_t v26 = sub_1001A2B2C(v25[6]);
  if ((sub_100889C5C(v26, v27) & 1) == 0) {
    goto LABEL_21;
  }
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    goto LABEL_21;
  }
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    goto LABEL_21;
  }
  if (*(unsigned __int8 *)(v4 + v25[9]) != *(unsigned __int8 *)(v2 + v25[9])) {
    goto LABEL_21;
  }
  sub_1001A2B2C(v25[10]);
  if ((static TimeZone.== infix(_:_:)() & 1) == 0) {
    goto LABEL_21;
  }
  sub_100BD9E48();
  if ((v28 & 1) == 0) {
    goto LABEL_21;
  }
  sub_1001A2B2C(v25[12]);
  if ((static CurrentWeather.== infix(_:_:)() & 1) == 0) {
    goto LABEL_21;
  }
  sub_10006DF38(v4 + v25[13], (uint64_t)v24, &qword_100E6B6C8);
  sub_10006DF38(v2 + v25[13], (uint64_t)v21, &qword_100E6B6C8);
  uint64_t v29 = v13 + *(int *)(v9 + 48);
  sub_10006DF38((uint64_t)v24, v13, &qword_100E6B6C8);
  uint64_t v34 = v29;
  sub_10006DF38((uint64_t)v21, v29, &qword_100E6B6C8);
  sub_10012B520(v13, 1, v5);
  if (v31)
  {
    sub_100178110((uint64_t)v21, &qword_100E6B6C8);
    sub_100178110((uint64_t)v24, &qword_100E6B6C8);
    sub_10012B520(v34, 1, v5);
    if (v31)
    {
      sub_100178110(v13, &qword_100E6B6C8);
LABEL_20:
      sub_1001A2B2C(v25[14]);
      static ChartViewModelInterpolationMode.== infix(_:_:)();
      goto LABEL_21;
    }
    goto LABEL_18;
  }
  sub_10006DF38(v13, v18, &qword_100E6B6C8);
  uint64_t v30 = v34;
  sub_10012B520(v34, 1, v5);
  if (v31)
  {
    sub_100178110((uint64_t)v21, &qword_100E6B6C8);
    sub_100178110((uint64_t)v24, &qword_100E6B6C8);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v18, v5);
LABEL_18:
    sub_100178110(v13, &qword_100EB7828);
    goto LABEL_21;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32))(v0, v30, v5);
  sub_100BD3AB8(&qword_100E71328, (void (*)(uint64_t))&type metadata accessor for DayWeather);
  LODWORD(v34) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v32 = *(void (**)(void))(v35 + 8);
  sub_100164FC8();
  v33();
  sub_100178110((uint64_t)v21, &qword_100E6B6C8);
  sub_100178110((uint64_t)v24, &qword_100E6B6C8);
  sub_100164FC8();
  v32();
  sub_100178110(v13, &qword_100E6B6C8);
  if (v34) {
    goto LABEL_20;
  }
LABEL_21:
  sub_100162694();
}

uint64_t sub_100BCE87C@<X0>(char a1@<W5>, uint64_t a2@<X7>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6)
{
  type metadata accessor for Date();
  sub_100162E4C();
  uint64_t v9 = *(void (**)(void))(v8 + 32);
  sub_1001A36E0();
  v9();
  uint64_t v10 = (int *)type metadata accessor for ConditionDetailChartDataInput(0);
  sub_1001A36E0();
  v9();
  type metadata accessor for DetailChartCondition();
  sub_100162E4C();
  sub_100179C64();
  sub_1001190D4();
  v11();
  sub_1001A36E0();
  v9();
  sub_1001A36E0();
  v9();
  *(unsigned char *)(a3 + v10[9]) = a1;
  type metadata accessor for TimeZone();
  sub_100162E4C();
  sub_1001190D4();
  v12();
  *(void *)(a3 + v10[11]) = a2;
  type metadata accessor for CurrentWeather();
  sub_100162E4C();
  sub_1001190D4();
  v13();
  sub_1001278D0(a5, a3 + v10[13], &qword_100E6B6C8);
  uint64_t v14 = a3 + v10[14];
  type metadata accessor for ChartViewModelInterpolationMode();
  sub_100162E4C();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 32);

  return v17(v14, a6, v15);
}

BOOL sub_100BCEA94(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E64D60);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v30 - v15;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v30 - v18;
  BOOL v20 = *a1 == *a2 && a1[1] == a2[1];
  if (v20 || (char v21 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v21 & 1) != 0))
  {
    BOOL v23 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v23 || (char v24 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v24 & 1) != 0))
    {
      uint64_t v31 = v5;
      unint64_t v25 = (int *)type metadata accessor for ConditionDetailChartDataInputFactoryWithCache.CacheKey(0);
      if ((static Date.== infix(_:_:)() & 1) != 0
        && (sub_100889C5C((uint64_t)a1 + v25[7], (uint64_t)a2 + v25[7]) & 1) != 0
        && *((unsigned __int8 *)a1 + v25[8]) == *((unsigned __int8 *)a2 + v25[8]))
      {
        sub_10006DF38((uint64_t)a1 + v25[9], (uint64_t)v19, (uint64_t *)&unk_100E73CA0);
        sub_10006DF38((uint64_t)a2 + v25[9], (uint64_t)v16, (uint64_t *)&unk_100E73CA0);
        uint64_t v26 = (uint64_t)&v10[*(int *)(v8 + 48)];
        sub_10006DF38((uint64_t)v19, (uint64_t)v10, (uint64_t *)&unk_100E73CA0);
        sub_10006DF38((uint64_t)v16, v26, (uint64_t *)&unk_100E73CA0);
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v4) == 1)
        {
          sub_100178110((uint64_t)v16, (uint64_t *)&unk_100E73CA0);
          sub_100178110((uint64_t)v19, (uint64_t *)&unk_100E73CA0);
          if (_s7Weather24LocationCompositionStateOwet_0(v26, 1, v4) == 1)
          {
            sub_100178110((uint64_t)v10, (uint64_t *)&unk_100E73CA0);
            return 1;
          }
        }
        else
        {
          sub_10006DF38((uint64_t)v10, (uint64_t)v13, (uint64_t *)&unk_100E73CA0);
          if (_s7Weather24LocationCompositionStateOwet_0(v26, 1, v4) != 1)
          {
            uint64_t v27 = v31;
            (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v7, v26, v4);
            sub_100BD3AB8((unint64_t *)&qword_100E63980, (void (*)(uint64_t))&type metadata accessor for Date);
            char v28 = dispatch thunk of static Equatable.== infix(_:_:)();
            uint64_t v29 = *(void (**)(char *, uint64_t))(v27 + 8);
            v29(v7, v4);
            sub_100178110((uint64_t)v16, (uint64_t *)&unk_100E73CA0);
            sub_100178110((uint64_t)v19, (uint64_t *)&unk_100E73CA0);
            v29(v13, v4);
            sub_100178110((uint64_t)v10, (uint64_t *)&unk_100E73CA0);
            return (v28 & 1) != 0;
          }
          sub_100178110((uint64_t)v16, (uint64_t *)&unk_100E73CA0);
          sub_100178110((uint64_t)v19, (uint64_t *)&unk_100E73CA0);
          (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v4);
        }
        sub_100178110((uint64_t)v10, &qword_100E64D60);
      }
      return 0;
    }
  }
  return result;
}

void sub_100BCEEDC()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  uint64_t v8 = type metadata accessor for ConditionDetailChartDataInputFactoryWithCache.CacheKey(0);
  sub_100BD3AB8((unint64_t *)&qword_100E63978, (void (*)(uint64_t))&type metadata accessor for Date);
  dispatch thunk of Hashable.hash(into:)();
  type metadata accessor for DetailChartCondition();
  sub_100BD3AB8(&qword_100E63988, (void (*)(uint64_t))&type metadata accessor for DetailChartCondition);
  dispatch thunk of Hashable.hash(into:)();
  Hasher._combine(_:)(*(unsigned __int8 *)(v0 + *(int *)(v8 + 32)));
  sub_10006DF38(v0 + *(int *)(v8 + 36), (uint64_t)v7, (uint64_t *)&unk_100E73CA0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v1) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    Hasher._combine(_:)(1u);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

Swift::Int sub_100BCF18C()
{
  return Hasher._finalize()();
}

Swift::Int sub_100BCF1D8()
{
  return Hasher._finalize()();
}

void sub_100BCF214()
{
  sub_100162EA0();
  uint64_t v134 = v0;
  uint64_t v127 = v1;
  LODWORD(v138) = v2;
  uint64_t v141 = v3;
  uint64_t v126 = v4;
  uint64_t v143 = v6;
  uint64_t v144 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v146 = v12;
  uint64_t v147 = v11;
  __chkstk_darwin(v11);
  sub_100109314();
  uint64_t v145 = v13;
  uint64_t v14 = sub_10017DF08(&qword_100E71430);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v16);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v17);
  sub_100128F8C();
  uint64_t v132 = v18;
  uint64_t v19 = sub_100129064();
  uint64_t v142 = type metadata accessor for ConditionDetailChartDataInput(v19);
  sub_100162E4C();
  __chkstk_darwin(v20);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v21);
  sub_100128F8C();
  uint64_t v124 = v22;
  uint64_t v23 = type metadata accessor for TimeState();
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_100185864(v25, v120[0]);
  uint64_t v26 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v27 = sub_100109308(v26);
  __chkstk_darwin(v27);
  sub_100109314();
  uint64_t v131 = v28;
  type metadata accessor for DetailChartCondition();
  sub_100179C0C();
  uint64_t v148 = v30;
  uint64_t v149 = v29;
  __chkstk_darwin(v29);
  sub_100162EF8();
  uint64_t v139 = v31;
  sub_1001626D4();
  __chkstk_darwin(v32);
  uint64_t v136 = (char *)v120 - v33;
  sub_100129064();
  uint64_t v140 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v35 = v34;
  __chkstk_darwin(v36);
  sub_10016278C();
  __chkstk_darwin(v37);
  sub_100128F8C();
  uint64_t v135 = v38;
  sub_100129064();
  uint64_t v129 = type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v128 = v39;
  __chkstk_darwin(v40);
  sub_1001626E0();
  uint64_t v130 = type metadata accessor for ConditionDetailChartDataInputFactoryWithCache.CacheKey(0);
  sub_100162E4C();
  __chkstk_darwin(v41);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v42);
  uint64_t v44 = (uint64_t *)((char *)v120 - v43);
  uint64_t v45 = sub_10017DF08(&qword_100E63770);
  uint64_t v46 = sub_100109308(v45);
  __chkstk_darwin(v46);
  sub_1001626E0();
  uint64_t v49 = v48 - v47;
  uint64_t v50 = sub_10017DF08(&qword_100E63850);
  uint64_t v51 = sub_100109308(v50);
  __chkstk_darwin(v51);
  sub_1001626E0();
  uint64_t v54 = v53 - v52;
  uint64_t v55 = type metadata accessor for WeatherData(0);
  sub_100162E4C();
  __chkstk_darwin(v56);
  sub_100109314();
  uint64_t v137 = (uint64_t *)v57;
  uint64_t v133 = v10;
  uint64_t v58 = *(void *)(v10 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  swift_bridgeObjectRetain();
  uint64_t v59 = v8;
  uint64_t v60 = Location.id.getter();
  sub_1001BBE9C(v60, v61, v58);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v62 = type metadata accessor for LocationWeatherDataState(0);
  sub_10012B520(v49, 1, v62);
  if (v63)
  {
    sub_100178110(v49, &qword_100E63770);
    sub_10017F760(v54, 1);
LABEL_6:
    sub_100178110(v54, &qword_100E63850);
    if (qword_100E627B0 != -1) {
      swift_once();
    }
    uint64_t v64 = type metadata accessor for Logger();
    sub_1002102B0(v64, (uint64_t)qword_100F51E28);
    sub_100162808();
    v65();
    sub_100162808();
    v66();
    uint64_t v68 = v145;
    uint64_t v67 = v146;
    uint64_t v69 = v147;
    sub_100162808();
    v70();
    uint64_t v71 = Logger.logObject.getter();
    os_log_type_t v72 = static os_log_type_t.error.getter();
    LODWORD(v144) = v72;
    if (os_log_type_enabled(v71, v72))
    {
      uint64_t v73 = swift_slowAlloc();
      uint64_t v141 = swift_slowAlloc();
      uint64_t v151 = v141;
      *(_DWORD *)uint64_t v73 = 136315907;
      sub_100BD3AB8(&qword_100E656D8, (void (*)(uint64_t))&type metadata accessor for Date);
      os_log_t v138 = v71;
      uint64_t v74 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v150 = sub_10017E648(v74, v75);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v76 = sub_100184E70();
      v77(v76);
      *(_WORD *)(v73 + 12) = 2080;
      sub_100BD3AB8(&qword_100EB7830, (void (*)(uint64_t))&type metadata accessor for DetailChartCondition);
      uint64_t v78 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v80 = sub_10017E648(v78, v79);
      sub_1001873E4(v80);
      swift_bridgeObjectRelease();
      sub_100164944();
      v81();
      *(_WORD *)(v73 + 22) = 2160;
      uint64_t v150 = 1752392040;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v73 + 32) = 2081;
      sub_100BD3AB8((unint64_t *)&qword_100E66470, (void (*)(uint64_t))&type metadata accessor for Location);
      uint64_t v82 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v84 = sub_10017E648(v82, v83);
      sub_1001873E4(v84);
      swift_bridgeObjectRelease();
      sub_100162F0C();
      v85();
      uint64_t v71 = v138;
      _os_log_impl((void *)&_mh_execute_header, v138, (os_log_type_t)v144, "Missing hourly forecast for detail chart; startHour=%s, condition=%s, location=%{private,mask.hash}s",
        (uint8_t *)v73,
        0x2Au);
      swift_arrayDestroy();
      sub_100162EE0();
      sub_100162EE0();
    }
    else
    {
      uint64_t v86 = sub_100184E70();
      v87(v86);
      sub_100164944();
      v88();
      (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v68, v69);
    }

    uint64_t v89 = 1;
    uint64_t v91 = v142;
    uint64_t v90 = v143;
    goto LABEL_21;
  }
  sub_1001177B0(v54);
  sub_100156A50(v49, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  sub_10012B520(v54, 1, v55);
  if (v63) {
    goto LABEL_6;
  }
  Swift::String v92 = v137;
  sub_100178D48(v54, (uint64_t)v137, (void (*)(void))type metadata accessor for WeatherData);
  uint64_t v93 = v92[1];
  uint64_t v146 = *v92;
  swift_bridgeObjectRetain();
  uint64_t v145 = v59;
  Location.identifier.getter();
  uint64_t v147 = Location.Identifier.id.getter();
  uint64_t v95 = v94;
  sub_100162F0C();
  v96();
  uint64_t v97 = v140;
  sub_100162808();
  v98();
  uint64_t v99 = v141;
  sub_100162808();
  v100();
  if (v138 == 1)
  {
    uint64_t v101 = v99;
    uint64_t v102 = v123;
    sub_100BD3B40(v133 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, v123, (void (*)(void))type metadata accessor for TimeState);
    uint64_t v103 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32);
    uint64_t v104 = v131;
    uint64_t v105 = v102;
    uint64_t v99 = v101;
    v103(v131, v105, v97);
    _s7Weather24LocationCompositionStateOwst_0(v104, 0, 1, v97);
  }
  else
  {
    uint64_t v104 = v131;
    _s7Weather24LocationCompositionStateOwst_0(v131, 1, 1, v97);
    uint64_t v103 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 32);
  }
  *uint64_t v44 = v146;
  v44[1] = v93;
  v44[2] = v147;
  v44[3] = v95;
  uint64_t v106 = v130;
  v103((uint64_t)v44 + *(int *)(v130 + 24), v135, v97);
  sub_1001190D4();
  v107();
  uint64_t v108 = v138;
  *((unsigned char *)v44 + *(int *)(v106 + 32)) = (_BYTE)v138;
  sub_1001278D0(v104, (uint64_t)v44 + *(int *)(v106 + 36), (uint64_t *)&unk_100E73CA0);
  uint64_t v109 = v134;
  swift_retain();
  uint64_t v110 = v132;
  Cache.subscript.getter();
  swift_release();
  uint64_t v91 = v142;
  sub_10012B520(v110, 1, v142);
  if (!v63)
  {
    sub_100156A50((uint64_t)v44, (void (*)(void))type metadata accessor for ConditionDetailChartDataInputFactoryWithCache.CacheKey);
    sub_100156A50((uint64_t)v137, (void (*)(void))type metadata accessor for WeatherData);
    uint64_t v115 = v124;
    sub_100178D48(v110, v124, (void (*)(void))type metadata accessor for ConditionDetailChartDataInput);
    uint64_t v116 = v115;
LABEL_20:
    uint64_t v90 = v143;
    sub_100178D48(v116, v143, (void (*)(void))type metadata accessor for ConditionDetailChartDataInput);
    uint64_t v89 = 0;
    goto LABEL_21;
  }
  sub_100178110(v110, &qword_100E71430);
  uint64_t v111 = v109[5];
  uint64_t v112 = v109[6];
  sub_1001B1E64(v109 + 2, v111);
  uint64_t v113 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v112 + 8);
  uint64_t v119 = v112;
  uint64_t v114 = v125;
  v113(v133, v145, v144, v126, v99, v108, v127, v111, v119);
  sub_10012B520(v114, 1, v91);
  if (!v63)
  {
    uint64_t v117 = v121;
    sub_100178D48(v114, v121, (void (*)(void))type metadata accessor for ConditionDetailChartDataInput);
    sub_100BD3B40((uint64_t)v44, v120[1], (void (*)(void))type metadata accessor for ConditionDetailChartDataInputFactoryWithCache.CacheKey);
    uint64_t v118 = v122;
    sub_100BD3B40(v117, v122, (void (*)(void))type metadata accessor for ConditionDetailChartDataInput);
    _s7Weather24LocationCompositionStateOwst_0(v118, 0, 1, v91);
    swift_retain();
    Cache.subscript.setter();
    swift_release();
    sub_100156A50((uint64_t)v44, (void (*)(void))type metadata accessor for ConditionDetailChartDataInputFactoryWithCache.CacheKey);
    sub_100156A50((uint64_t)v137, (void (*)(void))type metadata accessor for WeatherData);
    uint64_t v116 = v117;
    goto LABEL_20;
  }
  sub_100156A50((uint64_t)v44, (void (*)(void))type metadata accessor for ConditionDetailChartDataInputFactoryWithCache.CacheKey);
  sub_100156A50((uint64_t)v137, (void (*)(void))type metadata accessor for WeatherData);
  sub_100178110(v114, &qword_100E71430);
  uint64_t v89 = 1;
  uint64_t v90 = v143;
LABEL_21:
  _s7Weather24LocationCompositionStateOwst_0(v90, v89, 1, v91);
  sub_100162694();
}

uint64_t type metadata accessor for ConditionDetailChartDataInputFactoryWithCache()
{
  return self;
}

void sub_100BCFEB0()
{
}

void sub_100BCFED4()
{
  sub_100162EA0();
  uint64_t v198 = v1;
  int v199 = v2;
  os_log_t v227 = v3;
  uint64_t v214 = v4;
  uint64_t v225 = v6;
  uint64_t v226 = v5;
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v229 = v12;
  uint64_t v230 = v11;
  __chkstk_darwin(v11);
  sub_100162EF8();
  uint64_t v232 = v13;
  sub_1001626D4();
  __chkstk_darwin(v14);
  sub_100128F8C();
  char v218 = v15;
  sub_100129064();
  uint64_t v197 = type metadata accessor for ChartViewModelInterpolationMode();
  sub_100179C0C();
  uint64_t v196 = v16;
  __chkstk_darwin(v17);
  sub_100109314();
  uint64_t v195 = v18;
  sub_100129064();
  uint64_t v19 = type metadata accessor for CurrentWeather();
  uint64_t v20 = sub_100109308(v19);
  __chkstk_darwin(v20);
  sub_100109314();
  uint64_t v194 = v21;
  uint64_t v235 = type metadata accessor for DetailChartCondition();
  sub_100179C0C();
  uint64_t v233 = v22;
  __chkstk_darwin(v23);
  sub_100162EF8();
  uint64_t v231 = v24;
  sub_1001626D4();
  __chkstk_darwin(v25);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v26);
  sub_100128F8C();
  uint64_t v202 = v27;
  uint64_t v28 = type metadata accessor for TimeState();
  uint64_t v29 = sub_100109308(v28);
  __chkstk_darwin(v29);
  sub_100109314();
  sub_100109338(v30);
  v190[5] = sub_10017DF08(&qword_100E66CA0);
  sub_100179C0C();
  v190[4] = v31;
  __chkstk_darwin(v32);
  sub_100109314();
  sub_100109338(v33);
  uint64_t v34 = sub_10017DF08(&qword_100E6B6C8);
  uint64_t v35 = sub_100109308(v34);
  __chkstk_darwin(v35);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v36);
  sub_100128F8C();
  sub_100109338(v37);
  uint64_t v38 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v39 = sub_100109308(v38);
  __chkstk_darwin(v39);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v40);
  sub_100128F8C();
  uint64_t v215 = v41;
  sub_100129064();
  uint64_t v219 = (void (*)(void, void, void))type metadata accessor for HourWeather();
  sub_100179C0C();
  uint64_t v216 = v42;
  __chkstk_darwin(v43);
  sub_100185864(v44, v190[0]);
  uint64_t v45 = sub_10017DF08(&qword_100E6BEC0);
  uint64_t v46 = sub_100109308(v45);
  __chkstk_darwin(v46);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v47);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v48);
  sub_100128F8C();
  sub_100109338(v49);
  uint64_t v209 = sub_10017DF08(&qword_100E66CC8);
  sub_100179C0C();
  uint64_t v208 = v50;
  __chkstk_darwin(v51);
  sub_10016278C();
  __chkstk_darwin(v52);
  uint64_t v234 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v228 = v53;
  __chkstk_darwin(v54);
  sub_100162EF8();
  uint64_t v224 = v55;
  sub_1001626D4();
  __chkstk_darwin(v56);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v57);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v58);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v59);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v60);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v61);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v62);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v63);
  sub_100109770();
  uint64_t v222 = v64;
  sub_1001626D4();
  __chkstk_darwin(v65);
  os_log_t v223 = (os_log_t)((char *)v190 - v66);
  sub_100129064();
  uint64_t v67 = type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v69 = v68;
  __chkstk_darwin(v70);
  sub_100109314();
  uint64_t v213 = v71;
  sub_100129064();
  uint64_t v207 = type metadata accessor for Calendar();
  sub_100179C0C();
  uint64_t v206 = v72;
  __chkstk_darwin(v73);
  sub_100109314();
  uint64_t v221 = v74;
  uint64_t v75 = sub_10017DF08(&qword_100E63770);
  uint64_t v76 = sub_100109308(v75);
  __chkstk_darwin(v76);
  sub_10016279C();
  uint64_t v77 = sub_10017DF08(&qword_100E63850);
  uint64_t v78 = sub_100109308(v77);
  __chkstk_darwin(v78);
  sub_1001626E0();
  uint64_t v81 = v80 - v79;
  uint64_t v82 = type metadata accessor for WeatherData(0);
  sub_100162E4C();
  __chkstk_darwin(v83);
  sub_100109314();
  uint64_t v220 = v84;
  uint64_t v193 = v10;
  uint64_t v85 = *(void *)(v10 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  swift_bridgeObjectRetain();
  uint64_t v86 = Location.id.getter();
  sub_1001BBE9C(v86, v87, v85);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v88 = type metadata accessor for LocationWeatherDataState(0);
  sub_10012B520(v0, 1, v88);
  if (v89)
  {
    sub_100178110(v0, &qword_100E63770);
    _s7Weather24LocationCompositionStateOwst_0(v81, 1, 1, v82);
LABEL_6:
    sub_100178110(v81, &qword_100E63850);
    if (qword_100E627B0 != -1) {
      swift_once();
    }
    uint64_t v90 = type metadata accessor for Logger();
    sub_1002102B0(v90, (uint64_t)qword_100F51E28);
    sub_100162808();
    v91();
    uint64_t v92 = v233;
    uint64_t v93 = v231;
    uint64_t v94 = v235;
    sub_100162808();
    v95();
    uint64_t v96 = v229;
    uint64_t v97 = v232;
    uint64_t v98 = v230;
    sub_100162808();
    v99();
    Class v100 = Logger.logObject.getter();
    os_log_type_t v101 = static os_log_type_t.error.getter();
    LODWORD(v227) = v101;
    if (os_log_type_enabled(v100, v101))
    {
      uint64_t v102 = v92;
      uint64_t v103 = swift_slowAlloc();
      uint64_t v226 = swift_slowAlloc();
      uint64_t v237 = v226;
      *(_DWORD *)uint64_t v103 = 136315907;
      sub_100BD3AB8(&qword_100E656D8, (void (*)(uint64_t))&type metadata accessor for Date);
      os_log_t v223 = v100;
      uint64_t v104 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v236 = sub_10017E648(v104, v105);
      sub_1001A1B94();
      swift_bridgeObjectRelease();
      uint64_t v106 = sub_10016548C();
      v107(v106);
      *(_WORD *)(v103 + 12) = 2080;
      sub_100BD3AB8(&qword_100EB7830, (void (*)(uint64_t))&type metadata accessor for DetailChartCondition);
      uint64_t v108 = v231;
      uint64_t v109 = v235;
      uint64_t v110 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v236 = sub_10017E648(v110, v111);
      sub_1001A1B94();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v108, v109);
      *(_WORD *)(v103 + 22) = 2160;
      sub_100182734();
      *(_WORD *)(v103 + 32) = 2081;
      sub_100BD3AB8((unint64_t *)&qword_100E66470, (void (*)(uint64_t))&type metadata accessor for Location);
      uint64_t v112 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v236 = sub_10017E648(v112, v113);
      sub_1001A1B94();
      swift_bridgeObjectRelease();
      sub_100179C64();
      sub_100164FC8();
      v114();
      Class v100 = v223;
      _os_log_impl((void *)&_mh_execute_header, v223, (os_log_type_t)v227, "Missing hourly forecast for detail chart; startHour=%s, condition=%s, location=%{private,mask.hash}s",
        (uint8_t *)v103,
        0x2Au);
      swift_arrayDestroy();
      sub_100162EE0();
      sub_100162EE0();
    }
    else
    {
      uint64_t v115 = sub_10016548C();
      v116(v115);
      (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v93, v94);
      (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v97, v98);
    }

    uint64_t v117 = 1;
    uint64_t v118 = v225;
    goto LABEL_40;
  }
  sub_1001177B0(v81);
  sub_100156A50(v0, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  sub_10012B520(v81, 1, v82);
  if (v89) {
    goto LABEL_6;
  }
  uint64_t v119 = v220;
  sub_100178D48(v81, v220, (void (*)(void))type metadata accessor for WeatherData);
  uint64_t v120 = v213;
  uint64_t v232 = v8;
  Location.timeZone.getter();
  static Calendar.currentCalendar(with:)();
  (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v120, v67);
  os_log_t v121 = v223;
  uint64_t v122 = v214;
  Date.wc_addDays(_:calendar:)();
  uint64_t v123 = v222;
  Date.wc_addDays(_:calendar:)();
  uint64_t v124 = v119 + *(int *)(v82 + 24);
  uint64_t v125 = WeatherDataModel.hourlyForecast.getter();
  __chkstk_darwin(v125);
  sub_1001833D0();
  *(void *)(v126 - 16) = v122;
  *(void *)(v126 - 8) = v121;
  uint64_t v128 = (uint64_t)sub_10019E290((uint64_t)sub_100BD538C, v127);
  uint64_t v129 = WeatherDataModel.hourlyForecast.getter();
  __chkstk_darwin(v129);
  sub_1001833D0();
  *(void *)(v130 - 16) = v121;
  *(void *)(v130 - 8) = v123;
  uint64_t v131 = v210;
  sub_100354594();
  uint64_t v231 = 0;
  sub_100162F0C();
  v132();
  uint64_t v133 = v219;
  sub_10012B520(v131, 1, (uint64_t)v219);
  if (v134)
  {
    sub_100178110(v131, &qword_100E6BEC0);
    uint64_t v135 = v230;
    uint64_t v136 = v234;
    uint64_t v137 = v235;
    uint64_t v138 = v212;
  }
  else
  {
    uint64_t v224 = v124;
    uint64_t v139 = *(void (**)(uint64_t, uint64_t, void))(v216 + 32);
    v139(v211, v131, v133);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v138 = v212;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v128 = sub_1007E9AAC(0, *(void *)(v128 + 16) + 1, 1, v128);
    }
    uint64_t v135 = v230;
    uint64_t v136 = v234;
    uint64_t v137 = v235;
    unint64_t v142 = *(void *)(v128 + 16);
    unint64_t v141 = *(void *)(v128 + 24);
    if (v142 >= v141 >> 1) {
      uint64_t v128 = sub_1007E9AAC(v141 > 1, v142 + 1, 1, v128);
    }
    *(void *)(v128 + 16) = v142 + 1;
    uint64_t v133 = v219;
    v139(v128+ ((*(unsigned __int8 *)(v216 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v216 + 80))+ *(void *)(v216 + 72) * v142, v211, v219);
  }
  uint64_t v143 = v233;
  uint64_t v144 = v215;
  if (*(void *)(v128 + 16) >= 0xDuLL)
  {
    sub_10043F724(v128, v138);
    sub_10012B520(v138, 1, (uint64_t)v133);
    if (v89)
    {
      sub_100178110(v138, &qword_100E6BEC0);
      sub_10017F760(v144, 1);
    }
    else
    {
      HourWeather.date.getter();
      uint64_t v144 = v215;
      uint64_t v145 = *(void (**)(uint64_t))(v216 + 8);
      uint64_t v146 = sub_100179C64();
      v145(v146);
      sub_10017F760(v144, 0);
      sub_10012B520(v144, 1, v136);
      if (!v147)
      {
        uint64_t v219 = *(void (**)(void, void, void))(v228 + 32);
        v219(v205, v144, v136);
        uint64_t v148 = v203;
        uint64_t v224 = v128;
        sub_1003041A4(v128, v203);
        sub_10012B520(v148, 1, (uint64_t)v133);
        if (v149)
        {
          sub_100178110(v148, &qword_100E6BEC0);
          uint64_t v144 = v204;
          sub_10017F760(v204, 1);
        }
        else
        {
          uint64_t v150 = v204;
          HourWeather.date.getter();
          ((void (*)(uint64_t, void (*)(void, void, void)))v145)(v148, v133);
          uint64_t v144 = v150;
          sub_10017F760(v150, 0);
          sub_10012B520(v150, 1, v136);
          if (!v151)
          {
            int v176 = v219;
            v219(v190[1], v150, v136);
            uint64_t v177 = WeatherDataModel.dailyForecast.getter();
            __chkstk_darwin(v177);
            sub_1001833D0();
            os_log_t v178 = v223;
            *(void *)(v179 - 16) = v214;
            *(void *)(v179 - 8) = v178;
            sub_10019AB54();
            sub_100162F0C();
            v180();
            uint64_t v181 = v191;
            sub_100BD3B40(v193 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, v191, (void (*)(void))type metadata accessor for TimeState);
            v176(v200, v181, v136);
            uint64_t v182 = v228;
            uint64_t v183 = *(void (**)(void))(v228 + 16);
            sub_1001822D4();
            v183();
            (*(void (**)(uint64_t, os_log_t, uint64_t))(v233 + 16))(v202, v227, v137);
            sub_1001822D4();
            v183();
            sub_1001822D4();
            v183();
            Location.timeZone.getter();
            uint64_t v184 = v194;
            WeatherDataModel.currentWeather.getter();
            uint64_t v185 = *(void (**)(void))(v182 + 8);
            sub_1001819A4();
            v185();
            sub_1001819A4();
            v185();
            sub_100162F0C();
            v186();
            sub_100156A50(v220, (void (*)(void))type metadata accessor for WeatherData);
            uint64_t v187 = v192;
            sub_1001278D0(v201, v192, &qword_100E6B6C8);
            uint64_t v188 = v195;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v196 + 16))(v195, v198, v197);
            uint64_t v189 = v188;
            uint64_t v118 = v225;
            sub_100BCE87C(v199, v224, v225, v184, v187, v189);
            sub_1001819A4();
            v185();
            sub_1001819A4();
            v185();
            uint64_t v117 = 0;
            goto LABEL_40;
          }
        }
        (*(void (**)(uint64_t, uint64_t))(v228 + 8))(v205, v136);
        uint64_t v143 = v233;
        uint64_t v128 = v224;
      }
    }
    sub_100178110(v144, (uint64_t *)&unk_100E73CA0);
  }
  if (qword_100E627B0 != -1) {
    swift_once();
  }
  uint64_t v152 = type metadata accessor for Logger();
  sub_1002102B0(v152, (uint64_t)qword_100F51E28);
  sub_100162808();
  v153();
  uint64_t v154 = v217;
  sub_100162808();
  v155();
  uint64_t v156 = v229;
  uint64_t v157 = v218;
  sub_100162808();
  v158();
  swift_bridgeObjectRetain();
  uint64_t v159 = Logger.logObject.getter();
  os_log_type_t v160 = static os_log_type_t.error.getter();
  LODWORD(v232) = v160;
  if (os_log_type_enabled(v159, v160))
  {
    uint64_t v161 = swift_slowAlloc();
    uint64_t v231 = swift_slowAlloc();
    uint64_t v237 = v231;
    *(_DWORD *)uint64_t v161 = 136316163;
    sub_100BD3AB8(&qword_100E656D8, (void (*)(uint64_t))&type metadata accessor for Date);
    os_log_t v227 = v159;
    uint64_t v162 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v236 = sub_10017E648(v162, v163);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100184634();
    sub_100164FC8();
    v157();
    *(_WORD *)(v161 + 12) = 2080;
    sub_100BD3AB8(&qword_100EB7830, (void (*)(uint64_t))&type metadata accessor for DetailChartCondition);
    uint64_t v164 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v236 = sub_10017E648(v164, v165);
    sub_1001A1B94();
    swift_bridgeObjectRelease();
    sub_100162F0C();
    v166();
    *(_WORD *)(v161 + 22) = 2048;
    uint64_t v167 = *(void *)(v128 + 16);
    swift_bridgeObjectRelease();
    uint64_t v236 = v167;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v161 + 32) = 2160;
    sub_100182734();
    *(_WORD *)(v161 + 42) = 2081;
    sub_100BD3AB8((unint64_t *)&qword_100E66470, (void (*)(uint64_t))&type metadata accessor for Location);
    uint64_t v168 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v236 = sub_10017E648(v168, v169);
    uint64_t v170 = v234;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100162F0C();
    v171();
    os_log_t v172 = v227;
    _os_log_impl((void *)&_mh_execute_header, v227, (os_log_type_t)v232, "Not enough hourly data to create create detail chart; startHour=%s, condition=%s, hourCount=%ld, location=%{private,mask.hash}s",
      (uint8_t *)v161,
      0x34u);
    swift_arrayDestroy();
    sub_100162EE0();
    sub_100162EE0();
  }
  else
  {

    swift_bridgeObjectRelease();
    (*(void (**)(void (*)(void), uint64_t))(v156 + 8))(v157, v135);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v143 + 8))(v154, v137);
    uint64_t v173 = sub_100184634();
    uint64_t v170 = v234;
    ((void (*)(uint64_t, uint64_t))v157)(v173, v234);
  }
  sub_100162F0C();
  v174();
  sub_100156A50(v220, (void (*)(void))type metadata accessor for WeatherData);
  uint64_t v118 = v225;
  ((void (*)(uint64_t, uint64_t))v157)(v222, v170);
  ((void (*)(os_log_t, uint64_t))v157)(v223, v170);
  uint64_t v117 = 1;
LABEL_40:
  uint64_t v175 = type metadata accessor for ConditionDetailChartDataInput(0);
  _s7Weather24LocationCompositionStateOwst_0(v118, v117, 1, v175);
  sub_100162694();
}

void sub_100BD1508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_100162EA0();
  a19 = v20;
  a20 = v21;
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v26 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v28 = v27;
  __chkstk_darwin(v29);
  sub_10016278C();
  uint64_t v32 = (char *)(v30 - v31);
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)&a9 - v34;
  sub_100BD3AB8((unint64_t *)&qword_100E66CC0, (void (*)(uint64_t))&type metadata accessor for Date);
  char v36 = dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
  v37(v35, v25, v26);
  v37(v32, v23, v26);
  if ((v36 & 1) == 0) {
    static Date.< infix(_:_:)();
  }
  uint64_t v38 = *(void (**)(void))(v28 + 8);
  sub_100164944();
  v38();
  sub_100164944();
  v38();
  sub_100162694();
}

#error "100BD1704: call analysis failed (funcsize=52)"

uint64_t type metadata accessor for ConditionDetailChartDataInputFactory()
{
  return self;
}

void *sub_100BD176C(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v27 = *a2;
    *a1 = *a2;
    a1 = (void *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((void *)((char *)a1 + a3[5]), (void *)((char *)a2 + a3[5]), v7);
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for DetailChartCondition();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    v8((void *)((char *)a1 + a3[7]), (void *)((char *)a2 + a3[7]), v7);
    v8((void *)((char *)a1 + a3[8]), (void *)((char *)a2 + a3[8]), v7);
    uint64_t v13 = a3[10];
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    uint64_t v17 = a3[12];
    *(void *)((char *)a1 + a3[11]) = *(void *)((char *)a2 + a3[11]);
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = type metadata accessor for CurrentWeather();
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
    swift_bridgeObjectRetain();
    v21(v18, v19, v20);
    uint64_t v22 = a3[13];
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = type metadata accessor for DayWeather();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25))
    {
      uint64_t v26 = sub_10017DF08(&qword_100E6B6C8);
      memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v25);
    }
    uint64_t v28 = a3[14];
    uint64_t v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    uint64_t v31 = type metadata accessor for ChartViewModelInterpolationMode();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  }
  return a1;
}

uint64_t sub_100BD1A7C(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for Date();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + a2[5], v4);
  uint64_t v6 = a1 + a2[6];
  uint64_t v7 = type metadata accessor for DetailChartCondition();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  v5(a1 + a2[7], v4);
  v5(a1 + a2[8], v4);
  uint64_t v8 = a1 + a2[10];
  uint64_t v9 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();
  uint64_t v10 = a1 + a2[12];
  uint64_t v11 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = a1 + a2[13];
  uint64_t v13 = type metadata accessor for DayWeather();
  if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  uint64_t v14 = a1 + a2[14];
  uint64_t v15 = type metadata accessor for ChartViewModelInterpolationMode();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);

  return v16(v14, v15);
}

uint64_t sub_100BD1CA4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for DetailChartCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  uint64_t v12 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  uint64_t v16 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = type metadata accessor for CurrentWeather();
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
  swift_bridgeObjectRetain();
  v20(v17, v18, v19);
  uint64_t v21 = a3[13];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (const void *)(a2 + v21);
  uint64_t v24 = type metadata accessor for DayWeather();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24))
  {
    uint64_t v25 = sub_10017DF08(&qword_100E6B6C8);
    memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v24);
  }
  uint64_t v26 = a3[14];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  uint64_t v29 = type metadata accessor for ChartViewModelInterpolationMode();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  return a1;
}

uint64_t sub_100BD1F64(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for DetailChartCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 24))(v9, v10, v11);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v12 = a3[10];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[12];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 24))(v17, v18, v19);
  uint64_t v20 = a3[13];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (const void *)(a2 + v20);
  uint64_t v23 = type metadata accessor for DayWeather();
  LODWORD(v7) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v23);
  int v24 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23);
  if (!v7)
  {
    uint64_t v25 = *(void *)(v23 - 8);
    if (!v24)
    {
      (*(void (**)(void *, const void *, uint64_t))(v25 + 24))(v21, v22, v23);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v25 + 8))(v21, v23);
    goto LABEL_6;
  }
  if (v24)
  {
LABEL_6:
    uint64_t v26 = sub_10017DF08(&qword_100E6B6C8);
    memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v23);
LABEL_7:
  uint64_t v27 = a3[14];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = type metadata accessor for ChartViewModelInterpolationMode();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v28, v29, v30);
  return a1;
}

uint64_t sub_100BD22A8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for DetailChartCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  uint64_t v12 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = a3[12];
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  uint64_t v20 = a3[13];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (const void *)(a2 + v20);
  uint64_t v23 = type metadata accessor for DayWeather();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23))
  {
    uint64_t v24 = sub_10017DF08(&qword_100E6B6C8);
    memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v23);
  }
  uint64_t v25 = a3[14];
  uint64_t v26 = a1 + v25;
  uint64_t v27 = a2 + v25;
  uint64_t v28 = type metadata accessor for ChartViewModelInterpolationMode();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
  return a1;
}

uint64_t sub_100BD2554(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + a3[5], a2 + a3[5], v6);
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for DetailChartCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  v7(a1 + a3[7], a2 + a3[7], v6);
  v7(a1 + a3[8], a2 + a3[8], v6);
  uint64_t v12 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[12];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  uint64_t v20 = a3[13];
  uint64_t v21 = (void *)(a1 + v20);
  uint64_t v22 = (const void *)(a2 + v20);
  uint64_t v23 = type metadata accessor for DayWeather();
  LODWORD(v7) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v23);
  int v24 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23);
  if (!v7)
  {
    uint64_t v25 = *(void *)(v23 - 8);
    if (!v24)
    {
      (*(void (**)(void *, const void *, uint64_t))(v25 + 40))(v21, v22, v23);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v25 + 8))(v21, v23);
    goto LABEL_6;
  }
  if (v24)
  {
LABEL_6:
    uint64_t v26 = sub_10017DF08(&qword_100E6B6C8);
    memcpy(v21, v22, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v23);
LABEL_7:
  uint64_t v27 = a3[14];
  uint64_t v28 = a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = type metadata accessor for ChartViewModelInterpolationMode();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 40))(v28, v29, v30);
  return a1;
}

uint64_t sub_100BD288C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BD28A0);
}

uint64_t sub_100BD28A0()
{
  sub_100188B38();
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    uint64_t v5 = v3;
    uint64_t v6 = v1;
  }
  else
  {
    type metadata accessor for DetailChartCondition();
    sub_100162F30();
    if (*(_DWORD *)(v8 + 84) == v0)
    {
      uint64_t v5 = v7;
      uint64_t v9 = v2[6];
    }
    else
    {
      type metadata accessor for TimeZone();
      sub_100162F30();
      if (*(_DWORD *)(v11 + 84) == v0)
      {
        uint64_t v5 = v10;
        uint64_t v9 = v2[10];
      }
      else
      {
        if (v0 == 0x7FFFFFFF) {
          return sub_100163020(*(void *)(v1 + v2[11]));
        }
        type metadata accessor for CurrentWeather();
        sub_100162F30();
        if (*(_DWORD *)(v14 + 84) == v0)
        {
          uint64_t v5 = v13;
          uint64_t v9 = v2[12];
        }
        else
        {
          sub_10017DF08(&qword_100E6B6C8);
          sub_100162F30();
          if (*(_DWORD *)(v16 + 84) == v0)
          {
            uint64_t v5 = v15;
            uint64_t v9 = v2[13];
          }
          else
          {
            uint64_t v5 = type metadata accessor for ChartViewModelInterpolationMode();
            uint64_t v9 = v2[14];
          }
        }
      }
    }
    uint64_t v6 = v1 + v9;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v6, v0, v5);
}

uint64_t sub_100BD29CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BD29E0);
}

void sub_100BD29E0()
{
  sub_100166E6C();
  sub_100162F30();
  if (*(_DWORD *)(v4 + 84) != v3)
  {
    type metadata accessor for DetailChartCondition();
    sub_100162F30();
    if (*(_DWORD *)(v5 + 84) != v3)
    {
      type metadata accessor for TimeZone();
      sub_100162F30();
      if (*(_DWORD *)(v6 + 84) != v3)
      {
        if (v3 == 0x7FFFFFFF)
        {
          *(void *)(v1 + *(int *)(v2 + 44)) = (v0 - 1);
          return;
        }
        type metadata accessor for CurrentWeather();
        sub_100162F30();
        if (*(_DWORD *)(v7 + 84) != v3)
        {
          sub_10017DF08(&qword_100E6B6C8);
          sub_100162F30();
          if (*(_DWORD *)(v8 + 84) != v3) {
            type metadata accessor for ChartViewModelInterpolationMode();
          }
        }
      }
    }
  }
  sub_1001650E4();

  _s7Weather24LocationCompositionStateOwst_0(v9, v10, v11, v12);
}

uint64_t type metadata accessor for ConditionDetailChartDataInput(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100EB7718);
}

void sub_100BD2B28()
{
  type metadata accessor for Date();
  if (v0 <= 0x3F)
  {
    type metadata accessor for DetailChartCondition();
    if (v1 <= 0x3F)
    {
      type metadata accessor for TimeZone();
      if (v2 <= 0x3F)
      {
        type metadata accessor for CurrentWeather();
        if (v3 <= 0x3F)
        {
          sub_100BD3A04(319, (unint64_t *)&unk_100EB7728, (void (*)(uint64_t))&type metadata accessor for DayWeather);
          if (v4 <= 0x3F)
          {
            type metadata accessor for ChartViewModelInterpolationMode();
            if (v5 <= 0x3F) {
              swift_initStructMetadata();
            }
          }
        }
      }
    }
  }
}

void *sub_100BD2D14(void *a1, void *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *unint64_t v4 = *a2;
    unint64_t v4 = (void *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for Date();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = a3[7];
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = type metadata accessor for DetailChartCondition();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = a3[9];
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    uint64_t v19 = (char *)v4 + v18;
    uint64_t v20 = (char *)a2 + v18;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v12))
    {
      uint64_t v21 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      v13(v19, v20, v12);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v12);
    }
  }
  return v4;
}

uint64_t sub_100BD2EE8(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[6];
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v10(v4, v5);
  uint64_t v6 = a1 + a2[7];
  uint64_t v7 = type metadata accessor for DetailChartCondition();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + a2[9];
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v8, 1, v5);
  if (!result)
  {
    return v10(v8, v5);
  }
  return result;
}

void *sub_100BD3008(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = a3[7];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for DetailChartCondition();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v11))
  {
    uint64_t v20 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    v12(v18, v19, v11);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v11);
  }
  return a1;
}

void *sub_100BD318C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for DetailChartCondition();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v16 = a3[9];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  LODWORD(v13) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1 + v16, 1, v9);
  int v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v9);
  if (!v13)
  {
    if (!v19)
    {
      v11(v17, v18, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
    goto LABEL_6;
  }
  if (v19)
  {
LABEL_6:
    uint64_t v20 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v17, v18, v9);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v9);
  return a1;
}

_OWORD *sub_100BD33A0(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for DetailChartCondition();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  uint64_t v16 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v10))
  {
    uint64_t v19 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    v11(v17, v18, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v10);
  }
  return a1;
}

void *sub_100BD3504(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 40);
  v13(v9, v10, v11);
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for DetailChartCondition();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 40))(v15, v16, v17);
  uint64_t v18 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  LODWORD(v15) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1 + v18, 1, v11);
  int v21 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v11);
  if (!v15)
  {
    if (!v21)
    {
      v13(v19, v20, v11);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v19, v11);
    goto LABEL_6;
  }
  if (v21)
  {
LABEL_6:
    uint64_t v22 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v19, v20, *(void *)(*(void *)(v22 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v19, v20, v11);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v11);
  return a1;
}

uint64_t sub_100BD36F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BD3708);
}

uint64_t sub_100BD3708(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_100163020(*(void *)(a1 + 8));
  }
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v8 + 84) == a2)
  {
    uint64_t v9 = v7;
    uint64_t v10 = a3[6];
  }
  else
  {
    type metadata accessor for DetailChartCondition();
    sub_100162F30();
    if (*(_DWORD *)(v12 + 84) == a2)
    {
      uint64_t v9 = v11;
      uint64_t v10 = a3[7];
    }
    else
    {
      uint64_t v9 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      uint64_t v10 = a3[9];
    }
  }

  return _s7Weather24LocationCompositionStateOwet_0(a1 + v10, a2, v9);
}

uint64_t sub_100BD37D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BD37E4);
}

uint64_t sub_100BD37E4(uint64_t result, int a2, int a3)
{
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    type metadata accessor for Date();
    sub_100162F30();
    if (*(_DWORD *)(v4 + 84) != a3)
    {
      type metadata accessor for DetailChartCondition();
      sub_100162F30();
      if (*(_DWORD *)(v5 + 84) != a3) {
        sub_10017DF08((uint64_t *)&unk_100E73CA0);
      }
    }
    sub_1001650E4();
    return _s7Weather24LocationCompositionStateOwst_0(v6, v7, v8, v9);
  }
  return result;
}

uint64_t type metadata accessor for ConditionDetailChartDataInputFactoryWithCache.CacheKey(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB77D8);
}

void sub_100BD38D0()
{
  type metadata accessor for Date();
  if (v0 <= 0x3F)
  {
    type metadata accessor for DetailChartCondition();
    if (v1 <= 0x3F)
    {
      sub_100BD3A04(319, (unint64_t *)&qword_100E638F0, (void (*)(uint64_t))&type metadata accessor for Date);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_100BD3A04(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100BD3A58()
{
  return sub_100BD3AB8(&qword_100EB7820, (void (*)(uint64_t))type metadata accessor for ConditionDetailChartDataInputFactoryWithCache.CacheKey);
}

void sub_100BD3AA0()
{
}

uint64_t sub_100BD3AB8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ConditionDetailChartInput(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB7890);
}

uint64_t type metadata accessor for ConditionDetailChartInputs(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB7920);
}

uint64_t sub_100BD3B40(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_100BD3B94(uint64_t a1)
{
  return sub_100BD1674(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), &HourWeather.date.getter) & 1;
}

uint64_t sub_100BD3BC8(uint64_t a1)
{
  return sub_100BD1674(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), &DayWeather.date.getter) & 1;
}

uint64_t *sub_100BD3BFC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for ConditionDetailChartHeaderInput();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    uint64_t v13 = (int *)type metadata accessor for ConditionDetailChartDataInput(0);
    v12(&v9[v13[5]], &v10[v13[5]], v11);
    uint64_t v14 = v13[6];
    uint64_t v15 = &v9[v14];
    uint64_t v16 = &v10[v14];
    uint64_t v17 = type metadata accessor for DetailChartCondition();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    v12(&v9[v13[7]], &v10[v13[7]], v11);
    v12(&v9[v13[8]], &v10[v13[8]], v11);
    v9[v13[9]] = v10[v13[9]];
    uint64_t v18 = v13[10];
    uint64_t v19 = &v9[v18];
    uint64_t v20 = &v10[v18];
    uint64_t v21 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    *(void *)&v9[v13[11]] = *(void *)&v10[v13[11]];
    uint64_t v22 = v13[12];
    uint64_t v23 = &v9[v22];
    int v24 = &v10[v22];
    uint64_t v25 = type metadata accessor for CurrentWeather();
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
    swift_bridgeObjectRetain();
    v26(v23, v24, v25);
    uint64_t v27 = v13[13];
    uint64_t v28 = &v9[v27];
    uint64_t v29 = &v10[v27];
    uint64_t v30 = type metadata accessor for DayWeather();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30))
    {
      uint64_t v31 = sub_10017DF08(&qword_100E6B6C8);
      memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
    }
    uint64_t v33 = v13[14];
    uint64_t v34 = &v9[v33];
    uint64_t v35 = &v10[v33];
    uint64_t v36 = type metadata accessor for ChartViewModelInterpolationMode();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
  }
  return a1;
}

uint64_t sub_100BD3F68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConditionDetailChartHeaderInput();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  v7(v5, v6);
  uint64_t v8 = (int *)type metadata accessor for ConditionDetailChartDataInput(0);
  v7(v5 + v8[5], v6);
  uint64_t v9 = v5 + v8[6];
  uint64_t v10 = type metadata accessor for DetailChartCondition();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  v7(v5 + v8[7], v6);
  v7(v5 + v8[8], v6);
  uint64_t v11 = v5 + v8[10];
  uint64_t v12 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  swift_bridgeObjectRelease();
  uint64_t v13 = v5 + v8[12];
  uint64_t v14 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
  uint64_t v15 = v5 + v8[13];
  uint64_t v16 = type metadata accessor for DayWeather();
  if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, v16)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
  uint64_t v17 = v5 + v8[14];
  uint64_t v18 = type metadata accessor for ChartViewModelInterpolationMode();
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8);

  return v19(v17, v18);
}

uint64_t sub_100BD41DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ConditionDetailChartHeaderInput();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  uint64_t v12 = (int *)type metadata accessor for ConditionDetailChartDataInput(0);
  v11(v8 + v12[5], v9 + v12[5], v10);
  uint64_t v13 = v12[6];
  uint64_t v14 = v8 + v13;
  uint64_t v15 = v9 + v13;
  uint64_t v16 = type metadata accessor for DetailChartCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  v11(v8 + v12[7], v9 + v12[7], v10);
  v11(v8 + v12[8], v9 + v12[8], v10);
  *(unsigned char *)(v8 + v12[9]) = *(unsigned char *)(v9 + v12[9]);
  uint64_t v17 = v12[10];
  uint64_t v18 = v8 + v17;
  uint64_t v19 = v9 + v17;
  uint64_t v20 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  *(void *)(v8 + v12[11]) = *(void *)(v9 + v12[11]);
  uint64_t v21 = v12[12];
  uint64_t v22 = v8 + v21;
  uint64_t v23 = v9 + v21;
  uint64_t v24 = type metadata accessor for CurrentWeather();
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16);
  swift_bridgeObjectRetain();
  v25(v22, v23, v24);
  uint64_t v26 = v12[13];
  uint64_t v27 = (void *)(v8 + v26);
  uint64_t v28 = (const void *)(v9 + v26);
  uint64_t v29 = type metadata accessor for DayWeather();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v29))
  {
    uint64_t v30 = sub_10017DF08(&qword_100E6B6C8);
    memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v29);
  }
  uint64_t v31 = v12[14];
  uint64_t v32 = v8 + v31;
  uint64_t v33 = v9 + v31;
  uint64_t v34 = type metadata accessor for ChartViewModelInterpolationMode();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  return a1;
}

uint64_t sub_100BD44F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ConditionDetailChartHeaderInput();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  uint64_t v12 = (int *)type metadata accessor for ConditionDetailChartDataInput(0);
  v11(v8 + v12[5], v9 + v12[5], v10);
  uint64_t v13 = v12[6];
  uint64_t v14 = v8 + v13;
  uint64_t v15 = v9 + v13;
  uint64_t v16 = type metadata accessor for DetailChartCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  v11(v8 + v12[7], v9 + v12[7], v10);
  v11(v8 + v12[8], v9 + v12[8], v10);
  *(unsigned char *)(v8 + v12[9]) = *(unsigned char *)(v9 + v12[9]);
  uint64_t v17 = v12[10];
  uint64_t v18 = v8 + v17;
  uint64_t v19 = v9 + v17;
  uint64_t v20 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
  *(void *)(v8 + v12[11]) = *(void *)(v9 + v12[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v21 = v12[12];
  uint64_t v22 = v8 + v21;
  uint64_t v23 = v9 + v21;
  uint64_t v24 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  uint64_t v25 = v12[13];
  uint64_t v26 = (void *)(v8 + v25);
  uint64_t v27 = (const void *)(v9 + v25);
  uint64_t v28 = type metadata accessor for DayWeather();
  LODWORD(v11) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v28);
  int v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28);
  if (!v11)
  {
    uint64_t v30 = *(void *)(v28 - 8);
    if (!v29)
    {
      (*(void (**)(void *, const void *, uint64_t))(v30 + 24))(v26, v27, v28);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v30 + 8))(v26, v28);
    goto LABEL_6;
  }
  if (v29)
  {
LABEL_6:
    uint64_t v31 = sub_10017DF08(&qword_100E6B6C8);
    memcpy(v26, v27, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v28 - 8) + 16))(v26, v27, v28);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
LABEL_7:
  uint64_t v32 = v12[14];
  uint64_t v33 = v8 + v32;
  uint64_t v34 = v9 + v32;
  uint64_t v35 = type metadata accessor for ChartViewModelInterpolationMode();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 24))(v33, v34, v35);
  return a1;
}

uint64_t sub_100BD4898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ConditionDetailChartHeaderInput();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  uint64_t v12 = (int *)type metadata accessor for ConditionDetailChartDataInput(0);
  v11(v8 + v12[5], v9 + v12[5], v10);
  uint64_t v13 = v12[6];
  uint64_t v14 = v8 + v13;
  uint64_t v15 = v9 + v13;
  uint64_t v16 = type metadata accessor for DetailChartCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  v11(v8 + v12[7], v9 + v12[7], v10);
  v11(v8 + v12[8], v9 + v12[8], v10);
  *(unsigned char *)(v8 + v12[9]) = *(unsigned char *)(v9 + v12[9]);
  uint64_t v17 = v12[10];
  uint64_t v18 = v8 + v17;
  uint64_t v19 = v9 + v17;
  uint64_t v20 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  *(void *)(v8 + v12[11]) = *(void *)(v9 + v12[11]);
  uint64_t v21 = v12[12];
  uint64_t v22 = v8 + v21;
  uint64_t v23 = v9 + v21;
  uint64_t v24 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
  uint64_t v25 = v12[13];
  uint64_t v26 = (void *)(v8 + v25);
  uint64_t v27 = (const void *)(v9 + v25);
  uint64_t v28 = type metadata accessor for DayWeather();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28))
  {
    uint64_t v29 = sub_10017DF08(&qword_100E6B6C8);
    memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
  }
  uint64_t v30 = v12[14];
  uint64_t v31 = v8 + v30;
  uint64_t v32 = v9 + v30;
  uint64_t v33 = type metadata accessor for ChartViewModelInterpolationMode();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
  return a1;
}

uint64_t sub_100BD4BA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ConditionDetailChartHeaderInput();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  uint64_t v12 = (int *)type metadata accessor for ConditionDetailChartDataInput(0);
  v11(v8 + v12[5], v9 + v12[5], v10);
  uint64_t v13 = v12[6];
  uint64_t v14 = v8 + v13;
  uint64_t v15 = v9 + v13;
  uint64_t v16 = type metadata accessor for DetailChartCondition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  v11(v8 + v12[7], v9 + v12[7], v10);
  v11(v8 + v12[8], v9 + v12[8], v10);
  *(unsigned char *)(v8 + v12[9]) = *(unsigned char *)(v9 + v12[9]);
  uint64_t v17 = v12[10];
  uint64_t v18 = v8 + v17;
  uint64_t v19 = v9 + v17;
  uint64_t v20 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  *(void *)(v8 + v12[11]) = *(void *)(v9 + v12[11]);
  swift_bridgeObjectRelease();
  uint64_t v21 = v12[12];
  uint64_t v22 = v8 + v21;
  uint64_t v23 = v9 + v21;
  uint64_t v24 = type metadata accessor for CurrentWeather();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 40))(v22, v23, v24);
  uint64_t v25 = v12[13];
  uint64_t v26 = (void *)(v8 + v25);
  uint64_t v27 = (const void *)(v9 + v25);
  uint64_t v28 = type metadata accessor for DayWeather();
  LODWORD(v11) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v28);
  int v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28);
  if (!v11)
  {
    uint64_t v30 = *(void *)(v28 - 8);
    if (!v29)
    {
      (*(void (**)(void *, const void *, uint64_t))(v30 + 40))(v26, v27, v28);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v30 + 8))(v26, v28);
    goto LABEL_6;
  }
  if (v29)
  {
LABEL_6:
    uint64_t v31 = sub_10017DF08(&qword_100E6B6C8);
    memcpy(v26, v27, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
LABEL_7:
  uint64_t v32 = v12[14];
  uint64_t v33 = v8 + v32;
  uint64_t v34 = v9 + v32;
  uint64_t v35 = type metadata accessor for ChartViewModelInterpolationMode();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 40))(v33, v34, v35);
  return a1;
}

uint64_t sub_100BD4F40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BD4F54);
}

uint64_t sub_100BD4F54()
{
  sub_100188B38();
  type metadata accessor for ConditionDetailChartHeaderInput();
  sub_100162F30();
  if (*(_DWORD *)(v4 + 84) == v0)
  {
    uint64_t v5 = v3;
    uint64_t v6 = v1;
  }
  else
  {
    uint64_t v5 = type metadata accessor for ConditionDetailChartDataInput(0);
    uint64_t v6 = v1 + *(int *)(v2 + 20);
  }

  return _s7Weather24LocationCompositionStateOwet_0(v6, v0, v5);
}

uint64_t sub_100BD4FC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BD4FD8);
}

uint64_t sub_100BD4FD8(uint64_t a1, uint64_t a2, int a3)
{
  type metadata accessor for ConditionDetailChartHeaderInput();
  sub_100162F30();
  if (*(_DWORD *)(v4 + 84) != a3) {
    type metadata accessor for ConditionDetailChartDataInput(0);
  }
  sub_1001650E4();

  return _s7Weather24LocationCompositionStateOwst_0(v5, v6, v7, v8);
}

uint64_t sub_100BD5058()
{
  uint64_t result = type metadata accessor for ConditionDetailChartHeaderInput();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ConditionDetailChartDataInput(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ConditionDetailChartDataInput.ChartDayKind(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100BD51ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ConditionDetailChartDataInput.ChartDayKind()
{
  return &type metadata for ConditionDetailChartDataInput.ChartDayKind;
}

uint64_t sub_100BD5224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BD5238);
}

uint64_t sub_100BD5238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) != a2) {
    return sub_100163020(*(void *)(a1 + *(int *)(a3 + 20)));
  }

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
}

uint64_t sub_100BD52B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BD52CC);
}

void sub_100BD52CC()
{
  sub_100166E6C();
  sub_100162F30();
  if (*(_DWORD *)(v4 + 84) == v3)
  {
    sub_1001650E4();
    _s7Weather24LocationCompositionStateOwst_0(v5, v6, v7, v8);
  }
  else
  {
    *(void *)(v1 + *(int *)(v2 + 20)) = (v0 - 1);
  }
}

unint64_t sub_100BD5340()
{
  unint64_t result = qword_100EB7958;
  if (!qword_100EB7958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB7958);
  }
  return result;
}

uint64_t sub_100BD538C(uint64_t a1)
{
  return sub_100BD3B94(a1) & 1;
}

uint64_t *sub_100BD53A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Location();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    long long v11 = *((_OWORD *)v10 + 1);
    *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
    *((_OWORD *)v9 + 1) = v11;
    v9[32] = v10[32];
  }
  return a1;
}

uint64_t sub_100BD5484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  return a1;
}

uint64_t sub_100BD5510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = (long long *)(a2 + v7);
  long long v10 = *v9;
  long long v11 = v9[1];
  *(unsigned char *)(v8 + 32) = *((unsigned char *)v9 + 32);
  *(_OWORD *)uint64_t v8 = v10;
  *(_OWORD *)(v8 + 16) = v11;
  return a1;
}

uint64_t sub_100BD559C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  return a1;
}

uint64_t sub_100BD5628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v10;
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  return a1;
}

uint64_t sub_100BD56B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BD56C8);
}

uint64_t sub_100BD56C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Location();

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_100BD5710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BD5724);
}

uint64_t sub_100BD5724(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Location();

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v4);
}

uint64_t sub_100BD5770(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6F697461636F6CLL && a2 == 0xE800000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6552656372756F73 && a2 == 0xEA00000000007463)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100BD586C(char a1)
{
  if (a1) {
    return 0x6552656372756F73;
  }
  else {
    return 0x6E6F697461636F6CLL;
  }
}

BOOL sub_100BD58A8(uint64_t a1, uint64_t a2)
{
  if ((static Location.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for NextHourPrecipitationDetailViewState() + 20);
  int v5 = (CGRect *)(a1 + v4);
  char v6 = *(unsigned char *)(a1 + v4 + 32);
  uint64_t v7 = a2 + v4;
  if ((v6 & 1) == 0) {
    return (*(unsigned char *)(v7 + 32) & 1) == 0 && CGRectEqualToRect(*v5, *(CGRect *)v7);
  }
  return (*(unsigned char *)(v7 + 32) & 1) != 0;
}

uint64_t sub_100BD5924(void *a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100EB7A08);
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  sub_1001B1E64(a1, a1[3]);
  sub_100BD6068();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  type metadata accessor for Location();
  sub_100BD61C8(&qword_100E6F9F8, (void (*)(uint64_t))&type metadata accessor for Location);
  sub_10016347C();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for NextHourPrecipitationDetailViewState();
    type metadata accessor for CGRect(0);
    sub_100BD61C8(&qword_100E6FA10, type metadata accessor for CGRect);
    sub_10016347C();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_100BD5AEC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v20 = v4;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  sub_10017DF08(&qword_100EB79F8);
  sub_100179C0C();
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t HourPrecipitationDetailViewState = type metadata accessor for NextHourPrecipitationDetailViewState();
  __chkstk_darwin(HourPrecipitationDetailViewState - 8);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  uint64_t v15 = v12 - v11 + *(int *)(v14 + 28);
  *(_OWORD *)uint64_t v15 = 0u;
  *(_OWORD *)(v15 + 16) = 0u;
  *(unsigned char *)(v15 + 32) = 1;
  sub_1001B1E64(a1, a1[3]);
  sub_100BD6068();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  LOBYTE(v22) = 0;
  sub_100BD61C8(&qword_100E6F9D0, (void (*)(uint64_t))&type metadata accessor for Location);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v13, v8, v21);
  type metadata accessor for CGRect(0);
  sub_100BD61C8(&qword_100E6F9E8, type metadata accessor for CGRect);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  uint64_t v16 = sub_10019F94C();
  v17(v16);
  *(_OWORD *)uint64_t v15 = v22;
  *(_OWORD *)(v15 + 16) = v23;
  *(unsigned char *)(v15 + 32) = v24;
  sub_100BD60B4(v13, a2);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  return sub_100BD6118(v13);
}

uint64_t sub_100BD5DF0()
{
  return sub_100BD586C(*v0);
}

uint64_t sub_100BD5DF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100BD5770(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100BD5E20(uint64_t a1)
{
  unint64_t v2 = sub_100BD6068();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BD5E5C(uint64_t a1)
{
  unint64_t v2 = sub_100BD6068();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100BD5E9C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100BD5AEC(a1, a2);
}

uint64_t sub_100BD5EB4(void *a1)
{
  return sub_100BD5924(a1);
}

void sub_100BD5ECC()
{
}

uint64_t sub_100BD5EE4()
{
  return sub_1008C285C();
}

uint64_t sub_100BD5EFC@<X0>(uint64_t *a1@<X8>)
{
  a1[3] = sub_10017DF08(&qword_100EB7A10);
  a1[4] = sub_100BD6174();
  sub_100170694(a1);
  type metadata accessor for NextHourPrecipitationDetailViewState();
  return ShortDescription.init(name:_:)();
}

uint64_t sub_100BD5F9C@<X0>(uint64_t *a1@<X8>)
{
  return sub_100BD5EFC(a1);
}

uint64_t sub_100BD5FB4()
{
  sub_100BD61C8(&qword_100EB7A20, (void (*)(uint64_t))type metadata accessor for NextHourPrecipitationDetailViewState);

  return ShortDescribable.description.getter();
}

uint64_t sub_100BD6020()
{
  return sub_100BD61C8(&qword_100EB79F0, (void (*)(uint64_t))type metadata accessor for NextHourPrecipitationDetailViewState);
}

unint64_t sub_100BD6068()
{
  unint64_t result = qword_100EB7A00;
  if (!qword_100EB7A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB7A00);
  }
  return result;
}

uint64_t sub_100BD60B4(uint64_t a1, uint64_t a2)
{
  uint64_t HourPrecipitationDetailViewState = type metadata accessor for NextHourPrecipitationDetailViewState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(HourPrecipitationDetailViewState - 8) + 16))(a2, a1, HourPrecipitationDetailViewState);
  return a2;
}

uint64_t sub_100BD6118(uint64_t a1)
{
  uint64_t HourPrecipitationDetailViewState = type metadata accessor for NextHourPrecipitationDetailViewState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(HourPrecipitationDetailViewState - 8) + 8))(a1, HourPrecipitationDetailViewState);
  return a1;
}

unint64_t sub_100BD6174()
{
  unint64_t result = qword_100EB7A18;
  if (!qword_100EB7A18)
  {
    sub_10018C6DC(&qword_100EB7A10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB7A18);
  }
  return result;
}

uint64_t sub_100BD61C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NextHourPrecipitationDetailViewState.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100BD62DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NextHourPrecipitationDetailViewState.CodingKeys()
{
  return &type metadata for NextHourPrecipitationDetailViewState.CodingKeys;
}

unint64_t sub_100BD6318()
{
  unint64_t result = qword_100EB7A28;
  if (!qword_100EB7A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB7A28);
  }
  return result;
}

unint64_t sub_100BD6368()
{
  unint64_t result = qword_100EB7A30;
  if (!qword_100EB7A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB7A30);
  }
  return result;
}

unint64_t sub_100BD63B8()
{
  unint64_t result = qword_100EB7A38;
  if (!qword_100EB7A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB7A38);
  }
  return result;
}

void sub_100BD6404()
{
  if (qword_100E629A8 != -1) {
    swift_once();
  }
  sub_1001885B0();
  sub_10019F968();
  qword_100F52480 = sub_10017DD50(48.0, v0);
}

void sub_100BD647C()
{
  if (qword_100E629A8 != -1) {
    swift_once();
  }
  sub_1001885B0();
  sub_10019F968();
  qword_100F52488 = sub_10017DD50(80.0, v0);
}

uint64_t sub_100BD64F4()
{
  sub_100BDB9F0();
  if ((v0 & 1) == 0) {
    return 0;
  }
  sub_100BDBD68();
  if ((v1 & 1) == 0) {
    return 0;
  }
  type metadata accessor for ScrubberViewModel(0);

  return static TimeZone.== infix(_:_:)();
}

uint64_t sub_100BD6570(uint64_t a1, uint64_t a2)
{
  if ((static Date.== infix(_:_:)() & 1) != 0
    && (uint64_t v4 = type metadata accessor for ScrubberDay(0), sub_100BDBD68(), (v5 & 1) != 0))
  {
    uint64_t v6 = *(int *)(v4 + 24);
    uint64_t v7 = *(void *)(a1 + v6);
    uint64_t v8 = *(void *)(a1 + v6 + 8);
    uint64_t v9 = (void *)(a2 + v6);
    BOOL v10 = v7 == *v9 && v8 == v9[1];
    if (v10 || (char v11 = _stringCompareWithSmolCheck(_:_:expecting:)(), v12 = 0, (v11 & 1) != 0)) {
      sub_10017DD68();
    }
  }
  else
  {
    char v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_100BD6608@<X0>(uint64_t a1@<X8>)
{
  return sub_100BD6624(a1);
}

uint64_t sub_100BD6624@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_100BD668C()
{
  if (static Date.== infix(_:_:)())
  {
    type metadata accessor for ScrubberHour(0);
    sub_10017DD68();
  }
  else
  {
    char v0 = 0;
  }
  return v0 & 1;
}

uint64_t type metadata accessor for ScrubberHour(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB7A98);
}

uint64_t type metadata accessor for ScrubberDay(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB7B28);
}

void *sub_100BD6718(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_100BD67E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100BD6860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100BD68DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100BD6958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100BD69D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BD69E8);
}

uint64_t sub_100BD69E8()
{
  sub_100180CD4();
  sub_100162F30();
  if (*(_DWORD *)(v4 + 84) == v1)
  {
    return _s7Weather24LocationCompositionStateOwet_0(v0, v1, v3);
  }
  else
  {
    unsigned int v6 = *(unsigned __int8 *)(v0 + *(int *)(v2 + 20));
    if (v6 >= 2) {
      return ((v6 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_100BD6A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BD6A88);
}

void sub_100BD6A88()
{
  sub_100166E6C();
  sub_100162F30();
  if (*(_DWORD *)(v4 + 84) == v3)
  {
    uint64_t v5 = sub_10016350C();
    _s7Weather24LocationCompositionStateOwst_0(v5, v6, v7, v8);
  }
  else
  {
    *(unsigned char *)(v1 + *(int *)(v2 + 20)) = v0 + 1;
  }
}

uint64_t sub_100BD6AF0()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_100BD6B84(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
    uint64_t v9 = (void *)((char *)a1 + v8);
    BOOL v10 = (void *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100BD6C78(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100BD6CFC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100BD6DA0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100BD6E64(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100BD6EF4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100BD6FA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BD6FB4);
}

uint64_t sub_100BD6FB4()
{
  sub_100180CD4();
  sub_100162F30();
  if (*(_DWORD *)(v4 + 84) != v1) {
    return sub_100163020(*(void *)(v0 + *(int *)(v2 + 20)));
  }

  return _s7Weather24LocationCompositionStateOwet_0(v0, v1, v3);
}

uint64_t sub_100BD7024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BD7038);
}

void sub_100BD7038()
{
  sub_100166E6C();
  sub_100162F30();
  if (*(_DWORD *)(v4 + 84) == v3)
  {
    uint64_t v5 = sub_10016350C();
    _s7Weather24LocationCompositionStateOwst_0(v5, v6, v7, v8);
  }
  else
  {
    *(void *)(v1 + *(int *)(v2 + 20)) = (v0 - 1);
  }
}

uint64_t sub_100BD70A0()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100BD7150(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    a1[1] = a2[1];
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for TimeZone();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_100BD7244(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for TimeZone();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_100BD72C4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for TimeZone();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

void *sub_100BD7364(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_100BD7410(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_100BD748C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_100BD7528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BD753C);
}

uint64_t sub_100BD753C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_100163020(*a1);
  }
  uint64_t v7 = type metadata accessor for TimeZone();
  uint64_t v8 = (uint64_t)a1 + *(int *)(a3 + 24);

  return _s7Weather24LocationCompositionStateOwet_0(v8, a2, v7);
}

uint64_t sub_100BD75B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BD75CC);
}

void *sub_100BD75CC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for TimeZone();
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 24);
    return (void *)_s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for ScrubberViewModel(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB7BC0);
}

uint64_t sub_100BD766C()
{
  uint64_t result = type metadata accessor for TimeZone();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100BD7708()
{
  return sub_100BD77AC(0x666E492079617453, (void *)0xED000064656D726FLL, 0xD000000000000035, (void *)0x8000000100CC11E0);
}

uint64_t sub_100BD7744()
{
  return sub_1001885CC(80, (void *)0x8000000100CC1110, 0xD000000000000069, (void *)0x8000000100CC1170);
}

uint64_t sub_100BD7778()
{
  return sub_1001885CC(20, (void *)0x8000000100C9D550, 0xD000000000000064, (void *)0x8000000100CC10A0);
}

uint64_t sub_100BD77AC(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v8 = [self mainBundle];
  v13._unint64_t object = a4;
  v9._uint64_t countAndFlagsBits = a1;
  v9._unint64_t object = a2;
  v10._uint64_t countAndFlagsBits = 0;
  v10._unint64_t object = (void *)0xE000000000000000;
  v13._uint64_t countAndFlagsBits = a3;
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v13)._countAndFlagsBits;

  return countAndFlagsBits;
}

ValueMetadata *type metadata accessor for ResubscriptionTipViewViewModel()
{
  return &type metadata for ResubscriptionTipViewViewModel;
}

uint64_t sub_100BD7860(void (*a1)(uint64_t, unint64_t, uint64_t, uint64_t))
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v4 = *(void *)(v1 + 24);
    uint64_t ObjectType = swift_getObjectType();
    unint64_t v6 = sub_100662AE8();
    a1(v1, v6, ObjectType, v4);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100BD78F4()
{
  swift_beginAccess();
  if (!swift_unknownObjectWeakLoadStrong()) {
    return 0;
  }
  swift_getObjectType();
  sub_100662AE8();
  uint64_t v0 = dispatch thunk of WeatherMapZoomControllerDelegate.didRequestCurrentZoomLevel(_:)();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_100BD7994()
{
  sub_100289798(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for WeatherMapZoomController()
{
  return self;
}

uint64_t sub_100BD79F0()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t sub_100BD7A38(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_100BD7A9C(void *a1))(uint64_t a1, char a2)
{
  int v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v5 = *(void *)(v1 + 24);
  v3[3] = Strong;
  v3[4] = v5;
  return sub_100BD7B1C;
}

void sub_100BD7B1C(uint64_t a1, char a2)
{
  int v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + 24) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

uint64_t sub_100BD7BA0()
{
  return sub_100BD78F4();
}

uint64_t sub_100BD7BBC()
{
  return sub_100BD7860((void (*)(uint64_t, unint64_t, uint64_t, uint64_t))&dispatch thunk of WeatherMapZoomControllerDelegate.didRequestZoomIn(_:));
}

uint64_t sub_100BD7BE8()
{
  return sub_100BD7860((void (*)(uint64_t, unint64_t, uint64_t, uint64_t))&dispatch thunk of WeatherMapZoomControllerDelegate.didRequestZoomOut(_:));
}

uint64_t sub_100BD7C14()
{
  return sub_100BD7860((void (*)(uint64_t, unint64_t, uint64_t, uint64_t))&dispatch thunk of WeatherMapZoomControllerDelegate.didRequestZoomReset(_:));
}

uint64_t sub_100BD7C40()
{
  sub_100180CF4();
  return sub_10017B180(v0, v1, v2, v3, v4, v5);
}

uint64_t sub_100BD7C78()
{
  sub_100180CF4();
  return sub_10017B180(v0, v1, v2, v3, v4, v5);
}

#error "100BD7D88: call analysis failed (funcsize=77)"

uint64_t sub_100BD7DEC()
{
  sub_100180CF4();
  return sub_10017B180(v0, v1, v2, v3, v4, v5);
}

#error "100BD7F20: call analysis failed (funcsize=95)"

void sub_100BD7FA8(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char __src,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  sub_1001A4C1C();
  a50 = v51;
  a51 = v52;
  uint64_t v54 = v53;
  double v61 = sub_1001D238C(v55);
  if (!v62) {
    double v61 = -INFINITY;
  }
  double v63 = v56;
  if (v57) {
    double v63 = v61;
  }
  int v64 = v60 & 1;
  double v65 = v58;
  if (v59) {
    double v65 = v63;
  }
  if (v61 > v63 || v63 > v65) {
    goto LABEL_18;
  }
  sub_1001EA8E4();
  if (v64) {
    double v69 = v68;
  }
  if (v67 > v68 || v68 > v69)
  {
LABEL_18:
    static os_log_type_t.fault.getter();
    uint64_t v71 = (void *)static Log.runtimeIssuesLog.getter();
    sub_100182758();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_100188E04();
  sub_100126EC0();
  uint64_t v72 = sub_10017DF08(&qword_100E773C0);
  memcpy((void *)(v54 + *(int *)(v72 + 36)), &__src, 0x70uLL);
  sub_10019B2E0();
}

uint64_t sub_100BD8118()
{
  sub_100180CF4();
  return sub_10017B180(v0, v1, v2, v3, v4, v5);
}

uint64_t sub_100BD8150()
{
  sub_100180CF4();
  return sub_100188CDC(v0, v1, v2, v3, v4, v5);
}

#error "100BD8248: call analysis failed (funcsize=64)"

uint64_t sub_100BD8298()
{
  sub_100180CF4();
  return sub_10017B180(v0, v1, v2, v3, v4, v5);
}

uint64_t sub_100BD82D0()
{
  sub_100180CF4();
  return sub_10017B180(v0, v1, v2, v3, v4, v5);
}

uint64_t sub_100BD8308()
{
  sub_100180CF4();
  return sub_10017B180(v0, v1, v2, v3, v4, v5);
}

uint64_t sub_100BD8340()
{
  sub_100180CF4();
  return sub_10017B180(v0, v1, v2, v3, v4, v5);
}

uint64_t sub_100BD8378()
{
  sub_100180CF4();
  return sub_10016EF60(v0, v1, v2, v3, v4, v5);
}

uint64_t sub_100BD83B0()
{
  sub_100180CF4();
  return sub_10017B180(v0, v1, v2, v3, v4, v5);
}

uint64_t sub_100BD83E8()
{
  sub_100180CF4();
  return sub_10017B180(v0, v1, v2, v3, v4, v5);
}

uint64_t sub_100BD8420()
{
  sub_100180CF4();
  return sub_10017B180(v0, v1, v2, v3, v4, v5);
}

uint64_t sub_100BD8458()
{
  sub_100180CF4();
  return sub_10017B180(v0, v1, v2, v3, v4, v5);
}

uint64_t sub_100BD8490()
{
  sub_100180CF4();
  return sub_10017B180(v0, v1, v2, v3, v4, v5);
}

#error "100BD8580: call analysis failed (funcsize=64)"

uint64_t sub_100BD85D0()
{
  sub_100180CF4();
  return sub_10017B180(v0, v1, v2, v3, v4, v5);
}

uint64_t sub_100BD8608()
{
  sub_100180CF4();
  return sub_100188CDC(v0, v1, v2, v3, v4, v5);
}

uint64_t sub_100BD8648()
{
  sub_100180CF4();
  return sub_100188CDC(v0, v1, v2, v3, v4, v5);
}

#error "100BD8768: call analysis failed (funcsize=89)"

void *sub_100BD87F4@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  char v18 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    uint64_t v27 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    char v18 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  *(void *)a9 = a16;
  *(unsigned char *)(a9 + 8) = v18 & 1;
  return memcpy((void *)(a9 + 16), __src, 0x70uLL);
}

uint64_t sub_100BD898C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    for (uint64_t i = 0; ; i += 80)
    {
      uint64_t v4 = *(void *)(a1 + i + 48);
      uint64_t v5 = *(void *)(a1 + i + 56);
      uint64_t v6 = *(void *)(a1 + i + 64);
      uint64_t v7 = *(void *)(a1 + i + 72);
      uint64_t v29 = *(void *)(a1 + i + 88);
      uint64_t v30 = *(void *)(a1 + i + 80);
      double v9 = *(double *)(a1 + i + 96);
      double v8 = *(double *)(a1 + i + 104);
      uint64_t v10 = a2 + i;
      uint64_t v11 = *(void *)(a2 + i + 48);
      uint64_t v12 = *(void *)(a2 + i + 56);
      uint64_t v13 = *(void *)(a2 + i + 64);
      uint64_t v14 = *(void *)(a2 + i + 72);
      uint64_t v27 = *(void *)(a2 + i + 88);
      uint64_t v28 = *(void *)(a2 + i + 80);
      BOOL v15 = *(void *)(a1 + i + 32) == *(void *)(a2 + i + 32) && *(void *)(a1 + i + 40) == *(void *)(a2 + i + 40);
      double v17 = *(double *)(v10 + 96);
      double v16 = *(double *)(v10 + 104);
      if (!v15 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      BOOL v18 = v4 == v11 && v5 == v12;
      if (!v18 && (sub_100188EBC() & 1) == 0) {
        break;
      }
      BOOL v19 = v6 == v13 && v7 == v14;
      if (!v19 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      if (v30 == v28 && v29 == v27)
      {
        if (v9 != v17 || v8 != v16) {
          return 0;
        }
      }
      else
      {
        _stringCompareWithSmolCheck(_:_:expecting:)();
        uint64_t result = sub_1001190E0();
        if ((v22 & 1) == 0) {
          return result;
        }
        if (v9 != v17 || v8 != v16) {
          return result;
        }
      }
      if (!--v2) {
        return 1;
      }
    }
  }
  return 0;
}

void sub_100BD8AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_100162EA0();
  a19 = v22;
  a20 = v23;
  uint64_t v24 = sub_100162814();
  uint64_t v25 = type metadata accessor for LocationComponentHeaderInputModel.SegmentedControlModel.Option(v24);
  uint64_t v26 = sub_10018974C(v25);
  __chkstk_darwin(v26);
  sub_1001D1018();
  uint64_t v29 = (void *)(v27 - v28);
  __chkstk_darwin(v30);
  uint64_t v32 = (uint64_t *)((char *)&a9 - v31);
  uint64_t v33 = *(void *)(v21 + 16);
  if (v33 == *(void *)(v20 + 16) && v33 && v21 != v20)
  {
    sub_10018B4FC();
    uint64_t v36 = v35 & ~v34;
    uint64_t v38 = *(void *)(v37 + 72);
    while (1)
    {
      sub_100126EC0();
      sub_100126EC0();
      if (*v32 != *v29) {
        break;
      }
      if (v32[1] == v29[1] && v32[2] == v29[2])
      {
        sub_100126E18((uint64_t)v29, (void (*)(void))type metadata accessor for LocationComponentHeaderInputModel.SegmentedControlModel.Option);
        sub_100126E18((uint64_t)v32, (void (*)(void))type metadata accessor for LocationComponentHeaderInputModel.SegmentedControlModel.Option);
      }
      else
      {
        char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_100126E18((uint64_t)v29, (void (*)(void))type metadata accessor for LocationComponentHeaderInputModel.SegmentedControlModel.Option);
        sub_100126E18((uint64_t)v32, (void (*)(void))type metadata accessor for LocationComponentHeaderInputModel.SegmentedControlModel.Option);
        if ((v40 & 1) == 0) {
          goto LABEL_16;
        }
      }
      v36 += v38;
      if (!--v33) {
        goto LABEL_16;
      }
    }
    sub_100126E18((uint64_t)v29, (void (*)(void))type metadata accessor for LocationComponentHeaderInputModel.SegmentedControlModel.Option);
    sub_100126E18((uint64_t)v32, (void (*)(void))type metadata accessor for LocationComponentHeaderInputModel.SegmentedControlModel.Option);
  }
LABEL_16:
  sub_100162694();
}

void sub_100BD8CC0()
{
}

void sub_100BD8D14()
{
}

uint64_t sub_100BD8D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral();
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(double *)(a1 + 32) != *(double *)(a2 + 32)) {
    return variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral();
  }
  uint64_t v3 = (double *)(a1 + 40);
  uint64_t v4 = (double *)(a2 + 40);
  uint64_t v5 = v2 - 1;
  do
  {
    uint64_t result = v5 == 0;
    if (!v5) {
      break;
    }
    double v7 = *v3++;
    double v8 = v7;
    double v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

void sub_100BD8DC4()
{
  sub_100162EA0();
  uint64_t v4 = sub_100162814();
  uint64_t v5 = type metadata accessor for ConditionDetailLegend(v4);
  sub_10017DD84();
  __chkstk_darwin(v6);
  sub_1001A0364();
  __chkstk_darwin(v7);
  sub_10018C6CC();
  uint64_t v8 = *(void *)(v1 + 16);
  if (v8 == *(void *)(v0 + 16) && v8 && v1 != v0)
  {
    sub_10018B4FC();
    uint64_t v11 = v10 & ~v9;
    uint64_t v13 = *(void *)(v12 + 72);
    while (1)
    {
      sub_100126EC0();
      sub_10012B774();
      BOOL v14 = *v3 == *v2 && v3[1] == v2[1];
      if (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      BOOL v15 = v3[2] == v2[2] && v3[3] == v2[3];
      if (!v15 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
        || (sub_100292E80((uint64_t)v3 + *(int *)(v5 + 24), (uint64_t)v2 + *(int *)(v5 + 24)) & 1) == 0)
      {
        break;
      }
      sub_100166E90(*(int *)(v5 + 28));
      if (v14 && v16 == v17)
      {
        sub_100126E18((uint64_t)v2, (void (*)(void))type metadata accessor for ConditionDetailLegend);
        sub_10019CA2C();
      }
      else
      {
        char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
        sub_100126E18((uint64_t)v2, (void (*)(void))type metadata accessor for ConditionDetailLegend);
        sub_10018BF34();
        if ((v19 & 1) == 0) {
          goto LABEL_26;
        }
      }
      v11 += v13;
      if (!--v8) {
        goto LABEL_26;
      }
    }
    sub_100126E18((uint64_t)v2, (void (*)(void))type metadata accessor for ConditionDetailLegend);
    sub_10017F778();
  }
LABEL_26:
  sub_100162694();
}

uint64_t sub_100BD8F98(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = 0;
    while (1)
    {
      uint64_t v23 = v3;
      uint64_t v24 = v2;
      uint64_t v5 = *(void *)(a1 + v3 + 48);
      uint64_t v4 = *(void *)(a1 + v3 + 56);
      uint64_t v6 = *(void *)(a1 + v3 + 64);
      uint64_t v31 = *(void *)(a1 + v3 + 72);
      uint64_t v7 = *(void *)(a1 + v3 + 80);
      uint64_t v29 = *(void *)(a1 + v3 + 88);
      uint64_t v25 = *(void *)(a1 + v3 + 96);
      uint64_t v27 = *(void *)(a1 + v3 + 104);
      uint64_t v9 = *(void *)(a2 + v3 + 48);
      uint64_t v8 = *(void *)(a2 + v3 + 56);
      uint64_t v11 = *(void *)(a2 + v3 + 64);
      uint64_t v10 = *(void *)(a2 + v3 + 72);
      uint64_t v12 = *(void *)(a2 + v3 + 80);
      uint64_t v30 = *(void *)(a2 + v3 + 88);
      uint64_t v13 = *(void *)(a2 + v3 + 96);
      uint64_t v28 = *(void *)(a2 + v3 + 104);
      BOOL v14 = *(void *)(a1 + v3 + 32) == *(void *)(a2 + v3 + 32)
         && *(void *)(a1 + v3 + 40) == *(void *)(a2 + v3 + 40);
      uint64_t v32 = *(void *)(a1 + v3 + 56);
      uint64_t v33 = *(void *)(a2 + v3 + 56);
      if (!v14)
      {
        char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
        uint64_t v4 = v32;
        uint64_t v8 = v33;
        if ((v15 & 1) == 0) {
          break;
        }
      }
      BOOL v16 = v5 == v9 && v4 == v8;
      if (!v16 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      if (v6 != v11 || v31 != v10)
      {
        sub_100127C2C();
        if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
          break;
        }
      }
      BOOL v18 = v7 == v12 && v29 == v30;
      if (!v18 && (sub_10019CC78() & 1) == 0) {
        break;
      }
      BOOL v19 = v25 == v13 && v27 == v28;
      if (!v19 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      char v26 = static Color.== infix(_:_:)();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v26 & 1) == 0) {
        break;
      }
      uint64_t v3 = v23 + 88;
      uint64_t v2 = v24 - 1;
      if (v24 == 1) {
        return 1;
      }
    }
  }
  return 0;
}

void sub_100BD925C()
{
  sub_1001843DC();
  uint64_t v2 = *(void *)(v0 + 16);
  if (v2 == *(void *)(v1 + 16))
  {
    if (v2)
    {
      uint64_t v3 = v1;
      if (v0 != v1)
      {
        uint64_t v4 = 0;
        uint64_t v17 = v0;
        uint64_t v18 = v1;
        do
        {
          uint64_t v5 = *(void *)(v0 + v4 + 48);
          uint64_t v6 = *(void *)(v0 + v4 + 56);
          int v21 = *(unsigned __int8 *)(v0 + v4 + 64);
          int v22 = *(unsigned __int8 *)(v0 + v4 + 65);
          int v7 = *(unsigned __int8 *)(v0 + v4 + 66);
          uint64_t v8 = *(void *)(v3 + v4 + 48);
          uint64_t v9 = *(void *)(v3 + v4 + 56);
          int v10 = *(unsigned __int8 *)(v3 + v4 + 64);
          int v11 = *(unsigned __int8 *)(v3 + v4 + 65);
          int v12 = *(unsigned __int8 *)(v3 + v4 + 66);
          BOOL v13 = *(void *)(v0 + v4 + 32) == *(void *)(v3 + v4 + 32)
             && *(void *)(v0 + v4 + 40) == *(void *)(v3 + v4 + 40);
          int v19 = *(unsigned __int8 *)(v3 + v4 + 67);
          int v20 = *(unsigned __int8 *)(v0 + v4 + 67);
          if (!v13 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            break;
          }
          int v14 = v7 ^ v12;
          if (v5 == v8 && v6 == v9)
          {
            if ((v21 ^ v10 | v22 ^ v11 | v14)) {
              break;
            }
          }
          else
          {
            sub_10019CC78();
            sub_1001190E0();
            if ((v21 ^ v10) & 1 | ((v16 & 1) == 0) | (v22 ^ v11 | v14) & 1) {
              break;
            }
          }
          if ((v20 ^ v19)) {
            break;
          }
          v4 += 40;
          --v2;
          uint64_t v0 = v17;
          uint64_t v3 = v18;
        }
        while (v2);
      }
    }
  }
  sub_100152398();
}

void sub_100BD9390()
{
}

void sub_100BD93D8()
{
}

void sub_100BD9420()
{
}

void sub_100BD9468()
{
}

void sub_100BD94B0()
{
  sub_100162EA0();
  uint64_t v2 = v1;
  uint64_t v4 = v3;
  type metadata accessor for UnitConfiguration.Temperature();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_100182904(v8, v30);
  uint64_t v34 = sub_10017DF08(&qword_100E9B158);
  sub_100162E4C();
  __chkstk_darwin(v9);
  uint64_t v10 = sub_10011BA28();
  uint64_t v11 = type metadata accessor for UnitsConfigurationViewModel.Temperature(v10);
  uint64_t v12 = sub_10018974C(v11);
  __chkstk_darwin(v12);
  sub_1001D1018();
  __chkstk_darwin(v13);
  sub_10018C89C();
  uint64_t v33 = v14;
  sub_100127A50();
  __chkstk_darwin(v15);
  sub_100184868();
  uint64_t v16 = *(void *)(v4 + 16);
  if (v16 != *(void *)(v2 + 16) || !v16 || v4 == v2) {
    goto LABEL_22;
  }
  sub_10018B4FC();
  uint64_t v19 = v18 & ~v17;
  uint64_t v21 = *(void *)(v20 + 72);
  uint64_t v32 = (void (**)(void))(v6 + 8);
  uint64_t v22 = v33;
  while (1)
  {
    sub_100126EC0();
    sub_100126EC0();
    uint64_t v23 = v0 + *(int *)(v34 + 48);
    sub_100126EC0();
    sub_10017F3C8();
    sub_100126EC0();
    sub_1001630A0(v0);
    if (!v24) {
      break;
    }
    sub_1001630A0(v23);
    if (!v24) {
      goto LABEL_20;
    }
LABEL_17:
    sub_100126E18(v0, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Temperature);
    sub_100126E18(v22, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Temperature);
    sub_10018B23C();
    v19 += v21;
    if (!--v16) {
      goto LABEL_22;
    }
  }
  sub_100126EC0();
  sub_1001630A0(v23);
  if (!v24)
  {
    sub_10018A1E8();
    v25();
    sub_100126C28(&qword_100E9D018, (void (*)(uint64_t))&type metadata accessor for UnitConfiguration.Temperature);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    if (v37 == v35 && v38 == v36)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v28 = *v32;
      sub_100187404();
      v28();
      sub_100187404();
      v28();
      uint64_t v22 = v33;
    }
    else
    {
      char v31 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v27 = *v32;
      sub_100187404();
      v27();
      sub_100187404();
      v27();
      uint64_t v22 = v33;
      if ((v31 & 1) == 0)
      {
        sub_100126E18(v0, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Temperature);
        goto LABEL_21;
      }
    }
    goto LABEL_17;
  }
  sub_100162F0C();
  v29();
  uint64_t v22 = v33;
LABEL_20:
  sub_100178110(v0, &qword_100E9B158);
LABEL_21:
  sub_100126E18(v22, (void (*)(void))type metadata accessor for UnitsConfigurationViewModel.Temperature);
  sub_10018B23C();
LABEL_22:
  sub_100162694();
}

void sub_100BD9894()
{
  sub_100162EA0();
  uint64_t v6 = sub_100162814();
  type metadata accessor for ConditionDetailChartInput(v6);
  sub_10017DD84();
  __chkstk_darwin(v7);
  sub_1001A0364();
  __chkstk_darwin(v8);
  sub_1001A36F0();
  if (v10 && v9 && v1 != v0)
  {
    sub_100127B64();
    while (1)
    {
      sub_100126EC0();
      sub_10012B774();
      sub_100127C2C();
      if ((static ConditionDetailChartHeaderInput.== infix(_:_:)() & 1) == 0) {
        break;
      }
      sub_100BCE470();
      char v12 = v11;
      sub_100126E18(v2, (void (*)(void))type metadata accessor for ConditionDetailChartInput);
      sub_10018BF34();
      BOOL v14 = v5-- != 0;
      if (v12)
      {
        v3 += v4;
        if (v14) {
          continue;
        }
      }
      goto LABEL_15;
    }
    sub_100126E18(v2, (void (*)(void))type metadata accessor for ConditionDetailChartInput);
    sub_10017F778();
  }
LABEL_15:
  sub_100162694();
}

void sub_100BD99E8()
{
  sub_1001843DC();
  uint64_t v2 = *(void *)(v0 + 16);
  if (v2 == *(void *)(v1 + 16) && v2 && v0 != v1)
  {
    uint64_t v3 = (uint64_t *)(v1 + 64);
    uint64_t v4 = (uint64_t *)(v0 + 64);
    do
    {
      uint64_t v5 = (void *)*(v4 - 2);
      uint64_t v6 = *(v4 - 1);
      uint64_t v7 = *v4;
      uint64_t v8 = (void *)*(v3 - 2);
      uint64_t v16 = *(v3 - 1);
      uint64_t v9 = *v3;
      BOOL v10 = *(v4 - 4) == *(v3 - 4) && *(v4 - 3) == *(v3 - 3);
      if (!v10 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      uint64_t v15 = v2;
      sub_1001ABC4C(0, (unint64_t *)&qword_100E65130);
      swift_bridgeObjectRetain();
      id v11 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v12 = v8;
      swift_bridgeObjectRetain();
      if ((static NSObject.== infix(_:_:)() & 1) == 0)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        break;
      }
      if (v6 == v16 && v7 == v9)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();

        swift_bridgeObjectRelease();
      }
      else
      {
        char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        if ((v14 & 1) == 0) {
          break;
        }
      }
      v3 += 5;
      v4 += 5;
      --v2;
    }
    while (v15 != 1);
  }
  sub_100152398();
}

void sub_100BD9BB4()
{
  sub_100162EA0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for LocationViewComponent();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  sub_10016278C();
  uint64_t v8 = v6 - v7;
  __chkstk_darwin(v9);
  id v11 = (char *)&v25 - v10;
  uint64_t v12 = *(void *)(v3 + 16);
  if (v12 == *(void *)(v1 + 16)
    && v12
    && v3 != v1
    && (uint64_t v13 = v3 + 32,
        uint64_t v14 = v1 + 32,
        uint64_t v15 = *(void *)(v3 + 32),
        uint64_t v16 = *(void *)(v1 + 32),
        uint64_t v17 = *(void *)(v15 + 16),
        v17 == *(void *)(v16 + 16)))
  {
    uint64_t v18 = 1;
    uint64_t v28 = v12;
    uint64_t v29 = v5;
    uint64_t v26 = v14;
    uint64_t v27 = v13;
    while (!v17 || v15 == v16)
    {
LABEL_13:
      if (v18 != v12)
      {
        uint64_t v15 = *(void *)(v13 + 8 * v18);
        uint64_t v16 = *(void *)(v14 + 8 * v18++);
        uint64_t v17 = *(void *)(v15 + 16);
        if (v17 == *(void *)(v16 + 16)) {
          continue;
        }
      }
      goto LABEL_18;
    }
    uint64_t v30 = v18;
    unint64_t v19 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v20 = 0;
    uint64_t v21 = *(void *)(v5 + 72);
    while (1)
    {
      sub_100126EC0();
      if (v20 >= *(void *)(v16 + 16)) {
        break;
      }
      sub_100126EC0();
      uint64_t v22 = sub_10017F3C8();
      char v24 = sub_10079C8F8(v22, v23);
      sub_100126E18(v8, (void (*)(void))type metadata accessor for LocationViewComponent);
      sub_100126E18((uint64_t)v11, (void (*)(void))type metadata accessor for LocationViewComponent);
      if ((v24 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
      ++v20;
      v19 += v21;
      if (v17 == v20)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v12 = v28;
        uint64_t v5 = v29;
        uint64_t v14 = v26;
        uint64_t v13 = v27;
        uint64_t v18 = v30;
        goto LABEL_13;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_18:
    sub_100162694();
  }
}

void sub_100BD9DF4()
{
}

void sub_100BD9E48()
{
}

void sub_100BD9E90()
{
  sub_100162EA0();
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v74 = type metadata accessor for ConditionDetailChartFooterViewModel();
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_100162E88();
  uint64_t v11 = sub_10017DF08(&qword_100E820F0);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_100162EB8();
  uint64_t v73 = sub_10017DF08(&qword_100EAF330);
  sub_100162E4C();
  __chkstk_darwin(v13);
  sub_10012B938();
  uint64_t v80 = type metadata accessor for LollipopViewModel();
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_10017A130(v15, v60);
  uint64_t v16 = sub_10017DF08(&qword_100E82140);
  uint64_t v17 = sub_100109308(v16);
  __chkstk_darwin(v17);
  sub_100182904(v18, v61);
  uint64_t v75 = sub_10017DF08(&qword_100EAF338);
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_100109314();
  uint64_t v77 = v20;
  sub_100129064();
  uint64_t v76 = type metadata accessor for DetailChartViewModel();
  sub_100179C0C();
  __chkstk_darwin(v21);
  sub_100189DD0();
  __chkstk_darwin(v22);
  sub_10018B358();
  type metadata accessor for DetailChartsViewModel();
  sub_10017DD84();
  __chkstk_darwin(v23);
  sub_1001CB7A0();
  uint64_t v78 = v24;
  sub_100127A50();
  __chkstk_darwin(v25);
  sub_10018C6CC();
  uint64_t v27 = *(void *)(v9 + 16);
  if (v27 == *(void *)(v7 + 16) && v27 && v9 != v7)
  {
    uint64_t v65 = v26;
    uint64_t v62 = v0;
    uint64_t v28 = 0;
    sub_100210458();
    uint64_t v29 = v78;
    uint64_t v63 = v30;
    uint64_t v64 = v3;
    while (1)
    {
      uint64_t v69 = v28;
      sub_100126EC0();
      sub_100126EC0();
      if ((static Date.== infix(_:_:)() & 1) == 0
        || (uint64_t v31 = *(int *)(v65 + 20),
            uint64_t v32 = *(void *)(v3 + v31),
            uint64_t v33 = *(void *)(v29 + v31),
            uint64_t v34 = *(void *)(v32 + 16),
            v34 != *(void *)(v33 + 16)))
      {
LABEL_47:
        sub_100126E18(v29, (void (*)(void))type metadata accessor for DetailChartsViewModel);
        sub_10017F778();
        goto LABEL_48;
      }
      uint64_t v36 = (int *)v76;
      uint64_t v35 = v77;
      if (v34)
      {
        if (v32 != v33) {
          break;
        }
      }
LABEL_37:
      uint64_t v28 = v69 + 1;
      sub_100126E18(v29, (void (*)(void))type metadata accessor for DetailChartsViewModel);
      uint64_t v3 = v64;
      sub_10019CA2C();
      if (v69 + 1 == v63) {
        goto LABEL_48;
      }
    }
    unint64_t v37 = 0;
    sub_100119544();
    uint64_t v40 = v39 & ~v38;
    uint64_t v66 = *(void *)(v41 + 72);
    uint64_t v67 = v42;
    uint64_t v68 = v33;
    while (1)
    {
      uint64_t v43 = v40;
      sub_100126EC0();
      if (v37 >= *(void *)(v33 + 16)) {
        break;
      }
      uint64_t v70 = v43;
      unint64_t v71 = v37;
      sub_100126EC0();
      sub_100188E04();
      if ((static ConditionDetailChartHeaderStringModel.== infix(_:_:)() & 1) == 0) {
        goto LABEL_46;
      }
      uint64_t v44 = type metadata accessor for ConditionDetailChartHeaderViewModel();
      if (*(unsigned __int8 *)(v5 + *(int *)(v44 + 20)) != *(unsigned __int8 *)(v4 + *(int *)(v44 + 20))) {
        goto LABEL_46;
      }
      if (*(unsigned __int8 *)(v5 + *(int *)(v44 + 24)) != *(unsigned __int8 *)(v4 + *(int *)(v44 + 24))) {
        goto LABEL_46;
      }
      uint64_t v45 = sub_100189DEC(v36[5]);
      if ((sub_10071B540(v45, v46) & 1) == 0) {
        goto LABEL_46;
      }
      uint64_t v47 = v36[6];
      uint64_t v48 = v4 + v47;
      uint64_t v49 = v35 + *(int *)(v75 + 48);
      sub_10006DF38(v5 + v47, v35, &qword_100E82140);
      sub_10006DF38(v48, v49, &qword_100E82140);
      sub_10012B520(v35, 1, v80);
      if (v50)
      {
        sub_10012B520(v49, 1, v80);
        if (!v50) {
          goto LABEL_42;
        }
        sub_100178110(v35, &qword_100E82140);
      }
      else
      {
        sub_10006DF38(v35, (uint64_t)v72, &qword_100E82140);
        sub_10012B520(v49, 1, v80);
        if (v50)
        {
          sub_100126E18((uint64_t)v72, (void (*)(void))type metadata accessor for LollipopViewModel);
LABEL_42:
          double v58 = &qword_100EAF338;
          uint64_t v59 = v35;
          goto LABEL_45;
        }
        sub_10018282C();
        BOOL v51 = *v72 == *v79 && v72[1] == v79[1];
        if (!v51 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
          || (static DetailChartDataPoint.== infix(_:_:)() & 1) == 0
          || *(double *)((char *)v72 + *(int *)(v80 + 24)) != *(double *)((char *)v79 + *(int *)(v80 + 24)))
        {
          sub_100126E18((uint64_t)v72, (void (*)(void))type metadata accessor for LollipopViewModel);
          sub_100126E18((uint64_t)v79, (void (*)(void))type metadata accessor for LollipopViewModel);
          double v58 = &qword_100E82140;
          uint64_t v59 = v35;
LABEL_45:
          sub_100178110(v59, v58);
LABEL_46:
          sub_100126E18(v4, (void (*)(void))type metadata accessor for DetailChartViewModel);
          sub_10018B23C();
          uint64_t v29 = v78;
          goto LABEL_47;
        }
        char v52 = sub_1004CA7DC((uint64_t)v72 + *(int *)(v80 + 28), (uint64_t)v79 + *(int *)(v80 + 28));
        sub_100126E18((uint64_t)v72, (void (*)(void))type metadata accessor for LollipopViewModel);
        sub_100126E18((uint64_t)v79, (void (*)(void))type metadata accessor for LollipopViewModel);
        sub_100178110(v35, &qword_100E82140);
        if ((v52 & 1) == 0) {
          goto LABEL_46;
        }
      }
      uint64_t v53 = v36[7];
      uint64_t v54 = v4 + v53;
      uint64_t v55 = v2 + *(int *)(v73 + 48);
      sub_10006DF38(v5 + v53, v2, &qword_100E820F0);
      sub_10006DF38(v54, v55, &qword_100E820F0);
      sub_10012B520(v2, 1, v74);
      if (v50)
      {
        sub_10012B520(v55, 1, v74);
        if (!v50) {
          goto LABEL_44;
        }
        sub_100178110(v2, &qword_100E820F0);
      }
      else
      {
        sub_10006DF38(v2, v1, &qword_100E820F0);
        sub_10012B520(v55, 1, v74);
        if (v56)
        {
          sub_100126E18(v1, (void (*)(void))type metadata accessor for ConditionDetailChartFooterViewModel);
LABEL_44:
          double v58 = &qword_100EAF330;
          uint64_t v59 = v2;
          goto LABEL_45;
        }
        sub_10018282C();
        char v57 = sub_100665894(v1, v62);
        sub_100126E18(v1, (void (*)(void))type metadata accessor for ConditionDetailChartFooterViewModel);
        uint64_t v35 = v77;
        sub_100126E18(v62, (void (*)(void))type metadata accessor for ConditionDetailChartFooterViewModel);
        sub_100178110(v2, &qword_100E820F0);
        uint64_t v36 = (int *)v76;
        if ((v57 & 1) == 0) {
          goto LABEL_46;
        }
      }
      ++v37;
      sub_100126E18(v4, (void (*)(void))type metadata accessor for DetailChartViewModel);
      sub_100126E18(v5, (void (*)(void))type metadata accessor for DetailChartViewModel);
      uint64_t v40 = v70 + v66;
      uint64_t v29 = v78;
      uint64_t v33 = v68;
      if (v67 == v71 + 1) {
        goto LABEL_37;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_48:
    sub_100162694();
  }
}

void sub_100BDA688()
{
  sub_100162EA0();
  sub_100162814();
  type metadata accessor for DetailChartConditionInfo();
  sub_10017DD84();
  __chkstk_darwin(v7);
  sub_1001A0364();
  __chkstk_darwin(v8);
  sub_1001A36F0();
  if (v10 && v9 && v1 != v0)
  {
    sub_100127B64();
    while (1)
    {
      sub_100126EC0();
      sub_10012B774();
      BOOL v10 = *v3 == *v2 && v3[1] == v2[1];
      if (!v10 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      char v11 = static DetailCondition.== infix(_:_:)();
      sub_100126E18((uint64_t)v2, (void (*)(void))type metadata accessor for DetailChartConditionInfo);
      sub_10018BF34();
      BOOL v13 = v6-- != 0;
      if (v11)
      {
        v4 += v5;
        if (v13) {
          continue;
        }
      }
      goto LABEL_19;
    }
    sub_100126E18((uint64_t)v2, (void (*)(void))type metadata accessor for DetailChartConditionInfo);
    sub_10017F778();
  }
LABEL_19:
  sub_100162694();
}

void sub_100BDA7F0()
{
}

uint64_t sub_100BDA844(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = 0;
    uint64_t v15 = a1;
    uint64_t v16 = a2;
    while (1)
    {
      uint64_t v5 = *(void *)(a1 + v3 + 48);
      uint64_t v4 = *(void *)(a1 + v3 + 56);
      double v6 = *(double *)(a1 + v3 + 64);
      uint64_t v8 = *(void *)(a2 + v3 + 48);
      uint64_t v7 = *(void *)(a2 + v3 + 56);
      double v9 = *(double *)(a2 + v3 + 64);
      int v17 = *(unsigned __int8 *)(a2 + v3 + 80);
      int v18 = *(unsigned __int8 *)(a1 + v3 + 80);
      BOOL v10 = *(void *)(a1 + v3 + 32) == *(void *)(a2 + v3 + 32)
         && *(void *)(a1 + v3 + 40) == *(void *)(a2 + v3 + 40);
      if (!v10 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      if (v5 == v8 && v4 == v7)
      {
        if (v6 != v9) {
          return 0;
        }
      }
      else
      {
        _stringCompareWithSmolCheck(_:_:expecting:)();
        uint64_t result = sub_1001190E0();
        if ((v13 & 1) == 0 || v6 != v9) {
          return result;
        }
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      char v14 = static Color.== infix(_:_:)();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = 0;
      if (v14 & 1) == 0 || ((v18 ^ v17)) {
        return result;
      }
      v3 += 56;
      --v2;
      a1 = v15;
      a2 = v16;
      if (!v2) {
        return 1;
      }
    }
  }
  return 0;
}

BOOL sub_100BDA9E8(uint64_t a1, uint64_t a2)
{
  uint64_t v104 = sub_10017DF08(&qword_100E65250);
  sub_100179C0C();
  uint64_t v107 = v6;
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v100 = v8;
  uint64_t v9 = sub_10017DF08(qword_100E65268);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v101 = v11;
  uint64_t v105 = sub_10017DF08(&qword_100E933C0);
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_100162EB8();
  uint64_t v13 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature(0);
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = type metadata accessor for ComparisonCapsuleViewModel.Row.Body(0);
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_10016278C();
  uint64_t v22 = v20 - v21;
  __chkstk_darwin(v23);
  uint64_t v25 = &v88[-v24];
  uint64_t v26 = sub_10017DF08(&qword_100E933D0);
  sub_100162E4C();
  __chkstk_darwin(v27);
  uint64_t v28 = sub_10011BA28();
  type metadata accessor for ComparisonCapsuleViewModel.Row(v28);
  sub_10017DD84();
  __chkstk_darwin(v29);
  sub_100182E34();
  uint64_t v31 = __chkstk_darwin(v30);
  uint64_t v35 = *(void *)(a1 + 16);
  if (v35 != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v102 = v18;
  uint64_t v103 = v26;
  uint64_t v97 = v22;
  uint64_t v98 = v25;
  uint64_t v110 = (uint64_t *)&v88[-v33];
  uint64_t v95 = v2;
  uint64_t v96 = v13;
  uint64_t v99 = v17;
  if (!v35 || a1 == a2) {
    return 1;
  }
  uint64_t v108 = v31;
  unint64_t v36 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  uint64_t v90 = v107 + 32;
  uint64_t v91 = (void (**)(void))(v107 + 8);
  uint64_t v92 = *(void *)(v32 + 72);
  uint64_t v93 = a1;
  uint64_t v37 = v35 - 1;
  uint64_t v38 = v34;
  uint64_t v39 = v110;
  uint64_t v109 = v3;
  uint64_t v94 = a2;
  while (1)
  {
    uint64_t v107 = v37;
    sub_100126EC0();
    unint64_t v106 = v36;
    sub_100126EC0();
    uint64_t v40 = *v39;
    uint64_t v41 = v39[1];
    uint64_t v43 = v39[2];
    uint64_t v42 = v39[3];
    uint64_t v45 = v39[4];
    uint64_t v44 = v39[5];
    uint64_t v46 = v38[2];
    uint64_t v47 = v38[3];
    uint64_t v49 = v38[4];
    uint64_t v48 = v38[5];
    BOOL v50 = v40 == *v38 && v41 == v38[1];
    if (!v50 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      goto LABEL_77;
    }
    if (v42)
    {
      if (!v47) {
        goto LABEL_77;
      }
      BOOL v51 = v43 == v46 && v42 == v47;
      if (!v51 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        goto LABEL_77;
      }
    }
    else if (v47)
    {
      goto LABEL_77;
    }
    if (v44)
    {
      if (!v48) {
        goto LABEL_77;
      }
      BOOL v52 = v45 == v49 && v44 == v48;
      if (!v52 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        goto LABEL_77;
      }
    }
    else if (v48)
    {
      goto LABEL_77;
    }
    uint64_t v39 = v110;
    uint64_t v53 = v109 + *(int *)(v103 + 48);
    sub_100126EC0();
    sub_100126EC0();
    if (swift_getEnumCaseMultiPayload() == 1) {
      break;
    }
    uint64_t v65 = (uint64_t)v98;
    sub_100126EC0();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v67 = v105;
    if (EnumCaseMultiPayload == 1)
    {
      sub_100126E18(v65, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature);
      goto LABEL_67;
    }
    uint64_t v68 = v99;
    sub_10018282C();
    sub_1001ABC4C(0, (unint64_t *)&qword_100E659A0);
    char v69 = static Measurement.== infix<A, B>(_:_:)();
    uint64_t v70 = v104;
    uint64_t v71 = v96;
    if ((v69 & 1) == 0 || (static Measurement.== infix<A, B>(_:_:)() & 1) == 0) {
      goto LABEL_71;
    }
    uint64_t v72 = *(int *)(v71 + 24);
    uint64_t v73 = v68 + v72;
    uint64_t v74 = v95;
    uint64_t v75 = v95 + *(int *)(v67 + 48);
    sub_10006DF38(v65 + v72, v95, qword_100E65268);
    sub_10006DF38(v73, v75, qword_100E65268);
    sub_1001630A0(v74);
    if (v50)
    {
      sub_10012B520(v75, 1, v70);
      if (!v50) {
        goto LABEL_70;
      }
      sub_100178110(v74, qword_100E65268);
    }
    else
    {
      sub_10006DF38(v74, v101, qword_100E65268);
      sub_10012B520(v75, 1, v70);
      if (v76)
      {
        sub_10012BA84();
        sub_100162F0C();
        v86();
        uint64_t v68 = v99;
LABEL_70:
        sub_100178110(v74, &qword_100E933C0);
LABEL_71:
        sub_100126E18(v68, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature);
        sub_100126E18(v65, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature);
        uint64_t v87 = v109;
        goto LABEL_76;
      }
      sub_1001190D4();
      v77();
      sub_1001246C8(&qword_100E933C8, &qword_100E65250);
      int v89 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v78 = *v91;
      sub_100166CA8();
      v78();
      sub_100166CA8();
      v78();
      sub_100178110(v74, qword_100E65268);
      uint64_t v68 = v99;
      if ((v89 & 1) == 0) {
        goto LABEL_71;
      }
    }
    sub_100126E18(v68, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature);
    sub_100126E18(v65, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body.Temperature);
    uint64_t v79 = v109;
LABEL_59:
    sub_100126E18(v79, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
    uint64_t v82 = *(int *)(v108 + 24);
    int v83 = *((unsigned __int8 *)v39 + v82);
    int v84 = *((unsigned __int8 *)v38 + v82);
    sub_100126E18((uint64_t)v38, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
    sub_100126E18((uint64_t)v39, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
    uint64_t v37 = v107 - 1;
    BOOL result = v83 == v84;
    if (v83 == v84)
    {
      unint64_t v36 = v106 + v92;
      if (v107) {
        continue;
      }
    }
    return result;
  }
  uint64_t v54 = v97;
  sub_100126EC0();
  double v55 = *(double *)(v54 + 8);
  uint64_t v57 = *(void *)(v54 + 16);
  uint64_t v56 = *(void *)(v54 + 24);
  uint64_t v59 = *(void *)(v54 + 32);
  uint64_t v58 = *(void *)(v54 + 40);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_67:
    sub_100178110(v109, &qword_100E933D0);
    goto LABEL_77;
  }
  double v60 = *(double *)v54;
  uint64_t v61 = *(void *)(v53 + 24);
  uint64_t v62 = *(void *)(v53 + 40);
  if (v60 != *(double *)v53 || v55 != *(double *)(v53 + 8))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_64;
  }
  uint64_t v63 = *(void *)(v53 + 32);
  if (v56)
  {
    if (!v61) {
      goto LABEL_73;
    }
    BOOL v64 = v57 == *(void *)(v53 + 16) && v56 == v61;
    if (!v64 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      swift_bridgeObjectRelease();
LABEL_73:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_74;
    }
    goto LABEL_52;
  }
  if (!v61)
  {
LABEL_52:
    if (v59 == v63 && v58 == v62)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v79 = v109;
      uint64_t v39 = v110;
    }
    else
    {
      char v81 = sub_10019CC78();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v79 = v109;
      uint64_t v39 = v110;
      if ((v81 & 1) == 0) {
        goto LABEL_75;
      }
    }
    goto LABEL_59;
  }
  swift_bridgeObjectRelease();
LABEL_64:
  swift_bridgeObjectRelease();
LABEL_74:
  swift_bridgeObjectRelease();
  uint64_t v79 = v109;
LABEL_75:
  uint64_t v87 = v79;
LABEL_76:
  sub_100126E18(v87, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row.Body);
LABEL_77:
  sub_100126E18((uint64_t)v38, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
  sub_100126E18((uint64_t)v110, (void (*)(void))type metadata accessor for ComparisonCapsuleViewModel.Row);
  return 0;
}

void sub_100BDB324()
{
}

uint64_t sub_100BDB36C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = (uint64_t *)(a2 + 56);
    for (uint64_t i = (uint64_t *)(a1 + 56); ; i += 4)
    {
      uint64_t v5 = *(i - 1);
      uint64_t v6 = *i;
      uint64_t v7 = *(v3 - 1);
      uint64_t v8 = *v3;
      BOOL v9 = *(i - 3) == *(v3 - 3) && *(i - 2) == *(v3 - 2);
      if (!v9 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      BOOL v10 = v5 == v7 && v6 == v8;
      if (!v10 && (sub_100188EBC() & 1) == 0) {
        break;
      }
      v3 += 4;
      if (!--v2) {
        return 1;
      }
    }
  }
  return 0;
}

void sub_100BDB41C()
{
  sub_100162EA0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_100125FF8();
  uint64_t v10 = sub_10017DF08(&qword_100E639E8);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_10017A130(v12, v44[0]);
  uint64_t v51 = sub_10017DF08(&qword_100E6EEC0);
  sub_100162E4C();
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v52 = type metadata accessor for SearchLocation();
  sub_10017DD84();
  __chkstk_darwin(v17);
  sub_1001836E4();
  __chkstk_darwin(v18);
  uint64_t v20 = (uint64_t *)((char *)v44 - v19);
  uint64_t v21 = *(void *)(v5 + 16);
  if (v21 == *(void *)(v3 + 16) && v21 && v5 != v3)
  {
    uint64_t v45 = v0;
    sub_10018B4FC();
    uint64_t v24 = v23 & ~v22;
    uint64_t v46 = (void (**)(uint64_t, uint64_t))(v8 + 8);
    uint64_t v26 = *(void *)(v25 + 72);
    uint64_t v48 = v5;
    uint64_t v49 = v3;
    v44[0] = v26;
    v44[1] = v8 + 32;
    while (1)
    {
      sub_100126EC0();
      sub_100126EC0();
      uint64_t v27 = (void *)*v20;
      uint64_t v28 = (void *)*v1;
      if (*v20)
      {
        if (!v28) {
          break;
        }
        sub_1001ABC4C(0, (unint64_t *)&qword_100E77FC8);
        id v29 = v28;
        id v30 = v27;
        char v31 = static NSObject.== infix(_:_:)();

        if ((v31 & 1) == 0) {
          break;
        }
      }
      else if (v28)
      {
        break;
      }
      BOOL v32 = v20[1] == v1[1] && v20[2] == v1[2];
      if (!v32 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      BOOL v33 = v20[3] == v1[3] && v20[4] == v1[4];
      if (!v33 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      BOOL v34 = v20[5] == v1[5] && v20[6] == v1[6];
      if (!v34 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      uint64_t v35 = *(int *)(v52 + 32);
      uint64_t v36 = (uint64_t)v1 + v35;
      uint64_t v37 = v16 + *(int *)(v51 + 48);
      sub_10006DF38((uint64_t)v20 + v35, v16, &qword_100E639E8);
      sub_10006DF38(v36, v37, &qword_100E639E8);
      sub_1001630A0(v16);
      if (v32)
      {
        sub_1001630A0(v37);
        if (!v32) {
          goto LABEL_41;
        }
        sub_100178110(v16, &qword_100E639E8);
      }
      else
      {
        uint64_t v38 = v50;
        sub_10006DF38(v16, v50, &qword_100E639E8);
        sub_1001630A0(v37);
        if (v39)
        {
          (*v46)(v38, v6);
LABEL_41:
          sub_100178110(v16, &qword_100E6EEC0);
          break;
        }
        uint64_t v40 = v45;
        sub_10018A1E8();
        v41();
        sub_100126C28((unint64_t *)&qword_100E639A8, (void (*)(uint64_t))&type metadata accessor for Location);
        int v47 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v42 = *v46;
        (*v46)(v40, v6);
        v42(v38, v6);
        uint64_t v26 = v44[0];
        sub_100178110(v16, &qword_100E639E8);
        if ((v47 & 1) == 0) {
          break;
        }
      }
      uint64_t v43 = *(int *)(v52 + 36);
      if (*((unsigned char *)v20 + v43 + 16))
      {
        if (!*((unsigned char *)v1 + v43 + 16)) {
          break;
        }
      }
      else if ((*((unsigned char *)v1 + v43 + 16) & 1) != 0 || (static CLLocationCoordinate2D.== infix(_:_:)() & 1) == 0)
      {
        break;
      }
      sub_100126E18((uint64_t)v1, (void (*)(void))type metadata accessor for SearchLocation);
      sub_100126E18((uint64_t)v20, (void (*)(void))type metadata accessor for SearchLocation);
      v24 += v26;
      if (!--v21) {
        goto LABEL_43;
      }
    }
    sub_100126E18((uint64_t)v1, (void (*)(void))type metadata accessor for SearchLocation);
    sub_100126E18((uint64_t)v20, (void (*)(void))type metadata accessor for SearchLocation);
  }
LABEL_43:
  sub_100162694();
}

void sub_100BDB8D0()
{
  sub_1001843DC();
  uint64_t v2 = *(void *)(v0 + 16);
  if (v2 == *(void *)(v1 + 16) && v2 && v0 != v1)
  {
    uint64_t v3 = (unsigned __int8 *)(v1 + 64);
    uint64_t v4 = v0 + 64;
    do
    {
      uint64_t v5 = *((void *)v3 - 1);
      uint64_t v15 = *((void *)v3 - 2);
      unsigned __int8 v6 = *v3;
      BOOL v7 = *(void *)(v4 - 32) == *((void *)v3 - 4) && *(void *)(v4 - 24) == *((void *)v3 - 3);
      if (!v7 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_100152498();
      sub_1001F3C64(v8, v9, v10);
      swift_bridgeObjectRetain();
      sub_1001F3C64(v15, v5, v6);
      sub_100152498();
      char v14 = static TemporalString.== infix(_:_:)();
      swift_bridgeObjectRelease();
      sub_1001F3C7C(v15, v5, v6);
      swift_bridgeObjectRelease();
      uint64_t v11 = sub_100152498();
      sub_1001F3C7C(v11, v12, v13);
      if ((v14 & 1) == 0) {
        break;
      }
      v3 += 40;
      v4 += 40;
      --v2;
    }
    while (v2);
  }
  sub_100152398();
}

void sub_100BDB9F0()
{
  sub_100162EA0();
  uint64_t v1 = v0;
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for ScrubberHour(0);
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10016278C();
  uint64_t v10 = v8 - v9;
  __chkstk_darwin(v11);
  unsigned __int8 v13 = (char *)&v44 - v12;
  uint64_t v14 = type metadata accessor for ScrubberDay(0);
  sub_10017DD84();
  __chkstk_darwin(v15);
  sub_1001D1018();
  uint64_t v18 = v16 - v17;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v44 - v20;
  uint64_t v22 = *(void *)(v3 + 16);
  if (v22 == *(void *)(v1 + 16) && v22 && v3 != v1)
  {
    uint64_t v44 = v6;
    uint64_t v45 = v22;
    uint64_t v52 = v18;
    uint64_t v53 = v4;
    sub_100128AF8();
    uint64_t v47 = v1 + v24;
    uint64_t v48 = v25;
    uint64_t v46 = *(void *)(v26 + 72);
    uint64_t v50 = v14;
    uint64_t v51 = v21;
    while (1)
    {
      uint64_t v49 = v23;
      sub_100126EC0();
      sub_100126EC0();
      if ((static Date.== infix(_:_:)() & 1) == 0) {
        break;
      }
      uint64_t v27 = *(int *)(v50 + 20);
      uint64_t v28 = *(void *)&v51[v27];
      uint64_t v29 = *(void *)(v52 + v27);
      uint64_t v30 = *(void *)(v28 + 16);
      if (v30 != *(void *)(v29 + 16)) {
        break;
      }
      if (v30 && v28 != v29)
      {
        sub_100119544();
        uint64_t v33 = v32 & ~v31;
        uint64_t v35 = *(void *)(v34 + 72);
        while (1)
        {
          sub_100126EC0();
          sub_100126EC0();
          if ((static Date.== infix(_:_:)() & 1) == 0) {
            break;
          }
          uint64_t v36 = *(int *)(v53 + 20);
          int v37 = v13[v36];
          int v38 = *(unsigned __int8 *)(v10 + v36);
          sub_100126E18(v10, (void (*)(void))type metadata accessor for ScrubberHour);
          sub_100126E18((uint64_t)v13, (void (*)(void))type metadata accessor for ScrubberHour);
          if (v37 != v38) {
            goto LABEL_23;
          }
          v33 += v35;
          if (!--v30) {
            goto LABEL_13;
          }
        }
        sub_100126E18(v10, (void (*)(void))type metadata accessor for ScrubberHour);
        sub_100126E18((uint64_t)v13, (void (*)(void))type metadata accessor for ScrubberHour);
        break;
      }
LABEL_13:
      sub_1001EC4CC();
      BOOL v41 = v41 && v39 == v40;
      if (!v41 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      uint64_t v42 = (uint64_t)v51;
      char v43 = v51[*(int *)(v50 + 28)] ^ *(unsigned char *)(v52 + *(int *)(v50 + 28));
      sub_100126E18(v52, (void (*)(void))type metadata accessor for ScrubberDay);
      sub_100126E18(v42, (void (*)(void))type metadata accessor for ScrubberDay);
      if ((v43 & 1) == 0)
      {
        uint64_t v23 = v49 + 1;
        if (v49 + 1 != v45) {
          continue;
        }
      }
      goto LABEL_24;
    }
LABEL_23:
    sub_100126E18(v52, (void (*)(void))type metadata accessor for ScrubberDay);
    sub_100126E18((uint64_t)v51, (void (*)(void))type metadata accessor for ScrubberDay);
  }
LABEL_24:
  sub_100162694();
}

void sub_100BDBD68()
{
  sub_100162EA0();
  uint64_t v4 = sub_100162814();
  uint64_t v5 = type metadata accessor for ScrubberHour(v4);
  sub_10017DD84();
  __chkstk_darwin(v6);
  sub_1001A0364();
  __chkstk_darwin(v7);
  sub_1001A36F0();
  if (v10 && v9 && v1 != v0)
  {
    unint64_t v11 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v12 = *(void *)(v8 + 72);
    uint64_t v13 = v9 - 1;
    while (1)
    {
      uint64_t v14 = v13;
      sub_100126EC0();
      sub_10012B774();
      if ((static Date.== infix(_:_:)() & 1) == 0) {
        break;
      }
      char v15 = *(unsigned char *)(v3 + *(int *)(v5 + 20)) ^ *(unsigned char *)(v2 + *(int *)(v5 + 20));
      sub_100126E18(v2, (void (*)(void))type metadata accessor for ScrubberHour);
      sub_10019CA2C();
      if ((v15 & 1) == 0)
      {
        uint64_t v13 = v14 - 1;
        v11 += v12;
        if (v14) {
          continue;
        }
      }
      goto LABEL_12;
    }
    sub_100126E18(v2, (void (*)(void))type metadata accessor for ScrubberHour);
    sub_10017F778();
  }
LABEL_12:
  sub_100162694();
}

void sub_100BDBED8()
{
  sub_100162EA0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  uint64_t v6 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel(0);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_10016279C();
  uint64_t v89 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel(0);
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_100162EF8();
  uint64_t v86 = v9;
  sub_1001626D4();
  __chkstk_darwin(v10);
  sub_100128F8C();
  uint64_t v85 = v11;
  uint64_t v12 = sub_10017DF08(&qword_100E85FA8);
  sub_100162E4C();
  __chkstk_darwin(v13);
  sub_100162E88();
  uint64_t v84 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem(0);
  sub_10017DD84();
  __chkstk_darwin(v14);
  sub_100182E34();
  __chkstk_darwin(v15);
  sub_10018C89C();
  uint64_t v88 = v16;
  sub_100127A50();
  __chkstk_darwin(v17);
  sub_10018C89C();
  uint64_t v87 = v18;
  sub_100127A50();
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v76 - v21;
  __chkstk_darwin(v20);
  uint64_t v25 = (char *)&v76 - v24;
  uint64_t v26 = *(void *)(v5 + 16);
  if (v26 != *(void *)(v3 + 16) || !v26 || v5 == v3)
  {
LABEL_81:
    sub_100162694();
    return;
  }
  uint64_t v77 = v1;
  uint64_t v78 = v23;
  uint64_t v27 = 0;
  sub_100128AF8();
  uint64_t v81 = v3 + v28;
  uint64_t v82 = v29;
  uint64_t v31 = *(void *)(v30 + 72);
  uint64_t v79 = v12;
  uint64_t v80 = v31;
  while (1)
  {
    sub_100126EC0();
    sub_100126EC0();
    uint64_t v32 = v12;
    sub_100126EC0();
    sub_100126EC0();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v83 = v27;
    if (!EnumCaseMultiPayload) {
      break;
    }
    if (EnumCaseMultiPayload == 1)
    {
      sub_100126EC0();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_10018282C();
        if ((static Date.== infix(_:_:)() & 1) == 0) {
          goto LABEL_76;
        }
        if ((static TimeZone.== infix(_:_:)() & 1) == 0) {
          goto LABEL_76;
        }
        uint64_t v34 = *(int *)(v89 + 24);
        uint64_t v35 = *(void **)(v88 + v34);
        uint64_t v36 = *(void **)(v86 + v34);
        uint64_t v37 = v35[2];
        if (v37 != v36[2]) {
          goto LABEL_76;
        }
        if (v37 && v35 != v36)
        {
          BOOL v38 = v35[4] == v36[4] && v35[5] == v36[5];
          if (!v38 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            goto LABEL_76;
          }
          if (v37 != 1)
          {
            uint64_t v39 = v36 + 7;
            uint64_t v40 = v35 + 7;
            while (1)
            {
              BOOL v41 = *(v40 - 1) == *(v39 - 1) && *v40 == *v39;
              if (!v41 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
                break;
              }
              sub_100109804();
              if (v38) {
                goto LABEL_27;
              }
            }
LABEL_76:
            sub_100126E18(v86, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
            uint64_t v73 = v88;
LABEL_78:
            sub_100126E18(v73, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
LABEL_79:
            sub_100126E18(v0, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
LABEL_80:
            sub_100126E18((uint64_t)v22, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
            sub_100126E18((uint64_t)v25, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
            goto LABEL_81;
          }
        }
LABEL_27:
        sub_1001EC4CC();
        BOOL v44 = v38 && v42 == v43;
        if (!v44 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
          goto LABEL_76;
        }
        uint64_t v45 = v88;
        uint64_t v46 = *(int *)(v89 + 32);
        uint64_t v48 = *(void *)(v88 + v46);
        uint64_t v47 = *(void *)(v88 + v46 + 8);
        uint64_t v49 = v86;
        uint64_t v50 = (void *)(v86 + v46);
        if (v48 != *v50 || v47 != v50[1])
        {
          char v52 = _stringCompareWithSmolCheck(_:_:expecting:)();
          uint64_t v49 = v86;
          uint64_t v45 = v88;
          if ((v52 & 1) == 0) {
            goto LABEL_76;
          }
        }
        goto LABEL_71;
      }
      uint64_t v74 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel;
      uint64_t v75 = v88;
LABEL_85:
      sub_100126E18(v75, (void (*)(void))v74);
      sub_100178110(v0, &qword_100E85FA8);
      goto LABEL_80;
    }
    uint64_t v70 = v78;
    sub_100126EC0();
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      uint64_t v74 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel;
      uint64_t v75 = v70;
      goto LABEL_85;
    }
    uint64_t v71 = v77;
    sub_10018282C();
    char v72 = sub_1007043E4(v70, v71);
    sub_100126E18(v71, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
    sub_100126E18(v70, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.HourModel);
    uint64_t v12 = v32;
    if ((v72 & 1) == 0) {
      goto LABEL_79;
    }
LABEL_74:
    uint64_t v27 = v83 + 1;
    sub_100126E18(v0, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
    sub_100126E18((uint64_t)v22, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
    sub_100126E18((uint64_t)v25, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem);
    if (v27 == v26) {
      goto LABEL_81;
    }
  }
  sub_100126EC0();
  if (swift_getEnumCaseMultiPayload())
  {
    uint64_t v74 = type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel;
    uint64_t v75 = v87;
    goto LABEL_85;
  }
  sub_10018282C();
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    goto LABEL_77;
  }
  if ((static TimeZone.== infix(_:_:)() & 1) == 0) {
    goto LABEL_77;
  }
  uint64_t v53 = *(int *)(v89 + 24);
  uint64_t v54 = *(void **)(v87 + v53);
  double v55 = *(void **)(v85 + v53);
  unint64_t v56 = v54[2];
  if (v56 != v55[2]) {
    goto LABEL_77;
  }
  if (v56) {
    BOOL v57 = v54 == v55;
  }
  else {
    BOOL v57 = 1;
  }
  if (v57) {
    goto LABEL_61;
  }
  BOOL v58 = v54[4] == v55[4] && v54[5] == v55[5];
  if (!v58 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
LABEL_77:
    sub_100126E18(v85, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
    uint64_t v73 = v87;
    goto LABEL_78;
  }
  if (v56 == 1)
  {
LABEL_61:
    sub_1001EC4CC();
    BOOL v63 = v38 && v61 == v62;
    if (!v63 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      goto LABEL_77;
    }
    uint64_t v64 = *(int *)(v89 + 32);
    uint64_t v45 = v87;
    uint64_t v66 = *(void *)(v87 + v64);
    uint64_t v65 = *(void *)(v87 + v64 + 8);
    uint64_t v49 = v85;
    uint64_t v67 = (void *)(v85 + v64);
    if (v66 != *v67 || v65 != v67[1])
    {
      char v69 = _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t v49 = v85;
      uint64_t v45 = v87;
      if ((v69 & 1) == 0) {
        goto LABEL_77;
      }
    }
LABEL_71:
    sub_100126E18(v49, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
    sub_100126E18(v45, (void (*)(void))type metadata accessor for HourlyForecastComponentViewModel.HourlyItem.SunriseSetModel);
    uint64_t v12 = v79;
    goto LABEL_74;
  }
  uint64_t v59 = v54 + 7;
  while (v56 > 1)
  {
    BOOL v60 = *(v59 - 1) == v55[6] && *v59 == v55[7];
    if (!v60 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      goto LABEL_77;
    }
    sub_100109804();
    if (v38) {
      goto LABEL_61;
    }
  }
  __break(1u);
}

void sub_100BDC6A0()
{
}

void sub_100BDC6F4()
{
}

void sub_100BDC73C()
{
}

void sub_100BDC790()
{
  sub_100162EA0();
  sub_100162814();
  uint64_t v5 = type metadata accessor for DayWeather();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_10012B938();
  uint64_t v9 = sub_10017DF08(&qword_100E6B6C8);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_100125FF8();
  uint64_t v77 = sub_10017DF08(&qword_100EB7828);
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_100109370();
  uint64_t v87 = type metadata accessor for HourWeather();
  sub_100179C0C();
  uint64_t v78 = v12;
  __chkstk_darwin(v13);
  sub_100162EF8();
  uint64_t v89 = v14;
  sub_1001626D4();
  __chkstk_darwin(v15);
  sub_100128F8C();
  uint64_t v88 = v16;
  uint64_t v17 = sub_100129064();
  uint64_t v79 = type metadata accessor for ConditionDetailChartInput(v17);
  sub_100179C0C();
  __chkstk_darwin(v18);
  sub_100162EF8();
  uint64_t v85 = v19;
  sub_1001626D4();
  __chkstk_darwin(v20);
  sub_100128F8C();
  uint64_t v83 = v21;
  uint64_t v22 = sub_100129064();
  type metadata accessor for ConditionDetailChartInputs(v22);
  sub_10017DD84();
  __chkstk_darwin(v23);
  sub_1001CB7A0();
  uint64_t v81 = v24;
  sub_100127A50();
  __chkstk_darwin(v25);
  sub_10018C89C();
  uint64_t v80 = v27;
  uint64_t v28 = *(void *)(v1 + 16);
  if (v28 == *(void *)(v0 + 16) && v28 && v1 != v0)
  {
    uint64_t v76 = v26;
    uint64_t v72 = v4;
    uint64_t v66 = v3;
    uint64_t v64 = v2;
    uint64_t v73 = v5;
    uint64_t v29 = 0;
    sub_100210458();
    uint64_t v31 = v1 + v30;
    uint64_t v32 = v0 + v30;
    uint64_t v84 = (void (**)(uint64_t, uint64_t))(v78 + 8);
    uint64_t v65 = (void (**)(uint64_t, uint64_t))(v7 + 8);
    uint64_t v34 = v80;
    uint64_t v33 = v81;
    uint64_t v74 = v35;
    while (1)
    {
      sub_100126EC0();
      sub_100126EC0();
      if ((static Date.== infix(_:_:)() & 1) == 0
        || (uint64_t v36 = *(int *)(v76 + 20),
            uint64_t v37 = *(void *)(v34 + v36),
            uint64_t v38 = *(void *)(v33 + v36),
            uint64_t v39 = *(void *)(v37 + 16),
            v39 != *(void *)(v38 + 16)))
      {
LABEL_47:
        sub_100126E18(v33, (void (*)(void))type metadata accessor for ConditionDetailChartInputs);
        sub_10017F778();
        goto LABEL_48;
      }
      if (v39 && v37 != v38) {
        break;
      }
LABEL_41:
      ++v29;
      sub_100126E18(v33, (void (*)(void))type metadata accessor for ConditionDetailChartInputs);
      sub_10017F778();
      if (v29 == v74) {
        goto LABEL_48;
      }
    }
    unint64_t v40 = 0;
    sub_100BE4BBC();
    uint64_t v71 = v29;
    uint64_t v70 = v31;
    uint64_t v69 = v32;
    uint64_t v68 = v38;
    uint64_t v67 = v41;
    while (1)
    {
      sub_100126EC0();
      if (v40 >= *(void *)(v38 + 16)) {
        break;
      }
      unint64_t v75 = v40;
      sub_100126EC0();
      if ((static ConditionDetailChartHeaderInput.== infix(_:_:)() & 1) == 0) {
        goto LABEL_46;
      }
      uint64_t v42 = *(int *)(v79 + 20);
      uint64_t v91 = v85 + v42;
      uint64_t v92 = v83 + v42;
      if ((static Date.== infix(_:_:)() & 1) == 0) {
        goto LABEL_46;
      }
      uint64_t v90 = (int *)type metadata accessor for ConditionDetailChartDataInput(0);
      if ((sub_10019E064() & 1) == 0) {
        goto LABEL_46;
      }
      type metadata accessor for DetailChartCondition();
      sub_100126C28(&qword_100E9D010, (void (*)(uint64_t))&type metadata accessor for DetailChartCondition);
      dispatch thunk of RawRepresentable.rawValue.getter();
      dispatch thunk of RawRepresentable.rawValue.getter();
      BOOL v43 = v95 == v93 && v96 == v94;
      if (v43)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v44 = sub_10019CC78();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v44 & 1) == 0) {
          goto LABEL_46;
        }
      }
      if ((sub_10019E064() & 1) == 0) {
        goto LABEL_46;
      }
      if ((sub_10019E064() & 1) == 0) {
        goto LABEL_46;
      }
      if (*(unsigned __int8 *)(v92 + v90[9]) != *(unsigned __int8 *)(v91 + v90[9])) {
        goto LABEL_46;
      }
      sub_100164C8C(v90[10]);
      if ((static TimeZone.== infix(_:_:)() & 1) == 0) {
        goto LABEL_46;
      }
      uint64_t v45 = v90[11];
      uint64_t v46 = *(void *)(v91 + v45);
      uint64_t v86 = *(void *)(v92 + v45);
      uint64_t v47 = *(void *)(v86 + 16);
      if (v47 != *(void *)(v46 + 16)) {
        goto LABEL_46;
      }
      if (v47 && v86 != v46)
      {
        sub_100119544();
        uint64_t v50 = v49 & ~v48;
        uint64_t v82 = *(void *)(v51 + 72);
        char v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 16);
        do
        {
          v52(v88, v86 + v50, v87);
          v52(v89, v46 + v50, v87);
          sub_100126C28(&qword_100E71300, (void (*)(uint64_t))&type metadata accessor for HourWeather);
          char v53 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v54 = *v84;
          (*v84)(v89, v87);
          v54(v88, v87);
          if ((v53 & 1) == 0) {
            goto LABEL_46;
          }
          v50 += v82;
        }
        while (--v47);
      }
      sub_100164C8C(v90[12]);
      if ((static CurrentWeather.== infix(_:_:)() & 1) == 0) {
        goto LABEL_46;
      }
      uint64_t v55 = v72 + *(int *)(v77 + 48);
      sub_10006DF38(v92 + v90[13], v72, &qword_100E6B6C8);
      uint64_t v56 = sub_10017F3C8();
      sub_10006DF38(v56, v57, &qword_100E6B6C8);
      sub_10012B520(v72, 1, v73);
      if (v43)
      {
        sub_10012B520(v55, 1, v73);
        if (!v43) {
          goto LABEL_45;
        }
        sub_100178110(v72, &qword_100E6B6C8);
      }
      else
      {
        sub_10006DF38(v72, v66, &qword_100E6B6C8);
        sub_10012B520(v55, 1, v73);
        if (v58)
        {
          uint64_t v62 = sub_10012BA84();
          v63(v62, v73);
LABEL_45:
          sub_100178110(v72, &qword_100EB7828);
LABEL_46:
          sub_100126E18(v85, (void (*)(void))type metadata accessor for ConditionDetailChartInput);
          sub_100126E18(v83, (void (*)(void))type metadata accessor for ConditionDetailChartInput);
          uint64_t v33 = v81;
          goto LABEL_47;
        }
        sub_1001190D4();
        v59();
        sub_100126C28(&qword_100E71328, (void (*)(uint64_t))&type metadata accessor for DayWeather);
        sub_100127C2C();
        char v60 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v61 = *v65;
        (*v65)(v64, v73);
        v61(v66, v73);
        sub_100178110(v72, &qword_100E6B6C8);
        if ((v60 & 1) == 0) {
          goto LABEL_46;
        }
      }
      sub_100164C8C(v90[14]);
      if ((static ChartViewModelInterpolationMode.== infix(_:_:)() & 1) == 0) {
        goto LABEL_46;
      }
      unint64_t v40 = v75 + 1;
      sub_100126E18(v85, (void (*)(void))type metadata accessor for ConditionDetailChartInput);
      sub_100126E18(v83, (void (*)(void))type metadata accessor for ConditionDetailChartInput);
      uint64_t v34 = v80;
      uint64_t v33 = v81;
      uint64_t v29 = v71;
      uint64_t v31 = v70;
      uint64_t v32 = v69;
      uint64_t v38 = v68;
      if (v75 + 1 == v67) {
        goto LABEL_41;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_48:
    sub_100162694();
  }
}

uint64_t sub_100BDD0CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  swift_retain();
  swift_retain();
  char v5 = static Gradient.Stop.== infix(_:_:)();
  swift_release();
  swift_release();
  if ((v5 & 1) == 0) {
    return 0;
  }
  uint64_t v6 = a2 + 56;
  uint64_t v7 = a1 + 56;
  do
  {
    BOOL v8 = --v2 == 0;
    if (!v2) {
      break;
    }
    uint64_t v9 = v6 + 16;
    uint64_t v10 = v7 + 16;
    swift_retain();
    swift_retain();
    char v11 = static Gradient.Stop.== infix(_:_:)();
    swift_release();
    swift_release();
    uint64_t v7 = v10;
    uint64_t v6 = v9;
  }
  while ((v11 & 1) != 0);
  return v8;
}

void sub_100BDD1FC()
{
}

void sub_100BDD244()
{
  sub_100162EA0();
  uint64_t v3 = v2;
  uint64_t v5 = v4;
  type metadata accessor for HistoricalFactsCategory();
  sub_10017DD84();
  __chkstk_darwin(v6);
  sub_1001836E4();
  __chkstk_darwin(v7);
  sub_10018C6CC();
  uint64_t v9 = *(void *)(v5 + 16);
  if (v9 == *(void *)(v3 + 16) && v9 && v5 != v3)
  {
    unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v16 = *(void *)(v8 + 72);
    uint64_t v17 = v0;
    uint64_t v11 = v9 - 1;
    while (1)
    {
      sub_100126EC0();
      sub_100126EC0();
      BOOL v12 = *v0 == *v1 && v0[1] == v1[1];
      if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      sub_10017DF08(&qword_100E7EBC8);
      sub_1001246C8((unint64_t *)&qword_100E7EBD0, &qword_100E7EBC8);
      sub_100533FCC();
      uint64_t v0 = v17;
      char v13 = static NonEmpty<>.== infix(_:_:)();
      sub_100126E18((uint64_t)v1, (void (*)(void))type metadata accessor for HistoricalFactsCategory);
      sub_10018BF34();
      BOOL v15 = v11-- != 0;
      if (v13)
      {
        v10 += v16;
        if (v15) {
          continue;
        }
      }
      goto LABEL_18;
    }
    sub_100126E18((uint64_t)v1, (void (*)(void))type metadata accessor for HistoricalFactsCategory);
    sub_10017F778();
  }
LABEL_18:
  sub_100162694();
}

void sub_100BDD44C()
{
  sub_100162EA0();
  uint64_t v4 = sub_100162814();
  uint64_t v5 = (int *)type metadata accessor for DayPickerViewModel.CalendarDayViewModel(v4);
  sub_10017DD84();
  __chkstk_darwin(v6);
  sub_1001A0364();
  __chkstk_darwin(v7);
  sub_1001A36F0();
  if (v14 && v9 && v1 != v0)
  {
    unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v23 = *(void *)(v8 + 72);
    uint64_t v11 = v9 - 1;
    while (1)
    {
      sub_100126EC0();
      sub_10012B774();
      if ((static Date.== infix(_:_:)() & 1) == 0) {
        break;
      }
      sub_100166E90(v5[5]);
      BOOL v14 = v14 && v12 == v13;
      if (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      sub_100166E90(v5[6]);
      BOOL v17 = v14 && v15 == v16;
      if (!v17 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      uint64_t v18 = v5[7];
      int v19 = *(unsigned __int8 *)(v3 + v18);
      int v20 = *(unsigned __int8 *)(v2 + v18);
      sub_100126E18(v2, (void (*)(void))type metadata accessor for DayPickerViewModel.CalendarDayViewModel);
      sub_10019CA2C();
      BOOL v22 = v11-- != 0;
      if (v19 == v20)
      {
        v10 += v23;
        if (v22) {
          continue;
        }
      }
      goto LABEL_25;
    }
    sub_100126E18(v2, (void (*)(void))type metadata accessor for DayPickerViewModel.CalendarDayViewModel);
    sub_10017F778();
  }
LABEL_25:
  sub_100162694();
}

void sub_100BDD5F4()
{
}

void sub_100BDD63C()
{
}

void sub_100BDD690()
{
  sub_100162EA0();
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  uint64_t v9 = type metadata accessor for LocationComponentAction(0);
  sub_100162E4C();
  __chkstk_darwin(v10);
  sub_10011BFD8();
  uint64_t v11 = sub_10017DF08(&qword_100E7AF78);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_10012B938();
  uint64_t v13 = sub_10017DF08(&qword_100EB38C8);
  sub_100162E4C();
  __chkstk_darwin(v14);
  sub_10011BA28();
  type metadata accessor for LocationComponentContainerViewModel();
  sub_10017DD84();
  __chkstk_darwin(v15);
  sub_1001CA99C();
  __chkstk_darwin(v16);
  sub_100184868();
  uint64_t v18 = *(void *)(v8 + 16);
  if (v18 == *(void *)(v6 + 16))
  {
    uint64_t v39 = v9;
    if (v18)
    {
      if (v8 != v6)
      {
        unint64_t v40 = v17;
        uint64_t v36 = v0;
        uint64_t v37 = v1;
        sub_1001A8844();
        uint64_t v38 = v19;
        uint64_t v20 = v13;
        while (1)
        {
          sub_100126EC0();
          sub_100126EC0();
          sub_100188E04();
          sub_100365CFC();
          if ((v21 & 1) == 0) {
            break;
          }
          uint64_t v22 = sub_100189DEC(v40[5]);
          if ((sub_1009F1F2C(v22, v23) & 1) == 0) {
            break;
          }
          uint64_t v24 = v40[6];
          uint64_t v25 = *(unsigned __int8 *)(v4 + v24);
          int v26 = *(unsigned __int8 *)(v4 + v24 + 1);
          uint64_t v27 = (unsigned __int8 *)(v3 + v24);
          unsigned int v28 = *v27;
          int v29 = v27[1];
          if (v26 == 1)
          {
            switch(v25)
            {
              case 1:
                BOOL v30 = v28 == 1;
                break;
              case 2:
                BOOL v30 = v28 == 2;
                break;
              case 3:
                if (v28 <= 2) {
                  int v29 = 0;
                }
                if (v29 == 1) {
                  goto LABEL_23;
                }
                goto LABEL_34;
              default:
                BOOL v30 = v28 == 0;
                break;
            }
            if (!v30) {
              LOBYTE(v29) = 0;
            }
            if ((v29 & 1) == 0) {
              break;
            }
          }
          else
          {
            if (v25 != v28) {
              LOBYTE(v29) = 1;
            }
            if (v29) {
              break;
            }
          }
LABEL_23:
          uint64_t v31 = v40[7];
          uint64_t v32 = v3 + v31;
          uint64_t v33 = v2 + *(int *)(v20 + 48);
          sub_10006DF38(v4 + v31, v2, &qword_100E7AF78);
          sub_10006DF38(v32, v33, &qword_100E7AF78);
          sub_10012B520(v2, 1, v39);
          if (v30)
          {
            sub_10012B520(v33, 1, v39);
            if (!v30) {
              goto LABEL_33;
            }
            sub_10017921C();
          }
          else
          {
            sub_10006DF38(v2, v37, &qword_100E7AF78);
            sub_10012B520(v33, 1, v39);
            if (v34)
            {
              sub_100126E18(v37, (void (*)(void))type metadata accessor for LocationComponentAction);
LABEL_33:
              sub_100178110(v2, &qword_100EB38C8);
              break;
            }
            sub_10018282C();
            char v35 = sub_1003466E8(v37, v36);
            sub_100126E18(v37, (void (*)(void))type metadata accessor for LocationComponentAction);
            uint64_t v20 = v13;
            sub_100126E18(v36, (void (*)(void))type metadata accessor for LocationComponentAction);
            sub_10017921C();
            if ((v35 & 1) == 0) {
              break;
            }
          }
          sub_100126E18(v3, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
          sub_10018B23C();
          v1 += v38;
          if (!--v18) {
            goto LABEL_35;
          }
        }
LABEL_34:
        sub_100126E18(v3, (void (*)(void))type metadata accessor for LocationComponentContainerViewModel);
        sub_10018B23C();
      }
    }
  }
LABEL_35:
  sub_100162694();
}

void sub_100BDDA78()
{
}

void sub_100BDDAC0()
{
  sub_100162EA0();
  uint64_t v5 = v4;
  uint64_t v7 = v6;
  uint64_t v135 = type metadata accessor for UUID();
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_100162EF8();
  uint64_t v137 = v11;
  sub_1001626D4();
  __chkstk_darwin(v12);
  sub_100128F8C();
  uint64_t v136 = v13;
  sub_100129064();
  uint64_t v132 = (void *)type metadata accessor for URL();
  sub_100179C0C();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  sub_100162E88();
  uint64_t v17 = sub_10017DF08(&qword_100E749B0);
  uint64_t v18 = sub_100109308(v17);
  __chkstk_darwin(v18);
  sub_100162EF8();
  uint64_t v124 = v19;
  sub_1001626D4();
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)v106 - v21;
  uint64_t v131 = sub_10017DF08(&qword_100E6D578);
  sub_100162E4C();
  __chkstk_darwin(v23);
  sub_100162EF8();
  uint64_t v125 = v24;
  sub_1001626D4();
  __chkstk_darwin(v25);
  sub_100128F8C();
  uint64_t v126 = v26;
  sub_100129064();
  uint64_t v138 = (int *)type metadata accessor for NewsArticle();
  sub_100179C0C();
  uint64_t v28 = v27;
  __chkstk_darwin(v29);
  sub_100189DD0();
  __chkstk_darwin(v30);
  sub_10018B358();
  type metadata accessor for NewsArticlePlacement();
  sub_10017DD84();
  __chkstk_darwin(v31);
  sub_100182E34();
  __chkstk_darwin(v32);
  sub_10018C6CC();
  uint64_t v35 = *(void *)(v7 + 16);
  if (v35 != *(void *)(v5 + 16) || !v35 || v7 == v5) {
    goto LABEL_106;
  }
  uint64_t v114 = v33;
  uint64_t v109 = v28;
  uint64_t v123 = v34;
  sub_100210458();
  uint64_t v38 = v7 + v37;
  uint64_t v39 = v5 + v37;
  uint64_t v41 = *(void *)(v40 + 72);
  uint64_t v115 = v15 + 32;
  uint64_t v116 = (uint64_t *)(v15 + 8);
  uint64_t v130 = v9 + 16;
  uint64_t v129 = (void (**)(uint64_t))(v9 + 8);
  v106[0] = v9;
  uint64_t v121 = v1;
  uint64_t v113 = v42;
  uint64_t v112 = v38;
  uint64_t v111 = v39;
  uint64_t v110 = v41;
  while (1)
  {
    uint64_t v122 = v36;
    sub_100126EC0();
    uint64_t v43 = v123;
    sub_100126EC0();
    uint64_t v44 = *(void *)v1;
    uint64_t v45 = *(void *)v43;
    uint64_t v46 = *(void *)(*(void *)v1 + 16);
    if (v46 != *(void *)(*(void *)v43 + 16))
    {
LABEL_105:
      sub_100126E18(v43, (void (*)(void))type metadata accessor for NewsArticlePlacement);
      sub_100126E18(v121, (void (*)(void))type metadata accessor for NewsArticlePlacement);
LABEL_106:
      sub_100162694();
      return;
    }
    if (v46 && v44 != v45) {
      break;
    }
LABEL_92:
    uint64_t v1 = v121;
    type metadata accessor for ArticlePlacementLocation();
    sub_100126C28(&qword_100E9CFF8, (void (*)(uint64_t))&type metadata accessor for ArticlePlacementLocation);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    if (v141 == v139 && v142 == v140)
    {
      swift_bridgeObjectRelease_n();
      sub_100126E18(v43, (void (*)(void))type metadata accessor for NewsArticlePlacement);
      sub_100126E18(v1, (void (*)(void))type metadata accessor for NewsArticlePlacement);
    }
    else
    {
      char v103 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100126E18(v43, (void (*)(void))type metadata accessor for NewsArticlePlacement);
      sub_100126E18(v1, (void (*)(void))type metadata accessor for NewsArticlePlacement);
      if ((v103 & 1) == 0) {
        goto LABEL_106;
      }
    }
    uint64_t v36 = v122 + 1;
    if (v122 + 1 == v113) {
      goto LABEL_106;
    }
  }
  unint64_t v47 = 0;
  sub_100BE4BBC();
  uint64_t v119 = v45 + v48;
  uint64_t v50 = *(void *)(v49 + 72);
  uint64_t v120 = v0;
  uint64_t v117 = v22;
  uint64_t v108 = v45;
  uint64_t v107 = v46;
  v106[2] = v51;
  v106[1] = v50;
  while (1)
  {
    sub_100126EC0();
    if (v47 >= *(void *)(v45 + 16)) {
      goto LABEL_108;
    }
    unint64_t v118 = v47;
    sub_100126EC0();
    BOOL v52 = *v3 == *v2 && v3[1] == v2[1];
    if (!v52 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      goto LABEL_104;
    }
    BOOL v53 = v3[2] == v2[2] && v3[3] == v2[3];
    if (!v53 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      goto LABEL_104;
    }
    uint64_t v54 = v138[6];
    uint64_t v55 = (uint64_t)v2 + v54;
    uint64_t v56 = v126;
    uint64_t v57 = v126 + *(int *)(v131 + 48);
    sub_10006DF38((uint64_t)v3 + v54, v126, &qword_100E749B0);
    sub_10006DF38(v55, v57, &qword_100E749B0);
    char v58 = v132;
    sub_10012B520(v56, 1, (uint64_t)v132);
    if (v52)
    {
      sub_1001630A0(v57);
      if (!v52) {
        goto LABEL_103;
      }
      sub_10017921C();
    }
    else
    {
      sub_10006DF38(v56, (uint64_t)v117, &qword_100E749B0);
      sub_1001630A0(v57);
      if (v59)
      {
LABEL_102:
        uint64_t v104 = sub_10012BA84();
        v105(v104, v58);
LABEL_103:
        sub_100178110(v56, &qword_100E6D578);
LABEL_104:
        sub_100126E18((uint64_t)v2, (void (*)(void))type metadata accessor for NewsArticle);
        sub_10018B23C();
        uint64_t v43 = v123;
        goto LABEL_105;
      }
      sub_10018A1E8();
      v61(v60);
      sub_100126C28(qword_100E6D3E8, (void (*)(uint64_t))&type metadata accessor for URL);
      char v62 = sub_1001D14C8();
      BOOL v63 = (void (*)(uint64_t))*v116;
      sub_100166CA8();
      v63(v64);
      sub_100166CA8();
      v63(v65);
      sub_10017921C();
      if ((v62 & 1) == 0) {
        goto LABEL_104;
      }
    }
    sub_100189DEC(v138[7]);
    if ((static Date.== infix(_:_:)() & 1) == 0) {
      goto LABEL_104;
    }
    sub_100189DEC(v138[8]);
    if ((static URL.== infix(_:_:)() & 1) == 0) {
      goto LABEL_104;
    }
    uint64_t v66 = v138[9];
    uint64_t v67 = (char *)v3 + v66;
    uint64_t v68 = (char *)v2 + v66;
    BOOL v69 = *(void *)((char *)v3 + v66) == *(void *)((char *)v2 + v66)
       && *(void *)((char *)v3 + v66 + 8) == *(void *)((char *)v2 + v66 + 8);
    if (!v69 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      goto LABEL_104;
    }
    BOOL v70 = *((void *)v67 + 2) == *((void *)v68 + 2) && *((void *)v67 + 3) == *((void *)v68 + 3);
    if (!v70 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      goto LABEL_104;
    }
    uint64_t v71 = *(int *)(type metadata accessor for NewsChannel() + 24);
    uint64_t v72 = (uint64_t)&v67[v71];
    uint64_t v73 = (uint64_t)&v68[v71];
    uint64_t v56 = v125;
    unint64_t v74 = v125 + *(int *)(v131 + 48);
    sub_10006DF38(v72, v125, &qword_100E749B0);
    sub_10006DF38(v73, v74, &qword_100E749B0);
    char v58 = v132;
    sub_10012B520(v56, 1, (uint64_t)v132);
    if (v52)
    {
      sub_1001630A0(v74);
      if (!v52) {
        goto LABEL_103;
      }
      sub_10017921C();
    }
    else
    {
      sub_10006DF38(v56, v124, &qword_100E749B0);
      sub_1001630A0(v74);
      if (v75) {
        goto LABEL_102;
      }
      sub_10018A1E8();
      v77(v76);
      sub_100126C28(qword_100E6D3E8, (void (*)(uint64_t))&type metadata accessor for URL);
      unint64_t v74 = sub_1001D14C8();
      uint64_t v73 = *v116;
      sub_100166CA8();
      ((void (*)(uint64_t))v73)(v78);
      sub_100166CA8();
      ((void (*)(uint64_t))v73)(v79);
      sub_10017921C();
      if ((v74 & 1) == 0) {
        goto LABEL_104;
      }
    }
    sub_10012614C();
    if (!v52) {
      goto LABEL_104;
    }
    if (v74 && v58 != (void *)v73)
    {
      BOOL v80 = v58[4] == *(void *)(v73 + 32) && v58[5] == *(void *)(v73 + 40);
      if (!v80 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        goto LABEL_104;
      }
      if (v74 != 1)
      {
        v73 += 56;
        v58 += 7;
        do
        {
          BOOL v81 = *(v58 - 1) == *(void *)(v73 - 8) && *v58 == *(void *)v73;
          if (!v81 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            goto LABEL_104;
          }
          sub_1000A9E80();
        }
        while (!v52);
      }
    }
    sub_10012614C();
    if (!v52) {
      goto LABEL_104;
    }
    if (v74 && v58 != (void *)v73)
    {
      BOOL v83 = v58[4] == *(void *)(v73 + 32) && v58[5] == *(void *)(v73 + 40);
      if (!v83 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        goto LABEL_104;
      }
      if (v74 != 1) {
        break;
      }
    }
LABEL_85:
    uint64_t v87 = v138[12];
    uint64_t v88 = *(void *)((char *)v3 + v87);
    uint64_t v133 = *(void *)((char *)v2 + v87);
    uint64_t v134 = v88;
    uint64_t v89 = *(void *)(v88 + 16);
    if (v89 != *(void *)(v133 + 16)) {
      goto LABEL_104;
    }
    if (v89 && v134 != v133)
    {
      sub_100119544();
      uint64_t v92 = v91 & ~v90;
      uint64_t v94 = *(void (**)(uint64_t, uint64_t, uint64_t))(v93 + 16);
      uint64_t v127 = *(void *)(v93 + 72);
      uint64_t v128 = v94;
      do
      {
        uint64_t v95 = v135;
        uint64_t v96 = v128;
        v128(v136, v134 + v92, v135);
        v96(v137, v133 + v92, v95);
        sub_100126C28(&qword_100E855E0, (void (*)(uint64_t))&type metadata accessor for UUID);
        char v97 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v98 = v3;
        uint64_t v99 = *v129;
        sub_10017F214();
        v99(v100);
        sub_10017F214();
        v99(v101);
        uint64_t v3 = v98;
        if ((v97 & 1) == 0) {
          goto LABEL_104;
        }
        v92 += v127;
      }
      while (--v89);
    }
    unint64_t v47 = v118 + 1;
    sub_100126E18((uint64_t)v2, (void (*)(void))type metadata accessor for NewsArticle);
    sub_100126E18((uint64_t)v3, (void (*)(void))type metadata accessor for NewsArticle);
    uint64_t v0 = v120;
    uint64_t v22 = v117;
    uint64_t v43 = v123;
    uint64_t v45 = v108;
    if (v47 == v107) {
      goto LABEL_92;
    }
  }
  uint64_t v84 = (void *)(v73 + 56);
  uint64_t v85 = v58 + 7;
  while (v74 > 1)
  {
    BOOL v86 = *(v85 - 1) == *(v84 - 1) && *v85 == *v84;
    if (!v86 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
      goto LABEL_104;
    }
    sub_1000A9E80();
    if (v52) {
      goto LABEL_85;
    }
  }
  __break(1u);
LABEL_108:
  __break(1u);
}

void sub_100BDE614()
{
}

uint64_t sub_100BDE65C()
{
  uint64_t v0 = Color.cgColor.getter();
  if (!v0) {
    return 0;
  }
  uint64_t v1 = (void *)v0;
  id v2 = [objc_allocWithZone((Class)UIColor) initWithCGColor:v0];
  id v3 = [v2 accessibilityName];

  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  return v4;
}

void sub_100BDE6F8()
{
  qword_100EB7CA0 = 0;
}

void sub_100BDE704()
{
  qword_100EB7CA8 = 0x4030000000000000;
}

void sub_100BDE714()
{
  qword_100EB7CB0 = 0x4046000000000000;
}

double sub_100BDE724(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UserInterfaceSizeClass();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E662F0);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E65ED8);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v21 - v15;
  (*(void (**)(char *, void, uint64_t, __n128))(v3 + 104))((char *)&v21 - v15, enum case for UserInterfaceSizeClass.regular(_:), v2, v14);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v2);
  uint64_t v17 = (uint64_t)&v9[*(int *)(v7 + 56)];
  sub_10006DF38(a1, (uint64_t)v9, &qword_100E65ED8);
  sub_10006DF38((uint64_t)v16, v17, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v2) == 1)
  {
    sub_100178110((uint64_t)v16, &qword_100E65ED8);
    if (_s7Weather24LocationCompositionStateOwet_0(v17, 1, v2) == 1)
    {
      sub_100178110((uint64_t)v9, &qword_100E65ED8);
      return 96.0;
    }
    goto LABEL_6;
  }
  sub_10006DF38((uint64_t)v9, (uint64_t)v12, &qword_100E65ED8);
  if (_s7Weather24LocationCompositionStateOwet_0(v17, 1, v2) == 1)
  {
    sub_100178110((uint64_t)v16, &qword_100E65ED8);
    (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);
LABEL_6:
    sub_100178110((uint64_t)v9, &qword_100E662F0);
    return 24.0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v5, v17, v2);
  sub_100126C28(&qword_100E65F28, (void (*)(uint64_t))&type metadata accessor for UserInterfaceSizeClass);
  char v18 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v3 + 8);
  v19(v5, v2);
  sub_100178110((uint64_t)v16, &qword_100E65ED8);
  v19(v12, v2);
  sub_100178110((uint64_t)v9, &qword_100E65ED8);
  if (v18) {
    return 96.0;
  }
  return 24.0;
}

void WindCategoryTableView.body.getter()
{
  sub_100162EA0();
  uint64_t v47 = v0;
  uint64_t v48 = v4;
  uint64_t v5 = type metadata accessor for RoundedRectangle();
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  sub_10011BFD8();
  uint64_t v7 = type metadata accessor for Color.RGBColorSpace();
  sub_100179C0C();
  uint64_t v9 = v8;
  __chkstk_darwin(v10);
  sub_100125FF8();
  uint64_t v11 = sub_10017DF08(&qword_100EB7CB8);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_1001626E0();
  uint64_t v15 = v14 - v13;
  uint64_t v16 = sub_10017DF08(&qword_100EB7CC0);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  sub_100109370();
  uint64_t v18 = sub_10017DF08(&qword_100EB7CC8);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  sub_10016278C();
  uint64_t v22 = v20 - v21;
  __chkstk_darwin(v23);
  sub_100128F8C();
  uint64_t v46 = v24;
  *(void *)uint64_t v15 = static Alignment.center.getter();
  *(void *)(v15 + 8) = v25;
  *(void *)(v15 + 16) = 0;
  *(unsigned char *)(v15 + 24) = 0;
  *(void *)(v15 + 32) = 0;
  *(unsigned char *)(v15 + 40) = 0;
  uint64_t v26 = sub_10017DF08(&qword_100EB7CD0);
  sub_100BDEE5C(v47, v15 + *(int *)(v26 + 44));
  (*(void (**)(uint64_t, void, uint64_t))(v9 + 104))(v2, enum case for Color.RGBColorSpace.sRGB(_:), v7);
  uint64_t v27 = Color.init(_:red:green:blue:opacity:)();
  char v28 = static Edge.Set.all.getter();
  uint64_t v29 = sub_100188E04();
  sub_10006DF38(v29, v30, &qword_100EB7CB8);
  uint64_t v31 = v3 + *(int *)(v17 + 44);
  *(void *)uint64_t v31 = v27;
  *(unsigned char *)(v31 + 8) = v28;
  sub_100178110(v15, &qword_100EB7CB8);
  uint64_t v32 = (char *)v1 + *(int *)(v6 + 28);
  uint64_t v33 = enum case for RoundedCornerStyle.continuous(_:);
  type metadata accessor for RoundedCornerStyle();
  sub_100162E4C();
  (*(void (**)(char *, uint64_t))(v34 + 104))(v32, v33);
  __asm { FMOV            V0.2D, #8.0 }
  *uint64_t v1 = _Q0;
  uint64_t v40 = v22 + *(int *)(v19 + 44);
  sub_100126EC0();
  *(_WORD *)(v40 + *(int *)(sub_10017DF08(&qword_100E744A8) + 36)) = 256;
  sub_10006DF38(v3, v22, &qword_100EB7CC0);
  sub_100126E18((uint64_t)v1, (void (*)(void))&type metadata accessor for RoundedRectangle);
  sub_100178110(v3, &qword_100EB7CC0);
  sub_1001278D0(v22, v46, &qword_100EB7CC8);
  uint64_t v41 = static Alignment.center.getter();
  sub_100BD87F4(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, (uint64_t)v49, 0.0, 0, 0.0, 1, v41, v42, 0, 1);
  sub_10006DF38(v46, v22, &qword_100EB7CC8);
  sub_10006DF38(v22, v48, &qword_100EB7CC8);
  uint64_t v43 = sub_10017DF08(&qword_100EB7CD8);
  memcpy((void *)(v48 + *(int *)(v43 + 48)), v49, 0x80uLL);
  uint64_t v44 = sub_10017F3C8();
  sub_100178110(v44, v45);
  sub_100178110(v22, &qword_100EB7CC8);
  sub_100162694();
}

uint64_t sub_100BDEE5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v3 = type metadata accessor for WindCategoryTableView(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v54 = v3 - 8;
  uint64_t v56 = v4;
  uint64_t v55 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  BOOL v53 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100EB7F50);
  uint64_t v59 = *(void *)(v6 - 8);
  uint64_t v60 = v6;
  __chkstk_darwin(v6);
  char v58 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v57 = (char *)&v46 - v9;
  uint64_t v10 = type metadata accessor for DynamicTypeSize();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v46 - v15;
  uint64_t v17 = sub_10017DF08(&qword_100EB7F58);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_10017DF08(&qword_100EB7F60);
  uint64_t v21 = v20 - 8;
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_10017DF08(&qword_100EB7F68) - 8;
  __chkstk_darwin(v51);
  uint64_t v52 = (uint64_t)&v46 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v49 = (uint64_t)&v46 - v26;
  __chkstk_darwin(v27);
  uint64_t v50 = (uint64_t)&v46 - v28;
  uint64_t v48 = a1;
  sub_100BDF568(a1, (uint64_t)v19);
  sub_1001CAA20();
  unsigned int v47 = enum case for DynamicTypeSize.accessibility5(_:);
  uint64_t v46 = *(void (**)(char *))(v11 + 104);
  v46(v13);
  static DynamicTypeSize.== infix(_:_:)();
  uint64_t v29 = *(void (**)(char *, uint64_t))(v11 + 8);
  v29(v13, v10);
  v29(v16, v10);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_10006DF38((uint64_t)v19, (uint64_t)v23, &qword_100EB7F58);
  uint64_t v30 = &v23[*(int *)(v21 + 44)];
  long long v31 = v64;
  *(_OWORD *)uint64_t v30 = v63;
  *((_OWORD *)v30 + 1) = v31;
  *((_OWORD *)v30 + 2) = v65;
  sub_100178110((uint64_t)v19, &qword_100EB7F58);
  uint64_t v32 = v48;
  sub_1001CAA20();
  ((void (*)(char *, void, uint64_t))v46)(v13, v47, v10);
  LOBYTE(v21) = static DynamicTypeSize.== infix(_:_:)();
  v29(v13, v10);
  v29(v16, v10);
  if (v21) {
    double v33 = 0.0;
  }
  else {
    double v33 = 1.0;
  }
  uint64_t v34 = v49;
  sub_10006DF38((uint64_t)v23, v49, &qword_100EB7F60);
  *(double *)(v34 + *(int *)(v51 + 44)) = v33;
  sub_100178110((uint64_t)v23, &qword_100EB7F60);
  uint64_t v35 = v50;
  sub_1001278D0(v34, v50, &qword_100EB7F68);
  uint64_t v62 = *(void *)(v32 + *(int *)(v54 + 28) + 16);
  sub_100126EC0();
  swift_allocObject();
  sub_10018282C();
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100EB7F70);
  sub_10017DF08(&qword_100EB7F78);
  sub_1001246C8(&qword_100EB7F80, &qword_100EB7F70);
  sub_1001246C8(&qword_100EB7F88, &qword_100EB7F78);
  sub_100BE4500();
  uint64_t v36 = v57;
  ForEach<>.init(_:content:)();
  uint64_t v37 = v52;
  sub_10006DF38(v35, v52, &qword_100EB7F68);
  uint64_t v38 = v58;
  uint64_t v39 = v59;
  uint64_t v40 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
  uint64_t v41 = v60;
  v40(v58, v36, v60);
  uint64_t v42 = v61;
  sub_10006DF38(v37, v61, &qword_100EB7F68);
  uint64_t v43 = sub_10017DF08(&qword_100EB7F98);
  v40((char *)(v42 + *(int *)(v43 + 48)), v38, v41);
  uint64_t v44 = *(void (**)(char *, uint64_t))(v39 + 8);
  v44(v36, v41);
  sub_100178110(v35, &qword_100EB7F68);
  v44(v38, v41);
  return sub_100178110(v37, &qword_100EB7F68);
}

uint64_t sub_100BDF568@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v3 = type metadata accessor for QuaternaryDividerStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v39 = v3;
  uint64_t v40 = v4;
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Divider();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v37 = v7;
  uint64_t v38 = v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E77340);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v36 = (char *)&v36 - v16;
  uint64_t v17 = type metadata accessor for HeaderView(0);
  uint64_t v18 = v17 - 8;
  __chkstk_darwin(v17);
  uint64_t v20 = (uint64_t *)((char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v36 - v22;
  uint64_t v24 = (uint64_t *)(a1 + *(int *)(type metadata accessor for WindCategoryTableView(0) + 20));
  uint64_t v26 = *v24;
  uint64_t v25 = v24[1];
  uint64_t *v20 = swift_getKeyPath();
  sub_10017DF08(&qword_100E62D60);
  swift_storeEnumTagMultiPayload();
  uint64_t v27 = (uint64_t *)((char *)v20 + *(int *)(v18 + 28));
  *uint64_t v27 = v26;
  v27[1] = v25;
  sub_10018282C();
  swift_bridgeObjectRetain();
  Divider.init()();
  static DividerStyle<>.quaternary.getter();
  sub_100126C28(&qword_100E66F38, (void (*)(uint64_t))&type metadata accessor for Divider);
  sub_100126C28(&qword_100E77488, (void (*)(uint64_t))&type metadata accessor for QuaternaryDividerStyle);
  uint64_t v28 = v37;
  uint64_t v29 = v39;
  View.dividerStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v6, v29);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v28);
  uint64_t v30 = v36;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v36, v14, v11);
  sub_100126EC0();
  long long v31 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  v31(v14, v30, v11);
  uint64_t v32 = v41;
  sub_100126EC0();
  uint64_t v33 = sub_10017DF08(&qword_100EB7FB0);
  v31((char *)(v32 + *(int *)(v33 + 48)), v14, v11);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v12 + 8);
  v34(v30, v11);
  sub_100126E18((uint64_t)v23, (void (*)(void))type metadata accessor for HeaderView);
  v34(v14, v11);
  return sub_100126E18((uint64_t)v20, (void (*)(void))type metadata accessor for HeaderView);
}

uint64_t sub_100BDF9EC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v67 = a3;
  uint64_t v5 = type metadata accessor for QuaternaryDividerStyle();
  uint64_t v63 = *(void *)(v5 - 8);
  uint64_t v64 = v5;
  __chkstk_darwin(v5);
  uint64_t v61 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for Divider();
  uint64_t v60 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v59 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_10017DF08(&qword_100E77340);
  uint64_t v58 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v57 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100EB7FA0);
  __chkstk_darwin(v9 - 8);
  uint64_t v65 = (uint64_t)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v46 - v12;
  uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100EAA540);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (uint64_t *)((char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = type metadata accessor for RowView(0);
  uint64_t v18 = (int *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (uint64_t *)((char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v46 - v22;
  memcpy(__dst, a1, 0x58uLL);
  uint64_t v24 = *a1;
  uint64_t v54 = a1[1];
  uint64_t v55 = v24;
  uint64_t v25 = a1[2];
  uint64_t v52 = a1[3];
  uint64_t v53 = v25;
  uint64_t v26 = a1[4];
  uint64_t v50 = a1[5];
  uint64_t v51 = v26;
  uint64_t v27 = a1[6];
  uint64_t v48 = a1[7];
  uint64_t v49 = v27;
  uint64_t v47 = a1[8];
  long long v56 = *(_OWORD *)(a1 + 9);
  uint64_t v28 = (uint64_t *)(a2 + *(int *)(type metadata accessor for WindCategoryTableView(0) + 20));
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  uint64_t *v16 = swift_getKeyPath();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  swift_storeEnumTagMultiPayload();
  uint64_t *v20 = swift_getKeyPath();
  sub_10017DF08(&qword_100E62D60);
  swift_storeEnumTagMultiPayload();
  sub_1001278D0((uint64_t)v16, (uint64_t)v20 + v18[7], (uint64_t *)&unk_100EAA540);
  memcpy((char *)v20 + v18[8], __dst, 0x58uLL);
  long long v31 = (uint64_t *)((char *)v20 + v18[9]);
  void *v31 = v30;
  v31[1] = v29;
  sub_10018282C();
  uint64_t v32 = v28[2];
  uint64_t v33 = *(void *)(v32 + 16);
  if (!v33)
  {
    v68[0] = v55;
    v68[1] = v54;
    v68[2] = v53;
    v68[3] = v52;
    v68[4] = v51;
    v68[5] = v50;
    v68[6] = v49;
    v68[7] = v48;
    v68[8] = v47;
    *(_OWORD *)&v68[9] = v56;
    long long v69 = 0u;
    long long v70 = 0u;
    long long v71 = 0u;
    long long v72 = 0u;
    long long v73 = 0u;
    uint64_t v74 = 0;
    sub_100BE455C((uint64_t)__dst);
    sub_100BE455C((uint64_t)__dst);
    swift_bridgeObjectRetain();
    sub_100BE4644(v68);
    goto LABEL_5;
  }
  memcpy(v68, (const void *)(v32 + 88 * v33 - 56), sizeof(v68));
  sub_100BE455C((uint64_t)__dst);
  sub_100BE455C((uint64_t)__dst);
  sub_100BE455C((uint64_t)__dst);
  sub_100BE455C((uint64_t)v68);
  swift_bridgeObjectRetain();
  char v34 = sub_100BE20B0(__dst, v68);
  sub_100BE45D0((uint64_t)v68);
  sub_100BE45D0((uint64_t)__dst);
  sub_100BE45D0((uint64_t)__dst);
  if ((v34 & 1) == 0)
  {
LABEL_5:
    uint64_t v37 = v59;
    Divider.init()();
    uint64_t v38 = v61;
    static DividerStyle<>.quaternary.getter();
    sub_100126C28(&qword_100E66F38, (void (*)(uint64_t))&type metadata accessor for Divider);
    sub_100126C28(&qword_100E77488, (void (*)(uint64_t))&type metadata accessor for QuaternaryDividerStyle);
    uint64_t v39 = v57;
    uint64_t v40 = v62;
    uint64_t v41 = v64;
    View.dividerStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v63 + 8))(v38, v41);
    (*(void (**)(char *, uint64_t))(v60 + 8))(v37, v40);
    uint64_t v36 = v66;
    (*(void (**)(char *, char *, uint64_t))(v58 + 32))(v13, v39, v66);
    uint64_t v35 = 0;
    goto LABEL_6;
  }
  uint64_t v35 = 1;
  uint64_t v36 = v66;
LABEL_6:
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, v35, 1, v36);
  sub_100126EC0();
  uint64_t v42 = v65;
  sub_10006DF38((uint64_t)v13, v65, &qword_100EB7FA0);
  uint64_t v43 = v67;
  sub_100126EC0();
  uint64_t v44 = sub_10017DF08(&qword_100EB7FA8);
  sub_10006DF38(v42, v43 + *(int *)(v44 + 48), &qword_100EB7FA0);
  sub_100178110((uint64_t)v13, &qword_100EB7FA0);
  sub_100126E18((uint64_t)v23, (void (*)(void))type metadata accessor for RowView);
  sub_100178110(v42, &qword_100EB7FA0);
  return sub_100126E18((uint64_t)v20, (void (*)(void))type metadata accessor for RowView);
}

void *sub_100BE00D0@<X0>(uint64_t a1@<X8>)
{
  __src[0] = 0;
  LOBYTE(__src[1]) = 1;
  sub_100BE03E4(v1, (uint64_t)&__src[2]);
  memcpy(__dst, __src, sizeof(__dst));
  uint64_t v18 = static Font.headline.getter();
  uint64_t KeyPath = swift_getKeyPath();
  id v3 = [self labelColor];
  uint64_t v16 = Color.init(_:)();
  if (qword_100E62BF0 != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v14 = __src[2];
  uint64_t v15 = __src[0];
  uint64_t v13 = __src[4];
  uint64_t v12 = __src[6];
  uint64_t v10 = __src[10];
  uint64_t v11 = __src[8];
  uint64_t v8 = __src[13];
  uint64_t v9 = __src[12];
  char v24 = __src[1];
  char v23 = __src[3];
  char v22 = __src[5];
  char v21 = __src[7];
  char v20 = __src[9];
  char v19 = __src[11];
  if (qword_100E62BE0 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_100EB7CA0;
  if (qword_100E62BE8 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_100EB7CA8;
  char v6 = static Edge.Set.all.getter();
  BOOL result = memcpy((void *)a1, __dst, 0xB8uLL);
  *(void *)(a1 + 184) = KeyPath;
  *(void *)(a1 + 192) = v18;
  *(void *)(a1 + 200) = v16;
  *(void *)(a1 + 208) = v15;
  *(unsigned char *)(a1 + 216) = v24;
  *(void *)(a1 + 224) = v14;
  *(unsigned char *)(a1 + 232) = v23;
  *(void *)(a1 + 240) = v13;
  *(unsigned char *)(a1 + 248) = v22;
  *(void *)(a1 + 256) = v12;
  *(unsigned char *)(a1 + 264) = v21;
  *(void *)(a1 + 272) = v11;
  *(unsigned char *)(a1 + 280) = v20;
  *(void *)(a1 + 288) = v10;
  *(unsigned char *)(a1 + 296) = v19;
  *(void *)(a1 + 304) = v9;
  *(void *)(a1 + 312) = v8;
  *(unsigned char *)(a1 + 320) = v6;
  *(void *)(a1 + 328) = v4;
  *(void *)(a1 + 336) = 0;
  *(void *)(a1 + 344) = 0;
  *(void *)(a1 + 352) = v5;
  *(unsigned char *)(a1 + 360) = 0;
  return result;
}

uint64_t sub_100BE03E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for DynamicTypeSize();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v45 - v9;
  uint64_t v61 = static Beaufort.symbol(level:)();
  uint64_t v62 = v11;
  unint64_t v45 = sub_10014A85C();
  uint64_t v12 = Text.init<A>(_:)();
  uint64_t v14 = v13;
  int v52 = v15;
  uint64_t v57 = v16;
  uint64_t v55 = static HorizontalAlignment.leading.getter();
  if (qword_100E62BE8 != -1) {
    swift_once();
  }
  uint64_t v51 = qword_100EB7CA8;
  int v50 = static Edge.Set.all.getter();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v17 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v53 = v18;
  uint64_t v54 = v17;
  int v48 = v19;
  uint64_t v56 = v20;
  uint64_t v49 = static HorizontalAlignment.leading.getter();
  sub_1001CAA20();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for DynamicTypeSize.accessibility1(_:), v4);
  char v21 = static DynamicTypeSize.< infix(_:_:)();
  char v22 = *(void (**)(char *, uint64_t))(v5 + 8);
  v22(v7, v4);
  v22(v10, v4);
  uint64_t v23 = 0;
  uint64_t v24 = 0;
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  uint64_t v27 = 0;
  if (v21)
  {
    uint64_t v28 = (uint64_t *)(a1 + *(int *)(type metadata accessor for HeaderView(0) + 20));
    uint64_t v29 = v28[1];
    uint64_t v61 = *v28;
    uint64_t v62 = v29;
    swift_bridgeObjectRetain();
    uint64_t v30 = Text.init<A>(_:)();
    uint64_t v24 = v31;
    uint64_t v26 = v32;
    uint64_t v25 = v33 & 1;
    uint64_t v27 = static HorizontalAlignment.leading.getter();
    uint64_t v23 = v30;
  }
  char v34 = v52 & 1;
  char v58 = v52 & 1;
  char v35 = v48 & 1;
  LOBYTE(v61) = v52 & 1;
  char v60 = 0;
  char v59 = v48 & 1;
  *(void *)a2 = v12;
  *(void *)(a2 + 8) = v14;
  *(unsigned char *)(a2 + 16) = v34;
  uint64_t v36 = v14;
  uint64_t v46 = v12;
  uint64_t v47 = v14;
  uint64_t v37 = v56;
  uint64_t v39 = v54;
  uint64_t v38 = v55;
  *(void *)(a2 + 24) = v57;
  *(void *)(a2 + 32) = v38;
  *(unsigned char *)(a2 + 40) = v50;
  uint64_t v40 = v51;
  *(void *)(a2 + 48) = 0;
  *(void *)(a2 + 56) = v40;
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = 0;
  *(unsigned char *)(a2 + 80) = 0;
  uint64_t v41 = v53;
  *(void *)(a2 + 88) = v39;
  *(void *)(a2 + 96) = v41;
  *(unsigned char *)(a2 + 104) = v35;
  uint64_t v42 = v49;
  *(void *)(a2 + 112) = v37;
  *(void *)(a2 + 120) = v42;
  *(void *)(a2 + 128) = v23;
  *(void *)(a2 + 136) = v24;
  *(void *)(a2 + 144) = v25;
  *(void *)(a2 + 152) = v26;
  *(void *)(a2 + 160) = v27;
  uint64_t v43 = v23;
  sub_100190CC4(v12, v36, v34);
  swift_bridgeObjectRetain();
  sub_100190CC4(v39, v41, v35);
  swift_bridgeObjectRetain();
  sub_100147E1C(v43, v24, v25, v26);
  sub_100147E60(v43, v24, v25, v26);
  sub_100191924(v39, v41, v35);
  swift_bridgeObjectRelease();
  sub_100191924(v46, v47, v58);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100BE0788@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10017DF08(&qword_100EB7EC8);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = &__src[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_10017DF08(&qword_100EB7ED0);
  __chkstk_darwin(v8);
  uint64_t v10 = &__src[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_10017DF08(&qword_100EB7ED8);
  __chkstk_darwin(v11);
  uint64_t v13 = &__src[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_10017DF08(&qword_100EB7EE0);
  __chkstk_darwin(v14);
  uint64_t v16 = &__src[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)uint64_t v7 = 0;
  v7[8] = 1;
  sub_100BE0AE8(v2, (uint64_t)&v7[*(int *)(v5 + 44)]);
  if (qword_100E62BF0 != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_10006DF38((uint64_t)v7, (uint64_t)v10, &qword_100EB7EC8);
  memcpy(&v10[*(int *)(v8 + 36)], __src, 0x70uLL);
  sub_100178110((uint64_t)v7, &qword_100EB7EC8);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10006DF38((uint64_t)v10, (uint64_t)v13, &qword_100EB7ED0);
  uint64_t v18 = &v13[*(int *)(v11 + 36)];
  *(void *)uint64_t v18 = KeyPath;
  v18[8] = 0;
  sub_100178110((uint64_t)v10, &qword_100EB7ED0);
  uint64_t v19 = static Color.secondary.getter();
  uint64_t v20 = swift_getKeyPath();
  sub_10006DF38((uint64_t)v13, (uint64_t)v16, &qword_100EB7ED8);
  char v21 = (uint64_t *)&v16[*(int *)(v14 + 36)];
  *char v21 = v20;
  v21[1] = v19;
  sub_100178110((uint64_t)v13, &qword_100EB7ED8);
  return sub_1001278D0((uint64_t)v16, a1, &qword_100EB7EE0);
}

uint64_t sub_100BE0AE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v93 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100EB7EE8);
  __chkstk_darwin(v3 - 8);
  uint64_t v90 = (uint64_t)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_10017DF08(&qword_100EB7EF0);
  __chkstk_darwin(v88);
  uint64_t v92 = (uint64_t)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v91 = (uint64_t)&v70 - v7;
  uint64_t v89 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v81 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  BOOL v80 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E65ED8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100EB7EF8);
  uint64_t v84 = *(void *)(v12 - 8);
  uint64_t v85 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100EB7F00);
  __chkstk_darwin(v15 - 8);
  uint64_t v87 = (uint64_t)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  BOOL v83 = (char *)&v70 - v18;
  __chkstk_darwin(v19);
  uint64_t v86 = (uint64_t)&v70 - v20;
  uint64_t v94 = static VerticalAlignment.center.getter();
  sub_100BE1310(a1, (uint64_t)v106);
  long long v82 = v106[0];
  char v21 = BYTE8(v106[1]);
  uint64_t v77 = *(void *)&v106[2];
  uint64_t v78 = *(void *)&v106[1];
  char v22 = BYTE8(v106[2]);
  char v23 = BYTE8(v106[3]);
  uint64_t v75 = *(void *)&v106[4];
  uint64_t v76 = *(void *)&v106[3];
  uint64_t v73 = *(void *)&v106[5];
  uint64_t v74 = *((void *)&v106[4] + 1);
  uint64_t v71 = *((void *)&v106[6] + 1);
  uint64_t v72 = *((void *)&v106[5] + 1);
  char v104 = 1;
  char v103 = BYTE8(v106[1]);
  char v102 = BYTE8(v106[2]);
  char v101 = BYTE8(v106[3]);
  char v100 = v106[6];
  char v24 = v106[6];
  if (qword_100E62BE8 != -1) {
    swift_once();
  }
  uint64_t v25 = qword_100EB7CA8;
  uint64_t v79 = type metadata accessor for RowView(0);
  sub_10019B2FC();
  double v26 = sub_100BDE724((uint64_t)v11);
  sub_100178110((uint64_t)v11, &qword_100E65ED8);
  char v27 = static Edge.Set.all.getter();
  char v105 = 0;
  v99[0] = v94;
  v99[1] = 0;
  LOBYTE(v99[2]) = 1;
  *(_OWORD *)&v99[3] = v82;
  v99[5] = v78;
  LOBYTE(v99[6]) = v21;
  v99[7] = v77;
  LOBYTE(v99[8]) = v22;
  v99[9] = v76;
  LOBYTE(v99[10]) = v23;
  v99[11] = v75;
  v99[12] = v74;
  v99[13] = v73;
  v99[14] = v72;
  LOBYTE(v99[15]) = v24;
  v99[16] = v71;
  LOBYTE(v99[17]) = v27;
  v99[18] = 0;
  v99[19] = v25;
  v99[20] = 0;
  *(double *)&v99[21] = v26;
  LOBYTE(v99[22]) = 0;
  uint64_t v28 = v80;
  static AccessibilityChildBehavior.combine.getter();
  uint64_t v29 = sub_10017DF08(&qword_100EB7F08);
  unint64_t v30 = sub_100BE4248();
  uint64_t v94 = (uint64_t)v14;
  *(void *)&long long v82 = v29;
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v28, v89);
  memcpy(v106, v99, 0xB1uLL);
  sub_100BE42E8((uint64_t)v106);
  sub_10017DF08(&qword_100E63D90);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_100C25ED0;
  uint64_t v32 = *(int *)(v79 + 24);
  uint64_t v89 = a1;
  char v33 = (uint64_t *)(a1 + v32);
  uint64_t v34 = *v33;
  uint64_t v35 = v33[1];
  *(void *)(v31 + 32) = *v33;
  *(void *)(v31 + 40) = v35;
  uint64_t v36 = v33[2];
  long long v37 = *(_OWORD *)(v33 + 3);
  long long v38 = *(_OWORD *)(v33 + 5);
  uint64_t v39 = v33[7];
  uint64_t v40 = v33[8];
  v99[0] = v34;
  v99[1] = v35;
  v99[2] = v36;
  *(_OWORD *)&v99[3] = v37;
  *(_OWORD *)&v99[5] = v38;
  v99[7] = v39;
  v99[8] = v40;
  *(_OWORD *)&v99[9] = *(_OWORD *)(v33 + 9);
  swift_bridgeObjectRetain();
  uint64_t v41 = sub_100BDE65C();
  uint64_t v43 = v42;
  *(void *)(v31 + 48) = v41;
  *(void *)(v31 + 56) = v42;
  swift_bridgeObjectRetain();
  sub_10012B78C();
  uint64_t v45 = v44;
  unint64_t v46 = *(void *)(v44 + 16);
  unint64_t v47 = v46 + 1;
  if (v46 >= *(void *)(v44 + 24) >> 1)
  {
    sub_10012B78C();
    uint64_t v45 = v68;
  }
  *(void *)(v45 + 16) = v47;
  uint64_t v48 = v45 + 16 * v46;
  *(void *)(v48 + 32) = v34;
  *(void *)(v48 + 40) = v35;
  if (v43)
  {
    unint64_t v49 = *(void *)(v45 + 24);
    unint64_t v50 = v46 + 2;
    swift_bridgeObjectRetain();
    if (v47 >= v49 >> 1)
    {
      sub_10012B78C();
      uint64_t v45 = v69;
    }
    uint64_t v51 = v94;
    *(void *)(v45 + 16) = v50;
    uint64_t v52 = v45 + 16 * v47;
    *(void *)(v52 + 32) = v41;
    *(void *)(v52 + 40) = v43;
  }
  else
  {
    uint64_t v51 = v94;
  }
  swift_release();
  uint64_t v97 = v45;
  sub_10017DF08(&qword_100E91BC0);
  sub_1001246C8((unint64_t *)&qword_100E73CB0, &qword_100E91BC0);
  uint64_t v53 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v55 = v54;
  swift_bridgeObjectRelease();
  uint64_t v97 = v53;
  uint64_t v98 = v55;
  uint64_t v95 = v82;
  unint64_t v96 = v30;
  swift_getOpaqueTypeConformance2();
  sub_10014A85C();
  uint64_t v56 = (uint64_t)v83;
  uint64_t v57 = v85;
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v51, v57);
  uint64_t v58 = v86;
  sub_1001278D0(v56, v86, &qword_100EB7F00);
  uint64_t v59 = v90;
  sub_100BE1598(v89, v90);
  uint64_t v60 = qword_100EB7CA8;
  LOBYTE(v57) = static Edge.Set.all.getter();
  uint64_t v61 = v92;
  sub_10006DF38(v59, v92, &qword_100EB7EE8);
  uint64_t v62 = v61 + *(int *)(v88 + 36);
  *(unsigned char *)uint64_t v62 = v57;
  *(void *)(v62 + 8) = 0;
  *(void *)(v62 + 16) = 0;
  *(void *)(v62 + 24) = 0;
  *(void *)(v62 + 32) = v60;
  *(unsigned char *)(v62 + 40) = 0;
  sub_100178110(v59, &qword_100EB7EE8);
  uint64_t v63 = v91;
  sub_1001278D0(v61, v91, &qword_100EB7EF0);
  uint64_t v64 = v87;
  sub_10006DF38(v58, v87, &qword_100EB7F00);
  sub_10006DF38(v63, v61, &qword_100EB7EF0);
  uint64_t v65 = v93;
  sub_10006DF38(v64, v93, &qword_100EB7F00);
  uint64_t v66 = sub_10017DF08(&qword_100EB7F28);
  sub_10006DF38(v61, v65 + *(int *)(v66 + 48), &qword_100EB7EF0);
  sub_100178110(v63, &qword_100EB7EF0);
  sub_100178110(v58, &qword_100EB7F00);
  sub_100178110(v61, &qword_100EB7EF0);
  return sub_100178110(v64, &qword_100EB7F00);
}

uint64_t sub_100BE1310@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = Image.init(systemName:)();
  uint64_t v23 = *(void *)(a1 + *(int *)(type metadata accessor for RowView(0) + 24) + 80);
  swift_retain();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v4 = Text.init<A>(_:)();
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  static Font.body.getter();
  uint64_t v9 = Text.font(_:)();
  uint64_t v11 = v10;
  LOBYTE(a1) = v12;
  swift_release();
  char v13 = a1 & 1;
  sub_100191924(v4, v6, v8);
  swift_bridgeObjectRelease();
  id v14 = [self labelColor];
  Color.init(_:)();
  uint64_t v15 = Text.foregroundStyle<A>(_:)();
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  char v21 = v20 & 1;
  sub_100191924(v9, v11, v13);
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)a2 = v24;
  *(void *)(a2 + 8) = v23;
  *(void *)(a2 + 16) = 0;
  *(unsigned char *)(a2 + 24) = 1;
  *(void *)(a2 + 32) = v25;
  *(unsigned char *)(a2 + 40) = v26;
  *(void *)(a2 + 48) = v27;
  *(unsigned char *)(a2 + 56) = v28;
  *(void *)(a2 + 64) = v29;
  *(void *)(a2 + 72) = v30;
  *(void *)(a2 + 80) = v15;
  *(void *)(a2 + 88) = v17;
  *(unsigned char *)(a2 + 96) = v21;
  *(void *)(a2 + 104) = v19;
  swift_retain();
  swift_retain();
  sub_100190CC4(v15, v17, v21);
  swift_bridgeObjectRetain();
  sub_100191924(v15, v17, v21);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100BE1598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v78 = a2;
  uint64_t v3 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v72 = *(void *)(v3 - 8);
  uint64_t v73 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = &v70[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v77 = sub_10017DF08(&qword_100EB7F30);
  uint64_t v75 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  char v7 = &v70[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  uint64_t v74 = &v70[-v9];
  uint64_t v76 = sub_10017DF08(&qword_100EB7F38);
  __chkstk_darwin(v76);
  uint64_t v11 = &v70[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for DynamicTypeSize();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = &v70[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  uint64_t v18 = &v70[-v17];
  sub_1001CAA20();
  (*(void (**)(unsigned char *, void, uint64_t))(v13 + 104))(v15, enum case for DynamicTypeSize.accessibility1(_:), v12);
  char v19 = static DynamicTypeSize.< infix(_:_:)();
  char v20 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
  v20(v15, v12);
  v20(v18, v12);
  if (v19)
  {
    uint64_t v72 = static VerticalAlignment.center.getter();
    uint64_t v21 = type metadata accessor for RowView(0);
    char v22 = (void *)(a1 + *(int *)(v21 + 24));
    uint64_t v23 = v22[3];
    *(void *)&long long v80 = v22[2];
    *((void *)&v80 + 1) = v23;
    sub_10014A85C();
    swift_bridgeObjectRetain();
    uint64_t v24 = Text.init<A>(_:)();
    uint64_t v74 = v25;
    uint64_t v75 = v26;
    char v28 = v27 & 1;
    uint64_t v29 = v24;
    uint64_t v73 = v24;
    uint64_t v30 = (uint64_t)v25;
    int v71 = v27 & 1;
    sub_100190CC4(v24, (uint64_t)v25, v27 & 1);
    swift_bridgeObjectRetain();
    sub_100191924(v29, v30, v28);
    swift_bridgeObjectRelease();
    uint64_t v31 = v22[5];
    *(void *)&long long v80 = v22[4];
    *((void *)&v80 + 1) = v31;
    swift_bridgeObjectRetain();
    uint64_t v32 = Text.init<A>(_:)();
    uint64_t v34 = v33;
    LOBYTE(v23) = v35 & 1;
    sub_10017DF08(&qword_100E66F98);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_100C25ED0;
    uint64_t v37 = v22[9];
    *(void *)(v36 + 32) = v22[8];
    *(void *)(v36 + 40) = v37;
    long long v38 = (void *)(a1 + *(int *)(v21 + 28));
    uint64_t v39 = v38[1];
    *(void *)(v36 + 48) = *v38;
    *(void *)(v36 + 56) = v39;
    *(void *)&long long v80 = v36;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10017DF08(&qword_100E91BC0);
    sub_1001246C8((unint64_t *)&qword_100E73CB0, &qword_100E91BC0);
    uint64_t v40 = BidirectionalCollection<>.joined(separator:)();
    uint64_t v42 = v41;
    swift_bridgeObjectRelease();
    *(void *)&long long v80 = v40;
    *((void *)&v80 + 1) = v42;
    uint64_t v43 = Text.accessibilityLabel<A>(_:)();
    uint64_t v45 = v44;
    uint64_t v47 = v46;
    LOBYTE(v36) = v48 & 1;
    sub_100191924(v32, v34, v23);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v49 = v71;
    char v79 = v71;
    uint64_t v51 = v73;
    unint64_t v50 = v74;
    sub_100190CC4(v73, (uint64_t)v74, v71);
    uint64_t v52 = v75;
    swift_bridgeObjectRetain();
    sub_100190CC4(v51, (uint64_t)v50, v49);
    swift_bridgeObjectRetain();
    sub_100190CC4(v43, v45, v36);
    swift_bridgeObjectRetain();
    sub_100190CC4(v43, v45, v36);
    swift_bridgeObjectRetain();
    sub_100191924(v43, v45, v36);
    swift_bridgeObjectRelease();
    sub_100191924(v51, (uint64_t)v50, v79);
    swift_bridgeObjectRelease();
    *(void *)uint64_t v11 = v72;
    *((void *)v11 + 1) = 0;
    v11[16] = 1;
    *((void *)v11 + 3) = v51;
    *((void *)v11 + 4) = v50;
    v11[40] = v49;
    *((void *)v11 + 6) = v52;
    *((void *)v11 + 7) = 0;
    v11[64] = 1;
    *((void *)v11 + 9) = v43;
    *((void *)v11 + 10) = v45;
    v11[88] = v36;
    *((void *)v11 + 12) = v47;
    swift_storeEnumTagMultiPayload();
    sub_10017DF08(&qword_100EB7F40);
    sub_1001246C8(&qword_100EB7F48, &qword_100EB7F40);
    uint64_t v53 = sub_10018C6DC(&qword_100E6B7C0);
    uint64_t v54 = sub_1001246C8(&qword_100E6B7B8, &qword_100E6B7C0);
    *(void *)&long long v80 = v53;
    *((void *)&v80 + 1) = v54;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    sub_100191924(v43, v45, v36);
    swift_bridgeObjectRelease();
    sub_100191924(v73, (uint64_t)v74, v49);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v56 = static HorizontalAlignment.leading.getter();
    sub_100BE1DC4(a1, (uint64_t)&v80);
    char v57 = v81;
    uint64_t v58 = *(void *)v82;
    char v59 = v83;
    uint64_t v60 = v84;
    long long v61 = v80;
    long long v62 = *(_OWORD *)&v82[8];
    long long v80 = (unint64_t)v56;
    char v81 = 1;
    *(_OWORD *)long long v82 = v61;
    v82[16] = v57;
    uint64_t v83 = v58;
    long long v84 = v62;
    char v85 = v59;
    uint64_t v86 = v60;
    static AccessibilityChildBehavior.combine.getter();
    uint64_t v63 = sub_10017DF08(&qword_100E6B7C0);
    uint64_t v64 = sub_1001246C8(&qword_100E6B7B8, &qword_100E6B7C0);
    View.accessibilityElement(children:)();
    (*(void (**)(unsigned char *, uint64_t))(v72 + 8))(v5, v73);
    long long v65 = v84;
    char v66 = v85;
    sub_100191924(*(uint64_t *)v82, *(uint64_t *)&v82[8], v82[16]);
    swift_bridgeObjectRelease();
    sub_100191924(v65, *((uint64_t *)&v65 + 1), v66);
    swift_bridgeObjectRelease();
    uint64_t v67 = v74;
    uint64_t v68 = v75;
    uint64_t v69 = v77;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v75 + 32))(v74, v7, v77);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v68 + 16))(v11, v67, v69);
    swift_storeEnumTagMultiPayload();
    sub_10017DF08(&qword_100EB7F40);
    sub_1001246C8(&qword_100EB7F48, &qword_100EB7F40);
    *(void *)&long long v80 = v63;
    *((void *)&v80 + 1) = v64;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v68 + 8))(v67, v69);
  }
}

uint64_t sub_100BE1DC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for RowView(0);
  uint64_t v5 = a1 + *(int *)(v4 + 24);
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v6 = Text.init<A>(_:)();
  uint64_t v27 = v7;
  uint64_t v28 = v6;
  uint64_t v29 = v8;
  char v26 = v9 & 1;
  swift_bridgeObjectRetain();
  uint64_t v10 = Text.init<A>(_:)();
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  sub_10017DF08(&qword_100E66F98);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_100C25ED0;
  uint64_t v16 = *(void *)(v5 + 72);
  *(void *)(v15 + 32) = *(void *)(v5 + 64);
  *(void *)(v15 + 40) = v16;
  uint64_t v17 = (void *)(a1 + *(int *)(v4 + 28));
  uint64_t v18 = v17[1];
  *(void *)(v15 + 48) = *v17;
  *(void *)(v15 + 56) = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100E91BC0);
  sub_1001246C8((unint64_t *)&qword_100E73CB0, &qword_100E91BC0);
  BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  uint64_t v19 = Text.accessibilityLabel<A>(_:)();
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  LOBYTE(v5) = v24 & 1;
  sub_100191924(v10, v12, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)a2 = v28;
  *(void *)(a2 + 8) = v27;
  *(unsigned char *)(a2 + 16) = v26;
  *(void *)(a2 + 24) = v29;
  *(void *)(a2 + 32) = v19;
  *(void *)(a2 + 40) = v21;
  *(unsigned char *)(a2 + 48) = v5;
  *(void *)(a2 + 56) = v23;
  sub_100190CC4(v28, v27, v26);
  swift_bridgeObjectRetain();
  sub_100190CC4(v19, v21, v5);
  swift_bridgeObjectRetain();
  sub_100191924(v19, v21, v5);
  swift_bridgeObjectRelease();
  sub_100191924(v28, v27, v26);
  return swift_bridgeObjectRelease();
}

uint64_t static WindCategoryTableViewModel.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  BOOL v8 = a1 == a4 && a2 == a5;
  if (!v8 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }

  return sub_100BD8F98(a3, a6);
}

uint64_t sub_100BE2094()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100BE20B0(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (!v4 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  BOOL v5 = a1[2] == a2[2] && a1[3] == a2[3];
  if (!v5 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  BOOL v6 = a1[4] == a2[4] && a1[5] == a2[5];
  if (!v6 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  BOOL v7 = a1[6] == a2[6] && a1[7] == a2[7];
  if (!v7 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  BOOL v8 = a1[8] == a2[8] && a1[9] == a2[9];
  if (!v8 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }

  return static Color.== infix(_:_:)();
}

uint64_t sub_100BE21A0(uint64_t *a1, uint64_t *a2)
{
  return static WindCategoryTableViewModel.__derived_struct_equals(_:_:)(*a1, a1[1], a1[2], *a2, a2[1], a2[2]);
}

ValueMetadata *type metadata accessor for WindCategoryTableViewModel()
{
  return &type metadata for WindCategoryTableViewModel;
}

uint64_t *initializeBufferWithCopyOfBuffer for WindCategoryTableView(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_10017DF08(&qword_100E62D60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    void v10[2] = v11[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for WindCategoryTableView(uint64_t a1)
{
  sub_10017DF08(&qword_100E62D60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for WindCategoryTableView(void *a1, void *a2, uint64_t a3)
{
  sub_10017DF08(&qword_100E62D60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  _OWORD v8[2] = v9[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for WindCategoryTableView(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100178110((uint64_t)a1, &qword_100E62D60);
    sub_10017DF08(&qword_100E62D60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (char *)a2 + v7;
  *uint64_t v8 = *(void *)((char *)a2 + v7);
  v8[1] = *(void *)((char *)a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  _OWORD v8[2] = *((void *)v9 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for WindCategoryTableView(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E62D60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
  *((void *)v9 + 2) = *((void *)v10 + 2);
  return a1;
}

char *assignWithTake for WindCategoryTableView(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100178110((uint64_t)a1, &qword_100E62D60);
    uint64_t v6 = sub_10017DF08(&qword_100E62D60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *((void *)v10 + 1);
  *(void *)uint64_t v9 = *(void *)v10;
  *((void *)v9 + 1) = v11;
  swift_bridgeObjectRelease();
  *((void *)v9 + 2) = *((void *)v10 + 2);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WindCategoryTableView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BE27B8);
}

uint64_t storeEnumTagSinglePayload for WindCategoryTableView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BE27D0);
}

uint64_t type metadata accessor for WindCategoryTableView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB7D38);
}

void sub_100BE27F4()
{
}

uint64_t sub_100BE2800()
{
  return sub_1001246C8(&qword_100EB7D70, &qword_100EB7D78);
}

uint64_t *sub_100BE283C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_10017DF08(&qword_100E62D60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
      {
        uint64_t v13 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
      }
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = a3[6];
    uint64_t v15 = a3[7];
    uint64_t v16 = (uint64_t *)((char *)a1 + v14);
    uint64_t v17 = (uint64_t *)((char *)a2 + v14);
    uint64_t v18 = v17[1];
    void *v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = v17[3];
    v16[2] = v17[2];
    void v16[3] = v19;
    uint64_t v20 = v17[5];
    v16[4] = v17[4];
    v16[5] = v20;
    uint64_t v21 = v17[7];
    v16[6] = v17[6];
    v16[7] = v21;
    uint64_t v22 = v17[9];
    v16[8] = v17[8];
    v16[9] = v22;
    v16[10] = v17[10];
    uint64_t v23 = (uint64_t *)((char *)a1 + v15);
    char v24 = (uint64_t *)((char *)a2 + v15);
    uint64_t v25 = v24[1];
    *uint64_t v23 = *v24;
    v23[1] = v25;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100BE2AD0(uint64_t a1, uint64_t a2)
{
  sub_10017DF08(&qword_100E62D60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(v5, 1, v6)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
    }
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_bridgeObjectRelease();
}

void *sub_100BE2C38(void *a1, void *a2, int *a3)
{
  sub_10017DF08(&qword_100E62D60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
    }
  }
  else
  {
    *uint64_t v8 = *v9;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v12);
  uint64_t v15 = (void *)((char *)a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = v15[3];
  long long v14[2] = v15[2];
  v14[3] = v17;
  uint64_t v18 = v15[5];
  v14[4] = v15[4];
  v14[5] = v18;
  uint64_t v19 = v15[7];
  v14[6] = v15[6];
  v14[7] = v19;
  uint64_t v20 = v15[9];
  v14[8] = v15[8];
  v14[9] = v20;
  v14[10] = v15[10];
  uint64_t v21 = (void *)((char *)a1 + v13);
  uint64_t v22 = (void *)((char *)a2 + v13);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100BE2E7C(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100178110((uint64_t)a1, &qword_100E62D60);
    sub_10017DF08(&qword_100E62D60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_100178110((uint64_t)a1 + v7, (uint64_t *)&unk_100EAA560);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
      {
        uint64_t v11 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
      }
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  *uint64_t v13 = *(void *)((char *)a2 + v12);
  v13[1] = *(void *)((char *)a2 + v12 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13[2] = v14[2];
  void v13[3] = v14[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13[4] = v14[4];
  void v13[5] = v14[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13[6] = v14[6];
  v13[7] = v14[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13[8] = v14[8];
  v13[9] = v14[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13[10] = v14[10];
  swift_retain();
  swift_release();
  uint64_t v15 = a3[7];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  void *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_100BE3158(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E62D60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v12))
    {
      uint64_t v13 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  memcpy(&a1[a3[6]], &a2[a3[6]], 0x58uLL);
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  return a1;
}

char *sub_100BE334C(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100178110((uint64_t)a1, &qword_100E62D60);
    uint64_t v6 = sub_10017DF08(&qword_100E62D60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    sub_100178110((uint64_t)&a1[v8], (uint64_t *)&unk_100EAA560);
    uint64_t v11 = sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v12))
      {
        uint64_t v13 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v12);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = *(void *)&a2[v14 + 8];
  *(void *)uint64_t v15 = *(void *)&a2[v14];
  *((void *)v15 + 1) = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *((void *)v16 + 3);
  *((void *)v15 + 2) = *((void *)v16 + 2);
  *((void *)v15 + 3) = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *((void *)v16 + 5);
  *((void *)v15 + 4) = *((void *)v16 + 4);
  *((void *)v15 + 5) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *((void *)v16 + 7);
  *((void *)v15 + 6) = *((void *)v16 + 6);
  *((void *)v15 + 7) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *((void *)v16 + 9);
  *((void *)v15 + 8) = *((void *)v16 + 8);
  *((void *)v15 + 9) = v21;
  swift_bridgeObjectRelease();
  *((void *)v15 + 10) = *((void *)v16 + 10);
  swift_release();
  uint64_t v22 = a3[7];
  uint64_t v23 = &a1[v22];
  char v24 = &a2[v22];
  uint64_t v26 = *(void *)v24;
  uint64_t v25 = *((void *)v24 + 1);
  *(void *)uint64_t v23 = v26;
  *((void *)v23 + 1) = v25;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100BE35D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BE35E4);
}

uint64_t sub_100BE35E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10017DF08(&qword_100E79530);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    sub_10017DF08((uint64_t *)&unk_100EAA540);
    sub_100162F30();
    if (*(_DWORD *)(v11 + 84) != a2) {
      return sub_100185838(a1 + *(int *)(a3 + 24));
    }
    uint64_t v8 = v10;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_100BE3694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BE36A8);
}

void sub_100BE36A8()
{
  sub_100150288();
  sub_10017DF08(&qword_100E79530);
  sub_100162F30();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v1;
  }
  else
  {
    sub_10017DF08((uint64_t *)&unk_100EAA540);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) != v3)
    {
      *(void *)(v1 + *(int *)(v2 + 24) + 8) = (v0 - 1);
      return;
    }
    uint64_t v6 = v8;
    uint64_t v7 = v1 + *(int *)(v2 + 20);
  }

  _s7Weather24LocationCompositionStateOwst_0(v7, v0, v0, v6);
}

uint64_t type metadata accessor for RowView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB7DD8);
}

void sub_100BE3778()
{
  sub_10048CFC0();
  if (v0 <= 0x3F)
  {
    sub_1002308A0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t destroy for WindCategoryTableViewModel.Row()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_release();
}

void *initializeWithCopy for WindCategoryTableViewModel.Row(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for WindCategoryTableViewModel.Row(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for WindCategoryTableViewModel.Row(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for WindCategoryTableViewModel.Row()
{
  return &type metadata for WindCategoryTableViewModel.Row;
}

uint64_t *sub_100BE3AC0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_10017DF08(&qword_100E62D60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (uint64_t *)((char *)a1 + v9);
    uint64_t v11 = (uint64_t *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100BE3BE8(uint64_t a1)
{
  sub_10017DF08(&qword_100E62D60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }

  return swift_bridgeObjectRelease();
}

void *sub_100BE3C8C(void *a1, void *a2, uint64_t a3)
{
  sub_10017DF08(&qword_100E62D60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100BE3D64(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100178110((uint64_t)a1, &qword_100E62D60);
    sub_10017DF08(&qword_100E62D60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_100BE3E68(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E62D60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_100BE3F3C(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100178110((uint64_t)a1, &qword_100E62D60);
    uint64_t v6 = sub_10017DF08(&qword_100E62D60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v12 = *(void *)v10;
  uint64_t v11 = *((void *)v10 + 1);
  *(void *)uint64_t v9 = v12;
  *((void *)v9 + 1) = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100BE4038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BE404C);
}

uint64_t sub_100BE4050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BE4064);
}

uint64_t type metadata accessor for HeaderView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB7E70);
}

void sub_100BE4088()
{
}

void sub_100BE4094()
{
  sub_10048CFC0();
  if (v1 <= 0x3F)
  {
    sub_1001627C0(v0);
    swift_initStructMetadata();
  }
}

uint64_t sub_100BE4104()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100BE4120()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100BE4140@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100BE416C()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_100BE4198@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100BE41C4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.multilineTextAlignment.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100BE41F0()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_100BE4218()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

unint64_t sub_100BE4248()
{
  unint64_t result = qword_100EB7F10;
  if (!qword_100EB7F10)
  {
    sub_10018C6DC(&qword_100EB7F08);
    sub_1001246C8(&qword_100EB7F18, &qword_100EB7F20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB7F10);
  }
  return result;
}

uint64_t sub_100BE42E8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 104);
  uint64_t v3 = *(void *)(a1 + 112);
  char v4 = *(unsigned char *)(a1 + 120);
  swift_release();
  swift_release();
  sub_100191924(v2, v3, v4);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100BE4350@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100BE4380()
{
  type metadata accessor for WindCategoryTableView(0);
  sub_10017DF08(&qword_100E62D60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for DynamicTypeSize();
    sub_100162E4C();
    sub_100162F0C();
    v0();
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100BE44A0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for WindCategoryTableView(0);
  sub_1001627C0(v5);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_100BDF9EC(a1, v7, a2);
}

unint64_t sub_100BE4500()
{
  unint64_t result = qword_100EB7F90;
  if (!qword_100EB7F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB7F90);
  }
  return result;
}

uint64_t sub_100BE455C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100BE45D0(uint64_t a1)
{
  return a1;
}

uint64_t *sub_100BE4644(uint64_t *a1)
{
  uint64_t v2 = a1[11];
  uint64_t v3 = a1[12];
  sub_100BE4704(*a1, a1[1]);
  sub_100BE4704(v2, v3);
  return a1;
}

uint64_t sub_100BE4704(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

unint64_t sub_100BE4788()
{
  unint64_t result = qword_100EB7FB8;
  if (!qword_100EB7FB8)
  {
    sub_10018C6DC(&qword_100EB7EE0);
    sub_100BE4828();
    sub_1001246C8((unint64_t *)&qword_100E64F80, (uint64_t *)&unk_100EAA770);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB7FB8);
  }
  return result;
}

unint64_t sub_100BE4828()
{
  unint64_t result = qword_100EB7FC0;
  if (!qword_100EB7FC0)
  {
    sub_10018C6DC(&qword_100EB7ED8);
    sub_100BE48C8();
    sub_1001246C8(&qword_100E77CF0, &qword_100E77CF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB7FC0);
  }
  return result;
}

unint64_t sub_100BE48C8()
{
  unint64_t result = qword_100EB7FC8;
  if (!qword_100EB7FC8)
  {
    sub_10018C6DC(&qword_100EB7ED0);
    sub_1001246C8(&qword_100EB7FD0, &qword_100EB7EC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB7FC8);
  }
  return result;
}

uint64_t sub_100BE4968()
{
  return sub_100BE49AC(&qword_100EB7FD8, &qword_100EB7FE0, (void (*)(void))sub_100BE4A28);
}

uint64_t sub_100BE49AC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100BE4A28()
{
  return sub_100BE49AC(&qword_100EB7FE8, &qword_100EB7FF0, (void (*)(void))sub_100BE4A58);
}

unint64_t sub_100BE4A58()
{
  unint64_t result = qword_100EB7FF8;
  if (!qword_100EB7FF8)
  {
    sub_10018C6DC(&qword_100EB8000);
    sub_100BE4AF8();
    sub_1001246C8(&qword_100E76A08, &qword_100E76A10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB7FF8);
  }
  return result;
}

unint64_t sub_100BE4AF8()
{
  unint64_t result = qword_100EB8008;
  if (!qword_100EB8008)
  {
    sub_10018C6DC(&qword_100EB8010);
    sub_1001246C8(&qword_100EB8018, &qword_100EB8020);
    sub_1001246C8(&qword_100E65218, &qword_100E65220);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB8008);
  }
  return result;
}

ValueMetadata *type metadata accessor for DailyForecastComponentPreprocessedDataModel()
{
  return &type metadata for DailyForecastComponentPreprocessedDataModel;
}

uint64_t sub_100BE4BE8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x6365726F46796164 && a2 == 0xEC00000073747361)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_100BE4C88()
{
  return 0x6365726F46796164;
}

uint64_t sub_100BE4CA8(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100EB8038);
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(a1, a1[3]);
  sub_100BE508C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v11[1] = a2;
  sub_10017DF08(&qword_100E96DA8);
  sub_100BE50D8(&qword_100E96DD0, &qword_100E96DD8);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v4);
}

void *sub_100BE4E08(void *a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100EB8028);
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1001B1E64(a1, a1[3]);
  sub_100BE508C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_10017DF08(&qword_100E96DA8);
    sub_100BE50D8(&qword_100E96DB0, &qword_100E96DB8);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
    uint64_t v9 = (void *)v11[1];
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  return v9;
}

uint64_t sub_100BE4F94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100BE4BE8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_100BE4FC0(uint64_t a1)
{
  unint64_t v2 = sub_100BE508C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100BE4FFC(uint64_t a1)
{
  unint64_t v2 = sub_100BE508C();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_100BE5038@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_100BE4E08(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_100BE5064(void *a1)
{
  return sub_100BE4CA8(a1, *v1);
}

uint64_t sub_100BE5080(void *a1, void *a2)
{
  return sub_100BE4BD4(*a1, *a2);
}

unint64_t sub_100BE508C()
{
  unint64_t result = qword_100EB8030;
  if (!qword_100EB8030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB8030);
  }
  return result;
}

uint64_t sub_100BE50D8(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(&qword_100E96DA8);
    sub_100BE5158(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100BE5158(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DailyForecastComponentPreprocessedDataModel.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100BE5238);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for DailyForecastComponentPreprocessedDataModel.CodingKeys()
{
  return &type metadata for DailyForecastComponentPreprocessedDataModel.CodingKeys;
}

unint64_t sub_100BE5274()
{
  unint64_t result = qword_100EB8040;
  if (!qword_100EB8040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB8040);
  }
  return result;
}

unint64_t sub_100BE52C4()
{
  unint64_t result = qword_100EB8048;
  if (!qword_100EB8048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB8048);
  }
  return result;
}

unint64_t sub_100BE5314()
{
  unint64_t result = qword_100EB8050;
  if (!qword_100EB8050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB8050);
  }
  return result;
}

void *sub_100BE5360(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10021518C(0, v1, 0);
    uint64_t v3 = type metadata accessor for LocationComponentSegmentedControlLayout.MeasuredOption(0);
    uint64_t v4 = a1
       + ((*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80));
    uint64_t v5 = *(void *)(*(void *)(v3 - 8) + 72);
    do
    {
      long long v6 = *(_OWORD *)(v4 + *(int *)(v3 + 20));
      unint64_t v8 = _swiftEmptyArrayStorage[2];
      unint64_t v7 = _swiftEmptyArrayStorage[3];
      if (v8 >= v7 >> 1)
      {
        long long v10 = *(_OWORD *)(v4 + *(int *)(v3 + 20));
        sub_10021518C(v7 > 1, v8 + 1, 1);
        long long v6 = v10;
      }
      _swiftEmptyArrayStorage[2] = v8 + 1;
      *(_OWORD *)&_swiftEmptyArrayStorage[2 * v8 + 4] = v6;
      v4 += v5;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

void *sub_100BE5498(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  unint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_1007F3554(0, v2, 0);
    unint64_t result = _swiftEmptyArrayStorage;
    uint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4;
      unint64_t v8 = result;
      unint64_t v7 = result[2];
      unint64_t v6 = result[3];
      if (v7 >= v6 >> 1)
      {
        sub_1007F3554((char *)(v6 > 1), v7 + 1, 1);
        unint64_t result = v8;
      }
      result[2] = v7 + 1;
      result[v7 + 4] = v5;
      v4 += 2;
      --v2;
    }
    while (v2);
  }
  return result;
}

void *sub_100BE555C(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  unint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_1007F3554(0, v2, 0);
    unint64_t result = _swiftEmptyArrayStorage;
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *v4;
      unint64_t v8 = result;
      unint64_t v7 = result[2];
      unint64_t v6 = result[3];
      if (v7 >= v6 >> 1)
      {
        sub_1007F3554((char *)(v6 > 1), v7 + 1, 1);
        unint64_t result = v8;
      }
      result[2] = v7 + 1;
      result[v7 + 4] = v5;
      v4 += 2;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_100BE5654@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v43 = a6;
  uint64_t v44 = a7;
  uint64_t v12 = sub_10017DF08(&qword_100EB8270);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100EB8278);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v42 - v20;
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v42 - v22;
  *(void *)uint64_t v14 = static VerticalAlignment.center.getter();
  *((void *)v14 + 1) = 0;
  v14[16] = 1;
  uint64_t v24 = sub_10017DF08(&qword_100EB8280);
  sub_100BE595C(a1, a2, a3, a4 & 1, a5, (uint64_t)&v14[*(int *)(v24 + 44)]);
  char v25 = static Edge.Set.horizontal.getter();
  uint64_t v26 = v43 + *(int *)(type metadata accessor for LocationComponentHeaderView(0) + 20);
  uint64_t v27 = *(void *)v26;
  char v28 = *(unsigned char *)(v26 + 8);
  sub_100195B7C(*(void *)v26, v28);
  sub_100149AE8();
  LOBYTE(a3) = v29;
  sub_10018F6D8(v27, v28);
  if (a3)
  {
    if (qword_100E62240 == -1) {
      goto LABEL_5;
    }
    goto LABEL_6;
  }
  if (qword_100E62248 != -1) {
LABEL_6:
  }
    swift_once();
LABEL_5:
  EdgeInsets.init(_all:)();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  sub_10006DF38((uint64_t)v14, (uint64_t)v21, &qword_100EB8270);
  long long v38 = &v21[*(int *)(v15 + 36)];
  *long long v38 = v25;
  *((void *)v38 + 1) = v31;
  *((void *)v38 + 2) = v33;
  *((void *)v38 + 3) = v35;
  *((void *)v38 + 4) = v37;
  v38[40] = 0;
  sub_10017DF4C((uint64_t)v14, &qword_100EB8270);
  sub_10024D364((uint64_t)v21, (uint64_t)v23, &qword_100EB8278);
  sub_10006DF38((uint64_t)v23, (uint64_t)v18, &qword_100EB8278);
  uint64_t v39 = v44;
  sub_10006DF38((uint64_t)v18, v44, &qword_100EB8278);
  uint64_t v40 = v39 + *(int *)(sub_10017DF08(&qword_100EB8288) + 48);
  *(void *)uint64_t v40 = 0;
  *(unsigned char *)(v40 + 8) = 0;
  sub_10017DF4C((uint64_t)v23, &qword_100EB8278);
  return sub_10017DF4C((uint64_t)v18, &qword_100EB8278);
}

uint64_t sub_100BE595C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v45 = a3;
  uint64_t v46 = a5;
  int v43 = a4;
  uint64_t v44 = a2;
  uint64_t v51 = a6;
  uint64_t v49 = sub_10017DF08(&qword_100EB8290);
  __chkstk_darwin(v49);
  unint64_t v8 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_10017DF08(&qword_100EAADC0);
  __chkstk_darwin(v42);
  long long v10 = (uint64_t *)((char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for Image.Scale();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100E79E68);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_10017DF08(&qword_100EB8298);
  uint64_t v18 = __chkstk_darwin(v48);
  uint64_t v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v42 - v21;
  uint64_t v23 = sub_10017DF08(&qword_100EB82A0);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v50 = (uint64_t)&v42 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v47 = (char *)&v42 - v26;
  sub_10024D364(a1 + 16, (uint64_t)v52, &qword_100E65F18);
  sub_10024D364((uint64_t)v52, (uint64_t)v53, &qword_100E65F18);
  if (v54)
  {
    (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for Image.Scale.small(_:), v11);
    uint64_t KeyPath = swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))((char *)v10 + *(int *)(v42 + 28), v14, v11);
    *long long v10 = KeyPath;
    sub_10006DF38((uint64_t)v10, (uint64_t)&v17[*(int *)(v15 + 36)], &qword_100EAADC0);
    uint64_t v28 = v44;
    uint64_t v29 = v45;
    *(void *)uint64_t v17 = v44;
    *((void *)v17 + 1) = v29;
    char v30 = v43 & 1;
    v17[16] = v43 & 1;
    *((void *)v17 + 3) = v46;
    sub_100190CC4(v28, v29, v30);
    swift_bridgeObjectRetain();
    sub_10017DF4C((uint64_t)v10, &qword_100EAADC0);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    uint64_t v31 = swift_getKeyPath();
    sub_10006DF38((uint64_t)v17, (uint64_t)v20, &qword_100E79E68);
    uint64_t v32 = (uint64_t *)&v20[*(int *)(v48 + 36)];
    *uint64_t v32 = v31;
    v32[1] = 0x3FE6666666666666;
    sub_10017DF4C((uint64_t)v17, &qword_100E79E68);
    sub_10024D364((uint64_t)v20, (uint64_t)v22, &qword_100EB8298);
    sub_10006DF38((uint64_t)v22, (uint64_t)v8, &qword_100EB8298);
    swift_storeEnumTagMultiPayload();
    sub_10017DF08(&qword_100E7BB28);
    sub_100BEBB50((uint64_t)&unk_100EB82A8);
    sub_1004A6660((uint64_t)&qword_100E7BB20);
    uint64_t v33 = (uint64_t)v47;
    _ConditionalContent<>.init(storage:)();
    sub_10017DF4C((uint64_t)v22, &qword_100EB8298);
  }
  else
  {
    uint64_t v34 = swift_getKeyPath();
    uint64_t v36 = v44;
    uint64_t v35 = v45;
    *(void *)unint64_t v8 = v44;
    *((void *)v8 + 1) = v35;
    char v37 = v43 & 1;
    v8[16] = v43 & 1;
    *((void *)v8 + 3) = v46;
    *((void *)v8 + 4) = v34;
    *((void *)v8 + 5) = 0x3FE6666666666666;
    swift_storeEnumTagMultiPayload();
    sub_100190CC4(v36, v35, v37);
    swift_bridgeObjectRetain();
    sub_10017DF08(&qword_100E7BB28);
    sub_100BEBB50((uint64_t)&unk_100EB82A8);
    sub_1004A6660((uint64_t)&qword_100E7BB20);
    uint64_t v33 = (uint64_t)v47;
    _ConditionalContent<>.init(storage:)();
  }
  uint64_t v38 = v50;
  sub_10006DF38(v33, v50, &qword_100EB82A0);
  uint64_t v39 = v51;
  sub_10006DF38(v38, v51, &qword_100EB82A0);
  uint64_t v40 = v39 + *(int *)(sub_10017DF08(&qword_100EB82B0) + 48);
  *(void *)uint64_t v40 = 0;
  *(unsigned char *)(v40 + 8) = 0;
  sub_10017DF4C(v33, &qword_100EB82A0);
  return sub_10017DF4C(v38, &qword_100EB82A0);
}

uint64_t sub_100BE5F3C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v12 = type metadata accessor for Divider();
  uint64_t v75 = *(void *)(v12 - 8);
  uint64_t v76 = v12;
  __chkstk_darwin(v12);
  uint64_t v74 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_10017DF08(&qword_100E66250);
  uint64_t v14 = __chkstk_darwin(v73);
  uint64_t v80 = (uint64_t)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v59 - v17;
  __chkstk_darwin(v16);
  uint64_t v79 = (uint64_t)&v59 - v19;
  if (qword_100E62250 != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v60 = v95;
  int v72 = v96;
  uint64_t v71 = v97;
  int v70 = v98;
  uint64_t v68 = v100;
  uint64_t v69 = v99;
  uint64_t v78 = static VerticalAlignment.center.getter();
  sub_100BE661C(a1, a2, a3 & 1, a4, (uint64_t)v107);
  int v77 = static Edge.Set.horizontal.getter();
  uint64_t v20 = a5 + *(int *)(type metadata accessor for LocationComponentHeaderView(0) + 20);
  uint64_t v21 = *(void *)v20;
  char v22 = *(unsigned char *)(v20 + 8);
  sub_100195B7C(*(void *)v20, v22);
  sub_100149AE8();
  char v24 = v23;
  sub_10018F6D8(v21, v22);
  if ((v24 & 1) == 0)
  {
    uint64_t v25 = v74;
    if (qword_100E62248 == -1) {
      goto LABEL_7;
    }
    goto LABEL_16;
  }
  uint64_t v25 = v74;
  if (qword_100E62240 != -1) {
LABEL_16:
  }
    swift_once();
LABEL_7:
  v91[328] = 1;
  memcpy(&v91[7], v107, 0x140uLL);
  LODWORD(v74) = 1;
  memcpy(v94, v91, sizeof(v94));
  EdgeInsets.init(_all:)();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  unsigned __int8 v92 = 0;
  if (qword_100E62258 != -1) {
    swift_once();
  }
  uint64_t v67 = (unsigned char *)(a6 + 464);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v66 = v101;
  int v65 = v102;
  uint64_t v64 = v103;
  int v63 = v104;
  uint64_t v61 = v106;
  uint64_t v62 = v105;
  Divider.init()();
  char v34 = static Edge.Set.horizontal.getter();
  sub_100195B7C(v21, v22);
  sub_100149AE8();
  char v36 = v35;
  sub_10018F6D8(v21, v22);
  if (v36)
  {
    if (qword_100E62240 != -1) {
      swift_once();
    }
  }
  else if (qword_100E62248 != -1)
  {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v46 = v75;
  uint64_t v45 = v76;
  (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v18, v25, v76);
  uint64_t v47 = &v18[*(int *)(v73 + 36)];
  *uint64_t v47 = v34;
  *((void *)v47 + 1) = v38;
  *((void *)v47 + 2) = v40;
  *((void *)v47 + 3) = v42;
  *((void *)v47 + 4) = v44;
  v47[40] = 0;
  (*(void (**)(char *, uint64_t))(v46 + 8))(v25, v45);
  uint64_t v48 = v79;
  sub_10024D364((uint64_t)v18, v79, &qword_100E66250);
  unsigned __int8 v49 = v92;
  LODWORD(v76) = v92;
  uint64_t v50 = v80;
  sub_10006DF38(v48, v80, &qword_100E66250);
  *(void *)a6 = 0;
  *(unsigned char *)(a6 + 8) = 1;
  *(void *)(a6 + 16) = v60;
  *(unsigned char *)(a6 + 24) = v72;
  *(void *)(a6 + 32) = v71;
  *(unsigned char *)(a6 + 40) = v70;
  uint64_t v51 = v68;
  *(void *)(a6 + 48) = v69;
  *(void *)(a6 + 56) = v51;
  uint64_t v52 = v78;
  v81[0] = v78;
  v81[1] = 0;
  char v53 = (char)v74;
  LOBYTE(v81[2]) = (_BYTE)v74;
  memcpy((char *)&v81[2] + 1, v94, 0x147uLL);
  LOBYTE(v46) = v77;
  LOBYTE(v81[43]) = v77;
  *(_DWORD *)((char *)&v81[43] + 1) = *(_DWORD *)v93;
  HIDWORD(v81[43]) = *(_DWORD *)&v93[3];
  v81[44] = v27;
  v81[45] = v29;
  v81[46] = v31;
  v81[47] = v33;
  LOBYTE(v81[48]) = v49;
  memcpy((void *)(a6 + 64), v81, 0x181uLL);
  *(void *)(a6 + 456) = 0;
  uint64_t v54 = v67;
  unsigned char *v67 = 1;
  *(void *)(a6 + 472) = v66;
  v54[16] = v65;
  *(void *)(a6 + 488) = v64;
  v54[32] = v63;
  uint64_t v55 = v61;
  *(void *)(a6 + 504) = v62;
  *(void *)(a6 + 512) = v55;
  uint64_t v56 = sub_10017DF08(&qword_100EB82B8);
  sub_10006DF38(v50, a6 + *(int *)(v56 + 80), &qword_100E66250);
  uint64_t v57 = a6 + *(int *)(v56 + 96);
  *(void *)uint64_t v57 = 0;
  *(unsigned char *)(v57 + 8) = 0;
  sub_100BEBC0C((uint64_t)v81);
  sub_10017DF4C(v48, &qword_100E66250);
  sub_10017DF4C(v50, &qword_100E66250);
  v82[0] = v52;
  v82[1] = 0;
  char v83 = v53;
  memcpy(v84, v94, 0x147uLL);
  v84[327] = v46;
  *(_DWORD *)char v85 = *(_DWORD *)v93;
  *(_DWORD *)&v85[3] = *(_DWORD *)&v93[3];
  uint64_t v86 = v27;
  uint64_t v87 = v29;
  uint64_t v88 = v31;
  uint64_t v89 = v33;
  char v90 = v76;
  return sub_100BEBCB8((uint64_t)v82);
}

uint64_t sub_100BE661C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v6 = sub_100BB45BC();
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  static Color.primary.getter();
  uint64_t v11 = Text.foregroundColor(_:)();
  uint64_t v13 = v12;
  char v15 = v14;
  uint64_t v27 = v16;
  swift_release();
  sub_100191924(v6, v8, v10);
  swift_bridgeObjectRelease();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v17 = static HorizontalAlignment.leading.getter();
  sub_100BE6838(a1, a2, a3 & 1, a4);
  v35[208] = 0;
  memcpy(&v35[7], __src, 0xC8uLL);
  v36[0] = v17;
  v36[1] = 0;
  LOBYTE(v36[2]) = 0;
  memcpy((char *)&v36[2] + 1, v35, 0xCFuLL);
  char v40 = v15 & 1;
  char v39 = 1;
  char v38 = v29;
  char v37 = v31;
  memcpy((void *)(a5 + 96), v36, 0xE0uLL);
  char v18 = v40;
  char v19 = v39;
  char v20 = v38;
  char v21 = v37;
  *(void *)a5 = v11;
  *(void *)(a5 + 8) = v13;
  *(unsigned char *)(a5 + 16) = v18;
  *(void *)(a5 + 24) = v27;
  *(void *)(a5 + 32) = 0;
  *(unsigned char *)(a5 + 40) = v19;
  *(void *)(a5 + 48) = v28;
  *(unsigned char *)(a5 + 56) = v20;
  *(void *)(a5 + 64) = v30;
  *(unsigned char *)(a5 + 72) = v21;
  *(void *)(a5 + 80) = v32;
  *(void *)(a5 + 88) = v33;
  v41[0] = v17;
  v41[1] = 0;
  char v42 = 0;
  memcpy(v43, v35, sizeof(v43));
  sub_100190CC4(v11, v13, v15 & 1);
  swift_bridgeObjectRetain();
  sub_100BEBD64((uint64_t)v36);
  sub_100BEBDD8((uint64_t)v41);
  sub_100191924(v11, v13, v15 & 1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100BE6838(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  if (qword_100E62260 != -1) {
    swift_once();
  }
  if (qword_100E62250 != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v21 = a2;
  sub_100190CC4(a1, a2, a3 & 1);
  uint64_t v22 = a4;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_100BB47D4();
  uint64_t v10 = v9;
  char v12 = v11 & 1;
  static Color.secondary.getter();
  uint64_t v13 = Text.foregroundColor(_:)();
  uint64_t v15 = v14;
  char v17 = v16;
  uint64_t v19 = v18;
  swift_release();
  sub_100191924(v8, v10, v12);
  swift_bridgeObjectRelease();
  if (qword_100E62268 != -1) {
    swift_once();
  }
  if (qword_100E62258 != -1) {
    swift_once();
  }
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v39 = 0;
  char v40 = 1;
  uint64_t v41 = v51;
  char v42 = v52;
  uint64_t v43 = v53;
  char v44 = v54;
  uint64_t v45 = v55;
  uint64_t v46 = v56;
  uint64_t v34 = a1;
  uint64_t v35 = v21;
  char v36 = a3 & 1;
  uint64_t v37 = v22;
  __int16 v38 = 256;
  uint64_t v47 = &v39;
  uint64_t v48 = &v34;
  uint64_t v30 = v13;
  uint64_t v31 = v15;
  char v32 = v17 & 1;
  uint64_t v33 = v19;
  uint64_t v23 = 0;
  char v24 = 1;
  uint64_t v25 = v57;
  char v26 = v58;
  uint64_t v27 = v59;
  char v28 = v60;
  long long v29 = v61;
  unsigned __int8 v49 = &v30;
  uint64_t v50 = &v23;
  sub_1004BA4B0();
  sub_100191924(v30, v31, v32);
  swift_bridgeObjectRelease();
  sub_100191924(v34, v35, v36);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100BE6B78@<X0>(void *__src@<X5>, uint64_t a2@<X0>, uint64_t a3@<X1>, char a4@<W2>, uint64_t a5@<X3>, uint64_t a6@<X4>, uint64_t a7@<X8>)
{
  memcpy(__dst, __src, sizeof(__dst));
  uint64_t v14 = sub_10017DF08(&qword_100EB82C8);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  char v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v38 - v18;
  *(void *)uint64_t v19 = static HorizontalAlignment.leading.getter();
  *((void *)v19 + 1) = 0x3FF0000000000000;
  v19[16] = 0;
  uint64_t v20 = sub_10017DF08(&qword_100EB82D0);
  sub_100BE6E54(a2, a3, a4 & 1, a5, a6, (uint64_t)__src, &v19[*(int *)(v20 + 44)]);
  sub_100BEBE4C();
  char v21 = static Edge.Set.trailing.getter();
  uint64_t v22 = a6 + *(int *)(type metadata accessor for LocationComponentHeaderView(0) + 20);
  uint64_t v23 = *(void *)v22;
  LOBYTE(a5) = *(unsigned char *)(v22 + 8);
  sub_100195B7C(*(void *)v22, a5);
  sub_100149AE8();
  LOBYTE(a3) = v24;
  sub_10018F6D8(v23, a5);
  if (a3)
  {
    if (qword_100E62240 == -1) {
      goto LABEL_5;
    }
    goto LABEL_6;
  }
  if (qword_100E62248 != -1) {
LABEL_6:
  }
    swift_once();
LABEL_5:
  EdgeInsets.init(_all:)();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  char v39 = 0;
  sub_10006DF38((uint64_t)v19, (uint64_t)v17, &qword_100EB82C8);
  char v33 = v39;
  sub_10006DF38((uint64_t)v17, a7, &qword_100EB82C8);
  uint64_t v34 = sub_10017DF08(&qword_100EB82D8);
  uint64_t v35 = a7 + *(int *)(v34 + 48);
  *(void *)uint64_t v35 = 0;
  *(unsigned char *)(v35 + 8) = 1;
  char v36 = (void *)(a7 + *(int *)(v34 + 64));
  memcpy(v40, __dst, 0x80uLL);
  LOBYTE(v40[16]) = v21;
  v40[17] = v26;
  v40[18] = v28;
  v40[19] = v30;
  v40[20] = v32;
  LOBYTE(v40[21]) = v33;
  memcpy(v36, v40, 0xA9uLL);
  sub_100BEBE4C();
  sub_10017DF4C((uint64_t)v19, &qword_100EB82C8);
  memcpy(v41, __dst, 0x80uLL);
  v41[128] = v21;
  uint64_t v42 = v26;
  uint64_t v43 = v28;
  uint64_t v44 = v30;
  uint64_t v45 = v32;
  char v46 = v33;
  sub_100BEBECC();
  return sub_10017DF4C((uint64_t)v17, &qword_100EB82C8);
}

uint64_t sub_100BE6E54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v100 = a6;
  int v115 = a3;
  uint64_t v116 = a1;
  uint64_t v117 = a2;
  uint64_t v97 = a7;
  uint64_t v9 = type metadata accessor for _BlendModeEffect();
  __chkstk_darwin(v9 - 8);
  uint64_t v112 = &v94[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v113 = type metadata accessor for BlendMode();
  uint64_t v110 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  uint64_t v109 = &v94[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v12 = (int *)type metadata accessor for LocationComponentHeaderView(0);
  __chkstk_darwin(v12);
  uint64_t v101 = &v94[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v98 = type metadata accessor for ColorSchemeContrast();
  uint64_t v14 = *(void *)(v98 - 8);
  uint64_t v15 = __chkstk_darwin(v98);
  char v17 = &v94[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  uint64_t v19 = &v94[-v18];
  uint64_t v103 = sub_10017DF08(&qword_100EB82E0);
  uint64_t v20 = __chkstk_darwin(v103);
  uint64_t v111 = &v94[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = __chkstk_darwin(v20);
  char v24 = &v94[-v23];
  __chkstk_darwin(v22);
  uint64_t v108 = &v94[-v25];
  uint64_t v26 = a5 + v12[12];
  uint64_t v27 = *(void *)v26;
  uint64_t v28 = *(unsigned __int8 *)(v26 + 8);
  char v29 = *(unsigned char *)(v26 + 9);
  sub_100193DD4(*(void *)v26, v28, v29);
  sub_10020CEA4();
  uint64_t v106 = v30;
  int v105 = v31;
  sub_10014D838(v27, v28, v29);
  uint64_t KeyPath = swift_getKeyPath();
  sub_100190CC4(v116, v117, v115 & 1);
  uint64_t v114 = a4;
  swift_bridgeObjectRetain();
  int v104 = static Edge.Set.horizontal.getter();
  uint64_t v32 = v12[5];
  uint64_t v102 = a5;
  uint64_t v33 = a5 + v32;
  uint64_t v34 = *(void *)v33;
  uint64_t v99 = v33;
  LOBYTE(v28) = *(unsigned char *)(v33 + 8);
  sub_100195B7C(v34, v28);
  sub_100149AE8();
  LOBYTE(v27) = v35;
  sub_10018F6D8(v34, v28);
  if ((v27 & 1) == 0)
  {
    if (qword_100E62248 == -1) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  if (qword_100E62240 != -1) {
LABEL_15:
  }
    swift_once();
LABEL_5:
  EdgeInsets.init(_all:)();
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  uint64_t v100 = sub_100BB47D4();
  uint64_t v96 = v44;
  int v95 = v45;
  uint64_t v46 = v102;
  sub_10014BB38();
  uint64_t v47 = v98;
  (*(void (**)(unsigned char *, void, uint64_t))(v14 + 104))(v17, enum case for ColorSchemeContrast.increased(_:), v98);
  char v48 = static ColorSchemeContrast.== infix(_:_:)();
  unsigned __int8 v49 = *(void (**)(unsigned char *, uint64_t))(v14 + 8);
  v49(v17, v47);
  v49(v19, v47);
  uint64_t v50 = v46;
  uint64_t v51 = v101;
  sub_1001FFC10(v50, (uint64_t)v101, (void (*)(void))type metadata accessor for LocationComponentHeaderView);
  if (v48)
  {
    sub_1002004FC((uint64_t)v51, (void (*)(void))type metadata accessor for LocationComponentHeaderView);
LABEL_8:
    int v57 = static HierarchicalShapeStyle.primary.getter();
    goto LABEL_10;
  }
  char v52 = &v51[v12[10]];
  uint64_t v53 = *(void *)v52;
  char v54 = v52[8];
  sub_100195B7C(*(void *)v52, v54);
  sub_100149AE8();
  char v56 = v55;
  sub_10018F6D8(v53, v54);
  sub_1002004FC((uint64_t)v51, (void (*)(void))type metadata accessor for LocationComponentHeaderView);
  if (v56) {
    goto LABEL_8;
  }
  int v57 = static HierarchicalShapeStyle.tertiary.getter();
LABEL_10:
  int v118 = v57;
  char v58 = v95 & 1;
  uint64_t v59 = v100;
  uint64_t v60 = v96;
  uint64_t v61 = Text.foregroundStyle<A>(_:)();
  uint64_t v101 = v62;
  char v64 = v63;
  uint64_t v102 = v65;
  sub_100191924(v59, v60, v58);
  swift_bridgeObjectRelease();
  uint64_t v100 = swift_getKeyPath();
  LODWORD(v98) = static Edge.Set.horizontal.getter();
  uint64_t v66 = *(void *)v99;
  char v67 = *(unsigned char *)(v99 + 8);
  sub_100195B7C(*(void *)v99, v67);
  sub_100149AE8();
  char v69 = v68;
  sub_10018F6D8(v66, v67);
  if (v69)
  {
    if (qword_100E62240 == -1) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
  if (qword_100E62248 != -1) {
LABEL_16:
  }
    swift_once();
LABEL_14:
  EdgeInsets.init(_all:)();
  uint64_t v71 = v70;
  uint64_t v73 = v72;
  uint64_t v75 = v74;
  uint64_t v77 = v76;
  uint64_t v78 = swift_getKeyPath();
  uint64_t v80 = v109;
  uint64_t v79 = v110;
  uint64_t v81 = v113;
  (*(void (**)(unsigned char *, void, uint64_t))(v110 + 104))(v109, enum case for BlendMode.plusLighter(_:), v113);
  uint64_t v82 = (uint64_t)v112;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v79 + 16))(v112, v80, v81);
  sub_1001FFC10(v82, (uint64_t)&v24[*(int *)(v103 + 36)], (void (*)(void))&type metadata accessor for _BlendModeEffect);
  char v83 = v101;
  *(void *)char v24 = v61;
  *((void *)v24 + 1) = v83;
  char v84 = v64 & 1;
  LODWORD(v99) = v64 & 1;
  v24[16] = v64 & 1;
  uint64_t v85 = v100;
  *((void *)v24 + 3) = v102;
  *((void *)v24 + 4) = v85;
  *((void *)v24 + 5) = 1;
  v24[48] = 0;
  *(_WORD *)(v24 + 49) = 256;
  v24[56] = v98;
  *((void *)v24 + 8) = v71;
  *((void *)v24 + 9) = v73;
  *((void *)v24 + 10) = v75;
  *((void *)v24 + 11) = v77;
  v24[96] = 0;
  *((void *)v24 + 13) = v78;
  *((void *)v24 + 14) = 0x3FE6666666666666;
  sub_100190CC4(v61, (uint64_t)v83, v84);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1002004FC(v82, (void (*)(void))&type metadata accessor for _BlendModeEffect);
  (*(void (**)(unsigned char *, uint64_t))(v79 + 8))(v80, v81);
  sub_100191924(v61, (uint64_t)v83, v99);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v86 = v108;
  sub_10024D364((uint64_t)v24, (uint64_t)v108, &qword_100EB82E0);
  uint64_t v87 = v111;
  sub_10006DF38((uint64_t)v86, (uint64_t)v111, &qword_100EB82E0);
  uint64_t v89 = v116;
  uint64_t v88 = v117;
  char v90 = v97;
  *uint64_t v97 = v116;
  v90[1] = v88;
  LOBYTE(v80) = v115 & 1;
  *((unsigned char *)v90 + 16) = v115 & 1;
  uint64_t v91 = KeyPath;
  v90[3] = v114;
  v90[4] = v91;
  v90[5] = v106;
  *((unsigned char *)v90 + 48) = v105 & 1;
  *(_WORD *)((char *)v90 + 49) = 256;
  *((unsigned char *)v90 + 56) = v104;
  v90[8] = v37;
  v90[9] = v39;
  v90[10] = v41;
  v90[11] = v43;
  *((unsigned char *)v90 + 96) = 0;
  uint64_t v92 = sub_10017DF08(&qword_100EB82E8);
  sub_10006DF38((uint64_t)v87, (uint64_t)v90 + *(int *)(v92 + 48), &qword_100EB82E0);
  sub_100190CC4(v89, v88, (char)v80);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10017DF4C((uint64_t)v86, &qword_100EB82E0);
  sub_10017DF4C((uint64_t)v87, &qword_100EB82E0);
  sub_100191924(v89, v88, (char)v80);
  swift_release();
  return swift_bridgeObjectRelease();
}

double sub_100BE77E4@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1[4];
  uint64_t v4 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v5 = v1[7];
  uint64_t v7 = v1[8];
  *a1 = swift_getKeyPath();
  sub_10017DF08(qword_100E84608);
  swift_storeEnumTagMultiPayload();
  uint64_t v8 = type metadata accessor for LocationComponentSegmentedControlInputHeaderView(0);
  uint64_t v9 = (_OWORD *)((char *)a1 + *(int *)(v8 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100EB8300);
  State.init(wrappedValue:)();
  double result = *(double *)&v12;
  *uint64_t v9 = v12;
  v9[1] = v13;
  uint64_t v11 = (uint64_t *)((char *)a1 + *(int *)(v8 + 24));
  *uint64_t v11 = v3;
  v11[1] = v4;
  void v11[2] = v6;
  v11[3] = v5;
  v11[4] = v7;
  return result;
}

double sub_100BE78C8@<D0>(uint64_t *a1@<X8>)
{
  memcpy(v4, v1, sizeof(v4));
  return sub_100BE77E4(a1);
}

uint64_t sub_100BE790C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v33 = a1;
  uint64_t v3 = type metadata accessor for LocationComponentSegmentedControlInputHeaderView(0);
  uint64_t v4 = v3 - 8;
  uint64_t v5 = *(void *)(v3 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v3);
  uint64_t v7 = sub_10017DF08(&qword_100EB83B8);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_10017DF08(&qword_100EB83C0);
  __chkstk_darwin(v34);
  long long v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v13 = (long long *)(v2 + *(int *)(v4 + 28));
  long long v14 = v13[1];
  long long v35 = *v13;
  long long v36 = v14;
  uint64_t v32 = sub_10017DF08(&qword_100EB83C8);
  State.wrappedValue.getter();
  uint64_t v15 = v38;
  *(_OWORD *)uint64_t v10 = v37;
  *((void *)v10 + 2) = v15;
  *(_OWORD *)(v10 + 24) = xmmword_100C3DB10;
  __asm { FMOV            V0.2D, #3.0 }
  *(_OWORD *)(v10 + 40) = _Q0;
  *(_OWORD *)(v10 + 56) = _Q0;
  *((void *)v10 + 9) = 0x3FF0000000000000;
  uint64_t v21 = (uint64_t)&v10[*(int *)(v8 + 52)];
  uint64_t v31 = v2;
  sub_100BE7C98(v2, v21);
  uint64_t v30 = (uint64_t)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001FFC10(v2, v30, (void (*)(void))type metadata accessor for LocationComponentSegmentedControlInputHeaderView);
  unint64_t v22 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v23 = swift_allocObject();
  sub_1001FDC9C((uint64_t)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v23 + v22, (void (*)(void))type metadata accessor for LocationComponentSegmentedControlInputHeaderView);
  sub_10006DF38((uint64_t)v10, (uint64_t)v12, &qword_100EB83B8);
  char v24 = (uint64_t (**)())&v12[*(int *)(v34 + 36)];
  *char v24 = sub_100BECA70;
  v24[1] = (uint64_t (*)())v23;
  v24[2] = 0;
  v24[3] = 0;
  sub_10017DF4C((uint64_t)v10, &qword_100EB83B8);
  long long v25 = v13[1];
  long long v35 = *v13;
  long long v36 = v25;
  State.wrappedValue.getter();
  long long v35 = v37;
  *(void *)&long long v36 = v38;
  uint64_t v26 = v30;
  sub_1001FFC10(v31, v30, (void (*)(void))type metadata accessor for LocationComponentSegmentedControlInputHeaderView);
  uint64_t v27 = swift_allocObject();
  sub_1001FDC9C(v26, v27 + v22, (void (*)(void))type metadata accessor for LocationComponentSegmentedControlInputHeaderView);
  sub_10017DF08(&qword_100EB8300);
  sub_10020CA7C((uint64_t)&unk_100EB83D0);
  sub_100BECBD8();
  View.onChange<A>(of:initial:_:)();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_10017DF4C((uint64_t)v12, &qword_100EB83C0);
}

uint64_t sub_100BE7C98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v77 = a1;
  uint64_t v83 = a2;
  uint64_t v2 = type metadata accessor for LocationComponentSegmentedControlInputHeaderView(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v75 = v2 - 8;
  uint64_t v78 = v3;
  uint64_t v76 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v74 = (uint64_t)&v59 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100EB8408);
  uint64_t v81 = *(void *)(v5 - 8);
  uint64_t v82 = v5;
  __chkstk_darwin(v5);
  uint64_t v80 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v79 = (char *)&v59 - v8;
  uint64_t v73 = sub_10017DF08(&qword_100EB8410) - 8;
  __chkstk_darwin(v73);
  uint64_t v70 = (uint64_t)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_10017DF08(&qword_100EB8418) - 8;
  __chkstk_darwin(v72);
  uint64_t v71 = (char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v86 = (uint64_t)&v59 - v12;
  uint64_t v69 = type metadata accessor for BlendMode();
  long long v13 = *(void **)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Capsule();
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10017DF08(&qword_100EB8420);
  uint64_t v20 = v19 - 8;
  __chkstk_darwin(v19);
  unint64_t v22 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10017DF08(&qword_100EB8428);
  uint64_t v24 = v23 - 8;
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v59 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v84 = (uint64_t)&v59 - v28;
  uint64_t v29 = enum case for RoundedCornerStyle.continuous(_:);
  unsigned int v65 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v60 = type metadata accessor for RoundedCornerStyle();
  uint64_t v30 = *(void *)(v60 - 8);
  char v64 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 104);
  uint64_t v66 = v30 + 104;
  v64(v18, v29, v60);
  static Color.black.getter();
  uint64_t v31 = Color.opacity(_:)();
  swift_release();
  char v68 = &type metadata accessor for Capsule;
  sub_1001FFC10((uint64_t)v18, (uint64_t)v22, (void (*)(void))&type metadata accessor for Capsule);
  *(void *)&v22[*(int *)(v20 + 44)] = v31;
  char v67 = &type metadata accessor for Capsule;
  sub_1002004FC((uint64_t)v18, (void (*)(void))&type metadata accessor for Capsule);
  char v63 = (void (*)(char *, void, uint64_t))v13[13];
  uint64_t v32 = v69;
  v63(v15, enum case for BlendMode.plusDarker(_:), v69);
  uint64_t v33 = *(int *)(v24 + 44);
  uint64_t v62 = (void (*)(char *, char *, uint64_t))v13[2];
  uint64_t v59 = v15;
  v62(&v26[v33], v15, v32);
  uint64_t v85 = v26;
  sub_10006DF38((uint64_t)v22, (uint64_t)v26, &qword_100EB8420);
  uint64_t v34 = (void (*)(char *, uint64_t))v13[1];
  uint64_t v61 = v13 + 1;
  v34(v15, v32);
  sub_10017DF4C((uint64_t)v22, &qword_100EB8420);
  uint64_t v35 = v84;
  sub_10024D364((uint64_t)v26, v84, &qword_100EB8428);
  v64(v18, v65, v60);
  static Color.white.getter();
  uint64_t v36 = Color.opacity(_:)();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v38 = v70;
  sub_1001FFC10((uint64_t)v18, v70, (void (*)(void))v68);
  uint64_t v39 = (uint64_t *)(v38 + *(int *)(v73 + 44));
  *uint64_t v39 = KeyPath;
  v39[1] = v36;
  sub_1002004FC((uint64_t)v18, (void (*)(void))v67);
  uint64_t v40 = v59;
  v63(v59, enum case for BlendMode.plusLighter(_:), v32);
  uint64_t v41 = (uint64_t)v71;
  v62(&v71[*(int *)(v72 + 44)], v40, v32);
  sub_10006DF38(v38, v41, &qword_100EB8410);
  v34(v40, v32);
  sub_10017DF4C(v38, &qword_100EB8410);
  uint64_t v42 = v86;
  sub_10024D364(v41, v86, &qword_100EB8418);
  uint64_t v43 = v74;
  uint64_t v87 = *(void *)(v77 + *(int *)(v75 + 32) + 24);
  sub_1001FFC10(v77, v74, (void (*)(void))type metadata accessor for LocationComponentSegmentedControlInputHeaderView);
  unint64_t v44 = (*(unsigned __int8 *)(v78 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
  uint64_t v45 = swift_allocObject();
  sub_1001FDC9C(v43, v45 + v44, (void (*)(void))type metadata accessor for LocationComponentSegmentedControlInputHeaderView);
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100EB8430);
  sub_10017DF08(&qword_100EB8438);
  sub_10024D5E4((uint64_t)&unk_100EB8440);
  sub_100BECCB8();
  sub_100BECE1C((uint64_t)&unk_100EB8490);
  uint64_t v46 = v79;
  ForEach<>.init(_:content:)();
  uint64_t v47 = (uint64_t)v85;
  sub_10006DF38(v35, (uint64_t)v85, &qword_100EB8428);
  sub_10006DF38(v42, v41, &qword_100EB8418);
  char v48 = v80;
  uint64_t v49 = v81;
  uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v81 + 16);
  uint64_t v51 = v46;
  char v52 = v46;
  uint64_t v53 = v82;
  v50(v80, v51, v82);
  uint64_t v54 = v47;
  uint64_t v55 = v83;
  sub_10006DF38(v54, v83, &qword_100EB8428);
  uint64_t v56 = sub_10017DF08(&qword_100EB8498);
  sub_10006DF38(v41, v55 + *(int *)(v56 + 48), &qword_100EB8418);
  v50((char *)(v55 + *(int *)(v56 + 64)), v48, v53);
  int v57 = *(void (**)(char *, uint64_t))(v49 + 8);
  v57(v52, v53);
  sub_10017DF4C(v86, &qword_100EB8418);
  sub_10017DF4C(v84, &qword_100EB8428);
  v57(v48, v53);
  sub_10017DF4C(v41, &qword_100EB8418);
  return sub_10017DF4C((uint64_t)v85, &qword_100EB8428);
}

uint64_t sub_100BE85B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v39 = a3;
  uint64_t v5 = type metadata accessor for LocationComponentHeaderInputModel.SegmentedControlModel.Option(0);
  uint64_t v36 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v36 + 64);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = type metadata accessor for LocationComponentSegmentedControlInputHeaderView(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100EB8468);
  uint64_t v37 = *(void *)(v11 - 8);
  uint64_t v38 = v11;
  __chkstk_darwin(v11);
  long long v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100EB8458);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001FFC10(a2, (uint64_t)v10, (void (*)(void))type metadata accessor for LocationComponentSegmentedControlInputHeaderView);
  uint64_t v18 = a1;
  uint64_t v35 = (uint64_t *)a1;
  sub_1001FFC10(a1, (uint64_t)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for LocationComponentHeaderInputModel.SegmentedControlModel.Option);
  unint64_t v19 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v20 = (v9 + *(unsigned __int8 *)(v36 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  uint64_t v21 = swift_allocObject();
  sub_1001FDC9C((uint64_t)v10, v21 + v19, (void (*)(void))type metadata accessor for LocationComponentSegmentedControlInputHeaderView);
  sub_1001FDC9C((uint64_t)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v21 + v20, (void (*)(void))type metadata accessor for LocationComponentHeaderInputModel.SegmentedControlModel.Option);
  uint64_t v40 = v18;
  sub_10017DF08(&qword_100EB84A0);
  uint64_t v22 = sub_10018C6DC(&qword_100EB84A8);
  uint64_t v23 = sub_10018C6DC(&qword_100E651D0);
  unint64_t v24 = sub_100BEE280();
  unint64_t v25 = sub_10024D5E4((uint64_t)&unk_100EAADB0);
  uint64_t v41 = v22;
  uint64_t v42 = v23;
  unint64_t v43 = v24;
  unint64_t v44 = v25;
  swift_getOpaqueTypeConformance2();
  Button.init(action:label:)();
  uint64_t v27 = v37;
  uint64_t v26 = v38;
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v17, v13, v38);
  *(void *)&v17[*(int *)(v15 + 44)] = 0xC028000000000000;
  (*(void (**)(char *, uint64_t))(v27 + 8))(v13, v26);
  uint64_t v28 = *v35;
  uint64_t v29 = v35[1];
  uint64_t v30 = v35[2];
  uint64_t v31 = v39;
  sub_10006DF38((uint64_t)v17, v39, &qword_100EB8458);
  uint64_t v32 = (void *)(v31 + *(int *)(sub_10017DF08(&qword_100EB8438) + 36));
  *uint64_t v32 = v28;
  v32[1] = v29;
  v32[2] = v30;
  swift_bridgeObjectRetain();
  return sub_10017DF4C((uint64_t)v17, &qword_100EB8458);
}

uint64_t sub_100BE89DC()
{
  return State.wrappedValue.setter();
}

uint64_t sub_100BE8A58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v58 = a2;
  uint64_t v57 = sub_10017DF08(&qword_100E651D0);
  __chkstk_darwin(v57);
  uint64_t v70 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10017DF08(&qword_100E6C0C0);
  __chkstk_darwin(v4 - 8);
  uint64_t v69 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100EAADC0) - 8;
  __chkstk_darwin(v6);
  char v68 = (uint64_t *)((char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v64 = type metadata accessor for Image.Scale();
  uint64_t v62 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v61 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E63F80);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Font.TextStyle();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_10017DF08(&qword_100E79E68) - 8;
  __chkstk_darwin(v60);
  uint64_t v59 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_10017DF08(&qword_100EB84C0);
  __chkstk_darwin(v66);
  char v63 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_10017DF08(&qword_100EB84A8);
  __chkstk_darwin(v56);
  unsigned int v65 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = a1;
  swift_bridgeObjectRetain();
  Image.init(systemName:)();
  uint64_t v19 = Text.init(_:)();
  uint64_t v21 = v20;
  char v23 = v22 & 1;
  (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, enum case for Font.TextStyle.subheadline(_:), v12);
  uint64_t v24 = type metadata accessor for Font.Design();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 1, 1, v24);
  static Font.system(_:design:weight:)();
  sub_10017DF4C((uint64_t)v11, &qword_100E63F80);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v25 = Text.font(_:)();
  uint64_t v27 = v26;
  LOBYTE(v13) = v28;
  uint64_t v30 = v29;
  swift_release();
  LOBYTE(a1) = v13 & 1;
  sub_100191924(v19, v21, v23);
  swift_bridgeObjectRelease();
  uint64_t v32 = v61;
  uint64_t v31 = v62;
  uint64_t v33 = v64;
  (*(void (**)(char *, void, uint64_t))(v62 + 104))(v61, enum case for Image.Scale.small(_:), v64);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v35 = *(int *)(v6 + 36);
  uint64_t v36 = v68;
  uint64_t v37 = v31;
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
  uint64_t v39 = v33;
  v38((char *)v68 + v35, v32, v33);
  uint64_t v40 = (uint64_t)v36;
  *uint64_t v36 = KeyPath;
  uint64_t v41 = (uint64_t)v59;
  sub_10006DF38(v40, (uint64_t)&v59[*(int *)(v60 + 44)], &qword_100EAADC0);
  *(void *)uint64_t v41 = v25;
  *(void *)(v41 + 8) = v27;
  *(unsigned char *)(v41 + 16) = a1;
  *(void *)(v41 + 24) = v30;
  sub_100190CC4(v25, v27, a1);
  swift_bridgeObjectRetain();
  sub_10017DF4C(v40, &qword_100EAADC0);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v32, v39);
  sub_100191924(v25, v27, a1);
  swift_bridgeObjectRelease();
  uint64_t v42 = (uint64_t)v69;
  static SymbolRenderingMode.monochrome.getter();
  uint64_t v43 = type metadata accessor for SymbolRenderingMode();
  _s7Weather24LocationCompositionStateOwst_0(v42, 0, 1, v43);
  uint64_t v44 = swift_getKeyPath();
  uint64_t v45 = (uint64_t)v63;
  uint64_t v46 = (uint64_t *)&v63[*(int *)(v66 + 36)];
  uint64_t v47 = sub_10017DF08(&qword_100EB84D0);
  sub_10006DF38(v42, (uint64_t)v46 + *(int *)(v47 + 28), &qword_100E6C0C0);
  *uint64_t v46 = v44;
  uint64_t v48 = (uint64_t)v70;
  sub_10006DF38(v41, v45, &qword_100E79E68);
  uint64_t v49 = (uint64_t)v65;
  sub_10017DF4C(v42, &qword_100E6C0C0);
  sub_10017DF4C(v41, &qword_100E79E68);
  uint64_t v50 = (uint64_t *)(v67
                  + *(int *)(type metadata accessor for LocationComponentHeaderInputModel.SegmentedControlModel.Option(0)
                           + 28));
  uint64_t v52 = *v50;
  uint64_t v51 = v50[1];
  uint64_t v71 = v52;
  uint64_t v72 = v51;
  sub_100BEBB50((uint64_t)&unk_100EB84B8);
  sub_10014A85C();
  View.accessibilityLabel<A>(_:)();
  sub_10017DF4C(v45, &qword_100EB84C0);
  uint64_t v53 = enum case for DynamicTypeSize.xLarge(_:);
  uint64_t v54 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 104))(v48, v53, v54);
  sub_100BECE1C((uint64_t)&qword_100E651F0);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result)
  {
    sub_100BEE280();
    sub_10024D5E4((uint64_t)&unk_100EAADB0);
    View.dynamicTypeSize<A>(_:)();
    sub_10017DF4C(v48, &qword_100E651D0);
    return sub_10017DF4C(v49, &qword_100EB84A8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100BE91FC()
{
  return State.wrappedValue.setter();
}

void sub_100BE9270(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for PerformLocationComponentHeaderInputModelAction();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (void (**)(long long *))((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = a2[2];
  if (v8)
  {
    uint64_t v10 = *a2;
    uint64_t v9 = a2[1];
    swift_bridgeObjectRetain();
    sub_1005D2818();
    uint64_t v11 = (long long *)(a3
                     + *(int *)(type metadata accessor for LocationComponentSegmentedControlInputHeaderView(0) + 24));
    uint64_t v12 = *((void *)v11 + 2);
    uint64_t v13 = *((void *)v11 + 3);
    uint64_t v14 = *((void *)v11 + 4);
    long long v16 = *v11;
    uint64_t v17 = v12;
    uint64_t v18 = v13;
    uint64_t v19 = v14;
    uint64_t v20 = v10;
    uint64_t v21 = v9;
    uint64_t v22 = v8;
    uint64_t v15 = *v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(&v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1002004FC((uint64_t)v7, (void (*)(void))type metadata accessor for PerformLocationComponentHeaderInputModelAction);
  }
}

uint64_t sub_100BE93A8()
{
  return 0;
}

uint64_t sub_100BE93B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100BE93A8();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

__n128 sub_100BE93E4@<Q0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 56);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 40);
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(v1 + 24);
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(void *)(a1 + 80) = &_swiftEmptyArrayStorage;
  *(void *)(a1 + 88) = 0x403C000000000000;
  return result;
}

double sub_100BE9414(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  double v8 = 10.0;
  if (a2) {
    *(double *)&a1 = 10.0;
  }
  if ((a4 & 1) == 0) {
    double v8 = *(double *)&a3;
  }
  sub_100BE945C(*(double *)&a1, v8);
  return *(double *)(a6 + 48);
}

uint64_t sub_100BE945C(double a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for LayoutSubview();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v70 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v74 = (char *)&v61 - v10;
  uint64_t v11 = type metadata accessor for LocationComponentSegmentedControlLayout.MeasuredOption(0);
  uint64_t v72 = *(void *)(v11 - 8);
  uint64_t v73 = v11;
  __chkstk_darwin(v11);
  uint64_t v71 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v61 - v14;
  uint64_t v16 = type metadata accessor for LayoutSubviews();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v61 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v20 = sub_100BECE1C((uint64_t)&qword_100E70808);
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  uint64_t result = dispatch thunk of Collection.distance(from:to:)();
  if (result >= 3)
  {
    dispatch thunk of Collection.startIndex.getter();
    dispatch thunk of Collection.endIndex.getter();
    uint64_t result = dispatch thunk of Collection.distance(from:to:)();
    if (result < 2)
    {
      __break(1u);
    }
    else
    {
      uint64_t v66 = v7;
      LayoutSubviews.subscript.getter();
      double v22 = *v2;
      double v23 = v2[2];
      uint64_t v24 = dispatch thunk of Collection.count.getter();
      uint64_t v25 = _swiftEmptyArrayStorage;
      uint64_t v69 = v19;
      unint64_t v68 = v20;
      if (v24)
      {
        uint64_t v26 = v24;
        uint64_t v67 = v15;
        uint64_t v77 = _swiftEmptyArrayStorage;
        sub_1007F3D64();
        uint64_t result = dispatch thunk of Collection.startIndex.getter();
        if (v26 < 0)
        {
LABEL_27:
          __break(1u);
          return result;
        }
        uint64_t v62 = v17;
        char v63 = v2;
        double v65 = a1;
        double v64 = a2 - v22 - v23;
        uint64_t v27 = (void (**)(char *))(v66 + 16);
        char v28 = (void (**)(char *, uint64_t))(v66 + 8);
        uint64_t v66 = v16;
        uint64_t v29 = (uint64_t)v67;
        do
        {
          uint64_t v30 = (void (*)(char *, void))dispatch thunk of Collection.subscript.read();
          uint64_t v31 = *v27;
          uint64_t v32 = v74;
          (*v27)(v74);
          v30(v76, 0);
          uint64_t v33 = v70;
          ((void (*)(char *, char *, uint64_t))v31)(v70, v32, v6);
          uint64_t v34 = (uint64_t)v71;
          ((void (*)(char *, char *, uint64_t))v31)(v71, v33, v6);
          v76[0] = 0;
          char v75 = 0;
          LayoutSubview.sizeThatFits(_:)();
          uint64_t v36 = v35;
          uint64_t v38 = v37;
          uint64_t v39 = *v28;
          (*v28)(v33, v6);
          uint64_t v40 = (void *)(v34 + *(int *)(v73 + 20));
          *uint64_t v40 = v36;
          v40[1] = v38;
          sub_1001FDC9C(v34, v29, (void (*)(void))type metadata accessor for LocationComponentSegmentedControlLayout.MeasuredOption);
          v39(v32, v6);
          uint64_t v25 = v77;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1007F3D64();
            uint64_t v25 = v77;
          }
          unint64_t v41 = v25[2];
          uint64_t v29 = (uint64_t)v67;
          if (v41 >= v25[3] >> 1)
          {
            sub_1007F3D64();
            uint64_t v25 = v77;
          }
          v25[2] = v41 + 1;
          sub_1001FDC9C(v29, (uint64_t)v25+ ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80))+ *(void *)(v72 + 72) * v41, (void (*)(void))type metadata accessor for LocationComponentSegmentedControlLayout.MeasuredOption);
          uint64_t v16 = v66;
          dispatch thunk of Collection.formIndex(after:)();
          --v26;
        }
        while (v26);
        uint64_t v3 = v63;
        uint64_t v17 = v62;
      }
      swift_bridgeObjectRelease();
      *((void *)v3 + 10) = v25;
      uint64_t v42 = swift_bridgeObjectRetain();
      uint64_t v43 = sub_100BE5360(v42);
      swift_bridgeObjectRelease();
      uint64_t v44 = sub_100BE5498((uint64_t)v43);
      *(double *)&uint64_t v45 = COERCE_DOUBLE(sub_100A0835C((uint64_t)v44));
      char v47 = v46;
      swift_bridgeObjectRelease();
      double v48 = *(double *)&v45;
      if (v47) {
        double v48 = 0.0;
      }
      if (v48 > v3[4]) {
        double v49 = v48;
      }
      else {
        double v49 = v3[4];
      }
      uint64_t v50 = sub_100BE555C((uint64_t)v43);
      swift_bridgeObjectRelease();
      *(double *)&uint64_t v51 = COERCE_DOUBLE(sub_100A0835C((uint64_t)v50));
      char v53 = v52;
      swift_bridgeObjectRelease();
      double v54 = *(double *)&v51;
      if (v53) {
        double v54 = 0.0;
      }
      if (v54 > v3[11]) {
        double v55 = v54;
      }
      else {
        double v55 = v3[11];
      }
      v3[8] = v49;
      v3[9] = v55;
      uint64_t v56 = v69;
      dispatch thunk of Collection.startIndex.getter();
      dispatch thunk of Collection.endIndex.getter();
      uint64_t v57 = dispatch thunk of Collection.distance(from:to:)();
      double v58 = v3[5];
      dispatch thunk of Collection.startIndex.getter();
      dispatch thunk of Collection.endIndex.getter();
      uint64_t result = dispatch thunk of Collection.distance(from:to:)();
      if (!__OFSUB__(result, 1))
      {
        double v59 = (double)((result - 1) & ~((result - 1) >> 63));
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v56, v16);
        double v60 = v55 + *v3 + v3[2];
        v3[6] = v3[3] + v58 * v59 + v49 * (double)v57 + v3[1];
        v3[7] = v60;
        return result;
      }
    }
    __break(1u);
    goto LABEL_27;
  }
  return result;
}

uint64_t sub_100BE9B7C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v98 = a10;
  CGFloat v105 = a3;
  CGFloat v106 = a4;
  uint64_t v97 = sub_10017DF08(&qword_100E7BAB0);
  __chkstk_darwin(v97);
  uint64_t v87 = (char *)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100E646B8);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10017DF08(&qword_100E7BAB8);
  __chkstk_darwin(v16 - 8);
  int v104 = (uint64_t *)((char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18);
  unint64_t v20 = (uint64_t *)((char *)&v80 - v19);
  uint64_t v21 = sub_10017DF08(&qword_100E7BAC0);
  __chkstk_darwin(v21 - 8);
  *(void *)&double v101 = (char *)&v80 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10017DF08(&qword_100E7BAC8);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v80 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for LayoutSubviews();
  uint64_t v103 = *(char **)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v93 = (char *)&v80 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v99 = (char *)&v80 - v29;
  uint64_t v30 = type metadata accessor for LayoutSubview();
  uint64_t v96 = *(uint64_t (***)(char *, uint64_t))(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v94 = (char *)&v80 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v86 = (char *)&v80 - v33;
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)&v80 - v35;
  __chkstk_darwin(v37);
  uint64_t v39 = (char *)&v80 - v38;
  unint64_t v40 = sub_100BECE1C((uint64_t)&qword_100E70808);
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  uint64_t result = dispatch thunk of Collection.distance(from:to:)();
  if (result < 3) {
    return result;
  }
  LayoutSubviews.subscript.getter();
  LayoutSubviews.subscript.getter();
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  uint64_t result = dispatch thunk of Collection.distance(from:to:)();
  if (result < 2) {
    goto LABEL_32;
  }
  uint64_t v88 = v36;
  uint64_t v100 = (void (**)(char *, uint64_t, uint64_t))v23;
  LayoutSubviews.subscript.getter();
  v111.origin.CGFloat x = a1;
  v111.origin.CGFloat y = a2;
  CGFloat v43 = v105;
  CGFloat v42 = v106;
  v111.size.CGFloat width = v105;
  v111.size.CGFloat height = v106;
  CGRectGetMinX(v111);
  v112.origin.CGFloat x = a1;
  v112.origin.CGFloat y = a2;
  v112.size.CGFloat width = v43;
  v112.size.CGFloat height = v42;
  CGRectGetMinY(v112);
  uint64_t v44 = v98;
  uint64_t v85 = v15;
  static UnitPoint.topLeading.getter();
  LOBYTE(v108[0]) = 0;
  char v110 = 0;
  uint64_t v45 = (uint64_t)v85;
  uint64_t v81 = v39;
  LayoutSubview.place(at:anchor:proposal:)();
  v113.origin.CGFloat x = a1;
  v113.origin.CGFloat y = a2;
  v113.size.CGFloat width = v43;
  v113.size.CGFloat height = v42;
  CGFloat MinX = CGRectGetMinX(v113);
  uint64_t v47 = v107;
  double v48 = MinX + *(double *)(v107 + 48);
  double v49 = *(double *)(v44 + 64);
  uint64_t v102 = *(void *)(v44 + 72);
  uint64_t v50 = (uint64_t)v103;
  uint64_t v51 = (void (*)(char *, uint64_t, uint64_t))*((void *)v103 + 2);
  double v52 = v101;
  uint64_t v91 = v103 + 16;
  char v90 = v51;
  v51(*(char **)&v101, (uint64_t)v99, v26);
  (*(void (**)(char *, double, uint64_t))(v50 + 32))(v93, COERCE_DOUBLE(*(void *)&v52), v26);
  sub_100BECE1C((uint64_t)&qword_100E7BAD8);
  dispatch thunk of Sequence.makeIterator()();
  uint64_t v84 = *((int *)v100 + 9);
  *(void *)&v25[v84] = 0;
  char v53 = (void *)v47;
  uint64_t v54 = *(int *)(sub_10017DF08(&qword_100E7BAD0) + 36);
  uint64_t v103 = v25;
  double v55 = &v25[v54];
  uint64_t v89 = (void (**)(uint64_t))(v96 + 2);
  uint64_t v92 = (void (**)(char *, uint64_t))(v50 + 8);
  uint64_t v100 = (void (**)(char *, uint64_t, uint64_t))(v96 + 4);
  double v101 = v49;
  ++v96;
  uint64_t v56 = v94;
  int v95 = v55;
  uint64_t v83 = v26;
  unint64_t v82 = v40;
  while (1)
  {
    uint64_t v57 = *(void *)v55;
    uint64_t v58 = (uint64_t)v103;
    dispatch thunk of Collection.endIndex.getter();
    if (v57 == v108[0])
    {
      _s7Weather24LocationCompositionStateOwst_0(v45, 1, 1, v30);
      uint64_t v59 = v97;
LABEL_7:
      sub_10017DF4C(v45, &qword_100E646B8);
      uint64_t v64 = 1;
      goto LABEL_10;
    }
    double v60 = (void (*)(void *, void))dispatch thunk of Collection.subscript.read();
    (*v89)(v45);
    v60(v108, 0);
    uint64_t v61 = v93;
    v90(v93, v58, v26);
    dispatch thunk of Collection.formIndex(after:)();
    uint64_t v62 = v61;
    uint64_t v56 = v94;
    (*v92)(v62, v26);
    _s7Weather24LocationCompositionStateOwst_0(v45, 0, 1, v30);
    int v63 = _s7Weather24LocationCompositionStateOwet_0(v45, 1, v30);
    uint64_t v59 = v97;
    if (v63 == 1) {
      goto LABEL_7;
    }
    double v65 = *v100;
    uint64_t v66 = v86;
    (*v100)(v86, v45, v30);
    uint64_t v67 = v59;
    unint64_t v68 = &v87[*(int *)(v59 + 48)];
    uint64_t v69 = (uint64_t)v103;
    uint64_t v70 = v84;
    uint64_t v71 = *(void *)&v103[v84];
    uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v65)(v68, v66, v30);
    if (__OFADD__(v71, 1)) {
      goto LABEL_31;
    }
    *(void *)(v69 + v70) = v71 + 1;
    uint64_t v72 = (char *)v104 + *(int *)(v67 + 48);
    *int v104 = v71;
    v65(v72, (uint64_t)v68, v30);
    uint64_t v64 = 0;
    char v53 = (void *)v107;
    uint64_t v59 = v67;
    uint64_t v45 = (uint64_t)v85;
    uint64_t v56 = v94;
    uint64_t v26 = v83;
LABEL_10:
    uint64_t v73 = v104;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v104, v64, 1, v59);
    sub_10024D364((uint64_t)v73, (uint64_t)v20, &qword_100E7BAB8);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v59) == 1)
    {
      sub_10017DF4C((uint64_t)v103, &qword_100E7BAC8);
      (*v92)(v99, v26);
      uint64_t v79 = *v96;
      (*v96)(v88, v30);
      return v79(v81, v30);
    }
    uint64_t v74 = *v20;
    (*v100)(v56, (uint64_t)v20 + *(int *)(v59 + 48), v30);
    v114.origin.CGFloat x = a1;
    v114.origin.CGFloat y = a2;
    v114.size.CGFloat width = v105;
    v114.size.CGFloat height = v106;
    CGRectGetMinY(v114);
    static UnitPoint.center.getter();
    LOBYTE(v108[0]) = 0;
    char v110 = 0;
    LayoutSubview.place(at:anchor:proposal:)();
    sub_100BEE728();
    LayoutSubview.subscript.getter();
    uint64_t v75 = v53[2];
    if (!v109)
    {
      if (v75) {
        goto LABEL_25;
      }
      sub_100702150(v107);
      goto LABEL_24;
    }
    if (!v75 || v108[0] != *v53)
    {
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
    if (v108[1] == v53[1] && v109 == v75)
    {
      swift_bridgeObjectRelease();
LABEL_24:
      v115.origin.CGFloat x = a1;
      v115.origin.CGFloat y = a2;
      v115.size.CGFloat width = v105;
      v115.size.CGFloat height = v106;
      CGRectGetMinY(v115);
      static UnitPoint.center.getter();
      LOBYTE(v108[0]) = 0;
      char v110 = 0;
      LayoutSubview.place(at:anchor:proposal:)();
      goto LABEL_25;
    }
    char v77 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v77) {
      goto LABEL_24;
    }
LABEL_25:
    dispatch thunk of Collection.startIndex.getter();
    dispatch thunk of Collection.endIndex.getter();
    uint64_t v78 = dispatch thunk of Collection.distance(from:to:)();
    uint64_t result = (*v96)(v56, v30);
    if (__OFSUB__(v78, 1)) {
      break;
    }
    double v48 = v49 + v48;
    char v53 = (void *)v107;
    double v55 = v95;
    if (v74 < v78 - 1) {
      double v48 = v48 + *(double *)(v107 + 32);
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

void *sub_100BEA6C8@<X0>(void *a1@<X8>)
{
  memcpy(__dst, v1, sizeof(__dst));
  sub_100BE93E4((uint64_t)v4);
  return memcpy(a1, v4, 0x60uLL);
}

double sub_100BEA72C(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  memcpy(__dst, v6, sizeof(__dst));
  return sub_100BE9414(a1, a2 & 1, a3, a4 & 1, a5, a6);
}

uint64_t sub_100BEA7BC(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, CGFloat a7, CGFloat a8, CGFloat a9, CGFloat a10)
{
  memcpy(__dst, v10, sizeof(__dst));
  return sub_100BE9B7C(a7, a8, a9, a10, a1, a2 & 1, a3, a4 & 1, a5, a6);
}

void sub_100BEA87C()
{
  memcpy(v1, v0, sizeof(v1));
  LocationSearchEntityFromStringResolver.init()();
}

uint64_t sub_100BEA8CC(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    type metadata accessor for LocationComponentHeaderViewModel(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v11 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v11;
        uint64_t v12 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v12;
        uint64_t v13 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v13;
        uint64_t v14 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v14;
        *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
        uint64_t v15 = a2[10];
        *(void *)(a1 + 72) = a2[9];
        *(void *)(a1 + 80) = v15;
        *(unsigned char *)(a1 + 88) = *((unsigned char *)a2 + 88);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v16 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v16;
        uint64_t v17 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v17;
        uint64_t v18 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v18;
        uint64_t v19 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v19;
        uint64_t v20 = a2[9];
        *(void *)(a1 + 64) = a2[8];
        *(void *)(a1 + 72) = v20;
        uint64_t v21 = a2[11];
        *(void *)(a1 + 80) = a2[10];
        *(void *)(a1 + 88) = v21;
        *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
        uint64_t v22 = a2[14];
        *(void *)(a1 + 104) = a2[13];
        *(void *)(a1 + 112) = v22;
        *(unsigned char *)(a1 + 120) = *((unsigned char *)a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v23 = type metadata accessor for WeatherDescription();
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
        uint64_t v24 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
        uint64_t v25 = *(int *)(v24 + 20);
        uint64_t v26 = a1 + v25;
        uint64_t v27 = (uint64_t)a2 + v25;
        uint64_t v29 = *(uint64_t *)((char *)a2 + v25);
        uint64_t v28 = *(uint64_t *)((char *)a2 + v25 + 8);
        *(void *)uint64_t v26 = v29;
        *(void *)(v26 + 8) = v28;
        uint64_t v30 = *(void *)(v27 + 24);
        *(void *)(v26 + 16) = *(void *)(v27 + 16);
        *(void *)(v26 + 24) = v30;
        *(unsigned char *)(v26 + 32) = *(unsigned char *)(v27 + 32);
        uint64_t v31 = *(void *)(v27 + 48);
        *(void *)(v26 + 40) = *(void *)(v27 + 40);
        *(void *)(v26 + 48) = v31;
        *(unsigned char *)(a1 + *(int *)(v24 + 24)) = *((unsigned char *)a2 + *(int *)(v24 + 24));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 5u:
        uint64_t v32 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v32;
        uint64_t v33 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v33;
        *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
        uint64_t v34 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v34;
        uint64_t v35 = a2[9];
        *(void *)(a1 + 64) = a2[8];
        *(void *)(a1 + 72) = v35;
        uint64_t v36 = a2[11];
        *(void *)(a1 + 80) = a2[10];
        *(void *)(a1 + 88) = v36;
        *(void *)(a1 + 96) = a2[12];
        *(unsigned char *)(a1 + 104) = *((unsigned char *)a2 + 104);
        uint64_t v37 = a2[15];
        *(void *)(a1 + 112) = a2[14];
        *(void *)(a1 + 120) = v37;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v7 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v7;
        uint64_t v8 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v8;
        *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
        uint64_t v9 = a2[6];
        *(void *)(a1 + 40) = a2[5];
        *(void *)(a1 + 48) = v9;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v38 = a3[5];
    uint64_t v39 = a1 + v38;
    uint64_t v40 = (uint64_t)a2 + v38;
    uint64_t v41 = *(void *)v40;
    char v42 = *(unsigned char *)(v40 + 8);
    sub_100195B7C(*(void *)v40, v42);
    *(void *)uint64_t v39 = v41;
    *(unsigned char *)(v39 + 8) = v42;
    uint64_t v43 = a3[6];
    uint64_t v44 = (void *)(a1 + v43);
    uint64_t v45 = (uint64_t *)((char *)a2 + v43);
    sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v46 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v46 - 8) + 16))(v44, v45, v46);
    }
    else
    {
      *uint64_t v44 = *v45;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v47 = a3[7];
    double v48 = (void *)(a1 + v47);
    double v49 = (uint64_t *)((char *)a2 + v47);
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v50 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
    }
    else
    {
      *double v48 = *v49;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v51 = a3[8];
    uint64_t v52 = a1 + v51;
    uint64_t v53 = (uint64_t)a2 + v51;
    uint64_t v54 = *(void *)v53;
    char v55 = *(unsigned char *)(v53 + 8);
    sub_100195B7C(*(void *)v53, v55);
    *(void *)uint64_t v52 = v54;
    *(unsigned char *)(v52 + 8) = v55;
    uint64_t v56 = a3[9];
    uint64_t v57 = a1 + v56;
    uint64_t v58 = (uint64_t)a2 + v56;
    uint64_t v59 = *(void *)v58;
    char v60 = *(unsigned char *)(v58 + 8);
    sub_100195B7C(*(void *)v58, v60);
    *(void *)uint64_t v57 = v59;
    *(unsigned char *)(v57 + 8) = v60;
    uint64_t v61 = a3[10];
    uint64_t v62 = a1 + v61;
    uint64_t v63 = (uint64_t)a2 + v61;
    uint64_t v64 = *(void *)v63;
    char v65 = *(unsigned char *)(v63 + 8);
    sub_100195B7C(*(void *)v63, v65);
    *(void *)uint64_t v62 = v64;
    *(unsigned char *)(v62 + 8) = v65;
    uint64_t v66 = a3[11];
    uint64_t v67 = (void *)(a1 + v66);
    unint64_t v68 = (uint64_t *)((char *)a2 + v66);
    sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v69 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v69 - 8) + 16))(v67, v68, v69);
    }
    else
    {
      void *v67 = *v68;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v70 = a3[12];
    uint64_t v71 = a1 + v70;
    uint64_t v72 = (uint64_t)a2 + v70;
    uint64_t v73 = *(void *)v72;
    char v74 = *(unsigned char *)(v72 + 9);
    unsigned __int8 v75 = *(unsigned char *)(v72 + 8);
    sub_100193DD4(*(void *)v72, v75, v74);
    *(void *)uint64_t v71 = v73;
    *(unsigned char *)(v71 + 8) = v75;
    *(unsigned char *)(v71 + 9) = v74;
    uint64_t v76 = a3[13];
    uint64_t v77 = a1 + v76;
    uint64_t v78 = (uint64_t)a2 + v76;
    uint64_t v79 = sub_10017DF08(&qword_100E63BE8);
    uint64_t v80 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 16);
    v80(v77, v78, v79);
    v80(a1 + a3[14], (uint64_t)a2 + a3[14], v79);
  }
  return a1;
}

unsigned char *sub_100BEAFC0(unsigned char *a1, unsigned char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for LocationComponentHeaderViewModel(0);
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    uint64_t v7 = type metadata accessor for WeatherDescription();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    uint64_t v8 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
    uint64_t v9 = *(int *)(v8 + 20);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    long long v12 = *((_OWORD *)v11 + 1);
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
    *((_OWORD *)v10 + 1) = v12;
    *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
    *((void *)v10 + 6) = *((void *)v11 + 6);
    a1[*(int *)(v8 + 24)] = a2[*(int *)(v8 + 24)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v13 = a3[5];
  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v13];
  uint64_t v16 = &a2[v13];
  *(void *)uint64_t v15 = *(void *)v16;
  v15[8] = v16[8];
  uint64_t v17 = &a1[v14];
  uint64_t v18 = &a2[v14];
  uint64_t v19 = sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = type metadata accessor for LayoutDirection();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v17, v18, v20);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  uint64_t v21 = a3[7];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v22, v23, v25);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  uint64_t v26 = a3[8];
  uint64_t v27 = a3[9];
  uint64_t v28 = &a1[v26];
  uint64_t v29 = &a2[v26];
  *(void *)uint64_t v28 = *(void *)v29;
  v28[8] = v29[8];
  uint64_t v30 = &a1[v27];
  uint64_t v31 = &a2[v27];
  *(void *)uint64_t v30 = *(void *)v31;
  v30[8] = v31[8];
  uint64_t v32 = a3[10];
  uint64_t v33 = a3[11];
  uint64_t v34 = &a1[v32];
  uint64_t v35 = &a2[v32];
  *(void *)uint64_t v34 = *(void *)v35;
  v34[8] = v35[8];
  uint64_t v36 = &a1[v33];
  uint64_t v37 = &a2[v33];
  uint64_t v38 = sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v39 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v36, v37, v39);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
  }
  uint64_t v40 = a3[12];
  uint64_t v41 = a3[13];
  char v42 = &a1[v40];
  uint64_t v43 = &a2[v40];
  *(void *)char v42 = *(void *)v43;
  *((_WORD *)v42 + 4) = *((_WORD *)v43 + 4);
  uint64_t v44 = &a1[v41];
  uint64_t v45 = &a2[v41];
  uint64_t v46 = sub_10017DF08(&qword_100E63BE8);
  uint64_t v47 = *(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32);
  v47(v44, v45, v46);
  v47(&a1[a3[14]], &a2[a3[14]], v46);
  return a1;
}

unsigned char *sub_100BEB394(unsigned char *a1, unsigned char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1002004FC((uint64_t)a1, (void (*)(void))type metadata accessor for LocationComponentHeaderViewModel);
    uint64_t v6 = type metadata accessor for LocationComponentHeaderViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      uint64_t v7 = type metadata accessor for WeatherDescription();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v8 = type metadata accessor for LocationComponentHeaderViewModel.Description(0);
      uint64_t v9 = *(int *)(v8 + 20);
      uint64_t v10 = &a1[v9];
      uint64_t v11 = &a2[v9];
      long long v12 = *((_OWORD *)v11 + 1);
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
      *((_OWORD *)v10 + 1) = v12;
      *((_OWORD *)v10 + 2) = *((_OWORD *)v11 + 2);
      *((void *)v10 + 6) = *((void *)v11 + 6);
      a1[*(int *)(v8 + 24)] = a2[*(int *)(v8 + 24)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v13 = a3[5];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = *(void *)v15;
  LOBYTE(v15) = v15[8];
  uint64_t v17 = *(void *)v14;
  char v18 = v14[8];
  *(void *)uint64_t v14 = v16;
  v14[8] = (char)v15;
  sub_10018F6D8(v17, v18);
  if (a1 != a2)
  {
    uint64_t v19 = a3[6];
    uint64_t v20 = &a1[v19];
    uint64_t v21 = &a2[v19];
    sub_10017DF4C((uint64_t)&a1[v19], &qword_100E62CB8);
    uint64_t v22 = sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v23 = type metadata accessor for LayoutDirection();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v20, v21, v23);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    uint64_t v24 = a3[7];
    uint64_t v25 = &a1[v24];
    uint64_t v26 = &a2[v24];
    sub_10017DF4C((uint64_t)&a1[v24], &qword_100E63BC8);
    uint64_t v27 = sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v28 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v25, v26, v28);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
    }
  }
  uint64_t v29 = a3[8];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  uint64_t v32 = *(void *)v31;
  LOBYTE(v31) = v31[8];
  uint64_t v33 = *(void *)v30;
  char v34 = v30[8];
  *(void *)uint64_t v30 = v32;
  v30[8] = (char)v31;
  sub_10018F6D8(v33, v34);
  uint64_t v35 = a3[9];
  uint64_t v36 = &a1[v35];
  uint64_t v37 = &a2[v35];
  uint64_t v38 = *(void *)v37;
  LOBYTE(v37) = v37[8];
  uint64_t v39 = *(void *)v36;
  char v40 = v36[8];
  *(void *)uint64_t v36 = v38;
  v36[8] = (char)v37;
  sub_10018F6D8(v39, v40);
  uint64_t v41 = a3[10];
  char v42 = &a1[v41];
  uint64_t v43 = &a2[v41];
  uint64_t v44 = *(void *)v43;
  LOBYTE(v43) = v43[8];
  uint64_t v45 = *(void *)v42;
  char v46 = v42[8];
  *(void *)char v42 = v44;
  v42[8] = (char)v43;
  sub_10018F6D8(v45, v46);
  if (a1 != a2)
  {
    uint64_t v47 = a3[11];
    double v48 = &a1[v47];
    double v49 = &a2[v47];
    sub_10017DF4C((uint64_t)&a1[v47], &qword_100E66E50);
    uint64_t v50 = sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v51 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v48, v49, v51);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
    }
  }
  uint64_t v52 = a3[12];
  uint64_t v53 = &a1[v52];
  uint64_t v54 = &a2[v52];
  uint64_t v55 = *(void *)v54;
  char v56 = v54[8];
  LOBYTE(v54) = v54[9];
  uint64_t v57 = *(void *)v53;
  char v58 = v53[9];
  *(void *)uint64_t v53 = v55;
  uint64_t v59 = v53[8];
  char v53[8] = v56;
  v53[9] = (char)v54;
  sub_10014D838(v57, v59, v58);
  uint64_t v60 = a3[13];
  uint64_t v61 = &a1[v60];
  uint64_t v62 = &a2[v60];
  uint64_t v63 = sub_10017DF08(&qword_100E63BE8);
  uint64_t v64 = *(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 40);
  v64(v61, v62, v63);
  v64(&a1[a3[14]], &a2[a3[14]], v63);
  return a1;
}

uint64_t sub_100BEB824(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BEB838);
}

uint64_t sub_100BEB838(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for LocationComponentHeaderViewModel(0);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    if (a2 == 254)
    {
      unsigned int v10 = *(unsigned __int8 *)(a1 + a3[5] + 8);
      if (v10 > 1) {
        return (v10 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
    sub_10017DF08(&qword_100E63BF0);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a2)
    {
      uint64_t v8 = v12;
      uint64_t v14 = a3[6];
    }
    else
    {
      sub_10017DF08((uint64_t *)&unk_100EAA530);
      sub_100162F30();
      if (*(_DWORD *)(v16 + 84) == a2)
      {
        uint64_t v8 = v15;
        uint64_t v14 = a3[7];
      }
      else
      {
        sub_10017DF08(&qword_100E6D908);
        sub_100162F30();
        if (*(_DWORD *)(v18 + 84) == a2)
        {
          uint64_t v8 = v17;
          uint64_t v14 = a3[11];
        }
        else
        {
          uint64_t v8 = sub_10017DF08(&qword_100E63BE8);
          uint64_t v14 = a3[13];
        }
      }
    }
    uint64_t v9 = a1 + v14;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_100BEB960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BEB974);
}

void sub_100BEB974()
{
  sub_100150288();
  type metadata accessor for LocationComponentHeaderViewModel(0);
  sub_100162F30();
  if (*(_DWORD *)(v5 + 84) == v3)
  {
    uint64_t v6 = v4;
    uint64_t v7 = v1;
  }
  else
  {
    if (v3 == 254)
    {
      *(unsigned char *)(v1 + v2[5] + 8) = -(char)v0;
      return;
    }
    sub_10017DF08(&qword_100E63BF0);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == v3)
    {
      uint64_t v6 = v8;
      uint64_t v10 = v2[6];
    }
    else
    {
      sub_10017DF08((uint64_t *)&unk_100EAA530);
      sub_100162F30();
      if (*(_DWORD *)(v12 + 84) == v3)
      {
        uint64_t v6 = v11;
        uint64_t v10 = v2[7];
      }
      else
      {
        sub_10017DF08(&qword_100E6D908);
        sub_100162F30();
        if (*(_DWORD *)(v14 + 84) == v3)
        {
          uint64_t v6 = v13;
          uint64_t v10 = v2[11];
        }
        else
        {
          uint64_t v6 = sub_10017DF08(&qword_100E63BE8);
          uint64_t v10 = v2[13];
        }
      }
    }
    uint64_t v7 = v1 + v10;
  }

  _s7Weather24LocationCompositionStateOwst_0(v7, v0, v0, v6);
}

unint64_t sub_100BEBA90()
{
  unint64_t result = qword_100EB81E8;
  if (!qword_100EB81E8)
  {
    sub_10018C6DC(&qword_100EB8128);
    sub_10024D5E4((uint64_t)&unk_100EB81A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB81E8);
  }
  return result;
}

unint64_t sub_100BEBB50(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    sub_100172370(0, v4);
    sub_1004A6660((uint64_t)&unk_100E7A020);
    sub_10024D5E4(v2);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_100BEBC0C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 208);
  uint64_t v3 = *(void *)(a1 + 216);
  char v4 = *(unsigned char *)(a1 + 224);
  uint64_t v5 = *(void *)(a1 + 248);
  uint64_t v6 = *(void *)(a1 + 256);
  char v7 = *(unsigned char *)(a1 + 264);
  sub_100190CC4(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRetain();
  sub_100190CC4(v2, v3, v4);
  swift_bridgeObjectRetain();
  sub_100190CC4(v5, v6, v7);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100BEBCB8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 208);
  uint64_t v3 = *(void *)(a1 + 216);
  char v4 = *(unsigned char *)(a1 + 224);
  uint64_t v5 = *(void *)(a1 + 248);
  uint64_t v6 = *(void *)(a1 + 256);
  char v7 = *(unsigned char *)(a1 + 264);
  sub_100191924(*(void *)(a1 + 24), *(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRelease();
  sub_100191924(v2, v3, v4);
  swift_bridgeObjectRelease();
  sub_100191924(v5, v6, v7);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100BEBD64(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 128);
  uint64_t v3 = *(void *)(a1 + 136);
  char v4 = *(unsigned char *)(a1 + 144);
  sub_100190CC4(*(void *)(a1 + 88), *(void *)(a1 + 96), *(unsigned char *)(a1 + 104));
  swift_bridgeObjectRetain();
  sub_100190CC4(v2, v3, v4);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_100BEBDD8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 128);
  uint64_t v3 = *(void *)(a1 + 136);
  char v4 = *(unsigned char *)(a1 + 144);
  sub_100191924(*(void *)(a1 + 88), *(void *)(a1 + 96), *(unsigned char *)(a1 + 104));
  swift_bridgeObjectRelease();
  sub_100191924(v2, v3, v4);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100BEBE4C()
{
  sub_100163DA8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_100BEBECC()
{
  sub_100163DA8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

unint64_t sub_100BEBF4C()
{
  return sub_10024D5E4((uint64_t)&unk_100EB82F0);
}

uint64_t sub_100BEBF88()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t type metadata accessor for LocationComponentSegmentedControlInputHeaderView(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100EB8368);
}

uint64_t *sub_100BEBFCC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_10017DF08(qword_100E84608);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v8 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v9 = a2[1];
      *a1 = v8;
      a1[1] = v9;
      uint64_t v10 = *(int *)(type metadata accessor for PerformLocationComponentHeaderInputModelAction() + 20);
      uint64_t v11 = (char *)a1 + v10;
      uint64_t v12 = (char *)a2 + v10;
      uint64_t v13 = type metadata accessor for UUID();
      uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
      swift_retain();
      v14(v11, v12, v13);
    }
    else
    {
      *a1 = v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v16 = *(int *)(a3 + 20);
    uint64_t v17 = *(int *)(a3 + 24);
    uint64_t v18 = (char *)a1 + v16;
    uint64_t v19 = (char *)a2 + v16;
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
    uint64_t v20 = *((void *)v19 + 3);
    *((void *)v18 + 2) = *((void *)v19 + 2);
    *((void *)v18 + 3) = v20;
    uint64_t v21 = (char *)a1 + v17;
    uint64_t v22 = (char *)a2 + v17;
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
    uint64_t v23 = *((void *)v22 + 3);
    *((void *)v21 + 2) = *((void *)v22 + 2);
    *((void *)v21 + 3) = v23;
    *((void *)v21 + 4) = *((void *)v22 + 4);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100BEC178(uint64_t a1)
{
  sub_10017DF08(qword_100E84608);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
    uint64_t v2 = a1 + *(int *)(type metadata accessor for PerformLocationComponentHeaderInputModelAction() + 20);
    uint64_t v3 = type metadata accessor for UUID();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *sub_100BEC264(void *a1, uint64_t *a2, uint64_t a3)
{
  sub_10017DF08(qword_100E84608);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v7 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = a2[1];
    *a1 = v7;
    a1[1] = v8;
    uint64_t v9 = *(int *)(type metadata accessor for PerformLocationComponentHeaderInputModelAction() + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for UUID();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_retain();
    v13(v10, v11, v12);
  }
  else
  {
    *a1 = v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = (char *)a1 + v14;
  uint64_t v17 = (char *)a2 + v14;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  uint64_t v18 = *((void *)v17 + 3);
  *((void *)v16 + 2) = *((void *)v17 + 2);
  *((void *)v16 + 3) = v18;
  uint64_t v19 = (char *)a1 + v15;
  uint64_t v20 = (char *)a2 + v15;
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  uint64_t v21 = *((void *)v20 + 3);
  *((void *)v19 + 2) = *((void *)v20 + 2);
  *((void *)v19 + 3) = v21;
  *((void *)v19 + 4) = *((void *)v20 + 4);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_100BEC3C0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10017DF4C((uint64_t)a1, qword_100E84608);
    sub_10017DF08(qword_100E84608);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = a2[1];
      *a1 = v7;
      a1[1] = v8;
      uint64_t v9 = *(int *)(type metadata accessor for PerformLocationComponentHeaderInputModelAction() + 20);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for UUID();
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      swift_retain();
      v13(v10, v11, v12);
    }
    else
    {
      *a1 = v7;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = (uint64_t *)((char *)a1 + v14);
  uint64_t v16 = (char *)a2 + v14;
  void *v15 = *(uint64_t *)((char *)a2 + v14);
  v15[1] = *(uint64_t *)((char *)a2 + v14 + 8);
  void v15[2] = *(uint64_t *)((char *)a2 + v14 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void v15[3] = *((void *)v16 + 3);
  swift_retain();
  swift_release();
  uint64_t v17 = *(int *)(a3 + 24);
  uint64_t v18 = (uint64_t *)((char *)a1 + v17);
  uint64_t v19 = (char *)a2 + v17;
  *uint64_t v18 = *(uint64_t *)((char *)a2 + v17);
  v18[1] = *(uint64_t *)((char *)a2 + v17 + 8);
  void v18[2] = *(uint64_t *)((char *)a2 + v17 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  void v18[3] = *((void *)v19 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18[4] = *((void *)v19 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_100BEC584(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(qword_100E84608);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v7 = *(int *)(type metadata accessor for PerformLocationComponentHeaderInputModelAction() + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = (_OWORD *)((char *)a1 + v11);
  uint64_t v14 = (_OWORD *)((char *)a2 + v11);
  long long v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = (char *)a1 + v12;
  uint64_t v17 = (char *)a2 + v12;
  long long v18 = *((_OWORD *)v17 + 1);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
  *((_OWORD *)v16 + 1) = v18;
  *((void *)v16 + 4) = *((void *)v17 + 4);
  return a1;
}

_OWORD *sub_100BEC69C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10017DF4C((uint64_t)a1, qword_100E84608);
    uint64_t v6 = sub_10017DF08(qword_100E84608);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v7 = *(int *)(type metadata accessor for PerformLocationComponentHeaderInputModelAction() + 20);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  *(_OWORD *)uint64_t v12 = *(_OWORD *)((char *)a2 + v11);
  *((void *)v12 + 2) = *(void *)((char *)a2 + v11 + 16);
  swift_bridgeObjectRelease();
  *((void *)v12 + 3) = *((void *)v13 + 3);
  swift_release();
  uint64_t v14 = *(int *)(a3 + 24);
  long long v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  *(_OWORD *)long long v15 = *(_OWORD *)v16;
  *((void *)v15 + 2) = *((void *)v16 + 2);
  swift_bridgeObjectRelease();
  *((void *)v15 + 3) = *((void *)v16 + 3);
  swift_bridgeObjectRelease();
  *((void *)v15 + 4) = *((void *)v16 + 4);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100BEC818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BEC82C);
}

uint64_t sub_100BEC82C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10017DF08(&qword_100EB8308);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 24) + 16);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_100BEC8C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BEC8D4);
}

void sub_100BEC8D4()
{
  sub_100150288();
  sub_10017DF08(&qword_100EB8308);
  sub_100162F30();
  if (*(_DWORD *)(v4 + 84) == v3)
  {
    uint64_t v5 = sub_10016350C();
    _s7Weather24LocationCompositionStateOwst_0(v5, v6, v7, v8);
  }
  else
  {
    *(void *)(v1 + *(int *)(v2 + 24) + 16) = (v0 - 1);
  }
}

void sub_100BEC94C()
{
  sub_100046D60(319, (unint64_t *)&unk_100EB8378, (void (*)(uint64_t))type metadata accessor for PerformLocationComponentHeaderInputModelAction);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_100BECA08()
{
  return sub_100BECE1C((uint64_t)&unk_100EB83B0);
}

uint64_t sub_100BECA50()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100BECA70()
{
  uint64_t v0 = type metadata accessor for LocationComponentSegmentedControlInputHeaderView(0);
  sub_1001627C0(v0);

  return sub_100BE91FC();
}

void sub_100BECAB4(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = type metadata accessor for LocationComponentSegmentedControlInputHeaderView(0);
  sub_1001627C0(v5);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  sub_100BE9270(a1, a2, v7);
}

unint64_t sub_100BECB14()
{
  unint64_t result = qword_100EB83D8;
  if (!qword_100EB83D8)
  {
    sub_10018C6DC(&qword_100EB83B8);
    sub_10024D5E4((uint64_t)&unk_100EB83E0);
    sub_10024D5E4((uint64_t)&unk_100EB83F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB83D8);
  }
  return result;
}

unint64_t sub_100BECBD8()
{
  unint64_t result = qword_100EB8400;
  if (!qword_100EB8400)
  {
    sub_10018C6DC(&qword_100EB8300);
    sub_1003669FC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB8400);
  }
  return result;
}

uint64_t sub_100BECC58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for LocationComponentSegmentedControlInputHeaderView(0);
  sub_1001627C0(v5);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_100BE85B8(a1, v7, a2);
}

unint64_t sub_100BECCB8()
{
  unint64_t result = qword_100EB8448;
  if (!qword_100EB8448)
  {
    sub_10018C6DC(&qword_100EB8438);
    sub_100BECD58();
    sub_10024D5E4((uint64_t)&unk_100EB8480);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB8448);
  }
  return result;
}

unint64_t sub_100BECD58()
{
  unint64_t result = qword_100EB8450;
  if (!qword_100EB8450)
  {
    sub_10018C6DC(&qword_100EB8458);
    sub_10024D5E4((uint64_t)&unk_100EB8460);
    sub_10024D5E4((uint64_t)&unk_100EB8470);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB8450);
  }
  return result;
}

unint64_t sub_100BECE1C(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_100BECE60()
{
  type metadata accessor for LocationComponentSegmentedControlInputHeaderView(0);
  sub_100179EF0();
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = type metadata accessor for LocationComponentHeaderInputModel.SegmentedControlModel.Option(0);
  sub_100179EF0();
  unint64_t v7 = (v2 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v0 + v2;
  sub_10017DF08(qword_100E84608);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_release();
    type metadata accessor for PerformLocationComponentHeaderInputModelAction();
    type metadata accessor for UUID();
    sub_100179DC0();
    sub_100162F0C();
    v9();
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v10 = v0 + v7 + *(int *)(v5 + 24);
  type metadata accessor for MainAction();
  switch(sub_10017A0C8())
  {
    case 1u:
      type metadata accessor for AppConfiguration();
      goto LABEL_83;
    case 2u:
      type metadata accessor for EnvironmentAction();
      switch(sub_10017A0C8())
      {
        case 2u:
          type metadata accessor for Locale();
          goto LABEL_83;
        case 3u:
          type metadata accessor for ActivityAction();
          int v28 = sub_10017A0C8();
          if (v28 == 1)
          {
            type metadata accessor for PreviewLocation();
            switch(sub_10017A0C8())
            {
              case 0u:
                goto LABEL_82;
              case 1u:
                goto LABEL_55;
              case 2u:
                goto LABEL_100;
              case 3u:
                goto LABEL_129;
              default:
                goto LABEL_130;
            }
            goto LABEL_130;
          }
          if (v28) {
            goto LABEL_130;
          }
          type metadata accessor for SavedLocation();
          if (sub_10017A0C8() == 1)
          {
            type metadata accessor for SavedLocation.Placeholder();
            goto LABEL_83;
          }
          goto LABEL_82;
        case 4u:
          goto LABEL_129;
        case 9u:
          if (*(void *)(v10 + 8) >= 2uLL) {
            goto LABEL_129;
          }
          goto LABEL_130;
        case 0xBu:
          type metadata accessor for ConfiguredUnitsAction();
          int v29 = sub_10017A0C8();
          if (v29 == 1)
          {
            uint64_t v14 = type metadata accessor for UnitConfiguration.Temperature();
            goto LABEL_107;
          }
          if (v29) {
            goto LABEL_130;
          }
          type metadata accessor for ConfiguredUnit();
          break;
        default:
          goto LABEL_130;
      }
      goto LABEL_83;
    case 3u:
      type metadata accessor for LocationsAction();
      switch(sub_10017A0C8())
      {
        case 0u:
          type metadata accessor for CurrentLocation();
          int v11 = sub_10017A0C8();
          if (v11 == 2 || v11 == 1) {
            goto LABEL_82;
          }
          goto LABEL_29;
        case 1u:
          goto LABEL_82;
        case 2u:
          goto LABEL_32;
        case 5u:
          goto LABEL_129;
        case 6u:
          sub_10015303C(*(void *)v10, *(void *)(v10 + 8), *(unsigned char *)(v10 + 16));
          break;
        default:
          goto LABEL_130;
      }
      goto LABEL_130;
    case 4u:
      type metadata accessor for NotificationsAction();
      switch(sub_10017A0C8())
      {
        case 1u:
          uint64_t v12 = type metadata accessor for LocationModel();
          if (!sub_100129098(v12))
          {
            sub_100162880();
            (*(void (**)(unint64_t, uint64_t))(v13 + 8))(v10, v8);
          }
          sub_10017DF08((uint64_t *)&unk_100EAC3E0);
          sub_100181CE8();
          uint64_t v14 = type metadata accessor for URL();
          goto LABEL_107;
        case 2u:
          type metadata accessor for NotificationSubscription.Location();
          sub_100179DC0();
          sub_100162F0C();
          v30();
          uint64_t v31 = &qword_100E6F630;
          goto LABEL_74;
        case 3u:
        case 4u:
          goto LABEL_129;
        case 5u:
          type metadata accessor for Location();
          sub_100179DC0();
          sub_100162F0C();
          v32();
          uint64_t v31 = &qword_100E6F638;
LABEL_74:
          sub_10017DF08(v31);
          sub_100181CE8();
          type metadata accessor for NotificationSubscription.Kind();
          goto LABEL_83;
        default:
          goto LABEL_130;
      }
    case 5u:
      type metadata accessor for NotificationsOptInAction();
      int v15 = sub_10017A0C8();
      if (v15 == 4) {
        goto LABEL_49;
      }
      if (v15 == 3) {
        goto LABEL_129;
      }
      if (v15 != 2) {
        goto LABEL_130;
      }
      goto LABEL_82;
    case 6u:
      type metadata accessor for ViewAction();
      switch(sub_10017A0C8())
      {
        case 0u:
          type metadata accessor for ListViewAction();
          int v16 = sub_10017A0C8();
          if (v16 == 2) {
            goto LABEL_85;
          }
          goto LABEL_77;
        case 1u:
          type metadata accessor for LocationViewerViewAction();
          int v16 = sub_10017A0C8();
          if (v16 == 2)
          {
LABEL_85:
            type metadata accessor for Location.Identifier();
            goto LABEL_83;
          }
          if (v16 == 1) {
            goto LABEL_60;
          }
LABEL_77:
          if (!v16)
          {
            type metadata accessor for LocationModel();
            goto LABEL_83;
          }
          break;
        case 3u:
          type metadata accessor for SearchViewAction();
          switch(sub_10017A0C8())
          {
            case 0u:
              type metadata accessor for CodableError();
              goto LABEL_83;
            case 1u:
            case 2u:
              goto LABEL_129;
            case 3u:
            case 6u:
              goto LABEL_82;
            case 4u:
              goto LABEL_55;
            case 5u:
LABEL_100:

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              type metadata accessor for SearchLocation();
              sub_100181CE8();
              uint64_t v14 = type metadata accessor for Location();
              goto LABEL_107;
            default:
              goto LABEL_130;
          }
          goto LABEL_130;
        case 4u:
          type metadata accessor for InteractiveMapViewAction();
          switch(sub_10017A0C8())
          {
            case 0u:
            case 1u:
            case 2u:
            case 4u:
              goto LABEL_82;
            case 3u:
              goto LABEL_60;
            default:
              goto LABEL_130;
          }
          goto LABEL_130;
        case 5u:
          type metadata accessor for DisplayMetrics();
          sub_100181CE8();
          type metadata accessor for DynamicTypeSize();
          goto LABEL_83;
        default:
          goto LABEL_130;
      }
      goto LABEL_130;
    case 7u:
      type metadata accessor for ModalViewAction();
      int v17 = sub_10017A0C8();
      if (v17 == 3)
      {
        if ((~*(void *)v10 & 0xF000000000000006) != 0) {
          sub_100274E38(*(void *)v10);
        }
      }
      else if (!v17)
      {
        type metadata accessor for LocationPreviewViewAction();
        if (sub_10017A0C8() == 1) {
          goto LABEL_82;
        }
      }
      goto LABEL_130;
    case 8u:
      type metadata accessor for LocationViewAction();
      int v11 = sub_10017A0C8();
      if (v11 == 2)
      {
        type metadata accessor for Location();
        sub_100179DC0();
        sub_100162F0C();
        v23();
        v10 += *(int *)(sub_10017DF08(&qword_100E66450) + 48);
LABEL_55:
        type metadata accessor for LocationOfInterest();
        goto LABEL_83;
      }
      if (v11 == 1)
      {
        type metadata accessor for LocationComponentAction(0);
        switch(sub_10017A0C8())
        {
          case 0u:
            type metadata accessor for URL();
            goto LABEL_104;
          case 1u:
            type metadata accessor for WeatherMapOverlayKind();
            goto LABEL_104;
          case 2u:
            type metadata accessor for DetailCondition();
LABEL_104:
            sub_100179DC0();
            (*(void (**)(unint64_t))(v45 + 8))(v10);
            break;
          case 4u:
            unint64_t v46 = v10 + *(int *)(sub_10017DF08(&qword_100E66480) + 48);
            type metadata accessor for Location();
            sub_100179DC0();
            (*(void (**)(unint64_t))(v47 + 8))(v46);
            break;
          default:
            break;
        }
        sub_10017DF08(&qword_100E66458);
        sub_100181CE8();
        uint64_t v14 = type metadata accessor for Date();
LABEL_107:
        if (!sub_100129098(v14))
        {
          sub_100162880();
          (*(void (**)(unint64_t))(v48 + 8))(v10);
        }
        goto LABEL_130;
      }
LABEL_29:
      if (v11) {
        goto LABEL_130;
      }
LABEL_82:
      type metadata accessor for Location();
      goto LABEL_83;
    case 9u:
      type metadata accessor for WeatherDataAction();
      switch(sub_10017A0C8())
      {
        case 0u:
        case 1u:
        case 7u:
          goto LABEL_129;
        case 2u:
          swift_bridgeObjectRelease();
          if (*(void *)(v10 + 24) >= 0xEuLL) {
            swift_bridgeObjectRelease();
          }
          goto LABEL_129;
        case 3u:
        case 9u:
LABEL_32:
          swift_bridgeObjectRelease();
          goto LABEL_129;
        case 4u:
          swift_bridgeObjectRelease();
          uint64_t v87 = sub_10017DF08(&qword_100E6BBC0);
          unint64_t v34 = v10 + *(int *)(v87 + 48);
          swift_bridgeObjectRelease();
          char v90 = (int *)type metadata accessor for WeatherData(0);
          uint64_t v35 = v34 + v90[5];
          uint64_t v36 = type metadata accessor for Locale();
          if (!_s7Weather24LocationCompositionStateOwet_0(v35, 1, v36))
          {
            sub_100162880();
            (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v35, v36);
          }
          type metadata accessor for WeatherDataModel();
          sub_100179DC0();
          sub_100162F0C();
          v38();
          uint64_t v39 = v34 + v90[7];
          uint64_t v40 = sub_10017DF08(&qword_100E63738);
          if (!_s7Weather24LocationCompositionStateOwet_0(v39, 1, v40))
          {
            type metadata accessor for Date();
            sub_100179DC0();
            (*(void (**)(uint64_t))(v41 + 8))(v39);
          }
          unint64_t v42 = v34;
          unint64_t v43 = v34 + v90[8];
          type metadata accessor for WeatherData.WeatherStatisticsState(0);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 1)
          {
            type metadata accessor for WeatherStatisticsModel();
            sub_100179DC0();
            (*(void (**)(unint64_t))(v49 + 8))(v43);
          }
          else if (!EnumCaseMultiPayload)
          {
            swift_bridgeObjectRelease();
          }
          uint64_t v50 = v42 + v90[9];
          uint64_t v51 = type metadata accessor for WeatherDataOverrides();
          if (!_s7Weather24LocationCompositionStateOwet_0(v50, 1, v51))
          {
            uint64_t v52 = type metadata accessor for Date();
            if (!_s7Weather24LocationCompositionStateOwet_0(v50, 1, v52))
            {
              sub_100162880();
              uint64_t v53 = sub_10017FD84();
              v54(v53);
            }
            if (!_s7Weather24LocationCompositionStateOwet_0(v50 + *(int *)(v51 + 20), 1, v52))
            {
              sub_100162880();
              uint64_t v55 = sub_10017FD84();
              v56(v55);
            }
          }
          unint64_t v57 = v10 + *(int *)(v87 + 64);
          type metadata accessor for UUID();
          sub_100179DC0();
          sub_100162F0C();
          v58();
          uint64_t v59 = type metadata accessor for PreprocessedWeatherData();
          swift_bridgeObjectRelease();
          uint64_t v91 = (int *)v59;
          unint64_t v86 = v57;
          unint64_t v60 = v57 + *(int *)(v59 + 24);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v61 = v60 + *(int *)(type metadata accessor for FeelsLikeComponentPreprocessedDataModel() + 28);
          uint64_t v62 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
          if (!_s7Weather24LocationCompositionStateOwet_0(v61, 1, v62))
          {
            swift_bridgeObjectRelease();
            type metadata accessor for TemperatureScaleConfiguration();
            sub_100179DC0();
            sub_100162F0C();
            v63();
            type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
            swift_bridgeObjectRelease();
          }
          sub_1001631A8();
          unint64_t v64 = v86 + v91[7];
          swift_bridgeObjectRelease();
          uint64_t v65 = v64 + *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
          uint64_t v82 = type metadata accessor for WeatherDescription();
          if (!_s7Weather24LocationCompositionStateOwet_0(v65, 1, v82))
          {
            sub_100162880();
            (*(void (**)(uint64_t))(v66 + 8))(v65);
          }
          unint64_t v67 = v86 + v91[8];
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v68 = v67 + *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
          type metadata accessor for Date();
          sub_100179DC0();
          (*(void (**)(unint64_t))(v69 + 8))(v68);
          uint64_t v89 = type metadata accessor for WeatherConditionBackgroundTimeData();
          uint64_t v70 = v68 + *(int *)(v89 + 20);
          uint64_t v85 = type metadata accessor for Elevation();
          if (!_s7Weather24LocationCompositionStateOwet_0(v70, 1, v85))
          {
            sub_100162880();
            (*(void (**)(uint64_t))(v71 + 8))(v70);
          }
          uint64_t v72 = v68 + *(int *)(v89 + 24);
          uint64_t v84 = type metadata accessor for BackgroundMoonData();
          if (!_s7Weather24LocationCompositionStateOwet_0(v72, 1, v84))
          {
            sub_100162880();
            (*(void (**)(uint64_t))(v73 + 8))(v72);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_100162880();
          sub_100162F0C();
          v74();
          type metadata accessor for UVIndexComponentPreprocessedDataModel();
          sub_1001631A8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          type metadata accessor for PressureTrend();
          sub_100179DC0();
          sub_100162F0C();
          v75();
          type metadata accessor for PressureComponentPreprocessedDataModel();
          sub_1001631A8();
          sub_1001631A8();
          sub_1001631A8();
          sub_1001631A8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v76 = v86 + v91[14];
          sub_100162F0C();
          v77();
          uint64_t v83 = v76 + *(int *)(v89 + 20);
          if (!_s7Weather24LocationCompositionStateOwet_0(v83, 1, v85))
          {
            sub_100162880();
            (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v83, v85);
          }
          if (!_s7Weather24LocationCompositionStateOwet_0(v76 + *(int *)(v89 + 24), 1, v84))
          {
            sub_100162880();
            uint64_t v79 = sub_10017FD84();
            v80(v79);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_128;
        case 5u:
          swift_bridgeObjectRelease();
          sub_10017DF08(&qword_100E6BBB0);
LABEL_128:
          sub_100181CE8();
          type metadata accessor for NewsDataModel();
          if (sub_10017A0C8() == 1) {
            goto LABEL_129;
          }
          type metadata accessor for News();
          break;
        case 6u:
          swift_bridgeObjectRelease();
          sub_10017DF08(&qword_100E6BBB8);
          sub_100181CE8();
          type metadata accessor for AvailableDataSets();
          goto LABEL_83;
        case 8u:
          swift_bridgeObjectRelease();
          sub_10017DF08(&qword_100E6BBA8);
          sub_100181CE8();
          type metadata accessor for WeatherStatisticsModel();
          goto LABEL_83;
        default:
          goto LABEL_130;
      }
      goto LABEL_83;
    case 0xAu:
      type metadata accessor for DebugAction();
      int v18 = sub_10017A0C8();
      if (v18 == 1) {
        goto LABEL_82;
      }
      if (v18) {
        goto LABEL_130;
      }
      uint64_t v19 = type metadata accessor for WeatherCondition();
      if (!sub_100129098(v19))
      {
        sub_100162880();
        (*(void (**)(unint64_t, uint64_t))(v20 + 8))(v10, v8);
      }
      sub_10017DF08(&qword_100E6F648);
LABEL_129:
      swift_bridgeObjectRelease();
      goto LABEL_130;
    case 0xBu:
      type metadata accessor for ConditionDetailViewAction();
      int v21 = sub_10017A0C8();
      if (v21 == 2)
      {
        swift_bridgeObjectRelease();
        uint64_t v24 = (int *)type metadata accessor for DetailChartSelection();
        unint64_t v88 = v10 + v24[5];
        uint64_t v25 = type metadata accessor for Date();
        sub_100162E4C();
        uint64_t v27 = *(void (**)(unint64_t, uint64_t))(v26 + 8);
        v27(v88, v25);
        v27(v10 + v24[6], v25);
        v27(v10 + v24[7], v25);
      }
      else
      {
        if (v21 == 1)
        {
LABEL_51:
          type metadata accessor for DetailCondition();
        }
        else
        {
LABEL_45:
          if (v21) {
            goto LABEL_130;
          }
LABEL_49:
          type metadata accessor for Date();
        }
LABEL_83:
        sub_100179DC0();
        (*(void (**)(unint64_t))(v33 + 8))(v10);
      }
LABEL_130:
      swift_bridgeObjectRelease();
      return swift_deallocObject();
    case 0xDu:
      type metadata accessor for MoonDetailViewAction();
      int v22 = sub_10017A0C8();
      if (v22 == 1) {
        goto LABEL_49;
      }
      if (v22) {
        goto LABEL_130;
      }
      type metadata accessor for MoonDetailSelectedDate();
      int v21 = sub_10017A0C8();
      if (v21 != 2 && v21 != 1) {
        goto LABEL_45;
      }
      goto LABEL_49;
    case 0xEu:
      type metadata accessor for AveragesDetailViewAction();
      if (sub_10017A0C8() != 1) {
        goto LABEL_130;
      }
      v10 += *(int *)(type metadata accessor for DetailHeroChartLollipopPosition(0) + 20);
      goto LABEL_49;
    case 0x10u:
      goto LABEL_129;
    case 0x11u:
      type metadata accessor for PerformanceTestAction();
      switch(sub_10017A0C8())
      {
        case 0u:
          goto LABEL_51;
        case 2u:
          goto LABEL_82;
        case 3u:
          v10 += *(int *)(sub_10017DF08((uint64_t *)&unk_100EA0250) + 48);
LABEL_60:
          type metadata accessor for WeatherMapOverlayKind();
          goto LABEL_83;
        case 4u:
          type metadata accessor for WeatherCondition();
          goto LABEL_83;
        default:
          goto LABEL_130;
      }
      goto LABEL_130;
    default:
      goto LABEL_130;
  }
}

uint64_t sub_100BEE1CC()
{
  type metadata accessor for LocationComponentSegmentedControlInputHeaderView(0);
  uint64_t v0 = type metadata accessor for LocationComponentHeaderInputModel.SegmentedControlModel.Option(0);
  sub_1001627C0(v0);

  return sub_100BE89DC();
}

uint64_t sub_100BEE278@<X0>(uint64_t a1@<X8>)
{
  return sub_100BE8A58(*(void *)(v1 + 16), a1);
}

unint64_t sub_100BEE280()
{
  unint64_t result = qword_100EB84B0;
  if (!qword_100EB84B0)
  {
    sub_10018C6DC(&qword_100EB84A8);
    sub_100BEBB50((uint64_t)&unk_100EB84B8);
    sub_100BECE1C((uint64_t)&qword_100EAACA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB84B0);
  }
  return result;
}

uint64_t sub_100BEE34C()
{
  return EnvironmentValues.symbolRenderingMode.getter();
}

uint64_t sub_100BEE370(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E6C0C0);
  __chkstk_darwin(v2 - 8);
  sub_10006DF38(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_100E6C0C0);
  return EnvironmentValues.symbolRenderingMode.setter();
}

ValueMetadata *type metadata accessor for LocationComponentSegmentedControlIdentifierLayoutValueKey()
{
  return &type metadata for LocationComponentSegmentedControlIdentifierLayoutValueKey;
}

uint64_t initializeWithCopy for LocationComponentSegmentedControlLayout(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for LocationComponentSegmentedControlLayout(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  return a1;
}

uint64_t assignWithTake for LocationComponentSegmentedControlLayout(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationComponentSegmentedControlLayout(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 80))
    {
      int v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      unint64_t v3 = *(void *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF) {
        LODWORD(v3) = -1;
      }
      int v2 = v3 - 1;
      if (v2 < 0) {
        int v2 = -1;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationComponentSegmentedControlLayout(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationComponentSegmentedControlLayout()
{
  return &type metadata for LocationComponentSegmentedControlLayout;
}

uint64_t sub_100BEE62C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100BEE6DC()
{
  unint64_t result = qword_100EB84D8;
  if (!qword_100EB84D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB84D8);
  }
  return result;
}

unint64_t sub_100BEE728()
{
  unint64_t result = qword_100EB84E0;
  if (!qword_100EB84E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB84E0);
  }
  return result;
}

uint64_t type metadata accessor for LocationComponentSegmentedControlLayout.MeasuredOption(uint64_t a1)
{
  return sub_10018678C(a1, qword_100EB8540);
}

uint64_t *sub_100BEE794(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for LayoutSubview();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_100BEE860(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LayoutSubview();
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_100BEE8C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for LayoutSubview();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100BEE940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for LayoutSubview();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  unint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  return a1;
}

uint64_t sub_100BEE9CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for LayoutSubview();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100BEEA48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for LayoutSubview();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100BEEAC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100BEEAD8);
}

uint64_t sub_100BEEAD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LayoutSubview();

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_100BEEB20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100BEEB34);
}

uint64_t sub_100BEEB34()
{
  type metadata accessor for LayoutSubview();
  uint64_t v0 = sub_10016350C();

  return _s7Weather24LocationCompositionStateOwst_0(v0, v1, v2, v3);
}

uint64_t sub_100BEEB74()
{
  uint64_t result = type metadata accessor for LayoutSubview();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for LocationComponentSegmentedControlLayout.Cache()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LocationComponentSegmentedControlLayout.Cache(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v5 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v5;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for LocationComponentSegmentedControlLayout.Cache(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  return a1;
}

uint64_t assignWithTake for LocationComponentSegmentedControlLayout.Cache(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationComponentSegmentedControlLayout.Cache(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 96))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 80);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationComponentSegmentedControlLayout.Cache(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 80) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationComponentSegmentedControlLayout.Cache()
{
  return &type metadata for LocationComponentSegmentedControlLayout.Cache;
}

uint64_t sub_100BEEDF8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C251B0;
  *(void *)(inited + 32) = 0x65646F4D77656976;
  *(void *)(inited + 40) = 0xE90000000000006CLL;
  __int16 v5 = *(_WORD *)(a1 + 16);
  char v6 = *(unsigned char *)(a1 + 18);
  char v7 = *(unsigned char *)(a1 + 19);
  *(void *)(inited + 72) = &unk_100E1E460;
  *(_WORD *)(inited + 48) = v5;
  *(unsigned char *)(inited + 50) = v6;
  *(unsigned char *)(inited + 51) = v7;
  Dictionary.init(dictionaryLiteral:)();
  a2[3] = sub_10017DF08(&qword_100EB8580);
  a2[4] = sub_100BEEF88();
  sub_100170694(a2);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_100BEEEF4@<X0>(uint64_t *a1@<X8>)
{
  return sub_100BEEDF8(*v1, a1);
}

uint64_t sub_100BEEEFC()
{
  sub_100BEEFDC();

  return ShortDescribable.description.getter();
}

unint64_t sub_100BEEF3C()
{
  unint64_t result = qword_100EB8578;
  if (!qword_100EB8578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB8578);
  }
  return result;
}

unint64_t sub_100BEEF88()
{
  unint64_t result = qword_100EB8588;
  if (!qword_100EB8588)
  {
    sub_10018C6DC(&qword_100EB8580);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB8588);
  }
  return result;
}

unint64_t sub_100BEEFDC()
{
  unint64_t result = qword_100EB8590;
  if (!qword_100EB8590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB8590);
  }
  return result;
}

void _s7Weather28AccessibilitySettingsMonitorC29applicationDidEnterBackgroundyyF_0()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0 name:UIAccessibilityReduceMotionStatusDidChangeNotification object:0];
  [v1 removeObserver:v0 name:UIAccessibilitySwitchControlStatusDidChangeNotification object:0];
  [v1 removeObserver:v0 name:UIAccessibilityVoiceOverStatusDidChangeNotification object:0];
}

uint64_t sub_100BEF12C(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = swift_retain();
  a3(v4);

  return swift_release();
}

uint64_t AccessibilitySettingsMonitor.deinit()
{
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t AccessibilitySettingsMonitor.__deallocating_deinit()
{
  AccessibilitySettingsMonitor.deinit();

  return swift_deallocClassInstance();
}

uint64_t destroy for NotificationSettingsLocationDetailView(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 40);
}

uint64_t initializeWithCopy for NotificationSettingsLocationDetailView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  uint64_t v5 = a2 + 40;
  long long v6 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v6;
  uint64_t v7 = v6;
  uint64_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(a1 + 40, v5, v7);
  return a1;
}

uint64_t assignWithCopy for NotificationSettingsLocationDetailView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  sub_1000C1E18((uint64_t *)(a1 + 40), (uint64_t *)(a2 + 40));
  return a1;
}

uint64_t assignWithTake for NotificationSettingsLocationDetailView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

ValueMetadata *type metadata accessor for NotificationSettingsLocationDetailView()
{
  return &type metadata for NotificationSettingsLocationDetailView;
}

uint64_t sub_100BEF408()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100BEF424@<X0>(uint64_t a1@<X8>)
{
  uint64_t v41 = a1;
  uint64_t v38 = type metadata accessor for NavigationBarItem.TitleDisplayMode();
  sub_100179C0C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v36 = v5;
  uint64_t v6 = sub_10017DF08(&qword_100EB8640);
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  int v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100EB8648);
  sub_100179C0C();
  uint64_t v37 = v13;
  __chkstk_darwin(v14);
  int v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100EB8650);
  sub_100179C0C();
  uint64_t v39 = v17;
  uint64_t v40 = v18;
  __chkstk_darwin(v17);
  sub_100109314();
  uint64_t v34 = v19;
  sub_100BEF7F8();
  uint64_t v35 = v1;
  uint64_t v20 = *(void *)(v1 + 24);
  uint64_t v47 = *(void *)(v1 + 16);
  uint64_t v48 = v20;
  uint64_t v21 = sub_10018C6DC(&qword_100EB8658);
  uint64_t v22 = type metadata accessor for InsetGroupedListStyle();
  uint64_t v23 = sub_1001246C8(&qword_100EB8660, &qword_100EB8658);
  uint64_t v43 = v21;
  uint64_t v44 = (void *)v22;
  uint64_t v45 = v23;
  unint64_t v46 = &protocol witness table for InsetGroupedListStyle;
  uint64_t v24 = sub_10019F98C();
  unint64_t v25 = sub_10014A85C();
  View.navigationTitle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
  uint64_t v26 = v36;
  uint64_t v27 = v38;
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v36, enum case for NavigationBarItem.TitleDisplayMode.inline(_:), v38);
  uint64_t v43 = v6;
  uint64_t v44 = &type metadata for String;
  uint64_t v45 = v24;
  unint64_t v46 = (void *)v25;
  uint64_t v28 = sub_10019F98C();
  uint64_t v29 = v34;
  View.navigationBarTitleDisplayMode(_:)();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v26, v27);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v12);
  uint64_t v42 = v35;
  sub_10017DF08(&qword_100E775B8);
  uint64_t v43 = v12;
  uint64_t v44 = (void *)v28;
  sub_10019F98C();
  uint64_t v30 = sub_10018C6DC(&qword_100E66B80);
  uint64_t v31 = sub_1001246C8(&qword_100E775C8, &qword_100E66B80);
  uint64_t v43 = v30;
  uint64_t v44 = (void *)v31;
  sub_10019F98C();
  uint64_t v32 = v39;
  View.toolbar<A>(content:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8))(v29, v32);
}

uint64_t sub_100BEF7F8()
{
  uint64_t v1 = type metadata accessor for InsetGroupedListStyle();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v10[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_10017DF08(&qword_100EB8658);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = v0;
  sub_10017DF08(&qword_100EB8668);
  sub_100BF0E84();
  List<>.init(content:)();
  InsetGroupedListStyle.init()();
  sub_1001246C8(&qword_100EB8660, &qword_100EB8658);
  View.listStyle<A>(_:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100BEF9F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10017DF08(&qword_100E66B80);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static ToolbarItemPlacement.confirmationAction.getter();
  uint64_t v9 = a1;
  sub_10017DF08(&qword_100E65388);
  sub_1001246C8(&qword_100E653A8, &qword_100E65388);
  ToolbarItem<>.init(placement:content:)();
  sub_1001246C8(&qword_100E775C8, &qword_100E66B80);
  static ToolbarContentBuilder.buildBlock<A>(_:)();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100BEFBC0(uint64_t a1)
{
  sub_100BF0E38(a1, (uint64_t)v3);
  uint64_t v1 = swift_allocObject();
  memcpy((void *)(v1 + 16), v3, 0x50uLL);
  return Button.init(action:label:)();
}

uint64_t sub_100BEFC60(void *a1)
{
  uint64_t v1 = a1[8];
  uint64_t v2 = a1[9];
  sub_1001B1E64(a1 + 5, v1);
  return (*(uint64_t (**)(uint64_t))(*(void *)(v2 + 8) + 16))(v1);
}

uint64_t sub_100BEFCB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Font.TextStyle();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v6 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Font.TextStyle.body(_:), v2);
  static Font.Weight.semibold.getter();
  static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v11 = Text.font(_:)();
  uint64_t v13 = v12;
  LOBYTE(v3) = v14;
  uint64_t v16 = v15;
  swift_release();
  sub_100191924(v6, v8, v10);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v11;
  *(void *)(a1 + 8) = v13;
  *(unsigned char *)(a1 + 16) = v3 & 1;
  *(void *)(a1 + 24) = v16;
  return result;
}

uint64_t sub_100BEFE6C(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100EB8690);
  __chkstk_darwin(v2);
  sub_100BEFF78((uint64_t)&v5[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)]);
  uint64_t v6 = a1;
  sub_10017DF08(&qword_100EB8680);
  sub_1001246C8(&qword_100EB8678, &qword_100EB8680);
  sub_100BF0F30();
  return Section<>.init(footer:content:)();
}

uint64_t sub_100BEFF78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v63 = a1;
  uint64_t v2 = type metadata accessor for AccessibilityActionKind();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v57 = v2;
  uint64_t v58 = v3;
  __chkstk_darwin(v2);
  uint64_t v61 = (char *)&KeyPath - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_10017DF08(&qword_100E65360);
  __chkstk_darwin(v52);
  uint64_t v55 = (uint64_t *)((char *)&KeyPath - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v56 = type metadata accessor for OpenURLAction();
  uint64_t v54 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v53 = (char *)&KeyPath - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_10017DF08(&qword_100E65350);
  __chkstk_darwin(v62);
  uint64_t v8 = (char *)&KeyPath - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100EB86A0);
  __chkstk_darwin(v9);
  uint64_t v59 = (char *)&KeyPath - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v60 = (char *)&KeyPath - v12;
  uint64_t v13 = sub_10017DF08(&qword_100E79020);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&KeyPath - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for AttributedString();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&KeyPath - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&KeyPath - v21;
  sub_100BF0834((uint64_t)v15);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16) == 1)
  {
    sub_1000F3400((uint64_t)v15, &qword_100E79020);
    uint64_t v23 = 1;
  }
  else
  {
    uint64_t v50 = v17;
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    uint64_t v48 = v22;
    uint64_t v49 = v16;
    v24(v22, v15, v16);
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v19, v22, v16);
    uint64_t v25 = Text.init(_:)();
    uint64_t v27 = v26;
    uint64_t v51 = v9;
    uint64_t v29 = v28;
    char v31 = v30 & 1;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v47 = v1;
    sub_100BF0E38(v1, (uint64_t)__src);
    uint64_t v32 = swift_allocObject();
    memcpy((void *)(v32 + 16), __src, 0x50uLL);
    uint64_t v33 = v53;
    OpenURLAction.init(handler:)();
    uint64_t v34 = v54;
    uint64_t v35 = v55;
    uint64_t v36 = v56;
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))((char *)v55 + *(int *)(v52 + 28), v33, v56);
    *uint64_t v35 = KeyPath;
    sub_1000F350C((uint64_t)v35, (uint64_t)&v8[*(int *)(v62 + 36)], &qword_100E65360);
    *(void *)uint64_t v8 = v25;
    *((void *)v8 + 1) = v27;
    unsigned char v8[16] = v31;
    *((void *)v8 + 3) = v29;
    sub_100190CC4(v25, v27, v31);
    swift_bridgeObjectRetain();
    sub_1000F3400((uint64_t)v35, &qword_100E65360);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v33, v36);
    sub_100191924(v25, v27, v31);
    uint64_t v9 = v51;
    swift_bridgeObjectRelease();
    uint64_t v37 = v61;
    static AccessibilityActionKind.default.getter();
    sub_100BF0E38(v47, (uint64_t)__src);
    uint64_t v38 = swift_allocObject();
    memcpy((void *)(v38 + 16), __src, 0x50uLL);
    sub_100287ED8();
    uint64_t v39 = (uint64_t)v59;
    View.accessibilityAction(_:_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v37, v57);
    sub_1000F3400((uint64_t)v8, &qword_100E65350);
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v40 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v42 = v41;
    LOBYTE(v27) = v43 & 1;
    uint64_t v44 = (uint64_t)v60;
    ModifiedContent<>.accessibilityHint(_:)();
    sub_100191924(v40, v42, v27);
    swift_bridgeObjectRelease();
    sub_1000F3400(v39, &qword_100EB86A0);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v48, v49);
    sub_100BF1078(v44, v63);
    uint64_t v23 = 0;
  }
  return _s7Weather24LocationCompositionStateOwst_0(v63, v23, 1, v9);
}

uint64_t sub_100BF0644@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  int v4 = *((unsigned __int8 *)a1 + 35);
  if (v4 == 1)
  {
    uint64_t v6 = *a1;
    uint64_t v5 = a1[1];
    uint64_t v8 = a1[2];
    uint64_t v7 = a1[3];
    char v9 = *((unsigned char *)a1 + 32);
    char v10 = *((unsigned char *)a1 + 33);
    char v11 = *((unsigned char *)a1 + 34);
    sub_10020D948((uint64_t)(a1 + 5), (uint64_t)&v22);
    *(void *)&long long v27 = v6;
    *((void *)&v27 + 1) = v5;
    *(void *)&long long v28 = v8;
    *((void *)&v28 + 1) = v7;
    LOBYTE(v29[0]) = v9;
    BYTE1(v29[0]) = v10;
    BYTE2(v29[0]) = v11;
    BYTE3(v29[0]) = 1;
    sub_1001262E4(&v22, (uint64_t)v29 + 8);
    LOWORD(v30) = 257;
    BYTE2(v30) = 1;
    BYTE8(v30) = v11;
    uint64_t v31 = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v31 = 0;
    long long v30 = 0u;
    memset(v29, 0, sizeof(v29));
    long long v27 = 0u;
    long long v28 = 0u;
  }
  if (*((unsigned char *)a1 + 33) == 1)
  {
    uint64_t v13 = *a1;
    uint64_t v12 = a1[1];
    uint64_t v15 = a1[2];
    uint64_t v14 = a1[3];
    char v16 = *((unsigned char *)a1 + 32);
    uint64_t v17 = (uint64_t)(a1 + 5);
    char v18 = *((unsigned char *)a1 + 34);
    sub_10020D948(v17, (uint64_t)v21);
    *(void *)&long long v22 = v13;
    *((void *)&v22 + 1) = v12;
    *(void *)&long long v23 = v15;
    *((void *)&v23 + 1) = v14;
    LOBYTE(v24[0]) = v16;
    BYTE1(v24[0]) = 1;
    BYTE2(v24[0]) = v18;
    BYTE3(v24[0]) = v4;
    sub_1001262E4(v21, (uint64_t)v24 + 8);
    LOWORD(v25) = 257;
    BYTE2(v25) = 1;
    BYTE8(v25) = v16;
    uint64_t v26 = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v26 = 0;
    long long v25 = 0u;
    memset(v24, 0, sizeof(v24));
    long long v22 = 0u;
    long long v23 = 0u;
  }
  sub_1000F350C((uint64_t)&v27, (uint64_t)v21, &qword_100EB86A8);
  sub_1000F350C((uint64_t)&v22, (uint64_t)v20, &qword_100EB86B0);
  sub_1000F350C((uint64_t)v21, a2, &qword_100EB86A8);
  sub_1000F350C((uint64_t)v20, a2 + 104, &qword_100EB86B0);
  sub_1000F3400((uint64_t)&v22, &qword_100EB86B0);
  sub_1000F3400((uint64_t)&v27, &qword_100EB86A8);
  sub_1000F3400((uint64_t)v20, &qword_100EB86B0);
  return sub_1000F3400((uint64_t)v21, &qword_100EB86A8);
}

uint64_t sub_100BF0834@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100BF0CE0();
  if (v3)
  {
    uint64_t v4 = v2;
    uint64_t v5 = v3;
    uint64_t v35 = a1;
    id v6 = [self preferredFontForTextStyle:UIFontTextStyleFootnote];
    sub_10017DF08(&qword_100E7B440);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100C25ED0;
    *(void *)(inited + 32) = NSFontAttributeName;
    uint64_t v34 = sub_1001ABC4C(0, (unint64_t *)&qword_100E73CF0);
    *(void *)(inited + 40) = v6;
    *(void *)(inited + 64) = v34;
    *(void *)(inited + 72) = NSForegroundColorAttributeName;
    uint64_t v8 = self;
    id v32 = v6;
    char v9 = NSFontAttributeName;
    char v10 = NSForegroundColorAttributeName;
    id v11 = [v8 secondaryLabelColor];
    uint64_t v12 = sub_1001ABC4C(0, (unint64_t *)&qword_100E7B3F8);
    *(void *)(inited + 104) = v12;
    *(void *)(inited + 80) = v11;
    type metadata accessor for Key(0);
    sub_100BF10E0(&qword_100E63070, type metadata accessor for Key);
    uint64_t v13 = Dictionary.init(dictionaryLiteral:)();
    id v14 = objc_allocWithZone((Class)NSAttributedString);
    id v33 = sub_1004C79C4(v4, v5, v13);
    id v15 = [self mainBundle];
    v37._unint64_t object = (void *)0x8000000100CC1300;
    v16._uint64_t countAndFlagsBits = 0x6F6D206E7261654CLL;
    v16._unint64_t object = (void *)0xAD0000A680E26572;
    v17._uint64_t countAndFlagsBits = 0;
    v17._unint64_t object = (void *)0xE000000000000000;
    v37._uint64_t countAndFlagsBits = 0xD000000000000079;
    Swift::String v18 = NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v37);

    uint64_t v19 = swift_initStackObject();
    *(_OWORD *)(v19 + 16) = xmmword_100C33BA0;
    *(void *)(v19 + 32) = v10;
    uint64_t v20 = v10;
    static Color.blue.getter();
    *(void *)(v19 + 40) = UIColor.init(_:)();
    *(void *)(v19 + 64) = v12;
    *(void *)(v19 + 72) = v9;
    *(void *)(v19 + 80) = v32;
    *(void *)(v19 + 104) = v34;
    *(void *)(v19 + 112) = NSLinkAttributeName;
    *(void *)(v19 + 144) = &type metadata for String;
    *(void *)(v19 + 120) = 0x6C6F686563616C70;
    *(void *)(v19 + 128) = 0xEB00000000726564;
    uint64_t v21 = v9;
    long long v22 = NSLinkAttributeName;
    uint64_t v23 = Dictionary.init(dictionaryLiteral:)();
    id v24 = objc_allocWithZone((Class)NSAttributedString);
    id v25 = sub_1004C79C4(v18._countAndFlagsBits, (uint64_t)v18._object, v23);
    sub_1001ABC4C(0, (unint64_t *)&qword_100E92578);
    sub_10017DF08(&qword_100E6BBD0);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_100C31F30;
    *(void *)(v26 + 32) = v25;
    specialized Array._endMutation()();
    id v27 = v33;
    id v28 = v25;
    NSAttributedString.init(_:arguments:)();
    AttributedString.init(_:)();

    uint64_t v29 = type metadata accessor for AttributedString();
    return _s7Weather24LocationCompositionStateOwst_0(v35, 0, 1, v29);
  }
  else
  {
    uint64_t v31 = type metadata accessor for AttributedString();
    return _s7Weather24LocationCompositionStateOwst_0(a1, 1, 1, v31);
  }
}

uint64_t sub_100BF0C64(uint64_t a1, uint64_t a2)
{
  sub_1001B1E64((void *)(a2 + 40), *(void *)(a2 + 64));
  sub_100626DA4();

  return static OpenURLAction.Result.handled.getter();
}

void sub_100BF0CAC(uint64_t a1)
{
}

uint64_t sub_100BF0CE0()
{
  if ((*(unsigned char *)(v0 + 33) & 1) == 0)
  {
    uint64_t v2 = (objc_class *)[self mainBundle];
    uint64_t v3 = 0x100000000000004ELL;
    unint64_t v10 = 0x8000000100CC13D0;
    unint64_t v4 = 0x8000000100CC1380;
    v5.super.Class isa = v2;
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
    unint64_t v8 = 0xD00000000000004FLL;
LABEL_6:
    uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, (Swift::String_optional)0, v5, *(Swift::String *)&v6, *(Swift::String *)&v8)._countAndFlagsBits;

    return countAndFlagsBits;
  }
  if ((*(unsigned char *)(v0 + 35) & 1) == 0)
  {
    uint64_t v2 = (objc_class *)[self mainBundle];
    unint64_t v8 = 0xD000000000000050;
    unint64_t v10 = 0x8000000100CC1470;
    unint64_t v4 = 0x8000000100CC1420;
    uint64_t v3 = 0x1000000000000045;
    v5.super.Class isa = v2;
    uint64_t v6 = 0;
    unint64_t v7 = 0xE000000000000000;
    goto LABEL_6;
  }
  return 0;
}

uint64_t sub_100BF0E28()
{
  return sub_100BEF9F8(*(void *)(v0 + 16));
}

uint64_t sub_100BF0E30()
{
  return sub_100BEFBC0(*(void *)(v0 + 16));
}

uint64_t sub_100BF0E38(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100BF0E74()
{
  return sub_100BEFC60((void *)(v0 + 16));
}

uint64_t sub_100BF0E7C()
{
  return sub_100BEFE6C(*(void *)(v0 + 16));
}

unint64_t sub_100BF0E84()
{
  unint64_t result = qword_100EB8670;
  if (!qword_100EB8670)
  {
    sub_10018C6DC(&qword_100EB8668);
    sub_1001246C8(&qword_100EB8678, &qword_100EB8680);
    sub_100BF0F30();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB8670);
  }
  return result;
}

unint64_t sub_100BF0F30()
{
  unint64_t result = qword_100EB8688;
  if (!qword_100EB8688)
  {
    sub_10018C6DC(&qword_100EB8690);
    sub_100BF0FA4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB8688);
  }
  return result;
}

unint64_t sub_100BF0FA4()
{
  unint64_t result = qword_100EB8698;
  if (!qword_100EB8698)
  {
    sub_10018C6DC(&qword_100EB86A0);
    sub_100287ED8();
    sub_100BF10E0((unint64_t *)&qword_100EAACA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100EB8698);
  }
  return result;
}

uint64_t sub_100BF1050@<X0>(uint64_t a1@<X8>)
{
  return sub_100BF0644(*(uint64_t **)(v1 + 16), a1);
}

uint64_t sub_100BF1064(uint64_t a1)
{
  return sub_100BF0C64(a1, v1 + 16);
}

void sub_100BF1070()
{
  sub_100BF0CAC(v0 + 16);
}

uint64_t sub_100BF1078(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100EB86A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100BF10E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100BF1128()
{
  return sub_100126084();
}

uint64_t sub_100BF12D4(uint64_t a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E6D1D8);
  __chkstk_darwin(v3 - 8);
  NSBundle v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E7D438);
  __chkstk_darwin(v6 - 8);
  sub_10017C704();
  uint64_t v7 = type metadata accessor for Calendar();
  _s7Weather24LocationCompositionStateOwst_0(v1, 1, 1, v7);
  uint64_t v8 = type metadata accessor for TimeZone();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 1, 1, v8);
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v5, a1, v8);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 0, 1, v8);
  DateComponents.timeZone.setter();
  DateComponents.hour.setter();
  return DateComponents.second.setter();
}

uint64_t sub_100BF14B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v18[0] = a1;
  v18[1] = a3;
  uint64_t v4 = sub_10017DF08(&qword_100E6D1D8);
  __chkstk_darwin(v4 - 8);
  sub_10017C704();
  uint64_t v5 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E65238);
  uint64_t v11 = type metadata accessor for Calendar.Component();
  sub_100179C0C();
  uint64_t v13 = v12;
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_100C251B0;
  (*(void (**)(unint64_t, void, uint64_t))(v13 + 104))(v15 + v14, enum case for Calendar.Component.year(_:), v11);
  sub_1000EEDB0(v15);
  Date.init()();
  Calendar.dateComponents(_:from:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v5);
  uint64_t v16 = type metadata accessor for TimeZone();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v16 - 8) + 16))(v3, v18[0], v16);
  _s7Weather24LocationCompositionStateOwst_0(v3, 0, 1, v16);
  DateComponents.timeZone.setter();
  DateComponents.year.setter();
  DateComponents.day.setter();
  DateComponents.month.setter();
  DateComponents.hour.setter();
  return DateComponents.second.setter();
}

uint64_t sub_100BF16F4(uint64_t a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(type metadata accessor for LollipopDetailViewModel(0) - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = v10 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v11 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v11;
      uint64_t v12 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v13 = v12[5];
      uint64_t v14 = a1 + v13;
      uint64_t v15 = (uint64_t)a2 + v13;
      uint64_t v16 = type metadata accessor for AttributedString();
      Swift::String v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      v17(v14, v15, v16);
      uint64_t v18 = v12[6];
      uint64_t v19 = (void *)(a1 + v18);
      uint64_t v20 = (uint64_t *)((char *)a2 + v18);
      uint64_t v21 = v20[1];
      void *v19 = *v20;
      v19[1] = v21;
      uint64_t v22 = v12[7];
      uint64_t v23 = (void *)(a1 + v22);
      id v24 = (uint64_t *)((char *)a2 + v22);
      uint64_t v25 = v24[1];
      *uint64_t v23 = *v24;
      v23[1] = v25;
      uint64_t v26 = v12[8];
      id v27 = (void *)(a1 + v26);
      id v28 = (uint64_t *)((char *)a2 + v26);
      uint64_t v29 = v28[1];
      *id v27 = *v28;
      v27[1] = v29;
      uint64_t v30 = v12[9];
      uint64_t v31 = (void *)(a1 + v30);
      id v32 = (uint64_t *)((char *)a2 + v30);
      uint64_t v33 = v32[1];
      void *v31 = *v32;
      v31[1] = v33;
      uint64_t v34 = v12[10];
      uint64_t v35 = (void *)(a1 + v34);
      uint64_t v36 = (uint64_t *)((char *)a2 + v34);
      uint64_t v37 = v36[1];
      *uint64_t v35 = *v36;
      v35[1] = v37;
      *(unsigned char *)(a1 + v12[11]) = *((unsigned char *)a2 + v12[11]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v6 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v6;
        uint64_t v7 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v7;
        uint64_t v8 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v8;
        uint64_t v9 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v9;
        *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
        *(unsigned char *)(a1 + 65) = *((unsigned char *)a2 + 65);
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v38 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v38;
        uint64_t v39 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v39;
        uint64_t v40 = a2[4];
        uint64_t v41 = a2[5];
        *(void *)(a1 + 32) = v40;
        *(void *)(a1 + 40) = v41;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100BF1958(uint64_t a1)
{
  type metadata accessor for LollipopDetailViewModel(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = a1 + *(int *)(type metadata accessor for TitleAndDetailLollipopDetailViewModel(0) + 20);
    uint64_t v4 = type metadata accessor for AttributedString();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else if (result == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (result) {
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_100BF1AA4(uint64_t a1, uint64_t a2)
{
  type metadata accessor for LollipopDetailViewModel(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v9 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v9;
    uint64_t v10 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
    uint64_t v11 = v10[5];
    uint64_t v39 = a1 + v11;
    uint64_t v12 = a2 + v11;
    uint64_t v13 = type metadata accessor for AttributedString();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    v14(v39, v12, v13);
    uint64_t v15 = v10[6];
    uint64_t v16 = (void *)(a1 + v15);
    Swift::String v17 = (void *)(a2 + v15);
    uint64_t v18 = v17[1];
    void *v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = v10[7];
    uint64_t v20 = (void *)(a1 + v19);
    uint64_t v21 = (void *)(a2 + v19);
    uint64_t v22 = v21[1];
    void *v20 = *v21;
    v20[1] = v22;
    uint64_t v23 = v10[8];
    id v24 = (void *)(a1 + v23);
    uint64_t v25 = (void *)(a2 + v23);
    uint64_t v26 = v25[1];
    *id v24 = *v25;
    v24[1] = v26;
    uint64_t v27 = v10[9];
    id v28 = (void *)(a1 + v27);
    uint64_t v29 = (void *)(a2 + v27);
    uint64_t v30 = v29[1];
    *id v28 = *v29;
    v28[1] = v30;
    uint64_t v31 = v10[10];
    id v32 = (void *)(a1 + v31);
    uint64_t v33 = (void *)(a2 + v31);
    uint64_t v34 = v33[1];
    *id v32 = *v33;
    v32[1] = v34;
    *(unsigned char *)(a1 + v10[11]) = *(unsigned char *)(a2 + v10[11]);
    swift_bridgeObjectRetain();
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v35 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v35;
      uint64_t v36 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v36;
      uint64_t v37 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v37;
      goto LABEL_7;
    }
    uint64_t v5 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v6;
    uint64_t v7 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v7;
    uint64_t v8 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v8;
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  }
  swift_bridgeObjectRetain();
LABEL_7:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100BF1C88(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_100BF2750(a1, (void (*)(void))type metadata accessor for LollipopDetailViewModel);
    type metadata accessor for LollipopDetailViewModel(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      uint64_t v5 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v6 = v5[5];
      uint64_t v26 = a1 + v6;
      uint64_t v7 = a2 + v6;
      uint64_t v8 = type metadata accessor for AttributedString();
      uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
      swift_bridgeObjectRetain();
      v9(v26, v7, v8);
      uint64_t v10 = v5[6];
      uint64_t v11 = (void *)(a1 + v10);
      uint64_t v12 = (void *)(a2 + v10);
      *uint64_t v11 = *v12;
      v11[1] = v12[1];
      uint64_t v13 = v5[7];
      uint64_t v14 = (void *)(a1 + v13);
      uint64_t v15 = (void *)(a2 + v13);
      *uint64_t v14 = *v15;
      v14[1] = v15[1];
      uint64_t v16 = v5[8];
      Swift::String v17 = (void *)(a1 + v16);
      uint64_t v18 = (void *)(a2 + v16);
      *Swift::String v17 = *v18;
      v17[1] = v18[1];
      uint64_t v19 = v5[9];
      uint64_t v20 = (void *)(a1 + v19);
      uint64_t v21 = (void *)(a2 + v19);
      void *v20 = *v21;
      v20[1] = v21[1];
      uint64_t v22 = v5[10];
      uint64_t v23 = (void *)(a1 + v22);
      id v24 = (void *)(a2 + v22);
      *uint64_t v23 = *v24;
      v23[1] = v24[1];
      *(unsigned char *)(a1 + v5[11]) = *(unsigned char *)(a2 + v5[11]);
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        goto LABEL_8;
      }
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
    }
    swift_bridgeObjectRetain();
LABEL_8:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}