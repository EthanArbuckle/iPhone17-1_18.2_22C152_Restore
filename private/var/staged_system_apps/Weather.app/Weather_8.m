uint64_t type metadata accessor for AveragesDetailInputFactory()
{
  return self;
}

char *sub_1005035F8(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v33 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v7 = type metadata accessor for AveragesDetailInput.Content(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)a1 = *a2;
      v34 = (int *)type metadata accessor for TemperatureAveragesHeroChartInput();
      uint64_t v35 = v34[5];
      v36 = &a1[v35];
      v37 = (char *)a2 + v35;
      uint64_t v38 = type metadata accessor for TimeZone();
      v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
      swift_bridgeObjectRetain();
      v155 = v39;
      uint64_t v156 = v38;
      v39(v36, v37, v38);
      v40 = v34;
      uint64_t v41 = v34[6];
      v42 = &a1[v41];
      v43 = (char *)a2 + v41;
      uint64_t v44 = type metadata accessor for Locale();
      v157 = *(void (**)(char *, char *))(*(void *)(v44 - 8) + 16);
      uint64_t v159 = v44;
      v157(v42, v43);
      *(void *)&a1[v34[7]] = *(uint64_t *)((char *)a2 + v34[7]);
      uint64_t v45 = v34[8];
      v46 = &a1[v45];
      v47 = (uint64_t *)((char *)a2 + v45);
      v48 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      swift_bridgeObjectRetain();
      uint64_t v167 = v6;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, (uint64_t)v48))
      {
        uint64_t v49 = sub_10017DF08(&qword_100E6B670);
        memcpy(v46, v47, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        *(void *)v46 = *v47;
        uint64_t v91 = v48[5];
        v92 = &v46[v91];
        v93 = (char *)v47 + v91;
        uint64_t v94 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 16))(v92, v93, v94);
        *(void *)&v46[v48[6]] = *(void *)((char *)v47 + v48[6]);
        *(void *)&v46[v48[7]] = *(void *)((char *)v47 + v48[7]);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v46, 0, 1, (uint64_t)v48);
      }
      uint64_t v95 = v34[9];
      v96 = &a1[v95];
      v97 = (char *)a2 + v95;
      uint64_t v98 = type metadata accessor for Date();
      v99 = *(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 16);
      v99(v96, v97, v98);
      v99(&a1[v40[10]], (char *)a2 + v40[10], v98);
      uint64_t v100 = v40[11];
      v101 = &a1[v100];
      v102 = (char *)a2 + v100;
      uint64_t v103 = sub_10017DF08(&qword_100E6B7C8);
      v153 = *(void (**)(char *, char *))(*(void *)(v103 - 8) + 16);
      uint64_t v154 = v103;
      v153(v101, v102);
      v104 = (int *)type metadata accessor for TemperatureAveragesDetailInput();
      uint64_t v105 = v104[5];
      v106 = &a1[v105];
      v107 = (char *)a2 + v105;
      uint64_t v108 = type metadata accessor for Calendar();
      v161 = *(void (**)(char *, char *))(*(void *)(v108 - 8) + 16);
      uint64_t v163 = v108;
      v161(v106, v107);
      v109 = (int *)type metadata accessor for MonthlyAveragesChartInput();
      v165 = v99;
      v99(&v106[v109[5]], &v107[v109[5]], v98);
      uint64_t v110 = v109[6];
      v111 = &v106[v110];
      v112 = &v107[v110];
      uint64_t v113 = type metadata accessor for TemperatureScaleConfiguration();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 16))(v111, v112, v113);
      uint64_t v114 = v109[7];
      v115 = &v106[v114];
      v116 = &v107[v114];
      uint64_t v117 = sub_10017DF08(&qword_100E65258);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 16))(v115, v116, v117);
      uint64_t v118 = v109[8];
      v119 = &v106[v118];
      v120 = &v107[v118];
      uint64_t v121 = sub_10017DF08(&qword_100E6B7D0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 16))(v119, v120, v121);
      ((void (*)(char *, char *, uint64_t))v157)(&v106[v109[9]], &v107[v109[9]], v159);
      *(void *)&a1[v104[6]] = *(uint64_t *)((char *)a2 + v104[6]);
      uint64_t v122 = v104[7];
      v123 = &a1[v122];
      v124 = (uint64_t *)((char *)a2 + v122);
      type metadata accessor for NewsDataModel();
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)v123 = *v124;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v125 = type metadata accessor for News();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v125 - 8) + 16))(v123, v124, v125);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v126 = v104[8];
      v127 = &a1[v126];
      v128 = (char *)a2 + v126;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2 + v126, 1, v154))
      {
        uint64_t v129 = sub_10017DF08(&qword_100E6B7D8);
        memcpy(v127, v128, *(void *)(*(void *)(v129 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v153)(v127, v128, v154);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v127, 0, 1, v154);
      }
      v155(&a1[v104[9]], (char *)a2 + v104[9], v156);
      v165(&a1[v104[10]], (char *)a2 + v104[10], v98);
      uint64_t v130 = v104[11];
      v131 = &a1[v130];
      v132 = (char *)a2 + v130;
      v133 = *(void **)v132;
      v134 = (void *)*((void *)v132 + 1);
      *(void *)v131 = *(void *)v132;
      *((void *)v131 + 1) = v134;
      v135 = (void *)*((void *)v132 + 2);
      v136 = (void *)*((void *)v132 + 3);
      *((void *)v131 + 2) = v135;
      *((void *)v131 + 3) = v136;
      v137 = (void *)*((void *)v132 + 4);
      v138 = (void *)*((void *)v132 + 5);
      *((void *)v131 + 4) = v137;
      *((void *)v131 + 5) = v138;
      uint64_t v139 = v104[12];
      v140 = &a1[v139];
      v141 = (char *)a2 + v139;
      id v142 = v133;
      id v143 = v134;
      id v144 = v135;
      id v145 = v136;
      id v146 = v137;
      id v147 = v138;
      ((void (*)(char *, char *, uint64_t))v161)(v140, v141, v163);
      swift_storeEnumTagMultiPayload();
      uint64_t v6 = v167;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v9 = type metadata accessor for Date();
      v10 = (void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
      v164 = *v10;
      (*v10)(a1, (char *)a2, v9);
      v11 = (int *)type metadata accessor for PrecipitationAveragesHeroChartInput();
      uint64_t v12 = v11[5];
      v13 = &a1[v12];
      v14 = (char *)a2 + v12;
      uint64_t v15 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      uint64_t v16 = v11[6];
      v17 = &a1[v16];
      v18 = (char *)a2 + v16;
      uint64_t v19 = sub_10017DF08(&qword_100E66CA0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
      uint64_t v20 = v11[7];
      v21 = &a1[v20];
      v22 = (char *)a2 + v20;
      uint64_t v23 = type metadata accessor for TimeZone();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
      uint64_t v24 = v11[8];
      v25 = &a1[v24];
      v26 = (char *)a2 + v24;
      uint64_t v27 = type metadata accessor for Locale();
      v162 = *(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16);
      v162(v25, v26, v27);
      uint64_t v28 = v11[9];
      v29 = &a1[v28];
      v30 = (uint64_t *)((char *)a2 + v28);
      v31 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      uint64_t v166 = v6;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, (uint64_t)v31))
      {
        uint64_t v32 = sub_10017DF08(&qword_100E6B670);
        memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        *(void *)v29 = *v30;
        v164(&v29[v31[5]], (char *)v30 + v31[5], v9);
        *(void *)&v29[v31[6]] = *(void *)((char *)v30 + v31[6]);
        *(void *)&v29[v31[7]] = *(void *)((char *)v30 + v31[7]);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, (uint64_t)v31);
      }
      v50 = (int *)type metadata accessor for PrecipitationAveragesDetailInput();
      uint64_t v51 = v50[5];
      v52 = &a1[v51];
      v53 = (char *)a2 + v51;
      uint64_t v54 = type metadata accessor for Calendar();
      v160 = *(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16);
      v160(v52, v53, v54);
      v55 = (int *)type metadata accessor for MonthlyAveragesChartInput();
      uint64_t v158 = v9;
      v164(&v52[v55[5]], &v53[v55[5]], v9);
      uint64_t v56 = v55[6];
      v57 = &v52[v56];
      v58 = &v53[v56];
      uint64_t v59 = type metadata accessor for TemperatureScaleConfiguration();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
      uint64_t v60 = v55[7];
      v61 = &v52[v60];
      v62 = &v53[v60];
      uint64_t v63 = sub_10017DF08(&qword_100E65258);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
      uint64_t v64 = v55[8];
      v65 = &v52[v64];
      v66 = &v53[v64];
      uint64_t v67 = sub_10017DF08(&qword_100E6B7D0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16))(v65, v66, v67);
      v162(&v52[v55[9]], &v53[v55[9]], v27);
      *(void *)&a1[v50[6]] = *(uint64_t *)((char *)a2 + v50[6]);
      uint64_t v68 = v50[7];
      v69 = &a1[v68];
      v70 = (uint64_t *)((char *)a2 + v68);
      type metadata accessor for NewsDataModel();
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)v69 = *v70;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v71 = type metadata accessor for News();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v71 - 8) + 16))(v69, v70, v71);
      }
      uint64_t v6 = v166;
      swift_storeEnumTagMultiPayload();
      v160(&a1[v50[8]], (char *)a2 + v50[8], v54);
      v164(&a1[v50[9]], (char *)a2 + v50[9], v158);
      uint64_t v72 = v50[10];
      v73 = &a1[v72];
      v74 = (char *)a2 + v72;
      uint64_t v75 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16))(v73, v74, v75);
      uint64_t v76 = v50[11];
      v77 = &a1[v76];
      v78 = (char *)a2 + v76;
      v79 = *(void **)v78;
      v80 = (void *)*((void *)v78 + 1);
      *(void *)v77 = *(void *)v78;
      *((void *)v77 + 1) = v80;
      v81 = (void *)*((void *)v78 + 2);
      v82 = (void *)*((void *)v78 + 3);
      *((void *)v77 + 2) = v81;
      *((void *)v77 + 3) = v82;
      v83 = (void *)*((void *)v78 + 4);
      v84 = (void *)*((void *)v78 + 5);
      *((void *)v77 + 4) = v83;
      *((void *)v77 + 5) = v84;
      id v85 = v79;
      id v86 = v80;
      id v87 = v81;
      id v88 = v82;
      id v89 = v83;
      id v90 = v84;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
    uint64_t v148 = *(int *)(v6 + 24);
    a1[*(int *)(v6 + 20)] = *((unsigned char *)a2 + *(int *)(v6 + 20));
    v149 = &a1[v148];
    v150 = (char *)a2 + v148;
    uint64_t v151 = type metadata accessor for Location();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 16))(v149, v150, v151);
  }
  return a1;
}

uint64_t type metadata accessor for AveragesDetailInput.Content(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E7D6A8);
}

uint64_t sub_100504284(uint64_t a1, uint64_t a2)
{
  type metadata accessor for AveragesDetailInput.Content(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v76 = a2;
    swift_bridgeObjectRelease();
    v30 = (int *)type metadata accessor for TemperatureAveragesHeroChartInput();
    uint64_t v31 = a1 + v30[5];
    uint64_t v32 = type metadata accessor for TimeZone();
    uint64_t v67 = *(void (**)(uint64_t))(*(void *)(v32 - 8) + 8);
    uint64_t v68 = v32;
    v67(v31);
    uint64_t v33 = a1 + v30[6];
    uint64_t v34 = type metadata accessor for Locale();
    v69 = *(void (**)(uint64_t, uint64_t))(*(void *)(v34 - 8) + 8);
    v69(v33, v34);
    swift_bridgeObjectRelease();
    uint64_t v35 = a1 + v30[8];
    uint64_t v36 = type metadata accessor for DetailHeroChartLollipopPosition(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v35, 1, v36))
    {
      uint64_t v37 = v35 + *(int *)(v36 + 20);
      uint64_t v38 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v37, v38);
    }
    uint64_t v39 = a1 + v30[9];
    uint64_t v40 = type metadata accessor for Date();
    uint64_t v41 = *(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8);
    v41(v39, v40);
    v41(a1 + v30[10], v40);
    uint64_t v42 = a1 + v30[11];
    uint64_t v43 = sub_10017DF08(&qword_100E6B7C8);
    v66 = *(void (**)(uint64_t, uint64_t))(*(void *)(v43 - 8) + 8);
    v66(v42, v43);
    uint64_t v44 = (int *)type metadata accessor for TemperatureAveragesDetailInput();
    uint64_t v45 = a1 + v44[5];
    uint64_t v46 = type metadata accessor for Calendar();
    uint64_t v71 = *(void (**)(uint64_t, uint64_t))(*(void *)(v46 - 8) + 8);
    v71(v45, v46);
    v47 = (int *)type metadata accessor for MonthlyAveragesChartInput();
    v73 = v41;
    v41(v45 + v47[5], v40);
    uint64_t v48 = v45 + v47[6];
    uint64_t v49 = type metadata accessor for TemperatureScaleConfiguration();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v49 - 8) + 8))(v48, v49);
    uint64_t v50 = v45 + v47[7];
    uint64_t v51 = sub_10017DF08(&qword_100E65258);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v51 - 8) + 8))(v50, v51);
    uint64_t v52 = v45 + v47[8];
    uint64_t v53 = sub_10017DF08(&qword_100E6B7D0);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v53 - 8) + 8))(v52, v53);
    v69(v45 + v47[9], v34);
    swift_bridgeObjectRelease();
    uint64_t v54 = a1 + v44[7];
    type metadata accessor for NewsDataModel();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v59 = type metadata accessor for News();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v59 - 8) + 8))(v54, v59);
    }
    a2 = v76;
    uint64_t v60 = a1 + v44[8];
    if (!_s7Weather24LocationCompositionStateOwet_0(v60, 1, v43)) {
      v66(v60, v43);
    }
    ((void (*)(uint64_t, uint64_t))v67)(a1 + v44[9], v68);
    v73(a1 + v44[10], v40);
    v61 = (id *)(a1 + v44[11]);

    v71(a1 + v44[12], v46);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v75 = a2;
    uint64_t v5 = type metadata accessor for Date();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    v6(a1, v5);
    uint64_t v7 = (int *)type metadata accessor for PrecipitationAveragesHeroChartInput();
    uint64_t v8 = a1 + v7[5];
    uint64_t v9 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    uint64_t v10 = a1 + v7[6];
    uint64_t v11 = sub_10017DF08(&qword_100E66CA0);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    uint64_t v12 = a1 + v7[7];
    uint64_t v13 = type metadata accessor for TimeZone();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
    uint64_t v14 = a1 + v7[8];
    uint64_t v15 = type metadata accessor for Locale();
    uint64_t v16 = (void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
    uint64_t v72 = *v16;
    (*v16)(v14, v15);
    uint64_t v17 = a1 + v7[9];
    uint64_t v18 = type metadata accessor for DetailHeroChartLollipopPosition(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, v18)) {
      v6(v17 + *(int *)(v18 + 20), v5);
    }
    uint64_t v19 = (int *)type metadata accessor for PrecipitationAveragesDetailInput();
    uint64_t v20 = a1 + v19[5];
    uint64_t v21 = type metadata accessor for Calendar();
    v70 = *(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8);
    v70(v20, v21);
    v22 = (int *)type metadata accessor for MonthlyAveragesChartInput();
    uint64_t v74 = v5;
    v6(v20 + v22[5], v5);
    uint64_t v23 = v20 + v22[6];
    uint64_t v24 = type metadata accessor for TemperatureScaleConfiguration();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
    uint64_t v25 = v20 + v22[7];
    uint64_t v26 = sub_10017DF08(&qword_100E65258);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
    uint64_t v27 = v20 + v22[8];
    uint64_t v28 = sub_10017DF08(&qword_100E6B7D0);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
    v72(v20 + v22[9], v15);
    swift_bridgeObjectRelease();
    uint64_t v29 = a1 + v19[7];
    type metadata accessor for NewsDataModel();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v55 = type metadata accessor for News();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v55 - 8) + 8))(v29, v55);
    }
    a2 = v75;
    v70(a1 + v19[8], v21);
    v6(a1 + v19[9], v74);
    uint64_t v56 = a1 + v19[10];
    uint64_t v57 = type metadata accessor for Location();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v57 - 8) + 8))(v56, v57);
    v58 = (id *)(a1 + v19[11]);
  }
  uint64_t v62 = a1 + *(int *)(a2 + 24);
  uint64_t v63 = type metadata accessor for Location();
  uint64_t v64 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v63 - 8) + 8);

  return v64(v62, v63);
}

char *sub_100504BC8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AveragesDetailInput.Content(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v166 = a3;
    *(void *)a1 = *(void *)a2;
    uint64_t v32 = (int *)type metadata accessor for TemperatureAveragesHeroChartInput();
    uint64_t v33 = v32[5];
    uint64_t v34 = &a1[v33];
    uint64_t v35 = &a2[v33];
    uint64_t v36 = type metadata accessor for TimeZone();
    uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
    swift_bridgeObjectRetain();
    v153 = v37;
    uint64_t v154 = v36;
    v37(v34, v35, v36);
    uint64_t v38 = v32[6];
    uint64_t v39 = &a1[v38];
    uint64_t v40 = &a2[v38];
    uint64_t v41 = type metadata accessor for Locale();
    uint64_t v156 = *(void (**)(char *, char *))(*(void *)(v41 - 8) + 16);
    uint64_t v158 = v41;
    v156(v39, v40);
    *(void *)&a1[v32[7]] = *(void *)&a2[v32[7]];
    uint64_t v42 = v32[8];
    uint64_t v43 = &a1[v42];
    uint64_t v44 = &a2[v42];
    uint64_t v45 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, (uint64_t)v45))
    {
      uint64_t v46 = sub_10017DF08(&qword_100E6B670);
      memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v43 = *(void *)v44;
      uint64_t v89 = v45[5];
      id v90 = &v43[v89];
      uint64_t v91 = &v44[v89];
      uint64_t v92 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 16))(v90, v91, v92);
      *(void *)&v43[v45[6]] = *(void *)&v44[v45[6]];
      *(void *)&v43[v45[7]] = *(void *)&v44[v45[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, (uint64_t)v45);
    }
    uint64_t v93 = v32[9];
    uint64_t v94 = &a1[v93];
    uint64_t v95 = &a2[v93];
    uint64_t v96 = type metadata accessor for Date();
    v97 = *(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 16);
    v97(v94, v95, v96);
    v97(&a1[v32[10]], &a2[v32[10]], v96);
    uint64_t v98 = v32[11];
    v99 = &a1[v98];
    uint64_t v100 = &a2[v98];
    uint64_t v101 = sub_10017DF08(&qword_100E6B7C8);
    uint64_t v151 = *(void (**)(char *, char *))(*(void *)(v101 - 8) + 16);
    uint64_t v152 = v101;
    v151(v99, v100);
    v102 = (int *)type metadata accessor for TemperatureAveragesDetailInput();
    uint64_t v103 = v102[5];
    v104 = &a1[v103];
    uint64_t v105 = &a2[v103];
    uint64_t v106 = type metadata accessor for Calendar();
    v160 = *(void (**)(char *, char *))(*(void *)(v106 - 8) + 16);
    uint64_t v162 = v106;
    v160(v104, v105);
    v107 = (int *)type metadata accessor for MonthlyAveragesChartInput();
    v164 = v97;
    v97(&v104[v107[5]], &v105[v107[5]], v96);
    uint64_t v108 = v107[6];
    v109 = &v104[v108];
    uint64_t v110 = &v105[v108];
    uint64_t v111 = type metadata accessor for TemperatureScaleConfiguration();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 16))(v109, v110, v111);
    uint64_t v112 = v107[7];
    uint64_t v113 = &v104[v112];
    uint64_t v114 = &v105[v112];
    uint64_t v115 = sub_10017DF08(&qword_100E65258);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 16))(v113, v114, v115);
    uint64_t v116 = v107[8];
    uint64_t v117 = &v104[v116];
    uint64_t v118 = &v105[v116];
    uint64_t v119 = sub_10017DF08(&qword_100E6B7D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 16))(v117, v118, v119);
    ((void (*)(char *, char *, uint64_t))v156)(&v104[v107[9]], &v105[v107[9]], v158);
    *(void *)&a1[v102[6]] = *(void *)&a2[v102[6]];
    uint64_t v120 = v102[7];
    uint64_t v121 = &a1[v120];
    uint64_t v122 = &a2[v120];
    type metadata accessor for NewsDataModel();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v121 = *(void *)v122;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v123 = type metadata accessor for News();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 16))(v121, v122, v123);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v124 = v102[8];
    uint64_t v125 = &a1[v124];
    uint64_t v126 = &a2[v124];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v124], 1, v152))
    {
      uint64_t v127 = sub_10017DF08(&qword_100E6B7D8);
      memcpy(v125, v126, *(void *)(*(void *)(v127 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v151)(v125, v126, v152);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v125, 0, 1, v152);
    }
    v153(&a1[v102[9]], &a2[v102[9]], v154);
    v164(&a1[v102[10]], &a2[v102[10]], v96);
    uint64_t v128 = v102[11];
    uint64_t v129 = &a1[v128];
    uint64_t v130 = &a2[v128];
    v131 = *(void **)v130;
    v132 = (void *)*((void *)v130 + 1);
    *(void *)uint64_t v129 = *(void *)v130;
    *((void *)v129 + 1) = v132;
    v133 = (void *)*((void *)v130 + 2);
    v134 = (void *)*((void *)v130 + 3);
    *((void *)v129 + 2) = v133;
    *((void *)v129 + 3) = v134;
    v135 = (void *)*((void *)v130 + 4);
    v136 = (void *)*((void *)v130 + 5);
    *((void *)v129 + 4) = v135;
    *((void *)v129 + 5) = v136;
    uint64_t v137 = v102[12];
    v138 = &a1[v137];
    uint64_t v139 = &a2[v137];
    id v140 = v131;
    id v141 = v132;
    id v142 = v133;
    id v143 = v134;
    id v144 = v135;
    id v145 = v136;
    ((void (*)(char *, char *, uint64_t))v160)(v138, v139, v162);
    swift_storeEnumTagMultiPayload();
    a3 = v166;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
    v9(a1, a2, v8);
    uint64_t v10 = (int *)type metadata accessor for PrecipitationAveragesHeroChartInput();
    uint64_t v11 = v10[5];
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    uint64_t v14 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    uint64_t v15 = v10[6];
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    uint64_t v18 = sub_10017DF08(&qword_100E66CA0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    uint64_t v19 = v10[7];
    uint64_t v20 = &a1[v19];
    uint64_t v21 = &a2[v19];
    uint64_t v22 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
    uint64_t v23 = v10[8];
    uint64_t v24 = &a1[v23];
    uint64_t v25 = &a2[v23];
    uint64_t v26 = type metadata accessor for Locale();
    v161 = *(void (**)(char *, char *))(*(void *)(v26 - 8) + 16);
    uint64_t v163 = v26;
    v161(v24, v25);
    uint64_t v27 = v10[9];
    uint64_t v28 = &a1[v27];
    uint64_t v29 = &a2[v27];
    v30 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
    uint64_t v165 = a3;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, (uint64_t)v30))
    {
      uint64_t v31 = sub_10017DF08(&qword_100E6B670);
      memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v28 = *(void *)v29;
      v9(&v28[v30[5]], &v29[v30[5]], v8);
      *(void *)&v28[v30[6]] = *(void *)&v29[v30[6]];
      *(void *)&v28[v30[7]] = *(void *)&v29[v30[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, (uint64_t)v30);
    }
    v47 = v9;
    uint64_t v48 = (int *)type metadata accessor for PrecipitationAveragesDetailInput();
    uint64_t v49 = v48[5];
    uint64_t v50 = &a1[v49];
    uint64_t v51 = &a2[v49];
    uint64_t v52 = type metadata accessor for Calendar();
    uint64_t v159 = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16);
    v159(v50, v51, v52);
    uint64_t v53 = (int *)type metadata accessor for MonthlyAveragesChartInput();
    v155 = v47;
    uint64_t v157 = v8;
    v47(&v50[v53[5]], &v51[v53[5]], v8);
    uint64_t v54 = v53[6];
    uint64_t v55 = &v50[v54];
    uint64_t v56 = &v51[v54];
    uint64_t v57 = type metadata accessor for TemperatureScaleConfiguration();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v55, v56, v57);
    uint64_t v58 = v53[7];
    uint64_t v59 = &v50[v58];
    uint64_t v60 = &v51[v58];
    uint64_t v61 = sub_10017DF08(&qword_100E65258);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
    uint64_t v62 = v53[8];
    uint64_t v63 = &v50[v62];
    uint64_t v64 = &v51[v62];
    uint64_t v65 = sub_10017DF08(&qword_100E6B7D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(v63, v64, v65);
    ((void (*)(char *, char *, uint64_t))v161)(&v50[v53[9]], &v51[v53[9]], v163);
    *(void *)&a1[v48[6]] = *(void *)&a2[v48[6]];
    uint64_t v66 = v48[7];
    uint64_t v67 = &a1[v66];
    uint64_t v68 = &a2[v66];
    type metadata accessor for NewsDataModel();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v67 = *(void *)v68;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v69 = type metadata accessor for News();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v67, v68, v69);
    }
    swift_storeEnumTagMultiPayload();
    v159(&a1[v48[8]], &a2[v48[8]], v52);
    v155(&a1[v48[9]], &a2[v48[9]], v157);
    uint64_t v70 = v48[10];
    uint64_t v71 = &a1[v70];
    uint64_t v72 = &a2[v70];
    uint64_t v73 = type metadata accessor for Location();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
    uint64_t v74 = v48[11];
    uint64_t v75 = &a1[v74];
    uint64_t v76 = &a2[v74];
    v77 = *(void **)v76;
    v78 = (void *)*((void *)v76 + 1);
    *(void *)uint64_t v75 = *(void *)v76;
    *((void *)v75 + 1) = v78;
    v79 = (void *)*((void *)v76 + 2);
    v80 = (void *)*((void *)v76 + 3);
    *((void *)v75 + 2) = v79;
    *((void *)v75 + 3) = v80;
    v81 = (void *)*((void *)v76 + 4);
    v82 = (void *)*((void *)v76 + 5);
    *((void *)v75 + 4) = v81;
    *((void *)v75 + 5) = v82;
    id v83 = v77;
    id v84 = v78;
    id v85 = v79;
    id v86 = v80;
    id v87 = v81;
    id v88 = v82;
    swift_storeEnumTagMultiPayload();
    a3 = v165;
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v146 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  id v147 = &a1[v146];
  uint64_t v148 = &a2[v146];
  uint64_t v149 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 16))(v147, v148, v149);
  return a1;
}

char *sub_1005057DC(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10050C208((uint64_t)a1, (void (*)(void))type metadata accessor for AveragesDetailInput.Content);
    uint64_t v6 = type metadata accessor for AveragesDetailInput.Content(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)a1 = *(void *)a2;
      uint64_t v32 = (int *)type metadata accessor for TemperatureAveragesHeroChartInput();
      uint64_t v33 = v32[5];
      uint64_t v34 = &a1[v33];
      uint64_t v35 = &a2[v33];
      uint64_t v36 = type metadata accessor for TimeZone();
      uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
      swift_bridgeObjectRetain();
      v153 = v37;
      uint64_t v154 = v36;
      v37(v34, v35, v36);
      uint64_t v38 = v32;
      uint64_t v39 = v32[6];
      uint64_t v40 = &a1[v39];
      uint64_t v41 = &a2[v39];
      uint64_t v42 = type metadata accessor for Locale();
      v155 = *(void (**)(char *, char *))(*(void *)(v42 - 8) + 16);
      uint64_t v157 = v42;
      v155(v40, v41);
      *(void *)&a1[v32[7]] = *(void *)&a2[v32[7]];
      uint64_t v43 = v32[8];
      uint64_t v44 = &a1[v43];
      uint64_t v45 = &a2[v43];
      uint64_t v46 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      swift_bridgeObjectRetain();
      uint64_t v165 = a3;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, (uint64_t)v46))
      {
        uint64_t v47 = sub_10017DF08(&qword_100E6B670);
        memcpy(v44, v45, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        *(void *)uint64_t v44 = *(void *)v45;
        uint64_t v89 = v46[5];
        id v90 = &v44[v89];
        uint64_t v91 = &v45[v89];
        uint64_t v92 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 16))(v90, v91, v92);
        *(void *)&v44[v46[6]] = *(void *)&v45[v46[6]];
        *(void *)&v44[v46[7]] = *(void *)&v45[v46[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, (uint64_t)v46);
      }
      uint64_t v93 = v32[9];
      uint64_t v94 = &a1[v93];
      uint64_t v95 = &a2[v93];
      uint64_t v96 = type metadata accessor for Date();
      v97 = *(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 16);
      v97(v94, v95, v96);
      v97(&a1[v38[10]], &a2[v38[10]], v96);
      uint64_t v98 = v38[11];
      v99 = &a1[v98];
      uint64_t v100 = &a2[v98];
      uint64_t v101 = sub_10017DF08(&qword_100E6B7C8);
      uint64_t v151 = *(void (**)(char *, char *))(*(void *)(v101 - 8) + 16);
      uint64_t v152 = v101;
      v151(v99, v100);
      v102 = (int *)type metadata accessor for TemperatureAveragesDetailInput();
      uint64_t v103 = v102[5];
      v104 = &a1[v103];
      uint64_t v105 = &a2[v103];
      uint64_t v106 = type metadata accessor for Calendar();
      uint64_t v159 = *(void (**)(char *, char *))(*(void *)(v106 - 8) + 16);
      uint64_t v161 = v106;
      v159(v104, v105);
      v107 = (int *)type metadata accessor for MonthlyAveragesChartInput();
      uint64_t v163 = v97;
      v97(&v104[v107[5]], &v105[v107[5]], v96);
      uint64_t v108 = v107[6];
      v109 = &v104[v108];
      uint64_t v110 = &v105[v108];
      uint64_t v111 = type metadata accessor for TemperatureScaleConfiguration();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 16))(v109, v110, v111);
      uint64_t v112 = v107[7];
      uint64_t v113 = &v104[v112];
      uint64_t v114 = &v105[v112];
      uint64_t v115 = sub_10017DF08(&qword_100E65258);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 16))(v113, v114, v115);
      uint64_t v116 = v107[8];
      uint64_t v117 = &v104[v116];
      uint64_t v118 = &v105[v116];
      uint64_t v119 = sub_10017DF08(&qword_100E6B7D0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 16))(v117, v118, v119);
      ((void (*)(char *, char *, uint64_t))v155)(&v104[v107[9]], &v105[v107[9]], v157);
      *(void *)&a1[v102[6]] = *(void *)&a2[v102[6]];
      uint64_t v120 = v102[7];
      uint64_t v121 = &a1[v120];
      uint64_t v122 = &a2[v120];
      type metadata accessor for NewsDataModel();
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)uint64_t v121 = *(void *)v122;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v123 = type metadata accessor for News();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 16))(v121, v122, v123);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v124 = v102[8];
      uint64_t v125 = &a1[v124];
      uint64_t v126 = &a2[v124];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v124], 1, v152))
      {
        uint64_t v127 = sub_10017DF08(&qword_100E6B7D8);
        memcpy(v125, v126, *(void *)(*(void *)(v127 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v151)(v125, v126, v152);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v125, 0, 1, v152);
      }
      v153(&a1[v102[9]], &a2[v102[9]], v154);
      v163(&a1[v102[10]], &a2[v102[10]], v96);
      uint64_t v128 = v102[11];
      uint64_t v129 = &a1[v128];
      uint64_t v130 = &a2[v128];
      v131 = *(void **)v130;
      *(void *)uint64_t v129 = *(void *)v130;
      v132 = (void *)*((void *)v130 + 1);
      *((void *)v129 + 1) = v132;
      v133 = (void *)*((void *)v130 + 2);
      *((void *)v129 + 2) = v133;
      v134 = (void *)*((void *)v130 + 3);
      *((void *)v129 + 3) = v134;
      v135 = (void *)*((void *)v130 + 4);
      *((void *)v129 + 4) = v135;
      v136 = (void *)*((void *)v130 + 5);
      *((void *)v129 + 5) = v136;
      uint64_t v137 = v102[12];
      v138 = &a1[v137];
      uint64_t v139 = &a2[v137];
      id v140 = v131;
      id v141 = v132;
      id v142 = v133;
      id v143 = v134;
      id v144 = v135;
      id v145 = v136;
      ((void (*)(char *, char *, uint64_t))v159)(v138, v139, v161);
      swift_storeEnumTagMultiPayload();
      a3 = v165;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = type metadata accessor for Date();
      uint64_t v9 = (void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
      uint64_t v162 = *v9;
      (*v9)(a1, a2, v8);
      uint64_t v10 = (int *)type metadata accessor for PrecipitationAveragesHeroChartInput();
      uint64_t v11 = v10[5];
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v14 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      uint64_t v15 = v10[6];
      uint64_t v16 = &a1[v15];
      uint64_t v17 = &a2[v15];
      uint64_t v18 = sub_10017DF08(&qword_100E66CA0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      uint64_t v19 = v10[7];
      uint64_t v20 = &a1[v19];
      uint64_t v21 = &a2[v19];
      uint64_t v22 = type metadata accessor for TimeZone();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
      uint64_t v23 = v10[8];
      uint64_t v24 = &a1[v23];
      uint64_t v25 = &a2[v23];
      uint64_t v26 = type metadata accessor for Locale();
      v160 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
      v160(v24, v25, v26);
      uint64_t v27 = v10[9];
      uint64_t v28 = &a1[v27];
      uint64_t v29 = &a2[v27];
      v30 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      uint64_t v164 = a3;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, (uint64_t)v30))
      {
        uint64_t v31 = sub_10017DF08(&qword_100E6B670);
        memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        *(void *)uint64_t v28 = *(void *)v29;
        v162(&v28[v30[5]], &v29[v30[5]], v8);
        *(void *)&v28[v30[6]] = *(void *)&v29[v30[6]];
        *(void *)&v28[v30[7]] = *(void *)&v29[v30[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, (uint64_t)v30);
      }
      uint64_t v48 = (int *)type metadata accessor for PrecipitationAveragesDetailInput();
      uint64_t v49 = v48[5];
      uint64_t v50 = &a1[v49];
      uint64_t v51 = &a2[v49];
      uint64_t v52 = type metadata accessor for Calendar();
      uint64_t v158 = *(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16);
      v158(v50, v51, v52);
      uint64_t v53 = (int *)type metadata accessor for MonthlyAveragesChartInput();
      uint64_t v156 = v8;
      v162(&v50[v53[5]], &v51[v53[5]], v8);
      uint64_t v54 = v53[6];
      uint64_t v55 = &v50[v54];
      uint64_t v56 = &v51[v54];
      uint64_t v57 = type metadata accessor for TemperatureScaleConfiguration();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v55, v56, v57);
      uint64_t v58 = v53[7];
      uint64_t v59 = &v50[v58];
      uint64_t v60 = &v51[v58];
      uint64_t v61 = sub_10017DF08(&qword_100E65258);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
      uint64_t v62 = v53[8];
      uint64_t v63 = &v50[v62];
      uint64_t v64 = &v51[v62];
      uint64_t v65 = sub_10017DF08(&qword_100E6B7D0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(v63, v64, v65);
      v160(&v50[v53[9]], &v51[v53[9]], v26);
      *(void *)&a1[v48[6]] = *(void *)&a2[v48[6]];
      uint64_t v66 = v48[7];
      uint64_t v67 = &a1[v66];
      uint64_t v68 = &a2[v66];
      type metadata accessor for NewsDataModel();
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)uint64_t v67 = *(void *)v68;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v69 = type metadata accessor for News();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16))(v67, v68, v69);
      }
      a3 = v164;
      swift_storeEnumTagMultiPayload();
      v158(&a1[v48[8]], &a2[v48[8]], v52);
      v162(&a1[v48[9]], &a2[v48[9]], v156);
      uint64_t v70 = v48[10];
      uint64_t v71 = &a1[v70];
      uint64_t v72 = &a2[v70];
      uint64_t v73 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(v71, v72, v73);
      uint64_t v74 = v48[11];
      uint64_t v75 = &a1[v74];
      uint64_t v76 = &a2[v74];
      v77 = *(void **)v76;
      *(void *)uint64_t v75 = *(void *)v76;
      v78 = (void *)*((void *)v76 + 1);
      *((void *)v75 + 1) = v78;
      v79 = (void *)*((void *)v76 + 2);
      *((void *)v75 + 2) = v79;
      v80 = (void *)*((void *)v76 + 3);
      *((void *)v75 + 3) = v80;
      v81 = (void *)*((void *)v76 + 4);
      *((void *)v75 + 4) = v81;
      v82 = (void *)*((void *)v76 + 5);
      *((void *)v75 + 5) = v82;
      id v83 = v77;
      id v84 = v78;
      id v85 = v79;
      id v86 = v80;
      id v87 = v81;
      id v88 = v82;
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  uint64_t v146 = *(int *)(a3 + 24);
  id v147 = &a1[v146];
  uint64_t v148 = &a2[v146];
  uint64_t v149 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 24))(v147, v148, v149);
  return a1;
}

char *sub_100506450(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AveragesDetailInput.Content(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v138 = a3;
    *(void *)a1 = *(void *)a2;
    uint64_t v32 = (int *)type metadata accessor for TemperatureAveragesHeroChartInput();
    uint64_t v33 = v32[5];
    uint64_t v34 = &a1[v33];
    uint64_t v35 = &a2[v33];
    uint64_t v36 = type metadata accessor for TimeZone();
    v134 = *(void (**)(char *, char *))(*(void *)(v36 - 8) + 32);
    uint64_t v136 = v36;
    v134(v34, v35);
    uint64_t v37 = v32[6];
    uint64_t v38 = &a1[v37];
    uint64_t v39 = &a2[v37];
    uint64_t v130 = type metadata accessor for Locale();
    uint64_t v127 = *(void (**)(char *, char *))(*(void *)(v130 - 8) + 32);
    v127(v38, v39);
    *(void *)&a1[v32[7]] = *(void *)&a2[v32[7]];
    uint64_t v40 = v32[8];
    uint64_t v41 = &a1[v40];
    uint64_t v42 = &a2[v40];
    uint64_t v43 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, (uint64_t)v43))
    {
      uint64_t v44 = sub_10017DF08(&qword_100E6B670);
      memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v41 = *(void *)v42;
      uint64_t v68 = v43[5];
      uint64_t v69 = &v41[v68];
      uint64_t v70 = &v42[v68];
      uint64_t v71 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v69, v70, v71);
      *(void *)&v41[v43[6]] = *(void *)&v42[v43[6]];
      *(void *)&v41[v43[7]] = *(void *)&v42[v43[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, (uint64_t)v43);
    }
    uint64_t v72 = v32[9];
    uint64_t v73 = &a1[v72];
    uint64_t v74 = &a2[v72];
    uint64_t v75 = type metadata accessor for Date();
    uint64_t v76 = *(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32);
    v76(v73, v74, v75);
    v76(&a1[v32[10]], &a2[v32[10]], v75);
    uint64_t v77 = v32[11];
    v78 = &a1[v77];
    v79 = &a2[v77];
    uint64_t v80 = sub_10017DF08(&qword_100E6B7C8);
    uint64_t v125 = *(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 32);
    v125(v78, v79, v80);
    v81 = (int *)type metadata accessor for TemperatureAveragesDetailInput();
    uint64_t v82 = v81[5];
    id v83 = &a1[v82];
    id v84 = &a2[v82];
    uint64_t v129 = type metadata accessor for Calendar();
    uint64_t v126 = *(void (**)(char *, char *))(*(void *)(v129 - 8) + 32);
    v126(v83, v84);
    id v85 = (int *)type metadata accessor for MonthlyAveragesChartInput();
    v133 = v76;
    v76(&v83[v85[5]], &v84[v85[5]], v75);
    uint64_t v86 = v85[6];
    id v87 = &v83[v86];
    id v88 = &v84[v86];
    uint64_t v89 = type metadata accessor for TemperatureScaleConfiguration();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 32))(v87, v88, v89);
    uint64_t v90 = v85[7];
    uint64_t v91 = &v83[v90];
    uint64_t v92 = &v84[v90];
    uint64_t v93 = sub_10017DF08(&qword_100E65258);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 32))(v91, v92, v93);
    uint64_t v94 = v85[8];
    uint64_t v95 = &v83[v94];
    uint64_t v96 = &v84[v94];
    uint64_t v97 = sub_10017DF08(&qword_100E6B7D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 32))(v95, v96, v97);
    ((void (*)(char *, char *, uint64_t))v127)(&v83[v85[9]], &v84[v85[9]], v130);
    *(void *)&a1[v81[6]] = *(void *)&a2[v81[6]];
    uint64_t v98 = v81[7];
    v99 = &a1[v98];
    uint64_t v100 = &a2[v98];
    uint64_t v101 = type metadata accessor for NewsDataModel();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v99, v100, *(void *)(*(void *)(v101 - 8) + 64));
    }
    else
    {
      uint64_t v111 = type metadata accessor for News();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 32))(v99, v100, v111);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v112 = v81[8];
    uint64_t v113 = &a1[v112];
    uint64_t v114 = &a2[v112];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v112], 1, v80))
    {
      uint64_t v115 = sub_10017DF08(&qword_100E6B7D8);
      memcpy(v113, v114, *(void *)(*(void *)(v115 - 8) + 64));
    }
    else
    {
      v125(v113, v114, v80);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v113, 0, 1, v80);
    }
    ((void (*)(char *, char *, uint64_t))v134)(&a1[v81[9]], &a2[v81[9]], v136);
    v133(&a1[v81[10]], &a2[v81[10]], v75);
    uint64_t v116 = v81[11];
    uint64_t v117 = &a1[v116];
    uint64_t v118 = &a2[v116];
    long long v119 = *((_OWORD *)v118 + 1);
    *(_OWORD *)uint64_t v117 = *(_OWORD *)v118;
    *((_OWORD *)v117 + 1) = v119;
    *((_OWORD *)v117 + 2) = *((_OWORD *)v118 + 2);
    ((void (*)(char *, char *, uint64_t))v126)(&a1[v81[12]], &a2[v81[12]], v129);
    goto LABEL_21;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v138 = a3;
    uint64_t v8 = type metadata accessor for Date();
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32);
    v9(a1, a2, v8);
    uint64_t v10 = (int *)type metadata accessor for PrecipitationAveragesHeroChartInput();
    uint64_t v11 = v10[5];
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    uint64_t v14 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    uint64_t v15 = v10[6];
    uint64_t v16 = &a1[v15];
    uint64_t v17 = &a2[v15];
    uint64_t v18 = sub_10017DF08(&qword_100E66CA0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
    uint64_t v19 = v10[7];
    uint64_t v20 = &a1[v19];
    uint64_t v21 = &a2[v19];
    uint64_t v22 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
    uint64_t v23 = v10[8];
    uint64_t v24 = &a1[v23];
    uint64_t v25 = &a2[v23];
    uint64_t v26 = type metadata accessor for Locale();
    v131 = *(void (**)(char *, char *))(*(void *)(v26 - 8) + 32);
    uint64_t v132 = v26;
    v131(v24, v25);
    uint64_t v27 = v10[9];
    uint64_t v28 = &a1[v27];
    uint64_t v29 = &a2[v27];
    v30 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, (uint64_t)v30))
    {
      uint64_t v31 = sub_10017DF08(&qword_100E6B670);
      memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v28 = *(void *)v29;
      v9(&v28[v30[5]], &v29[v30[5]], v8);
      *(void *)&v28[v30[6]] = *(void *)&v29[v30[6]];
      *(void *)&v28[v30[7]] = *(void *)&v29[v30[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, (uint64_t)v30);
    }
    uint64_t v45 = v9;
    uint64_t v46 = (int *)type metadata accessor for PrecipitationAveragesDetailInput();
    uint64_t v47 = v46[5];
    uint64_t v48 = &a1[v47];
    uint64_t v49 = &a2[v47];
    uint64_t v50 = type metadata accessor for Calendar();
    uint64_t v128 = *(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32);
    v128(v48, v49, v50);
    uint64_t v51 = (int *)type metadata accessor for MonthlyAveragesChartInput();
    v135 = v45;
    uint64_t v137 = v8;
    v45(&v48[v51[5]], &v49[v51[5]], v8);
    uint64_t v52 = v51[6];
    uint64_t v53 = &v48[v52];
    uint64_t v54 = &v49[v52];
    uint64_t v55 = type metadata accessor for TemperatureScaleConfiguration();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 32))(v53, v54, v55);
    uint64_t v56 = v51[7];
    uint64_t v57 = &v48[v56];
    uint64_t v58 = &v49[v56];
    uint64_t v59 = sub_10017DF08(&qword_100E65258);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
    uint64_t v60 = v51[8];
    uint64_t v61 = &v48[v60];
    uint64_t v62 = &v49[v60];
    uint64_t v63 = sub_10017DF08(&qword_100E6B7D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v61, v62, v63);
    ((void (*)(char *, char *, uint64_t))v131)(&v48[v51[9]], &v49[v51[9]], v132);
    *(void *)&a1[v46[6]] = *(void *)&a2[v46[6]];
    uint64_t v64 = v46[7];
    uint64_t v65 = &a1[v64];
    uint64_t v66 = &a2[v64];
    uint64_t v67 = type metadata accessor for NewsDataModel();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
    }
    else
    {
      uint64_t v102 = type metadata accessor for News();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32))(v65, v66, v102);
      swift_storeEnumTagMultiPayload();
    }
    v128(&a1[v46[8]], &a2[v46[8]], v50);
    v135(&a1[v46[9]], &a2[v46[9]], v137);
    uint64_t v103 = v46[10];
    v104 = &a1[v103];
    uint64_t v105 = &a2[v103];
    uint64_t v106 = type metadata accessor for Location();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 32))(v104, v105, v106);
    uint64_t v107 = v46[11];
    uint64_t v108 = &a1[v107];
    v109 = &a2[v107];
    long long v110 = *((_OWORD *)v109 + 1);
    *(_OWORD *)uint64_t v108 = *(_OWORD *)v109;
    *((_OWORD *)v108 + 1) = v110;
    *((_OWORD *)v108 + 2) = *((_OWORD *)v109 + 2);
LABEL_21:
    swift_storeEnumTagMultiPayload();
    a3 = v138;
    goto LABEL_22;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_22:
  uint64_t v120 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  uint64_t v121 = &a1[v120];
  uint64_t v122 = &a2[v120];
  uint64_t v123 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v123 - 8) + 32))(v121, v122, v123);
  return a1;
}

char *sub_100506FE4(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10050C208((uint64_t)a1, (void (*)(void))type metadata accessor for AveragesDetailInput.Content);
    uint64_t v6 = type metadata accessor for AveragesDetailInput.Content(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v139 = a3;
      *(void *)a1 = *(void *)a2;
      uint64_t v32 = (int *)type metadata accessor for TemperatureAveragesHeroChartInput();
      uint64_t v33 = v32[5];
      uint64_t v34 = &a1[v33];
      uint64_t v35 = &a2[v33];
      uint64_t v136 = type metadata accessor for TimeZone();
      v134 = *(void (**)(char *, char *))(*(void *)(v136 - 8) + 32);
      v134(v34, v35);
      uint64_t v36 = v32[6];
      uint64_t v37 = &a1[v36];
      uint64_t v38 = &a2[v36];
      uint64_t v129 = type metadata accessor for Locale();
      uint64_t v127 = *(void (**)(char *, char *))(*(void *)(v129 - 8) + 32);
      v127(v37, v38);
      *(void *)&a1[v32[7]] = *(void *)&a2[v32[7]];
      uint64_t v39 = v32[8];
      uint64_t v40 = &a1[v39];
      uint64_t v41 = &a2[v39];
      uint64_t v42 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, (uint64_t)v42))
      {
        uint64_t v43 = sub_10017DF08(&qword_100E6B670);
        memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        *(void *)uint64_t v40 = *(void *)v41;
        uint64_t v67 = v42[5];
        uint64_t v68 = &v40[v67];
        uint64_t v69 = &v41[v67];
        uint64_t v70 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 32))(v68, v69, v70);
        *(void *)&v40[v42[6]] = *(void *)&v41[v42[6]];
        *(void *)&v40[v42[7]] = *(void *)&v41[v42[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, (uint64_t)v42);
      }
      uint64_t v71 = v32[9];
      uint64_t v72 = &a1[v71];
      uint64_t v73 = &a2[v71];
      uint64_t v74 = type metadata accessor for Date();
      uint64_t v75 = *(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 32);
      v75(v72, v73, v74);
      v75(&a1[v32[10]], &a2[v32[10]], v74);
      uint64_t v76 = v32[11];
      uint64_t v77 = &a1[v76];
      v78 = &a2[v76];
      uint64_t v79 = sub_10017DF08(&qword_100E6B7C8);
      uint64_t v124 = *(void (**)(char *, char *))(*(void *)(v79 - 8) + 32);
      uint64_t v125 = v79;
      v124(v77, v78);
      uint64_t v80 = (int *)type metadata accessor for TemperatureAveragesDetailInput();
      uint64_t v81 = v80[5];
      uint64_t v82 = &a1[v81];
      id v83 = &a2[v81];
      uint64_t v128 = type metadata accessor for Calendar();
      uint64_t v126 = *(void (**)(char *, char *))(*(void *)(v128 - 8) + 32);
      v126(v82, v83);
      id v84 = (int *)type metadata accessor for MonthlyAveragesChartInput();
      v133 = v75;
      v75(&v82[v84[5]], &v83[v84[5]], v74);
      uint64_t v85 = v84[6];
      uint64_t v86 = &v82[v85];
      id v87 = &v83[v85];
      uint64_t v88 = type metadata accessor for TemperatureScaleConfiguration();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 32))(v86, v87, v88);
      uint64_t v89 = v84[7];
      uint64_t v90 = &v82[v89];
      uint64_t v91 = &v83[v89];
      uint64_t v92 = sub_10017DF08(&qword_100E65258);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 32))(v90, v91, v92);
      uint64_t v93 = v84[8];
      uint64_t v94 = &v82[v93];
      uint64_t v95 = &v83[v93];
      uint64_t v96 = sub_10017DF08(&qword_100E6B7D0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 32))(v94, v95, v96);
      ((void (*)(char *, char *, uint64_t))v127)(&v82[v84[9]], &v83[v84[9]], v129);
      *(void *)&a1[v80[6]] = *(void *)&a2[v80[6]];
      uint64_t v97 = v80[7];
      uint64_t v98 = &a1[v97];
      v99 = &a2[v97];
      uint64_t v100 = type metadata accessor for NewsDataModel();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v98, v99, *(void *)(*(void *)(v100 - 8) + 64));
      }
      else
      {
        uint64_t v110 = type metadata accessor for News();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 32))(v98, v99, v110);
        swift_storeEnumTagMultiPayload();
      }
      a3 = v139;
      uint64_t v111 = v80[8];
      uint64_t v112 = &a1[v111];
      uint64_t v113 = &a2[v111];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v111], 1, v125))
      {
        uint64_t v114 = sub_10017DF08(&qword_100E6B7D8);
        memcpy(v112, v113, *(void *)(*(void *)(v114 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v124)(v112, v113, v125);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v112, 0, 1, v125);
      }
      ((void (*)(char *, char *, uint64_t))v134)(&a1[v80[9]], &a2[v80[9]], v136);
      v133(&a1[v80[10]], &a2[v80[10]], v74);
      uint64_t v115 = v80[11];
      uint64_t v116 = &a1[v115];
      uint64_t v117 = &a2[v115];
      long long v118 = *((_OWORD *)v117 + 1);
      *(_OWORD *)uint64_t v116 = *(_OWORD *)v117;
      *((_OWORD *)v116 + 1) = v118;
      *((_OWORD *)v116 + 2) = *((_OWORD *)v117 + 2);
      ((void (*)(char *, char *, uint64_t))v126)(&a1[v80[12]], &a2[v80[12]], v128);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = type metadata accessor for Date();
      uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32);
      v9(a1, a2, v8);
      uint64_t v10 = (int *)type metadata accessor for PrecipitationAveragesHeroChartInput();
      uint64_t v11 = v10[5];
      uint64_t v12 = &a1[v11];
      uint64_t v13 = &a2[v11];
      uint64_t v14 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
      uint64_t v15 = v10[6];
      uint64_t v16 = &a1[v15];
      uint64_t v17 = &a2[v15];
      uint64_t v18 = sub_10017DF08(&qword_100E66CA0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      uint64_t v19 = v10[7];
      uint64_t v20 = &a1[v19];
      uint64_t v21 = &a2[v19];
      uint64_t v22 = type metadata accessor for TimeZone();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
      uint64_t v23 = v10[8];
      uint64_t v24 = &a1[v23];
      uint64_t v25 = &a2[v23];
      uint64_t v26 = type metadata accessor for Locale();
      v131 = *(void (**)(char *, char *))(*(void *)(v26 - 8) + 32);
      uint64_t v132 = v26;
      v131(v24, v25);
      uint64_t v27 = v10[9];
      uint64_t v28 = &a1[v27];
      uint64_t v29 = &a2[v27];
      v30 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      uint64_t v138 = a3;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, (uint64_t)v30))
      {
        uint64_t v31 = sub_10017DF08(&qword_100E6B670);
        memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        *(void *)uint64_t v28 = *(void *)v29;
        v9(&v28[v30[5]], &v29[v30[5]], v8);
        *(void *)&v28[v30[6]] = *(void *)&v29[v30[6]];
        *(void *)&v28[v30[7]] = *(void *)&v29[v30[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, (uint64_t)v30);
      }
      uint64_t v44 = v9;
      uint64_t v45 = (int *)type metadata accessor for PrecipitationAveragesDetailInput();
      uint64_t v46 = v45[5];
      uint64_t v47 = &a1[v46];
      uint64_t v48 = &a2[v46];
      uint64_t v49 = type metadata accessor for Calendar();
      uint64_t v130 = *(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32);
      v130(v47, v48, v49);
      uint64_t v50 = (int *)type metadata accessor for MonthlyAveragesChartInput();
      uint64_t v137 = v8;
      v135 = v44;
      v44(&v47[v50[5]], &v48[v50[5]], v8);
      uint64_t v51 = v50[6];
      uint64_t v52 = &v47[v51];
      uint64_t v53 = &v48[v51];
      uint64_t v54 = type metadata accessor for TemperatureScaleConfiguration();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v52, v53, v54);
      uint64_t v55 = v50[7];
      uint64_t v56 = &v47[v55];
      uint64_t v57 = &v48[v55];
      uint64_t v58 = sub_10017DF08(&qword_100E65258);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v56, v57, v58);
      uint64_t v59 = v50[8];
      uint64_t v60 = &v47[v59];
      uint64_t v61 = &v48[v59];
      uint64_t v62 = sub_10017DF08(&qword_100E6B7D0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
      ((void (*)(char *, char *, uint64_t))v131)(&v47[v50[9]], &v48[v50[9]], v132);
      *(void *)&a1[v45[6]] = *(void *)&a2[v45[6]];
      uint64_t v63 = v45[7];
      uint64_t v64 = &a1[v63];
      uint64_t v65 = &a2[v63];
      uint64_t v66 = type metadata accessor for NewsDataModel();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
      }
      else
      {
        uint64_t v101 = type metadata accessor for News();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v101 - 8) + 32))(v64, v65, v101);
        swift_storeEnumTagMultiPayload();
      }
      v130(&a1[v45[8]], &a2[v45[8]], v49);
      v135(&a1[v45[9]], &a2[v45[9]], v137);
      uint64_t v102 = v45[10];
      uint64_t v103 = &a1[v102];
      v104 = &a2[v102];
      uint64_t v105 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 32))(v103, v104, v105);
      uint64_t v106 = v45[11];
      uint64_t v107 = &a1[v106];
      uint64_t v108 = &a2[v106];
      long long v109 = *((_OWORD *)v108 + 1);
      *(_OWORD *)uint64_t v107 = *(_OWORD *)v108;
      *((_OWORD *)v107 + 1) = v109;
      *((_OWORD *)v107 + 2) = *((_OWORD *)v108 + 2);
      swift_storeEnumTagMultiPayload();
      a3 = v138;
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v119 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  uint64_t v120 = &a1[v119];
  uint64_t v121 = &a2[v119];
  uint64_t v122 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 40))(v120, v121, v122);
  return a1;
}

uint64_t sub_100507BB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100507BC8);
}

uint64_t sub_100507BC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10019EC30();
  if (*(_DWORD *)(v7 + 84) == v3)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v4;
  }
  else
  {
    if (v3 == 254)
    {
      unsigned int v10 = *(unsigned __int8 *)(v4 + *(int *)(a3 + 20));
      if (v10 >= 2) {
        return v10 - 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = type metadata accessor for Location();
    uint64_t v9 = v4 + *(int *)(a3 + 24);
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, v3, v8);
}

uint64_t sub_100507C60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100507C74);
}

uint64_t sub_100507C74(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10019EC30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = v5;
  }
  else
  {
    if (a3 == 254)
    {
      *(unsigned char *)(v5 + *(int *)(a4 + 20)) = v4 + 1;
      return result;
    }
    uint64_t v10 = type metadata accessor for Location();
    uint64_t v11 = v5 + *(int *)(a4 + 24);
  }

  return _s7Weather24LocationCompositionStateOwst_0(v11, v4, v4, v10);
}

uint64_t type metadata accessor for AveragesDetailInput(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E7D5F8);
}

uint64_t sub_100507D2C()
{
  uint64_t result = type metadata accessor for AveragesDetailInput.Content(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Location();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

char *sub_100507DFC(char *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v31 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)a1 = *a2;
      uint64_t v32 = (int *)type metadata accessor for TemperatureAveragesHeroChartInput();
      uint64_t v33 = v32[5];
      uint64_t v34 = &a1[v33];
      uint64_t v35 = (char *)a2 + v33;
      uint64_t v36 = type metadata accessor for TimeZone();
      uint64_t v37 = *(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v149 = v36;
      v37(v34, v35, v36);
      uint64_t v38 = v32[6];
      uint64_t v39 = &a1[v38];
      uint64_t v40 = (char *)a2 + v38;
      uint64_t v41 = type metadata accessor for Locale();
      v150 = *(void (**)(char *, char *))(*(void *)(v41 - 8) + 16);
      uint64_t v151 = v41;
      v150(v39, v40);
      *(void *)&a1[v32[7]] = *(uint64_t *)((char *)a2 + v32[7]);
      uint64_t v42 = v32[8];
      uint64_t v43 = &a1[v42];
      uint64_t v44 = (uint64_t *)((char *)a2 + v42);
      uint64_t v45 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      swift_bridgeObjectRetain();
      uint64_t v148 = v37;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, (uint64_t)v45))
      {
        uint64_t v46 = sub_10017DF08(&qword_100E6B670);
        memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        *(void *)uint64_t v43 = *v44;
        uint64_t v88 = v45[5];
        uint64_t v89 = &v43[v88];
        uint64_t v90 = (char *)v44 + v88;
        uint64_t v91 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 16))(v89, v90, v91);
        *(void *)&v43[v45[6]] = *(void *)((char *)v44 + v45[6]);
        *(void *)&v43[v45[7]] = *(void *)((char *)v44 + v45[7]);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, (uint64_t)v45);
      }
      uint64_t v92 = v32[9];
      uint64_t v93 = &a1[v92];
      uint64_t v94 = (char *)a2 + v92;
      uint64_t v95 = type metadata accessor for Date();
      uint64_t v96 = *(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 16);
      v96(v93, v94, v95);
      v96(&a1[v32[10]], (char *)a2 + v32[10], v95);
      uint64_t v97 = v32[11];
      uint64_t v98 = &a1[v97];
      v99 = (char *)a2 + v97;
      uint64_t v100 = sub_10017DF08(&qword_100E6B7C8);
      uint64_t v146 = *(void (**)(char *, char *))(*(void *)(v100 - 8) + 16);
      uint64_t v147 = v100;
      v146(v98, v99);
      uint64_t v101 = (int *)type metadata accessor for TemperatureAveragesDetailInput();
      uint64_t v102 = v101[5];
      uint64_t v103 = &a1[v102];
      v104 = (char *)a2 + v102;
      uint64_t v105 = type metadata accessor for Calendar();
      uint64_t v154 = *(void (**)(char *, char *))(*(void *)(v105 - 8) + 16);
      uint64_t v156 = v105;
      v154(v103, v104);
      uint64_t v106 = (int *)type metadata accessor for MonthlyAveragesChartInput();
      uint64_t v158 = v96;
      v96(&v103[v106[5]], &v104[v106[5]], v95);
      uint64_t v107 = v106[6];
      uint64_t v108 = &v103[v107];
      long long v109 = &v104[v107];
      uint64_t v110 = type metadata accessor for TemperatureScaleConfiguration();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v110 - 8) + 16))(v108, v109, v110);
      uint64_t v111 = v106[7];
      uint64_t v112 = &v103[v111];
      uint64_t v113 = &v104[v111];
      uint64_t v114 = sub_10017DF08(&qword_100E65258);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 16))(v112, v113, v114);
      uint64_t v115 = v106[8];
      uint64_t v116 = &v103[v115];
      uint64_t v117 = &v104[v115];
      uint64_t v118 = sub_10017DF08(&qword_100E6B7D0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 16))(v116, v117, v118);
      ((void (*)(char *, char *, uint64_t))v150)(&v103[v106[9]], &v104[v106[9]], v151);
      *(void *)&a1[v101[6]] = *(uint64_t *)((char *)a2 + v101[6]);
      uint64_t v119 = v101[7];
      uint64_t v120 = &a1[v119];
      uint64_t v121 = (uint64_t *)((char *)a2 + v119);
      type metadata accessor for NewsDataModel();
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)uint64_t v120 = *v121;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v122 = type metadata accessor for News();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v122 - 8) + 16))(v120, v121, v122);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v123 = v101[8];
      uint64_t v124 = &a1[v123];
      uint64_t v125 = (char *)a2 + v123;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2 + v123, 1, v147))
      {
        uint64_t v126 = sub_10017DF08(&qword_100E6B7D8);
        memcpy(v124, v125, *(void *)(*(void *)(v126 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v146)(v124, v125, v147);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v124, 0, 1, v147);
      }
      v148(&a1[v101[9]], (char *)a2 + v101[9], v149);
      v158(&a1[v101[10]], (char *)a2 + v101[10], v95);
      uint64_t v127 = v101[11];
      uint64_t v128 = &a1[v127];
      uint64_t v129 = (char *)a2 + v127;
      uint64_t v130 = *(void **)v129;
      v131 = (void *)*((void *)v129 + 1);
      *(void *)uint64_t v128 = *(void *)v129;
      *((void *)v128 + 1) = v131;
      uint64_t v132 = (void *)*((void *)v129 + 2);
      v133 = (void *)*((void *)v129 + 3);
      *((void *)v128 + 2) = v132;
      *((void *)v128 + 3) = v133;
      v134 = (void *)*((void *)v129 + 4);
      v135 = (void *)*((void *)v129 + 5);
      *((void *)v128 + 4) = v134;
      *((void *)v128 + 5) = v135;
      uint64_t v136 = v101[12];
      uint64_t v137 = &a1[v136];
      uint64_t v138 = (char *)a2 + v136;
      id v139 = v130;
      id v140 = v131;
      id v141 = v132;
      id v142 = v133;
      id v143 = v134;
      id v144 = v135;
      ((void (*)(char *, char *, uint64_t))v154)(v137, v138, v156);
      goto LABEL_23;
    }
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = type metadata accessor for Date();
      uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
      v9(a1, (char *)a2, v8);
      uint64_t v10 = (int *)type metadata accessor for PrecipitationAveragesHeroChartInput();
      uint64_t v11 = v10[5];
      uint64_t v12 = &a1[v11];
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      uint64_t v15 = v10[6];
      uint64_t v16 = &a1[v15];
      uint64_t v17 = (char *)a2 + v15;
      uint64_t v18 = sub_10017DF08(&qword_100E66CA0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      uint64_t v19 = v10[7];
      uint64_t v20 = &a1[v19];
      uint64_t v21 = (char *)a2 + v19;
      uint64_t v22 = type metadata accessor for TimeZone();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
      uint64_t v23 = v10[8];
      uint64_t v24 = &a1[v23];
      uint64_t v25 = (char *)a2 + v23;
      uint64_t v159 = type metadata accessor for Locale();
      uint64_t v157 = *(void (**)(char *, char *))(*(void *)(v159 - 8) + 16);
      v157(v24, v25);
      uint64_t v26 = v10[9];
      uint64_t v27 = &a1[v26];
      uint64_t v28 = (uint64_t *)((char *)a2 + v26);
      uint64_t v29 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, (uint64_t)v29))
      {
        uint64_t v30 = sub_10017DF08(&qword_100E6B670);
        memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        *(void *)uint64_t v27 = *v28;
        v9(&v27[v29[5]], (char *)v28 + v29[5], v8);
        *(void *)&v27[v29[6]] = *(void *)((char *)v28 + v29[6]);
        *(void *)&v27[v29[7]] = *(void *)((char *)v28 + v29[7]);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, (uint64_t)v29);
      }
      uint64_t v47 = (int *)type metadata accessor for PrecipitationAveragesDetailInput();
      uint64_t v48 = v47[5];
      uint64_t v49 = &a1[v48];
      uint64_t v50 = (char *)a2 + v48;
      uint64_t v51 = type metadata accessor for Calendar();
      v155 = *(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16);
      v155(v49, v50, v51);
      uint64_t v52 = (int *)type metadata accessor for MonthlyAveragesChartInput();
      uint64_t v152 = v9;
      uint64_t v153 = v8;
      v9(&v49[v52[5]], &v50[v52[5]], v8);
      uint64_t v53 = v52[6];
      uint64_t v54 = &v49[v53];
      uint64_t v55 = &v50[v53];
      uint64_t v56 = type metadata accessor for TemperatureScaleConfiguration();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
      uint64_t v57 = v52[7];
      uint64_t v58 = &v49[v57];
      uint64_t v59 = &v50[v57];
      uint64_t v60 = sub_10017DF08(&qword_100E65258);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
      uint64_t v61 = v52[8];
      uint64_t v62 = &v49[v61];
      uint64_t v63 = &v50[v61];
      uint64_t v64 = sub_10017DF08(&qword_100E6B7D0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16))(v62, v63, v64);
      ((void (*)(char *, char *, uint64_t))v157)(&v49[v52[9]], &v50[v52[9]], v159);
      *(void *)&a1[v47[6]] = *(uint64_t *)((char *)a2 + v47[6]);
      uint64_t v65 = v47[7];
      uint64_t v66 = &a1[v65];
      uint64_t v67 = (uint64_t *)((char *)a2 + v65);
      type metadata accessor for NewsDataModel();
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)uint64_t v66 = *v67;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v68 = type metadata accessor for News();
        (*(void (**)(char *, void *, uint64_t))(*(void *)(v68 - 8) + 16))(v66, v67, v68);
      }
      swift_storeEnumTagMultiPayload();
      v155(&a1[v47[8]], (char *)a2 + v47[8], v51);
      v152(&a1[v47[9]], (char *)a2 + v47[9], v153);
      uint64_t v69 = v47[10];
      uint64_t v70 = &a1[v69];
      uint64_t v71 = (char *)a2 + v69;
      uint64_t v72 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v72 - 8) + 16))(v70, v71, v72);
      uint64_t v73 = v47[11];
      uint64_t v74 = &a1[v73];
      uint64_t v75 = (char *)a2 + v73;
      uint64_t v76 = *(void **)v75;
      uint64_t v77 = (void *)*((void *)v75 + 1);
      *(void *)uint64_t v74 = *(void *)v75;
      *((void *)v74 + 1) = v77;
      v78 = (void *)*((void *)v75 + 2);
      uint64_t v79 = (void *)*((void *)v75 + 3);
      *((void *)v74 + 2) = v78;
      *((void *)v74 + 3) = v79;
      uint64_t v80 = (void *)*((void *)v75 + 4);
      uint64_t v81 = (void *)*((void *)v75 + 5);
      *((void *)v74 + 4) = v80;
      *((void *)v74 + 5) = v81;
      id v82 = v76;
      id v83 = v77;
      id v84 = v78;
      id v85 = v79;
      id v86 = v80;
      id v87 = v81;
LABEL_23:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

void sub_1005089E4(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    swift_bridgeObjectRelease();
    uint64_t v28 = (int *)type metadata accessor for TemperatureAveragesHeroChartInput();
    uint64_t v29 = a1 + v28[5];
    uint64_t v30 = type metadata accessor for TimeZone();
    uint64_t v63 = *(void (**)(uint64_t))(*(void *)(v30 - 8) + 8);
    uint64_t v64 = v30;
    v63(v29);
    uint64_t v31 = a1 + v28[6];
    uint64_t v32 = type metadata accessor for Locale();
    uint64_t v66 = *(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8);
    v66(v31, v32);
    swift_bridgeObjectRelease();
    uint64_t v33 = a1 + v28[8];
    uint64_t v34 = type metadata accessor for DetailHeroChartLollipopPosition(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v33, 1, v34))
    {
      uint64_t v35 = v33 + *(int *)(v34 + 20);
      uint64_t v36 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v35, v36);
    }
    uint64_t v37 = a1 + v28[9];
    uint64_t v38 = type metadata accessor for Date();
    uint64_t v39 = *(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8);
    v39(v37, v38);
    v39(a1 + v28[10], v38);
    uint64_t v40 = a1 + v28[11];
    uint64_t v41 = sub_10017DF08(&qword_100E6B7C8);
    uint64_t v62 = *(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8);
    v62(v40, v41);
    uint64_t v42 = (int *)type metadata accessor for TemperatureAveragesDetailInput();
    uint64_t v43 = a1 + v42[5];
    uint64_t v44 = type metadata accessor for Calendar();
    uint64_t v68 = *(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8);
    v68(v43, v44);
    uint64_t v45 = (int *)type metadata accessor for MonthlyAveragesChartInput();
    uint64_t v70 = v39;
    v39(v43 + v45[5], v38);
    uint64_t v46 = v43 + v45[6];
    uint64_t v47 = type metadata accessor for TemperatureScaleConfiguration();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v46, v47);
    uint64_t v48 = v43 + v45[7];
    uint64_t v49 = sub_10017DF08(&qword_100E65258);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v49 - 8) + 8))(v48, v49);
    uint64_t v50 = v43 + v45[8];
    uint64_t v51 = sub_10017DF08(&qword_100E6B7D0);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v51 - 8) + 8))(v50, v51);
    v66(v43 + v45[9], v32);
    swift_bridgeObjectRelease();
    uint64_t v52 = a1 + v42[7];
    type metadata accessor for NewsDataModel();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v58 = type metadata accessor for News();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v58 - 8) + 8))(v52, v58);
    }
    uint64_t v59 = a1 + v42[8];
    if (!_s7Weather24LocationCompositionStateOwet_0(v59, 1, v41)) {
      v62(v59, v41);
    }
    ((void (*)(uint64_t, uint64_t))v63)(a1 + v42[9], v64);
    v70(a1 + v42[10], v38);
    uint64_t v60 = (id *)(a1 + v42[11]);

    uint64_t v61 = a1 + v42[12];
    v68(v61, v44);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v3 = type metadata accessor for Date();
    uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    v4(a1, v3);
    int v5 = (int *)type metadata accessor for PrecipitationAveragesHeroChartInput();
    uint64_t v6 = a1 + v5[5];
    uint64_t v7 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    uint64_t v8 = a1 + v5[6];
    uint64_t v9 = sub_10017DF08(&qword_100E66CA0);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    uint64_t v10 = a1 + v5[7];
    uint64_t v11 = type metadata accessor for TimeZone();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    uint64_t v12 = a1 + v5[8];
    uint64_t v13 = type metadata accessor for Locale();
    uint64_t v14 = (void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
    uint64_t v69 = *v14;
    (*v14)(v12, v13);
    uint64_t v15 = a1 + v5[9];
    uint64_t v16 = type metadata accessor for DetailHeroChartLollipopPosition(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, v16)) {
      v4(v15 + *(int *)(v16 + 20), v3);
    }
    uint64_t v17 = (int *)type metadata accessor for PrecipitationAveragesDetailInput();
    uint64_t v18 = a1 + v17[5];
    uint64_t v19 = type metadata accessor for Calendar();
    uint64_t v65 = *(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8);
    v65(v18, v19);
    uint64_t v20 = (int *)type metadata accessor for MonthlyAveragesChartInput();
    uint64_t v67 = v3;
    v4(v18 + v20[5], v3);
    uint64_t v21 = v18 + v20[6];
    uint64_t v22 = type metadata accessor for TemperatureScaleConfiguration();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
    uint64_t v23 = v18 + v20[7];
    uint64_t v24 = sub_10017DF08(&qword_100E65258);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
    uint64_t v25 = v18 + v20[8];
    uint64_t v26 = sub_10017DF08(&qword_100E6B7D0);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
    v69(v18 + v20[9], v13);
    swift_bridgeObjectRelease();
    uint64_t v27 = a1 + v17[7];
    type metadata accessor for NewsDataModel();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v53 = type metadata accessor for News();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v53 - 8) + 8))(v27, v53);
    }
    v65(a1 + v17[8], v19);
    v4(a1 + v17[9], v67);
    uint64_t v54 = a1 + v17[10];
    uint64_t v55 = type metadata accessor for Location();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v55 - 8) + 8))(v54, v55);
    uint64_t v56 = a1 + v17[11];

    uint64_t v57 = *(void **)(v56 + 40);
  }
}

char *sub_10050930C(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *(void *)a1 = *(void *)a2;
    uint64_t v31 = (int *)type metadata accessor for TemperatureAveragesHeroChartInput();
    uint64_t v32 = v31[5];
    uint64_t v33 = &a1[v32];
    uint64_t v34 = &a2[v32];
    uint64_t v35 = type metadata accessor for TimeZone();
    uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16);
    swift_bridgeObjectRetain();
    uint64_t v147 = v36;
    uint64_t v148 = v35;
    v36(v33, v34, v35);
    uint64_t v37 = v31[6];
    uint64_t v38 = &a1[v37];
    uint64_t v39 = &a2[v37];
    uint64_t v40 = type metadata accessor for Locale();
    uint64_t v149 = *(void (**)(char *, char *))(*(void *)(v40 - 8) + 16);
    uint64_t v151 = v40;
    v149(v38, v39);
    *(void *)&a1[v31[7]] = *(void *)&a2[v31[7]];
    uint64_t v41 = v31[8];
    uint64_t v42 = &a1[v41];
    uint64_t v43 = &a2[v41];
    uint64_t v44 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, (uint64_t)v44))
    {
      uint64_t v45 = sub_10017DF08(&qword_100E6B670);
      memcpy(v42, v43, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v42 = *(void *)v43;
      uint64_t v87 = v44[5];
      uint64_t v88 = &v42[v87];
      uint64_t v89 = &v43[v87];
      uint64_t v90 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 16))(v88, v89, v90);
      *(void *)&v42[v44[6]] = *(void *)&v43[v44[6]];
      *(void *)&v42[v44[7]] = *(void *)&v43[v44[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, (uint64_t)v44);
    }
    uint64_t v91 = v31[9];
    uint64_t v92 = &a1[v91];
    uint64_t v93 = &a2[v91];
    uint64_t v94 = type metadata accessor for Date();
    uint64_t v95 = *(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 16);
    v95(v92, v93, v94);
    v95(&a1[v31[10]], &a2[v31[10]], v94);
    uint64_t v96 = v31[11];
    uint64_t v97 = &a1[v96];
    uint64_t v98 = &a2[v96];
    uint64_t v99 = sub_10017DF08(&qword_100E6B7C8);
    id v145 = *(void (**)(char *, char *))(*(void *)(v99 - 8) + 16);
    uint64_t v146 = v99;
    v145(v97, v98);
    uint64_t v100 = (int *)type metadata accessor for TemperatureAveragesDetailInput();
    uint64_t v101 = v100[5];
    uint64_t v102 = &a1[v101];
    uint64_t v103 = &a2[v101];
    uint64_t v104 = type metadata accessor for Calendar();
    uint64_t v154 = *(void (**)(char *, char *))(*(void *)(v104 - 8) + 16);
    uint64_t v155 = v104;
    v154(v102, v103);
    uint64_t v105 = (int *)type metadata accessor for MonthlyAveragesChartInput();
    uint64_t v158 = v95;
    v95(&v102[v105[5]], &v103[v105[5]], v94);
    uint64_t v106 = v105[6];
    uint64_t v107 = &v102[v106];
    uint64_t v108 = &v103[v106];
    uint64_t v109 = type metadata accessor for TemperatureScaleConfiguration();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 16))(v107, v108, v109);
    uint64_t v110 = v105[7];
    uint64_t v111 = &v102[v110];
    uint64_t v112 = &v103[v110];
    uint64_t v113 = sub_10017DF08(&qword_100E65258);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v113 - 8) + 16))(v111, v112, v113);
    uint64_t v114 = v105[8];
    uint64_t v115 = &v102[v114];
    uint64_t v116 = &v103[v114];
    uint64_t v117 = sub_10017DF08(&qword_100E6B7D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v117 - 8) + 16))(v115, v116, v117);
    ((void (*)(char *, char *, uint64_t))v149)(&v102[v105[9]], &v103[v105[9]], v151);
    *(void *)&a1[v100[6]] = *(void *)&a2[v100[6]];
    uint64_t v118 = v100[7];
    uint64_t v119 = &a1[v118];
    uint64_t v120 = &a2[v118];
    type metadata accessor for NewsDataModel();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v119 = *(void *)v120;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v121 = type metadata accessor for News();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 16))(v119, v120, v121);
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v122 = v100[8];
    uint64_t v123 = &a1[v122];
    uint64_t v124 = &a2[v122];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v122], 1, v146))
    {
      uint64_t v125 = sub_10017DF08(&qword_100E6B7D8);
      memcpy(v123, v124, *(void *)(*(void *)(v125 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v145)(v123, v124, v146);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v123, 0, 1, v146);
    }
    v147(&a1[v100[9]], &a2[v100[9]], v148);
    v158(&a1[v100[10]], &a2[v100[10]], v94);
    uint64_t v126 = v100[11];
    uint64_t v127 = &a1[v126];
    uint64_t v128 = &a2[v126];
    uint64_t v129 = *(void **)v128;
    uint64_t v130 = (void *)*((void *)v128 + 1);
    *(void *)uint64_t v127 = *(void *)v128;
    *((void *)v127 + 1) = v130;
    v131 = (void *)*((void *)v128 + 2);
    uint64_t v132 = (void *)*((void *)v128 + 3);
    *((void *)v127 + 2) = v131;
    *((void *)v127 + 3) = v132;
    v133 = (void *)*((void *)v128 + 4);
    v134 = (void *)*((void *)v128 + 5);
    *((void *)v127 + 4) = v133;
    *((void *)v127 + 5) = v134;
    uint64_t v135 = v100[12];
    uint64_t v136 = &a1[v135];
    uint64_t v137 = &a2[v135];
    id v138 = v129;
    id v139 = v130;
    id v140 = v131;
    id v141 = v132;
    id v142 = v133;
    id v143 = v134;
    ((void (*)(char *, char *, uint64_t))v154)(v136, v137, v155);
    goto LABEL_21;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = (int *)type metadata accessor for PrecipitationAveragesHeroChartInput();
    uint64_t v10 = v9[5];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    uint64_t v14 = v9[6];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    uint64_t v17 = sub_10017DF08(&qword_100E66CA0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    uint64_t v18 = v9[7];
    uint64_t v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    uint64_t v21 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    uint64_t v22 = v9[8];
    uint64_t v23 = &a1[v22];
    uint64_t v24 = &a2[v22];
    uint64_t v25 = type metadata accessor for Locale();
    uint64_t v156 = *(void (**)(char *, char *))(*(void *)(v25 - 8) + 16);
    uint64_t v157 = v25;
    v156(v23, v24);
    uint64_t v26 = v9[9];
    uint64_t v27 = &a1[v26];
    uint64_t v28 = &a2[v26];
    uint64_t v29 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, (uint64_t)v29))
    {
      uint64_t v30 = sub_10017DF08(&qword_100E6B670);
      memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v27 = *(void *)v28;
      v8(&v27[v29[5]], &v28[v29[5]], v7);
      *(void *)&v27[v29[6]] = *(void *)&v28[v29[6]];
      *(void *)&v27[v29[7]] = *(void *)&v28[v29[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, (uint64_t)v29);
    }
    uint64_t v46 = (int *)type metadata accessor for PrecipitationAveragesDetailInput();
    uint64_t v47 = v46[5];
    uint64_t v48 = &a1[v47];
    uint64_t v49 = &a2[v47];
    uint64_t v50 = type metadata accessor for Calendar();
    v150 = *(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16);
    v150(v48, v49, v50);
    uint64_t v51 = (int *)type metadata accessor for MonthlyAveragesChartInput();
    uint64_t v152 = v8;
    uint64_t v153 = v7;
    v8(&v48[v51[5]], &v49[v51[5]], v7);
    uint64_t v52 = v51[6];
    uint64_t v53 = &v48[v52];
    uint64_t v54 = &v49[v52];
    uint64_t v55 = type metadata accessor for TemperatureScaleConfiguration();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
    uint64_t v56 = v51[7];
    uint64_t v57 = &v48[v56];
    uint64_t v58 = &v49[v56];
    uint64_t v59 = sub_10017DF08(&qword_100E65258);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16))(v57, v58, v59);
    uint64_t v60 = v51[8];
    uint64_t v61 = &v48[v60];
    uint64_t v62 = &v49[v60];
    uint64_t v63 = sub_10017DF08(&qword_100E6B7D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v61, v62, v63);
    ((void (*)(char *, char *, uint64_t))v156)(&v48[v51[9]], &v49[v51[9]], v157);
    *(void *)&a1[v46[6]] = *(void *)&a2[v46[6]];
    uint64_t v64 = v46[7];
    uint64_t v65 = &a1[v64];
    uint64_t v66 = &a2[v64];
    type metadata accessor for NewsDataModel();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v65 = *(void *)v66;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v67 = type metadata accessor for News();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16))(v65, v66, v67);
    }
    swift_storeEnumTagMultiPayload();
    v150(&a1[v46[8]], &a2[v46[8]], v50);
    v152(&a1[v46[9]], &a2[v46[9]], v153);
    uint64_t v68 = v46[10];
    uint64_t v69 = &a1[v68];
    uint64_t v70 = &a2[v68];
    uint64_t v71 = type metadata accessor for Location();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16))(v69, v70, v71);
    uint64_t v72 = v46[11];
    uint64_t v73 = &a1[v72];
    uint64_t v74 = &a2[v72];
    uint64_t v75 = *(void **)v74;
    uint64_t v76 = (void *)*((void *)v74 + 1);
    *(void *)uint64_t v73 = *(void *)v74;
    *((void *)v73 + 1) = v76;
    uint64_t v77 = (void *)*((void *)v74 + 2);
    v78 = (void *)*((void *)v74 + 3);
    *((void *)v73 + 2) = v77;
    *((void *)v73 + 3) = v78;
    uint64_t v79 = (void *)*((void *)v74 + 4);
    uint64_t v80 = (void *)*((void *)v74 + 5);
    *((void *)v73 + 4) = v79;
    *((void *)v73 + 5) = v80;
    id v81 = v75;
    id v82 = v76;
    id v83 = v77;
    id v84 = v78;
    id v85 = v79;
    id v86 = v80;
LABEL_21:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *sub_100509EB4(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10050C208((uint64_t)a1, (void (*)(void))type metadata accessor for AveragesDetailInput.Content);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)a1 = *(void *)a2;
      uint64_t v30 = (int *)type metadata accessor for TemperatureAveragesHeroChartInput();
      uint64_t v31 = v30[5];
      uint64_t v32 = &a1[v31];
      uint64_t v33 = &a2[v31];
      uint64_t v34 = type metadata accessor for TimeZone();
      uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
      swift_bridgeObjectRetain();
      uint64_t v147 = v34;
      v35(v32, v33, v34);
      uint64_t v36 = v30[6];
      uint64_t v37 = &a1[v36];
      uint64_t v38 = &a2[v36];
      uint64_t v39 = type metadata accessor for Locale();
      uint64_t v148 = *(void (**)(char *, char *))(*(void *)(v39 - 8) + 16);
      uint64_t v149 = v39;
      v148(v37, v38);
      *(void *)&a1[v30[7]] = *(void *)&a2[v30[7]];
      uint64_t v40 = v30[8];
      uint64_t v41 = &a1[v40];
      uint64_t v42 = &a2[v40];
      uint64_t v43 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      swift_bridgeObjectRetain();
      uint64_t v146 = v35;
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, (uint64_t)v43))
      {
        uint64_t v44 = sub_10017DF08(&qword_100E6B670);
        memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        *(void *)uint64_t v41 = *(void *)v42;
        uint64_t v86 = v43[5];
        uint64_t v87 = &v41[v86];
        uint64_t v88 = &v42[v86];
        uint64_t v89 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 16))(v87, v88, v89);
        *(void *)&v41[v43[6]] = *(void *)&v42[v43[6]];
        *(void *)&v41[v43[7]] = *(void *)&v42[v43[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, (uint64_t)v43);
      }
      uint64_t v90 = v30[9];
      uint64_t v91 = &a1[v90];
      uint64_t v92 = &a2[v90];
      uint64_t v93 = type metadata accessor for Date();
      uint64_t v94 = *(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 16);
      v94(v91, v92, v93);
      v94(&a1[v30[10]], &a2[v30[10]], v93);
      uint64_t v95 = v30[11];
      uint64_t v96 = &a1[v95];
      uint64_t v97 = &a2[v95];
      uint64_t v98 = sub_10017DF08(&qword_100E6B7C8);
      id v144 = *(void (**)(char *, char *))(*(void *)(v98 - 8) + 16);
      uint64_t v145 = v98;
      v144(v96, v97);
      uint64_t v99 = (int *)type metadata accessor for TemperatureAveragesDetailInput();
      uint64_t v100 = v99[5];
      uint64_t v101 = &a1[v100];
      uint64_t v102 = &a2[v100];
      uint64_t v103 = type metadata accessor for Calendar();
      uint64_t v152 = *(void (**)(char *, char *))(*(void *)(v103 - 8) + 16);
      uint64_t v154 = v103;
      v152(v101, v102);
      uint64_t v104 = (int *)type metadata accessor for MonthlyAveragesChartInput();
      uint64_t v156 = v94;
      v94(&v101[v104[5]], &v102[v104[5]], v93);
      uint64_t v105 = v104[6];
      uint64_t v106 = &v101[v105];
      uint64_t v107 = &v102[v105];
      uint64_t v108 = type metadata accessor for TemperatureScaleConfiguration();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16))(v106, v107, v108);
      uint64_t v109 = v104[7];
      uint64_t v110 = &v101[v109];
      uint64_t v111 = &v102[v109];
      uint64_t v112 = sub_10017DF08(&qword_100E65258);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v112 - 8) + 16))(v110, v111, v112);
      uint64_t v113 = v104[8];
      uint64_t v114 = &v101[v113];
      uint64_t v115 = &v102[v113];
      uint64_t v116 = sub_10017DF08(&qword_100E6B7D0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 16))(v114, v115, v116);
      ((void (*)(char *, char *, uint64_t))v148)(&v101[v104[9]], &v102[v104[9]], v149);
      *(void *)&a1[v99[6]] = *(void *)&a2[v99[6]];
      uint64_t v117 = v99[7];
      uint64_t v118 = &a1[v117];
      uint64_t v119 = &a2[v117];
      type metadata accessor for NewsDataModel();
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)uint64_t v118 = *(void *)v119;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v120 = type metadata accessor for News();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 16))(v118, v119, v120);
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v121 = v99[8];
      uint64_t v122 = &a1[v121];
      uint64_t v123 = &a2[v121];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v121], 1, v145))
      {
        uint64_t v124 = sub_10017DF08(&qword_100E6B7D8);
        memcpy(v122, v123, *(void *)(*(void *)(v124 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v144)(v122, v123, v145);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v122, 0, 1, v145);
      }
      v146(&a1[v99[9]], &a2[v99[9]], v147);
      v156(&a1[v99[10]], &a2[v99[10]], v93);
      uint64_t v125 = v99[11];
      uint64_t v126 = &a1[v125];
      uint64_t v127 = &a2[v125];
      uint64_t v128 = *(void **)v127;
      *(void *)uint64_t v126 = *(void *)v127;
      uint64_t v129 = (void *)*((void *)v127 + 1);
      *((void *)v126 + 1) = v129;
      uint64_t v130 = (void *)*((void *)v127 + 2);
      *((void *)v126 + 2) = v130;
      v131 = (void *)*((void *)v127 + 3);
      *((void *)v126 + 3) = v131;
      uint64_t v132 = (void *)*((void *)v127 + 4);
      *((void *)v126 + 4) = v132;
      v133 = (void *)*((void *)v127 + 5);
      *((void *)v126 + 5) = v133;
      uint64_t v134 = v99[12];
      uint64_t v135 = &a1[v134];
      uint64_t v136 = &a2[v134];
      id v137 = v128;
      id v138 = v129;
      id v139 = v130;
      id v140 = v131;
      id v141 = v132;
      id v142 = v133;
      ((void (*)(char *, char *, uint64_t))v152)(v135, v136, v154);
      goto LABEL_22;
    }
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = type metadata accessor for Date();
      uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
      v8(a1, a2, v7);
      uint64_t v9 = (int *)type metadata accessor for PrecipitationAveragesHeroChartInput();
      uint64_t v10 = v9[5];
      uint64_t v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      uint64_t v13 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      uint64_t v14 = v9[6];
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      uint64_t v17 = sub_10017DF08(&qword_100E66CA0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      uint64_t v18 = v9[7];
      uint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      uint64_t v21 = type metadata accessor for TimeZone();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
      uint64_t v22 = v9[8];
      uint64_t v23 = &a1[v22];
      uint64_t v24 = &a2[v22];
      uint64_t v157 = type metadata accessor for Locale();
      uint64_t v155 = *(void (**)(char *, char *))(*(void *)(v157 - 8) + 16);
      v155(v23, v24);
      uint64_t v25 = v9[9];
      uint64_t v26 = &a1[v25];
      uint64_t v27 = &a2[v25];
      uint64_t v28 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, (uint64_t)v28))
      {
        uint64_t v29 = sub_10017DF08(&qword_100E6B670);
        memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        *(void *)uint64_t v26 = *(void *)v27;
        v8(&v26[v28[5]], &v27[v28[5]], v7);
        *(void *)&v26[v28[6]] = *(void *)&v27[v28[6]];
        *(void *)&v26[v28[7]] = *(void *)&v27[v28[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, (uint64_t)v28);
      }
      uint64_t v45 = (int *)type metadata accessor for PrecipitationAveragesDetailInput();
      uint64_t v46 = v45[5];
      uint64_t v47 = &a1[v46];
      uint64_t v48 = &a2[v46];
      uint64_t v49 = type metadata accessor for Calendar();
      uint64_t v153 = *(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16);
      v153(v47, v48, v49);
      uint64_t v50 = (int *)type metadata accessor for MonthlyAveragesChartInput();
      v150 = v8;
      uint64_t v151 = v7;
      v8(&v47[v50[5]], &v48[v50[5]], v7);
      uint64_t v51 = v50[6];
      uint64_t v52 = &v47[v51];
      uint64_t v53 = &v48[v51];
      uint64_t v54 = type metadata accessor for TemperatureScaleConfiguration();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
      uint64_t v55 = v50[7];
      uint64_t v56 = &v47[v55];
      uint64_t v57 = &v48[v55];
      uint64_t v58 = sub_10017DF08(&qword_100E65258);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
      uint64_t v59 = v50[8];
      uint64_t v60 = &v47[v59];
      uint64_t v61 = &v48[v59];
      uint64_t v62 = sub_10017DF08(&qword_100E6B7D0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v60, v61, v62);
      ((void (*)(char *, char *, uint64_t))v155)(&v47[v50[9]], &v48[v50[9]], v157);
      *(void *)&a1[v45[6]] = *(void *)&a2[v45[6]];
      uint64_t v63 = v45[7];
      uint64_t v64 = &a1[v63];
      uint64_t v65 = &a2[v63];
      type metadata accessor for NewsDataModel();
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(void *)uint64_t v64 = *(void *)v65;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v66 = type metadata accessor for News();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16))(v64, v65, v66);
      }
      swift_storeEnumTagMultiPayload();
      v153(&a1[v45[8]], &a2[v45[8]], v49);
      v150(&a1[v45[9]], &a2[v45[9]], v151);
      uint64_t v67 = v45[10];
      uint64_t v68 = &a1[v67];
      uint64_t v69 = &a2[v67];
      uint64_t v70 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16))(v68, v69, v70);
      uint64_t v71 = v45[11];
      uint64_t v72 = &a1[v71];
      uint64_t v73 = &a2[v71];
      uint64_t v74 = *(void **)v73;
      *(void *)uint64_t v72 = *(void *)v73;
      uint64_t v75 = (void *)*((void *)v73 + 1);
      *((void *)v72 + 1) = v75;
      uint64_t v76 = (void *)*((void *)v73 + 2);
      *((void *)v72 + 2) = v76;
      uint64_t v77 = (void *)*((void *)v73 + 3);
      *((void *)v72 + 3) = v77;
      v78 = (void *)*((void *)v73 + 4);
      *((void *)v72 + 4) = v78;
      uint64_t v79 = (void *)*((void *)v73 + 5);
      *((void *)v72 + 5) = v79;
      id v80 = v74;
      id v81 = v75;
      id v82 = v76;
      id v83 = v77;
      id v84 = v78;
      id v85 = v79;
LABEL_22:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

char *sub_10050AAAC(char *a1, char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *(void *)a1 = *(void *)a2;
    uint64_t v31 = (int *)type metadata accessor for TemperatureAveragesHeroChartInput();
    uint64_t v32 = v31[5];
    uint64_t v33 = &a1[v32];
    uint64_t v34 = &a2[v32];
    uint64_t v35 = type metadata accessor for TimeZone();
    uint64_t v128 = *(void (**)(char *, char *))(*(void *)(v35 - 8) + 32);
    uint64_t v130 = v35;
    v128(v33, v34);
    uint64_t v36 = v31[6];
    uint64_t v37 = &a1[v36];
    uint64_t v38 = &a2[v36];
    uint64_t v124 = type metadata accessor for Locale();
    uint64_t v121 = *(void (**)(char *, char *))(*(void *)(v124 - 8) + 32);
    v121(v37, v38);
    *(void *)&a1[v31[7]] = *(void *)&a2[v31[7]];
    uint64_t v39 = v31[8];
    uint64_t v40 = &a1[v39];
    uint64_t v41 = &a2[v39];
    uint64_t v42 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, (uint64_t)v42))
    {
      uint64_t v43 = sub_10017DF08(&qword_100E6B670);
      memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v40 = *(void *)v41;
      uint64_t v66 = v42[5];
      uint64_t v67 = &v40[v66];
      uint64_t v68 = &v41[v66];
      uint64_t v69 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 32))(v67, v68, v69);
      *(void *)&v40[v42[6]] = *(void *)&v41[v42[6]];
      *(void *)&v40[v42[7]] = *(void *)&v41[v42[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, (uint64_t)v42);
    }
    uint64_t v70 = v31[9];
    uint64_t v71 = &a1[v70];
    uint64_t v72 = &a2[v70];
    uint64_t v73 = type metadata accessor for Date();
    uint64_t v74 = *(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32);
    v74(v71, v72, v73);
    v74(&a1[v31[10]], &a2[v31[10]], v73);
    uint64_t v75 = v31[11];
    uint64_t v76 = &a1[v75];
    uint64_t v77 = &a2[v75];
    uint64_t v78 = sub_10017DF08(&qword_100E6B7C8);
    uint64_t v119 = *(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 32);
    v119(v76, v77, v78);
    uint64_t v79 = (int *)type metadata accessor for TemperatureAveragesDetailInput();
    uint64_t v80 = v79[5];
    id v81 = &a1[v80];
    id v82 = &a2[v80];
    uint64_t v123 = type metadata accessor for Calendar();
    uint64_t v120 = *(void (**)(char *, char *))(*(void *)(v123 - 8) + 32);
    v120(v81, v82);
    id v83 = (int *)type metadata accessor for MonthlyAveragesChartInput();
    uint64_t v127 = v74;
    v74(&v81[v83[5]], &v82[v83[5]], v73);
    uint64_t v84 = v83[6];
    id v85 = &v81[v84];
    uint64_t v86 = &v82[v84];
    uint64_t v87 = type metadata accessor for TemperatureScaleConfiguration();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 32))(v85, v86, v87);
    uint64_t v88 = v83[7];
    uint64_t v89 = &v81[v88];
    uint64_t v90 = &v82[v88];
    uint64_t v91 = sub_10017DF08(&qword_100E65258);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 32))(v89, v90, v91);
    uint64_t v92 = v83[8];
    uint64_t v93 = &v81[v92];
    uint64_t v94 = &v82[v92];
    uint64_t v95 = sub_10017DF08(&qword_100E6B7D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 32))(v93, v94, v95);
    ((void (*)(char *, char *, uint64_t))v121)(&v81[v83[9]], &v82[v83[9]], v124);
    *(void *)&a1[v79[6]] = *(void *)&a2[v79[6]];
    uint64_t v96 = v79[7];
    uint64_t v97 = &a1[v96];
    uint64_t v98 = &a2[v96];
    uint64_t v99 = type metadata accessor for NewsDataModel();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v97, v98, *(void *)(*(void *)(v99 - 8) + 64));
    }
    else
    {
      uint64_t v109 = type metadata accessor for News();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 32))(v97, v98, v109);
      swift_storeEnumTagMultiPayload();
    }
    uint64_t v110 = v79[8];
    uint64_t v111 = &a1[v110];
    uint64_t v112 = &a2[v110];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v110], 1, v78))
    {
      uint64_t v113 = sub_10017DF08(&qword_100E6B7D8);
      memcpy(v111, v112, *(void *)(*(void *)(v113 - 8) + 64));
    }
    else
    {
      v119(v111, v112, v78);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v111, 0, 1, v78);
    }
    ((void (*)(char *, char *, uint64_t))v128)(&a1[v79[9]], &a2[v79[9]], v130);
    v127(&a1[v79[10]], &a2[v79[10]], v73);
    uint64_t v114 = v79[11];
    uint64_t v115 = &a1[v114];
    uint64_t v116 = &a2[v114];
    long long v117 = *((_OWORD *)v116 + 1);
    *(_OWORD *)uint64_t v115 = *(_OWORD *)v116;
    *((_OWORD *)v115 + 1) = v117;
    *((_OWORD *)v115 + 2) = *((_OWORD *)v116 + 2);
    ((void (*)(char *, char *, uint64_t))v120)(&a1[v79[12]], &a2[v79[12]], v123);
    goto LABEL_21;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32);
    v8(a1, a2, v7);
    uint64_t v9 = (int *)type metadata accessor for PrecipitationAveragesHeroChartInput();
    uint64_t v10 = v9[5];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    uint64_t v14 = v9[6];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = &a2[v14];
    uint64_t v17 = sub_10017DF08(&qword_100E66CA0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
    uint64_t v18 = v9[7];
    uint64_t v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    uint64_t v21 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
    uint64_t v22 = v9[8];
    uint64_t v23 = &a1[v22];
    uint64_t v24 = &a2[v22];
    uint64_t v25 = type metadata accessor for Locale();
    uint64_t v125 = *(void (**)(char *, char *))(*(void *)(v25 - 8) + 32);
    uint64_t v126 = v25;
    v125(v23, v24);
    uint64_t v26 = v9[9];
    uint64_t v27 = &a1[v26];
    uint64_t v28 = &a2[v26];
    uint64_t v29 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, (uint64_t)v29))
    {
      uint64_t v30 = sub_10017DF08(&qword_100E6B670);
      memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      *(void *)uint64_t v27 = *(void *)v28;
      v8(&v27[v29[5]], &v28[v29[5]], v7);
      *(void *)&v27[v29[6]] = *(void *)&v28[v29[6]];
      *(void *)&v27[v29[7]] = *(void *)&v28[v29[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, (uint64_t)v29);
    }
    uint64_t v44 = (int *)type metadata accessor for PrecipitationAveragesDetailInput();
    uint64_t v45 = v44[5];
    uint64_t v46 = &a1[v45];
    uint64_t v47 = &a2[v45];
    uint64_t v48 = type metadata accessor for Calendar();
    uint64_t v122 = *(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32);
    v122(v46, v47, v48);
    uint64_t v49 = (int *)type metadata accessor for MonthlyAveragesChartInput();
    uint64_t v129 = v8;
    uint64_t v131 = v7;
    v8(&v46[v49[5]], &v47[v49[5]], v7);
    uint64_t v50 = v49[6];
    uint64_t v51 = &v46[v50];
    uint64_t v52 = &v47[v50];
    uint64_t v53 = type metadata accessor for TemperatureScaleConfiguration();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v51, v52, v53);
    uint64_t v54 = v49[7];
    uint64_t v55 = &v46[v54];
    uint64_t v56 = &v47[v54];
    uint64_t v57 = sub_10017DF08(&qword_100E65258);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
    uint64_t v58 = v49[8];
    uint64_t v59 = &v46[v58];
    uint64_t v60 = &v47[v58];
    uint64_t v61 = sub_10017DF08(&qword_100E6B7D0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v59, v60, v61);
    ((void (*)(char *, char *, uint64_t))v125)(&v46[v49[9]], &v47[v49[9]], v126);
    *(void *)&a1[v44[6]] = *(void *)&a2[v44[6]];
    uint64_t v62 = v44[7];
    uint64_t v63 = &a1[v62];
    uint64_t v64 = &a2[v62];
    uint64_t v65 = type metadata accessor for NewsDataModel();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
    }
    else
    {
      uint64_t v100 = type metadata accessor for News();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 32))(v63, v64, v100);
      swift_storeEnumTagMultiPayload();
    }
    v122(&a1[v44[8]], &a2[v44[8]], v48);
    v129(&a1[v44[9]], &a2[v44[9]], v131);
    uint64_t v101 = v44[10];
    uint64_t v102 = &a1[v101];
    uint64_t v103 = &a2[v101];
    uint64_t v104 = type metadata accessor for Location();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 32))(v102, v103, v104);
    uint64_t v105 = v44[11];
    uint64_t v106 = &a1[v105];
    uint64_t v107 = &a2[v105];
    long long v108 = *((_OWORD *)v107 + 1);
    *(_OWORD *)uint64_t v106 = *(_OWORD *)v107;
    *((_OWORD *)v106 + 1) = v108;
    *((_OWORD *)v106 + 2) = *((_OWORD *)v107 + 2);
LABEL_21:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

char *sub_10050B5E0(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10050C208((uint64_t)a1, (void (*)(void))type metadata accessor for AveragesDetailInput.Content);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)a1 = *(void *)a2;
      uint64_t v31 = (int *)type metadata accessor for TemperatureAveragesHeroChartInput();
      uint64_t v32 = v31[5];
      uint64_t v33 = &a1[v32];
      uint64_t v34 = &a2[v32];
      uint64_t v35 = type metadata accessor for TimeZone();
      uint64_t v128 = *(void (**)(char *, char *))(*(void *)(v35 - 8) + 32);
      uint64_t v130 = v35;
      v128(v33, v34);
      uint64_t v36 = v31[6];
      uint64_t v37 = &a1[v36];
      uint64_t v38 = &a2[v36];
      uint64_t v124 = type metadata accessor for Locale();
      uint64_t v121 = *(void (**)(char *, char *))(*(void *)(v124 - 8) + 32);
      v121(v37, v38);
      *(void *)&a1[v31[7]] = *(void *)&a2[v31[7]];
      uint64_t v39 = v31[8];
      uint64_t v40 = &a1[v39];
      uint64_t v41 = &a2[v39];
      uint64_t v42 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, (uint64_t)v42))
      {
        uint64_t v43 = sub_10017DF08(&qword_100E6B670);
        memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
      }
      else
      {
        *(void *)uint64_t v40 = *(void *)v41;
        uint64_t v66 = v42[5];
        uint64_t v67 = &v40[v66];
        uint64_t v68 = &v41[v66];
        uint64_t v69 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 32))(v67, v68, v69);
        *(void *)&v40[v42[6]] = *(void *)&v41[v42[6]];
        *(void *)&v40[v42[7]] = *(void *)&v41[v42[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, (uint64_t)v42);
      }
      uint64_t v70 = v31[9];
      uint64_t v71 = &a1[v70];
      uint64_t v72 = &a2[v70];
      uint64_t v73 = type metadata accessor for Date();
      uint64_t v74 = *(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32);
      v74(v71, v72, v73);
      v74(&a1[v31[10]], &a2[v31[10]], v73);
      uint64_t v75 = v31[11];
      uint64_t v76 = &a1[v75];
      uint64_t v77 = &a2[v75];
      uint64_t v78 = sub_10017DF08(&qword_100E6B7C8);
      uint64_t v119 = *(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 32);
      v119(v76, v77, v78);
      uint64_t v79 = (int *)type metadata accessor for TemperatureAveragesDetailInput();
      uint64_t v80 = v79[5];
      id v81 = &a1[v80];
      id v82 = &a2[v80];
      uint64_t v123 = type metadata accessor for Calendar();
      uint64_t v120 = *(void (**)(char *, char *))(*(void *)(v123 - 8) + 32);
      v120(v81, v82);
      id v83 = (int *)type metadata accessor for MonthlyAveragesChartInput();
      uint64_t v127 = v74;
      v74(&v81[v83[5]], &v82[v83[5]], v73);
      uint64_t v84 = v83[6];
      id v85 = &v81[v84];
      uint64_t v86 = &v82[v84];
      uint64_t v87 = type metadata accessor for TemperatureScaleConfiguration();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 32))(v85, v86, v87);
      uint64_t v88 = v83[7];
      uint64_t v89 = &v81[v88];
      uint64_t v90 = &v82[v88];
      uint64_t v91 = sub_10017DF08(&qword_100E65258);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 32))(v89, v90, v91);
      uint64_t v92 = v83[8];
      uint64_t v93 = &v81[v92];
      uint64_t v94 = &v82[v92];
      uint64_t v95 = sub_10017DF08(&qword_100E6B7D0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 32))(v93, v94, v95);
      ((void (*)(char *, char *, uint64_t))v121)(&v81[v83[9]], &v82[v83[9]], v124);
      *(void *)&a1[v79[6]] = *(void *)&a2[v79[6]];
      uint64_t v96 = v79[7];
      uint64_t v97 = &a1[v96];
      uint64_t v98 = &a2[v96];
      uint64_t v99 = type metadata accessor for NewsDataModel();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v97, v98, *(void *)(*(void *)(v99 - 8) + 64));
      }
      else
      {
        uint64_t v109 = type metadata accessor for News();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 32))(v97, v98, v109);
        swift_storeEnumTagMultiPayload();
      }
      uint64_t v110 = v79[8];
      uint64_t v111 = &a1[v110];
      uint64_t v112 = &a2[v110];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v110], 1, v78))
      {
        uint64_t v113 = sub_10017DF08(&qword_100E6B7D8);
        memcpy(v111, v112, *(void *)(*(void *)(v113 - 8) + 64));
      }
      else
      {
        v119(v111, v112, v78);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v111, 0, 1, v78);
      }
      ((void (*)(char *, char *, uint64_t))v128)(&a1[v79[9]], &a2[v79[9]], v130);
      v127(&a1[v79[10]], &a2[v79[10]], v73);
      uint64_t v114 = v79[11];
      uint64_t v115 = &a1[v114];
      uint64_t v116 = &a2[v114];
      long long v117 = *((_OWORD *)v116 + 1);
      *(_OWORD *)uint64_t v115 = *(_OWORD *)v116;
      *((_OWORD *)v115 + 1) = v117;
      *((_OWORD *)v115 + 2) = *((_OWORD *)v116 + 2);
      ((void (*)(char *, char *, uint64_t))v120)(&a1[v79[12]], &a2[v79[12]], v123);
      goto LABEL_22;
    }
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = type metadata accessor for Date();
      uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32);
      v8(a1, a2, v7);
      uint64_t v9 = (int *)type metadata accessor for PrecipitationAveragesHeroChartInput();
      uint64_t v10 = v9[5];
      uint64_t v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      uint64_t v13 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      uint64_t v14 = v9[6];
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      uint64_t v17 = sub_10017DF08(&qword_100E66CA0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      uint64_t v18 = v9[7];
      uint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      uint64_t v21 = type metadata accessor for TimeZone();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
      uint64_t v22 = v9[8];
      uint64_t v23 = &a1[v22];
      uint64_t v24 = &a2[v22];
      uint64_t v25 = type metadata accessor for Locale();
      uint64_t v125 = *(void (**)(char *, char *))(*(void *)(v25 - 8) + 32);
      uint64_t v126 = v25;
      v125(v23, v24);
      uint64_t v26 = v9[9];
      uint64_t v27 = &a1[v26];
      uint64_t v28 = &a2[v26];
      uint64_t v29 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, (uint64_t)v29))
      {
        uint64_t v30 = sub_10017DF08(&qword_100E6B670);
        memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        *(void *)uint64_t v27 = *(void *)v28;
        v8(&v27[v29[5]], &v28[v29[5]], v7);
        *(void *)&v27[v29[6]] = *(void *)&v28[v29[6]];
        *(void *)&v27[v29[7]] = *(void *)&v28[v29[7]];
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, (uint64_t)v29);
      }
      uint64_t v44 = (int *)type metadata accessor for PrecipitationAveragesDetailInput();
      uint64_t v45 = v44[5];
      uint64_t v46 = &a1[v45];
      uint64_t v47 = &a2[v45];
      uint64_t v48 = type metadata accessor for Calendar();
      uint64_t v122 = *(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32);
      v122(v46, v47, v48);
      uint64_t v49 = (int *)type metadata accessor for MonthlyAveragesChartInput();
      uint64_t v129 = v8;
      uint64_t v131 = v7;
      v8(&v46[v49[5]], &v47[v49[5]], v7);
      uint64_t v50 = v49[6];
      uint64_t v51 = &v46[v50];
      uint64_t v52 = &v47[v50];
      uint64_t v53 = type metadata accessor for TemperatureScaleConfiguration();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v51, v52, v53);
      uint64_t v54 = v49[7];
      uint64_t v55 = &v46[v54];
      uint64_t v56 = &v47[v54];
      uint64_t v57 = sub_10017DF08(&qword_100E65258);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
      uint64_t v58 = v49[8];
      uint64_t v59 = &v46[v58];
      uint64_t v60 = &v47[v58];
      uint64_t v61 = sub_10017DF08(&qword_100E6B7D0);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 32))(v59, v60, v61);
      ((void (*)(char *, char *, uint64_t))v125)(&v46[v49[9]], &v47[v49[9]], v126);
      *(void *)&a1[v44[6]] = *(void *)&a2[v44[6]];
      uint64_t v62 = v44[7];
      uint64_t v63 = &a1[v62];
      uint64_t v64 = &a2[v62];
      uint64_t v65 = type metadata accessor for NewsDataModel();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
      }
      else
      {
        uint64_t v100 = type metadata accessor for News();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 32))(v63, v64, v100);
        swift_storeEnumTagMultiPayload();
      }
      v122(&a1[v44[8]], &a2[v44[8]], v48);
      v129(&a1[v44[9]], &a2[v44[9]], v131);
      uint64_t v101 = v44[10];
      uint64_t v102 = &a1[v101];
      uint64_t v103 = &a2[v101];
      uint64_t v104 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 32))(v102, v103, v104);
      uint64_t v105 = v44[11];
      uint64_t v106 = &a1[v105];
      uint64_t v107 = &a2[v105];
      long long v108 = *((_OWORD *)v107 + 1);
      *(_OWORD *)uint64_t v106 = *(_OWORD *)v107;
      *((_OWORD *)v106 + 1) = v108;
      *((_OWORD *)v106 + 2) = *((_OWORD *)v107 + 2);
LABEL_22:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10050C138()
{
  uint64_t result = type metadata accessor for PrecipitationAveragesDetailInput();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TemperatureAveragesDetailInput();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_10050C208(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_10050C260(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_10050C2C0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for AveragesDetailInput.ContentUnavailableReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10050C3ECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AveragesDetailInput.ContentUnavailableReason()
{
  return &type metadata for AveragesDetailInput.ContentUnavailableReason;
}

unint64_t sub_10050C428()
{
  unint64_t result = qword_100E7D700;
  if (!qword_100E7D700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7D700);
  }
  return result;
}

uint64_t destroy for DayPickerView(uint64_t a1)
{
  swift_release();

  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 24);
}

uint64_t initializeWithCopy for DayPickerView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = a2 + 24;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 48) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_retain();
  v7(a1 + 24, v4, v6);
  return a1;
}

void *assignWithCopy for DayPickerView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  sub_1000C1E18(a1 + 3, a2 + 3);
  return a1;
}

uint64_t assignWithTake for DayPickerView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

ValueMetadata *type metadata accessor for DayPickerView()
{
  return &type metadata for DayPickerView;
}

uint64_t sub_10050C614()
{
  return swift_getOpaqueTypeConformance2();
}

BOOL sub_10050C630()
{
  v0 = self;
  id v1 = [v0 mainScreen];
  [v1 nativeScale];
  double v3 = v2;

  id v4 = [v0 mainScreen];
  [v4 scale];
  double v6 = v5;

  return v6 < v3;
}

uint64_t sub_10050C6CC()
{
  sub_1005101E8(v0, (uint64_t)&v10);
  type metadata accessor for MainActor();
  uint64_t v1 = static MainActor.shared.getter();
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = &protocol witness table for MainActor;
  long long v3 = v11;
  *(_OWORD *)(v2 + 32) = v10;
  *(_OWORD *)(v2 + 48) = v3;
  long long v4 = v13;
  *(_OWORD *)(v2 + 64) = v12;
  *(_OWORD *)(v2 + 80) = v4;
  sub_1005101E8(v0, (uint64_t)&v10);
  uint64_t v5 = static MainActor.shared.getter();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = &protocol witness table for MainActor;
  long long v7 = v11;
  *(_OWORD *)(v6 + 32) = v10;
  *(_OWORD *)(v6 + 48) = v7;
  long long v8 = v13;
  *(_OWORD *)(v6 + 64) = v12;
  *(_OWORD *)(v6 + 80) = v8;
  type metadata accessor for Date();
  return Binding.init(get:set:)();
}

uint64_t sub_10050C7E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for DayPickerViewModel(0);
  uint64_t v3 = v2 - 8;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_10024F0AC();
  swift_release();
  uint64_t v6 = &v5[*(int *)(v3 + 28)];
  uint64_t v7 = type metadata accessor for Date();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, v6, v7);
  return sub_100512DE0((uint64_t)v5, (void (*)(void))type metadata accessor for DayPickerViewModel);
}

uint64_t sub_10050C8DC()
{
  return swift_release();
}

uint64_t sub_10050C948(uint64_t a1, uint64_t a2)
{
  return sub_10034524C(a2);
}

uint64_t sub_10050C994@<X0>(uint64_t a1@<X8>)
{
  uint64_t v59 = type metadata accessor for QuaternaryDividerStyle();
  sub_100179C0C();
  uint64_t v62 = v3;
  __chkstk_darwin(v4);
  sub_1001626E0();
  type metadata accessor for Divider();
  sub_100179C0C();
  uint64_t v61 = v5;
  __chkstk_darwin(v6);
  sub_1001626E0();
  sub_10017DF08(&qword_100E77340);
  sub_100179C0C();
  uint64_t v64 = v8;
  uint64_t v65 = v7;
  __chkstk_darwin(v7);
  long long v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v63 = (char *)&v41 - v12;
  uint64_t v60 = sub_10017DF08(&qword_100E7D708);
  sub_100179C0C();
  uint64_t v14 = v13;
  uint64_t v45 = v13;
  __chkstk_darwin(v15);
  sub_100162EF8();
  uint64_t v58 = v16;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v41 - v18;
  sub_1005101E8(v1, (uint64_t)&v66);
  uint64_t v20 = (_OWORD *)swift_allocObject();
  uint64_t v43 = v20;
  long long v21 = v67;
  v20[1] = v66;
  v20[2] = v21;
  long long v22 = v69;
  v20[3] = v68;
  v20[4] = v22;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v57 = v70;
  int v56 = v71;
  uint64_t v55 = v72;
  int v54 = v73;
  uint64_t v53 = v74;
  uint64_t v52 = v75;
  uint64_t v44 = v19;
  sub_10050FEE8();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v51 = v66;
  int v50 = BYTE8(v66);
  uint64_t v49 = v67;
  int v48 = BYTE8(v67);
  uint64_t v46 = *((void *)&v68 + 1);
  uint64_t v47 = v68;
  Divider.init()();
  static DividerStyle<>.quaternary.getter();
  sub_100510904(&qword_100E66F38, (void (*)(uint64_t))&type metadata accessor for Divider);
  sub_100510904(&qword_100E77488, (void (*)(uint64_t))&type metadata accessor for QuaternaryDividerStyle);
  View.dividerStyle<A>(_:)();
  sub_100162F0C();
  v23();
  sub_100162F0C();
  v24();
  uint64_t v25 = v63;
  uint64_t v26 = v64;
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v64 + 32);
  uint64_t v42 = v10;
  uint64_t v28 = v65;
  v27(v63, v10, v65);
  uint64_t v29 = *(void (**)(void))(v14 + 16);
  uint64_t v30 = v58;
  uint64_t v31 = v60;
  sub_10018136C();
  v29();
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
  v32(v10, v25, v28);
  uint64_t v33 = v43;
  *(void *)a1 = sub_100510224;
  *(void *)(a1 + 8) = v33;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 1;
  *(void *)(a1 + 32) = v57;
  *(unsigned char *)(a1 + 40) = v56;
  *(void *)(a1 + 48) = v55;
  *(unsigned char *)(a1 + 56) = v54;
  uint64_t v34 = v52;
  *(void *)(a1 + 64) = v53;
  *(void *)(a1 + 72) = v34;
  uint64_t v35 = sub_10017DF08(&qword_100E7D710);
  sub_10018136C();
  v29();
  uint64_t v36 = a1 + *(int *)(v35 + 80);
  *(void *)uint64_t v36 = 0;
  *(unsigned char *)(v36 + 8) = 1;
  *(void *)(v36 + 16) = v51;
  *(unsigned char *)(v36 + 24) = v50;
  *(void *)(v36 + 32) = v49;
  *(unsigned char *)(v36 + 40) = v48;
  uint64_t v37 = v46;
  *(void *)(v36 + 48) = v47;
  *(void *)(v36 + 56) = v37;
  v32((char *)(a1 + *(int *)(v35 + 96)), v42, v65);
  uint64_t v38 = *(void (**)(void))(v64 + 8);
  swift_retain_n();
  sub_1001649A8();
  v38();
  uint64_t v39 = *(void (**)(char *, uint64_t))(v45 + 8);
  v39(v44, v31);
  swift_release();
  sub_1001649A8();
  v38();
  v39(v30, v31);
  return swift_release();
}

uint64_t sub_10050CF54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v135 = a1;
  uint64_t v126 = a3;
  uint64_t v124 = type metadata accessor for Date();
  uint64_t v122 = *(void *)(v124 - 8);
  __chkstk_darwin(v124);
  uint64_t v121 = (char *)&v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = type metadata accessor for ScrollViewProxy();
  uint64_t v127 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  uint64_t v133 = v5;
  uint64_t v123 = (char *)&v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for DayPickerViewModel(0);
  __chkstk_darwin(v120);
  uint64_t v111 = (char *)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = type metadata accessor for AutomationInfo(0);
  __chkstk_darwin(v128);
  uint64_t v129 = (void (*)(char *, uint64_t, uint64_t))((char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v110 = (void (*)(void))type metadata accessor for AccessibilityChildBehavior();
  uint64_t v108 = *((void *)v110 - 1);
  __chkstk_darwin(v110);
  uint64_t v107 = (uint64_t)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_10017DF08(&qword_100E651D0);
  __chkstk_darwin(v104);
  long long v10 = (char *)&v98 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = type metadata accessor for ScrollIndicatorVisibility();
  uint64_t v11 = *(void *)(v130 - 8);
  __chkstk_darwin(v130);
  uint64_t v13 = (char *)&v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100E7D718);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_10017DF08(&qword_100E7D720);
  uint64_t v99 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v19 = (char *)&v98 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_10017DF08(&qword_100E7D728);
  uint64_t v102 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v98 = (uint64_t)&v98 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_10017DF08(&qword_100E7D730);
  uint64_t v105 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v100 = (uint64_t)&v98 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10017DF08(&qword_100E7A170);
  __chkstk_darwin(v22 - 8);
  uint64_t v109 = (uint64_t)&v98 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_10017DF08(&qword_100E7A178);
  __chkstk_darwin(v112);
  uint64_t v113 = (char *)&v98 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = sub_10017DF08(&qword_100E7D738);
  __chkstk_darwin(v131);
  uint64_t v114 = (char *)&v98 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v132 = (char *)&v98 - v27;
  uint64_t v119 = sub_10017DF08(&qword_100E7D740);
  uint64_t v118 = *(void *)(v119 - 8);
  __chkstk_darwin(v119);
  long long v117 = (char *)&v98 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_10017DF08(&qword_100E7D748);
  __chkstk_darwin(v115);
  uint64_t v116 = (char *)&v98 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Axis.Set.horizontal.getter();
  uint64_t v134 = a2;
  uint64_t v136 = a2;
  sub_10017DF08(&qword_100E7D750);
  sub_100510234();
  ScrollView.init(_:showsIndicators:content:)();
  static ScrollIndicatorVisibility.never.getter();
  LOBYTE(a2) = static Axis.Set.vertical.getter();
  unsigned __int8 v30 = static Axis.Set.horizontal.getter();
  Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != a2) {
    Axis.Set.init(rawValue:)();
  }
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v30) {
    Axis.Set.init(rawValue:)();
  }
  uint64_t v31 = sub_1001246C8(&qword_100E7D770, &qword_100E7D718);
  View.scrollIndicators(_:axes:)();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v130);
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  uint64_t v32 = enum case for DynamicTypeSize.accessibility1(_:);
  uint64_t v33 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 104))(v10, v32, v33);
  sub_100510904(&qword_100E651F0, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result)
  {
    *(void *)&long long v137 = v14;
    *((void *)&v137 + 1) = v31;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v36 = sub_1001246C8((unint64_t *)&unk_100EAADB0, &qword_100E651D0);
    uint64_t v37 = v98;
    uint64_t v38 = v101;
    uint64_t v39 = v104;
    View.dynamicTypeSize<A>(_:)();
    sub_100178110((uint64_t)v10, &qword_100E651D0);
    (*(void (**)(char *, uint64_t))(v99 + 8))(v19, v38);
    uint64_t v40 = v107;
    static AccessibilityChildBehavior.ignore.getter();
    *(void *)&long long v137 = v38;
    *((void *)&v137 + 1) = v39;
    *(void *)&long long v138 = OpaqueTypeConformance2;
    *((void *)&v138 + 1) = v36;
    uint64_t v41 = swift_getOpaqueTypeConformance2();
    uint64_t v42 = v100;
    uint64_t v43 = v103;
    View.accessibilityElement(children:)();
    (*(void (**)(uint64_t, void (*)(void)))(v108 + 8))(v40, v110);
    (*(void (**)(uint64_t, uint64_t))(v102 + 8))(v37, v43);
    LocalizedStringKey.init(stringLiteral:)();
    uint64_t v44 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v46 = v45;
    LOBYTE(v38) = v47 & 1;
    *(void *)&long long v137 = v43;
    *((void *)&v137 + 1) = v41;
    swift_getOpaqueTypeConformance2();
    uint64_t v48 = v109;
    uint64_t v49 = v106;
    View.accessibility(label:)();
    sub_100191924(v44, v46, v38);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v42, v49);
    uint64_t v50 = v134;
    swift_retain();
    uint64_t v51 = (uint64_t)v111;
    sub_10024F0AC();
    swift_release();
    uint64_t v52 = v120;
    uint64_t v53 = (uint64_t *)(v51 + *(int *)(v120 + 24));
    uint64_t v55 = *v53;
    uint64_t v54 = v53[1];
    swift_bridgeObjectRetain();
    uint64_t v110 = (void (*)(void))type metadata accessor for DayPickerViewModel;
    sub_100512DE0(v51, (void (*)(void))type metadata accessor for DayPickerViewModel);
    uint64_t v56 = (uint64_t)v129;
    *(void *)uint64_t v129 = v55;
    *(void *)(v56 + 8) = v54;
    type metadata accessor for AutomationCellInfo(0);
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v57 = (uint64_t)v113;
    sub_10048D174(v56, v58, v59, v60, v61, v62, v63, v64, v98, v99, v100, v101, v102, v103, v104, v105, v106, v107, v108,
      v109);
    sub_100512DE0(v56, (void (*)(void))type metadata accessor for AutomationInfo);
    sub_100178110(v48, &qword_100E7A170);
    swift_retain();
    sub_10024F0AC();
    swift_release();
    uint64_t v65 = (uint64_t *)(v51 + *(int *)(v52 + 28));
    uint64_t v67 = *v65;
    uint64_t v66 = v65[1];
    swift_bridgeObjectRetain();
    sub_100512DE0(v51, (void (*)(void))type metadata accessor for DayPickerViewModel);
    *(void *)&long long v137 = v67;
    *((void *)&v137 + 1) = v66;
    sub_10014A85C();
    uint64_t v68 = Text.init<A>(_:)();
    uint64_t v70 = v69;
    LOBYTE(v38) = v71 & 1;
    sub_1005102D4();
    uint64_t v72 = (uint64_t)v114;
    View.accessibilityValue(_:)();
    sub_100191924(v68, v70, v38);
    swift_bridgeObjectRelease();
    sub_100178110(v57, &qword_100E7A178);
    sub_1005101E8(v50, (uint64_t)&v137);
    uint64_t v73 = v127;
    uint64_t v74 = *(void (**)(char *, uint64_t, uint64_t))(v127 + 16);
    uint64_t v128 = v127 + 16;
    uint64_t v129 = v74;
    uint64_t v75 = v123;
    uint64_t v76 = v125;
    v74(v123, v135, v125);
    uint64_t v77 = *(unsigned __int8 *)(v73 + 80);
    uint64_t v130 = v77 | 7;
    uint64_t v78 = (_OWORD *)swift_allocObject();
    long long v79 = v138;
    v78[1] = v137;
    v78[2] = v79;
    long long v80 = v140;
    v78[3] = v139;
    v78[4] = v80;
    uint64_t v127 = *(void *)(v73 + 32);
    ((void (*)(char *, char *, uint64_t))v127)((char *)v78 + ((v77 + 80) & ~v77), v75, v76);
    ModifiedContent<>.accessibilityAdjustableAction(_:)();
    swift_release();
    sub_100178110(v72, &qword_100E7D738);
    swift_retain();
    sub_10024F0AC();
    swift_release();
    uint64_t v81 = v51 + *(int *)(v52 + 20);
    uint64_t v82 = v122;
    id v83 = v121;
    uint64_t v84 = v124;
    (*(void (**)(char *, uint64_t, uint64_t))(v122 + 16))(v121, v81, v124);
    sub_100512DE0(v51, v110);
    v129(v75, v135, v76);
    uint64_t v85 = (v77 + 16) & ~v77;
    v133 += v85;
    uint64_t v86 = swift_allocObject();
    ((void (*)(uint64_t, char *, uint64_t))v127)(v86 + v85, v75, v76);
    sub_100510728();
    sub_100510904((unint64_t *)&qword_100E63980, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t v87 = v117;
    uint64_t v88 = (uint64_t)v132;
    View.onChange<A>(of:initial:_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v82 + 8))(v83, v84);
    sub_100178110(v88, &qword_100E7D738);
    v129(v75, v135, v76);
    sub_1005101E8(v134, (uint64_t)&v137);
    unint64_t v89 = (v133 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v90 = swift_allocObject();
    ((void (*)(uint64_t, char *, uint64_t))v127)(v90 + v85, v75, v76);
    uint64_t v91 = (_OWORD *)(v90 + v89);
    long long v92 = v138;
    *uint64_t v91 = v137;
    v91[1] = v92;
    long long v93 = v140;
    v91[2] = v139;
    v91[3] = v93;
    uint64_t v94 = v118;
    uint64_t v95 = (uint64_t)v116;
    uint64_t v96 = v119;
    (*(void (**)(char *, char *, uint64_t))(v118 + 16))(v116, v87, v119);
    uint64_t v97 = (uint64_t (**)())(v95 + *(int *)(v115 + 36));
    char *v97 = sub_100510878;
    v97[1] = (uint64_t (*)())v90;
    v97[2] = 0;
    v97[3] = 0;
    (*(void (**)(char *, uint64_t))(v94 + 8))(v87, v96);
    return sub_10020E72C(v95, v126, &qword_100E7D748);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10050E028@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E7D768);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &__src[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_10017DF08(&qword_100E7D750);
  __chkstk_darwin(v7);
  uint64_t v9 = &__src[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)uint64_t v6 = static VerticalAlignment.center.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  sub_10017DF08(&qword_100E7D7A0);
  sub_10050E228(a1);
  static Alignment.center.getter();
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_10006DF38((uint64_t)v6, (uint64_t)v9, &qword_100E7D768);
  memcpy(&v9[*(int *)(v7 + 36)], __src, 0x70uLL);
  sub_100178110((uint64_t)v6, &qword_100E7D768);
  return sub_10020E72C((uint64_t)v9, a2, &qword_100E7D750);
}

uint64_t sub_10050E228(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DayPickerViewModel(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (uint64_t *)((char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_retain();
  sub_10024F0AC();
  swift_release();
  uint64_t v5 = *v4;
  swift_bridgeObjectRetain();
  sub_100512DE0((uint64_t)v4, (void (*)(void))type metadata accessor for DayPickerViewModel);
  uint64_t v12 = v5;
  swift_getKeyPath();
  sub_1005101E8(a1, (uint64_t)v11);
  uint64_t v6 = (_OWORD *)swift_allocObject();
  long long v7 = v11[1];
  v6[1] = v11[0];
  v6[2] = v7;
  long long v8 = v11[3];
  v6[3] = v11[2];
  v6[4] = v8;
  sub_10017DF08(&qword_100E7D7A8);
  sub_10017DF08(&qword_100E7D7B0);
  sub_1001246C8(&qword_100E7D7B8, &qword_100E7D7A8);
  sub_100510904((unint64_t *)&qword_100E63978, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1001246C8(&qword_100E7D7C0, &qword_100E7D7B0);
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_10050E430@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v25 = a3;
  uint64_t v5 = type metadata accessor for DayPickerViewModel.CalendarDayViewModel(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5 - 8);
  uint64_t v8 = sub_10017DF08(&qword_100E7D7C8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E7D7D0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v10 = static VerticalAlignment.center.getter();
  *((void *)v10 + 1) = 0;
  v10[16] = 0;
  uint64_t v15 = sub_10017DF08(&qword_100E7D7D8);
  sub_10050E750(a2, a1, (double *)&v10[*(int *)(v15 + 44)]);
  sub_1005101E8(a2, (uint64_t)v26);
  sub_100512D8C(a1, (uint64_t)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for DayPickerViewModel.CalendarDayViewModel);
  unint64_t v16 = (*(unsigned __int8 *)(v6 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v17 = (_OWORD *)swift_allocObject();
  long long v18 = v26[1];
  v17[1] = v26[0];
  v17[2] = v18;
  long long v19 = v26[3];
  v17[3] = v26[2];
  v17[4] = v19;
  sub_100510B00((uint64_t)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v17 + v16);
  sub_1001246C8(&qword_100E7D7E0, &qword_100E7D7C8);
  View.onTapGesture(count:perform:)();
  swift_release();
  sub_100178110((uint64_t)v10, &qword_100E7D7C8);
  uint64_t v20 = v25;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 16))(v25, v14, v11);
  uint64_t v21 = v20 + *(int *)(sub_10017DF08(&qword_100E7D7B0) + 52);
  uint64_t v22 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v21, a1, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_10050E750@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X8>)
{
  uint64_t v36 = a3;
  uint64_t v5 = sub_10017DF08(&qword_100E6D908);
  __chkstk_darwin(v5 - 8);
  uint64_t v35 = (uint64_t *)((char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v34 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E7D790);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for DayPickerViewModel.CalendarDayViewModel(0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for DayView();
  uint64_t v17 = (int *)(v16 - 8);
  __chkstk_darwin(v16);
  long long v19 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v33 - v21;
  uint64_t v33 = a1;
  double v23 = sub_10050EB60(a2, (void (*)(uint64_t))sub_10043F8B4);
  sub_100512D8C(a2, (uint64_t)v15, (void (*)(void))type metadata accessor for DayPickerViewModel.CalendarDayViewModel);
  sub_10050C6CC();
  Binding.wrappedValue.getter();
  sub_100178110((uint64_t)v12, &qword_100E7D790);
  char v24 = static Date.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v34);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v26 = (uint64_t)v35;
  *uint64_t v35 = KeyPath;
  sub_10017DF08(&qword_100E66E50);
  swift_storeEnumTagMultiPayload();
  *(void *)&v22[v17[9]] = swift_getKeyPath();
  sub_10017DF08(&qword_100E62D60);
  swift_storeEnumTagMultiPayload();
  sub_100510B00((uint64_t)v15, (uint64_t)v22);
  v22[v17[7]] = v24 & 1;
  sub_10020E72C(v26, (uint64_t)&v22[v17[8]], &qword_100E6D908);
  *(void *)&v22[v17[10]] = 0x4042000000000000;
  *(void *)&v22[v17[11]] = 0x4010000000000000;
  double v27 = sub_10050EB60(a2, (void (*)(uint64_t))sub_1003041BC);
  sub_100512D8C((uint64_t)v22, (uint64_t)v19, (void (*)(void))type metadata accessor for DayView);
  uint64_t v28 = v36;
  double *v36 = v23;
  *((unsigned char *)v28 + 8) = 0;
  uint64_t v29 = v28;
  uint64_t v30 = sub_10017DF08(&qword_100E7D7E8);
  sub_100512D8C((uint64_t)v19, (uint64_t)v29 + *(int *)(v30 + 48), (void (*)(void))type metadata accessor for DayView);
  uint64_t v31 = (uint64_t)v29 + *(int *)(v30 + 64);
  *(double *)uint64_t v31 = v27;
  *(unsigned char *)(v31 + 8) = 0;
  sub_100512DE0((uint64_t)v22, (void (*)(void))type metadata accessor for DayView);
  return sub_100512DE0((uint64_t)v19, (void (*)(void))type metadata accessor for DayView);
}

double sub_10050EB60(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v46 = a1;
  char v47 = a2;
  uint64_t v2 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v43 = v7 - v6;
  uint64_t v8 = sub_10017DF08(&qword_100E64D60);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = type metadata accessor for DayPickerViewModel(0);
  __chkstk_darwin(v13 - 8);
  sub_1001626E0();
  uint64_t v16 = (uint64_t *)(v15 - v14);
  uint64_t v17 = sub_10017DF08(&qword_100E7D798);
  __chkstk_darwin(v17 - 8);
  sub_1001626E0();
  uint64_t v20 = v19 - v18;
  uint64_t v21 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v21 - 8);
  sub_100162EF8();
  uint64_t v44 = v22;
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v42 - v24;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v42 - v27;
  BOOL v48 = sub_10050C630();
  uint64_t v45 = v4;
  uint64_t v29 = *(void (**)(void))(v4 + 16);
  sub_10018136C();
  v29();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v2);
  swift_retain();
  sub_10024F0AC();
  swift_release();
  uint64_t v30 = *v16;
  swift_bridgeObjectRetain();
  sub_100512DE0((uint64_t)v16, (void (*)(void))type metadata accessor for DayPickerViewModel);
  v47(v30);
  swift_bridgeObjectRelease();
  uint64_t v31 = type metadata accessor for DayPickerViewModel.CalendarDayViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0(v20, 1, v31) == 1)
  {
    sub_100178110(v20, &qword_100E7D798);
    uint64_t v32 = 1;
  }
  else
  {
    sub_10018136C();
    v29();
    sub_100512DE0(v20, (void (*)(void))type metadata accessor for DayPickerViewModel.CalendarDayViewModel);
    uint64_t v32 = 0;
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, v32, 1, v2);
  uint64_t v33 = v12 + *(int *)(v8 + 48);
  sub_10006DF38((uint64_t)v28, v12, (uint64_t *)&unk_100E73CA0);
  sub_10006DF38((uint64_t)v25, v33, (uint64_t *)&unk_100E73CA0);
  sub_10017A364(v12);
  if (v35)
  {
    sub_100178110((uint64_t)v25, (uint64_t *)&unk_100E73CA0);
    sub_100178110((uint64_t)v28, (uint64_t *)&unk_100E73CA0);
    sub_10017A364(v33);
    if (v35)
    {
      sub_100178110(v12, (uint64_t *)&unk_100E73CA0);
LABEL_14:
      sub_1001A204C();
      double v39 = sub_10052E644();
      goto LABEL_16;
    }
    goto LABEL_12;
  }
  uint64_t v34 = v44;
  sub_10006DF38(v12, v44, (uint64_t *)&unk_100E73CA0);
  sub_10017A364(v33);
  if (v35)
  {
    sub_100178110((uint64_t)v25, (uint64_t *)&unk_100E73CA0);
    sub_100178110((uint64_t)v28, (uint64_t *)&unk_100E73CA0);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v34, v2);
LABEL_12:
    sub_100178110(v12, &qword_100E64D60);
    goto LABEL_15;
  }
  uint64_t v36 = v45;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 32))(v43, v33, v2);
  sub_100510904((unint64_t *)&qword_100E63980, (void (*)(uint64_t))&type metadata accessor for Date);
  char v37 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v38 = *(void (**)(void))(v36 + 8);
  sub_1001649A8();
  v38();
  sub_100178110((uint64_t)v25, (uint64_t *)&unk_100E73CA0);
  sub_100178110((uint64_t)v28, (uint64_t *)&unk_100E73CA0);
  sub_1001649A8();
  v38();
  sub_100178110(v12, (uint64_t *)&unk_100E73CA0);
  if (v37) {
    goto LABEL_14;
  }
LABEL_15:
  sub_1001A204C();
  double v39 = sub_10052E644() * 0.5;
LABEL_16:
  double v40 = 1.0;
  if (v48) {
    double v40 = 0.5;
  }
  return v40 * v39;
}

uint64_t sub_10050F03C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E7D790);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10050C6CC();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  Binding.wrappedValue.setter();
  return sub_100178110((uint64_t)v9, &qword_100E7D790);
}

uint64_t sub_10050F188(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v72 = a3;
  uint64_t v76 = a2;
  uint64_t v77 = a1;
  uint64_t v3 = type metadata accessor for Calendar();
  uint64_t v68 = *(void *)(v3 - 8);
  uint64_t v69 = v3;
  __chkstk_darwin(v3);
  uint64_t v67 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_10017DF08(&qword_100E7D790);
  __chkstk_darwin(v75);
  uint64_t v78 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DayPickerViewModel(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (uint64_t *)((char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  char v71 = (uint64_t *)((char *)&v66 - v10);
  uint64_t v11 = sub_10017DF08(&qword_100E7D798);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v66 - v15;
  uint64_t v17 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v66 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v66 - v21;
  uint64_t v73 = type metadata accessor for Date();
  uint64_t v79 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v24 = (char *)&v66 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v70 = (char *)&v66 - v26;
  __chkstk_darwin(v27);
  uint64_t v74 = (char *)&v66 - v28;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v66 - v30;
  uint64_t v32 = type metadata accessor for AccessibilityAdjustmentDirection();
  uint64_t v33 = *(void *)(v32 - 8);
  __n128 v34 = __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v66 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void (*)(char *, uint64_t), uint64_t, __n128))(v33 + 16))(v36, v77, v32, v34);
  int v37 = (*(uint64_t (**)(char *, uint64_t))(v33 + 88))(v36, v32);
  if (v37 != enum case for AccessibilityAdjustmentDirection.increment(_:))
  {
    uint64_t v43 = v71;
    if (v37 != enum case for AccessibilityAdjustmentDirection.decrement(_:))
    {
      (*(void (**)(char *, uint64_t))(v33 + 8))(v36, v32);
      uint64_t v42 = v73;
      goto LABEL_12;
    }
    swift_retain();
    sub_10024F0AC();
    swift_release();
    uint64_t v44 = *v43;
    swift_bridgeObjectRetain();
    sub_100512DE0((uint64_t)v43, (void (*)(void))type metadata accessor for DayPickerViewModel);
    sub_10043F8B4(v44, (uint64_t)v16);
    swift_bridgeObjectRelease();
    uint64_t v45 = type metadata accessor for DayPickerViewModel.CalendarDayViewModel(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v45) == 1)
    {
      sub_100178110((uint64_t)v16, &qword_100E7D798);
      uint64_t v42 = v73;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 1, 1, v73);
    }
    else
    {
      char v47 = *(void (**)(char *, char *, uint64_t))(v79 + 16);
      uint64_t v42 = v73;
      v47(v22, v16, v73);
      sub_100512DE0((uint64_t)v16, (void (*)(void))type metadata accessor for DayPickerViewModel.CalendarDayViewModel);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v42);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v42) != 1)
      {
        char v71 = (uint64_t *)v47;
        uint64_t v59 = v79;
        (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v31, v22, v42);
        uint64_t v60 = (uint64_t)v78;
        sub_10050C6CC();
        uint64_t v61 = v74;
        Binding.wrappedValue.getter();
        sub_100178110(v60, &qword_100E7D790);
        char v62 = static Date.< infix(_:_:)();
        uint64_t v77 = *(void (**)(char *, uint64_t))(v59 + 8);
        v77(v61, v42);
        if (v62)
        {
          uint64_t v66 = v31;
          sub_10050C6CC();
          Binding.wrappedValue.getter();
          sub_100178110(v60, &qword_100E7D790);
          uint64_t v63 = v67;
          static Calendar.current.getter();
          Date.wc_addDays(_:calendar:)();
          (*(void (**)(char *, uint64_t))(v68 + 8))(v63, v69);
          uint64_t v64 = v70;
          v77(v70, v42);
          sub_10050C6CC();
          ((void (*)(char *, char *, uint64_t))v71)(v64, v61, v42);
          Binding.wrappedValue.setter();
          sub_100178110(v60, &qword_100E7D790);
          uint64_t v65 = v77;
          v77(v61, v42);
          v65(v66, v42);
        }
        else
        {
          v77(v31, v42);
        }
        BOOL v48 = v61;
        goto LABEL_13;
      }
    }
    sub_100178110((uint64_t)v22, (uint64_t *)&unk_100E73CA0);
    goto LABEL_12;
  }
  uint64_t v38 = v24;
  swift_retain();
  sub_10024F0AC();
  swift_release();
  uint64_t v39 = *v8;
  swift_bridgeObjectRetain();
  sub_100512DE0((uint64_t)v8, (void (*)(void))type metadata accessor for DayPickerViewModel);
  sub_1003041BC(v39, (uint64_t)v13);
  swift_bridgeObjectRelease();
  uint64_t v40 = type metadata accessor for DayPickerViewModel.CalendarDayViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v40) == 1)
  {
    sub_100178110((uint64_t)v13, &qword_100E7D798);
    uint64_t v41 = (uint64_t)v19;
    uint64_t v42 = v73;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 1, 1, v73);
LABEL_8:
    sub_100178110(v41, (uint64_t *)&unk_100E73CA0);
LABEL_12:
    BOOL v48 = v74;
    goto LABEL_13;
  }
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v79 + 16);
  uint64_t v41 = (uint64_t)v19;
  uint64_t v42 = v73;
  v46(v19, v13, v73);
  sub_100512DE0((uint64_t)v13, (void (*)(void))type metadata accessor for DayPickerViewModel.CalendarDayViewModel);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v42);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v42) == 1) {
    goto LABEL_8;
  }
  uint64_t v77 = (void (*)(char *, uint64_t))v46;
  uint64_t v51 = v79;
  uint64_t v52 = (uint64_t *)v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v79 + 32))(v38, v41, v42);
  uint64_t v53 = (uint64_t)v78;
  sub_10050C6CC();
  BOOL v48 = v74;
  Binding.wrappedValue.getter();
  sub_100178110(v53, &qword_100E7D790);
  char v54 = static Date.> infix(_:_:)();
  uint64_t v55 = *(char **)(v51 + 8);
  ((void (*)(char *, uint64_t))v55)(v48, v42);
  if (v54)
  {
    uint64_t v66 = v55;
    sub_10050C6CC();
    char v71 = v52;
    uint64_t v56 = v70;
    Binding.wrappedValue.getter();
    sub_100178110(v53, &qword_100E7D790);
    uint64_t v57 = v67;
    static Calendar.current.getter();
    Date.wc_addDays(_:calendar:)();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v57, v69);
    uint64_t v58 = v66;
    ((void (*)(char *, uint64_t))v66)(v56, v42);
    sub_10050C6CC();
    ((void (*)(char *, char *, uint64_t))v77)(v56, v48, v42);
    Binding.wrappedValue.setter();
    sub_100178110(v53, &qword_100E7D790);
    ((void (*)(char *, uint64_t))v58)(v48, v42);
    ((void (*)(uint64_t *, uint64_t))v58)(v71, v42);
  }
  else
  {
    ((void (*)(uint64_t *, uint64_t))v55)(v52, v42);
  }
LABEL_13:
  uint64_t v49 = (uint64_t)v78;
  sub_10050C6CC();
  Binding.wrappedValue.getter();
  sub_100178110(v49, &qword_100E7D790);
  sub_100510904((unint64_t *)&qword_100E63978, (void (*)(uint64_t))&type metadata accessor for Date);
  ScrollViewProxy.scrollTo<A>(_:anchor:)();
  return (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v48, v42);
}

uint64_t sub_10050FC20()
{
  return swift_release();
}

uint64_t sub_10050FC8C()
{
  return ScrollViewProxy.scrollTo<A>(_:anchor:)();
}

uint64_t sub_10050FD20()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DayPickerViewModel(0);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_10024F0AC();
  swift_release();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, &v7[*(int *)(v5 + 28)], v0);
  sub_100512DE0((uint64_t)v7, (void (*)(void))type metadata accessor for DayPickerViewModel);
  sub_100510904((unint64_t *)&qword_100E63978, (void (*)(uint64_t))&type metadata accessor for Date);
  ScrollViewProxy.scrollTo<A>(_:anchor:)();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_10050FEE8()
{
  uint64_t v0 = sub_10017DF08(&qword_100E651D0);
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for DayPickerViewModel(0);
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E77C98);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_10024F0AC();
  swift_release();
  uint64_t v10 = &v6[*(int *)(v4 + 32)];
  uint64_t v12 = *(void *)v10;
  uint64_t v11 = *((void *)v10 + 1);
  swift_bridgeObjectRetain();
  sub_100512DE0((uint64_t)v6, (void (*)(void))type metadata accessor for DayPickerViewModel);
  uint64_t v22 = v12;
  uint64_t v23 = v11;
  sub_10014A85C();
  uint64_t v13 = Text.init<A>(_:)();
  uint64_t v15 = v14;
  uint64_t v22 = v13;
  uint64_t v23 = v14;
  char v17 = v16 & 1;
  char v24 = v16 & 1;
  uint64_t v25 = v18;
  View.accessibilityHidden(_:)();
  sub_100191924(v13, v15, v17);
  swift_bridgeObjectRelease();
  uint64_t v19 = enum case for DynamicTypeSize.accessibility1(_:);
  uint64_t v20 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v2, v19, v20);
  sub_100510904(&qword_100E651F0, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result)
  {
    sub_100473930();
    sub_1001246C8((unint64_t *)&unk_100EAADB0, &qword_100E651D0);
    View.dynamicTypeSize<A>(_:)();
    sub_100178110((uint64_t)v2, &qword_100E651D0);
    return sub_100178110((uint64_t)v9, &qword_100E77C98);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005101E8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100510224@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10050CF54(a1, v2 + 16, a2);
}

uint64_t sub_10051022C@<X0>(uint64_t a1@<X8>)
{
  return sub_10050E028(*(void *)(v1 + 16), a1);
}

unint64_t sub_100510234()
{
  unint64_t result = qword_100E7D758;
  if (!qword_100E7D758)
  {
    sub_10018C6DC(&qword_100E7D750);
    sub_1001246C8(&qword_100E7D760, &qword_100E7D768);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7D758);
  }
  return result;
}

unint64_t sub_1005102D4()
{
  unint64_t result = qword_100E7D778;
  if (!qword_100E7D778)
  {
    sub_10018C6DC(&qword_100E7A178);
    sub_100510380();
    sub_100510904((unint64_t *)&qword_100E66BF8, (void (*)(uint64_t))type metadata accessor for AutomationInfoViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7D778);
  }
  return result;
}

unint64_t sub_100510380()
{
  unint64_t result = qword_100E7D780;
  if (!qword_100E7D780)
  {
    sub_10018C6DC(&qword_100E7A170);
    sub_10018C6DC(&qword_100E7D728);
    sub_10018C6DC(&qword_100E7D720);
    sub_10018C6DC(&qword_100E651D0);
    sub_10018C6DC(&qword_100E7D718);
    sub_1001246C8(&qword_100E7D770, &qword_100E7D718);
    swift_getOpaqueTypeConformance2();
    sub_1001246C8((unint64_t *)&unk_100EAADB0, &qword_100E651D0);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_100510904((unint64_t *)&qword_100EAACA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7D780);
  }
  return result;
}

uint64_t sub_100510544()
{
  uint64_t v1 = type metadata accessor for ScrollViewProxy();
  sub_100179C0C();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 40);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);

  return swift_deallocObject();
}

uint64_t sub_1005105F0(void (*a1)(char *, uint64_t))
{
  uint64_t v3 = type metadata accessor for ScrollViewProxy();
  sub_1001627C0(v3);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return sub_10050F188(a1, v1 + 16, v5);
}

uint64_t sub_100510644()
{
  type metadata accessor for ScrollViewProxy();
  sub_100162E4C();
  sub_100162F0C();
  v0();

  return swift_deallocObject();
}

uint64_t sub_1005106C8()
{
  uint64_t v0 = type metadata accessor for ScrollViewProxy();
  sub_1001627C0(v0);

  return sub_10050FC20();
}

unint64_t sub_100510728()
{
  unint64_t result = qword_100E7D788;
  if (!qword_100E7D788)
  {
    sub_10018C6DC(&qword_100E7D738);
    sub_1005102D4();
    sub_100510904((unint64_t *)&qword_100EAACA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7D788);
  }
  return result;
}

uint64_t sub_1005107D4()
{
  type metadata accessor for ScrollViewProxy();
  sub_100162E4C();
  unint64_t v2 = (*(void *)(v1 + 64)
      + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_100162F0C();
  v3();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + v2 + 24);

  return swift_deallocObject();
}

uint64_t sub_100510878()
{
  type metadata accessor for ScrollViewProxy();

  return sub_10050FD20();
}

uint64_t sub_100510904(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10051094C()
{
  return sub_10050FC8C();
}

uint64_t sub_10051096C@<X0>(uint64_t a1@<X8>)
{
  return sub_10050C7E0(a1);
}

uint64_t sub_10051097C()
{
  swift_unknownObjectRelease();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 56);

  return swift_deallocObject();
}

uint64_t sub_1005109C4()
{
  return sub_10050C8DC();
}

uint64_t sub_1005109D0()
{
  return sub_10050C948(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1005109F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10050E430(a1, v2 + 16, a2);
}

uint64_t sub_1005109F8()
{
  type metadata accessor for DayPickerViewModel.CalendarDayViewModel(0);
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 40);
  type metadata accessor for Date();
  sub_100162E4C();
  sub_100162F0C();
  v1();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100510B00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DayPickerViewModel.CalendarDayViewModel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100510B64()
{
  uint64_t v1 = type metadata accessor for DayPickerViewModel.CalendarDayViewModel(0);
  sub_1001627C0(v1);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return sub_10050F03C(v0 + 16, v3);
}

uint64_t type metadata accessor for DayView()
{
  uint64_t result = qword_100E7D848;
  if (!qword_100E7D848) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_100510BFC(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v22 = *a2;
    *a1 = *a2;
    a1 = (void *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = (int *)type metadata accessor for DayPickerViewModel.CalendarDayViewModel(0);
    uint64_t v9 = v8[5];
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    *uint64_t v10 = v13;
    v10[1] = v12;
    uint64_t v14 = v8[6];
    uint64_t v15 = (void *)((char *)a1 + v14);
    char v16 = (void *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    *((unsigned char *)a1 + v8[7]) = *((unsigned char *)a2 + v8[7]);
    uint64_t v18 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    uint64_t v19 = (void *)((char *)a1 + v18);
    uint64_t v20 = (void *)((char *)a2 + v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *uint64_t v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v23 = a3[7];
    char v24 = (void *)((char *)a1 + v23);
    uint64_t v25 = (void *)((char *)a2 + v23);
    sub_10017DF08(&qword_100E62D60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v26 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
    }
    else
    {
      *char v24 = *v25;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v27 = a3[9];
    *(void *)((char *)a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
    *(void *)((char *)a1 + v27) = *(void *)((char *)a2 + v27);
  }
  return a1;
}

uint64_t sub_100510E54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  type metadata accessor for DayPickerViewModel.CalendarDayViewModel(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  sub_10017DF08(&qword_100E62D60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for DynamicTypeSize();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    return v9(v7, v8);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_100510FE0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for DayPickerViewModel.CalendarDayViewModel(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  uint64_t v13 = v7[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  uint64_t v16 = v15[1];
  void *v14 = *v15;
  v14[1] = v16;
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  uint64_t v17 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v20 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  }
  else
  {
    void *v18 = *v19;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v21 = a3[7];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  sub_10017DF08(&qword_100E62D60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
  }
  else
  {
    void *v22 = *v23;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v25 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v25) = *(void *)(a2 + v25);
  return a1;
}

uint64_t sub_1005111E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for DayPickerViewModel.CalendarDayViewModel(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  *uint64_t v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = v7[6];
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (void *)(a2 + v11);
  *uint64_t v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  if (a1 != a2)
  {
    uint64_t v14 = a3[6];
    uint64_t v15 = (void *)(a1 + v14);
    uint64_t v16 = (void *)(a2 + v14);
    sub_100178110(a1 + v14, &qword_100E66E50);
    sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = a3[7];
    uint64_t v19 = (void *)(a1 + v18);
    uint64_t v20 = (void *)(a2 + v18);
    sub_100178110(a1 + v18, &qword_100E62D60);
    sub_10017DF08(&qword_100E62D60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v21 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
    }
    else
    {
      *uint64_t v19 = *v20;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_100511444(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for DayPickerViewModel.CalendarDayViewModel(0);
  *(_OWORD *)(a1 + v7[5]) = *(_OWORD *)(a2 + v7[5]);
  *(_OWORD *)(a1 + v7[6]) = *(_OWORD *)(a2 + v7[6]);
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  uint64_t v8 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (const void *)(a2 + v8);
  uint64_t v11 = sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v12 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = sub_10017DF08(&qword_100E62D60);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  uint64_t v18 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  return a1;
}

uint64_t sub_100511644(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = (int *)type metadata accessor for DayPickerViewModel.CalendarDayViewModel(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = v7[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  void *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v7[7]) = *(unsigned char *)(a2 + v7[7]);
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  if (a1 != a2)
  {
    uint64_t v18 = a3[6];
    uint64_t v19 = (void *)(a1 + v18);
    uint64_t v20 = (const void *)(a2 + v18);
    sub_100178110(a1 + v18, &qword_100E66E50);
    uint64_t v21 = sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v22 - 8) + 32))(v19, v20, v22);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    uint64_t v23 = a3[7];
    uint64_t v24 = (void *)(a1 + v23);
    uint64_t v25 = (const void *)(a2 + v23);
    sub_100178110(a1 + v23, &qword_100E62D60);
    uint64_t v26 = sub_10017DF08(&qword_100E62D60);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v27 - 8) + 32))(v24, v25, v27);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
    }
  }
  uint64_t v28 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v28) = *(void *)(a2 + v28);
  return a1;
}

uint64_t sub_100511894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005118A8);
}

uint64_t sub_1005118A8(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for DayPickerViewModel.CalendarDayViewModel(0);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    if (a2 == 254)
    {
      unsigned int v10 = *(unsigned __int8 *)(a1 + a3[5]);
      if (v10 >= 2) {
        return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
      }
      else {
        return 0;
      }
    }
    sub_10017DF08(&qword_100E6D908);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a2)
    {
      uint64_t v8 = v12;
      uint64_t v14 = a3[6];
    }
    else
    {
      uint64_t v8 = sub_10017DF08(&qword_100E79530);
      uint64_t v14 = a3[7];
    }
    uint64_t v9 = a1 + v14;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_100511990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005119A4);
}

void sub_1005119A4(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  type metadata accessor for DayPickerViewModel.CalendarDayViewModel(0);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    if (a3 == 254)
    {
      *(unsigned char *)(a1 + a4[5]) = a2 + 1;
      return;
    }
    sub_10017DF08(&qword_100E6D908);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[6];
    }
    else
    {
      uint64_t v10 = sub_10017DF08(&qword_100E79530);
      uint64_t v14 = a4[7];
    }
    uint64_t v11 = a1 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

void sub_100511A78()
{
  type metadata accessor for DayPickerViewModel.CalendarDayViewModel(319);
  if (v0 <= 0x3F)
  {
    sub_10001E87C(319, (unint64_t *)&qword_100E6D980, (void (*)(uint64_t))&type metadata accessor for ColorSchemeContrast);
    if (v1 <= 0x3F)
    {
      sub_10001E87C(319, (unint64_t *)&qword_100E77A78, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_100511BCC()
{
  return sub_1001246C8(&qword_100E7D890, &qword_100E7D898);
}

uint64_t sub_100511C08()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100511C24@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static HorizontalAlignment.center.getter();
  *(void *)(a1 + 8) = 0x4018000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v3 = sub_10017DF08(&qword_100E7D8A0);
  return sub_100511C70(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_100511C70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v104 = a1;
  uint64_t v89 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100E7D8A8);
  __chkstk_darwin(v3 - 8);
  uint64_t v88 = &v83[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v93 = sub_10017DF08(&qword_100E651D0);
  __chkstk_darwin(v93);
  uint64_t v105 = &v83[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v86 = sub_10017DF08(&qword_100E7D8B0);
  uint64_t v95 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v107 = &v83[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v85 = sub_10017DF08(&qword_100E7D8B8);
  __chkstk_darwin(v85);
  uint64_t v87 = &v83[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  uint64_t v94 = &v83[-v9];
  __chkstk_darwin(v10);
  uint64_t v96 = &v83[-v11];
  uint64_t v12 = type metadata accessor for Font.TextStyle();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = &v83[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v106 = (int *)type metadata accessor for DayPickerViewModel.CalendarDayViewModel(0);
  uint64_t v16 = (void *)(a1 + v106[5]);
  uint64_t v17 = v16[1];
  v116[0] = *v16;
  v116[1] = v17;
  unint64_t v103 = sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v18 = Text.init<A>(_:)();
  uint64_t v20 = v19;
  char v22 = v21 & 1;
  uint64_t v23 = *(unsigned char **)(v13 + 104);
  uint64_t v101 = v13 + 104;
  uint64_t v102 = v23;
  uint64_t v97 = v15;
  uint64_t v98 = v12;
  ((void (*)(unsigned char *, void, uint64_t))v23)(v15, enum case for Font.TextStyle.caption2(_:), v12);
  static Font.Weight.bold.getter();
  static Font.system(_:weight:)();
  uint64_t v24 = *(void (**)(unsigned char *, uint64_t))(v13 + 8);
  uint64_t v99 = v13 + 8;
  uint64_t v100 = v24;
  v24(v15, v12);
  uint64_t v25 = Text.font(_:)();
  uint64_t v27 = v26;
  LOBYTE(v13) = v28;
  swift_release();
  sub_100191924(v18, v20, v22);
  swift_bridgeObjectRelease();
  static Color.primary.getter();
  uint64_t v29 = Text.foregroundColor(_:)();
  uint64_t v90 = v30;
  uint64_t v91 = v29;
  int v84 = v31;
  uint64_t v92 = v32;
  swift_release();
  sub_100191924(v25, v27, v13 & 1);
  swift_bridgeObjectRelease();
  uint64_t v33 = v104;
  __n128 v34 = (void *)(v104 + v106[6]);
  uint64_t v35 = v34[1];
  v116[0] = *v34;
  v116[1] = v35;
  swift_bridgeObjectRetain();
  uint64_t v36 = Text.init<A>(_:)();
  uint64_t v38 = v37;
  char v40 = v39 & 1;
  uint64_t v42 = v97;
  uint64_t v41 = v98;
  ((void (*)(unsigned char *, void, uint64_t))v102)(v97, enum case for Font.TextStyle.body(_:), v98);
  static Font.Weight.medium.getter();
  static Font.system(_:weight:)();
  v100(v42, v41);
  uint64_t v43 = Text.font(_:)();
  uint64_t v45 = v44;
  LODWORD(v103) = v46;
  swift_release();
  sub_100191924(v36, v38, v40);
  swift_bridgeObjectRelease();
  uint64_t v47 = type metadata accessor for DayView();
  int v48 = *(unsigned __int8 *)(v33 + *(int *)(v47 + 20));
  uint64_t v102 = (unsigned char *)*(int *)(v47 + 20);
  if (v48 == 1)
  {
    uint64_t v49 = v33;
    id v50 = [self systemBackgroundColor];
    Color.init(_:)();
  }
  else
  {
    uint64_t v49 = v33;
    if (*(unsigned char *)(v33 + v106[7]))
    {
      if (*(unsigned char *)(v33 + v106[7]) == 1) {
        static Color.cyan.getter();
      }
      else {
        static Color.primary.getter();
      }
    }
    else
    {
      static Color.gray.getter();
    }
  }
  char v51 = v103 & 1;
  uint64_t v52 = Text.foregroundColor(_:)();
  uint64_t v106 = v53;
  char v55 = v54;
  unint64_t v103 = v56;
  swift_release();
  sub_100191924(v43, v45, v51);
  swift_bridgeObjectRelease();
  static Alignment.center.getter();
  while (1)
  {
    _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
    char v115 = v55 & 1;
    char v114 = v117;
    char v113 = v119;
    char v112 = v121;
    char v111 = v123;
    char v110 = v125;
    char v109 = v127;
    *(void *)&v108[0] = v52;
    *((void *)&v108[0] + 1) = v106;
    LOBYTE(v108[1]) = v55 & 1;
    *((void *)&v108[1] + 1) = v103;
    *(void *)&v108[2] = v116[22];
    BYTE8(v108[2]) = v117;
    *(void *)&v108[3] = v118;
    BYTE8(v108[3]) = v119;
    *(void *)&v108[4] = v120;
    BYTE8(v108[4]) = v121;
    *(void *)&v108[5] = v122;
    BYTE8(v108[5]) = v123;
    *(void *)&v108[6] = v124;
    BYTE8(v108[6]) = v125;
    *(void *)&v108[7] = v126;
    BYTE8(v108[7]) = v127;
    v108[8] = v128;
    uint64_t v57 = enum case for DynamicTypeSize.accessibility1(_:);
    uint64_t v58 = type metadata accessor for DynamicTypeSize();
    uint64_t v59 = (uint64_t)v105;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v58 - 8) + 104))(v105, v57, v58);
    sub_100510904(&qword_100E651F0, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
    if (dispatch thunk of static Equatable.== infix(_:_:)()) {
      break;
    }
    __break(1u);
    static os_log_type_t.fault.getter();
    uint64_t v82 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  sub_10017DF08(&qword_100E77438);
  sub_100512BBC();
  sub_1001246C8((unint64_t *)&unk_100EAADB0, &qword_100E651D0);
  View.dynamicTypeSize<A>(_:)();
  sub_100178110(v59, &qword_100E651D0);
  memcpy(v116, v108, 0x90uLL);
  sub_10045A4EC((uint64_t)v116);
  if (v102[v49])
  {
    uint64_t v60 = v88;
    sub_100512604(v49, (uint64_t)v88);
    uint64_t v61 = 0;
  }
  else
  {
    uint64_t v61 = 1;
    uint64_t v60 = v88;
  }
  uint64_t v62 = v89;
  uint64_t v64 = v86;
  uint64_t v63 = (uint64_t)v87;
  uint64_t v65 = v85;
  char v66 = v84;
  uint64_t v67 = sub_10017DF08(&qword_100E7D8C0);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, v61, 1, v67);
  char v68 = v66 & 1;
  uint64_t v69 = static Alignment.center.getter();
  uint64_t v71 = v70;
  uint64_t v72 = (uint64_t)v94;
  uint64_t v73 = (uint64_t)&v94[*(int *)(v65 + 36)];
  sub_10006DF38((uint64_t)v60, v73, &qword_100E7D8A8);
  uint64_t v74 = (uint64_t *)(v73 + *(int *)(sub_10017DF08(&qword_100E7D8C8) + 36));
  uint64_t *v74 = v69;
  v74[1] = v71;
  uint64_t v75 = v95;
  uint64_t v76 = v107;
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v95 + 16))(v72, v107, v64);
  sub_100178110((uint64_t)v60, &qword_100E7D8A8);
  (*(void (**)(unsigned char *, uint64_t))(v75 + 8))(v76, v64);
  uint64_t v77 = v96;
  sub_10020E72C(v72, (uint64_t)v96, &qword_100E7D8B8);
  sub_10006DF38((uint64_t)v77, v63, &qword_100E7D8B8);
  uint64_t v79 = v90;
  uint64_t v78 = v91;
  *(void *)uint64_t v62 = v91;
  *(void *)(v62 + 8) = v79;
  *(unsigned char *)(v62 + 16) = v68;
  *(void *)(v62 + 24) = v92;
  uint64_t v80 = sub_10017DF08(&qword_100E7D8D0);
  sub_10006DF38(v63, v62 + *(int *)(v80 + 48), &qword_100E7D8B8);
  sub_100190CC4(v78, v79, v68);
  swift_bridgeObjectRetain();
  sub_100178110((uint64_t)v77, &qword_100E7D8B8);
  sub_100178110(v63, &qword_100E7D8B8);
  sub_100191924(v78, v79, v68);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100512604@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v45 = a1;
  uint64_t v48 = a2;
  uint64_t v47 = sub_10017DF08(&qword_100E7D8D8);
  __chkstk_darwin(v47);
  uint64_t v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_10017DF08(&qword_100E744A8);
  __chkstk_darwin(v43);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for RoundedRectangle();
  __chkstk_darwin(v42);
  uint64_t v9 = (double *)((char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v46 = sub_10017DF08(&qword_100E7D8E0);
  __chkstk_darwin(v46);
  uint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v44 = (uint64_t)&v39 - v13;
  uint64_t v14 = type metadata accessor for DynamicTypeSize();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DayView();
  sub_1001CAA20();
  char v19 = DynamicTypeSize.isAccessibilitySize.getter();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  int v20 = *(unsigned __int8 *)(v45 + *(int *)(type metadata accessor for DayPickerViewModel.CalendarDayViewModel(0) + 28));
  if (v19)
  {
    if (v20)
    {
      if (v20 == 1) {
        uint64_t v21 = static Color.cyan.getter();
      }
      else {
        uint64_t v21 = static Color.white.getter();
      }
    }
    else
    {
      uint64_t v21 = static Color.gray.getter();
    }
    uint64_t v23 = v21;
    double v24 = *(double *)(v3 + *(int *)(v18 + 32));
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v45 = v49;
    char v25 = v50;
    uint64_t v26 = v51;
    int v41 = v52;
    uint64_t v39 = *((void *)&v53 + 1);
    uint64_t v40 = v53;
    double v27 = v24 * 0.15;
    char v28 = (char *)v9 + *(int *)(v42 + 20);
    uint64_t v29 = enum case for RoundedCornerStyle.continuous(_:);
    uint64_t v30 = type metadata accessor for RoundedCornerStyle();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104))(v28, v29, v30);
    *uint64_t v9 = v27;
    v9[1] = v27;
    sub_100512D8C((uint64_t)v9, (uint64_t)v7, (void (*)(void))&type metadata accessor for RoundedRectangle);
    *(_WORD *)&v7[*(int *)(v43 + 36)] = 256;
    sub_10006DF38((uint64_t)v7, (uint64_t)&v11[*(int *)(v46 + 36)], &qword_100E744A8);
    *(void *)uint64_t v11 = v23;
    *((_WORD *)v11 + 4) = 256;
    *((void *)v11 + 2) = v45;
    v11[24] = v25;
    *((void *)v11 + 4) = v26;
    v11[40] = v41;
    uint64_t v31 = v39;
    *((void *)v11 + 6) = v40;
    *((void *)v11 + 7) = v31;
    swift_retain();
    sub_100178110((uint64_t)v7, &qword_100E744A8);
    sub_100512DE0((uint64_t)v9, (void (*)(void))&type metadata accessor for RoundedRectangle);
    swift_release();
    uint64_t v32 = v44;
    sub_10020E72C((uint64_t)v11, v44, &qword_100E7D8E0);
    sub_10006DF38(v32, (uint64_t)v5, &qword_100E7D8E0);
    swift_storeEnumTagMultiPayload();
    sub_10017DF08(&qword_100E7D8E8);
    sub_100512C30();
    sub_100512CF0(&qword_100E7D918, &qword_100E7D8E8, &qword_100E7D920, &qword_100E7D928);
    _ConditionalContent<>.init(storage:)();
    return sub_100178110(v32, &qword_100E7D8E0);
  }
  else
  {
    if (v20)
    {
      if (v20 == 1) {
        uint64_t v22 = static Color.cyan.getter();
      }
      else {
        uint64_t v22 = static Color.white.getter();
      }
    }
    else
    {
      uint64_t v22 = static Color.gray.getter();
    }
    uint64_t v34 = v22;
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v35 = v49;
    char v36 = v50;
    uint64_t v37 = v51;
    char v38 = v52;
    *(void *)uint64_t v5 = v34;
    *((_WORD *)v5 + 4) = 256;
    *((void *)v5 + 2) = v35;
    v5[24] = v36;
    *((void *)v5 + 4) = v37;
    v5[40] = v38;
    *((_OWORD *)v5 + 3) = v53;
    swift_storeEnumTagMultiPayload();
    sub_10017DF08(&qword_100E7D8E8);
    sub_100512C30();
    sub_100512CF0(&qword_100E7D918, &qword_100E7D8E8, &qword_100E7D920, &qword_100E7D928);
    return _ConditionalContent<>.init(storage:)();
  }
}

unint64_t sub_100512BBC()
{
  unint64_t result = qword_100E77430;
  if (!qword_100E77430)
  {
    sub_10018C6DC(&qword_100E77438);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E77430);
  }
  return result;
}

unint64_t sub_100512C30()
{
  unint64_t result = qword_100E7D8F0;
  if (!qword_100E7D8F0)
  {
    sub_10018C6DC(&qword_100E7D8E0);
    sub_100512CF0((unint64_t *)&qword_100E7D8F8, &qword_100E7D900, &qword_100E7D908, &qword_100E7D910);
    sub_1001246C8(&qword_100E79F38, &qword_100E744A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7D8F0);
  }
  return result;
}

uint64_t sub_100512CF0(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(a2);
    sub_1001246C8(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100512D8C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_100512DE0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_100512E34()
{
  return sub_1001246C8(&qword_100E7D930, &qword_100E7D938);
}

void *TipView.init(model:style:onAction:onDismiss:)@<X0>(const void *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, __int16 a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>)
{
  int v20 = (uint64_t *)(a9 + *(int *)(type metadata accessor for TipView(0) + 32));
  *int v20 = swift_getKeyPath();
  sub_10017DF08(&qword_100E62CB8);
  swift_storeEnumTagMultiPayload();
  uint64_t result = memcpy((void *)(a9 + 32), a1, 0x48uLL);
  *(unsigned char *)a9 = a2;
  *(double *)(a9 + 8) = a10;
  *(void *)(a9 + 16) = a3;
  *(unsigned char *)(a9 + 24) = a4 & 1;
  *(unsigned char *)(a9 + 25) = HIBYTE(a4) & 1;
  *(void *)(a9 + 104) = a5;
  *(void *)(a9 + 112) = a6;
  *(void *)(a9 + 120) = a7;
  *(void *)(a9 + 128) = a8;
  return result;
}

uint64_t type metadata accessor for TipView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E7D9E8);
}

uint64_t sub_100512F6C()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_100512F90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100513030(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

uint64_t sub_100512FBC()
{
  return EnvironmentValues.layoutDirection.getter();
}

uint64_t sub_100512FE0()
{
  return EnvironmentValues.layoutDirection.getter();
}

uint64_t sub_100513004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100513030(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for LayoutDirection, (uint64_t (*)(char *))&EnvironmentValues.layoutDirection.setter);
}

uint64_t sub_100513030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  sub_100179C0C();
  __n128 v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v14 - v10;
  (*(void (**)(char *, uint64_t, __n128))(v12 + 16))((char *)&v14 - v10, a1, v9);
  return a6(v11);
}

uint64_t sub_1005130D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100513030(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for LayoutDirection, (uint64_t (*)(char *))&EnvironmentValues.layoutDirection.setter);
}

uint64_t TipView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  type metadata accessor for AccessibilityChildBehavior();
  sub_100179C0C();
  uint64_t v42 = v4;
  uint64_t v43 = v3;
  __chkstk_darwin(v3);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = sub_10017DF08(&qword_100E7D940);
  __chkstk_darwin(v8 - 8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v39 = sub_10017DF08(&qword_100E7D948);
  sub_100162E4C();
  __chkstk_darwin(v12);
  sub_1001626E0();
  uint64_t v15 = v14 - v13;
  sub_10017DF08(&qword_100E7D950);
  sub_100179C0C();
  uint64_t v44 = v16;
  uint64_t v45 = v17;
  __chkstk_darwin(v16);
  sub_100109314();
  uint64_t v38 = v18;
  uint64_t v19 = sub_10017DF08(&qword_100E7D958);
  __chkstk_darwin(v19 - 8);
  sub_100109314();
  uint64_t v41 = v20;
  uint64_t v21 = sub_10017DF08(&qword_100E7D960);
  uint64_t v22 = v21 - 8;
  __chkstk_darwin(v21);
  sub_1001626E0();
  uint64_t v25 = v24 - v23;
  uint64_t v40 = sub_10017DF08(&qword_100E7D968) - 8;
  __chkstk_darwin(v40);
  sub_1001626E0();
  uint64_t v28 = v27 - v26;
  *(void *)uint64_t v11 = static VerticalAlignment.top.getter();
  *(void *)(v11 + 8) = 0x4032000000000000;
  *(unsigned char *)(v11 + 16) = 0;
  uint64_t v29 = sub_10017DF08(&qword_100E7D970);
  sub_1005135CC(v2, v11 + *(int *)(v29 + 44));
  uint64_t v30 = static Color.secondary.getter();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1001262FC(v11, v15, &qword_100E7D940);
  uint64_t v32 = (uint64_t *)(v15 + *(int *)(v39 + 36));
  *uint64_t v32 = KeyPath;
  v32[1] = v30;
  sub_1001781AC(v11, &qword_100E7D940);
  static AccessibilityChildBehavior.contain.getter();
  sub_100515D40();
  View.accessibilityElement(children:)();
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v7, v43);
  sub_1001781AC(v15, &qword_100E7D948);
  id v33 = [self mainBundle];
  v47._object = (void *)0x8000000100CA1C70;
  v34._countAndFlagsBits = 7366996;
  v34._object = (void *)0xE300000000000000;
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  v47._countAndFlagsBits = 0xD00000000000003CLL;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v34, (Swift::String_optional)0, (NSBundle)v33, v35, v47);

  swift_getOpaqueTypeConformance2();
  sub_10014A85C();
  View.accessibilityLabel<A>(_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v38, v44);
  sub_1001262FC(v41, v25, &qword_100E7D958);
  *(unsigned char *)(v25 + *(int *)(v22 + 44)) = 1;
  sub_1001781AC(v41, &qword_100E7D958);
  static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  sub_1001812B4();
  sub_1001262FC(v25, v28, &qword_100E7D960);
  sub_1001A206C(v28 + *(int *)(v40 + 44));
  sub_1001781AC(v25, &qword_100E7D960);
  static Edge.Set.vertical.getter();
  EdgeInsets.init(_all:)();
  sub_1001812B4();
  sub_1001262FC(v28, a1, &qword_100E7D968);
  uint64_t v36 = sub_10017DF08(&qword_100E7D988);
  sub_1001A206C(a1 + *(int *)(v36 + 36));
  return sub_1001781AC(v28, &qword_100E7D968);
}

uint64_t sub_1005135CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v92 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100E7DB30);
  __chkstk_darwin(v3 - 8);
  uint64_t v93 = (uint64_t)&v73 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v91 = (uint64_t *)((char *)&v73 - v6);
  uint64_t v7 = type metadata accessor for LayoutDirection();
  uint64_t v89 = *(void *)(v7 - 8);
  uint64_t v90 = v7;
  __chkstk_darwin(v7);
  uint64_t v88 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v86 = (char *)&v73 - v10;
  uint64_t v11 = type metadata accessor for _BlendModeEffect();
  __chkstk_darwin(v11 - 8);
  uint64_t v80 = (char *)&v73 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for BlendMode();
  uint64_t v74 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v75 = (char *)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Image.ResizingMode();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10017DF08(&qword_100E7DB38);
  uint64_t v19 = v18 - 8;
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v73 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_10017DF08(&qword_100E7DB40) - 8;
  __chkstk_darwin(v77);
  uint64_t v23 = (char *)&v73 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_10017DF08(&qword_100E7DB48);
  __chkstk_darwin(v79);
  uint64_t v25 = (char *)&v73 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_10017DF08(&qword_100E7DB50);
  __chkstk_darwin(v26 - 8);
  uint64_t v78 = (char *)&v73 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_10017DF08(&qword_100E7DB58) - 8;
  __chkstk_darwin(v82);
  uint64_t v81 = (char *)&v73 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_10017DF08(&qword_100E7DB60);
  __chkstk_darwin(v84);
  uint64_t v87 = (uint64_t)&v73 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v83 = (uint64_t)&v73 - v31;
  __chkstk_darwin(v32);
  uint64_t v85 = (uint64_t)&v73 - v33;
  sub_1003188F8(*(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
  (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, enum case for Image.ResizingMode.stretch(_:), v14);
  uint64_t v34 = Image.resizable(capInsets:resizingMode:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  uint64_t v35 = v74;
  uint64_t v36 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
  if (!*(unsigned char *)a1) {
    uint64_t v36 = (unsigned int *)&enum case for BlendMode.normal(_:);
  }
  uint64_t v37 = v75;
  uint64_t v38 = v76;
  (*(void (**)(char *, void, uint64_t))(v74 + 104))(v75, *v36, v76);
  uint64_t v39 = (uint64_t)v80;
  (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v80, v37, v38);
  sub_1005173D0(v39, (uint64_t)&v21[*(int *)(v19 + 44)]);
  *(void *)uint64_t v21 = v34;
  *((void *)v21 + 1) = 0;
  *((_WORD *)v21 + 8) = 1;
  swift_retain();
  sub_1000D8C98(v39);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v38);
  swift_release();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_1001262FC((uint64_t)v21, (uint64_t)v23, &qword_100E7DB38);
  uint64_t v40 = &v23[*(int *)(v77 + 44)];
  long long v41 = v95;
  *(_OWORD *)uint64_t v40 = v94;
  *((_OWORD *)v40 + 1) = v41;
  *((_OWORD *)v40 + 2) = v96;
  sub_1001781AC((uint64_t)v21, &qword_100E7DB38);
  uint64_t v42 = static VerticalAlignment.top.getter();
  sub_1001262FC((uint64_t)v23, (uint64_t)v25, &qword_100E7DB40);
  uint64_t v43 = (uint64_t *)&v25[*(int *)(v79 + 36)];
  uint64_t *v43 = v42;
  v43[1] = (uint64_t)sub_100513F58;
  v43[2] = 0;
  sub_1001781AC((uint64_t)v23, &qword_100E7DB40);
  sub_100516988((uint64_t)&unk_100E7DB68);
  uint64_t v44 = (uint64_t)v78;
  View.accessibility(hidden:)();
  sub_1001781AC((uint64_t)v25, &qword_100E7DB48);
  type metadata accessor for TipView(0);
  uint64_t v45 = v86;
  sub_1001FF23C();
  uint64_t v46 = v88;
  uint64_t v47 = v89;
  uint64_t v48 = v90;
  (*(void (**)(char *, void, uint64_t))(v89 + 104))(v88, enum case for LayoutDirection.leftToRight(_:), v90);
  uint64_t v49 = v46;
  LOBYTE(v46) = static LayoutDirection.== infix(_:_:)();
  char v50 = *(void (**)(char *, uint64_t))(v47 + 8);
  uint64_t v51 = v49;
  uint64_t v52 = (uint64_t)v81;
  v50(v51, v48);
  v50(v45, v48);
  if (v46) {
    double v53 = 1.0;
  }
  else {
    double v53 = -1.0;
  }
  static UnitPoint.center.getter();
  uint64_t v55 = v54;
  uint64_t v57 = v56;
  sub_1001262FC(v44, v52, &qword_100E7DB50);
  uint64_t v58 = v52 + *(int *)(v82 + 44);
  *(double *)uint64_t v58 = v53;
  *(void *)(v58 + 8) = 0x3FF0000000000000;
  *(void *)(v58 + 16) = v55;
  *(void *)(v58 + 24) = v57;
  sub_1001781AC(v44, &qword_100E7DB50);
  uint64_t v59 = *(void *)(a1 + 16);
  if (!v59) {
    uint64_t v59 = static Color.secondary.getter();
  }
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v61 = v83;
  sub_1001262FC(v52, v83, &qword_100E7DB58);
  uint64_t v62 = (uint64_t *)(v61 + *(int *)(v84 + 36));
  uint64_t *v62 = KeyPath;
  v62[1] = v59;
  swift_retain();
  sub_1001781AC(v52, &qword_100E7DB58);
  uint64_t v63 = v61;
  uint64_t v64 = v85;
  sub_10020E72C(v63, v85, &qword_100E7DB60);
  uint64_t v65 = static HorizontalAlignment.leading.getter();
  uint64_t v66 = (uint64_t)v91;
  *uint64_t v91 = v65;
  *(void *)(v66 + 8) = 0;
  *(unsigned char *)(v66 + 16) = 1;
  uint64_t v67 = sub_10017DF08(&qword_100E7DB88);
  sub_100513F60((char *)a1, v66 + *(int *)(v67 + 44));
  uint64_t v68 = v87;
  sub_1001262FC(v64, v87, &qword_100E7DB60);
  uint64_t v69 = v93;
  sub_1001262FC(v66, v93, &qword_100E7DB30);
  uint64_t v70 = v92;
  sub_1001262FC(v68, v92, &qword_100E7DB60);
  uint64_t v71 = sub_10017DF08(&qword_100E7DB90);
  sub_1001262FC(v69, v70 + *(int *)(v71 + 48), &qword_100E7DB30);
  sub_1001781AC(v66, &qword_100E7DB30);
  sub_1001781AC(v64, &qword_100E7DB60);
  sub_1001781AC(v69, &qword_100E7DB30);
  return sub_1001781AC(v68, &qword_100E7DB60);
}

double sub_100513F58()
{
  return -6.0;
}

uint64_t sub_100513F60@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v102 = a2;
  uint64_t v97 = type metadata accessor for PlainButtonStyle();
  uint64_t v95 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v93 = (char *)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_10017DF08(&qword_100E65388);
  uint64_t v90 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v89 = (char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_10017DF08(&qword_100E7DB98);
  uint64_t v94 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v91 = (char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_10017DF08(&qword_100E7DBA0);
  __chkstk_darwin(v88);
  uint64_t v99 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v98 = (uint64_t)&v78 - v8;
  uint64_t v85 = type metadata accessor for BlendMode();
  uint64_t v84 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v83 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for Divider();
  uint64_t v81 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  uint64_t v11 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_10017DF08(&qword_100E7DBA8);
  __chkstk_darwin(v79);
  uint64_t v13 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_10017DF08(&qword_100E7DBB0);
  __chkstk_darwin(v80);
  uint64_t v87 = (uint64_t)&v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v78 - v16;
  __chkstk_darwin(v18);
  uint64_t v86 = (uint64_t)&v78 - v19;
  uint64_t v20 = sub_10017DF08(&qword_100E7DBB8);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v78 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v101 = (uint64_t)&v78 - v24;
  uint64_t v25 = sub_10017DF08(&qword_100E7DBC0);
  __chkstk_darwin(v25 - 8);
  uint64_t v27 = (char *)&v78 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_10017DF08(&qword_100E7DBC8);
  __chkstk_darwin(v28 - 8);
  uint64_t v100 = (uint64_t)&v78 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v78 - v31;
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)&v78 - v34;
  *(void *)uint64_t v27 = static VerticalAlignment.top.getter();
  *((void *)v27 + 1) = 0;
  v27[16] = 1;
  uint64_t v36 = sub_10017DF08(&qword_100E7DBD0);
  sub_100514A3C(a1, (uint64_t)&v27[*(int *)(v36 + 44)]);
  static Alignment.center.getter();
  sub_100BD8298();
  sub_1001781AC((uint64_t)v27, &qword_100E7DBC0);
  uint64_t v37 = (uint64_t)v32;
  uint64_t v38 = (uint64_t)v35;
  sub_10020E72C(v37, (uint64_t)v35, &qword_100E7DBC8);
  if (a1[25])
  {
    uint64_t v39 = sub_10017DF08(&qword_100E7DBE0);
    uint64_t v40 = v101;
    _s7Weather24LocationCompositionStateOwst_0(v101, 1, 1, v39);
  }
  else
  {
    Divider.init()();
    uint64_t v41 = static Color.secondary.getter();
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v43 = v81;
    uint64_t v44 = v82;
    (*(void (**)(char *, char *, uint64_t))(v81 + 16))(v13, v11, v82);
    uint64_t v45 = (uint64_t *)&v13[*(int *)(v79 + 36)];
    *uint64_t v45 = KeyPath;
    v45[1] = v41;
    (*(void (**)(char *, uint64_t))(v43 + 8))(v11, v44);
    uint64_t v46 = v84;
    uint64_t v47 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
    if (!*a1) {
      uint64_t v47 = (unsigned int *)&enum case for BlendMode.normal(_:);
    }
    uint64_t v48 = v83;
    uint64_t v49 = v85;
    (*(void (**)(char *, void, uint64_t))(v84 + 104))(v83, *v47, v85);
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))(&v17[*(int *)(v80 + 36)], v48, v49);
    sub_1001262FC((uint64_t)v13, (uint64_t)v17, &qword_100E7DBA8);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v48, v49);
    sub_1001781AC((uint64_t)v13, &qword_100E7DBA8);
    uint64_t v50 = v86;
    uint64_t v51 = sub_10020E72C((uint64_t)v17, v86, &qword_100E7DBB0);
    __chkstk_darwin(v51);
    swift_retain();
    uint64_t v52 = v89;
    Button.init(action:label:)();
    double v53 = v93;
    PlainButtonStyle.init()();
    sub_10024D5E4((uint64_t)&qword_100E653A8);
    sub_10051738C((uint64_t)&qword_100E70FB8);
    uint64_t v55 = v91;
    uint64_t v54 = v92;
    uint64_t v56 = v97;
    View.buttonStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v95 + 8))(v53, v56);
    (*(void (**)(char *, uint64_t))(v90 + 8))(v52, v54);
    char v57 = static Edge.Set.top.getter();
    EdgeInsets.init(_all:)();
    uint64_t v59 = v58;
    uint64_t v61 = v60;
    uint64_t v63 = v62;
    uint64_t v65 = v64;
    uint64_t v66 = v94;
    uint64_t v67 = (uint64_t)v99;
    uint64_t v68 = v96;
    (*(void (**)(char *, char *, uint64_t))(v94 + 16))(v99, v55, v96);
    uint64_t v69 = v67 + *(int *)(v88 + 36);
    *(unsigned char *)uint64_t v69 = v57;
    *(void *)(v69 + 8) = v59;
    *(void *)(v69 + 16) = v61;
    *(void *)(v69 + 24) = v63;
    *(void *)(v69 + 32) = v65;
    *(unsigned char *)(v69 + 40) = 0;
    (*(void (**)(char *, uint64_t))(v66 + 8))(v55, v68);
    uint64_t v70 = v98;
    sub_10020E72C(v67, v98, &qword_100E7DBA0);
    uint64_t v71 = v87;
    sub_1001262FC(v50, v87, &qword_100E7DBB0);
    sub_1001262FC(v70, v67, &qword_100E7DBA0);
    sub_1001262FC(v71, (uint64_t)v22, &qword_100E7DBB0);
    uint64_t v72 = sub_10017DF08(&qword_100E7DBD8);
    sub_1001262FC(v67, (uint64_t)&v22[*(int *)(v72 + 48)], &qword_100E7DBA0);
    sub_1001781AC(v70, &qword_100E7DBA0);
    sub_1001781AC(v50, &qword_100E7DBB0);
    sub_1001781AC(v67, &qword_100E7DBA0);
    sub_1001781AC(v71, &qword_100E7DBB0);
    uint64_t v73 = sub_10017DF08(&qword_100E7DBE0);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v73);
    uint64_t v40 = v101;
    sub_10020E72C((uint64_t)v22, v101, &qword_100E7DBB8);
  }
  uint64_t v74 = v100;
  sub_1001262FC(v38, v100, &qword_100E7DBC8);
  sub_1001262FC(v40, (uint64_t)v22, &qword_100E7DBB8);
  uint64_t v75 = v102;
  sub_1001262FC(v74, v102, &qword_100E7DBC8);
  uint64_t v76 = sub_10017DF08(&qword_100E7DBE8);
  sub_1001262FC((uint64_t)v22, v75 + *(int *)(v76 + 48), &qword_100E7DBB8);
  sub_1001781AC(v40, &qword_100E7DBB8);
  sub_1001781AC(v38, &qword_100E7DBC8);
  sub_1001781AC((uint64_t)v22, &qword_100E7DBB8);
  return sub_1001781AC(v74, &qword_100E7DBC8);
}

uint64_t sub_100514A3C@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E7DBF0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (uint64_t *)((char *)&v29 - v8);
  uint64_t v10 = sub_10017DF08(&qword_100E7DBF8);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v29 - v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v29 - v17;
  *(void *)uint64_t v15 = static HorizontalAlignment.leading.getter();
  *((void *)v15 + 1) = 0x4000000000000000;
  v15[16] = 0;
  uint64_t v19 = sub_10017DF08(&qword_100E7DC00);
  sub_100514CE4(a1, (uint64_t *)&v15[*(int *)(v19 + 44)]);
  sub_10020E72C((uint64_t)v15, (uint64_t)v18, &qword_100E7DBF8);
  if (a1[24])
  {
    uint64_t v20 = type metadata accessor for DismissButton(0);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 1, 1, v20);
  }
  else
  {
    char v21 = *a1;
    uint64_t v23 = *((void *)a1 + 15);
    uint64_t v22 = *((void *)a1 + 16);
    *uint64_t v9 = swift_getKeyPath();
    sub_10017DF08(&qword_100E74A68);
    swift_storeEnumTagMultiPayload();
    uint64_t v24 = type metadata accessor for DismissButton(0);
    *((unsigned char *)v9 + *(int *)(v24 + 20)) = v21;
    uint64_t v25 = (uint64_t *)((char *)v9 + *(int *)(v24 + 24));
    void *v25 = v23;
    v25[1] = v22;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v24);
    swift_retain();
  }
  sub_1001262FC((uint64_t)v18, (uint64_t)v12, &qword_100E7DBF8);
  sub_1001262FC((uint64_t)v9, (uint64_t)v6, &qword_100E7DBF0);
  sub_1001262FC((uint64_t)v12, a2, &qword_100E7DBF8);
  uint64_t v26 = sub_10017DF08(&qword_100E7DC08);
  uint64_t v27 = a2 + *(int *)(v26 + 48);
  *(void *)uint64_t v27 = 0;
  *(unsigned char *)(v27 + 8) = 1;
  sub_1001262FC((uint64_t)v6, a2 + *(int *)(v26 + 64), &qword_100E7DBF0);
  sub_1001781AC((uint64_t)v9, &qword_100E7DBF0);
  sub_1001781AC((uint64_t)v18, &qword_100E7DBF8);
  sub_1001781AC((uint64_t)v6, &qword_100E7DBF0);
  return sub_1001781AC((uint64_t)v12, &qword_100E7DBF8);
}

uint64_t sub_100514CE4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v85 = a2;
  uint64_t v3 = type metadata accessor for _BlendModeEffect();
  __chkstk_darwin(v3 - 8);
  uint64_t v82 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for BlendMode();
  uint64_t v77 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v76 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_10017DF08(&qword_100E63F78) - 8;
  __chkstk_darwin(v78);
  uint64_t v75 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_10017DF08(&qword_100E7DC10) - 8;
  __chkstk_darwin(v83);
  uint64_t v84 = (uint64_t)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v79 = (uint64_t)&v68 - v9;
  __chkstk_darwin(v10);
  uint64_t v81 = (uint64_t)&v68 - v11;
  uint64_t v12 = a1[8];
  uint64_t v86 = a1[7];
  uint64_t v87 = v12;
  unint64_t v71 = sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v13 = Text.init<A>(_:)();
  uint64_t v15 = v14;
  char v17 = v16 & 1;
  static Color.primary.getter();
  uint64_t v18 = Text.foregroundColor(_:)();
  uint64_t v20 = v19;
  char v22 = v21;
  swift_release();
  sub_100191924(v13, v15, v17);
  swift_bridgeObjectRelease();
  static Font.headline.getter();
  uint64_t v23 = Text.font(_:)();
  uint64_t v25 = v24;
  LOBYTE(v15) = v26;
  swift_release();
  sub_100191924(v18, v20, v22 & 1);
  swift_bridgeObjectRelease();
  static Font.Weight.medium.getter();
  uint64_t v74 = Text.fontWeight(_:)();
  uint64_t v72 = v27;
  int v70 = v28;
  uint64_t v73 = v29;
  sub_100191924(v23, v25, v15 & 1);
  swift_bridgeObjectRelease();
  uint64_t v69 = a1;
  uint64_t v30 = a1[10];
  uint64_t v86 = a1[9];
  uint64_t v87 = v30;
  swift_bridgeObjectRetain();
  uint64_t v31 = Text.init<A>(_:)();
  uint64_t v33 = v32;
  LOBYTE(v23) = v34 & 1;
  static Font.subheadline.getter();
  uint64_t v35 = Text.font(_:)();
  uint64_t v37 = v36;
  char v39 = v38;
  swift_release();
  char v40 = v39 & 1;
  sub_100191924(v31, v33, v23);
  swift_bridgeObjectRelease();
  static Color.secondary.getter();
  uint64_t v41 = Text.foregroundColor(_:)();
  uint64_t v43 = v42;
  char v45 = v44;
  uint64_t v47 = v46;
  swift_release();
  sub_100191924(v35, v37, v40);
  swift_bridgeObjectRelease();
  uint64_t v49 = v76;
  uint64_t v48 = v77;
  uint64_t v50 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
  if (!*v69) {
    uint64_t v50 = (unsigned int *)&enum case for BlendMode.normal(_:);
  }
  uint64_t v51 = v80;
  (*(void (**)(char *, void, uint64_t))(v77 + 104))(v76, *v50, v80);
  char v52 = v45 & 1;
  char v53 = v70 & 1;
  uint64_t v54 = v48;
  uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v48 + 16);
  uint64_t v56 = (uint64_t)v82;
  v55(v82, v49, v51);
  uint64_t v57 = (uint64_t)v75;
  sub_1005173D0(v56, (uint64_t)&v75[*(int *)(v78 + 44)]);
  *(void *)uint64_t v57 = v41;
  *(void *)(v57 + 8) = v43;
  *(unsigned char *)(v57 + 16) = v52;
  *(void *)(v57 + 24) = v47;
  sub_100190CC4(v41, v43, v52);
  swift_bridgeObjectRetain();
  sub_1000D8C98(v56);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v49, v51);
  sub_100191924(v41, v43, v52);
  swift_bridgeObjectRelease();
  uint64_t v58 = v79;
  sub_1001262FC(v57, v79, &qword_100E63F78);
  *(_WORD *)(v58 + *(int *)(v83 + 44)) = 256;
  sub_1001781AC(v57, &qword_100E63F78);
  uint64_t v59 = v81;
  sub_10020E72C(v58, v81, &qword_100E7DC10);
  uint64_t v60 = v84;
  sub_1001262FC(v59, v84, &qword_100E7DC10);
  uint64_t v61 = v85;
  uint64_t v62 = v73;
  uint64_t v63 = v74;
  uint64_t v64 = v72;
  *uint64_t v85 = v74;
  v61[1] = v64;
  *((unsigned char *)v61 + 16) = v53;
  v61[3] = v62;
  *((_WORD *)v61 + 16) = 256;
  uint64_t v65 = v61;
  uint64_t v66 = sub_10017DF08(&qword_100E7DC18);
  sub_1001262FC(v60, (uint64_t)v65 + *(int *)(v66 + 48), &qword_100E7DC10);
  sub_100190CC4(v63, v64, v53);
  swift_bridgeObjectRetain();
  sub_1001781AC(v59, &qword_100E7DC10);
  sub_1001781AC(v60, &qword_100E7DC10);
  sub_100191924(v63, v64, v53);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1005152D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Font.TextStyle();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 88);
  uint64_t v9 = *(void *)(a1 + 96);
  v28[2] = v8;
  v28[3] = v9;
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v10 = Text.init<A>(_:)();
  uint64_t v12 = v11;
  char v14 = v13 & 1;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Font.TextStyle.body(_:), v4);
  static Font.Weight.medium.getter();
  static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v15 = Text.font(_:)();
  uint64_t v17 = v16;
  LOBYTE(v5) = v18;
  swift_release();
  char v19 = v5 & 1;
  sub_100191924(v10, v12, v14);
  swift_bridgeObjectRelease();
  static Color.primary.getter();
  uint64_t v20 = Text.foregroundColor(_:)();
  uint64_t v22 = v21;
  char v24 = v23;
  uint64_t v26 = v25;
  swift_release();
  sub_100191924(v15, v17, v19);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v20;
  *(void *)(a2 + 8) = v22;
  *(unsigned char *)(a2 + 16) = v24 & 1;
  *(void *)(a2 + 24) = v26;
  return result;
}

uint64_t sub_1005154CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v20 = a1;
  uint64_t v2 = type metadata accessor for PlainButtonStyle();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v18 = v2;
  uint64_t v19 = v3;
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E7DAE8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10017DF08(&qword_100E7DAF0);
  uint64_t v10 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DismissButton(0);
  uint64_t v21 = v1;
  swift_retain();
  sub_10017DF08(&qword_100E7DAF8);
  sub_100517494((uint64_t)&unk_100E7DB00);
  Button.init(action:label:)();
  PlainButtonStyle.init()();
  sub_10024D5E4((uint64_t)&unk_100E7DB18);
  sub_10051738C((uint64_t)&qword_100E70FB8);
  uint64_t v13 = v18;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v5, v13);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v14 = v20;
  uint64_t v15 = v17;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 16))(v20, v12, v17);
  *(_OWORD *)(v14 + *(int *)(sub_10017DF08(&qword_100E7DB20) + 36)) = xmmword_100C26610;
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v15);
}

uint64_t sub_10051582C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v39 = a1;
  uint64_t v2 = type metadata accessor for ColorScheme();
  uint64_t v34 = *(void *)(v2 - 8);
  uint64_t v35 = v2;
  __chkstk_darwin(v2);
  uint64_t v33 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v32 = (char *)&v31 - v5;
  uint64_t v37 = type metadata accessor for BlendMode();
  uint64_t v6 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E7DB28);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100E7DB10);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_10017DF08(&qword_100E7DAF8);
  __chkstk_darwin(v36);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = Image.init(systemName:)();
  static Font.Weight.semibold.getter();
  View.fontWeight(_:)();
  swift_release();
  int v19 = static HierarchicalShapeStyle.quaternary.getter();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v12, v9);
  *(_DWORD *)&v16[*(int *)(v14 + 44)] = v19;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  if (*(unsigned char *)(v39 + *(int *)(type metadata accessor for DismissButton(0) + 20)) == 1)
  {
    uint64_t v20 = v32;
    sub_1000F3620();
    uint64_t v22 = v33;
    uint64_t v21 = v34;
    uint64_t v23 = v35;
    (*(void (**)(char *, void, uint64_t))(v34 + 104))(v33, enum case for ColorScheme.light(_:), v35);
    char v24 = static ColorScheme.== infix(_:_:)();
    uint64_t v25 = *(void (**)(char *, uint64_t))(v21 + 8);
    v25(v22, v23);
    v25(v20, v23);
    uint64_t v27 = v37;
    uint64_t v26 = v38;
    uint64_t v28 = v36;
    if (v24) {
      uint64_t v29 = (unsigned int *)&enum case for BlendMode.plusDarker(_:);
    }
    else {
      uint64_t v29 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
    }
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *v29, v37);
  }
  else
  {
    uint64_t v27 = v37;
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for BlendMode.normal(_:), v37);
    uint64_t v26 = v38;
    uint64_t v28 = v36;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(&v18[*(int *)(v28 + 36)], v8, v27);
  sub_1001262FC((uint64_t)v16, (uint64_t)v18, &qword_100E7DB10);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v27);
  sub_1001781AC((uint64_t)v16, &qword_100E7DB10);
  return sub_10020E72C((uint64_t)v18, v26, &qword_100E7DAF8);
}

uint64_t sub_100515CB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100515CE4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_100515D10()
{
  return EnvironmentValues.foregroundColor.setter();
}

unint64_t sub_100515D40()
{
  unint64_t result = qword_100E7D978;
  if (!qword_100E7D978)
  {
    sub_10018C6DC(&qword_100E7D948);
    sub_10024D5E4((uint64_t)&unk_100E7D980);
    sub_10024D5E4((uint64_t)&qword_100E64F80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7D978);
  }
  return result;
}

uint64_t sub_100515E04()
{
  return swift_getOpaqueTypeConformance2();
}

unsigned char *initializeBufferWithCopyOfBuffer for TipView(unsigned char *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = (unsigned char *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(unsigned char *)a2;
    uint64_t v7 = a2[2];
    *((void *)v4 + 1) = a2[1];
    *((void *)v4 + 2) = v7;
    *((_WORD *)v4 + 12) = *((_WORD *)a2 + 12);
    uint64_t v8 = a2[4];
    uint64_t v9 = a2[5];
    char v10 = *((unsigned char *)a2 + 48);
    swift_retain();
    sub_100249E9C();
    *((void *)v4 + 4) = v8;
    *((void *)v4 + 5) = v9;
    v4[48] = v10;
    uint64_t v11 = a2[8];
    *((void *)v4 + 7) = a2[7];
    *((void *)v4 + 8) = v11;
    uint64_t v12 = a2[10];
    *((void *)v4 + 9) = a2[9];
    *((void *)v4 + 10) = v12;
    *((void *)v4 + 11) = a2[11];
    uint64_t v13 = a2[16];
    long long v20 = *((_OWORD *)a2 + 7);
    *((_OWORD *)v4 + 6) = *((_OWORD *)a2 + 6);
    *((_OWORD *)v4 + 7) = v20;
    uint64_t v14 = *(int *)(a3 + 32);
    uint64_t v15 = &v4[v14];
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    *((void *)v4 + 16) = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    }
    else
    {
      *uint64_t v15 = *v16;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t destroy for TipView(uint64_t a1, uint64_t a2)
{
  swift_release();
  sub_100249EF8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for LayoutDirection();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t initializeWithCopy for TipView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v6;
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  char v9 = *(unsigned char *)(a2 + 48);
  swift_retain();
  sub_100249E9C();
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  uint64_t v10 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v10;
  uint64_t v11 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v11;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  uint64_t v12 = *(void *)(a2 + 128);
  long long v18 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v18;
  uint64_t v13 = *(int *)(a3 + 32);
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *(void *)(a1 + 128) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = type metadata accessor for LayoutDirection();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  else
  {
    void *v14 = *v15;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for TipView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  char v8 = *(unsigned char *)(a2 + 48);
  sub_100249E9C();
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(unsigned char *)(a1 + 48) = v8;
  sub_100249EF8();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 112);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = v9;
  swift_retain();
  swift_release();
  uint64_t v10 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v10;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v11 = *(int *)(a3 + 32);
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = (void *)(a2 + v11);
    sub_1001781AC(a1 + v11, &qword_100E62CB8);
    sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    else
    {
      *uint64_t v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for TipView(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  *(_OWORD *)((char *)a1 + 10) = *(_OWORD *)((char *)a2 + 10);
  memcpy(a1 + 2, a2 + 2, 0x48uLL);
  *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
  *(_OWORD *)((char *)a1 + 120) = *(_OWORD *)((char *)a2 + 120);
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)a1 + v6;
  char v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10017DF08(&qword_100E62CB8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = type metadata accessor for LayoutDirection();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  return a1;
}

uint64_t assignWithTake for TipView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  char v6 = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = v6;
  sub_100249EF8();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v9;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_release();
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v10 = *(int *)(a3 + 32);
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (const void *)(a2 + v10);
    sub_1001781AC(a1 + v10, &qword_100E62CB8);
    uint64_t v13 = sub_10017DF08(&qword_100E62CB8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TipView(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005166AC);
}

uint64_t sub_1005166AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_100163020(*(void *)(a1 + 64));
  }
  uint64_t v7 = sub_10017DF08(&qword_100E63BF0);
  uint64_t v8 = a1 + *(int *)(a3 + 32);

  return _s7Weather24LocationCompositionStateOwet_0(v8, a2, v7);
}

uint64_t storeEnumTagSinglePayload for TipView(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100516740);
}

uint64_t sub_100516740(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 64) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10017DF08(&qword_100E63BF0);
    uint64_t v8 = v5 + *(int *)(a4 + 32);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

void sub_1005167C4()
{
  sub_100046C64(319, (unint64_t *)&qword_100E63C70, (void (*)(uint64_t))&type metadata accessor for LayoutDirection);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_100516890()
{
  return sub_100517494((uint64_t)&unk_100E7DA30);
}

unint64_t sub_1005168D4()
{
  unint64_t result = qword_100E7DA38;
  if (!qword_100E7DA38)
  {
    sub_10018C6DC(&qword_100E7D968);
    sub_100516988((uint64_t)&unk_100E7DA40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7DA38);
  }
  return result;
}

unint64_t sub_100516988(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    char v6 = v5;
    uint64_t v7 = v4;
    sub_10018C6DC(v3);
    v7();
    v6();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_100516A0C()
{
  unint64_t result = qword_100E7DA48;
  if (!qword_100E7DA48)
  {
    sub_10018C6DC(&qword_100E7D958);
    sub_10018C6DC(&qword_100E7D948);
    sub_100515D40();
    swift_getOpaqueTypeConformance2();
    sub_10051738C((uint64_t)&qword_100EAACA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7DA48);
  }
  return result;
}

void *sub_100516AEC(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_10017DF08(&qword_100E74A68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 24);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    uint64_t v10 = (void *)((char *)a1 + v9);
    uint64_t v11 = (void *)((char *)a2 + v9);
    uint64_t v12 = v11[1];
    *uint64_t v10 = *v11;
    v10[1] = v12;
  }
  swift_retain();
  return a1;
}

uint64_t sub_100516C18(uint64_t a1)
{
  sub_10017DF08(&qword_100E74A68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for ColorScheme();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }

  return swift_release();
}

void *sub_100516CBC(void *a1, void *a2, uint64_t a3)
{
  sub_10017DF08(&qword_100E74A68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ColorScheme();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 24);
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_retain();
  return a1;
}

void *sub_100516D9C(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1001781AC((uint64_t)a1, &qword_100E74A68);
    sub_10017DF08(&qword_100E74A68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for ColorScheme();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (void *)((char *)a1 + v7);
  uint64_t v9 = (void *)((char *)a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_retain();
  swift_release();
  return a1;
}

char *sub_100516EA4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E74A68);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for ColorScheme();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  *(_OWORD *)&a1[v8] = *(_OWORD *)&a2[v8];
  return a1;
}

char *sub_100516F80(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1001781AC((uint64_t)a1, &qword_100E74A68);
    uint64_t v6 = sub_10017DF08(&qword_100E74A68);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for ColorScheme();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  *(_OWORD *)&a1[v8] = *(_OWORD *)&a2[v8];
  swift_release();
  return a1;
}

uint64_t sub_100517080(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100517094);
}

uint64_t sub_100517094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10017DF08(&qword_100E74A78);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) != a2) {
    return sub_100163020(*(void *)(a1 + *(int *)(a3 + 24)));
  }

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
}

uint64_t sub_100517118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10051712C);
}

void sub_10051712C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_10017DF08(&qword_100E74A78);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
}

uint64_t type metadata accessor for DismissButton(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E7DAA8);
}

void sub_1005171D8()
{
  sub_100046C64(319, (unint64_t *)&unk_100E74AE8, (void (*)(uint64_t))&type metadata accessor for ColorScheme);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100517298()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005172B4@<X0>(uint64_t a1@<X8>)
{
  return sub_10051582C(*(void *)(v1 + 16), a1);
}

unint64_t sub_1005172BC()
{
  unint64_t result = qword_100E7DB08;
  if (!qword_100E7DB08)
  {
    sub_10018C6DC(&qword_100E7DB10);
    swift_getOpaqueTypeConformance2();
    sub_10024D5E4((uint64_t)&qword_100E63EC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7DB08);
  }
  return result;
}

unint64_t sub_10051738C(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    v3(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

uint64_t sub_1005173D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for _BlendModeEffect();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100517434()
{
  return sub_100517494((uint64_t)&unk_100E7DB70);
}

unint64_t sub_100517464()
{
  return sub_100517494((uint64_t)&unk_100E7DB78);
}

unint64_t sub_100517494(uint64_t a1)
{
  unint64_t result = sub_10017DFE0(a1);
  if (!result)
  {
    int v5 = v4;
    sub_10018C6DC(v3);
    v5();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_10051750C()
{
  unint64_t result = qword_100E7DB80;
  if (!qword_100E7DB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7DB80);
  }
  return result;
}

uint64_t sub_100517558@<X0>(uint64_t a1@<X8>)
{
  return sub_1005152D0(*(void *)(v1 + 16), a1);
}

uint64_t sub_100517560()
{
  return EnvironmentValues.colorScheme.getter();
}

uint64_t sub_100517584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100513030(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ColorScheme, (uint64_t (*)(char *))&EnvironmentValues.colorScheme.setter);
}

unint64_t sub_1005175C8()
{
  unint64_t result = qword_100E7DC20;
  if (!qword_100E7DC20)
  {
    sub_10018C6DC(&qword_100E7DB20);
    sub_10018C6DC(&qword_100E7DAE8);
    type metadata accessor for PlainButtonStyle();
    sub_10024D5E4((uint64_t)&unk_100E7DB18);
    sub_10051738C((uint64_t)&qword_100E70FB8);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7DC20);
  }
  return result;
}

uint64_t sub_1005176EC(uint64_t a1, uint64_t a2)
{
  uint64_t v122 = a2;
  uint64_t v4 = sub_10017DF08(&qword_100E66E28);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v141 = v6;
  uint64_t v7 = type metadata accessor for MonthlyAveragesChartModel();
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_100109314();
  sub_100109328(v9);
  uint64_t v121 = type metadata accessor for LocationDetailsKind();
  sub_100179C0C();
  uint64_t v120 = v10;
  __chkstk_darwin(v11);
  sub_100109314();
  sub_100109328(v12);
  uint64_t v140 = type metadata accessor for LocationDetailEntity();
  sub_100179C0C();
  uint64_t v139 = v13;
  __chkstk_darwin(v14);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v15);
  sub_100128F8C();
  sub_100109328(v16);
  uint64_t v148 = type metadata accessor for LocationEntity();
  sub_100179C0C();
  uint64_t v157 = v17;
  __chkstk_darwin(v18);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v19);
  sub_100128F8C();
  uint64_t v156 = v20;
  uint64_t v132 = type metadata accessor for Calendar.Identifier();
  sub_100179C0C();
  uint64_t v130 = v21;
  __chkstk_darwin(v22);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v23);
  sub_100128F8C();
  uint64_t v25 = sub_100109328(v24);
  uint64_t v114 = type metadata accessor for ConditionDetailPlatterViewModel(v25);
  sub_100162E4C();
  __chkstk_darwin(v26);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v27);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v28);
  sub_100109770();
  uint64_t v159 = v29;
  sub_1001626D4();
  __chkstk_darwin(v30);
  sub_100128F8C();
  uint64_t v158 = v31;
  uint64_t v32 = sub_10017DF08(&qword_100E6D1D8);
  uint64_t v33 = sub_100109308(v32);
  __chkstk_darwin(v33);
  sub_100109314();
  uint64_t v146 = v34;
  uint64_t v145 = type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v127 = v35;
  __chkstk_darwin(v36);
  sub_100109314();
  sub_100109328(v37);
  type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v152 = v39;
  uint64_t v153 = v38;
  __chkstk_darwin(v38);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v40);
  sub_100128F8C();
  uint64_t v142 = v41;
  sub_10017DF08(&qword_100E7DC28);
  sub_100179C0C();
  uint64_t v143 = v42;
  uint64_t v144 = v43;
  __chkstk_darwin(v42);
  uint64_t v160 = type metadata accessor for ArticlePlacementLocation();
  sub_100179C0C();
  uint64_t v45 = v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v114 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_10017DF08(&qword_100E7B2B8);
  uint64_t v50 = sub_100109308(v49);
  __chkstk_darwin(v50);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v51);
  char v53 = (uint64_t *)((char *)&v114 - v52);
  uint64_t v54 = sub_10017DF08(&qword_100E66E40);
  uint64_t v55 = sub_100109308(v54);
  __chkstk_darwin(v55);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v56);
  sub_100109770();
  uint64_t v150 = v57;
  sub_1001626D4();
  __chkstk_darwin(v58);
  sub_100109770();
  uint64_t v147 = v59;
  sub_1001626D4();
  __chkstk_darwin(v60);
  uint64_t v62 = (char *)&v114 - v61;
  uint64_t v63 = type metadata accessor for TemperatureAveragesHeroChartViewModel(0);
  uint64_t v64 = sub_100109308(v63);
  __chkstk_darwin(v64);
  sub_100162EF8();
  uint64_t v149 = v65;
  sub_1001626D4();
  __chkstk_darwin(v66);
  uint64_t v68 = (char *)&v114 - v67;
  sub_1001B1E64((void *)(v2 + 40), *(void *)(v2 + 64));
  sub_100BC67A0(a1, (uint64_t)v68);
  uint64_t v69 = type metadata accessor for TemperatureAveragesDetailInput();
  uint64_t v116 = a1 + *(int *)(v69 + 40);
  uint64_t v70 = Date.formattedMonthAndDay(timeZone:)();
  uint64_t v154 = v62;
  uint64_t v151 = v68;
  uint64_t v124 = v70;
  uint64_t v125 = v71;
  sub_100518298(a1, (uint64_t)v68, v2, v70, v71, (uint64_t)v62);
  uint64_t v135 = (void *)v2;
  sub_1001B1E64(v135 + 20, v135[23]);
  uint64_t v72 = v160;
  (*(void (**)(char *, void, uint64_t))(v45 + 104))(v48, enum case for ArticlePlacementLocation.temperatureAveragesDetail(_:), v160);
  uint64_t v155 = v53;
  sub_1006BAAF0((uint64_t)v48, v53);
  uint64_t v73 = v48;
  uint64_t v74 = v145;
  uint64_t v75 = v142;
  (*(void (**)(char *, uint64_t))(v45 + 8))(v73, v72);
  type metadata accessor for TemperatureAveragesHeroChartInput();
  uint64_t v160 = a1;
  uint64_t v76 = v146;
  sub_10017DF08(&qword_100E6B7C8);
  Trend.baseline.getter();
  TrendBaseline.startDate.getter();
  sub_100162F0C();
  v77();
  TimeZone.init(secondsFromGMT:)();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v76, 1, v74);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v79 = v127;
    uint64_t v80 = v126;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v127 + 32))(v126, v76, v74);
    uint64_t v81 = Date.formattedYear(timeZone:)();
    uint64_t v146 = v81;
    uint64_t v83 = v82;
    uint64_t v144 = v82;
    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v80, v74);
    (*(void (**)(uint64_t, uint64_t))(v152 + 8))(v75, v153);
    uint64_t v84 = v124;
    uint64_t v85 = v125;
    uint64_t v86 = v83;
    uint64_t v87 = v135;
    sub_100518938(v124, v125, v81, v86, v158);
    uint64_t v88 = v129;
    Calendar.identifier.getter();
    uint64_t v89 = v130;
    uint64_t v90 = v131;
    uint64_t v91 = v132;
    (*(void (**)(uint64_t, void, uint64_t))(v130 + 104))(v131, enum case for Calendar.Identifier.gregorian(_:), v132);
    LOBYTE(v81) = static Calendar.Identifier.== infix(_:_:)();
    uint64_t v92 = *(void (**)(uint64_t, uint64_t))(v89 + 8);
    v92(v90, v91);
    v92(v88, v91);
    char v93 = (v81 & 1) == 0;
    uint64_t v94 = v87;
    sub_100518E5C(v84, v85, v146, v144, v93, v159);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v95 = *(void *)(v160 + *(int *)(v69 + 24));
    uint64_t v115 = v69;
    if (v95)
    {
      sub_1001B1E64(v87, v87[3]);
      sub_1009F37CC(v95, v147);
    }
    else
    {
      _s7Weather24LocationCompositionStateOwst_0(v147, 1, 1, v114);
    }
    uint64_t v96 = v123;
    uint64_t v97 = v148;
    uint64_t v98 = v121;
    uint64_t v99 = v120;
    uint64_t v100 = v119;
    uint64_t v101 = v118;
    uint64_t v102 = v117;
    uint64_t v103 = v116;
    uint64_t v104 = v156;
    static LocationEntity.makeFromLocation(_:name:)();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v157 + 16))(v100, v104, v97);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v152 + 16))(v101, v103, v153);
    (*(void (**)(uint64_t, void, uint64_t))(v99 + 104))(v136, enum case for LocationDetailsKind.averages(_:), v98);
    uint64_t v105 = v137;
    LocationDetailEntity.init(location:date:kind:)();
    sub_100519CF0((uint64_t)v151, v149, (void (*)(void))type metadata accessor for TemperatureAveragesHeroChartViewModel);
    sub_10006DF38((uint64_t)v154, v150, &qword_100E66E40);
    sub_1001B1E64(v94 + 15, v94[18]);
    sub_100282C4C((void *)(v160 + *(int *)(v115 + 20)), v96);
    sub_10006DF38((uint64_t)v155, v102, &qword_100E7B2B8);
    sub_1004B80E0(v102, v141);
    sub_100519CF0(v158, v133, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    sub_100519CF0(v159, v134, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    uint64_t v106 = v147;
    sub_10006DF38(v147, v128, &qword_100E66E40);
    uint64_t v107 = v139;
    uint64_t v108 = v105;
    uint64_t v109 = v105;
    uint64_t v110 = v140;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v139 + 16))(v138, v108, v140);
    sub_1002E4C9C();
    uint64_t v112 = v111;
    (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v109, v110);
    sub_100162F0C();
    v113();
    sub_100178110(v106, &qword_100E66E40);
    sub_100519D44(v159, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    sub_100519D44(v158, (void (*)(void))type metadata accessor for ConditionDetailPlatterViewModel);
    sub_100178110((uint64_t)v155, &qword_100E7B2B8);
    sub_100178110((uint64_t)v154, &qword_100E66E40);
    sub_100519D44((uint64_t)v151, (void (*)(void))type metadata accessor for TemperatureAveragesHeroChartViewModel);
    return v112;
  }
  return result;
}

uint64_t sub_100518298@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v54 = a4;
  uint64_t countAndFlagsBits = a5;
  uint64_t v53 = a3;
  v51[1] = a2;
  uint64_t v8 = type metadata accessor for WeatherDescription();
  uint64_t v60 = *(void *)(v8 - 8);
  uint64_t v61 = v8;
  __chkstk_darwin(v8);
  uint64_t v59 = (uint64_t)v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E65250);
  uint64_t v57 = *(void *)(v10 - 8);
  uint64_t v58 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v56 = (char *)v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v52 = (char *)v51 - v13;
  uint64_t v14 = type metadata accessor for ConditionUnits();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10017DF08(&qword_100E6B7D8);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10017DF08(&qword_100E6B7C8);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)v51 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for TemperatureAveragesDetailInput();
  sub_10006DF38(a1 + *(int *)(v25 + 32), (uint64_t)v20, &qword_100E6B7D8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v21) == 1)
  {
    sub_100178110((uint64_t)v20, &qword_100E6B7D8);
    if (qword_100E62808 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_1002102B0(v26, (uint64_t)qword_100F51F20);
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Missing trend, for creating platter view summary.", v29, 2u);
      swift_slowDealloc();
    }

    uint64_t v30 = type metadata accessor for ConditionDetailPlatterViewModel(0);
    uint64_t v31 = a6;
    uint64_t v32 = 1;
  }
  else
  {
    v51[0] = v22;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v20, v21);
    type metadata accessor for UnitManager();
    static UnitManager.standard.getter();
    type metadata accessor for TemperatureAveragesHeroChartInput();
    UnitManager.conditionUnits(locale:)();
    swift_release();
    uint64_t v33 = (void *)ConditionUnits.temperature.getter();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    type metadata accessor for TemperatureAveragesHeroChartViewModel(0);
    sub_1001433AC();
    id v34 = v33;
    uint64_t v35 = (uint64_t)v52;
    Measurement.init(value:unit:)();
    id v36 = v34;
    uint64_t v37 = (uint64_t)v56;
    Measurement.init(value:unit:)();
    sub_1001B1E64((void *)(v53 + 80), *(void *)(v53 + 104));
    uint64_t v38 = v59;
    sub_10099B0CC((uint64_t)v24, v35, v37, v54, countAndFlagsBits, v59);
    id v39 = [self mainBundle];
    v62._uint64_t countAndFlagsBits = 0xD000000000000023;
    v62._object = (void *)0x8000000100CA27C0;
    v40._object = (void *)0x8000000100CA27A0;
    v40._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
    v41._uint64_t countAndFlagsBits = 0x7972616D6D7553;
    v41._object = (void *)0xE700000000000000;
    Swift::String v42 = NSLocalizedString(_:tableName:bundle:value:comment:)(v40, (Swift::String_optional)0, (NSBundle)v39, v41, v62);
    uint64_t countAndFlagsBits = v42._countAndFlagsBits;

    uint64_t v43 = v58;
    uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
    v44(v37, v58);
    v44(v35, v43);
    (*(void (**)(char *, uint64_t))(v51[0] + 8))(v24, v21);
    uint64_t v45 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
    uint64_t v46 = v61;
    _s7Weather24LocationCompositionStateOwst_0(a6 + v45[6], 1, 1, v61);
    uint64_t v47 = v60;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 16))(a6 + v45[7], v38, v46);
    uint64_t v48 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v49 = a6 + v45[8];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 32))(v49, v38, v46);
    swift_storeEnumTagMultiPayload();
    _s7Weather24LocationCompositionStateOwst_0(v49, 0, 1, v48);
    *(void *)a6 = 0;
    *(void *)(a6 + 8) = 0;
    *(unsigned char *)(a6 + 16) = 2;
    *(void *)(a6 + 24) = countAndFlagsBits;
    *(void *)(a6 + 32) = v42._object;
    *(unsigned char *)(a6 + v45[9]) = 0;
    *(unsigned char *)(a6 + v45[10]) = 0;
    uint64_t v31 = a6;
    uint64_t v32 = 0;
    uint64_t v30 = (uint64_t)v45;
  }
  return _s7Weather24LocationCompositionStateOwst_0(v31, v32, 1, v30);
}

uint64_t sub_100518938@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v59 = a3;
  uint64_t v60 = a4;
  uint64_t v61 = a5;
  uint64_t v62 = a2;
  uint64_t v58 = a1;
  uint64_t v5 = type metadata accessor for Locale();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_10017DF08(&qword_100E7DC30);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = self;
  id v11 = [v10 mainBundle];
  v66._uint64_t countAndFlagsBits = 0x100000000000029ELL;
  v66._object = (void *)0x8000000100CA24B0;
  v12._object = (void *)0x8000000100CA2370;
  v12._uint64_t countAndFlagsBits = 0x1000000000000132;
  v13._uint64_t countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  Swift::String v14 = NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v66);
  object = v14._object;
  uint64_t countAndFlagsBits = v14._countAndFlagsBits;

  uint64_t v63 = 0x3FB999999999999ALL;
  static Locale.autoupdatingCurrent.getter();
  sub_100146A70();
  FloatingPointFormatStyle.Percent.init(locale:)();
  sub_100519DFC();
  BinaryFloatingPoint.formatted<A>(_:)();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v9, v6);
  uint64_t v54 = v64;
  uint64_t v55 = v65;
  uint64_t v63 = 0x3FE999999999999ALL;
  static Locale.autoupdatingCurrent.getter();
  FloatingPointFormatStyle.Percent.init(locale:)();
  BinaryFloatingPoint.formatted<A>(_:)();
  v15(v9, v6);
  uint64_t v16 = v64;
  uint64_t v50 = v65;
  id v17 = [v10 mainBundle];
  v67._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v67._object = (void *)0x8000000100CA2770;
  v18._object = (void *)0x8000000100CA2750;
  unint64_t v53 = 0x8000000100CA2750;
  v18._uint64_t countAndFlagsBits = 0xD000000000000016;
  v19._uint64_t countAndFlagsBits = 0;
  v19._object = (void *)0xE000000000000000;
  Swift::String v20 = NSLocalizedString(_:tableName:bundle:value:comment:)(v18, (Swift::String_optional)0, (NSBundle)v17, v19, v67);
  uint64_t v51 = v20._object;
  uint64_t v52 = v20._countAndFlagsBits;

  uint64_t v21 = type metadata accessor for ConditionDetailPlatterViewModel(0);
  uint64_t v22 = *(int *)(v21 + 24);
  uint64_t v23 = v21;
  uint64_t v49 = v21;
  uint64_t v24 = v61;
  uint64_t v25 = v61 + v22;
  uint64_t v26 = type metadata accessor for WeatherDescription();
  _s7Weather24LocationCompositionStateOwst_0(v25, 1, 1, v26);
  uint64_t v48 = v24 + *(int *)(v23 + 28);
  sub_10017DF08(&qword_100E6E908);
  uint64_t v27 = type metadata accessor for WeatherDescription.Argument();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = *(void *)(v28 + 72);
  unint64_t v30 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_100C31880;
  uint64_t v32 = (void *)(v31 + v30);
  uint64_t v33 = v62;
  *uint64_t v32 = v58;
  v32[1] = v33;
  id v34 = *(void (**)(void))(v28 + 104);
  ((void (*)(void *, void, uint64_t))v34)(v32, enum case for WeatherDescription.Argument.string(_:), v27);
  uint64_t v35 = (void *)((char *)v32 + v29);
  uint64_t v36 = v60;
  *uint64_t v35 = v59;
  v35[1] = v36;
  v34();
  uint64_t v37 = (void *)((char *)v32 + 2 * v29);
  uint64_t v38 = v50;
  void *v37 = v16;
  v37[1] = v38;
  v34();
  id v39 = (void *)((char *)v32 + 3 * v29);
  uint64_t v40 = v54;
  uint64_t v41 = v55;
  *id v39 = v54;
  v39[1] = v41;
  v34();
  Swift::String v42 = (void *)((char *)v32 + 4 * v29);
  void *v42 = v40;
  v42[1] = v41;
  v34();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  WeatherDescription.init(format:_:)();
  uint64_t v43 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v44 = v49;
  uint64_t v45 = v61;
  uint64_t result = _s7Weather24LocationCompositionStateOwst_0(v61 + *(int *)(v49 + 32), 1, 1, v43);
  *(void *)uint64_t v45 = 0xD000000000000016;
  *(void *)(v45 + 8) = v53;
  *(unsigned char *)(v45 + 16) = 0;
  uint64_t v47 = v51;
  *(void *)(v45 + 24) = v52;
  *(void *)(v45 + 32) = v47;
  *(unsigned char *)(v45 + *(int *)(v44 + 36)) = 0;
  *(unsigned char *)(v45 + *(int *)(v44 + 40)) = 0;
  return result;
}

uint64_t sub_100518E5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v135 = a3;
  uint64_t v136 = a4;
  uint64_t v129 = a2;
  uint64_t v130 = a1;
  uint64_t v124 = a6;
  uint64_t v122 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  __chkstk_darwin(v122);
  uint64_t v123 = (char *)&v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E63758);
  __chkstk_darwin(v8 - 8);
  uint64_t v137 = (uint64_t)&v108 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10017DF08(&qword_100E7D438);
  __chkstk_darwin(v10 - 8);
  Swift::String v12 = (char *)&v108 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = type metadata accessor for DateComponents();
  uint64_t v127 = *(void *)(v134 - 8);
  __chkstk_darwin(v134);
  uint64_t countAndFlagsBits = (char *)&v108 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v125 = (uint64_t)&v108 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v131 = (uint64_t)&v108 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v128 = (uint64_t)&v108 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v138 = (uint64_t)&v108 - v22;
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v108 - v23;
  uint64_t v25 = sub_10017DF08(&qword_100E6D1D8);
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  uint64_t v111 = (char *)&v108 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v112 = (char *)&v108 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v108 - v31;
  __chkstk_darwin(v30);
  id v34 = (char *)&v108 - v33;
  uint64_t v35 = type metadata accessor for TimeZone();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v109 = (char *)&v108 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v110 = (char *)&v108 - v40;
  __chkstk_darwin(v39);
  Swift::String v42 = (char *)&v108 - v41;
  uint64_t v43 = type metadata accessor for Calendar();
  uint64_t v121 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v108 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_100519BE4(a5);
  uint64_t v119 = v47;
  uint64_t v120 = v46;
  TimeZone.init(secondsFromGMT:)();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 32);
  uint64_t v115 = v36 + 32;
  char v113 = v49;
  v49(v42, (uint64_t)v34, v35);
  uint64_t v132 = v45;
  static Calendar.gregorianCalendar(with:)();
  uint64_t v50 = *(void (**)(char *, uint64_t))(v36 + 8);
  uint64_t v116 = v36 + 8;
  uint64_t v114 = v50;
  v50(v42, v35);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 1, 1, v43);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 1, 1, v35);
  uint64_t v51 = countAndFlagsBits;
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
  Calendar.date(from:)();
  uint64_t v52 = *(void (**)(char *, uint64_t))(v127 + 8);
  uint64_t v53 = v134;
  v52(v51, v134);
  uint64_t v127 = v43;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 1, 1, v43);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 1, 1, v35);
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
  uint64_t v54 = v138;
  Calendar.date(from:)();
  v52(v51, v53);
  uint64_t v55 = type metadata accessor for Date();
  LODWORD(v53) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v55);
  uint64_t v56 = v128;
  sub_10006DF38(v54, v128, (uint64_t *)&unk_100E73CA0);
  uint64_t v57 = v35;
  uint64_t v133 = v24;
  uint64_t v134 = v55;
  if (v53 == 1 || _s7Weather24LocationCompositionStateOwet_0(v56, 1, v55) == 1)
  {
    sub_100178110(v56, (uint64_t *)&unk_100E73CA0);
    if (qword_100E62810 != -1) {
      swift_once();
    }
    uint64_t v58 = type metadata accessor for Logger();
    sub_1002102B0(v58, (uint64_t)qword_100F51F38);
    uint64_t v59 = Logger.logObject.getter();
    os_log_type_t v60 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v59, v60))
    {
      uint64_t v61 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v61 = 0;
      _os_log_impl((void *)&_mh_execute_header, v59, v60, "Could not derive dates for describing average range in platter view summary.", v61, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    sub_100178110(v56, (uint64_t *)&unk_100E73CA0);
  }
  id v62 = [self mainBundle];
  v139._uint64_t countAndFlagsBits = 0xD000000000000033;
  v139._object = (void *)0x8000000100CA1CD0;
  uint64_t v128 = (uint64_t)"iner encompassing a tip view";
  v63._object = (void *)0x8000000100CA1CB0;
  v63._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v64._uint64_t countAndFlagsBits = 0;
  v64._object = (void *)0xE000000000000000;
  Swift::String v65 = NSLocalizedString(_:tableName:bundle:value:comment:)(v63, (Swift::String_optional)0, (NSBundle)v62, v64, v139);
  uint64_t countAndFlagsBits = (char *)v65._countAndFlagsBits;
  object = v65._object;

  uint64_t v66 = type metadata accessor for WeatherDescription();
  _s7Weather24LocationCompositionStateOwst_0(v137, 1, 1, v66);
  sub_10017DF08(&qword_100E6E908);
  uint64_t v67 = type metadata accessor for WeatherDescription.Argument();
  uint64_t v68 = *(void *)(v67 - 8);
  uint64_t v69 = *(void *)(v68 + 72);
  unint64_t v70 = (*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
  uint64_t v71 = swift_allocObject();
  *(_OWORD *)(v71 + 16) = xmmword_100C349B0;
  uint64_t v117 = v71;
  uint64_t v72 = (void *)(v71 + v70);
  uint64_t v73 = v129;
  *uint64_t v72 = v130;
  v72[1] = v73;
  uint64_t v74 = *(void (**)(void))(v68 + 104);
  ((void (*)(unint64_t, void, uint64_t))v74)(v71 + v70, enum case for WeatherDescription.Argument.string(_:), v67);
  uint64_t v75 = (void *)((char *)v72 + v69);
  uint64_t v76 = v135;
  uint64_t v77 = v136;
  *uint64_t v75 = v135;
  v75[1] = v77;
  v74();
  uint64_t v130 = v69;
  uint64_t v78 = (void *)((char *)v72 + 2 * v69);
  void *v78 = v76;
  v78[1] = v77;
  v74();
  uint64_t v79 = v131;
  sub_10006DF38((uint64_t)v133, v131, (uint64_t *)&unk_100E73CA0);
  LODWORD(v76) = _s7Weather24LocationCompositionStateOwet_0(v79, 1, v134);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  if (v76 != 1)
  {
    uint64_t v84 = (uint64_t)v112;
    TimeZone.init(secondsFromGMT:)();
    uint64_t v82 = v57;
    uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v84, 1, v57);
    if (result != 1)
    {
      uint64_t v85 = v110;
      v113(v110, v84, v82);
      uint64_t v86 = v131;
      uint64_t v80 = Date.formattedMonthAndDay(timeZone:)();
      unint64_t v81 = v87;
      v114(v85, v82);
      uint64_t v88 = v86;
      uint64_t v83 = v134;
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v134 - 8) + 8))(v88, v134);
      goto LABEL_14;
    }
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  sub_100178110(v79, (uint64_t *)&unk_100E73CA0);
  uint64_t v80 = 0;
  unint64_t v81 = 0xE000000000000000;
  uint64_t v82 = v57;
  uint64_t v83 = v134;
LABEL_14:
  uint64_t v89 = v130;
  uint64_t v90 = (void *)((char *)v72 + 3 * v130);
  *uint64_t v90 = v80;
  v90[1] = v81;
  v74();
  uint64_t v91 = v125;
  sub_10006DF38(v138, v125, (uint64_t *)&unk_100E73CA0);
  if (_s7Weather24LocationCompositionStateOwet_0(v91, 1, v83) == 1)
  {
    sub_100178110(v91, (uint64_t *)&unk_100E73CA0);
    uint64_t v92 = 0;
    unint64_t v93 = 0xE000000000000000;
LABEL_18:
    uint64_t v99 = (void *)((char *)v72 + 4 * v89);
    uint64_t *v99 = v92;
    v99[1] = v93;
    v74();
    uint64_t v100 = (void *)((char *)v72 + 5 * v89);
    uint64_t v101 = v136;
    *uint64_t v100 = v135;
    v100[1] = v101;
    v74();
    swift_bridgeObjectRetain();
    uint64_t v102 = (uint64_t)v123;
    WeatherDescription.init(format:_:)();
    sub_100178110(v138, (uint64_t *)&unk_100E73CA0);
    (*(void (**)(char *, uint64_t))(v121 + 8))(v132, v127);
    uint64_t v103 = v122;
    swift_storeEnumTagMultiPayload();
    uint64_t v104 = (int *)type metadata accessor for ConditionDetailPlatterViewModel(0);
    uint64_t v105 = v124;
    _s7Weather24LocationCompositionStateOwst_0(v124 + v104[8], 1, 1, v103);
    unint64_t v106 = v128 | 0x8000000000000000;
    *(void *)uint64_t v105 = 0xD00000000000001ALL;
    *(void *)(v105 + 8) = v106;
    *(unsigned char *)(v105 + 16) = 0;
    uint64_t v107 = object;
    *(void *)(v105 + 24) = countAndFlagsBits;
    *(void *)(v105 + 32) = v107;
    sub_1001A8858(v137, v105 + v104[6]);
    sub_100519D98(v102, v105 + v104[7]);
    *(unsigned char *)(v105 + v104[9]) = 0;
    *(unsigned char *)(v105 + v104[10]) = 0;
    return sub_100178110((uint64_t)v133, (uint64_t *)&unk_100E73CA0);
  }
  uint64_t v94 = (uint64_t)v111;
  TimeZone.init(secondsFromGMT:)();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v94, 1, v82);
  if (result != 1)
  {
    uint64_t v95 = v109;
    v113(v109, v94, v82);
    uint64_t v96 = Date.formattedMonthAndDay(timeZone:)();
    uint64_t v97 = v82;
    uint64_t v92 = v96;
    unint64_t v93 = v98;
    v114(v95, v97);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v83 - 8) + 8))(v91, v83);
    uint64_t v89 = v130;
    goto LABEL_18;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_100519BE4(char a1)
{
  uint64_t v2 = (objc_class *)[self mainBundle];
  if (a1)
  {
    uint64_t v3 = 0x1000000000000241;
    unint64_t v4 = 0xD0000000000000FALL;
    unint64_t v11 = 0x8000000100CA2120;
    unint64_t v5 = 0x8000000100CA2020;
    v6.super.isa = v2;
    uint64_t v7 = 0;
    unint64_t v8 = 0xE000000000000000;
  }
  else
  {
    unint64_t v11 = 0x8000000100CA1DF0;
    unint64_t v5 = 0x8000000100CA1D10;
    unint64_t v4 = 0xD0000000000000DCLL;
    v6.super.isa = v2;
    uint64_t v7 = 0;
    unint64_t v8 = 0xE000000000000000;
    uint64_t v3 = 0x1000000000000223;
  }
  uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v4, (Swift::String_optional)0, v6, *(Swift::String *)&v7, *(Swift::String *)&v3)._countAndFlagsBits;

  return countAndFlagsBits;
}

uint64_t sub_100519CF0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_100519D44(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_100519D98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ConditionDetailPlatterViewModel.Body(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100519DFC()
{
  unint64_t result = qword_100E7DC38;
  if (!qword_100E7DC38)
  {
    sub_10018C6DC(&qword_100E7DC30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7DC38);
  }
  return result;
}

uint64_t destroy for TemperatureAveragesDetailViewModelFactory(uint64_t a1)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 40);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 80);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 120);

  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 160);
}

_OWORD *initializeWithCopy for TemperatureAveragesDetailViewModelFactory(_OWORD *a1, _OWORD *a2)
{
  long long v4 = *(_OWORD *)((char *)a2 + 24);
  *(_OWORD *)((char *)a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  long long v5 = a2[4];
  a1[4] = v5;
  (**(void (***)(uint64_t, uint64_t))(v5 - 8))((uint64_t)a1 + 40, (uint64_t)a2 + 40);
  long long v6 = *(_OWORD *)((char *)a2 + 104);
  *(_OWORD *)((char *)a1 + 104) = v6;
  (**(void (***)(uint64_t, uint64_t))(v6 - 8))((uint64_t)(a1 + 5), (uint64_t)(a2 + 5));
  long long v7 = a2[9];
  a1[9] = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))((uint64_t)a1 + 120, (uint64_t)a2 + 120);
  long long v8 = *(_OWORD *)((char *)a2 + 184);
  *(_OWORD *)((char *)a1 + 184) = v8;
  (**(void (***)(uint64_t, uint64_t))(v8 - 8))((uint64_t)(a1 + 10), (uint64_t)(a2 + 10));
  return a1;
}

uint64_t *assignWithCopy for TemperatureAveragesDetailViewModelFactory(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

void *initializeWithTake for TemperatureAveragesDetailViewModelFactory(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xC8uLL);
}

uint64_t assignWithTake for TemperatureAveragesDetailViewModelFactory(uint64_t a1, uint64_t a2)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 80);
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 120);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 160);
  long long v6 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v6;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  return a1;
}

uint64_t getEnumTagSinglePayload for TemperatureAveragesDetailViewModelFactory(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 200))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 24);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TemperatureAveragesDetailViewModelFactory(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 200) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 200) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TemperatureAveragesDetailViewModelFactory()
{
  return &type metadata for TemperatureAveragesDetailViewModelFactory;
}

char *sub_10051A20C(char *a1, char *a2, int *a3)
{
  long long v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *(void *)a2;
    *(void *)long long v4 = *(void *)a2;
    long long v4 = (char *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = type metadata accessor for PrecipitationAmount();
    Swift::String v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v12(&v4[a3[6]], &a2[a3[6]], v11);
    uint64_t v13 = a3[7];
    uint64_t v14 = &v4[v13];
    uint64_t v15 = &a2[v13];
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
  }
  swift_retain();
  return v4;
}

uint64_t sub_10051A334(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for PrecipitationAmount();
  long long v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v6(v4, v5);
  v6(a1 + *(int *)(a2 + 24), v5);

  return swift_release();
}

char *sub_10051A3E8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for PrecipitationAmount();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  uint64_t v12 = a3[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = v15;
  swift_retain();
  return a1;
}

char *sub_10051A4C4(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for PrecipitationAmount();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  uint64_t v11 = a3[7];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = *((void *)v13 + 1);
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = v14;
  swift_retain();
  swift_release();
  return a1;
}

char *sub_10051A5B4(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for PrecipitationAmount();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  return a1;
}

char *sub_10051A674(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for PrecipitationAmount();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  *(_OWORD *)&a1[a3[7]] = *(_OWORD *)&a2[a3[7]];
  swift_release();
  return a1;
}

uint64_t sub_10051A748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10051A75C);
}

uint64_t sub_10051A75C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF) {
    return sub_100163020(*(void *)(a1 + 8));
  }
  uint64_t v7 = type metadata accessor for PrecipitationAmount();
  uint64_t v8 = a1 + *(int *)(a3 + 20);

  return _s7Weather24LocationCompositionStateOwet_0(v8, a2, v7);
}

uint64_t sub_10051A7D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10051A7EC);
}

uint64_t sub_10051A7EC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for PrecipitationAmount();
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for PrecipitationAmountsEditorRowView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E7DC98);
}

uint64_t sub_10051A88C()
{
  uint64_t result = type metadata accessor for PrecipitationAmount();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10051A934()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10051A950()
{
  unint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PrecipitationAmount();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v17 - v7;
  uint64_t v9 = type metadata accessor for PrecipitationAmountsEditorRowView(0);
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v10(v8, (char *)v1 + *(int *)(v9 + 20), v2);
  v10(v5, (char *)v1 + *(int *)(v9 + 24), v2);
  sub_10051C4E8(&qword_100E7DCE0, (void (*)(uint64_t))&type metadata accessor for PrecipitationAmount);
  LOBYTE(v9) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v11 = *(void (**)(char *, uint64_t))(v3 + 8);
  v11(v5, v2);
  v11(v8, v2);
  if (v9)
  {
    uint64_t v12 = *v1;
    swift_bridgeObjectRetain();
  }
  else
  {
    v17[0] = 42;
    v17[1] = 0xE100000000000000;
    uint64_t v14 = *v1;
    uint64_t v13 = (void *)v1[1];
    swift_bridgeObjectRetain();
    v15._uint64_t countAndFlagsBits = v14;
    v15._object = v13;
    String.append(_:)(v15);
    swift_bridgeObjectRelease();
    return v17[0];
  }
  return v12;
}

void sub_10051AB3C()
{
  sub_100162EA0();
  uint64_t v37 = v1;
  uint64_t v2 = type metadata accessor for PrecipitationAmount();
  sub_100179C0C();
  uint64_t v4 = v3;
  uint64_t v34 = v3;
  __chkstk_darwin(v5);
  uint64_t v36 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v33 = (char *)&v30 - v8;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v30 - v10;
  uint64_t v12 = type metadata accessor for PrecipitationAmountsEditorView(0);
  sub_100162E4C();
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = (uint64_t *)(v15 - v14);
  uint64_t v17 = *v0;
  uint64_t v18 = v0[1];
  uint64_t v19 = type metadata accessor for PrecipitationAmountsEditorRowView(0);
  uint64_t v32 = v0;
  uint64_t v20 = *(void (**)(void))(v4 + 16);
  sub_10017A404();
  v20();
  uint64_t v21 = (void *)((char *)v0 + *(int *)(v19 + 28));
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  uint64_t v35 = v23;
  uint64_t v31 = v22;
  *uint64_t v16 = swift_getKeyPath();
  sub_10017DF08(&qword_100E65310);
  swift_storeEnumTagMultiPayload();
  uint64_t v24 = (uint64_t *)((char *)v16 + *(int *)(v12 + 20));
  *uint64_t v24 = v17;
  v24[1] = v18;
  uint64_t v25 = v12;
  sub_10017A404();
  v20();
  uint64_t v26 = v33;
  sub_10017A404();
  v20();
  sub_10017A404();
  v20();
  swift_bridgeObjectRetain();
  uint64_t v27 = v31;
  swift_retain();
  State.init(wrappedValue:)();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v34 + 8);
  v28(v26, v2);
  v28(v11, v2);
  uint64_t v29 = (uint64_t *)((char *)v16 + *(int *)(v25 + 28));
  void *v29 = v35;
  v29[1] = v27;
  uint64_t v38 = v32;
  sub_10051C4E8(&qword_100E7DCD8, (void (*)(uint64_t))type metadata accessor for PrecipitationAmountsEditorView);
  NavigationLink.init(destination:label:)();
  sub_100162694();
}

uint64_t sub_10051ADE8@<X0>(uint64_t a1@<X8>)
{
  sub_10051A950();
  sub_10014A85C();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t type metadata accessor for PrecipitationAmountsEditorView(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E7DD48);
}

void sub_10051AE68()
{
  sub_100162EA0();
  v38[0] = v0;
  uint64_t v49 = v1;
  uint64_t v2 = type metadata accessor for PrecipitationAmountsEditorView(0);
  uint64_t v3 = v2 - 8;
  uint64_t v46 = *(void *)(v2 - 8);
  uint64_t v45 = *(void *)(v46 + 64);
  __chkstk_darwin(v2);
  uint64_t v43 = (uint64_t)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E65388);
  sub_100179C0C();
  uint64_t v47 = v5;
  uint64_t v48 = v6;
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v44 = v7;
  uint64_t v8 = type metadata accessor for InsetGroupedListStyle();
  sub_100179C0C();
  v38[1] = v9;
  __chkstk_darwin(v10);
  sub_100109370();
  uint64_t v11 = sub_10017DF08(&qword_100E7DDA8);
  sub_100179C0C();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  sub_10017DF08(&qword_100E7DDB0);
  sub_100179C0C();
  uint64_t v39 = v18;
  uint64_t v40 = v19;
  __chkstk_darwin(v18);
  sub_1001626E0();
  sub_10017DF08(&qword_100E7DDB8);
  sub_100179C0C();
  uint64_t v41 = v20;
  uint64_t v42 = v21;
  __chkstk_darwin(v20);
  sub_100109314();
  uint64_t v50 = v22;
  uint64_t v51 = v0;
  sub_10017DF08(&qword_100E7DDC0);
  sub_1001246C8(&qword_100E7DDC8, &qword_100E7DDC0);
  List<>.init(content:)();
  InsetGroupedListStyle.init()();
  uint64_t v23 = sub_1001246C8(&qword_100E7DDD0, &qword_100E7DDA8);
  View.listStyle<A>(_:)();
  sub_100162F0C();
  v24();
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v17, v11);
  uint64_t v25 = v38[0];
  uint64_t v26 = (uint64_t *)(v38[0] + *(int *)(v3 + 28));
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  uint64_t v56 = v28;
  uint64_t v57 = v27;
  uint64_t v52 = v11;
  uint64_t v53 = (void *)v8;
  uint64_t v54 = v23;
  uint64_t v55 = &protocol witness table for InsetGroupedListStyle;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  unint64_t v30 = sub_10014A85C();
  uint64_t v31 = v39;
  View.navigationTitle<A>(_:)();
  sub_100162F0C();
  v32();
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v33 = v43;
  sub_10051D348(v25, v43);
  unint64_t v34 = (*(unsigned __int8 *)(v46 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
  uint64_t v35 = swift_allocObject();
  sub_10051D3B0(v33, v35 + v34);
  Button<>.init(_:action:)();
  uint64_t v52 = v31;
  uint64_t v53 = &type metadata for String;
  uint64_t v54 = OpaqueTypeConformance2;
  uint64_t v55 = (void *)v30;
  swift_getOpaqueTypeConformance2();
  sub_1001246C8(&qword_100E653A8, &qword_100E65388);
  View.navigationBarItems<A>(trailing:)();
  sub_100162F0C();
  v36();
  sub_100162F0C();
  v37();
  sub_100162694();
}

uint64_t sub_10051B35C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10017DF08(&qword_100E7DDD8);
  __chkstk_darwin(v2 - 8);
  uint64_t v30 = (uint64_t)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v29 - v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v29 - v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v29 - v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v29 - v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v29 - v17;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v29 - v20;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v29 - v23;
  sub_10051B604((uint64_t)&v29 - v23);
  sub_10051B8B8((uint64_t)v21);
  sub_10051BB70((uint64_t)v18);
  sub_10051BE2C((uint64_t)v15);
  uint64_t v25 = (uint64_t)v12;
  uint64_t v29 = v12;
  sub_1001262FC((uint64_t)v24, (uint64_t)v12, &qword_100E7DDD8);
  sub_1001262FC((uint64_t)v21, (uint64_t)v9, &qword_100E7DDD8);
  sub_1001262FC((uint64_t)v18, (uint64_t)v6, &qword_100E7DDD8);
  uint64_t v26 = v30;
  sub_1001262FC((uint64_t)v15, v30, &qword_100E7DDD8);
  sub_1001262FC(v25, a1, &qword_100E7DDD8);
  uint64_t v27 = (int *)sub_10017DF08(&qword_100E7DDE0);
  sub_1001262FC((uint64_t)v9, a1 + v27[12], &qword_100E7DDD8);
  sub_1001262FC((uint64_t)v6, a1 + v27[16], &qword_100E7DDD8);
  sub_1001262FC(v26, a1 + v27[20], &qword_100E7DDD8);
  sub_100178110((uint64_t)v15, &qword_100E7DDD8);
  sub_100178110((uint64_t)v18, &qword_100E7DDD8);
  sub_100178110((uint64_t)v21, &qword_100E7DDD8);
  sub_100178110((uint64_t)v24, &qword_100E7DDD8);
  sub_100178110(v26, &qword_100E7DDD8);
  sub_100178110((uint64_t)v6, &qword_100E7DDD8);
  sub_100178110((uint64_t)v9, &qword_100E7DDD8);
  return sub_100178110((uint64_t)v29, &qword_100E7DDD8);
}

uint64_t sub_10051B604@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v2 = type metadata accessor for PrecipitationAmountsEditorView(0);
  uint64_t v21 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v21 + 64);
  __chkstk_darwin(v2);
  uint64_t v20 = (uint64_t)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PrecipitationAmount();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E7DDE8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v19 - v12;
  PrecipitationAmount.pastHour.getter();
  uint64_t v14 = sub_10017DF08(&qword_100E6B648);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v14);
  sub_10017DF08(&qword_100E7DCE8);
  State.wrappedValue.getter();
  PrecipitationAmount.pastHour.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v14);
  uint64_t v15 = v20;
  sub_10051D348(v1, v20);
  unint64_t v16 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v17 = swift_allocObject();
  sub_10051D3B0(v15, v17 + v16);
  return sub_1009D235C();
}

uint64_t sub_10051B8B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v2 = type metadata accessor for PrecipitationAmountsEditorView(0);
  uint64_t v21 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v21 + 64);
  __chkstk_darwin(v2);
  uint64_t v20 = (uint64_t)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PrecipitationAmount();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E7DDE8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v19 - v12;
  PrecipitationAmount.pastSixHours.getter();
  uint64_t v14 = sub_10017DF08(&qword_100E6B648);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v14);
  sub_10017DF08(&qword_100E7DCE8);
  State.wrappedValue.getter();
  PrecipitationAmount.pastSixHours.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v14);
  uint64_t v15 = v20;
  sub_10051D348(v1, v20);
  unint64_t v16 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v17 = swift_allocObject();
  sub_10051D3B0(v15, v17 + v16);
  return sub_1009D235C();
}

uint64_t sub_10051BB70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v2 = type metadata accessor for PrecipitationAmountsEditorView(0);
  uint64_t v21 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v21 + 64);
  __chkstk_darwin(v2);
  uint64_t v20 = (uint64_t)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PrecipitationAmount();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E7DDE8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v19 - v12;
  PrecipitationAmount.pastTwentyFourHours.getter();
  uint64_t v14 = sub_10017DF08(&qword_100E6B648);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v14);
  sub_10017DF08(&qword_100E7DCE8);
  State.wrappedValue.getter();
  PrecipitationAmount.pastTwentyFourHours.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v14);
  uint64_t v15 = v20;
  sub_10051D348(v1, v20);
  unint64_t v16 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v17 = swift_allocObject();
  sub_10051D3B0(v15, v17 + v16);
  return sub_1009D235C();
}

uint64_t sub_10051BE2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v2 = type metadata accessor for PrecipitationAmountsEditorView(0);
  uint64_t v21 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v21 + 64);
  __chkstk_darwin(v2);
  uint64_t v20 = (uint64_t)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for PrecipitationAmount();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E7DDE8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v19 - v12;
  PrecipitationAmount.nextTwentyFourHours.getter();
  uint64_t v14 = sub_10017DF08(&qword_100E6B648);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v14);
  sub_10017DF08(&qword_100E7DCE8);
  State.wrappedValue.getter();
  PrecipitationAmount.nextTwentyFourHours.getter();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v14);
  uint64_t v15 = v20;
  sub_10051D348(v1, v20);
  unint64_t v16 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v17 = swift_allocObject();
  sub_10051D3B0(v15, v17 + v16);
  return sub_1009D235C();
}

uint64_t sub_10051C0E8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PresentationMode();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = sub_10017DF08(&qword_100E669A0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for PrecipitationAmount();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void (**)(char *))(a1
                                      + *(int *)(type metadata accessor for PrecipitationAmountsEditorView(0) + 28));
  sub_10017DF08(&qword_100E7DCE8);
  State.wrappedValue.getter();
  v10(v9);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_1005D1E94();
  Binding.wrappedValue.getter();
  PresentationMode.dismiss()();
  Binding.wrappedValue.setter();
  return sub_100178110((uint64_t)v5, &qword_100E669A0);
}

void sub_10051C2D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_100162EA0();
  a19 = v21;
  a20 = v22;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  uint64_t v27 = type metadata accessor for PrecipitationAmount();
  __chkstk_darwin(v27 - 8);
  sub_1001626E0();
  uint64_t v28 = sub_10017DF08(&qword_100E7DDE8);
  __chkstk_darwin(v28 - 8);
  sub_100109370();
  uint64_t v29 = sub_10017DF08(&qword_100E6B648);
  sub_100179C0C();
  uint64_t v31 = v30;
  __chkstk_darwin(v32);
  unint64_t v34 = (char *)&a9 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  uint64_t v37 = (char *)&a9 - v36;
  sub_1001262FC(v26, v20, &qword_100E7DDE8);
  if (_s7Weather24LocationCompositionStateOwet_0(v20, 1, v29) == 1)
  {
    sub_100178110(v20, &qword_100E7DDE8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v37, v20, v29);
    (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v34, v37, v29);
    type metadata accessor for PrecipitationAmountsEditorView(0);
    sub_10017DF08(&qword_100E7DCE8);
    State.wrappedValue.getter();
    v24(v34);
    State.wrappedValue.setter();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v37, v29);
  }
  sub_100162694();
}

uint64_t sub_10051C4E0@<X0>(uint64_t a1@<X8>)
{
  return sub_10051ADE8(a1);
}

uint64_t sub_10051C4E8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_10051C530(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    sub_10017DF08(&qword_100E65310);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      a1[1] = a2[1];
      swift_retain();
      swift_retain();
      uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for PresentationMode();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = a3[5];
    uint64_t v14 = a3[6];
    uint64_t v15 = (uint64_t *)((char *)a1 + v13);
    unint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = (char *)a1 + v14;
    uint64_t v19 = (char *)a2 + v14;
    uint64_t v20 = type metadata accessor for PrecipitationAmount();
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16);
    swift_bridgeObjectRetain();
    v21(v18, v19, v20);
    uint64_t v22 = a3[7];
    uint64_t v23 = a3[8];
    uint64_t v24 = (uint64_t *)((char *)a1 + v22);
    uint64_t v25 = (uint64_t *)((char *)a2 + v22);
    uint64_t v26 = v25[1];
    *uint64_t v24 = *v25;
    v24[1] = v26;
    uint64_t v27 = (char *)a1 + v23;
    uint64_t v28 = (char *)a2 + v23;
    swift_retain();
    v21(v27, v28, v20);
    uint64_t v29 = sub_10017DF08(&qword_100E7DCE8);
    *(void *)&v27[*(int *)(v29 + 28)] = *(void *)&v28[*(int *)(v29 + 28)];
  }
  swift_retain();
  return a1;
}

uint64_t sub_10051C734(uint64_t a1, uint64_t a2)
{
  sub_10017DF08(&qword_100E65310);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_release();
  if (EnumCaseMultiPayload == 1)
  {
    swift_release();
    uint64_t v5 = a1 + *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    uint64_t v6 = type metadata accessor for PresentationMode();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = type metadata accessor for PrecipitationAmount();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
  v9(v7, v8);
  swift_release();
  v9(a1 + *(int *)(a2 + 32), v8);
  sub_10017DF08(&qword_100E7DCE8);

  return swift_release();
}

void *sub_10051C88C(void *a1, void *a2, int *a3)
{
  sub_10017DF08(&qword_100E65310);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    a1[1] = a2[1];
    swift_retain();
    swift_retain();
    uint64_t v7 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for PresentationMode();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  }
  else
  {
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = a3[5];
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)((char *)a1 + v11);
  uint64_t v14 = (void *)((char *)a2 + v11);
  uint64_t v15 = v14[1];
  void *v13 = *v14;
  v13[1] = v15;
  unint64_t v16 = (char *)a1 + v12;
  uint64_t v17 = (char *)a2 + v12;
  uint64_t v18 = type metadata accessor for PrecipitationAmount();
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
  swift_bridgeObjectRetain();
  v19(v16, v17, v18);
  uint64_t v20 = a3[7];
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)((char *)a1 + v20);
  uint64_t v23 = (void *)((char *)a2 + v20);
  uint64_t v24 = v23[1];
  void *v22 = *v23;
  v22[1] = v24;
  uint64_t v25 = (char *)a1 + v21;
  uint64_t v26 = (char *)a2 + v21;
  swift_retain();
  v19(v25, v26, v18);
  uint64_t v27 = sub_10017DF08(&qword_100E7DCE8);
  *(void *)&v25[*(int *)(v27 + 28)] = *(void *)&v26[*(int *)(v27 + 28)];
  swift_retain();
  return a1;
}

char *sub_10051CA44(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100178110((uint64_t)a1, &qword_100E65310);
    sub_10017DF08(&qword_100E65310);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *(void *)a1 = *(void *)a2;
    if (EnumCaseMultiPayload == 1)
    {
      *((void *)a1 + 1) = *((void *)a2 + 1);
      swift_retain();
      swift_retain();
      uint64_t v7 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = type metadata accessor for PresentationMode();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = a3[5];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  *(void *)uint64_t v12 = *(void *)v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v14];
  unint64_t v16 = &a2[v14];
  uint64_t v17 = type metadata accessor for PrecipitationAmount();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24);
  v18(v15, v16, v17);
  uint64_t v19 = a3[7];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = *((void *)v21 + 1);
  *(void *)uint64_t v20 = *(void *)v21;
  *((void *)v20 + 1) = v22;
  swift_retain();
  swift_release();
  uint64_t v23 = a3[8];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  v18(&a1[v23], v25, v17);
  uint64_t v26 = sub_10017DF08(&qword_100E7DCE8);
  *(void *)&v24[*(int *)(v26 + 28)] = *(void *)&v25[*(int *)(v26 + 28)];
  swift_retain();
  swift_release();
  return a1;
}

void *sub_10051CC3C(void *a1, void *a2, int *a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E65310);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for PresentationMode();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v12 = a3[6];
  *(_OWORD *)((char *)a1 + a3[5]) = *(_OWORD *)((char *)a2 + a3[5]);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = type metadata accessor for PrecipitationAmount();
  unint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  uint64_t v17 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  v16((char *)a1 + v17, v19, v15);
  uint64_t v20 = sub_10017DF08(&qword_100E7DCE8);
  *(void *)&v18[*(int *)(v20 + 28)] = *(void *)&v19[*(int *)(v20 + 28)];
  return a1;
}

void *sub_10051CDCC(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_100178110((uint64_t)a1, &qword_100E65310);
    uint64_t v6 = sub_10017DF08(&qword_100E65310);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      uint64_t v8 = *(int *)(sub_10017DF08(&qword_100E669A0) + 32);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = type metadata accessor for PresentationMode();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v12 = a3[5];
  uint64_t v13 = (void *)((char *)a1 + v12);
  uint64_t v14 = (void *)((char *)a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  void *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[6];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = type metadata accessor for PrecipitationAmount();
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 40);
  v21(v18, v19, v20);
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  swift_release();
  uint64_t v22 = a3[8];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  v21((char *)a1 + v22, v24, v20);
  uint64_t v25 = sub_10017DF08(&qword_100E7DCE8);
  *(void *)&v23[*(int *)(v25 + 28)] = *(void *)&v24[*(int *)(v25 + 28)];
  swift_release();
  return a1;
}

uint64_t sub_10051CFA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10051CFB4);
}

uint64_t sub_10051CFB4(uint64_t a1, uint64_t a2, int *a3)
{
  sub_10017DF08(&qword_100E669A8);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    if (a2 == 0x7FFFFFFF) {
      return sub_100163020(*(void *)(a1 + a3[5] + 8));
    }
    type metadata accessor for PrecipitationAmount();
    sub_100162F30();
    if (*(_DWORD *)(v12 + 84) == a2)
    {
      uint64_t v8 = v11;
      uint64_t v13 = a3[6];
    }
    else
    {
      uint64_t v8 = sub_10017DF08(&qword_100E7DCE8);
      uint64_t v13 = a3[8];
    }
    uint64_t v9 = a1 + v13;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_10051D088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10051D09C);
}

void sub_10051D09C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_10017DF08(&qword_100E669A8);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(void *)(a1 + a4[5] + 8) = (a2 - 1);
      return;
    }
    type metadata accessor for PrecipitationAmount();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[6];
    }
    else
    {
      uint64_t v10 = sub_10017DF08(&qword_100E7DCE8);
      uint64_t v14 = a4[8];
    }
    uint64_t v11 = a1 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

void sub_10051D178()
{
  sub_1002307EC();
  if (v0 <= 0x3F)
  {
    type metadata accessor for PrecipitationAmount();
    if (v1 <= 0x3F)
    {
      sub_10051D290();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_10051D290()
{
  if (!qword_100E7DD58)
  {
    type metadata accessor for PrecipitationAmount();
    unint64_t v0 = type metadata accessor for State();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E7DD58);
    }
  }
}

uint64_t sub_10051D2E8()
{
  return sub_1001246C8(&qword_100E7DD98, &qword_100E7DDA0);
}

uint64_t sub_10051D324()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10051D340@<X0>(uint64_t a1@<X8>)
{
  return sub_10051B35C(a1);
}

uint64_t sub_10051D348(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PrecipitationAmountsEditorView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10051D3B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PrecipitationAmountsEditorView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10051D414()
{
  uint64_t v1 = type metadata accessor for PrecipitationAmountsEditorView(0);
  sub_1001627C0(v1);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return sub_10051C0E8(v3);
}

uint64_t sub_10051D458(uint64_t a1)
{
  return sub_10051D4C4(a1, &PrecipitationAmount.nextTwentyFourHours.setter);
}

uint64_t sub_10051D474(uint64_t a1)
{
  return sub_10051D4C4(a1, &PrecipitationAmount.pastTwentyFourHours.setter);
}

uint64_t sub_10051D490(uint64_t a1)
{
  return sub_10051D4C4(a1, &PrecipitationAmount.pastSixHours.setter);
}

uint64_t sub_10051D4AC(uint64_t a1)
{
  return sub_10051D4C4(a1, &PrecipitationAmount.pastHour.setter);
}

#error "10051D504: call analysis failed (funcsize=21)"

uint64_t sub_10051D518()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10051D684(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)v33 - v6;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)v33 - v13;
  uint64_t v15 = (int *)type metadata accessor for DailyComponentForecastRowView();
  sub_10017DF08(&qword_100E7DDF8);
  State.wrappedValue.getter();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v8) == 1)
  {
    sub_100178110((uint64_t)v7, (uint64_t *)&unk_100E73CA0);
    BOOL v16 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v7, v8);
    Date.init()();
    Date.timeIntervalSince(_:)();
    double v18 = v17;
    uint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
    v19(v12, v8);
    v19(v14, v8);
    BOOL v16 = v18 > 0.3;
  }
  uint64_t v20 = *(void (**)(BOOL, char *, double, double, double, double))(a1 + v15[11]);
  uint64_t v21 = (uint64_t *)(a1 + v15[21]);
  uint64_t v23 = *v21;
  uint64_t v22 = v21[1];
  v33[1] = v23;
  v33[2] = v22;
  sub_10017DF08(&qword_100E7DFD0);
  State.wrappedValue.getter();
  CGFloat v24 = v34[2];
  CGFloat v25 = v34[3];
  CGFloat v26 = v34[4];
  CGFloat v27 = v34[5];
  swift_release();
  v35.origin.double x = v24;
  v35.origin.double y = v25;
  v35.size.double width = v26;
  v35.size.double height = v27;
  CGRect v36 = CGRectInset(v35, -*(double *)(a1 + v15[12]), 0.0);
  double x = v36.origin.x;
  double y = v36.origin.y;
  double width = v36.size.width;
  double height = v36.size.height;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v5, a1, v8);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 0, 1, v8);
  v20(v16, v5, x, y, width, height);
  return sub_100178110((uint64_t)v5, (uint64_t *)&unk_100E73CA0);
}

char *sub_10051D99C(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v42 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v42 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v155 = type metadata accessor for Date();
    uint64_t v152 = *(void (**)(char *, char *))(*(void *)(v155 - 8) + 16);
    v152(a1, a2);
    uint64_t v6 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
    uint64_t v7 = v6[5];
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = *((void *)v9 + 1);
    *(void *)uint64_t v8 = *(void *)v9;
    *((void *)v8 + 1) = v10;
    uint64_t v11 = v6[6];
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    uint64_t v14 = *((void *)v13 + 1);
    *(void *)uint64_t v12 = *(void *)v13;
    *((void *)v12 + 1) = v14;
    uint64_t v15 = v6[7];
    BOOL v16 = &a1[v15];
    double v17 = &a2[v15];
    uint64_t v18 = type metadata accessor for TimeZone();
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v149 = v19;
    uint64_t v150 = v18;
    v19(v16, v17, v18);
    uint64_t v20 = v6[8];
    uint64_t v21 = &a1[v20];
    uint64_t v22 = &a2[v20];
    uint64_t v23 = sub_10017DF08(&qword_100E65250);
    CGFloat v24 = *(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16);
    v24(v21, v22, v23);
    uint64_t v154 = v24;
    v24(&a1[v6[9]], &a2[v6[9]], v23);
    uint64_t v25 = v6[10];
    CGFloat v26 = &a1[v25];
    CGFloat v27 = &a2[v25];
    uint64_t v28 = *((void *)v27 + 1);
    *(void *)CGFloat v26 = *(void *)v27;
    *((void *)v26 + 1) = v28;
    uint64_t v29 = v6[11];
    uint64_t v30 = &a1[v29];
    uint64_t v31 = &a2[v29];
    uint64_t v32 = *((void *)v31 + 1);
    *(void *)uint64_t v30 = *(void *)v31;
    *((void *)v30 + 1) = v32;
    *(void *)&a1[v6[12]] = *(void *)&a2[v6[12]];
    a1[v6[13]] = a2[v6[13]];
    uint64_t v33 = v6[14];
    unint64_t v34 = &a1[v33];
    CGRect v35 = &a2[v33];
    uint64_t v36 = *((void *)v35 + 1);
    *(void *)unint64_t v34 = *(void *)v35;
    *((void *)v34 + 1) = v36;
    uint64_t v37 = v6[15];
    uint64_t v38 = &a1[v37];
    uint64_t v39 = &a2[v37];
    uint64_t v40 = type metadata accessor for Precipitation();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v151 = v40;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40))
    {
      uint64_t v41 = sub_10017DF08(&qword_100E6B8C8);
      memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
    }
    a1[v6[16]] = a2[v6[16]];
    uint64_t v43 = v6[17];
    uint64_t v44 = &a1[v43];
    uint64_t v45 = &a2[v43];
    uint64_t v46 = *((void *)v45 + 1);
    *(void *)uint64_t v44 = *(void *)v45;
    *((void *)v44 + 1) = v46;
    uint64_t v47 = v6[18];
    uint64_t v48 = &a1[v47];
    uint64_t v49 = &a2[v47];
    uint64_t v50 = *((void *)v49 + 1);
    *(void *)uint64_t v48 = *(void *)v49;
    *((void *)v48 + 1) = v50;
    uint64_t v51 = v6[19];
    uint64_t v52 = &a1[v51];
    uint64_t v53 = &a2[v51];
    uint64_t v54 = *((void *)v53 + 1);
    *(void *)uint64_t v52 = *(void *)v53;
    *((void *)v52 + 1) = v54;
    *(void *)&a1[v6[20]] = *(void *)&a2[v6[20]];
    uint64_t v55 = a3[5];
    uint64_t v56 = &a1[v55];
    uint64_t v57 = &a2[v55];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v154(v56, v57, v23);
    v154(&a1[a3[6]], &a2[a3[6]], v23);
    uint64_t v58 = a3[7];
    uint64_t v59 = &a1[v58];
    os_log_type_t v60 = &a2[v58];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v58], 1, v23))
    {
      uint64_t v61 = sub_10017DF08(qword_100E65268);
      memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      v154(v59, v60, v23);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, 0, 1, v23);
    }
    uint64_t v62 = a3[9];
    *(_OWORD *)&a1[a3[8]] = *(_OWORD *)&a2[a3[8]];
    *(_OWORD *)&a1[v62] = *(_OWORD *)&a2[v62];
    uint64_t v63 = a3[11];
    *(void *)&a1[a3[10]] = *(void *)&a2[a3[10]];
    Swift::String v64 = &a1[v63];
    Swift::String v65 = &a2[v63];
    uint64_t v66 = *((void *)v65 + 1);
    *(void *)Swift::String v64 = *(void *)v65;
    *((void *)v64 + 1) = v66;
    uint64_t v67 = a3[13];
    *(void *)&a1[a3[12]] = *(void *)&a2[a3[12]];
    a1[v67] = a2[v67];
    uint64_t v68 = a3[14];
    uint64_t v69 = &a1[v68];
    unint64_t v70 = &a2[v68];
    uint64_t v71 = *(void *)&a2[v68 + 8];
    *(void *)uint64_t v69 = *(void *)&a2[v68];
    *((void *)v69 + 1) = v71;
    swift_retain();
    swift_retain();
    swift_retain();
    uint64_t v72 = *(int *)(sub_10017DF08(&qword_100E6B8C0) + 32);
    uint64_t v73 = &v69[v72];
    uint64_t v74 = &v70[v72];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v74, 1, (uint64_t)v6))
    {
      uint64_t v75 = sub_10017DF08(&qword_100E6B8D0);
      memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v152)(v73, v74, v155);
      uint64_t v76 = v6[5];
      uint64_t v77 = &v73[v76];
      uint64_t v78 = &v74[v76];
      uint64_t v79 = *((void *)v78 + 1);
      *(void *)uint64_t v77 = *(void *)v78;
      *((void *)v77 + 1) = v79;
      uint64_t v80 = v6[6];
      unint64_t v81 = &v73[v80];
      uint64_t v82 = &v74[v80];
      uint64_t v83 = *((void *)v82 + 1);
      *(void *)unint64_t v81 = *(void *)v82;
      *((void *)v81 + 1) = v83;
      uint64_t v84 = v6[7];
      uint64_t v85 = &v73[v84];
      uint64_t v86 = &v74[v84];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v149(v85, v86, v150);
      v154(&v73[v6[8]], &v74[v6[8]], v23);
      v154(&v73[v6[9]], &v74[v6[9]], v23);
      uint64_t v87 = v6[10];
      uint64_t v88 = &v73[v87];
      uint64_t v89 = &v74[v87];
      uint64_t v90 = *((void *)v89 + 1);
      *(void *)uint64_t v88 = *(void *)v89;
      *((void *)v88 + 1) = v90;
      uint64_t v91 = v6[11];
      uint64_t v92 = &v73[v91];
      unint64_t v93 = &v74[v91];
      uint64_t v94 = *((void *)v93 + 1);
      *(void *)uint64_t v92 = *(void *)v93;
      *((void *)v92 + 1) = v94;
      *(void *)&v73[v6[12]] = *(void *)&v74[v6[12]];
      v73[v6[13]] = v74[v6[13]];
      uint64_t v95 = v6[14];
      uint64_t v96 = &v73[v95];
      uint64_t v97 = &v74[v95];
      uint64_t v98 = *((void *)v97 + 1);
      *(void *)uint64_t v96 = *(void *)v97;
      *((void *)v96 + 1) = v98;
      uint64_t v99 = v6[15];
      uint64_t v100 = &v73[v99];
      uint64_t v101 = &v74[v99];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v101, 1, v151))
      {
        uint64_t v102 = sub_10017DF08(&qword_100E6B8C8);
        memcpy(v100, v101, *(void *)(*(void *)(v102 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 16))(v100, v101, v151);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v100, 0, 1, v151);
      }
      v73[v6[16]] = v74[v6[16]];
      uint64_t v103 = v6[17];
      uint64_t v104 = &v73[v103];
      uint64_t v105 = &v74[v103];
      uint64_t v106 = *((void *)v105 + 1);
      *(void *)uint64_t v104 = *(void *)v105;
      *((void *)v104 + 1) = v106;
      uint64_t v107 = v6[18];
      uint64_t v108 = &v73[v107];
      uint64_t v109 = &v74[v107];
      uint64_t v110 = *((void *)v109 + 1);
      *(void *)uint64_t v108 = *(void *)v109;
      *((void *)v108 + 1) = v110;
      uint64_t v111 = v6[19];
      uint64_t v112 = &v73[v111];
      char v113 = &v74[v111];
      uint64_t v114 = *((void *)v113 + 1);
      *(void *)uint64_t v112 = *(void *)v113;
      *((void *)v112 + 1) = v114;
      *(void *)&v73[v6[20]] = *(void *)&v74[v6[20]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v73, 0, 1, (uint64_t)v6);
    }
    uint64_t v115 = a3[15];
    uint64_t v116 = &a1[v115];
    uint64_t v117 = &a2[v115];
    uint64_t v118 = sub_10017DF08(&qword_100E73A80);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 16))(v116, v117, v118);
    uint64_t v119 = a3[16];
    uint64_t v120 = &a1[v119];
    uint64_t v121 = &a2[v119];
    uint64_t v122 = sub_10017DF08(&qword_100E7DDF0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 16))(v120, v121, v122);
    uint64_t v123 = a3[17];
    uint64_t v124 = &a1[v123];
    uint64_t v125 = &a2[v123];
    uint64_t v126 = *(void *)v125;
    LOBYTE(v121) = v125[8];
    sub_100195B7C(*(void *)v125, (char)v121);
    *(void *)uint64_t v124 = v126;
    v124[8] = (char)v121;
    uint64_t v127 = a3[18];
    uint64_t v128 = &a1[v127];
    uint64_t v129 = &a2[v127];
    uint64_t v130 = *(void *)v129;
    LOBYTE(v121) = v129[8];
    sub_100195B7C(*(void *)v129, (char)v121);
    *(void *)uint64_t v128 = v130;
    v128[8] = (char)v121;
    uint64_t v131 = a3[19];
    uint64_t v132 = &a1[v131];
    uint64_t v133 = &a2[v131];
    uint64_t v134 = *(void *)v133;
    LOBYTE(v121) = v133[8];
    sub_100195B7C(*(void *)v133, (char)v121);
    *(void *)uint64_t v132 = v134;
    v132[8] = (char)v121;
    uint64_t v135 = a3[20];
    uint64_t v136 = &a1[v135];
    uint64_t v137 = &a2[v135];
    sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v138 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v138 - 8) + 16))(v136, v137, v138);
    }
    else
    {
      *(void *)uint64_t v136 = *(void *)v137;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v139 = a3[21];
    uint64_t v140 = a3[22];
    uint64_t v141 = &a1[v139];
    uint64_t v142 = &a2[v139];
    uint64_t v143 = *((void *)v142 + 1);
    *(void *)uint64_t v141 = *(void *)v142;
    *((void *)v141 + 1) = v143;
    uint64_t v144 = &a1[v140];
    uint64_t v145 = &a2[v140];
    swift_retain();
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v145, 1, v155))
    {
      uint64_t v146 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v144, v145, *(void *)(*(void *)(v146 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v152)(v144, v145, v155);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v144, 0, 1, v155);
    }
    uint64_t v147 = sub_10017DF08(&qword_100E7DDF8);
    *(void *)&v144[*(int *)(v147 + 28)] = *(void *)&v145[*(int *)(v147 + 28)];
  }
  swift_retain();
  return a1;
}

uint64_t sub_10051E334(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v71 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  uint64_t v72 = v6;
  v71(a1, a2);
  uint64_t v7 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  *(_OWORD *)(a1 + v7[5]) = *(_OWORD *)(a2 + v7[5]);
  *(_OWORD *)(a1 + v7[6]) = *(_OWORD *)(a2 + v7[6]);
  uint64_t v8 = v7[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for TimeZone();
  uint64_t v69 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);
  uint64_t v70 = v11;
  v69(v9, v10);
  uint64_t v12 = v7[8];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_10017DF08(&qword_100E65250);
  BOOL v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v16(a1 + v7[9], a2 + v7[9], v15);
  *(_OWORD *)(a1 + v7[10]) = *(_OWORD *)(a2 + v7[10]);
  *(_OWORD *)(a1 + v7[11]) = *(_OWORD *)(a2 + v7[11]);
  *(void *)(a1 + v7[12]) = *(void *)(a2 + v7[12]);
  *(unsigned char *)(a1 + v7[13]) = *(unsigned char *)(a2 + v7[13]);
  *(_OWORD *)(a1 + v7[14]) = *(_OWORD *)(a2 + v7[14]);
  uint64_t v17 = v7[15];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (const void *)(a2 + v17);
  uint64_t v20 = type metadata accessor for Precipitation();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v20))
  {
    uint64_t v21 = sub_10017DF08(&qword_100E6B8C8);
    memcpy(v18, v19, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v18, 0, 1, v20);
  }
  *(unsigned char *)(a1 + v7[16]) = *(unsigned char *)(a2 + v7[16]);
  *(_OWORD *)(a1 + v7[17]) = *(_OWORD *)(a2 + v7[17]);
  *(_OWORD *)(a1 + v7[18]) = *(_OWORD *)(a2 + v7[18]);
  *(_OWORD *)(a1 + v7[19]) = *(_OWORD *)(a2 + v7[19]);
  *(void *)(a1 + v7[20]) = *(void *)(a2 + v7[20]);
  v16(a1 + a3[5], a2 + a3[5], v15);
  v16(a1 + a3[6], a2 + a3[6], v15);
  uint64_t v22 = a3[7];
  uint64_t v23 = (void *)(a1 + v22);
  CGFloat v24 = (const void *)(a2 + v22);
  if (_s7Weather24LocationCompositionStateOwet_0(a2 + v22, 1, v15))
  {
    uint64_t v25 = sub_10017DF08(qword_100E65268);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    v16((uint64_t)v23, (uint64_t)v24, v15);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v15);
  }
  uint64_t v26 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v26) = *(_OWORD *)(a2 + v26);
  uint64_t v27 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v27) = *(_OWORD *)(a2 + v27);
  uint64_t v28 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v28) = *(unsigned char *)(a2 + v28);
  uint64_t v29 = a3[14];
  uint64_t v30 = (void *)(a1 + v29);
  uint64_t v31 = a2 + v29;
  uint64_t v32 = *(void *)(a2 + v29 + 8);
  void *v30 = *(void *)(a2 + v29);
  v30[1] = v32;
  uint64_t v33 = *(int *)(sub_10017DF08(&qword_100E6B8C0) + 32);
  unint64_t v34 = (char *)v30 + v33;
  CGRect v35 = (char *)(v31 + v33);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, (uint64_t)v7))
  {
    uint64_t v36 = sub_10017DF08(&qword_100E6B8D0);
    memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v71)(v34, v35, v72);
    *(_OWORD *)&v34[v7[5]] = *(_OWORD *)&v35[v7[5]];
    *(_OWORD *)&v34[v7[6]] = *(_OWORD *)&v35[v7[6]];
    ((void (*)(char *, char *, uint64_t))v69)(&v34[v7[7]], &v35[v7[7]], v70);
    v16((uint64_t)&v34[v7[8]], (uint64_t)&v35[v7[8]], v15);
    v16((uint64_t)&v34[v7[9]], (uint64_t)&v35[v7[9]], v15);
    *(_OWORD *)&v34[v7[10]] = *(_OWORD *)&v35[v7[10]];
    *(_OWORD *)&v34[v7[11]] = *(_OWORD *)&v35[v7[11]];
    *(void *)&v34[v7[12]] = *(void *)&v35[v7[12]];
    v34[v7[13]] = v35[v7[13]];
    *(_OWORD *)&v34[v7[14]] = *(_OWORD *)&v35[v7[14]];
    uint64_t v37 = v7[15];
    uint64_t v38 = &v34[v37];
    uint64_t v39 = &v35[v37];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v35[v37], 1, v20))
    {
      uint64_t v40 = sub_10017DF08(&qword_100E6B8C8);
      memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v38, v39, v20);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v20);
    }
    v34[v7[16]] = v35[v7[16]];
    *(_OWORD *)&v34[v7[17]] = *(_OWORD *)&v35[v7[17]];
    *(_OWORD *)&v34[v7[18]] = *(_OWORD *)&v35[v7[18]];
    *(_OWORD *)&v34[v7[19]] = *(_OWORD *)&v35[v7[19]];
    *(void *)&v34[v7[20]] = *(void *)&v35[v7[20]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v34, 0, 1, (uint64_t)v7);
  }
  uint64_t v41 = a3[15];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = a2 + v41;
  uint64_t v44 = sub_10017DF08(&qword_100E73A80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
  uint64_t v45 = a3[16];
  uint64_t v46 = a1 + v45;
  uint64_t v47 = a2 + v45;
  uint64_t v48 = sub_10017DF08(&qword_100E7DDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
  uint64_t v49 = a3[17];
  uint64_t v50 = a3[18];
  uint64_t v51 = a1 + v49;
  uint64_t v52 = a2 + v49;
  *(void *)uint64_t v51 = *(void *)v52;
  *(unsigned char *)(v51 + 8) = *(unsigned char *)(v52 + 8);
  uint64_t v53 = a1 + v50;
  uint64_t v54 = a2 + v50;
  *(void *)uint64_t v53 = *(void *)v54;
  *(unsigned char *)(v53 + 8) = *(unsigned char *)(v54 + 8);
  uint64_t v55 = a3[19];
  uint64_t v56 = a3[20];
  uint64_t v57 = a1 + v55;
  uint64_t v58 = a2 + v55;
  *(void *)uint64_t v57 = *(void *)v58;
  *(unsigned char *)(v57 + 8) = *(unsigned char *)(v58 + 8);
  uint64_t v59 = (void *)(a1 + v56);
  os_log_type_t v60 = (const void *)(a2 + v56);
  uint64_t v61 = sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v62 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v62 - 8) + 32))(v59, v60, v62);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
  }
  uint64_t v63 = a3[22];
  *(_OWORD *)(a1 + a3[21]) = *(_OWORD *)(a2 + a3[21]);
  Swift::String v64 = (char *)(a1 + v63);
  Swift::String v65 = (char *)(a2 + v63);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v72))
  {
    uint64_t v66 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v71)(v64, v65, v72);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v64, 0, 1, v72);
  }
  uint64_t v67 = sub_10017DF08(&qword_100E7DDF8);
  *(void *)&v64[*(int *)(v67 + 28)] = *(void *)&v65[*(int *)(v67 + 28)];
  return a1;
}

uint64_t sub_10051EB00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v178 = *(void *)(v6 - 8);
  uint64_t v180 = v6;
  v175 = *(void (**)(uint64_t, uint64_t))(v178 + 40);
  v175(a1, a2);
  uint64_t v7 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  uint64_t v8 = v7[5];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v12 = *v10;
  uint64_t v11 = v10[1];
  *uint64_t v9 = v12;
  v9[1] = v11;
  swift_bridgeObjectRelease();
  uint64_t v13 = v7[6];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (uint64_t *)(a2 + v13);
  uint64_t v17 = *v15;
  uint64_t v16 = v15[1];
  void *v14 = v17;
  v14[1] = v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = v7[7];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  uint64_t v176 = type metadata accessor for TimeZone();
  uint64_t v174 = *(void *)(v176 - 8);
  v173 = *(void (**)(uint64_t, uint64_t))(v174 + 40);
  v173(v19, v20);
  uint64_t v21 = v7[8];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_10017DF08(&qword_100E65250);
  uint64_t v177 = *(void *)(v24 - 8);
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v177 + 40);
  v25(v22, v23, v24);
  v179 = v25;
  v25(a1 + v7[9], a2 + v7[9], v24);
  uint64_t v26 = v7[10];
  uint64_t v27 = (void *)(a1 + v26);
  uint64_t v28 = (uint64_t *)(a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *uint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = v7[11];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (uint64_t *)(a2 + v31);
  uint64_t v35 = *v33;
  uint64_t v34 = v33[1];
  *uint64_t v32 = v35;
  v32[1] = v34;
  swift_bridgeObjectRelease();
  *(void *)(a1 + v7[12]) = *(void *)(a2 + v7[12]);
  *(unsigned char *)(a1 + v7[13]) = *(unsigned char *)(a2 + v7[13]);
  uint64_t v36 = v7[14];
  uint64_t v37 = (void *)(a1 + v36);
  uint64_t v38 = (uint64_t *)(a2 + v36);
  uint64_t v40 = *v38;
  uint64_t v39 = v38[1];
  void *v37 = v40;
  v37[1] = v39;
  swift_bridgeObjectRelease();
  uint64_t v41 = v7[15];
  uint64_t v42 = (void *)(a1 + v41);
  uint64_t v43 = (const void *)(a2 + v41);
  uint64_t v44 = type metadata accessor for Precipitation();
  LODWORD(v25) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v44);
  int v45 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v44);
  if (v25)
  {
    if (!v45)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v44 - 8) + 32))(v42, v43, v44);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v44);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v46 = *(void *)(v44 - 8);
  if (v45)
  {
    (*(void (**)(void *, uint64_t))(v46 + 8))(v42, v44);
LABEL_6:
    uint64_t v47 = sub_10017DF08(&qword_100E6B8C8);
    memcpy(v42, v43, *(void *)(*(void *)(v47 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v46 + 40))(v42, v43, v44);
LABEL_7:
  *(unsigned char *)(a1 + v7[16]) = *(unsigned char *)(a2 + v7[16]);
  uint64_t v48 = v7[17];
  uint64_t v49 = (void *)(a1 + v48);
  uint64_t v50 = (uint64_t *)(a2 + v48);
  uint64_t v52 = *v50;
  uint64_t v51 = v50[1];
  *uint64_t v49 = v52;
  v49[1] = v51;
  swift_bridgeObjectRelease();
  uint64_t v53 = v7[18];
  uint64_t v54 = (void *)(a1 + v53);
  uint64_t v55 = (uint64_t *)(a2 + v53);
  uint64_t v57 = *v55;
  uint64_t v56 = v55[1];
  *uint64_t v54 = v57;
  v54[1] = v56;
  swift_bridgeObjectRelease();
  uint64_t v58 = v7[19];
  uint64_t v59 = (void *)(a1 + v58);
  os_log_type_t v60 = (uint64_t *)(a2 + v58);
  uint64_t v62 = *v60;
  uint64_t v61 = v60[1];
  *uint64_t v59 = v62;
  v59[1] = v61;
  swift_bridgeObjectRelease();
  *(void *)(a1 + v7[20]) = *(void *)(a2 + v7[20]);
  swift_bridgeObjectRelease();
  v179(a1 + a3[5], a2 + a3[5], v24);
  v179(a1 + a3[6], a2 + a3[6], v24);
  uint64_t v63 = a3[7];
  Swift::String v64 = (void *)(a1 + v63);
  Swift::String v65 = (const void *)(a2 + v63);
  int v66 = _s7Weather24LocationCompositionStateOwet_0(a1 + v63, 1, v24);
  int v67 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v24);
  if (v66)
  {
    if (!v67)
    {
      (*(void (**)(void *, const void *, uint64_t))(v177 + 32))(v64, v65, v24);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v64, 0, 1, v24);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v67)
  {
    (*(void (**)(void *, uint64_t))(v177 + 8))(v64, v24);
LABEL_12:
    uint64_t v68 = sub_10017DF08(qword_100E65268);
    memcpy(v64, v65, *(void *)(*(void *)(v68 - 8) + 64));
    goto LABEL_13;
  }
  v179((uint64_t)v64, (uint64_t)v65, v24);
LABEL_13:
  uint64_t v69 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v69) = *(_OWORD *)(a2 + v69);
  uint64_t v70 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v70) = *(_OWORD *)(a2 + v70);
  swift_release();
  uint64_t v71 = a3[13];
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  *(unsigned char *)(a1 + v71) = *(unsigned char *)(a2 + v71);
  uint64_t v72 = a3[14];
  uint64_t v73 = a1 + v72;
  uint64_t v74 = a2 + v72;
  *(void *)(a1 + v72) = *(void *)(a2 + v72);
  swift_release();
  *(void *)(v73 + 8) = *(void *)(v74 + 8);
  swift_release();
  uint64_t v75 = *(int *)(sub_10017DF08(&qword_100E6B8C0) + 32);
  uint64_t v76 = (unsigned char *)(v73 + v75);
  uint64_t v77 = (unsigned char *)(v74 + v75);
  LODWORD(v73) = _s7Weather24LocationCompositionStateOwet_0(v73 + v75, 1, (uint64_t)v7);
  int v78 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v77, 1, (uint64_t)v7);
  if (v73)
  {
    if (!v78)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v178 + 32))(v76, v77, v180);
      *(_OWORD *)&v76[v7[5]] = *(_OWORD *)&v77[v7[5]];
      *(_OWORD *)&v76[v7[6]] = *(_OWORD *)&v77[v7[6]];
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v174 + 32))(&v76[v7[7]], &v77[v7[7]], v176);
      uint64_t v79 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v177 + 32);
      v79(&v76[v7[8]], &v77[v7[8]], v24);
      v79(&v76[v7[9]], &v77[v7[9]], v24);
      *(_OWORD *)&v76[v7[10]] = *(_OWORD *)&v77[v7[10]];
      *(_OWORD *)&v76[v7[11]] = *(_OWORD *)&v77[v7[11]];
      *(void *)&v76[v7[12]] = *(void *)&v77[v7[12]];
      v76[v7[13]] = v77[v7[13]];
      *(_OWORD *)&v76[v7[14]] = *(_OWORD *)&v77[v7[14]];
      uint64_t v80 = v7[15];
      unint64_t v81 = &v76[v80];
      uint64_t v82 = &v77[v80];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v77[v80], 1, v44))
      {
        uint64_t v83 = sub_10017DF08(&qword_100E6B8C8);
        memcpy(v81, v82, *(void *)(*(void *)(v83 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v81, v82, v44);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v44);
      }
      v76[v7[16]] = v77[v7[16]];
      *(_OWORD *)&v76[v7[17]] = *(_OWORD *)&v77[v7[17]];
      *(_OWORD *)&v76[v7[18]] = *(_OWORD *)&v77[v7[18]];
      *(_OWORD *)&v76[v7[19]] = *(_OWORD *)&v77[v7[19]];
      *(void *)&v76[v7[20]] = *(void *)&v77[v7[20]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v76, 0, 1, (uint64_t)v7);
      goto LABEL_31;
    }
    goto LABEL_19;
  }
  if (v78)
  {
    sub_100142888((uint64_t)v76, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
LABEL_19:
    uint64_t v84 = sub_10017DF08(&qword_100E6B8D0);
    memcpy(v76, v77, *(void *)(*(void *)(v84 - 8) + 64));
    goto LABEL_31;
  }
  ((void (*)(unsigned char *, unsigned char *, uint64_t))v175)(v76, v77, v180);
  uint64_t v85 = v7[5];
  uint64_t v86 = &v76[v85];
  uint64_t v87 = (uint64_t *)&v77[v85];
  uint64_t v89 = *v87;
  uint64_t v88 = v87[1];
  *uint64_t v86 = v89;
  v86[1] = v88;
  swift_bridgeObjectRelease();
  uint64_t v90 = v7[6];
  uint64_t v91 = &v76[v90];
  uint64_t v92 = (uint64_t *)&v77[v90];
  uint64_t v94 = *v92;
  uint64_t v93 = v92[1];
  *uint64_t v91 = v94;
  v91[1] = v93;
  swift_bridgeObjectRelease();
  ((void (*)(unsigned char *, unsigned char *, uint64_t))v173)(&v76[v7[7]], &v77[v7[7]], v176);
  v179((uint64_t)&v76[v7[8]], (uint64_t)&v77[v7[8]], v24);
  v179((uint64_t)&v76[v7[9]], (uint64_t)&v77[v7[9]], v24);
  uint64_t v95 = v7[10];
  uint64_t v96 = &v76[v95];
  uint64_t v97 = (uint64_t *)&v77[v95];
  uint64_t v99 = *v97;
  uint64_t v98 = v97[1];
  void *v96 = v99;
  v96[1] = v98;
  swift_bridgeObjectRelease();
  uint64_t v100 = v7[11];
  uint64_t v101 = &v76[v100];
  uint64_t v102 = (uint64_t *)&v77[v100];
  uint64_t v104 = *v102;
  uint64_t v103 = v102[1];
  void *v101 = v104;
  v101[1] = v103;
  swift_bridgeObjectRelease();
  *(void *)&v76[v7[12]] = *(void *)&v77[v7[12]];
  v76[v7[13]] = v77[v7[13]];
  uint64_t v105 = v7[14];
  uint64_t v106 = &v76[v105];
  uint64_t v107 = (uint64_t *)&v77[v105];
  uint64_t v109 = *v107;
  uint64_t v108 = v107[1];
  void *v106 = v109;
  v106[1] = v108;
  swift_bridgeObjectRelease();
  uint64_t v110 = v7[15];
  uint64_t v111 = &v76[v110];
  uint64_t v112 = &v77[v110];
  int v113 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v76[v110], 1, v44);
  int v114 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v112, 1, v44);
  if (!v113)
  {
    uint64_t v115 = *(void *)(v44 - 8);
    if (!v114)
    {
      (*(void (**)(char *, char *, uint64_t))(v115 + 40))(v111, v112, v44);
      goto LABEL_30;
    }
    (*(void (**)(char *, uint64_t))(v115 + 8))(v111, v44);
    goto LABEL_29;
  }
  if (v114)
  {
LABEL_29:
    uint64_t v116 = sub_10017DF08(&qword_100E6B8C8);
    memcpy(v111, v112, *(void *)(*(void *)(v116 - 8) + 64));
    goto LABEL_30;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v111, v112, v44);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v111, 0, 1, v44);
LABEL_30:
  v76[v7[16]] = v77[v7[16]];
  uint64_t v117 = v7[17];
  uint64_t v118 = &v76[v117];
  uint64_t v119 = (uint64_t *)&v77[v117];
  uint64_t v121 = *v119;
  uint64_t v120 = v119[1];
  *uint64_t v118 = v121;
  v118[1] = v120;
  swift_bridgeObjectRelease();
  uint64_t v122 = v7[18];
  uint64_t v123 = &v76[v122];
  uint64_t v124 = (uint64_t *)&v77[v122];
  uint64_t v126 = *v124;
  uint64_t v125 = v124[1];
  void *v123 = v126;
  v123[1] = v125;
  swift_bridgeObjectRelease();
  uint64_t v127 = v7[19];
  uint64_t v128 = &v76[v127];
  uint64_t v129 = (uint64_t *)&v77[v127];
  uint64_t v131 = *v129;
  uint64_t v130 = v129[1];
  void *v128 = v131;
  v128[1] = v130;
  swift_bridgeObjectRelease();
  *(void *)&v76[v7[20]] = *(void *)&v77[v7[20]];
  swift_bridgeObjectRelease();
LABEL_31:
  uint64_t v132 = a3[15];
  uint64_t v133 = a1 + v132;
  uint64_t v134 = a2 + v132;
  uint64_t v135 = sub_10017DF08(&qword_100E73A80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v135 - 8) + 40))(v133, v134, v135);
  uint64_t v136 = a3[16];
  uint64_t v137 = a1 + v136;
  uint64_t v138 = a2 + v136;
  uint64_t v139 = sub_10017DF08(&qword_100E7DDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v139 - 8) + 40))(v137, v138, v139);
  uint64_t v140 = a3[17];
  uint64_t v141 = a1 + v140;
  uint64_t v142 = (uint64_t *)(a2 + v140);
  uint64_t v143 = *v142;
  LOBYTE(v142) = *((unsigned char *)v142 + 8);
  uint64_t v144 = *(void *)v141;
  char v145 = *(unsigned char *)(v141 + 8);
  *(void *)uint64_t v141 = v143;
  *(unsigned char *)(v141 + 8) = (_BYTE)v142;
  sub_10018F6D8(v144, v145);
  uint64_t v146 = a3[18];
  uint64_t v147 = a1 + v146;
  uint64_t v148 = (uint64_t *)(a2 + v146);
  uint64_t v149 = *v148;
  LOBYTE(v148) = *((unsigned char *)v148 + 8);
  uint64_t v150 = *(void *)v147;
  char v151 = *(unsigned char *)(v147 + 8);
  *(void *)uint64_t v147 = v149;
  *(unsigned char *)(v147 + 8) = (_BYTE)v148;
  sub_10018F6D8(v150, v151);
  uint64_t v152 = a3[19];
  uint64_t v153 = a1 + v152;
  uint64_t v154 = (uint64_t *)(a2 + v152);
  uint64_t v155 = *v154;
  LOBYTE(v154) = *((unsigned char *)v154 + 8);
  uint64_t v156 = *(void *)v153;
  char v157 = *(unsigned char *)(v153 + 8);
  *(void *)uint64_t v153 = v155;
  *(unsigned char *)(v153 + 8) = (_BYTE)v154;
  sub_10018F6D8(v156, v157);
  if (a1 != a2)
  {
    uint64_t v158 = a3[20];
    uint64_t v159 = (void *)(a1 + v158);
    uint64_t v160 = (const void *)(a2 + v158);
    sub_100178110(a1 + v158, &qword_100E66E50);
    uint64_t v161 = sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v162 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v162 - 8) + 32))(v159, v160, v162);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v159, v160, *(void *)(*(void *)(v161 - 8) + 64));
    }
  }
  uint64_t v163 = a3[21];
  uint64_t v164 = a1 + v163;
  uint64_t v165 = a2 + v163;
  *(void *)(a1 + v163) = *(void *)(a2 + v163);
  swift_release();
  *(void *)(v164 + 8) = *(void *)(v165 + 8);
  swift_release();
  uint64_t v166 = a3[22];
  uint64_t v167 = (char *)(a1 + v166);
  v168 = (char *)(a2 + v166);
  LODWORD(v164) = _s7Weather24LocationCompositionStateOwet_0(a1 + v166, 1, v180);
  int v169 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v168, 1, v180);
  if (!v164)
  {
    if (!v169)
    {
      ((void (*)(char *, char *, uint64_t))v175)(v167, v168, v180);
      goto LABEL_41;
    }
    (*(void (**)(char *, uint64_t))(v178 + 8))(v167, v180);
    goto LABEL_40;
  }
  if (v169)
  {
LABEL_40:
    uint64_t v170 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v167, v168, *(void *)(*(void *)(v170 - 8) + 64));
    goto LABEL_41;
  }
  (*(void (**)(char *, char *, uint64_t))(v178 + 32))(v167, v168, v180);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v167, 0, 1, v180);
LABEL_41:
  uint64_t v171 = sub_10017DF08(&qword_100E7DDF8);
  *(void *)&v167[*(int *)(v171 + 28)] = *(void *)&v168[*(int *)(v171 + 28)];
  swift_release();
  return a1;
}

uint64_t sub_10051F87C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10051F890);
}

uint64_t sub_10051F890(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_21:
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  sub_10017DF08(&qword_100E65250);
  sub_100162F30();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v12 = a3[5];
LABEL_20:
    uint64_t v9 = a1 + v12;
    goto LABEL_21;
  }
  sub_10017DF08(qword_100E65268);
  sub_100162F30();
  if (*(_DWORD *)(v14 + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v12 = a3[7];
    goto LABEL_20;
  }
  if (a2 != 0x7FFFFFFF)
  {
    sub_10017DF08(&qword_100E6B8C0);
    sub_100162F30();
    if (*(_DWORD *)(v18 + 84) == a2)
    {
      uint64_t v8 = v17;
      uint64_t v12 = a3[14];
    }
    else
    {
      sub_10017DF08(&qword_100E73A80);
      sub_100162F30();
      if (*(_DWORD *)(v20 + 84) == a2)
      {
        uint64_t v8 = v19;
        uint64_t v12 = a3[15];
      }
      else
      {
        sub_10017DF08(&qword_100E7DDF0);
        sub_100162F30();
        if (*(_DWORD *)(v22 + 84) == a2)
        {
          uint64_t v8 = v21;
          uint64_t v12 = a3[16];
        }
        else
        {
          sub_10017DF08(&qword_100E6D908);
          sub_100162F30();
          if (*(_DWORD *)(v24 + 84) == a2)
          {
            uint64_t v8 = v23;
            uint64_t v12 = a3[20];
          }
          else
          {
            uint64_t v8 = sub_10017DF08(&qword_100E7DDF8);
            uint64_t v12 = a3[22];
          }
        }
      }
    }
    goto LABEL_20;
  }
  unint64_t v15 = *(void *)(a1 + a3[11]);
  if (v15 >= 0xFFFFFFFF) {
    LODWORD(v15) = -1;
  }
  return (v15 + 1);
}

uint64_t sub_10051FA34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10051FA48);
}

void sub_10051FA48(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_10017DF08(&qword_100E65250);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      sub_10017DF08(qword_100E65268);
      sub_100162F30();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[7];
      }
      else
      {
        if (a3 == 0x7FFFFFFF)
        {
          *(void *)(a1 + a4[11]) = (a2 - 1);
          return;
        }
        sub_10017DF08(&qword_100E6B8C0);
        sub_100162F30();
        if (*(_DWORD *)(v18 + 84) == a3)
        {
          uint64_t v10 = v17;
          uint64_t v14 = a4[14];
        }
        else
        {
          sub_10017DF08(&qword_100E73A80);
          sub_100162F30();
          if (*(_DWORD *)(v20 + 84) == a3)
          {
            uint64_t v10 = v19;
            uint64_t v14 = a4[15];
          }
          else
          {
            sub_10017DF08(&qword_100E7DDF0);
            sub_100162F30();
            if (*(_DWORD *)(v22 + 84) == a3)
            {
              uint64_t v10 = v21;
              uint64_t v14 = a4[16];
            }
            else
            {
              sub_10017DF08(&qword_100E6D908);
              sub_100162F30();
              if (*(_DWORD *)(v24 + 84) == a3)
              {
                uint64_t v10 = v23;
                uint64_t v14 = a4[20];
              }
              else
              {
                uint64_t v10 = sub_10017DF08(&qword_100E7DDF8);
                uint64_t v14 = a4[22];
              }
            }
          }
        }
      }
    }
    uint64_t v11 = a1 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t sub_10051FBE8()
{
  uint64_t v1 = (int *)type metadata accessor for DailyComponentForecastRowView();
  uint64_t v26 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v2 = v0 + ((v26 + 16) & ~v26);
  type metadata accessor for Date();
  sub_100162E4C();
  uint64_t v27 = v4;
  uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  ((void (*)(uint64_t))v25)(v2);
  uint64_t v5 = type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  sub_1001631A8();
  sub_1001631A8();
  uint64_t v6 = v2 + *(int *)(v5 + 28);
  uint64_t v7 = type metadata accessor for TimeZone();
  sub_100162E4C();
  uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v24(v6, v7);
  uint64_t v9 = sub_10017DF08(&qword_100E65250);
  sub_100162E4C();
  uint64_t v11 = *(void (**)(void))(v10 + 8);
  sub_10017C768();
  v11();
  sub_10017C768();
  v11();
  sub_1001631A8();
  sub_1001631A8();
  sub_1001631A8();
  uint64_t v12 = v2 + *(int *)(v5 + 60);
  uint64_t v13 = type metadata accessor for Precipitation();
  if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  }
  sub_1001631A8();
  sub_1001631A8();
  sub_1001631A8();
  swift_bridgeObjectRelease();
  sub_10017C768();
  v11();
  sub_10017C768();
  v11();
  uint64_t v14 = v2 + v1[7];
  if (!_s7Weather24LocationCompositionStateOwet_0(v14, 1, v9)) {
    ((void (*)(uint64_t, uint64_t))v11)(v14, v9);
  }
  swift_release();
  uint64_t v15 = v2 + v1[14];
  swift_release();
  swift_release();
  uint64_t v16 = v15 + *(int *)(sub_10017DF08(&qword_100E6B8C0) + 32);
  if (!_s7Weather24LocationCompositionStateOwet_0(v16, 1, v5))
  {
    sub_100162F0C();
    v17();
    sub_100183044();
    sub_100183044();
    v24(v16 + *(int *)(v5 + 28), v7);
    sub_10017C768();
    v11();
    sub_10017C768();
    v11();
    sub_100183044();
    sub_100183044();
    sub_100183044();
    uint64_t v18 = v16 + *(int *)(v5 + 60);
    if (!_s7Weather24LocationCompositionStateOwet_0(v18, 1, v13)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v18, v13);
    }
    sub_100183044();
    sub_100183044();
    sub_100183044();
    swift_bridgeObjectRelease();
  }
  sub_10017DF08(&qword_100E73A80);
  sub_100162E4C();
  sub_100162F0C();
  v19();
  sub_10017DF08(&qword_100E7DDF0);
  sub_100162E4C();
  sub_100162F0C();
  v20();
  sub_100163EF4(v1[17]);
  sub_100163EF4(v1[18]);
  sub_100163EF4(v1[19]);
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for ColorSchemeContrast();
    sub_100162E4C();
    sub_100162F0C();
    v21();
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v22 = v2 + v1[22];
  if (!_s7Weather24LocationCompositionStateOwet_0(v22, 1, v27)) {
    v25(v22, v27);
  }
  sub_10017DF08(&qword_100E7DDF8);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10052010C()
{
  uint64_t v1 = *(void *)(type metadata accessor for DailyComponentForecastRowView() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_10051D684(v2);
}

BOOL NotificationAuthorizationState.isAllowed.getter(char a1)
{
  return a1 == 1;
}

BOOL NotificationAuthorizationState.isUndetermined.getter(char a1)
{
  return a1 == 3 || a1 == 0;
}

Weather::NotificationAuthorizationState_optional __swiftcall NotificationAuthorizationState.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E06F10, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 4) {
    return (Weather::NotificationAuthorizationState_optional)4;
  }
  else {
    return (Weather::NotificationAuthorizationState_optional)v3;
  }
}

unint64_t NotificationAuthorizationState.rawValue.getter(char a1)
{
  unint64_t result = 0x7265746544746F6ELL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6465776F6C6C61;
      break;
    case 2:
      unint64_t result = 0x6465696E6564;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

Swift::Int sub_100520288()
{
  return sub_100652924(*v0);
}

uint64_t sub_100520290()
{
  return sub_1002C21D8();
}

Swift::Int sub_100520298(uint64_t a1)
{
  return sub_1002C48FC(a1, *v1);
}

Weather::NotificationAuthorizationState_optional sub_1005202A0@<W0>(Swift::String *a1@<X0>, Weather::NotificationAuthorizationState_optional *a2@<X8>)
{
  result.value = NotificationAuthorizationState.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

unint64_t sub_1005202D0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = NotificationAuthorizationState.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1005202FC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1001197F8(*a1, *a2);
}

uint64_t sub_100520308()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_100520368()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t sub_1005203CC()
{
  unint64_t result = qword_100E7DFF0;
  if (!qword_100E7DFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7DFF0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NotificationAuthorizationState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005204E4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

unint64_t sub_10052050C()
{
  unint64_t result = qword_100E7E008;
  if (!qword_100E7E008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E008);
  }
  return result;
}

void *sub_100520558(void *a1, void *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v10 = a2[7];
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    a1[6] = a2[6];
    a1[7] = v10;
    type metadata accessor for DetailHeroChartLollipopModel(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)uint64_t v12 = *(void *)v13;
      uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
      uint64_t v15 = *(int *)(active + 20);
      uint64_t v16 = &v12[v15];
      uint64_t v17 = &v13[v15];
      uint64_t v18 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      uint64_t v19 = (int *)type metadata accessor for LollipopMarkModel(0);
      *(void *)&v16[v19[5]] = *(void *)&v17[v19[5]];
      *(void *)&v16[v19[6]] = *(void *)&v17[v19[6]];
      *(void *)&v16[v19[7]] = *(void *)&v17[v19[7]];
      uint64_t v20 = *(int *)(active + 24);
      uint64_t v21 = &v12[v20];
      uint64_t v22 = &v13[v20];
      type metadata accessor for LollipopDetailViewModel(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v34 = *((void *)v22 + 1);
        *(void *)uint64_t v21 = *(void *)v22;
        *((void *)v21 + 1) = v34;
        uint64_t v35 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        uint64_t v36 = v35[5];
        uint64_t v92 = &v22[v36];
        uint64_t v94 = &v21[v36];
        uint64_t v37 = type metadata accessor for AttributedString();
        uint64_t v91 = *(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16);
        swift_bridgeObjectRetain();
        v91(v94, v92, v37);
        uint64_t v38 = v35[6];
        uint64_t v39 = &v21[v38];
        uint64_t v40 = &v22[v38];
        uint64_t v41 = *((void *)v40 + 1);
        *(void *)uint64_t v39 = *(void *)v40;
        *((void *)v39 + 1) = v41;
        uint64_t v42 = v35[7];
        uint64_t v43 = &v21[v42];
        uint64_t v44 = &v22[v42];
        uint64_t v95 = *((void *)v44 + 1);
        *(void *)uint64_t v43 = *(void *)v44;
        *((void *)v43 + 1) = v95;
        uint64_t v45 = v35[8];
        uint64_t v46 = &v21[v45];
        uint64_t v47 = &v22[v45];
        uint64_t v48 = *((void *)v47 + 1);
        *(void *)uint64_t v46 = *(void *)v47;
        *((void *)v46 + 1) = v48;
        uint64_t v49 = v35[9];
        uint64_t v50 = &v21[v49];
        uint64_t v51 = &v22[v49];
        uint64_t v52 = *((void *)v51 + 1);
        *(void *)uint64_t v50 = *(void *)v51;
        *((void *)v50 + 1) = v52;
        uint64_t v53 = v35[10];
        uint64_t v54 = &v21[v53];
        uint64_t v55 = &v22[v53];
        uint64_t v56 = *((void *)v55 + 1);
        *(void *)uint64_t v54 = *(void *)v55;
        *((void *)v54 + 1) = v56;
        v21[v35[11]] = v22[v35[11]];
        swift_bridgeObjectRetain();
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          uint64_t v57 = *((void *)v22 + 1);
          *(void *)uint64_t v21 = *(void *)v22;
          *((void *)v21 + 1) = v57;
          uint64_t v58 = *((void *)v22 + 3);
          *((void *)v21 + 2) = *((void *)v22 + 2);
          *((void *)v21 + 3) = v58;
          uint64_t v59 = *((void *)v22 + 5);
          *((void *)v21 + 4) = *((void *)v22 + 4);
          *((void *)v21 + 5) = v59;
LABEL_15:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          uint64_t v86 = *(int *)(a3 + 24);
          uint64_t v87 = (char *)v4 + v86;
          uint64_t v88 = (char *)a2 + v86;
          uint64_t v89 = sub_10017DF08(&qword_100E63BE8);
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 16))(v87, v88, v89);
          return v4;
        }
        uint64_t v24 = *((void *)v22 + 1);
        *(void *)uint64_t v21 = *(void *)v22;
        *((void *)v21 + 1) = v24;
        uint64_t v25 = *((void *)v22 + 3);
        *((void *)v21 + 2) = *((void *)v22 + 2);
        *((void *)v21 + 3) = v25;
        uint64_t v26 = *((void *)v22 + 5);
        *((void *)v21 + 4) = *((void *)v22 + 4);
        *((void *)v21 + 5) = v26;
        uint64_t v27 = *((void *)v22 + 7);
        *((void *)v21 + 6) = *((void *)v22 + 6);
        *((void *)v21 + 7) = v27;
        v21[64] = v22[64];
        v21[65] = v22[65];
      }
    }
    else
    {
      type metadata accessor for LollipopDetailViewModel(0);
      int v29 = swift_getEnumCaseMultiPayload();
      if (v29 == 2)
      {
        uint64_t v60 = *((void *)v13 + 1);
        *(void *)uint64_t v12 = *(void *)v13;
        *((void *)v12 + 1) = v60;
        uint64_t v61 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        uint64_t v62 = v61[5];
        uint64_t v96 = &v13[v62];
        uint64_t v97 = &v12[v62];
        uint64_t v63 = type metadata accessor for AttributedString();
        uint64_t v93 = *(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16);
        swift_bridgeObjectRetain();
        v93(v97, v96, v63);
        uint64_t v64 = v61[6];
        Swift::String v65 = &v12[v64];
        int v66 = &v13[v64];
        uint64_t v67 = *((void *)v66 + 1);
        *(void *)Swift::String v65 = *(void *)v66;
        *((void *)v65 + 1) = v67;
        uint64_t v68 = v61[7];
        uint64_t v69 = &v12[v68];
        uint64_t v70 = &v13[v68];
        uint64_t v98 = *((void *)v70 + 1);
        *(void *)uint64_t v69 = *(void *)v70;
        *((void *)v69 + 1) = v98;
        uint64_t v71 = v61[8];
        uint64_t v72 = &v12[v71];
        uint64_t v73 = &v13[v71];
        uint64_t v74 = *((void *)v73 + 1);
        *(void *)uint64_t v72 = *(void *)v73;
        *((void *)v72 + 1) = v74;
        uint64_t v75 = v61[9];
        uint64_t v76 = &v12[v75];
        uint64_t v77 = &v13[v75];
        uint64_t v78 = *((void *)v77 + 1);
        *(void *)uint64_t v76 = *(void *)v77;
        *((void *)v76 + 1) = v78;
        uint64_t v79 = v61[10];
        uint64_t v80 = &v12[v79];
        unint64_t v81 = &v13[v79];
        uint64_t v82 = *((void *)v81 + 1);
        *(void *)uint64_t v80 = *(void *)v81;
        *((void *)v80 + 1) = v82;
        v12[v61[11]] = v13[v61[11]];
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v29 != 1)
        {
          uint64_t v83 = *((void *)v13 + 1);
          *(void *)uint64_t v12 = *(void *)v13;
          *((void *)v12 + 1) = v83;
          uint64_t v84 = *((void *)v13 + 3);
          *((void *)v12 + 2) = *((void *)v13 + 2);
          *((void *)v12 + 3) = v84;
          uint64_t v85 = *((void *)v13 + 5);
          *((void *)v12 + 4) = *((void *)v13 + 4);
          *((void *)v12 + 5) = v85;
          goto LABEL_15;
        }
        uint64_t v30 = *((void *)v13 + 1);
        *(void *)uint64_t v12 = *(void *)v13;
        *((void *)v12 + 1) = v30;
        uint64_t v31 = *((void *)v13 + 3);
        *((void *)v12 + 2) = *((void *)v13 + 2);
        *((void *)v12 + 3) = v31;
        uint64_t v32 = *((void *)v13 + 5);
        *((void *)v12 + 4) = *((void *)v13 + 4);
        *((void *)v12 + 5) = v32;
        uint64_t v33 = *((void *)v13 + 7);
        *((void *)v12 + 6) = *((void *)v13 + 6);
        *((void *)v12 + 7) = v33;
        v12[64] = v13[64];
        v12[65] = v13[65];
      }
    }
    swift_bridgeObjectRetain();
    goto LABEL_15;
  }
  uint64_t v28 = *a2;
  *unsigned int v4 = *a2;
  unsigned int v4 = (void *)(v28 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return v4;
}

uint64_t sub_100520A9C(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for DetailHeroChartLollipopModel(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
    uint64_t v6 = v4 + *(int *)(active + 20);
    uint64_t v7 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    v4 += *(int *)(active + 24);
  }
  type metadata accessor for LollipopDetailViewModel(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = v4 + *(int *)(type metadata accessor for TitleAndDetailLollipopDetailViewModel(0) + 20);
    uint64_t v10 = type metadata accessor for AttributedString();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (EnumCaseMultiPayload) {
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_10:
  uint64_t v11 = a1 + *(int *)(a2 + 24);
  uint64_t v12 = sub_10017DF08(&qword_100E63BE8);
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);

  return v13(v11, v12);
}

void *sub_100520CC0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[7];
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  a1[6] = a2[6];
  a1[7] = v8;
  type metadata accessor for DetailHeroChartLollipopModel(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    type metadata accessor for LollipopDetailViewModel(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v57 = *((void *)v11 + 1);
      *(void *)uint64_t v10 = *(void *)v11;
      *((void *)v10 + 1) = v57;
      uint64_t v58 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v59 = v58[5];
      uint64_t v92 = &v11[v59];
      uint64_t v95 = &v10[v59];
      uint64_t v60 = type metadata accessor for AttributedString();
      uint64_t v61 = *(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16);
      swift_bridgeObjectRetain();
      v61(v95, v92, v60);
      uint64_t v62 = v58[6];
      uint64_t v63 = &v10[v62];
      uint64_t v64 = &v11[v62];
      uint64_t v65 = *((void *)v64 + 1);
      *(void *)uint64_t v63 = *(void *)v64;
      *((void *)v63 + 1) = v65;
      uint64_t v66 = v58[7];
      uint64_t v67 = &v10[v66];
      uint64_t v68 = &v11[v66];
      uint64_t v69 = *((void *)v68 + 1);
      *(void *)uint64_t v67 = *(void *)v68;
      *((void *)v67 + 1) = v69;
      uint64_t v70 = v58[8];
      uint64_t v71 = &v10[v70];
      uint64_t v72 = &v11[v70];
      uint64_t v73 = *((void *)v72 + 1);
      *(void *)uint64_t v71 = *(void *)v72;
      *((void *)v71 + 1) = v73;
      uint64_t v74 = v58[9];
      uint64_t v75 = &v10[v74];
      uint64_t v76 = &v11[v74];
      uint64_t v77 = *((void *)v76 + 1);
      *(void *)uint64_t v75 = *(void *)v76;
      *((void *)v75 + 1) = v77;
      uint64_t v78 = v58[10];
      uint64_t v79 = &v10[v78];
      uint64_t v80 = &v11[v78];
      uint64_t v81 = *((void *)v80 + 1);
      *(void *)uint64_t v79 = *(void *)v80;
      *((void *)v79 + 1) = v81;
      v10[v58[11]] = v11[v58[11]];
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v82 = *((void *)v11 + 1);
        *(void *)uint64_t v10 = *(void *)v11;
        *((void *)v10 + 1) = v82;
        uint64_t v83 = *((void *)v11 + 3);
        *((void *)v10 + 2) = *((void *)v11 + 2);
        *((void *)v10 + 3) = v83;
        uint64_t v84 = *((void *)v11 + 5);
        *((void *)v10 + 4) = *((void *)v11 + 4);
        *((void *)v10 + 5) = v84;
        goto LABEL_13;
      }
      uint64_t v27 = *((void *)v11 + 1);
      *(void *)uint64_t v10 = *(void *)v11;
      *((void *)v10 + 1) = v27;
      uint64_t v28 = *((void *)v11 + 3);
      *((void *)v10 + 2) = *((void *)v11 + 2);
      *((void *)v10 + 3) = v28;
      uint64_t v29 = *((void *)v11 + 5);
      *((void *)v10 + 4) = *((void *)v11 + 4);
      *((void *)v10 + 5) = v29;
      uint64_t v30 = *((void *)v11 + 7);
      *((void *)v10 + 6) = *((void *)v11 + 6);
      *((void *)v10 + 7) = v30;
      v10[64] = v11[64];
      v10[65] = v11[65];
    }
    goto LABEL_11;
  }
  *(void *)uint64_t v10 = *(void *)v11;
  uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
  uint64_t v13 = *(int *)(active + 20);
  uint64_t v14 = &v10[v13];
  uint64_t v15 = &v11[v13];
  uint64_t v16 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  uint64_t v17 = (int *)type metadata accessor for LollipopMarkModel(0);
  *(void *)&v14[v17[5]] = *(void *)&v15[v17[5]];
  *(void *)&v14[v17[6]] = *(void *)&v15[v17[6]];
  *(void *)&v14[v17[7]] = *(void *)&v15[v17[7]];
  uint64_t v18 = *(int *)(active + 24);
  uint64_t v19 = &v10[v18];
  uint64_t v20 = &v11[v18];
  type metadata accessor for LollipopDetailViewModel(0);
  int v21 = swift_getEnumCaseMultiPayload();
  if (v21 == 2)
  {
    uint64_t v31 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v31;
    uint64_t v32 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
    uint64_t v33 = v32[5];
    uint64_t v91 = &v20[v33];
    uint64_t v93 = &v19[v33];
    uint64_t v34 = type metadata accessor for AttributedString();
    uint64_t v90 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16);
    swift_bridgeObjectRetain();
    v90(v93, v91, v34);
    uint64_t v35 = v32[6];
    uint64_t v36 = &v19[v35];
    uint64_t v37 = &v20[v35];
    uint64_t v38 = *((void *)v37 + 1);
    *(void *)uint64_t v36 = *(void *)v37;
    *((void *)v36 + 1) = v38;
    uint64_t v39 = v32[7];
    uint64_t v40 = &v19[v39];
    uint64_t v41 = &v20[v39];
    uint64_t v94 = *((void *)v41 + 1);
    *(void *)uint64_t v40 = *(void *)v41;
    *((void *)v40 + 1) = v94;
    uint64_t v42 = v32[8];
    uint64_t v43 = &v19[v42];
    uint64_t v44 = &v20[v42];
    uint64_t v45 = *((void *)v44 + 1);
    *(void *)uint64_t v43 = *(void *)v44;
    *((void *)v43 + 1) = v45;
    uint64_t v46 = v32[9];
    uint64_t v47 = &v19[v46];
    uint64_t v48 = &v20[v46];
    uint64_t v49 = *((void *)v48 + 1);
    *(void *)uint64_t v47 = *(void *)v48;
    *((void *)v47 + 1) = v49;
    uint64_t v50 = v32[10];
    uint64_t v51 = &v19[v50];
    uint64_t v52 = &v20[v50];
    uint64_t v53 = *((void *)v52 + 1);
    *(void *)uint64_t v51 = *(void *)v52;
    *((void *)v51 + 1) = v53;
    v19[v32[11]] = v20[v32[11]];
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  if (v21 == 1)
  {
    uint64_t v22 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v22;
    uint64_t v23 = *((void *)v20 + 3);
    *((void *)v19 + 2) = *((void *)v20 + 2);
    *((void *)v19 + 3) = v23;
    uint64_t v24 = *((void *)v20 + 5);
    *((void *)v19 + 4) = *((void *)v20 + 4);
    *((void *)v19 + 5) = v24;
    uint64_t v25 = *((void *)v20 + 7);
    *((void *)v19 + 6) = *((void *)v20 + 6);
    *((void *)v19 + 7) = v25;
    v19[64] = v20[64];
    v19[65] = v20[65];
LABEL_11:
    swift_bridgeObjectRetain();
    goto LABEL_13;
  }
  uint64_t v54 = *((void *)v20 + 1);
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = v54;
  uint64_t v55 = *((void *)v20 + 3);
  *((void *)v19 + 2) = *((void *)v20 + 2);
  *((void *)v19 + 3) = v55;
  uint64_t v56 = *((void *)v20 + 5);
  *((void *)v19 + 4) = *((void *)v20 + 4);
  *((void *)v19 + 5) = v56;
LABEL_13:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v85 = *(int *)(a3 + 24);
  uint64_t v86 = (char *)a1 + v85;
  uint64_t v87 = (char *)a2 + v85;
  uint64_t v88 = sub_10017DF08(&qword_100E63BE8);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16))(v86, v87, v88);
  return a1;
}

void *sub_1005211AC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_100523D18((uint64_t)a1 + v6, (void (*)(void))type metadata accessor for DetailHeroChartLollipopModel);
    type metadata accessor for DetailHeroChartLollipopModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v68 = a3;
      *(void *)uint64_t v7 = *(void *)v8;
      uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
      uint64_t v10 = *(int *)(active + 20);
      uint64_t v11 = &v7[v10];
      uint64_t v12 = &v8[v10];
      uint64_t v13 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
      uint64_t v14 = (int *)type metadata accessor for LollipopMarkModel(0);
      *(void *)&v11[v14[5]] = *(void *)&v12[v14[5]];
      *(void *)&v11[v14[6]] = *(void *)&v12[v14[6]];
      *(void *)&v11[v14[7]] = *(void *)&v12[v14[7]];
      uint64_t v15 = *(int *)(active + 24);
      uint64_t v16 = &v7[v15];
      uint64_t v17 = &v8[v15];
      type metadata accessor for LollipopDetailViewModel(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(void *)uint64_t v16 = *(void *)v17;
        *((void *)v16 + 1) = *((void *)v17 + 1);
        uint64_t v20 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        uint64_t v21 = v20[5];
        uint64_t v64 = &v17[v21];
        uint64_t v66 = &v16[v21];
        uint64_t v22 = type metadata accessor for AttributedString();
        uint64_t v63 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        v63(v66, v64, v22);
        uint64_t v23 = v20[6];
        uint64_t v24 = &v16[v23];
        uint64_t v25 = &v17[v23];
        *(void *)uint64_t v24 = *(void *)v25;
        *((void *)v24 + 1) = *((void *)v25 + 1);
        uint64_t v26 = v20[7];
        uint64_t v27 = &v16[v26];
        uint64_t v28 = &v17[v26];
        *(void *)uint64_t v27 = *(void *)v28;
        *((void *)v27 + 1) = *((void *)v28 + 1);
        uint64_t v29 = v20[8];
        uint64_t v30 = &v16[v29];
        uint64_t v31 = &v17[v29];
        *(void *)uint64_t v30 = *(void *)v31;
        *((void *)v30 + 1) = *((void *)v31 + 1);
        uint64_t v32 = v20[9];
        uint64_t v33 = &v16[v32];
        uint64_t v34 = &v17[v32];
        *(void *)uint64_t v33 = *(void *)v34;
        *((void *)v33 + 1) = *((void *)v34 + 1);
        uint64_t v35 = v20[10];
        uint64_t v36 = &v16[v35];
        uint64_t v37 = &v17[v35];
        *(void *)uint64_t v36 = *(void *)v37;
        *((void *)v36 + 1) = *((void *)v37 + 1);
        v16[v20[11]] = v17[v20[11]];
        swift_bridgeObjectRetain();
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          *(void *)uint64_t v16 = *(void *)v17;
          *((void *)v16 + 1) = *((void *)v17 + 1);
          *((void *)v16 + 2) = *((void *)v17 + 2);
          *((void *)v16 + 3) = *((void *)v17 + 3);
          *((void *)v16 + 4) = *((void *)v17 + 4);
          *((void *)v16 + 5) = *((void *)v17 + 5);
          goto LABEL_12;
        }
        *(void *)uint64_t v16 = *(void *)v17;
        *((void *)v16 + 1) = *((void *)v17 + 1);
        *((void *)v16 + 2) = *((void *)v17 + 2);
        *((void *)v16 + 3) = *((void *)v17 + 3);
        *((void *)v16 + 4) = *((void *)v17 + 4);
        *((void *)v16 + 5) = *((void *)v17 + 5);
        *((void *)v16 + 6) = *((void *)v17 + 6);
        *((void *)v16 + 7) = *((void *)v17 + 7);
        v16[64] = v17[64];
        v16[65] = v17[65];
      }
      swift_bridgeObjectRetain();
LABEL_12:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
      a3 = v68;
LABEL_17:
      swift_storeEnumTagMultiPayload();
      goto LABEL_18;
    }
    type metadata accessor for LollipopDetailViewModel(0);
    int v19 = swift_getEnumCaseMultiPayload();
    if (v19 == 2)
    {
      *(void *)uint64_t v7 = *(void *)v8;
      *((void *)v7 + 1) = *((void *)v8 + 1);
      uint64_t v69 = a3;
      uint64_t v38 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v39 = v38[5];
      uint64_t v65 = &v8[v39];
      uint64_t v67 = &v7[v39];
      uint64_t v40 = type metadata accessor for AttributedString();
      uint64_t v41 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
      swift_bridgeObjectRetain();
      v41(v67, v65, v40);
      uint64_t v42 = v38[6];
      uint64_t v43 = &v7[v42];
      uint64_t v44 = &v8[v42];
      *(void *)uint64_t v43 = *(void *)v44;
      *((void *)v43 + 1) = *((void *)v44 + 1);
      uint64_t v45 = v38[7];
      uint64_t v46 = &v7[v45];
      uint64_t v47 = &v8[v45];
      *(void *)uint64_t v46 = *(void *)v47;
      *((void *)v46 + 1) = *((void *)v47 + 1);
      uint64_t v48 = v38[8];
      uint64_t v49 = &v7[v48];
      uint64_t v50 = &v8[v48];
      *(void *)uint64_t v49 = *(void *)v50;
      *((void *)v49 + 1) = *((void *)v50 + 1);
      uint64_t v51 = v38[9];
      uint64_t v52 = &v7[v51];
      uint64_t v53 = &v8[v51];
      *(void *)uint64_t v52 = *(void *)v53;
      *((void *)v52 + 1) = *((void *)v53 + 1);
      uint64_t v54 = v38[10];
      uint64_t v55 = &v7[v54];
      uint64_t v56 = &v8[v54];
      *(void *)uint64_t v55 = *(void *)v56;
      *((void *)v55 + 1) = *((void *)v56 + 1);
      uint64_t v57 = v38[11];
      a3 = v69;
      v7[v57] = v8[v57];
      swift_bridgeObjectRetain();
    }
    else
    {
      if (v19 != 1)
      {
        *(void *)uint64_t v7 = *(void *)v8;
        *((void *)v7 + 1) = *((void *)v8 + 1);
        *((void *)v7 + 2) = *((void *)v8 + 2);
        *((void *)v7 + 3) = *((void *)v8 + 3);
        *((void *)v7 + 4) = *((void *)v8 + 4);
        *((void *)v7 + 5) = *((void *)v8 + 5);
        goto LABEL_16;
      }
      *(void *)uint64_t v7 = *(void *)v8;
      *((void *)v7 + 1) = *((void *)v8 + 1);
      *((void *)v7 + 2) = *((void *)v8 + 2);
      *((void *)v7 + 3) = *((void *)v8 + 3);
      *((void *)v7 + 4) = *((void *)v8 + 4);
      *((void *)v7 + 5) = *((void *)v8 + 5);
      *((void *)v7 + 6) = *((void *)v8 + 6);
      *((void *)v7 + 7) = *((void *)v8 + 7);
      v7[64] = v8[64];
      v7[65] = v8[65];
    }
    swift_bridgeObjectRetain();
LABEL_16:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
    goto LABEL_17;
  }
LABEL_18:
  uint64_t v58 = *(int *)(a3 + 24);
  uint64_t v59 = (char *)a1 + v58;
  uint64_t v60 = (char *)a2 + v58;
  uint64_t v61 = sub_10017DF08(&qword_100E63BE8);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 24))(v59, v60, v61);
  return a1;
}

_OWORD *sub_1005217D4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  long long v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (void *)((char *)a2 + v8);
  type metadata accessor for DetailHeroChartLollipopModel(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v9 = *v10;
    uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
    uint64_t v12 = *(int *)(active + 20);
    uint64_t v13 = (char *)v9 + v12;
    uint64_t v14 = (char *)v10 + v12;
    uint64_t v15 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    uint64_t v16 = (int *)type metadata accessor for LollipopMarkModel(0);
    *(void *)&v13[v16[5]] = *(void *)&v14[v16[5]];
    *(void *)&v13[v16[6]] = *(void *)&v14[v16[6]];
    *(void *)&v13[v16[7]] = *(void *)&v14[v16[7]];
    uint64_t v17 = *(int *)(active + 24);
    uint64_t v18 = (_OWORD *)((char *)v9 + v17);
    int v19 = (_OWORD *)((char *)v10 + v17);
    uint64_t v20 = type metadata accessor for LollipopDetailViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      _OWORD *v18 = *v19;
      uint64_t v21 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v22 = v21[5];
      uint64_t v23 = (char *)v18 + v22;
      uint64_t v24 = v3;
      uint64_t v25 = (char *)v19 + v22;
      uint64_t v26 = type metadata accessor for AttributedString();
      uint64_t v27 = v25;
      uint64_t v3 = v24;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v23, v27, v26);
      *(_OWORD *)((char *)v18 + v21[6]) = *(_OWORD *)((char *)v19 + v21[6]);
      *(_OWORD *)((char *)v18 + v21[7]) = *(_OWORD *)((char *)v19 + v21[7]);
      *(_OWORD *)((char *)v18 + v21[8]) = *(_OWORD *)((char *)v19 + v21[8]);
      *(_OWORD *)((char *)v18 + v21[9]) = *(_OWORD *)((char *)v19 + v21[9]);
      *(_OWORD *)((char *)v18 + v21[10]) = *(_OWORD *)((char *)v19 + v21[10]);
      *((unsigned char *)v18 + v21[11]) = *((unsigned char *)v19 + v21[11]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
  }
  else
  {
    uint64_t v28 = type metadata accessor for LollipopDetailViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *(_OWORD *)uint64_t v9 = *(_OWORD *)v10;
      uint64_t v29 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v30 = v29[5];
      uint64_t v31 = (char *)v9 + v30;
      uint64_t v32 = (char *)v10 + v30;
      uint64_t v33 = type metadata accessor for AttributedString();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
      *(_OWORD *)((char *)v9 + v29[6]) = *(_OWORD *)((char *)v10 + v29[6]);
      *(_OWORD *)((char *)v9 + v29[7]) = *(_OWORD *)((char *)v10 + v29[7]);
      *(_OWORD *)((char *)v9 + v29[8]) = *(_OWORD *)((char *)v10 + v29[8]);
      *(_OWORD *)((char *)v9 + v29[9]) = *(_OWORD *)((char *)v10 + v29[9]);
      *(_OWORD *)((char *)v9 + v29[10]) = *(_OWORD *)((char *)v10 + v29[10]);
      *((unsigned char *)v9 + v29[11]) = *((unsigned char *)v10 + v29[11]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v28 - 8) + 64));
    }
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v34 = *(int *)(v3 + 24);
  uint64_t v35 = (char *)a1 + v34;
  uint64_t v36 = (char *)a2 + v34;
  uint64_t v37 = sub_10017DF08(&qword_100E63BE8);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
  return a1;
}

void *sub_100521B5C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (void *)((char *)a1 + v10);
    uint64_t v12 = (void *)((char *)a2 + v10);
    sub_100523D18((uint64_t)a1 + v10, (void (*)(void))type metadata accessor for DetailHeroChartLollipopModel);
    type metadata accessor for DetailHeroChartLollipopModel(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      void *v11 = *v12;
      uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
      uint64_t v14 = *(int *)(active + 20);
      uint64_t v15 = (char *)v11 + v14;
      uint64_t v16 = (char *)v12 + v14;
      uint64_t v17 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
      uint64_t v18 = (int *)type metadata accessor for LollipopMarkModel(0);
      *(void *)&v15[v18[5]] = *(void *)&v16[v18[5]];
      *(void *)&v15[v18[6]] = *(void *)&v16[v18[6]];
      *(void *)&v15[v18[7]] = *(void *)&v16[v18[7]];
      uint64_t v19 = *(int *)(active + 24);
      uint64_t v20 = (_OWORD *)((char *)v11 + v19);
      uint64_t v21 = (_OWORD *)((char *)v12 + v19);
      uint64_t v22 = type metadata accessor for LollipopDetailViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        *uint64_t v20 = *v21;
        uint64_t v23 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        uint64_t v24 = v23[5];
        uint64_t v25 = (char *)v20 + v24;
        uint64_t v26 = (char *)v21 + v24;
        uint64_t v27 = type metadata accessor for AttributedString();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
        *(_OWORD *)((char *)v20 + v23[6]) = *(_OWORD *)((char *)v21 + v23[6]);
        *(_OWORD *)((char *)v20 + v23[7]) = *(_OWORD *)((char *)v21 + v23[7]);
        *(_OWORD *)((char *)v20 + v23[8]) = *(_OWORD *)((char *)v21 + v23[8]);
        *(_OWORD *)((char *)v20 + v23[9]) = *(_OWORD *)((char *)v21 + v23[9]);
        *(_OWORD *)((char *)v20 + v23[10]) = *(_OWORD *)((char *)v21 + v23[10]);
        *((unsigned char *)v20 + v23[11]) = *((unsigned char *)v21 + v23[11]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
      }
    }
    else
    {
      uint64_t v28 = type metadata accessor for LollipopDetailViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
        uint64_t v29 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        uint64_t v30 = v29[5];
        uint64_t v31 = (char *)v11 + v30;
        uint64_t v32 = (char *)v12 + v30;
        uint64_t v33 = type metadata accessor for AttributedString();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
        *(_OWORD *)((char *)v11 + v29[6]) = *(_OWORD *)((char *)v12 + v29[6]);
        *(_OWORD *)((char *)v11 + v29[7]) = *(_OWORD *)((char *)v12 + v29[7]);
        *(_OWORD *)((char *)v11 + v29[8]) = *(_OWORD *)((char *)v12 + v29[8]);
        *(_OWORD *)((char *)v11 + v29[9]) = *(_OWORD *)((char *)v12 + v29[9]);
        *(_OWORD *)((char *)v11 + v29[10]) = *(_OWORD *)((char *)v12 + v29[10]);
        *((unsigned char *)v11 + v29[11]) = *((unsigned char *)v12 + v29[11]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v11, v12, *(void *)(*(void *)(v28 - 8) + 64));
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v34 = *(int *)(a3 + 24);
  uint64_t v35 = (char *)a1 + v34;
  uint64_t v36 = (char *)a2 + v34;
  uint64_t v37 = sub_10017DF08(&qword_100E63BE8);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 40))(v35, v36, v37);
  return a1;
}

uint64_t sub_100521F38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100521F4C);
}

uint64_t sub_100521F4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    type metadata accessor for DetailHeroChartLollipopModel(0);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 20);
    }
    else
    {
      uint64_t v10 = sub_10017DF08(&qword_100E63BE8);
      uint64_t v11 = *(int *)(a3 + 24);
    }
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v11, a2, v10);
  }
}

uint64_t sub_100521FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100522010);
}

uint64_t sub_100522010(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    type metadata accessor for DetailHeroChartLollipopModel(0);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 20);
    }
    else
    {
      uint64_t v10 = sub_10017DF08(&qword_100E63BE8);
      uint64_t v11 = *(int *)(a4 + 24);
    }
    return _s7Weather24LocationCompositionStateOwst_0(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t type metadata accessor for DetailHeroChartHeaderView()
{
  uint64_t result = qword_100E7E068;
  if (!qword_100E7E068) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100522104()
{
  type metadata accessor for DetailHeroChartLollipopModel(319);
  if (v0 <= 0x3F)
  {
    sub_1002306F0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_1005221D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005221F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10017DF08(&qword_100E7E0A8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (uint64_t *)((char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v5 = static Alignment.topLeading.getter();
  v5[1] = v6;
  uint64_t v7 = sub_10017DF08(&qword_100E7E0B0);
  sub_100522328(v1, (char *)v5 + *(int *)(v7 + 44));
  char v8 = static Edge.Set.horizontal.getter();
  swift_beginAccess();
  sub_10052E644();
  EdgeInsets.init(_all:)();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  sub_10006DF38((uint64_t)v5, a1, &qword_100E7E0A8);
  uint64_t v17 = a1 + *(int *)(sub_10017DF08(&qword_100E7E0B8) + 36);
  *(unsigned char *)uint64_t v17 = v8;
  *(void *)(v17 + 8) = v10;
  *(void *)(v17 + 16) = v12;
  *(void *)(v17 + 24) = v14;
  *(void *)(v17 + 32) = v16;
  *(unsigned char *)(v17 + 40) = 0;
  return sub_1001781AC((uint64_t)v5, &qword_100E7E0A8);
}

uint64_t sub_100522328@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v84 = a2;
  uint64_t v83 = sub_10017DF08(&qword_100E7E0C0);
  uint64_t v67 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  uint64_t v64 = (char *)&v59 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v66 = (char *)&v59 - v5;
  uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
  __chkstk_darwin(active);
  uint64_t v65 = (uint64_t)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_10017DF08(&qword_100E7E0C8);
  __chkstk_darwin(v77);
  uint64_t v81 = (uint64_t)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for LollipopDetailView(0);
  __chkstk_darwin(v78);
  uint64_t v75 = (uint64_t)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_10017DF08(&qword_100E7E0D0);
  __chkstk_darwin(v79);
  uint64_t v60 = (uint64_t)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v62 = (uint64_t)&v59 - v11;
  uint64_t v12 = type metadata accessor for LollipopDetailViewModel(0);
  __chkstk_darwin(v12 - 8);
  uint64_t v61 = (uint64_t)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100E7E0D8);
  __chkstk_darwin(v14 - 8);
  uint64_t v82 = (uint64_t)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v80 = (char *)&v59 - v17;
  uint64_t v73 = type metadata accessor for DetailHeroChartLollipopModel(0);
  __chkstk_darwin(v73);
  uint64_t v72 = (uint64_t)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v59 - v20;
  uint64_t v85 = sub_10017DF08(&qword_100E7E0E0);
  uint64_t v71 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v76 = (char *)&v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v70 = (char *)&v59 - v24;
  __chkstk_darwin(v25);
  uint64_t v86 = (char *)&v59 - v26;
  uint64_t v69 = static HorizontalAlignment.leading.getter();
  sub_100522DDC();
  swift_beginAccess();
  sub_1007C1630();
  uint64_t v68 = type metadata accessor for DetailHeroChartHeaderView();
  uint64_t v74 = a1;
  sub_10017DF08(&qword_100E63BE8);
  ScaledMetric.wrappedValue.getter();
  static Alignment.center.getter();
  v91[360] = 0;
  memcpy(&v91[7], v105, 0x160uLL);
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  v91[408] = v93;
  v91[400] = v95;
  v91[392] = v97;
  v91[384] = v99;
  v91[376] = v101;
  v91[368] = v103;
  v90[0] = v69;
  v90[1] = 0;
  LOBYTE(v90[2]) = 0;
  memcpy((char *)&v90[2] + 1, v91, 0x167uLL);
  v90[47] = v92;
  LOBYTE(v90[48]) = v93;
  v90[49] = v94;
  LOBYTE(v90[50]) = v95;
  v90[51] = v96;
  LOBYTE(v90[52]) = v97;
  v90[53] = v98;
  LOBYTE(v90[54]) = v99;
  v90[55] = v100;
  LOBYTE(v90[56]) = v101;
  v90[57] = v102;
  LOBYTE(v90[58]) = v103;
  *(_OWORD *)&v90[59] = v104;
  uint64_t v27 = v74 + *(int *)(v68 + 20);
  sub_100523C5C(v27, (uint64_t)v21, (void (*)(void))type metadata accessor for DetailHeroChartLollipopModel);
  swift_getEnumCaseMultiPayload();
  sub_100523D18((uint64_t)v21, (void (*)(void))type metadata accessor for DetailHeroChartLollipopModel);
  sub_10017DF08(&qword_100E7E0E8);
  sub_100523948();
  uint64_t v28 = v70;
  View.isHidden(_:defaultAccessibilityHidden:)();
  memcpy(v89, v90, sizeof(v89));
  sub_1005239E8((uint64_t)v89);
  uint64_t v29 = v71;
  uint64_t v30 = v86;
  (*(void (**)(char *, char *, uint64_t))(v71 + 32))(v86, v28, v85);
  uint64_t v31 = v72;
  sub_100523C5C(v27, v72, (void (*)(void))type metadata accessor for DetailHeroChartLollipopModel);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v32 = v65;
    sub_100523BFC(v31, v65, (void (*)(void))type metadata accessor for DetailHeroChartActiveLollipopModel);
    uint64_t v33 = v75;
    sub_100523C5C(v32 + *(int *)(active + 24), v75, (void (*)(void))type metadata accessor for LollipopDetailViewModel);
    unint64_t v34 = sub_100523AE4();
    uint64_t v35 = v64;
    uint64_t v36 = v78;
    View.offsetXWithinBounds(_:)();
    sub_100523D18(v33, (void (*)(void))type metadata accessor for LollipopDetailView);
    uint64_t v38 = v66;
    uint64_t v37 = v67;
    uint64_t v39 = v35;
    uint64_t v40 = v83;
    (*(void (**)(char *, char *, uint64_t))(v67 + 32))(v66, v39, v83);
    (*(void (**)(uint64_t, char *, uint64_t))(v37 + 16))(v81, v38, v40);
    swift_storeEnumTagMultiPayload();
    sub_100523B34();
    uint64_t v87 = v36;
    unint64_t v88 = v34;
    swift_getOpaqueTypeConformance2();
    uint64_t v41 = (uint64_t)v80;
    _ConditionalContent<>.init(storage:)();
    uint64_t v42 = v38;
    uint64_t v30 = v86;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v42, v40);
    uint64_t v43 = type metadata accessor for DetailHeroChartActiveLollipopModel;
    uint64_t v44 = v32;
  }
  else
  {
    uint64_t v45 = v61;
    sub_100523BFC(v31, v61, (void (*)(void))type metadata accessor for LollipopDetailViewModel);
    uint64_t v46 = v75;
    sub_100523C5C(v45, v75, (void (*)(void))type metadata accessor for LollipopDetailViewModel);
    uint64_t v47 = v60;
    sub_100523C5C(v46, v60, (void (*)(void))type metadata accessor for LollipopDetailView);
    sub_100523D18(v46, (void (*)(void))type metadata accessor for LollipopDetailView);
    uint64_t v48 = v62;
    sub_100523CB0(v47, v62);
    sub_10006DF38(v48, v81, &qword_100E7E0D0);
    swift_storeEnumTagMultiPayload();
    sub_100523B34();
    unint64_t v49 = sub_100523AE4();
    uint64_t v87 = v78;
    unint64_t v88 = v49;
    swift_getOpaqueTypeConformance2();
    uint64_t v41 = (uint64_t)v80;
    _ConditionalContent<>.init(storage:)();
    sub_1001781AC(v48, &qword_100E7E0D0);
    uint64_t v43 = type metadata accessor for LollipopDetailViewModel;
    uint64_t v44 = v45;
  }
  sub_100523D18(v44, (void (*)(void))v43);
  uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
  uint64_t v51 = v76;
  uint64_t v52 = v30;
  uint64_t v53 = v85;
  v50(v76, v52, v85);
  uint64_t v54 = v82;
  sub_10006DF38(v41, v82, &qword_100E7E0D8);
  uint64_t v55 = v84;
  v50(v84, v51, v53);
  uint64_t v56 = sub_10017DF08(&qword_100E7E120);
  sub_10006DF38(v54, (uint64_t)&v55[*(int *)(v56 + 48)], &qword_100E7E0D8);
  sub_1001781AC(v41, &qword_100E7E0D8);
  uint64_t v57 = *(void (**)(char *, uint64_t))(v29 + 8);
  v57(v86, v53);
  sub_1001781AC(v54, &qword_100E7E0D8);
  return ((uint64_t (*)(char *, uint64_t))v57)(v51, v53);
}

uint64_t sub_100522DDC()
{
  type metadata accessor for DetailHeroChartHeaderView();
  sub_10017DF08(&qword_100E63BE8);
  ScaledMetric.wrappedValue.getter();
  double v0 = 1.0 / v66 * 20.0;
  char v27 = static Axis.Set.horizontal.getter();
  sub_10052319C((uint64_t)&v66);
  uint64_t v25 = v67;
  uint64_t v26 = *(void *)&v66;
  long long v33 = *(_OWORD *)v69;
  uint64_t v32 = *(void *)&v69[16];
  char v37 = v70;
  uint64_t v36 = v71;
  char v34 = v68;
  char v35 = v72;
  char v31 = BYTE1(v72);
  uint64_t v29 = v74;
  uint64_t v30 = v73;
  char v28 = v75;
  swift_beginAccess();
  sub_1007C1504();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v24 = v84;
  char v23 = v85;
  uint64_t v22 = v86;
  char v21 = v87;
  uint64_t v19 = v89;
  uint64_t v20 = v88;
  char v18 = static Axis.Set.horizontal.getter();
  sub_100523570((uint64_t)&v66);
  uint64_t v1 = *(void *)&v66;
  uint64_t v2 = v67;
  char v3 = v68;
  long long v17 = *(_OWORD *)v69;
  uint64_t v4 = *(void *)&v69[16];
  char v5 = v70;
  uint64_t v6 = v71;
  char v7 = v72;
  char v8 = BYTE1(v72);
  uint64_t v9 = v73;
  uint64_t v16 = v74;
  char v15 = v75;
  sub_1007C160C();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  LOBYTE(v66) = v27;
  uint64_t v67 = v26;
  uint64_t v68 = v25;
  v69[0] = v34;
  *(_OWORD *)&v69[8] = v33;
  uint64_t v70 = v32;
  double v77 = v0;
  char v78 = 0;
  LOBYTE(v71) = v37;
  uint64_t v72 = v36;
  LOBYTE(v73) = v35;
  BYTE1(v73) = v31;
  uint64_t v74 = v30;
  uint64_t v75 = v29;
  char v76 = v28;
  uint64_t v79 = &v77;
  uint64_t v80 = &v66;
  uint64_t v58 = 0;
  char v59 = 1;
  uint64_t v60 = v24;
  char v61 = v23;
  uint64_t v62 = v22;
  char v63 = v21;
  uint64_t v64 = v20;
  uint64_t v65 = v19;
  char v45 = v18;
  uint64_t v46 = v1;
  uint64_t v47 = v2;
  char v48 = v3;
  long long v49 = v17;
  uint64_t v50 = v4;
  char v51 = v5;
  uint64_t v52 = v6;
  char v53 = v7;
  char v54 = v8;
  uint64_t v55 = v9;
  uint64_t v56 = v16;
  char v57 = v15;
  uint64_t v81 = &v58;
  uint64_t v82 = &v45;
  uint64_t v38 = 0;
  char v39 = 1;
  uint64_t v40 = v90;
  char v41 = v91;
  uint64_t v42 = v92;
  char v43 = v93;
  long long v44 = v94;
  uint64_t v83 = &v38;
  sub_1004B8E80();
  uint64_t v10 = *((void *)&v49 + 1);
  uint64_t v11 = v50;
  LOBYTE(v1) = v51;
  sub_100191924(v46, v47, v48);
  swift_bridgeObjectRelease();
  sub_100191924(v10, v11, v1);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)&v69[16];
  uint64_t v13 = v70;
  LOBYTE(v1) = v71;
  sub_100191924(v67, v68, v69[0]);
  swift_bridgeObjectRelease();
  sub_100191924(v12, v13, v1);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10052319C@<X0>(uint64_t a1@<X8>)
{
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  swift_beginAccess();
  sub_1007C1370();
  swift_endAccess();
  uint64_t v7 = Text.font(_:)();
  uint64_t v9 = v8;
  char v11 = v10;
  swift_release();
  char v12 = v11 & 1;
  sub_100191924(v2, v4, v6);
  swift_bridgeObjectRelease();
  static Color.primary.getter();
  uint64_t v13 = Text.foregroundColor(_:)();
  uint64_t v15 = v14;
  LOBYTE(v4) = v16;
  swift_release();
  sub_100191924(v7, v9, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v17 = Text.accessibilityLabel<A>(_:)();
  uint64_t v43 = v18;
  uint64_t v44 = v17;
  uint64_t v45 = v19;
  char v42 = v20 & 1;
  sub_100191924(v13, v15, v4 & 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v21 = Text.init<A>(_:)();
  uint64_t v23 = v22;
  char v25 = v24 & 1;
  static Font.headline.getter();
  static Font.Weight.medium.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v26 = Text.font(_:)();
  uint64_t v28 = v27;
  LOBYTE(v4) = v29;
  swift_release();
  sub_100191924(v21, v23, v25);
  swift_bridgeObjectRelease();
  static Color.primary.getter();
  uint64_t v30 = Text.foregroundColor(_:)();
  uint64_t v32 = v31;
  LOBYTE(v23) = v33;
  swift_release();
  LOBYTE(v21) = v23 & 1;
  sub_100191924(v26, v28, v4 & 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v34 = Text.accessibilityLabel<A>(_:)();
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  LOBYTE(v15) = v39 & 1;
  sub_100191924(v30, v32, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)a1 = v44;
  *(void *)(a1 + 8) = v43;
  *(unsigned char *)(a1 + 16) = v42;
  *(void *)(a1 + 24) = v45;
  *(void *)(a1 + 32) = v34;
  *(void *)(a1 + 40) = v36;
  *(unsigned char *)(a1 + 48) = v15;
  *(void *)(a1 + 56) = v38;
  *(_WORD *)(a1 + 64) = 256;
  *(void *)(a1 + 72) = KeyPath;
  *(void *)(a1 + 80) = 2;
  *(unsigned char *)(a1 + 88) = 0;
  sub_100190CC4(v44, v43, v42);
  swift_bridgeObjectRetain();
  sub_100190CC4(v34, v36, v15);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100191924(v34, v36, v15);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100191924(v44, v43, v42);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100523570@<X0>(uint64_t a1@<X8>)
{
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v2 = Text.init<A>(_:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  swift_beginAccess();
  sub_1007C1528();
  swift_endAccess();
  uint64_t v7 = Text.font(_:)();
  uint64_t v9 = v8;
  char v11 = v10;
  swift_release();
  char v12 = v11 & 1;
  sub_100191924(v2, v4, v6);
  swift_bridgeObjectRelease();
  static Color.secondary.getter();
  uint64_t v13 = Text.foregroundColor(_:)();
  uint64_t v15 = v14;
  LOBYTE(v4) = v16;
  swift_release();
  sub_100191924(v7, v9, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v17 = Text.accessibilityLabel<A>(_:)();
  uint64_t v43 = v18;
  uint64_t v44 = v17;
  uint64_t v45 = v19;
  char v42 = v20 & 1;
  sub_100191924(v13, v15, v4 & 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v21 = Text.init<A>(_:)();
  uint64_t v23 = v22;
  char v25 = v24 & 1;
  static Font.footnote.getter();
  static Font.Weight.medium.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v26 = Text.font(_:)();
  uint64_t v28 = v27;
  LOBYTE(v4) = v29;
  swift_release();
  sub_100191924(v21, v23, v25);
  swift_bridgeObjectRelease();
  static Color.secondary.getter();
  uint64_t v30 = Text.foregroundColor(_:)();
  uint64_t v32 = v31;
  LOBYTE(v23) = v33;
  swift_release();
  LOBYTE(v21) = v23 & 1;
  sub_100191924(v26, v28, v4 & 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v34 = Text.accessibilityLabel<A>(_:)();
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  LOBYTE(v15) = v39 & 1;
  sub_100191924(v30, v32, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  *(void *)a1 = v44;
  *(void *)(a1 + 8) = v43;
  *(unsigned char *)(a1 + 16) = v42;
  *(void *)(a1 + 24) = v45;
  *(void *)(a1 + 32) = v34;
  *(void *)(a1 + 40) = v36;
  *(unsigned char *)(a1 + 48) = v15;
  *(void *)(a1 + 56) = v38;
  *(_WORD *)(a1 + 64) = 256;
  *(void *)(a1 + 72) = KeyPath;
  *(void *)(a1 + 80) = 2;
  *(unsigned char *)(a1 + 88) = 0;
  sub_100190CC4(v44, v43, v42);
  swift_bridgeObjectRetain();
  sub_100190CC4(v34, v36, v15);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100191924(v34, v36, v15);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100191924(v44, v43, v42);
  return swift_bridgeObjectRelease();
}

unint64_t sub_100523948()
{
  unint64_t result = qword_100E7E0F0;
  if (!qword_100E7E0F0)
  {
    sub_10018C6DC(&qword_100E7E0E8);
    sub_1001246C8(&qword_100E7E0F8, &qword_100E7E100);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E0F0);
  }
  return result;
}

uint64_t sub_1005239E8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 80);
  uint64_t v3 = *(void *)(a1 + 88);
  char v4 = *(unsigned char *)(a1 + 96);
  uint64_t v5 = *(void *)(a1 + 216);
  uint64_t v6 = *(void *)(a1 + 224);
  char v7 = *(unsigned char *)(a1 + 232);
  uint64_t v10 = *(void *)(a1 + 256);
  uint64_t v11 = *(void *)(a1 + 248);
  char v9 = *(unsigned char *)(a1 + 264);
  sub_100191924(*(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
  swift_bridgeObjectRelease();
  sub_100191924(v2, v3, v4);
  swift_release();
  swift_bridgeObjectRelease();
  sub_100191924(v5, v6, v7);
  swift_bridgeObjectRelease();
  sub_100191924(v11, v10, v9);
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

unint64_t sub_100523AE4()
{
  unint64_t result = qword_100E7E108;
  if (!qword_100E7E108)
  {
    type metadata accessor for LollipopDetailView(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E108);
  }
  return result;
}

unint64_t sub_100523B34()
{
  unint64_t result = qword_100E7E110;
  if (!qword_100E7E110)
  {
    sub_10018C6DC(&qword_100E7E0D0);
    sub_100523AE4();
    sub_100523BB0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E110);
  }
  return result;
}

unint64_t sub_100523BB0()
{
  unint64_t result = qword_100E7E118;
  if (!qword_100E7E118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E118);
  }
  return result;
}

uint64_t sub_100523BFC(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_100523C5C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_100523CB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E7E0D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100523D18(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

unint64_t sub_100523D7C()
{
  unint64_t result = qword_100E7E128;
  if (!qword_100E7E128)
  {
    sub_10018C6DC(&qword_100E7E0B8);
    sub_1001246C8(&qword_100E7E130, &qword_100E7E0A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E128);
  }
  return result;
}

uint64_t sub_100523E1C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

double sub_100523E70()
{
  if ((*(unsigned char *)(v0 + 24) & 1) == 0) {
    return *(double *)(v0 + 16);
  }
  *(void *)(v0 + 16) = 0x4053800000000000;
  *(unsigned char *)(v0 + 24) = 0;
  return 78.0;
}

uint64_t sub_100523E9C()
{
  uint64_t v2 = type metadata accessor for Font.TextStyle();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_10011BFD8();
  if (*(void *)(v0 + 32))
  {
    uint64_t v6 = *(void *)(v0 + 32);
  }
  else
  {
    uint64_t v7 = sub_10017CE84();
    v8(v7);
    static Font.Weight.medium.getter();
    uint64_t v6 = static Font.system(_:weight:)();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v2);
    *(void *)(v0 + 32) = v6;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v6;
}

uint64_t sub_100523F80()
{
  if (*(void *)(v0 + 40))
  {
    uint64_t v1 = *(void *)(v0 + 40);
  }
  else
  {
    uint64_t v1 = static Color.primary.getter();
    *(void *)(v0 + 40) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_100523FDC()
{
  uint64_t v2 = type metadata accessor for Font.Leading();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_10011BFD8();
  uint64_t v6 = type metadata accessor for Font.TextStyle();
  sub_100179C0C();
  uint64_t v8 = v7;
  __n128 v10 = __chkstk_darwin(v9);
  char v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v0 + 48))
  {
    uint64_t v13 = *(void *)(v0 + 48);
  }
  else
  {
    (*(void (**)(char *, void, uint64_t, __n128))(v8 + 104))(v12, enum case for Font.TextStyle.largeTitle(_:), v6, v10);
    static Font.Weight.medium.getter();
    static Font.system(_:weight:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v12, v6);
    uint64_t v14 = sub_10017CE84();
    v15(v14);
    uint64_t v13 = Font.leading(_:)();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v2);
    *(void *)(v0 + 48) = v13;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v13;
}

uint64_t sub_100524170()
{
  if (*(void *)(v0 + 56))
  {
    uint64_t v1 = *(void *)(v0 + 56);
  }
  else
  {
    uint64_t v1 = static Color.primary.getter();
    *(void *)(v0 + 56) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

double sub_1005241CC()
{
  if ((*(unsigned char *)(v0 + 72) & 1) == 0) {
    return *(double *)(v0 + 64);
  }
  *(void *)(v0 + 64) = 0x3FF0000000000000;
  *(unsigned char *)(v0 + 72) = 0;
  return 1.0;
}

uint64_t sub_1005241F0()
{
  if (*(void *)(v0 + 80))
  {
    uint64_t v1 = *(void *)(v0 + 80);
  }
  else
  {
    uint64_t v1 = sub_100523E9C();
    *(void *)(v0 + 80) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_10052424C()
{
  if (*(void *)(v0 + 88))
  {
    uint64_t v1 = *(void *)(v0 + 88);
  }
  else
  {
    uint64_t v1 = static Color.secondary.getter();
    *(void *)(v0 + 88) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

double sub_1005242A8()
{
  if ((*(unsigned char *)(v0 + 104) & 1) == 0) {
    return *(double *)(v0 + 96);
  }
  *(void *)(v0 + 96) = 0x4010000000000000;
  *(unsigned char *)(v0 + 104) = 0;
  return 4.0;
}

double sub_1005242CC()
{
  if ((*(unsigned char *)(v0 + 120) & 1) == 0) {
    return *(double *)(v0 + 112);
  }
  *(void *)(v0 + 112) = 0x4024000000000000;
  *(unsigned char *)(v0 + 120) = 0;
  return 10.0;
}

double sub_1005242F0()
{
  if ((*(unsigned char *)(v0 + 136) & 1) == 0) {
    return *(double *)(v0 + 128);
  }
  *(void *)(v0 + 128) = 0x4024000000000000;
  *(unsigned char *)(v0 + 136) = 0;
  return 10.0;
}

double sub_100524314()
{
  if ((*(unsigned char *)(v0 + 152) & 1) == 0) {
    return *(double *)(v0 + 144);
  }
  static Font.Weight.medium.getter();
  *(double *)(v0 + 144) = result;
  *(unsigned char *)(v0 + 152) = 0;
  return result;
}

uint64_t sub_100524344()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_10052438C()
{
  sub_100524344();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DefaultChartHeaderStyle()
{
  return self;
}

double sub_1005243E4()
{
  *(void *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 24) = 1;
  double result = 0.0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(void *)(v0 + 64) = 0;
  *(unsigned char *)(v0 + 72) = 1;
  *(void *)(v0 + 88) = 0;
  *(void *)(v0 + 96) = 0;
  *(void *)(v0 + 80) = 0;
  *(unsigned char *)(v0 + 104) = 1;
  *(void *)(v0 + 112) = 0;
  *(unsigned char *)(v0 + 120) = 1;
  *(void *)(v0 + 128) = 0;
  *(unsigned char *)(v0 + 136) = 1;
  *(void *)(v0 + 144) = 0;
  *(_WORD *)(v0 + 152) = 257;
  return result;
}

double sub_100524430()
{
  return sub_100523E70();
}

double sub_100524454()
{
  return sub_1005242CC();
}

double sub_100524478()
{
  return sub_1005242F0();
}

uint64_t sub_10052449C()
{
  return sub_100523E9C();
}

uint64_t sub_1005244C0()
{
  return sub_100523F80();
}

uint64_t sub_1005244E4()
{
  return sub_100523FDC();
}

uint64_t sub_100524508()
{
  return sub_100524170();
}

double sub_10052452C()
{
  return sub_1005241CC();
}

uint64_t sub_100524550()
{
  return sub_1005241F0();
}

uint64_t sub_100524574()
{
  return sub_10052424C();
}

double sub_100524598()
{
  return sub_1005242A8();
}

double sub_1005245BC()
{
  return sub_100524314();
}

void sub_1005245E0()
{
  type metadata accessor for DefaultChartHeaderStyle();
  uint64_t v0 = swift_allocObject();
  sub_1005243E4();
  qword_100F51510 = v0;
}

uint64_t *sub_10052461C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v11 = type metadata accessor for Location.Identifier();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
      }
      uint64_t v8 = type metadata accessor for LocationModel();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = sub_10017DF08(&qword_100E6F640);
      *((unsigned char *)a1 + *(int *)(v9 + 48)) = *((unsigned char *)a2 + *(int *)(v9 + 48));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100524780(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v3 = type metadata accessor for Location.Identifier();
  }
  else
  {
    if (result) {
      return result;
    }
    uint64_t v3 = type metadata accessor for LocationModel();
  }
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(a1, v3);
}

void *sub_10052480C(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v9 = type metadata accessor for Location.Identifier();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    uint64_t v7 = type metadata accessor for LocationModel();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = sub_10017DF08(&qword_100E6F640);
    *((unsigned char *)a1 + *(int *)(v8 + 48)) = *((unsigned char *)a2 + *(int *)(v8 + 48));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_10052492C(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100524A5C((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v9 = type metadata accessor for Location.Identifier();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
      }
      uint64_t v7 = type metadata accessor for LocationModel();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = sub_10017DF08(&qword_100E6F640);
      *((unsigned char *)a1 + *(int *)(v8 + 48)) = *((unsigned char *)a2 + *(int *)(v8 + 48));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100524A5C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ListViewAction();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_100524AB8(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v9 = type metadata accessor for Location.Identifier();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    uint64_t v7 = type metadata accessor for LocationModel();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    uint64_t v8 = sub_10017DF08(&qword_100E6F640);
    *((unsigned char *)a1 + *(int *)(v8 + 48)) = *((unsigned char *)a2 + *(int *)(v8 + 48));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_100524BD8(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100524A5C((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v9 = type metadata accessor for Location.Identifier();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
      }
      uint64_t v7 = type metadata accessor for LocationModel();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v8 = sub_10017DF08(&qword_100E6F640);
      *((unsigned char *)a1 + *(int *)(v8 + 48)) = *((unsigned char *)a2 + *(int *)(v8 + 48));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100524D08(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x5364657265746E65 && a2 == 0xEF73676E69747465;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000100CA2BA0 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000100CA2B80 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000100CA2B60 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    BOOL v6 = a1 == 0x6F4C646570706174 && a2 == 0xEE006E6F69746163;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else if (a1 == 0xD000000000000020 && a2 == 0x8000000100CA2B30 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000100CA11D0 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 6;
    }
    else if (a1 == 0xD000000000000019 && a2 == 0x8000000100CA2AF0 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 7;
    }
    else if (a1 == 0xD00000000000001FLL && a2 == 0x8000000100CA2B10 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 8;
    }
    else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000100CA2AD0 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 9;
    }
    else if (a1 == 0xD000000000000020 && a2 == 0x8000000100C9F730 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 10;
    }
    else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000100CA1210 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 11;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x8000000100CA2AB0 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 12;
    }
    else if (a1 == 0xD000000000000017 && a2 == 0x8000000100CA2A90 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 13;
    }
    else if (a1 == 0xD000000000000018 && a2 == 0x8000000100CA2A70 {
           || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    }
    {
      swift_bridgeObjectRelease();
      return 14;
    }
    else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000100CA2BC0)
    {
      swift_bridgeObjectRelease();
      return 15;
    }
    else
    {
      char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v7) {
        return 15;
      }
      else {
        return 16;
      }
    }
  }
}

uint64_t sub_100525308()
{
  return 16;
}

unint64_t sub_100525310(char a1)
{
  unint64_t result = 0x5364657265746E65;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 2:
    case 3:
    case 12:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
      unint64_t result = 0x6F4C646570706174;
      break;
    case 5:
      unint64_t result = 0xD000000000000020;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 7:
      unint64_t result = 0xD000000000000019;
      break;
    case 8:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 9:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 10:
      unint64_t result = 0xD000000000000020;
      break;
    case 11:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 13:
      unint64_t result = 0xD000000000000017;
      break;
    case 14:
      unint64_t result = 0xD000000000000018;
      break;
    case 15:
      unint64_t result = 0xD00000000000001CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100525508(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697469736E617274 && a2 == 0xEF65746174536E6FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100525604(char a1)
{
  if (a1) {
    return 0x697469736E617274;
  }
  else {
    return 12383;
  }
}

unint64_t sub_10052563C()
{
  return sub_100525310(*v0);
}

uint64_t sub_100525644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100524D08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10052566C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_100525308();
  *a1 = result;
  return result;
}

uint64_t sub_100525694(uint64_t a1)
{
  unint64_t v2 = sub_10052849C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005256D0(uint64_t a1)
{
  unint64_t v2 = sub_10052849C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10052570C(uint64_t a1)
{
  unint64_t v2 = sub_1005284E8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100525748(uint64_t a1)
{
  unint64_t v2 = sub_1005284E8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100525784(uint64_t a1)
{
  unint64_t v2 = sub_1005286C8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005257C0(uint64_t a1)
{
  unint64_t v2 = sub_1005286C8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005257FC(uint64_t a1)
{
  unint64_t v2 = sub_10052867C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100525838(uint64_t a1)
{
  unint64_t v2 = sub_10052867C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100525874(uint64_t a1)
{
  unint64_t v2 = sub_1005289C0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005258B0(uint64_t a1)
{
  unint64_t v2 = sub_1005289C0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005258EC(uint64_t a1)
{
  unint64_t v2 = sub_1005285E4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100525928(uint64_t a1)
{
  unint64_t v2 = sub_1005285E4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100525964(uint64_t a1)
{
  unint64_t v2 = sub_100528974();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005259A0(uint64_t a1)
{
  unint64_t v2 = sub_100528974();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005259DC(uint64_t a1)
{
  unint64_t v2 = sub_100528598();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100525A18(uint64_t a1)
{
  unint64_t v2 = sub_100528598();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100525A54(uint64_t a1)
{
  unint64_t v2 = sub_1005288DC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100525A90(uint64_t a1)
{
  unint64_t v2 = sub_1005288DC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100525ACC(uint64_t a1)
{
  unint64_t v2 = sub_100528928();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100525B08(uint64_t a1)
{
  unint64_t v2 = sub_100528928();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100525B44()
{
  return sub_100525604(*v0);
}

uint64_t sub_100525B4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100525508(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100525B74(uint64_t a1)
{
  unint64_t v2 = sub_100528890();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100525BB0(uint64_t a1)
{
  unint64_t v2 = sub_100528890();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100525BEC(uint64_t a1)
{
  unint64_t v2 = sub_100528844();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100525C28(uint64_t a1)
{
  unint64_t v2 = sub_100528844();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100525C64(uint64_t a1)
{
  unint64_t v2 = sub_1005287F8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100525CA0(uint64_t a1)
{
  unint64_t v2 = sub_1005287F8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100525CDC(uint64_t a1)
{
  unint64_t v2 = sub_1005287AC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100525D18(uint64_t a1)
{
  unint64_t v2 = sub_1005287AC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100525D54(uint64_t a1)
{
  unint64_t v2 = sub_100528714();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100525D90(uint64_t a1)
{
  unint64_t v2 = sub_100528714();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100525DCC(uint64_t a1)
{
  unint64_t v2 = sub_100528760();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100525E08(uint64_t a1)
{
  unint64_t v2 = sub_100528760();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100525E44(uint64_t a1)
{
  unint64_t v2 = sub_100528630();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100525E80(uint64_t a1)
{
  unint64_t v2 = sub_100528630();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100525EBC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1;
  type metadata accessor for ListViewAction();
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_10016279C();
  uint64_t v6 = sub_10017DF08(&qword_100E7E388);
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  sub_1005283E4(v3, (uint64_t)v2);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      char v14 = *v2;
      sub_10017DF08(&qword_100E635E0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100C251B0;
      *(void *)(inited + 32) = 0x6863726165537369;
      *(void *)(inited + 40) = 0xEB00000000676E69;
      *(void *)(inited + 72) = &type metadata for Bool;
      *(unsigned char *)(inited + 48) = v14;
      Dictionary.init(dictionaryLiteral:)();
      goto LABEL_12;
    case 2u:
      Dictionary.init(dictionaryLiteral:)();
      sub_100181F94();
      sub_100184A48();
      ShortDescription.init(name:_:)();
      sub_100524A5C((uint64_t)v2);
      break;
    case 3u:
      Dictionary.init(dictionaryLiteral:)();
      goto LABEL_13;
    case 4u:
    case 9u:
      Dictionary.init(dictionaryLiteral:)();
      goto LABEL_12;
    case 5u:
    case 6u:
      Dictionary.init(dictionaryLiteral:)();
      goto LABEL_12;
    case 7u:
    case 0xCu:
      Dictionary.init(dictionaryLiteral:)();
      sub_100181FA4();
      goto LABEL_12;
    case 8u:
    case 0xBu:
    case 0xDu:
      Dictionary.init(dictionaryLiteral:)();
      sub_10019FDF8();
      goto LABEL_12;
    case 0xAu:
    case 0xEu:
    case 0xFu:
      Dictionary.init(dictionaryLiteral:)();
      sub_100181F94();
LABEL_12:
      sub_100184A48();
LABEL_13:
      ShortDescription.init(name:_:)();
      break;
    default:
      Dictionary.init(dictionaryLiteral:)();
      ShortDescription.init(name:_:)();
      type metadata accessor for LocationModel();
      sub_100162E4C();
      sub_100162F0C();
      v13();
      break;
  }
  a1[3] = v6;
  a1[4] = sub_100528448();
  char v16 = sub_100170694(a1);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v8 + 32))(v16, v12, v6);
}

uint64_t sub_1005264B8(void *a1)
{
  sub_10017DF08(&qword_100E7E4C0);
  sub_100179C0C();
  uint64_t v109 = v5;
  uint64_t v110 = v4;
  __chkstk_darwin(v4);
  sub_10017B2CC(v6, v73);
  uint64_t v104 = sub_10017DF08(&qword_100E7E4C8);
  sub_100179C0C();
  uint64_t v103 = v7;
  __chkstk_darwin(v8);
  sub_100182438(v9, v74);
  sub_10017DF08(&qword_100E7E4D0);
  sub_100179C0C();
  v108[0] = v11;
  v108[1] = v10;
  __chkstk_darwin(v10);
  sub_10019DE20(v12, v75);
  type metadata accessor for Location.Identifier();
  sub_100179C0C();
  uint64_t v105 = v14;
  uint64_t v106 = v13;
  __chkstk_darwin(v13);
  sub_100166BD4(v15, v76);
  sub_10017DF08(&qword_100E7E4D8);
  sub_100179C0C();
  uint64_t v100 = v17;
  v101[0] = v16;
  __chkstk_darwin(v16);
  sub_1001A1698(v18, v77);
  uint64_t v99 = sub_10017DF08(&qword_100E7E4E0);
  sub_100179C0C();
  uint64_t v98 = v19;
  __chkstk_darwin(v20);
  sub_100109314();
  sub_100109338(v21);
  uint64_t v97 = sub_10017DF08(&qword_100E7E4E8);
  sub_100179C0C();
  uint64_t v96 = v22;
  __chkstk_darwin(v23);
  sub_100109314();
  sub_100109338(v24);
  uint64_t v95 = sub_10017DF08(&qword_100E7E4F0);
  sub_100179C0C();
  uint64_t v94 = v25;
  __chkstk_darwin(v26);
  sub_100109314();
  sub_100109338(v27);
  uint64_t v93 = sub_10017DF08(&qword_100E7E4F8);
  sub_100179C0C();
  uint64_t v92 = v28;
  __chkstk_darwin(v29);
  sub_100109314();
  sub_100109338(v30);
  uint64_t v87 = sub_10017DF08(&qword_100E7E500);
  sub_100179C0C();
  uint64_t v86 = v31;
  __chkstk_darwin(v32);
  sub_100109314();
  sub_100109338(v33);
  uint64_t v85 = sub_10017DF08(&qword_100E7E508);
  sub_100179C0C();
  uint64_t v84 = v34;
  __chkstk_darwin(v35);
  sub_100109314();
  sub_100109338(v36);
  uint64_t v83 = sub_10017DF08(&qword_100E7E510);
  sub_100179C0C();
  uint64_t v82 = v37;
  __chkstk_darwin(v38);
  sub_100109314();
  sub_100109338(v39);
  uint64_t v91 = sub_10017DF08(&qword_100E7E518);
  sub_100179C0C();
  uint64_t v90 = v40;
  __chkstk_darwin(v41);
  sub_100109314();
  sub_100109338(v42);
  uint64_t v89 = type metadata accessor for LocationModel();
  sub_100179C0C();
  uint64_t v88 = v43;
  __chkstk_darwin(v44);
  sub_100109314();
  uint64_t v111 = v45;
  uint64_t v81 = sub_10017DF08(&qword_100E7E520);
  sub_100179C0C();
  uint64_t v80 = v46;
  __chkstk_darwin(v47);
  sub_100109314();
  sub_100109338(v48);
  uint64_t v79 = sub_10017DF08(&qword_100E7E528);
  sub_100179C0C();
  __chkstk_darwin(v49);
  sub_100109314();
  sub_100109338(v50);
  sub_10017DF08(&qword_100E7E530);
  sub_100179C0C();
  __chkstk_darwin(v51);
  sub_1001626E0();
  uint64_t v54 = v53 - v52;
  uint64_t v55 = sub_10017DF08(&qword_100E7E538);
  sub_100179C0C();
  uint64_t v78 = v56;
  __chkstk_darwin(v57);
  sub_100185358();
  sub_100162E4C();
  __chkstk_darwin(v58);
  sub_1001626E0();
  uint64_t v61 = v60 - v59;
  sub_10017DF08(&qword_100E7E540);
  sub_100179C0C();
  uint64_t v113 = v62;
  uint64_t v114 = v63;
  __chkstk_darwin(v62);
  sub_10016279C();
  uint64_t v64 = sub_1001B1E64(a1, a1[3]);
  sub_10052849C();
  uint64_t v112 = v1;
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_1005283E4(v116, v61);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      char v119 = 12;
      sub_100528630();
      sub_10018305C();
      KeyedEncodingContainer.encode(_:forKey:)();
      sub_100162F0C();
      v66();
      goto LABEL_23;
    case 2u:
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v105 + 32))(v102, v61, v106);
      char v119 = 13;
      sub_1005285E4();
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      sub_100528A0C(&qword_100E7E548, (void (*)(uint64_t))&type metadata accessor for Location.Identifier);
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      sub_100162F0C();
      v67();
      (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v102, v106);
      return (*(uint64_t (**)(void *, uint64_t))(v114 + 8))(v112, v113);
    case 3u:
      char v119 = 0;
      sub_1005289C0();
      uint64_t v64 = v112;
      uint64_t v54 = v113;
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v2, v55);
      goto LABEL_19;
    case 4u:
      char v119 = 1;
      sub_100528974();
      KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
      sub_10018139C();
      sub_100162F0C();
      v69();
      return (*(uint64_t (**)(void *, uint64_t))(v114 + 8))(v112, v113);
    case 5u:
      char v119 = 2;
      sub_100528928();
      sub_1001A2080();
      uint64_t v70 = sub_10018138C();
      uint64_t v72 = v101;
      goto LABEL_18;
    case 6u:
      char v119 = 3;
      sub_1005288DC();
      sub_1001A2080();
      uint64_t v70 = sub_10018138C();
      uint64_t v72 = &v103;
      goto LABEL_18;
    case 7u:
      char v119 = 5;
      sub_100528844();
      sub_1001A2080();
      uint64_t v70 = sub_10018138C();
      uint64_t v72 = &v105;
      goto LABEL_18;
    case 8u:
      char v119 = 6;
      sub_1005287F8();
      sub_1001A2080();
      uint64_t v70 = sub_10018138C();
      uint64_t v72 = v108;
      goto LABEL_18;
    case 9u:
      char v119 = 7;
      sub_1005287AC();
      sub_1001A2080();
      uint64_t v70 = sub_10018138C();
      uint64_t v72 = &v111;
      goto LABEL_18;
    case 0xAu:
      char v119 = 8;
      sub_100528760();
      sub_1001A2080();
      uint64_t v70 = sub_10018138C();
      uint64_t v72 = &v117;
      goto LABEL_18;
    case 0xBu:
      char v119 = 9;
      sub_100528714();
      sub_1001A2080();
      uint64_t v70 = sub_10016509C();
      goto LABEL_18;
    case 0xCu:
      char v119 = 10;
      sub_1005286C8();
      sub_1001A2080();
      uint64_t v70 = sub_1001869F0();
      goto LABEL_18;
    case 0xDu:
      char v119 = 11;
      sub_10052867C();
      sub_1001A2080();
      uint64_t v70 = sub_10018138C();
      uint64_t v72 = &v120;
LABEL_18:
      v71(v70, *(v72 - 32));
      goto LABEL_19;
    case 0xEu:
      char v119 = 14;
      sub_100528598();
      sub_10017E57C();
      (*(void (**)(void, uint64_t))(v103 + 8))(v101[1], v104);
      goto LABEL_19;
    case 0xFu:
      char v119 = 15;
      sub_1005284E8();
      sub_10017E57C();
      (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v107, v110);
LABEL_19:
      uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v114 + 8))(v64, v54);
      break;
    default:
      LODWORD(v116) = *(unsigned __int8 *)(v61 + *(int *)(sub_10017DF08(&qword_100E6F640) + 48));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 32))(v111, v61, v89);
      sub_100528890();
      sub_10018305C();
      char v119 = 0;
      sub_100528A0C(&qword_100E7E550, (void (*)(uint64_t))&type metadata accessor for LocationModel);
      KeyedEncodingContainer.encode<A>(_:forKey:)();
      if (!v115)
      {
        char v119 = v116;
        char v118 = 1;
        sub_1002E765C();
        KeyedEncodingContainer.encode<A>(_:forKey:)();
      }
      sub_100162F0C();
      v65();
      (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v111, v89);
LABEL_23:
      uint64_t result = (*(uint64_t (**)(uint64_t, void *))(v114 + 8))(v61, v1);
      break;
  }
  return result;
}

uint64_t sub_10052719C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v182 = a2;
  sub_10017DF08(&qword_100E7E3A0);
  sub_100179C0C();
  uint64_t v183 = v5;
  uint64_t v184 = v4;
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v181 = v6;
  uint64_t v173 = sub_10017DF08(&qword_100E7E3A8);
  sub_100179C0C();
  uint64_t v172 = v7;
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v180 = v9;
  uint64_t v174 = sub_10017DF08(&qword_100E7E3B0);
  sub_100179C0C();
  uint64_t v147 = v10;
  __chkstk_darwin(v11);
  sub_10017B2CC(v12, v140[0]);
  uint64_t v171 = sub_10017DF08(&qword_100E7E3B8);
  sub_100179C0C();
  uint64_t v146 = v13;
  __chkstk_darwin(v14);
  sub_100109314();
  uint64_t v179 = v15;
  uint64_t v170 = sub_10017DF08(&qword_100E7E3C0);
  sub_100179C0C();
  uint64_t v169 = v16;
  __chkstk_darwin(v17);
  sub_100109314();
  uint64_t v178 = v18;
  uint64_t v168 = sub_10017DF08(&qword_100E7E3C8);
  sub_100179C0C();
  uint64_t v167 = v19;
  __chkstk_darwin(v20);
  sub_10019DE20(v21, v140[0]);
  uint64_t v166 = sub_10017DF08(&qword_100E7E3D0);
  sub_100179C0C();
  uint64_t v165 = v22;
  __chkstk_darwin(v23);
  sub_100109314();
  uint64_t v177 = v24;
  uint64_t v164 = sub_10017DF08(&qword_100E7E3D8);
  sub_100179C0C();
  uint64_t v163 = v25;
  __chkstk_darwin(v26);
  sub_100166BD4(v27, v140[0]);
  uint64_t v161 = sub_10017DF08(&qword_100E7E3E0);
  sub_100179C0C();
  uint64_t v160 = v28;
  __chkstk_darwin(v29);
  sub_100182438(v30, v140[0]);
  uint64_t v159 = sub_10017DF08(&qword_100E7E3E8);
  sub_100179C0C();
  uint64_t v158 = v31;
  __chkstk_darwin(v32);
  sub_100109314();
  uint64_t v176 = v33;
  uint64_t v157 = sub_10017DF08(&qword_100E7E3F0);
  sub_100179C0C();
  uint64_t v156 = v34;
  __chkstk_darwin(v35);
  sub_100109314();
  uint64_t v175 = v36;
  uint64_t v162 = sub_10017DF08(&qword_100E7E3F8);
  sub_100179C0C();
  uint64_t v145 = v37;
  __chkstk_darwin(v38);
  sub_100109314();
  uint64_t v188 = v39;
  uint64_t v155 = sub_10017DF08(&qword_100E7E400);
  sub_100179C0C();
  uint64_t v154 = v40;
  __chkstk_darwin(v41);
  sub_1001A1698(v42, v140[0]);
  uint64_t v152 = sub_10017DF08(&qword_100E7E408);
  sub_100179C0C();
  uint64_t v153 = v43;
  __chkstk_darwin(v44);
  sub_100109314();
  uint64_t v187 = v45;
  uint64_t v151 = sub_10017DF08(&qword_100E7E410);
  sub_100179C0C();
  uint64_t v150 = v46;
  __chkstk_darwin(v47);
  sub_100109314();
  sub_100109338(v48);
  uint64_t v149 = sub_10017DF08(&qword_100E7E418);
  sub_100179C0C();
  uint64_t v148 = v49;
  __chkstk_darwin(v50);
  sub_100109314();
  sub_100109338(v51);
  sub_10017DF08(&qword_100E7E420);
  sub_100179C0C();
  uint64_t v185 = v53;
  uint64_t v186 = v52;
  __chkstk_darwin(v52);
  uint64_t v54 = sub_100185358();
  sub_100162E4C();
  __chkstk_darwin(v55);
  uint64_t v57 = (char *)v140 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v58);
  uint64_t v60 = (char *)v140 - v59;
  __chkstk_darwin(v61);
  uint64_t v63 = (char *)v140 - v62;
  __chkstk_darwin(v64);
  double v66 = (char *)v140 - v65;
  uint64_t v67 = a1[3];
  v189 = a1;
  sub_1001B1E64(a1, v67);
  sub_10052849C();
  uint64_t v68 = v190;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v68) {
    goto LABEL_22;
  }
  uint64_t v141 = v60;
  uint64_t v142 = v57;
  uint64_t v143 = v63;
  uint64_t v190 = v54;
  uint64_t v144 = v66;
  uint64_t v69 = v186;
  uint64_t v70 = KeyedDecodingContainer.allKeys.getter();
  uint64_t v71 = *(void *)(v70 + 16);
  if (!v71
    || (v140[1] = 0,
        uint64_t v72 = *(unsigned __int8 *)(v70 + 32),
        sub_100723214(1, v71, v70, v70 + 32, 0, (2 * v71) | 1),
        uint64_t v74 = v73,
        unint64_t v76 = v75,
        swift_bridgeObjectRelease(),
        v74 != v76 >> 1))
  {
    uint64_t v83 = v190;
    uint64_t v84 = type metadata accessor for DecodingError();
    swift_allocError();
    uint64_t v86 = v85;
    sub_10017DF08(&qword_100E67280);
    *uint64_t v86 = v83;
    KeyedDecodingContainer.codingPath.getter();
    DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v84 - 8) + 104))(v86, enum case for DecodingError.typeMismatch(_:), v84);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v185 + 8))(v2, v69);
LABEL_22:
    uint64_t v122 = (uint64_t)v189;
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v122);
  }
  uint64_t v77 = v72;
  uint64_t v79 = v183;
  uint64_t v78 = v184;
  switch(v77)
  {
    case 1:
      char v191 = 1;
      sub_100528974();
      sub_10017FE40();
      sub_10018139C();
      sub_100162F0C();
      v87();
      swift_unknownObjectRelease();
      uint64_t v88 = sub_10017CE9C();
      v89(v88);
      sub_1001A095C();
      goto LABEL_24;
    case 2:
      char v191 = 2;
      sub_100528928();
      sub_10017FE40();
      sub_10018138C();
      sub_100162F0C();
      v90();
      swift_unknownObjectRelease();
      uint64_t v91 = sub_10017CE9C();
      v92(v91);
      sub_1001A095C();
      goto LABEL_24;
    case 3:
      char v191 = 3;
      sub_1005288DC();
      sub_10017FE40();
      sub_10018138C();
      sub_100162F0C();
      v93();
      swift_unknownObjectRelease();
      uint64_t v94 = sub_10017CE9C();
      v95(v94);
      sub_1001A095C();
      goto LABEL_24;
    case 4:
      char v191 = 4;
      sub_100528890();
      sub_10017FE40();
      type metadata accessor for LocationModel();
      char v191 = 0;
      sub_100528A0C(&qword_100E7E498, (void (*)(uint64_t))&type metadata accessor for LocationModel);
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      sub_10017DF08(&qword_100E6F640);
      char v191 = 1;
      sub_1002E82F8();
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      sub_100162F0C();
      v136();
      swift_unknownObjectRelease();
      uint64_t v137 = sub_1001635DC();
      v138(v137);
      uint64_t v139 = v143;
      goto LABEL_26;
    case 5:
      char v191 = 5;
      sub_100528844();
      sub_10017FE40();
      sub_10018138C();
      sub_100162F0C();
      v96();
      swift_unknownObjectRelease();
      uint64_t v97 = sub_10017CE9C();
      v98(v97);
      sub_1001A095C();
      goto LABEL_24;
    case 6:
      char v191 = 6;
      sub_1005287F8();
      sub_10017FE40();
      sub_10018138C();
      sub_100162F0C();
      v99();
      swift_unknownObjectRelease();
      uint64_t v100 = sub_10017CE9C();
      v101(v100);
      sub_1001A095C();
      goto LABEL_24;
    case 7:
      char v191 = 7;
      sub_1005287AC();
      sub_10017FE40();
      sub_10018138C();
      sub_100162F0C();
      v102();
      swift_unknownObjectRelease();
      uint64_t v103 = sub_10017CE9C();
      v104(v103);
      sub_1001A095C();
      goto LABEL_24;
    case 8:
      char v191 = 8;
      sub_100528760();
      sub_10017FE40();
      sub_10018138C();
      sub_100162F0C();
      v105();
      swift_unknownObjectRelease();
      uint64_t v106 = sub_10017CE9C();
      v107(v106);
      sub_1001A095C();
      goto LABEL_24;
    case 9:
      char v191 = 9;
      sub_100528714();
      sub_10017FE40();
      sub_10018138C();
      sub_100162F0C();
      v108();
      swift_unknownObjectRelease();
      uint64_t v109 = sub_10017CE9C();
      v110(v109);
      sub_1001A095C();
      goto LABEL_24;
    case 10:
      char v191 = 10;
      sub_1005286C8();
      sub_10017FE40();
      sub_10018138C();
      sub_100162F0C();
      v111();
      swift_unknownObjectRelease();
      uint64_t v112 = sub_10017CE9C();
      v113(v112);
      sub_1001A095C();
      goto LABEL_24;
    case 11:
      char v191 = 11;
      sub_10052867C();
      sub_10017FE40();
      sub_10016509C();
      sub_100162F0C();
      v114();
      swift_unknownObjectRelease();
      uint64_t v115 = sub_10017CE9C();
      v116(v115);
      sub_1001A095C();
      goto LABEL_24;
    case 12:
      char v191 = 12;
      sub_100528630();
      sub_10017FE40();
      char v127 = KeyedDecodingContainer.decode(_:forKey:)();
      sub_100162F0C();
      v128();
      swift_unknownObjectRelease();
      uint64_t v129 = sub_100182A54();
      v130(v129);
      char v131 = v127 & 1;
      uint64_t v139 = v141;
      unsigned char *v141 = v131;
LABEL_26:
      swift_storeEnumTagMultiPayload();
      uint64_t v135 = (uint64_t)v139;
      goto LABEL_27;
    case 13:
      char v191 = 13;
      sub_1005285E4();
      sub_10017FE40();
      type metadata accessor for Location.Identifier();
      sub_100528A0C(&qword_100E7E448, (void (*)(uint64_t))&type metadata accessor for Location.Identifier);
      uint64_t v117 = (uint64_t)v142;
      KeyedDecodingContainer.decode<A>(_:forKey:)();
      sub_100162F0C();
      v132();
      swift_unknownObjectRelease();
      uint64_t v133 = sub_10017CE9C();
      v134(v133);
      swift_storeEnumTagMultiPayload();
      uint64_t v135 = v117;
LABEL_27:
      unint64_t v76 = (unint64_t)v144;
      sub_100528534(v135, (uint64_t)v144);
      goto LABEL_25;
    case 14:
      char v191 = 14;
      sub_100528598();
      sub_10017FE40();
      sub_1001869F0();
      sub_100162F0C();
      v118();
      swift_unknownObjectRelease();
      uint64_t v119 = sub_10017CE9C();
      v120(v119);
      sub_1001A095C();
      goto LABEL_24;
    case 15:
      char v191 = 15;
      sub_1005284E8();
      uint64_t v121 = v181;
      sub_10017FE40();
      (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v121, v78);
      swift_unknownObjectRelease();
      uint64_t v124 = sub_10017CE9C();
      v125(v124);
      sub_1001A095C();
      goto LABEL_24;
    default:
      char v191 = 0;
      sub_1005289C0();
      sub_10017FE40();
      sub_10018139C();
      sub_100162F0C();
      v80();
      swift_unknownObjectRelease();
      uint64_t v81 = sub_10017CE9C();
      v82(v81);
      sub_1001A095C();
LABEL_24:
      swift_storeEnumTagMultiPayload();
LABEL_25:
      uint64_t v126 = (uint64_t)v189;
      sub_100528534(v76, v182);
      uint64_t v122 = v126;
      break;
  }
  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v122);
}

uint64_t sub_100528300()
{
  sub_100528A0C(&qword_100E7E398, (void (*)(uint64_t))type metadata accessor for ListViewAction);

  return ShortDescribable.description.getter();
}

uint64_t sub_10052836C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10052719C(a1, a2);
}

uint64_t sub_100528384(void *a1)
{
  return sub_1005264B8(a1);
}

uint64_t sub_10052839C()
{
  return sub_100528A0C(&qword_100E7E380, (void (*)(uint64_t))type metadata accessor for ListViewAction);
}

uint64_t sub_1005283E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ListViewAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100528448()
{
  unint64_t result = qword_100E7E390;
  if (!qword_100E7E390)
  {
    sub_10018C6DC(&qword_100E7E388);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E390);
  }
  return result;
}

unint64_t sub_10052849C()
{
  unint64_t result = qword_100E7E428;
  if (!qword_100E7E428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E428);
  }
  return result;
}

unint64_t sub_1005284E8()
{
  unint64_t result = qword_100E7E430;
  if (!qword_100E7E430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E430);
  }
  return result;
}

uint64_t sub_100528534(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ListViewAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100528598()
{
  unint64_t result = qword_100E7E438;
  if (!qword_100E7E438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E438);
  }
  return result;
}

unint64_t sub_1005285E4()
{
  unint64_t result = qword_100E7E440;
  if (!qword_100E7E440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E440);
  }
  return result;
}

unint64_t sub_100528630()
{
  unint64_t result = qword_100E7E450;
  if (!qword_100E7E450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E450);
  }
  return result;
}

unint64_t sub_10052867C()
{
  unint64_t result = qword_100E7E458;
  if (!qword_100E7E458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E458);
  }
  return result;
}

unint64_t sub_1005286C8()
{
  unint64_t result = qword_100E7E460;
  if (!qword_100E7E460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E460);
  }
  return result;
}

unint64_t sub_100528714()
{
  unint64_t result = qword_100E7E468;
  if (!qword_100E7E468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E468);
  }
  return result;
}

unint64_t sub_100528760()
{
  unint64_t result = qword_100E7E470;
  if (!qword_100E7E470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E470);
  }
  return result;
}

unint64_t sub_1005287AC()
{
  unint64_t result = qword_100E7E478;
  if (!qword_100E7E478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E478);
  }
  return result;
}

unint64_t sub_1005287F8()
{
  unint64_t result = qword_100E7E480;
  if (!qword_100E7E480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E480);
  }
  return result;
}

unint64_t sub_100528844()
{
  unint64_t result = qword_100E7E488;
  if (!qword_100E7E488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E488);
  }
  return result;
}

unint64_t sub_100528890()
{
  unint64_t result = qword_100E7E490;
  if (!qword_100E7E490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E490);
  }
  return result;
}

unint64_t sub_1005288DC()
{
  unint64_t result = qword_100E7E4A0;
  if (!qword_100E7E4A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E4A0);
  }
  return result;
}

unint64_t sub_100528928()
{
  unint64_t result = qword_100E7E4A8;
  if (!qword_100E7E4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E4A8);
  }
  return result;
}

unint64_t sub_100528974()
{
  unint64_t result = qword_100E7E4B0;
  if (!qword_100E7E4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E4B0);
  }
  return result;
}

unint64_t sub_1005289C0()
{
  unint64_t result = qword_100E7E4B8;
  if (!qword_100E7E4B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E4B8);
  }
  return result;
}

uint64_t sub_100528A0C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ListViewAction.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF1)
  {
    if (a2 + 15 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 15) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 16;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x10;
  int v5 = v6 - 16;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for ListViewAction.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 15 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 15) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF1) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF0)
  {
    unsigned int v6 = ((a2 - 241) >> 8) + 1;
    *uint64_t result = a2 + 15;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100528BA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 15;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListViewAction.CodingKeys()
{
  return &type metadata for ListViewAction.CodingKeys;
}

ValueMetadata *type metadata accessor for ListViewAction.EnteredSettingsCodingKeys()
{
  return &type metadata for ListViewAction.EnteredSettingsCodingKeys;
}

ValueMetadata *type metadata accessor for ListViewAction.OpenNotificationsOptInFlowCodingKeys()
{
  return &type metadata for ListViewAction.OpenNotificationsOptInFlowCodingKeys;
}

ValueMetadata *type metadata accessor for ListViewAction.TappedEditButtonCodingKeys()
{
  return &type metadata for ListViewAction.TappedEditButtonCodingKeys;
}

ValueMetadata *type metadata accessor for ListViewAction.TappedDoneButtonCodingKeys()
{
  return &type metadata for ListViewAction.TappedDoneButtonCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ListViewAction.TappedLocationCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100528CECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ListViewAction.TappedLocationCodingKeys()
{
  return &type metadata for ListViewAction.TappedLocationCodingKeys;
}

ValueMetadata *type metadata accessor for ListViewAction.TappedNotificationSettingsButtonCodingKeys()
{
  return &type metadata for ListViewAction.TappedNotificationSettingsButtonCodingKeys;
}

ValueMetadata *type metadata accessor for ListViewAction.TappedNotificationsOptInButtonCodingKeys()
{
  return &type metadata for ListViewAction.TappedNotificationsOptInButtonCodingKeys;
}

ValueMetadata *type metadata accessor for ListViewAction.TappedReportWeatherButtonCodingKeys()
{
  return &type metadata for ListViewAction.TappedReportWeatherButtonCodingKeys;
}

ValueMetadata *type metadata accessor for ListViewAction.TappedWeatherMenuSettingsButtonCodingKeys()
{
  return &type metadata for ListViewAction.TappedWeatherMenuSettingsButtonCodingKeys;
}

ValueMetadata *type metadata accessor for ListViewAction.TappedUnitsConfigurationButtonCodingKeys()
{
  return &type metadata for ListViewAction.TappedUnitsConfigurationButtonCodingKeys;
}

ValueMetadata *type metadata accessor for ListViewAction.DismissedNotificationsOptInAlertCodingKeys()
{
  return &type metadata for ListViewAction.DismissedNotificationsOptInAlertCodingKeys;
}

ValueMetadata *type metadata accessor for ListViewAction.DismissedNotificationsOptInTipCodingKeys()
{
  return &type metadata for ListViewAction.DismissedNotificationsOptInTipCodingKeys;
}

ValueMetadata *type metadata accessor for ListViewAction.UpdatedSearchingCodingKeys()
{
  return &type metadata for ListViewAction.UpdatedSearchingCodingKeys;
}

unsigned char *_s7Weather14ListViewActionO26UpdatedSearchingCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100528E44);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ListViewAction.LocationTransitionBeganCodingKeys()
{
  return &type metadata for ListViewAction.LocationTransitionBeganCodingKeys;
}

ValueMetadata *type metadata accessor for ListViewAction.ResetExternalSearchQueryCodingKeys()
{
  return &type metadata for ListViewAction.ResetExternalSearchQueryCodingKeys;
}

ValueMetadata *type metadata accessor for ListViewAction.CompletedSearchOnLaunchPhaseCodingKeys()
{
  return &type metadata for ListViewAction.CompletedSearchOnLaunchPhaseCodingKeys;
}

unint64_t sub_100528EA0()
{
  unint64_t result = qword_100E7E558;
  if (!qword_100E7E558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E558);
  }
  return result;
}

unint64_t sub_100528EF0()
{
  unint64_t result = qword_100E7E560;
  if (!qword_100E7E560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E560);
  }
  return result;
}

unint64_t sub_100528F40()
{
  unint64_t result = qword_100E7E568;
  if (!qword_100E7E568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E568);
  }
  return result;
}

unint64_t sub_100528F90()
{
  unint64_t result = qword_100E7E570;
  if (!qword_100E7E570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E570);
  }
  return result;
}

unint64_t sub_100528FE0()
{
  unint64_t result = qword_100E7E578;
  if (!qword_100E7E578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E578);
  }
  return result;
}

unint64_t sub_100529030()
{
  unint64_t result = qword_100E7E580;
  if (!qword_100E7E580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E580);
  }
  return result;
}

unint64_t sub_100529080()
{
  unint64_t result = qword_100E7E588;
  if (!qword_100E7E588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E588);
  }
  return result;
}

unint64_t sub_1005290D0()
{
  unint64_t result = qword_100E7E590;
  if (!qword_100E7E590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E590);
  }
  return result;
}

unint64_t sub_100529120()
{
  unint64_t result = qword_100E7E598;
  if (!qword_100E7E598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E598);
  }
  return result;
}

unint64_t sub_100529170()
{
  unint64_t result = qword_100E7E5A0;
  if (!qword_100E7E5A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E5A0);
  }
  return result;
}

unint64_t sub_1005291C0()
{
  unint64_t result = qword_100E7E5A8;
  if (!qword_100E7E5A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E5A8);
  }
  return result;
}

unint64_t sub_100529210()
{
  unint64_t result = qword_100E7E5B0;
  if (!qword_100E7E5B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E5B0);
  }
  return result;
}

unint64_t sub_100529260()
{
  unint64_t result = qword_100E7E5B8;
  if (!qword_100E7E5B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E5B8);
  }
  return result;
}

unint64_t sub_1005292B0()
{
  unint64_t result = qword_100E7E5C0;
  if (!qword_100E7E5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E5C0);
  }
  return result;
}

unint64_t sub_100529300()
{
  unint64_t result = qword_100E7E5C8;
  if (!qword_100E7E5C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E5C8);
  }
  return result;
}

unint64_t sub_100529350()
{
  unint64_t result = qword_100E7E5D0;
  if (!qword_100E7E5D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E5D0);
  }
  return result;
}

unint64_t sub_1005293A0()
{
  unint64_t result = qword_100E7E5D8;
  if (!qword_100E7E5D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E5D8);
  }
  return result;
}

unint64_t sub_1005293F0()
{
  unint64_t result = qword_100E7E5E0;
  if (!qword_100E7E5E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E5E0);
  }
  return result;
}

unint64_t sub_100529440()
{
  unint64_t result = qword_100E7E5E8;
  if (!qword_100E7E5E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E5E8);
  }
  return result;
}

unint64_t sub_100529490()
{
  unint64_t result = qword_100E7E5F0;
  if (!qword_100E7E5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E5F0);
  }
  return result;
}

unint64_t sub_1005294E0()
{
  unint64_t result = qword_100E7E5F8;
  if (!qword_100E7E5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E5F8);
  }
  return result;
}

unint64_t sub_100529530()
{
  unint64_t result = qword_100E7E600;
  if (!qword_100E7E600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E600);
  }
  return result;
}

unint64_t sub_100529580()
{
  unint64_t result = qword_100E7E608;
  if (!qword_100E7E608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E608);
  }
  return result;
}

unint64_t sub_1005295D0()
{
  unint64_t result = qword_100E7E610;
  if (!qword_100E7E610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E610);
  }
  return result;
}

unint64_t sub_100529620()
{
  unint64_t result = qword_100E7E618;
  if (!qword_100E7E618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E618);
  }
  return result;
}

unint64_t sub_100529670()
{
  unint64_t result = qword_100E7E620;
  if (!qword_100E7E620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E620);
  }
  return result;
}

unint64_t sub_1005296C0()
{
  unint64_t result = qword_100E7E628;
  if (!qword_100E7E628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E628);
  }
  return result;
}

unint64_t sub_100529710()
{
  unint64_t result = qword_100E7E630;
  if (!qword_100E7E630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E630);
  }
  return result;
}

unint64_t sub_100529760()
{
  unint64_t result = qword_100E7E638;
  if (!qword_100E7E638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E638);
  }
  return result;
}

unint64_t sub_1005297B0()
{
  unint64_t result = qword_100E7E640;
  if (!qword_100E7E640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E640);
  }
  return result;
}

unint64_t sub_100529800()
{
  unint64_t result = qword_100E7E648;
  if (!qword_100E7E648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E648);
  }
  return result;
}

unint64_t sub_100529850()
{
  unint64_t result = qword_100E7E650;
  if (!qword_100E7E650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E650);
  }
  return result;
}

unint64_t sub_1005298A0()
{
  unint64_t result = qword_100E7E658;
  if (!qword_100E7E658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E658);
  }
  return result;
}

unint64_t sub_1005298F0()
{
  unint64_t result = qword_100E7E660;
  if (!qword_100E7E660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E660);
  }
  return result;
}

unint64_t sub_100529940()
{
  unint64_t result = qword_100E7E668;
  if (!qword_100E7E668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E668);
  }
  return result;
}

unint64_t sub_100529990()
{
  unint64_t result = qword_100E7E670;
  if (!qword_100E7E670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E670);
  }
  return result;
}

unint64_t sub_1005299E0()
{
  unint64_t result = qword_100E7E678;
  if (!qword_100E7E678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E678);
  }
  return result;
}

unint64_t sub_100529A30()
{
  unint64_t result = qword_100E7E680;
  if (!qword_100E7E680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E680);
  }
  return result;
}

uint64_t sub_100529A7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t *a5@<X8>, double a6@<D0>)
{
  int v73 = a4;
  uint64_t v74 = (void *)a3;
  uint64_t v71 = a1;
  uint64_t v72 = a5;
  uint64_t v8 = sub_10017DF08(&qword_100E7E748);
  uint64_t v70 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E6B648);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v67 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v67 - v16;
  uint64_t v18 = sub_10017DF08(&qword_100E7E730);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a6 <= 0.0)
  {
    uint64_t v68 = v12;
    uint64_t v69 = a2;
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v71, v18);
    if (v73)
    {
      Trend.currentValue.getter();
      Trend.baseline.getter();
      TrendBaseline.value.getter();
      (*(void (**)(char *, uint64_t))(v70 + 8))(v10, v8);
      sub_1001ABC4C(0, (unint64_t *)&qword_100E6B678);
      char v41 = static Measurement.< infix<A, B>(_:_:)();
      uint64_t v42 = *(void (**)(char *, uint64_t))(v68 + 8);
      v42(v15, v11);
      v42(v17, v11);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      uint64_t v43 = (uint64_t)v74;
      if (v41)
      {
        id v44 = [self mainBundle];
        v77._uint64_t countAndFlagsBits = 0xD000000000000082;
        v77._object = (void *)0x8000000100CA3D00;
        unint64_t v39 = 0xE000000000000000;
        v45._uint64_t countAndFlagsBits = 0x766120776F6C6562;
        v45._object = (void *)0xED00006567617265;
        v46._uint64_t countAndFlagsBits = 0;
        v46._object = (void *)0xE000000000000000;
        Swift::String v47 = NSLocalizedString(_:tableName:bundle:value:comment:)(v45, (Swift::String_optional)0, (NSBundle)v44, v46, v77);
        uint64_t countAndFlagsBits = v47._countAndFlagsBits;
        object = v47._object;

        Swift::String v48 = String.trimmingHyphensAndMinusSigns()();
        uint64_t result = v48._countAndFlagsBits;
        uint64_t v22 = v48._countAndFlagsBits;
        uint64_t v25 = v48._object;
        uint64_t v37 = 0;
        goto LABEL_13;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      uint64_t v43 = (uint64_t)v74;
    }
    uint64_t v49 = self;
    id v50 = [v49 mainBundle];
    if (a6 == 0.0)
    {
      v51._uint64_t countAndFlagsBits = 0xD000000000000022;
      v78._uint64_t countAndFlagsBits = 0xD00000000000009DLL;
      v78._object = (void *)0x8000000100CA3BE0;
      v51._object = (void *)0x8000000100CA3BB0;
      v52._uint64_t countAndFlagsBits = 0x657661206D6F7266;
      v52._object = (void *)0xEC00000065676172;
      Swift::String v53 = NSLocalizedString(_:tableName:bundle:value:comment:)(v51, (Swift::String_optional)0, (NSBundle)v50, v52, v78);
      uint64_t countAndFlagsBits = v53._countAndFlagsBits;
      object = v53._object;

      id v54 = [v49 mainBundle];
      unint64_t v55 = 0xD000000000000038;
      unint64_t v56 = 0xD00000000000003FLL;
      unint64_t v66 = 0x8000000100CA3CC0;
      unint64_t v57 = 0x8000000100CA3C80;
    }
    else
    {
      v58._uint64_t countAndFlagsBits = 0xD000000000000028;
      v79._uint64_t countAndFlagsBits = 0xD0000000000000A4;
      v79._object = (void *)0x8000000100CA3A70;
      v58._object = (void *)0x8000000100CA3A40;
      v59._uint64_t countAndFlagsBits = 0x657661206D6F7266;
      v59._object = (void *)0xEC00000065676172;
      Swift::String v60 = NSLocalizedString(_:tableName:bundle:value:comment:)(v58, (Swift::String_optional)0, (NSBundle)v50, v59, v79);
      uint64_t countAndFlagsBits = v60._countAndFlagsBits;
      object = v60._object;

      id v54 = [v49 mainBundle];
      unint64_t v56 = 0xD000000000000048;
      unint64_t v66 = 0x8000000100CA3B60;
      unint64_t v57 = 0x8000000100CA3B20;
      unint64_t v55 = 0xD000000000000031;
    }
    v61._uint64_t countAndFlagsBits = 0x206D6F7266204025;
    v61._object = (void *)0xEF65676172657661;
    NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v55, (Swift::String_optional)0, (NSBundle)v54, v61, *(Swift::String *)&v56);

    sub_10017DF08(&qword_100E64020);
    uint64_t v62 = swift_allocObject();
    *(_OWORD *)(v62 + 16) = xmmword_100C251B0;
    *(void *)(v62 + 56) = &type metadata for String;
    *(void *)(v62 + 64) = sub_10012B7C0();
    *(void *)(v62 + 32) = v69;
    *(void *)(v62 + 40) = v43;
    swift_bridgeObjectRetain();
    uint64_t v37 = static String.localizedStringWithFormat(_:_:)();
    unint64_t v39 = v63;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    Swift::String v64 = String.replacingHyphensWithMinusSigns()();
    uint64_t result = v64._countAndFlagsBits;
    uint64_t v22 = v64._countAndFlagsBits;
    uint64_t v25 = v64._object;
  }
  else
  {
    uint64_t v22 = a2;
    uint64_t v23 = (uint64_t)v74;
    uint64_t v71 = sub_10052AA80(a2, (uint64_t)v74);
    uint64_t v25 = v24;
    uint64_t v26 = self;
    id v27 = [v26 mainBundle];
    v28._uint64_t countAndFlagsBits = 0xD000000000000029;
    v75._uint64_t countAndFlagsBits = 0xD000000000000097;
    v75._object = (void *)0x8000000100CA3DC0;
    v28._object = (void *)0x8000000100CA3D90;
    v29._uint64_t countAndFlagsBits = 0x76612065766F6261;
    v29._object = (void *)0xED00006567617265;
    Swift::String v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, (Swift::String_optional)0, (NSBundle)v27, v29, v75);
    uint64_t countAndFlagsBits = v30._countAndFlagsBits;
    object = v30._object;

    id v33 = [v26 mainBundle];
    v34._uint64_t countAndFlagsBits = 0xD000000000000011;
    v76._uint64_t countAndFlagsBits = 0xD00000000000004ALL;
    v76._object = (void *)0x8000000100CA3EC0;
    v35._object = (void *)0x8000000100CA3E60;
    v34._object = (void *)0x8000000100CA3EA0;
    v35._uint64_t countAndFlagsBits = 0xD000000000000031;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v35, (Swift::String_optional)0, (NSBundle)v33, v34, v76);

    sub_10017DF08(&qword_100E64020);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_100C251B0;
    *(void *)(v36 + 56) = &type metadata for String;
    *(void *)(v36 + 64) = sub_10012B7C0();
    *(void *)(v36 + 32) = a2;
    *(void *)(v36 + 40) = v23;
    swift_bridgeObjectRetain();
    uint64_t v37 = static String.localizedStringWithFormat(_:_:)();
    unint64_t v39 = v38;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v73)
    {
      swift_bridgeObjectRelease();
      uint64_t v25 = v74;
      uint64_t result = swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v22 = v71;
    }
  }
LABEL_13:
  uint64_t v65 = v72;
  *uint64_t v72 = v22;
  v65[1] = (uint64_t)v25;
  v65[2] = countAndFlagsBits;
  v65[3] = (uint64_t)object;
  v65[4] = v37;
  v65[5] = v39;
  return result;
}

uint64_t sub_10052A274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t *a5@<X8>, double a6@<D0>)
{
  int v75 = a4;
  Swift::String v76 = (void *)a3;
  uint64_t v73 = a1;
  uint64_t v74 = a5;
  uint64_t v8 = sub_10017DF08(&qword_100E7DC28);
  uint64_t v72 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E65250);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v69 - v16;
  uint64_t v18 = sub_10017DF08(&qword_100E6B7C8);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a6 <= 0.0)
  {
    uint64_t v70 = v12;
    uint64_t v71 = a2;
    (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v21, v73, v18);
    if (v75)
    {
      Trend.currentValue.getter();
      Trend.baseline.getter();
      TrendBaseline.value.getter();
      (*(void (**)(char *, uint64_t))(v72 + 8))(v10, v8);
      sub_1001ABC4C(0, (unint64_t *)&qword_100E659A0);
      char v41 = static Measurement.< infix<A, B>(_:_:)();
      uint64_t v42 = *(void (**)(char *, uint64_t))(v70 + 8);
      v42(v15, v11);
      v42(v17, v11);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      uint64_t v43 = (uint64_t)v76;
      if (v41)
      {
        id v44 = [self mainBundle];
        v45._uint64_t countAndFlagsBits = 0xD000000000000018;
        v79._uint64_t countAndFlagsBits = 0xD000000000000085;
        v79._object = (void *)0x8000000100CA34F0;
        v45._object = (void *)0x8000000100CA34D0;
        unint64_t v39 = 0xE000000000000000;
        v46._uint64_t countAndFlagsBits = 0;
        v46._object = (void *)0xE000000000000000;
        Swift::String v47 = NSLocalizedString(_:tableName:bundle:value:comment:)(v45, (Swift::String_optional)0, (NSBundle)v44, v46, v79);
        uint64_t countAndFlagsBits = v47._countAndFlagsBits;
        object = v47._object;

        Swift::String v48 = String.trimmingHyphensAndMinusSigns()();
        uint64_t result = v48._countAndFlagsBits;
        uint64_t v22 = v48._countAndFlagsBits;
        uint64_t v25 = v48._object;
        uint64_t v37 = 0;
        goto LABEL_13;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      uint64_t v43 = (uint64_t)v76;
    }
    uint64_t v49 = self;
    id v50 = [v49 mainBundle];
    if (a6 == 0.0)
    {
      v80._uint64_t countAndFlagsBits = 0x10000000000000ABLL;
      v51._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
      v80._object = (void *)0x8000000100CA3360;
      v51._object = (void *)0x8000000100CA3330;
      v52._object = (void *)0x8000000100CA3180;
      v52._uint64_t countAndFlagsBits = 0xD000000000000017;
      Swift::String v53 = NSLocalizedString(_:tableName:bundle:value:comment:)(v51, (Swift::String_optional)0, (NSBundle)v50, v52, v80);
      uint64_t countAndFlagsBits = v53._countAndFlagsBits;
      object = v53._object;

      id v54 = (objc_class *)[v49 mainBundle];
      uint64_t v55 = 0x1000000000000062;
      unint64_t v56 = 0xD00000000000001ALL;
      unint64_t v57 = 0xD000000000000044;
      unint64_t v68 = 0x8000000100CA3460;
      unint64_t v58 = 0x8000000100CA3410;
      unint64_t v59 = 0x8000000100CA32A0;
      v60.super.isa = v54;
    }
    else
    {
      v81._uint64_t countAndFlagsBits = 0x10000000000000B2;
      v61._uint64_t countAndFlagsBits = 0xD000000000000034;
      v81._object = (void *)0x8000000100CA31A0;
      v61._object = (void *)0x8000000100CA3140;
      v62._object = (void *)0x8000000100CA3180;
      v62._uint64_t countAndFlagsBits = 0xD000000000000017;
      Swift::String v63 = NSLocalizedString(_:tableName:bundle:value:comment:)(v61, (Swift::String_optional)0, (NSBundle)v50, v62, v81);
      uint64_t countAndFlagsBits = v63._countAndFlagsBits;
      object = v63._object;

      id v54 = (objc_class *)[v49 mainBundle];
      unint64_t v56 = 0xD00000000000001ALL;
      unint64_t v57 = 0xD00000000000003DLL;
      unint64_t v68 = 0x8000000100CA32C0;
      unint64_t v58 = 0x8000000100CA3260;
      unint64_t v59 = 0x8000000100CA32A0;
      v60.super.isa = v54;
      uint64_t v55 = 0x1000000000000060;
    }
    NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v57, (Swift::String_optional)0, v60, *(Swift::String *)&v56, *(Swift::String *)&v55);

    sub_10017DF08(&qword_100E64020);
    uint64_t v64 = swift_allocObject();
    *(_OWORD *)(v64 + 16) = xmmword_100C251B0;
    *(void *)(v64 + 56) = &type metadata for String;
    *(void *)(v64 + 64) = sub_10012B7C0();
    *(void *)(v64 + 32) = v71;
    *(void *)(v64 + 40) = v43;
    swift_bridgeObjectRetain();
    uint64_t v37 = static String.localizedStringWithFormat(_:_:)();
    unint64_t v39 = v65;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    Swift::String v66 = String.replacingHyphensWithMinusSigns()();
    uint64_t result = v66._countAndFlagsBits;
    uint64_t v22 = v66._countAndFlagsBits;
    uint64_t v25 = v66._object;
  }
  else
  {
    uint64_t v22 = a2;
    uint64_t v23 = (uint64_t)v76;
    uint64_t v73 = sub_10052AA80(a2, (uint64_t)v76);
    uint64_t v25 = v24;
    uint64_t v26 = self;
    id v27 = [v26 mainBundle];
    v77._uint64_t countAndFlagsBits = 0x10000000000000A5;
    v28._uint64_t countAndFlagsBits = 0xD000000000000018;
    v29._uint64_t countAndFlagsBits = 0xD000000000000035;
    v77._object = (void *)0x8000000100CA35E0;
    v29._object = (void *)0x8000000100CA3580;
    v28._object = (void *)0x8000000100CA35C0;
    Swift::String v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v29, (Swift::String_optional)0, (NSBundle)v27, v28, v77);
    uint64_t countAndFlagsBits = v30._countAndFlagsBits;
    object = v30._object;

    id v33 = [v26 mainBundle];
    v34._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
    v35._uint64_t countAndFlagsBits = 0xD00000000000003DLL;
    v78._object = (void *)0x8000000100CA36F0;
    v35._object = (void *)0x8000000100CA3690;
    v34._object = (void *)0x8000000100CA36D0;
    v78._uint64_t countAndFlagsBits = 0x1000000000000060;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v35, (Swift::String_optional)0, (NSBundle)v33, v34, v78);

    sub_10017DF08(&qword_100E64020);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_100C251B0;
    *(void *)(v36 + 56) = &type metadata for String;
    *(void *)(v36 + 64) = sub_10012B7C0();
    *(void *)(v36 + 32) = a2;
    *(void *)(v36 + 40) = v23;
    swift_bridgeObjectRetain();
    uint64_t v37 = static String.localizedStringWithFormat(_:_:)();
    unint64_t v39 = v38;
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v75)
    {
      swift_bridgeObjectRelease();
      uint64_t v25 = v76;
      uint64_t result = swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v22 = v73;
    }
  }
LABEL_13:
  uint64_t v67 = v74;
  uint64_t *v74 = v22;
  v67[1] = (uint64_t)v25;
  v67[2] = countAndFlagsBits;
  v67[3] = (uint64_t)object;
  v67[4] = v37;
  v67[5] = v39;
  return result;
}

uint64_t sub_10052AA80(uint64_t a1, uint64_t a2)
{
  id v4 = [self mainBundle];
  v10._object = (void *)0x8000000100CA37A0;
  v5._object = (void *)0x8000000100CA3760;
  v5._uint64_t countAndFlagsBits = 0xD000000000000030;
  v6._uint64_t countAndFlagsBits = 4203819;
  v6._object = (void *)0xE300000000000000;
  v10._uint64_t countAndFlagsBits = 0x1000000000000070;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v10);

  sub_10017DF08(&qword_100E64020);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100C251B0;
  *(void *)(v7 + 56) = &type metadata for String;
  *(void *)(v7 + 64) = sub_10012B7C0();
  *(void *)(v7 + 32) = a1;
  *(void *)(v7 + 40) = a2;
  swift_bridgeObjectRetain();
  uint64_t v8 = static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_10052ABB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v8 = [self mainBundle];
  v15._object = (void *)0x8000000100CA2FF0;
  v9._object = (void *)0x8000000100CA2FB0;
  v9._uint64_t countAndFlagsBits = 0xD000000000000037;
  v10._uint64_t countAndFlagsBits = 0x4025204025;
  v10._object = (void *)0xE500000000000000;
  v15._uint64_t countAndFlagsBits = 0x1000000000000142;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v15);

  sub_10017DF08(&qword_100E64020);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_100C25ED0;
  *(void *)(v11 + 56) = &type metadata for String;
  unint64_t v12 = sub_10012B7C0();
  *(void *)(v11 + 32) = a1;
  *(void *)(v11 + 40) = a2;
  *(void *)(v11 + 96) = &type metadata for String;
  *(void *)(v11 + 104) = v12;
  *(void *)(v11 + 64) = v12;
  *(void *)(v11 + 72) = a3;
  *(void *)(v11 + 80) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = String.init(format:_:)();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_10052AD04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v186 = a3;
  uint64_t v187 = a2;
  uint64_t v207 = a1;
  uint64_t v185 = a4;
  uint64_t v4 = type metadata accessor for WeatherFormatPlaceholder();
  uint64_t v211 = *(void *)(v4 - 8);
  uint64_t v212 = v4;
  __chkstk_darwin(v4);
  v208 = (char *)v158 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10017DF08(&qword_100E63730);
  __chkstk_darwin(v6 - 8);
  uint64_t v182 = (uint64_t)v158 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v194 = type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle();
  uint64_t v183 = *(void *)(v194 - 8);
  uint64_t v8 = __chkstk_darwin(v194);
  uint64_t v184 = (char *)v158 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v206 = (char *)v158 - v10;
  uint64_t v205 = type metadata accessor for Locale.Language();
  uint64_t v203 = *(void *)(v205 - 8);
  __chkstk_darwin(v205);
  v202 = (void (*)(void))((char *)v158 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v190 = type metadata accessor for Locale();
  v201 = *(void (**)(char *, uint64_t))(v190 - 8);
  __chkstk_darwin(v190);
  v195 = (char *)v158 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v192 = sub_10017DF08(&qword_100E7DC28);
  uint64_t v198 = *(void *)(v192 - 8);
  __chkstk_darwin(v192);
  char v191 = (char *)v158 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10017DF08(&qword_100E65250);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  v204 = (char *)v158 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  v189 = (char *)v158 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)v158 - v21;
  uint64_t v23 = __chkstk_darwin(v20);
  uint64_t v25 = (char *)v158 - v24;
  __chkstk_darwin(v23);
  v193 = (char *)v158 - v26;
  uint64_t v27 = sub_10017DF08(&qword_100E6B7C8);
  Trend.currentValue.getter();
  uint64_t v28 = type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  Swift::String v29 = (void *)UnitManager.temperature.getter();
  swift_release();
  Measurement<>.converted(to:)();

  Swift::String v30 = *(void (**)(char *, uint64_t))(v15 + 8);
  v30(v22, v14);
  Measurement.rounded.getter();
  v30(v25, v14);
  uint64_t v31 = v191;
  uint64_t v196 = v27;
  Trend.baseline.getter();
  uint64_t v32 = v192;
  TrendBaseline.value.getter();
  id v33 = *(void (**)(char *, uint64_t))(v198 + 8);
  v198 += 8;
  uint64_t v188 = v33;
  v33(v31, v32);
  uint64_t v209 = v28;
  static UnitManager.standard.getter();
  Swift::String v34 = (void *)UnitManager.temperature.getter();
  swift_release();
  Measurement<>.converted(to:)();

  v30(v22, v14);
  Measurement.rounded.getter();
  v30(v25, v14);
  Measurement.rounded.getter();
  Measurement.rounded.getter();
  sub_1001ABC4C(0, (unint64_t *)&qword_100E659A0);
  static Measurement<>.- infix(_:_:)();
  v30(v22, v14);
  v197 = v25;
  uint64_t v210 = v14;
  v199 = v30;
  uint64_t v200 = v15 + 8;
  v30(v25, v14);
  Swift::String v35 = v195;
  static Locale.current.getter();
  uint64_t v36 = v202;
  Locale.language.getter();
  uint64_t v37 = v35;
  uint64_t v38 = v190;
  (*((void (**)(char *))v201 + 1))(v37);
  char v39 = Locale.Language.prefersFullTemperatureScale.getter();
  (*(void (**)(void (*)(void), uint64_t))(v203 + 8))(v36, v205);
  if (v39)
  {
    static Set<>.value.getter();
    uint64_t v40 = v182;
    _s7Weather24LocationCompositionStateOwst_0(v182, 1, 1, v38);
    char v41 = v206;
    static WeatherFormatStyle<>.weather(_:locale:)();
    swift_bridgeObjectRelease();
    sub_1000F3400(v40, &qword_100E63730);
    LODWORD(v203) = enum case for WeatherFormatPlaceholder.none(_:);
    uint64_t v43 = v211;
    uint64_t v42 = v212;
    v202 = *(void (**)(void))(v211 + 104);
    v195 = (char *)((v211 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000);
    id v44 = v208;
    v202(v208);
    static UnitManager.standard.getter();
    uint64_t v180 = sub_100230FE4((unint64_t *)&qword_100E6BF60, 255, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
    uint64_t v45 = v194;
    *(void *)&long long v181 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    uint64_t v176 = v46;
    swift_release();
    v201 = *(void (**)(char *, uint64_t))(v43 + 8);
    uint64_t v205 = (v43 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v201(v44, v42);
    Swift::String v47 = *(void (**)(char *, uint64_t))(v183 + 8);
    uint64_t v211 = (v183 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v47(v41, v45);
    static Set<>.unit.getter();
    _s7Weather24LocationCompositionStateOwst_0(v40, 1, 1, v190);
    static WeatherFormatStyle<>.weather(_:locale:)();
    swift_bridgeObjectRelease();
    sub_1000F3400(v40, &qword_100E63730);
    uint64_t v48 = v212;
    ((void (*)(char *, void, uint64_t))v202)(v44, v203, v212);
    uint64_t v49 = v47;
    static UnitManager.standard.getter();
    uint64_t v50 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    uint64_t v182 = v51;
    uint64_t v183 = v50;
    uint64_t v52 = v181;
    swift_release();
    v201(v44, v48);
    Swift::String v53 = v49;
    v49(v41, v45);
  }
  else
  {
    id v54 = v206;
    static WeatherFormatStyle<>.weather.getter();
    uint64_t v56 = v211;
    uint64_t v55 = v212;
    unint64_t v57 = *(void (**)(void))(v211 + 104);
    v195 = (char *)((v211 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000);
    unint64_t v58 = v208;
    LODWORD(v203) = enum case for WeatherFormatPlaceholder.none(_:);
    v202 = v57;
    v57(v208);
    static UnitManager.standard.getter();
    sub_100230FE4((unint64_t *)&qword_100E6BF60, 255, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
    uint64_t v59 = v194;
    uint64_t v52 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    uint64_t v176 = v60;
    swift_release();
    Swift::String v61 = *(void (**)(char *, uint64_t))(v56 + 8);
    uint64_t v205 = (v56 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    v201 = v61;
    v61(v58, v55);
    Swift::String v62 = *(void (**)(char *, uint64_t))(v183 + 8);
    uint64_t v211 = (v183 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    Swift::String v53 = v62;
    v62(v54, v59);
    uint64_t v182 = 0;
    uint64_t v183 = 0;
  }
  Measurement.value.getter();
  uint64_t v63 = v207;
  uint64_t v64 = v176;
  sub_10052A274(v207, v52, v176, 0, (uint64_t *)v214, v65);
  uint64_t v177 = *((void *)&v214[0] + 1);
  uint64_t v178 = *(void *)&v214[0];
  long long v181 = v214[1];
  uint64_t v179 = *((void *)&v214[2] + 1);
  uint64_t v180 = *(void *)&v214[2];
  Measurement.value.getter();
  sub_10052A274(v63, v52, v64, 1, (uint64_t *)v214, v66);
  long long v67 = v214[0];
  long long v68 = v214[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v69 = sub_10052ABB4(v67, *((uint64_t *)&v67 + 1), v68, *((uint64_t *)&v68 + 1));
  uint64_t v175 = v70;
  uint64_t v176 = v69;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v71 = self;
  id v72 = [v71 mainBundle];
  v73._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v215._uint64_t countAndFlagsBits = 0xD00000000000003DLL;
  v215._object = (void *)0x8000000100CA2C90;
  v73._object = (void *)0x8000000100CA2C70;
  v74._uint64_t countAndFlagsBits = 0x7961646F54;
  v74._object = (void *)0xE500000000000000;
  Swift::String v75 = NSLocalizedString(_:tableName:bundle:value:comment:)(v73, (Swift::String_optional)0, (NSBundle)v72, v74, v215);
  object = v75._object;
  uint64_t countAndFlagsBits = v75._countAndFlagsBits;

  id v159 = v71;
  id v76 = [v71 mainBundle];
  v216._uint64_t countAndFlagsBits = 0xD00000000000004BLL;
  unint64_t v166 = 0xD00000000000004BLL;
  v216._object = (void *)0x8000000100CA2D00;
  v77._object = (void *)0x8000000100CA2CD0;
  uint64_t v165 = (void *)0x8000000100CA2CD0;
  v77._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v78._uint64_t countAndFlagsBits = 0x2073277961646F54;
  v78._object = (void *)0xEC00000068676948;
  Swift::String v79 = NSLocalizedString(_:tableName:bundle:value:comment:)(v77, (Swift::String_optional)0, (NSBundle)v76, v78, v216);
  uint64_t v171 = v79._object;
  uint64_t v172 = v79._countAndFlagsBits;

  id v80 = [v71 mainBundle];
  v81._uint64_t countAndFlagsBits = 0xD00000000000003BLL;
  v217._object = (void *)0x8000000100CA2D90;
  v81._object = (void *)0x8000000100CA2D50;
  v82._uint64_t countAndFlagsBits = 1076181576;
  v82._object = (void *)0xE400000000000000;
  v217._uint64_t countAndFlagsBits = 0x100000000000004BLL;
  Swift::String v83 = NSLocalizedString(_:tableName:bundle:value:comment:)(v81, (Swift::String_optional)0, (NSBundle)v80, v82, v217);
  uint64_t v170 = v83._countAndFlagsBits;
  uint64_t v168 = (uint64_t)v83._object;

  uint64_t v162 = sub_10017DF08(&qword_100E64020);
  uint64_t v84 = swift_allocObject();
  long long v161 = xmmword_100C251B0;
  *(_OWORD *)(v84 + 16) = xmmword_100C251B0;
  uint64_t v85 = v197;
  Trend.currentValue.getter();
  uint64_t v86 = v206;
  static WeatherFormatStyle<>.weather.getter();
  uint64_t v87 = v184;
  NSUnitTemperature.BaseWeatherFormatStyle.secondary.getter();
  uint64_t v88 = v194;
  uint64_t v89 = v53;
  v53(v86, v194);
  uint64_t v90 = v208;
  ((void (*)(char *, void, uint64_t))v202)(v208, v203, v212);
  static UnitManager.standard.getter();
  uint64_t v190 = sub_100230FE4((unint64_t *)&qword_100E6BF60, 255, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
  uint64_t v91 = v210;
  uint64_t v92 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v169 = v93;
  swift_release();
  v201(v90, v212);
  v89(v87, v88);
  v199(v85, v91);
  *(void *)(v84 + 56) = &type metadata for String;
  unint64_t v160 = sub_10012B7C0();
  *(void *)(v84 + 64) = v160;
  uint64_t v94 = v169;
  *(void *)(v84 + 32) = v92;
  *(void *)(v84 + 40) = v94;
  uint64_t v95 = String.init(format:_:)();
  uint64_t v169 = v96;
  uint64_t v170 = v95;
  swift_bridgeObjectRelease();
  id v97 = v159;
  id v98 = [v159 mainBundle];
  v99._uint64_t countAndFlagsBits = 0xD000000000000017;
  v218._uint64_t countAndFlagsBits = 0xD000000000000041;
  v218._object = (void *)0x8000000100CA2E00;
  v99._object = (void *)0x8000000100CA2DE0;
  v100._uint64_t countAndFlagsBits = 0x65676172657641;
  v100._object = (void *)0xE700000000000000;
  Swift::String v101 = NSLocalizedString(_:tableName:bundle:value:comment:)(v99, (Swift::String_optional)0, (NSBundle)v98, v100, v218);
  uint64_t v167 = v101._object;
  uint64_t v168 = v101._countAndFlagsBits;

  id v102 = [v97 mainBundle];
  v219._object = (void *)0x8000000100CA2E50;
  v103._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v103._object = v165;
  v219._uint64_t countAndFlagsBits = v166;
  v104._uint64_t countAndFlagsBits = 0x2065676172657641;
  v104._object = (void *)0xEC00000068676948;
  Swift::String v105 = NSLocalizedString(_:tableName:bundle:value:comment:)(v103, (Swift::String_optional)0, (NSBundle)v102, v104, v219);
  uint64_t v165 = v105._object;
  unint64_t v166 = v105._countAndFlagsBits;

  id v106 = [v97 mainBundle];
  v107._uint64_t countAndFlagsBits = 0xD000000000000020;
  v220._uint64_t countAndFlagsBits = 0xD00000000000004ALL;
  v220._object = (void *)0x8000000100CA2ED0;
  v107._object = (void *)0x8000000100CA2EA0;
  v108._uint64_t countAndFlagsBits = 6780481;
  v108._object = (void *)0xE300000000000000;
  Swift::String v109 = NSLocalizedString(_:tableName:bundle:value:comment:)(v107, (Swift::String_optional)0, (NSBundle)v106, v108, v220);
  uint64_t v163 = v109._object;
  uint64_t v164 = v109._countAndFlagsBits;

  id v110 = [v97 mainBundle];
  v221._uint64_t countAndFlagsBits = 0x100000000000004FLL;
  v111._uint64_t countAndFlagsBits = 0xD00000000000003ELL;
  v221._object = (void *)0x8000000100CA2F60;
  v111._object = (void *)0x8000000100CA2F20;
  v112._uint64_t countAndFlagsBits = 1076181576;
  v112._object = (void *)0xE400000000000000;
  Swift::String v113 = NSLocalizedString(_:tableName:bundle:value:comment:)(v111, (Swift::String_optional)0, (NSBundle)v110, v112, v221);
  v158[1] = v113._object;
  id v159 = (id)v113._countAndFlagsBits;

  uint64_t v114 = swift_allocObject();
  *(_OWORD *)(v114 + 16) = v161;
  uint64_t v115 = v191;
  Trend.baseline.getter();
  uint64_t v116 = v192;
  TrendBaseline.value.getter();
  v188(v115, v116);
  uint64_t v117 = v206;
  static WeatherFormatStyle<>.weather.getter();
  NSUnitTemperature.BaseWeatherFormatStyle.secondary.getter();
  uint64_t v118 = v194;
  uint64_t v119 = v89;
  v89(v117, v194);
  uint64_t v120 = v208;
  uint64_t v121 = v212;
  ((void (*)(char *, void, uint64_t))v202)(v208, v203, v212);
  static UnitManager.standard.getter();
  uint64_t v122 = v210;
  uint64_t v123 = v197;
  *(void *)&long long v161 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v162 = v124;
  swift_release();
  v201(v120, v121);
  uint64_t v125 = v87;
  v119(v87, v118);
  v158[0] = v119;
  v199(v123, v122);
  unint64_t v126 = v160;
  *(void *)(v114 + 56) = &type metadata for String;
  *(void *)(v114 + 64) = v126;
  uint64_t v127 = v162;
  *(void *)(v114 + 32) = v161;
  *(void *)(v114 + 40) = v127;
  uint64_t v162 = String.init(format:_:)();
  *(void *)&long long v161 = v128;
  swift_bridgeObjectRelease();
  Trend.currentValue.getter();
  uint64_t v129 = v206;
  static WeatherFormatStyle<>.weather.getter();
  NSUnitTemperature.BaseWeatherFormatStyle.secondary.getter();
  uint64_t v130 = v118;
  v119(v129, v118);
  char v131 = v208;
  uint64_t v132 = v212;
  ((void (*)(char *, void, uint64_t))v202)(v208, v203, v212);
  static UnitManager.standard.getter();
  uint64_t v133 = v210;
  uint64_t v134 = v197;
  uint64_t v135 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v137 = v136;
  swift_release();
  v201(v131, v132);
  uint64_t v138 = v125;
  uint64_t v139 = (void (*)(char *, uint64_t))v158[0];
  ((void (*)(char *, uint64_t))v158[0])(v125, v130);
  v199(v134, v133);
  *(void *)&v214[0] = v135;
  *((void *)&v214[0] + 1) = v137;
  swift_bridgeObjectRetain();
  v140._uint64_t countAndFlagsBits = 8250;
  v140._object = (void *)0xE200000000000000;
  String.append(_:)(v140);
  v141._uint64_t countAndFlagsBits = v172;
  v141._object = v171;
  String.append(_:)(v141);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v171 = (void *)*((void *)&v214[0] + 1);
  uint64_t v172 = *(void *)&v214[0];
  uint64_t v142 = v191;
  Trend.baseline.getter();
  uint64_t v143 = v192;
  TrendBaseline.value.getter();
  v188(v142, v143);
  uint64_t v144 = v206;
  static WeatherFormatStyle<>.weather.getter();
  NSUnitTemperature.BaseWeatherFormatStyle.secondary.getter();
  uint64_t v145 = v130;
  v139(v144, v130);
  uint64_t v146 = v208;
  ((void (*)(char *, void, uint64_t))v202)(v208, v203, v212);
  static UnitManager.standard.getter();
  uint64_t v147 = v138;
  uint64_t v148 = v210;
  uint64_t v149 = v197;
  uint64_t v150 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v152 = v151;
  swift_release();
  v201(v146, v212);
  v139(v147, v145);
  uint64_t v153 = v149;
  uint64_t v154 = v199;
  v199(v153, v148);
  *(void *)&v214[0] = v150;
  *((void *)&v214[0] + 1) = v152;
  swift_bridgeObjectRetain();
  v155._uint64_t countAndFlagsBits = 8250;
  v155._object = (void *)0xE200000000000000;
  String.append(_:)(v155);
  v156._uint64_t countAndFlagsBits = v166;
  v156._object = v165;
  String.append(_:)(v156);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&v213[0] = v178;
  *((void *)&v213[0] + 1) = v177;
  *(void *)&v213[1] = v183;
  *((void *)&v213[1] + 1) = v182;
  v213[2] = v181;
  *(void *)&v213[3] = v180;
  *((void *)&v213[3] + 1) = v179;
  *(void *)&v213[4] = v176;
  *((void *)&v213[4] + 1) = v175;
  *(void *)&v213[5] = countAndFlagsBits;
  *((void *)&v213[5] + 1) = object;
  v213[6] = 0uLL;
  *(void *)&v213[7] = v170;
  *((void *)&v213[7] + 1) = v169;
  *(void *)&v213[8] = v172;
  *((void *)&v213[8] + 1) = v171;
  *(void *)&v213[9] = v168;
  *((void *)&v213[9] + 1) = v167;
  *(void *)&v213[10] = v164;
  *((void *)&v213[10] + 1) = v163;
  *(void *)&v213[11] = v162;
  *((void *)&v213[11] + 1) = v161;
  v213[12] = v214[0];
  memcpy(v214, v213, sizeof(v214));
  sub_1000454D4(v214, 0, v186, v185);
  sub_10052D0A0((uint64_t)v213);
  v154(v204, v148);
  v154(v189, v148);
  return ((uint64_t (*)(char *, uint64_t))v154)(v193, v148);
}

uint64_t sub_10052C1D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v133 = a4;
  uint64_t v134 = a3;
  uint64_t v168 = a2;
  uint64_t v132 = a5;
  uint64_t v156 = type metadata accessor for WeatherFormatPlaceholder();
  uint64_t v167 = *(void *)(v156 - 8);
  __chkstk_darwin(v156);
  uint64_t v139 = (char *)&v115 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E63730);
  __chkstk_darwin(v7 - 8);
  uint64_t v138 = (uint64_t)&v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = type metadata accessor for NSUnitLength.BaseWeatherFormatStyle();
  uint64_t v166 = *(void *)(v155 - 8);
  __chkstk_darwin(v155);
  uint64_t v116 = (char *)&v115 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = sub_10017DF08(&qword_100E7E748);
  uint64_t v163 = *(void *)(v150 - 8);
  __chkstk_darwin(v150);
  uint64_t v149 = (char *)&v115 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for WeatherFormatScaling();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v115 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10017DF08(&qword_100E6B648);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v169 = v15;
  uint64_t v170 = v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v152 = (char *)&v115 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v164 = (char *)&v115 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v115 - v22;
  __chkstk_darwin(v21);
  uint64_t v153 = (char *)&v115 - v24;
  uint64_t v151 = sub_10017DF08(&qword_100E7E730);
  uint64_t v135 = a1;
  Trend.currentValue.getter();
  unsigned int v160 = enum case for WeatherFormatScaling.automatic(_:);
  long long v161 = *(void (**)(char *))(v12 + 104);
  uint64_t v162 = v12 + 104;
  uint64_t v165 = (uint64_t)v14;
  uint64_t v154 = v11;
  v161(v14);
  Measurement<>.converted(usage:scaling:)();
  uint64_t v158 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v159 = v12 + 8;
  v158(v14, v11);
  uint64_t v25 = *(void (**)(char *, uint64_t))(v170 + 8);
  v170 += 8;
  uint64_t v157 = v25;
  v25(v23, v169);
  uint64_t v26 = v149;
  Trend.baseline.getter();
  uint64_t v27 = v164;
  uint64_t v28 = v150;
  TrendBaseline.value.getter();
  Swift::String v29 = *(void (**)(char *, uint64_t))(v163 + 8);
  v163 += 8;
  uint64_t v123 = v29;
  v29(v26, v28);
  uint64_t v30 = v165;
  uint64_t v31 = v160;
  uint64_t v32 = v154;
  id v33 = (void (*)(uint64_t, uint64_t, uint64_t))v161;
  ((void (*)(uint64_t, void, uint64_t))v161)(v165, v160, v154);
  char v131 = v23;
  Swift::String v34 = v27;
  Measurement<>.converted(usage:scaling:)();
  uint64_t v35 = v32;
  uint64_t v36 = v32;
  uint64_t v37 = (void (*)(uint64_t, uint64_t))v158;
  v158((char *)v30, v35);
  v157(v34, v169);
  sub_1001ABC4C(0, (unint64_t *)&qword_100E6B678);
  static Measurement<>.- infix(_:_:)();
  uint64_t v148 = type metadata accessor for Locale();
  uint64_t v38 = v138;
  _s7Weather24LocationCompositionStateOwst_0(v138, 1, 1, v148);
  static Set<>.full.getter();
  uint64_t v39 = v165;
  uint64_t v40 = v31;
  uint64_t v41 = v36;
  v33(v165, v40, v36);
  uint64_t v42 = v116;
  static WeatherFormatStyle<>.weather(_:usage:scaling:trimLeadingZeroes:locale:)();
  swift_bridgeObjectRelease();
  v37(v39, v41);
  sub_1000F3400(v38, &qword_100E63730);
  unsigned int v147 = enum case for WeatherFormatPlaceholder.none(_:);
  uint64_t v43 = v167;
  id v44 = *(void (**)(void))(v167 + 104);
  uint64_t v145 = v167 + 104;
  uint64_t v146 = (void (*)(char *, void, uint64_t))v44;
  uint64_t v45 = v139;
  uint64_t v46 = v156;
  v44(v139);
  uint64_t v144 = type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  uint64_t v143 = sub_100230FE4((unint64_t *)&qword_100E6B658, 255, (void (*)(uint64_t))&type metadata accessor for NSUnitLength.BaseWeatherFormatStyle);
  uint64_t v47 = v155;
  id v140 = (id)Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v49 = v48;
  swift_release();
  uint64_t v50 = *(void (**)(char *, uint64_t))(v43 + 8);
  uint64_t v167 = v43 + 8;
  uint64_t v142 = v50;
  v50(v45, v46);
  uint64_t v51 = *(void (**)(char *, uint64_t))(v166 + 8);
  v166 += 8;
  Swift::String v141 = v51;
  v51(v42, v47);
  Measurement.value.getter();
  uint64_t v52 = v135;
  uint64_t v53 = (uint64_t)v140;
  sub_100529A7C(v135, (uint64_t)v140, v49, 0, (uint64_t *)v172, v54);
  uint64_t v126 = *((void *)&v172[0] + 1);
  uint64_t v127 = *(void *)&v172[0];
  long long v130 = v172[1];
  uint64_t v128 = *((void *)&v172[2] + 1);
  uint64_t v129 = *(void *)&v172[2];
  Measurement.value.getter();
  sub_100529A7C(v52, v53, v49, 1, (uint64_t *)v172, v55);
  long long v56 = v172[0];
  long long v57 = v172[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v58 = sub_10052ABB4(v56, *((uint64_t *)&v56 + 1), v57, *((uint64_t *)&v57 + 1));
  uint64_t v124 = v59;
  uint64_t v125 = v58;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v140 = self;
  id v60 = [v140 mainBundle];
  v61._uint64_t countAndFlagsBits = 0xD000000000000037;
  v173._uint64_t countAndFlagsBits = 0xD000000000000038;
  v173._object = (void *)0x8000000100CA3860;
  v61._object = (void *)0x8000000100CA3820;
  v62._uint64_t countAndFlagsBits = 0x206425207473614CLL;
  v62._object = (void *)0xEC00000073796164;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v61, (Swift::String_optional)0, (NSBundle)v60, v62, v173);

  uint64_t v120 = sub_10017DF08(&qword_100E64020);
  uint64_t v63 = swift_allocObject();
  long long v119 = xmmword_100C251B0;
  *(_OWORD *)(v63 + 16) = xmmword_100C251B0;
  *(void *)(v63 + 56) = &type metadata for Int;
  *(void *)(v63 + 64) = &protocol witness table for Int;
  *(void *)(v63 + 32) = 30;
  uint64_t v64 = String.init(format:_:)();
  uint64_t v121 = v65;
  uint64_t v122 = v64;
  swift_bridgeObjectRelease();
  Trend.currentValue.getter();
  uint64_t v66 = v138;
  _s7Weather24LocationCompositionStateOwst_0(v138, 1, 1, v148);
  static Set<>.full.getter();
  uint64_t v67 = v165;
  uint64_t v68 = v154;
  ((void (*)(uint64_t, void, uint64_t))v161)(v165, v160, v154);
  static WeatherFormatStyle<>.weather(_:usage:scaling:trimLeadingZeroes:locale:)();
  swift_bridgeObjectRelease();
  v158((char *)v67, v68);
  sub_1000F3400(v66, &qword_100E63730);
  uint64_t v69 = v139;
  uint64_t v70 = v156;
  v146(v139, v147, v156);
  static UnitManager.standard.getter();
  uint64_t v71 = v42;
  uint64_t v72 = v169;
  uint64_t v73 = v155;
  Swift::String v74 = v152;
  uint64_t v75 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v136 = v76;
  uint64_t v137 = v75;
  swift_release();
  v142(v69, v70);
  v141(v71, v73);
  Swift::String v77 = v74;
  Swift::String v78 = v157;
  v157(v74, v72);
  id v79 = [v140 mainBundle];
  v80._uint64_t countAndFlagsBits = 0xD000000000000034;
  v174._object = (void *)0x8000000100CA38E0;
  v80._object = (void *)0x8000000100CA38A0;
  v81._uint64_t countAndFlagsBits = 0x65676172657641;
  v81._object = (void *)0xE700000000000000;
  v174._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
  Swift::String v82 = NSLocalizedString(_:tableName:bundle:value:comment:)(v80, (Swift::String_optional)0, (NSBundle)v79, v81, v174);
  object = v82._object;
  uint64_t countAndFlagsBits = v82._countAndFlagsBits;

  Swift::String v83 = v149;
  Trend.baseline.getter();
  uint64_t v84 = v150;
  TrendBaseline.value.getter();
  v123(v83, v84);
  _s7Weather24LocationCompositionStateOwst_0(v66, 1, 1, v148);
  static Set<>.full.getter();
  uint64_t v85 = v165;
  uint64_t v86 = v154;
  ((void (*)(uint64_t, void, uint64_t))v161)(v165, v160, v154);
  static WeatherFormatStyle<>.weather(_:usage:scaling:trimLeadingZeroes:locale:)();
  swift_bridgeObjectRelease();
  v158((char *)v85, v86);
  sub_1000F3400(v66, &qword_100E63730);
  uint64_t v87 = v156;
  v146(v69, v147, v156);
  static UnitManager.standard.getter();
  uint64_t v88 = v72;
  uint64_t v89 = v155;
  uint64_t v165 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v168 = v90;
  swift_release();
  v142(v69, v87);
  v141(v71, v89);
  v78(v77, v88);
  id v91 = v140;
  id v92 = [v140 mainBundle];
  v93._uint64_t countAndFlagsBits = 0xD000000000000040;
  v175._uint64_t countAndFlagsBits = 0xD00000000000004ELL;
  v175._object = (void *)0x8000000100CA3960;
  v93._object = (void *)0x8000000100CA3910;
  v94._uint64_t countAndFlagsBits = 0x646425207473614CLL;
  v94._object = (void *)0xE800000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v93, (Swift::String_optional)0, (NSBundle)v92, v94, v175);

  uint64_t v95 = swift_allocObject();
  *(_OWORD *)(v95 + 16) = v119;
  *(void *)(v95 + 56) = &type metadata for Int;
  *(void *)(v95 + 64) = &protocol witness table for Int;
  *(void *)(v95 + 32) = 30;
  uint64_t v96 = String.init(format:_:)();
  uint64_t v166 = v97;
  uint64_t v167 = v96;
  swift_bridgeObjectRelease();
  *(void *)&v172[0] = v137;
  *((void *)&v172[0] + 1) = v136;
  swift_bridgeObjectRetain();
  v98._uint64_t countAndFlagsBits = 8250;
  v98._object = (void *)0xE200000000000000;
  String.append(_:)(v98);
  Swift::String v99 = v121;
  uint64_t v100 = v122;
  v101._uint64_t countAndFlagsBits = v122;
  v101._object = v121;
  String.append(_:)(v101);
  uint64_t v162 = *((void *)&v172[0] + 1);
  uint64_t v163 = *(void *)&v172[0];
  id v102 = [v91 mainBundle];
  v103._uint64_t countAndFlagsBits = 0xD00000000000003DLL;
  v176._uint64_t countAndFlagsBits = 0xD000000000000045;
  v176._object = (void *)0x8000000100CA39F0;
  v103._object = (void *)0x8000000100CA39B0;
  v104._uint64_t countAndFlagsBits = 6780481;
  v104._object = (void *)0xE300000000000000;
  Swift::String v105 = NSLocalizedString(_:tableName:bundle:value:comment:)(v103, (Swift::String_optional)0, (NSBundle)v102, v104, v176);

  uint64_t v106 = v165;
  *(void *)&v172[0] = v165;
  uint64_t v107 = v168;
  *((void *)&v172[0] + 1) = v168;
  swift_bridgeObjectRetain();
  v108._uint64_t countAndFlagsBits = 8250;
  v108._object = (void *)0xE200000000000000;
  String.append(_:)(v108);
  Swift::String v109 = object;
  uint64_t v110 = countAndFlagsBits;
  v111._uint64_t countAndFlagsBits = countAndFlagsBits;
  v111._object = object;
  String.append(_:)(v111);
  *(void *)&v171[0] = v127;
  *((void *)&v171[0] + 1) = v126;
  v171[1] = 0uLL;
  v171[2] = v130;
  *(void *)&v171[3] = v129;
  *((void *)&v171[3] + 1) = v128;
  *(void *)&v171[4] = v125;
  *((void *)&v171[4] + 1) = v124;
  *(void *)&v171[5] = v100;
  *((void *)&v171[5] + 1) = v99;
  *(void *)&v171[6] = v167;
  *((void *)&v171[6] + 1) = v166;
  *(void *)&v171[7] = v137;
  *((void *)&v171[7] + 1) = v136;
  *(void *)&v171[8] = v163;
  *((void *)&v171[8] + 1) = v162;
  *(void *)&v171[9] = v110;
  *((void *)&v171[9] + 1) = v109;
  v171[10] = v105;
  *(void *)&v171[11] = v106;
  *((void *)&v171[11] + 1) = v107;
  v171[12] = v172[0];
  memcpy(v172, v171, sizeof(v172));
  sub_1000454D4(v172, 1, v133, v132);
  sub_10052D0A0((uint64_t)v171);
  uint64_t v112 = v169;
  Swift::String v113 = v157;
  v157(v164, v169);
  v113(v131, v112);
  return ((uint64_t (*)(char *, uint64_t))v113)(v153, v112);
}

uint64_t sub_10052D0A0(uint64_t a1)
{
  return a1;
}

void *sub_10052D18C(unsigned char *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = &a1[v7];
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Location();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[6];
    uint64_t v12 = (char *)v4 + v11;
    uint64_t v13 = (char *)a2 + v11;
    uint64_t v14 = type metadata accessor for LocationOfInterest();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    *((unsigned char *)v4 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  }
  return v4;
}

uint64_t sub_10052D2BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = type metadata accessor for LocationOfInterest();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

unsigned char *sub_10052D374(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Location();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for LocationOfInterest();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

unsigned char *sub_10052D454(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Location();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for LocationOfInterest();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

unsigned char *sub_10052D534(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Location();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for LocationOfInterest();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

unsigned char *sub_10052D614(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Location();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for LocationOfInterest();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

uint64_t sub_10052D6F4(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    type metadata accessor for Location();
    sub_100162F30();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v12 = v10;
      uint64_t v13 = *(int *)(a3 + 20);
    }
    else
    {
      uint64_t v12 = type metadata accessor for LocationOfInterest();
      uint64_t v13 = *(int *)(a3 + 24);
    }
    return _s7Weather24LocationCompositionStateOwet_0((uint64_t)&a1[v13], a2, v12);
  }
}

unsigned char *sub_10052D7A0(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }
  else
  {
    type metadata accessor for Location();
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 20);
    }
    else
    {
      uint64_t v10 = type metadata accessor for LocationOfInterest();
      uint64_t v11 = *(int *)(a4 + 24);
    }
    return (unsigned char *)_s7Weather24LocationCompositionStateOwst_0((uint64_t)&v5[v11], a2, a2, v10);
  }
  return result;
}

uint64_t sub_10052D844(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2
    && (uint64_t v4 = type metadata accessor for HomeAndWorkRefinementRowViewModel(), (static Location.== infix(_:_:)() & 1) != 0)
    && (static LocationOfInterest.== infix(_:_:)() & 1) != 0)
  {
    char v5 = a1[*(int *)(v4 + 28)] ^ a2[*(int *)(v4 + 28)] ^ 1;
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

unsigned char *storeEnumTagSinglePayload for HomeAndWorkRefinementRowViewModel.InfoButtonPosition(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10052D9ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HomeAndWorkRefinementRowViewModel.InfoButtonPosition()
{
  return &type metadata for HomeAndWorkRefinementRowViewModel.InfoButtonPosition;
}

unint64_t sub_10052D9E8()
{
  unint64_t result = qword_100E7E7E8;
  if (!qword_100E7E7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7E7E8);
  }
  return result;
}

uint64_t sub_10052DA34(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E663F0);
  uint64_t v3 = sub_100109308(v2);
  __chkstk_darwin(v3);
  sub_100109314();
  uint64_t v125 = v4;
  uint64_t v5 = sub_10017DF08(&qword_100E663F8);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v124 = v7;
  uint64_t v8 = sub_10017DF08(&qword_100E66400);
  uint64_t v9 = sub_100109308(v8);
  __chkstk_darwin(v9);
  sub_100109314();
  uint64_t v121 = v10;
  uint64_t v11 = sub_10017DF08(&qword_100E66410);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v123 = v13;
  uint64_t v14 = sub_10017DF08(&qword_100E66418);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_100109314();
  uint64_t v122 = v16;
  uint64_t v17 = sub_10017DF08(&qword_100E66420);
  uint64_t v18 = sub_100109308(v17);
  __chkstk_darwin(v18);
  sub_100109314();
  uint64_t v130 = v19;
  uint64_t v20 = sub_10017DF08(&qword_100E66428);
  uint64_t v21 = sub_100109308(v20);
  __chkstk_darwin(v21);
  sub_100109314();
  uint64_t v129 = v22;
  uint64_t v23 = sub_10017DF08(&qword_100E66430);
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_100109314();
  uint64_t v128 = v25;
  uint64_t v26 = sub_10017DF08(&qword_100E66438);
  uint64_t v27 = sub_100109308(v26);
  __chkstk_darwin(v27);
  sub_100109314();
  uint64_t v126 = v28;
  uint64_t v29 = sub_10017DF08(&qword_100E66440);
  uint64_t v30 = sub_100109308(v29);
  __chkstk_darwin(v30);
  sub_100109314();
  uint64_t v127 = v31;
  uint64_t v32 = type metadata accessor for ViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)v115 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  uint64_t v38 = (uint64_t *)((char *)v115 - v37);
  __chkstk_darwin(v39);
  uint64_t v41 = (char *)v115 - v40;
  uint64_t v42 = sub_10017DF08(&qword_100E66408);
  uint64_t v43 = sub_100109308(v42);
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)v115 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)v115 - v47;
  uint64_t v49 = type metadata accessor for SearchViewState.ViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v50);
  uint64_t v52 = (char *)v115 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = a1;
  uint64_t v54 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
  sub_10011384C(v54, (uint64_t)v41, (void (*)(void))type metadata accessor for ViewState);
  sub_10052E3A0((uint64_t)&v41[*(int *)(v32 + 32)], (uint64_t)v48);
  sub_10013EFB8((uint64_t)v41, (void (*)(void))type metadata accessor for ViewState);
  double v55 = (int *)type metadata accessor for SearchViewState(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, (uint64_t)v55) != 1)
  {
    uint64_t v119 = v54;
    uint64_t v120 = v32;
    uint64_t v116 = v35;
    uint64_t v117 = v45;
    uint64_t v57 = v129;
    uint64_t v56 = v130;
    sub_10011384C((uint64_t)&v48[v55[5]], (uint64_t)v52, (void (*)(void))type metadata accessor for SearchViewState.ViewState);
    sub_10013EFB8((uint64_t)v48, (void (*)(void))type metadata accessor for SearchViewState);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_10013EFB8((uint64_t)v52, (void (*)(void))type metadata accessor for SearchViewState.ViewState);
      return 1;
    }
    v115[1] = v49;
    swift_bridgeObjectRelease();
    sub_10011384C(v119, (uint64_t)v38, (void (*)(void))type metadata accessor for ViewState);
    uint64_t v58 = v120;
    uint64_t v59 = *(uint64_t *)((char *)v38 + *(int *)(v120 + 36) + 8);
    uint64_t v118 = *v38;
    v115[0] = v53;
    if (v59 == 1)
    {
      id v60 = self;
      swift_retain();
      id v61 = [v60 currentDevice];
      [v61 userInterfaceIdiom];

      int v62 = *((unsigned __int8 *)v38 + *(int *)(v58 + 28));
      uint64_t v63 = v56;
      uint64_t v64 = v57;
      uint64_t v66 = v127;
      uint64_t v65 = v128;
      uint64_t v67 = v126;
      uint64_t v68 = (uint64_t)v116;
      uint64_t v69 = v119;
      if (v62 == 1)
      {
        swift_release();
        sub_10013EFB8((uint64_t)v38, (void (*)(void))type metadata accessor for ViewState);
        type metadata accessor for ListViewState._Storage();
        swift_allocObject();
        uint64_t v118 = sub_1000EC58C(0, 0, 1, 0, 0, 0, 0xE000000000000000, 0, 0, 0, 0, 0, 1, 0);
LABEL_11:
        uint64_t v71 = type metadata accessor for AppConfigurationState();
        sub_100179C70(v66, v72, v73, v71);
        uint64_t v74 = type metadata accessor for EnvironmentState();
        sub_100179C70(v67, v75, v76, v74);
        uint64_t v77 = type metadata accessor for LocationsState();
        sub_100179C70(v65, v78, v79, v77);
        uint64_t v80 = type metadata accessor for NotificationsOptInState();
        sub_100179C70(v64, v81, v82, v80);
        uint64_t v83 = type metadata accessor for TimeState();
        sub_100163050(v63, v84, v85, v83);
        sub_10011384C(v69, v68, (void (*)(void))type metadata accessor for ViewState);
        sub_1007210CC(0, 256, 2, 2, 3, 0, 0xE000000000000000, 0, 1, 2, 0, 0, 2, 2, v118);
        uint64_t v86 = v64;
        uint64_t v87 = type metadata accessor for ViewState.SecondaryViewState(0);
        uint64_t v88 = v63;
        uint64_t v89 = v123;
        sub_100163050(v123, v90, v91, v87);
        id v92 = v117;
        swift_storeEnumTagMultiPayload();
        uint64_t v93 = (uint64_t)v92 + v55[7];
        uint64_t v94 = type metadata accessor for Location();
        sub_100163050(v93, v95, v96, v94);
        void *v92 = 0;
        v92[1] = 0xE000000000000000;
        *((unsigned char *)v92 + v55[6]) = 0;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v92, 0, 1, (uint64_t)v55);
        uint64_t v97 = type metadata accessor for DisplayMetrics();
        uint64_t v98 = v121;
        uint64_t v101 = sub_100179C70(v121, v99, v100, v97);
        uint64_t v102 = type metadata accessor for WeatherMapPresentationState(v101);
        uint64_t v103 = v124;
        sub_100163050(v124, v104, v105, v102);
        uint64_t v106 = v122;
        sub_10011D8AC();
        swift_release();
        sub_1001781AC(v103, &qword_100E663F8);
        sub_1001781AC(v98, &qword_100E66400);
        sub_1001781AC((uint64_t)v92, &qword_100E66408);
        sub_1001781AC(v89, &qword_100E66410);
        sub_10013EFB8(v68, (void (*)(void))type metadata accessor for ViewState);
        _s7Weather24LocationCompositionStateOwst_0(v106, 0, 1, v120);
        uint64_t v107 = type metadata accessor for ModalViewState(0);
        uint64_t v108 = v125;
        sub_100163050(v125, v109, v110, v107);
        uint64_t v112 = v126;
        uint64_t v111 = v127;
        uint64_t v113 = v128;
        uint64_t v70 = sub_1001659F0(0, 3, v127, v126, v128, 0, 0, 0, 0, v86, v88, v106, v108, 0, 0, 0, 0, 0, 0,
                0,
                v115[0]);
        swift_release();
        sub_1001781AC(v108, &qword_100E663F0);
        sub_1001781AC(v106, &qword_100E66418);
        sub_1001781AC(v88, &qword_100E66420);
        sub_1001781AC(v86, &qword_100E66428);
        sub_1001781AC(v113, &qword_100E66430);
        sub_1001781AC(v112, &qword_100E66438);
        sub_1001781AC(v111, &qword_100E66440);
        return v70;
      }
    }
    else
    {
      swift_retain();
      uint64_t v63 = v56;
      uint64_t v64 = v57;
      uint64_t v66 = v127;
      uint64_t v65 = v128;
      uint64_t v67 = v126;
      uint64_t v68 = (uint64_t)v116;
      uint64_t v69 = v119;
    }
    sub_10013EFB8((uint64_t)v38, (void (*)(void))type metadata accessor for ViewState);
    goto LABEL_11;
  }
  sub_1001781AC((uint64_t)v48, &qword_100E66408);
  return 1;
}

uint64_t sub_10052E3A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E66408);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t Optional<A>.description.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  sub_100187D64();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100187D64();
  __n128 v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, __n128))(v11 + 16))(v10, v12, v8);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v1) == 1)
  {
    uint64_t v17 = 0;
    unint64_t v18 = 0xE000000000000000;
    _StringGuts.grow(_:)(16);
    swift_bridgeObjectRelease();
    uint64_t v17 = 0x6C616E6F6974704FLL;
    unint64_t v18 = 0xE90000000000003CLL;
    v13._uint64_t countAndFlagsBits = _typeName(_:qualified:)();
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    v14._uint64_t countAndFlagsBits = 0x6C696E2E3ELL;
    v14._object = (void *)0xE500000000000000;
    String.append(_:)(v14);
    return v17;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v10, v1);
    uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v1);
  }
  return v15;
}

uint64_t sub_10052E5D0(uint64_t a1)
{
  return Optional<A>.description.getter(a1);
}

uint64_t sub_10052E5D8()
{
  if (*(void *)(v0 + 64))
  {
    uint64_t v1 = *(void *)(v0 + 64);
  }
  else
  {
    uint64_t v1 = static Font.footnote.getter();
    *(void *)(v0 + 64) = v1;
    swift_retain();
  }
  swift_retain();
  return v1;
}

double sub_10052E620()
{
  if ((*(unsigned char *)(v0 + 56) & 1) == 0) {
    return *(double *)(v0 + 48);
  }
  *(void *)(v0 + 48) = 0x4010000000000000;
  *(unsigned char *)(v0 + 56) = 0;
  return 4.0;
}

double sub_10052E644()
{
  if ((*(unsigned char *)(v0 + 24) & 1) == 0) {
    return *(double *)(v0 + 16);
  }
  *(void *)(v0 + 16) = 0x4030000000000000;
  *(unsigned char *)(v0 + 24) = 0;
  return 16.0;
}

double sub_10052E668()
{
  if ((v0[8] & 1) == 0) {
    return *(double *)v0;
  }
  *(void *)uint64_t v0 = 0x4030000000000000;
  v0[8] = 0;
  return 16.0;
}

double sub_10052E68C()
{
  if ((*(unsigned char *)(v0 + 40) & 1) == 0) {
    return *(double *)(v0 + 32);
  }
  *(void *)(v0 + 32) = 0x4046000000000000;
  *(unsigned char *)(v0 + 40) = 0;
  return 44.0;
}

BOOL sub_10052E6B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DailyComponentView(0);
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_10016278C();
  uint64_t v8 = v6 - v7;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v16 - v10;
  char v12 = sub_1007E1910();
  sub_100145458(a1, (uint64_t)v11, (void (*)(void))type metadata accessor for DailyComponentView);
  sub_100145458(a2, v8, (void (*)(void))type metadata accessor for DailyComponentView);
  if (v12)
  {
    double v13 = *(double *)&v11[*(int *)(v4 + 28)];
    sub_1001440E4((uint64_t)v11, (void (*)(void))type metadata accessor for DailyComponentView);
    double v14 = *(double *)(v8 + *(int *)(v4 + 28));
    sub_1001440E4(v8, (void (*)(void))type metadata accessor for DailyComponentView);
    return v13 == v14;
  }
  else
  {
    sub_1001440E4(v8, (void (*)(void))type metadata accessor for DailyComponentView);
    sub_1001440E4((uint64_t)v11, (void (*)(void))type metadata accessor for DailyComponentView);
    return 0;
  }
}

uint64_t *sub_10052E818(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
    uint64_t v9 = v8[5];
    uint64_t v10 = (char *)v7 + v9;
    uint64_t v11 = (char *)a2 + v9;
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_10017DF08(&qword_100E65250);
    double v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    v13(v10, v11, v12);
    v13((char *)v7 + v8[6], (char *)a2 + v8[6], v12);
    v13((char *)v7 + v8[7], (char *)a2 + v8[7], v12);
    uint64_t v14 = v8[8];
    uint64_t v15 = (uint64_t *)((char *)v7 + v14);
    uint64_t v16 = (uint64_t *)((char *)a2 + v14);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = v8[9];
    uint64_t v19 = (uint64_t *)((char *)v7 + v18);
    uint64_t v20 = (uint64_t *)((char *)a2 + v18);
    uint64_t v21 = v20[1];
    *uint64_t v19 = *v20;
    v19[1] = v21;
    uint64_t v22 = a3[6];
    *(_OWORD *)((char *)v7 + a3[5]) = *(_OWORD *)((char *)a2 + a3[5]);
    uint64_t v23 = (uint64_t *)((char *)v7 + v22);
    uint64_t v24 = (uint64_t *)((char *)a2 + v22);
    uint64_t v25 = v24[1];
    *uint64_t v23 = *v24;
    v23[1] = v25;
    uint64_t v26 = a3[8];
    *(uint64_t *)((char *)v7 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    uint64_t v27 = (uint64_t *)((char *)v7 + v26);
    uint64_t v28 = (uint64_t *)((char *)a2 + v26);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    swift_retain();
    sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v29 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    }
    else
    {
      *uint64_t v27 = *v28;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v30 = a3[9];
    uint64_t v31 = (char *)v7 + v30;
    uint64_t v32 = (char *)a2 + v30;
    uint64_t v33 = *(void *)v32;
    char v34 = v32[8];
    sub_100195B7C(*(void *)v32, v34);
    *(void *)uint64_t v31 = v33;
    v31[8] = v34;
    uint64_t v35 = a3[10];
    uint64_t v36 = (char *)v7 + v35;
    uint64_t v37 = (char *)a2 + v35;
    uint64_t v38 = *(void *)v37;
    char v39 = v37[8];
    sub_100195B7C(*(void *)v37, v39);
    *(void *)uint64_t v36 = v38;
    v36[8] = v39;
    uint64_t v40 = a3[11];
    uint64_t v41 = (char *)v7 + v40;
    uint64_t v42 = (char *)a2 + v40;
    uint64_t v43 = type metadata accessor for Text.Measurements();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
    uint64_t v44 = a3[12];
    uint64_t v45 = (char *)v7 + v44;
    uint64_t v46 = (char *)a2 + v44;
    uint64_t v47 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, (uint64_t)v47))
    {
      uint64_t v48 = sub_10017DF08(&qword_100E6B8D0);
      memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      uint64_t v49 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v45, v46, v49);
      uint64_t v50 = v47[5];
      uint64_t v51 = &v45[v50];
      uint64_t v52 = &v46[v50];
      uint64_t v53 = *((void *)v52 + 1);
      *(void *)uint64_t v51 = *(void *)v52;
      *((void *)v51 + 1) = v53;
      uint64_t v54 = v47[6];
      double v55 = &v45[v54];
      uint64_t v56 = &v46[v54];
      uint64_t v98 = v13;
      uint64_t v57 = *((void *)v56 + 1);
      *(void *)double v55 = *(void *)v56;
      *((void *)v55 + 1) = v57;
      uint64_t v58 = v47[7];
      uint64_t v95 = &v46[v58];
      uint64_t v96 = &v45[v58];
      uint64_t v59 = type metadata accessor for TimeZone();
      uint64_t v94 = *(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v94(v96, v95, v59);
      v98(&v45[v47[8]], &v46[v47[8]], v12);
      v98(&v45[v47[9]], &v46[v47[9]], v12);
      uint64_t v60 = v47[10];
      id v61 = &v45[v60];
      int v62 = &v46[v60];
      uint64_t v63 = *((void *)v62 + 1);
      *(void *)id v61 = *(void *)v62;
      *((void *)v61 + 1) = v63;
      uint64_t v64 = v47[11];
      uint64_t v65 = &v45[v64];
      uint64_t v66 = &v46[v64];
      uint64_t v67 = *((void *)v66 + 1);
      *(void *)uint64_t v65 = *(void *)v66;
      *((void *)v65 + 1) = v67;
      *(void *)&v45[v47[12]] = *(void *)&v46[v47[12]];
      v45[v47[13]] = v46[v47[13]];
      uint64_t v68 = v47[14];
      uint64_t v69 = &v45[v68];
      uint64_t v70 = &v46[v68];
      uint64_t v71 = *((void *)v70 + 1);
      *(void *)uint64_t v69 = *(void *)v70;
      *((void *)v69 + 1) = v71;
      uint64_t v72 = v47[15];
      __dst = &v45[v72];
      uint64_t v99 = &v46[v72];
      uint64_t v73 = type metadata accessor for Precipitation();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v99, 1, v73))
      {
        uint64_t v74 = sub_10017DF08(&qword_100E6B8C8);
        memcpy(__dst, v99, *(void *)(*(void *)(v74 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 16))(__dst, v99, v73);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v73);
      }
      v45[v47[16]] = v46[v47[16]];
      uint64_t v75 = v47[17];
      uint64_t v76 = &v45[v75];
      uint64_t v77 = &v46[v75];
      uint64_t v78 = *((void *)v77 + 1);
      *(void *)uint64_t v76 = *(void *)v77;
      *((void *)v76 + 1) = v78;
      uint64_t v79 = v47[18];
      uint64_t v80 = &v45[v79];
      uint64_t v81 = &v46[v79];
      uint64_t v82 = *((void *)v81 + 1);
      *(void *)uint64_t v80 = *(void *)v81;
      *((void *)v80 + 1) = v82;
      uint64_t v83 = v47[19];
      uint64_t v84 = &v45[v83];
      uint64_t v85 = &v46[v83];
      uint64_t v86 = *((void *)v85 + 1);
      *(void *)uint64_t v84 = *(void *)v85;
      *((void *)v84 + 1) = v86;
      *(void *)&v45[v47[20]] = *(void *)&v46[v47[20]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, (uint64_t)v47);
    }
    uint64_t v87 = sub_10017DF08(&qword_100E7E838);
    *(void *)&v45[*(int *)(v87 + 28)] = *(void *)&v46[*(int *)(v87 + 28)];
    uint64_t v88 = a3[13];
    uint64_t v89 = (uint64_t *)((char *)v7 + v88);
    uint64_t v90 = (uint64_t *)((char *)a2 + v88);
    uint64_t v92 = *v90;
    uint64_t v91 = v90[1];
    *uint64_t v89 = v92;
    v89[1] = v91;
    swift_retain();
  }
  swift_retain();
  return v7;
}

char *sub_10052EE28(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_10017DF08(&qword_100E65250);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(&a1[v6[6]], &a2[v6[6]], v10);
  v11(&a1[v6[7]], &a2[v6[7]], v10);
  *(_OWORD *)&a1[v6[8]] = *(_OWORD *)&a2[v6[8]];
  *(_OWORD *)&a1[v6[9]] = *(_OWORD *)&a2[v6[9]];
  uint64_t v12 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(_OWORD *)&a1[v12] = *(_OWORD *)&a2[v12];
  uint64_t v13 = a3[8];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = type metadata accessor for ContentSizeCategory();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v14, v15, v17);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  uint64_t v18 = a3[9];
  uint64_t v19 = a3[10];
  uint64_t v20 = &a1[v18];
  uint64_t v21 = &a2[v18];
  *(void *)uint64_t v20 = *(void *)v21;
  v20[8] = v21[8];
  uint64_t v22 = &a1[v19];
  uint64_t v23 = &a2[v19];
  *(void *)uint64_t v22 = *(void *)v23;
  v22[8] = v23[8];
  uint64_t v24 = a3[11];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  uint64_t v27 = type metadata accessor for Text.Measurements();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
  uint64_t v28 = a3[12];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  uint64_t v31 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, (uint64_t)v31))
  {
    uint64_t v32 = sub_10017DF08(&qword_100E6B8D0);
    memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    uint64_t v33 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v29, v30, v33);
    *(_OWORD *)&v29[v31[5]] = *(_OWORD *)&v30[v31[5]];
    *(_OWORD *)&v29[v31[6]] = *(_OWORD *)&v30[v31[6]];
    uint64_t v34 = v31[7];
    uint64_t v45 = v11;
    uint64_t v35 = &v29[v34];
    uint64_t v36 = &v30[v34];
    uint64_t v37 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
    v45(&v29[v31[8]], &v30[v31[8]], v10);
    v45(&v29[v31[9]], &v30[v31[9]], v10);
    *(_OWORD *)&v29[v31[10]] = *(_OWORD *)&v30[v31[10]];
    *(_OWORD *)&v29[v31[11]] = *(_OWORD *)&v30[v31[11]];
    *(void *)&v29[v31[12]] = *(void *)&v30[v31[12]];
    v29[v31[13]] = v30[v31[13]];
    *(_OWORD *)&v29[v31[14]] = *(_OWORD *)&v30[v31[14]];
    uint64_t v38 = v31[15];
    char v39 = &v29[v38];
    uint64_t v40 = &v30[v38];
    uint64_t v41 = type metadata accessor for Precipitation();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v41))
    {
      uint64_t v42 = sub_10017DF08(&qword_100E6B8C8);
      memcpy(v39, v40, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v39, v40, v41);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v41);
    }
    v29[v31[16]] = v30[v31[16]];
    *(_OWORD *)&v29[v31[17]] = *(_OWORD *)&v30[v31[17]];
    *(_OWORD *)&v29[v31[18]] = *(_OWORD *)&v30[v31[18]];
    *(_OWORD *)&v29[v31[19]] = *(_OWORD *)&v30[v31[19]];
    *(void *)&v29[v31[20]] = *(void *)&v30[v31[20]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, (uint64_t)v31);
  }
  uint64_t v43 = sub_10017DF08(&qword_100E7E838);
  *(void *)&v29[*(int *)(v43 + 28)] = *(void *)&v30[*(int *)(v43 + 28)];
  *(_OWORD *)&a1[a3[13]] = *(_OWORD *)&a2[a3[13]];
  return a1;
}

char *sub_10052F2F4(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_10017DF08(&qword_100E65250);
  uint64_t v122 = *(void *)(v10 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v122 + 40);
  v11(v8, v9, v10);
  v11(&a1[v6[6]], &a2[v6[6]], v10);
  v11(&a1[v6[7]], &a2[v6[7]], v10);
  uint64_t v12 = v6[8];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = (uint64_t *)&a2[v12];
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = v6[9];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = (uint64_t *)&a2[v17];
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *(void *)uint64_t v18 = v21;
  *((void *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[5];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = *((void *)v24 + 1);
  *(void *)uint64_t v23 = *(void *)v24;
  swift_unknownObjectRelease();
  *((void *)v23 + 1) = v25;
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  swift_release();
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  if (a1 != a2)
  {
    uint64_t v26 = a3[8];
    uint64_t v27 = &a1[v26];
    uint64_t v28 = &a2[v26];
    sub_100178110((uint64_t)&a1[v26], &qword_100E63BC8);
    uint64_t v29 = sub_10017DF08(&qword_100E63BC8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v30 = type metadata accessor for ContentSizeCategory();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v27, v28, v30);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
  }
  uint64_t v31 = a3[9];
  uint64_t v32 = &a1[v31];
  uint64_t v33 = &a2[v31];
  uint64_t v34 = *(void *)v33;
  LOBYTE(v33) = v33[8];
  uint64_t v35 = *(void *)v32;
  char v36 = v32[8];
  *(void *)uint64_t v32 = v34;
  v32[8] = (char)v33;
  sub_10018F6D8(v35, v36);
  uint64_t v37 = a3[10];
  uint64_t v38 = &a1[v37];
  char v39 = &a2[v37];
  uint64_t v40 = *(void *)v39;
  LOBYTE(v39) = v39[8];
  uint64_t v41 = *(void *)v38;
  char v42 = v38[8];
  *(void *)uint64_t v38 = v40;
  v38[8] = (char)v39;
  sub_10018F6D8(v41, v42);
  uint64_t v43 = a3[11];
  uint64_t v44 = &a1[v43];
  uint64_t v45 = &a2[v43];
  uint64_t v46 = type metadata accessor for Text.Measurements();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 40))(v44, v45, v46);
  uint64_t v47 = a3[12];
  uint64_t v48 = &a1[v47];
  uint64_t v49 = &a2[v47];
  uint64_t v50 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  int v51 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, (uint64_t)v50);
  int v52 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, (uint64_t)v50);
  if (!v51)
  {
    if (v52)
    {
      sub_1001440E4((uint64_t)v48, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
      goto LABEL_11;
    }
    uint64_t v65 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 40))(v48, v49, v65);
    uint64_t v66 = v50[5];
    uint64_t v67 = &v48[v66];
    uint64_t v68 = (uint64_t *)&v49[v66];
    uint64_t v70 = *v68;
    uint64_t v69 = v68[1];
    *(void *)uint64_t v67 = v70;
    *((void *)v67 + 1) = v69;
    swift_bridgeObjectRelease();
    uint64_t v71 = v50[6];
    uint64_t v72 = &v48[v71];
    uint64_t v73 = (uint64_t *)&v49[v71];
    uint64_t v75 = *v73;
    uint64_t v74 = v73[1];
    *(void *)uint64_t v72 = v75;
    *((void *)v72 + 1) = v74;
    swift_bridgeObjectRelease();
    uint64_t v76 = v50[7];
    uint64_t v77 = &v48[v76];
    uint64_t v123 = &v49[v76];
    uint64_t v78 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 40))(v77, v123, v78);
    v11(&v48[v50[8]], &v49[v50[8]], v10);
    v11(&v48[v50[9]], &v49[v50[9]], v10);
    uint64_t v79 = v50[10];
    uint64_t v80 = &v48[v79];
    uint64_t v81 = (uint64_t *)&v49[v79];
    uint64_t v83 = *v81;
    uint64_t v82 = v81[1];
    *(void *)uint64_t v80 = v83;
    *((void *)v80 + 1) = v82;
    swift_bridgeObjectRelease();
    uint64_t v84 = v50[11];
    uint64_t v85 = &v48[v84];
    uint64_t v86 = (uint64_t *)&v49[v84];
    uint64_t v88 = *v86;
    uint64_t v87 = v86[1];
    *(void *)uint64_t v85 = v88;
    *((void *)v85 + 1) = v87;
    swift_bridgeObjectRelease();
    *(void *)&v48[v50[12]] = *(void *)&v49[v50[12]];
    v48[v50[13]] = v49[v50[13]];
    uint64_t v89 = v50[14];
    uint64_t v90 = &v48[v89];
    uint64_t v91 = (uint64_t *)&v49[v89];
    uint64_t v93 = *v91;
    uint64_t v92 = v91[1];
    *(void *)uint64_t v90 = v93;
    *((void *)v90 + 1) = v92;
    swift_bridgeObjectRelease();
    uint64_t v94 = v50[15];
    uint64_t v95 = &v48[v94];
    uint64_t v96 = &v49[v94];
    uint64_t v97 = type metadata accessor for Precipitation();
    int v98 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v95, 1, v97);
    int v99 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v96, 1, v97);
    if (v98)
    {
      if (!v99)
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 32))(v95, v96, v97);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v95, 0, 1, v97);
LABEL_20:
        v48[v50[16]] = v49[v50[16]];
        uint64_t v102 = v50[17];
        uint64_t v103 = &v48[v102];
        uint64_t v104 = (uint64_t *)&v49[v102];
        uint64_t v106 = *v104;
        uint64_t v105 = v104[1];
        *(void *)uint64_t v103 = v106;
        *((void *)v103 + 1) = v105;
        swift_bridgeObjectRelease();
        uint64_t v107 = v50[18];
        uint64_t v108 = &v48[v107];
        uint64_t v109 = (uint64_t *)&v49[v107];
        uint64_t v111 = *v109;
        uint64_t v110 = v109[1];
        *(void *)uint64_t v108 = v111;
        *((void *)v108 + 1) = v110;
        swift_bridgeObjectRelease();
        uint64_t v112 = v50[19];
        uint64_t v113 = &v48[v112];
        uint64_t v114 = (uint64_t *)&v49[v112];
        uint64_t v116 = *v114;
        uint64_t v115 = v114[1];
        *(void *)uint64_t v113 = v116;
        *((void *)v113 + 1) = v115;
        swift_bridgeObjectRelease();
        *(void *)&v48[v50[20]] = *(void *)&v49[v50[20]];
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v100 = *(void *)(v97 - 8);
      if (!v99)
      {
        (*(void (**)(char *, char *, uint64_t))(v100 + 40))(v95, v96, v97);
        goto LABEL_20;
      }
      (*(void (**)(char *, uint64_t))(v100 + 8))(v95, v97);
    }
    uint64_t v101 = sub_10017DF08(&qword_100E6B8C8);
    memcpy(v95, v96, *(void *)(*(void *)(v101 - 8) + 64));
    goto LABEL_20;
  }
  if (v52)
  {
LABEL_11:
    uint64_t v64 = sub_10017DF08(&qword_100E6B8D0);
    memcpy(v48, v49, *(void *)(*(void *)(v64 - 8) + 64));
    goto LABEL_21;
  }
  uint64_t v53 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v48, v49, v53);
  *(_OWORD *)&v48[v50[5]] = *(_OWORD *)&v49[v50[5]];
  *(_OWORD *)&v48[v50[6]] = *(_OWORD *)&v49[v50[6]];
  uint64_t v54 = v50[7];
  double v55 = &v48[v54];
  uint64_t v56 = &v49[v54];
  uint64_t v57 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
  uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v122 + 32);
  v58(&v48[v50[8]], &v49[v50[8]], v10);
  v58(&v48[v50[9]], &v49[v50[9]], v10);
  *(_OWORD *)&v48[v50[10]] = *(_OWORD *)&v49[v50[10]];
  *(_OWORD *)&v48[v50[11]] = *(_OWORD *)&v49[v50[11]];
  *(void *)&v48[v50[12]] = *(void *)&v49[v50[12]];
  v48[v50[13]] = v49[v50[13]];
  *(_OWORD *)&v48[v50[14]] = *(_OWORD *)&v49[v50[14]];
  uint64_t v59 = v50[15];
  uint64_t v60 = &v48[v59];
  id v61 = &v49[v59];
  uint64_t v62 = type metadata accessor for Precipitation();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v62))
  {
    uint64_t v63 = sub_10017DF08(&qword_100E6B8C8);
    memcpy(v60, v61, *(void *)(*(void *)(v63 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v62);
  }
  v48[v50[16]] = v49[v50[16]];
  *(_OWORD *)&v48[v50[17]] = *(_OWORD *)&v49[v50[17]];
  *(_OWORD *)&v48[v50[18]] = *(_OWORD *)&v49[v50[18]];
  *(_OWORD *)&v48[v50[19]] = *(_OWORD *)&v49[v50[19]];
  *(void *)&v48[v50[20]] = *(void *)&v49[v50[20]];
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, (uint64_t)v50);
LABEL_21:
  uint64_t v117 = sub_10017DF08(&qword_100E7E838);
  *(void *)&v48[*(int *)(v117 + 28)] = *(void *)&v49[*(int *)(v117 + 28)];
  swift_release();
  uint64_t v118 = a3[13];
  uint64_t v119 = &a1[v118];
  uint64_t v120 = &a2[v118];
  *(void *)&a1[v118] = *(void *)v120;
  swift_release();
  *((void *)v119 + 1) = *((void *)v120 + 1);
  return a1;
}

uint64_t sub_10052FBB4(uint64_t a1, uint64_t a2, int *a3)
{
  sub_1001A0988();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == v3)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v4;
  }
  else
  {
    if (v3 == 0x7FFFFFFF) {
      return sub_10017E5BC();
    }
    sub_10017DF08((uint64_t *)&unk_100EAA530);
    sub_100162F30();
    if (*(_DWORD *)(v12 + 84) == v3)
    {
      uint64_t v8 = v11;
      uint64_t v13 = a3[8];
    }
    else
    {
      type metadata accessor for Text.Measurements();
      sub_100162F30();
      if (*(_DWORD *)(v15 + 84) == v3)
      {
        uint64_t v8 = v14;
        uint64_t v13 = a3[11];
      }
      else
      {
        uint64_t v8 = sub_10017DF08(&qword_100E7E838);
        uint64_t v13 = a3[12];
      }
    }
    uint64_t v9 = v4 + v13;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, v3, v8);
}

void sub_10052FC94(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1001A0988();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = v5;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(void *)(v5 + a4[5]) = (v4 - 1);
      return;
    }
    sub_10017DF08((uint64_t *)&unk_100EAA530);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[8];
    }
    else
    {
      type metadata accessor for Text.Measurements();
      sub_100162F30();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[11];
      }
      else
      {
        uint64_t v10 = sub_10017DF08(&qword_100E7E838);
        uint64_t v14 = a4[12];
      }
    }
    uint64_t v11 = v5 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, v4, v4, v10);
}

uint64_t sub_10052FD84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v68 = a3;
  uint64_t v77 = a1;
  uint64_t v66 = type metadata accessor for AutomationInfo(0);
  __chkstk_darwin(v66);
  uint64_t v67 = (uint64_t *)((char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_10017DF08(&qword_100E6D908);
  __chkstk_darwin(v5 - 8);
  uint64_t v75 = (uint64_t *)((char *)&v64 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v74 = sub_10017DF08(&qword_100E6B8C0);
  __chkstk_darwin(v74);
  uint64_t v76 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E6B9A0);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10017DF08(&qword_100E6B8D0);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v71 = (uint64_t)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v64 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v64 - v18;
  uint64_t v20 = type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v65 = (uint64_t)&v64 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v64 - v23;
  uint64_t v25 = (int *)type metadata accessor for DailyComponentForecastRowViewLargeText();
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v64 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = v24;
  sub_100145458(a2, (uint64_t)v24, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
  uint64_t v28 = type metadata accessor for DailyComponentRowView(0);
  uint64_t v29 = *(int *)(v28 + 20);
  uint64_t v30 = *(int *)(v28 + 24);
  uint64_t v70 = v28;
  uint64_t v31 = (uint64_t *)((char *)v69 + v29);
  uint64_t v32 = v31[1];
  uint64_t v72 = *v31;
  uint64_t v33 = *(uint64_t *)((char *)v69 + v30);
  uint64_t v34 = a2;
  uint64_t v35 = (uint64_t)v11;
  char v36 = &qword_100E6B8D0;
  uint64_t v37 = v69;
  sub_100145458(v34, (uint64_t)v19, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v20);
  sub_1001465F8(*v37, (uint64_t)v17);
  uint64_t v38 = v35 + *(int *)(v9 + 56);
  sub_10006DF38((uint64_t)v19, v35, &qword_100E6B8D0);
  sub_10006DF38((uint64_t)v17, v38, &qword_100E6B8D0);
  if (_s7Weather24LocationCompositionStateOwet_0(v35, 1, v20) == 1)
  {
    swift_retain();
    sub_100178110((uint64_t)v17, &qword_100E6B8D0);
    sub_100178110((uint64_t)v19, &qword_100E6B8D0);
    if (_s7Weather24LocationCompositionStateOwet_0(v38, 1, v20) == 1)
    {
      char v39 = -1;
    }
    else
    {
      char v36 = &qword_100E6B9A0;
      char v39 = 0;
    }
    uint64_t v40 = v32;
  }
  else
  {
    sub_10006DF38(v35, v71, &qword_100E6B8D0);
    if (_s7Weather24LocationCompositionStateOwet_0(v38, 1, v20) == 1)
    {
      uint64_t v40 = v32;
      swift_retain();
      sub_100178110((uint64_t)v17, &qword_100E6B8D0);
      sub_100178110((uint64_t)v19, &qword_100E6B8D0);
      sub_1001440E4(v71, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
      char v39 = 0;
      char v36 = &qword_100E6B9A0;
    }
    else
    {
      uint64_t v41 = v65;
      sub_100144A28(v38, v65, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
      uint64_t v64 = v32;
      swift_retain();
      uint64_t v42 = v71;
      char v39 = sub_1001444F4(v71, v41);
      sub_1001440E4(v41, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
      char v36 = &qword_100E6B8D0;
      sub_100178110((uint64_t)v17, &qword_100E6B8D0);
      sub_100178110((uint64_t)v19, &qword_100E6B8D0);
      uint64_t v40 = v64;
      sub_1001440E4(v42, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
    }
  }
  sub_100178110(v35, v36);
  uint64_t v43 = (uint64_t)v76;
  Binding.projectedValue.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v45 = v75;
  *uint64_t v75 = KeyPath;
  sub_10017DF08(&qword_100E66E50);
  swift_storeEnumTagMultiPayload();
  uint64_t v46 = swift_getKeyPath();
  sub_100144A28((uint64_t)v73, (uint64_t)v27, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
  sub_10024D364((uint64_t)v45, (uint64_t)&v27[v25[5]], &qword_100E6D908);
  uint64_t v47 = &v27[v25[6]];
  *(void *)uint64_t v47 = v46;
  v47[8] = 0;
  uint64_t v48 = &v27[v25[7]];
  *(void *)uint64_t v48 = swift_getKeyPath();
  v48[8] = 0;
  uint64_t v49 = &v27[v25[8]];
  *(void *)uint64_t v49 = v72;
  *((void *)v49 + 1) = v40;
  *(void *)&v27[v25[9]] = v33;
  v27[v25[10]] = v39 & 1;
  uint64_t v50 = (uint64_t *)&v27[v25[11]];
  type metadata accessor for FrameContainer();
  uint64_t v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = 0u;
  *(_OWORD *)(v51 + 32) = 0u;
  ObservationRegistrar.init()();
  uint64_t v78 = v51;
  State.init(wrappedValue:)();
  unint64_t v52 = v80;
  uint64_t *v50 = v79;
  v50[1] = v52;
  uint64_t result = sub_10024D364(v43, (uint64_t)&v27[v25[12]], &qword_100E6B8C0);
  uint64_t v79 = 1601790308;
  unint64_t v80 = 0xE400000000000000;
  if (__OFADD__(v77, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v78 = v77 + 1;
    v54._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v54);
    swift_bridgeObjectRelease();
    unint64_t v55 = v80;
    uint64_t v56 = v67;
    *uint64_t v67 = v79;
    v56[1] = v55;
    type metadata accessor for AutomationCellInfo(0);
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    sub_10048D19C((uint64_t)v56, v57, v58, v59, v60, v61, v62, v63, v64, v65, v66, (uint64_t)v67, v68, (uint64_t)v69, v70, v71, v72, (uint64_t)v73, v74,
      (uint64_t)v75);
    sub_1001440E4((uint64_t)v56, (void (*)(void))type metadata accessor for AutomationInfo);
    return sub_1001440E4((uint64_t)v27, (void (*)(void))type metadata accessor for DailyComponentForecastRowViewLargeText);
  }
  return result;
}

uint64_t sub_1005304B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E79AA8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t v10 = sub_10017DF08(&qword_100E7EA58);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v21 - v14;
  uint64_t v16 = (int *)type metadata accessor for DailyComponentRowView(0);
  uint64_t v17 = *(void *)(a1 + v16[8]);
  uint64_t v18 = a1 + v16[7];
  sub_100143434(v17, v18, (uint64_t)v15, *(double *)(a1 + v16[11]), *(double *)(a1 + v16[9]), *(double *)(a1 + v16[9] + 8), *(double *)(a1 + v16[10]), *(double *)(a1 + v16[10] + 8));
  sub_10052FD84(v17, v18, (uint64_t)v9);
  sub_10006DF38((uint64_t)v15, (uint64_t)v13, &qword_100E7EA58);
  sub_10006DF38((uint64_t)v9, (uint64_t)v7, &qword_100E79AA8);
  sub_10006DF38((uint64_t)v13, a2, &qword_100E7EA58);
  uint64_t v19 = sub_10017DF08(&qword_100E7EAC0);
  sub_10006DF38((uint64_t)v7, a2 + *(int *)(v19 + 48), &qword_100E79AA8);
  sub_100178110((uint64_t)v9, &qword_100E79AA8);
  sub_100178110((uint64_t)v15, &qword_100E7EA58);
  sub_100178110((uint64_t)v7, &qword_100E79AA8);
  return sub_100178110((uint64_t)v13, &qword_100E7EA58);
}

uint64_t sub_1005306A4()
{
  uint64_t v1 = (int *)type metadata accessor for DailyComponentView(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  type metadata accessor for DailyForecastComponentViewModel(0);
  sub_10017DF08(&qword_100E65250);
  sub_100162E4C();
  uint64_t v4 = *(void (**)(void))(v3 + 8);
  sub_10017FA48();
  v4();
  sub_10017FA48();
  v4();
  sub_10017FA48();
  v4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  sub_10017DF08(&qword_100E63BC8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for ContentSizeCategory();
    sub_100162E4C();
    sub_100162F0C();
    v5();
  }
  else
  {
    swift_release();
  }
  sub_10018F6D8(*(void *)(v2 + v1[9]), *(unsigned char *)(v2 + v1[9] + 8));
  sub_10018F6D8(*(void *)(v2 + v1[10]), *(unsigned char *)(v2 + v1[10] + 8));
  type metadata accessor for Text.Measurements();
  sub_100162E4C();
  sub_100162F0C();
  v6();
  uint64_t v7 = v2 + v1[12];
  uint64_t v8 = type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8))
  {
    type metadata accessor for Date();
    sub_100162E4C();
    sub_100162F0C();
    v9();
    sub_1001631A8();
    sub_1001631A8();
    type metadata accessor for TimeZone();
    sub_100162E4C();
    sub_100162F0C();
    v10();
    sub_10017FA48();
    v4();
    sub_10017FA48();
    v4();
    sub_1001631A8();
    sub_1001631A8();
    sub_1001631A8();
    uint64_t v11 = v7 + *(int *)(v8 + 60);
    uint64_t v12 = type metadata accessor for Precipitation();
    if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
    }
    sub_1001631A8();
    sub_1001631A8();
    sub_1001631A8();
    swift_bridgeObjectRelease();
  }
  sub_10017DF08(&qword_100E7E838);
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100530A70()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100530AA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_10019CC90();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void *sub_100530AD8(char *a1, char *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *(void *)a2;
  *(void *)a1 = *(void *)a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v63 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v8 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
    uint64_t v9 = v8[5];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_10017DF08(&qword_100E65250);
    uint64_t v135 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    v135(v10, v11, v12);
    v135(&a1[v8[6]], &a2[v8[6]], v12);
    v135(&a1[v8[7]], &a2[v8[7]], v12);
    uint64_t v13 = v8[8];
    uint64_t v14 = &a1[v13];
    uint64_t v15 = &a2[v13];
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)uint64_t v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    uint64_t v17 = v8[9];
    uint64_t v18 = &a1[v17];
    uint64_t v19 = &a2[v17];
    uint64_t v20 = *((void *)v19 + 1);
    *(void *)uint64_t v18 = *(void *)v19;
    *((void *)v18 + 1) = v20;
    uint64_t v21 = a3[5];
    uint64_t v22 = a3[6];
    uint64_t v23 = &a1[v21];
    uint64_t v24 = (uint64_t *)&a2[v21];
    uint64_t v25 = *v24;
    uint64_t v26 = v24[1];
    uint64_t v27 = *(void *)&a2[v22];
    *(void *)uint64_t v23 = v25;
    *((void *)v23 + 1) = v26;
    *(void *)&a1[v22] = v27;
    uint64_t v133 = a3;
    uint64_t v134 = a1;
    uint64_t v28 = a3[7];
    uint64_t v29 = &a1[v28];
    uint64_t v30 = &a2[v28];
    uint64_t v31 = type metadata accessor for Date();
    uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v127 = v32;
    uint64_t v128 = v31;
    v32(v29, v30, v31);
    uint64_t v33 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
    uint64_t v34 = v33[5];
    uint64_t v35 = &v29[v34];
    char v36 = &v30[v34];
    uint64_t v37 = *((void *)v36 + 1);
    *(void *)uint64_t v35 = *(void *)v36;
    *((void *)v35 + 1) = v37;
    uint64_t v38 = v33[6];
    char v39 = &v29[v38];
    uint64_t v40 = &v30[v38];
    uint64_t v41 = *((void *)v40 + 1);
    *(void *)char v39 = *(void *)v40;
    *((void *)v39 + 1) = v41;
    uint64_t v42 = v33[7];
    uint64_t v129 = &v30[v42];
    char v131 = &v29[v42];
    uint64_t v43 = type metadata accessor for TimeZone();
    uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v45 = v129;
    uint64_t v130 = v43;
    uint64_t v126 = v44;
    v44(v131, v45, v43);
    v135(&v29[v33[8]], &v30[v33[8]], v12);
    uint64_t v132 = v12;
    v135(&v29[v33[9]], &v30[v33[9]], v12);
    uint64_t v46 = v33[10];
    uint64_t v47 = &v29[v46];
    uint64_t v48 = &v30[v46];
    uint64_t v49 = *((void *)v48 + 1);
    *(void *)uint64_t v47 = *(void *)v48;
    *((void *)v47 + 1) = v49;
    uint64_t v50 = v33[11];
    uint64_t v51 = &v29[v50];
    unint64_t v52 = &v30[v50];
    uint64_t v53 = *((void *)v52 + 1);
    *(void *)uint64_t v51 = *(void *)v52;
    *((void *)v51 + 1) = v53;
    *(void *)&v29[v33[12]] = *(void *)&v30[v33[12]];
    v29[v33[13]] = v30[v33[13]];
    uint64_t v54 = v33[14];
    unint64_t v55 = &v29[v54];
    uint64_t v56 = &v30[v54];
    uint64_t v57 = *((void *)v56 + 1);
    *(void *)unint64_t v55 = *(void *)v56;
    *((void *)v55 + 1) = v57;
    uint64_t v58 = v33[15];
    uint64_t v59 = &v29[v58];
    uint64_t v60 = &v30[v58];
    uint64_t v61 = type metadata accessor for Precipitation();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v61))
    {
      uint64_t v62 = sub_10017DF08(&qword_100E6B8C8);
      memcpy(v59, v60, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v59, 0, 1, v61);
    }
    v29[v33[16]] = v30[v33[16]];
    uint64_t v64 = v33[17];
    uint64_t v65 = &v29[v64];
    uint64_t v66 = &v30[v64];
    uint64_t v67 = *((void *)v66 + 1);
    *(void *)uint64_t v65 = *(void *)v66;
    *((void *)v65 + 1) = v67;
    uint64_t v68 = v33[18];
    uint64_t v69 = &v29[v68];
    uint64_t v70 = &v30[v68];
    uint64_t v71 = *((void *)v70 + 1);
    *(void *)uint64_t v69 = *(void *)v70;
    *((void *)v69 + 1) = v71;
    uint64_t v72 = v33[19];
    uint64_t v73 = &v29[v72];
    uint64_t v74 = &v30[v72];
    uint64_t v75 = *((void *)v74 + 1);
    *(void *)uint64_t v73 = *(void *)v74;
    *((void *)v73 + 1) = v75;
    *(void *)&v29[v33[20]] = *(void *)&v30[v33[20]];
    uint64_t v63 = v134;
    uint64_t v76 = v133[9];
    *(void *)((char *)v134 + v133[8]) = *(void *)&a2[v133[8]];
    *(_OWORD *)((char *)v134 + v76) = *(_OWORD *)&a2[v76];
    uint64_t v77 = v133[11];
    *(_OWORD *)((char *)v134 + v133[10]) = *(_OWORD *)&a2[v133[10]];
    *(void *)((char *)v134 + v77) = *(void *)&a2[v77];
    uint64_t v78 = v133[13];
    *((unsigned char *)v134 + v133[12]) = a2[v133[12]];
    uint64_t v79 = (void *)((char *)v134 + v78);
    unint64_t v80 = &a2[v78];
    uint64_t v81 = *(void *)&a2[v78 + 8];
    void *v79 = *(void *)&a2[v78];
    v79[1] = v81;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v82 = *(int *)(sub_10017DF08(&qword_100E6B8C0) + 32);
    uint64_t v83 = (char *)v79 + v82;
    uint64_t v84 = &v80[v82];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v80[v82], 1, (uint64_t)v33))
    {
      uint64_t v85 = sub_10017DF08(&qword_100E6B8D0);
      memcpy(v83, v84, *(void *)(*(void *)(v85 - 8) + 64));
    }
    else
    {
      v127(v83, v84, v128);
      uint64_t v86 = v33[5];
      uint64_t v87 = &v83[v86];
      uint64_t v88 = &v84[v86];
      uint64_t v89 = *((void *)v88 + 1);
      *(void *)uint64_t v87 = *(void *)v88;
      *((void *)v87 + 1) = v89;
      uint64_t v90 = v33[6];
      uint64_t v91 = &v83[v90];
      uint64_t v92 = &v84[v90];
      uint64_t v93 = *((void *)v92 + 1);
      *(void *)uint64_t v91 = *(void *)v92;
      *((void *)v91 + 1) = v93;
      uint64_t v94 = v33[7];
      uint64_t v95 = &v83[v94];
      uint64_t v96 = &v84[v94];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v126(v95, v96, v130);
      v135(&v83[v33[8]], &v84[v33[8]], v132);
      v135(&v83[v33[9]], &v84[v33[9]], v132);
      uint64_t v97 = v33[10];
      int v98 = &v83[v97];
      int v99 = &v84[v97];
      uint64_t v100 = *((void *)v99 + 1);
      *(void *)int v98 = *(void *)v99;
      *((void *)v98 + 1) = v100;
      uint64_t v101 = v33[11];
      uint64_t v102 = &v83[v101];
      uint64_t v103 = &v84[v101];
      uint64_t v104 = *((void *)v103 + 1);
      *(void *)uint64_t v102 = *(void *)v103;
      *((void *)v102 + 1) = v104;
      *(void *)&v83[v33[12]] = *(void *)&v84[v33[12]];
      v83[v33[13]] = v84[v33[13]];
      uint64_t v105 = v33[14];
      uint64_t v106 = &v83[v105];
      uint64_t v107 = &v84[v105];
      uint64_t v108 = *((void *)v107 + 1);
      *(void *)uint64_t v106 = *(void *)v107;
      *((void *)v106 + 1) = v108;
      uint64_t v109 = v33[15];
      uint64_t v110 = &v83[v109];
      uint64_t v111 = &v84[v109];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v111, 1, v61))
      {
        uint64_t v112 = sub_10017DF08(&qword_100E6B8C8);
        memcpy(v110, v111, *(void *)(*(void *)(v112 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v110, v111, v61);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v110, 0, 1, v61);
      }
      v83[v33[16]] = v84[v33[16]];
      uint64_t v113 = v33[17];
      uint64_t v114 = &v83[v113];
      uint64_t v115 = &v84[v113];
      uint64_t v116 = *((void *)v115 + 1);
      *(void *)uint64_t v114 = *(void *)v115;
      *((void *)v114 + 1) = v116;
      uint64_t v117 = v33[18];
      uint64_t v118 = &v83[v117];
      uint64_t v119 = &v84[v117];
      uint64_t v120 = *((void *)v119 + 1);
      *(void *)uint64_t v118 = *(void *)v119;
      *((void *)v118 + 1) = v120;
      uint64_t v121 = v33[19];
      uint64_t v122 = &v83[v121];
      uint64_t v123 = &v84[v121];
      uint64_t v124 = *((void *)v123 + 1);
      *(void *)uint64_t v122 = *(void *)v123;
      *((void *)v122 + 1) = v124;
      *(void *)&v83[v33[20]] = *(void *)&v84[v33[20]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v83, 0, 1, (uint64_t)v33);
    }
  }
  return v63;
}

void *sub_100531224(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_10017DF08(&qword_100E65250);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  v11(&a1[v6[6]], &a2[v6[6]], v10);
  v11(&a1[v6[7]], &a2[v6[7]], v10);
  *(_OWORD *)&a1[v6[8]] = *(_OWORD *)&a2[v6[8]];
  *(_OWORD *)&a1[v6[9]] = *(_OWORD *)&a2[v6[9]];
  uint64_t v12 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  *(void *)&a1[v12] = *(void *)&a2[v12];
  uint64_t v13 = a3[7];
  uint64_t v48 = a1;
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = type metadata accessor for Date();
  uint64_t v45 = *(void (**)(char *, char *))(*(void *)(v16 - 8) + 32);
  uint64_t v46 = v16;
  v45(v14, v15);
  uint64_t v17 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  *(_OWORD *)&v14[v17[5]] = *(_OWORD *)&v15[v17[5]];
  *(_OWORD *)&v14[v17[6]] = *(_OWORD *)&v15[v17[6]];
  uint64_t v18 = v17[7];
  uint64_t v19 = &v14[v18];
  uint64_t v20 = &v15[v18];
  uint64_t v21 = type metadata accessor for TimeZone();
  uint64_t v43 = *(void (**)(char *, char *))(*(void *)(v21 - 8) + 32);
  uint64_t v44 = v21;
  v43(v19, v20);
  v11(&v14[v17[8]], &v15[v17[8]], v10);
  uint64_t v47 = v11;
  v11(&v14[v17[9]], &v15[v17[9]], v10);
  *(_OWORD *)&v14[v17[10]] = *(_OWORD *)&v15[v17[10]];
  *(_OWORD *)&v14[v17[11]] = *(_OWORD *)&v15[v17[11]];
  *(void *)&v14[v17[12]] = *(void *)&v15[v17[12]];
  v14[v17[13]] = v15[v17[13]];
  *(_OWORD *)&v14[v17[14]] = *(_OWORD *)&v15[v17[14]];
  uint64_t v22 = v17[15];
  uint64_t v23 = &v14[v22];
  uint64_t v24 = &v15[v22];
  uint64_t v25 = type metadata accessor for Precipitation();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25))
  {
    uint64_t v26 = sub_10017DF08(&qword_100E6B8C8);
    memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v23, v24, v25);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v25);
  }
  v14[v17[16]] = v15[v17[16]];
  *(_OWORD *)&v14[v17[17]] = *(_OWORD *)&v15[v17[17]];
  *(_OWORD *)&v14[v17[18]] = *(_OWORD *)&v15[v17[18]];
  *(_OWORD *)&v14[v17[19]] = *(_OWORD *)&v15[v17[19]];
  *(void *)&v14[v17[20]] = *(void *)&v15[v17[20]];
  uint64_t v27 = a3[9];
  *(void *)((char *)v48 + a3[8]) = *(void *)&a2[a3[8]];
  *(_OWORD *)((char *)v48 + v27) = *(_OWORD *)&a2[v27];
  uint64_t v28 = a3[11];
  *(_OWORD *)((char *)v48 + a3[10]) = *(_OWORD *)&a2[a3[10]];
  *(void *)((char *)v48 + v28) = *(void *)&a2[v28];
  uint64_t v29 = a3[13];
  *((unsigned char *)v48 + a3[12]) = a2[a3[12]];
  uint64_t v30 = (void *)((char *)v48 + v29);
  uint64_t v31 = &a2[v29];
  uint64_t v32 = *(void *)&a2[v29];
  uint64_t v33 = *(void *)&a2[v29 + 8];
  void *v30 = v32;
  v30[1] = v33;
  uint64_t v34 = *(int *)(sub_10017DF08(&qword_100E6B8C0) + 32);
  uint64_t v35 = (char *)v30 + v34;
  char v36 = &v31[v34];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v31[v34], 1, (uint64_t)v17))
  {
    uint64_t v37 = sub_10017DF08(&qword_100E6B8D0);
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v45)(v35, v36, v46);
    *(_OWORD *)&v35[v17[5]] = *(_OWORD *)&v36[v17[5]];
    *(_OWORD *)&v35[v17[6]] = *(_OWORD *)&v36[v17[6]];
    ((void (*)(char *, char *, uint64_t))v43)(&v35[v17[7]], &v36[v17[7]], v44);
    v47(&v35[v17[8]], &v36[v17[8]], v10);
    v47(&v35[v17[9]], &v36[v17[9]], v10);
    *(_OWORD *)&v35[v17[10]] = *(_OWORD *)&v36[v17[10]];
    *(_OWORD *)&v35[v17[11]] = *(_OWORD *)&v36[v17[11]];
    *(void *)&v35[v17[12]] = *(void *)&v36[v17[12]];
    v35[v17[13]] = v36[v17[13]];
    *(_OWORD *)&v35[v17[14]] = *(_OWORD *)&v36[v17[14]];
    uint64_t v38 = v17[15];
    char v39 = &v35[v38];
    uint64_t v40 = &v36[v38];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v36[v38], 1, v25))
    {
      uint64_t v41 = sub_10017DF08(&qword_100E6B8C8);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(v39, v40, v25);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v25);
    }
    v35[v17[16]] = v36[v17[16]];
    *(_OWORD *)&v35[v17[17]] = *(_OWORD *)&v36[v17[17]];
    *(_OWORD *)&v35[v17[18]] = *(_OWORD *)&v36[v17[18]];
    *(_OWORD *)&v35[v17[19]] = *(_OWORD *)&v36[v17[19]];
    *(void *)&v35[v17[20]] = *(void *)&v36[v17[20]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, (uint64_t)v17);
  }
  return v48;
}

void *sub_1005317C0(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for DailyForecastComponentViewModel(0);
  uint64_t v7 = v6[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_10017DF08(&qword_100E65250);
  uint64_t v145 = *(void *)(v10 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v145 + 40);
  v11(v8, v9, v10);
  v11(&a1[v6[6]], &a2[v6[6]], v10);
  v11(&a1[v6[7]], &a2[v6[7]], v10);
  uint64_t v12 = v6[8];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = (uint64_t *)&a2[v12];
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = v6[9];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = (uint64_t *)&a2[v17];
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *(void *)uint64_t v18 = v21;
  *((void *)v18 + 1) = v20;
  swift_bridgeObjectRelease();
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  swift_release();
  uint64_t v22 = a3[7];
  *(void *)&a1[a3[6]] = *(void *)&a2[a3[6]];
  uint64_t v150 = a1;
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = type metadata accessor for Date();
  uint64_t v144 = *(void *)(v25 - 8);
  uint64_t v147 = v25;
  uint64_t v142 = *(void (**)(char *, char *))(v144 + 40);
  v142(v23, v24);
  uint64_t v26 = (int *)type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
  uint64_t v27 = v26[5];
  uint64_t v28 = &v23[v27];
  uint64_t v29 = &v24[v27];
  uint64_t v31 = *(void *)v29;
  uint64_t v30 = *((void *)v29 + 1);
  *(void *)uint64_t v28 = v31;
  *((void *)v28 + 1) = v30;
  swift_bridgeObjectRelease();
  uint64_t v32 = v26[6];
  uint64_t v33 = &v23[v32];
  uint64_t v34 = &v24[v32];
  uint64_t v36 = *(void *)v34;
  uint64_t v35 = *((void *)v34 + 1);
  *(void *)uint64_t v33 = v36;
  *((void *)v33 + 1) = v35;
  swift_bridgeObjectRelease();
  uint64_t v37 = v26[7];
  uint64_t v38 = &v23[v37];
  char v39 = &v24[v37];
  uint64_t v40 = type metadata accessor for TimeZone();
  uint64_t v143 = *(void *)(v40 - 8);
  uint64_t v146 = v40;
  Swift::String v141 = *(void (**)(char *, char *))(v143 + 40);
  v141(v38, v39);
  v11(&v23[v26[8]], &v24[v26[8]], v10);
  uint64_t v148 = v10;
  v11(&v23[v26[9]], &v24[v26[9]], v10);
  uint64_t v41 = v26[10];
  uint64_t v42 = &v23[v41];
  uint64_t v43 = &v24[v41];
  uint64_t v45 = *(void *)v43;
  uint64_t v44 = *((void *)v43 + 1);
  *(void *)uint64_t v42 = v45;
  *((void *)v42 + 1) = v44;
  swift_bridgeObjectRelease();
  uint64_t v46 = v26[11];
  uint64_t v47 = &v23[v46];
  uint64_t v48 = &v24[v46];
  uint64_t v50 = *(void *)v48;
  uint64_t v49 = *((void *)v48 + 1);
  *(void *)uint64_t v47 = v50;
  *((void *)v47 + 1) = v49;
  swift_bridgeObjectRelease();
  *(void *)&v23[v26[12]] = *(void *)&v24[v26[12]];
  v23[v26[13]] = v24[v26[13]];
  uint64_t v51 = v26[14];
  unint64_t v52 = &v23[v51];
  uint64_t v53 = &v24[v51];
  uint64_t v55 = *(void *)v53;
  uint64_t v54 = *((void *)v53 + 1);
  *(void *)unint64_t v52 = v55;
  *((void *)v52 + 1) = v54;
  swift_bridgeObjectRelease();
  uint64_t v56 = v26[15];
  uint64_t v57 = &v23[v56];
  uint64_t v58 = &v24[v56];
  uint64_t v59 = type metadata accessor for Precipitation();
  LODWORD(v38) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v59);
  int v60 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v58, 1, v59);
  uint64_t v149 = v59;
  if (v38)
  {
    if (!v60)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v57, v58, v59);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v57, 0, 1, v59);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v61 = *(void *)(v59 - 8);
  if (v60)
  {
    (*(void (**)(char *, uint64_t))(v61 + 8))(v57, v59);
LABEL_6:
    uint64_t v62 = sub_10017DF08(&qword_100E6B8C8);
    memcpy(v57, v58, *(void *)(*(void *)(v62 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v61 + 40))(v57, v58, v59);
LABEL_7:
  v23[v26[16]] = v24[v26[16]];
  uint64_t v63 = v26[17];
  uint64_t v64 = &v23[v63];
  uint64_t v65 = &v24[v63];
  uint64_t v67 = *(void *)v65;
  uint64_t v66 = *((void *)v65 + 1);
  *(void *)uint64_t v64 = v67;
  *((void *)v64 + 1) = v66;
  swift_bridgeObjectRelease();
  uint64_t v68 = v26[18];
  uint64_t v69 = &v23[v68];
  uint64_t v70 = &v24[v68];
  uint64_t v72 = *(void *)v70;
  uint64_t v71 = *((void *)v70 + 1);
  *(void *)uint64_t v69 = v72;
  *((void *)v69 + 1) = v71;
  swift_bridgeObjectRelease();
  uint64_t v73 = v26[19];
  uint64_t v74 = &v23[v73];
  uint64_t v75 = &v24[v73];
  uint64_t v77 = *(void *)v75;
  uint64_t v76 = *((void *)v75 + 1);
  *(void *)uint64_t v74 = v77;
  *((void *)v74 + 1) = v76;
  swift_bridgeObjectRelease();
  *(void *)&v23[v26[20]] = *(void *)&v24[v26[20]];
  swift_bridgeObjectRelease();
  uint64_t v78 = a3[9];
  *(void *)((char *)v150 + a3[8]) = *(void *)&a2[a3[8]];
  *(_OWORD *)((char *)v150 + v78) = *(_OWORD *)&a2[v78];
  uint64_t v79 = a3[11];
  *(_OWORD *)((char *)v150 + a3[10]) = *(_OWORD *)&a2[a3[10]];
  *(void *)((char *)v150 + v79) = *(void *)&a2[v79];
  uint64_t v80 = a3[13];
  *((unsigned char *)v150 + a3[12]) = a2[a3[12]];
  uint64_t v81 = (char *)v150 + v80;
  uint64_t v82 = &a2[v80];
  *(void *)((char *)v150 + v80) = *(void *)&a2[v80];
  swift_release();
  *((void *)v81 + 1) = *((void *)v82 + 1);
  swift_release();
  uint64_t v83 = *(int *)(sub_10017DF08(&qword_100E6B8C0) + 32);
  uint64_t v84 = &v81[v83];
  uint64_t v85 = &v82[v83];
  LODWORD(v81) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v81[v83], 1, (uint64_t)v26);
  int v86 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, (uint64_t)v26);
  if (!v81)
  {
    if (v86)
    {
      sub_1001440E4((uint64_t)v84, (void (*)(void))type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel);
      goto LABEL_13;
    }
    ((void (*)(char *, char *, uint64_t))v142)(v84, v85, v147);
    uint64_t v93 = v26[5];
    uint64_t v94 = &v84[v93];
    uint64_t v95 = &v85[v93];
    uint64_t v97 = *(void *)v95;
    uint64_t v96 = *((void *)v95 + 1);
    *(void *)uint64_t v94 = v97;
    *((void *)v94 + 1) = v96;
    swift_bridgeObjectRelease();
    uint64_t v98 = v26[6];
    int v99 = &v84[v98];
    uint64_t v100 = &v85[v98];
    uint64_t v102 = *(void *)v100;
    uint64_t v101 = *((void *)v100 + 1);
    *(void *)int v99 = v102;
    *((void *)v99 + 1) = v101;
    swift_bridgeObjectRelease();
    ((void (*)(char *, char *, uint64_t))v141)(&v84[v26[7]], &v85[v26[7]], v146);
    v11(&v84[v26[8]], &v85[v26[8]], v148);
    v11(&v84[v26[9]], &v85[v26[9]], v148);
    uint64_t v103 = v26[10];
    uint64_t v104 = &v84[v103];
    uint64_t v105 = &v85[v103];
    uint64_t v107 = *(void *)v105;
    uint64_t v106 = *((void *)v105 + 1);
    *(void *)uint64_t v104 = v107;
    *((void *)v104 + 1) = v106;
    swift_bridgeObjectRelease();
    uint64_t v108 = v26[11];
    uint64_t v109 = &v84[v108];
    uint64_t v110 = &v85[v108];
    uint64_t v112 = *(void *)v110;
    uint64_t v111 = *((void *)v110 + 1);
    *(void *)uint64_t v109 = v112;
    *((void *)v109 + 1) = v111;
    swift_bridgeObjectRelease();
    *(void *)&v84[v26[12]] = *(void *)&v85[v26[12]];
    v84[v26[13]] = v85[v26[13]];
    uint64_t v113 = v26[14];
    uint64_t v114 = &v84[v113];
    uint64_t v115 = &v85[v113];
    uint64_t v117 = *(void *)v115;
    uint64_t v116 = *((void *)v115 + 1);
    *(void *)uint64_t v114 = v117;
    *((void *)v114 + 1) = v116;
    swift_bridgeObjectRelease();
    uint64_t v118 = v26[15];
    uint64_t v119 = &v84[v118];
    uint64_t v120 = &v85[v118];
    int v121 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v84[v118], 1, v149);
    int v122 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v120, 1, v149);
    if (v121)
    {
      if (!v122)
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 32))(v119, v120, v149);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v119, 0, 1, v149);
LABEL_23:
        v84[v26[16]] = v85[v26[16]];
        uint64_t v125 = v26[17];
        uint64_t v126 = &v84[v125];
        uint64_t v127 = &v85[v125];
        uint64_t v129 = *(void *)v127;
        uint64_t v128 = *((void *)v127 + 1);
        *(void *)uint64_t v126 = v129;
        *((void *)v126 + 1) = v128;
        swift_bridgeObjectRelease();
        uint64_t v130 = v26[18];
        char v131 = &v84[v130];
        uint64_t v132 = &v85[v130];
        uint64_t v134 = *(void *)v132;
        uint64_t v133 = *((void *)v132 + 1);
        *(void *)char v131 = v134;
        *((void *)v131 + 1) = v133;
        swift_bridgeObjectRelease();
        uint64_t v135 = v26[19];
        uint64_t v136 = &v84[v135];
        uint64_t v137 = &v85[v135];
        uint64_t v139 = *(void *)v137;
        uint64_t v138 = *((void *)v137 + 1);
        *(void *)uint64_t v136 = v139;
        *((void *)v136 + 1) = v138;
        swift_bridgeObjectRelease();
        *(void *)&v84[v26[20]] = *(void *)&v85[v26[20]];
        swift_bridgeObjectRelease();
        return v150;
      }
    }
    else
    {
      uint64_t v123 = *(void *)(v149 - 8);
      if (!v122)
      {
        (*(void (**)(char *, char *, uint64_t))(v123 + 40))(v119, v120, v149);
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v123 + 8))(v119, v149);
    }
    uint64_t v124 = sub_10017DF08(&qword_100E6B8C8);
    memcpy(v119, v120, *(void *)(*(void *)(v124 - 8) + 64));
    goto LABEL_23;
  }
  if (v86)
  {
LABEL_13:
    uint64_t v92 = sub_10017DF08(&qword_100E6B8D0);
    memcpy(v84, v85, *(void *)(*(void *)(v92 - 8) + 64));
    return v150;
  }
  (*(void (**)(char *, char *, uint64_t))(v144 + 32))(v84, v85, v147);
  *(_OWORD *)&v84[v26[5]] = *(_OWORD *)&v85[v26[5]];
  *(_OWORD *)&v84[v26[6]] = *(_OWORD *)&v85[v26[6]];
  (*(void (**)(char *, char *, uint64_t))(v143 + 32))(&v84[v26[7]], &v85[v26[7]], v146);
  uint64_t v87 = *(void (**)(char *, char *, uint64_t))(v145 + 32);
  v87(&v84[v26[8]], &v85[v26[8]], v148);
  v87(&v84[v26[9]], &v85[v26[9]], v148);
  *(_OWORD *)&v84[v26[10]] = *(_OWORD *)&v85[v26[10]];
  *(_OWORD *)&v84[v26[11]] = *(_OWORD *)&v85[v26[11]];
  *(void *)&v84[v26[12]] = *(void *)&v85[v26[12]];
  v84[v26[13]] = v85[v26[13]];
  *(_OWORD *)&v84[v26[14]] = *(_OWORD *)&v85[v26[14]];
  uint64_t v88 = v26[15];
  uint64_t v89 = &v84[v88];
  uint64_t v90 = &v85[v88];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v85[v88], 1, v149))
  {
    uint64_t v91 = sub_10017DF08(&qword_100E6B8C8);
    memcpy(v89, v90, *(void *)(*(void *)(v91 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v149 - 8) + 32))(v89, v90, v149);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v89, 0, 1, v149);
  }
  v84[v26[16]] = v85[v26[16]];
  *(_OWORD *)&v84[v26[17]] = *(_OWORD *)&v85[v26[17]];
  *(_OWORD *)&v84[v26[18]] = *(_OWORD *)&v85[v26[18]];
  *(_OWORD *)&v84[v26[19]] = *(_OWORD *)&v85[v26[19]];
  *(void *)&v84[v26[20]] = *(void *)&v85[v26[20]];
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v84, 0, 1, (uint64_t)v26);
  return v150;
}

uint64_t sub_100532200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100532214);
}

uint64_t sub_100532214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1001A0988();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == v3)
  {
    uint64_t v8 = v6;
    uint64_t v9 = v4;
  }
  else
  {
    if (v3 == 0x7FFFFFFF) {
      return sub_10017E5BC();
    }
    type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
    sub_100162F30();
    if (*(_DWORD *)(v12 + 84) == v3)
    {
      uint64_t v8 = v11;
      uint64_t v13 = *(int *)(a3 + 28);
    }
    else
    {
      uint64_t v8 = sub_10017DF08(&qword_100E6B8C0);
      uint64_t v13 = *(int *)(a3 + 52);
    }
    uint64_t v9 = v4 + v13;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, v3, v8);
}

uint64_t sub_1005322CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005322E0);
}

void sub_1005322E0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_1001A0988();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = v5;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(void *)(v5 + a4[5]) = (v4 - 1);
      return;
    }
    type metadata accessor for DailyForecastComponentViewModel.DayForecastViewModel(0);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[7];
    }
    else
    {
      uint64_t v10 = sub_10017DF08(&qword_100E6B8C0);
      uint64_t v14 = a4[13];
    }
    uint64_t v11 = v5 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, v4, v4, v10);
}

uint64_t sub_1005323B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.accessibilityReduceTransparency.getter();
  *a1 = result & 1;
  return result;
}

uint64_t type metadata accessor for DefaultNewsContentView()
{
  return sub_100109098();
}

uint64_t sub_100532410()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100532454@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v57 = a7;
  uint64_t v58 = a6;
  uint64_t v45 = a4;
  uint64_t v52 = a3;
  v70[2] = a5;
  v70[3] = a5;
  int v9 = a2;
  unsigned int v10 = a2 & 0x100;
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  v70[7] = a5;
  sub_100179D2C();
  uint64_t v50 = sub_10017F7C0();
  uint64_t v56 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v53 = v11;
  __chkstk_darwin(v12);
  sub_100162EF8();
  uint64_t v55 = v13;
  __chkstk_darwin(v14);
  uint64_t v54 = (uint64_t)&v41 - v15;
  v70[0] = a5;
  v70[1] = a5;
  v70[2] = type metadata accessor for Optional();
  v70[3] = a5;
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  sub_100179D2C();
  sub_10017F7C0();
  uint64_t v51 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v49 = v16;
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v59 = v18;
  __chkstk_darwin(v19);
  uint64_t v60 = (uint64_t)&v41 - v20;
  if (v9)
  {
    if (v9 == 1)
    {
      if (v10)
      {
        uint64_t v21 = &qword_100E997E0;
        goto LABEL_11;
      }
    }
    else if (v10)
    {
      uint64_t v21 = &qword_100E99BB0;
      goto LABEL_11;
    }
    uint64_t v21 = &qword_100E999C8;
    goto LABEL_11;
  }
  if (v10) {
    uint64_t v21 = &qword_100E99410;
  }
  else {
    uint64_t v21 = &qword_100E995F8;
  }
LABEL_11:
  memcpy(v70, v21, sizeof(v70));
  uint64_t v22 = memcpy(v69, v70, sizeof(v69));
  __chkstk_darwin(v22);
  uint64_t v23 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v23;
  *(&v41 - 6) = a1;
  *((unsigned char *)&v41 - 40) = v9;
  uint64_t v44 = a1;
  int v42 = v9;
  unsigned int v43 = v10 >> 8;
  *((unsigned char *)&v41 - 39) = BYTE1(v10);
  uint64_t v24 = v45;
  *(&v41 - 4) = v52;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v26 = v59;
  Group<A>.init(content:)();
  uint64_t v68 = WitnessTable;
  uint64_t v27 = v51;
  uint64_t v46 = swift_getWitnessTable();
  sub_100121584(v26, v27, v60);
  uint64_t v28 = v49;
  uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8);
  uint64_t v48 = v49 + 8;
  uint64_t v29 = v47(v26, v27);
  __chkstk_darwin(v29);
  uint64_t v30 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v30;
  *(&v41 - 6) = v44;
  *((unsigned char *)&v41 - 40) = v42;
  *((unsigned char *)&v41 - 39) = v43;
  *(&v41 - 4) = v31;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = v55;
  Group<A>.init(content:)();
  uint64_t v67 = v32;
  uint64_t v34 = v56;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v35 = v54;
  sub_100121584(v33, v34, v54);
  uint64_t v36 = v53;
  uint64_t v37 = *(void (**)(void))(v53 + 8);
  sub_10017C768();
  v37();
  uint64_t v38 = v59;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v59, v60, v27);
  uint64_t v65 = v38;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v33, v35, v34);
  uint64_t v66 = v33;
  uint64_t v63 = v27;
  uint64_t v64 = v34;
  uint64_t v61 = v46;
  uint64_t v62 = v58;
  sub_1006E9080();
  sub_10017C768();
  v37();
  char v39 = v47;
  v47(v60, v27);
  sub_10017C768();
  v37();
  return v39(v38, v27);
}

uint64_t sub_100532920@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v103 = a5;
  uint64_t v104 = a2;
  uint64_t v85 = a6;
  uint64_t v9 = sub_10017DF08(&qword_100E64E80);
  __chkstk_darwin(v9 - 8);
  uint64_t v82 = (uint64_t)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for Optional();
  uint64_t v93 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v98 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v97 = (char *)&v79 - v13;
  uint64_t v81 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v81);
  uint64_t v80 = (uint64_t)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v79 - v16;
  uint64_t v18 = *(void *)(a4 - 8);
  __chkstk_darwin(v19);
  uint64_t v84 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v92 = (char *)&v79 - v22;
  __chkstk_darwin(v23);
  uint64_t v91 = (char *)&v79 - v24;
  __chkstk_darwin(v25);
  uint64_t v90 = (char *)&v79 - v26;
  __chkstk_darwin(v27);
  uint64_t v89 = (char *)&v79 - v28;
  __chkstk_darwin(v29);
  uint64_t v88 = (char *)&v79 - v30;
  __chkstk_darwin(v31);
  uint64_t v87 = (char *)&v79 - v32;
  __chkstk_darwin(v33);
  uint64_t v94 = (char *)&v79 - v34;
  __chkstk_darwin(v35);
  uint64_t v102 = (char *)&v79 - v36;
  __chkstk_darwin(v37);
  uint64_t v95 = (char *)&v79 - v38;
  __chkstk_darwin(v39);
  uint64_t v41 = (char *)&v79 - v40;
  __chkstk_darwin(v42);
  uint64_t v44 = (char *)&v79 - v43;
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather18DefaultNewsContent8_Storage_newsArticle, (uint64_t)v17);
  v104(v17, a3[33], a3[34], a3[35], a3[36]);
  sub_1001F2B74((uint64_t)v17);
  int v86 = v44;
  sub_100121584((uint64_t)v41, a4, (uint64_t)v44);
  uint64_t v83 = v18;
  uint64_t v45 = *(void (**)(char *, uint64_t))(v18 + 8);
  v45(v41, a4);
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather18DefaultNewsContent8_Storage_airQuality, (uint64_t)v17);
  v104(v17, *a3, a3[1], a3[2], a3[3]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584((uint64_t)v41, a4, (uint64_t)v95);
  uint64_t v100 = (void (*)(uint64_t, uint64_t))v45;
  uint64_t v101 = v41;
  v45(v41, a4);
  uint64_t v96 = a1;
  uint64_t v46 = a1 + OBJC_IVAR____TtCV7Weather18DefaultNewsContent8_Storage_map;
  swift_beginAccess();
  uint64_t v47 = v46;
  uint64_t v48 = v82;
  sub_10027A764(v47, v82);
  if (_s7Weather24LocationCompositionStateOwet_0(v48, 1, v81) == 1)
  {
    sub_10027A7CC(v48);
  }
  else
  {
    uint64_t v49 = v80;
    sub_10027A82C(v48, v80);
    sub_10027A890((uint64_t)(a3 + 24), (uint64_t)v127);
    sub_10027A890((uint64_t)v127, (uint64_t)v128);
    if (v129 != 1)
    {
      uint64_t v51 = (uint64_t)v102;
      v104((char *)v49, v128[0], v128[1], v128[2], v128[3]);
      sub_1001F2B74(v49);
      uint64_t v52 = (uint64_t)v101;
      sub_100121584(v51, a4, (uint64_t)v101);
      uint64_t v53 = v100;
      v100(v51, a4);
      uint64_t v50 = (uint64_t)v98;
      sub_100121584(v52, a4, (uint64_t)v98);
      v53(v52, a4);
      _s7Weather24LocationCompositionStateOwst_0(v50, 0, 1, a4);
      goto LABEL_7;
    }
    sub_1001F2B74(v49);
  }
  uint64_t v50 = (uint64_t)v98;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v98, 1, 1, a4);
LABEL_7:
  sub_1000CA354();
  uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v93 + 8);
  uint64_t v82 = (v93 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v54(v50, v99);
  sub_1001F3734(*(void *)(v96 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v17);
  uint64_t v55 = (uint64_t)v102;
  uint64_t v56 = v104;
  v104(v17, a3[16], a3[17], a3[18], a3[19]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584(v55, a4, (uint64_t)v101);
  v100(v55, a4);
  uint64_t v57 = v96;
  sub_1001F3734(*(void *)(v96 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, (uint64_t)v17);
  uint64_t v58 = (uint64_t)v94;
  v56(v17, a3[8], a3[9], a3[10], a3[11]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584(v58, a4, v55);
  v100(v58, a4);
  sub_1001F3734(*(void *)(v57 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v17);
  uint64_t v59 = (uint64_t)v87;
  uint64_t v60 = v104;
  v104(v17, a3[49], a3[50], a3[51], a3[52]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584(v59, a4, v58);
  uint64_t v61 = (void (*)(char *, uint64_t))v100;
  v100(v59, a4);
  sub_1001F3734(*(void *)(v96 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)v17);
  uint64_t v62 = (uint64_t)v88;
  v60(v17, a3[45], a3[46], a3[47], a3[48]);
  sub_1001F2B74((uint64_t)v17);
  uint64_t v63 = v103;
  sub_100121584(v62, a4, v59);
  uint64_t v64 = v61;
  v61((char *)v62, a4);
  uint64_t v65 = *(void (**)(uint64_t, char *, uint64_t))(v83 + 16);
  v65(v62, v86, a4);
  uint64_t v120 = v62;
  uint64_t v66 = v89;
  v65((uint64_t)v89, v95, a4);
  int v121 = v66;
  uint64_t v67 = v93 + 16;
  uint64_t v68 = (uint64_t)v98;
  (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v98, v97, v99);
  uint64_t v122 = v68;
  uint64_t v69 = v90;
  v65((uint64_t)v90, v101, a4);
  uint64_t v123 = v69;
  uint64_t v70 = v63;
  uint64_t v71 = v91;
  v65((uint64_t)v91, v102, a4);
  uint64_t v124 = v71;
  uint64_t v72 = v92;
  v65((uint64_t)v92, v94, a4);
  uint64_t v125 = v72;
  uint64_t v73 = v84;
  uint64_t v74 = v87;
  v65((uint64_t)v84, v87, a4);
  uint64_t v126 = v73;
  uint64_t v75 = v73;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v76 = v99;
  uint64_t v115 = v99;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v119 = a4;
  uint64_t v106 = v70;
  uint64_t v107 = v70;
  uint64_t v105 = v70;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v109 = v70;
  uint64_t v110 = v70;
  uint64_t v111 = v70;
  uint64_t v112 = v70;
  sub_1006E9080();
  v64(v74, a4);
  v64(v94, a4);
  v64(v102, a4);
  v64(v101, a4);
  uint64_t v77 = *(void (**)(char *, uint64_t))(v67 - 8);
  v77(v97, v76);
  v64(v95, a4);
  v64(v86, a4);
  v64(v75, a4);
  v64(v92, a4);
  v64(v91, a4);
  v64(v90, a4);
  v77(v98, v76);
  v64(v89, a4);
  return ((uint64_t (*)(char *, uint64_t))v64)(v88, a4);
}

uint64_t sub_10053338C@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v102 = a5;
  uint64_t v84 = a6;
  uint64_t v10 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = *(void *)(a4 - 8);
  uint64_t v13 = v82;
  __chkstk_darwin(v14);
  uint64_t v83 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v98 = (char *)&v82 - v17;
  __chkstk_darwin(v18);
  uint64_t v97 = (char *)&v82 - v19;
  __chkstk_darwin(v20);
  uint64_t v96 = (char *)&v82 - v21;
  __chkstk_darwin(v22);
  uint64_t v95 = (char *)&v82 - v23;
  __chkstk_darwin(v24);
  uint64_t v93 = (char *)&v82 - v25;
  __chkstk_darwin(v26);
  uint64_t v92 = (char *)&v82 - v27;
  __chkstk_darwin(v28);
  uint64_t v90 = (char *)&v82 - v29;
  __chkstk_darwin(v30);
  uint64_t v89 = (char *)&v82 - v31;
  __chkstk_darwin(v32);
  uint64_t v101 = (char *)&v82 - v33;
  __chkstk_darwin(v34);
  uint64_t v87 = (char *)&v82 - v35;
  __chkstk_darwin(v36);
  int v86 = (char *)&v82 - v37;
  __chkstk_darwin(v38);
  uint64_t v100 = (char *)&v82 - v39;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v82 - v41;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v82 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v82 - v47;
  uint64_t v94 = (char *)&v82 - v47;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v12);
  uint64_t v49 = a3[57];
  uint64_t v50 = a3[58];
  uint64_t v51 = a3[59];
  uint64_t v52 = a3[60];
  uint64_t v99 = a2;
  a2(v12, v49, v50, v51, v52);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v45, a4, (uint64_t)v48);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v91 = v45;
  v53(v45, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)v12);
  a2(v12, a3[41], a3[42], a3[43], a3[44]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v42, a4, (uint64_t)v45);
  uint64_t v88 = v42;
  v53(v42, a4);
  uint64_t v85 = a1;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v12);
  uint64_t v54 = (uint64_t)v100;
  v99(v12, a3[12], a3[13], a3[14], a3[15]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v54, a4, (uint64_t)v42);
  uint64_t v55 = v54;
  v53((char *)v54, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)v12);
  uint64_t v56 = (uint64_t)v86;
  uint64_t v57 = v99;
  v99(v12, a3[20], a3[21], a3[22], a3[23]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v56, a4, v55);
  v53((char *)v56, a4);
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v12);
  uint64_t v58 = (uint64_t)v87;
  v57(v12, a3[53], a3[54], a3[55], a3[56]);
  sub_1001F2B74((uint64_t)v12);
  uint64_t v59 = v58;
  sub_100121584(v58, a4, v56);
  v53((char *)v58, a4);
  uint64_t v60 = v85;
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)v12);
  uint64_t v61 = (uint64_t)v101;
  uint64_t v62 = v99;
  v99(v12, a3[37], a3[38], a3[39], a3[40]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v61, a4, v59);
  v53((char *)v61, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, (uint64_t)v12);
  uint64_t v63 = (uint64_t)v89;
  v62(v12, a3[29], a3[30], a3[31], a3[32]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v63, a4, (uint64_t)v101);
  v53((char *)v63, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, (uint64_t)v12);
  uint64_t v64 = a3[4];
  uint64_t v65 = a3[5];
  uint64_t v66 = a3[6];
  uint64_t v67 = a3[7];
  uint64_t v68 = (uint64_t)v90;
  v62(v12, v64, v65, v66, v67);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v68, a4, v63);
  v53((char *)v68, a4);
  uint64_t v69 = *(void (**)(uint64_t, char *, uint64_t))(v82 + 16);
  v69(v68, v94, a4);
  uint64_t v119 = v68;
  uint64_t v70 = v92;
  v69((uint64_t)v92, v91, a4);
  uint64_t v120 = v70;
  uint64_t v71 = v93;
  v69((uint64_t)v93, v88, a4);
  int v121 = v71;
  uint64_t v72 = v95;
  v69((uint64_t)v95, v100, a4);
  uint64_t v122 = v72;
  uint64_t v73 = v96;
  uint64_t v74 = v86;
  v69((uint64_t)v96, v86, a4);
  uint64_t v123 = v73;
  uint64_t v75 = v97;
  uint64_t v76 = v87;
  v69((uint64_t)v97, v87, a4);
  uint64_t v124 = v75;
  uint64_t v77 = v98;
  uint64_t v78 = (uint64_t)v101;
  v69((uint64_t)v98, v101, a4);
  uint64_t v125 = v77;
  uint64_t v79 = v83;
  uint64_t v80 = v89;
  v69((uint64_t)v83, v89, a4);
  uint64_t v126 = v79;
  uint64_t v111 = a4;
  uint64_t v112 = a4;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v115 = a4;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v103 = v102;
  uint64_t v104 = v102;
  uint64_t v105 = v102;
  uint64_t v106 = v102;
  uint64_t v107 = v102;
  uint64_t v108 = v102;
  uint64_t v109 = v102;
  uint64_t v110 = v102;
  sub_1006E9080();
  v53(v80, a4);
  v53((char *)v78, a4);
  v53(v76, a4);
  v53(v74, a4);
  v53(v100, a4);
  v53(v88, a4);
  v53(v91, a4);
  v53(v94, a4);
  v53(v79, a4);
  v53(v98, a4);
  v53(v97, a4);
  v53(v96, a4);
  v53(v95, a4);
  v53(v93, a4);
  v53(v92, a4);
  return ((uint64_t (*)(char *, uint64_t))v53)(v90, a4);
}

uint64_t sub_100533DD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(v2 + 9)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_100532454(*(void *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_100533E00()
{
  return sub_100533E30((uint64_t (*)(void, void, void, void, void, void, void))sub_100532920);
}

uint64_t sub_100533E18()
{
  return sub_100533E30((uint64_t (*)(void, void, void, void, void, void, void))sub_10053338C);
}

uint64_t sub_100533E30(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  if (*(unsigned char *)(v1 + 41)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return a1(*(void *)(v1 + 32), v2 | *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100533E68(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (!v2 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  type metadata accessor for HistoricalFactsCategory();
  sub_10017DF08(&qword_100E7EBC8);
  sub_100533F78();
  sub_100533FCC();

  return static NonEmpty<>.== infix(_:_:)();
}

uint64_t sub_100533F20(void *a1, void *a2)
{
  return sub_100533E64(*a1, *a2);
}

uint64_t type metadata accessor for HistoricalFactsCategory()
{
  uint64_t result = qword_100E7EC40;
  if (!qword_100E7EC40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_100533F78()
{
  unint64_t result = qword_100E7EBD0;
  if (!qword_100E7EBD0)
  {
    sub_10018C6DC(&qword_100E7EBC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7EBD0);
  }
  return result;
}

unint64_t sub_100533FCC()
{
  unint64_t result = qword_100E7EBD8;
  if (!qword_100E7EBD8)
  {
    sub_10018C6DC(&qword_100E7EBC8);
    sub_100534040();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7EBD8);
  }
  return result;
}

unint64_t sub_100534040()
{
  unint64_t result = qword_100E794E8;
  if (!qword_100E794E8)
  {
    type metadata accessor for WeatherDescription();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E794E8);
  }
  return result;
}

uint64_t *sub_100534090(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_10017DF08(&qword_100E7EBE0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t sub_100534164(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_10017DF08(&qword_100E7EBE0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_1005341E0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_10017DF08(&qword_100E7EBE0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  return a1;
}

void *sub_100534264(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_10017DF08(&qword_100E7EBE0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_100534304(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_10017DF08(&qword_100E7EBE0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_100534384(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_10017DF08(&qword_100E7EBE0);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_100534414(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100534428);
}

uint64_t sub_100534428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10017DF08(&qword_100E7EBE0);
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_1005344B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005344C8);
}

uint64_t sub_1005344C8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10017DF08(&qword_100E7EBE0);
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

void sub_10053454C()
{
  sub_1005345E4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1005345E4()
{
  if (!qword_100E7EC50)
  {
    sub_10018C6DC(&qword_100E7EBC8);
    sub_100533F78();
    unint64_t v0 = type metadata accessor for NonEmpty();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E7EC50);
    }
  }
}

ValueMetadata *type metadata accessor for HistoricalFactsPlatterInput()
{
  return &type metadata for HistoricalFactsPlatterInput;
}

unsigned char *sub_100534664(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100534730);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_100534758(uint64_t a1)
{
  return sub_10019EC64(a1, qword_100F51518);
}

uint64_t sub_10053476C(uint64_t a1)
{
  return sub_10017CF4C(a1, qword_100F51530);
}

uint64_t sub_100534780(uint64_t a1)
{
  return sub_100535F70(a1, qword_100F51548);
}

void sub_1005347AC()
{
  sub_100162EA0();
  char v2 = v1;
  uint64_t v3 = type metadata accessor for WeatherDescription();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_100162EB8();
  if (v2)
  {
    id v7 = [self mainBundle];
    v8._uint64_t countAndFlagsBits = 0xD000000000000028;
    v14._uint64_t countAndFlagsBits = 0xD000000000000058;
    v14._object = (void *)0x8000000100CA42F0;
    v8._object = (void *)0x8000000100CA42C0;
    v9._uint64_t countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v8, (Swift::String_optional)0, (NSBundle)v7, v9, v14);

    sub_10017DF08(&qword_100E6E908);
    type metadata accessor for WeatherDescription.Argument();
    sub_100179C0C();
    uint64_t v11 = v10;
    unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_100C251B0;
    *(void *)(v13 + v12) = 10;
    (*(void (**)(void))(v11 + 104))();
    WeatherDescription.init(format:_:)();
    WeatherDescription.string.getter();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0, v3);
    sub_10014A85C();
    Text.init<A>(_:)();
  }
  else
  {
    LocalizedStringKey.init(stringLiteral:)();
    sub_10017A460();
  }
  sub_100162694();
}

uint64_t sub_1005349BC()
{
  uint64_t v1 = sub_10017DF08(&qword_100E6C0C0);
  __chkstk_darwin(v1 - 8);
  sub_100162EB8();
  Image.init(systemName:)();
  static SymbolRenderingMode.hierarchical.getter();
  uint64_t v2 = type metadata accessor for SymbolRenderingMode();
  _s7Weather24LocationCompositionStateOwst_0(v0, 0, 1, v2);
  uint64_t v3 = Image.symbolRenderingMode(_:)();
  swift_release();
  sub_1000F3400(v0, &qword_100E6C0C0);
  return v3;
}

void sub_100534A8C()
{
  sub_100162EA0();
  sub_10017DF08(&qword_100E63520);
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_1001A20F4();
  sub_100179C0C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_10012B938();
  if (qword_100E62380 != -1) {
    uint64_t v5 = swift_once();
  }
  sub_1001813AC(v5, (uint64_t)qword_100F51518);
  uint64_t v6 = sub_1001635F4();
  ((void (*)(uint64_t))v0)(v6);
  sub_10017E5D8();
  static Tips.RuleBuilder.buildExpression(_:)();
  id v7 = *(uint64_t (**)(uint64_t))(v3 + 8);
  uint64_t v8 = sub_1001A09A4();
  uint64_t v9 = v7(v8);
  if (qword_100E62388 != -1) {
    uint64_t v9 = swift_once();
  }
  sub_1001D1A50(v9, (uint64_t)qword_100F51530);
  sub_100183BC8();
  v0();
  sub_10017E5D8();
  static Tips.RuleBuilder.buildExpression(_:)();
  uint64_t v10 = sub_1001A09A4();
  v7(v10);
  static Tips.RuleBuilder.buildPartialBlock(first:)();
  sub_1001629C0();
  sub_10018307C();
  sub_100182A6C();
  swift_bridgeObjectRelease();
  sub_10017F408();
  sub_100162694();
}

void sub_100534C74()
{
}

void sub_100534C7C()
{
}

void sub_100534C84()
{
  sub_100162EA0();
  uint64_t v3 = v2;
  uint64_t v4 = sub_10017DF08(&qword_100E7ECB0);
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_100162EB8();
  uint64_t v8 = sub_10017DF08(&qword_100E653F0);
  sub_100179C0C();
  uint64_t v10 = v9;
  __chkstk_darwin(v11);
  sub_100125FF8();
  sub_1001246C8(&qword_100E65400, &qword_100E653F0);
  static PredicateExpressions.build_Arg<A>(_:)();
  static PredicateExpressions.build_Arg<A>(_:)();
  v3[3] = sub_10017DF08(&qword_100E7ECB8);
  v3[4] = sub_1005364EC();
  sub_100170694(v3);
  sub_1001246C8(&qword_100E7ECD0, &qword_100E7ECB0);
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0, v4);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v1, v8);
  sub_100162694();
}

void sub_100534E50()
{
}

uint64_t sub_100534E58()
{
  return sub_1005349BC();
}

void sub_100534E64()
{
}

void sub_100534E6C()
{
}

uint64_t sub_100534E8C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1005364A8((void (*)(void))sub_10053677C, a1);
}

uint64_t sub_100534EA4(uint64_t a1)
{
  return sub_10019EC64(a1, qword_100F51560);
}

uint64_t sub_100534EB8(uint64_t a1)
{
  return sub_10017CF4C(a1, qword_100F51578);
}

uint64_t sub_100534ECC()
{
  return Image.init(_internalSystemName:)();
}

void sub_100534EEC()
{
  sub_100162EA0();
  sub_10017DF08(&qword_100E63520);
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_1001A20F4();
  sub_100179C0C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_10012B938();
  if (qword_100E62398 != -1) {
    uint64_t v5 = swift_once();
  }
  sub_1001813AC(v5, (uint64_t)qword_100F51560);
  uint64_t v6 = sub_1001635F4();
  ((void (*)(uint64_t))v0)(v6);
  sub_10017E5D8();
  static Tips.RuleBuilder.buildExpression(_:)();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v3 + 8);
  uint64_t v8 = sub_1001A09A4();
  uint64_t v9 = v7(v8);
  if (qword_100E623A0 != -1) {
    uint64_t v9 = swift_once();
  }
  sub_1001D1A50(v9, (uint64_t)qword_100F51578);
  sub_100183BC8();
  v0();
  sub_10017E5D8();
  static Tips.RuleBuilder.buildExpression(_:)();
  uint64_t v10 = sub_1001A09A4();
  v7(v10);
  static Tips.RuleBuilder.buildPartialBlock(first:)();
  sub_1001629C0();
  sub_10018307C();
  sub_100182A6C();
  swift_bridgeObjectRelease();
  sub_10017F408();
  sub_100162694();
}

uint64_t sub_1005350D4()
{
  return sub_100535384();
}

uint64_t sub_1005350F0()
{
  return sub_100535470();
}

void sub_100535128()
{
}

uint64_t sub_100535140@<X0>(uint64_t *a1@<X8>)
{
  return sub_1005359AC((void (*)(void))sub_100536730, a1);
}

uint64_t sub_100535158(uint64_t a1)
{
  return sub_10019EC64(a1, qword_100F51590);
}

uint64_t sub_10053516C(uint64_t a1)
{
  return sub_10017CF4C(a1, qword_100F515A8);
}

void sub_100535180()
{
  sub_100162EA0();
  sub_10017DF08(&qword_100E63520);
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_1001A20F4();
  sub_100179C0C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_10012B938();
  if (qword_100E623A8 != -1) {
    uint64_t v5 = swift_once();
  }
  sub_1001813AC(v5, (uint64_t)qword_100F51590);
  uint64_t v6 = sub_1001635F4();
  ((void (*)(uint64_t))v0)(v6);
  sub_10017E5D8();
  static Tips.RuleBuilder.buildExpression(_:)();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v3 + 8);
  uint64_t v8 = sub_1001A09A4();
  uint64_t v9 = v7(v8);
  if (qword_100E623B0 != -1) {
    uint64_t v9 = swift_once();
  }
  sub_1001D1A50(v9, (uint64_t)qword_100F515A8);
  sub_100183BC8();
  v0();
  sub_10017E5D8();
  static Tips.RuleBuilder.buildExpression(_:)();
  uint64_t v10 = sub_1001A09A4();
  v7(v10);
  static Tips.RuleBuilder.buildPartialBlock(first:)();
  sub_1001629C0();
  sub_10018307C();
  sub_100182A6C();
  swift_bridgeObjectRelease();
  sub_10017F408();
  sub_100162694();
}

uint64_t sub_100535368()
{
  return sub_100535384();
}

uint64_t sub_100535384()
{
  return sub_100535448();
}

uint64_t sub_1005353B0()
{
  return sub_100535470();
}

uint64_t sub_1005353E0()
{
  return sub_100535498();
}

uint64_t sub_100535408@<X0>(uint64_t *a1@<X8>)
{
  return sub_1005359AC((void (*)(void))sub_1005366E4, a1);
}

uint64_t sub_100535420(uint64_t a1)
{
  return sub_10019EC64(a1, qword_100F515C0);
}

uint64_t sub_100535434(uint64_t a1)
{
  return sub_10017CF4C(a1, qword_100F515D8);
}

uint64_t sub_100535448()
{
  return sub_10017A460();
}

uint64_t sub_100535470()
{
  return sub_10017A460();
}

uint64_t sub_100535498()
{
  uint64_t v1 = sub_10017DF08(&qword_100E7DFA0);
  __chkstk_darwin(v1 - 8);
  sub_10012B938();
  Image.init(systemName:)();
  uint64_t v2 = enum case for Image.TemplateRenderingMode.template(_:);
  uint64_t v3 = type metadata accessor for Image.TemplateRenderingMode();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104))(v0, v2, v3);
  _s7Weather24LocationCompositionStateOwst_0(v0, 0, 1, v3);
  uint64_t v4 = Image.renderingMode(_:)();
  swift_release();
  sub_1000F3400(v0, &qword_100E7DFA0);
  return v4;
}

void sub_1005355A4()
{
  sub_100162EA0();
  sub_10017DF08(&qword_100E63520);
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_1001A20F4();
  sub_100179C0C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_10012B938();
  if (qword_100E623B8 != -1) {
    uint64_t v5 = swift_once();
  }
  sub_1001813AC(v5, (uint64_t)qword_100F515C0);
  uint64_t v6 = sub_1001635F4();
  ((void (*)(uint64_t))v0)(v6);
  sub_10017E5D8();
  static Tips.RuleBuilder.buildExpression(_:)();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v3 + 8);
  uint64_t v8 = sub_1001A09A4();
  uint64_t v9 = v7(v8);
  if (qword_100E623C0 != -1) {
    uint64_t v9 = swift_once();
  }
  sub_1001D1A50(v9, (uint64_t)qword_100F515D8);
  sub_100183BC8();
  v0();
  sub_10017E5D8();
  static Tips.RuleBuilder.buildExpression(_:)();
  uint64_t v10 = sub_1001A09A4();
  v7(v10);
  static Tips.RuleBuilder.buildPartialBlock(first:)();
  sub_1001629C0();
  sub_10018307C();
  sub_100182A6C();
  swift_bridgeObjectRelease();
  sub_10017F408();
  sub_100162694();
}

void sub_10053578C()
{
  sub_100162EA0();
  sub_10017DF08(&qword_100E653D8);
  sub_100179C0C();
  __chkstk_darwin(v1);
  uint64_t v2 = sub_1001A2C84();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_100125FF8();
  sub_10017DF08(&qword_100E653E8);
  sub_100179C0C();
  __chkstk_darwin(v6);
  sub_10012B938();
  Tips.MaxDisplayCount.init(_:)();
  static Tips.OptionsBuilder.buildExpression<A>(_:)();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v0, v2);
  sub_10019B4DC();
  sub_1001650B4();
  sub_10019B4DC();
  static Tips.OptionsBuilder.buildFinalResult<A>(_:)();
  uint64_t v7 = sub_100186A08();
  v8(v7);
  uint64_t v9 = sub_100181FB8();
  v10(v9);
  sub_100162694();
}

uint64_t sub_100535920()
{
  return sub_100535384();
}

uint64_t sub_10053593C()
{
  return sub_100535470();
}

uint64_t sub_10053596C()
{
  return sub_100535498();
}

uint64_t sub_100535994@<X0>(uint64_t *a1@<X8>)
{
  return sub_1005359AC((void (*)(void))sub_100536698, a1);
}

uint64_t sub_1005359AC@<X0>(void (*a1)(void)@<X2>, uint64_t *a2@<X8>)
{
  a1();
  uint64_t result = Tip.id.getter();
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_1005359F0(uint64_t a1)
{
  return sub_100535E24(a1, qword_100F515F0);
}

uint64_t sub_100535A20(uint64_t a1)
{
  return sub_10019EC64(a1, qword_100F51608);
}

uint64_t sub_100535A34(uint64_t a1)
{
  return sub_10017CF4C(a1, qword_100F51620);
}

uint64_t sub_100535A48()
{
  return Image.init(systemName:)();
}

void sub_100535A68()
{
  sub_100162EA0();
  uint64_t v0 = sub_10017DF08(&qword_100E63520);
  sub_100179C0C();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  sub_1001A20F4();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_10012B938();
  if (qword_100E623C8 != -1) {
    uint64_t v7 = swift_once();
  }
  sub_1001813AC(v7, (uint64_t)qword_100F515F0);
  uint64_t v8 = *(void (**)(void))(v2 + 16);
  sub_100189EC8();
  v8();
  sub_10017E5D8();
  static Tips.RuleBuilder.buildExpression(_:)();
  uint64_t v9 = *(uint64_t (**)(uint64_t))(v5 + 8);
  uint64_t v10 = sub_1001A3270();
  uint64_t v11 = v9(v10);
  if (qword_100E623D0 != -1) {
    uint64_t v11 = swift_once();
  }
  sub_1001D1A50(v11, (uint64_t)qword_100F51608);
  sub_100189EC8();
  v8();
  sub_10017E5D8();
  static Tips.RuleBuilder.buildExpression(_:)();
  uint64_t v12 = sub_1001A3270();
  v9(v12);
  if (qword_100E623D8 != -1) {
    swift_once();
  }
  sub_1002102B0(v0, (uint64_t)qword_100F51620);
  swift_beginAccess();
  sub_100189EC8();
  v8();
  sub_10017E5D8();
  static Tips.RuleBuilder.buildExpression(_:)();
  uint64_t v13 = sub_1001A3270();
  v9(v13);
  static Tips.RuleBuilder.buildPartialBlock(first:)();
  swift_bridgeObjectRelease();
  static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  sub_100182A6C();
  swift_bridgeObjectRelease();
  static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100162694();
}

uint64_t sub_100535D3C()
{
  return sub_10053601C();
}

uint64_t sub_100535D64()
{
  return sub_100535D9C();
}

uint64_t sub_100535D9C()
{
  return sub_10053605C();
}

uint64_t sub_100535DC8()
{
  return sub_100535A48();
}

void sub_100535DD0()
{
}

void sub_100535DD8()
{
}

uint64_t sub_100535DF8@<X0>(uint64_t *a1@<X8>)
{
  return sub_1005364A8((void (*)(void))sub_10053664C, a1);
}

uint64_t sub_100535E10(uint64_t a1)
{
  return sub_10019EC64(a1, qword_100F51638);
}

uint64_t sub_100535E24(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10017DF08(&qword_100E63520);
  sub_100097814(v3, a2);
  sub_1002102B0(v3, (uint64_t)a2);
  sub_10017DF08(&qword_100E65408);
  type metadata accessor for Tips.ParameterOption();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C251B0;
  static Tips.ParameterOption.transient.getter();
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t sub_100535F5C(uint64_t a1)
{
  return sub_10017CF4C(a1, qword_100F51650);
}

uint64_t sub_100535F70(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_10017DF08(&qword_100E63520);
  sub_100097814(v3, a2);
  sub_1002102B0(v3, (uint64_t)a2);
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t sub_10053601C()
{
  return sub_10017A460();
}

uint64_t sub_10053605C()
{
  return sub_10017A460();
}

uint64_t sub_10053609C()
{
  return Image.init(systemName:)();
}

void sub_1005360B8()
{
  sub_100162EA0();
  sub_10017DF08(&qword_100E63520);
  sub_100179C0C();
  __chkstk_darwin(v1);
  sub_1001A20F4();
  sub_100179C0C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_10012B938();
  if (qword_100E623E0 != -1) {
    uint64_t v5 = swift_once();
  }
  sub_1001813AC(v5, (uint64_t)qword_100F51638);
  uint64_t v6 = sub_1001635F4();
  ((void (*)(uint64_t))v0)(v6);
  sub_10017E5D8();
  static Tips.RuleBuilder.buildExpression(_:)();
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v3 + 8);
  uint64_t v8 = sub_1001A09A4();
  uint64_t v9 = v7(v8);
  if (qword_100E623E8 != -1) {
    uint64_t v9 = swift_once();
  }
  sub_1001D1A50(v9, (uint64_t)qword_100F51650);
  sub_100183BC8();
  v0();
  sub_10017E5D8();
  static Tips.RuleBuilder.buildExpression(_:)();
  uint64_t v10 = sub_1001A09A4();
  v7(v10);
  static Tips.RuleBuilder.buildPartialBlock(first:)();
  sub_1001629C0();
  sub_10018307C();
  sub_100182A6C();
  swift_bridgeObjectRelease();
  sub_10017F408();
  sub_100162694();
}

void sub_1005362A0()
{
  sub_100162EA0();
  sub_10017DF08(&qword_100E653D8);
  sub_100179C0C();
  __chkstk_darwin(v0);
  uint64_t v1 = sub_1001A2C84();
  sub_100179C0C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08(&qword_100E653E8);
  sub_100179C0C();
  __chkstk_darwin(v8);
  sub_10012B938();
  Tips.MaxDisplayCount.init(_:)();
  static Tips.OptionsBuilder.buildExpression<A>(_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v1);
  uint64_t v13 = v1;
  Swift::String v14 = &protocol witness table for Tips.MaxDisplayCount;
  sub_10019B4DC();
  sub_1001650B4();
  uint64_t v13 = v7;
  Swift::String v14 = &protocol witness table for Tips.MaxDisplayCount;
  sub_10019B4DC();
  static Tips.OptionsBuilder.buildFinalResult<A>(_:)();
  uint64_t v9 = sub_100186A08();
  v10(v9);
  uint64_t v11 = sub_100181FB8();
  v12(v11);
  sub_100162694();
}

uint64_t sub_100536448()
{
  return sub_100535D9C();
}

uint64_t sub_100536480()
{
  return sub_10053609C();
}

void sub_100536488()
{
}

uint64_t sub_100536490@<X0>(uint64_t *a1@<X8>)
{
  return sub_1005364A8((void (*)(void))sub_100536600, a1);
}

uint64_t sub_1005364A8@<X0>(void (*a1)(void)@<X2>, uint64_t *a2@<X8>)
{
  a1();
  uint64_t result = Tip.id.getter();
  *a2 = result;
  a2[1] = v4;
  return result;
}

unint64_t sub_1005364EC()
{
  unint64_t result = qword_100E7ECC0;
  if (!qword_100E7ECC0)
  {
    sub_10018C6DC(&qword_100E7ECB8);
    sub_1001246C8(&qword_100E653F8, &qword_100E653F0);
    sub_10053658C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7ECC0);
  }
  return result;
}

unint64_t sub_10053658C()
{
  unint64_t result = qword_100E7ECC8;
  if (!qword_100E7ECC8)
  {
    sub_10018C6DC(&qword_100E7ECB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7ECC8);
  }
  return result;
}

unint64_t sub_100536600()
{
  unint64_t result = qword_100E7ECD8;
  if (!qword_100E7ECD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7ECD8);
  }
  return result;
}

unint64_t sub_10053664C()
{
  unint64_t result = qword_100E7ECE0;
  if (!qword_100E7ECE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7ECE0);
  }
  return result;
}

unint64_t sub_100536698()
{
  unint64_t result = qword_100E7ECE8;
  if (!qword_100E7ECE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7ECE8);
  }
  return result;
}

unint64_t sub_1005366E4()
{
  unint64_t result = qword_100E7ECF0;
  if (!qword_100E7ECF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7ECF0);
  }
  return result;
}

unint64_t sub_100536730()
{
  unint64_t result = qword_100E7ECF8;
  if (!qword_100E7ECF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7ECF8);
  }
  return result;
}

unint64_t sub_10053677C()
{
  unint64_t result = qword_100E7ED00;
  if (!qword_100E7ED00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7ED00);
  }
  return result;
}

void *sub_1005367C8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v3 = *(void *)(type metadata accessor for URLHandlerPattern() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v21 = 3 * *(void *)(v3 + 72);
  uint64_t v24 = *(void *)(v3 + 72);
  swift_bridgeObjectRetain();
  uint64_t v5 = a1 + 40;
  uint64_t v6 = _swiftEmptyArrayStorage;
  unint64_t v22 = v4;
  do
  {
    uint64_t v23 = v1;
    sub_10017DF08(&qword_100E76AF8);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_100C33BA0;
    unint64_t v8 = v7 + v4;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    URLHandlerPattern.init(scheme:host:path:fragment:params:conditions:)();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001A09B8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1001A09B8();
    swift_bridgeObjectRelease();
    uint64_t v9 = v6[2];
    uint64_t v10 = v9 + 3;
    if (__OFADD__(v9, 3))
    {
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
    }
    uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (!isUniquelyReferenced_nonNull_native || (uint64_t v12 = v6[3] >> 1, v12 < v10))
    {
      if (v9 <= v10) {
        uint64_t v13 = v9 + 3;
      }
      else {
        uint64_t v13 = v9;
      }
      uint64_t v6 = (void *)sub_1007E9E30(isUniquelyReferenced_nonNull_native, v13, 1, (uint64_t)v6);
      uint64_t v12 = v6[3] >> 1;
    }
    unint64_t v4 = v22;
    uint64_t v14 = v6[2];
    if (v12 - v14 < 3) {
      goto LABEL_22;
    }
    uint64_t v15 = (char *)v6 + v22 + v14 * v24;
    if (v8 < (unint64_t)&v15[v21] && (unint64_t)v15 < v8 + v21)
    {
      unint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
      __break(1u);
      return result;
    }
    swift_arrayInitWithCopy();
    uint64_t v17 = v6[2];
    BOOL v18 = __OFADD__(v17, 3);
    uint64_t v19 = v17 + 3;
    if (v18) {
      goto LABEL_23;
    }
    v5 += 16;
    v6[2] = v19;
    swift_bridgeObjectRelease();
    uint64_t v1 = v23 - 1;
  }
  while (v23 != 1);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_100536B58(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E76B00);
  sub_100179C0C();
  uint64_t v133 = v3;
  __chkstk_darwin(v4);
  sub_100109314();
  uint64_t v132 = v5;
  uint64_t v6 = sub_10017DF08(&qword_100E66680);
  __chkstk_darwin(v6 - 8);
  sub_100109314();
  uint64_t v8 = sub_100109328(v7);
  uint64_t v129 = type metadata accessor for OpenL2Descriptor(v8);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_100109314();
  sub_100109328(v10);
  uint64_t v136 = type metadata accessor for ActivityAction();
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_100109314();
  sub_100109328(v12);
  ParameterKedouble y = type metadata accessor for WeatherQueryParameterKey();
  sub_100179C0C();
  uint64_t v146 = v13;
  __chkstk_darwin(v14);
  sub_100162EF8();
  uint64_t v143 = v15;
  sub_1001626D4();
  __chkstk_darwin(v16);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v17);
  uint64_t v144 = (char *)&v126 - v18;
  type metadata accessor for URLHandlerMatch.Values();
  sub_100179C0C();
  uint64_t v156 = v19;
  uint64_t v157 = v20;
  __chkstk_darwin(v19);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v21);
  sub_100109770();
  uint64_t v142 = v22;
  sub_1001626D4();
  __chkstk_darwin(v23);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v24);
  sub_100109770();
  uint64_t v153 = v25;
  sub_1001626D4();
  __chkstk_darwin(v26);
  uint64_t v27 = type metadata accessor for URLHandlerMatch();
  sub_100179C0C();
  uint64_t v29 = v28;
  __chkstk_darwin(v30);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v31);
  sub_100109770();
  uint64_t v141 = v32;
  sub_1001626D4();
  __chkstk_darwin(v33);
  sub_100109770();
  sub_100179C90();
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)&v126 - v35;
  __chkstk_darwin(v37);
  uint64_t v39 = (char *)&v126 - v38;
  uint64_t v40 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v40 - 8);
  sub_100162EF8();
  sub_100179C90();
  __chkstk_darwin(v41);
  uint64_t v43 = (char *)&v126 - v42;
  uint64_t v44 = type metadata accessor for Date();
  uint64_t v151 = v43;
  uint64_t v134 = v44;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 1, 1, v44);
  sub_1002AB8F0();
  uint64_t v152 = Dictionary.init(dictionaryLiteral:)();
  uint64_t v45 = v2;
  uint64_t v46 = a1;
  URLHandlerContext.match.getter();
  URLHandlerMatch.values.getter();
  uint64_t v47 = *(void (**)(void))(v29 + 8);
  uint64_t v48 = v39;
  uint64_t v49 = v27;
  uint64_t v50 = v29 + 8;
  ((void (*)(char *, uint64_t))v47)(v48, v27);
  uint64_t v51 = URLHandlerMatch.Values.subscript.getter();
  uint64_t v53 = v52;
  uint64_t v54 = *(void (**)(void))(v157 + 8);
  v157 += 8;
  sub_100127BA4();
  v54();
  uint64_t v154 = v45;
  uint64_t v155 = v46;
  uint64_t v148 = v36;
  if (v53)
  {
    uint64_t v150 = v54;
    URLHandlerContext.match.getter();
    URLHandlerMatch.values.getter();
    uint64_t v149 = v49;
    ((void (*)(char *, uint64_t))v47)(v36, v49);
    uint64_t v128 = (void (*)(void))v51;
    uint64_t v55 = v146;
    uint64_t v56 = v47;
    uint64_t v57 = v146 + 104;
    uint64_t v147 = *(void (**)(char *, void, uint64_t))(v146 + 104);
    uint64_t v127 = v53;
    uint64_t v58 = ParameterKey;
    v147(v144, enum case for WeatherQueryParameterKey.temperature(_:), ParameterKey);
    WeatherQueryParameterKey.rawValue.getter();
    uint64_t v146 = *(void *)(v55 + 8);
    sub_100183838();
    v59();
    uint64_t v60 = URLHandlerMatch.Values.subscript.getter();
    uint64_t v62 = v61;
    swift_bridgeObjectRelease();
    sub_10016285C();
    v63();
    LODWORD(v144) = sub_100BF7148((uint64_t)v128, v127, v60, v62);
    uint64_t v64 = v138;
    URLHandlerContext.match.getter();
    URLHandlerMatch.values.getter();
    uint64_t v138 = v50;
    uint64_t v128 = v56;
    ((void (*)(uint64_t, uint64_t))v56)(v64, v149);
    uint64_t v127 = v57;
    v147(v139, enum case for WeatherQueryParameterKey.date(_:), v58);
    WeatherQueryParameterKey.rawValue.getter();
    sub_100183838();
    v65();
    URLHandlerMatch.Values.subscript.getter();
    uint64_t v67 = v66;
    swift_bridgeObjectRelease();
    sub_10016285C();
    v68();
    uint64_t v69 = (uint64_t)v151;
    if (v67)
    {
      id v70 = [objc_allocWithZone((Class)NSISO8601DateFormatter) init];
      [v70 setFormatOptions:1907];
      NSString v71 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v72 = [v70 dateFromString:v71];

      if (v72)
      {
        uint64_t v73 = v135;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v74 = 0;
      }
      else
      {
        uint64_t v74 = 1;
        uint64_t v73 = v135;
      }
      uint64_t v78 = v134;

      sub_1001781AC(v69, (uint64_t *)&unk_100E73CA0);
      _s7Weather24LocationCompositionStateOwst_0(v73, v74, 1, v78);
      sub_100246A0C(v73, v69);
    }
    URLHandlerContext.match.getter();
    URLHandlerMatch.values.getter();
    uint64_t v79 = v138;
    uint64_t v76 = v128;
    sub_100127BA4();
    v80();
    uint64_t v81 = v143;
    v147(v143, enum case for WeatherQueryParameterKey.position(_:), v58);
    WeatherQueryParameterKey.rawValue.getter();
    ((void (*)(char *, uint64_t))v146)(v81, v58);
    URLHandlerMatch.Values.subscript.getter();
    uint64_t v83 = v82;
    swift_bridgeObjectRelease();
    uint64_t v77 = v150;
    sub_100127BA4();
    v84();
    if (v83)
    {
      uint64_t v85 = v152;
      swift_isUniquelyReferenced_nonNull_native();
      uint64_t v159 = v85;
      sub_100248CB8();
      uint64_t v152 = v159;
      swift_bridgeObjectRelease();
    }
    uint64_t v75 = v79;
    uint64_t v49 = v149;
  }
  else
  {
    LODWORD(v144) = 17;
    uint64_t v75 = v50;
    uint64_t v76 = v47;
    uint64_t v77 = v54;
  }
  URLHandlerContext.match.getter();
  URLHandlerMatch.values.getter();
  sub_100183838();
  v76();
  char v86 = sub_1002349B0();
  sub_10016285C();
  v77();
  if (v86)
  {
    uint64_t v87 = v145;
    sub_1001B1E64((void *)(v145 + 48), *(void *)(v145 + 72));
    uint64_t v88 = v137;
    swift_storeEnumTagMultiPayload();
    char v89 = static LocationSearchEntityFromStringResolver.__derived_struct_equals(_:_:)();
    char v90 = variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral();
    sub_100389228(v88, v89 & 1, v90 & 1);
    sub_100537B04(v88, (void (*)(void))type metadata accessor for ActivityAction);
    char v91 = (char)v144;
    if (v144 == 17)
    {
      swift_bridgeObjectRelease();
LABEL_22:
      uint64_t v104 = (uint64_t)v151;
      goto LABEL_23;
    }
    uint64_t v105 = (int *)v129;
    uint64_t v106 = v130;
    uint64_t v107 = (uint64_t)&v130[*(int *)(v129 + 24)];
    static Location.current.getter();
    uint64_t v108 = type metadata accessor for Location();
    _s7Weather24LocationCompositionStateOwst_0(v107, 0, 1, v108);
    uint64_t v109 = (uint64_t)v151;
    sub_1001C7278((uint64_t)v151, (uint64_t)&v106[v105[9]]);
    unsigned char *v106 = v91;
    v106[1] = 0;
    uint64_t v110 = &v106[v105[7]];
    *(void *)uint64_t v110 = 0;
    *((void *)v110 + 1) = 0;
    v110[16] = 1;
    uint64_t v111 = &v106[v105[8]];
    void *v111 = 0;
    v111[1] = 0;
    *(void *)&v106[v105[10]] = v152;
    sub_1001B1E64((void *)(v87 + 48), *(void *)(v87 + 72));
    uint64_t v112 = v131;
    sub_100537AA0((uint64_t)v106, v131);
    _s7Weather24LocationCompositionStateOwst_0(v112, 0, 1, (uint64_t)v105);
    sub_100387CDC(v112);
    sub_1001781AC(v112, &qword_100E66680);
    sub_100537B04((uint64_t)v106, (void (*)(void))type metadata accessor for OpenL2Descriptor);
    uint64_t v104 = v109;
  }
  else
  {
    URLHandlerContext.match.getter();
    URLHandlerMatch.values.getter();
    sub_100183838();
    v76();
    uint64_t v92 = sub_100234CA8();
    double v94 = v93;
    uint64_t v95 = v75;
    char v97 = v96;
    sub_10016285C();
    v77();
    if (v97)
    {
      uint64_t v114 = v154;
      uint64_t v113 = v155;
      uint64_t v149 = v49;
      swift_bridgeObjectRelease();
      if (qword_100E62840 != -1) {
        swift_once();
      }
      uint64_t v115 = type metadata accessor for Logger();
      sub_1002102B0(v115, (uint64_t)qword_100F51FC8);
      uint64_t v116 = v133;
      uint64_t v117 = v132;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v133 + 16))(v132, v113, v114);
      uint64_t v118 = Logger.logObject.getter();
      os_log_type_t v119 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v118, v119))
      {
        uint64_t v120 = swift_slowAlloc();
        uint64_t v138 = v95;
        uint64_t v121 = v120;
        uint64_t v122 = swift_slowAlloc();
        uint64_t v157 = v122;
        *(_DWORD *)uint64_t v121 = 141558275;
        uint64_t v158 = 1752392040;
        uint64_t v159 = v122;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v121 + 12) = 2081;
        uint64_t v155 = v121 + 14;
        URLHandlerContext.match.getter();
        URLHandlerMatch.values.getter();
        sub_100127BA4();
        v76();
        uint64_t v123 = String.init<A>(describing:)();
        uint64_t v158 = sub_10016414C(v123, v124, &v159);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v133 + 8))(v117, v114);
        _os_log_impl((void *)&_mh_execute_header, v118, v119, "No coordinates available in URL, matches=%{private,mask.hash}s", (uint8_t *)v121, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v117, v114);
      }
      goto LABEL_22;
    }
    double v98 = v94;
    uint64_t v99 = v148;
    URLHandlerContext.match.getter();
    URLHandlerMatch.values.getter();
    ((void (*)(char *, uint64_t))v76)(v99, v49);
    uint64_t v100 = sub_1002350F8();
    unint64_t v102 = v101;
    sub_10016285C();
    v77();
    uint64_t v103 = (uint64_t)v151;
    sub_1002AA938(v100, v102, (int)v144, (uint64_t)v151, v152, *(double *)&v92, v98);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v104 = v103;
  }
LABEL_23:
  sub_1001781AC(v104, (uint64_t *)&unk_100E73CA0);
  return 1;
}

uint64_t sub_100537954()
{
  swift_release();
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 48);
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1005379A0()
{
  sub_100537954();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for LocationURLHandlerLink()
{
  return self;
}

uint64_t sub_1005379F8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100537A04(uint64_t a1)
{
  return 1;
}

unint64_t sub_100537A2C(uint64_t a1)
{
  unint64_t result = sub_100537A54();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100537A54()
{
  unint64_t result = qword_100E7EDC0;
  if (!qword_100E7EDC0)
  {
    type metadata accessor for LocationURLHandlerLink();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7EDC0);
  }
  return result;
}

uint64_t sub_100537AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for OpenL2Descriptor(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100537B04(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100537B5C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for ActualListInput(0);
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = type metadata accessor for ListInput(0);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_10011BFD8();
  uint64_t v12 = sub_10017DF08(&qword_100E7F000);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v18 = v15 - v14 + *(int *)(v17 + 56);
  sub_1005407B4(a1, v15 - v14, (void (*)(void))type metadata accessor for ListInput);
  sub_1005407B4(a2, v18, (void (*)(void))type metadata accessor for ListInput);
  uint64_t v19 = sub_10017F088();
  sub_10012B520(v19, v20, v5);
  if (!v22)
  {
    sub_1005407B4(v16, v2, (void (*)(void))type metadata accessor for ListInput);
    sub_10012B520(v18, 1, v5);
    if (!v22)
    {
      sub_100540760(v18, v9, (void (*)(void))type metadata accessor for ActualListInput);
      char v21 = sub_100537DAC(v2, v9);
      sub_1001D11E8(v9, (void (*)(void))type metadata accessor for ActualListInput);
      sub_1001D11E8(v2, (void (*)(void))type metadata accessor for ActualListInput);
      sub_1001D11E8(v16, (void (*)(void))type metadata accessor for ListInput);
      return v21 & 1;
    }
    sub_1001D11E8(v2, (void (*)(void))type metadata accessor for ActualListInput);
LABEL_9:
    sub_1001781AC(v16, &qword_100E7F000);
    char v21 = 0;
    return v21 & 1;
  }
  sub_10012B520(v18, 1, v5);
  if (!v22) {
    goto LABEL_9;
  }
  sub_1001D11E8(v16, (void (*)(void))type metadata accessor for ListInput);
  char v21 = 1;
  return v21 & 1;
}

uint64_t sub_100537DAC(uint64_t a1, uint64_t a2)
{
  uint64_t v156 = type metadata accessor for ContentStatusBanner();
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v155 = (unsigned __int8 *)v6;
  uint64_t v151 = sub_10017DF08(&qword_100E64F30);
  sub_100162E4C();
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v157 = v8;
  uint64_t v9 = sub_10017DF08(&qword_100E63A10);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_100162EF8();
  uint64_t v154 = v11;
  sub_1001626D4();
  __chkstk_darwin(v12);
  sub_100109770();
  uint64_t v152 = v13;
  sub_1001626D4();
  __chkstk_darwin(v14);
  sub_100128F8C();
  uint64_t v153 = v15;
  uint64_t v16 = sub_100129064();
  uint64_t v160 = type metadata accessor for SearchViewState.ViewState(v16);
  sub_100162E4C();
  __chkstk_darwin(v17);
  sub_100109314();
  uint64_t v158 = v18;
  uint64_t v159 = sub_10017DF08(&qword_100E7F008);
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_1001626E0();
  uint64_t v22 = v21 - v20;
  uint64_t v23 = sub_10017DF08(&qword_100E70A78);
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_100162EF8();
  uint64_t v161 = v25;
  sub_1001626D4();
  __chkstk_darwin(v26);
  sub_100109770();
  uint64_t v163 = v27;
  sub_1001626D4();
  __chkstk_darwin(v28);
  sub_100128F8C();
  uint64_t v162 = v29;
  sub_100129064();
  uint64_t v30 = type metadata accessor for CurrentLocation();
  sub_100162E4C();
  __chkstk_darwin(v31);
  sub_10011BFD8();
  uint64_t v32 = sub_10017DF08(&qword_100E7F010);
  sub_100162E4C();
  __chkstk_darwin(v33);
  sub_1001626E0();
  uint64_t v36 = v35 - v34;
  uint64_t v37 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  uint64_t v38 = sub_100109308(v37);
  __chkstk_darwin(v38);
  uint64_t v40 = (char *)&v146 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v41);
  uint64_t v43 = (char *)&v146 - v42;
  __chkstk_darwin(v44);
  uint64_t v46 = (char *)&v146 - v45;
  sub_100126F60();
  if ((v47 & 1) == 0) {
    goto LABEL_16;
  }
  uint64_t v147 = v22;
  uint64_t v48 = (int *)type metadata accessor for ActualListInput(0);
  uint64_t v49 = v48[5];
  uint64_t v149 = a1;
  sub_10006DF38(a1 + v49, (uint64_t)v46, (uint64_t *)&unk_100EADD50);
  uint64_t v148 = v48;
  uint64_t v50 = v48[5];
  uint64_t v150 = a2;
  sub_10006DF38(a2 + v50, (uint64_t)v43, (uint64_t *)&unk_100EADD50);
  uint64_t v51 = v36 + *(int *)(v32 + 48);
  sub_10006DF38((uint64_t)v46, v36, (uint64_t *)&unk_100EADD50);
  sub_10006DF38((uint64_t)v43, v51, (uint64_t *)&unk_100EADD50);
  sub_10012B520(v36, 1, v30);
  if (v56)
  {
    sub_1001781AC((uint64_t)v43, (uint64_t *)&unk_100EADD50);
    sub_1001781AC((uint64_t)v46, (uint64_t *)&unk_100EADD50);
    sub_10012B520(v51, 1, v30);
    uint64_t v52 = v163;
    if (v56)
    {
      sub_1001781AC(v36, (uint64_t *)&unk_100EADD50);
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v57 = &qword_100E7F010;
    uint64_t v58 = v36;
LABEL_11:
    sub_1001781AC(v58, v57);
LABEL_16:
    char v65 = 0;
    return v65 & 1;
  }
  uint64_t v53 = sub_100183094();
  sub_10006DF38(v53, v54, v55);
  sub_10012B520(v51, 1, v30);
  uint64_t v52 = v163;
  if (v56)
  {
    sub_1001781AC((uint64_t)v43, (uint64_t *)&unk_100EADD50);
    sub_1001781AC((uint64_t)v46, (uint64_t *)&unk_100EADD50);
    sub_1001D11E8((uint64_t)v40, (void (*)(void))&type metadata accessor for CurrentLocation);
    goto LABEL_10;
  }
  sub_100540760(v51, v2, (void (*)(void))&type metadata accessor for CurrentLocation);
  char v59 = static CurrentLocation.== infix(_:_:)();
  sub_1001D11E8(v2, (void (*)(void))&type metadata accessor for CurrentLocation);
  sub_1001781AC((uint64_t)v43, (uint64_t *)&unk_100EADD50);
  sub_1001781AC((uint64_t)v46, (uint64_t *)&unk_100EADD50);
  sub_1001D11E8((uint64_t)v40, (void (*)(void))&type metadata accessor for CurrentLocation);
  sub_1001781AC(v36, (uint64_t *)&unk_100EADD50);
  if ((v59 & 1) == 0) {
    goto LABEL_16;
  }
LABEL_13:
  uint64_t v61 = v148;
  uint64_t v60 = v149;
  uint64_t v62 = v150;
  sub_100126F0C();
  if ((v63 & 1) == 0) {
    goto LABEL_16;
  }
  sub_100126C70();
  if ((v64 & 1) == 0) {
    goto LABEL_16;
  }
  sub_100183BD8();
  if (!v56) {
    goto LABEL_16;
  }
  sub_1001A4664();
  if (v67)
  {
    uint64_t v71 = v147;
    uint64_t v72 = v161;
    uint64_t v73 = v162;
    if (!v68) {
      goto LABEL_16;
    }
    if (*v69 != *v70 || v67 != v68)
    {
      _stringCompareWithSmolCheck(_:_:expecting:)();
      char v65 = sub_1001190E0();
      if ((v75 & 1) == 0) {
        return v65 & 1;
      }
    }
  }
  else
  {
    uint64_t v71 = v147;
    uint64_t v72 = v161;
    uint64_t v73 = v162;
    if (v68) {
      goto LABEL_16;
    }
  }
  uint64_t v76 = v61[10];
  uint64_t v77 = (void *)(v60 + v76);
  int v78 = *(unsigned __int8 *)(v60 + v76 + 8);
  uint64_t v79 = (void *)(v62 + v76);
  char v80 = *(unsigned char *)(v62 + v76 + 8);
  if (v78 == 1)
  {
    if ((v80 & 1) == 0) {
      goto LABEL_16;
    }
  }
  else
  {
    if (*v77 != *v79) {
      char v80 = 1;
    }
    if (v80) {
      goto LABEL_16;
    }
  }
  sub_100183BD8();
  if (!v56) {
    goto LABEL_16;
  }
  uint64_t v81 = v61[12];
  uint64_t v82 = *(void *)(v60 + v81);
  uint64_t v83 = *(void *)(v60 + v81 + 8);
  uint64_t v84 = (void *)(v62 + v81);
  if (v82 != *v84 || v83 != v84[1])
  {
    _stringCompareWithSmolCheck(_:_:expecting:)();
    char v65 = sub_1001190E0();
    if ((v86 & 1) == 0) {
      return v65 & 1;
    }
  }
  sub_1001A4664();
  if (v87)
  {
    if (!v88) {
      goto LABEL_16;
    }
    if (*v89 != *v90 || v87 != v88)
    {
      _stringCompareWithSmolCheck(_:_:expecting:)();
      char v65 = sub_1001190E0();
      if ((v92 & 1) == 0) {
        return v65 & 1;
      }
    }
  }
  else if (v88)
  {
    goto LABEL_16;
  }
  sub_10006DF38(v60 + v61[14], v73, &qword_100E70A78);
  sub_10006DF38(v62 + v61[14], v52, &qword_100E70A78);
  uint64_t v93 = v71 + *(int *)(v159 + 48);
  sub_10006DF38(v73, v71, &qword_100E70A78);
  sub_10006DF38(v52, v93, &qword_100E70A78);
  uint64_t v94 = v160;
  sub_10012B520(v71, 1, v160);
  if (v56)
  {
    sub_1001781AC(v52, &qword_100E70A78);
    sub_1001781AC(v73, &qword_100E70A78);
    uint64_t v95 = sub_10017F088();
    sub_10012B520(v95, v96, v94);
    if (v56)
    {
      sub_1001781AC(v71, &qword_100E70A78);
      goto LABEL_59;
    }
    goto LABEL_57;
  }
  sub_10006DF38(v71, v72, &qword_100E70A78);
  uint64_t v97 = sub_10017F088();
  sub_10012B520(v97, v98, v94);
  if (v99)
  {
    sub_1001781AC(v52, &qword_100E70A78);
    sub_1001781AC(v162, &qword_100E70A78);
    sub_1001D11E8(v72, (void (*)(void))type metadata accessor for SearchViewState.ViewState);
LABEL_57:
    uint64_t v57 = &qword_100E7F008;
    uint64_t v58 = v71;
    goto LABEL_11;
  }
  uint64_t v100 = v72;
  uint64_t v101 = v158;
  sub_100540760(v93, v158, (void (*)(void))type metadata accessor for SearchViewState.ViewState);
  sub_10011D198(v100, v101, v102, v103, v104, v105, v106, v107, v146, v147, (uint64_t)v148, v149, v150, v151, v152, v153, (uint64_t)v154, (uint64_t)v155, v156,
    v157);
  char v109 = v108;
  sub_1001D11E8(v101, (void (*)(void))type metadata accessor for SearchViewState.ViewState);
  sub_1001781AC(v52, &qword_100E70A78);
  sub_1001781AC(v162, &qword_100E70A78);
  sub_1001D11E8(v100, (void (*)(void))type metadata accessor for SearchViewState.ViewState);
  sub_1001781AC(v71, &qword_100E70A78);
  if ((v109 & 1) == 0) {
    goto LABEL_16;
  }
LABEL_59:
  sub_100183BD8();
  if (!v56) {
    goto LABEL_16;
  }
  if ((sub_100222164(*(unsigned char *)(v60 + v61[16]), *(unsigned char *)(v62 + v61[16])) & 1) == 0) {
    goto LABEL_16;
  }
  sub_100183BD8();
  if (!v56) {
    goto LABEL_16;
  }
  sub_10017FE94();
  if (!v56) {
    goto LABEL_16;
  }
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    goto LABEL_16;
  }
  sub_10017FE94();
  if (!v56) {
    goto LABEL_16;
  }
  sub_10017FE94();
  if (!v56) {
    goto LABEL_16;
  }
  uint64_t v110 = v148[22];
  char v111 = *(unsigned char *)(v150 + v110);
  unint64_t v112 = LocationAuthorizationState.rawValue.getter(*(unsigned char *)(v149 + v110));
  uint64_t v114 = v113;
  if (v112 == LocationAuthorizationState.rawValue.getter(v111) && v114 == v115)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v119 = v149;
    uint64_t v118 = v150;
    uint64_t v120 = v148;
  }
  else
  {
    char v117 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v65 = 0;
    uint64_t v119 = v149;
    uint64_t v118 = v150;
    uint64_t v120 = v148;
    if ((v117 & 1) == 0) {
      return v65 & 1;
    }
  }
  if ((sub_1001197F8(*(unsigned __int8 *)(v119 + v120[23]), *(unsigned __int8 *)(v118 + v120[23])) & 1) == 0) {
    goto LABEL_16;
  }
  if (*(unsigned __int8 *)(v149 + v148[24]) != *(unsigned __int8 *)(v150 + v148[24])) {
    goto LABEL_16;
  }
  sub_10011B100();
  if ((v121 & 1) == 0) {
    goto LABEL_16;
  }
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    goto LABEL_16;
  }
  sub_10017FE94();
  if (!v56) {
    goto LABEL_16;
  }
  uint64_t v122 = v148[27];
  uint64_t v123 = *(void **)(v149 + v122);
  unint64_t v124 = *(void **)(v150 + v122);
  if (v123)
  {
    if (!v124) {
      goto LABEL_16;
    }
    sub_10011CB48();
    id v125 = v124;
    id v126 = v123;
    char v127 = static NSObject.== infix(_:_:)();

    if ((v127 & 1) == 0) {
      goto LABEL_16;
    }
  }
  else if (v124)
  {
    goto LABEL_16;
  }
  uint64_t v128 = v148[28];
  uint64_t v129 = *(void *)(v149 + v128);
  uint64_t v130 = *(void *)(v149 + v128 + 8);
  uint64_t v131 = (void *)(v150 + v128);
  BOOL v132 = v129 == *v131 && v130 == v131[1];
  if (v132 || (_stringCompareWithSmolCheck(_:_:expecting:)(), char v65 = sub_1001190E0(), (v133 & 1) != 0))
  {
    sub_10011AD08();
    if ((v134 & 1) == 0) {
      goto LABEL_16;
    }
    sub_10011A5D0();
    if ((v135 & 1) == 0) {
      goto LABEL_16;
    }
    sub_10017FE94();
    if (!v56) {
      goto LABEL_16;
    }
    if (*(void *)(v149 + v148[30]) != *(void *)(v150 + v148[30])) {
      goto LABEL_16;
    }
    sub_10017FE94();
    if (!v56) {
      goto LABEL_16;
    }
    uint64_t v136 = v148;
    uint64_t v137 = v153;
    sub_10006DF38(v149 + v148[32], v153, &qword_100E63A10);
    uint64_t v138 = v152;
    sub_10006DF38(v150 + v136[32], v152, &qword_100E63A10);
    uint64_t v139 = v157;
    uint64_t v140 = v157 + *(int *)(v151 + 48);
    sub_10006DF38(v137, v157, &qword_100E63A10);
    sub_10006DF38(v138, v140, &qword_100E63A10);
    sub_10012B520(v139, 1, v156);
    if (v56)
    {
      sub_1001781AC(v152, &qword_100E63A10);
      sub_1001781AC(v153, &qword_100E63A10);
      sub_10012B520(v140, 1, v156);
      if (v56)
      {
        sub_1001781AC(v157, &qword_100E63A10);
        goto LABEL_111;
      }
    }
    else
    {
      sub_10006DF38(v157, (uint64_t)v154, &qword_100E63A10);
      sub_10012B520(v140, 1, v156);
      if (!v141)
      {
        uint64_t v142 = v155;
        sub_100540760(v140, (uint64_t)v155, (void (*)(void))type metadata accessor for ContentStatusBanner);
        BOOL v143 = sub_1001C6EF8(v154, v142);
        sub_1001D11E8((uint64_t)v142, (void (*)(void))type metadata accessor for ContentStatusBanner);
        sub_1001781AC(v152, &qword_100E63A10);
        sub_1001781AC(v153, &qword_100E63A10);
        uint64_t v144 = sub_100183094();
        sub_1001D11E8(v144, v145);
        sub_1001781AC(v157, &qword_100E63A10);
        if (!v143) {
          goto LABEL_16;
        }
LABEL_111:
        sub_10017FE94();
        if (v56)
        {
          sub_10017FE94();
          if (v56)
          {
            sub_100126FF0();
            return v65 & 1;
          }
        }
        goto LABEL_16;
      }
      sub_1001781AC(v152, &qword_100E63A10);
      sub_1001781AC(v153, &qword_100E63A10);
      sub_1001D11E8((uint64_t)v154, (void (*)(void))type metadata accessor for ContentStatusBanner);
    }
    uint64_t v57 = &qword_100E64F30;
    uint64_t v58 = v157;
    goto LABEL_11;
  }
  return v65 & 1;
}

uint64_t sub_100538A20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, char a10, char a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, char a18, char a19, char a20,uint64_t a21,char a22,char a23,char a24,char a25,char a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,long long a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,char a36,uint64_t a37,char a38,char a39,uint64_t a40)
{
  *a9 = a1;
  char v41 = a5 & 1;
  uint64_t v42 = (int *)type metadata accessor for ActualListInput(0);
  sub_10024D364(a2, (uint64_t)a9 + v42[5], (uint64_t *)&unk_100EADD50);
  *(void *)((char *)a9 + v42[6]) = a3;
  *(void *)((char *)a9 + v42[7]) = a4;
  *((unsigned char *)a9 + v42[8]) = v41;
  uint64_t v43 = (void *)((char *)a9 + v42[9]);
  void *v43 = a6;
  v43[1] = a7;
  uint64_t v44 = (char *)a9 + v42[10];
  *(void *)uint64_t v44 = a8;
  v44[8] = a10 & 1;
  *((unsigned char *)a9 + v42[11]) = a11;
  uint64_t v45 = (void *)((char *)a9 + v42[12]);
  *uint64_t v45 = a12;
  v45[1] = a13;
  uint64_t v46 = (void *)((char *)a9 + v42[13]);
  void *v46 = a14;
  v46[1] = a15;
  sub_10024D364(a16, (uint64_t)a9 + v42[14], &qword_100E70A78);
  *((unsigned char *)a9 + v42[15]) = a17;
  *((unsigned char *)a9 + v42[16]) = a18;
  *((unsigned char *)a9 + v42[17]) = a19;
  *((unsigned char *)a9 + v42[18]) = a20;
  char v47 = (char *)a9 + v42[19];
  uint64_t v48 = type metadata accessor for Date();
  sub_100162E4C();
  uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(v49 + 32);
  v50(v47, a21, v48);
  *((unsigned char *)a9 + v42[20]) = a22;
  *((unsigned char *)a9 + v42[21]) = a23;
  *((unsigned char *)a9 + v42[22]) = a24;
  *((unsigned char *)a9 + v42[23]) = a25;
  uint64_t v51 = (char *)a9 + v42[24];
  *uint64_t v51 = a26;
  *((void *)v51 + 1) = a27;
  v50((char *)a9 + v42[25], a28, v48);
  *((unsigned char *)a9 + v42[26]) = a29;
  *(void *)((char *)a9 + v42[27]) = a30;
  uint64_t v52 = (char *)a9 + v42[28];
  *(_OWORD *)uint64_t v52 = a31;
  *((void *)v52 + 2) = a32;
  *((void *)v52 + 3) = a33;
  *((unsigned char *)a9 + v42[29]) = a34;
  *(void *)((char *)a9 + v42[30]) = a35;
  *((unsigned char *)a9 + v42[31]) = a36;
  uint64_t result = sub_10024D364(a37, (uint64_t)a9 + v42[32], &qword_100E63A10);
  *((unsigned char *)a9 + v42[33]) = a38;
  *((unsigned char *)a9 + v42[34]) = a39;
  *(void *)((char *)a9 + v42[35]) = a40;
  return result;
}

uint64_t sub_100538D60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E63A10);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v7 = sub_100109328(v6);
  uint64_t v220 = type metadata accessor for ModalViewState(v7);
  sub_100162E4C();
  __chkstk_darwin(v8);
  sub_100109314();
  uint64_t v221 = v9;
  sub_100129064();
  uint64_t v10 = type metadata accessor for TimeState();
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_100109314();
  sub_100109328(v12);
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = sub_10017C81C(v13, (uint64_t)&v238);
  uint64_t v217 = v15;
  __chkstk_darwin(v14);
  sub_100162EF8();
  uint64_t v231 = v16;
  sub_1001626D4();
  __chkstk_darwin(v17);
  sub_100128F8C();
  uint64_t v230 = v18;
  uint64_t v19 = sub_10017DF08(&qword_100E70A78);
  uint64_t v20 = sub_100109308(v19);
  __chkstk_darwin(v20);
  sub_100109314();
  uint64_t v228 = v21;
  uint64_t v22 = sub_10017DF08(&qword_100E66408);
  uint64_t v23 = sub_100109308(v22);
  __chkstk_darwin(v23);
  sub_100162EF8();
  uint64_t v222 = v24;
  sub_1001626D4();
  __chkstk_darwin(v25);
  uint64_t v27 = (uint64_t *)&v188[-v26];
  uint64_t v28 = type metadata accessor for ListInput(0);
  sub_100162E4C();
  __chkstk_darwin(v29);
  sub_100109314();
  sub_100109328(v30);
  uint64_t v31 = type metadata accessor for CurrentWeather();
  uint64_t v32 = sub_10017C81C(v31, (uint64_t)&v227);
  uint64_t v194 = v33;
  __chkstk_darwin(v32);
  sub_100109314();
  sub_100109328(v34);
  uint64_t active = type metadata accessor for LocationViewerActiveLocationState();
  uint64_t v36 = sub_100109308(active);
  __chkstk_darwin(v36);
  sub_100109314();
  uint64_t v198 = v37;
  uint64_t v38 = sub_10017DF08(&qword_100E63770);
  uint64_t v39 = sub_100109308(v38);
  __chkstk_darwin(v39);
  sub_100109314();
  uint64_t v199 = v40;
  uint64_t v41 = sub_10017DF08(&qword_100E63850);
  uint64_t v42 = sub_100109308(v41);
  __chkstk_darwin(v42);
  sub_100109314();
  uint64_t v44 = sub_100109328(v43);
  uint64_t v196 = type metadata accessor for WeatherData(v44);
  sub_100162E4C();
  __chkstk_darwin(v45);
  sub_100109314();
  uint64_t v47 = sub_100109328(v46);
  uint64_t v213 = type metadata accessor for ViewState.SecondaryViewState(v47);
  sub_100162E4C();
  __chkstk_darwin(v48);
  sub_100109314();
  uint64_t v226 = v49;
  uint64_t v50 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  uint64_t v51 = sub_100109308(v50);
  __chkstk_darwin(v51);
  sub_100162EF8();
  uint64_t v229 = v52;
  sub_1001626D4();
  __chkstk_darwin(v53);
  uint64_t v55 = &v188[-v54];
  __chkstk_darwin(v56);
  uint64_t v58 = &v188[-v57];
  __chkstk_darwin(v59);
  sub_100128F8C();
  uint64_t v237 = v60;
  uint64_t v61 = sub_100129064();
  uint64_t v62 = type metadata accessor for ViewState(v61);
  sub_100162E4C();
  __chkstk_darwin(v63);
  sub_100162EF8();
  uint64_t v216 = v64;
  sub_1001626D4();
  __chkstk_darwin(v65);
  uint64_t v67 = &v188[-v66];
  __chkstk_darwin(v68);
  sub_100109770();
  uint64_t v214 = v69;
  sub_1001626D4();
  __chkstk_darwin(v70);
  sub_100109770();
  uint64_t v212 = v71;
  sub_1001626D4();
  __chkstk_darwin(v72);
  uint64_t v74 = &v188[-v73];
  __chkstk_darwin(v75);
  uint64_t v77 = &v188[-v76];
  if (qword_100E62668 != -1) {
    swift_once();
  }
  Swift::String v215 = v27;
  uint64_t v78 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
  uint64_t v233 = v62;
  if (byte_100F51C48 == 1)
  {
    sub_1005407B4(v78, (uint64_t)v77, (void (*)(void))type metadata accessor for ViewState);
    uint64_t v79 = *v77;
    uint64_t v74 = v77;
LABEL_9:
    uint64_t v205 = v67;
    sub_100182A84();
    uint64_t v206 = v79;
    swift_retain();
    goto LABEL_10;
  }
  sub_1005407B4(v78, (uint64_t)v74, (void (*)(void))type metadata accessor for ViewState);
  uint64_t v79 = *v74;
  if (*(void *)((char *)v74 + *(int *)(v62 + 36) + 8) != 1) {
    goto LABEL_9;
  }
  char v80 = self;
  swift_retain();
  id v81 = [v80 currentDevice];
  [v81 userInterfaceIdiom];

  if (*((unsigned char *)v74 + *(int *)(v233 + 28)) == 1)
  {
    swift_release();
    sub_1001D11E8((uint64_t)v74, (void (*)(void))type metadata accessor for ViewState);
    uint64_t v82 = type metadata accessor for ActualListInput(0);
    _s7Weather24LocationCompositionStateOwst_0(a2, 1, 1, v82);
    sub_1001093B0();
    return _s7Weather24LocationCompositionStateOwst_0(v83, v84, v85, v28);
  }
  uint64_t v205 = v67;
  uint64_t v206 = v79;
  sub_100182A84();
LABEL_10:
  sub_1001D11E8((uint64_t)v74, (void (*)(void))type metadata accessor for ViewState);
  uint64_t v87 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData;
  uint64_t v88 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 8);
  uint64_t v236 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData);
  uint64_t v89 = a1;
  uint64_t v90 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  uint64_t v91 = *(void *)(v87 + 24);
  uint64_t v227 = v89 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations;
  sub_10006DF38(v89 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, v237, (uint64_t *)&unk_100EADD50);
  uint64_t v92 = v89;
  uint64_t v93 = (unsigned __int8 *)(v89 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn);
  v224 = (int *)type metadata accessor for NotificationsOptInState();
  v225 = v93;
  LODWORD(v223) = v93[v224[14]];
  uint64_t v94 = sub_100183094();
  sub_10006DF38(v94, v95, (uint64_t *)&unk_100EADD50);
  uint64_t v96 = type metadata accessor for CurrentLocation();
  int v97 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v58, 1, v96);
  uint64_t v235 = v88;
  uint64_t v98 = v90;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v234 = v91;
  swift_bridgeObjectRetain();
  if (v97 == 1)
  {
    sub_1001781AC((uint64_t)v58, (uint64_t *)&unk_100EADD50);
  }
  else
  {
    CurrentLocation.id.getter();
    sub_1001D11E8((uint64_t)v58, (void (*)(void))&type metadata accessor for CurrentLocation);
  }
  sub_10013F4E8();
  char v100 = v99;
  swift_bridgeObjectRelease();
  sub_10006DF38(v237, (uint64_t)v55, (uint64_t *)&unk_100EADD50);
  uint64_t v101 = sub_10017F088();
  sub_10012B520(v101, v102, v96);
  uint64_t v103 = v92;
  uint64_t v104 = v206;
  if (v128)
  {
    sub_1001781AC((uint64_t)v55, (uint64_t *)&unk_100EADD50);
  }
  else
  {
    CurrentLocation.id.getter();
    sub_1001D11E8((uint64_t)v55, (void (*)(void))&type metadata accessor for CurrentLocation);
  }
  uint64_t v105 = (void *)v226;
  char v106 = v223;
  sub_100183094();
  sub_10013F4D0();
  char v108 = v107;
  swift_bridgeObjectRelease();
  uint64_t v109 = v103 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess();
  uint64_t v200 = OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications;
  char v110 = *(unsigned char *)(v103 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications);
  uint64_t v226 = v109;
  int v202 = sub_10013D94C(v106, v100 & 1, v108 & 1, *(unsigned char *)(v109 + 1), v110);
  uint64_t v111 = *(void *)(v104 + 48);
  uint64_t v112 = *(void *)(v104 + 56);
  if (!v112) {
    uint64_t v111 = 0;
  }
  uint64_t v201 = v111;
  int v113 = v225[v224[12]];
  int v114 = *(unsigned __int8 *)(v232 + 16);
  uint64_t v207 = v98;
  if (v114)
  {
    uint64_t v115 = v222;
    uint64_t v116 = v233;
    if (v114 != 3 && !v113) {
      int v113 = v114;
    }
  }
  else
  {
    uint64_t v115 = v222;
    uint64_t v116 = v233;
  }
  uint64_t v117 = v103 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view;
  uint64_t v118 = v212;
  sub_1005407B4(v103 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v212, (void (*)(void))type metadata accessor for ViewState);
  sub_1005407B4(v118 + *(int *)(v116 + 20), (uint64_t)v105, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
  swift_bridgeObjectRetain();
  sub_1001D11E8(v118, (void (*)(void))type metadata accessor for ViewState);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  int v204 = v113;
  uint64_t v203 = v112;
  uint64_t v223 = v117;
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v120 = *(void *)(v87 + 16);
    uint64_t v121 = v198;
    sub_1005407B4(*v105 + OBJC_IVAR____TtCV7Weather23LocationViewerViewState8_Storage_activeLocationState, v198, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
    swift_bridgeObjectRetain();
    uint64_t v122 = sub_1001782AC();
    uint64_t v124 = v123;
    sub_1001D11E8(v121, (void (*)(void))type metadata accessor for LocationViewerActiveLocationState);
    uint64_t v125 = v199;
    sub_1001BBE9C(v122, v124, v120);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v126 = type metadata accessor for LocationWeatherDataState(0);
    sub_10012B520(v125, 1, v126);
    if (v128)
    {
      sub_1001781AC(v125, &qword_100E63770);
      uint64_t v127 = v197;
      _s7Weather24LocationCompositionStateOwst_0(v197, 1, 1, v196);
      uint64_t v115 = v222;
    }
    else
    {
      uint64_t v127 = v197;
      sub_1001177B0(v197);
      sub_1001D11E8(v125, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      sub_10012B520(v127, 1, v196);
      uint64_t v115 = v222;
      if (!v128)
      {
        uint64_t v129 = (uint64_t)v192;
        sub_100540760(v127, (uint64_t)v192, (void (*)(void))type metadata accessor for WeatherData);
        uint64_t v130 = v193;
        WeatherDataModel.currentWeather.getter();
        int v189 = CurrentWeather.requiresAdditionalContrast.getter();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v194 + 8))(v130, v195);
        sub_1001D11E8(v129, (void (*)(void))type metadata accessor for WeatherData);
LABEL_33:
        uint64_t v116 = v233;
        goto LABEL_34;
      }
    }
    swift_release();
    sub_1001781AC(v127, &qword_100E63850);
    int v189 = 0;
    goto LABEL_33;
  }
  sub_1001D11E8((uint64_t)v105, (void (*)(void))type metadata accessor for ViewState.SecondaryViewState);
  int v189 = 0;
LABEL_34:
  uint64_t v131 = (int *)type metadata accessor for LocationsState();
  uint64_t v132 = v227;
  uint64_t v133 = *(void *)(v227 + v131[9]);
  sub_10006DF38(v237, v229, (uint64_t *)&unk_100EADD50);
  uint64_t v192 = v131;
  uint64_t v134 = *(void *)(v132 + v131[5]);
  uint64_t v135 = *(void *)(v132 + v131[6]);
  LODWORD(v212) = *(unsigned __int8 *)(v104 + 88);
  uint64_t v136 = *(void *)(v104 + 80);
  uint64_t v199 = *(void *)(v104 + 72);
  uint64_t v197 = *(void *)(v104 + 16);
  LODWORD(v195) = *(unsigned __int8 *)(v104 + 24);
  LODWORD(v194) = *(unsigned __int8 *)(v104 + 64);
  uint64_t v137 = v214;
  sub_1005407B4(v223, v214, (void (*)(void))type metadata accessor for ViewState);
  uint64_t v138 = v215;
  sub_10006DF38(v137 + *(int *)(v116 + 32), (uint64_t)v215, &qword_100E66408);
  uint64_t v198 = v136;
  swift_bridgeObjectRetain();
  uint64_t v222 = v133;
  swift_bridgeObjectRetain();
  uint64_t v196 = v134;
  swift_bridgeObjectRetain();
  uint64_t v213 = v135;
  swift_bridgeObjectRetain();
  sub_1001D11E8(v137, (void (*)(void))type metadata accessor for ViewState);
  uint64_t v139 = type metadata accessor for SearchViewState(0);
  sub_10012B520((uint64_t)v138, 1, v139);
  if (v128)
  {
    sub_1001781AC((uint64_t)v138, &qword_100E66408);
    uint64_t v191 = 0;
    uint64_t v190 = 0xE000000000000000;
  }
  else
  {
    uint64_t v140 = v138[1];
    uint64_t v191 = *v138;
    uint64_t v190 = v140;
    swift_bridgeObjectRetain();
    sub_1001D11E8((uint64_t)v138, (void (*)(void))type metadata accessor for SearchViewState);
  }
  uint64_t v141 = v223;
  uint64_t v142 = (uint64_t)v205;
  sub_1005407B4(v223, (uint64_t)v205, (void (*)(void))type metadata accessor for ViewState);
  sub_10006DF38(v142 + *(int *)(v116 + 32), v115, &qword_100E66408);
  sub_1001D11E8(v142, (void (*)(void))type metadata accessor for ViewState);
  sub_10012B520(v115, 1, v139);
  if (v128)
  {
    sub_1001781AC(v115, &qword_100E66408);
    uint64_t v144 = 1;
    uint64_t v143 = v228;
  }
  else
  {
    uint64_t v143 = v228;
    sub_1005407B4(v115 + *(int *)(v139 + 20), v228, (void (*)(void))type metadata accessor for SearchViewState.ViewState);
    sub_1001D11E8(v115, (void (*)(void))type metadata accessor for SearchViewState);
    uint64_t v144 = 0;
  }
  uint64_t v145 = type metadata accessor for SearchViewState.ViewState(0);
  _s7Weather24LocationCompositionStateOwst_0(v143, v144, 1, v145);
  LODWORD(v215) = *(unsigned __int8 *)(v104 + 27);
  uint64_t v146 = v225;
  LODWORD(v214) = *v225;
  LODWORD(v205) = v225[17];
  uint64_t v147 = v224;
  uint64_t v148 = v217;
  uint64_t v149 = v218;
  (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v217 + 16))(v230, &v225[v224[10]], v218);
  LODWORD(v225) = v146[v147[11]];
  uint64_t v150 = v226;
  LODWORD(v224) = *(unsigned __int8 *)(v226 + 1);
  LODWORD(v200) = *(unsigned __int8 *)(v103 + v200);
  LODWORD(v193) = *(unsigned __int8 *)(v103 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_debugState);
  uint64_t v151 = *(void *)(v103 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_debugState + 8);
  uint64_t v152 = v219;
  sub_1005407B4(v103 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_time, v219, (void (*)(void))type metadata accessor for TimeState);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v148 + 32))(v231, v152, v149);
  uint64_t v153 = type metadata accessor for EnvironmentState();
  LODWORD(v219) = *(unsigned __int8 *)(v150 + *(int *)(v153 + 36));
  uint64_t v154 = *(void **)(v150 + *(int *)(v153 + 68) + 16);
  uint64_t v155 = v221;
  sub_1005407B4(v103 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView, v221, (void (*)(void))type metadata accessor for ModalViewState);
  int v156 = swift_getEnumCaseMultiPayload();
  id v157 = v154;
  swift_bridgeObjectRetain();
  sub_1001D11E8(v155, (void (*)(void))type metadata accessor for ModalViewState);
  uint64_t v158 = v216;
  sub_1005407B4(v141, v216, (void (*)(void))type metadata accessor for ViewState);
  uint64_t v159 = *(void *)(v158 + *(int *)(v233 + 36) + 8);
  sub_1001D11E8(v158, (void (*)(void))type metadata accessor for ViewState);
  char v160 = *(unsigned char *)(v104 + 89);
  uint64_t v161 = *(void *)(v103 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_contentStatusBanners);
  if (*(void *)(v161 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v162 = sub_1001EB73C(0, 0);
    if (v163)
    {
      unint64_t v164 = v162;
      uint64_t v165 = *(void *)(v161 + 56);
      uint64_t v166 = type metadata accessor for ContentStatusBanner();
      sub_100162E4C();
      uint64_t v168 = v165 + *(void *)(v167 + 72) * v164;
      uint64_t v150 = v211;
      sub_1005407B4(v168, v211, (void (*)(void))type metadata accessor for ContentStatusBanner);
      sub_1001093B0();
      uint64_t v172 = v166;
    }
    else
    {
      type metadata accessor for ContentStatusBanner();
      uint64_t v169 = sub_100189124();
    }
    _s7Weather24LocationCompositionStateOwst_0(v169, v170, v171, v172);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for ContentStatusBanner();
    uint64_t v173 = sub_100189124();
    _s7Weather24LocationCompositionStateOwst_0(v173, v174, v175, v176);
    swift_release();
  }
  uint64_t v177 = v210;
  uint64_t v178 = (uint64_t)v192;
  sub_1001781AC(v237, (uint64_t *)&unk_100EADD50);
  *((void *)&v187 + 1) = v235;
  *(void *)&long long v187 = v236;
  char v179 = v204;
  sub_100538A20(v222, v229, v196, v213, v212, v199, v198, v197, v177, v195, v194, v191, v190, v201, v203, v228, (char)v215, v202, v214,
    (char)v205,
    v230,
    (char)v225,
    v204,
    (char)v224,
    v200,
    v193,
    v151,
    v231,
    v219,
    (uint64_t)v154,
    v187,
    v207,
    v234,
    v156 == 0,
    v159,
    v160,
    v150,
    *(unsigned char *)(v226 + 2) == 4,
    v189 & 1,
    *(void *)(v227 + *(int *)(v178 + 28)));
  type metadata accessor for ActualListInput(0);
  sub_1001093B0();
  _s7Weather24LocationCompositionStateOwst_0(v180, v181, v182, v183);
  *(unsigned char *)(v232 + 16) = v179;
  sub_100540760((uint64_t)v177, v209, (void (*)(void))type metadata accessor for ListInput);
  sub_1001093B0();
  _s7Weather24LocationCompositionStateOwst_0(v184, v185, v186, v208);
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for ListInputFactory()
{
  return self;
}

uint64_t *sub_10053A0E4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v6 = *(void *)(a3 - 8);
  uint64_t v7 = (int *)type metadata accessor for ActualListInput(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v7))
  {
    memcpy(a1, a2, *(void *)(v6 + 64));
    return a1;
  }
  *a1 = *a2;
  uint64_t v9 = v7[5];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for CurrentLocation();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
  {
    uint64_t v13 = sub_10017DF08((uint64_t *)&unk_100EADD50);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() > 2)
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v14 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v10, v11, v14);
      swift_storeEnumTagMultiPayload();
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
  }
  *(uint64_t *)((char *)a1 + v7[6]) = *(uint64_t *)((char *)a2 + v7[6]);
  *(uint64_t *)((char *)a1 + v7[7]) = *(uint64_t *)((char *)a2 + v7[7]);
  *((unsigned char *)a1 + v7[8]) = *((unsigned char *)a2 + v7[8]);
  uint64_t v15 = v7[9];
  uint64_t v16 = (uint64_t *)((char *)a1 + v15);
  uint64_t v17 = (uint64_t *)((char *)a2 + v15);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = v7[10];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  *(void *)uint64_t v20 = *(void *)v21;
  v20[8] = v21[8];
  *((unsigned char *)a1 + v7[11]) = *((unsigned char *)a2 + v7[11]);
  uint64_t v22 = v7[12];
  uint64_t v23 = (uint64_t *)((char *)a1 + v22);
  uint64_t v24 = (uint64_t *)((char *)a2 + v22);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  uint64_t v26 = v7[13];
  uint64_t v27 = (uint64_t *)((char *)a1 + v26);
  uint64_t v28 = (uint64_t *)((char *)a2 + v26);
  uint64_t v29 = v28[1];
  *uint64_t v27 = *v28;
  v27[1] = v29;
  uint64_t v30 = v7[14];
  uint64_t v31 = (uint64_t *)((char *)a1 + v30);
  uint64_t v32 = (uint64_t *)((char *)a2 + v30);
  uint64_t v33 = type metadata accessor for SearchViewState.ViewState(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v32, 1, v33))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      void *v31 = *v32;
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
        goto LABEL_19;
      }
      uint64_t v36 = type metadata accessor for CodableError();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 16))(v31, v32, v36);
    }
    swift_storeEnumTagMultiPayload();
LABEL_19:
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v31, 0, 1, v33);
    goto LABEL_20;
  }
  uint64_t v34 = sub_10017DF08(&qword_100E70A78);
  memcpy(v31, v32, *(void *)(*(void *)(v34 - 8) + 64));
LABEL_20:
  *((unsigned char *)a1 + v7[15]) = *((unsigned char *)a2 + v7[15]);
  *((unsigned char *)a1 + v7[16]) = *((unsigned char *)a2 + v7[16]);
  *((unsigned char *)a1 + v7[17]) = *((unsigned char *)a2 + v7[17]);
  *((unsigned char *)a1 + v7[18]) = *((unsigned char *)a2 + v7[18]);
  uint64_t v37 = v7[19];
  uint64_t v38 = (char *)a1 + v37;
  uint64_t v39 = (char *)a2 + v37;
  uint64_t v40 = type metadata accessor for Date();
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16);
  v41(v38, v39, v40);
  *((unsigned char *)a1 + v7[20]) = *((unsigned char *)a2 + v7[20]);
  *((unsigned char *)a1 + v7[21]) = *((unsigned char *)a2 + v7[21]);
  *((unsigned char *)a1 + v7[22]) = *((unsigned char *)a2 + v7[22]);
  *((unsigned char *)a1 + v7[23]) = *((unsigned char *)a2 + v7[23]);
  uint64_t v42 = v7[24];
  uint64_t v43 = (char *)a1 + v42;
  uint64_t v44 = (char *)a2 + v42;
  char *v43 = *v44;
  *((void *)v43 + 1) = *((void *)v44 + 1);
  uint64_t v45 = v7[25];
  uint64_t v46 = (char *)a1 + v45;
  uint64_t v47 = (char *)a2 + v45;
  swift_bridgeObjectRetain();
  uint64_t v67 = v41;
  v41(v46, v47, v40);
  *((unsigned char *)a1 + v7[26]) = *((unsigned char *)a2 + v7[26]);
  uint64_t v48 = v7[27];
  uint64_t v49 = *(void **)((char *)a2 + v48);
  *(uint64_t *)((char *)a1 + v48) = (uint64_t)v49;
  uint64_t v50 = v7[28];
  uint64_t v51 = (uint64_t *)((char *)a1 + v50);
  uint64_t v52 = (uint64_t *)((char *)a2 + v50);
  uint64_t v53 = v52[1];
  *uint64_t v51 = *v52;
  v51[1] = v53;
  uint64_t v54 = v52[3];
  void v51[2] = v52[2];
  v51[3] = v54;
  *((unsigned char *)a1 + v7[29]) = *((unsigned char *)a2 + v7[29]);
  *(uint64_t *)((char *)a1 + v7[30]) = *(uint64_t *)((char *)a2 + v7[30]);
  *((unsigned char *)a1 + v7[31]) = *((unsigned char *)a2 + v7[31]);
  uint64_t v55 = v7[32];
  __dst = (uint64_t *)((char *)a1 + v55);
  uint64_t v56 = (uint64_t *)((char *)a2 + v55);
  uint64_t v57 = type metadata accessor for ContentStatusBanner();
  id v58 = v49;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v56, 1, v57))
  {
    uint64_t v59 = sub_10017DF08(&qword_100E63A10);
    memcpy(__dst, v56, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    *(unsigned char *)__dst = *(unsigned char *)v56;
    uint64_t v60 = v56 + 1;
    unint64_t v61 = v56[2];
    if (v61 >= 2)
    {
      __dst[1] = *v60;
      __dst[2] = v61;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(__dst + 1) = *(_OWORD *)v60;
    }
    uint64_t v62 = *(int *)(v57 + 24);
    uint64_t v63 = (char *)__dst + v62;
    uint64_t v64 = (char *)v56 + v62;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v64, 1, v40))
    {
      uint64_t v65 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v63, v64, *(void *)(*(void *)(v65 - 8) + 64));
    }
    else
    {
      v67(v63, v64, v40);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v63, 0, 1, v40);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v57);
  }
  *((unsigned char *)a1 + v7[33]) = *((unsigned char *)a2 + v7[33]);
  *((unsigned char *)a1 + v7[34]) = *((unsigned char *)a2 + v7[34]);
  *(uint64_t *)((char *)a1 + v7[35]) = *(uint64_t *)((char *)a2 + v7[35]);
  swift_bridgeObjectRetain();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v7);
  return a1;
}

uint64_t sub_10053A808(uint64_t a1)
{
  uint64_t v2 = (int *)type metadata accessor for ActualListInput(0);
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(a1, 1, (uint64_t)v2);
  if (!result)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = a1 + v2[5];
    uint64_t v5 = type metadata accessor for CurrentLocation();
    if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5)
      && swift_getEnumCaseMultiPayload() <= 2)
    {
      uint64_t v6 = type metadata accessor for Location();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = a1 + v2[14];
    uint64_t v8 = type metadata accessor for SearchViewState.ViewState(0);
    if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8))
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        swift_bridgeObjectRelease();
      }
      else if (!EnumCaseMultiPayload)
      {
        uint64_t v16 = type metadata accessor for CodableError();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v7, v16);
      }
    }
    uint64_t v9 = a1 + v2[19];
    uint64_t v10 = type metadata accessor for Date();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
    v11(v9, v10);
    swift_bridgeObjectRelease();
    v11(a1 + v2[25], v10);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v12 = a1 + v2[32];
    uint64_t v13 = type metadata accessor for ContentStatusBanner();
    if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v13))
    {
      if (*(void *)(v12 + 16) >= 2uLL) {
        swift_bridgeObjectRelease();
      }
      uint64_t v14 = v12 + *(int *)(v13 + 24);
      if (!_s7Weather24LocationCompositionStateOwet_0(v14, 1, v10)) {
        v11(v14, v10);
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_10053AADC(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for ActualListInput(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  uint64_t v7 = v6[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for CurrentLocation();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
  {
    uint64_t v11 = sub_10017DF08((uint64_t *)&unk_100EADD50);
    memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() > 2)
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      uint64_t v12 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v8, v9, v12);
      swift_storeEnumTagMultiPayload();
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
  }
  *(void *)((char *)a1 + v6[6]) = *(void *)((char *)a2 + v6[6]);
  *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
  *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
  uint64_t v13 = v6[9];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v16 = v15[1];
  void *v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = v6[10];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  *(void *)uint64_t v18 = *(void *)v19;
  v18[8] = v19[8];
  *((unsigned char *)a1 + v6[11]) = *((unsigned char *)a2 + v6[11]);
  uint64_t v20 = v6[12];
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  uint64_t v23 = v22[1];
  void *v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = v6[13];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  uint64_t v27 = v26[1];
  void *v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = v6[14];
  uint64_t v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (void *)((char *)a2 + v28);
  uint64_t v31 = type metadata accessor for SearchViewState.ViewState(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      void *v29 = *v30;
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
        goto LABEL_17;
      }
      uint64_t v34 = type metadata accessor for CodableError();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 16))(v29, v30, v34);
    }
    swift_storeEnumTagMultiPayload();
LABEL_17:
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
    goto LABEL_18;
  }
  uint64_t v32 = sub_10017DF08(&qword_100E70A78);
  memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
LABEL_18:
  *((unsigned char *)a1 + v6[15]) = *((unsigned char *)a2 + v6[15]);
  *((unsigned char *)a1 + v6[16]) = *((unsigned char *)a2 + v6[16]);
  *((unsigned char *)a1 + v6[17]) = *((unsigned char *)a2 + v6[17]);
  *((unsigned char *)a1 + v6[18]) = *((unsigned char *)a2 + v6[18]);
  uint64_t v35 = v6[19];
  uint64_t v36 = (char *)a1 + v35;
  uint64_t v37 = (char *)a2 + v35;
  uint64_t v38 = type metadata accessor for Date();
  uint64_t v39 = *(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16);
  v39(v36, v37, v38);
  *((unsigned char *)a1 + v6[20]) = *((unsigned char *)a2 + v6[20]);
  *((unsigned char *)a1 + v6[21]) = *((unsigned char *)a2 + v6[21]);
  *((unsigned char *)a1 + v6[22]) = *((unsigned char *)a2 + v6[22]);
  *((unsigned char *)a1 + v6[23]) = *((unsigned char *)a2 + v6[23]);
  uint64_t v40 = v6[24];
  uint64_t v41 = (char *)a1 + v40;
  uint64_t v42 = (char *)a2 + v40;
  *uint64_t v41 = *v42;
  *((void *)v41 + 1) = *((void *)v42 + 1);
  uint64_t v43 = v6[25];
  uint64_t v44 = (char *)a1 + v43;
  uint64_t v45 = (char *)a2 + v43;
  swift_bridgeObjectRetain();
  uint64_t v65 = v39;
  v39(v44, v45, v38);
  *((unsigned char *)a1 + v6[26]) = *((unsigned char *)a2 + v6[26]);
  uint64_t v46 = v6[27];
  uint64_t v47 = *(void **)((char *)a2 + v46);
  *(void *)((char *)a1 + v46) = v47;
  uint64_t v48 = v6[28];
  uint64_t v49 = (void *)((char *)a1 + v48);
  uint64_t v50 = (void *)((char *)a2 + v48);
  uint64_t v51 = v50[1];
  *uint64_t v49 = *v50;
  v49[1] = v51;
  uint64_t v52 = v50[3];
  v49[2] = v50[2];
  v49[3] = v52;
  *((unsigned char *)a1 + v6[29]) = *((unsigned char *)a2 + v6[29]);
  *(void *)((char *)a1 + v6[30]) = *(void *)((char *)a2 + v6[30]);
  *((unsigned char *)a1 + v6[31]) = *((unsigned char *)a2 + v6[31]);
  uint64_t v53 = v6[32];
  __dst = (void *)((char *)a1 + v53);
  uint64_t v54 = (void *)((char *)a2 + v53);
  uint64_t v55 = type metadata accessor for ContentStatusBanner();
  id v56 = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v55))
  {
    uint64_t v57 = sub_10017DF08(&qword_100E63A10);
    memcpy(__dst, v54, *(void *)(*(void *)(v57 - 8) + 64));
  }
  else
  {
    *(unsigned char *)__dst = *(unsigned char *)v54;
    id v58 = v54 + 1;
    unint64_t v59 = v54[2];
    if (v59 >= 2)
    {
      __dst[1] = *v58;
      __dst[2] = v59;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(__dst + 1) = *(_OWORD *)v58;
    }
    uint64_t v60 = *(int *)(v55 + 24);
    unint64_t v61 = (char *)__dst + v60;
    uint64_t v62 = (char *)v54 + v60;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, v38))
    {
      uint64_t v63 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v61, v62, *(void *)(*(void *)(v63 - 8) + 64));
    }
    else
    {
      v65(v61, v62, v38);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v61, 0, 1, v38);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v55);
  }
  *((unsigned char *)a1 + v6[33]) = *((unsigned char *)a2 + v6[33]);
  *((unsigned char *)a1 + v6[34]) = *((unsigned char *)a2 + v6[34]);
  *(void *)((char *)a1 + v6[35]) = *(void *)((char *)a2 + v6[35]);
  swift_bridgeObjectRetain();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  return a1;
}

void *sub_10053B1C4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for ActualListInput(0);
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, (uint64_t)v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6);
  if (!v7)
  {
    if (v8)
    {
      sub_1001D11E8((uint64_t)a1, (void (*)(void))type metadata accessor for ActualListInput);
      goto LABEL_7;
    }
    *a1 = *a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v14 = v6[5];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = type metadata accessor for CurrentLocation();
    int v18 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v17);
    int v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17);
    if (v18)
    {
      if (!v19)
      {
        if (swift_getEnumCaseMultiPayload() > 2)
        {
          memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          uint64_t v67 = type metadata accessor for Location();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 16))(v15, v16, v67);
          swift_storeEnumTagMultiPayload();
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
LABEL_44:
        *(void *)((char *)a1 + v6[6]) = *(void *)((char *)a2 + v6[6]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
        uint64_t v69 = v6[9];
        uint64_t v70 = (void *)((char *)a1 + v69);
        uint64_t v71 = (void *)((char *)a2 + v69);
        void *v70 = *v71;
        v70[1] = v71[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v72 = v6[10];
        uint64_t v73 = (char *)a1 + v72;
        uint64_t v74 = (char *)a2 + v72;
        uint64_t v75 = *(void *)v74;
        v73[8] = v74[8];
        *(void *)uint64_t v73 = v75;
        *((unsigned char *)a1 + v6[11]) = *((unsigned char *)a2 + v6[11]);
        uint64_t v76 = v6[12];
        uint64_t v77 = (void *)((char *)a1 + v76);
        uint64_t v78 = (void *)((char *)a2 + v76);
        void *v77 = *v78;
        v77[1] = v78[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v79 = v6[13];
        char v80 = (void *)((char *)a1 + v79);
        id v81 = (void *)((char *)a2 + v79);
        void *v80 = *v81;
        v80[1] = v81[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v82 = v6[14];
        uint64_t v83 = (void *)((char *)a1 + v82);
        uint64_t v84 = (void *)((char *)a2 + v82);
        uint64_t v85 = type metadata accessor for SearchViewState.ViewState(0);
        int v86 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v83, 1, v85);
        int v87 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v84, 1, v85);
        if (v86)
        {
          if (!v87)
          {
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 1)
            {
              void *v83 = *v84;
              swift_bridgeObjectRetain();
            }
            else
            {
              if (EnumCaseMultiPayload)
              {
                memcpy(v83, v84, *(void *)(*(void *)(v85 - 8) + 64));
                goto LABEL_60;
              }
              uint64_t v89 = type metadata accessor for CodableError();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v89 - 8) + 16))(v83, v84, v89);
            }
            swift_storeEnumTagMultiPayload();
LABEL_60:
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v83, 0, 1, v85);
            goto LABEL_61;
          }
        }
        else
        {
          if (!v87)
          {
            if (a1 == a2) {
              goto LABEL_61;
            }
            sub_1001D11E8((uint64_t)v83, (void (*)(void))type metadata accessor for SearchViewState.ViewState);
            int v91 = swift_getEnumCaseMultiPayload();
            if (v91 == 1)
            {
              void *v83 = *v84;
              swift_bridgeObjectRetain();
            }
            else
            {
              if (v91)
              {
                size_t v90 = *(void *)(*(void *)(v85 - 8) + 64);
                goto LABEL_52;
              }
              uint64_t v92 = type metadata accessor for CodableError();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v92 - 8) + 16))(v83, v84, v92);
            }
            swift_storeEnumTagMultiPayload();
LABEL_61:
            *((unsigned char *)a1 + v6[15]) = *((unsigned char *)a2 + v6[15]);
            *((unsigned char *)a1 + v6[16]) = *((unsigned char *)a2 + v6[16]);
            *((unsigned char *)a1 + v6[17]) = *((unsigned char *)a2 + v6[17]);
            *((unsigned char *)a1 + v6[18]) = *((unsigned char *)a2 + v6[18]);
            uint64_t v93 = v6[19];
            uint64_t v94 = (char *)a1 + v93;
            uint64_t v95 = (char *)a2 + v93;
            uint64_t v96 = type metadata accessor for Date();
            __dsta = *(void **)(v96 - 8);
            int v97 = (void (*)(char *, char *, uint64_t))__dsta[3];
            v97(v94, v95, v96);
            *((unsigned char *)a1 + v6[20]) = *((unsigned char *)a2 + v6[20]);
            *((unsigned char *)a1 + v6[21]) = *((unsigned char *)a2 + v6[21]);
            *((unsigned char *)a1 + v6[22]) = *((unsigned char *)a2 + v6[22]);
            *((unsigned char *)a1 + v6[23]) = *((unsigned char *)a2 + v6[23]);
            uint64_t v98 = v6[24];
            char v99 = (char *)a1 + v98;
            char v100 = (char *)a2 + v98;
            char *v99 = *v100;
            *((void *)v99 + 1) = *((void *)v100 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v97((char *)a1 + v6[25], (char *)a2 + v6[25], v96);
            *((unsigned char *)a1 + v6[26]) = *((unsigned char *)a2 + v6[26]);
            uint64_t v101 = v6[27];
            uint64_t v102 = *(void **)((char *)a1 + v101);
            uint64_t v103 = *(void **)((char *)a2 + v101);
            *(void *)((char *)a1 + v101) = v103;
            id v104 = v103;

            uint64_t v105 = v6[28];
            char v106 = (void *)((char *)a1 + v105);
            char v107 = (char *)a2 + v105;
            void *v106 = *(void *)((char *)a2 + v105);
            v106[1] = *(void *)((char *)a2 + v105 + 8);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v106[2] = *((void *)v107 + 2);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v106[3] = *((void *)v107 + 3);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            *((unsigned char *)a1 + v6[29]) = *((unsigned char *)a2 + v6[29]);
            *(void *)((char *)a1 + v6[30]) = *(void *)((char *)a2 + v6[30]);
            *((unsigned char *)a1 + v6[31]) = *((unsigned char *)a2 + v6[31]);
            uint64_t v108 = v6[32];
            uint64_t v109 = (uint64_t)a1 + v108;
            uint64_t v110 = (uint64_t)a2 + v108;
            uint64_t v111 = type metadata accessor for ContentStatusBanner();
            int v112 = _s7Weather24LocationCompositionStateOwet_0(v109, 1, v111);
            int v113 = _s7Weather24LocationCompositionStateOwet_0(v110, 1, v111);
            if (v112)
            {
              if (!v113)
              {
                *(unsigned char *)uint64_t v109 = *(unsigned char *)v110;
                if (*(void *)(v110 + 16) >= 2uLL)
                {
                  *(void *)(v109 + 8) = *(void *)(v110 + 8);
                  *(void *)(v109 + 16) = *(void *)(v110 + 16);
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)(v109 + 8) = *(_OWORD *)(v110 + 8);
                }
                uint64_t v118 = *(int *)(v111 + 24);
                uint64_t v119 = (void *)(v109 + v118);
                uint64_t v120 = (const void *)(v110 + v118);
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v120, 1, v96))
                {
                  uint64_t v121 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v119, v120, *(void *)(*(void *)(v121 - 8) + 64));
                }
                else
                {
                  ((void (*)(void *, const void *, uint64_t))__dsta[2])(v119, v120, v96);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v119, 0, 1, v96);
                }
                uint64_t v122 = v109;
                uint64_t v123 = v111;
                goto LABEL_77;
              }
            }
            else
            {
              if (!v113)
              {
                *(unsigned char *)uint64_t v109 = *(unsigned char *)v110;
                unint64_t v117 = *(void *)(v110 + 16);
                if (*(void *)(v109 + 16) >= 2uLL)
                {
                  if (v117 >= 2)
                  {
                    *(void *)(v109 + 8) = *(void *)(v110 + 8);
                    *(void *)(v109 + 16) = *(void *)(v110 + 16);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    sub_10027B4D4(v109 + 8);
                    *(_OWORD *)(v109 + 8) = *(_OWORD *)(v110 + 8);
                  }
                }
                else if (v117 >= 2)
                {
                  *(void *)(v109 + 8) = *(void *)(v110 + 8);
                  *(void *)(v109 + 16) = *(void *)(v110 + 16);
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)(v109 + 8) = *(_OWORD *)(v110 + 8);
                }
                uint64_t v125 = *(int *)(v111 + 24);
                uint64_t v126 = v109 + v125;
                uint64_t v127 = v110 + v125;
                int v128 = _s7Weather24LocationCompositionStateOwet_0(v126, 1, v96);
                int v129 = _s7Weather24LocationCompositionStateOwet_0(v127, 1, v96);
                if (v128)
                {
                  if (!v129)
                  {
                    ((void (*)(uint64_t, uint64_t, uint64_t))__dsta[2])(v126, v127, v96);
                    uint64_t v122 = v126;
                    uint64_t v123 = v96;
LABEL_77:
                    _s7Weather24LocationCompositionStateOwst_0(v122, 0, 1, v123);
                    goto LABEL_78;
                  }
                }
                else
                {
                  if (!v129)
                  {
                    v97((char *)v126, (char *)v127, v96);
                    goto LABEL_78;
                  }
                  ((void (*)(uint64_t, uint64_t))__dsta[1])(v126, v96);
                }
                size_t v114 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
                uint64_t v115 = (void *)v126;
                uint64_t v116 = (const void *)v127;
LABEL_68:
                memcpy(v115, v116, v114);
LABEL_78:
                *((unsigned char *)a1 + v6[33]) = *((unsigned char *)a2 + v6[33]);
                *((unsigned char *)a1 + v6[34]) = *((unsigned char *)a2 + v6[34]);
                *(void *)((char *)a1 + v6[35]) = *(void *)((char *)a2 + v6[35]);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                return a1;
              }
              sub_1001D11E8(v109, (void (*)(void))type metadata accessor for ContentStatusBanner);
            }
            size_t v114 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63A10) - 8) + 64);
            uint64_t v115 = (void *)v109;
            uint64_t v116 = (const void *)v110;
            goto LABEL_68;
          }
          sub_1001D11E8((uint64_t)v83, (void (*)(void))type metadata accessor for SearchViewState.ViewState);
        }
        size_t v90 = *(void *)(*(void *)(sub_10017DF08(&qword_100E70A78) - 8) + 64);
LABEL_52:
        memcpy(v83, v84, v90);
        goto LABEL_61;
      }
    }
    else
    {
      if (!v19)
      {
        if (a1 == a2) {
          goto LABEL_44;
        }
        sub_1001D11E8((uint64_t)v15, (void (*)(void))&type metadata accessor for CurrentLocation);
        if (swift_getEnumCaseMultiPayload() <= 2)
        {
          uint64_t v68 = type metadata accessor for Location();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v15, v16, v68);
          swift_storeEnumTagMultiPayload();
          goto LABEL_44;
        }
        size_t v20 = *(void *)(*(void *)(v17 - 8) + 64);
LABEL_17:
        memcpy(v15, v16, v20);
        goto LABEL_44;
      }
      sub_1001D11E8((uint64_t)v15, (void (*)(void))&type metadata accessor for CurrentLocation);
    }
    size_t v20 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100EADD50) - 8) + 64);
    goto LABEL_17;
  }
  if (v8)
  {
LABEL_7:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  uint64_t v9 = v6[5];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for CurrentLocation();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
  {
    uint64_t v13 = sub_10017DF08((uint64_t *)&unk_100EADD50);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() > 2)
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v21 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v10, v11, v21);
      swift_storeEnumTagMultiPayload();
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
  }
  *(void *)((char *)a1 + v6[6]) = *(void *)((char *)a2 + v6[6]);
  *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
  *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
  uint64_t v22 = v6[9];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  uint64_t v25 = v6[10];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = *(void *)v27;
  v26[8] = v27[8];
  *(void *)uint64_t v26 = v28;
  *((unsigned char *)a1 + v6[11]) = *((unsigned char *)a2 + v6[11]);
  uint64_t v29 = v6[12];
  uint64_t v30 = (void *)((char *)a1 + v29);
  uint64_t v31 = (void *)((char *)a2 + v29);
  void *v30 = *v31;
  v30[1] = v31[1];
  uint64_t v32 = v6[13];
  uint64_t v33 = (void *)((char *)a1 + v32);
  uint64_t v34 = (void *)((char *)a2 + v32);
  *uint64_t v33 = *v34;
  v33[1] = v34[1];
  uint64_t v35 = v6[14];
  uint64_t v36 = (void *)((char *)a1 + v35);
  uint64_t v37 = (void *)((char *)a2 + v35);
  uint64_t v38 = type metadata accessor for SearchViewState.ViewState(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v38))
  {
    int v40 = swift_getEnumCaseMultiPayload();
    if (v40 == 1)
    {
      void *v36 = *v37;
      swift_bridgeObjectRetain();
    }
    else
    {
      if (v40)
      {
        memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
        goto LABEL_28;
      }
      uint64_t v41 = type metadata accessor for CodableError();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v41 - 8) + 16))(v36, v37, v41);
    }
    swift_storeEnumTagMultiPayload();
LABEL_28:
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v38);
    goto LABEL_29;
  }
  uint64_t v39 = sub_10017DF08(&qword_100E70A78);
  memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
LABEL_29:
  *((unsigned char *)a1 + v6[15]) = *((unsigned char *)a2 + v6[15]);
  *((unsigned char *)a1 + v6[16]) = *((unsigned char *)a2 + v6[16]);
  *((unsigned char *)a1 + v6[17]) = *((unsigned char *)a2 + v6[17]);
  *((unsigned char *)a1 + v6[18]) = *((unsigned char *)a2 + v6[18]);
  uint64_t v42 = v6[19];
  uint64_t v43 = (char *)a1 + v42;
  uint64_t v44 = (char *)a2 + v42;
  uint64_t v45 = type metadata accessor for Date();
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16);
  v46(v43, v44, v45);
  *((unsigned char *)a1 + v6[20]) = *((unsigned char *)a2 + v6[20]);
  *((unsigned char *)a1 + v6[21]) = *((unsigned char *)a2 + v6[21]);
  *((unsigned char *)a1 + v6[22]) = *((unsigned char *)a2 + v6[22]);
  *((unsigned char *)a1 + v6[23]) = *((unsigned char *)a2 + v6[23]);
  uint64_t v47 = v6[24];
  uint64_t v48 = (char *)a1 + v47;
  uint64_t v49 = (char *)a2 + v47;
  char *v48 = *v49;
  *((void *)v48 + 1) = *((void *)v49 + 1);
  uint64_t v50 = v6[25];
  uint64_t v51 = (char *)a1 + v50;
  uint64_t v52 = (char *)a2 + v50;
  swift_bridgeObjectRetain();
  uint64_t v130 = v46;
  v46(v51, v52, v45);
  *((unsigned char *)a1 + v6[26]) = *((unsigned char *)a2 + v6[26]);
  uint64_t v53 = v6[27];
  uint64_t v54 = *(void **)((char *)a2 + v53);
  *(void *)((char *)a1 + v53) = v54;
  uint64_t v55 = v6[28];
  id v56 = (void *)((char *)a1 + v55);
  uint64_t v57 = (void *)((char *)a2 + v55);
  *id v56 = *v57;
  v56[1] = v57[1];
  v56[2] = v57[2];
  v56[3] = v57[3];
  *((unsigned char *)a1 + v6[29]) = *((unsigned char *)a2 + v6[29]);
  *(void *)((char *)a1 + v6[30]) = *(void *)((char *)a2 + v6[30]);
  *((unsigned char *)a1 + v6[31]) = *((unsigned char *)a2 + v6[31]);
  uint64_t v58 = v6[32];
  __dst = (void *)((char *)a1 + v58);
  unint64_t v59 = (void *)((char *)a2 + v58);
  uint64_t v60 = type metadata accessor for ContentStatusBanner();
  id v61 = v54;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v60))
  {
    uint64_t v62 = sub_10017DF08(&qword_100E63A10);
    memcpy(__dst, v59, *(void *)(*(void *)(v62 - 8) + 64));
  }
  else
  {
    *(unsigned char *)__dst = *(unsigned char *)v59;
    if (v59[2] >= 2uLL)
    {
      __dst[1] = v59[1];
      __dst[2] = v59[2];
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(__dst + 1) = *(_OWORD *)(v59 + 1);
    }
    uint64_t v63 = *(int *)(v60 + 24);
    uint64_t v64 = (char *)__dst + v63;
    uint64_t v65 = (char *)v59 + v63;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v65, 1, v45))
    {
      uint64_t v66 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v64, v65, *(void *)(*(void *)(v66 - 8) + 64));
    }
    else
    {
      v130(v64, v65, v45);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v64, 0, 1, v45);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v60);
  }
  *((unsigned char *)a1 + v6[33]) = *((unsigned char *)a2 + v6[33]);
  *((unsigned char *)a1 + v6[34]) = *((unsigned char *)a2 + v6[34]);
  *(void *)((char *)a1 + v6[35]) = *(void *)((char *)a2 + v6[35]);
  swift_bridgeObjectRetain();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  return a1;
}

void *sub_10053C3F8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for ActualListInput(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = v6[5];
    int v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for CurrentLocation();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v10))
    {
      uint64_t v11 = sub_10017DF08((uint64_t *)&unk_100EADD50);
      memcpy(v8, v9, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() > 2)
      {
        memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        uint64_t v12 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v8, v9, v12);
        swift_storeEnumTagMultiPayload();
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v10);
    }
    *(void *)((char *)a1 + v6[6]) = *(void *)((char *)a2 + v6[6]);
    *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
    *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
    *(_OWORD *)((char *)a1 + v6[9]) = *(_OWORD *)((char *)a2 + v6[9]);
    uint64_t v13 = v6[10];
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    *(void *)uint64_t v14 = *(void *)v15;
    v14[8] = v15[8];
    *((unsigned char *)a1 + v6[11]) = *((unsigned char *)a2 + v6[11]);
    *(_OWORD *)((char *)a1 + v6[12]) = *(_OWORD *)((char *)a2 + v6[12]);
    *(_OWORD *)((char *)a1 + v6[13]) = *(_OWORD *)((char *)a2 + v6[13]);
    uint64_t v16 = v6[14];
    uint64_t v17 = (char *)a1 + v16;
    int v18 = (char *)a2 + v16;
    uint64_t v19 = type metadata accessor for SearchViewState.ViewState(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
    {
      uint64_t v20 = sub_10017DF08(&qword_100E70A78);
      memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        uint64_t v21 = type metadata accessor for CodableError();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v17, v18, v21);
        swift_storeEnumTagMultiPayload();
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
    }
    *((unsigned char *)a1 + v6[15]) = *((unsigned char *)a2 + v6[15]);
    *((unsigned char *)a1 + v6[16]) = *((unsigned char *)a2 + v6[16]);
    *((unsigned char *)a1 + v6[17]) = *((unsigned char *)a2 + v6[17]);
    *((unsigned char *)a1 + v6[18]) = *((unsigned char *)a2 + v6[18]);
    uint64_t v22 = v6[19];
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = type metadata accessor for Date();
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32);
    v26(v23, v24, v25);
    *((unsigned char *)a1 + v6[20]) = *((unsigned char *)a2 + v6[20]);
    *((unsigned char *)a1 + v6[21]) = *((unsigned char *)a2 + v6[21]);
    *((unsigned char *)a1 + v6[22]) = *((unsigned char *)a2 + v6[22]);
    *((unsigned char *)a1 + v6[23]) = *((unsigned char *)a2 + v6[23]);
    *(_OWORD *)((char *)a1 + v6[24]) = *(_OWORD *)((char *)a2 + v6[24]);
    v26((char *)a1 + v6[25], (char *)a2 + v6[25], v25);
    *((unsigned char *)a1 + v6[26]) = *((unsigned char *)a2 + v6[26]);
    *(void *)((char *)a1 + v6[27]) = *(void *)((char *)a2 + v6[27]);
    uint64_t v27 = v6[28];
    uint64_t v28 = (_OWORD *)((char *)a1 + v27);
    uint64_t v29 = (_OWORD *)((char *)a2 + v27);
    long long v30 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v30;
    *((unsigned char *)a1 + v6[29]) = *((unsigned char *)a2 + v6[29]);
    *(void *)((char *)a1 + v6[30]) = *(void *)((char *)a2 + v6[30]);
    *((unsigned char *)a1 + v6[31]) = *((unsigned char *)a2 + v6[31]);
    uint64_t v31 = v6[32];
    uint64_t v32 = (char *)a1 + v31;
    uint64_t v33 = (char *)a2 + v31;
    uint64_t v34 = type metadata accessor for ContentStatusBanner();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34))
    {
      uint64_t v35 = sub_10017DF08(&qword_100E63A10);
      memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      *uint64_t v32 = *v33;
      *(_OWORD *)(v32 + 8) = *(_OWORD *)(v33 + 8);
      uint64_t v36 = *(int *)(v34 + 24);
      uint64_t v37 = &v32[v36];
      uint64_t v38 = &v33[v36];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v25))
      {
        uint64_t v39 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        v26(v37, v38, v25);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v25);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
    }
    *((unsigned char *)a1 + v6[33]) = *((unsigned char *)a2 + v6[33]);
    *((unsigned char *)a1 + v6[34]) = *((unsigned char *)a2 + v6[34]);
    *(void *)((char *)a1 + v6[35]) = *(void *)((char *)a2 + v6[35]);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  }
  return a1;
}

void *sub_10053C9E8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for ActualListInput(0);
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, (uint64_t)v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6);
  if (!v7)
  {
    if (v8)
    {
      sub_1001D11E8((uint64_t)a1, (void (*)(void))type metadata accessor for ActualListInput);
      goto LABEL_7;
    }
    *a1 = *a2;
    swift_bridgeObjectRelease();
    uint64_t v14 = v6[5];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = type metadata accessor for CurrentLocation();
    int v18 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v17);
    int v19 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17);
    if (v18)
    {
      if (!v19)
      {
        if (swift_getEnumCaseMultiPayload() > 2)
        {
          memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
        }
        else
        {
          uint64_t v49 = type metadata accessor for Location();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v15, v16, v49);
          swift_storeEnumTagMultiPayload();
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
LABEL_38:
        *(void *)((char *)a1 + v6[6]) = *(void *)((char *)a2 + v6[6]);
        swift_bridgeObjectRelease();
        *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
        swift_bridgeObjectRelease();
        *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
        uint64_t v51 = v6[9];
        uint64_t v52 = (void *)((char *)a1 + v51);
        uint64_t v53 = (void *)((char *)a2 + v51);
        uint64_t v55 = *v53;
        uint64_t v54 = v53[1];
        void *v52 = v55;
        v52[1] = v54;
        swift_bridgeObjectRelease();
        uint64_t v56 = v6[10];
        uint64_t v57 = (char *)a1 + v56;
        uint64_t v58 = (char *)a2 + v56;
        *(void *)uint64_t v57 = *(void *)v58;
        v57[8] = v58[8];
        *((unsigned char *)a1 + v6[11]) = *((unsigned char *)a2 + v6[11]);
        uint64_t v59 = v6[12];
        uint64_t v60 = (void *)((char *)a1 + v59);
        id v61 = (void *)((char *)a2 + v59);
        uint64_t v63 = *v61;
        uint64_t v62 = v61[1];
        *uint64_t v60 = v63;
        v60[1] = v62;
        swift_bridgeObjectRelease();
        uint64_t v64 = v6[13];
        uint64_t v65 = (void *)((char *)a1 + v64);
        uint64_t v66 = (void *)((char *)a2 + v64);
        uint64_t v68 = *v66;
        uint64_t v67 = v66[1];
        void *v65 = v68;
        v65[1] = v67;
        swift_bridgeObjectRelease();
        uint64_t v69 = v6[14];
        uint64_t v70 = (char *)a1 + v69;
        uint64_t v71 = (char *)a2 + v69;
        uint64_t v72 = type metadata accessor for SearchViewState.ViewState(0);
        int v73 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v70, 1, v72);
        int v74 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v72);
        if (v73)
        {
          if (!v74)
          {
            if (swift_getEnumCaseMultiPayload())
            {
              memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
            }
            else
            {
              uint64_t v76 = type metadata accessor for CodableError();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 32))(v70, v71, v76);
              swift_storeEnumTagMultiPayload();
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v72);
LABEL_51:
            *((unsigned char *)a1 + v6[15]) = *((unsigned char *)a2 + v6[15]);
            *((unsigned char *)a1 + v6[16]) = *((unsigned char *)a2 + v6[16]);
            *((unsigned char *)a1 + v6[17]) = *((unsigned char *)a2 + v6[17]);
            *((unsigned char *)a1 + v6[18]) = *((unsigned char *)a2 + v6[18]);
            uint64_t v77 = v6[19];
            uint64_t v78 = (char *)a1 + v77;
            uint64_t v79 = (char *)a2 + v77;
            uint64_t v80 = type metadata accessor for Date();
            uint64_t v116 = *(void *)(v80 - 8);
            id v81 = *(void (**)(char *, char *, uint64_t))(v116 + 40);
            v81(v78, v79, v80);
            *((unsigned char *)a1 + v6[20]) = *((unsigned char *)a2 + v6[20]);
            *((unsigned char *)a1 + v6[21]) = *((unsigned char *)a2 + v6[21]);
            *((unsigned char *)a1 + v6[22]) = *((unsigned char *)a2 + v6[22]);
            *((unsigned char *)a1 + v6[23]) = *((unsigned char *)a2 + v6[23]);
            uint64_t v82 = v6[24];
            uint64_t v83 = (char *)a1 + v82;
            uint64_t v84 = (char *)a2 + v82;
            char *v83 = *v84;
            *((void *)v83 + 1) = *((void *)v84 + 1);
            swift_bridgeObjectRelease();
            v81((char *)a1 + v6[25], (char *)a2 + v6[25], v80);
            *((unsigned char *)a1 + v6[26]) = *((unsigned char *)a2 + v6[26]);
            uint64_t v85 = v6[27];
            int v86 = *(void **)((char *)a1 + v85);
            *(void *)((char *)a1 + v85) = *(void *)((char *)a2 + v85);

            uint64_t v87 = v6[28];
            uint64_t v88 = (void *)((char *)a1 + v87);
            uint64_t v89 = (char *)a2 + v87;
            uint64_t v90 = *(void *)((char *)a2 + v87 + 8);
            *uint64_t v88 = *(void *)((char *)a2 + v87);
            v88[1] = v90;
            swift_bridgeObjectRelease();
            v88[2] = *((void *)v89 + 2);
            swift_bridgeObjectRelease();
            v88[3] = *((void *)v89 + 3);
            swift_bridgeObjectRelease();
            *((unsigned char *)a1 + v6[29]) = *((unsigned char *)a2 + v6[29]);
            *(void *)((char *)a1 + v6[30]) = *(void *)((char *)a2 + v6[30]);
            *((unsigned char *)a1 + v6[31]) = *((unsigned char *)a2 + v6[31]);
            uint64_t v91 = v6[32];
            uint64_t v92 = (uint64_t)a1 + v91;
            uint64_t v93 = (uint64_t)a2 + v91;
            uint64_t v94 = type metadata accessor for ContentStatusBanner();
            int v95 = _s7Weather24LocationCompositionStateOwet_0(v92, 1, v94);
            int v96 = _s7Weather24LocationCompositionStateOwet_0(v93, 1, v94);
            if (v95)
            {
              if (!v96)
              {
                *(unsigned char *)uint64_t v92 = *(unsigned char *)v93;
                *(_OWORD *)(v92 + 8) = *(_OWORD *)(v93 + 8);
                uint64_t v97 = *(int *)(v94 + 24);
                uint64_t v98 = (void *)(v92 + v97);
                char v99 = (const void *)(v93 + v97);
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v99, 1, v80))
                {
                  uint64_t v100 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v98, v99, *(void *)(*(void *)(v100 - 8) + 64));
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v116 + 32))(v98, v99, v80);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v98, 0, 1, v80);
                }
                uint64_t v106 = v92;
                uint64_t v107 = v94;
                goto LABEL_63;
              }
              goto LABEL_57;
            }
            if (v96)
            {
              sub_1001D11E8(v92, (void (*)(void))type metadata accessor for ContentStatusBanner);
LABEL_57:
              size_t v101 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63A10) - 8) + 64);
              uint64_t v102 = (void *)v92;
              uint64_t v103 = (const void *)v93;
              goto LABEL_58;
            }
            *(unsigned char *)uint64_t v92 = *(unsigned char *)v93;
            id v104 = (void *)(v93 + 8);
            if (*(void *)(v92 + 16) >= 2uLL)
            {
              unint64_t v109 = *(void *)(v93 + 16);
              if (v109 >= 2)
              {
                *(void *)(v92 + 8) = *v104;
                *(void *)(v92 + 16) = v109;
                swift_bridgeObjectRelease();
                goto LABEL_70;
              }
              sub_10027B4D4(v92 + 8);
              long long v105 = *(_OWORD *)(v93 + 8);
            }
            else
            {
              long long v105 = *(_OWORD *)v104;
            }
            *(_OWORD *)(v92 + 8) = v105;
LABEL_70:
            uint64_t v110 = *(int *)(v94 + 24);
            uint64_t v111 = v92 + v110;
            uint64_t v112 = v93 + v110;
            int v113 = _s7Weather24LocationCompositionStateOwet_0(v111, 1, v80);
            int v114 = _s7Weather24LocationCompositionStateOwet_0(v112, 1, v80);
            if (v113)
            {
              if (!v114)
              {
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v116 + 32))(v111, v112, v80);
                uint64_t v106 = v111;
                uint64_t v107 = v80;
LABEL_63:
                _s7Weather24LocationCompositionStateOwst_0(v106, 0, 1, v107);
                goto LABEL_64;
              }
            }
            else
            {
              if (!v114)
              {
                v81((char *)v111, (char *)v112, v80);
                goto LABEL_64;
              }
              (*(void (**)(uint64_t, uint64_t))(v116 + 8))(v111, v80);
            }
            size_t v101 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
            uint64_t v102 = (void *)v111;
            uint64_t v103 = (const void *)v112;
LABEL_58:
            memcpy(v102, v103, v101);
LABEL_64:
            *((unsigned char *)a1 + v6[33]) = *((unsigned char *)a2 + v6[33]);
            *((unsigned char *)a1 + v6[34]) = *((unsigned char *)a2 + v6[34]);
            *(void *)((char *)a1 + v6[35]) = *(void *)((char *)a2 + v6[35]);
            swift_bridgeObjectRelease();
            return a1;
          }
        }
        else
        {
          if (!v74)
          {
            if (a1 == a2) {
              goto LABEL_51;
            }
            sub_1001D11E8((uint64_t)v70, (void (*)(void))type metadata accessor for SearchViewState.ViewState);
            if (!swift_getEnumCaseMultiPayload())
            {
              uint64_t v115 = type metadata accessor for CodableError();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 32))(v70, v71, v115);
              swift_storeEnumTagMultiPayload();
              goto LABEL_51;
            }
            size_t v75 = *(void *)(*(void *)(v72 - 8) + 64);
LABEL_45:
            memcpy(v70, v71, v75);
            goto LABEL_51;
          }
          sub_1001D11E8((uint64_t)v70, (void (*)(void))type metadata accessor for SearchViewState.ViewState);
        }
        size_t v75 = *(void *)(*(void *)(sub_10017DF08(&qword_100E70A78) - 8) + 64);
        goto LABEL_45;
      }
    }
    else
    {
      if (!v19)
      {
        if (a1 == a2) {
          goto LABEL_38;
        }
        sub_1001D11E8((uint64_t)v15, (void (*)(void))&type metadata accessor for CurrentLocation);
        if (swift_getEnumCaseMultiPayload() <= 2)
        {
          uint64_t v50 = type metadata accessor for Location();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v15, v16, v50);
          swift_storeEnumTagMultiPayload();
          goto LABEL_38;
        }
        size_t v20 = *(void *)(*(void *)(v17 - 8) + 64);
LABEL_17:
        memcpy(v15, v16, v20);
        goto LABEL_38;
      }
      sub_1001D11E8((uint64_t)v15, (void (*)(void))&type metadata accessor for CurrentLocation);
    }
    size_t v20 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100EADD50) - 8) + 64);
    goto LABEL_17;
  }
  if (v8)
  {
LABEL_7:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  uint64_t v9 = v6[5];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for CurrentLocation();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v12))
  {
    uint64_t v13 = sub_10017DF08((uint64_t *)&unk_100EADD50);
    memcpy(v10, v11, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() > 2)
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v21 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v10, v11, v21);
      swift_storeEnumTagMultiPayload();
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v12);
  }
  *(void *)((char *)a1 + v6[6]) = *(void *)((char *)a2 + v6[6]);
  *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
  *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
  *(_OWORD *)((char *)a1 + v6[9]) = *(_OWORD *)((char *)a2 + v6[9]);
  uint64_t v22 = v6[10];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  *(void *)uint64_t v23 = *(void *)v24;
  v23[8] = v24[8];
  *((unsigned char *)a1 + v6[11]) = *((unsigned char *)a2 + v6[11]);
  *(_OWORD *)((char *)a1 + v6[12]) = *(_OWORD *)((char *)a2 + v6[12]);
  *(_OWORD *)((char *)a1 + v6[13]) = *(_OWORD *)((char *)a2 + v6[13]);
  uint64_t v25 = v6[14];
  uint64_t v26 = (char *)a1 + v25;
  uint64_t v27 = (char *)a2 + v25;
  uint64_t v28 = type metadata accessor for SearchViewState.ViewState(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28))
  {
    uint64_t v29 = sub_10017DF08(&qword_100E70A78);
    memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      uint64_t v30 = type metadata accessor for CodableError();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v26, v27, v30);
      swift_storeEnumTagMultiPayload();
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
  }
  *((unsigned char *)a1 + v6[15]) = *((unsigned char *)a2 + v6[15]);
  *((unsigned char *)a1 + v6[16]) = *((unsigned char *)a2 + v6[16]);
  *((unsigned char *)a1 + v6[17]) = *((unsigned char *)a2 + v6[17]);
  *((unsigned char *)a1 + v6[18]) = *((unsigned char *)a2 + v6[18]);
  uint64_t v31 = v6[19];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = type metadata accessor for Date();
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32);
  v35(v32, v33, v34);
  *((unsigned char *)a1 + v6[20]) = *((unsigned char *)a2 + v6[20]);
  *((unsigned char *)a1 + v6[21]) = *((unsigned char *)a2 + v6[21]);
  *((unsigned char *)a1 + v6[22]) = *((unsigned char *)a2 + v6[22]);
  *((unsigned char *)a1 + v6[23]) = *((unsigned char *)a2 + v6[23]);
  *(_OWORD *)((char *)a1 + v6[24]) = *(_OWORD *)((char *)a2 + v6[24]);
  v35((char *)a1 + v6[25], (char *)a2 + v6[25], v34);
  *((unsigned char *)a1 + v6[26]) = *((unsigned char *)a2 + v6[26]);
  *(void *)((char *)a1 + v6[27]) = *(void *)((char *)a2 + v6[27]);
  uint64_t v36 = v6[28];
  uint64_t v37 = (_OWORD *)((char *)a1 + v36);
  uint64_t v38 = (_OWORD *)((char *)a2 + v36);
  long long v39 = v38[1];
  _OWORD *v37 = *v38;
  v37[1] = v39;
  *((unsigned char *)a1 + v6[29]) = *((unsigned char *)a2 + v6[29]);
  *(void *)((char *)a1 + v6[30]) = *(void *)((char *)a2 + v6[30]);
  *((unsigned char *)a1 + v6[31]) = *((unsigned char *)a2 + v6[31]);
  uint64_t v40 = v6[32];
  uint64_t v41 = (char *)a1 + v40;
  uint64_t v42 = (char *)a2 + v40;
  uint64_t v43 = type metadata accessor for ContentStatusBanner();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v42, 1, v43))
  {
    uint64_t v44 = sub_10017DF08(&qword_100E63A10);
    memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    *uint64_t v41 = *v42;
    *(_OWORD *)(v41 + 8) = *(_OWORD *)(v42 + 8);
    uint64_t v45 = *(int *)(v43 + 24);
    uint64_t v46 = &v41[v45];
    uint64_t v47 = &v42[v45];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v34))
    {
      uint64_t v48 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v46, v47, *(void *)(*(void *)(v48 - 8) + 64));
    }
    else
    {
      v35(v46, v47, v34);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v46, 0, 1, v34);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v41, 0, 1, v43);
  }
  *((unsigned char *)a1 + v6[33]) = *((unsigned char *)a2 + v6[33]);
  *((unsigned char *)a1 + v6[34]) = *((unsigned char *)a2 + v6[34]);
  *(void *)((char *)a1 + v6[35]) = *(void *)((char *)a2 + v6[35]);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  return a1;
}

uint64_t sub_10053D9D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10053D9E8);
}

uint64_t sub_10053D9E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActualListInput(0);
  unsigned int v5 = _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_10053DA30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10053DA44);
}

uint64_t sub_10053DA44(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for ActualListInput(0);

  return _s7Weather24LocationCompositionStateOwst_0(a1, v5, a3, v6);
}

uint64_t sub_10053DAA0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ActualListInput(0);

  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
}

uint64_t sub_10053DAE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ActualListInput(0);

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v4);
}

void *sub_10053DB30(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    int v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
    return v7;
  }
  int v7 = a1;
  uint64_t v8 = a3[5];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = type metadata accessor for CurrentLocation();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
  {
    uint64_t v12 = sub_10017DF08((uint64_t *)&unk_100EADD50);
    memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() > 2)
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      uint64_t v13 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v9, v10, v13);
      swift_storeEnumTagMultiPayload();
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
  }
  uint64_t v14 = a3[7];
  *(void *)((char *)v7 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)v7 + v14) = *(void *)((char *)a2 + v14);
  uint64_t v15 = a3[9];
  *((unsigned char *)v7 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v16 = (void *)((char *)v7 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = a3[10];
  uint64_t v20 = a3[11];
  uint64_t v21 = (char *)v7 + v19;
  uint64_t v22 = (char *)a2 + v19;
  *(void *)uint64_t v21 = *(void *)v22;
  v21[8] = v22[8];
  *((unsigned char *)v7 + v20) = *((unsigned char *)a2 + v20);
  uint64_t v23 = a3[12];
  uint64_t v24 = a3[13];
  uint64_t v25 = (void *)((char *)v7 + v23);
  uint64_t v26 = (void *)((char *)a2 + v23);
  uint64_t v27 = v26[1];
  void *v25 = *v26;
  v25[1] = v27;
  uint64_t v28 = (void *)((char *)v7 + v24);
  uint64_t v29 = (void *)((char *)a2 + v24);
  uint64_t v30 = v29[1];
  *uint64_t v28 = *v29;
  v28[1] = v30;
  uint64_t v31 = a3[14];
  uint64_t v32 = (void *)((char *)v7 + v31);
  uint64_t v33 = (void *)((char *)a2 + v31);
  uint64_t v34 = type metadata accessor for SearchViewState.ViewState(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *uint64_t v32 = *v33;
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
        goto LABEL_17;
      }
      uint64_t v37 = type metadata accessor for CodableError();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v37 - 8) + 16))(v32, v33, v37);
    }
    swift_storeEnumTagMultiPayload();
LABEL_17:
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
    goto LABEL_18;
  }
  uint64_t v35 = sub_10017DF08(&qword_100E70A78);
  memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
LABEL_18:
  uint64_t v38 = a3[16];
  *((unsigned char *)v7 + a3[15]) = *((unsigned char *)a2 + a3[15]);
  *((unsigned char *)v7 + v38) = *((unsigned char *)a2 + v38);
  uint64_t v39 = a3[18];
  *((unsigned char *)v7 + a3[17]) = *((unsigned char *)a2 + a3[17]);
  *((unsigned char *)v7 + v39) = *((unsigned char *)a2 + v39);
  uint64_t v40 = a3[19];
  uint64_t v41 = (char *)v7 + v40;
  uint64_t v42 = (char *)a2 + v40;
  uint64_t v43 = type metadata accessor for Date();
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
  v44(v41, v42, v43);
  uint64_t v45 = a3[21];
  *((unsigned char *)v7 + a3[20]) = *((unsigned char *)a2 + a3[20]);
  *((unsigned char *)v7 + v45) = *((unsigned char *)a2 + v45);
  uint64_t v46 = a3[23];
  *((unsigned char *)v7 + a3[22]) = *((unsigned char *)a2 + a3[22]);
  *((unsigned char *)v7 + v46) = *((unsigned char *)a2 + v46);
  uint64_t v47 = a3[24];
  uint64_t v48 = a3[25];
  uint64_t v49 = (char *)v7 + v47;
  uint64_t v50 = (char *)a2 + v47;
  *uint64_t v49 = *v50;
  *((void *)v49 + 1) = *((void *)v50 + 1);
  uint64_t v51 = (char *)v7 + v48;
  uint64_t v52 = (char *)a2 + v48;
  swift_bridgeObjectRetain();
  size_t v75 = v44;
  v44(v51, v52, v43);
  uint64_t v53 = a3[27];
  *((unsigned char *)v7 + a3[26]) = *((unsigned char *)a2 + a3[26]);
  uint64_t v54 = *(void **)((char *)a2 + v53);
  *(void *)((char *)v7 + v53) = v54;
  uint64_t v55 = a3[28];
  uint64_t v56 = a3[29];
  uint64_t v57 = (void *)((char *)v7 + v55);
  uint64_t v58 = (void *)((char *)a2 + v55);
  uint64_t v59 = v58[1];
  void *v57 = *v58;
  v57[1] = v59;
  uint64_t v60 = v58[3];
  v57[2] = v58[2];
  v57[3] = v60;
  *((unsigned char *)v7 + v56) = *((unsigned char *)a2 + v56);
  uint64_t v61 = a3[31];
  *(void *)((char *)v7 + a3[30]) = *(void *)((char *)a2 + a3[30]);
  *((unsigned char *)v7 + v61) = *((unsigned char *)a2 + v61);
  uint64_t v62 = a3[32];
  __dst = (void *)((char *)v7 + v62);
  uint64_t v63 = (void *)((char *)a2 + v62);
  uint64_t v64 = type metadata accessor for ContentStatusBanner();
  id v65 = v54;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v63, 1, v64))
  {
    uint64_t v66 = sub_10017DF08(&qword_100E63A10);
    memcpy(__dst, v63, *(void *)(*(void *)(v66 - 8) + 64));
  }
  else
  {
    *(unsigned char *)__dst = *(unsigned char *)v63;
    uint64_t v67 = v63 + 1;
    unint64_t v68 = v63[2];
    if (v68 >= 2)
    {
      __dst[1] = *v67;
      __dst[2] = v68;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(__dst + 1) = *(_OWORD *)v67;
    }
    uint64_t v69 = *(int *)(v64 + 24);
    uint64_t v70 = (char *)__dst + v69;
    uint64_t v71 = (char *)v63 + v69;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v43))
    {
      uint64_t v72 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
    }
    else
    {
      v75(v70, v71, v43);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v43);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v64);
  }
  uint64_t v73 = a3[34];
  *((unsigned char *)v7 + a3[33]) = *((unsigned char *)a2 + a3[33]);
  *((unsigned char *)v7 + v73) = *((unsigned char *)a2 + v73);
  *(void *)((char *)v7 + a3[35]) = *(void *)((char *)a2 + a3[35]);
  swift_bridgeObjectRetain();
  return v7;
}

uint64_t sub_10053E1D8(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for CurrentLocation();
  if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5)
    && swift_getEnumCaseMultiPayload() <= 2)
  {
    uint64_t v6 = type metadata accessor for Location();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + a2[14];
  uint64_t v8 = type metadata accessor for SearchViewState.ViewState(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
    }
    else if (!EnumCaseMultiPayload)
    {
      uint64_t v17 = type metadata accessor for CodableError();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v7, v17);
    }
  }
  uint64_t v9 = a1 + a2[19];
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
  v11(v9, v10);
  swift_bridgeObjectRelease();
  v11(a1 + a2[25], v10);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = a1 + a2[32];
  uint64_t v13 = type metadata accessor for ContentStatusBanner();
  if (!_s7Weather24LocationCompositionStateOwet_0(v12, 1, v13))
  {
    if (*(void *)(v12 + 16) >= 2uLL) {
      swift_bridgeObjectRelease();
    }
    uint64_t v14 = v12 + *(int *)(v13 + 24);
    if (!_s7Weather24LocationCompositionStateOwet_0(v14, 1, v10)) {
      v11(v14, v10);
    }
  }

  return swift_bridgeObjectRelease();
}

void *sub_10053E478(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for CurrentLocation();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_10017DF08((uint64_t *)&unk_100EADD50);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() > 2)
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v7, v8, v11);
      swift_storeEnumTagMultiPayload();
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  uint64_t v13 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  uint64_t v16 = v15[1];
  void *v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = a3[10];
  uint64_t v18 = a3[11];
  uint64_t v19 = (char *)a1 + v17;
  uint64_t v20 = (char *)a2 + v17;
  *(void *)uint64_t v19 = *(void *)v20;
  v19[8] = v20[8];
  *((unsigned char *)a1 + v18) = *((unsigned char *)a2 + v18);
  uint64_t v21 = a3[12];
  uint64_t v22 = a3[13];
  uint64_t v23 = (void *)((char *)a1 + v21);
  uint64_t v24 = (void *)((char *)a2 + v21);
  uint64_t v25 = v24[1];
  *uint64_t v23 = *v24;
  v23[1] = v25;
  uint64_t v26 = (void *)((char *)a1 + v22);
  uint64_t v27 = (void *)((char *)a2 + v22);
  uint64_t v28 = v27[1];
  void *v26 = *v27;
  v26[1] = v28;
  uint64_t v29 = a3[14];
  uint64_t v30 = (void *)((char *)a1 + v29);
  uint64_t v31 = (void *)((char *)a2 + v29);
  uint64_t v32 = type metadata accessor for SearchViewState.ViewState(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v32))
  {
    uint64_t v33 = sub_10017DF08(&qword_100E70A78);
    memcpy(v30, v31, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_16;
  }
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    void *v30 = *v31;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
      goto LABEL_15;
    }
    uint64_t v35 = type metadata accessor for CodableError();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v35 - 8) + 16))(v30, v31, v35);
  }
  swift_storeEnumTagMultiPayload();
LABEL_15:
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v30, 0, 1, v32);
LABEL_16:
  uint64_t v36 = a3[16];
  *((unsigned char *)a1 + a3[15]) = *((unsigned char *)a2 + a3[15]);
  *((unsigned char *)a1 + v36) = *((unsigned char *)a2 + v36);
  uint64_t v37 = a3[18];
  *((unsigned char *)a1 + a3[17]) = *((unsigned char *)a2 + a3[17]);
  *((unsigned char *)a1 + v37) = *((unsigned char *)a2 + v37);
  uint64_t v38 = a3[19];
  uint64_t v39 = (char *)a1 + v38;
  uint64_t v40 = (char *)a2 + v38;
  uint64_t v41 = type metadata accessor for Date();
  uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
  v42(v39, v40, v41);
  uint64_t v43 = a3[21];
  *((unsigned char *)a1 + a3[20]) = *((unsigned char *)a2 + a3[20]);
  *((unsigned char *)a1 + v43) = *((unsigned char *)a2 + v43);
  uint64_t v44 = a3[23];
  *((unsigned char *)a1 + a3[22]) = *((unsigned char *)a2 + a3[22]);
  *((unsigned char *)a1 + v44) = *((unsigned char *)a2 + v44);
  uint64_t v45 = a3[24];
  uint64_t v46 = a3[25];
  uint64_t v47 = (char *)a1 + v45;
  uint64_t v48 = (char *)a2 + v45;
  char *v47 = *v48;
  *((void *)v47 + 1) = *((void *)v48 + 1);
  uint64_t v49 = (char *)a1 + v46;
  uint64_t v50 = (char *)a2 + v46;
  swift_bridgeObjectRetain();
  uint64_t v73 = v42;
  v42(v49, v50, v41);
  uint64_t v51 = a3[27];
  *((unsigned char *)a1 + a3[26]) = *((unsigned char *)a2 + a3[26]);
  uint64_t v52 = *(void **)((char *)a2 + v51);
  *(void *)((char *)a1 + v51) = v52;
  uint64_t v53 = a3[28];
  uint64_t v54 = a3[29];
  uint64_t v55 = (void *)((char *)a1 + v53);
  uint64_t v56 = (void *)((char *)a2 + v53);
  uint64_t v57 = v56[1];
  void *v55 = *v56;
  v55[1] = v57;
  uint64_t v58 = v56[3];
  v55[2] = v56[2];
  v55[3] = v58;
  *((unsigned char *)a1 + v54) = *((unsigned char *)a2 + v54);
  uint64_t v59 = a3[31];
  *(void *)((char *)a1 + a3[30]) = *(void *)((char *)a2 + a3[30]);
  *((unsigned char *)a1 + v59) = *((unsigned char *)a2 + v59);
  uint64_t v60 = a3[32];
  __dst = (void *)((char *)a1 + v60);
  uint64_t v61 = (void *)((char *)a2 + v60);
  uint64_t v62 = type metadata accessor for ContentStatusBanner();
  id v63 = v52;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v62))
  {
    uint64_t v64 = sub_10017DF08(&qword_100E63A10);
    memcpy(__dst, v61, *(void *)(*(void *)(v64 - 8) + 64));
  }
  else
  {
    *(unsigned char *)__dst = *(unsigned char *)v61;
    id v65 = v61 + 1;
    unint64_t v66 = v61[2];
    if (v66 >= 2)
    {
      __dst[1] = *v65;
      __dst[2] = v66;
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(__dst + 1) = *(_OWORD *)v65;
    }
    uint64_t v67 = *(int *)(v62 + 24);
    unint64_t v68 = (char *)__dst + v67;
    uint64_t v69 = (char *)v61 + v67;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v69, 1, v41))
    {
      uint64_t v70 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
    }
    else
    {
      v73(v68, v69, v41);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v68, 0, 1, v41);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v62);
  }
  uint64_t v71 = a3[34];
  *((unsigned char *)a1 + a3[33]) = *((unsigned char *)a2 + a3[33]);
  *((unsigned char *)a1 + v71) = *((unsigned char *)a2 + v71);
  *(void *)((char *)a1 + a3[35]) = *(void *)((char *)a2 + a3[35]);
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_10053EAD4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for CurrentLocation();
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      if (a1 == a2) {
        goto LABEL_14;
      }
      sub_1001D11E8((uint64_t)v7, (void (*)(void))&type metadata accessor for CurrentLocation);
      if (swift_getEnumCaseMultiPayload() <= 2)
      {
        uint64_t v14 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v7, v8, v14);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      size_t v12 = *(void *)(*(void *)(v9 - 8) + 64);
LABEL_8:
      memcpy(v7, v8, v12);
      goto LABEL_14;
    }
    sub_1001D11E8((uint64_t)v7, (void (*)(void))&type metadata accessor for CurrentLocation);
LABEL_7:
    size_t v12 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100EADD50) - 8) + 64);
    goto LABEL_8;
  }
  if (v11) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() > 2)
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v13 = type metadata accessor for Location();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v7, v8, v13);
    swift_storeEnumTagMultiPayload();
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_14:
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v15 = a3[9];
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[10];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = *(void *)v20;
  v19[8] = v20[8];
  *(void *)uint64_t v19 = v21;
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  uint64_t v22 = a3[12];
  uint64_t v23 = (void *)((char *)a1 + v22);
  uint64_t v24 = (void *)((char *)a2 + v22);
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[13];
  uint64_t v26 = (void *)((char *)a1 + v25);
  uint64_t v27 = (void *)((char *)a2 + v25);
  void *v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v28 = a3[14];
  uint64_t v29 = (void *)((char *)a1 + v28);
  uint64_t v30 = (void *)((char *)a2 + v28);
  uint64_t v31 = type metadata accessor for SearchViewState.ViewState(0);
  int v32 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v31);
  int v33 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31);
  if (v32)
  {
    if (!v33)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        void *v29 = *v30;
        swift_bridgeObjectRetain();
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
          goto LABEL_30;
        }
        uint64_t v35 = type metadata accessor for CodableError();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v35 - 8) + 16))(v29, v30, v35);
      }
      swift_storeEnumTagMultiPayload();
LABEL_30:
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
      goto LABEL_31;
    }
    goto LABEL_21;
  }
  if (v33)
  {
    sub_1001D11E8((uint64_t)v29, (void (*)(void))type metadata accessor for SearchViewState.ViewState);
LABEL_21:
    size_t v36 = *(void *)(*(void *)(sub_10017DF08(&qword_100E70A78) - 8) + 64);
LABEL_22:
    memcpy(v29, v30, v36);
    goto LABEL_31;
  }
  if (a1 == a2) {
    goto LABEL_31;
  }
  sub_1001D11E8((uint64_t)v29, (void (*)(void))type metadata accessor for SearchViewState.ViewState);
  int v37 = swift_getEnumCaseMultiPayload();
  if (v37 == 1)
  {
    void *v29 = *v30;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (v37)
    {
      size_t v36 = *(void *)(*(void *)(v31 - 8) + 64);
      goto LABEL_22;
    }
    uint64_t v38 = type metadata accessor for CodableError();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v38 - 8) + 16))(v29, v30, v38);
  }
  swift_storeEnumTagMultiPayload();
LABEL_31:
  *((unsigned char *)a1 + a3[15]) = *((unsigned char *)a2 + a3[15]);
  *((unsigned char *)a1 + a3[16]) = *((unsigned char *)a2 + a3[16]);
  *((unsigned char *)a1 + a3[17]) = *((unsigned char *)a2 + a3[17]);
  *((unsigned char *)a1 + a3[18]) = *((unsigned char *)a2 + a3[18]);
  uint64_t v39 = a3[19];
  uint64_t v40 = (char *)a1 + v39;
  uint64_t v41 = (char *)a2 + v39;
  uint64_t v42 = type metadata accessor for Date();
  uint64_t v76 = *(void *)(v42 - 8);
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v76 + 24);
  v43(v40, v41, v42);
  *((unsigned char *)a1 + a3[20]) = *((unsigned char *)a2 + a3[20]);
  *((unsigned char *)a1 + a3[21]) = *((unsigned char *)a2 + a3[21]);
  *((unsigned char *)a1 + a3[22]) = *((unsigned char *)a2 + a3[22]);
  *((unsigned char *)a1 + a3[23]) = *((unsigned char *)a2 + a3[23]);
  uint64_t v44 = a3[24];
  uint64_t v45 = (char *)a1 + v44;
  uint64_t v46 = (char *)a2 + v44;
  *uint64_t v45 = *v46;
  *((void *)v45 + 1) = *((void *)v46 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v43((char *)a1 + a3[25], (char *)a2 + a3[25], v42);
  *((unsigned char *)a1 + a3[26]) = *((unsigned char *)a2 + a3[26]);
  uint64_t v47 = a3[27];
  uint64_t v48 = *(void **)((char *)a1 + v47);
  uint64_t v49 = *(void **)((char *)a2 + v47);
  *(void *)((char *)a1 + v47) = v49;
  id v50 = v49;

  uint64_t v51 = a3[28];
  uint64_t v52 = (void *)((char *)a1 + v51);
  uint64_t v53 = (char *)a2 + v51;
  void *v52 = *(void *)((char *)a2 + v51);
  v52[1] = *(void *)((char *)a2 + v51 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v52[2] = *((void *)v53 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v52[3] = *((void *)v53 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)a1 + a3[29]) = *((unsigned char *)a2 + a3[29]);
  *(void *)((char *)a1 + a3[30]) = *(void *)((char *)a2 + a3[30]);
  *((unsigned char *)a1 + a3[31]) = *((unsigned char *)a2 + a3[31]);
  uint64_t v54 = a3[32];
  uint64_t v55 = (uint64_t)a1 + v54;
  uint64_t v56 = (uint64_t)a2 + v54;
  uint64_t v57 = type metadata accessor for ContentStatusBanner();
  int v58 = _s7Weather24LocationCompositionStateOwet_0(v55, 1, v57);
  int v59 = _s7Weather24LocationCompositionStateOwet_0(v56, 1, v57);
  if (v58)
  {
    if (!v59)
    {
      *(unsigned char *)uint64_t v55 = *(unsigned char *)v56;
      if (*(void *)(v56 + 16) >= 2uLL)
      {
        *(void *)(v55 + 8) = *(void *)(v56 + 8);
        *(void *)(v55 + 16) = *(void *)(v56 + 16);
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v55 + 8) = *(_OWORD *)(v56 + 8);
      }
      uint64_t v64 = *(int *)(v57 + 24);
      id v65 = (void *)(v55 + v64);
      unint64_t v66 = (const void *)(v56 + v64);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v66, 1, v42))
      {
        uint64_t v67 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v65, v66, *(void *)(*(void *)(v67 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v76 + 16))(v65, v66, v42);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v65, 0, 1, v42);
      }
      uint64_t v68 = v55;
      uint64_t v69 = v57;
      goto LABEL_47;
    }
    goto LABEL_37;
  }
  if (v59)
  {
    sub_1001D11E8(v55, (void (*)(void))type metadata accessor for ContentStatusBanner);
LABEL_37:
    size_t v60 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63A10) - 8) + 64);
    uint64_t v61 = (void *)v55;
    uint64_t v62 = (const void *)v56;
    goto LABEL_38;
  }
  *(unsigned char *)uint64_t v55 = *(unsigned char *)v56;
  unint64_t v63 = *(void *)(v56 + 16);
  if (*(void *)(v55 + 16) >= 2uLL)
  {
    if (v63 >= 2)
    {
      *(void *)(v55 + 8) = *(void *)(v56 + 8);
      *(void *)(v55 + 16) = *(void *)(v56 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10027B4D4(v55 + 8);
      *(_OWORD *)(v55 + 8) = *(_OWORD *)(v56 + 8);
    }
  }
  else if (v63 >= 2)
  {
    *(void *)(v55 + 8) = *(void *)(v56 + 8);
    *(void *)(v55 + 16) = *(void *)(v56 + 16);
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v55 + 8) = *(_OWORD *)(v56 + 8);
  }
  uint64_t v71 = *(int *)(v57 + 24);
  uint64_t v72 = v55 + v71;
  uint64_t v73 = v56 + v71;
  int v74 = _s7Weather24LocationCompositionStateOwet_0(v72, 1, v42);
  int v75 = _s7Weather24LocationCompositionStateOwet_0(v73, 1, v42);
  if (v74)
  {
    if (!v75)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v76 + 16))(v72, v73, v42);
      uint64_t v68 = v72;
      uint64_t v69 = v42;
LABEL_47:
      _s7Weather24LocationCompositionStateOwst_0(v68, 0, 1, v69);
      goto LABEL_48;
    }
  }
  else
  {
    if (!v75)
    {
      v43((char *)v72, (char *)v73, v42);
      goto LABEL_48;
    }
    (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v72, v42);
  }
  size_t v60 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
  uint64_t v61 = (void *)v72;
  uint64_t v62 = (const void *)v73;
LABEL_38:
  memcpy(v61, v62, v60);
LABEL_48:
  *((unsigned char *)a1 + a3[33]) = *((unsigned char *)a2 + a3[33]);
  *((unsigned char *)a1 + a3[34]) = *((unsigned char *)a2 + a3[34]);
  *(void *)((char *)a1 + a3[35]) = *(void *)((char *)a2 + a3[35]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_10053F608(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for CurrentLocation();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_10017DF08((uint64_t *)&unk_100EADD50);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() > 2)
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = type metadata accessor for Location();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v7, v8, v11);
      swift_storeEnumTagMultiPayload();
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
  }
  uint64_t v12 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v12) = *(void *)((char *)a2 + v12);
  uint64_t v13 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  uint64_t v14 = a3[10];
  uint64_t v15 = a3[11];
  uint64_t v16 = (char *)a1 + v14;
  uint64_t v17 = (char *)a2 + v14;
  *(void *)uint64_t v16 = *(void *)v17;
  v16[8] = v17[8];
  *((unsigned char *)a1 + v15) = *((unsigned char *)a2 + v15);
  uint64_t v18 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  uint64_t v19 = a3[14];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  *(_OWORD *)((char *)a1 + v18) = *(_OWORD *)((char *)a2 + v18);
  uint64_t v22 = type metadata accessor for SearchViewState.ViewState(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
  {
    uint64_t v23 = sub_10017DF08(&qword_100E70A78);
    memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      uint64_t v24 = type metadata accessor for CodableError();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v20, v21, v24);
      swift_storeEnumTagMultiPayload();
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
  }
  uint64_t v25 = a3[16];
  *((unsigned char *)a1 + a3[15]) = *((unsigned char *)a2 + a3[15]);
  *((unsigned char *)a1 + v25) = *((unsigned char *)a2 + v25);
  uint64_t v26 = a3[18];
  *((unsigned char *)a1 + a3[17]) = *((unsigned char *)a2 + a3[17]);
  *((unsigned char *)a1 + v26) = *((unsigned char *)a2 + v26);
  uint64_t v27 = a3[19];
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = type metadata accessor for Date();
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32);
  v31(v28, v29, v30);
  uint64_t v32 = a3[21];
  *((unsigned char *)a1 + a3[20]) = *((unsigned char *)a2 + a3[20]);
  *((unsigned char *)a1 + v32) = *((unsigned char *)a2 + v32);
  uint64_t v33 = a3[23];
  *((unsigned char *)a1 + a3[22]) = *((unsigned char *)a2 + a3[22]);
  *((unsigned char *)a1 + v33) = *((unsigned char *)a2 + v33);
  uint64_t v34 = a3[25];
  *(_OWORD *)((char *)a1 + a3[24]) = *(_OWORD *)((char *)a2 + a3[24]);
  v31((char *)a1 + v34, (char *)a2 + v34, v30);
  uint64_t v35 = a3[27];
  *((unsigned char *)a1 + a3[26]) = *((unsigned char *)a2 + a3[26]);
  *(void *)((char *)a1 + v35) = *(void *)((char *)a2 + v35);
  uint64_t v36 = a3[28];
  uint64_t v37 = a3[29];
  uint64_t v38 = (_OWORD *)((char *)a1 + v36);
  uint64_t v39 = (_OWORD *)((char *)a2 + v36);
  long long v40 = v39[1];
  *uint64_t v38 = *v39;
  v38[1] = v40;
  *((unsigned char *)a1 + v37) = *((unsigned char *)a2 + v37);
  uint64_t v41 = a3[31];
  *(void *)((char *)a1 + a3[30]) = *(void *)((char *)a2 + a3[30]);
  *((unsigned char *)a1 + v41) = *((unsigned char *)a2 + v41);
  uint64_t v42 = a3[32];
  uint64_t v43 = (char *)a1 + v42;
  uint64_t v44 = (char *)a2 + v42;
  uint64_t v45 = type metadata accessor for ContentStatusBanner();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45))
  {
    uint64_t v46 = sub_10017DF08(&qword_100E63A10);
    memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
  }
  else
  {
    unsigned char *v43 = *v44;
    *(_OWORD *)(v43 + 8) = *(_OWORD *)(v44 + 8);
    uint64_t v47 = *(int *)(v45 + 24);
    uint64_t v48 = &v43[v47];
    uint64_t v49 = &v44[v47];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v49, 1, v30))
    {
      uint64_t v50 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v48, v49, *(void *)(*(void *)(v50 - 8) + 64));
    }
    else
    {
      v31(v48, v49, v30);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v48, 0, 1, v30);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v45);
  }
  uint64_t v51 = a3[34];
  *((unsigned char *)a1 + a3[33]) = *((unsigned char *)a2 + a3[33]);
  *((unsigned char *)a1 + v51) = *((unsigned char *)a2 + v51);
  *(void *)((char *)a1 + a3[35]) = *(void *)((char *)a2 + a3[35]);
  return a1;
}

void *sub_10053FB6C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for CurrentLocation();
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    if (!v11)
    {
      if (a1 == a2) {
        goto LABEL_14;
      }
      sub_1001D11E8((uint64_t)v7, (void (*)(void))&type metadata accessor for CurrentLocation);
      if (swift_getEnumCaseMultiPayload() <= 2)
      {
        uint64_t v14 = type metadata accessor for Location();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v7, v8, v14);
        swift_storeEnumTagMultiPayload();
        goto LABEL_14;
      }
      size_t v12 = *(void *)(*(void *)(v9 - 8) + 64);
LABEL_8:
      memcpy(v7, v8, v12);
      goto LABEL_14;
    }
    sub_1001D11E8((uint64_t)v7, (void (*)(void))&type metadata accessor for CurrentLocation);
LABEL_7:
    size_t v12 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100EADD50) - 8) + 64);
    goto LABEL_8;
  }
  if (v11) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() > 2)
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v13 = type metadata accessor for Location();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v7, v8, v13);
    swift_storeEnumTagMultiPayload();
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_14:
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  uint64_t v15 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v16 = (void *)((char *)a1 + v15);
  uint64_t v17 = (void *)((char *)a2 + v15);
  uint64_t v19 = *v17;
  uint64_t v18 = v17[1];
  *uint64_t v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[10];
  uint64_t v21 = a3[11];
  uint64_t v22 = (char *)a1 + v20;
  uint64_t v23 = (char *)a2 + v20;
  *(void *)uint64_t v22 = *(void *)v23;
  v22[8] = v23[8];
  *((unsigned char *)a1 + v21) = *((unsigned char *)a2 + v21);
  uint64_t v24 = a3[12];
  uint64_t v25 = (void *)((char *)a1 + v24);
  uint64_t v26 = (void *)((char *)a2 + v24);
  uint64_t v28 = *v26;
  uint64_t v27 = v26[1];
  void *v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  uint64_t v29 = a3[13];
  uint64_t v30 = (void *)((char *)a1 + v29);
  uint64_t v31 = (void *)((char *)a2 + v29);
  uint64_t v33 = *v31;
  uint64_t v32 = v31[1];
  void *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[14];
  uint64_t v35 = (char *)a1 + v34;
  uint64_t v36 = (char *)a2 + v34;
  uint64_t v37 = type metadata accessor for SearchViewState.ViewState(0);
  int v38 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v37);
  int v39 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37);
  if (!v38)
  {
    if (!v39)
    {
      if (a1 == a2) {
        goto LABEL_27;
      }
      sub_1001D11E8((uint64_t)v35, (void (*)(void))type metadata accessor for SearchViewState.ViewState);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v86 = type metadata accessor for CodableError();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 32))(v35, v36, v86);
        swift_storeEnumTagMultiPayload();
        goto LABEL_27;
      }
      size_t v40 = *(void *)(*(void *)(v37 - 8) + 64);
LABEL_21:
      memcpy(v35, v36, v40);
      goto LABEL_27;
    }
    sub_1001D11E8((uint64_t)v35, (void (*)(void))type metadata accessor for SearchViewState.ViewState);
LABEL_20:
    size_t v40 = *(void *)(*(void *)(sub_10017DF08(&qword_100E70A78) - 8) + 64);
    goto LABEL_21;
  }
  if (v39) {
    goto LABEL_20;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    uint64_t v41 = type metadata accessor for CodableError();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 32))(v35, v36, v41);
    swift_storeEnumTagMultiPayload();
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v37);
LABEL_27:
  uint64_t v42 = a3[16];
  *((unsigned char *)a1 + a3[15]) = *((unsigned char *)a2 + a3[15]);
  *((unsigned char *)a1 + v42) = *((unsigned char *)a2 + v42);
  uint64_t v43 = a3[18];
  *((unsigned char *)a1 + a3[17]) = *((unsigned char *)a2 + a3[17]);
  *((unsigned char *)a1 + v43) = *((unsigned char *)a2 + v43);
  uint64_t v44 = a3[19];
  uint64_t v45 = (char *)a1 + v44;
  uint64_t v46 = (char *)a2 + v44;
  uint64_t v47 = type metadata accessor for Date();
  uint64_t v87 = *(void *)(v47 - 8);
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v87 + 40);
  v48(v45, v46, v47);
  uint64_t v49 = a3[21];
  *((unsigned char *)a1 + a3[20]) = *((unsigned char *)a2 + a3[20]);
  *((unsigned char *)a1 + v49) = *((unsigned char *)a2 + v49);
  uint64_t v50 = a3[23];
  *((unsigned char *)a1 + a3[22]) = *((unsigned char *)a2 + a3[22]);
  *((unsigned char *)a1 + v50) = *((unsigned char *)a2 + v50);
  uint64_t v51 = a3[24];
  uint64_t v52 = (char *)a1 + v51;
  uint64_t v53 = (char *)a2 + v51;
  char *v52 = *v53;
  *((void *)v52 + 1) = *((void *)v53 + 1);
  swift_bridgeObjectRelease();
  v48((char *)a1 + a3[25], (char *)a2 + a3[25], v47);
  uint64_t v54 = a3[27];
  *((unsigned char *)a1 + a3[26]) = *((unsigned char *)a2 + a3[26]);
  uint64_t v55 = *(void **)((char *)a1 + v54);
  *(void *)((char *)a1 + v54) = *(void *)((char *)a2 + v54);

  uint64_t v56 = a3[28];
  uint64_t v57 = (void *)((char *)a1 + v56);
  int v58 = (char *)a2 + v56;
  uint64_t v59 = *(void *)((char *)a2 + v56 + 8);
  void *v57 = *(void *)((char *)a2 + v56);
  v57[1] = v59;
  swift_bridgeObjectRelease();
  v57[2] = *((void *)v58 + 2);
  swift_bridgeObjectRelease();
  v57[3] = *((void *)v58 + 3);
  swift_bridgeObjectRelease();
  uint64_t v60 = a3[30];
  *((unsigned char *)a1 + a3[29]) = *((unsigned char *)a2 + a3[29]);
  *(void *)((char *)a1 + v60) = *(void *)((char *)a2 + v60);
  uint64_t v61 = a3[32];
  *((unsigned char *)a1 + a3[31]) = *((unsigned char *)a2 + a3[31]);
  uint64_t v62 = (uint64_t)a1 + v61;
  uint64_t v63 = (uint64_t)a2 + v61;
  uint64_t v64 = type metadata accessor for ContentStatusBanner();
  int v65 = _s7Weather24LocationCompositionStateOwet_0(v62, 1, v64);
  int v66 = _s7Weather24LocationCompositionStateOwet_0(v63, 1, v64);
  if (v65)
  {
    if (!v66)
    {
      *(unsigned char *)uint64_t v62 = *(unsigned char *)v63;
      *(_OWORD *)(v62 + 8) = *(_OWORD *)(v63 + 8);
      uint64_t v67 = *(int *)(v64 + 24);
      uint64_t v68 = (void *)(v62 + v67);
      uint64_t v69 = (const void *)(v63 + v67);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v69, 1, v47))
      {
        uint64_t v70 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v87 + 32))(v68, v69, v47);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v68, 0, 1, v47);
      }
      uint64_t v76 = v62;
      uint64_t v77 = v64;
      goto LABEL_39;
    }
    goto LABEL_33;
  }
  if (v66)
  {
    sub_1001D11E8(v62, (void (*)(void))type metadata accessor for ContentStatusBanner);
LABEL_33:
    size_t v71 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63A10) - 8) + 64);
    uint64_t v72 = (void *)v62;
    uint64_t v73 = (const void *)v63;
    goto LABEL_34;
  }
  *(unsigned char *)uint64_t v62 = *(unsigned char *)v63;
  int v74 = (void *)(v63 + 8);
  if (*(void *)(v62 + 16) >= 2uLL)
  {
    unint64_t v80 = *(void *)(v63 + 16);
    if (v80 >= 2)
    {
      *(void *)(v62 + 8) = *v74;
      *(void *)(v62 + 16) = v80;
      swift_bridgeObjectRelease();
      goto LABEL_45;
    }
    sub_10027B4D4(v62 + 8);
    long long v75 = *(_OWORD *)(v63 + 8);
  }
  else
  {
    long long v75 = *(_OWORD *)v74;
  }
  *(_OWORD *)(v62 + 8) = v75;
LABEL_45:
  uint64_t v81 = *(int *)(v64 + 24);
  uint64_t v82 = v62 + v81;
  uint64_t v83 = v63 + v81;
  int v84 = _s7Weather24LocationCompositionStateOwet_0(v82, 1, v47);
  int v85 = _s7Weather24LocationCompositionStateOwet_0(v83, 1, v47);
  if (v84)
  {
    if (!v85)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v87 + 32))(v82, v83, v47);
      uint64_t v76 = v82;
      uint64_t v77 = v47;
LABEL_39:
      _s7Weather24LocationCompositionStateOwst_0(v76, 0, 1, v77);
      goto LABEL_40;
    }
  }
  else
  {
    if (!v85)
    {
      v48((char *)v82, (char *)v83, v47);
      goto LABEL_40;
    }
    (*(void (**)(uint64_t, uint64_t))(v87 + 8))(v82, v47);
  }
  size_t v71 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
  uint64_t v72 = (void *)v82;
  uint64_t v73 = (const void *)v83;
LABEL_34:
  memcpy(v72, v73, v71);
LABEL_40:
  uint64_t v78 = a3[34];
  *((unsigned char *)a1 + a3[33]) = *((unsigned char *)a2 + a3[33]);
  *((unsigned char *)a1 + v78) = *((unsigned char *)a2 + v78);
  *(void *)((char *)a1 + a3[35]) = *(void *)((char *)a2 + a3[35]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100540550(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100540564);
}

uint64_t sub_100540564(uint64_t *a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_10017DF08((uint64_t *)&unk_100EADD50);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a3[5];
    }
    else
    {
      sub_10017DF08(&qword_100E70A78);
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a2)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a3[14];
      }
      else
      {
        type metadata accessor for Date();
        sub_100162F30();
        if (*(_DWORD *)(v15 + 84) == a2)
        {
          uint64_t v10 = v14;
          uint64_t v11 = a3[19];
        }
        else
        {
          uint64_t v10 = sub_10017DF08(&qword_100E63A10);
          uint64_t v11 = a3[32];
        }
      }
    }
    return _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1 + v11, a2, v10);
  }
}

void *sub_100540664(void *result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    sub_10017DF08((uint64_t *)&unk_100EADD50);
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a4[5];
    }
    else
    {
      sub_10017DF08(&qword_100E70A78);
      sub_100162F30();
      if (*(_DWORD *)(v13 + 84) == a3)
      {
        uint64_t v10 = v12;
        uint64_t v11 = a4[14];
      }
      else
      {
        type metadata accessor for Date();
        sub_100162F30();
        if (*(_DWORD *)(v15 + 84) == a3)
        {
          uint64_t v10 = v14;
          uint64_t v11 = a4[19];
        }
        else
        {
          uint64_t v10 = sub_10017DF08(&qword_100E63A10);
          uint64_t v11 = a4[32];
        }
      }
    }
    return (void *)_s7Weather24LocationCompositionStateOwst_0((uint64_t)v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_100540760(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t sub_1005407B4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_100540808()
{
  type metadata accessor for Location.Identifier();
  sub_10017CF70();
  __chkstk_darwin(v3);
  sub_10019EC80();
  sub_100031F8C(v2);
  uint64_t v4 = sub_10017FEA8();
  v5(v4);
  if (v1)
  {
    uint64_t v6 = v0 + 7;
    uint64_t v7 = v0[10];
  }
  else
  {
    uint64_t v6 = v0 + 2;
    uint64_t v7 = v0[5];
  }
  sub_1001B1E64(v6, v7);
  uint64_t v8 = sub_10017A490();
  return v9(v8);
}

uint64_t sub_1005408D0()
{
  type metadata accessor for Location.Identifier();
  sub_10017CF70();
  __chkstk_darwin(v3);
  sub_10019EC80();
  sub_100031F8C(v2);
  uint64_t v4 = sub_10017FEA8();
  v5(v4);
  if (v1)
  {
    uint64_t v6 = v0 + 7;
    uint64_t v7 = v0[10];
  }
  else
  {
    uint64_t v6 = v0 + 2;
    uint64_t v7 = v0[5];
  }
  sub_1001B1E64(v6, v7);
  uint64_t v8 = sub_10017A490();
  return v9(v8);
}

uint64_t sub_100540998()
{
  return sub_100540808();
}

uint64_t sub_1005409BC()
{
  return sub_1005408D0();
}

void *sub_1005409E0(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    uint64_t v19 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v19;
  }
  uint64_t v7 = type metadata accessor for Location();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = *(void *)((char *)a2 + v8 + 8);
  *uint64_t v9 = *(void *)((char *)a2 + v8);
  v9[1] = v11;
  uint64_t v12 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v13 = v12[5];
  uint64_t v14 = (char *)v9 + v13;
  uint64_t v15 = &v10[v13];
  uint64_t v16 = type metadata accessor for Locale();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
  {
    uint64_t v17 = sub_10017DF08(&qword_100E63730);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
  }
  uint64_t v20 = v12[6];
  uint64_t v21 = (char *)v9 + v20;
  uint64_t v22 = &v10[v20];
  uint64_t v23 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  uint64_t v24 = v12[7];
  uint64_t v25 = (char *)v9 + v24;
  uint64_t v26 = &v10[v24];
  uint64_t v27 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27))
  {
    uint64_t v28 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    uint64_t v29 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v25, v26, v29);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v27);
  }
  uint64_t v30 = v12[8];
  uint64_t v31 = (void *)((char *)v9 + v30);
  uint64_t v32 = &v10[v30];
  uint64_t v33 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v36 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v31, v32, v36);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
      goto LABEL_15;
    }
    uint64_t v35 = *((void *)v32 + 1);
    void *v31 = *(void *)v32;
    v31[1] = v35;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
LABEL_15:
  uint64_t v37 = v12[9];
  int v38 = (char *)v9 + v37;
  int v39 = &v10[v37];
  uint64_t v40 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40))
  {
    uint64_t v41 = sub_10017DF08(&qword_100E63740);
    memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    uint64_t v42 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v42))
    {
      uint64_t v43 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v38, v39, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v38, v39, v42);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v42);
    }
    uint64_t v44 = *(int *)(v40 + 20);
    uint64_t v45 = &v38[v44];
    uint64_t v46 = &v39[v44];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v42))
    {
      uint64_t v47 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v45, v46, v42);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v42);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
  }
  uint64_t v208 = a3;
  uint64_t v48 = a3[6];
  uint64_t v210 = a1;
  uint64_t v49 = (char *)a1 + v48;
  uint64_t v209 = a2;
  uint64_t v50 = (char *)a2 + v48;
  uint64_t v51 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
  uint64_t v52 = type metadata accessor for PreprocessedWeatherData();
  *(void *)&v49[*(int *)(v52 + 20)] = *(void *)&v50[*(int *)(v52 + 20)];
  uint64_t v211 = v49;
  uint64_t v212 = (int *)v52;
  uint64_t v53 = *(int *)(v52 + 24);
  uint64_t v54 = &v49[v53];
  uint64_t v213 = v50;
  uint64_t v55 = &v50[v53];
  uint64_t v56 = *(void *)&v50[v53 + 8];
  *(void *)uint64_t v54 = *(void *)&v50[v53];
  *((void *)v54 + 1) = v56;
  uint64_t v57 = *(void *)&v50[v53 + 24];
  *((void *)v54 + 2) = *(void *)&v50[v53 + 16];
  *((void *)v54 + 3) = v57;
  uint64_t v58 = *(void *)&v50[v53 + 40];
  *((void *)v54 + 4) = *(void *)&v50[v53 + 32];
  *((void *)v54 + 5) = v58;
  uint64_t v59 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  uint64_t v60 = *(int *)(v59 + 28);
  uint64_t v61 = &v54[v60];
  uint64_t v62 = &v55[v60];
  uint64_t v63 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v62, 1, v63))
  {
    uint64_t v64 = sub_10017DF08(&qword_100E63750);
    memcpy(v61, v62, *(void *)(*(void *)(v64 - 8) + 64));
  }
  else
  {
    uint64_t v65 = *((void *)v62 + 1);
    *(void *)uint64_t v61 = *(void *)v62;
    *((void *)v61 + 1) = v65;
    uint64_t v66 = *(int *)(v63 + 20);
    uint64_t v67 = &v61[v66];
    uint64_t v68 = &v62[v66];
    uint64_t v69 = type metadata accessor for TemperatureScaleConfiguration();
    uint64_t v206 = *(void (**)(char *, char *, uint64_t))(*(void *)(v69 - 8) + 16);
    swift_bridgeObjectRetain();
    v206(v67, v68, v69);
    uint64_t v70 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    *(void *)&v67[v70[5]] = *(void *)&v68[v70[5]];
    *(void *)&v67[v70[6]] = *(void *)&v68[v70[6]];
    *(void *)&v67[v70[7]] = *(void *)&v68[v70[7]];
    uint64_t v71 = v70[8];
    uint64_t v72 = &v67[v71];
    uint64_t v73 = &v68[v71];
    uint64_t v75 = *(void *)v73;
    uint64_t v74 = *((void *)v73 + 1);
    *(void *)uint64_t v72 = v75;
    *((void *)v72 + 1) = v74;
    v67[v70[9]] = v68[v70[9]];
    swift_bridgeObjectRetain();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v61, 0, 1, v63);
  }
  uint64_t v76 = *(int *)(v59 + 32);
  uint64_t v77 = &v54[v76];
  uint64_t v78 = &v55[v76];
  uint64_t v79 = *((void *)v78 + 1);
  *(void *)uint64_t v77 = *(void *)v78;
  *((void *)v77 + 1) = v79;
  uint64_t v80 = v212[7];
  uint64_t v81 = &v211[v80];
  uint64_t v82 = &v213[v80];
  *(void *)&v211[v80] = *(void *)&v213[v80];
  uint64_t v83 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
  int v84 = &v81[v83];
  int v85 = &v82[v83];
  uint64_t v86 = type metadata accessor for WeatherDescription();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v200 = v86;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v86))
  {
    uint64_t v87 = sub_10017DF08(&qword_100E63758);
    memcpy(v84, v85, *(void *)(*(void *)(v87 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16))(v84, v85, v86);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v84, 0, 1, v86);
  }
  uint64_t v88 = v212[8];
  uint64_t v89 = &v211[v88];
  uint64_t v90 = &v213[v88];
  uint64_t v91 = *(void *)&v213[v88 + 8];
  *(void *)uint64_t v89 = *(void *)&v213[v88];
  *((void *)v89 + 1) = v91;
  uint64_t v92 = *(void *)&v213[v88 + 24];
  *((void *)v89 + 2) = *(void *)&v213[v88 + 16];
  *((void *)v89 + 3) = v92;
  uint64_t v93 = *(void *)&v213[v88 + 40];
  *((void *)v89 + 4) = *(void *)&v213[v88 + 32];
  *((void *)v89 + 5) = v93;
  uint64_t v94 = *(void *)&v213[v88 + 56];
  *((void *)v89 + 6) = *(void *)&v213[v88 + 48];
  *((void *)v89 + 7) = v94;
  uint64_t v95 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
  int v96 = &v89[v95];
  uint64_t v97 = &v90[v95];
  uint64_t v98 = type metadata accessor for Date();
  char v99 = *(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int v204 = v99;
  uint64_t v205 = v98;
  v99(v96, v97, v98);
  uint64_t v100 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v101 = *(int *)(v100 + 20);
  uint64_t v102 = &v96[v101];
  uint64_t v103 = &v97[v101];
  uint64_t v104 = type metadata accessor for Elevation();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v103, 1, v104))
  {
    uint64_t v105 = sub_10017DF08(&qword_100E63760);
    memcpy(v102, v103, *(void *)(*(void *)(v105 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v104 - 8) + 16))(v102, v103, v104);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v102, 0, 1, v104);
  }
  uint64_t v106 = *(int *)(v100 + 24);
  uint64_t v107 = &v96[v106];
  uint64_t v108 = &v97[v106];
  uint64_t v109 = type metadata accessor for BackgroundMoonData();
  uint64_t v207 = v100;
  uint64_t v202 = v109;
  uint64_t v203 = v104;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v108, 1, v109))
  {
    uint64_t v110 = sub_10017DF08(&qword_100E63768);
    memcpy(v107, v108, *(void *)(*(void *)(v110 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v109 - 8) + 16))(v107, v108, v109);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v107, 0, 1, v109);
  }
  uint64_t v111 = v212[9];
  uint64_t v112 = &v211[v111];
  int v113 = &v213[v111];
  uint64_t v114 = *((void *)v113 + 1);
  *(void *)uint64_t v112 = *(void *)v113;
  *((void *)v112 + 1) = v114;
  uint64_t v115 = *((void *)v113 + 3);
  *((void *)v112 + 2) = *((void *)v113 + 2);
  *((void *)v112 + 3) = v115;
  uint64_t v116 = *((void *)v113 + 5);
  *((void *)v112 + 4) = *((void *)v113 + 4);
  *((void *)v112 + 5) = v116;
  uint64_t v117 = *((void *)v113 + 7);
  *((void *)v112 + 6) = *((void *)v113 + 6);
  *((void *)v112 + 7) = v117;
  uint64_t v118 = *((void *)v113 + 9);
  *((void *)v112 + 8) = *((void *)v113 + 8);
  *((void *)v112 + 9) = v118;
  uint64_t v119 = *((void *)v113 + 11);
  *((void *)v112 + 10) = *((void *)v113 + 10);
  *((void *)v112 + 11) = v119;
  uint64_t v120 = *((void *)v113 + 13);
  *((void *)v112 + 12) = *((void *)v113 + 12);
  *((void *)v112 + 13) = v120;
  uint64_t v121 = v212[10];
  uint64_t v122 = &v211[v121];
  uint64_t v123 = &v213[v121];
  uint64_t v198 = *(void (**)(char *, char *, uint64_t))(*(void *)(v200 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v198(v122, v123, v200);
  uint64_t v124 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
  uint64_t v125 = &v122[v124];
  uint64_t v126 = &v123[v124];
  uint64_t v127 = *((void *)v126 + 1);
  *(void *)uint64_t v125 = *(void *)v126;
  *((void *)v125 + 1) = v127;
  uint64_t v128 = v212[11];
  int v129 = &v211[v128];
  uint64_t v130 = &v213[v128];
  uint64_t v131 = *((void *)v130 + 1);
  *(void *)int v129 = *(void *)v130;
  *((void *)v129 + 1) = v131;
  uint64_t v132 = *((void *)v130 + 3);
  *((void *)v129 + 2) = *((void *)v130 + 2);
  *((void *)v129 + 3) = v132;
  uint64_t v133 = *((void *)v130 + 5);
  *((void *)v129 + 4) = *((void *)v130 + 4);
  *((void *)v129 + 5) = v133;
  uint64_t v134 = v212[12];
  uint64_t v135 = &v211[v134];
  uint64_t v136 = &v213[v134];
  uint64_t v137 = type metadata accessor for PressureTrend();
  uint64_t v138 = *(void (**)(char *, char *, uint64_t))(*(void *)(v137 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v138(v135, v136, v137);
  uint64_t v139 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
  uint64_t v140 = v139[5];
  uint64_t v141 = &v135[v140];
  uint64_t v142 = &v136[v140];
  uint64_t v143 = *((void *)v142 + 1);
  *(void *)uint64_t v141 = *(void *)v142;
  *((void *)v141 + 1) = v143;
  uint64_t v144 = v139[6];
  uint64_t v145 = &v135[v144];
  uint64_t v146 = &v136[v144];
  uint64_t v201 = *((void *)v146 + 1);
  *(void *)uint64_t v145 = *(void *)v146;
  *((void *)v145 + 1) = v201;
  uint64_t v147 = v139[7];
  uint64_t v148 = &v135[v147];
  uint64_t v149 = &v136[v147];
  uint64_t v199 = *((void *)v149 + 1);
  *(void *)uint64_t v148 = *(void *)v149;
  *((void *)v148 + 1) = v199;
  *(void *)&v135[v139[8]] = *(void *)&v136[v139[8]];
  uint64_t v150 = v139[9];
  uint64_t v151 = &v135[v150];
  uint64_t v152 = &v136[v150];
  uint64_t v197 = *((void *)v152 + 1);
  *(void *)uint64_t v151 = *(void *)v152;
  *((void *)v151 + 1) = v197;
  uint64_t v153 = v212[13];
  uint64_t v154 = &v211[v153];
  uint64_t v155 = &v213[v153];
  uint64_t v156 = *((void *)v155 + 1);
  *(void *)uint64_t v154 = *(void *)v155;
  *((void *)v154 + 1) = v156;
  uint64_t v157 = *((void *)v155 + 3);
  *((void *)v154 + 2) = *((void *)v155 + 2);
  *((void *)v154 + 3) = v157;
  uint64_t v158 = *((void *)v155 + 5);
  *((void *)v154 + 4) = *((void *)v155 + 4);
  *((void *)v154 + 5) = v158;
  uint64_t v159 = *((void *)v155 + 7);
  *((void *)v154 + 6) = *((void *)v155 + 6);
  *((void *)v154 + 7) = v159;
  uint64_t v160 = *((void *)v155 + 9);
  *((void *)v154 + 8) = *((void *)v155 + 8);
  *((void *)v154 + 9) = v160;
  uint64_t v161 = *((void *)v155 + 11);
  *((void *)v154 + 10) = *((void *)v155 + 10);
  *((void *)v154 + 11) = v161;
  uint64_t v162 = *((void *)v155 + 13);
  *((void *)v154 + 12) = *((void *)v155 + 12);
  *((void *)v154 + 13) = v162;
  uint64_t v163 = *((void *)v155 + 15);
  *((void *)v154 + 14) = *((void *)v155 + 14);
  *((void *)v154 + 15) = v163;
  uint64_t v164 = *((void *)v155 + 17);
  *((void *)v154 + 16) = *((void *)v155 + 16);
  *((void *)v154 + 17) = v164;
  uint64_t v165 = *((void *)v155 + 19);
  *((void *)v154 + 18) = *((void *)v155 + 18);
  *((void *)v154 + 19) = v165;
  uint64_t v166 = *((void *)v155 + 21);
  *((void *)v154 + 20) = *((void *)v155 + 20);
  *((void *)v154 + 21) = v166;
  uint64_t v167 = *((void *)v155 + 23);
  *((void *)v154 + 22) = *((void *)v155 + 22);
  *((void *)v154 + 23) = v167;
  uint64_t v168 = *((void *)v155 + 25);
  *((void *)v154 + 24) = *((void *)v155 + 24);
  *((void *)v154 + 25) = v168;
  *((_OWORD *)v154 + 13) = *((_OWORD *)v155 + 13);
  *((void *)v154 + 28) = *((void *)v155 + 28);
  uint64_t v169 = v212[14];
  uint64_t v170 = &v211[v169];
  uint64_t v171 = &v213[v169];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v204(v170, v171, v205);
  uint64_t v172 = *(int *)(v207 + 20);
  uint64_t v173 = &v170[v172];
  uint64_t v174 = &v171[v172];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v171[v172], 1, v203))
  {
    uint64_t v175 = sub_10017DF08(&qword_100E63760);
    memcpy(v173, v174, *(void *)(*(void *)(v175 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v203 - 8) + 16))(v173, v174, v203);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v173, 0, 1, v203);
  }
  uint64_t v176 = *(int *)(v207 + 24);
  uint64_t v177 = &v170[v176];
  uint64_t v178 = &v171[v176];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v171[v176], 1, v202))
  {
    uint64_t v179 = sub_10017DF08(&qword_100E63768);
    memcpy(v177, v178, *(void *)(*(void *)(v179 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v202 - 8) + 16))(v177, v178, v202);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v177, 0, 1, v202);
  }
  uint64_t v180 = v212[15];
  uint64_t v181 = &v211[v180];
  uint64_t v182 = &v213[v180];
  uint64_t v183 = *((void *)v182 + 1);
  *(void *)uint64_t v181 = *(void *)v182;
  *((void *)v181 + 1) = v183;
  uint64_t v184 = *((void *)v182 + 3);
  *((void *)v181 + 2) = *((void *)v182 + 2);
  *((void *)v181 + 3) = v184;
  uint64_t v185 = *((void *)v182 + 5);
  *((void *)v181 + 4) = *((void *)v182 + 4);
  *((void *)v181 + 5) = v185;
  uint64_t v186 = *((void *)v182 + 7);
  *((void *)v181 + 6) = *((void *)v182 + 6);
  *((void *)v181 + 7) = v186;
  uint64_t v187 = *((void *)v182 + 9);
  *((void *)v181 + 8) = *((void *)v182 + 8);
  *((void *)v181 + 9) = v187;
  uint64_t v188 = *((void *)v182 + 11);
  *((void *)v181 + 10) = *((void *)v182 + 10);
  *((void *)v181 + 11) = v188;
  uint64_t v189 = *((void *)v182 + 13);
  *((void *)v181 + 12) = *((void *)v182 + 12);
  *((void *)v181 + 13) = v189;
  uint64_t v190 = v208[7];
  uint64_t v191 = (void *)((char *)v210 + v190);
  uint64_t v192 = (void *)((char *)v209 + v190);
  type metadata accessor for NewsDataModel();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v191 = *v192;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v193 = type metadata accessor for News();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v193 - 8) + 16))(v191, v192, v193);
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v194 = v208[9];
  uint64_t v19 = v210;
  *((unsigned char *)v210 + v208[8]) = *((unsigned char *)v209 + v208[8]);
  *((unsigned char *)v210 + v194) = *((unsigned char *)v209 + v194);
  uint64_t v195 = v208[11];
  *((unsigned char *)v210 + v208[10]) = *((unsigned char *)v209 + v208[10]);
  *((unsigned char *)v210 + v195) = *((unsigned char *)v209 + v195);
  return v19;
}

uint64_t sub_1005419AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v205 = a3;
  uint64_t v7 = a3[5];
  uint64_t v207 = a1;
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v206 = a2;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  uint64_t v11 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = (char *)v8 + v12;
  uint64_t v14 = (const void *)(v9 + v12);
  uint64_t v15 = type metadata accessor for Locale();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = sub_10017DF08(&qword_100E63730);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
  }
  uint64_t v17 = v11[6];
  uint64_t v18 = (char *)v8 + v17;
  uint64_t v19 = v9 + v17;
  uint64_t v20 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  uint64_t v21 = v11[7];
  uint64_t v22 = (char *)v8 + v21;
  uint64_t v23 = (const void *)(v9 + v21);
  uint64_t v24 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24))
  {
    uint64_t v25 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    uint64_t v26 = type metadata accessor for Date();
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v26 - 8) + 16))(v22, v23, v26);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v24);
  }
  uint64_t v27 = v11[8];
  uint64_t v28 = (void *)((char *)v8 + v27);
  uint64_t v29 = (void *)(v9 + v27);
  uint64_t v30 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v33 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(v28, v29, v33);
    goto LABEL_11;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v32 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v32;
    swift_bridgeObjectRetain();
LABEL_11:
    swift_storeEnumTagMultiPayload();
    goto LABEL_13;
  }
  memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
LABEL_13:
  uint64_t v34 = v11[9];
  uint64_t v35 = (char *)v8 + v34;
  uint64_t v36 = (char *)(v9 + v34);
  uint64_t v37 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37))
  {
    uint64_t v38 = sub_10017DF08(&qword_100E63740);
    memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    uint64_t v39 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v39))
    {
      uint64_t v40 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v35, v36, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v35, v36, v39);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v39);
    }
    uint64_t v41 = *(int *)(v37 + 20);
    uint64_t v42 = &v35[v41];
    uint64_t v43 = &v36[v41];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v39))
    {
      uint64_t v44 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v42, v43, v39);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v39);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v37);
  }
  uint64_t v45 = v205[6];
  uint64_t v46 = v207 + v45;
  uint64_t v47 = v206 + v45;
  uint64_t v48 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
  uint64_t v49 = type metadata accessor for PreprocessedWeatherData();
  *(void *)(v46 + *(int *)(v49 + 20)) = *(void *)(v47 + *(int *)(v49 + 20));
  uint64_t v208 = v46;
  uint64_t v209 = (int *)v49;
  uint64_t v50 = *(int *)(v49 + 24);
  uint64_t v51 = (void *)(v46 + v50);
  uint64_t v210 = v47;
  uint64_t v52 = v47 + v50;
  uint64_t v53 = *(void *)(v47 + v50 + 8);
  *uint64_t v51 = *(void *)(v47 + v50);
  v51[1] = v53;
  uint64_t v54 = *(void *)(v47 + v50 + 24);
  void v51[2] = *(void *)(v47 + v50 + 16);
  v51[3] = v54;
  uint64_t v55 = *(void *)(v47 + v50 + 40);
  v51[4] = *(void *)(v47 + v50 + 32);
  v51[5] = v55;
  uint64_t v56 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  uint64_t v57 = *(int *)(v56 + 28);
  uint64_t v58 = (void *)((char *)v51 + v57);
  uint64_t v59 = (void *)(v52 + v57);
  uint64_t v60 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v60))
  {
    uint64_t v61 = sub_10017DF08(&qword_100E63750);
    memcpy(v58, v59, *(void *)(*(void *)(v61 - 8) + 64));
  }
  else
  {
    uint64_t v62 = v59[1];
    void *v58 = *v59;
    v58[1] = v62;
    uint64_t v63 = *(int *)(v60 + 20);
    uint64_t v64 = (char *)v58 + v63;
    uint64_t v65 = (char *)v59 + v63;
    uint64_t v66 = type metadata accessor for TemperatureScaleConfiguration();
    uint64_t v203 = *(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 16);
    swift_bridgeObjectRetain();
    v203(v64, v65, v66);
    uint64_t v67 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    *(void *)&v64[v67[5]] = *(void *)&v65[v67[5]];
    *(void *)&v64[v67[6]] = *(void *)&v65[v67[6]];
    *(void *)&v64[v67[7]] = *(void *)&v65[v67[7]];
    uint64_t v68 = v67[8];
    uint64_t v69 = &v64[v68];
    uint64_t v70 = &v65[v68];
    uint64_t v72 = *(void *)v70;
    uint64_t v71 = *((void *)v70 + 1);
    *(void *)uint64_t v69 = v72;
    *((void *)v69 + 1) = v71;
    v64[v67[9]] = v65[v67[9]];
    swift_bridgeObjectRetain();
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v60);
  }
  uint64_t v73 = *(int *)(v56 + 32);
  uint64_t v74 = (void *)((char *)v51 + v73);
  uint64_t v75 = (void *)(v52 + v73);
  uint64_t v76 = v75[1];
  void *v74 = *v75;
  v74[1] = v76;
  uint64_t v77 = v209[7];
  uint64_t v78 = v208 + v77;
  uint64_t v79 = v210 + v77;
  *(void *)(v208 + v77) = *(void *)(v210 + v77);
  uint64_t v80 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
  uint64_t v81 = (void *)(v78 + v80);
  uint64_t v82 = (const void *)(v79 + v80);
  uint64_t v83 = type metadata accessor for WeatherDescription();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v197 = v83;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v83))
  {
    uint64_t v84 = sub_10017DF08(&qword_100E63758);
    memcpy(v81, v82, *(void *)(*(void *)(v84 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v83 - 8) + 16))(v81, v82, v83);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v83);
  }
  uint64_t v85 = v209[8];
  uint64_t v86 = (void *)(v208 + v85);
  uint64_t v87 = v210 + v85;
  uint64_t v88 = *(void *)(v210 + v85 + 8);
  *uint64_t v86 = *(void *)(v210 + v85);
  v86[1] = v88;
  uint64_t v89 = *(void *)(v210 + v85 + 24);
  v86[2] = *(void *)(v210 + v85 + 16);
  v86[3] = v89;
  uint64_t v90 = *(void *)(v210 + v85 + 40);
  v86[4] = *(void *)(v210 + v85 + 32);
  v86[5] = v90;
  uint64_t v91 = *(void *)(v210 + v85 + 56);
  v86[6] = *(void *)(v210 + v85 + 48);
  v86[7] = v91;
  uint64_t v92 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
  uint64_t v93 = (char *)v86 + v92;
  uint64_t v94 = v87 + v92;
  uint64_t v95 = type metadata accessor for Date();
  int v96 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v201 = v96;
  uint64_t v202 = v95;
  v96((uint64_t)v93, v94, v95);
  uint64_t v97 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v98 = *(int *)(v97 + 20);
  char v99 = &v93[v98];
  uint64_t v100 = (const void *)(v94 + v98);
  uint64_t v101 = type metadata accessor for Elevation();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v100, 1, v101))
  {
    uint64_t v102 = sub_10017DF08(&qword_100E63760);
    memcpy(v99, v100, *(void *)(*(void *)(v102 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v101 - 8) + 16))(v99, v100, v101);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v99, 0, 1, v101);
  }
  uint64_t v103 = *(int *)(v97 + 24);
  uint64_t v104 = &v93[v103];
  uint64_t v105 = (const void *)(v94 + v103);
  uint64_t v106 = type metadata accessor for BackgroundMoonData();
  uint64_t v204 = v97;
  uint64_t v199 = v106;
  uint64_t v200 = v101;
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v105, 1, v106))
  {
    uint64_t v107 = sub_10017DF08(&qword_100E63768);
    memcpy(v104, v105, *(void *)(*(void *)(v107 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v106 - 8) + 16))(v104, v105, v106);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v104, 0, 1, v106);
  }
  uint64_t v108 = v209[9];
  uint64_t v109 = (void *)(v208 + v108);
  uint64_t v110 = (void *)(v210 + v108);
  uint64_t v111 = v110[1];
  void *v109 = *v110;
  v109[1] = v111;
  uint64_t v112 = v110[3];
  v109[2] = v110[2];
  v109[3] = v112;
  uint64_t v113 = v110[5];
  v109[4] = v110[4];
  v109[5] = v113;
  uint64_t v114 = v110[7];
  v109[6] = v110[6];
  v109[7] = v114;
  uint64_t v115 = v110[9];
  v109[8] = v110[8];
  v109[9] = v115;
  uint64_t v116 = v110[11];
  v109[10] = v110[10];
  v109[11] = v116;
  uint64_t v117 = v110[13];
  v109[12] = v110[12];
  v109[13] = v117;
  uint64_t v118 = v209[10];
  uint64_t v119 = v208 + v118;
  uint64_t v120 = v210 + v118;
  uint64_t v195 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v197 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v195(v119, v120, v197);
  uint64_t v121 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
  uint64_t v122 = (void *)(v119 + v121);
  uint64_t v123 = (void *)(v120 + v121);
  uint64_t v124 = v123[1];
  *uint64_t v122 = *v123;
  v122[1] = v124;
  uint64_t v125 = v209[11];
  uint64_t v126 = (void *)(v208 + v125);
  uint64_t v127 = (void *)(v210 + v125);
  uint64_t v128 = v127[1];
  *uint64_t v126 = *v127;
  v126[1] = v128;
  uint64_t v129 = v127[3];
  v126[2] = v127[2];
  v126[3] = v129;
  uint64_t v130 = v127[5];
  v126[4] = v127[4];
  v126[5] = v130;
  uint64_t v131 = v209[12];
  uint64_t v132 = v208 + v131;
  uint64_t v133 = v210 + v131;
  uint64_t v134 = type metadata accessor for PressureTrend();
  uint64_t v135 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v134 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v135(v132, v133, v134);
  uint64_t v136 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
  uint64_t v137 = v136[5];
  uint64_t v138 = (void *)(v132 + v137);
  uint64_t v139 = (void *)(v133 + v137);
  uint64_t v140 = v139[1];
  void *v138 = *v139;
  v138[1] = v140;
  uint64_t v141 = v136[6];
  uint64_t v142 = (void *)(v132 + v141);
  uint64_t v143 = (void *)(v133 + v141);
  uint64_t v198 = v143[1];
  *uint64_t v142 = *v143;
  v142[1] = v198;
  uint64_t v144 = v136[7];
  uint64_t v145 = (void *)(v132 + v144);
  uint64_t v146 = (void *)(v133 + v144);
  uint64_t v196 = v146[1];
  *uint64_t v145 = *v146;
  v145[1] = v196;
  *(void *)(v132 + v136[8]) = *(void *)(v133 + v136[8]);
  uint64_t v147 = v136[9];
  uint64_t v148 = (void *)(v132 + v147);
  uint64_t v149 = (void *)(v133 + v147);
  uint64_t v194 = v149[1];
  *uint64_t v148 = *v149;
  v148[1] = v194;
  uint64_t v150 = v209[13];
  uint64_t v151 = v208 + v150;
  uint64_t v152 = v210 + v150;
  uint64_t v153 = *(void *)(v152 + 8);
  *(void *)uint64_t v151 = *(void *)v152;
  *(void *)(v151 + 8) = v153;
  uint64_t v154 = *(void *)(v152 + 24);
  *(void *)(v151 + 16) = *(void *)(v152 + 16);
  *(void *)(v151 + 24) = v154;
  uint64_t v155 = *(void *)(v152 + 40);
  *(void *)(v151 + 32) = *(void *)(v152 + 32);
  *(void *)(v151 + 40) = v155;
  uint64_t v156 = *(void *)(v152 + 56);
  *(void *)(v151 + 48) = *(void *)(v152 + 48);
  *(void *)(v151 + 56) = v156;
  uint64_t v157 = *(void *)(v152 + 72);
  *(void *)(v151 + 64) = *(void *)(v152 + 64);
  *(void *)(v151 + 72) = v157;
  uint64_t v158 = *(void *)(v152 + 88);
  *(void *)(v151 + 80) = *(void *)(v152 + 80);
  *(void *)(v151 + 88) = v158;
  uint64_t v159 = *(void *)(v152 + 104);
  *(void *)(v151 + 96) = *(void *)(v152 + 96);
  *(void *)(v151 + 104) = v159;
  uint64_t v160 = *(void *)(v152 + 120);
  *(void *)(v151 + 112) = *(void *)(v152 + 112);
  *(void *)(v151 + 120) = v160;
  uint64_t v161 = *(void *)(v152 + 136);
  *(void *)(v151 + 128) = *(void *)(v152 + 128);
  *(void *)(v151 + 136) = v161;
  uint64_t v162 = *(void *)(v152 + 152);
  *(void *)(v151 + 144) = *(void *)(v152 + 144);
  *(void *)(v151 + 152) = v162;
  uint64_t v163 = *(void *)(v152 + 168);
  *(void *)(v151 + 160) = *(void *)(v152 + 160);
  *(void *)(v151 + 168) = v163;
  uint64_t v164 = *(void *)(v152 + 184);
  *(void *)(v151 + 176) = *(void *)(v152 + 176);
  *(void *)(v151 + 184) = v164;
  uint64_t v165 = *(void *)(v152 + 200);
  *(void *)(v151 + 192) = *(void *)(v152 + 192);
  *(void *)(v151 + 200) = v165;
  *(_OWORD *)(v151 + 208) = *(_OWORD *)(v152 + 208);
  *(void *)(v151 + 224) = *(void *)(v152 + 224);
  uint64_t v166 = v209[14];
  uint64_t v167 = v208 + v166;
  uint64_t v168 = v210 + v166;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v201(v167, v168, v202);
  uint64_t v169 = *(int *)(v204 + 20);
  uint64_t v170 = (void *)(v167 + v169);
  uint64_t v171 = (const void *)(v168 + v169);
  if (_s7Weather24LocationCompositionStateOwet_0(v168 + v169, 1, v200))
  {
    uint64_t v172 = sub_10017DF08(&qword_100E63760);
    memcpy(v170, v171, *(void *)(*(void *)(v172 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v200 - 8) + 16))(v170, v171, v200);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v170, 0, 1, v200);
  }
  uint64_t v173 = *(int *)(v204 + 24);
  uint64_t v174 = (void *)(v167 + v173);
  uint64_t v175 = (const void *)(v168 + v173);
  if (_s7Weather24LocationCompositionStateOwet_0(v168 + v173, 1, v199))
  {
    uint64_t v176 = sub_10017DF08(&qword_100E63768);
    memcpy(v174, v175, *(void *)(*(void *)(v176 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v199 - 8) + 16))(v174, v175, v199);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v174, 0, 1, v199);
  }
  uint64_t v177 = v209[15];
  uint64_t v178 = (void *)(v208 + v177);
  uint64_t v179 = (void *)(v210 + v177);
  uint64_t v180 = v179[1];
  *uint64_t v178 = *v179;
  v178[1] = v180;
  uint64_t v181 = v179[3];
  v178[2] = v179[2];
  v178[3] = v181;
  uint64_t v182 = v179[5];
  v178[4] = v179[4];
  v178[5] = v182;
  uint64_t v183 = v179[7];
  v178[6] = v179[6];
  v178[7] = v183;
  uint64_t v184 = v179[9];
  v178[8] = v179[8];
  v178[9] = v184;
  uint64_t v185 = v179[11];
  v178[10] = v179[10];
  v178[11] = v185;
  uint64_t v186 = v179[13];
  v178[12] = v179[12];
  v178[13] = v186;
  uint64_t v187 = v205[7];
  uint64_t v188 = (void *)(v207 + v187);
  uint64_t v189 = (void *)(v206 + v187);
  type metadata accessor for NewsDataModel();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v188 = *v189;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v190 = type metadata accessor for News();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v190 - 8) + 16))(v188, v189, v190);
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v191 = v205[9];
  uint64_t result = v207;
  *(unsigned char *)(v207 + v205[8]) = *(unsigned char *)(v206 + v205[8]);
  *(unsigned char *)(v207 + v191) = *(unsigned char *)(v206 + v191);
  uint64_t v193 = v205[11];
  *(unsigned char *)(v207 + v205[10]) = *(unsigned char *)(v206 + v205[10]);
  *(unsigned char *)(v207 + v193) = *(unsigned char *)(v206 + v193);
  return result;
}

uint64_t sub_100542930(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = (char *)v8 + v11;
  uint64_t v13 = (const void *)(v9 + v11);
  uint64_t v14 = type metadata accessor for Locale();
  int v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v14);
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v17 = *(void *)(v14 - 8);
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v14);
LABEL_6:
    uint64_t v18 = sub_10017DF08(&qword_100E63730);
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, const void *, uint64_t))(v17 + 24))(v12, v13, v14);
LABEL_7:
  uint64_t v19 = v10[6];
  uint64_t v20 = (char *)v8 + v19;
  uint64_t v21 = v9 + v19;
  uint64_t v22 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = v10[7];
  uint64_t v24 = (char *)v8 + v23;
  uint64_t v25 = (const void *)(v9 + v23);
  uint64_t v26 = sub_10017DF08(&qword_100E63738);
  int v27 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v26);
  int v28 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26);
  if (v27)
  {
    if (!v28)
    {
      uint64_t v29 = type metadata accessor for Date();
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v29 - 8) + 16))(v24, v25, v29);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v28)
  {
    sub_10037DA34((uint64_t)v24);
LABEL_12:
    uint64_t v30 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v24, v25, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v48 = type metadata accessor for Date();
  (*(void (**)(char *, const void *, uint64_t))(*(void *)(v48 - 8) + 24))(v24, v25, v48);
LABEL_13:
  if (a1 == a2) {
    goto LABEL_20;
  }
  uint64_t v31 = v10[8];
  uint64_t v32 = (void *)((char *)v8 + v31);
  uint64_t v33 = (void *)(v9 + v31);
  sub_1001BC124((uint64_t)v8 + v31, type metadata accessor for WeatherData.WeatherStatisticsState);
  uint64_t v34 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v36 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 16))(v32, v33, v36);
    goto LABEL_18;
  }
  if (!EnumCaseMultiPayload)
  {
    *uint64_t v32 = *v33;
    v32[1] = v33[1];
    swift_bridgeObjectRetain();
LABEL_18:
    swift_storeEnumTagMultiPayload();
    goto LABEL_20;
  }
  memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
LABEL_20:
  uint64_t v37 = v10[9];
  uint64_t v38 = (char *)v8 + v37;
  uint64_t v39 = (char *)(v9 + v37);
  uint64_t v40 = type metadata accessor for WeatherDataOverrides();
  int v41 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v40);
  int v42 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40);
  if (v41)
  {
    if (!v42)
    {
      uint64_t v43 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v43))
      {
        uint64_t v44 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v38, v39, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v38, v39, v43);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v43);
      }
      uint64_t v52 = *(int *)(v40 + 20);
      uint64_t v53 = &v38[v52];
      uint64_t v54 = &v39[v52];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v43))
      {
        uint64_t v55 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v53, v54, v43);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v43);
      }
      uint64_t v56 = (uint64_t)v38;
      uint64_t v57 = v40;
      goto LABEL_38;
    }
    goto LABEL_26;
  }
  if (v42)
  {
    sub_1001BC124((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for WeatherDataOverrides);
LABEL_26:
    size_t v45 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63740) - 8) + 64);
    uint64_t v46 = v38;
    uint64_t v47 = v39;
LABEL_27:
    memcpy(v46, v47, v45);
    goto LABEL_39;
  }
  uint64_t v49 = type metadata accessor for Date();
  int v50 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v49);
  int v51 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v49);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v38, v39, v49);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v49);
      goto LABEL_90;
    }
    goto LABEL_89;
  }
  uint64_t v186 = *(void *)(v49 - 8);
  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v186 + 8))(v38, v49);
LABEL_89:
    uint64_t v187 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v38, v39, *(void *)(*(void *)(v187 - 8) + 64));
    goto LABEL_90;
  }
  (*(void (**)(char *, char *, uint64_t))(v186 + 24))(v38, v39, v49);
LABEL_90:
  uint64_t v188 = *(int *)(v40 + 20);
  uint64_t v189 = &v38[v188];
  uint64_t v190 = (uint64_t)&v39[v188];
  int v191 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v38[v188], 1, v49);
  int v192 = _s7Weather24LocationCompositionStateOwet_0(v190, 1, v49);
  if (v191)
  {
    if (!v192)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16))(v189, v190, v49);
      uint64_t v56 = (uint64_t)v189;
      uint64_t v57 = v49;
LABEL_38:
      _s7Weather24LocationCompositionStateOwst_0(v56, 0, 1, v57);
      goto LABEL_39;
    }
    goto LABEL_95;
  }
  uint64_t v193 = *(void *)(v49 - 8);
  if (v192)
  {
    (*(void (**)(char *, uint64_t))(v193 + 8))(v189, v49);
LABEL_95:
    size_t v45 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
    uint64_t v46 = v189;
    uint64_t v47 = (const void *)v190;
    goto LABEL_27;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v193 + 24))(v189, v190, v49);
LABEL_39:
  uint64_t v58 = a3[6];
  uint64_t v196 = a1;
  uint64_t v59 = a1 + v58;
  uint64_t v60 = a2 + v58;
  uint64_t v61 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 24))(v59, v60, v61);
  uint64_t v62 = type metadata accessor for PreprocessedWeatherData();
  *(void *)(v59 + *(int *)(v62 + 20)) = *(void *)(v60 + *(int *)(v62 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v200 = (int *)v62;
  uint64_t v201 = v60;
  uint64_t v63 = *(int *)(v62 + 24);
  uint64_t v64 = (void *)(v59 + v63);
  uint64_t v65 = (void *)(v60 + v63);
  *uint64_t v64 = *(void *)(v60 + v63);
  v64[1] = *(void *)(v60 + v63 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v64[2] = v65[2];
  v64[3] = v65[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v64[4] = v65[4];
  v64[5] = v65[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v66 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  uint64_t v67 = *(int *)(v66 + 28);
  uint64_t v68 = (void *)((char *)v64 + v67);
  uint64_t v69 = (void *)((char *)v65 + v67);
  uint64_t v70 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  int v71 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v68, 1, v70);
  int v72 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v69, 1, v70);
  uint64_t v194 = a3;
  uint64_t v195 = a2;
  if (v71)
  {
    if (!v72)
    {
      *uint64_t v68 = *v69;
      v68[1] = v69[1];
      uint64_t v73 = *(int *)(v70 + 20);
      uint64_t v74 = (char *)v68 + v73;
      uint64_t v75 = (char *)v69 + v73;
      uint64_t v76 = type metadata accessor for TemperatureScaleConfiguration();
      uint64_t v198 = *(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 16);
      swift_bridgeObjectRetain();
      v198(v74, v75, v76);
      uint64_t v77 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
      *(void *)&v74[v77[5]] = *(void *)&v75[v77[5]];
      *(void *)&v74[v77[6]] = *(void *)&v75[v77[6]];
      *(void *)&v74[v77[7]] = *(void *)&v75[v77[7]];
      uint64_t v78 = v77[8];
      uint64_t v79 = &v74[v78];
      uint64_t v80 = &v75[v78];
      *(void *)uint64_t v79 = *(void *)v80;
      *((void *)v79 + 1) = *((void *)v80 + 1);
      v74[v77[9]] = v75[v77[9]];
      swift_bridgeObjectRetain();
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v68, 0, 1, v70);
      goto LABEL_45;
    }
    goto LABEL_44;
  }
  if (v72)
  {
    sub_1001BC124((uint64_t)v68, type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference);
LABEL_44:
    uint64_t v81 = sub_10017DF08(&qword_100E63750);
    memcpy(v68, v69, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_45;
  }
  *uint64_t v68 = *v69;
  v68[1] = v69[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v178 = *(int *)(v70 + 20);
  uint64_t v179 = (char *)v68 + v178;
  uint64_t v180 = (char *)v69 + v178;
  uint64_t v181 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v181 - 8) + 24))(v179, v180, v181);
  uint64_t v182 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(void *)&v179[v182[5]] = *(void *)&v180[v182[5]];
  *(void *)&v179[v182[6]] = *(void *)&v180[v182[6]];
  *(void *)&v179[v182[7]] = *(void *)&v180[v182[7]];
  uint64_t v183 = v182[8];
  uint64_t v184 = &v179[v183];
  uint64_t v185 = &v180[v183];
  *(void *)uint64_t v184 = *(void *)v185;
  *((void *)v184 + 1) = *((void *)v185 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v179[v182[9]] = v180[v182[9]];
LABEL_45:
  uint64_t v82 = *(int *)(v66 + 32);
  uint64_t v83 = (void *)((char *)v64 + v82);
  uint64_t v84 = (void *)((char *)v65 + v82);
  void *v83 = *v84;
  v83[1] = v84[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v85 = v200[7];
  uint64_t v86 = v59 + v85;
  uint64_t v87 = v201 + v85;
  *(void *)(v59 + v85) = *(void *)(v201 + v85);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v88 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
  uint64_t v89 = (void *)(v86 + v88);
  uint64_t v90 = (const void *)(v87 + v88);
  uint64_t v91 = type metadata accessor for WeatherDescription();
  int v92 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v89, 1, v91);
  int v93 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v90, 1, v91);
  if (v92)
  {
    if (!v93)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v91 - 8) + 16))(v89, v90, v91);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v89, 0, 1, v91);
      goto LABEL_51;
    }
    goto LABEL_50;
  }
  uint64_t v94 = *(void *)(v91 - 8);
  if (v93)
  {
    (*(void (**)(void *, uint64_t))(v94 + 8))(v89, v91);
LABEL_50:
    uint64_t v95 = sub_10017DF08(&qword_100E63758);
    memcpy(v89, v90, *(void *)(*(void *)(v95 - 8) + 64));
    goto LABEL_51;
  }
  (*(void (**)(void *, const void *, uint64_t))(v94 + 24))(v89, v90, v91);
LABEL_51:
  uint64_t v96 = v200[8];
  uint64_t v97 = (void *)(v59 + v96);
  uint64_t v98 = (void *)(v201 + v96);
  void *v97 = *(void *)(v201 + v96);
  v97[1] = *(void *)(v201 + v96 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v97[2] = v98[2];
  v97[3] = v98[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v97[4] = v98[4];
  v97[5] = v98[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v97[6] = v98[6];
  v97[7] = v98[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v99 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
  uint64_t v100 = (char *)v97 + v99;
  uint64_t v101 = (char *)v98 + v99;
  uint64_t v102 = type metadata accessor for Date();
  uint64_t v197 = *(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 24);
  v197(v100, v101, v102);
  uint64_t v103 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v104 = *(int *)(v103 + 20);
  uint64_t v105 = &v100[v104];
  uint64_t v106 = &v101[v104];
  uint64_t v107 = type metadata accessor for Elevation();
  int v108 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v105, 1, v107);
  int v109 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v106, 1, v107);
  if (v108)
  {
    if (!v109)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 16))(v105, v106, v107);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v105, 0, 1, v107);
      goto LABEL_57;
    }
    goto LABEL_56;
  }
  uint64_t v110 = *(void *)(v107 - 8);
  if (v109)
  {
    (*(void (**)(char *, uint64_t))(v110 + 8))(v105, v107);
LABEL_56:
    uint64_t v111 = sub_10017DF08(&qword_100E63760);
    memcpy(v105, v106, *(void *)(*(void *)(v111 - 8) + 64));
    goto LABEL_57;
  }
  (*(void (**)(char *, char *, uint64_t))(v110 + 24))(v105, v106, v107);
LABEL_57:
  uint64_t v112 = *(int *)(v103 + 24);
  uint64_t v113 = &v100[v112];
  uint64_t v114 = &v101[v112];
  uint64_t v115 = type metadata accessor for BackgroundMoonData();
  int v116 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v113, 1, v115);
  int v117 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v114, 1, v115);
  uint64_t v199 = v103;
  if (v116)
  {
    if (!v117)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v115 - 8) + 16))(v113, v114, v115);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v113, 0, 1, v115);
      goto LABEL_63;
    }
    goto LABEL_62;
  }
  uint64_t v118 = *(void *)(v115 - 8);
  if (v117)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v113, v115);
LABEL_62:
    uint64_t v119 = sub_10017DF08(&qword_100E63768);
    memcpy(v113, v114, *(void *)(*(void *)(v119 - 8) + 64));
    goto LABEL_63;
  }
  (*(void (**)(char *, char *, uint64_t))(v118 + 24))(v113, v114, v115);
LABEL_63:
  uint64_t v120 = v200[9];
  uint64_t v121 = (void *)(v59 + v120);
  uint64_t v122 = (void *)(v201 + v120);
  *uint64_t v121 = *(void *)(v201 + v120);
  v121[1] = *(void *)(v201 + v120 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v121[2] = v122[2];
  v121[3] = v122[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v121[4] = v122[4];
  v121[5] = v122[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v121[6] = v122[6];
  v121[7] = v122[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v121[8] = v122[8];
  v121[9] = v122[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v121[10] = v122[10];
  v121[11] = v122[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v121[12] = v122[12];
  v121[13] = v122[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v123 = v200[10];
  uint64_t v124 = v59 + v123;
  uint64_t v125 = v201 + v123;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 24))(v59 + v123, v201 + v123, v91);
  uint64_t v126 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
  uint64_t v127 = (void *)(v124 + v126);
  uint64_t v128 = (void *)(v125 + v126);
  void *v127 = *v128;
  v127[1] = v128[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v129 = v200[11];
  uint64_t v130 = (void *)(v59 + v129);
  uint64_t v131 = (void *)(v201 + v129);
  *uint64_t v130 = *(void *)(v201 + v129);
  v130[1] = *(void *)(v201 + v129 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v130[2] = v131[2];
  v130[3] = v131[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v130[4] = v131[4];
  v130[5] = v131[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v132 = v200[12];
  uint64_t v133 = v59 + v132;
  uint64_t v134 = v201 + v132;
  uint64_t v135 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v135 - 8) + 24))(v133, v134, v135);
  uint64_t v136 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
  uint64_t v137 = v136[5];
  uint64_t v138 = (void *)(v133 + v137);
  uint64_t v139 = (void *)(v134 + v137);
  void *v138 = *v139;
  v138[1] = v139[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v140 = v136[6];
  uint64_t v141 = (void *)(v133 + v140);
  uint64_t v142 = (void *)(v134 + v140);
  void *v141 = *v142;
  v141[1] = v142[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v143 = v136[7];
  uint64_t v144 = (void *)(v133 + v143);
  uint64_t v145 = (void *)(v134 + v143);
  *uint64_t v144 = *v145;
  v144[1] = v145[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v133 + v136[8]) = *(void *)(v134 + v136[8]);
  uint64_t v146 = v136[9];
  uint64_t v147 = (void *)(v133 + v146);
  uint64_t v148 = (void *)(v134 + v146);
  *uint64_t v147 = *v148;
  v147[1] = v148[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v149 = v200[13];
  uint64_t v150 = (void *)(v59 + v149);
  uint64_t v151 = (void *)(v201 + v149);
  void *v150 = *(void *)(v201 + v149);
  v150[1] = *(void *)(v201 + v149 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v150[2] = v151[2];
  v150[3] = v151[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v150[4] = v151[4];
  v150[5] = v151[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v150[6] = v151[6];
  v150[7] = v151[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v150[8] = v151[8];
  v150[9] = v151[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v150[10] = v151[10];
  v150[11] = v151[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v150[12] = v151[12];
  v150[13] = v151[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v150[14] = v151[14];
  v150[15] = v151[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v150[16] = v151[16];
  v150[17] = v151[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v150[18] = v151[18];
  v150[19] = v151[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v150[20] = v151[20];
  v150[21] = v151[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v150[22] = v151[22];
  v150[23] = v151[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v150[24] = v151[24];
  v150[25] = v151[25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v150[26] = v151[26];
  v150[27] = v151[27];
  v150[28] = v151[28];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v152 = v200[14];
  uint64_t v153 = v59 + v152;
  uint64_t v154 = v201 + v152;
  v197((char *)(v59 + v152), (char *)(v201 + v152), v102);
  uint64_t v155 = *(int *)(v199 + 20);
  uint64_t v156 = (void *)(v153 + v155);
  uint64_t v157 = (const void *)(v154 + v155);
  int v158 = _s7Weather24LocationCompositionStateOwet_0(v153 + v155, 1, v107);
  int v159 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v157, 1, v107);
  if (v158)
  {
    uint64_t v160 = v59;
    if (!v159)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v107 - 8) + 16))(v156, v157, v107);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v156, 0, 1, v107);
      goto LABEL_69;
    }
    goto LABEL_68;
  }
  uint64_t v161 = *(void *)(v107 - 8);
  uint64_t v160 = v59;
  if (v159)
  {
    (*(void (**)(void *, uint64_t))(v161 + 8))(v156, v107);
LABEL_68:
    uint64_t v162 = sub_10017DF08(&qword_100E63760);
    memcpy(v156, v157, *(void *)(*(void *)(v162 - 8) + 64));
    goto LABEL_69;
  }
  (*(void (**)(void *, const void *, uint64_t))(v161 + 24))(v156, v157, v107);
LABEL_69:
  uint64_t v163 = *(int *)(v199 + 24);
  uint64_t v164 = (void *)(v153 + v163);
  uint64_t v165 = (const void *)(v154 + v163);
  int v166 = _s7Weather24LocationCompositionStateOwet_0(v153 + v163, 1, v115);
  int v167 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v165, 1, v115);
  if (v166)
  {
    if (!v167)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v115 - 8) + 16))(v164, v165, v115);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v164, 0, 1, v115);
      goto LABEL_75;
    }
    goto LABEL_74;
  }
  uint64_t v168 = *(void *)(v115 - 8);
  if (v167)
  {
    (*(void (**)(void *, uint64_t))(v168 + 8))(v164, v115);
LABEL_74:
    uint64_t v169 = sub_10017DF08(&qword_100E63768);
    memcpy(v164, v165, *(void *)(*(void *)(v169 - 8) + 64));
    goto LABEL_75;
  }
  (*(void (**)(void *, const void *, uint64_t))(v168 + 24))(v164, v165, v115);
LABEL_75:
  uint64_t v170 = v200[15];
  uint64_t v171 = (void *)(v160 + v170);
  uint64_t v172 = (void *)(v201 + v170);
  *uint64_t v171 = *(void *)(v201 + v170);
  v171[1] = *(void *)(v201 + v170 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v171[2] = v172[2];
  v171[3] = v172[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v171[4] = v172[4];
  v171[5] = v172[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v171[6] = v172[6];
  v171[7] = v172[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v171[8] = v172[8];
  v171[9] = v172[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v171[10] = v172[10];
  v171[11] = v172[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v171[12] = v172[12];
  _OWORD v171[13] = v172[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v196 != v195)
  {
    uint64_t v173 = v194[7];
    uint64_t v174 = (void *)(v196 + v173);
    uint64_t v175 = (void *)(v195 + v173);
    sub_1001BC124(v196 + v173, (uint64_t (*)(void))type metadata accessor for NewsDataModel);
    type metadata accessor for NewsDataModel();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v174 = *v175;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v176 = type metadata accessor for News();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v176 - 8) + 16))(v174, v175, v176);
    }
    swift_storeEnumTagMultiPayload();
  }
  *(unsigned char *)(v196 + v194[8]) = *(unsigned char *)(v195 + v194[8]);
  *(unsigned char *)(v196 + v194[9]) = *(unsigned char *)(v195 + v194[9]);
  *(unsigned char *)(v196 + v194[10]) = *(unsigned char *)(v195 + v194[10]);
  *(unsigned char *)(v196 + v194[11]) = *(unsigned char *)(v195 + v194[11]);
  return v196;
}

uint64_t sub_10054425C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = (void *)(v8 + v11);
  uint64_t v13 = (const void *)(v9 + v11);
  uint64_t v14 = type metadata accessor for Locale();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = sub_10017DF08(&qword_100E63730);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
  }
  uint64_t v16 = v10[6];
  uint64_t v17 = v8 + v16;
  uint64_t v18 = v9 + v16;
  uint64_t v19 = type metadata accessor for WeatherDataModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  uint64_t v20 = v10[7];
  uint64_t v21 = (void *)(v8 + v20);
  uint64_t v22 = (const void *)(v9 + v20);
  uint64_t v23 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23))
  {
    uint64_t v24 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    uint64_t v25 = type metadata accessor for Date();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v25 - 8) + 32))(v21, v22, v25);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v23);
  }
  uint64_t v26 = v10[8];
  int v27 = (void *)(v8 + v26);
  int v28 = (const void *)(v9 + v26);
  uint64_t v29 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v30 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v30 - 8) + 32))(v27, v28, v30);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  uint64_t v31 = v10[9];
  uint64_t v32 = (char *)(v8 + v31);
  uint64_t v33 = (char *)(v9 + v31);
  uint64_t v34 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34))
  {
    uint64_t v35 = sub_10017DF08(&qword_100E63740);
    memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    uint64_t v36 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v36))
    {
      uint64_t v37 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v32, v33, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v32, v33, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v36);
    }
    uint64_t v38 = *(int *)(v34 + 20);
    uint64_t v39 = &v32[v38];
    uint64_t v40 = &v33[v38];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v36))
    {
      uint64_t v41 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v39, v40, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v36);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
  }
  uint64_t v124 = a3;
  uint64_t v125 = a2;
  uint64_t v42 = a3[6];
  uint64_t v126 = a1;
  uint64_t v43 = a1 + v42;
  uint64_t v44 = a2 + v42;
  uint64_t v45 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
  uint64_t v46 = (int *)type metadata accessor for PreprocessedWeatherData();
  *(void *)(v43 + v46[5]) = *(void *)(v44 + v46[5]);
  uint64_t v47 = v46[6];
  uint64_t v48 = (_OWORD *)(v43 + v47);
  uint64_t v49 = v44 + v47;
  long long v50 = *(_OWORD *)(v44 + v47 + 16);
  _OWORD *v48 = *(_OWORD *)(v44 + v47);
  v48[1] = v50;
  v48[2] = *(_OWORD *)(v44 + v47 + 32);
  uint64_t v51 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  uint64_t v52 = *(int *)(v51 + 28);
  uint64_t v53 = (_OWORD *)((char *)v48 + v52);
  uint64_t v54 = (_OWORD *)(v49 + v52);
  uint64_t v55 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v55))
  {
    uint64_t v56 = sub_10017DF08(&qword_100E63750);
    memcpy(v53, v54, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    _OWORD *v53 = *v54;
    uint64_t v57 = *(int *)(v55 + 20);
    uint64_t v58 = (char *)v53 + v57;
    uint64_t v59 = (char *)v54 + v57;
    uint64_t v60 = type metadata accessor for TemperatureScaleConfiguration();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v58, v59, v60);
    uint64_t v61 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    *(void *)&v58[v61[5]] = *(void *)&v59[v61[5]];
    *(void *)&v58[v61[6]] = *(void *)&v59[v61[6]];
    *(void *)&v58[v61[7]] = *(void *)&v59[v61[7]];
    *(_OWORD *)&v58[v61[8]] = *(_OWORD *)&v59[v61[8]];
    v58[v61[9]] = v59[v61[9]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v55);
  }
  *(_OWORD *)((char *)v48 + *(int *)(v51 + 32)) = *(_OWORD *)(v49 + *(int *)(v51 + 32));
  uint64_t v62 = v46[7];
  uint64_t v63 = v43 + v62;
  uint64_t v64 = v44 + v62;
  *(void *)(v43 + v62) = *(void *)(v44 + v62);
  uint64_t v65 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
  uint64_t v66 = (void *)(v63 + v65);
  uint64_t v67 = (const void *)(v64 + v65);
  uint64_t v68 = type metadata accessor for WeatherDescription();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v67, 1, v68))
  {
    uint64_t v69 = sub_10017DF08(&qword_100E63758);
    memcpy(v66, v67, *(void *)(*(void *)(v69 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v68 - 8) + 32))(v66, v67, v68);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v66, 0, 1, v68);
  }
  uint64_t v70 = v46[8];
  int v71 = (_OWORD *)(v43 + v70);
  uint64_t v72 = v44 + v70;
  long long v73 = *(_OWORD *)(v44 + v70 + 16);
  *int v71 = *(_OWORD *)(v44 + v70);
  v71[1] = v73;
  long long v74 = *(_OWORD *)(v44 + v70 + 48);
  v71[2] = *(_OWORD *)(v44 + v70 + 32);
  v71[3] = v74;
  uint64_t v75 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
  uint64_t v76 = (char *)v71 + v75;
  uint64_t v77 = v72 + v75;
  uint64_t v78 = type metadata accessor for Date();
  uint64_t v122 = *(void (**)(char *, uint64_t))(*(void *)(v78 - 8) + 32);
  uint64_t v123 = v78;
  v122(v76, v77);
  uint64_t v79 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v80 = *(int *)(v79 + 20);
  uint64_t v81 = &v76[v80];
  uint64_t v82 = (const void *)(v77 + v80);
  uint64_t v83 = type metadata accessor for Elevation();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v83))
  {
    uint64_t v84 = sub_10017DF08(&qword_100E63760);
    memcpy(v81, v82, *(void *)(*(void *)(v84 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v83 - 8) + 32))(v81, v82, v83);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v81, 0, 1, v83);
  }
  uint64_t v85 = *(int *)(v79 + 24);
  uint64_t v86 = &v76[v85];
  uint64_t v87 = (const void *)(v77 + v85);
  uint64_t v88 = type metadata accessor for BackgroundMoonData();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v87, 1, v88))
  {
    uint64_t v89 = sub_10017DF08(&qword_100E63768);
    memcpy(v86, v87, *(void *)(*(void *)(v89 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v88 - 8) + 32))(v86, v87, v88);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v86, 0, 1, v88);
  }
  memcpy((void *)(v43 + v46[9]), (const void *)(v44 + v46[9]), 0x70uLL);
  uint64_t v90 = v46[10];
  uint64_t v91 = v43 + v90;
  uint64_t v92 = v44 + v90;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 32))(v43 + v90, v44 + v90, v68);
  uint64_t v93 = type metadata accessor for UVIndexComponentPreprocessedDataModel();
  *(_OWORD *)(v91 + *(int *)(v93 + 20)) = *(_OWORD *)(v92 + *(int *)(v93 + 20));
  uint64_t v94 = v46[11];
  uint64_t v95 = (_OWORD *)(v43 + v94);
  uint64_t v96 = (_OWORD *)(v44 + v94);
  long long v97 = v96[1];
  *uint64_t v95 = *v96;
  v95[1] = v97;
  v95[2] = v96[2];
  uint64_t v98 = v46[12];
  uint64_t v99 = v43 + v98;
  uint64_t v100 = v44 + v98;
  uint64_t v101 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v101 - 8) + 32))(v99, v100, v101);
  uint64_t v102 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
  *(_OWORD *)(v99 + v102[5]) = *(_OWORD *)(v100 + v102[5]);
  *(_OWORD *)(v99 + v102[6]) = *(_OWORD *)(v100 + v102[6]);
  *(_OWORD *)(v99 + v102[7]) = *(_OWORD *)(v100 + v102[7]);
  *(void *)(v99 + v102[8]) = *(void *)(v100 + v102[8]);
  *(_OWORD *)(v99 + v102[9]) = *(_OWORD *)(v100 + v102[9]);
  memcpy((void *)(v43 + v46[13]), (const void *)(v44 + v46[13]), 0xE8uLL);
  uint64_t v103 = v46[14];
  uint64_t v104 = v43 + v103;
  uint64_t v105 = v44 + v103;
  ((void (*)(uint64_t, uint64_t, uint64_t))v122)(v43 + v103, v44 + v103, v123);
  uint64_t v106 = *(int *)(v79 + 20);
  uint64_t v107 = (void *)(v104 + v106);
  int v108 = (const void *)(v105 + v106);
  if (_s7Weather24LocationCompositionStateOwet_0(v105 + v106, 1, v83))
  {
    uint64_t v109 = sub_10017DF08(&qword_100E63760);
    memcpy(v107, v108, *(void *)(*(void *)(v109 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v83 - 8) + 32))(v107, v108, v83);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v107, 0, 1, v83);
  }
  uint64_t v110 = *(int *)(v79 + 24);
  uint64_t v111 = (void *)(v104 + v110);
  uint64_t v112 = (const void *)(v105 + v110);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v112, 1, v88))
  {
    uint64_t v113 = sub_10017DF08(&qword_100E63768);
    memcpy(v111, v112, *(void *)(*(void *)(v113 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v88 - 8) + 32))(v111, v112, v88);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v111, 0, 1, v88);
  }
  memcpy((void *)(v43 + v46[15]), (const void *)(v44 + v46[15]), 0x70uLL);
  uint64_t v114 = v124[7];
  uint64_t v115 = (void *)(v126 + v114);
  int v116 = (const void *)(v125 + v114);
  uint64_t v117 = type metadata accessor for NewsDataModel();
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v115, v116, *(void *)(*(void *)(v117 - 8) + 64));
  }
  else
  {
    uint64_t v118 = type metadata accessor for News();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v118 - 8) + 32))(v115, v116, v118);
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v119 = v124[9];
  *(unsigned char *)(v126 + v124[8]) = *(unsigned char *)(v125 + v124[8]);
  *(unsigned char *)(v126 + v119) = *(unsigned char *)(v125 + v119);
  uint64_t v120 = v124[11];
  *(unsigned char *)(v126 + v124[10]) = *(unsigned char *)(v125 + v124[10]);
  *(unsigned char *)(v126 + v120) = *(unsigned char *)(v125 + v120);
  return v126;
}

uint64_t sub_100544E60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = (char *)v8 + v12;
  uint64_t v14 = (const void *)(v9 + v12);
  uint64_t v15 = type metadata accessor for Locale();
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15);
  int v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v18 = *(void *)(v15 - 8);
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v15);
LABEL_6:
    uint64_t v19 = sub_10017DF08(&qword_100E63730);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, const void *, uint64_t))(v18 + 40))(v13, v14, v15);
LABEL_7:
  uint64_t v20 = v11[6];
  uint64_t v21 = (char *)v8 + v20;
  uint64_t v22 = v9 + v20;
  uint64_t v23 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 40))(v21, v22, v23);
  uint64_t v24 = v11[7];
  uint64_t v25 = (char *)v8 + v24;
  uint64_t v26 = (const void *)(v9 + v24);
  uint64_t v27 = sub_10017DF08(&qword_100E63738);
  int v28 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v27);
  int v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27);
  if (v28)
  {
    if (!v29)
    {
      uint64_t v30 = type metadata accessor for Date();
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v30 - 8) + 32))(v25, v26, v30);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v27);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v29)
  {
    sub_10037DA34((uint64_t)v25);
LABEL_12:
    uint64_t v31 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v25, v26, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v48 = type metadata accessor for Date();
  (*(void (**)(char *, const void *, uint64_t))(*(void *)(v48 - 8) + 40))(v25, v26, v48);
LABEL_13:
  if (a1 != a2)
  {
    uint64_t v32 = v11[8];
    uint64_t v33 = (char *)v8 + v32;
    uint64_t v34 = (const void *)(v9 + v32);
    sub_1001BC124((uint64_t)v8 + v32, type metadata accessor for WeatherData.WeatherStatisticsState);
    uint64_t v35 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v36 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v36 - 8) + 32))(v33, v34, v36);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
  }
  uint64_t v37 = v11[9];
  uint64_t v38 = (char *)v8 + v37;
  uint64_t v39 = (char *)(v9 + v37);
  uint64_t v40 = type metadata accessor for WeatherDataOverrides();
  int v41 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v40);
  int v42 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40);
  if (v41)
  {
    if (!v42)
    {
      uint64_t v43 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v43))
      {
        uint64_t v44 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v38, v39, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v38, v39, v43);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v43);
      }
      uint64_t v52 = *(int *)(v40 + 20);
      uint64_t v53 = &v38[v52];
      uint64_t v54 = &v39[v52];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v43))
      {
        uint64_t v55 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v53, v54, v43);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v43);
      }
      uint64_t v56 = (uint64_t)v38;
      uint64_t v57 = v40;
      goto LABEL_35;
    }
    goto LABEL_23;
  }
  if (v42)
  {
    sub_1001BC124((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for WeatherDataOverrides);
LABEL_23:
    size_t v45 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63740) - 8) + 64);
    uint64_t v46 = v38;
    uint64_t v47 = v39;
LABEL_24:
    memcpy(v46, v47, v45);
    goto LABEL_36;
  }
  uint64_t v49 = type metadata accessor for Date();
  int v50 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v49);
  int v51 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v49);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v38, v39, v49);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v49);
      goto LABEL_86;
    }
    goto LABEL_85;
  }
  uint64_t v235 = *(void *)(v49 - 8);
  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v235 + 8))(v38, v49);
LABEL_85:
    uint64_t v236 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v38, v39, *(void *)(*(void *)(v236 - 8) + 64));
    goto LABEL_86;
  }
  (*(void (**)(char *, char *, uint64_t))(v235 + 40))(v38, v39, v49);
LABEL_86:
  uint64_t v237 = *(int *)(v40 + 20);
  uint64_t v238 = &v38[v237];
  uint64_t v239 = (uint64_t)&v39[v237];
  int v240 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&v38[v237], 1, v49);
  int v241 = _s7Weather24LocationCompositionStateOwet_0(v239, 1, v49);
  if (v240)
  {
    if (!v241)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v49 - 8) + 32))(v238, v239, v49);
      uint64_t v56 = (uint64_t)v238;
      uint64_t v57 = v49;
LABEL_35:
      _s7Weather24LocationCompositionStateOwst_0(v56, 0, 1, v57);
      goto LABEL_36;
    }
    goto LABEL_91;
  }
  uint64_t v242 = *(void *)(v49 - 8);
  if (v241)
  {
    (*(void (**)(char *, uint64_t))(v242 + 8))(v238, v49);
LABEL_91:
    size_t v45 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
    uint64_t v46 = v238;
    uint64_t v47 = (const void *)v239;
    goto LABEL_24;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v242 + 40))(v238, v239, v49);
LABEL_36:
  v244 = a3;
  uint64_t v245 = a2;
  uint64_t v58 = a3[6];
  uint64_t v246 = a1;
  uint64_t v59 = a1 + v58;
  uint64_t v60 = a2 + v58;
  uint64_t v61 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 40))(v59, v60, v61);
  uint64_t v62 = (int *)type metadata accessor for PreprocessedWeatherData();
  *(void *)(v59 + v62[5]) = *(void *)(v60 + v62[5]);
  swift_bridgeObjectRelease();
  uint64_t v63 = v62[6];
  uint64_t v64 = (void *)(v59 + v63);
  uint64_t v65 = (void *)(v60 + v63);
  uint64_t v66 = *(void *)(v60 + v63 + 8);
  *uint64_t v64 = *(void *)(v60 + v63);
  v64[1] = v66;
  swift_bridgeObjectRelease();
  uint64_t v67 = v65[3];
  v64[2] = v65[2];
  v64[3] = v67;
  swift_bridgeObjectRelease();
  uint64_t v68 = v65[5];
  v64[4] = v65[4];
  v64[5] = v68;
  swift_bridgeObjectRelease();
  uint64_t v69 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
  uint64_t v70 = *(int *)(v69 + 28);
  int v71 = (void *)((char *)v64 + v70);
  uint64_t v72 = (void *)((char *)v65 + v70);
  uint64_t v73 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
  int v74 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v73);
  int v75 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v72, 1, v73);
  if (v74)
  {
    if (!v75)
    {
      *(_OWORD *)int v71 = *(_OWORD *)v72;
      uint64_t v76 = *(int *)(v73 + 20);
      uint64_t v77 = (char *)v71 + v76;
      uint64_t v78 = (char *)v72 + v76;
      uint64_t v79 = type metadata accessor for TemperatureScaleConfiguration();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v77, v78, v79);
      uint64_t v80 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
      *(void *)&v77[v80[5]] = *(void *)&v78[v80[5]];
      *(void *)&v77[v80[6]] = *(void *)&v78[v80[6]];
      *(void *)&v77[v80[7]] = *(void *)&v78[v80[7]];
      *(_OWORD *)&v77[v80[8]] = *(_OWORD *)&v78[v80[8]];
      v77[v80[9]] = v78[v80[9]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v71, 0, 1, v73);
      goto LABEL_42;
    }
    goto LABEL_41;
  }
  if (v75)
  {
    sub_1001BC124((uint64_t)v71, type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference);
LABEL_41:
    uint64_t v81 = sub_10017DF08(&qword_100E63750);
    memcpy(v71, v72, *(void *)(*(void *)(v81 - 8) + 64));
    goto LABEL_42;
  }
  uint64_t v224 = v72[1];
  *int v71 = *v72;
  v71[1] = v224;
  swift_bridgeObjectRelease();
  uint64_t v225 = *(int *)(v73 + 20);
  uint64_t v226 = (char *)v71 + v225;
  uint64_t v227 = (char *)v72 + v225;
  uint64_t v228 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v228 - 8) + 40))(v226, v227, v228);
  uint64_t v229 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(void *)&v226[v229[5]] = *(void *)&v227[v229[5]];
  *(void *)&v226[v229[6]] = *(void *)&v227[v229[6]];
  *(void *)&v226[v229[7]] = *(void *)&v227[v229[7]];
  uint64_t v230 = v229[8];
  uint64_t v231 = &v226[v230];
  uint64_t v232 = &v227[v230];
  uint64_t v234 = *(void *)v232;
  uint64_t v233 = *((void *)v232 + 1);
  *(void *)uint64_t v231 = v234;
  *((void *)v231 + 1) = v233;
  swift_bridgeObjectRelease();
  v226[v229[9]] = v227[v229[9]];
LABEL_42:
  uint64_t v82 = *(int *)(v69 + 32);
  uint64_t v83 = (void *)((char *)v64 + v82);
  uint64_t v84 = (void *)((char *)v65 + v82);
  uint64_t v86 = *v84;
  uint64_t v85 = v84[1];
  void *v83 = v86;
  v83[1] = v85;
  swift_bridgeObjectRelease();
  uint64_t v87 = v62[7];
  uint64_t v88 = v59 + v87;
  uint64_t v89 = v60 + v87;
  *(void *)(v59 + v87) = *(void *)(v60 + v87);
  swift_bridgeObjectRelease();
  uint64_t v90 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
  uint64_t v91 = (void *)(v88 + v90);
  uint64_t v92 = (const void *)(v89 + v90);
  uint64_t v93 = type metadata accessor for WeatherDescription();
  int v94 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v91, 1, v93);
  int v95 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v92, 1, v93);
  if (v94)
  {
    if (!v95)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v93 - 8) + 32))(v91, v92, v93);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v91, 0, 1, v93);
      goto LABEL_48;
    }
    goto LABEL_47;
  }
  uint64_t v96 = *(void *)(v93 - 8);
  if (v95)
  {
    (*(void (**)(void *, uint64_t))(v96 + 8))(v91, v93);
LABEL_47:
    uint64_t v97 = sub_10017DF08(&qword_100E63758);
    memcpy(v91, v92, *(void *)(*(void *)(v97 - 8) + 64));
    goto LABEL_48;
  }
  (*(void (**)(void *, const void *, uint64_t))(v96 + 40))(v91, v92, v93);
LABEL_48:
  uint64_t v98 = v62[8];
  uint64_t v99 = (void *)(v59 + v98);
  uint64_t v100 = (void *)(v60 + v98);
  uint64_t v101 = *(void *)(v60 + v98 + 8);
  void *v99 = *(void *)(v60 + v98);
  v99[1] = v101;
  swift_bridgeObjectRelease();
  uint64_t v102 = v100[3];
  v99[2] = v100[2];
  v99[3] = v102;
  swift_bridgeObjectRelease();
  uint64_t v103 = v100[5];
  v99[4] = v100[4];
  v99[5] = v103;
  swift_bridgeObjectRelease();
  uint64_t v104 = v100[7];
  v99[6] = v100[6];
  v99[7] = v104;
  swift_bridgeObjectRelease();
  uint64_t v105 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
  uint64_t v106 = (char *)v99 + v105;
  uint64_t v107 = (char *)v100 + v105;
  uint64_t v243 = type metadata accessor for Date();
  v247 = *(void (**)(char *, char *))(*(void *)(v243 - 8) + 40);
  v247(v106, v107);
  uint64_t v248 = type metadata accessor for WeatherConditionBackgroundTimeData();
  uint64_t v108 = *(int *)(v248 + 20);
  uint64_t v109 = &v106[v108];
  uint64_t v110 = &v107[v108];
  uint64_t v111 = type metadata accessor for Elevation();
  LODWORD(v100) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v109, 1, v111);
  int v112 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v110, 1, v111);
  if (v100)
  {
    if (!v112)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v111 - 8) + 32))(v109, v110, v111);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v109, 0, 1, v111);
      goto LABEL_54;
    }
    goto LABEL_53;
  }
  uint64_t v113 = *(void *)(v111 - 8);
  if (v112)
  {
    (*(void (**)(char *, uint64_t))(v113 + 8))(v109, v111);
LABEL_53:
    uint64_t v114 = sub_10017DF08(&qword_100E63760);
    memcpy(v109, v110, *(void *)(*(void *)(v114 - 8) + 64));
    goto LABEL_54;
  }
  (*(void (**)(char *, char *, uint64_t))(v113 + 40))(v109, v110, v111);
LABEL_54:
  uint64_t v115 = *(int *)(v248 + 24);
  int v116 = &v106[v115];
  uint64_t v117 = &v107[v115];
  uint64_t v118 = type metadata accessor for BackgroundMoonData();
  int v119 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v116, 1, v118);
  int v120 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v117, 1, v118);
  if (v119)
  {
    if (!v120)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 32))(v116, v117, v118);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v116, 0, 1, v118);
      goto LABEL_60;
    }
    goto LABEL_59;
  }
  uint64_t v121 = *(void *)(v118 - 8);
  if (v120)
  {
    (*(void (**)(char *, uint64_t))(v121 + 8))(v116, v118);
LABEL_59:
    uint64_t v122 = sub_10017DF08(&qword_100E63768);
    memcpy(v116, v117, *(void *)(*(void *)(v122 - 8) + 64));
    goto LABEL_60;
  }
  (*(void (**)(char *, char *, uint64_t))(v121 + 40))(v116, v117, v118);
LABEL_60:
  uint64_t v123 = v62[9];
  uint64_t v124 = (void *)(v59 + v123);
  uint64_t v125 = (void *)(v60 + v123);
  uint64_t v126 = *(void *)(v60 + v123 + 8);
  void *v124 = *(void *)(v60 + v123);
  v124[1] = v126;
  swift_bridgeObjectRelease();
  uint64_t v127 = v125[3];
  v124[2] = v125[2];
  v124[3] = v127;
  swift_bridgeObjectRelease();
  uint64_t v128 = v125[5];
  v124[4] = v125[4];
  v124[5] = v128;
  swift_bridgeObjectRelease();
  uint64_t v129 = v125[7];
  v124[6] = v125[6];
  v124[7] = v129;
  swift_bridgeObjectRelease();
  uint64_t v130 = v125[9];
  v124[8] = v125[8];
  v124[9] = v130;
  swift_bridgeObjectRelease();
  uint64_t v131 = v125[11];
  v124[10] = v125[10];
  v124[11] = v131;
  swift_bridgeObjectRelease();
  uint64_t v132 = v125[13];
  v124[12] = v125[12];
  v124[13] = v132;
  swift_bridgeObjectRelease();
  uint64_t v133 = v62[10];
  uint64_t v134 = v59 + v133;
  uint64_t v135 = v60 + v133;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 40))(v59 + v133, v60 + v133, v93);
  uint64_t v136 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
  uint64_t v137 = (void *)(v134 + v136);
  uint64_t v138 = (uint64_t *)(v135 + v136);
  uint64_t v140 = *v138;
  uint64_t v139 = v138[1];
  void *v137 = v140;
  v137[1] = v139;
  swift_bridgeObjectRelease();
  uint64_t v141 = v62[11];
  uint64_t v142 = (void *)(v59 + v141);
  uint64_t v143 = (void *)(v60 + v141);
  uint64_t v144 = *(void *)(v60 + v141 + 8);
  *uint64_t v142 = *(void *)(v60 + v141);
  v142[1] = v144;
  swift_bridgeObjectRelease();
  uint64_t v145 = v143[3];
  v142[2] = v143[2];
  v142[3] = v145;
  swift_bridgeObjectRelease();
  uint64_t v146 = v143[5];
  v142[4] = v143[4];
  v142[5] = v146;
  swift_bridgeObjectRelease();
  uint64_t v147 = v62[12];
  uint64_t v148 = v59 + v147;
  uint64_t v149 = v60 + v147;
  uint64_t v150 = type metadata accessor for PressureTrend();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v150 - 8) + 40))(v148, v149, v150);
  uint64_t v151 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
  uint64_t v152 = v151[5];
  uint64_t v153 = (void *)(v148 + v152);
  uint64_t v154 = (uint64_t *)(v149 + v152);
  uint64_t v156 = *v154;
  uint64_t v155 = v154[1];
  *uint64_t v153 = v156;
  v153[1] = v155;
  swift_bridgeObjectRelease();
  uint64_t v157 = v151[6];
  int v158 = (void *)(v148 + v157);
  int v159 = (uint64_t *)(v149 + v157);
  uint64_t v161 = *v159;
  uint64_t v160 = v159[1];
  *int v158 = v161;
  v158[1] = v160;
  swift_bridgeObjectRelease();
  uint64_t v162 = v151[7];
  uint64_t v163 = (void *)(v148 + v162);
  uint64_t v164 = (uint64_t *)(v149 + v162);
  uint64_t v166 = *v164;
  uint64_t v165 = v164[1];
  *uint64_t v163 = v166;
  v163[1] = v165;
  swift_bridgeObjectRelease();
  *(void *)(v148 + v151[8]) = *(void *)(v149 + v151[8]);
  uint64_t v167 = v151[9];
  uint64_t v168 = (void *)(v148 + v167);
  uint64_t v169 = (uint64_t *)(v149 + v167);
  uint64_t v171 = *v169;
  uint64_t v170 = v169[1];
  void *v168 = v171;
  v168[1] = v170;
  swift_bridgeObjectRelease();
  uint64_t v172 = v62[13];
  uint64_t v173 = (void *)(v59 + v172);
  uint64_t v174 = (void *)(v60 + v172);
  uint64_t v175 = *(void *)(v60 + v172 + 8);
  *uint64_t v173 = *(void *)(v60 + v172);
  v173[1] = v175;
  swift_bridgeObjectRelease();
  uint64_t v176 = v174[3];
  v173[2] = v174[2];
  v173[3] = v176;
  swift_bridgeObjectRelease();
  uint64_t v177 = v174[5];
  v173[4] = v174[4];
  v173[5] = v177;
  swift_bridgeObjectRelease();
  uint64_t v178 = v174[7];
  v173[6] = v174[6];
  v173[7] = v178;
  swift_bridgeObjectRelease();
  uint64_t v179 = v174[9];
  v173[8] = v174[8];
  v173[9] = v179;
  swift_bridgeObjectRelease();
  uint64_t v180 = v174[11];
  v173[10] = v174[10];
  v173[11] = v180;
  swift_bridgeObjectRelease();
  uint64_t v181 = v174[13];
  v173[12] = v174[12];
  v173[13] = v181;
  swift_bridgeObjectRelease();
  uint64_t v182 = v174[15];
  v173[14] = v174[14];
  v173[15] = v182;
  swift_bridgeObjectRelease();
  uint64_t v183 = v174[17];
  v173[16] = v174[16];
  v173[17] = v183;
  swift_bridgeObjectRelease();
  uint64_t v184 = v174[19];
  v173[18] = v174[18];
  v173[19] = v184;
  swift_bridgeObjectRelease();
  uint64_t v185 = v174[21];
  v173[20] = v174[20];
  v173[21] = v185;
  swift_bridgeObjectRelease();
  uint64_t v186 = v174[23];
  v173[22] = v174[22];
  v173[23] = v186;
  swift_bridgeObjectRelease();
  uint64_t v187 = v174[25];
  v173[24] = v174[24];
  v173[25] = v187;
  swift_bridgeObjectRelease();
  v173[26] = v174[26];
  uint64_t v188 = v174[28];
  v173[27] = v174[27];
  v173[28] = v188;
  swift_bridgeObjectRelease();
  uint64_t v189 = v62[14];
  uint64_t v190 = v59 + v189;
  uint64_t v191 = v60 + v189;
  ((void (*)(uint64_t, uint64_t, uint64_t))v247)(v59 + v189, v60 + v189, v243);
  uint64_t v192 = *(int *)(v248 + 20);
  uint64_t v193 = (void *)(v190 + v192);
  uint64_t v194 = (const void *)(v191 + v192);
  int v195 = _s7Weather24LocationCompositionStateOwet_0(v190 + v192, 1, v111);
  int v196 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v194, 1, v111);
  if (v195)
  {
    if (!v196)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v111 - 8) + 32))(v193, v194, v111);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v193, 0, 1, v111);
      goto LABEL_66;
    }
    goto LABEL_65;
  }
  uint64_t v197 = *(void *)(v111 - 8);
  if (v196)
  {
    (*(void (**)(void *, uint64_t))(v197 + 8))(v193, v111);
LABEL_65:
    uint64_t v198 = sub_10017DF08(&qword_100E63760);
    memcpy(v193, v194, *(void *)(*(void *)(v198 - 8) + 64));
    goto LABEL_66;
  }
  (*(void (**)(void *, const void *, uint64_t))(v197 + 40))(v193, v194, v111);
LABEL_66:
  uint64_t v199 = *(int *)(v248 + 24);
  uint64_t v200 = (void *)(v190 + v199);
  uint64_t v201 = (const void *)(v191 + v199);
  int v202 = _s7Weather24LocationCompositionStateOwet_0(v190 + v199, 1, v118);
  int v203 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v201, 1, v118);
  if (v202)
  {
    if (!v203)
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v118 - 8) + 32))(v200, v201, v118);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v200, 0, 1, v118);
      goto LABEL_72;
    }
    goto LABEL_71;
  }
  uint64_t v204 = *(void *)(v118 - 8);
  if (v203)
  {
    (*(void (**)(void *, uint64_t))(v204 + 8))(v200, v118);
LABEL_71:
    uint64_t v205 = sub_10017DF08(&qword_100E63768);
    memcpy(v200, v201, *(void *)(*(void *)(v205 - 8) + 64));
    goto LABEL_72;
  }
  (*(void (**)(void *, const void *, uint64_t))(v204 + 40))(v200, v201, v118);
LABEL_72:
  uint64_t v206 = v62[15];
  uint64_t v207 = (void *)(v59 + v206);
  uint64_t v208 = (void *)(v60 + v206);
  uint64_t v209 = *(void *)(v60 + v206 + 8);
  *uint64_t v207 = *(void *)(v60 + v206);
  v207[1] = v209;
  swift_bridgeObjectRelease();
  uint64_t v210 = v208[3];
  v207[2] = v208[2];
  v207[3] = v210;
  swift_bridgeObjectRelease();
  uint64_t v211 = v208[5];
  v207[4] = v208[4];
  v207[5] = v211;
  swift_bridgeObjectRelease();
  uint64_t v212 = v208[7];
  v207[6] = v208[6];
  v207[7] = v212;
  swift_bridgeObjectRelease();
  uint64_t v213 = v208[9];
  v207[8] = v208[8];
  v207[9] = v213;
  swift_bridgeObjectRelease();
  uint64_t v214 = v208[11];
  v207[10] = v208[10];
  v207[11] = v214;
  swift_bridgeObjectRelease();
  uint64_t v215 = v208[13];
  v207[12] = v208[12];
  v207[13] = v215;
  swift_bridgeObjectRelease();
  if (v246 != v245)
  {
    uint64_t v216 = v244[7];
    uint64_t v217 = (void *)(v246 + v216);
    uint64_t v218 = (const void *)(v245 + v216);
    sub_1001BC124(v246 + v216, (uint64_t (*)(void))type metadata accessor for NewsDataModel);
    uint64_t v219 = type metadata accessor for NewsDataModel();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v217, v218, *(void *)(*(void *)(v219 - 8) + 64));
    }
    else
    {
      uint64_t v220 = type metadata accessor for News();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v220 - 8) + 32))(v217, v218, v220);
      swift_storeEnumTagMultiPayload();
    }
  }
  uint64_t v221 = v244[9];
  *(unsigned char *)(v246 + v244[8]) = *(unsigned char *)(v245 + v244[8]);
  *(unsigned char *)(v246 + v221) = *(unsigned char *)(v245 + v221);
  uint64_t v222 = v244[11];
  *(unsigned char *)(v246 + v244[10]) = *(unsigned char *)(v245 + v244[10]);
  *(unsigned char *)(v246 + v222) = *(unsigned char *)(v245 + v222);
  return v246;
}

uint64_t sub_10054640C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100546420);
}

uint64_t sub_100546420(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for Location();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    type metadata accessor for WeatherData(0);
    sub_100162F30();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v12 = a3[5];
    }
    else
    {
      type metadata accessor for PreprocessedWeatherData();
      sub_100162F30();
      if (*(_DWORD *)(v14 + 84) == a2)
      {
        uint64_t v8 = v13;
        uint64_t v12 = a3[6];
      }
      else
      {
        type metadata accessor for NewsDataModel();
        sub_100162F30();
        if (*(_DWORD *)(v16 + 84) != a2)
        {
          unsigned int v18 = *(unsigned __int8 *)(a1 + a3[8]);
          if (v18 >= 2) {
            return v18 - 1;
          }
          else {
            return 0;
          }
        }
        uint64_t v8 = v15;
        uint64_t v12 = a3[7];
      }
    }
    uint64_t v9 = a1 + v12;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_100546518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10054652C);
}

void sub_10054652C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  type metadata accessor for Location();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    type metadata accessor for WeatherData(0);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      type metadata accessor for PreprocessedWeatherData();
      sub_100162F30();
      if (*(_DWORD *)(v16 + 84) == a3)
      {
        uint64_t v10 = v15;
        uint64_t v14 = a4[6];
      }
      else
      {
        type metadata accessor for NewsDataModel();
        sub_100162F30();
        if (*(_DWORD *)(v18 + 84) != a3)
        {
          *(unsigned char *)(a1 + a4[8]) = a2 + 1;
          return;
        }
        uint64_t v10 = v17;
        uint64_t v14 = a4[7];
      }
    }
    uint64_t v11 = a1 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for LocationViewConfigurationInputs()
{
  uint64_t result = qword_100E7F128;
  if (!qword_100E7F128) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10054666C()
{
  uint64_t result = type metadata accessor for Location();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for WeatherData(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for PreprocessedWeatherData();
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for NewsDataModel();
        if (v4 <= 0x3F)
        {
          swift_initStructMetadata();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1005467C4()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100097814(v6, static OpenWeatherAirQualityIntent.title);
  sub_1002102B0(v6, (uint64_t)static OpenWeatherAirQualityIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t OpenWeatherAirQualityIntent.title.unsafeMutableAddressor()
{
  return sub_1005480DC(&qword_100E623F0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)static OpenWeatherAirQualityIntent.title);
}

uint64_t static OpenWeatherAirQualityIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100548170(&qword_100E623F0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)static OpenWeatherAirQualityIntent.title, a1);
}

uint64_t static OpenWeatherAirQualityIntent.title.setter(uint64_t a1)
{
  return sub_100548248(a1, &qword_100E623F0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)static OpenWeatherAirQualityIntent.title);
}

uint64_t (*static OpenWeatherAirQualityIntent.title.modify())()
{
  if (qword_100E623F0 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_10017CF90(v0, (uint64_t)static OpenWeatherAirQualityIntent.title);
  return j_j__swift_endAccess_0;
}

uint64_t sub_100546ACC()
{
  uint64_t v0 = sub_10017DF08(&qword_100E62CC8);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = &v12[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for Locale();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v9);
  uint64_t v10 = type metadata accessor for IntentDescription();
  sub_100097814(v10, static OpenWeatherAirQualityIntent.description);
  sub_1002102B0(v10, (uint64_t)static OpenWeatherAirQualityIntent.description);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v4 + 104))(v6, enum case for LocalizedStringResource.BundleDescription.main(_:), v3);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v2, 1, 1, v9);
  return IntentDescription.init(_:categoryName:searchKeywords:)();
}

uint64_t OpenWeatherAirQualityIntent.description.unsafeMutableAddressor()
{
  return sub_1005480DC(&qword_100E623F8, (uint64_t (*)(void))&type metadata accessor for IntentDescription, (uint64_t)static OpenWeatherAirQualityIntent.description);
}

uint64_t static OpenWeatherAirQualityIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100548170(&qword_100E623F8, (uint64_t (*)(void))&type metadata accessor for IntentDescription, (uint64_t)static OpenWeatherAirQualityIntent.description, a1);
}

uint64_t static OpenWeatherAirQualityIntent.description.setter(uint64_t a1)
{
  return sub_100548248(a1, &qword_100E623F8, (uint64_t (*)(void))&type metadata accessor for IntentDescription, (uint64_t)static OpenWeatherAirQualityIntent.description);
}

uint64_t (*static OpenWeatherAirQualityIntent.description.modify())()
{
  if (qword_100E623F8 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for IntentDescription();
  sub_10017CF90(v0, (uint64_t)static OpenWeatherAirQualityIntent.description);
  return j__swift_endAccess_0;
}

void *OpenWeatherAirQualityIntent.isDiscoverable.unsafeMutableAddressor()
{
  return &static OpenWeatherAirQualityIntent.isDiscoverable;
}

uint64_t static OpenWeatherAirQualityIntent.parameterSummary.getter()
{
  uint64_t v0 = sub_10017DF08(&qword_100E7F178);
  uint64_t v1 = sub_100109308(v0);
  __chkstk_darwin(v1);
  sub_10011BFD8();
  sub_10017DF08(&qword_100E7F180);
  sub_100162880();
  __chkstk_darwin(v2);
  sub_100162EB8();
  sub_10054702C();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v3._object = (void *)0x8000000100CA4470;
  v3._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  swift_getKeyPath();
  sub_10017DF08(&qword_100E7F190);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:_:)();
}

unint64_t sub_10054702C()
{
  unint64_t result = qword_100E7F188;
  if (!qword_100E7F188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7F188);
  }
  return result;
}

uint64_t sub_100547078()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_10054709C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100547078();
  *a1 = result;
  return result;
}

uint64_t sub_1005470CC()
{
  swift_getKeyPath();
  sub_10054702C();
  uint64_t v0 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildExpression<A>(_:)();
  swift_release();
  sub_10017DF08(&qword_100E6BBD0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_100C31F30;
  *(void *)(v1 + 32) = v0;
  specialized Array._endMutation()();
  swift_retain();
  uint64_t v2 = static IntentParameterSummary.ParameterKeyPathsBuilder.buildBlock(_:)();
  swift_release();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_100547194()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t sub_1005471B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100547194();
  *a1 = result;
  return result;
}

uint64_t sub_1005471E4()
{
  uint64_t v1 = sub_10017DF08(&qword_100E7F270);
  sub_100179C0C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_10011BFD8();
  sub_10054963C();
  static ResolverSpecificationBuilder.buildExpression<A>(_:)();
  sub_100549688();
  static ResolverSpecificationBuilder.buildExpression<A>(_:)();
  sub_1002F0EBC();
  static ResolverSpecificationBuilder.buildPartialBlock<A>(first:)();
  static ResolverSpecificationBuilder.buildPartialBlock<A, each B>(accumulated:next:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
}

uint64_t sub_100547320()
{
  uint64_t v0 = sub_10017DF08(&qword_100E7F260);
  __chkstk_darwin(v0);
  uint64_t v1 = sub_10017DF08(&qword_100E7F198);
  sub_100097814(v1, static OpenWeatherAirQualityIntent.urlRepresentation);
  sub_1002102B0(v1, (uint64_t)static OpenWeatherAirQualityIntent.urlRepresentation);
  sub_10054702C();
  IntentURLRepresentation.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._object = (void *)0x8000000100CA4570;
  v2._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  IntentURLRepresentation.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10017DF08(&qword_100E7F190);
  IntentURLRepresentation.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._uint64_t countAndFlagsBits = 38;
  v3._object = (void *)0xE100000000000000;
  IntentURLRepresentation.StringInterpolation.appendLiteral(_:)(v3);
  swift_getKeyPath();
  sub_10017DF08(&qword_100E7F268);
  IntentURLRepresentation.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  IntentURLRepresentation.StringInterpolation.appendLiteral(_:)(v4);
  return IntentURLRepresentation.init(stringInterpolation:)();
}

uint64_t OpenWeatherAirQualityIntent.urlRepresentation.unsafeMutableAddressor()
{
  if (qword_100E62400 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_10017DF08(&qword_100E7F198);

  return sub_1002102B0(v0, (uint64_t)static OpenWeatherAirQualityIntent.urlRepresentation);
}

uint64_t static OpenWeatherAirQualityIntent.urlRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_100E62400 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10017DF08(&qword_100E7F198);
  uint64_t v3 = sub_1002102B0(v2, (uint64_t)static OpenWeatherAirQualityIntent.urlRepresentation);
  sub_100163610();
  sub_100162880();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(a1, v3, v2);
}

uint64_t static OpenWeatherAirQualityIntent.urlRepresentation.setter(uint64_t a1)
{
  if (qword_100E62400 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10017DF08(&qword_100E7F198);
  uint64_t v3 = sub_1002102B0(v2, (uint64_t)static OpenWeatherAirQualityIntent.urlRepresentation);
  swift_beginAccess();
  sub_10017C808();
  uint64_t v5 = v4;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v2);
}

uint64_t (*static OpenWeatherAirQualityIntent.urlRepresentation.modify())()
{
  if (qword_100E62400 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_10017DF08(&qword_100E7F198);
  sub_10017CF90(v0, (uint64_t)static OpenWeatherAirQualityIntent.urlRepresentation);
  return j_j__swift_endAccess_0;
}

uint64_t OpenWeatherAirQualityIntent.init()()
{
  uint64_t v46 = type metadata accessor for InputConnectionBehavior();
  sub_100179C0C();
  uint64_t v50 = v1;
  __chkstk_darwin(v2);
  sub_1001626E0();
  uint64_t v49 = v4 - v3;
  uint64_t v5 = sub_10017DF08(&qword_100E62CC0);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  uint64_t v48 = (uint64_t)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v47 = (uint64_t)&v36 - v9;
  uint64_t v10 = sub_10017DF08(&qword_100E62CC8);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  uint64_t v15 = type metadata accessor for LocalizedStringResource.BundleDescription();
  sub_100179C0C();
  uint64_t v17 = v16;
  __chkstk_darwin(v18);
  sub_1001626E0();
  uint64_t v21 = v20 - v19;
  uint64_t v22 = type metadata accessor for Locale();
  uint64_t v23 = sub_100109308(v22);
  __chkstk_darwin(v23);
  sub_1001626E0();
  uint64_t v24 = type metadata accessor for String.LocalizationValue();
  uint64_t v25 = sub_100109308(v24);
  __chkstk_darwin(v25);
  sub_1001626E0();
  uint64_t v26 = type metadata accessor for LocalizedStringResource();
  uint64_t v44 = v26;
  sub_100162880();
  __chkstk_darwin(v27);
  sub_100162EB8();
  uint64_t v39 = v0;
  uint64_t v45 = sub_10017DF08(&qword_100E62CD0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v28 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  int v29 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 104);
  uint64_t v37 = v15;
  v29(v21, enum case for LocalizedStringResource.BundleDescription.main(_:), v15);
  uint64_t v40 = v29;
  uint64_t v38 = v17 + 104;
  sub_1001A09E4();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v29(v21, v28, v15);
  sub_10017A4A4();
  _s7Weather24LocationCompositionStateOwst_0(v14, 0, 1, v26);
  uint64_t v30 = type metadata accessor for IntentDialog();
  uint64_t v41 = v30;
  long long v52 = 0u;
  long long v53 = 0u;
  char v54 = 0;
  _s7Weather24LocationCompositionStateOwst_0(v47, 1, 1, v30);
  _s7Weather24LocationCompositionStateOwst_0(v48, 1, 1, v30);
  unsigned int v42 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v31 = *(void (**)(void))(v50 + 104);
  v50 += 104;
  uint64_t v43 = (void (*)(uint64_t, void, uint64_t))v31;
  v31(v49);
  sub_10017DF08(&qword_100E62CD8);
  sub_1001246C8(&qword_100E62CE0, &qword_100E62CD8);
  sub_100232310();
  uint64_t v45 = IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:resolvers:)();
  uint64_t v36 = sub_10017DF08(&qword_100E62CF0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v32 = v37;
  uint64_t v33 = v40;
  v40(v21, v28, v37);
  sub_1001A09E4();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v33(v21, v28, v32);
  sub_10017A4A4();
  _s7Weather24LocationCompositionStateOwst_0(v14, 0, 1, v44);
  char v51 = 0;
  uint64_t v34 = v41;
  _s7Weather24LocationCompositionStateOwst_0(v47, 1, 1, v41);
  _s7Weather24LocationCompositionStateOwst_0(v48, 1, 1, v34);
  v43(v49, v42, v46);
  sub_1002326AC();
  IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:supportedValues:)();
  return v45;
}

uint64_t sub_100547CA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = OpenWeatherAirQualityIntent.urlRepresentation.unsafeMutableAddressor();
  swift_beginAccess();
  uint64_t v3 = sub_10017DF08(&qword_100E7F198);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(a1, v2, v3);
}

uint64_t sub_100547D20@<X0>(uint64_t a1@<X8>)
{
  return sub_100548DB0(OpenWeatherAirQualityIntent.title.unsafeMutableAddressor, (void (*)(void))&type metadata accessor for LocalizedStringResource, a1);
}

uint64_t sub_100547D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  unint64_t v5 = sub_1005495EC();
  *uint64_t v4 = v2;
  v4[1] = sub_100547E08;
  return URLRepresentableIntent.perform()(a2, v5);
}

uint64_t sub_100547E08()
{
  uint64_t v2 = *v1;
  uint64_t result = swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = *(uint64_t (**)(void))(v2 + 8);
    return v4();
  }
  return result;
}

uint64_t sub_100547F10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = OpenWeatherAirQualityIntent.init()();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100547F38(uint64_t a1)
{
  unint64_t v2 = sub_10054702C();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t sub_100547F74()
{
  uint64_t v0 = sub_10017DF08(&qword_100E62CC8);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v3);
  uint64_t v4 = type metadata accessor for TypeDisplayRepresentation();
  sub_100097814(v4, static AirQualityPosition.typeDisplayRepresentation);
  sub_1002102B0(v4, (uint64_t)static AirQualityPosition.typeDisplayRepresentation);
  LocalizedStringResource.init(stringLiteral:)();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v2, 1, 1, v3);
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t AirQualityPosition.typeDisplayRepresentation.unsafeMutableAddressor()
{
  return sub_1005480DC(&qword_100E62408, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static AirQualityPosition.typeDisplayRepresentation);
}

uint64_t sub_1005480DC(void *a1, uint64_t (*a2)(void), uint64_t a3)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = a2(0);

  return sub_1002102B0(v5, a3);
}

uint64_t static AirQualityPosition.typeDisplayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_100548170(&qword_100E62408, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static AirQualityPosition.typeDisplayRepresentation, a1);
}

uint64_t sub_100548170@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_1002102B0(v7, a3);
  sub_100163610();
  sub_100162880();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a4, v8, v7);
}

uint64_t static AirQualityPosition.typeDisplayRepresentation.setter(uint64_t a1)
{
  return sub_100548248(a1, &qword_100E62408, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)static AirQualityPosition.typeDisplayRepresentation);
}

uint64_t sub_100548248(uint64_t a1, void *a2, uint64_t (*a3)(void), uint64_t a4)
{
  if (*a2 != -1) {
    swift_once();
  }
  uint64_t v7 = a3(0);
  uint64_t v8 = sub_1002102B0(v7, a4);
  swift_beginAccess();
  sub_10017C808();
  uint64_t v10 = v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 24))(v8, a1, v7);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(a1, v7);
}

uint64_t (*static AirQualityPosition.typeDisplayRepresentation.modify())()
{
  if (qword_100E62408 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for TypeDisplayRepresentation();
  sub_10017CF90(v0, (uint64_t)static AirQualityPosition.typeDisplayRepresentation);
  return j_j__swift_endAccess_0;
}

uint64_t sub_100548394()
{
  uint64_t v0 = sub_10017DF08(&qword_100E6B3E0);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10017DF08(&qword_100E62CC8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  uint64_t v15 = *(void *)(v6 - 8);
  uint64_t v16 = v15;
  __chkstk_darwin(v6);
  sub_10017DF08(&qword_100E7F248);
  uint64_t v7 = *(void *)(sub_10017DF08(&qword_100E7F250) - 8);
  uint64_t v8 = *(void *)(v7 + 72);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  uint64_t v17 = v10;
  *(_OWORD *)(v10 + 16) = xmmword_100C25ED0;
  unint64_t v11 = v10 + v9;
  *(unsigned char *)(v10 + v9) = 0;
  LocalizedStringResource.init(stringLiteral:)();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 1, 1, v6);
  uint64_t v12 = type metadata accessor for DisplayRepresentation.Image();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v2, 1, 1, v12);
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  *(unsigned char *)(v11 + v8) = 1;
  LocalizedStringResource.init(stringLiteral:)();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v5, 1, 1, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v2, 1, 1, v12);
  sub_10017DF08(&qword_100E7F258);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C43E10;
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  LocalizedStringResource.init(stringLiteral:)();
  DisplayRepresentation.init(title:subtitle:image:synonyms:)();
  type metadata accessor for DisplayRepresentation();
  sub_1005493B4();
  uint64_t result = Dictionary.init(dictionaryLiteral:)();
  static AirQualityPosition.caseDisplayRepresentations = result;
  return result;
}

uint64_t *AirQualityPosition.caseDisplayRepresentations.unsafeMutableAddressor()
{
  if (qword_100E62410 != -1) {
    swift_once();
  }
  return &static AirQualityPosition.caseDisplayRepresentations;
}

uint64_t static AirQualityPosition.caseDisplayRepresentations.getter()
{
  if (qword_100E62410 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static AirQualityPosition.caseDisplayRepresentations.setter(uint64_t a1)
{
  if (qword_100E62410 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static AirQualityPosition.caseDisplayRepresentations = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static AirQualityPosition.caseDisplayRepresentations.modify())()
{
  if (qword_100E62410 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t AirQualityPosition.urlRepresentationParameter.getter(char a1)
{
  BOOL v1 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v2 = 0x736C6961746564;
  }
  else {
    uint64_t v2 = 7368564;
  }
  if (v1) {
    unint64_t v3 = 0xE300000000000000;
  }
  else {
    unint64_t v3 = 0xE700000000000000;
  }
  unint64_t v4 = v3;
  String.append(_:)(*(Swift::String *)&v2);
  swift_bridgeObjectRelease();
  return 0x6E6F697469736F70;
}

uint64_t AirQualityPosition.rawValue.getter(char a1)
{
  if (a1) {
    return 0x736C6961746564;
  }
  else {
    return 7368564;
  }
}

Weather::AirQualityPosition_optional __swiftcall AirQualityPosition.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v2._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  v2._object = object;
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100E071E8, v2);
  swift_bridgeObjectRelease();
  if (v3 == 1) {
    v4.value = Weather_AirQualityPosition_details;
  }
  else {
    v4.value = Weather_AirQualityPosition_unknownDefault;
  }
  if (v3) {
    return v4;
  }
  else {
    return 0;
  }
}

_UNKNOWN **static AirQualityPosition.allCases.getter()
{
  return &off_100E07238;
}

uint64_t sub_100548C78(char *a1, char *a2)
{
  return sub_10088A850(*a1, *a2);
}

Swift::Int sub_100548C84()
{
  return sub_100652818();
}

uint64_t sub_100548C8C()
{
  return sub_1002C2848();
}

Swift::Int sub_100548C94()
{
  return sub_1002C4634();
}

Weather::AirQualityPosition_optional sub_100548C9C@<W0>(Swift::String *a1@<X0>, Weather::AirQualityPosition_optional *a2@<X8>)
{
  result.value = AirQualityPosition.init(rawValue:)(*a1).value;
  a2->value = result.value;
  return result;
}

uint64_t sub_100548CCC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = AirQualityPosition.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_100548CF8()
{
  uint64_t v3 = AirQualityPosition.urlRepresentationParameter.getter(*v0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8);
  return sub_1002F11CC(v4, v1, v3, v2);
}

uint64_t sub_100548D84@<X0>(uint64_t a1@<X8>)
{
  return sub_100548DB0(AirQualityPosition.typeDisplayRepresentation.unsafeMutableAddressor, (void (*)(void))&type metadata accessor for TypeDisplayRepresentation, a1);
}

uint64_t sub_100548DB0@<X0>(uint64_t (*a1)(void)@<X2>, void (*a2)(void)@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1();
  sub_100163610();
  a2(0);
  sub_100162880();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(a3, v5);
}

uint64_t sub_100548E30(uint64_t a1)
{
  unint64_t v2 = sub_1002326AC();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

uint64_t sub_100548E7C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_100548EC8(uint64_t a1)
{
  unint64_t v2 = sub_100549274();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

void sub_100548F14(void *a1@<X8>)
{
  *a1 = &off_100E07238;
}

unint64_t sub_100548F2C()
{
  unint64_t result = qword_100E7F1A0;
  if (!qword_100E7F1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7F1A0);
  }
  return result;
}

unint64_t sub_100548F7C()
{
  unint64_t result = qword_100E7F1A8;
  if (!qword_100E7F1A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7F1A8);
  }
  return result;
}

unint64_t sub_100548FCC()
{
  unint64_t result = qword_100E7F1B0;
  if (!qword_100E7F1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7F1B0);
  }
  return result;
}

uint64_t sub_100549018()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100549038()
{
  unint64_t result = qword_100E7F1C0;
  if (!qword_100E7F1C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7F1C0);
  }
  return result;
}

unint64_t sub_100549088()
{
  unint64_t result = qword_100E7F1C8;
  if (!qword_100E7F1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7F1C8);
  }
  return result;
}

unint64_t sub_1005490D8()
{
  unint64_t result = qword_100E7F1D0;
  if (!qword_100E7F1D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7F1D0);
  }
  return result;
}

unint64_t sub_100549128()
{
  unint64_t result = qword_100E7F1D8;
  if (!qword_100E7F1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7F1D8);
  }
  return result;
}

void *sub_100549174()
{
  return &protocol witness table for String;
}

unint64_t sub_100549184()
{
  unint64_t result = qword_100E7F1E8;
  if (!qword_100E7F1E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7F1E8);
  }
  return result;
}

unint64_t sub_1005491D4()
{
  unint64_t result = qword_100E7F1F0;
  if (!qword_100E7F1F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7F1F0);
  }
  return result;
}

unint64_t sub_100549224()
{
  unint64_t result = qword_100E7F1F8;
  if (!qword_100E7F1F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7F1F8);
  }
  return result;
}

unint64_t sub_100549274()
{
  unint64_t result = qword_100E7F200;
  if (!qword_100E7F200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7F200);
  }
  return result;
}

uint64_t sub_1005492C0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100549314()
{
  unint64_t result = qword_100E7F208;
  if (!qword_100E7F208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7F208);
  }
  return result;
}

unint64_t sub_100549364()
{
  unint64_t result = qword_100E7F210;
  if (!qword_100E7F210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7F210);
  }
  return result;
}

unint64_t sub_1005493B4()
{
  unint64_t result = qword_100E7F218;
  if (!qword_100E7F218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7F218);
  }
  return result;
}

uint64_t sub_100549400()
{
  return sub_1001246C8(&qword_100E7F220, &qword_100E7F228);
}

void *assignWithCopy for OpenWeatherAirQualityIntent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for OpenWeatherAirQualityIntent()
{
  return &type metadata for OpenWeatherAirQualityIntent;
}

unsigned char *storeEnumTagSinglePayload for AirQualityPosition(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100549578);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AirQualityPosition()
{
  return &type metadata for AirQualityPosition;
}

uint64_t sub_1005495B0()
{
  return sub_1001246C8(&qword_100E7F230, &qword_100E7F238);
}

unint64_t sub_1005495EC()
{
  unint64_t result = qword_100E7F240;
  if (!qword_100E7F240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7F240);
  }
  return result;
}

unint64_t sub_10054963C()
{
  unint64_t result = qword_100E7F278;
  if (!qword_100E7F278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7F278);
  }
  return result;
}

unint64_t sub_100549688()
{
  unint64_t result = qword_100E7F280;
  if (!qword_100E7F280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7F280);
  }
  return result;
}

uint64_t sub_1005496D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v67 = a2;
  uint64_t v66 = type metadata accessor for LocationPreviewModalViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100162EF8();
  uint64_t v62 = v4;
  sub_1001626D4();
  __chkstk_darwin(v5);
  sub_100128F8C();
  uint64_t v64 = v6;
  uint64_t v7 = sub_100129064();
  uint64_t v65 = type metadata accessor for LocationPreviewViewState(v7);
  sub_100162E4C();
  __chkstk_darwin(v8);
  uint64_t v61 = (uint64_t)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v10);
  sub_100128F8C();
  uint64_t v63 = v11;
  sub_100129064();
  uint64_t v12 = type metadata accessor for SunriseSunsetDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v13);
  uint64_t v59 = (uint64_t)&v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v15);
  uint64_t v60 = (uint64_t)&v58 - v16;
  sub_1001626D4();
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v58 - v18;
  type metadata accessor for ModalViewState(0);
  sub_100162E4C();
  __chkstk_darwin(v20);
  sub_10016278C();
  uint64_t v23 = v21 - v22;
  uint64_t v25 = __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v58 - v26;
  __chkstk_darwin(v25);
  int v29 = (char *)&v58 - v28;
  type metadata accessor for ModalViewState.LocationDetailModal(0);
  sub_100162E4C();
  __chkstk_darwin(v30);
  sub_10016278C();
  uint64_t v33 = v31 - v32;
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)&v58 - v35;
  uint64_t v37 = a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_modalView;
  sub_1005507C4(v37, (uint64_t)v29, (void (*)(void))type metadata accessor for ModalViewState);
  if (swift_getEnumCaseMultiPayload() != 5)
  {
    sub_1001BC184((uint64_t)v29, (void (*)(void))type metadata accessor for ModalViewState);
    goto LABEL_6;
  }
  uint64_t v58 = v12;
  sub_100550764((uint64_t)v29, (uint64_t)v36, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
  sub_100550764((uint64_t)v36, v33, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    sub_1001BC184(v33, (void (*)(void))type metadata accessor for ModalViewState.LocationDetailModal);
    uint64_t v12 = v58;
LABEL_6:
    sub_1005507C4(v37, (uint64_t)v27, (void (*)(void))type metadata accessor for ModalViewState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v42 = v65;
    if (EnumCaseMultiPayload)
    {
      uint64_t v43 = type metadata accessor for ModalViewState;
      uint64_t v44 = (uint64_t)v27;
    }
    else
    {
      uint64_t v45 = v63;
      sub_100550764((uint64_t)v27, v63, (void (*)(void))type metadata accessor for LocationPreviewViewState);
      uint64_t v46 = v64;
      sub_1005507C4(v45 + *(int *)(v42 + 20), v64, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
      sub_1001BC184(v45, (void (*)(void))type metadata accessor for LocationPreviewViewState);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v47 = v12;
        uint64_t v48 = v60;
        sub_100550764(v46, v60, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewState);
        uint64_t v49 = v48;
        uint64_t v39 = v67;
LABEL_19:
        uint64_t v12 = v47;
        sub_100550764(v49, v39, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewState);
        uint64_t v40 = 0;
        return _s7Weather24LocationCompositionStateOwst_0(v39, v40, 1, v12);
      }
      uint64_t v43 = type metadata accessor for LocationPreviewModalViewState;
      uint64_t v44 = v46;
    }
    sub_1001BC184(v44, (void (*)(void))v43);
    sub_1005507C4(v37, v23, (void (*)(void))type metadata accessor for ModalViewState);
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      uint64_t v50 = type metadata accessor for ModalViewState.MapViewModal(0);
      sub_10012B520(v23, 1, v50);
      if (!v51)
      {
        uint64_t v52 = v61;
        sub_100550764(v23, v61, (void (*)(void))type metadata accessor for LocationPreviewViewState);
        uint64_t v53 = v62;
        sub_1005507C4(v52 + *(int *)(v42 + 20), v62, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
        sub_1001BC184(v52, (void (*)(void))type metadata accessor for LocationPreviewViewState);
        int v54 = swift_getEnumCaseMultiPayload();
        uint64_t v39 = v67;
        if (v54 != 4)
        {
          sub_1001BC184(v53, (void (*)(void))type metadata accessor for LocationPreviewModalViewState);
          uint64_t v40 = 1;
          return _s7Weather24LocationCompositionStateOwst_0(v39, v40, 1, v12);
        }
        uint64_t v47 = v12;
        uint64_t v55 = v53;
        uint64_t v56 = v59;
        sub_100550764(v55, v59, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewState);
        uint64_t v49 = v56;
        goto LABEL_19;
      }
      sub_1001781AC(v23, &qword_100E663E8);
    }
    else
    {
      sub_1001BC184(v23, (void (*)(void))type metadata accessor for ModalViewState);
    }
    uint64_t v40 = 1;
    uint64_t v39 = v67;
    return _s7Weather24LocationCompositionStateOwst_0(v39, v40, 1, v12);
  }
  sub_100550764(v33, (uint64_t)v19, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewState);
  uint64_t v38 = (uint64_t)v19;
  uint64_t v39 = v67;
  sub_100550764(v38, v67, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewState);
  uint64_t v40 = 0;
  uint64_t v12 = v58;
  return _s7Weather24LocationCompositionStateOwst_0(v39, v40, 1, v12);
}

uint64_t sub_100549CEC(uint64_t a1, uint64_t a2)
{
  if ((static Location.== infix(_:_:)() & 1) != 0
    && (uint64_t v4 = (int *)type metadata accessor for SunriseSunsetDetailInput.Input(0),
        (sub_100A205E8((void *)(a1 + v4[5]), (void *)(a2 + v4[5])) & 1) != 0)
    && (sub_100BBEEE4(a1 + v4[6], a2 + v4[6]) & 1) != 0)
  {
    char v5 = *(unsigned char *)(a1 + v4[7]) ^ *(unsigned char *)(a2 + v4[7]) ^ 1;
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

uint64_t sub_100549D7C(uint64_t a1, uint64_t a2)
{
  char v5 = (int *)type metadata accessor for SunriseSunsetDetailInput.Input(0);
  sub_100162E4C();
  __chkstk_darwin(v6);
  sub_10011BFD8();
  uint64_t v7 = type metadata accessor for SunriseSunsetDetailInput(0);
  uint64_t v8 = sub_100109308(v7);
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_10017DF08(&qword_100E7F438);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  uint64_t v18 = v15 - v14 + *(int *)(v17 + 56);
  sub_1005507C4(a1, v15 - v14, (void (*)(void))type metadata accessor for SunriseSunsetDetailInput);
  sub_1005507C4(a2, v18, (void (*)(void))type metadata accessor for SunriseSunsetDetailInput);
  sub_10012B520(v16, 1, (uint64_t)v5);
  if (v20)
  {
    sub_10012B520(v18, 1, (uint64_t)v5);
    if (v20) {
      goto LABEL_5;
    }
  }
  else
  {
    sub_1005507C4(v16, v11, (void (*)(void))type metadata accessor for SunriseSunsetDetailInput);
    sub_10012B520(v18, 1, (uint64_t)v5);
    if (!v20)
    {
      sub_100550764(v18, v2, (void (*)(void))type metadata accessor for SunriseSunsetDetailInput.Input);
      char v21 = static Location.== infix(_:_:)();
      if ((v21 & 1) == 0
        || (sub_100A205E8((void *)(v11 + v5[5]), (void *)(v2 + v5[5])) & 1) == 0
        || (sub_100BBEEE4(v11 + v5[6], v2 + v5[6]) & 1) == 0
        || *(unsigned __int8 *)(v11 + v5[7]) != *(unsigned __int8 *)(v2 + v5[7]))
      {
        sub_1001BC184(v2, (void (*)(void))type metadata accessor for SunriseSunsetDetailInput.Input);
        sub_1001BC184(v11, (void (*)(void))type metadata accessor for SunriseSunsetDetailInput.Input);
        sub_1001BC184(v16, (void (*)(void))type metadata accessor for SunriseSunsetDetailInput);
        return 0;
      }
      sub_1001BC184(v2, (void (*)(void))type metadata accessor for SunriseSunsetDetailInput.Input);
      sub_1001BC184(v11, (void (*)(void))type metadata accessor for SunriseSunsetDetailInput.Input);
LABEL_5:
      sub_1001BC184(v16, (void (*)(void))type metadata accessor for SunriseSunsetDetailInput);
      return 1;
    }
    sub_1001BC184(v11, (void (*)(void))type metadata accessor for SunriseSunsetDetailInput.Input);
  }
  sub_1001781AC(v16, &qword_100E7F438);
  return 0;
}

uint64_t sub_10054A040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v129 = a2;
  uint64_t v4 = type metadata accessor for NewsDataModel();
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_100162EF8();
  uint64_t v124 = v6;
  sub_1001626D4();
  __chkstk_darwin(v7);
  sub_100128F8C();
  uint64_t v122 = v8;
  uint64_t v9 = sub_100129064();
  uint64_t v10 = type metadata accessor for WeatherData(v9);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  uint64_t v123 = (uint64_t)&v114 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v13);
  sub_100128F8C();
  uint64_t v120 = v14;
  uint64_t v15 = sub_10017DF08(&qword_100E63770);
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_1001626E0();
  uint64_t v19 = v18 - v17;
  uint64_t v20 = type metadata accessor for LocationWeatherDataState(0);
  sub_100162E4C();
  __chkstk_darwin(v21);
  sub_10016278C();
  uint64_t v24 = v22 - v23;
  __chkstk_darwin(v25);
  sub_100128F8C();
  uint64_t v126 = v26;
  sub_100129064();
  uint64_t v27 = type metadata accessor for Location();
  uint64_t v28 = *(uint64_t (**)(uint64_t))(v27 - 8);
  uint64_t v127 = v27;
  uint64_t v128 = v28;
  __chkstk_darwin(v27);
  uint64_t v125 = (char *)&v114 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001626D4();
  __chkstk_darwin(v30);
  uint64_t v121 = (char *)&v114 - v31;
  sub_1001626D4();
  __chkstk_darwin(v32);
  int v119 = (char *)&v114 - v33;
  sub_1001626D4();
  uint64_t v35 = __chkstk_darwin(v34);
  uint64_t v37 = (char *)&v114 - v36;
  __chkstk_darwin(v35);
  sub_100128F8C();
  uint64_t v39 = v38;
  uint64_t v40 = sub_10017DF08(&qword_100E6C1B8);
  uint64_t v41 = sub_100109308(v40);
  __chkstk_darwin(v41);
  sub_10016278C();
  uint64_t v44 = v42 - v43;
  __chkstk_darwin(v45);
  uint64_t v47 = (char *)&v114 - v46;
  uint64_t v48 = type metadata accessor for SunriseSunsetDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v49);
  sub_10011BFD8();
  sub_1005496D8(a1, (uint64_t)v47);
  sub_10012B520((uint64_t)v47, 1, v48);
  if (v61)
  {
    sub_1001781AC((uint64_t)v47, &qword_100E6C1B8);
    if (qword_100E627E8 != -1) {
      swift_once();
    }
    uint64_t v50 = type metadata accessor for Logger();
    sub_1002102B0(v50, (uint64_t)qword_100F51ED0);
    char v51 = Logger.logObject.getter();
    os_log_type_t v52 = static os_log_type_t.error.getter();
    BOOL v53 = os_log_type_enabled(v51, v52);
    uint64_t v54 = v129;
    if (v53)
    {
      *(_WORD *)swift_slowAlloc() = 0;
      sub_100179C44((void *)&_mh_execute_header, v55, v56, "Failed to create sunriseSunset detail input due to missing view state");
      sub_100162EE0();
    }

    uint64_t v57 = type metadata accessor for SunriseSunsetDetailInput.Input(0);
    uint64_t v58 = v54;
    uint64_t v59 = 1;
    goto LABEL_8;
  }
  sub_100550764((uint64_t)v47, v2, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewState);
  sub_1005496D8(a1, v44);
  sub_10012B520(v44, 1, v48);
  if (!v61)
  {
    uint64_t v118 = v2;
    uint64_t v69 = v127;
    uint64_t v68 = v128;
    uint64_t v70 = (void (*)(void, void, void))*((void *)v128 + 2);
    uint64_t v117 = (char *)v128 + 16;
    uint64_t v115 = v24;
    int v116 = v70;
    v70(v37, v44, v127);
    sub_1001BC184(v44, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewState);
    uint64_t v114 = (void (*)(uint64_t, char *, uint64_t))*((void *)v68 + 4);
    v114((uint64_t)v39, v37, v69);
    uint64_t v71 = *(void *)(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
    swift_bridgeObjectRetain();
    uint64_t v72 = v39;
    uint64_t v73 = Location.id.getter();
    sub_1001BBE9C(v73, v74, v71);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10012B520(v19, 1, v20);
    if (v75)
    {
      sub_1001781AC(v19, &qword_100E63770);
      if (qword_100E627E8 != -1) {
        swift_once();
      }
      uint64_t v76 = type metadata accessor for Logger();
      sub_1002102B0(v76, (uint64_t)qword_100F51ED0);
      uint64_t v77 = sub_1001813E4();
      v78(v77);
      uint64_t v79 = Logger.logObject.getter();
      os_log_type_t v80 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v79, v80))
      {
        uint64_t v81 = swift_slowAlloc();
        uint64_t v82 = swift_slowAlloc();
        *(_DWORD *)uint64_t v81 = 141558275;
        sub_100189140(v82);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v81 + 12) = 2081;
        sub_1002FF134();
        uint64_t v83 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v130 = sub_10016414C(v83, v84, &v131);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v85 = (void (*)(void))*((void *)v128 + 1);
        sub_100164944();
        v85();
        _os_log_impl((void *)&_mh_execute_header, v79, v80, "Failed to create sunriseSunset detail input due to missing weather for location=%{private,mask.hash}s", (uint8_t *)v81, 0x16u);
        swift_arrayDestroy();
        sub_100162EE0();
        sub_100162EE0();

        sub_100164944();
        v85();
        sub_1001BC184(v118, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewState);
        uint64_t v60 = 1;
LABEL_31:
        uint64_t v54 = v129;
        goto LABEL_32;
      }

      uint64_t v101 = sub_1001A211C();
      ((void (*)(uint64_t))v79)(v101);
    }
    else
    {
      uint64_t v86 = v126;
      sub_100550764(v19, v126, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      uint64_t v87 = v115;
      sub_1005507C4(v86, v115, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        sub_1001BC184(v86, (void (*)(void))type metadata accessor for LocationWeatherDataState);
        uint64_t v89 = sub_10017DF08(&qword_100E63748);
        uint64_t v90 = v87 + *(int *)(v89 + 48);
        uint64_t v91 = v87 + *(int *)(v89 + 64);
        uint64_t v92 = v120;
        uint64_t v128 = type metadata accessor for WeatherData;
        sub_100550764(v87, v120, (void (*)(void))type metadata accessor for WeatherData);
        uint64_t v93 = v122;
        sub_100550764(v91, v122, (void (*)(void))type metadata accessor for NewsDataModel);
        sub_1001BC184(v90, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
        int v94 = v119;
        int v95 = v72;
        uint64_t v96 = v114;
        v114((uint64_t)v119, v95, v69);
        uint64_t v97 = v123;
        sub_100550764(v92, v123, (void (*)(void))type metadata accessor for WeatherData);
        uint64_t v98 = v124;
        sub_100550764(v93, v124, (void (*)(void))type metadata accessor for NewsDataModel);
        int v99 = *(unsigned __int8 *)(v118 + *(int *)(v48 + 24));
        sub_1001BC184(v118, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewState);
        LOBYTE(v93) = v99 == 2;
        uint64_t v54 = v129;
        v96(v129, v94, v127);
        uint64_t v100 = (int *)type metadata accessor for SunriseSunsetDetailInput.Input(0);
        sub_100550764(v97, v54 + v100[5], (void (*)(void))v128);
        sub_100550764(v98, v54 + v100[6], (void (*)(void))type metadata accessor for NewsDataModel);
        *(unsigned char *)(v54 + v100[7]) = v93;
        uint64_t v58 = v54;
        uint64_t v59 = 0;
        uint64_t v57 = (uint64_t)v100;
LABEL_8:
        _s7Weather24LocationCompositionStateOwst_0(v58, v59, 1, v57);
        uint64_t v60 = 0;
        goto LABEL_32;
      }
      sub_1001BC184(v87, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      if (qword_100E627E8 != -1) {
        swift_once();
      }
      uint64_t v102 = type metadata accessor for Logger();
      sub_1002102B0(v102, (uint64_t)qword_100F51ED0);
      uint64_t v103 = sub_1001813E4();
      v104(v103);
      uint64_t v79 = Logger.logObject.getter();
      os_log_type_t v105 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v79, v105))
      {
        uint64_t v106 = swift_slowAlloc();
        uint64_t v107 = swift_slowAlloc();
        *(_DWORD *)uint64_t v106 = 141558275;
        sub_100189140(v107);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *(_WORD *)(v106 + 12) = 2081;
        sub_1002FF134();
        uint64_t v108 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v130 = sub_10016414C(v108, v109, &v131);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v110 = (void (*)(void))*((void *)v128 + 1);
        sub_100164944();
        v110();
        _os_log_impl((void *)&_mh_execute_header, v79, v105, "Failed to create sunriseSunset detail input due to missing weather data, location=%{private,mask.hash}s", (uint8_t *)v106, 0x16u);
        uint64_t v60 = 1;
        swift_arrayDestroy();
        sub_100162EE0();
        sub_100162EE0();

        sub_1001BC184(v126, (void (*)(void))type metadata accessor for LocationWeatherDataState);
        sub_100164944();
        v110();
        sub_1001BC184(v118, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewState);
        goto LABEL_31;
      }

      uint64_t v111 = sub_1001A211C();
      ((void (*)(uint64_t))v79)(v111);
      sub_1001BC184(v86, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    }
    ((void (*)(char *, uint64_t))v79)(v72, v69);
    sub_1001BC184(v118, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewState);
    uint64_t v60 = 1;
    goto LABEL_31;
  }
  sub_1001781AC(v44, &qword_100E6C1B8);
  if (qword_100E627E8 != -1) {
    swift_once();
  }
  uint64_t v62 = type metadata accessor for Logger();
  sub_1002102B0(v62, (uint64_t)qword_100F51ED0);
  uint64_t v63 = Logger.logObject.getter();
  os_log_type_t v64 = static os_log_type_t.error.getter();
  BOOL v65 = os_log_type_enabled(v63, v64);
  uint64_t v54 = v129;
  if (v65)
  {
    *(_WORD *)swift_slowAlloc() = 0;
    sub_100179C44((void *)&_mh_execute_header, v66, v67, "Failed to create sunriseSunset detail input due to missing location");
    sub_100162EE0();
  }

  sub_1001BC184(v2, (void (*)(void))type metadata accessor for SunriseSunsetDetailViewState);
  uint64_t v60 = 1;
LABEL_32:
  uint64_t v112 = type metadata accessor for SunriseSunsetDetailInput(0);
  return _s7Weather24LocationCompositionStateOwst_0(v54, v60, 1, v112);
}

uint64_t type metadata accessor for SunriseSunsetDetailInputFactory()
{
  return self;
}

uint64_t *sub_10054AC60(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v6 = *(void *)(a3 - 8);
  uint64_t v7 = (int *)type metadata accessor for SunriseSunsetDetailInput.Input(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v7))
  {
    memcpy(a1, a2, *(void *)(v6 + 64));
    return a1;
  }
  uint64_t v9 = type metadata accessor for Location();
  (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
  uint64_t v10 = v7[5];
  uint64_t v11 = (uint64_t *)((char *)a1 + v10);
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = *(uint64_t *)((char *)a2 + v10 + 8);
  void *v11 = *(uint64_t *)((char *)a2 + v10);
  v11[1] = v13;
  uint64_t v14 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v15 = v14[5];
  uint64_t v16 = (char *)v11 + v15;
  uint64_t v17 = &v12[v15];
  uint64_t v18 = type metadata accessor for Locale();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
  {
    uint64_t v19 = sub_10017DF08(&qword_100E63730);
    memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
  }
  uint64_t v20 = v14[6];
  uint64_t v21 = (char *)v11 + v20;
  uint64_t v22 = &v12[v20];
  uint64_t v23 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  uint64_t v24 = v14[7];
  uint64_t v25 = (char *)v11 + v24;
  uint64_t v26 = &v12[v24];
  uint64_t v27 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27))
  {
    uint64_t v28 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v25, v26, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    uint64_t v29 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v25, v26, v29);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v27);
  }
  uint64_t v30 = v14[8];
  uint64_t v31 = (void *)((char *)v11 + v30);
  uint64_t v32 = &v12[v30];
  uint64_t v33 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v36 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v31, v32, v36);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
      goto LABEL_17;
    }
    uint64_t v35 = *((void *)v32 + 1);
    void *v31 = *(void *)v32;
    v31[1] = v35;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
LABEL_17:
  uint64_t v37 = v14[9];
  uint64_t v38 = (char *)v11 + v37;
  uint64_t v39 = &v12[v37];
  uint64_t v40 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40))
  {
    uint64_t v41 = sub_10017DF08(&qword_100E63740);
    memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
  }
  else
  {
    uint64_t v42 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v42))
    {
      uint64_t v43 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v38, v39, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v38, v39, v42);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v42);
    }
    uint64_t v44 = *(int *)(v40 + 20);
    uint64_t v45 = &v38[v44];
    uint64_t v46 = &v39[v44];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v42))
    {
      uint64_t v47 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v45, v46, *(void *)(*(void *)(v47 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v45, v46, v42);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v42);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
  }
  uint64_t v48 = v7[6];
  uint64_t v49 = (uint64_t *)((char *)a1 + v48);
  uint64_t v50 = (uint64_t *)((char *)a2 + v48);
  type metadata accessor for NewsDataModel();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v49 = *v50;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v51 = type metadata accessor for News();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v50, v51);
  }
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)a1 + v7[7]) = *((unsigned char *)a2 + v7[7]);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v7);
  return a1;
}

uint64_t type metadata accessor for SunriseSunsetDetailInput.Input(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E7F3F8);
}

uint64_t sub_10054B258(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SunriseSunsetDetailInput.Input(0);
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = type metadata accessor for Location();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
    uint64_t v5 = a1 + *(int *)(v2 + 20);
    swift_bridgeObjectRelease();
    uint64_t v6 = (int *)type metadata accessor for WeatherData(0);
    uint64_t v7 = v5 + v6[5];
    uint64_t v8 = type metadata accessor for Locale();
    if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    }
    uint64_t v9 = v5 + v6[6];
    uint64_t v10 = type metadata accessor for WeatherDataModel();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    uint64_t v11 = v5 + v6[7];
    uint64_t v12 = sub_10017DF08(&qword_100E63738);
    if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12))
    {
      uint64_t v13 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v11, v13);
    }
    uint64_t v14 = v5 + v6[8];
    type metadata accessor for WeatherData.WeatherStatisticsState(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v16 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v14, v16);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v17 = v5 + v6[9];
    uint64_t v18 = type metadata accessor for WeatherDataOverrides();
    if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, v18))
    {
      uint64_t v19 = type metadata accessor for Date();
      if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, v19)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v17, v19);
      }
      uint64_t v20 = v17 + *(int *)(v18 + 20);
      if (!_s7Weather24LocationCompositionStateOwet_0(v20, 1, v19)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v20, v19);
      }
    }
    uint64_t v21 = a1 + *(int *)(v2 + 24);
    type metadata accessor for NewsDataModel();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      return swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v22 = type metadata accessor for News();
      uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8);
      return v23(v21, v22);
    }
  }
  return result;
}

char *sub_10054B5C8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for SunriseSunsetDetailInput.Input(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v7 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  uint64_t v8 = v6[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(void *)&a2[v8 + 8];
  *(void *)uint64_t v9 = *(void *)&a2[v8];
  *((void *)v9 + 1) = v11;
  uint64_t v12 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v13 = v12[5];
  uint64_t v14 = &v9[v13];
  uint64_t v15 = &v10[v13];
  uint64_t v16 = type metadata accessor for Locale();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
  {
    uint64_t v17 = sub_10017DF08(&qword_100E63730);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
  }
  uint64_t v18 = v12[6];
  uint64_t v19 = &v9[v18];
  uint64_t v20 = &v10[v18];
  uint64_t v21 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
  uint64_t v22 = v12[7];
  uint64_t v23 = &v9[v22];
  uint64_t v24 = &v10[v22];
  uint64_t v25 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v25))
  {
    uint64_t v26 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    uint64_t v27 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v23, v24, v27);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v25);
  }
  uint64_t v28 = v12[8];
  uint64_t v29 = &v9[v28];
  uint64_t v30 = &v10[v28];
  uint64_t v31 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v34 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v29, v30, v34);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
      goto LABEL_15;
    }
    uint64_t v33 = *((void *)v30 + 1);
    *(void *)uint64_t v29 = *(void *)v30;
    *((void *)v29 + 1) = v33;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
LABEL_15:
  uint64_t v35 = v12[9];
  uint64_t v36 = &v9[v35];
  uint64_t v37 = &v10[v35];
  uint64_t v38 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v38))
  {
    uint64_t v39 = sub_10017DF08(&qword_100E63740);
    memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    uint64_t v40 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v40))
    {
      uint64_t v41 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v36, v37, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v36, v37, v40);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v40);
    }
    uint64_t v42 = *(int *)(v38 + 20);
    uint64_t v43 = &v36[v42];
    uint64_t v44 = &v37[v42];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v40))
    {
      uint64_t v45 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v43, v44, v40);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v40);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v38);
  }
  uint64_t v46 = v6[6];
  uint64_t v47 = &a1[v46];
  uint64_t v48 = &a2[v46];
  type metadata accessor for NewsDataModel();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(void *)uint64_t v47 = *(void *)v48;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v49 = type metadata accessor for News();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v47, v48, v49);
  }
  swift_storeEnumTagMultiPayload();
  a1[v6[7]] = a2[v6[7]];
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  return a1;
}

unsigned char *sub_10054BB64(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for SunriseSunsetDetailInput.Input(0);
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, (uint64_t)v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = type metadata accessor for Location();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      uint64_t v10 = v6[5];
      uint64_t v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      void *v11 = *(void *)&a2[v10];
      v11[1] = *(void *)&a2[v10 + 8];
      uint64_t v13 = (int *)type metadata accessor for WeatherData(0);
      uint64_t v14 = v13[5];
      uint64_t v15 = (char *)v11 + v14;
      uint64_t v16 = &v12[v14];
      uint64_t v17 = type metadata accessor for Locale();
      swift_bridgeObjectRetain();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
      {
        uint64_t v18 = sub_10017DF08(&qword_100E63730);
        memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
      }
      uint64_t v30 = v13[6];
      uint64_t v31 = (char *)v11 + v30;
      uint64_t v32 = &v12[v30];
      uint64_t v33 = type metadata accessor for WeatherDataModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
      uint64_t v34 = v13[7];
      uint64_t v35 = (char *)v11 + v34;
      uint64_t v36 = &v12[v34];
      uint64_t v37 = sub_10017DF08(&qword_100E63738);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37))
      {
        uint64_t v38 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        uint64_t v39 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v35, v36, v39);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v37);
      }
      uint64_t v40 = v13[8];
      uint64_t v41 = (void *)((char *)v11 + v40);
      uint64_t v42 = &v12[v40];
      uint64_t v43 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v45 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v41, v42, v45);
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v41, v42, *(void *)(*(void *)(v43 - 8) + 64));
          goto LABEL_21;
        }
        *uint64_t v41 = *(void *)v42;
        v41[1] = *((void *)v42 + 1);
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
LABEL_21:
      uint64_t v46 = v13[9];
      uint64_t v47 = (char *)v11 + v46;
      uint64_t v48 = &v12[v46];
      uint64_t v49 = type metadata accessor for WeatherDataOverrides();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v49))
      {
        uint64_t v50 = sub_10017DF08(&qword_100E63740);
        memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        uint64_t v51 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v51))
        {
          uint64_t v52 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v47, v48, *(void *)(*(void *)(v52 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v47, v48, v51);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v51);
        }
        uint64_t v72 = *(int *)(v49 + 20);
        uint64_t v73 = &v47[v72];
        uint64_t v74 = &v48[v72];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v74, 1, v51))
        {
          uint64_t v75 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v73, v74, *(void *)(*(void *)(v75 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 16))(v73, v74, v51);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v73, 0, 1, v51);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v49);
      }
      uint64_t v76 = v6[6];
      uint64_t v77 = &a1[v76];
      uint64_t v78 = &a2[v76];
      type metadata accessor for NewsDataModel();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        void *v77 = *v78;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v79 = type metadata accessor for News();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v79 - 8) + 16))(v77, v78, v79);
      }
      swift_storeEnumTagMultiPayload();
      a1[v6[7]] = a2[v6[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
      return a1;
    }
LABEL_7:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  if (v8)
  {
    sub_1001BC184((uint64_t)a1, (void (*)(void))type metadata accessor for SunriseSunsetDetailInput.Input);
    goto LABEL_7;
  }
  uint64_t v19 = type metadata accessor for Location();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v19 - 8) + 24))(a1, a2, v19);
  uint64_t v20 = v6[5];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  void *v21 = *(void *)&a2[v20];
  v21[1] = *(void *)&a2[v20 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v24 = v23[5];
  uint64_t v25 = (char *)v21 + v24;
  uint64_t v26 = &v22[v24];
  uint64_t v27 = type metadata accessor for Locale();
  int v28 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v27);
  int v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v27);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  uint64_t v53 = *(void *)(v27 - 8);
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v53 + 8))(v25, v27);
LABEL_27:
    uint64_t v54 = sub_10017DF08(&qword_100E63730);
    memcpy(v25, v26, *(void *)(*(void *)(v54 - 8) + 64));
    goto LABEL_28;
  }
  (*(void (**)(char *, char *, uint64_t))(v53 + 24))(v25, v26, v27);
LABEL_28:
  uint64_t v55 = v23[6];
  uint64_t v56 = (char *)v21 + v55;
  uint64_t v57 = &v22[v55];
  uint64_t v58 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 24))(v56, v57, v58);
  uint64_t v59 = v23[7];
  uint64_t v60 = (char *)v21 + v59;
  char v61 = &v22[v59];
  uint64_t v62 = sub_10017DF08(&qword_100E63738);
  int v63 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v62);
  int v64 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v62);
  if (v63)
  {
    if (!v64)
    {
      uint64_t v65 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(v60, v61, v65);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v62);
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  if (v64)
  {
    sub_1001781AC((uint64_t)v60, &qword_100E63738);
LABEL_33:
    uint64_t v66 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v60, v61, *(void *)(*(void *)(v66 - 8) + 64));
    goto LABEL_34;
  }
  uint64_t v92 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 24))(v60, v61, v92);
LABEL_34:
  if (a1 == a2) {
    goto LABEL_50;
  }
  uint64_t v67 = v23[8];
  uint64_t v68 = (void *)((char *)v21 + v67);
  uint64_t v69 = &v22[v67];
  sub_1001BC184((uint64_t)v21 + v67, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
  uint64_t v70 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int v71 = swift_getEnumCaseMultiPayload();
  if (v71 == 1)
  {
    uint64_t v80 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v80 - 8) + 16))(v68, v69, v80);
    goto LABEL_48;
  }
  if (!v71)
  {
    *uint64_t v68 = *(void *)v69;
    v68[1] = *((void *)v69 + 1);
    swift_bridgeObjectRetain();
LABEL_48:
    swift_storeEnumTagMultiPayload();
    goto LABEL_50;
  }
  memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
LABEL_50:
  uint64_t v81 = v23[9];
  uint64_t v82 = (char *)v21 + v81;
  uint64_t v83 = &v22[v81];
  uint64_t v84 = type metadata accessor for WeatherDataOverrides();
  int v85 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v84);
  int v86 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v83, 1, v84);
  if (v85)
  {
    if (!v86)
    {
      uint64_t v87 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v83, 1, v87))
      {
        uint64_t v88 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v82, v83, *(void *)(*(void *)(v88 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v82, v83, v87);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v82, 0, 1, v87);
      }
      uint64_t v96 = *(int *)(v84 + 20);
      uint64_t v97 = &v82[v96];
      uint64_t v98 = &v83[v96];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v98, 1, v87))
      {
        uint64_t v99 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v97, v98, *(void *)(*(void *)(v99 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 16))(v97, v98, v87);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v97, 0, 1, v87);
      }
      uint64_t v100 = (uint64_t)v82;
      uint64_t v101 = v84;
      goto LABEL_68;
    }
    goto LABEL_56;
  }
  if (v86)
  {
    sub_1001BC184((uint64_t)v82, (void (*)(void))type metadata accessor for WeatherDataOverrides);
LABEL_56:
    size_t v89 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63740) - 8) + 64);
    uint64_t v90 = v82;
    uint64_t v91 = v83;
    goto LABEL_57;
  }
  uint64_t v93 = type metadata accessor for Date();
  int v94 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v82, 1, v93);
  int v95 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v83, 1, v93);
  if (!v94)
  {
    uint64_t v107 = *(void *)(v93 - 8);
    if (!v95)
    {
      (*(void (**)(char *, char *, uint64_t))(v107 + 24))(v82, v83, v93);
      goto LABEL_79;
    }
    (*(void (**)(char *, uint64_t))(v107 + 8))(v82, v93);
    goto LABEL_78;
  }
  if (v95)
  {
LABEL_78:
    uint64_t v108 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v82, v83, *(void *)(*(void *)(v108 - 8) + 64));
    goto LABEL_79;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 16))(v82, v83, v93);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v82, 0, 1, v93);
LABEL_79:
  uint64_t v109 = *(int *)(v84 + 20);
  uint64_t v110 = (uint64_t)&v82[v109];
  uint64_t v111 = (uint64_t)&v83[v109];
  int v112 = _s7Weather24LocationCompositionStateOwet_0(v110, 1, v93);
  int v113 = _s7Weather24LocationCompositionStateOwet_0(v111, 1, v93);
  if (v112)
  {
    if (!v113)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 16))(v110, v111, v93);
      uint64_t v100 = v110;
      uint64_t v101 = v93;
LABEL_68:
      _s7Weather24LocationCompositionStateOwst_0(v100, 0, 1, v101);
      goto LABEL_69;
    }
  }
  else
  {
    uint64_t v114 = *(void *)(v93 - 8);
    if (!v113)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v114 + 24))(v110, v111, v93);
      goto LABEL_69;
    }
    (*(void (**)(uint64_t, uint64_t))(v114 + 8))(v110, v93);
  }
  size_t v89 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
  uint64_t v90 = (void *)v110;
  uint64_t v91 = (const void *)v111;
LABEL_57:
  memcpy(v90, v91, v89);
LABEL_69:
  if (a1 != a2)
  {
    uint64_t v102 = v6[6];
    uint64_t v103 = &a1[v102];
    uint64_t v104 = &a2[v102];
    sub_1001BC184((uint64_t)&a1[v102], (void (*)(void))type metadata accessor for NewsDataModel);
    type metadata accessor for NewsDataModel();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v103 = *v104;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v105 = type metadata accessor for News();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v105 - 8) + 16))(v103, v104, v105);
    }
    swift_storeEnumTagMultiPayload();
  }
  a1[v6[7]] = a2[v6[7]];
  return a1;
}

char *sub_10054C9F4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for SunriseSunsetDetailInput.Input(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = type metadata accessor for Location();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    uint64_t v8 = v6[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    *(_OWORD *)&a1[v8] = *(_OWORD *)&a2[v8];
    uint64_t v11 = (int *)type metadata accessor for WeatherData(0);
    uint64_t v12 = v11[5];
    uint64_t v13 = &v9[v12];
    uint64_t v14 = &v10[v12];
    uint64_t v15 = type metadata accessor for Locale();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
    {
      uint64_t v16 = sub_10017DF08(&qword_100E63730);
      memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
    }
    uint64_t v17 = v11[6];
    uint64_t v18 = &v9[v17];
    uint64_t v19 = &v10[v17];
    uint64_t v20 = type metadata accessor for WeatherDataModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
    uint64_t v21 = v11[7];
    uint64_t v22 = &v9[v21];
    uint64_t v23 = &v10[v21];
    uint64_t v24 = sub_10017DF08(&qword_100E63738);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24))
    {
      uint64_t v25 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      uint64_t v26 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v22, v23, v26);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v24);
    }
    uint64_t v27 = v11[8];
    int v28 = &v9[v27];
    int v29 = &v10[v27];
    uint64_t v30 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v31 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32))(v28, v29, v31);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
    }
    uint64_t v32 = v11[9];
    uint64_t v33 = &v9[v32];
    uint64_t v34 = &v10[v32];
    uint64_t v35 = type metadata accessor for WeatherDataOverrides();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v35))
    {
      uint64_t v36 = sub_10017DF08(&qword_100E63740);
      memcpy(v33, v34, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      uint64_t v37 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v37))
      {
        uint64_t v38 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v33, v34, *(void *)(*(void *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v33, v34, v37);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v37);
      }
      uint64_t v39 = *(int *)(v35 + 20);
      uint64_t v40 = &v33[v39];
      uint64_t v41 = &v34[v39];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v37))
      {
        uint64_t v42 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v40, v41, v37);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v37);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v33, 0, 1, v35);
    }
    uint64_t v43 = v6[6];
    uint64_t v44 = &a1[v43];
    uint64_t v45 = &a2[v43];
    uint64_t v46 = type metadata accessor for NewsDataModel();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      uint64_t v47 = type metadata accessor for News();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v44, v45, v47);
      swift_storeEnumTagMultiPayload();
    }
    a1[v6[7]] = a2[v6[7]];
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
  }
  return a1;
}

unsigned char *sub_10054CF6C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for SunriseSunsetDetailInput.Input(0);
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, (uint64_t)v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, (uint64_t)v6);
  if (v7)
  {
    if (!v8)
    {
      uint64_t v9 = type metadata accessor for Location();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      uint64_t v10 = v6[5];
      uint64_t v11 = &a1[v10];
      uint64_t v12 = &a2[v10];
      *(_OWORD *)&a1[v10] = *(_OWORD *)&a2[v10];
      uint64_t v13 = (int *)type metadata accessor for WeatherData(0);
      uint64_t v14 = v13[5];
      uint64_t v15 = &v11[v14];
      uint64_t v16 = &v12[v14];
      uint64_t v17 = type metadata accessor for Locale();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
      {
        uint64_t v18 = sub_10017DF08(&qword_100E63730);
        memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
      }
      uint64_t v31 = v13[6];
      uint64_t v32 = &v11[v31];
      uint64_t v33 = &v12[v31];
      uint64_t v34 = type metadata accessor for WeatherDataModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
      uint64_t v35 = v13[7];
      uint64_t v36 = &v11[v35];
      uint64_t v37 = &v12[v35];
      uint64_t v38 = sub_10017DF08(&qword_100E63738);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v38))
      {
        uint64_t v39 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        uint64_t v40 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 32))(v36, v37, v40);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v38);
      }
      uint64_t v41 = v13[8];
      uint64_t v42 = &v11[v41];
      uint64_t v43 = &v12[v41];
      uint64_t v44 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v45 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v42, v43, v45);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
      }
      uint64_t v46 = v13[9];
      uint64_t v47 = &v11[v46];
      uint64_t v48 = &v12[v46];
      uint64_t v49 = type metadata accessor for WeatherDataOverrides();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v49))
      {
        uint64_t v50 = sub_10017DF08(&qword_100E63740);
        memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
      }
      else
      {
        uint64_t v51 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v48, 1, v51))
        {
          uint64_t v52 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v47, v48, *(void *)(*(void *)(v52 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v47, v48, v51);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v51);
        }
        uint64_t v83 = *(int *)(v49 + 20);
        uint64_t v84 = &v47[v83];
        int v85 = &v48[v83];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v85, 1, v51))
        {
          uint64_t v86 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v84, v85, *(void *)(*(void *)(v86 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v84, v85, v51);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v84, 0, 1, v51);
        }
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v47, 0, 1, v49);
      }
      uint64_t v87 = v6[6];
      uint64_t v88 = &a1[v87];
      size_t v89 = &a2[v87];
      uint64_t v90 = type metadata accessor for NewsDataModel();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v88, v89, *(void *)(*(void *)(v90 - 8) + 64));
      }
      else
      {
        uint64_t v91 = type metadata accessor for News();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 32))(v88, v89, v91);
        swift_storeEnumTagMultiPayload();
      }
      a1[v6[7]] = a2[v6[7]];
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, (uint64_t)v6);
      return a1;
    }
LABEL_7:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  if (v8)
  {
    sub_1001BC184((uint64_t)a1, (void (*)(void))type metadata accessor for SunriseSunsetDetailInput.Input);
    goto LABEL_7;
  }
  uint64_t v19 = type metadata accessor for Location();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v19 - 8) + 40))(a1, a2, v19);
  uint64_t v20 = v6[5];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = *(void *)&a2[v20 + 8];
  void *v21 = *(void *)&a2[v20];
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v24 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v25 = v24[5];
  uint64_t v26 = (char *)v21 + v25;
  uint64_t v27 = &v22[v25];
  uint64_t v28 = type metadata accessor for Locale();
  int v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v28);
  int v30 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v27, 1, v28);
  if (v29)
  {
    if (!v30)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v26, v27, v28);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v26, 0, 1, v28);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  uint64_t v53 = *(void *)(v28 - 8);
  if (v30)
  {
    (*(void (**)(char *, uint64_t))(v53 + 8))(v26, v28);
LABEL_24:
    uint64_t v54 = sub_10017DF08(&qword_100E63730);
    memcpy(v26, v27, *(void *)(*(void *)(v54 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v53 + 40))(v26, v27, v28);
LABEL_25:
  uint64_t v55 = v24[6];
  uint64_t v56 = (char *)v21 + v55;
  uint64_t v57 = &v22[v55];
  uint64_t v58 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 40))(v56, v57, v58);
  uint64_t v59 = v24[7];
  uint64_t v60 = (char *)v21 + v59;
  char v61 = &v22[v59];
  uint64_t v62 = sub_10017DF08(&qword_100E63738);
  int v63 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v60, 1, v62);
  int v64 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v61, 1, v62);
  if (v63)
  {
    if (!v64)
    {
      uint64_t v65 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 32))(v60, v61, v65);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v60, 0, 1, v62);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v64)
  {
    sub_1001781AC((uint64_t)v60, &qword_100E63738);
LABEL_30:
    uint64_t v66 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v60, v61, *(void *)(*(void *)(v66 - 8) + 64));
    goto LABEL_31;
  }
  uint64_t v92 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 40))(v60, v61, v92);
LABEL_31:
  if (a1 != a2)
  {
    uint64_t v67 = v24[8];
    uint64_t v68 = (char *)v21 + v67;
    uint64_t v69 = &v22[v67];
    sub_1001BC184((uint64_t)v21 + v67, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
    uint64_t v70 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v71 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 32))(v68, v69, v71);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v68, v69, *(void *)(*(void *)(v70 - 8) + 64));
    }
  }
  uint64_t v72 = v24[9];
  uint64_t v73 = (char *)v21 + v72;
  uint64_t v74 = &v22[v72];
  uint64_t v75 = type metadata accessor for WeatherDataOverrides();
  int v76 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v73, 1, v75);
  int v77 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v74, 1, v75);
  if (v76)
  {
    if (!v77)
    {
      uint64_t v78 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v74, 1, v78))
      {
        uint64_t v79 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v73, v74, *(void *)(*(void *)(v79 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 32))(v73, v74, v78);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v73, 0, 1, v78);
      }
      uint64_t v96 = *(int *)(v75 + 20);
      uint64_t v97 = &v73[v96];
      uint64_t v98 = &v74[v96];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v98, 1, v78))
      {
        uint64_t v99 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v97, v98, *(void *)(*(void *)(v99 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 32))(v97, v98, v78);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v97, 0, 1, v78);
      }
      uint64_t v100 = (uint64_t)v73;
      uint64_t v101 = v75;
      goto LABEL_62;
    }
    goto LABEL_41;
  }
  if (v77)
  {
    sub_1001BC184((uint64_t)v73, (void (*)(void))type metadata accessor for WeatherDataOverrides);
LABEL_41:
    size_t v80 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63740) - 8) + 64);
    uint64_t v81 = v73;
    uint64_t v82 = v74;
    goto LABEL_42;
  }
  uint64_t v93 = type metadata accessor for Date();
  int v94 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v73, 1, v93);
  int v95 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v74, 1, v93);
  if (!v94)
  {
    uint64_t v108 = *(void *)(v93 - 8);
    if (!v95)
    {
      (*(void (**)(char *, char *, uint64_t))(v108 + 40))(v73, v74, v93);
      goto LABEL_72;
    }
    (*(void (**)(char *, uint64_t))(v108 + 8))(v73, v93);
    goto LABEL_71;
  }
  if (v95)
  {
LABEL_71:
    uint64_t v109 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v73, v74, *(void *)(*(void *)(v109 - 8) + 64));
    goto LABEL_72;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 32))(v73, v74, v93);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v73, 0, 1, v93);
LABEL_72:
  uint64_t v110 = *(int *)(v75 + 20);
  uint64_t v111 = (uint64_t)&v73[v110];
  uint64_t v112 = (uint64_t)&v74[v110];
  int v113 = _s7Weather24LocationCompositionStateOwet_0(v111, 1, v93);
  int v114 = _s7Weather24LocationCompositionStateOwet_0(v112, 1, v93);
  if (v113)
  {
    if (!v114)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 32))(v111, v112, v93);
      uint64_t v100 = v111;
      uint64_t v101 = v93;
LABEL_62:
      _s7Weather24LocationCompositionStateOwst_0(v100, 0, 1, v101);
      goto LABEL_63;
    }
  }
  else
  {
    uint64_t v115 = *(void *)(v93 - 8);
    if (!v114)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v115 + 40))(v111, v112, v93);
      goto LABEL_63;
    }
    (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v111, v93);
  }
  size_t v80 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
  uint64_t v81 = (void *)v111;
  uint64_t v82 = (const void *)v112;
LABEL_42:
  memcpy(v81, v82, v80);
LABEL_63:
  if (a1 != a2)
  {
    uint64_t v102 = v6[6];
    uint64_t v103 = &a1[v102];
    uint64_t v104 = &a2[v102];
    sub_1001BC184((uint64_t)&a1[v102], (void (*)(void))type metadata accessor for NewsDataModel);
    uint64_t v105 = type metadata accessor for NewsDataModel();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v103, v104, *(void *)(*(void *)(v105 - 8) + 64));
    }
    else
    {
      uint64_t v106 = type metadata accessor for News();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 32))(v103, v104, v106);
      swift_storeEnumTagMultiPayload();
    }
  }
  a1[v6[7]] = a2[v6[7]];
  return a1;
}

uint64_t sub_10054DD94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10054DDA8);
}

uint64_t sub_10054DDA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SunriseSunsetDetailInput.Input(0);
  unsigned int v5 = _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_10054DDF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10054DE04);
}

uint64_t sub_10054DE04(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for SunriseSunsetDetailInput.Input(0);

  return _s7Weather24LocationCompositionStateOwst_0(a1, v5, a3, v6);
}

uint64_t sub_10054DE60(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SunriseSunsetDetailInput.Input(0);

  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
}

uint64_t sub_10054DEA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SunriseSunsetDetailInput.Input(0);

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v4);
}

uint64_t type metadata accessor for SunriseSunsetDetailInput(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E7F390);
}

uint64_t sub_10054DF10()
{
  uint64_t result = type metadata accessor for SunriseSunsetDetailInput.Input(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void *sub_10054DF88(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return a1;
  }
  uint64_t v7 = type metadata accessor for Location();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
  uint64_t v8 = a3[5];
  uint64_t v9 = (void *)((char *)a1 + v8);
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = *(void *)((char *)a2 + v8 + 8);
  *uint64_t v9 = *(void *)((char *)a2 + v8);
  v9[1] = v11;
  uint64_t v12 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v13 = v12[5];
  uint64_t v14 = (char *)v9 + v13;
  uint64_t v15 = &v10[v13];
  uint64_t v16 = type metadata accessor for Locale();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
  {
    uint64_t v17 = sub_10017DF08(&qword_100E63730);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
  }
  uint64_t v19 = v12[6];
  uint64_t v20 = (char *)v9 + v19;
  uint64_t v21 = &v10[v19];
  uint64_t v22 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
  uint64_t v23 = v12[7];
  uint64_t v24 = (char *)v9 + v23;
  uint64_t v25 = &v10[v23];
  uint64_t v26 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26))
  {
    uint64_t v27 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v24, v25, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    uint64_t v28 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16))(v24, v25, v28);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
  }
  uint64_t v29 = v12[8];
  int v30 = (void *)((char *)v9 + v29);
  uint64_t v31 = &v10[v29];
  uint64_t v32 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v35 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v30, v31, v35);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
      goto LABEL_15;
    }
    uint64_t v34 = *((void *)v31 + 1);
    void *v30 = *(void *)v31;
    v30[1] = v34;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
LABEL_15:
  uint64_t v36 = v12[9];
  uint64_t v37 = (char *)v9 + v36;
  uint64_t v38 = &v10[v36];
  uint64_t v39 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v39))
  {
    uint64_t v40 = sub_10017DF08(&qword_100E63740);
    memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    uint64_t v41 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v41))
    {
      uint64_t v42 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v37, v38, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v37, v38, v41);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v41);
    }
    uint64_t v43 = *(int *)(v39 + 20);
    uint64_t v44 = &v37[v43];
    uint64_t v45 = &v38[v43];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v45, 1, v41))
    {
      uint64_t v46 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v44, v45, v41);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v44, 0, 1, v41);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v37, 0, 1, v39);
  }
  uint64_t v47 = a3[6];
  uint64_t v48 = (void *)((char *)a1 + v47);
  uint64_t v49 = (void *)((char *)a2 + v47);
  type metadata accessor for NewsDataModel();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    void *v48 = *v49;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v50 = type metadata accessor for News();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
  }
  swift_storeEnumTagMultiPayload();
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

uint64_t sub_10054E51C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  uint64_t v6 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v7 = v5 + v6[5];
  uint64_t v8 = type metadata accessor for Locale();
  if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  uint64_t v9 = v5 + v6[6];
  uint64_t v10 = type metadata accessor for WeatherDataModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = v5 + v6[7];
  uint64_t v12 = sub_10017DF08(&qword_100E63738);
  if (!_s7Weather24LocationCompositionStateOwet_0(v11, 1, v12))
  {
    uint64_t v13 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v11, v13);
  }
  uint64_t v14 = v5 + v6[8];
  type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v16 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v14, v16);
  }
  else if (!EnumCaseMultiPayload)
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v17 = v5 + v6[9];
  uint64_t v18 = type metadata accessor for WeatherDataOverrides();
  if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, v18))
  {
    uint64_t v19 = type metadata accessor for Date();
    if (!_s7Weather24LocationCompositionStateOwet_0(v17, 1, v19)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v17, v19);
    }
    uint64_t v20 = v17 + *(int *)(v18 + 20);
    if (!_s7Weather24LocationCompositionStateOwet_0(v20, 1, v19)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v20, v19);
    }
  }
  uint64_t v21 = a1 + *(int *)(a2 + 24);
  type metadata accessor for NewsDataModel();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = type metadata accessor for News();
    uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8);
    return v24(v21, v23);
  }
}

uint64_t sub_10054E85C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  uint64_t v11 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = (char *)v8 + v12;
  uint64_t v14 = (const void *)(v9 + v12);
  uint64_t v15 = type metadata accessor for Locale();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
  {
    uint64_t v16 = sub_10017DF08(&qword_100E63730);
    memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
  }
  uint64_t v17 = v11[6];
  uint64_t v18 = (char *)v8 + v17;
  uint64_t v19 = v9 + v17;
  uint64_t v20 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
  uint64_t v21 = v11[7];
  uint64_t v22 = (char *)v8 + v21;
  uint64_t v23 = (const void *)(v9 + v21);
  uint64_t v24 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v24))
  {
    uint64_t v25 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    uint64_t v26 = type metadata accessor for Date();
    (*(void (**)(char *, const void *, uint64_t))(*(void *)(v26 - 8) + 16))(v22, v23, v26);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v24);
  }
  uint64_t v27 = v11[8];
  uint64_t v28 = (void *)((char *)v8 + v27);
  uint64_t v29 = (void *)(v9 + v27);
  uint64_t v30 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v33 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 16))(v28, v29, v33);
    goto LABEL_11;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v32 = v29[1];
    *uint64_t v28 = *v29;
    v28[1] = v32;
    swift_bridgeObjectRetain();
LABEL_11:
    swift_storeEnumTagMultiPayload();
    goto LABEL_13;
  }
  memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
LABEL_13:
  uint64_t v34 = v11[9];
  uint64_t v35 = (char *)v8 + v34;
  uint64_t v36 = (char *)(v9 + v34);
  uint64_t v37 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37))
  {
    uint64_t v38 = sub_10017DF08(&qword_100E63740);
    memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
  }
  else
  {
    uint64_t v39 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v39))
    {
      uint64_t v40 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v35, v36, *(void *)(*(void *)(v40 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v35, v36, v39);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v39);
    }
    uint64_t v41 = *(int *)(v37 + 20);
    uint64_t v42 = &v35[v41];
    uint64_t v43 = &v36[v41];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v39))
    {
      uint64_t v44 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v42, v43, v39);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v42, 0, 1, v39);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v37);
  }
  uint64_t v45 = a3[6];
  uint64_t v46 = (void *)(a1 + v45);
  uint64_t v47 = (void *)(a2 + v45);
  type metadata accessor for NewsDataModel();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    void *v46 = *v47;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v48 = type metadata accessor for News();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v48 - 8) + 16))(v46, v47, v48);
  }
  swift_storeEnumTagMultiPayload();
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_10054EDA0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = *(void *)(a2 + v7 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = (char *)v8 + v11;
  uint64_t v13 = (const void *)(v9 + v11);
  uint64_t v14 = type metadata accessor for Locale();
  int v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v14);
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v17 = *(void *)(v14 - 8);
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v12, v14);
LABEL_6:
    uint64_t v18 = sub_10017DF08(&qword_100E63730);
    memcpy(v12, v13, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, const void *, uint64_t))(v17 + 24))(v12, v13, v14);
LABEL_7:
  uint64_t v19 = v10[6];
  uint64_t v20 = (char *)v8 + v19;
  uint64_t v21 = v9 + v19;
  uint64_t v22 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = v10[7];
  uint64_t v24 = (char *)v8 + v23;
  uint64_t v25 = (const void *)(v9 + v23);
  uint64_t v26 = sub_10017DF08(&qword_100E63738);
  int v27 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v26);
  int v28 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v26);
  if (v27)
  {
    if (!v28)
    {
      uint64_t v29 = type metadata accessor for Date();
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v29 - 8) + 16))(v24, v25, v29);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v24, 0, 1, v26);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v28)
  {
    sub_1001781AC((uint64_t)v24, &qword_100E63738);
LABEL_12:
    uint64_t v30 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v24, v25, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v48 = type metadata accessor for Date();
  (*(void (**)(char *, const void *, uint64_t))(*(void *)(v48 - 8) + 24))(v24, v25, v48);
LABEL_13:
  if (a1 == a2) {
    goto LABEL_20;
  }
  uint64_t v31 = v10[8];
  uint64_t v32 = (void *)((char *)v8 + v31);
  uint64_t v33 = (void *)(v9 + v31);
  sub_1001BC184((uint64_t)v8 + v31, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
  uint64_t v34 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v36 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 16))(v32, v33, v36);
    goto LABEL_18;
  }
  if (!EnumCaseMultiPayload)
  {
    *uint64_t v32 = *v33;
    v32[1] = v33[1];
    swift_bridgeObjectRetain();
LABEL_18:
    swift_storeEnumTagMultiPayload();
    goto LABEL_20;
  }
  memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
LABEL_20:
  uint64_t v37 = v10[9];
  uint64_t v38 = (char *)v8 + v37;
  uint64_t v39 = (char *)(v9 + v37);
  uint64_t v40 = type metadata accessor for WeatherDataOverrides();
  int v41 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v40);
  int v42 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40);
  if (v41)
  {
    if (!v42)
    {
      uint64_t v43 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v43))
      {
        uint64_t v44 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v38, v39, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v38, v39, v43);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v43);
      }
      uint64_t v52 = *(int *)(v40 + 20);
      uint64_t v53 = &v38[v52];
      uint64_t v54 = &v39[v52];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v43))
      {
        uint64_t v55 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v53, v54, v43);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v43);
      }
      uint64_t v56 = (uint64_t)v38;
      uint64_t v57 = v40;
      goto LABEL_38;
    }
    goto LABEL_26;
  }
  if (v42)
  {
    sub_1001BC184((uint64_t)v38, (void (*)(void))type metadata accessor for WeatherDataOverrides);
LABEL_26:
    size_t v45 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63740) - 8) + 64);
    uint64_t v46 = v38;
    uint64_t v47 = v39;
LABEL_27:
    memcpy(v46, v47, v45);
    goto LABEL_39;
  }
  uint64_t v49 = type metadata accessor for Date();
  int v50 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v49);
  int v51 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v49);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v38, v39, v49);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v49);
      goto LABEL_48;
    }
    goto LABEL_47;
  }
  uint64_t v63 = *(void *)(v49 - 8);
  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v63 + 8))(v38, v49);
LABEL_47:
    uint64_t v64 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v38, v39, *(void *)(*(void *)(v64 - 8) + 64));
    goto LABEL_48;
  }
  (*(void (**)(char *, char *, uint64_t))(v63 + 24))(v38, v39, v49);
LABEL_48:
  uint64_t v65 = *(int *)(v40 + 20);
  uint64_t v66 = (uint64_t)&v38[v65];
  uint64_t v67 = (uint64_t)&v39[v65];
  int v68 = _s7Weather24LocationCompositionStateOwet_0(v66, 1, v49);
  int v69 = _s7Weather24LocationCompositionStateOwet_0(v67, 1, v49);
  if (v68)
  {
    if (!v69)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16))(v66, v67, v49);
      uint64_t v56 = v66;
      uint64_t v57 = v49;
LABEL_38:
      _s7Weather24LocationCompositionStateOwst_0(v56, 0, 1, v57);
      goto LABEL_39;
    }
    goto LABEL_53;
  }
  uint64_t v70 = *(void *)(v49 - 8);
  if (v69)
  {
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v66, v49);
LABEL_53:
    size_t v45 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
    uint64_t v46 = (void *)v66;
    uint64_t v47 = (const void *)v67;
    goto LABEL_27;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v70 + 24))(v66, v67, v49);
LABEL_39:
  if (a1 != a2)
  {
    uint64_t v58 = a3[6];
    uint64_t v59 = (void *)(a1 + v58);
    uint64_t v60 = (void *)(a2 + v58);
    sub_1001BC184(a1 + v58, (void (*)(void))type metadata accessor for NewsDataModel);
    type metadata accessor for NewsDataModel();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v59 = *v60;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v61 = type metadata accessor for News();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v61 - 8) + 16))(v59, v60, v61);
    }
    swift_storeEnumTagMultiPayload();
  }
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_10054F694(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v10 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v11 = v10[5];
  uint64_t v12 = (void *)(v8 + v11);
  uint64_t v13 = (const void *)(v9 + v11);
  uint64_t v14 = type metadata accessor for Locale();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = sub_10017DF08(&qword_100E63730);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
  }
  uint64_t v16 = v10[6];
  uint64_t v17 = v8 + v16;
  uint64_t v18 = v9 + v16;
  uint64_t v19 = type metadata accessor for WeatherDataModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
  uint64_t v20 = v10[7];
  uint64_t v21 = (void *)(v8 + v20);
  uint64_t v22 = (const void *)(v9 + v20);
  uint64_t v23 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v23))
  {
    uint64_t v24 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    uint64_t v25 = type metadata accessor for Date();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v25 - 8) + 32))(v21, v22, v25);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, v23);
  }
  uint64_t v26 = v10[8];
  int v27 = (void *)(v8 + v26);
  int v28 = (const void *)(v9 + v26);
  uint64_t v29 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v30 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v30 - 8) + 32))(v27, v28, v30);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  uint64_t v31 = v10[9];
  uint64_t v32 = (char *)(v8 + v31);
  uint64_t v33 = (char *)(v9 + v31);
  uint64_t v34 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v34))
  {
    uint64_t v35 = sub_10017DF08(&qword_100E63740);
    memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
  }
  else
  {
    uint64_t v36 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v33, 1, v36))
    {
      uint64_t v37 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v32, v33, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v32, v33, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v36);
    }
    uint64_t v38 = *(int *)(v34 + 20);
    uint64_t v39 = &v32[v38];
    uint64_t v40 = &v33[v38];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v36))
    {
      uint64_t v41 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v39, v40, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 32))(v39, v40, v36);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v39, 0, 1, v36);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v32, 0, 1, v34);
  }
  uint64_t v42 = a3[6];
  uint64_t v43 = (void *)(a1 + v42);
  uint64_t v44 = (const void *)(a2 + v42);
  uint64_t v45 = type metadata accessor for NewsDataModel();
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v43, v44, *(void *)(*(void *)(v45 - 8) + 64));
  }
  else
  {
    uint64_t v46 = type metadata accessor for News();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v46 - 8) + 32))(v43, v44, v46);
    swift_storeEnumTagMultiPayload();
  }
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_10054FBB4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(a2 + v7 + 8);
  *uint64_t v8 = *(void *)(a2 + v7);
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = (int *)type metadata accessor for WeatherData(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = (char *)v8 + v12;
  uint64_t v14 = (const void *)(v9 + v12);
  uint64_t v15 = type metadata accessor for Locale();
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15);
  int v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v18 = *(void *)(v15 - 8);
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v15);
LABEL_6:
    uint64_t v19 = sub_10017DF08(&qword_100E63730);
    memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, const void *, uint64_t))(v18 + 40))(v13, v14, v15);
LABEL_7:
  uint64_t v20 = v11[6];
  uint64_t v21 = (char *)v8 + v20;
  uint64_t v22 = v9 + v20;
  uint64_t v23 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 40))(v21, v22, v23);
  uint64_t v24 = v11[7];
  uint64_t v25 = (char *)v8 + v24;
  uint64_t v26 = (const void *)(v9 + v24);
  uint64_t v27 = sub_10017DF08(&qword_100E63738);
  int v28 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v25, 1, v27);
  int v29 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v26, 1, v27);
  if (v28)
  {
    if (!v29)
    {
      uint64_t v30 = type metadata accessor for Date();
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v30 - 8) + 32))(v25, v26, v30);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v25, 0, 1, v27);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v29)
  {
    sub_1001781AC((uint64_t)v25, &qword_100E63738);
LABEL_12:
    uint64_t v31 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v25, v26, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_13;
  }
  uint64_t v48 = type metadata accessor for Date();
  (*(void (**)(char *, const void *, uint64_t))(*(void *)(v48 - 8) + 40))(v25, v26, v48);
LABEL_13:
  if (a1 != a2)
  {
    uint64_t v32 = v11[8];
    uint64_t v33 = (char *)v8 + v32;
    uint64_t v34 = (const void *)(v9 + v32);
    sub_1001BC184((uint64_t)v8 + v32, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
    uint64_t v35 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v36 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(char *, const void *, uint64_t))(*(void *)(v36 - 8) + 32))(v33, v34, v36);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v33, v34, *(void *)(*(void *)(v35 - 8) + 64));
    }
  }
  uint64_t v37 = v11[9];
  uint64_t v38 = (char *)v8 + v37;
  uint64_t v39 = (char *)(v9 + v37);
  uint64_t v40 = type metadata accessor for WeatherDataOverrides();
  int v41 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v40);
  int v42 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40);
  if (v41)
  {
    if (!v42)
    {
      uint64_t v43 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v43))
      {
        uint64_t v44 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v38, v39, *(void *)(*(void *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v38, v39, v43);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v43);
      }
      uint64_t v52 = *(int *)(v40 + 20);
      uint64_t v53 = &v38[v52];
      uint64_t v54 = &v39[v52];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v54, 1, v43))
      {
        uint64_t v55 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v53, v54, *(void *)(*(void *)(v55 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v53, v54, v43);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v53, 0, 1, v43);
      }
      uint64_t v56 = (uint64_t)v38;
      uint64_t v57 = v40;
      goto LABEL_35;
    }
    goto LABEL_23;
  }
  if (v42)
  {
    sub_1001BC184((uint64_t)v38, (void (*)(void))type metadata accessor for WeatherDataOverrides);
LABEL_23:
    size_t v45 = *(void *)(*(void *)(sub_10017DF08(&qword_100E63740) - 8) + 64);
    uint64_t v46 = v38;
    uint64_t v47 = v39;
LABEL_24:
    memcpy(v46, v47, v45);
    goto LABEL_36;
  }
  uint64_t v49 = type metadata accessor for Date();
  int v50 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v38, 1, v49);
  int v51 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v49);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v38, v39, v49);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v49);
      goto LABEL_44;
    }
    goto LABEL_43;
  }
  uint64_t v64 = *(void *)(v49 - 8);
  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v64 + 8))(v38, v49);
LABEL_43:
    uint64_t v65 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v38, v39, *(void *)(*(void *)(v65 - 8) + 64));
    goto LABEL_44;
  }
  (*(void (**)(char *, char *, uint64_t))(v64 + 40))(v38, v39, v49);
LABEL_44:
  uint64_t v66 = *(int *)(v40 + 20);
  uint64_t v67 = (uint64_t)&v38[v66];
  uint64_t v68 = (uint64_t)&v39[v66];
  int v69 = _s7Weather24LocationCompositionStateOwet_0(v67, 1, v49);
  int v70 = _s7Weather24LocationCompositionStateOwet_0(v68, 1, v49);
  if (v69)
  {
    if (!v70)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 32))(v67, v68, v49);
      uint64_t v56 = v67;
      uint64_t v57 = v49;
LABEL_35:
      _s7Weather24LocationCompositionStateOwst_0(v56, 0, 1, v57);
      goto LABEL_36;
    }
    goto LABEL_49;
  }
  uint64_t v71 = *(void *)(v49 - 8);
  if (v70)
  {
    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v67, v49);
LABEL_49:
    size_t v45 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
    uint64_t v46 = (void *)v67;
    uint64_t v47 = (const void *)v68;
    goto LABEL_24;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 40))(v67, v68, v49);
LABEL_36:
  if (a1 != a2)
  {
    uint64_t v58 = a3[6];
    uint64_t v59 = (void *)(a1 + v58);
    uint64_t v60 = (const void *)(a2 + v58);
    sub_1001BC184(a1 + v58, (void (*)(void))type metadata accessor for NewsDataModel);
    uint64_t v61 = type metadata accessor for NewsDataModel();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v59, v60, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      uint64_t v62 = type metadata accessor for News();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v62 - 8) + 32))(v59, v60, v62);
      swift_storeEnumTagMultiPayload();
    }
  }
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_100550474(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100550488);
}

uint64_t sub_100550488(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for Location();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    type metadata accessor for WeatherData(0);
    sub_100162F30();
    if (*(_DWORD *)(v11 + 84) == a2)
    {
      uint64_t v8 = v10;
      uint64_t v12 = a3[5];
    }
    else
    {
      type metadata accessor for NewsDataModel();
      sub_100162F30();
      if (*(_DWORD *)(v14 + 84) != a2)
      {
        unsigned int v16 = *(unsigned __int8 *)(a1 + a3[7]);
        if (v16 >= 2) {
          return ((v16 + 2147483646) & 0x7FFFFFFF) + 1;
        }
        else {
          return 0;
        }
      }
      uint64_t v8 = v13;
      uint64_t v12 = a3[6];
    }
    uint64_t v9 = a1 + v12;
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_100550570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100550584);
}

void sub_100550584(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  type metadata accessor for Location();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    type metadata accessor for WeatherData(0);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      type metadata accessor for NewsDataModel();
      sub_100162F30();
      if (*(_DWORD *)(v16 + 84) != a3)
      {
        *(unsigned char *)(a1 + a4[7]) = a2 + 1;
        return;
      }
      uint64_t v10 = v15;
      uint64_t v14 = a4[6];
    }
    uint64_t v11 = a1 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t sub_100550658()
{
  uint64_t result = type metadata accessor for Location();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for WeatherData(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for NewsDataModel();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_100550764(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1005507C4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t *sub_100550824(uint64_t *a1, unsigned __int8 *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *(char **)a2;
    *a1 = *(void *)a2;
    a1 = (uint64_t *)&v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v7 = type metadata accessor for AppConfiguration();
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        goto LABEL_216;
      case 2u:
        uint64_t v16 = type metadata accessor for EnvironmentAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v27 = type metadata accessor for Locale();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
            goto LABEL_215;
          case 3u:
            uint64_t v35 = type metadata accessor for ActivityAction();
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 1)
            {
              type metadata accessor for PreviewLocation();
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  uint64_t v212 = type metadata accessor for LocationOfInterest();
                  (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v212 - 8) + 16))(a1, a2, v212);
                  break;
                case 2u:
                  uint64_t v213 = *((void *)a2 + 1);
                  v399 = *(void **)a2;
                  *a1 = *(void *)a2;
                  a1[1] = v213;
                  uint64_t v214 = *((void *)a2 + 3);
                  a1[2] = *((void *)a2 + 2);
                  a1[3] = v214;
                  uint64_t v215 = *((void *)a2 + 5);
                  a1[4] = *((void *)a2 + 4);
                  a1[5] = v215;
                  a1[6] = *((void *)a2 + 6);
                  uint64_t v216 = type metadata accessor for SearchLocation();
                  uint64_t v217 = *(int *)(v216 + 32);
                  v403 = (char *)a1 + v217;
                  uint64_t v408 = v216;
                  uint64_t v218 = &a2[v217];
                  uint64_t v396 = type metadata accessor for Location();
                  id v219 = v399;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v218, 1, v396))
                  {
                    uint64_t v220 = sub_10017DF08(&qword_100E639E8);
                    memcpy(v403, v218, *(void *)(*(void *)(v220 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v396 - 8) + 16))(v403, v218, v396);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v403, 0, 1, v396);
                  }
                  uint64_t v369 = *(int *)(v408 + 36);
                  v370 = (char *)a1 + v369;
                  v371 = &a2[v369];
                  *(_OWORD *)v370 = *(_OWORD *)v371;
                  v370[16] = v371[16];
                  break;
                case 3u:
                  *(_OWORD *)a1 = *(_OWORD *)a2;
                  uint64_t v221 = *((void *)a2 + 3);
                  a1[2] = *((void *)a2 + 2);
                  a1[3] = v221;
                  swift_bridgeObjectRetain();
                  break;
                default:
                  uint64_t v150 = type metadata accessor for Location();
                  (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v150 - 8) + 16))(a1, a2, v150);
                  break;
              }
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              if (EnumCaseMultiPayload) {
                goto LABEL_101;
              }
              type metadata accessor for SavedLocation();
              if (swift_getEnumCaseMultiPayload() == 1) {
                uint64_t v95 = type metadata accessor for SavedLocation.Placeholder();
              }
              else {
                uint64_t v95 = type metadata accessor for Location();
              }
              (*(void (**)(uint64_t *, unsigned __int8 *))(*(void *)(v95 - 8) + 16))(a1, a2);
              swift_storeEnumTagMultiPayload();
            }
            goto LABEL_214;
          case 4u:
            uint64_t v85 = *((void *)a2 + 1);
            *a1 = *(void *)a2;
            a1[1] = v85;
            swift_bridgeObjectRetain();
            goto LABEL_215;
          case 9u:
            unint64_t v96 = *((void *)a2 + 1);
            if (v96 >= 2)
            {
              *a1 = *(void *)a2;
              a1[1] = v96;
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)a1 = *(_OWORD *)a2;
            }
            goto LABEL_215;
          case 0xBu:
            uint64_t v35 = type metadata accessor for ConfiguredUnitsAction();
            int v97 = swift_getEnumCaseMultiPayload();
            if (v97 == 1)
            {
              uint64_t v151 = type metadata accessor for UnitConfiguration.Temperature();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v151))
              {
                uint64_t v152 = sub_10017DF08(&qword_100E6F620);
                memcpy(a1, a2, *(void *)(*(void *)(v152 - 8) + 64));
              }
              else
              {
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v151 - 8) + 16))(a1, a2, v151);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v151);
              }
            }
            else
            {
              if (v97) {
                goto LABEL_101;
              }
              uint64_t v98 = type metadata accessor for ConfiguredUnit();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v98 - 8) + 16))(a1, a2, v98);
            }
            break;
          default:
            goto LABEL_61;
        }
        goto LABEL_214;
      case 3u:
        uint64_t v9 = type metadata accessor for LocationsAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v10 = type metadata accessor for CurrentLocation();
            if (swift_getEnumCaseMultiPayload() > 2)
            {
              memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
            }
            else
            {
              uint64_t v172 = type metadata accessor for Location();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v172 - 8) + 16))(a1, a2, v172);
              swift_storeEnumTagMultiPayload();
            }
            goto LABEL_142;
          case 1u:
            uint64_t v78 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v78 - 8) + 16))(a1, a2, v78);
            uint64_t v79 = sub_10017DF08(&qword_100E6F628);
            *((unsigned char *)a1 + *(int *)(v79 + 48)) = a2[*(int *)(v79 + 48)];
            goto LABEL_142;
          case 2u:
            uint64_t v80 = *(void *)a2;
            uint64_t v81 = *((void *)a2 + 1);
            *a1 = v80;
            a1[1] = v81;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_142;
          case 5u:
            *a1 = *(void *)a2;
            swift_bridgeObjectRetain();
            goto LABEL_142;
          case 6u:
            uint64_t v86 = *(void *)a2;
            uint64_t v87 = *((void *)a2 + 1);
            unsigned __int8 v88 = a2[16];
            sub_10015458C(v86, v87, v88);
            *a1 = v86;
            a1[1] = v87;
            *((unsigned char *)a1 + 16) = v88;
LABEL_142:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
            break;
        }
        goto LABEL_216;
      case 4u:
        uint64_t v28 = type metadata accessor for NotificationsAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v29 = type metadata accessor for LocationModel();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v29))
            {
              uint64_t v30 = type metadata accessor for NotificationLocation();
              memcpy(a1, a2, *(void *)(*(void *)(v30 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v29 - 8) + 16))(a1, a2, v29);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v29);
            }
            uint64_t v144 = *(int *)(sub_10017DF08((uint64_t *)&unk_100EAC3E0) + 48);
            uint64_t v145 = (char *)a1 + v144;
            uint64_t v146 = &a2[v144];
            uint64_t v147 = type metadata accessor for URL();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v146, 1, v147))
            {
              uint64_t v148 = sub_10017DF08(&qword_100E749B0);
              memcpy(v145, v146, *(void *)(*(void *)(v148 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v147 - 8) + 16))(v145, v146, v147);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v145, 0, 1, v147);
            }
            goto LABEL_119;
          case 2u:
            uint64_t v99 = type metadata accessor for NotificationSubscription.Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v99 - 8) + 16))(a1, a2, v99);
            uint64_t v100 = *(int *)(sub_10017DF08(&qword_100E6F630) + 48);
            uint64_t v101 = (char *)a1 + v100;
            uint64_t v102 = &a2[v100];
            uint64_t v103 = type metadata accessor for NotificationSubscription.Kind();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v103 - 8) + 16))(v101, v102, v103);
            goto LABEL_119;
          case 3u:
          case 4u:
            *a1 = *(void *)a2;
            swift_bridgeObjectRetain();
            goto LABEL_119;
          case 5u:
            uint64_t v104 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v104 - 8) + 16))(a1, a2, v104);
            uint64_t v105 = *(int *)(sub_10017DF08(&qword_100E6F638) + 48);
            uint64_t v106 = (char *)a1 + v105;
            uint64_t v107 = &a2[v105];
            uint64_t v108 = type metadata accessor for NotificationSubscription.Kind();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v108 - 8) + 16))(v106, v107, v108);
LABEL_119:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v28 - 8) + 64));
            break;
        }
        goto LABEL_216;
      case 5u:
        uint64_t v16 = type metadata accessor for NotificationsOptInAction();
        int v31 = swift_getEnumCaseMultiPayload();
        switch(v31)
        {
          case 4:
            goto LABEL_15;
          case 3:
            *a1 = *(void *)a2;
            *((unsigned char *)a1 + 8) = a2[8];
            swift_bridgeObjectRetain();
            break;
          case 2:
            uint64_t v32 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v32 - 8) + 16))(a1, a2, v32);
            uint64_t v33 = sub_10017DF08(&qword_100E6BBD8);
            *((unsigned char *)a1 + *(int *)(v33 + 48)) = a2[*(int *)(v33 + 48)];
            break;
          default:
            goto LABEL_61;
        }
        goto LABEL_215;
      case 6u:
        uint64_t v11 = type metadata accessor for ViewAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v12 = type metadata accessor for ListViewAction();
            int v13 = swift_getEnumCaseMultiPayload();
            if (v13 == 2) {
              goto LABEL_121;
            }
            if (v13) {
              goto LABEL_168;
            }
            uint64_t v14 = type metadata accessor for LocationModel();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
            uint64_t v15 = sub_10017DF08(&qword_100E6F640);
            *((unsigned char *)a1 + *(int *)(v15 + 48)) = a2[*(int *)(v15 + 48)];
            goto LABEL_208;
          case 1u:
            uint64_t v12 = type metadata accessor for LocationViewerViewAction();
            int v82 = swift_getEnumCaseMultiPayload();
            if (v82 == 2)
            {
LABEL_121:
              uint64_t v149 = type metadata accessor for Location.Identifier();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v149 - 8) + 16))(a1, a2, v149);
            }
            else if (v82 == 1)
            {
              uint64_t v173 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v173 - 8) + 16))(a1, a2, v173);
            }
            else
            {
              if (v82)
              {
LABEL_168:
                memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
                goto LABEL_209;
              }
              uint64_t v83 = type metadata accessor for LocationModel();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v83 - 8) + 16))(a1, a2, v83);
            }
LABEL_208:
            swift_storeEnumTagMultiPayload();
LABEL_209:
            swift_storeEnumTagMultiPayload();
            break;
          case 3u:
            uint64_t v12 = type metadata accessor for SearchViewAction();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                uint64_t v84 = type metadata accessor for CodableError();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v84 - 8) + 16))(a1, a2, v84);
                goto LABEL_208;
              case 1u:
                *a1 = *(void *)a2;
                swift_bridgeObjectRetain();
                goto LABEL_208;
              case 2u:
                uint64_t v200 = *((void *)a2 + 1);
                *a1 = *(void *)a2;
                a1[1] = v200;
                swift_bridgeObjectRetain();
                goto LABEL_208;
              case 3u:
              case 6u:
                uint64_t v201 = type metadata accessor for Location();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v201 - 8) + 16))(a1, a2, v201);
                goto LABEL_208;
              case 4u:
                uint64_t v202 = type metadata accessor for LocationOfInterest();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v202 - 8) + 16))(a1, a2, v202);
                goto LABEL_208;
              case 5u:
                uint64_t v204 = *(void **)a2;
                uint64_t v203 = *((void *)a2 + 1);
                *a1 = *(void *)a2;
                a1[1] = v203;
                uint64_t v205 = *((void *)a2 + 3);
                a1[2] = *((void *)a2 + 2);
                a1[3] = v205;
                uint64_t v206 = *((void *)a2 + 5);
                a1[4] = *((void *)a2 + 4);
                a1[5] = v206;
                a1[6] = *((void *)a2 + 6);
                uint64_t v207 = type metadata accessor for SearchLocation();
                uint64_t v208 = *(int *)(v207 + 32);
                v402 = (char *)a1 + v208;
                uint64_t v407 = v207;
                v398 = &a2[v208];
                uint64_t v209 = type metadata accessor for Location();
                id v210 = v204;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v398, 1, v209))
                {
                  uint64_t v211 = sub_10017DF08(&qword_100E639E8);
                  memcpy(v402, v398, *(void *)(*(void *)(v211 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v209 - 8) + 16))(v402, v398, v209);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v402, 0, 1, v209);
                }
                uint64_t v366 = *(int *)(v407 + 36);
                v367 = (char *)a1 + v366;
                v368 = &a2[v366];
                *(_OWORD *)v367 = *(_OWORD *)v368;
                v367[16] = v368[16];
                goto LABEL_208;
              default:
                goto LABEL_168;
            }
          case 4u:
            uint64_t v89 = type metadata accessor for InteractiveMapViewAction();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
              case 1u:
              case 2u:
              case 4u:
                uint64_t v199 = type metadata accessor for Location();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v199 - 8) + 16))(a1, a2, v199);
                goto LABEL_164;
              case 3u:
                uint64_t v198 = type metadata accessor for WeatherMapOverlayKind();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v198 - 8) + 16))(a1, a2, v198);
LABEL_164:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(a1, a2, *(void *)(*(void *)(v89 - 8) + 64));
                break;
            }
            goto LABEL_209;
          case 5u:
            *(_OWORD *)a1 = *(_OWORD *)a2;
            *((unsigned char *)a1 + 16) = a2[16];
            *((unsigned char *)a1 + 17) = a2[17];
            *((unsigned char *)a1 + 18) = a2[18];
            uint64_t v90 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
            uint64_t v91 = (char *)a1 + v90;
            uint64_t v92 = &a2[v90];
            uint64_t v93 = type metadata accessor for DynamicTypeSize();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v93 - 8) + 16))(v91, v92, v93);
            goto LABEL_209;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
            goto LABEL_216;
        }
        goto LABEL_216;
      case 7u:
        uint64_t v16 = type metadata accessor for ModalViewAction();
        int v34 = swift_getEnumCaseMultiPayload();
        if (v34 == 3)
        {
          uint64_t v45 = *(void *)a2;
          if ((~*(void *)a2 & 0xF000000000000006) != 0)
          {
            uint64_t v109 = *((void *)a2 + 1);
            uint64_t v110 = *((void *)a2 + 2);
            uint64_t v111 = *((void *)a2 + 3);
            uint64_t v112 = *((void *)a2 + 4);
            uint64_t v113 = *((void *)a2 + 7);
            uint64_t v390 = *((void *)a2 + 5);
            uint64_t v394 = *((void *)a2 + 8);
            uint64_t v397 = *((void *)a2 + 9);
            uint64_t v401 = *((void *)a2 + 10);
            uint64_t v406 = *((void *)a2 + 11);
            uint64_t v114 = *((void *)a2 + 6);
            sub_100274EDC(v45);
            *a1 = v45;
            a1[1] = v109;
            a1[2] = v110;
            a1[3] = v111;
            a1[4] = v112;
            a1[5] = v390;
            a1[6] = v114;
            a1[7] = v113;
            a1[8] = v394;
            a1[9] = v397;
            a1[10] = v401;
            a1[11] = v406;
          }
          else
          {
            memcpy(a1, a2, 0x60uLL);
          }
        }
        else
        {
          if (v34) {
            goto LABEL_61;
          }
          uint64_t v35 = type metadata accessor for LocationPreviewViewAction();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v36 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v36 - 8) + 16))(a1, a2, v36);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
LABEL_101:
            memcpy(a1, a2, *(void *)(*(void *)(v35 - 8) + 64));
          }
        }
        goto LABEL_215;
      case 8u:
        uint64_t v16 = type metadata accessor for LocationViewAction();
        int v37 = swift_getEnumCaseMultiPayload();
        if (v37 == 2)
        {
          uint64_t v56 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v56 - 8) + 16))(a1, a2, v56);
          uint64_t v57 = *(int *)(sub_10017DF08(&qword_100E66450) + 48);
          uint64_t v58 = (char *)a1 + v57;
          uint64_t v59 = &a2[v57];
          uint64_t v60 = type metadata accessor for LocationOfInterest();
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v60 - 8) + 16))(v58, v59, v60);
          uint64_t v61 = *(int *)(sub_10017DF08(&qword_100E66448) + 48);
          uint64_t v62 = (char *)a1 + v61;
          uint64_t v63 = &a2[v61];
          long long v64 = *((_OWORD *)v63 + 1);
          *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
          *((_OWORD *)v62 + 1) = v64;
          v62[32] = v63[32];
        }
        else if (v37 == 1)
        {
          uint64_t v65 = type metadata accessor for LocationComponentAction(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v66 = type metadata accessor for URL();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v66 - 8) + 16))(a1, a2, v66);
              uint64_t v67 = sub_10017DF08(&qword_100E66478);
              *((unsigned char *)a1 + *(int *)(v67 + 48)) = a2[*(int *)(v67 + 48)];
              goto LABEL_133;
            case 1u:
              uint64_t v153 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v153 - 8) + 16))(a1, a2, v153);
              goto LABEL_133;
            case 2u:
              uint64_t v154 = type metadata accessor for DetailCondition();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v154 - 8) + 16))(a1, a2, v154);
              uint64_t v155 = sub_10017DF08(&qword_100E66488);
              *((unsigned char *)a1 + *(int *)(v155 + 48)) = a2[*(int *)(v155 + 48)];
              goto LABEL_133;
            case 4u:
              *(unsigned char *)a1 = *a2;
              uint64_t v156 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
              uint64_t v157 = (char *)a1 + v156;
              int v158 = &a2[v156];
              uint64_t v159 = type metadata accessor for Location();
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v159 - 8) + 16))(v157, v158, v159);
LABEL_133:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(void *)(*(void *)(v65 - 8) + 64));
              break;
          }
          uint64_t v160 = sub_10017DF08(&qword_100E66458);
          uint64_t v161 = *(int *)(v160 + 48);
          uint64_t v162 = (char *)a1 + v161;
          uint64_t v163 = &a2[v161];
          long long v164 = *((_OWORD *)v163 + 1);
          *(_OWORD *)uint64_t v162 = *(_OWORD *)v163;
          *((_OWORD *)v162 + 1) = v164;
          v162[32] = v163[32];
          uint64_t v165 = *(int *)(v160 + 64);
          uint64_t v166 = (char *)a1 + v165;
          uint64_t v167 = &a2[v165];
          uint64_t v168 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v167, 1, v168))
          {
            uint64_t v169 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v166, v167, *(void *)(*(void *)(v169 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v168 - 8) + 16))(v166, v167, v168);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v166, 0, 1, v168);
          }
        }
        else
        {
          if (v37) {
            goto LABEL_61;
          }
LABEL_38:
          uint64_t v38 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v38 - 8) + 16))(a1, a2, v38);
        }
        goto LABEL_215;
      case 9u:
        type metadata accessor for WeatherDataAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v119 = *((void *)a2 + 1);
            *a1 = *(void *)a2;
            a1[1] = v119;
            uint64_t v120 = (uint64_t *)(a2 + 16);
            unint64_t v121 = *((void *)a2 + 3);
            swift_bridgeObjectRetain();
            if (v121 >= 0xE)
            {
              a1[2] = *v120;
              a1[3] = v121;
              swift_bridgeObjectRetain();
            }
            else
            {
              *((_OWORD *)a1 + 1) = *(_OWORD *)v120;
            }
            uint64_t v170 = *((void *)a2 + 5);
            a1[4] = *((void *)a2 + 4);
            a1[5] = v170;
            goto LABEL_139;
          case 3u:
          case 9u:
            uint64_t v68 = *((void *)a2 + 1);
            *a1 = *(void *)a2;
            a1[1] = v68;
            uint64_t v69 = *((void *)a2 + 2);
            uint64_t v70 = *((void *)a2 + 3);
            a1[2] = v69;
            a1[3] = v70;
            swift_bridgeObjectRetain();
            goto LABEL_139;
          case 4u:
            uint64_t v122 = *((void *)a2 + 1);
            *a1 = *(void *)a2;
            a1[1] = v122;
            swift_bridgeObjectRetain();
            v395 = (int *)sub_10017DF08(&qword_100E6BBC0);
            uint64_t v123 = v395[12];
            uint64_t v124 = (uint64_t *)((char *)a1 + v123);
            uint64_t v125 = &a2[v123];
            uint64_t v126 = *(void *)&a2[v123 + 8];
            void *v124 = *(void *)&a2[v123];
            v124[1] = v126;
            uint64_t v127 = (int *)type metadata accessor for WeatherData(0);
            uint64_t v128 = v127[5];
            uint64_t v129 = (char *)v124 + v128;
            uint64_t v130 = (char *)&v125[v128];
            uint64_t v131 = type metadata accessor for Locale();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v130, 1, v131))
            {
              uint64_t v132 = sub_10017DF08(&qword_100E63730);
              memcpy(v129, v130, *(void *)(*(void *)(v132 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 16))(v129, v130, v131);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v129, 0, 1, v131);
            }
            uint64_t v174 = v127[6];
            uint64_t v175 = (char *)v124 + v174;
            uint64_t v176 = (char *)&v125[v174];
            uint64_t v177 = type metadata accessor for WeatherDataModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v177 - 8) + 16))(v175, v176, v177);
            uint64_t v178 = v127[7];
            uint64_t v179 = (char *)v124 + v178;
            uint64_t v180 = (char *)&v125[v178];
            uint64_t v181 = sub_10017DF08(&qword_100E63738);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v180, 1, v181))
            {
              uint64_t v182 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v179, v180, *(void *)(*(void *)(v182 - 8) + 64));
            }
            else
            {
              uint64_t v183 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v183 - 8) + 16))(v179, v180, v183);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v179, 0, 1, v181);
            }
            uint64_t v184 = v127[8];
            uint64_t v185 = (void *)((char *)v124 + v184);
            uint64_t v186 = (char *)&v125[v184];
            uint64_t v187 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            int v188 = swift_getEnumCaseMultiPayload();
            if (v188 == 1)
            {
              uint64_t v190 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(void *, char *, uint64_t))(*(void *)(v190 - 8) + 16))(v185, v186, v190);
              goto LABEL_155;
            }
            if (!v188)
            {
              uint64_t v189 = *((void *)v186 + 1);
              *uint64_t v185 = *(void *)v186;
              v185[1] = v189;
              swift_bridgeObjectRetain();
LABEL_155:
              swift_storeEnumTagMultiPayload();
              goto LABEL_157;
            }
            memcpy(v185, v186, *(void *)(*(void *)(v187 - 8) + 64));
LABEL_157:
            uint64_t v191 = v127[9];
            uint64_t v192 = (char *)v124 + v191;
            uint64_t v193 = (char *)&v125[v191];
            uint64_t v194 = type metadata accessor for WeatherDataOverrides();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v193, 1, v194))
            {
              uint64_t v195 = sub_10017DF08(&qword_100E63740);
              memcpy(v192, v193, *(void *)(*(void *)(v195 - 8) + 64));
            }
            else
            {
              uint64_t v196 = type metadata accessor for Date();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v193, 1, v196))
              {
                uint64_t v197 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v192, v193, *(void *)(*(void *)(v197 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v196 - 8) + 16))(v192, v193, v196);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v192, 0, 1, v196);
              }
              uint64_t v222 = *(int *)(v194 + 20);
              uint64_t v223 = &v192[v222];
              uint64_t v224 = &v193[v222];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v193[v222], 1, v196))
              {
                uint64_t v225 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v223, v224, *(void *)(*(void *)(v225 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v196 - 8) + 16))(v223, v224, v196);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v223, 0, 1, v196);
              }
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v192, 0, 1, v194);
            }
            uint64_t v226 = v395[16];
            uint64_t v227 = (char *)a1 + v226;
            uint64_t v228 = &a2[v226];
            uint64_t v229 = type metadata accessor for UUID();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v229 - 8) + 16))(v227, v228, v229);
            uint64_t v230 = type metadata accessor for PreprocessedWeatherData();
            *(void *)&v227[*(int *)(v230 + 20)] = *(void *)&v228[*(int *)(v230 + 20)];
            v400 = (int *)v230;
            v404 = v228;
            uint64_t v231 = *(int *)(v230 + 24);
            v409 = v227;
            uint64_t v232 = &v227[v231];
            uint64_t v233 = (char *)&v228[v231];
            uint64_t v234 = *(void *)&v228[v231 + 8];
            *(void *)uint64_t v232 = *(void *)&v228[v231];
            *((void *)v232 + 1) = v234;
            uint64_t v235 = *(void *)&v228[v231 + 24];
            *((void *)v232 + 2) = *(void *)&v228[v231 + 16];
            *((void *)v232 + 3) = v235;
            uint64_t v236 = *(void *)&v228[v231 + 32];
            uint64_t v237 = *((void *)v233 + 5);
            *((void *)v232 + 4) = v236;
            *((void *)v232 + 5) = v237;
            uint64_t v391 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
            uint64_t v238 = *(int *)(v391 + 28);
            v386 = &v232[v238];
            uint64_t v239 = &v233[v238];
            uint64_t v240 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
            swift_bridgeObjectRetain();
            int v241 = v239;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v239, 1, v240))
            {
              uint64_t v242 = sub_10017DF08(&qword_100E63750);
              memcpy(v386, v239, *(void *)(*(void *)(v242 - 8) + 64));
            }
            else
            {
              uint64_t v243 = *((void *)v239 + 1);
              *(void *)v386 = *v241;
              *((void *)v386 + 1) = v243;
              uint64_t v385 = v240;
              uint64_t v244 = *(int *)(v240 + 20);
              uint64_t v245 = &v386[v244];
              uint64_t v246 = (char *)v241 + v244;
              uint64_t v247 = type metadata accessor for TemperatureScaleConfiguration();
              v388 = *(void (**)(char *, char *, uint64_t))(*(void *)(v247 - 8) + 16);
              swift_bridgeObjectRetain();
              v388(v245, v246, v247);
              uint64_t v248 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
              *(void *)&v245[v248[5]] = *(void *)&v246[v248[5]];
              *(void *)&v245[v248[6]] = *(void *)&v246[v248[6]];
              *(void *)&v245[v248[7]] = *(void *)&v246[v248[7]];
              uint64_t v249 = v248[8];
              v250 = &v245[v249];
              v251 = &v246[v249];
              uint64_t v253 = *(void *)v251;
              uint64_t v252 = *((void *)v251 + 1);
              *(void *)v250 = v253;
              *((void *)v250 + 1) = v252;
              v245[v248[9]] = v246[v248[9]];
              swift_bridgeObjectRetain();
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v386, 0, 1, v385);
            }
            uint64_t v254 = *(int *)(v391 + 32);
            v255 = &v232[v254];
            v256 = &v233[v254];
            uint64_t v257 = *((void *)v256 + 1);
            *(void *)v255 = *(void *)v256;
            *((void *)v255 + 1) = v257;
            uint64_t v258 = v400[7];
            v259 = &v409[v258];
            v260 = &v404[v258];
            *(void *)&v409[v258] = *(void *)&v404[v258];
            uint64_t v261 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
            v262 = &v259[v261];
            v263 = &v260[v261];
            uint64_t v264 = type metadata accessor for WeatherDescription();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v381 = v264;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v263, 1, v264))
            {
              uint64_t v265 = sub_10017DF08(&qword_100E63758);
              memcpy(v262, v263, *(void *)(*(void *)(v265 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v264 - 8) + 16))(v262, v263, v264);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v262, 0, 1, v264);
            }
            uint64_t v266 = v400[8];
            v267 = &v409[v266];
            v268 = &v404[v266];
            uint64_t v392 = *(void *)&v404[v266 + 8];
            *(void *)v267 = *(void *)&v404[v266];
            *((void *)v267 + 1) = v392;
            uint64_t v269 = *(void *)&v404[v266 + 24];
            *((void *)v267 + 2) = *(void *)&v404[v266 + 16];
            *((void *)v267 + 3) = v269;
            uint64_t v270 = *(void *)&v404[v266 + 40];
            *((void *)v267 + 4) = *(void *)&v404[v266 + 32];
            *((void *)v267 + 5) = v270;
            uint64_t v271 = *(void *)&v404[v266 + 56];
            *((void *)v267 + 6) = *(void *)&v404[v266 + 48];
            *((void *)v267 + 7) = v271;
            uint64_t v272 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
            v273 = &v267[v272];
            v378 = &v268[v272];
            uint64_t v274 = type metadata accessor for Date();
            v275 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v274 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v387 = v275;
            uint64_t v389 = v274;
            v275(v273, v378, v274);
            v276 = v273;
            uint64_t v277 = type metadata accessor for WeatherConditionBackgroundTimeData();
            uint64_t v278 = *(int *)(v277 + 20);
            v279 = &v273[v278];
            v280 = &v378[v278];
            uint64_t v281 = type metadata accessor for Elevation();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v280, 1, v281))
            {
              uint64_t v282 = sub_10017DF08(&qword_100E63760);
              memcpy(v279, v280, *(void *)(*(void *)(v282 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v281 - 8) + 16))(v279, v280, v281);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v279, 0, 1, v281);
            }
            uint64_t v283 = *(int *)(v277 + 24);
            v284 = &v276[v283];
            v285 = &v378[v283];
            uint64_t v286 = type metadata accessor for BackgroundMoonData();
            uint64_t v393 = v277;
            uint64_t v384 = v281;
            uint64_t v373 = v286;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v285, 1, v286))
            {
              uint64_t v287 = sub_10017DF08(&qword_100E63768);
              memcpy(v284, v285, *(void *)(*(void *)(v287 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v286 - 8) + 16))(v284, v285, v286);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v284, 0, 1, v286);
            }
            uint64_t v288 = v400[9];
            v289 = &v409[v288];
            v290 = &v404[v288];
            uint64_t v291 = *((void *)v290 + 1);
            *(void *)v289 = *(void *)v290;
            *((void *)v289 + 1) = v291;
            uint64_t v292 = *((void *)v290 + 3);
            *((void *)v289 + 2) = *((void *)v290 + 2);
            *((void *)v289 + 3) = v292;
            uint64_t v293 = *((void *)v290 + 5);
            *((void *)v289 + 4) = *((void *)v290 + 4);
            *((void *)v289 + 5) = v293;
            uint64_t v294 = *((void *)v290 + 7);
            *((void *)v289 + 6) = *((void *)v290 + 6);
            *((void *)v289 + 7) = v294;
            uint64_t v295 = *((void *)v290 + 9);
            *((void *)v289 + 8) = *((void *)v290 + 8);
            *((void *)v289 + 9) = v295;
            uint64_t v296 = *((void *)v290 + 11);
            *((void *)v289 + 10) = *((void *)v290 + 10);
            *((void *)v289 + 11) = v296;
            uint64_t v297 = *((void *)v290 + 13);
            *((void *)v289 + 12) = *((void *)v290 + 12);
            *((void *)v289 + 13) = v297;
            uint64_t v298 = v400[10];
            v376 = &v404[v298];
            v379 = &v409[v298];
            v375 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v381 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v375(v379, v376, v381);
            uint64_t v299 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
            v300 = &v379[v299];
            v301 = &v376[v299];
            uint64_t v302 = *((void *)v301 + 1);
            *(void *)v300 = *(void *)v301;
            *((void *)v300 + 1) = v302;
            uint64_t v303 = v400[11];
            v304 = &v409[v303];
            v305 = &v404[v303];
            uint64_t v306 = *((void *)v305 + 1);
            *(void *)v304 = *(void *)v305;
            *((void *)v304 + 1) = v306;
            uint64_t v307 = *((void *)v305 + 3);
            *((void *)v304 + 2) = *((void *)v305 + 2);
            *((void *)v304 + 3) = v307;
            uint64_t v308 = *((void *)v305 + 5);
            *((void *)v304 + 4) = *((void *)v305 + 4);
            *((void *)v304 + 5) = v308;
            uint64_t v309 = v400[12];
            v310 = &v409[v309];
            v311 = &v404[v309];
            uint64_t v312 = type metadata accessor for PressureTrend();
            v382 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v312 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v382(v310, v311, v312);
            v313 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
            uint64_t v314 = v313[5];
            v315 = &v310[v314];
            v316 = &v311[v314];
            uint64_t v317 = *((void *)v316 + 1);
            *(void *)v315 = *(void *)v316;
            *((void *)v315 + 1) = v317;
            uint64_t v318 = v313[6];
            v319 = &v310[v318];
            v320 = &v311[v318];
            uint64_t v383 = *((void *)v320 + 1);
            *(void *)v319 = *(void *)v320;
            *((void *)v319 + 1) = v383;
            uint64_t v321 = v313[7];
            v322 = &v310[v321];
            v323 = &v311[v321];
            uint64_t v380 = *((void *)v323 + 1);
            *(void *)v322 = *(void *)v323;
            *((void *)v322 + 1) = v380;
            *(void *)&v310[v313[8]] = *(void *)&v311[v313[8]];
            uint64_t v324 = v313[9];
            v325 = &v310[v324];
            v326 = &v311[v324];
            uint64_t v377 = *((void *)v326 + 1);
            *(void *)v325 = *(void *)v326;
            *((void *)v325 + 1) = v377;
            uint64_t v327 = v400[13];
            v328 = &v409[v327];
            v329 = &v404[v327];
            uint64_t v330 = *((void *)v329 + 1);
            *(void *)v328 = *(void *)v329;
            *((void *)v328 + 1) = v330;
            uint64_t v331 = *((void *)v329 + 3);
            *((void *)v328 + 2) = *((void *)v329 + 2);
            *((void *)v328 + 3) = v331;
            uint64_t v332 = *((void *)v329 + 5);
            *((void *)v328 + 4) = *((void *)v329 + 4);
            *((void *)v328 + 5) = v332;
            uint64_t v333 = *((void *)v329 + 7);
            *((void *)v328 + 6) = *((void *)v329 + 6);
            *((void *)v328 + 7) = v333;
            uint64_t v334 = *((void *)v329 + 9);
            *((void *)v328 + 8) = *((void *)v329 + 8);
            *((void *)v328 + 9) = v334;
            uint64_t v335 = *((void *)v329 + 11);
            *((void *)v328 + 10) = *((void *)v329 + 10);
            *((void *)v328 + 11) = v335;
            uint64_t v336 = *((void *)v329 + 13);
            *((void *)v328 + 12) = *((void *)v329 + 12);
            *((void *)v328 + 13) = v336;
            uint64_t v337 = *((void *)v329 + 15);
            *((void *)v328 + 14) = *((void *)v329 + 14);
            *((void *)v328 + 15) = v337;
            uint64_t v338 = *((void *)v329 + 17);
            *((void *)v328 + 16) = *((void *)v329 + 16);
            *((void *)v328 + 17) = v338;
            uint64_t v339 = *((void *)v329 + 19);
            *((void *)v328 + 18) = *((void *)v329 + 18);
            *((void *)v328 + 19) = v339;
            uint64_t v340 = *((void *)v329 + 21);
            *((void *)v328 + 20) = *((void *)v329 + 20);
            *((void *)v328 + 21) = v340;
            uint64_t v341 = *((void *)v329 + 23);
            *((void *)v328 + 22) = *((void *)v329 + 22);
            *((void *)v328 + 23) = v341;
            uint64_t v342 = *((void *)v329 + 25);
            *((void *)v328 + 24) = *((void *)v329 + 24);
            *((void *)v328 + 25) = v342;
            *((_OWORD *)v328 + 13) = *((_OWORD *)v329 + 13);
            *((void *)v328 + 28) = *((void *)v329 + 28);
            uint64_t v343 = v400[14];
            v344 = &v409[v343];
            v374 = &v404[v343];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v387(v344, v374, v389);
            uint64_t v345 = *(int *)(v393 + 20);
            v346 = &v344[v345];
            v347 = &v374[v345];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v374[v345], 1, v384))
            {
              uint64_t v348 = sub_10017DF08(&qword_100E63760);
              memcpy(v346, v347, *(void *)(*(void *)(v348 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v384 - 8) + 16))(v346, v347, v384);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v346, 0, 1, v384);
            }
            uint64_t v349 = *(int *)(v393 + 24);
            v350 = &v344[v349];
            v351 = &v374[v349];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v374[v349], 1, v373))
            {
              uint64_t v352 = sub_10017DF08(&qword_100E63768);
              memcpy(v350, v351, *(void *)(*(void *)(v352 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v373 - 8) + 16))(v350, v351, v373);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v350, 0, 1, v373);
            }
            uint64_t v353 = v400[15];
            v354 = &v409[v353];
            v355 = &v404[v353];
            uint64_t v356 = *((void *)v355 + 1);
            *(void *)v354 = *(void *)v355;
            *((void *)v354 + 1) = v356;
            uint64_t v357 = *((void *)v355 + 3);
            *((void *)v354 + 2) = *((void *)v355 + 2);
            *((void *)v354 + 3) = v357;
            uint64_t v358 = *((void *)v355 + 5);
            *((void *)v354 + 4) = *((void *)v355 + 4);
            *((void *)v354 + 5) = v358;
            uint64_t v359 = *((void *)v355 + 7);
            *((void *)v354 + 6) = *((void *)v355 + 6);
            *((void *)v354 + 7) = v359;
            uint64_t v360 = *((void *)v355 + 9);
            *((void *)v354 + 8) = *((void *)v355 + 8);
            *((void *)v354 + 9) = v360;
            uint64_t v361 = *((void *)v355 + 11);
            *((void *)v354 + 10) = *((void *)v355 + 10);
            *((void *)v354 + 11) = v361;
            uint64_t v362 = *((void *)v355 + 13);
            *((void *)v354 + 12) = *((void *)v355 + 12);
            *((void *)v354 + 13) = v362;
            uint64_t v363 = v395[20];
            v410 = (uint64_t *)((char *)a1 + v363);
            v364 = &a2[v363];
            type metadata accessor for NewsDataModel();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              void *v410 = *(void *)v364;
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v365 = type metadata accessor for News();
              (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v365 - 8) + 16))(v410, v364, v365);
            }
LABEL_214:
            swift_storeEnumTagMultiPayload();
LABEL_215:
            swift_storeEnumTagMultiPayload();
LABEL_216:
            swift_storeEnumTagMultiPayload();
            break;
          case 5u:
            uint64_t v133 = *((void *)a2 + 1);
            *a1 = *(void *)a2;
            a1[1] = v133;
            swift_bridgeObjectRetain();
            uint64_t v134 = *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48);
            uint64_t v135 = (uint64_t *)((char *)a1 + v134);
            uint64_t v136 = &a2[v134];
            type metadata accessor for NewsDataModel();
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              void *v135 = *(void *)v136;
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v171 = type metadata accessor for News();
              (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v171 - 8) + 16))(v135, v136, v171);
            }
            goto LABEL_214;
          case 6u:
            uint64_t v137 = *((void *)a2 + 1);
            *a1 = *(void *)a2;
            a1[1] = v137;
            swift_bridgeObjectRetain();
            uint64_t v138 = *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
            uint64_t v139 = (char *)a1 + v138;
            uint64_t v140 = &a2[v138];
            uint64_t v141 = type metadata accessor for AvailableDataSets();
            goto LABEL_113;
          case 8u:
            uint64_t v142 = *((void *)a2 + 1);
            *a1 = *(void *)a2;
            a1[1] = v142;
            swift_bridgeObjectRetain();
            uint64_t v143 = *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
            uint64_t v139 = (char *)a1 + v143;
            uint64_t v140 = &a2[v143];
            uint64_t v141 = type metadata accessor for WeatherStatisticsModel();
LABEL_113:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v141 - 8) + 16))(v139, v140, v141);
            goto LABEL_215;
          default:
            uint64_t v39 = *((void *)a2 + 1);
            *a1 = *(void *)a2;
            a1[1] = v39;
LABEL_139:
            swift_bridgeObjectRetain();
            goto LABEL_215;
        }
        break;
      case 0xAu:
        uint64_t v16 = type metadata accessor for DebugAction();
        int v40 = swift_getEnumCaseMultiPayload();
        if (v40 == 1) {
          goto LABEL_38;
        }
        if (v40) {
          goto LABEL_61;
        }
        uint64_t v41 = type metadata accessor for WeatherCondition();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v41))
        {
          uint64_t v42 = sub_10017DF08(&qword_100E63A50);
          memcpy(a1, a2, *(void *)(*(void *)(v42 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v41 - 8) + 16))(a1, a2, v41);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v41);
        }
        uint64_t v115 = *(int *)(sub_10017DF08(&qword_100E6F648) + 48);
        int v116 = (uint64_t *)((char *)a1 + v115);
        uint64_t v117 = &a2[v115];
        uint64_t v118 = *((void *)v117 + 1);
        void *v116 = *(void *)v117;
        v116[1] = v118;
        swift_bridgeObjectRetain();
        goto LABEL_215;
      case 0xBu:
        uint64_t v16 = type metadata accessor for ConditionDetailViewAction();
        int v17 = swift_getEnumCaseMultiPayload();
        switch(v17)
        {
          case 2:
            uint64_t v46 = *((void *)a2 + 1);
            *a1 = *(void *)a2;
            a1[1] = v46;
            uint64_t v47 = (int *)type metadata accessor for DetailChartSelection();
            uint64_t v48 = v47[5];
            v405 = (char *)a1 + v48;
            uint64_t v49 = &a2[v48];
            uint64_t v50 = type metadata accessor for Date();
            int v51 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v50 - 8) + 16);
            swift_bridgeObjectRetain();
            v51(v405, v49, v50);
            v51((char *)a1 + v47[6], &a2[v47[6]], v50);
            v51((char *)a1 + v47[7], &a2[v47[7]], v50);
            *(uint64_t *)((char *)a1 + v47[8]) = *(void *)&a2[v47[8]];
            uint64_t v52 = v47[9];
            uint64_t v53 = (char *)a1 + v52;
            uint64_t v54 = &a2[v52];
            v53[8] = v54[8];
            *(void *)uint64_t v53 = *(void *)v54;
            goto LABEL_215;
          case 1:
            uint64_t v55 = type metadata accessor for DetailCondition();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v55 - 8) + 16))(a1, a2, v55);
            goto LABEL_215;
          case 0:
LABEL_15:
            uint64_t v18 = type metadata accessor for Date();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
            goto LABEL_215;
        }
LABEL_61:
        memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
        goto LABEL_216;
      case 0xDu:
        uint64_t v16 = type metadata accessor for MoonDetailViewAction();
        int v19 = swift_getEnumCaseMultiPayload();
        if (v19 == 1) {
          goto LABEL_15;
        }
        if (v19) {
          goto LABEL_61;
        }
        type metadata accessor for MoonDetailSelectedDate();
        swift_getEnumCaseMultiPayload();
        uint64_t v20 = type metadata accessor for Date();
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
        swift_storeEnumTagMultiPayload();
        goto LABEL_215;
      case 0xEu:
        uint64_t v16 = type metadata accessor for AveragesDetailViewAction();
        if (swift_getEnumCaseMultiPayload() != 1) {
          goto LABEL_61;
        }
        *a1 = *(void *)a2;
        uint64_t v21 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
        uint64_t v22 = v21[5];
        uint64_t v23 = (char *)a1 + v22;
        uint64_t v24 = &a2[v22];
        uint64_t v25 = type metadata accessor for Date();
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
        *(uint64_t *)((char *)a1 + v21[6]) = *(void *)&a2[v21[6]];
        *(uint64_t *)((char *)a1 + v21[7]) = *(void *)&a2[v21[7]];
        swift_storeEnumTagMultiPayload();
        goto LABEL_216;
      case 0x10u:
        uint64_t v26 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v26;
        swift_bridgeObjectRetain();
        goto LABEL_216;
      case 0x11u:
        uint64_t v43 = type metadata accessor for PerformanceTestAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v44 = type metadata accessor for DetailCondition();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v44 - 8) + 16))(a1, a2, v44);
            goto LABEL_71;
          case 2u:
            uint64_t v71 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v71 - 8) + 16))(a1, a2, v71);
            goto LABEL_71;
          case 3u:
            *a1 = *(void *)a2;
            uint64_t v72 = sub_10017DF08((uint64_t *)&unk_100EA0250);
            uint64_t v73 = *(int *)(v72 + 48);
            uint64_t v74 = (char *)a1 + v73;
            uint64_t v75 = &a2[v73];
            uint64_t v76 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v76 - 8) + 16))(v74, v75, v76);
            *((unsigned char *)a1 + *(int *)(v72 + 64)) = a2[*(int *)(v72 + 64)];
            goto LABEL_71;
          case 4u:
            uint64_t v77 = type metadata accessor for WeatherCondition();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v77 - 8) + 16))(a1, a2, v77);
LABEL_71:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v43 - 8) + 64));
            break;
        }
        goto LABEL_216;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t *sub_10055404C(uint64_t *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != (uint64_t *)a2)
  {
    sub_100158BC8((uint64_t)a1, (void (*)(void))type metadata accessor for MainAction);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v6 = type metadata accessor for AppConfiguration();
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_215;
      case 2u:
        uint64_t v14 = type metadata accessor for EnvironmentAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v24 = type metadata accessor for Locale();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
            goto LABEL_214;
          case 3u:
            uint64_t v32 = type metadata accessor for ActivityAction();
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 1)
            {
              type metadata accessor for PreviewLocation();
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                  uint64_t v189 = type metadata accessor for LocationOfInterest();
                  (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v189 - 8) + 16))(a1, a2, v189);
                  break;
                case 2u:
                  v323 = *(void **)a2;
                  *a1 = *(void *)a2;
                  a1[1] = *((void *)a2 + 1);
                  a1[2] = *((void *)a2 + 2);
                  a1[3] = *((void *)a2 + 3);
                  a1[4] = *((void *)a2 + 4);
                  a1[5] = *((void *)a2 + 5);
                  a1[6] = *((void *)a2 + 6);
                  uint64_t v190 = type metadata accessor for SearchLocation();
                  uint64_t v191 = *(int *)(v190 + 32);
                  uint64_t v327 = (char *)a1 + v191;
                  uint64_t v332 = v190;
                  uint64_t v192 = &a2[v191];
                  uint64_t v320 = type metadata accessor for Location();
                  id v193 = v323;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v192, 1, v320))
                  {
                    uint64_t v194 = sub_10017DF08(&qword_100E639E8);
                    memcpy(v327, v192, *(void *)(*(void *)(v194 - 8) + 64));
                  }
                  else
                  {
                    (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v320 - 8) + 16))(v327, v192, v320);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v327, 0, 1, v320);
                  }
                  uint64_t v299 = *(int *)(v332 + 36);
                  v300 = (char *)a1 + v299;
                  v301 = &a2[v299];
                  long long v302 = *(_OWORD *)v301;
                  v300[16] = v301[16];
                  *(_OWORD *)v300 = v302;
                  break;
                case 3u:
                  *(_OWORD *)a1 = *(_OWORD *)a2;
                  a1[2] = *((void *)a2 + 2);
                  a1[3] = *((void *)a2 + 3);
                  swift_bridgeObjectRetain();
                  break;
                default:
                  uint64_t v132 = type metadata accessor for Location();
                  (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v132 - 8) + 16))(a1, a2, v132);
                  break;
              }
              swift_storeEnumTagMultiPayload();
            }
            else
            {
              if (EnumCaseMultiPayload) {
                goto LABEL_100;
              }
              type metadata accessor for SavedLocation();
              if (swift_getEnumCaseMultiPayload() == 1) {
                uint64_t v86 = type metadata accessor for SavedLocation.Placeholder();
              }
              else {
                uint64_t v86 = type metadata accessor for Location();
              }
              (*(void (**)(uint64_t *, unsigned __int8 *))(*(void *)(v86 - 8) + 16))(a1, a2);
              swift_storeEnumTagMultiPayload();
            }
            goto LABEL_213;
          case 4u:
            goto LABEL_82;
          case 9u:
            if (*((void *)a2 + 1) >= 2uLL)
            {
LABEL_82:
              *a1 = *(void *)a2;
              a1[1] = *((void *)a2 + 1);
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)a1 = *(_OWORD *)a2;
            }
            goto LABEL_214;
          case 0xBu:
            uint64_t v32 = type metadata accessor for ConfiguredUnitsAction();
            int v87 = swift_getEnumCaseMultiPayload();
            if (v87 == 1)
            {
              uint64_t v133 = type metadata accessor for UnitConfiguration.Temperature();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v133))
              {
                uint64_t v134 = sub_10017DF08(&qword_100E6F620);
                memcpy(a1, a2, *(void *)(*(void *)(v134 - 8) + 64));
              }
              else
              {
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v133 - 8) + 16))(a1, a2, v133);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v133);
              }
            }
            else
            {
              if (v87) {
                goto LABEL_100;
              }
              uint64_t v88 = type metadata accessor for ConfiguredUnit();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v88 - 8) + 16))(a1, a2, v88);
            }
            break;
          default:
            goto LABEL_60;
        }
        goto LABEL_213;
      case 3u:
        uint64_t v7 = type metadata accessor for LocationsAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v8 = type metadata accessor for CurrentLocation();
            if (swift_getEnumCaseMultiPayload() > 2)
            {
              memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
            }
            else
            {
              uint64_t v154 = type metadata accessor for Location();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v154 - 8) + 16))(a1, a2, v154);
              swift_storeEnumTagMultiPayload();
            }
            goto LABEL_141;
          case 1u:
            uint64_t v72 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v72 - 8) + 16))(a1, a2, v72);
            uint64_t v73 = sub_10017DF08(&qword_100E6F628);
            *((unsigned char *)a1 + *(int *)(v73 + 48)) = a2[*(int *)(v73 + 48)];
            goto LABEL_141;
          case 2u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_141;
          case 5u:
            *a1 = *(void *)a2;
            swift_bridgeObjectRetain();
            goto LABEL_141;
          case 6u:
            uint64_t v77 = *(void *)a2;
            uint64_t v78 = *((void *)a2 + 1);
            unsigned __int8 v79 = a2[16];
            sub_10015458C(v77, v78, v79);
            *a1 = v77;
            a1[1] = v78;
            *((unsigned char *)a1 + 16) = v79;
LABEL_141:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
            break;
        }
        goto LABEL_215;
      case 4u:
        uint64_t v25 = type metadata accessor for NotificationsAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v26 = type metadata accessor for LocationModel();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v26))
            {
              uint64_t v27 = type metadata accessor for NotificationLocation();
              memcpy(a1, a2, *(void *)(*(void *)(v27 - 8) + 64));
            }
            else
            {
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v26 - 8) + 16))(a1, a2, v26);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v26);
            }
            uint64_t v126 = *(int *)(sub_10017DF08((uint64_t *)&unk_100EAC3E0) + 48);
            uint64_t v127 = (char *)a1 + v126;
            uint64_t v128 = &a2[v126];
            uint64_t v129 = type metadata accessor for URL();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v128, 1, v129))
            {
              uint64_t v130 = sub_10017DF08(&qword_100E749B0);
              memcpy(v127, v128, *(void *)(*(void *)(v130 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v129 - 8) + 16))(v127, v128, v129);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v127, 0, 1, v129);
            }
            goto LABEL_118;
          case 2u:
            uint64_t v89 = type metadata accessor for NotificationSubscription.Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v89 - 8) + 16))(a1, a2, v89);
            uint64_t v90 = *(int *)(sub_10017DF08(&qword_100E6F630) + 48);
            uint64_t v91 = (char *)a1 + v90;
            uint64_t v92 = &a2[v90];
            uint64_t v93 = type metadata accessor for NotificationSubscription.Kind();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v93 - 8) + 16))(v91, v92, v93);
            goto LABEL_118;
          case 3u:
          case 4u:
            *a1 = *(void *)a2;
            swift_bridgeObjectRetain();
            goto LABEL_118;
          case 5u:
            uint64_t v94 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v94 - 8) + 16))(a1, a2, v94);
            uint64_t v95 = *(int *)(sub_10017DF08(&qword_100E6F638) + 48);
            unint64_t v96 = (char *)a1 + v95;
            int v97 = &a2[v95];
            uint64_t v98 = type metadata accessor for NotificationSubscription.Kind();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v98 - 8) + 16))(v96, v97, v98);
LABEL_118:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v25 - 8) + 64));
            break;
        }
        goto LABEL_215;
      case 5u:
        uint64_t v14 = type metadata accessor for NotificationsOptInAction();
        int v28 = swift_getEnumCaseMultiPayload();
        switch(v28)
        {
          case 4:
            goto LABEL_14;
          case 3:
            *a1 = *(void *)a2;
            *((unsigned char *)a1 + 8) = a2[8];
            swift_bridgeObjectRetain();
            break;
          case 2:
            uint64_t v29 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v29 - 8) + 16))(a1, a2, v29);
            uint64_t v30 = sub_10017DF08(&qword_100E6BBD8);
            *((unsigned char *)a1 + *(int *)(v30 + 48)) = a2[*(int *)(v30 + 48)];
            break;
          default:
            goto LABEL_60;
        }
        goto LABEL_214;
      case 6u:
        uint64_t v9 = type metadata accessor for ViewAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v10 = type metadata accessor for ListViewAction();
            int v11 = swift_getEnumCaseMultiPayload();
            if (v11 == 2) {
              goto LABEL_120;
            }
            if (v11) {
              goto LABEL_167;
            }
            uint64_t v12 = type metadata accessor for LocationModel();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
            uint64_t v13 = sub_10017DF08(&qword_100E6F640);
            *((unsigned char *)a1 + *(int *)(v13 + 48)) = a2[*(int *)(v13 + 48)];
            goto LABEL_207;
          case 1u:
            uint64_t v10 = type metadata accessor for LocationViewerViewAction();
            int v74 = swift_getEnumCaseMultiPayload();
            if (v74 == 2)
            {
LABEL_120:
              uint64_t v131 = type metadata accessor for Location.Identifier();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v131 - 8) + 16))(a1, a2, v131);
            }
            else if (v74 == 1)
            {
              uint64_t v155 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v155 - 8) + 16))(a1, a2, v155);
            }
            else
            {
              if (v74)
              {
LABEL_167:
                memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
                goto LABEL_208;
              }
              uint64_t v75 = type metadata accessor for LocationModel();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v75 - 8) + 16))(a1, a2, v75);
            }
LABEL_207:
            swift_storeEnumTagMultiPayload();
LABEL_208:
            swift_storeEnumTagMultiPayload();
            break;
          case 3u:
            uint64_t v10 = type metadata accessor for SearchViewAction();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                uint64_t v76 = type metadata accessor for CodableError();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v76 - 8) + 16))(a1, a2, v76);
                goto LABEL_207;
              case 1u:
                *a1 = *(void *)a2;
                swift_bridgeObjectRetain();
                goto LABEL_207;
              case 2u:
                *a1 = *(void *)a2;
                a1[1] = *((void *)a2 + 1);
                swift_bridgeObjectRetain();
                goto LABEL_207;
              case 3u:
              case 6u:
                uint64_t v181 = type metadata accessor for Location();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v181 - 8) + 16))(a1, a2, v181);
                goto LABEL_207;
              case 4u:
                uint64_t v182 = type metadata accessor for LocationOfInterest();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v182 - 8) + 16))(a1, a2, v182);
                goto LABEL_207;
              case 5u:
                uint64_t v183 = *(void **)a2;
                *a1 = *(void *)a2;
                a1[1] = *((void *)a2 + 1);
                a1[2] = *((void *)a2 + 2);
                a1[3] = *((void *)a2 + 3);
                a1[4] = *((void *)a2 + 4);
                a1[5] = *((void *)a2 + 5);
                a1[6] = *((void *)a2 + 6);
                uint64_t v184 = type metadata accessor for SearchLocation();
                uint64_t v185 = *(int *)(v184 + 32);
                uint64_t v326 = v184;
                uint64_t v331 = (char *)a1 + v185;
                v322 = &a2[v185];
                uint64_t v186 = type metadata accessor for Location();
                id v187 = v183;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v322, 1, v186))
                {
                  uint64_t v188 = sub_10017DF08(&qword_100E639E8);
                  memcpy(v331, v322, *(void *)(*(void *)(v188 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v186 - 8) + 16))(v331, v322, v186);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v331, 0, 1, v186);
                }
                uint64_t v295 = *(int *)(v326 + 36);
                uint64_t v296 = (char *)a1 + v295;
                uint64_t v297 = &a2[v295];
                long long v298 = *(_OWORD *)v297;
                v296[16] = v297[16];
                *(_OWORD *)uint64_t v296 = v298;
                goto LABEL_207;
              default:
                goto LABEL_167;
            }
          case 4u:
            uint64_t v80 = type metadata accessor for InteractiveMapViewAction();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
              case 1u:
              case 2u:
              case 4u:
                uint64_t v180 = type metadata accessor for Location();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v180 - 8) + 16))(a1, a2, v180);
                goto LABEL_163;
              case 3u:
                uint64_t v179 = type metadata accessor for WeatherMapOverlayKind();
                (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v179 - 8) + 16))(a1, a2, v179);
LABEL_163:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(a1, a2, *(void *)(*(void *)(v80 - 8) + 64));
                break;
            }
            goto LABEL_208;
          case 5u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            *((unsigned char *)a1 + 16) = a2[16];
            *((unsigned char *)a1 + 17) = a2[17];
            *((unsigned char *)a1 + 18) = a2[18];
            uint64_t v81 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
            int v82 = (char *)a1 + v81;
            uint64_t v83 = &a2[v81];
            uint64_t v84 = type metadata accessor for DynamicTypeSize();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v84 - 8) + 16))(v82, v83, v84);
            goto LABEL_208;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
            goto LABEL_215;
        }
        goto LABEL_215;
      case 7u:
        uint64_t v14 = type metadata accessor for ModalViewAction();
        int v31 = swift_getEnumCaseMultiPayload();
        if (v31 == 3)
        {
          uint64_t v41 = *(void *)a2;
          if ((~*(void *)a2 & 0xF000000000000006) != 0)
          {
            uint64_t v99 = *((void *)a2 + 1);
            uint64_t v100 = *((void *)a2 + 2);
            uint64_t v101 = *((void *)a2 + 3);
            uint64_t v102 = *((void *)a2 + 4);
            uint64_t v103 = *((void *)a2 + 7);
            uint64_t v316 = *((void *)a2 + 5);
            uint64_t v318 = *((void *)a2 + 8);
            uint64_t v321 = *((void *)a2 + 9);
            uint64_t v325 = *((void *)a2 + 10);
            uint64_t v330 = *((void *)a2 + 11);
            uint64_t v104 = *((void *)a2 + 6);
            sub_100274EDC(v41);
            *a1 = v41;
            a1[1] = v99;
            a1[2] = v100;
            a1[3] = v101;
            a1[4] = v102;
            a1[5] = v316;
            a1[6] = v104;
            a1[7] = v103;
            a1[8] = v318;
            a1[9] = v321;
            a1[10] = v325;
            a1[11] = v330;
          }
          else
          {
            memcpy(a1, a2, 0x60uLL);
          }
        }
        else
        {
          if (v31) {
            goto LABEL_60;
          }
          uint64_t v32 = type metadata accessor for LocationPreviewViewAction();
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v33 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v33 - 8) + 16))(a1, a2, v33);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
LABEL_100:
            memcpy(a1, a2, *(void *)(*(void *)(v32 - 8) + 64));
          }
        }
        goto LABEL_214;
      case 8u:
        uint64_t v14 = type metadata accessor for LocationViewAction();
        int v34 = swift_getEnumCaseMultiPayload();
        if (v34 == 2)
        {
          uint64_t v52 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v52 - 8) + 16))(a1, a2, v52);
          uint64_t v53 = *(int *)(sub_10017DF08(&qword_100E66450) + 48);
          uint64_t v54 = (char *)a1 + v53;
          uint64_t v55 = &a2[v53];
          uint64_t v56 = type metadata accessor for LocationOfInterest();
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
          uint64_t v57 = *(int *)(sub_10017DF08(&qword_100E66448) + 48);
          uint64_t v58 = (char *)a1 + v57;
          uint64_t v59 = &a2[v57];
          long long v60 = *(_OWORD *)v59;
          long long v61 = *((_OWORD *)v59 + 1);
          v58[32] = v59[32];
          *(_OWORD *)uint64_t v58 = v60;
          *((_OWORD *)v58 + 1) = v61;
        }
        else if (v34 == 1)
        {
          uint64_t v62 = type metadata accessor for LocationComponentAction(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v63 = type metadata accessor for URL();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v63 - 8) + 16))(a1, a2, v63);
              uint64_t v64 = sub_10017DF08(&qword_100E66478);
              *((unsigned char *)a1 + *(int *)(v64 + 48)) = a2[*(int *)(v64 + 48)];
              goto LABEL_132;
            case 1u:
              uint64_t v135 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v135 - 8) + 16))(a1, a2, v135);
              goto LABEL_132;
            case 2u:
              uint64_t v136 = type metadata accessor for DetailCondition();
              (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v136 - 8) + 16))(a1, a2, v136);
              uint64_t v137 = sub_10017DF08(&qword_100E66488);
              *((unsigned char *)a1 + *(int *)(v137 + 48)) = a2[*(int *)(v137 + 48)];
              goto LABEL_132;
            case 4u:
              *(unsigned char *)a1 = *a2;
              uint64_t v138 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
              uint64_t v139 = (char *)a1 + v138;
              uint64_t v140 = &a2[v138];
              uint64_t v141 = type metadata accessor for Location();
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v141 - 8) + 16))(v139, v140, v141);
LABEL_132:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(void *)(*(void *)(v62 - 8) + 64));
              break;
          }
          uint64_t v142 = sub_10017DF08(&qword_100E66458);
          uint64_t v143 = *(int *)(v142 + 48);
          uint64_t v144 = (char *)a1 + v143;
          uint64_t v145 = &a2[v143];
          long long v146 = *(_OWORD *)v145;
          long long v147 = *((_OWORD *)v145 + 1);
          v144[32] = v145[32];
          *(_OWORD *)uint64_t v144 = v146;
          *((_OWORD *)v144 + 1) = v147;
          uint64_t v148 = *(int *)(v142 + 64);
          uint64_t v149 = (char *)a1 + v148;
          uint64_t v150 = &a2[v148];
          uint64_t v151 = type metadata accessor for Date();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v150, 1, v151))
          {
            uint64_t v152 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v149, v150, *(void *)(*(void *)(v152 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v151 - 8) + 16))(v149, v150, v151);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v149, 0, 1, v151);
          }
        }
        else
        {
          if (v34) {
            goto LABEL_60;
          }
LABEL_37:
          uint64_t v35 = type metadata accessor for Location();
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v35 - 8) + 16))(a1, a2, v35);
        }
        goto LABEL_214;
      case 9u:
        type metadata accessor for WeatherDataAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            unint64_t v108 = *((void *)a2 + 3);
            swift_bridgeObjectRetain();
            if (v108 >= 0xE)
            {
              a1[2] = *((void *)a2 + 2);
              a1[3] = *((void *)a2 + 3);
              swift_bridgeObjectRetain();
            }
            else
            {
              *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
            }
            a1[4] = *((void *)a2 + 4);
            a1[5] = *((void *)a2 + 5);
            goto LABEL_138;
          case 3u:
          case 9u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            a1[2] = *((void *)a2 + 2);
            a1[3] = *((void *)a2 + 3);
            swift_bridgeObjectRetain();
            goto LABEL_138;
          case 4u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            swift_bridgeObjectRetain();
            v319 = (int *)sub_10017DF08(&qword_100E6BBC0);
            uint64_t v109 = v319[12];
            uint64_t v110 = (uint64_t *)((char *)a1 + v109);
            uint64_t v111 = &a2[v109];
            *uint64_t v110 = *(void *)&a2[v109];
            v110[1] = *(void *)&a2[v109 + 8];
            uint64_t v112 = (int *)type metadata accessor for WeatherData(0);
            uint64_t v113 = v112[5];
            uint64_t v114 = (char *)v110 + v113;
            uint64_t v115 = (char *)&v111[v113];
            uint64_t v116 = type metadata accessor for Locale();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v115, 1, v116))
            {
              uint64_t v117 = sub_10017DF08(&qword_100E63730);
              memcpy(v114, v115, *(void *)(*(void *)(v117 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v116 - 8) + 16))(v114, v115, v116);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v114, 0, 1, v116);
            }
            uint64_t v156 = v112[6];
            uint64_t v157 = (char *)v110 + v156;
            int v158 = (char *)&v111[v156];
            uint64_t v159 = type metadata accessor for WeatherDataModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v159 - 8) + 16))(v157, v158, v159);
            uint64_t v160 = v112[7];
            uint64_t v161 = (char *)v110 + v160;
            uint64_t v162 = (char *)&v111[v160];
            uint64_t v163 = sub_10017DF08(&qword_100E63738);
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v162, 1, v163))
            {
              uint64_t v164 = type metadata accessor for WeatherData.CachingState(0);
              memcpy(v161, v162, *(void *)(*(void *)(v164 - 8) + 64));
            }
            else
            {
              uint64_t v165 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v165 - 8) + 16))(v161, v162, v165);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v161, 0, 1, v163);
            }
            uint64_t v166 = v112[8];
            uint64_t v167 = (void *)((char *)v110 + v166);
            uint64_t v168 = (char *)&v111[v166];
            uint64_t v169 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            int v170 = swift_getEnumCaseMultiPayload();
            if (v170 == 1)
            {
              uint64_t v171 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(void *, char *, uint64_t))(*(void *)(v171 - 8) + 16))(v167, v168, v171);
              goto LABEL_154;
            }
            if (!v170)
            {
              *uint64_t v167 = *(void *)v168;
              v167[1] = *((void *)v168 + 1);
              swift_bridgeObjectRetain();
LABEL_154:
              swift_storeEnumTagMultiPayload();
              goto LABEL_156;
            }
            memcpy(v167, v168, *(void *)(*(void *)(v169 - 8) + 64));
LABEL_156:
            uint64_t v172 = v112[9];
            uint64_t v173 = (char *)v110 + v172;
            uint64_t v174 = (char *)&v111[v172];
            uint64_t v175 = type metadata accessor for WeatherDataOverrides();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v174, 1, v175))
            {
              uint64_t v176 = sub_10017DF08(&qword_100E63740);
              memcpy(v173, v174, *(void *)(*(void *)(v176 - 8) + 64));
            }
            else
            {
              uint64_t v177 = type metadata accessor for Date();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v174, 1, v177))
              {
                uint64_t v178 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v173, v174, *(void *)(*(void *)(v178 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v177 - 8) + 16))(v173, v174, v177);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v173, 0, 1, v177);
              }
              uint64_t v195 = *(int *)(v175 + 20);
              uint64_t v196 = &v173[v195];
              uint64_t v197 = &v174[v195];
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v174[v195], 1, v177))
              {
                uint64_t v198 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v196, v197, *(void *)(*(void *)(v198 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v177 - 8) + 16))(v196, v197, v177);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v196, 0, 1, v177);
              }
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v173, 0, 1, v175);
            }
            uint64_t v199 = v319[16];
            uint64_t v200 = (char *)a1 + v199;
            uint64_t v201 = &a2[v199];
            uint64_t v202 = type metadata accessor for UUID();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v202 - 8) + 16))(v200, v201, v202);
            uint64_t v203 = type metadata accessor for PreprocessedWeatherData();
            *(void *)&v200[*(int *)(v203 + 20)] = *(void *)&v201[*(int *)(v203 + 20)];
            uint64_t v324 = (int *)v203;
            v328 = v201;
            uint64_t v204 = *(int *)(v203 + 24);
            uint64_t v333 = v200;
            uint64_t v205 = &v200[v204];
            uint64_t v206 = (char *)&v201[v204];
            *(void *)uint64_t v205 = *(void *)&v201[v204];
            *((void *)v205 + 1) = *(void *)&v201[v204 + 8];
            *((void *)v205 + 2) = *(void *)&v201[v204 + 16];
            *((void *)v205 + 3) = *(void *)&v201[v204 + 24];
            *((void *)v205 + 4) = *(void *)&v201[v204 + 32];
            *((void *)v205 + 5) = *(void *)&v201[v204 + 40];
            uint64_t v317 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
            uint64_t v207 = *(int *)(v317 + 28);
            uint64_t v312 = &v205[v207];
            uint64_t v208 = &v206[v207];
            uint64_t v209 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v208, 1, v209))
            {
              uint64_t v210 = sub_10017DF08(&qword_100E63750);
              memcpy(v312, v208, *(void *)(*(void *)(v210 - 8) + 64));
            }
            else
            {
              *(void *)uint64_t v312 = *(void *)v208;
              *((void *)v312 + 1) = *((void *)v208 + 1);
              uint64_t v311 = v209;
              uint64_t v211 = *(int *)(v209 + 20);
              uint64_t v212 = &v312[v211];
              uint64_t v213 = &v208[v211];
              uint64_t v214 = type metadata accessor for TemperatureScaleConfiguration();
              uint64_t v314 = *(void (**)(char *, char *, uint64_t))(*(void *)(v214 - 8) + 16);
              swift_bridgeObjectRetain();
              v314(v212, v213, v214);
              uint64_t v215 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
              *(void *)&v212[v215[5]] = *(void *)&v213[v215[5]];
              *(void *)&v212[v215[6]] = *(void *)&v213[v215[6]];
              *(void *)&v212[v215[7]] = *(void *)&v213[v215[7]];
              uint64_t v216 = v215[8];
              uint64_t v217 = &v212[v216];
              uint64_t v218 = &v213[v216];
              *(void *)uint64_t v217 = *(void *)v218;
              *((void *)v217 + 1) = *((void *)v218 + 1);
              v212[v215[9]] = v213[v215[9]];
              swift_bridgeObjectRetain();
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v312, 0, 1, v311);
            }
            uint64_t v219 = *(int *)(v317 + 32);
            uint64_t v220 = &v205[v219];
            uint64_t v221 = &v206[v219];
            *(void *)uint64_t v220 = *(void *)v221;
            *((void *)v220 + 1) = *((void *)v221 + 1);
            uint64_t v222 = v324[7];
            uint64_t v223 = &v333[v222];
            uint64_t v224 = &v328[v222];
            *(void *)&v333[v222] = *(void *)&v328[v222];
            uint64_t v225 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
            uint64_t v226 = &v223[v225];
            uint64_t v227 = &v224[v225];
            uint64_t v228 = type metadata accessor for WeatherDescription();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v309 = v228;
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v227, 1, v228))
            {
              uint64_t v229 = sub_10017DF08(&qword_100E63758);
              memcpy(v226, v227, *(void *)(*(void *)(v229 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v228 - 8) + 16))(v226, v227, v228);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v226, 0, 1, v228);
            }
            uint64_t v230 = v324[8];
            uint64_t v231 = &v333[v230];
            uint64_t v232 = &v328[v230];
            *(void *)uint64_t v231 = *(void *)&v328[v230];
            *((void *)v231 + 1) = *(void *)&v328[v230 + 8];
            *((void *)v231 + 2) = *(void *)&v328[v230 + 16];
            *((void *)v231 + 3) = *(void *)&v328[v230 + 24];
            *((void *)v231 + 4) = *(void *)&v328[v230 + 32];
            *((void *)v231 + 5) = *(void *)&v328[v230 + 40];
            *((void *)v231 + 6) = *(void *)&v328[v230 + 48];
            *((void *)v231 + 7) = *(void *)&v328[v230 + 56];
            uint64_t v233 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
            uint64_t v234 = &v231[v233];
            uint64_t v307 = &v232[v233];
            uint64_t v235 = type metadata accessor for Date();
            uint64_t v236 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v235 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v313 = v236;
            uint64_t v315 = v235;
            v236(v234, v307, v235);
            uint64_t v237 = v234;
            uint64_t v238 = type metadata accessor for WeatherConditionBackgroundTimeData();
            uint64_t v239 = *(int *)(v238 + 20);
            uint64_t v240 = &v234[v239];
            int v241 = &v307[v239];
            uint64_t v242 = type metadata accessor for Elevation();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v241, 1, v242))
            {
              uint64_t v243 = sub_10017DF08(&qword_100E63760);
              memcpy(v240, v241, *(void *)(*(void *)(v243 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v242 - 8) + 16))(v240, v241, v242);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v240, 0, 1, v242);
            }
            uint64_t v244 = *(int *)(v238 + 24);
            uint64_t v245 = &v237[v244];
            uint64_t v246 = &v307[v244];
            uint64_t v247 = type metadata accessor for BackgroundMoonData();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v246, 1, v247))
            {
              uint64_t v248 = sub_10017DF08(&qword_100E63768);
              memcpy(v245, v246, *(void *)(*(void *)(v248 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v247 - 8) + 16))(v245, v246, v247);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v245, 0, 1, v247);
            }
            uint64_t v249 = v324[9];
            v250 = &v333[v249];
            v251 = &v328[v249];
            *(void *)v250 = *(void *)v251;
            *((void *)v250 + 1) = *((void *)v251 + 1);
            *((void *)v250 + 2) = *((void *)v251 + 2);
            *((void *)v250 + 3) = *((void *)v251 + 3);
            *((void *)v250 + 4) = *((void *)v251 + 4);
            *((void *)v250 + 5) = *((void *)v251 + 5);
            *((void *)v250 + 6) = *((void *)v251 + 6);
            *((void *)v250 + 7) = *((void *)v251 + 7);
            *((void *)v250 + 8) = *((void *)v251 + 8);
            *((void *)v250 + 9) = *((void *)v251 + 9);
            *((void *)v250 + 10) = *((void *)v251 + 10);
            *((void *)v250 + 11) = *((void *)v251 + 11);
            *((void *)v250 + 12) = *((void *)v251 + 12);
            *((void *)v250 + 13) = *((void *)v251 + 13);
            uint64_t v252 = v324[10];
            uint64_t v306 = &v328[v252];
            uint64_t v308 = &v333[v252];
            v305 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v309 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v305(v308, v306, v309);
            uint64_t v253 = *(int *)(type metadata accessor for UVIndexComponentPreprocessedDataModel() + 20);
            uint64_t v254 = &v308[v253];
            v255 = &v306[v253];
            *(void *)uint64_t v254 = *(void *)v255;
            *((void *)v254 + 1) = *((void *)v255 + 1);
            uint64_t v256 = v324[11];
            uint64_t v257 = &v333[v256];
            uint64_t v258 = &v328[v256];
            *(void *)uint64_t v257 = *(void *)v258;
            *((void *)v257 + 1) = *((void *)v258 + 1);
            *((void *)v257 + 2) = *((void *)v258 + 2);
            *((void *)v257 + 3) = *((void *)v258 + 3);
            *((void *)v257 + 4) = *((void *)v258 + 4);
            *((void *)v257 + 5) = *((void *)v258 + 5);
            uint64_t v259 = v324[12];
            v260 = &v333[v259];
            uint64_t v261 = &v328[v259];
            uint64_t v262 = type metadata accessor for PressureTrend();
            v310 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v262 - 8) + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v310(v260, v261, v262);
            v263 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
            uint64_t v264 = v263[5];
            uint64_t v265 = &v260[v264];
            uint64_t v266 = &v261[v264];
            *(void *)uint64_t v265 = *(void *)v266;
            *((void *)v265 + 1) = *((void *)v266 + 1);
            uint64_t v267 = v263[6];
            v268 = &v260[v267];
            uint64_t v269 = &v261[v267];
            *(void *)v268 = *(void *)v269;
            *((void *)v268 + 1) = *((void *)v269 + 1);
            uint64_t v270 = v263[7];
            uint64_t v271 = &v260[v270];
            uint64_t v272 = &v261[v270];
            *(void *)uint64_t v271 = *(void *)v272;
            *((void *)v271 + 1) = *((void *)v272 + 1);
            *(void *)&v260[v263[8]] = *(void *)&v261[v263[8]];
            uint64_t v273 = v263[9];
            uint64_t v274 = &v260[v273];
            v275 = &v261[v273];
            *(void *)uint64_t v274 = *(void *)v275;
            *((void *)v274 + 1) = *((void *)v275 + 1);
            uint64_t v276 = v324[13];
            uint64_t v277 = &v333[v276];
            uint64_t v278 = &v328[v276];
            *(void *)uint64_t v277 = *(void *)v278;
            *((void *)v277 + 1) = *((void *)v278 + 1);
            *((void *)v277 + 2) = *((void *)v278 + 2);
            *((void *)v277 + 3) = *((void *)v278 + 3);
            *((void *)v277 + 4) = *((void *)v278 + 4);
            *((void *)v277 + 5) = *((void *)v278 + 5);
            *((void *)v277 + 6) = *((void *)v278 + 6);
            *((void *)v277 + 7) = *((void *)v278 + 7);
            *((void *)v277 + 8) = *((void *)v278 + 8);
            *((void *)v277 + 9) = *((void *)v278 + 9);
            *((void *)v277 + 10) = *((void *)v278 + 10);
            *((void *)v277 + 11) = *((void *)v278 + 11);
            *((void *)v277 + 12) = *((void *)v278 + 12);
            *((void *)v277 + 13) = *((void *)v278 + 13);
            *((void *)v277 + 14) = *((void *)v278 + 14);
            *((void *)v277 + 15) = *((void *)v278 + 15);
            *((void *)v277 + 16) = *((void *)v278 + 16);
            *((void *)v277 + 17) = *((void *)v278 + 17);
            *((void *)v277 + 18) = *((void *)v278 + 18);
            *((void *)v277 + 19) = *((void *)v278 + 19);
            *((void *)v277 + 20) = *((void *)v278 + 20);
            *((void *)v277 + 21) = *((void *)v278 + 21);
            *((void *)v277 + 22) = *((void *)v278 + 22);
            *((void *)v277 + 23) = *((void *)v278 + 23);
            *((void *)v277 + 24) = *((void *)v278 + 24);
            *((void *)v277 + 25) = *((void *)v278 + 25);
            *((void *)v277 + 26) = *((void *)v278 + 26);
            *((void *)v277 + 27) = *((void *)v278 + 27);
            *((void *)v277 + 28) = *((void *)v278 + 28);
            uint64_t v279 = v324[14];
            v280 = &v333[v279];
            v304 = &v328[v279];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v313(v280, v304, v315);
            uint64_t v281 = *(int *)(v238 + 20);
            uint64_t v282 = &v280[v281];
            uint64_t v283 = &v304[v281];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v304[v281], 1, v242))
            {
              uint64_t v284 = sub_10017DF08(&qword_100E63760);
              memcpy(v282, v283, *(void *)(*(void *)(v284 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v242 - 8) + 16))(v282, v283, v242);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v282, 0, 1, v242);
            }
            uint64_t v285 = *(int *)(v238 + 24);
            uint64_t v286 = &v280[v285];
            uint64_t v287 = &v304[v285];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v304[v285], 1, v247))
            {
              uint64_t v288 = sub_10017DF08(&qword_100E63768);
              memcpy(v286, v287, *(void *)(*(void *)(v288 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v247 - 8) + 16))(v286, v287, v247);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v286, 0, 1, v247);
            }
            uint64_t v289 = v324[15];
            v290 = &v333[v289];
            uint64_t v291 = &v328[v289];
            *(void *)v290 = *(void *)v291;
            *((void *)v290 + 1) = *((void *)v291 + 1);
            *((void *)v290 + 2) = *((void *)v291 + 2);
            *((void *)v290 + 3) = *((void *)v291 + 3);
            *((void *)v290 + 4) = *((void *)v291 + 4);
            *((void *)v290 + 5) = *((void *)v291 + 5);
            *((void *)v290 + 6) = *((void *)v291 + 6);
            *((void *)v290 + 7) = *((void *)v291 + 7);
            *((void *)v290 + 8) = *((void *)v291 + 8);
            *((void *)v290 + 9) = *((void *)v291 + 9);
            *((void *)v290 + 10) = *((void *)v291 + 10);
            *((void *)v290 + 11) = *((void *)v291 + 11);
            *((void *)v290 + 12) = *((void *)v291 + 12);
            *((void *)v290 + 13) = *((void *)v291 + 13);
            uint64_t v292 = v319[20];
            uint64_t v334 = (uint64_t *)((char *)a1 + v292);
            uint64_t v293 = &a2[v292];
            type metadata accessor for NewsDataModel();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              *uint64_t v334 = *(void *)v293;
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v294 = type metadata accessor for News();
              (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v294 - 8) + 16))(v334, v293, v294);
            }
LABEL_213:
            swift_storeEnumTagMultiPayload();
LABEL_214:
            swift_storeEnumTagMultiPayload();
LABEL_215:
            swift_storeEnumTagMultiPayload();
            break;
          case 5u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            swift_bridgeObjectRetain();
            uint64_t v118 = *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48);
            uint64_t v119 = (uint64_t *)((char *)a1 + v118);
            uint64_t v120 = &a2[v118];
            type metadata accessor for NewsDataModel();
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              void *v119 = *(void *)v120;
              swift_bridgeObjectRetain();
            }
            else
            {
              uint64_t v153 = type metadata accessor for News();
              (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v153 - 8) + 16))(v119, v120, v153);
            }
            goto LABEL_213;
          case 6u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            swift_bridgeObjectRetain();
            uint64_t v121 = *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
            uint64_t v122 = (char *)a1 + v121;
            uint64_t v123 = &a2[v121];
            uint64_t v124 = type metadata accessor for AvailableDataSets();
            goto LABEL_112;
          case 8u:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            swift_bridgeObjectRetain();
            uint64_t v125 = *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
            uint64_t v122 = (char *)a1 + v125;
            uint64_t v123 = &a2[v125];
            uint64_t v124 = type metadata accessor for WeatherStatisticsModel();
LABEL_112:
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v124 - 8) + 16))(v122, v123, v124);
            goto LABEL_214;
          default:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
LABEL_138:
            swift_bridgeObjectRetain();
            goto LABEL_214;
        }
        break;
      case 0xAu:
        uint64_t v14 = type metadata accessor for DebugAction();
        int v36 = swift_getEnumCaseMultiPayload();
        if (v36 == 1) {
          goto LABEL_37;
        }
        if (v36) {
          goto LABEL_60;
        }
        uint64_t v37 = type metadata accessor for WeatherCondition();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v37))
        {
          uint64_t v38 = sub_10017DF08(&qword_100E63A50);
          memcpy(a1, a2, *(void *)(*(void *)(v38 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v37 - 8) + 16))(a1, a2, v37);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v37);
        }
        uint64_t v105 = *(int *)(sub_10017DF08(&qword_100E6F648) + 48);
        uint64_t v106 = (uint64_t *)((char *)a1 + v105);
        uint64_t v107 = &a2[v105];
        void *v106 = *(void *)v107;
        v106[1] = *((void *)v107 + 1);
        swift_bridgeObjectRetain();
        goto LABEL_214;
      case 0xBu:
        uint64_t v14 = type metadata accessor for ConditionDetailViewAction();
        int v15 = swift_getEnumCaseMultiPayload();
        switch(v15)
        {
          case 2:
            *a1 = *(void *)a2;
            a1[1] = *((void *)a2 + 1);
            uint64_t v42 = (int *)type metadata accessor for DetailChartSelection();
            uint64_t v43 = v42[5];
            v329 = (char *)a1 + v43;
            uint64_t v44 = &a2[v43];
            uint64_t v45 = type metadata accessor for Date();
            uint64_t v46 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v45 - 8) + 16);
            swift_bridgeObjectRetain();
            v46(v329, v44, v45);
            v46((char *)a1 + v42[6], &a2[v42[6]], v45);
            v46((char *)a1 + v42[7], &a2[v42[7]], v45);
            *(uint64_t *)((char *)a1 + v42[8]) = *(void *)&a2[v42[8]];
            uint64_t v47 = v42[9];
            uint64_t v48 = (char *)a1 + v47;
            uint64_t v49 = &a2[v47];
            char v50 = v49[8];
            *(void *)uint64_t v48 = *(void *)v49;
            v48[8] = v50;
            goto LABEL_214;
          case 1:
            uint64_t v51 = type metadata accessor for DetailCondition();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v51 - 8) + 16))(a1, a2, v51);
            goto LABEL_214;
          case 0:
LABEL_14:
            uint64_t v16 = type metadata accessor for Date();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
            goto LABEL_214;
        }
LABEL_60:
        memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
        goto LABEL_215;
      case 0xDu:
        uint64_t v14 = type metadata accessor for MoonDetailViewAction();
        int v17 = swift_getEnumCaseMultiPayload();
        if (v17 == 1) {
          goto LABEL_14;
        }
        if (v17) {
          goto LABEL_60;
        }
        type metadata accessor for MoonDetailSelectedDate();
        swift_getEnumCaseMultiPayload();
        uint64_t v18 = type metadata accessor for Date();
        (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
        swift_storeEnumTagMultiPayload();
        goto LABEL_214;
      case 0xEu:
        uint64_t v14 = type metadata accessor for AveragesDetailViewAction();
        if (swift_getEnumCaseMultiPayload() != 1) {
          goto LABEL_60;
        }
        *a1 = *(void *)a2;
        int v19 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
        uint64_t v20 = v19[5];
        uint64_t v21 = (char *)a1 + v20;
        uint64_t v22 = &a2[v20];
        uint64_t v23 = type metadata accessor for Date();
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
        *(uint64_t *)((char *)a1 + v19[6]) = *(void *)&a2[v19[6]];
        *(uint64_t *)((char *)a1 + v19[7]) = *(void *)&a2[v19[7]];
        swift_storeEnumTagMultiPayload();
        goto LABEL_215;
      case 0x10u:
        *a1 = *(void *)a2;
        a1[1] = *((void *)a2 + 1);
        swift_bridgeObjectRetain();
        goto LABEL_215;
      case 0x11u:
        uint64_t v39 = type metadata accessor for PerformanceTestAction();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v40 = type metadata accessor for DetailCondition();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v40 - 8) + 16))(a1, a2, v40);
            goto LABEL_70;
          case 2u:
            uint64_t v65 = type metadata accessor for Location();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v65 - 8) + 16))(a1, a2, v65);
            goto LABEL_70;
          case 3u:
            *a1 = *(void *)a2;
            uint64_t v66 = sub_10017DF08((uint64_t *)&unk_100EA0250);
            uint64_t v67 = *(int *)(v66 + 48);
            uint64_t v68 = (char *)a1 + v67;
            uint64_t v69 = &a2[v67];
            uint64_t v70 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v70 - 8) + 16))(v68, v69, v70);
            *((unsigned char *)a1 + *(int *)(v66 + 64)) = a2[*(int *)(v66 + 64)];
            goto LABEL_70;
          case 4u:
            uint64_t v71 = type metadata accessor for WeatherCondition();
            (*(void (**)(uint64_t *, unsigned __int8 *, uint64_t))(*(void *)(v71 - 8) + 16))(a1, a2, v71);
LABEL_70:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v39 - 8) + 64));
            break;
        }
        goto LABEL_215;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

void *sub_100557814(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = type metadata accessor for AppConfiguration();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_193;
    case 2u:
      uint64_t v7 = type metadata accessor for EnvironmentAction();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 11)
      {
        uint64_t v30 = type metadata accessor for ConfiguredUnitsAction();
        int v67 = swift_getEnumCaseMultiPayload();
        if (v67 == 1)
        {
          uint64_t v122 = type metadata accessor for UnitConfiguration.Temperature();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v122))
          {
            uint64_t v123 = sub_10017DF08(&qword_100E6F620);
            memcpy(a1, a2, *(void *)(*(void *)(v123 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v122 - 8) + 32))(a1, a2, v122);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v122);
          }
        }
        else
        {
          if (v67) {
            goto LABEL_104;
          }
          uint64_t v68 = type metadata accessor for ConfiguredUnit();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v68 - 8) + 32))(a1, a2, v68);
        }
        goto LABEL_191;
      }
      if (EnumCaseMultiPayload == 3)
      {
        uint64_t v30 = type metadata accessor for ActivityAction();
        int v69 = swift_getEnumCaseMultiPayload();
        if (v69 != 1)
        {
          if (v69) {
            goto LABEL_104;
          }
          type metadata accessor for SavedLocation();
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v70 = type metadata accessor for SavedLocation.Placeholder();
          }
          else {
            uint64_t v70 = type metadata accessor for Location();
          }
          (*(void (**)(void *, void *))(*(void *)(v70 - 8) + 32))(a1, a2);
          swift_storeEnumTagMultiPayload();
          goto LABEL_191;
        }
        uint64_t v124 = type metadata accessor for PreviewLocation();
        int v125 = swift_getEnumCaseMultiPayload();
        if (v125 == 2)
        {
          *a1 = *a2;
          *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
          *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
          *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
          uint64_t v252 = type metadata accessor for SearchLocation();
          uint64_t v253 = *(int *)(v252 + 32);
          uint64_t v254 = (char *)a1 + v253;
          v255 = (char *)a2 + v253;
          uint64_t v256 = type metadata accessor for Location();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v255, 1, v256))
          {
            uint64_t v257 = sub_10017DF08(&qword_100E639E8);
            memcpy(v254, v255, *(void *)(*(void *)(v257 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v256 - 8) + 32))(v254, v255, v256);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v254, 0, 1, v256);
          }
          uint64_t v262 = *(int *)(v252 + 36);
          v263 = (char *)a1 + v262;
          uint64_t v264 = (char *)a2 + v262;
          *(_OWORD *)v263 = *(_OWORD *)v264;
          v263[16] = v264[16];
        }
        else if (v125 == 1)
        {
          uint64_t v258 = type metadata accessor for LocationOfInterest();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v258 - 8) + 32))(a1, a2, v258);
        }
        else
        {
          if (v125)
          {
            memcpy(a1, a2, *(void *)(*(void *)(v124 - 8) + 64));
LABEL_191:
            swift_storeEnumTagMultiPayload();
            goto LABEL_192;
          }
          uint64_t v126 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v126 - 8) + 32))(a1, a2, v126);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_191;
      }
      if (EnumCaseMultiPayload != 2) {
        goto LABEL_35;
      }
      uint64_t v28 = type metadata accessor for Locale();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 32))(a1, a2, v28);
LABEL_192:
      swift_storeEnumTagMultiPayload();
LABEL_193:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 3u:
      uint64_t v7 = type metadata accessor for LocationsAction();
      int v29 = swift_getEnumCaseMultiPayload();
      if (v29 == 1)
      {
        uint64_t v50 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v50 - 8) + 32))(a1, a2, v50);
        uint64_t v51 = sub_10017DF08(&qword_100E6F628);
        *((unsigned char *)a1 + *(int *)(v51 + 48)) = *((unsigned char *)a2 + *(int *)(v51 + 48));
      }
      else
      {
        if (v29) {
          goto LABEL_35;
        }
        uint64_t v30 = type metadata accessor for CurrentLocation();
        if (swift_getEnumCaseMultiPayload() > 2)
        {
LABEL_104:
          memcpy(a1, a2, *(void *)(*(void *)(v30 - 8) + 64));
        }
        else
        {
LABEL_28:
          uint64_t v121 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v121 - 8) + 32))(a1, a2, v121);
          swift_storeEnumTagMultiPayload();
        }
      }
      goto LABEL_192;
    case 4u:
      uint64_t v7 = type metadata accessor for NotificationsAction();
      int v31 = swift_getEnumCaseMultiPayload();
      if (v31 == 5)
      {
        uint64_t v71 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v71 - 8) + 32))(a1, a2, v71);
        uint64_t v72 = *(int *)(sub_10017DF08(&qword_100E6F638) + 48);
        uint64_t v73 = (char *)a1 + v72;
        int v74 = (char *)a2 + v72;
        uint64_t v75 = type metadata accessor for NotificationSubscription.Kind();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
        goto LABEL_192;
      }
      if (v31 == 2)
      {
        uint64_t v62 = type metadata accessor for NotificationSubscription.Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v62 - 8) + 32))(a1, a2, v62);
        uint64_t v63 = *(int *)(sub_10017DF08(&qword_100E6F630) + 48);
        uint64_t v64 = (char *)a1 + v63;
        uint64_t v65 = (char *)a2 + v63;
        uint64_t v66 = type metadata accessor for NotificationSubscription.Kind();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v64, v65, v66);
        goto LABEL_192;
      }
      if (v31 != 1) {
        goto LABEL_35;
      }
      uint64_t v32 = type metadata accessor for LocationModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v32))
      {
        uint64_t v33 = type metadata accessor for NotificationLocation();
        memcpy(a1, a2, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 32))(a1, a2, v32);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v32);
      }
      uint64_t v116 = *(int *)(sub_10017DF08((uint64_t *)&unk_100EAC3E0) + 48);
      uint64_t v117 = (char *)a1 + v116;
      uint64_t v118 = (char *)a2 + v116;
      uint64_t v119 = type metadata accessor for URL();
      if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v118, 1, v119)) {
        goto LABEL_134;
      }
      uint64_t v120 = sub_10017DF08(&qword_100E749B0);
      memcpy(v117, v118, *(void *)(*(void *)(v120 - 8) + 64));
      goto LABEL_192;
    case 5u:
      uint64_t v7 = type metadata accessor for NotificationsOptInAction();
      int v8 = swift_getEnumCaseMultiPayload();
      if (v8 == 4) {
        goto LABEL_13;
      }
      if (v8 != 2) {
        goto LABEL_35;
      }
      uint64_t v9 = type metadata accessor for Location();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      uint64_t v10 = sub_10017DF08(&qword_100E6BBD8);
      *((unsigned char *)a1 + *(int *)(v10 + 48)) = *((unsigned char *)a2 + *(int *)(v10 + 48));
      goto LABEL_192;
    case 6u:
      uint64_t v11 = type metadata accessor for ViewAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v12 = type metadata accessor for ListViewAction();
          int v13 = swift_getEnumCaseMultiPayload();
          if (v13 == 2) {
            goto LABEL_125;
          }
          if (v13) {
            goto LABEL_141;
          }
          uint64_t v14 = type metadata accessor for LocationModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
          uint64_t v15 = sub_10017DF08(&qword_100E6F640);
          *((unsigned char *)a1 + *(int *)(v15 + 48)) = *((unsigned char *)a2 + *(int *)(v15 + 48));
          goto LABEL_185;
        case 1u:
          uint64_t v12 = type metadata accessor for LocationViewerViewAction();
          int v107 = swift_getEnumCaseMultiPayload();
          if (v107 == 2)
          {
LABEL_125:
            uint64_t v149 = type metadata accessor for Location.Identifier();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v149 - 8) + 32))(a1, a2, v149);
          }
          else if (v107 == 1)
          {
            uint64_t v164 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v164 - 8) + 32))(a1, a2, v164);
          }
          else
          {
            if (v107)
            {
LABEL_141:
              memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
              goto LABEL_186;
            }
            uint64_t v108 = type metadata accessor for LocationModel();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v108 - 8) + 32))(a1, a2, v108);
          }
LABEL_185:
          swift_storeEnumTagMultiPayload();
LABEL_186:
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          uint64_t v12 = type metadata accessor for SearchViewAction();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v109 = type metadata accessor for CodableError();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v109 - 8) + 32))(a1, a2, v109);
              goto LABEL_185;
            case 3u:
            case 6u:
              uint64_t v165 = type metadata accessor for Location();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v165 - 8) + 32))(a1, a2, v165);
              goto LABEL_185;
            case 4u:
              uint64_t v166 = type metadata accessor for LocationOfInterest();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v166 - 8) + 32))(a1, a2, v166);
              goto LABEL_185;
            case 5u:
              *a1 = *a2;
              *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
              *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
              *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
              uint64_t v167 = type metadata accessor for SearchLocation();
              uint64_t v168 = *(int *)(v167 + 32);
              uint64_t v169 = (char *)a1 + v168;
              int v170 = (char *)a2 + v168;
              uint64_t v171 = type metadata accessor for Location();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v170, 1, v171))
              {
                uint64_t v172 = sub_10017DF08(&qword_100E639E8);
                memcpy(v169, v170, *(void *)(*(void *)(v172 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 32))(v169, v170, v171);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v169, 0, 1, v171);
              }
              uint64_t v259 = *(int *)(v167 + 36);
              v260 = (char *)a1 + v259;
              uint64_t v261 = (char *)a2 + v259;
              *(_OWORD *)v260 = *(_OWORD *)v261;
              v260[16] = v261[16];
              goto LABEL_185;
            default:
              goto LABEL_141;
          }
        case 4u:
          uint64_t v110 = type metadata accessor for InteractiveMapViewAction();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
            case 1u:
            case 2u:
            case 4u:
              uint64_t v174 = type metadata accessor for Location();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v174 - 8) + 32))(a1, a2, v174);
              goto LABEL_149;
            case 3u:
              uint64_t v173 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v173 - 8) + 32))(a1, a2, v173);
LABEL_149:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(void *)(*(void *)(v110 - 8) + 64));
              break;
          }
          goto LABEL_186;
        case 5u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          *((unsigned char *)a1 + 17) = *((unsigned char *)a2 + 17);
          *((unsigned char *)a1 + 18) = *((unsigned char *)a2 + 18);
          uint64_t v111 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
          uint64_t v112 = (char *)a1 + v111;
          uint64_t v113 = (char *)a2 + v111;
          uint64_t v114 = type metadata accessor for DynamicTypeSize();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 32))(v112, v113, v114);
          goto LABEL_186;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
          goto LABEL_193;
      }
      goto LABEL_193;
    case 7u:
      uint64_t v7 = type metadata accessor for ModalViewAction();
      if (swift_getEnumCaseMultiPayload()) {
        goto LABEL_35;
      }
      uint64_t v30 = type metadata accessor for LocationPreviewViewAction();
      if (swift_getEnumCaseMultiPayload() == 1) {
        goto LABEL_28;
      }
      goto LABEL_104;
    case 8u:
      uint64_t v7 = type metadata accessor for LocationViewAction();
      int v34 = swift_getEnumCaseMultiPayload();
      if (v34 == 2)
      {
        uint64_t v76 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v76 - 8) + 32))(a1, a2, v76);
        uint64_t v77 = *(int *)(sub_10017DF08(&qword_100E66450) + 48);
        uint64_t v78 = (char *)a1 + v77;
        unsigned __int8 v79 = (char *)a2 + v77;
        uint64_t v80 = type metadata accessor for LocationOfInterest();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 32))(v78, v79, v80);
        uint64_t v81 = *(int *)(sub_10017DF08(&qword_100E66448) + 48);
        int v82 = (char *)a1 + v81;
        uint64_t v83 = (char *)a2 + v81;
        long long v84 = *((_OWORD *)v83 + 1);
        *(_OWORD *)int v82 = *(_OWORD *)v83;
        *((_OWORD *)v82 + 1) = v84;
        v82[32] = v83[32];
      }
      else if (v34 == 1)
      {
        uint64_t v85 = type metadata accessor for LocationComponentAction(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v86 = type metadata accessor for URL();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v86 - 8) + 32))(a1, a2, v86);
            uint64_t v87 = sub_10017DF08(&qword_100E66478);
            *((unsigned char *)a1 + *(int *)(v87 + 48)) = *((unsigned char *)a2 + *(int *)(v87 + 48));
            goto LABEL_131;
          case 1u:
            uint64_t v150 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v150 - 8) + 32))(a1, a2, v150);
            goto LABEL_131;
          case 2u:
            uint64_t v151 = type metadata accessor for DetailCondition();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v151 - 8) + 32))(a1, a2, v151);
            uint64_t v152 = sub_10017DF08(&qword_100E66488);
            *((unsigned char *)a1 + *(int *)(v152 + 48)) = *((unsigned char *)a2 + *(int *)(v152 + 48));
            goto LABEL_131;
          case 4u:
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v153 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
            uint64_t v154 = (char *)a1 + v153;
            uint64_t v155 = (char *)a2 + v153;
            uint64_t v156 = type metadata accessor for Location();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 32))(v154, v155, v156);
LABEL_131:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v85 - 8) + 64));
            break;
        }
        uint64_t v157 = sub_10017DF08(&qword_100E66458);
        uint64_t v158 = *(int *)(v157 + 48);
        uint64_t v159 = (char *)a1 + v158;
        uint64_t v160 = (char *)a2 + v158;
        long long v161 = *((_OWORD *)v160 + 1);
        *(_OWORD *)uint64_t v159 = *(_OWORD *)v160;
        *((_OWORD *)v159 + 1) = v161;
        v159[32] = v160[32];
        uint64_t v162 = *(int *)(v157 + 64);
        uint64_t v117 = (char *)a1 + v162;
        uint64_t v118 = (char *)a2 + v162;
        uint64_t v119 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v118, 1, v119))
        {
          uint64_t v163 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v117, v118, *(void *)(*(void *)(v163 - 8) + 64));
        }
        else
        {
LABEL_134:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 32))(v117, v118, v119);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v117, 0, 1, v119);
        }
      }
      else
      {
        if (v34) {
          goto LABEL_35;
        }
LABEL_39:
        uint64_t v35 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v35 - 8) + 32))(a1, a2, v35);
      }
      goto LABEL_192;
    case 9u:
      uint64_t v36 = type metadata accessor for WeatherDataAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 4u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v37 = sub_10017DF08(&qword_100E6BBC0);
          uint64_t v38 = *(int *)(v37 + 48);
          uint64_t v39 = (char *)a1 + v38;
          uint64_t v40 = (char *)a2 + v38;
          *(_OWORD *)((char *)a1 + v38) = *(_OWORD *)((char *)a2 + v38);
          uint64_t v41 = (int *)type metadata accessor for WeatherData(0);
          uint64_t v42 = v41[5];
          uint64_t v43 = &v39[v42];
          uint64_t v44 = &v40[v42];
          uint64_t v45 = type metadata accessor for Locale();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45))
          {
            uint64_t v46 = sub_10017DF08(&qword_100E63730);
            memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v45);
          }
          uint64_t v127 = v41[6];
          uint64_t v128 = &v39[v127];
          uint64_t v129 = &v40[v127];
          uint64_t v130 = type metadata accessor for WeatherDataModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 32))(v128, v129, v130);
          uint64_t v131 = v41[7];
          uint64_t v132 = &v39[v131];
          uint64_t v133 = &v40[v131];
          uint64_t v134 = sub_10017DF08(&qword_100E63738);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v133, 1, v134))
          {
            uint64_t v135 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v132, v133, *(void *)(*(void *)(v135 - 8) + 64));
          }
          else
          {
            uint64_t v136 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 32))(v132, v133, v136);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v132, 0, 1, v134);
          }
          uint64_t v137 = v41[8];
          uint64_t v138 = &v39[v137];
          uint64_t v139 = &v40[v137];
          uint64_t v140 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v141 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 32))(v138, v139, v141);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v138, v139, *(void *)(*(void *)(v140 - 8) + 64));
          }
          uint64_t v142 = v41[9];
          uint64_t v143 = &v39[v142];
          uint64_t v144 = &v40[v142];
          uint64_t v145 = type metadata accessor for WeatherDataOverrides();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v144, 1, v145))
          {
            uint64_t v146 = sub_10017DF08(&qword_100E63740);
            memcpy(v143, v144, *(void *)(*(void *)(v146 - 8) + 64));
          }
          else
          {
            uint64_t v147 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v144, 1, v147))
            {
              uint64_t v148 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v143, v144, *(void *)(*(void *)(v148 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 32))(v143, v144, v147);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v143, 0, 1, v147);
            }
            uint64_t v175 = *(int *)(v145 + 20);
            uint64_t v176 = &v143[v175];
            uint64_t v177 = &v144[v175];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v177, 1, v147))
            {
              uint64_t v178 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v176, v177, *(void *)(*(void *)(v178 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 32))(v176, v177, v147);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v176, 0, 1, v147);
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v143, 0, 1, v145);
          }
          uint64_t v271 = v37;
          uint64_t v179 = *(int *)(v37 + 64);
          uint64_t v180 = (char *)a1 + v179;
          uint64_t v181 = (char *)a2 + v179;
          uint64_t v182 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 32))(v180, v181, v182);
          uint64_t v183 = type metadata accessor for PreprocessedWeatherData();
          *(void *)&v180[*(int *)(v183 + 20)] = *(void *)&v181[*(int *)(v183 + 20)];
          uint64_t v273 = (int *)v183;
          uint64_t v184 = *(int *)(v183 + 24);
          uint64_t v270 = v180;
          uint64_t v185 = &v180[v184];
          uint64_t v186 = &v181[v184];
          long long v187 = *(_OWORD *)&v181[v184 + 16];
          *(_OWORD *)uint64_t v185 = *(_OWORD *)&v181[v184];
          *((_OWORD *)v185 + 1) = v187;
          *((_OWORD *)v185 + 2) = *(_OWORD *)&v181[v184 + 32];
          uint64_t v188 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
          uint64_t v189 = *(int *)(v188 + 28);
          uint64_t v190 = &v185[v189];
          uint64_t v191 = &v186[v189];
          uint64_t v192 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
          uint64_t v272 = v181;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v191, 1, v192))
          {
            uint64_t v193 = sub_10017DF08(&qword_100E63750);
            memcpy(v190, v191, *(void *)(*(void *)(v193 - 8) + 64));
          }
          else
          {
            *(_OWORD *)uint64_t v190 = *(_OWORD *)v191;
            uint64_t v194 = *(int *)(v192 + 20);
            uint64_t v195 = &v190[v194];
            uint64_t v196 = &v191[v194];
            uint64_t v197 = type metadata accessor for TemperatureScaleConfiguration();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v197 - 8) + 32))(v195, v196, v197);
            uint64_t v198 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
            *(void *)&v195[v198[5]] = *(void *)&v196[v198[5]];
            *(void *)&v195[v198[6]] = *(void *)&v196[v198[6]];
            *(void *)&v195[v198[7]] = *(void *)&v196[v198[7]];
            *(_OWORD *)&v195[v198[8]] = *(_OWORD *)&v196[v198[8]];
            v195[v198[9]] = v196[v198[9]];
            uint64_t v181 = v272;
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v190, 0, 1, v192);
          }
          *(_OWORD *)&v185[*(int *)(v188 + 32)] = *(_OWORD *)&v186[*(int *)(v188 + 32)];
          uint64_t v199 = v273[7];
          uint64_t v200 = &v270[v199];
          uint64_t v201 = &v181[v199];
          *(void *)&v270[v199] = *(void *)&v181[v199];
          uint64_t v202 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
          uint64_t v203 = &v200[v202];
          uint64_t v204 = &v201[v202];
          uint64_t v205 = type metadata accessor for WeatherDescription();
          uint64_t v268 = v205;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v204, 1, v205))
          {
            uint64_t v206 = sub_10017DF08(&qword_100E63758);
            memcpy(v203, v204, *(void *)(*(void *)(v206 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v205 - 8) + 32))(v203, v204, v205);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v203, 0, 1, v205);
          }
          uint64_t v207 = v273[8];
          uint64_t v208 = &v270[v207];
          uint64_t v209 = &v181[v207];
          long long v210 = *(_OWORD *)&v181[v207 + 16];
          *(_OWORD *)uint64_t v208 = *(_OWORD *)&v181[v207];
          *((_OWORD *)v208 + 1) = v210;
          long long v211 = *(_OWORD *)&v181[v207 + 48];
          *((_OWORD *)v208 + 2) = *(_OWORD *)&v181[v207 + 32];
          *((_OWORD *)v208 + 3) = v211;
          uint64_t v212 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
          uint64_t v213 = &v208[v212];
          uint64_t v214 = &v209[v212];
          uint64_t v269 = type metadata accessor for Date();
          uint64_t v266 = *(void (**)(char *, char *))(*(void *)(v269 - 8) + 32);
          v266(v213, v214);
          uint64_t v215 = type metadata accessor for WeatherConditionBackgroundTimeData();
          uint64_t v216 = *(int *)(v215 + 20);
          uint64_t v217 = &v213[v216];
          uint64_t v218 = &v214[v216];
          uint64_t v219 = type metadata accessor for Elevation();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v218, 1, v219))
          {
            uint64_t v220 = sub_10017DF08(&qword_100E63760);
            memcpy(v217, v218, *(void *)(*(void *)(v220 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v219 - 8) + 32))(v217, v218, v219);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v217, 0, 1, v219);
          }
          uint64_t v221 = *(int *)(v215 + 24);
          uint64_t v222 = &v213[v221];
          uint64_t v223 = &v214[v221];
          uint64_t v224 = type metadata accessor for BackgroundMoonData();
          uint64_t v267 = v224;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v223, 1, v224))
          {
            uint64_t v225 = sub_10017DF08(&qword_100E63768);
            memcpy(v222, v223, *(void *)(*(void *)(v225 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v224 - 8) + 32))(v222, v223, v224);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v222, 0, 1, v224);
          }
          memcpy(&v270[v273[9]], &v272[v273[9]], 0x70uLL);
          uint64_t v226 = v273[10];
          uint64_t v227 = &v270[v226];
          uint64_t v228 = &v272[v226];
          (*(void (**)(char *, char *))(*(void *)(v268 - 8) + 32))(&v270[v226], &v272[v226]);
          uint64_t v229 = type metadata accessor for UVIndexComponentPreprocessedDataModel();
          *(_OWORD *)&v227[*(int *)(v229 + 20)] = *(_OWORD *)&v228[*(int *)(v229 + 20)];
          uint64_t v230 = v273[11];
          uint64_t v231 = &v270[v230];
          uint64_t v232 = &v272[v230];
          long long v233 = *((_OWORD *)v232 + 1);
          *(_OWORD *)uint64_t v231 = *(_OWORD *)v232;
          *((_OWORD *)v231 + 1) = v233;
          *((_OWORD *)v231 + 2) = *((_OWORD *)v232 + 2);
          uint64_t v234 = v273[12];
          uint64_t v235 = &v270[v234];
          uint64_t v236 = &v272[v234];
          uint64_t v237 = type metadata accessor for PressureTrend();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v237 - 8) + 32))(v235, v236, v237);
          uint64_t v238 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
          *(_OWORD *)&v235[v238[5]] = *(_OWORD *)&v236[v238[5]];
          *(_OWORD *)&v235[v238[6]] = *(_OWORD *)&v236[v238[6]];
          *(_OWORD *)&v235[v238[7]] = *(_OWORD *)&v236[v238[7]];
          *(void *)&v235[v238[8]] = *(void *)&v236[v238[8]];
          *(_OWORD *)&v235[v238[9]] = *(_OWORD *)&v236[v238[9]];
          memcpy(&v270[v273[13]], &v272[v273[13]], 0xE8uLL);
          uint64_t v239 = v273[14];
          uint64_t v240 = &v270[v239];
          int v241 = &v272[v239];
          ((void (*)(char *, char *, uint64_t))v266)(&v270[v239], &v272[v239], v269);
          uint64_t v242 = *(int *)(v215 + 20);
          uint64_t v243 = &v240[v242];
          uint64_t v244 = &v241[v242];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v241[v242], 1, v219))
          {
            uint64_t v245 = sub_10017DF08(&qword_100E63760);
            memcpy(v243, v244, *(void *)(*(void *)(v245 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v219 - 8) + 32))(v243, v244, v219);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v243, 0, 1, v219);
          }
          uint64_t v246 = *(int *)(v215 + 24);
          uint64_t v247 = &v240[v246];
          uint64_t v248 = &v241[v246];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v248, 1, v267))
          {
            uint64_t v249 = sub_10017DF08(&qword_100E63768);
            memcpy(v247, v248, *(void *)(*(void *)(v249 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v267 - 8) + 32))(v247, v248, v267);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v247, 0, 1, v267);
          }
          memcpy(&v270[v273[15]], &v272[v273[15]], 0x70uLL);
          uint64_t v250 = *(int *)(v271 + 80);
          unint64_t v96 = (char *)a1 + v250;
          int v97 = (char *)a2 + v250;
          uint64_t v98 = type metadata accessor for NewsDataModel();
          if (!swift_getEnumCaseMultiPayload()) {
            goto LABEL_176;
          }
          goto LABEL_175;
        case 5u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v95 = *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48);
          unint64_t v96 = (char *)a1 + v95;
          int v97 = (char *)a2 + v95;
          uint64_t v98 = type metadata accessor for NewsDataModel();
          if (swift_getEnumCaseMultiPayload())
          {
LABEL_175:
            memcpy(v96, v97, *(void *)(*(void *)(v98 - 8) + 64));
          }
          else
          {
LABEL_176:
            uint64_t v251 = type metadata accessor for News();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v251 - 8) + 32))(v96, v97, v251);
            swift_storeEnumTagMultiPayload();
          }
          goto LABEL_177;
        case 6u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v99 = *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
          uint64_t v100 = (char *)a1 + v99;
          uint64_t v101 = (char *)a2 + v99;
          uint64_t v102 = type metadata accessor for AvailableDataSets();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32))(v100, v101, v102);
          goto LABEL_177;
        case 8u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v103 = *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
          uint64_t v104 = (char *)a1 + v103;
          uint64_t v105 = (char *)a2 + v103;
          uint64_t v106 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 32))(v104, v105, v106);
LABEL_177:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v36 - 8) + 64));
          break;
      }
      goto LABEL_193;
    case 0xAu:
      uint64_t v7 = type metadata accessor for DebugAction();
      int v47 = swift_getEnumCaseMultiPayload();
      if (v47 == 1) {
        goto LABEL_39;
      }
      if (v47) {
        goto LABEL_35;
      }
      uint64_t v48 = type metadata accessor for WeatherCondition();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v48))
      {
        uint64_t v49 = sub_10017DF08(&qword_100E63A50);
        memcpy(a1, a2, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v48 - 8) + 32))(a1, a2, v48);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v48);
      }
      uint64_t v115 = sub_10017DF08(&qword_100E6F648);
      *(_OWORD *)((char *)a1 + *(int *)(v115 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v115 + 48));
      goto LABEL_192;
    case 0xBu:
      uint64_t v7 = type metadata accessor for ConditionDetailViewAction();
      int v16 = swift_getEnumCaseMultiPayload();
      switch(v16)
      {
        case 2:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v52 = (int *)type metadata accessor for DetailChartSelection();
          uint64_t v53 = v52[5];
          uint64_t v54 = (char *)a1 + v53;
          uint64_t v55 = (char *)a2 + v53;
          uint64_t v56 = type metadata accessor for Date();
          uint64_t v57 = *(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32);
          v57(v54, v55, v56);
          v57((char *)a1 + v52[6], (char *)a2 + v52[6], v56);
          v57((char *)a1 + v52[7], (char *)a2 + v52[7], v56);
          *(void *)((char *)a1 + v52[8]) = *(void *)((char *)a2 + v52[8]);
          uint64_t v58 = v52[9];
          uint64_t v59 = (char *)a1 + v58;
          long long v60 = (char *)a2 + v58;
          v59[8] = v60[8];
          *(void *)uint64_t v59 = *(void *)v60;
          goto LABEL_192;
        case 1:
          uint64_t v61 = type metadata accessor for DetailCondition();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v61 - 8) + 32))(a1, a2, v61);
          goto LABEL_192;
        case 0:
LABEL_13:
          uint64_t v17 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
          goto LABEL_192;
      }
LABEL_35:
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      goto LABEL_193;
    case 0xDu:
      uint64_t v7 = type metadata accessor for MoonDetailViewAction();
      int v18 = swift_getEnumCaseMultiPayload();
      if (v18 == 1) {
        goto LABEL_13;
      }
      if (v18) {
        goto LABEL_35;
      }
      type metadata accessor for MoonDetailSelectedDate();
      swift_getEnumCaseMultiPayload();
      uint64_t v19 = type metadata accessor for Date();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 32))(a1, a2, v19);
      swift_storeEnumTagMultiPayload();
      goto LABEL_192;
    case 0xEu:
      uint64_t v7 = type metadata accessor for AveragesDetailViewAction();
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_35;
      }
      *a1 = *a2;
      uint64_t v20 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      uint64_t v21 = v20[5];
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
      *(void *)((char *)a1 + v20[6]) = *(void *)((char *)a2 + v20[6]);
      *(void *)((char *)a1 + v20[7]) = *(void *)((char *)a2 + v20[7]);
      swift_storeEnumTagMultiPayload();
      goto LABEL_193;
    case 0x11u:
      uint64_t v25 = type metadata accessor for PerformanceTestAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v26 = type metadata accessor for DetailCondition();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 32))(a1, a2, v26);
          goto LABEL_81;
        case 2u:
          uint64_t v88 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v88 - 8) + 32))(a1, a2, v88);
          goto LABEL_81;
        case 3u:
          *a1 = *a2;
          uint64_t v89 = sub_10017DF08((uint64_t *)&unk_100EA0250);
          uint64_t v90 = *(int *)(v89 + 48);
          uint64_t v91 = (char *)a1 + v90;
          uint64_t v92 = (char *)a2 + v90;
          uint64_t v93 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 32))(v91, v92, v93);
          *((unsigned char *)a1 + *(int *)(v89 + 64)) = *((unsigned char *)a2 + *(int *)(v89 + 64));
          goto LABEL_81;
        case 4u:
          uint64_t v94 = type metadata accessor for WeatherCondition();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v94 - 8) + 32))(a1, a2, v94);
LABEL_81:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v25 - 8) + 64));
          break;
      }
      goto LABEL_193;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
  }
}

void *sub_10055A668(void *a1, void *a2, uint64_t a3)
{
  if (a1 == a2) {
    return a1;
  }
  sub_100158BC8((uint64_t)a1, (void (*)(void))type metadata accessor for MainAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = type metadata accessor for AppConfiguration();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_194;
    case 2u:
      uint64_t v7 = type metadata accessor for EnvironmentAction();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 11)
      {
        uint64_t v30 = type metadata accessor for ConfiguredUnitsAction();
        int v67 = swift_getEnumCaseMultiPayload();
        if (v67 == 1)
        {
          uint64_t v122 = type metadata accessor for UnitConfiguration.Temperature();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v122))
          {
            uint64_t v123 = sub_10017DF08(&qword_100E6F620);
            memcpy(a1, a2, *(void *)(*(void *)(v123 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v122 - 8) + 32))(a1, a2, v122);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v122);
          }
        }
        else
        {
          if (v67) {
            goto LABEL_105;
          }
          uint64_t v68 = type metadata accessor for ConfiguredUnit();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v68 - 8) + 32))(a1, a2, v68);
        }
        goto LABEL_192;
      }
      if (EnumCaseMultiPayload == 3)
      {
        uint64_t v30 = type metadata accessor for ActivityAction();
        int v69 = swift_getEnumCaseMultiPayload();
        if (v69 != 1)
        {
          if (v69) {
            goto LABEL_105;
          }
          type metadata accessor for SavedLocation();
          if (swift_getEnumCaseMultiPayload() == 1) {
            uint64_t v70 = type metadata accessor for SavedLocation.Placeholder();
          }
          else {
            uint64_t v70 = type metadata accessor for Location();
          }
          (*(void (**)(void *, void *))(*(void *)(v70 - 8) + 32))(a1, a2);
          swift_storeEnumTagMultiPayload();
          goto LABEL_192;
        }
        uint64_t v124 = type metadata accessor for PreviewLocation();
        int v125 = swift_getEnumCaseMultiPayload();
        if (v125 == 2)
        {
          *a1 = *a2;
          *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
          *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
          *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
          uint64_t v252 = type metadata accessor for SearchLocation();
          uint64_t v253 = *(int *)(v252 + 32);
          uint64_t v254 = (char *)a1 + v253;
          v255 = (char *)a2 + v253;
          uint64_t v256 = type metadata accessor for Location();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v255, 1, v256))
          {
            uint64_t v257 = sub_10017DF08(&qword_100E639E8);
            memcpy(v254, v255, *(void *)(*(void *)(v257 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v256 - 8) + 32))(v254, v255, v256);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v254, 0, 1, v256);
          }
          uint64_t v262 = *(int *)(v252 + 36);
          v263 = (char *)a1 + v262;
          uint64_t v264 = (char *)a2 + v262;
          *(_OWORD *)v263 = *(_OWORD *)v264;
          v263[16] = v264[16];
        }
        else if (v125 == 1)
        {
          uint64_t v258 = type metadata accessor for LocationOfInterest();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v258 - 8) + 32))(a1, a2, v258);
        }
        else
        {
          if (v125)
          {
            memcpy(a1, a2, *(void *)(*(void *)(v124 - 8) + 64));
LABEL_192:
            swift_storeEnumTagMultiPayload();
            goto LABEL_193;
          }
          uint64_t v126 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v126 - 8) + 32))(a1, a2, v126);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_192;
      }
      if (EnumCaseMultiPayload != 2) {
        goto LABEL_36;
      }
      uint64_t v28 = type metadata accessor for Locale();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v28 - 8) + 32))(a1, a2, v28);
LABEL_193:
      swift_storeEnumTagMultiPayload();
LABEL_194:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 3u:
      uint64_t v7 = type metadata accessor for LocationsAction();
      int v29 = swift_getEnumCaseMultiPayload();
      if (v29 == 1)
      {
        uint64_t v50 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v50 - 8) + 32))(a1, a2, v50);
        uint64_t v51 = sub_10017DF08(&qword_100E6F628);
        *((unsigned char *)a1 + *(int *)(v51 + 48)) = *((unsigned char *)a2 + *(int *)(v51 + 48));
      }
      else
      {
        if (v29) {
          goto LABEL_36;
        }
        uint64_t v30 = type metadata accessor for CurrentLocation();
        if (swift_getEnumCaseMultiPayload() > 2)
        {
LABEL_105:
          memcpy(a1, a2, *(void *)(*(void *)(v30 - 8) + 64));
        }
        else
        {
LABEL_29:
          uint64_t v121 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v121 - 8) + 32))(a1, a2, v121);
          swift_storeEnumTagMultiPayload();
        }
      }
      goto LABEL_193;
    case 4u:
      uint64_t v7 = type metadata accessor for NotificationsAction();
      int v31 = swift_getEnumCaseMultiPayload();
      if (v31 == 5)
      {
        uint64_t v71 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v71 - 8) + 32))(a1, a2, v71);
        uint64_t v72 = *(int *)(sub_10017DF08(&qword_100E6F638) + 48);
        uint64_t v73 = (char *)a1 + v72;
        int v74 = (char *)a2 + v72;
        uint64_t v75 = type metadata accessor for NotificationSubscription.Kind();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 32))(v73, v74, v75);
        goto LABEL_193;
      }
      if (v31 == 2)
      {
        uint64_t v62 = type metadata accessor for NotificationSubscription.Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v62 - 8) + 32))(a1, a2, v62);
        uint64_t v63 = *(int *)(sub_10017DF08(&qword_100E6F630) + 48);
        uint64_t v64 = (char *)a1 + v63;
        uint64_t v65 = (char *)a2 + v63;
        uint64_t v66 = type metadata accessor for NotificationSubscription.Kind();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v66 - 8) + 32))(v64, v65, v66);
        goto LABEL_193;
      }
      if (v31 != 1) {
        goto LABEL_36;
      }
      uint64_t v32 = type metadata accessor for LocationModel();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v32))
      {
        uint64_t v33 = type metadata accessor for NotificationLocation();
        memcpy(a1, a2, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 32))(a1, a2, v32);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v32);
      }
      uint64_t v116 = *(int *)(sub_10017DF08((uint64_t *)&unk_100EAC3E0) + 48);
      uint64_t v117 = (char *)a1 + v116;
      uint64_t v118 = (char *)a2 + v116;
      uint64_t v119 = type metadata accessor for URL();
      if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v118, 1, v119)) {
        goto LABEL_135;
      }
      uint64_t v120 = sub_10017DF08(&qword_100E749B0);
      memcpy(v117, v118, *(void *)(*(void *)(v120 - 8) + 64));
      goto LABEL_193;
    case 5u:
      uint64_t v7 = type metadata accessor for NotificationsOptInAction();
      int v8 = swift_getEnumCaseMultiPayload();
      if (v8 == 4) {
        goto LABEL_14;
      }
      if (v8 != 2) {
        goto LABEL_36;
      }
      uint64_t v9 = type metadata accessor for Location();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      uint64_t v10 = sub_10017DF08(&qword_100E6BBD8);
      *((unsigned char *)a1 + *(int *)(v10 + 48)) = *((unsigned char *)a2 + *(int *)(v10 + 48));
      goto LABEL_193;
    case 6u:
      uint64_t v11 = type metadata accessor for ViewAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v12 = type metadata accessor for ListViewAction();
          int v13 = swift_getEnumCaseMultiPayload();
          if (v13 == 2) {
            goto LABEL_126;
          }
          if (v13) {
            goto LABEL_142;
          }
          uint64_t v14 = type metadata accessor for LocationModel();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
          uint64_t v15 = sub_10017DF08(&qword_100E6F640);
          *((unsigned char *)a1 + *(int *)(v15 + 48)) = *((unsigned char *)a2 + *(int *)(v15 + 48));
          goto LABEL_186;
        case 1u:
          uint64_t v12 = type metadata accessor for LocationViewerViewAction();
          int v107 = swift_getEnumCaseMultiPayload();
          if (v107 == 2)
          {
LABEL_126:
            uint64_t v149 = type metadata accessor for Location.Identifier();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v149 - 8) + 32))(a1, a2, v149);
          }
          else if (v107 == 1)
          {
            uint64_t v164 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v164 - 8) + 32))(a1, a2, v164);
          }
          else
          {
            if (v107)
            {
LABEL_142:
              memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
              goto LABEL_187;
            }
            uint64_t v108 = type metadata accessor for LocationModel();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v108 - 8) + 32))(a1, a2, v108);
          }
LABEL_186:
          swift_storeEnumTagMultiPayload();
LABEL_187:
          swift_storeEnumTagMultiPayload();
          break;
        case 3u:
          uint64_t v12 = type metadata accessor for SearchViewAction();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              uint64_t v109 = type metadata accessor for CodableError();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v109 - 8) + 32))(a1, a2, v109);
              goto LABEL_186;
            case 3u:
            case 6u:
              uint64_t v165 = type metadata accessor for Location();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v165 - 8) + 32))(a1, a2, v165);
              goto LABEL_186;
            case 4u:
              uint64_t v166 = type metadata accessor for LocationOfInterest();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v166 - 8) + 32))(a1, a2, v166);
              goto LABEL_186;
            case 5u:
              *a1 = *a2;
              *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
              *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
              *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
              uint64_t v167 = type metadata accessor for SearchLocation();
              uint64_t v168 = *(int *)(v167 + 32);
              uint64_t v169 = (char *)a1 + v168;
              int v170 = (char *)a2 + v168;
              uint64_t v171 = type metadata accessor for Location();
              if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v170, 1, v171))
              {
                uint64_t v172 = sub_10017DF08(&qword_100E639E8);
                memcpy(v169, v170, *(void *)(*(void *)(v172 - 8) + 64));
              }
              else
              {
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v171 - 8) + 32))(v169, v170, v171);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v169, 0, 1, v171);
              }
              uint64_t v259 = *(int *)(v167 + 36);
              v260 = (char *)a1 + v259;
              uint64_t v261 = (char *)a2 + v259;
              *(_OWORD *)v260 = *(_OWORD *)v261;
              v260[16] = v261[16];
              goto LABEL_186;
            default:
              goto LABEL_142;
          }
        case 4u:
          uint64_t v110 = type metadata accessor for InteractiveMapViewAction();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
            case 1u:
            case 2u:
            case 4u:
              uint64_t v174 = type metadata accessor for Location();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v174 - 8) + 32))(a1, a2, v174);
              goto LABEL_150;
            case 3u:
              uint64_t v173 = type metadata accessor for WeatherMapOverlayKind();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v173 - 8) + 32))(a1, a2, v173);
LABEL_150:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(void *)(*(void *)(v110 - 8) + 64));
              break;
          }
          goto LABEL_187;
        case 5u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
          *((unsigned char *)a1 + 17) = *((unsigned char *)a2 + 17);
          *((unsigned char *)a1 + 18) = *((unsigned char *)a2 + 18);
          uint64_t v111 = *(int *)(type metadata accessor for DisplayMetrics() + 36);
          uint64_t v112 = (char *)a1 + v111;
          uint64_t v113 = (char *)a2 + v111;
          uint64_t v114 = type metadata accessor for DynamicTypeSize();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v114 - 8) + 32))(v112, v113, v114);
          goto LABEL_187;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
          goto LABEL_194;
      }
      goto LABEL_194;
    case 7u:
      uint64_t v7 = type metadata accessor for ModalViewAction();
      if (swift_getEnumCaseMultiPayload()) {
        goto LABEL_36;
      }
      uint64_t v30 = type metadata accessor for LocationPreviewViewAction();
      if (swift_getEnumCaseMultiPayload() == 1) {
        goto LABEL_29;
      }
      goto LABEL_105;
    case 8u:
      uint64_t v7 = type metadata accessor for LocationViewAction();
      int v34 = swift_getEnumCaseMultiPayload();
      if (v34 == 2)
      {
        uint64_t v76 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v76 - 8) + 32))(a1, a2, v76);
        uint64_t v77 = *(int *)(sub_10017DF08(&qword_100E66450) + 48);
        uint64_t v78 = (char *)a1 + v77;
        unsigned __int8 v79 = (char *)a2 + v77;
        uint64_t v80 = type metadata accessor for LocationOfInterest();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 32))(v78, v79, v80);
        uint64_t v81 = *(int *)(sub_10017DF08(&qword_100E66448) + 48);
        int v82 = (char *)a1 + v81;
        uint64_t v83 = (char *)a2 + v81;
        long long v84 = *((_OWORD *)v83 + 1);
        *(_OWORD *)int v82 = *(_OWORD *)v83;
        *((_OWORD *)v82 + 1) = v84;
        v82[32] = v83[32];
      }
      else if (v34 == 1)
      {
        uint64_t v85 = type metadata accessor for LocationComponentAction(0);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v86 = type metadata accessor for URL();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v86 - 8) + 32))(a1, a2, v86);
            uint64_t v87 = sub_10017DF08(&qword_100E66478);
            *((unsigned char *)a1 + *(int *)(v87 + 48)) = *((unsigned char *)a2 + *(int *)(v87 + 48));
            goto LABEL_132;
          case 1u:
            uint64_t v150 = type metadata accessor for WeatherMapOverlayKind();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v150 - 8) + 32))(a1, a2, v150);
            goto LABEL_132;
          case 2u:
            uint64_t v151 = type metadata accessor for DetailCondition();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v151 - 8) + 32))(a1, a2, v151);
            uint64_t v152 = sub_10017DF08(&qword_100E66488);
            *((unsigned char *)a1 + *(int *)(v152 + 48)) = *((unsigned char *)a2 + *(int *)(v152 + 48));
            goto LABEL_132;
          case 4u:
            *(unsigned char *)a1 = *(unsigned char *)a2;
            uint64_t v153 = *(int *)(sub_10017DF08(&qword_100E66480) + 48);
            uint64_t v154 = (char *)a1 + v153;
            uint64_t v155 = (char *)a2 + v153;
            uint64_t v156 = type metadata accessor for Location();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v156 - 8) + 32))(v154, v155, v156);
LABEL_132:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v85 - 8) + 64));
            break;
        }
        uint64_t v157 = sub_10017DF08(&qword_100E66458);
        uint64_t v158 = *(int *)(v157 + 48);
        uint64_t v159 = (char *)a1 + v158;
        uint64_t v160 = (char *)a2 + v158;
        long long v161 = *((_OWORD *)v160 + 1);
        *(_OWORD *)uint64_t v159 = *(_OWORD *)v160;
        *((_OWORD *)v159 + 1) = v161;
        v159[32] = v160[32];
        uint64_t v162 = *(int *)(v157 + 64);
        uint64_t v117 = (char *)a1 + v162;
        uint64_t v118 = (char *)a2 + v162;
        uint64_t v119 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v118, 1, v119))
        {
          uint64_t v163 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v117, v118, *(void *)(*(void *)(v163 - 8) + 64));
        }
        else
        {
LABEL_135:
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v119 - 8) + 32))(v117, v118, v119);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v117, 0, 1, v119);
        }
      }
      else
      {
        if (v34) {
          goto LABEL_36;
        }
LABEL_40:
        uint64_t v35 = type metadata accessor for Location();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v35 - 8) + 32))(a1, a2, v35);
      }
      goto LABEL_193;
    case 9u:
      uint64_t v36 = type metadata accessor for WeatherDataAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 4u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v37 = sub_10017DF08(&qword_100E6BBC0);
          uint64_t v38 = *(int *)(v37 + 48);
          uint64_t v39 = (char *)a1 + v38;
          uint64_t v40 = (char *)a2 + v38;
          *(_OWORD *)((char *)a1 + v38) = *(_OWORD *)((char *)a2 + v38);
          uint64_t v41 = (int *)type metadata accessor for WeatherData(0);
          uint64_t v42 = v41[5];
          uint64_t v43 = &v39[v42];
          uint64_t v44 = &v40[v42];
          uint64_t v45 = type metadata accessor for Locale();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v44, 1, v45))
          {
            uint64_t v46 = sub_10017DF08(&qword_100E63730);
            memcpy(v43, v44, *(void *)(*(void *)(v46 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(v43, v44, v45);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v43, 0, 1, v45);
          }
          uint64_t v127 = v41[6];
          uint64_t v128 = &v39[v127];
          uint64_t v129 = &v40[v127];
          uint64_t v130 = type metadata accessor for WeatherDataModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v130 - 8) + 32))(v128, v129, v130);
          uint64_t v131 = v41[7];
          uint64_t v132 = &v39[v131];
          uint64_t v133 = &v40[v131];
          uint64_t v134 = sub_10017DF08(&qword_100E63738);
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v133, 1, v134))
          {
            uint64_t v135 = type metadata accessor for WeatherData.CachingState(0);
            memcpy(v132, v133, *(void *)(*(void *)(v135 - 8) + 64));
          }
          else
          {
            uint64_t v136 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v136 - 8) + 32))(v132, v133, v136);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v132, 0, 1, v134);
          }
          uint64_t v137 = v41[8];
          uint64_t v138 = &v39[v137];
          uint64_t v139 = &v40[v137];
          uint64_t v140 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v141 = type metadata accessor for WeatherStatisticsModel();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 32))(v138, v139, v141);
            swift_storeEnumTagMultiPayload();
          }
          else
          {
            memcpy(v138, v139, *(void *)(*(void *)(v140 - 8) + 64));
          }
          uint64_t v142 = v41[9];
          uint64_t v143 = &v39[v142];
          uint64_t v144 = &v40[v142];
          uint64_t v145 = type metadata accessor for WeatherDataOverrides();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v144, 1, v145))
          {
            uint64_t v146 = sub_10017DF08(&qword_100E63740);
            memcpy(v143, v144, *(void *)(*(void *)(v146 - 8) + 64));
          }
          else
          {
            uint64_t v147 = type metadata accessor for Date();
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v144, 1, v147))
            {
              uint64_t v148 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v143, v144, *(void *)(*(void *)(v148 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 32))(v143, v144, v147);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v143, 0, 1, v147);
            }
            uint64_t v175 = *(int *)(v145 + 20);
            uint64_t v176 = &v143[v175];
            uint64_t v177 = &v144[v175];
            if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v177, 1, v147))
            {
              uint64_t v178 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
              memcpy(v176, v177, *(void *)(*(void *)(v178 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v147 - 8) + 32))(v176, v177, v147);
              _s7Weather24LocationCompositionStateOwst_0((uint64_t)v176, 0, 1, v147);
            }
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v143, 0, 1, v145);
          }
          uint64_t v271 = v37;
          uint64_t v179 = *(int *)(v37 + 64);
          uint64_t v180 = (char *)a1 + v179;
          uint64_t v181 = (char *)a2 + v179;
          uint64_t v182 = type metadata accessor for UUID();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v182 - 8) + 32))(v180, v181, v182);
          uint64_t v183 = type metadata accessor for PreprocessedWeatherData();
          *(void *)&v180[*(int *)(v183 + 20)] = *(void *)&v181[*(int *)(v183 + 20)];
          uint64_t v273 = (int *)v183;
          uint64_t v184 = *(int *)(v183 + 24);
          uint64_t v270 = v180;
          uint64_t v185 = &v180[v184];
          uint64_t v186 = &v181[v184];
          long long v187 = *(_OWORD *)&v181[v184 + 16];
          *(_OWORD *)uint64_t v185 = *(_OWORD *)&v181[v184];
          *((_OWORD *)v185 + 1) = v187;
          *((_OWORD *)v185 + 2) = *(_OWORD *)&v181[v184 + 32];
          uint64_t v188 = type metadata accessor for FeelsLikeComponentPreprocessedDataModel();
          uint64_t v189 = *(int *)(v188 + 28);
          uint64_t v190 = &v185[v189];
          uint64_t v191 = &v186[v189];
          uint64_t v192 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference(0);
          uint64_t v272 = v181;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v191, 1, v192))
          {
            uint64_t v193 = sub_10017DF08(&qword_100E63750);
            memcpy(v190, v191, *(void *)(*(void *)(v193 - 8) + 64));
          }
          else
          {
            *(_OWORD *)uint64_t v190 = *(_OWORD *)v191;
            uint64_t v194 = *(int *)(v192 + 20);
            uint64_t v195 = &v190[v194];
            uint64_t v196 = &v191[v194];
            uint64_t v197 = type metadata accessor for TemperatureScaleConfiguration();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v197 - 8) + 32))(v195, v196, v197);
            uint64_t v198 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
            *(void *)&v195[v198[5]] = *(void *)&v196[v198[5]];
            *(void *)&v195[v198[6]] = *(void *)&v196[v198[6]];
            *(void *)&v195[v198[7]] = *(void *)&v196[v198[7]];
            *(_OWORD *)&v195[v198[8]] = *(_OWORD *)&v196[v198[8]];
            v195[v198[9]] = v196[v198[9]];
            uint64_t v181 = v272;
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v190, 0, 1, v192);
          }
          *(_OWORD *)&v185[*(int *)(v188 + 32)] = *(_OWORD *)&v186[*(int *)(v188 + 32)];
          uint64_t v199 = v273[7];
          uint64_t v200 = &v270[v199];
          uint64_t v201 = &v181[v199];
          *(void *)&v270[v199] = *(void *)&v181[v199];
          uint64_t v202 = *(int *)(type metadata accessor for HourlyForecastComponentPreprocessedDataModel() + 20);
          uint64_t v203 = &v200[v202];
          uint64_t v204 = &v201[v202];
          uint64_t v205 = type metadata accessor for WeatherDescription();
          uint64_t v268 = v205;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v204, 1, v205))
          {
            uint64_t v206 = sub_10017DF08(&qword_100E63758);
            memcpy(v203, v204, *(void *)(*(void *)(v206 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v205 - 8) + 32))(v203, v204, v205);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v203, 0, 1, v205);
          }
          uint64_t v207 = v273[8];
          uint64_t v208 = &v270[v207];
          uint64_t v209 = &v181[v207];
          long long v210 = *(_OWORD *)&v181[v207 + 16];
          *(_OWORD *)uint64_t v208 = *(_OWORD *)&v181[v207];
          *((_OWORD *)v208 + 1) = v210;
          long long v211 = *(_OWORD *)&v181[v207 + 48];
          *((_OWORD *)v208 + 2) = *(_OWORD *)&v181[v207 + 32];
          *((_OWORD *)v208 + 3) = v211;
          uint64_t v212 = *(int *)(type metadata accessor for ListPreprocessedDataModel() + 32);
          uint64_t v213 = &v208[v212];
          uint64_t v214 = &v209[v212];
          uint64_t v269 = type metadata accessor for Date();
          uint64_t v266 = *(void (**)(char *, char *))(*(void *)(v269 - 8) + 32);
          v266(v213, v214);
          uint64_t v215 = type metadata accessor for WeatherConditionBackgroundTimeData();
          uint64_t v216 = *(int *)(v215 + 20);
          uint64_t v217 = &v213[v216];
          uint64_t v218 = &v214[v216];
          uint64_t v219 = type metadata accessor for Elevation();
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v218, 1, v219))
          {
            uint64_t v220 = sub_10017DF08(&qword_100E63760);
            memcpy(v217, v218, *(void *)(*(void *)(v220 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v219 - 8) + 32))(v217, v218, v219);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v217, 0, 1, v219);
          }
          uint64_t v221 = *(int *)(v215 + 24);
          uint64_t v222 = &v213[v221];
          uint64_t v223 = &v214[v221];
          uint64_t v224 = type metadata accessor for BackgroundMoonData();
          uint64_t v267 = v224;
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v223, 1, v224))
          {
            uint64_t v225 = sub_10017DF08(&qword_100E63768);
            memcpy(v222, v223, *(void *)(*(void *)(v225 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v224 - 8) + 32))(v222, v223, v224);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v222, 0, 1, v224);
          }
          memcpy(&v270[v273[9]], &v272[v273[9]], 0x70uLL);
          uint64_t v226 = v273[10];
          uint64_t v227 = &v270[v226];
          uint64_t v228 = &v272[v226];
          (*(void (**)(char *, char *))(*(void *)(v268 - 8) + 32))(&v270[v226], &v272[v226]);
          uint64_t v229 = type metadata accessor for UVIndexComponentPreprocessedDataModel();
          *(_OWORD *)&v227[*(int *)(v229 + 20)] = *(_OWORD *)&v228[*(int *)(v229 + 20)];
          uint64_t v230 = v273[11];
          uint64_t v231 = &v270[v230];
          uint64_t v232 = &v272[v230];
          long long v233 = *((_OWORD *)v232 + 1);
          *(_OWORD *)uint64_t v231 = *(_OWORD *)v232;
          *((_OWORD *)v231 + 1) = v233;
          *((_OWORD *)v231 + 2) = *((_OWORD *)v232 + 2);
          uint64_t v234 = v273[12];
          uint64_t v235 = &v270[v234];
          uint64_t v236 = &v272[v234];
          uint64_t v237 = type metadata accessor for PressureTrend();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v237 - 8) + 32))(v235, v236, v237);
          uint64_t v238 = (int *)type metadata accessor for PressureComponentPreprocessedDataModel();
          *(_OWORD *)&v235[v238[5]] = *(_OWORD *)&v236[v238[5]];
          *(_OWORD *)&v235[v238[6]] = *(_OWORD *)&v236[v238[6]];
          *(_OWORD *)&v235[v238[7]] = *(_OWORD *)&v236[v238[7]];
          *(void *)&v235[v238[8]] = *(void *)&v236[v238[8]];
          *(_OWORD *)&v235[v238[9]] = *(_OWORD *)&v236[v238[9]];
          memcpy(&v270[v273[13]], &v272[v273[13]], 0xE8uLL);
          uint64_t v239 = v273[14];
          uint64_t v240 = &v270[v239];
          int v241 = &v272[v239];
          ((void (*)(char *, char *, uint64_t))v266)(&v270[v239], &v272[v239], v269);
          uint64_t v242 = *(int *)(v215 + 20);
          uint64_t v243 = &v240[v242];
          uint64_t v244 = &v241[v242];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v241[v242], 1, v219))
          {
            uint64_t v245 = sub_10017DF08(&qword_100E63760);
            memcpy(v243, v244, *(void *)(*(void *)(v245 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v219 - 8) + 32))(v243, v244, v219);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v243, 0, 1, v219);
          }
          uint64_t v246 = *(int *)(v215 + 24);
          uint64_t v247 = &v240[v246];
          uint64_t v248 = &v241[v246];
          if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v248, 1, v267))
          {
            uint64_t v249 = sub_10017DF08(&qword_100E63768);
            memcpy(v247, v248, *(void *)(*(void *)(v249 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v267 - 8) + 32))(v247, v248, v267);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v247, 0, 1, v267);
          }
          memcpy(&v270[v273[15]], &v272[v273[15]], 0x70uLL);
          uint64_t v250 = *(int *)(v271 + 80);
          unint64_t v96 = (char *)a1 + v250;
          int v97 = (char *)a2 + v250;
          uint64_t v98 = type metadata accessor for NewsDataModel();
          if (!swift_getEnumCaseMultiPayload()) {
            goto LABEL_177;
          }
          goto LABEL_176;
        case 5u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v95 = *(int *)(sub_10017DF08(&qword_100E6BBB0) + 48);
          unint64_t v96 = (char *)a1 + v95;
          int v97 = (char *)a2 + v95;
          uint64_t v98 = type metadata accessor for NewsDataModel();
          if (swift_getEnumCaseMultiPayload())
          {
LABEL_176:
            memcpy(v96, v97, *(void *)(*(void *)(v98 - 8) + 64));
          }
          else
          {
LABEL_177:
            uint64_t v251 = type metadata accessor for News();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v251 - 8) + 32))(v96, v97, v251);
            swift_storeEnumTagMultiPayload();
          }
          goto LABEL_178;
        case 6u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v99 = *(int *)(sub_10017DF08(&qword_100E6BBB8) + 48);
          uint64_t v100 = (char *)a1 + v99;
          uint64_t v101 = (char *)a2 + v99;
          uint64_t v102 = type metadata accessor for AvailableDataSets();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32))(v100, v101, v102);
          goto LABEL_178;
        case 8u:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v103 = *(int *)(sub_10017DF08(&qword_100E6BBA8) + 48);
          uint64_t v104 = (char *)a1 + v103;
          uint64_t v105 = (char *)a2 + v103;
          uint64_t v106 = type metadata accessor for WeatherStatisticsModel();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 32))(v104, v105, v106);
LABEL_178:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v36 - 8) + 64));
          break;
      }
      goto LABEL_194;
    case 0xAu:
      uint64_t v7 = type metadata accessor for DebugAction();
      int v47 = swift_getEnumCaseMultiPayload();
      if (v47 == 1) {
        goto LABEL_40;
      }
      if (v47) {
        goto LABEL_36;
      }
      uint64_t v48 = type metadata accessor for WeatherCondition();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v48))
      {
        uint64_t v49 = sub_10017DF08(&qword_100E63A50);
        memcpy(a1, a2, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v48 - 8) + 32))(a1, a2, v48);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v48);
      }
      uint64_t v115 = sub_10017DF08(&qword_100E6F648);
      *(_OWORD *)((char *)a1 + *(int *)(v115 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v115 + 48));
      goto LABEL_193;
    case 0xBu:
      uint64_t v7 = type metadata accessor for ConditionDetailViewAction();
      int v16 = swift_getEnumCaseMultiPayload();
      switch(v16)
      {
        case 2:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          uint64_t v52 = (int *)type metadata accessor for DetailChartSelection();
          uint64_t v53 = v52[5];
          uint64_t v54 = (char *)a1 + v53;
          uint64_t v55 = (char *)a2 + v53;
          uint64_t v56 = type metadata accessor for Date();
          uint64_t v57 = *(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 32);
          v57(v54, v55, v56);
          v57((char *)a1 + v52[6], (char *)a2 + v52[6], v56);
          v57((char *)a1 + v52[7], (char *)a2 + v52[7], v56);
          *(void *)((char *)a1 + v52[8]) = *(void *)((char *)a2 + v52[8]);
          uint64_t v58 = v52[9];
          uint64_t v59 = (char *)a1 + v58;
          long long v60 = (char *)a2 + v58;
          v59[8] = v60[8];
          *(void *)uint64_t v59 = *(void *)v60;
          goto LABEL_193;
        case 1:
          uint64_t v61 = type metadata accessor for DetailCondition();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v61 - 8) + 32))(a1, a2, v61);
          goto LABEL_193;
        case 0:
LABEL_14:
          uint64_t v17 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 32))(a1, a2, v17);
          goto LABEL_193;
      }
LABEL_36:
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      goto LABEL_194;
    case 0xDu:
      uint64_t v7 = type metadata accessor for MoonDetailViewAction();
      int v18 = swift_getEnumCaseMultiPayload();
      if (v18 == 1) {
        goto LABEL_14;
      }
      if (v18) {
        goto LABEL_36;
      }
      type metadata accessor for MoonDetailSelectedDate();
      swift_getEnumCaseMultiPayload();
      uint64_t v19 = type metadata accessor for Date();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 32))(a1, a2, v19);
      swift_storeEnumTagMultiPayload();
      goto LABEL_193;
    case 0xEu:
      uint64_t v7 = type metadata accessor for AveragesDetailViewAction();
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_36;
      }
      *a1 = *a2;
      uint64_t v20 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
      uint64_t v21 = v20[5];
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
      *(void *)((char *)a1 + v20[6]) = *(void *)((char *)a2 + v20[6]);
      *(void *)((char *)a1 + v20[7]) = *(void *)((char *)a2 + v20[7]);
      swift_storeEnumTagMultiPayload();
      goto LABEL_194;
    case 0x11u:
      uint64_t v25 = type metadata accessor for PerformanceTestAction();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v26 = type metadata accessor for DetailCondition();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v26 - 8) + 32))(a1, a2, v26);
          goto LABEL_82;
        case 2u:
          uint64_t v88 = type metadata accessor for Location();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v88 - 8) + 32))(a1, a2, v88);
          goto LABEL_82;
        case 3u:
          *a1 = *a2;
          uint64_t v89 = sub_10017DF08((uint64_t *)&unk_100EA0250);
          uint64_t v90 = *(int *)(v89 + 48);
          uint64_t v91 = (char *)a1 + v90;
          uint64_t v92 = (char *)a2 + v90;
          uint64_t v93 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 32))(v91, v92, v93);
          *((unsigned char *)a1 + *(int *)(v89 + 64)) = *((unsigned char *)a2 + *(int *)(v89 + 64));
          goto LABEL_82;
        case 4u:
          uint64_t v94 = type metadata accessor for WeatherCondition();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v94 - 8) + 32))(a1, a2, v94);
LABEL_82:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v25 - 8) + 64));
          break;
      }
      goto LABEL_194;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
  }
}

uint64_t sub_10055D530()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = type metadata accessor for DispatchQoS();
  uint64_t v4 = *(void *)(v14[0] - 8);
  __chkstk_darwin(v14[0]);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS.QoSClass();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001AB3E0();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for DispatchQoS.QoSClass.utility(_:), v7);
  uint64_t v11 = (void *)static OS_dispatch_queue.global(qos:)();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  aBlock[4] = sub_10055D83C;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10010A4D4;
  aBlock[3] = &unk_100E1A3D0;
  uint64_t v12 = _Block_copy(aBlock);
  static DispatchQoS.unspecified.getter();
  v14[1] = _swiftEmptyArrayStorage;
  sub_100216874();
  sub_10017DF08(&qword_100E75530);
  sub_100115EDC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v12);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, void))(v4 + 8))(v6, v14[0]);
}

void sub_10055D83C()
{
  if (qword_100E62820 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1002102B0(v0, (uint64_t)qword_100F51F68);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Starting widget timeline reload", v3, 2u);
    swift_slowDealloc();
  }

  type metadata accessor for WidgetCenter();
  static WidgetCenter.shared.getter();
  dispatch thunk of WidgetCenter.reloadAllTimelines()();
  swift_release();
  oslog = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v4, "Finished widget timeline reload", v5, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_10055DA38()
{
  return Debounce.run(finished:)();
}

void sub_10055DA74()
{
  type metadata accessor for WidgetCenter();
  static WidgetCenter.shared.getter();
  dispatch thunk of WidgetCenter.reloadAllTimelines()();
  swift_release();
  if (qword_100E62820 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_1002102B0(v0, (uint64_t)qword_100F51F68);
  oslog = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    os_log_type_t v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "Finished widget timeline reload without debounce", v2, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_10055DB7C()
{
  return sub_10055DA38();
}

unint64_t sub_10055DB8C(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v20 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 9);
    unsigned __int8 v9 = *(unsigned char *)(a2 + 8);
    sub_100193DD4(*(void *)a2, v9, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v9;
    *(unsigned char *)(a1 + 9) = v8;
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = a1 + v10;
    uint64_t v12 = a2 + v10;
    uint64_t v13 = type metadata accessor for TemperatureScaleConfiguration();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    uint64_t v14 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    *(void *)(v11 + v14[5]) = *(void *)(v12 + v14[5]);
    *(void *)(v11 + v14[6]) = *(void *)(v12 + v14[6]);
    *(void *)(v11 + v14[7]) = *(void *)(v12 + v14[7]);
    uint64_t v15 = v14[8];
    int v16 = (void *)(v11 + v15);
    uint64_t v17 = (uint64_t *)(v12 + v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    *int v16 = v19;
    v16[1] = v18;
    *(unsigned char *)(v11 + v14[9]) = *(unsigned char *)(v12 + v14[9]);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_10055DCDC(uint64_t a1, uint64_t a2)
{
  sub_10014D82C(*(void *)a1, *(unsigned __int8 *)(a1 + 8), *(unsigned char *)(a1 + 9));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10055DD74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 9);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 8);
  sub_100193DD4(*(void *)a2, v8, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v8;
  *(unsigned char *)(a1 + 9) = v7;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  uint64_t v13 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(void *)(v10 + v13[5]) = *(void *)(v11 + v13[5]);
  *(void *)(v10 + v13[6]) = *(void *)(v11 + v13[6]);
  *(void *)(v10 + v13[7]) = *(void *)(v11 + v13[7]);
  uint64_t v14 = v13[8];
  uint64_t v15 = (void *)(v10 + v14);
  int v16 = (uint64_t *)(v11 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *uint64_t v15 = v18;
  v15[1] = v17;
  *(unsigned char *)(v10 + v13[9]) = *(unsigned char *)(v11 + v13[9]);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_10055DE74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 9);
  unsigned __int8 v8 = *(unsigned char *)(a2 + 8);
  sub_100193DD4(*(void *)a2, v8, v7);
  uint64_t v9 = *(void *)a1;
  char v10 = *(unsigned char *)(a1 + 9);
  *(void *)a1 = v6;
  uint64_t v11 = *(unsigned __int8 *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v8;
  *(unsigned char *)(a1 + 9) = v7;
  sub_10014D82C(v9, v11, v10);
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  int v16 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(void *)(v13 + v16[5]) = *(void *)(v14 + v16[5]);
  *(void *)(v13 + v16[6]) = *(void *)(v14 + v16[6]);
  *(void *)(v13 + v16[7]) = *(void *)(v14 + v16[7]);
  uint64_t v17 = v16[8];
  uint64_t v18 = (void *)(v13 + v17);
  uint64_t v19 = (void *)(v14 + v17);
  void *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v13 + v16[9]) = *(unsigned char *)(v14 + v16[9]);
  return a1;
}

uint64_t sub_10055DF98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  unsigned __int8 v8 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(void *)(v5 + v8[5]) = *(void *)(v6 + v8[5]);
  *(void *)(v5 + v8[6]) = *(void *)(v6 + v8[6]);
  *(void *)(v5 + v8[7]) = *(void *)(v6 + v8[7]);
  *(_OWORD *)(v5 + v8[8]) = *(_OWORD *)(v6 + v8[8]);
  *(unsigned char *)(v5 + v8[9]) = *(unsigned char *)(v6 + v8[9]);
  return a1;
}

uint64_t sub_10055E060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v6 = *(unsigned char *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 9);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 9);
  *(void *)a1 = *(void *)a2;
  uint64_t v10 = *(unsigned __int8 *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 9) = v7;
  sub_10014D82C(v8, v10, v9);
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = type metadata accessor for TemperatureScaleConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = (int *)type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  *(void *)(v12 + v15[5]) = *(void *)(v13 + v15[5]);
  *(void *)(v12 + v15[6]) = *(void *)(v13 + v15[6]);
  *(void *)(v12 + v15[7]) = *(void *)(v13 + v15[7]);
  uint64_t v16 = v15[8];
  uint64_t v17 = (void *)(v12 + v16);
  uint64_t v18 = (uint64_t *)(v13 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  void *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v12 + v15[9]) = *(unsigned char *)(v13 + v15[9]);
  return a1;
}

uint64_t sub_10055E15C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10055E170);
}

uint64_t sub_10055E170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 9);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_10055E1F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10055E204);
}

uint64_t sub_10055E204(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 9) = -(char)a2;
  }
  else
  {
    uint64_t v7 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for FeelsLikeComponentVarianceView()
{
  uint64_t result = qword_100E7F610;
  if (!qword_100E7F610) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10055E2C8()
{
  uint64_t result = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10055E360()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10055E37C()
{
  uint64_t v15 = type metadata accessor for TemperatureScaleConfiguration();
  uint64_t v1 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  sub_1001626E0();
  uint64_t v4 = v3 - v2;
  uint64_t v5 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = type metadata accessor for FeelsLikeVarianceView.Configuration();
  __chkstk_darwin(v9 - 8);
  sub_1001626E0();
  uint64_t v10 = type metadata accessor for FeelsLikeComponentVarianceView();
  sub_10055E5A4(v0 + *(int *)(v10 + 20), v8);
  uint64_t v11 = *(void *)v0;
  uint64_t v12 = *(unsigned __int8 *)(v0 + 8);
  char v13 = *(unsigned char *)(v0 + 9);
  sub_100193DD4(v11, v12, v13);
  sub_1001F8BA0();
  sub_10014D82C(v11, v12, v13);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v4, v8, v15);
  swift_bridgeObjectRetain();
  FeelsLikeVarianceView.Configuration.init(contentWidth:gradientScale:actualTemperature:feelsLikeTemperature:differenceThreshold:differenceText:useDayGradient:)();
  sub_10055E608(v8);
  return FeelsLikeVarianceView.init(configuration:)();
}

uint64_t sub_10055E5A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10055E608(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FeelsLikeComponentViewModel.SignificantDifference.Variance(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_10055E668()
{
  unint64_t result = qword_100E7F648;
  if (!qword_100E7F648)
  {
    type metadata accessor for FeelsLikeVarianceView();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7F648);
  }
  return result;
}

void sub_10055E6B8(uint64_t *a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for SubscriptionEntity() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_100315308();
    uint64_t v3 = v4;
  }
  uint64_t v5 = *(void *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_100561244(v6, (uint64_t (*)(void))&type metadata accessor for SubscriptionEntity, sub_100AD54DC, (void (*)(uint64_t))&SubscriptionEntity.created.getter, (uint64_t (*)(uint64_t, uint64_t))&static Date.< infix(_:_:), (uint64_t (*)(void))&type metadata accessor for SubscriptionEntity, (uint64_t)sub_1007EB41C, (void (*)(uint64_t))&SubscriptionEntity.created.getter, (uint64_t (*)(uint64_t, char *))&static Date.< infix(_:_:));
  *a1 = v3;
}

void sub_10055E7F0(uint64_t *a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for SevereNotificationEntity() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_100315318();
    uint64_t v3 = v4;
  }
  uint64_t v5 = *(void *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_100561244(v6, (uint64_t (*)(void))&type metadata accessor for SevereNotificationEntity, sub_100AD54C4, (void (*)(uint64_t))&SevereNotificationEntity.date.getter, (uint64_t (*)(uint64_t, uint64_t))&static Date.> infix(_:_:), (uint64_t (*)(void))&type metadata accessor for SevereNotificationEntity, (uint64_t)sub_1007EB434, (void (*)(uint64_t))&SevereNotificationEntity.date.getter, (uint64_t (*)(uint64_t, char *))&static Date.> infix(_:_:));
  *a1 = v3;
}

void sub_10055E928(uint64_t *a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for IncomingMessageEntity() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_100315328();
    uint64_t v3 = v4;
  }
  uint64_t v5 = *(void *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_100561244(v6, (uint64_t (*)(void))&type metadata accessor for IncomingMessageEntity, sub_100AD54F4, (void (*)(uint64_t))&IncomingMessageEntity.date.getter, (uint64_t (*)(uint64_t, uint64_t))&static Date.> infix(_:_:), (uint64_t (*)(void))&type metadata accessor for IncomingMessageEntity, (uint64_t)sub_1007EB44C, (void (*)(uint64_t))&IncomingMessageEntity.date.getter, (uint64_t (*)(uint64_t, char *))&static Date.> infix(_:_:));
  *a1 = v3;
}

void sub_10055EA60(uint64_t *a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for DeliveryScheduleEntity() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_100315338();
    uint64_t v3 = v4;
  }
  uint64_t v5 = *(void *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_100561244(v6, (uint64_t (*)(void))&type metadata accessor for DeliveryScheduleEntity, sub_100AD550C, (void (*)(uint64_t))&DeliveryScheduleEntity.created.getter, (uint64_t (*)(uint64_t, uint64_t))&static Date.> infix(_:_:), (uint64_t (*)(void))&type metadata accessor for DeliveryScheduleEntity, (uint64_t)sub_1007EB464, (void (*)(uint64_t))&DeliveryScheduleEntity.created.getter, (uint64_t (*)(uint64_t, char *))&static Date.> infix(_:_:));
  *a1 = v3;
}

void sub_10055EB98(uint64_t *a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for FetchScheduleEntity() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_100315348();
    uint64_t v3 = v4;
  }
  uint64_t v5 = *(void *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_100561244(v6, (uint64_t (*)(void))&type metadata accessor for FetchScheduleEntity, sub_100AD5524, (void (*)(uint64_t))&FetchScheduleEntity.created.getter, (uint64_t (*)(uint64_t, uint64_t))&static Date.> infix(_:_:), (uint64_t (*)(void))&type metadata accessor for FetchScheduleEntity, (uint64_t)sub_1007EB47C, (void (*)(uint64_t))&FetchScheduleEntity.created.getter, (uint64_t (*)(uint64_t, char *))&static Date.> infix(_:_:));
  *a1 = v3;
}

uint64_t sub_10055ECD0()
{
  uint64_t v1 = OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController____lazy_storage___subscriptions;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController____lazy_storage___subscriptions))
  {
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController____lazy_storage___subscriptions);
  }
  else
  {
    uint64_t v2 = sub_10055ED38();
    *(void *)(v0 + v1) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_10055ED38()
{
  NotificationStore.subscriptions.getter();
  dispatch thunk of Table.query.getter();
  swift_release();
  uint64_t v0 = dispatch thunk of Query.all()();
  swift_release();
  uint64_t v2 = v0;
  swift_bridgeObjectRetain();
  sub_10055E6B8(&v2);
  swift_bridgeObjectRelease();
  return v2;
}

id sub_10055EDF8()
{
  uint64_t v1 = OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController____lazy_storage___dateFormatter;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController____lazy_storage___dateFormatter);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController____lazy_storage___dateFormatter);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)NSDateFormatter) init];
    [v4 setDateStyle:1];
    [v4 setTimeStyle:2];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_10055EE94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v3[OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController____lazy_storage___subscriptions] = 0;
  *(void *)&v3[OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController____lazy_storage___dateFormatter] = 0;
  sub_1001E9994(a1, (uint64_t)&v3[OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController_notificationsManager]);
  *(void *)&v3[OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController_notificationStore] = a2;
  sub_1001E9994(a3, (uint64_t)&v3[OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController_notificationSubscriptionManager]);
  v9.receiver = v3;
  v9.super_class = (Class)type metadata accessor for DebugNotificationSubscriptionsViewController();
  id v7 = [super initWithStyle:2];
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a3);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  return v7;
}

void sub_10055EF48()
{
  *(void *)&v0[OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController____lazy_storage___subscriptions] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController____lazy_storage___dateFormatter] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10055EFD4()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for DebugNotificationSubscriptionsViewController();
  [super viewDidLoad];
  id v1 = [v0 tableView];
  if (v1)
  {
    uint64_t v2 = v1;
    sub_1001ABC4C(0, (unint64_t *)&qword_100E73CE0);
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    NSString v4 = String._bridgeToObjectiveC()();
    [v2 registerClass:ObjCClassFromMetadata forCellReuseIdentifier:v4];

    sub_10040BF9C(0x6163696669746F4ELL, 0xED0000736E6F6974, v0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10055F108(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = 2;
  switch(a2)
  {
    case 0:
      uint64_t v2 = *(void *)(sub_10055ECD0() + 16);
      swift_bridgeObjectRelease();
      break;
    case 1:
    case 2:
      return v2;
    case 3:
      uint64_t v2 = 3;
      break;
    case 4:
      uint64_t v2 = 1;
      break;
    default:
      uint64_t v2 = 0;
      break;
  }
  return v2;
}

unint64_t sub_10055F1E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = 0x7069726373627553;
  if (a2) {
    uint64_t v2 = 0;
  }
  if (a2 == 3) {
    return 0xD000000000000014;
  }
  else {
    return v2;
  }
}

unint64_t sub_10055F250(uint64_t a1, uint64_t a2)
{
  switch(a2)
  {
    case 0:
      unint64_t result = 0xD00000000000004DLL;
      break;
    case 1:
      unint64_t result = 0xD000000000000060;
      break;
    case 2:
      unint64_t result = 0xD000000000000053;
      break;
    case 3:
      unint64_t result = 0xD000000000000047;
      break;
    case 4:
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      unint64_t result = 0;
      break;
  }
  return result;
}

id sub_10055F338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  a5(a1, a4);
  if (v5)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }

  return v6;
}

id sub_10055F394(void *a1)
{
  NSString v2 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v4 = [a1 dequeueReusableCellWithIdentifier:v2 forIndexPath:isa];

  if (IndexPath.section.getter())
  {
    if (IndexPath.section.getter() == 1)
    {
      if (IndexPath.row.getter())
      {
        if (IndexPath.row.getter() == 1) {
          sub_100560DC8(v4);
        }
      }
      else
      {
        sub_100560794();
      }
    }
    else if (IndexPath.section.getter() == 2)
    {
      if (IndexPath.row.getter())
      {
        if (IndexPath.row.getter() == 1) {
          sub_100560E0C(v4);
        }
      }
      else
      {
        sub_100560DE0((uint64_t)v4, v6, v7, v8);
      }
    }
    else if (IndexPath.section.getter() == 3)
    {
      if (IndexPath.row.getter())
      {
        if (IndexPath.row.getter() == 1)
        {
          sub_100560E64(v4);
        }
        else if (IndexPath.row.getter() == 2)
        {
          sub_100560E7C(v4);
        }
      }
      else
      {
        sub_100560F98((uint64_t)v4, v9, v10, v11);
      }
    }
    else if (IndexPath.section.getter() == 4)
    {
      sub_100560E24((uint64_t)v4);
    }
  }
  else
  {
    unint64_t v5 = IndexPath.row.getter();
    sub_100560474(v4, v5);
  }
  return v4;
}

void sub_10055F624(void *a1, uint64_t a2)
{
  id v3 = v2;
  id v65 = a1;
  uint64_t v5 = type metadata accessor for IndexPath();
  sub_100179C0C();
  uint64_t v64 = v6;
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v9);
  uint64_t v10 = type metadata accessor for SubscriptionEntity();
  sub_100179C0C();
  uint64_t v12 = v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v64 - v17;
  if (!IndexPath.section.getter())
  {
    uint64_t v22 = v12;
    unint64_t v23 = IndexPath.row.getter();
    uint64_t v24 = sub_10055ECD0();
    if ((v23 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v23 < *(void *)(v24 + 16))
    {
      uint64_t v25 = v3;
      uint64_t v26 = v22 + 16;
      uint64_t v27 = *(void (**)(char *, unint64_t, uint64_t))(v22 + 16);
      v27(v18, v24+ ((*(unsigned __int8 *)(v26 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 64))+ *(void *)(v26 + 56) * v23, v10);
      swift_bridgeObjectRelease();
      v27(v15, (unint64_t)v18, v10);
      objc_allocWithZone((Class)type metadata accessor for DebugNotificationSubscriptionViewController());
      uint64_t v28 = swift_retain();
      id v29 = sub_100695C24(v28);
      id v30 = [v25 navigationController];
      if (v30)
      {
        int v31 = v30;
        [v30 pushViewController:v29 animated:1];

        uint64_t v32 = sub_100186A24();
        v33(v32);
      }
      else
      {
        uint64_t v38 = sub_100186A24();
        v39(v38);
      }
      goto LABEL_32;
    }
    __break(1u);
    sub_100163640();
    swift_unexpectedError();
    __break(1u);
    return;
  }
  if (IndexPath.section.getter() == 1)
  {
    if (IndexPath.row.getter())
    {
      if (IndexPath.row.getter() == 1)
      {
        NotificationStore.fetchSchedules.getter();
        dispatch thunk of Table.query.getter();
        swift_release();
        dispatch thunk of Query.all()();
        swift_release();
        sub_1001830A0();
        sub_10055EB98(v66);
        swift_bridgeObjectRelease();
        sub_1001650D8();
        id v19 = objc_allocWithZone((Class)type metadata accessor for DebugNotificationFetchSchedulesViewController());
        uint64_t v20 = sub_1001A2CAC();
        id v65 = sub_100B51924(v20);
        id v21 = [v3 navigationController];
        goto LABEL_27;
      }
    }
    else
    {
      sub_1001B1E64(&v3[OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController_notificationsManager], *(void *)&v3[OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController_notificationsManager + 24]);
      dispatch thunk of NotificationsManagerProxyType.schedule()();
      sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
      uint64_t v40 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v41 = v64;
      (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))((char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v5);
      unint64_t v42 = (*(unsigned __int8 *)(v41 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
      uint64_t v43 = swift_allocObject();
      id v44 = v65;
      *(void *)(v43 + 16) = v65;
      (*(void (**)(unint64_t, char *, uint64_t))(v41 + 32))(v43 + v42, (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
      id v45 = v44;
      Promise.always(on:closure:)();
      swift_release();
      swift_release();
      swift_release();

      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      [v45 deselectRowAtIndexPath:isa animated:1];
    }
LABEL_32:
    sub_100162694();
    return;
  }
  if (IndexPath.section.getter() == 2)
  {
    if (IndexPath.row.getter())
    {
      if (IndexPath.row.getter() != 1) {
        goto LABEL_32;
      }
      NotificationStore.deliverySchedules.getter();
      dispatch thunk of Table.query.getter();
      swift_release();
      dispatch thunk of Query.all()();
      swift_release();
      sub_1001830A0();
      sub_10055EA60(v66);
      swift_bridgeObjectRelease();
      sub_1001650D8();
      id v34 = objc_allocWithZone((Class)type metadata accessor for DebugNotificationDeliverySchedulesViewController());
      uint64_t v35 = sub_1001A2CAC();
      id v65 = sub_1008CFF08(v35);
      id v21 = [v3 navigationController];
LABEL_27:
      id v60 = v21;
      if (v60)
      {
        uint64_t v61 = v60;
        [v60 pushViewController:v65 animated:1];
      }
      goto LABEL_29;
    }
    sub_10017F414(OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController_notificationsManager);
    dispatch thunk of NotificationsManagerProxyType.evaluate()();
    sub_1001ABC4C(0, (unint64_t *)&qword_100E62D10);
    uint64_t v53 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v54 = swift_allocObject();
    id v55 = v65;
    *(void *)(v54 + 16) = v65;
    id v56 = v55;
    Promise.always(on:closure:)();
    swift_release();
    swift_release();

    swift_release();
    id v65 = IndexPath._bridgeToObjectiveC()().super.isa;
    [v56 deselectRowAtIndexPath:v65 animated:1];
  }
  else if (IndexPath.section.getter() == 3)
  {
    if (IndexPath.row.getter())
    {
      if (IndexPath.row.getter() == 1)
      {
        NotificationStore.incomingMessages.getter();
        dispatch thunk of Table.query.getter();
        swift_release();
        uint64_t v36 = dispatch thunk of Query.all()();
        swift_release();
        sub_1001830A0();
        sub_10055E928(v66);
        swift_bridgeObjectRelease();
        sub_1001650D8();
        objc_allocWithZone((Class)type metadata accessor for DebugIncomingMessagesViewController());
        uint64_t v37 = swift_retain();
        id v65 = sub_100631FC0(v37, v36);
        id v21 = [v3 navigationController];
      }
      else
      {
        if (IndexPath.row.getter() != 2) {
          goto LABEL_32;
        }
        NotificationStore.severeNotifications.getter();
        dispatch thunk of Table.query.getter();
        swift_release();
        dispatch thunk of Query.all()();
        swift_release();
        sub_1001830A0();
        sub_10055E7F0(v66);
        swift_bridgeObjectRelease();
        sub_1001650D8();
        id v58 = objc_allocWithZone((Class)type metadata accessor for DebugSevereNotificationsViewController());
        uint64_t v59 = sub_1001A2CAC();
        id v65 = sub_10095C038(v59);
        id v21 = [v3 navigationController];
      }
      goto LABEL_27;
    }
    sub_10017F414(OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController_notificationsManager);
    dispatch thunk of NotificationsManagerProxyType.validate()();
    swift_release();
    v57.super.Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    [v65 deselectRowAtIndexPath:v57.super.isa animated:1];
  }
  else
  {
    if (IndexPath.section.getter() != 4) {
      goto LABEL_32;
    }
    sub_1001ABC4C(0, &qword_100E6C0A8);
    id v47 = sub_10071090C(0xD000000000000013, 0x8000000100CA48E0, 0xD000000000000056, 0x8000000100CA4900, 1);
    sub_1001ABC4C(0, &qword_100E6C0B0);
    uint64_t v48 = swift_allocObject();
    *(void *)(v48 + 16) = v3;
    uint64_t v49 = v3;
    id v50 = sub_1007109C4(0x7465736552, 0xE500000000000000, 2, (uint64_t)sub_100562C7C, v48);
    id v51 = sub_1007109C4(0x6C65636E6143, 0xE600000000000000, 1, 0, 0);
    [v47 addAction:v50];
    [v47 addAction:v51];
    [v49 presentViewController:v47 animated:1 completion:0];
    v52.super.Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    [v65 deselectRowAtIndexPath:v52.super.isa animated:1];
  }
LABEL_29:
  sub_100162694();
}

void sub_10055FF80(void *a1, uint64_t a2)
{
  sub_10017DF08(&qword_100E72B28);
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_100C251B0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 16))(v7 + v6, a2, v4);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a1 reloadRowsAtIndexPaths:isa withRowAnimation:0];
}

void sub_1005600A8(void *a1)
{
  sub_10017DF08(&qword_100E72B28);
  type metadata accessor for IndexPath();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100C251B0;
  IndexPath.init(row:section:)();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a1 reloadRowsAtIndexPaths:isa withRowAnimation:0];
}

void sub_1005601B8(uint64_t a1, uint64_t a2)
{
  NotificationStore.subscriptions.getter();
  dispatch thunk of Table.delete.getter();
  swift_release();
  dispatch thunk of Delete.all()();
  swift_release();
  NotificationStore.deliverySchedules.getter();
  dispatch thunk of Table.delete.getter();
  swift_release();
  dispatch thunk of Delete.all()();
  swift_release();
  NotificationStore.fetchSchedules.getter();
  dispatch thunk of Table.delete.getter();
  swift_release();
  dispatch thunk of Delete.all()();
  swift_release();
  sub_1001B1E64((void *)(a2 + OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController_notificationsManager), *(void *)(a2 + OBJC_IVAR____TtC7Weather44DebugNotificationSubscriptionsViewController_notificationsManager + 24));
  dispatch thunk of NotificationsManagerProxyType.schedule()();
  id v3 = (id)zalgo.getter();
  Promise.always(on:closure:)();
  swift_release();
  swift_release();
}

void sub_100560364()
{
}

void sub_100560474(void *a1, unint64_t a2)
{
  uint64_t v40 = a1;
  uint64_t v3 = type metadata accessor for UIListContentConfiguration();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E7F6A8);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v38 = v15;
  uint64_t v39 = v14;
  __chkstk_darwin(v14);
  sub_1001626E0();
  uint64_t v18 = v17 - v16;
  uint64_t v19 = type metadata accessor for SubscriptionEntity();
  sub_100179C0C();
  uint64_t v21 = v20;
  __chkstk_darwin(v22);
  sub_1001626E0();
  uint64_t v25 = v24 - v23;
  uint64_t v26 = sub_10055ECD0();
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (*(void *)(v26 + 16) <= a2)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v21 + 16))(v25, v26+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(void *)(v21 + 72) * a2, v19);
  swift_bridgeObjectRelease();
  SubscriptionEntity.location.getter();
  dispatch thunk of Column.value.getter();
  swift_release();
  sub_10017DF08(&qword_100E7F6B0);
  uint64_t v27 = sub_1001629D8();
  if (_s7Weather24LocationCompositionStateOwet_0(v27, v28, v29) != 1)
  {
    JSON.value.getter();
    sub_100162880();
    (*(void (**)(uint64_t, unint64_t))(v30 + 8))(v13, a2);
    static UIListContentConfiguration.subtitleCell()();
    Location.name.getter();
    UIListContentConfiguration.text.setter();
    Location.id.getter();
    UIListContentConfiguration.secondaryText.setter();
    int v31 = (void (*)(uint64_t))UIListContentConfiguration.secondaryTextProperties.modify();
    UIListContentConfiguration.TextProperties.numberOfLines.setter();
    uint64_t v32 = sub_100181FD0();
    v31(v32);
    uint64_t v33 = (void (*)(uint64_t))UIListContentConfiguration.secondaryTextProperties.modify();
    UIListContentConfiguration.TextProperties.lineBreakMode.setter();
    uint64_t v34 = sub_100181FD0();
    v33(v34);
    v41[3] = v3;
    v41[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
    sub_100170694(v41);
    sub_10017A4E4();
    v35();
    uint64_t v36 = v40;
    UITableViewCell.contentConfiguration.setter();
    [v36 setAccessoryType:1];
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v18, v39);
    sub_1001851F4();
    v37();
    sub_100162694();
    return;
  }
LABEL_7:
  __break(1u);
}

void sub_100560794()
{
  uint64_t v1 = type metadata accessor for UIListContentConfiguration();
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_100189154();
  static UIListContentConfiguration.subtitleCell()();
  id v3 = [self blueColor];
  uint64_t v4 = (void (*)(uint64_t *, void))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.color.setter();
  v4(v7, 0);
  UIListContentConfiguration.text.setter();
  sub_1005608E0(v0);
  UIListContentConfiguration.secondaryText.setter();
  v7[3] = v1;
  v7[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  sub_100170694(v7);
  sub_10017A4E4();
  v5();
  UITableViewCell.contentConfiguration.setter();
  sub_100164938();
  v6();
  sub_100162694();
}

uint64_t sub_1005608E0(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E73CB8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (uint64_t *)((char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for Expression();
  uint64_t v36 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E7F6A0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  ScheduleEntitdouble y = type metadata accessor for FetchScheduleEntity();
  uint64_t v14 = *(void *)(ScheduleEntity - 8);
  __chkstk_darwin(ScheduleEntity);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  NotificationStore.fetchSchedules.getter();
  uint64_t v34 = v4;
  uint64_t v35 = v8;
  int v31 = v16;
  uint64_t v32 = a1;
  uint64_t v33 = v14;
  dispatch thunk of Table.query.getter();
  swift_release();
  uint64_t v39 = &type metadata for Bool;
  uint64_t v40 = &protocol witness table for Bool;
  v38[0] = 1;
  == infix(_:_:)();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v38);
  *uint64_t v7 = 1702125924;
  v7[1] = 0xE400000000000000;
  uint64_t v17 = enum case for OrderBy.descending(_:);
  uint64_t v18 = type metadata accessor for OrderBy();
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v7, v17, v18);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v18);
  dispatch thunk of Query.first(_:orderBy:)();
  swift_release();
  sub_100178254((uint64_t)v7, &qword_100E73CB8);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v35);
  uint64_t v21 = ScheduleEntity;
  int v22 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, ScheduleEntity);
  if (v22 == 1)
  {
    sub_100178254((uint64_t)v13, &qword_100E7F6A0);
    return 0x3F726576654ELL;
  }
  uint64_t v23 = v33;
  uint64_t v24 = v31;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v31, v13, v21);
  id v25 = sub_10055EDF8();
  FetchScheduleEntity.date.getter();
  uint64_t v26 = (uint64_t)v34;
  dispatch thunk of Column.value.getter();
  swift_release();
  uint64_t v27 = type metadata accessor for Date();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v26, 1, v27);
  if (result != 1)
  {
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
    id v29 = [v25 stringFromDate:isa];

    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v24, v21);
    return v19;
  }
  __break(1u);
  return result;
}

uint64_t sub_100560DC8(void *a1)
{
  return sub_10017CFC4(a1);
}

uint64_t sub_100560DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10017E5F4(a1, (void (*)(void))&static UIListContentConfiguration.cell(), 0x61756C617645, a4, (SEL *)&selRef_blueColor);
}

uint64_t sub_100560E0C(void *a1)
{
  return sub_10017CFC4(a1);
}

uint64_t sub_100560E24(uint64_t a1)
{
  return sub_100560FC4(a1, (void (*)(void))&static UIListContentConfiguration.subtitleCell(), 0x6144207465736552, 0xEE00657361626174, (SEL *)&selRef_redColor);
}

uint64_t sub_100560E64(void *a1)
{
  return sub_10017CFC4(a1);
}

uint64_t sub_100560E7C(void *a1)
{
  return sub_10017CFC4(a1);
}

uint64_t sub_100560E94(void *a1)
{
  uint64_t v2 = type metadata accessor for UIListContentConfiguration();
  sub_100179C0C();
  uint64_t v4 = v3;
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  static UIListContentConfiguration.subtitleCell()();
  UIListContentConfiguration.text.setter();
  v12[3] = v2;
  v12[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  uint64_t v9 = sub_100170694(v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v4 + 16))(v9, v8, v2);
  UITableViewCell.contentConfiguration.setter();
  [a1 setAccessoryType:1];
  sub_1001649A8();
  return v10();
}

uint64_t sub_100560F98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10017E5F4(a1, (void (*)(void))&static UIListContentConfiguration.cell(), 0x6164696C6156, a4, (SEL *)&selRef_blueColor);
}

uint64_t sub_100560FC4(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, SEL *a5)
{
  uint64_t v7 = type metadata accessor for UIListContentConfiguration();
  sub_100179C0C();
  __chkstk_darwin(v8);
  sub_100189154();
  a2();
  UIListContentConfiguration.text.setter();
  id v9 = [self *a5];
  uint64_t v10 = (void (*)(uint64_t *, void))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.color.setter();
  v10(v14, 0);
  v14[3] = v7;
  v14[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  sub_100170694(v14);
  sub_10017A4E4();
  v11();
  UITableViewCell.contentConfiguration.setter();
  sub_100164938();
  return v12();
}

void sub_1005610FC()
{
}

void sub_10056113C()
{
}

id sub_100561194()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DebugNotificationSubscriptionsViewController();
  return [super dealloc];
}

void sub_100561244(uint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(Swift::Int), void (*a4)(uint64_t), uint64_t (*a5)(uint64_t, uint64_t), uint64_t (*a6)(void), uint64_t a7, void (*a8)(uint64_t), uint64_t (*a9)(uint64_t, char *))
{
  uint64_t v197 = a6;
  uint64_t v206 = a5;
  uint64_t v207 = a4;
  uint64_t v13 = v9;
  uint64_t v195 = a7;
  uint64_t v196 = a9;
  uint64_t v15 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v16 = sub_100109308(v15);
  __chkstk_darwin(v16);
  sub_100162EF8();
  uint64_t v201 = v17;
  sub_1001626D4();
  __chkstk_darwin(v18);
  uint64_t v214 = (char *)&v175 - v19;
  sub_1001626D4();
  __chkstk_darwin(v20);
  int v22 = (char *)&v175 - v21;
  __chkstk_darwin(v23);
  sub_100109770();
  uint64_t v192 = v24;
  sub_1001626D4();
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v175 - v26;
  __chkstk_darwin(v28);
  sub_100128F8C();
  uint64_t v182 = v29;
  uint64_t v209 = a2(0);
  sub_100179C0C();
  uint64_t v198 = v30;
  __chkstk_darwin(v31);
  sub_100162EF8();
  uint64_t v189 = v32;
  sub_1001626D4();
  __chkstk_darwin(v33);
  sub_100109770();
  uint64_t v210 = v34;
  sub_1001626D4();
  __chkstk_darwin(v35);
  uint64_t v37 = (char *)&v175 - v36;
  __chkstk_darwin(v38);
  sub_100109770();
  uint64_t v213 = v39;
  sub_1001626D4();
  __chkstk_darwin(v40);
  sub_100109770();
  uint64_t v179 = v41;
  sub_1001626D4();
  __chkstk_darwin(v42);
  sub_100109770();
  uint64_t v191 = v43;
  sub_1001626D4();
  __chkstk_darwin(v44);
  sub_100109770();
  uint64_t v181 = v45;
  sub_1001626D4();
  __chkstk_darwin(v46);
  sub_100128F8C();
  uint64_t v180 = v47;
  uint64_t v216 = a1;
  Swift::Int v48 = a1[1];
  Swift::Int v183 = _minimumMergeRunLength(_:)(v48);
  if (v183 < v48)
  {
    uint64_t v177 = a3(v48 / 2);
    uint64_t v193 = v50;
    uint64_t v194 = a8;
    uint64_t v178 = v48;
    if (v48 <= 0)
    {
      NSIndexPath v52 = (char *)_swiftEmptyArrayStorage;
      unint64_t v120 = _swiftEmptyArrayStorage[2];
      goto LABEL_109;
    }
    uint64_t v199 = v37;
    uint64_t v176 = v27;
    id v51 = 0;
    uint64_t v204 = (void (**)(void))(v198 + 8);
    uint64_t v205 = v198 + 16;
    uint64_t v212 = (char **)(v198 + 32);
    NSIndexPath v52 = (char *)_swiftEmptyArrayStorage;
    uint64_t v188 = v22;
    while (1)
    {
      uint64_t v53 = (uint64_t)v51;
      Swift::Int v54 = (Swift::Int)v51 + 1;
      uint64_t v185 = v52;
      if ((uint64_t)v51 + 1 >= v48)
      {
        Swift::Int v82 = v183;
      }
      else
      {
        Swift::Int v211 = v48;
        uint64_t v55 = *v216;
        uint64_t v56 = *(void *)(v198 + 72);
        Swift::Int v187 = (Swift::Int)v51 + 1;
        NSIndexPath v57 = *(void (**)(void))(v198 + 16);
        sub_100179020();
        v57();
        uint64_t v215 = v56;
        uint64_t v208 = v57;
        sub_100179020();
        uint64_t v58 = ((uint64_t (*)(void))v57)();
        uint64_t v59 = v207;
        v207(v58);
        uint64_t v60 = v182;
        dispatch thunk of Column.value.getter();
        swift_release();
        uint64_t v61 = type metadata accessor for Date();
        uint64_t v62 = sub_10012B520(v60, 1, v61);
        if (v63) {
          goto LABEL_160;
        }
        uint64_t v190 = (void (*)(void))v53;
        v59(v62);
        uint64_t v64 = (uint64_t)v176;
        dispatch thunk of Column.value.getter();
        swift_release();
        sub_10012B520(v64, 1, v61);
        if (v63) {
          goto LABEL_161;
        }
        uint64_t v65 = v61;
        LODWORD(v203) = v206(v182, v64);
        sub_100162880();
        int v67 = *(void (**)(void))(v66 + 8);
        uint64_t v68 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(v66 + 8);
        sub_1001649A8();
        v67();
        uint64_t v202 = v67;
        uint64_t v200 = v68;
        sub_1001649A8();
        v67();
        int v69 = *v204;
        sub_1001649A8();
        v69();
        sub_1001649A8();
        v69();
        uint64_t v53 = (uint64_t)v190;
        Swift::Int v54 = (Swift::Int)v190 + 2;
        uint64_t v184 = v55;
        if ((uint64_t)v190 + 2 < v211)
        {
          uint64_t v175 = v13;
          v187 *= v215;
          uint64_t v70 = v55;
          uint64_t v186 = v215 * v54;
          uint64_t v13 = v179;
          while (1)
          {
            Swift::Int v71 = v54;
            uint64_t v72 = v209;
            uint64_t v73 = v65;
            int v74 = v208;
            ((void (*)(uint64_t, uint64_t, uint64_t))v208)(v191, v70 + v186, v209);
            uint64_t v75 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v74)(v13, v70 + v187, v72);
            uint64_t v65 = v73;
            uint64_t v76 = v207;
            v207(v75);
            uint64_t v77 = v192;
            dispatch thunk of Column.value.getter();
            swift_release();
            uint64_t v78 = sub_10012B520(v77, 1, v73);
            if (v63) {
              goto LABEL_156;
            }
            v76(v78);
            uint64_t v79 = (uint64_t)v188;
            dispatch thunk of Column.value.getter();
            swift_release();
            sub_10012B520(v79, 1, v73);
            if (v63) {
              goto LABEL_157;
            }
            int v80 = v206(v192, v79);
            uint64_t v81 = v202;
            sub_100164F40();
            v81();
            sub_100164F40();
            v81();
            uint64_t v53 = v209;
            NSIndexPath v52 = (char *)v204;
            sub_100164F40();
            v69();
            sub_100164F40();
            v69();
            if ((v203 ^ v80)) {
              break;
            }
            Swift::Int v54 = v71 + 1;
            v70 += v215;
            if (v71 + 1 >= v211)
            {
              Swift::Int v48 = v211;
              Swift::Int v54 = v211;
              sub_1001A16C8();
              goto LABEL_17;
            }
          }
          uint64_t v13 = v175;
          NSIndexPath v52 = v185;
          Swift::Int v54 = v71;
          uint64_t v53 = (uint64_t)v190;
          Swift::Int v48 = v211;
LABEL_17:
          uint64_t v55 = v184;
        }
        else
        {
          Swift::Int v48 = v211;
        }
        Swift::Int v82 = v183;
        if (v203)
        {
          if (v54 < v53) {
            goto LABEL_148;
          }
          if (v53 < v54)
          {
            uint64_t v83 = 0;
            uint64_t v84 = v215 * (v54 - 1);
            uint64_t v85 = v54 * v215;
            uint64_t v86 = v53 * v215;
            uint64_t v208 = (void (*)(void))v54;
            do
            {
              if (v53 != v54 + v83 - 1)
              {
                if (!v55) {
                  goto LABEL_158;
                }
                uint64_t v202 = (void (*)(void))(v55 + v84);
                uint64_t v203 = *v212;
                sub_1001627D4();
                v87();
                if (v86 < v84 || v55 + v86 >= (unint64_t)(v55 + v85))
                {
                  swift_arrayInitWithTakeFrontToBack();
                }
                else if (v86 != v84)
                {
                  swift_arrayInitWithTakeBackToFront();
                }
                sub_1001627D4();
                v89();
                NSIndexPath v52 = v185;
                Swift::Int v54 = (Swift::Int)v208;
                uint64_t v55 = v184;
              }
              ++v53;
              --v83;
              v84 -= v215;
              v85 -= v215;
              v86 += v215;
            }
            while (v53 < v54 + v83);
            Swift::Int v82 = v183;
            uint64_t v53 = (uint64_t)v190;
            Swift::Int v48 = v211;
          }
        }
      }
      if (v54 >= v48) {
        goto LABEL_55;
      }
      if (__OFSUB__(v54, v53)) {
        goto LABEL_146;
      }
      if (v54 - v53 >= v82) {
        goto LABEL_55;
      }
      if (__OFADD__(v53, v82)) {
        goto LABEL_149;
      }
      if (v53 + v82 >= v48) {
        Swift::Int v90 = v48;
      }
      else {
        Swift::Int v90 = v53 + v82;
      }
      if (v90 < v53) {
        goto LABEL_150;
      }
      if (v54 == v90) {
        goto LABEL_55;
      }
      uint64_t v190 = (void (*)(void))v53;
      uint64_t v175 = v13;
      uint64_t v53 = (uint64_t)v199;
      uint64_t v91 = *(void (**)(void))(v198 + 72);
      uint64_t v200 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v198 + 16);
      uint64_t v215 = (void)v91 * (v54 - 1);
      uint64_t v202 = v91;
      uint64_t v92 = (char *)(v54 * (void)v91);
      uint64_t v93 = v209;
      Swift::Int v187 = v90;
      do
      {
        uint64_t v94 = 0;
        uint64_t v95 = v190;
        uint64_t v208 = (void (*)(void))v54;
        uint64_t v203 = v92;
        while (1)
        {
          uint64_t v96 = *v216;
          Swift::Int v211 = (Swift::Int)&v92[v94];
          int v97 = &v92[v94 + v96];
          uint64_t v98 = v205;
          uint64_t v99 = v200;
          v200(v213, (uint64_t)v97, v93);
          uint64_t v13 = v215 + v94;
          uint64_t v100 = v99(v53, v215 + v94 + v96, v93);
          uint64_t v101 = v207;
          v207(v100);
          dispatch thunk of Column.value.getter();
          swift_release();
          type metadata accessor for Date();
          uint64_t v102 = sub_1001629D8();
          uint64_t v105 = sub_10012B520(v102, v103, v104);
          if (v63) {
            goto LABEL_152;
          }
          v101(v105);
          uint64_t v106 = v201;
          dispatch thunk of Column.value.getter();
          swift_release();
          sub_10012B520(v106, 1, v98);
          if (v63)
          {
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
            return;
          }
          int v107 = v214;
          char v108 = v206((uint64_t)v214, v106);
          sub_100162880();
          uint64_t v110 = *(void (**)(uint64_t, uint64_t))(v109 + 8);
          v110(v106, v98);
          v110((uint64_t)v107, v98);
          NSIndexPath v52 = (char *)v204;
          uint64_t v111 = *v204;
          uint64_t v93 = v209;
          sub_100164F40();
          ((void (*)(uint64_t))v111)(v112);
          sub_100164F40();
          ((void (*)(uint64_t))v111)(v113);
          if ((v108 & 1) == 0) {
            break;
          }
          uint64_t v92 = v203;
          if (!*v216) {
            goto LABEL_154;
          }
          NSIndexPath v52 = *v212;
          sub_1001627D4();
          ((void (*)(uint64_t))v52)(v114);
          swift_arrayInitWithTakeFrontToBack();
          sub_1001627D4();
          ((void (*)(uint64_t))v52)(v115);
          v94 -= (uint64_t)v202;
          uint64_t v95 = (void (*)(void))((char *)v95 + 1);
          uint64_t v116 = v208;
          uint64_t v53 = (uint64_t)v199;
          if (v208 == v95) {
            goto LABEL_53;
          }
        }
        uint64_t v116 = v208;
        uint64_t v92 = v203;
LABEL_53:
        Swift::Int v54 = (Swift::Int)v116 + 1;
        v215 += (uint64_t)v202;
        uint64_t v92 = (char *)v202 + (void)v92;
      }
      while (v54 != v187);
      Swift::Int v54 = v187;
      sub_1001A16C8();
LABEL_55:
      if (v54 < v53) {
        break;
      }
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v208 = (void (*)(void))v54;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        NSIndexPath v52 = sub_1001AA1B0(0, *((void *)v52 + 2) + 1, 1, v52);
      }
      unint64_t v119 = *((void *)v52 + 2);
      unint64_t v118 = *((void *)v52 + 3);
      unint64_t v120 = v119 + 1;
      if (v119 >= v118 >> 1) {
        NSIndexPath v52 = sub_1001AA1B0((char *)(v118 > 1), v119 + 1, 1, v52);
      }
      *((void *)v52 + 2) = v120;
      uint64_t v121 = v52 + 32;
      uint64_t v122 = &v52[16 * v119 + 32];
      uint64_t v123 = v208;
      *(void *)uint64_t v122 = v53;
      *((void *)v122 + 1) = v123;
      if (v119)
      {
        while (1)
        {
          unint64_t v124 = v120 - 1;
          if (v120 >= 4)
          {
            uint64_t v129 = &v121[16 * v120];
            uint64_t v130 = *((void *)v129 - 8);
            uint64_t v131 = *((void *)v129 - 7);
            BOOL v135 = __OFSUB__(v131, v130);
            uint64_t v132 = v131 - v130;
            if (v135) {
              goto LABEL_130;
            }
            uint64_t v134 = *((void *)v129 - 6);
            uint64_t v133 = *((void *)v129 - 5);
            BOOL v135 = __OFSUB__(v133, v134);
            uint64_t v127 = v133 - v134;
            char v128 = v135;
            if (v135) {
              goto LABEL_131;
            }
            unint64_t v136 = v120 - 2;
            uint64_t v137 = &v121[16 * v120 - 32];
            uint64_t v139 = *(void *)v137;
            uint64_t v138 = *((void *)v137 + 1);
            BOOL v135 = __OFSUB__(v138, v139);
            uint64_t v140 = v138 - v139;
            if (v135) {
              goto LABEL_132;
            }
            BOOL v135 = __OFADD__(v127, v140);
            uint64_t v141 = v127 + v140;
            if (v135) {
              goto LABEL_134;
            }
            if (v141 >= v132)
            {
              uint64_t v159 = &v121[16 * v124];
              uint64_t v161 = *(void *)v159;
              uint64_t v160 = *((void *)v159 + 1);
              BOOL v135 = __OFSUB__(v160, v161);
              uint64_t v162 = v160 - v161;
              if (v135) {
                goto LABEL_140;
              }
              BOOL v152 = v127 < v162;
              goto LABEL_92;
            }
          }
          else
          {
            if (v120 != 3)
            {
              uint64_t v153 = *((void *)v52 + 4);
              uint64_t v154 = *((void *)v52 + 5);
              BOOL v135 = __OFSUB__(v154, v153);
              uint64_t v146 = v154 - v153;
              char v147 = v135;
              goto LABEL_86;
            }
            uint64_t v126 = *((void *)v52 + 4);
            uint64_t v125 = *((void *)v52 + 5);
            BOOL v135 = __OFSUB__(v125, v126);
            uint64_t v127 = v125 - v126;
            char v128 = v135;
          }
          if (v128) {
            goto LABEL_133;
          }
          unint64_t v136 = v120 - 2;
          uint64_t v142 = &v121[16 * v120 - 32];
          uint64_t v144 = *(void *)v142;
          uint64_t v143 = *((void *)v142 + 1);
          BOOL v145 = __OFSUB__(v143, v144);
          uint64_t v146 = v143 - v144;
          char v147 = v145;
          if (v145) {
            goto LABEL_135;
          }
          uint64_t v148 = &v121[16 * v124];
          uint64_t v150 = *(void *)v148;
          uint64_t v149 = *((void *)v148 + 1);
          BOOL v135 = __OFSUB__(v149, v150);
          uint64_t v151 = v149 - v150;
          if (v135) {
            goto LABEL_137;
          }
          if (__OFADD__(v146, v151)) {
            goto LABEL_139;
          }
          if (v146 + v151 >= v127)
          {
            BOOL v152 = v127 < v151;
LABEL_92:
            if (v152) {
              unint64_t v124 = v136;
            }
            goto LABEL_94;
          }
LABEL_86:
          if (v147) {
            goto LABEL_136;
          }
          uint64_t v155 = &v121[16 * v124];
          uint64_t v157 = *(void *)v155;
          uint64_t v156 = *((void *)v155 + 1);
          BOOL v135 = __OFSUB__(v156, v157);
          uint64_t v158 = v156 - v157;
          if (v135) {
            goto LABEL_138;
          }
          if (v158 < v146) {
            goto LABEL_103;
          }
LABEL_94:
          unint64_t v163 = v124 - 1;
          if (v124 - 1 >= v120)
          {
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
            goto LABEL_141;
          }
          if (!*v216) {
            goto LABEL_155;
          }
          uint64_t v164 = &v121[16 * v163];
          uint64_t v165 = *(void *)v164;
          uint64_t v166 = &v121[16 * v124];
          uint64_t v167 = *((void *)v166 + 1);
          sub_100183BE8(*v216 + *(void *)(v198 + 72) * *(void *)v164, *v216 + *(void *)(v198 + 72) * *(void *)v166, (char *)(*v216 + *(void *)(v198 + 72) * v167), v49, v197);
          uint64_t v13 = v9;
          if (v9)
          {
LABEL_121:
            swift_bridgeObjectRelease();
            if (v178 >= -1) {
              goto LABEL_124;
            }
            __break(1u);
LABEL_123:
            swift_bridgeObjectRelease();
            if (v178 >= -1)
            {
LABEL_124:
              *(void *)(v177 + 16) = 0;
              swift_bridgeObjectRelease();
              return;
            }
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
            goto LABEL_153;
          }
          if (v167 < v165) {
            goto LABEL_127;
          }
          if (v124 > *((void *)v52 + 2)) {
            goto LABEL_128;
          }
          *(void *)uint64_t v164 = v165;
          *(void *)&v121[16 * v163 + 8] = v167;
          unint64_t v168 = *((void *)v52 + 2);
          if (v124 >= v168) {
            goto LABEL_129;
          }
          unint64_t v120 = v168 - 1;
          memmove(&v121[16 * v124], v166 + 16, 16 * (v168 - 1 - v124));
          *((void *)v52 + 2) = v168 - 1;
          if (v168 <= 2) {
            goto LABEL_103;
          }
        }
      }
      unint64_t v120 = 1;
LABEL_103:
      Swift::Int v48 = v216[1];
      id v51 = v208;
      if ((uint64_t)v208 >= v48)
      {
LABEL_109:
        if (v120 < 2) {
          goto LABEL_123;
        }
        uint64_t v169 = *v216;
        while (1)
        {
          unint64_t v170 = v120 - 2;
          if (v120 < 2) {
            break;
          }
          if (!v169) {
            goto LABEL_159;
          }
          uint64_t v171 = *(void *)&v52[16 * v170 + 32];
          uint64_t v172 = *(void *)&v52[16 * v120 + 24];
          sub_100183BE8(v169 + *(void *)(v198 + 72) * v171, v169 + *(void *)(v198 + 72) * *(void *)&v52[16 * v120 + 16], (char *)(v169 + *(void *)(v198 + 72) * v172), v49, v197);
          if (v9) {
            goto LABEL_121;
          }
          if (v172 < v171) {
            goto LABEL_142;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            NSIndexPath v52 = sub_10031515C();
          }
          if (v170 >= *((void *)v52 + 2)) {
            goto LABEL_143;
          }
          uint64_t v173 = &v52[16 * v170 + 32];
          *(void *)uint64_t v173 = v171;
          *((void *)v173 + 1) = v172;
          unint64_t v174 = *((void *)v52 + 2);
          if (v120 > v174) {
            goto LABEL_144;
          }
          memmove(&v52[16 * v120 + 16], &v52[16 * v120 + 32], 16 * (v174 - v120));
          *((void *)v52 + 2) = v174 - 1;
          unint64_t v120 = v174 - 1;
          if (v174 <= 2) {
            goto LABEL_123;
          }
        }
LABEL_141:
        __break(1u);
LABEL_142:
        __break(1u);
LABEL_143:
        __break(1u);
LABEL_144:
        __break(1u);
        break;
      }
    }
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
    goto LABEL_151;
  }
  if (v48 < 0) {
    goto LABEL_147;
  }
  if (v48) {
    sub_100562108(0, v48, 1, v216, v197, a8, v196);
  }
}

void sub_100562108(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(void), void (*a6)(uint64_t), uint64_t (*a7)(uint64_t, char *))
{
  Swift::Int v48 = a7;
  uint64_t v56 = a4;
  uint64_t v44 = a1;
  uint64_t v11 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v12 = sub_100109308(v11);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  sub_100128F8C();
  uint64_t v60 = v16;
  uint64_t v17 = a5(0);
  sub_100179C0C();
  __chkstk_darwin(v18);
  sub_100162EF8();
  uint64_t v53 = v19;
  sub_1001626D4();
  __chkstk_darwin(v20);
  int v22 = (char *)&v42 - v21;
  __chkstk_darwin(v23);
  sub_100128F8C();
  uint64_t v59 = v25;
  uint64_t v51 = a3;
  uint64_t v43 = a2;
  if (a3 != a2)
  {
    uint64_t v27 = *(void (**)(void))(v24 + 16);
    uint64_t v26 = v24 + 16;
    uint64_t v28 = *(void *)(v26 + 56);
    uint64_t v45 = (void (**)(char *, uint64_t))(v26 - 8);
    uint64_t v46 = v27;
    uint64_t v47 = v26;
    NSIndexPath v52 = (void (**)(void))(v26 + 16);
    uint64_t v61 = v28 * (v51 - 1);
    uint64_t v49 = v28;
    uint64_t v29 = v28 * v51;
    while (2)
    {
      uint64_t v30 = 0;
      uint64_t v57 = v44;
      uint64_t v50 = v29;
      do
      {
        uint64_t v55 = v29 + v30;
        uint64_t v31 = v46;
        sub_100179020();
        v31();
        uint64_t v54 = v61 + v30;
        sub_100179020();
        uint64_t v32 = ((uint64_t (*)(void))v31)();
        a6(v32);
        uint64_t v33 = v60;
        dispatch thunk of Column.value.getter();
        swift_release();
        uint64_t v34 = type metadata accessor for Date();
        uint64_t v35 = sub_10012B520(v33, 1, v34);
        if (v36)
        {
          __break(1u);
LABEL_12:
          __break(1u);
LABEL_13:
          __break(1u);
          return;
        }
        a6(v35);
        dispatch thunk of Column.value.getter();
        swift_release();
        sub_10012B520((uint64_t)v14, 1, v34);
        if (v36) {
          goto LABEL_12;
        }
        int v58 = v48(v60, v14);
        sub_100162880();
        uint64_t v38 = *(void (**)(void))(v37 + 8);
        uint64_t v39 = a6;
        sub_1001851F4();
        v38();
        sub_1001851F4();
        v38();
        uint64_t v40 = *v45;
        (*v45)(v22, v17);
        v40(v59, v17);
        a6 = v39;
        uint64_t v29 = v50;
        if ((v58 & 1) == 0) {
          break;
        }
        if (!*v56) {
          goto LABEL_13;
        }
        uint64_t v41 = *v52;
        sub_1001627D4();
        v41();
        swift_arrayInitWithTakeFrontToBack();
        sub_1001627D4();
        v41();
        v30 -= v49;
        ++v57;
      }
      while (v51 != v57);
      v61 += v49;
      v29 += v49;
      if (++v51 != v43) {
        continue;
      }
      break;
    }
  }
}

void sub_1005624DC(uint64_t a1, unint64_t a2, char *a3, unint64_t a4, uint64_t (*a5)(void), void (*a6)(unint64_t, uint64_t, unint64_t, __n128), void (*a7)(uint64_t), uint64_t (*a8)(char *, uint64_t))
{
  uint64_t v98 = a8;
  uint64_t v88 = a6;
  uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v15 = sub_100109308(v14);
  __chkstk_darwin(v15);
  sub_100162EF8();
  uint64_t v94 = v16;
  sub_1001626D4();
  __chkstk_darwin(v17);
  uint64_t v102 = (char *)&v87 - v18;
  sub_1001626D4();
  __chkstk_darwin(v19);
  sub_100109770();
  uint64_t v96 = v20;
  sub_1001626D4();
  __chkstk_darwin(v21);
  sub_100128F8C();
  unint64_t v101 = v22;
  uint64_t v105 = a5(0);
  uint64_t v23 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v89 = (char *)&v87 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v100 = (char *)&v87 - v26;
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v87 - v28;
  __n128 v31 = __chkstk_darwin(v30);
  uint64_t v99 = (char *)&v87 - v32;
  uint64_t v34 = *(void *)(v33 + 72);
  if (!v34)
  {
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  uint64_t v35 = a2 - a1;
  BOOL v36 = a2 - a1 == 0x8000000000000000 && v34 == -1;
  if (v36) {
    goto LABEL_86;
  }
  uint64_t v37 = &a3[-a2];
  if (&a3[-a2] == (char *)0x8000000000000000 && v34 == -1) {
    goto LABEL_87;
  }
  unint64_t v39 = a1;
  uint64_t v40 = v35 / v34;
  uint64_t v41 = (uint64_t)v37 / v34;
  uint64_t v95 = v34;
  if (v35 / v34 >= (uint64_t)v37 / v34)
  {
    unint64_t v45 = v39;
    v88(a2, (uint64_t)v37 / v34, a4, v31);
    uint64_t v43 = (char *)(a4 + v41 * v34);
    if (v41 * v34 < 1 || v45 >= a2) {
      goto LABEL_80;
    }
    uint64_t v93 = a7;
    uint64_t v47 = -v34;
    Swift::Int v48 = *(uint64_t (**)(char *))(v23 + 16);
    uint64_t v91 = -v34;
    uint64_t v92 = v48;
    uint64_t v97 = v23 + 16;
    Swift::Int v90 = (void (**)(void))(v23 + 8);
    uint64_t v49 = v89;
    unint64_t v104 = v45;
    while (1)
    {
      unint64_t v50 = a4;
      uint64_t v51 = a3;
      uint64_t v103 = v43;
      uint64_t v99 = &v43[v47];
      NSIndexPath v52 = v92;
      v92(v100);
      unint64_t v101 = a2;
      uint64_t v96 = a2 + v47;
      uint64_t v53 = v52(v49);
      uint64_t v54 = v93;
      v93(v53);
      uint64_t v55 = (uint64_t)v102;
      dispatch thunk of Column.value.getter();
      swift_release();
      uint64_t v56 = type metadata accessor for Date();
      uint64_t v57 = sub_10012B520(v55, 1, v56);
      if (v36) {
        goto LABEL_89;
      }
      a4 = v50;
      v54(v57);
      uint64_t v58 = (uint64_t)v94;
      dispatch thunk of Column.value.getter();
      swift_release();
      sub_10012B520(v58, 1, v56);
      if (v36) {
        goto LABEL_90;
      }
      unint64_t v59 = (unint64_t)&v51[v47];
      uint64_t v60 = v98(v102, v58);
      uint64_t v61 = *(void (**)(void))(*(void *)(v56 - 8) + 8);
      sub_100164938();
      v61();
      sub_100164938();
      v61();
      uint64_t v62 = *v90;
      a2 = v105;
      sub_100164938();
      v62();
      sub_100164938();
      v62();
      if (v60)
      {
        BOOL v63 = (unint64_t)v51 < v101 || v59 >= v101;
        a3 = &v51[v47];
        if (!v63)
        {
          uint64_t v47 = v91;
          if (v51 == (char *)v101)
          {
            a2 = v96;
          }
          else
          {
            sub_100185AD4();
            swift_arrayInitWithTakeBackToFront();
          }
          uint64_t v43 = v103;
          unint64_t v64 = v104;
          uint64_t v49 = v89;
          goto LABEL_46;
        }
        sub_100185AD4();
        swift_arrayInitWithTakeFrontToBack();
        uint64_t v43 = v103;
        unint64_t v64 = v104;
        uint64_t v49 = v89;
      }
      else
      {
        BOOL v65 = v51 < v103 || v59 >= (unint64_t)v103;
        a2 = v101;
        a3 = &v51[v47];
        if (!v65)
        {
          uint64_t v47 = v91;
          if (v51 == v103)
          {
            uint64_t v43 = v99;
          }
          else
          {
            sub_1001A3284();
            swift_arrayInitWithTakeBackToFront();
            uint64_t v43 = (char *)v60;
          }
          unint64_t v64 = v104;
          goto LABEL_46;
        }
        sub_1001A3284();
        swift_arrayInitWithTakeFrontToBack();
        uint64_t v43 = (char *)v60;
        unint64_t v64 = v104;
      }
      uint64_t v47 = v91;
LABEL_46:
      if ((unint64_t)v43 <= v50 || a2 <= v64) {
        goto LABEL_79;
      }
    }
  }
  unint64_t v42 = v39;
  v88(v39, v35 / v34, a4, v31);
  uint64_t v43 = (char *)(a4 + v40 * v34);
  if (v40 * v34 >= 1 && a2 < (unint64_t)a3)
  {
    uint64_t v103 = (char *)(a4 + v40 * v34);
    unint64_t v104 = v42;
    uint64_t v100 = a3;
    uint64_t v102 = *(char **)(v23 + 16);
    uint64_t v97 = v23 + 16;
    uint64_t v94 = (void (**)(void))(v23 + 8);
    while (1)
    {
      uint64_t v67 = v105;
      uint64_t v68 = (uint64_t (*)(char *, unint64_t, uint64_t))v102;
      ((void (*)(char *, unint64_t, uint64_t))v102)(v99, a2, v105);
      uint64_t v69 = v68(v29, a4, v67);
      a7(v69);
      uint64_t v70 = v101;
      dispatch thunk of Column.value.getter();
      swift_release();
      uint64_t v71 = type metadata accessor for Date();
      uint64_t v72 = sub_10012B520(v70, 1, v71);
      if (v36) {
        goto LABEL_91;
      }
      a7(v72);
      uint64_t v73 = v96;
      dispatch thunk of Column.value.getter();
      swift_release();
      sub_10012B520(v73, 1, v71);
      if (v36) {
        goto LABEL_92;
      }
      unint64_t v74 = v101;
      char v75 = v98((char *)v101, v73);
      uint64_t v76 = v73;
      uint64_t v77 = *(void (**)(uint64_t, uint64_t))(*(void *)(v71 - 8) + 8);
      v77(v76, v71);
      v77(v74, v71);
      uint64_t v78 = *v94;
      sub_100164938();
      v78();
      sub_100164938();
      v78();
      if ((v75 & 1) == 0)
      {
        uint64_t v79 = v95;
        unint64_t v81 = v104;
        if (v104 >= a4 && v104 < a4 + v95)
        {
          if (v104 != a4)
          {
            sub_100184A58();
            swift_arrayInitWithTakeBackToFront();
LABEL_71:
            unint64_t v81 = v104;
          }
          unint64_t v80 = a2;
          a4 += v79;
          goto LABEL_73;
        }
        sub_100184A58();
        swift_arrayInitWithTakeFrontToBack();
        goto LABEL_71;
      }
      uint64_t v79 = v95;
      unint64_t v80 = a2 + v95;
      unint64_t v81 = v104;
      if (v104 < a2 || v104 >= v80) {
        break;
      }
      if (v104 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
        goto LABEL_68;
      }
LABEL_73:
      unint64_t v104 = v81 + v79;
      uint64_t v43 = v103;
      BOOL v84 = a4 >= (unint64_t)v103 || v80 >= (unint64_t)v100;
      a2 = v80;
      if (v84)
      {
        a2 = v104;
        goto LABEL_79;
      }
    }
    swift_arrayInitWithTakeFrontToBack();
LABEL_68:
    unint64_t v81 = v104;
    goto LABEL_73;
  }
  a2 = v42;
LABEL_79:
  uint64_t v34 = v95;
LABEL_80:
  uint64_t v85 = &v43[-a4];
  if (v34 != -1 || v85 != (char *)0x8000000000000000)
  {
    ((void (*)(unint64_t, uint64_t, unint64_t))v88)(a4, (uint64_t)v85 / v34, a2);
    return;
  }
LABEL_88:
  __break(1u);
LABEL_89:
  __break(1u);
LABEL_90:
  __break(1u);
LABEL_91:
  __break(1u);
LABEL_92:
  __break(1u);
}

uint64_t sub_100562C44()
{
  return swift_deallocObject();
}

void sub_100562C7C(uint64_t a1)
{
  sub_1005601B8(a1, *(void *)(v1 + 16));
}

void sub_100562C84()
{
  sub_1005600A8(*(void **)(v0 + 16));
}

uint64_t sub_100562C8C()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  sub_100179C0C();
  uint64_t v3 = v2;
  unint64_t v4 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);

  return swift_deallocObject();
}

void sub_100562D30()
{
  uint64_t v1 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_10055FF80(v2, v3);
}

uint64_t sub_100562D98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void (*v23)(uint64_t *__return_ptr, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  unsigned char *v31;
  char v32;
  char v33;
  uint64_t v34;
  void (*v35)(uint64_t *__return_ptr, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  char v40;
  id v41;
  Swift::String v42;
  Swift::String v43;
  Swift::String v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t result;
  unsigned char v53[12];
  int v54;
  unsigned char *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t *__return_ptr, uint64_t);
  uint64_t v59;
  Swift::String *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void v66[3];
  Swift::String v67;

  uint64_t v62 = a1;
  BOOL v63 = a2;
  uint64_t v61 = type metadata accessor for LocationComponentHeaderViewModel(0);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_100109314();
  uint64_t v60 = v4;
  uint64_t v5 = type metadata accessor for EnvironmentState();
  __chkstk_darwin(v5 - 8);
  sub_100109314();
  unint64_t v59 = v6;
  uint64_t v7 = type metadata accessor for NotificationsOptInState();
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = &v53[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for LocationsState();
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = &v53[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v55 = &v53[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = &v53[-v18];
  uint64_t v20 = __chkstk_darwin(v17);
  unint64_t v22 = &v53[-v21];
  uint64_t v23 = *(void (**)(uint64_t *__return_ptr, uint64_t))(v2 + 16);
  v23(v66, v20);
  uint64_t v24 = *(void *)(v66[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 8);
  unint64_t v64 = *(void *)(v66[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData);
  uint64_t v25 = *(void *)(v66[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  uint64_t v57 = v24;
  swift_bridgeObjectRetain();
  uint64_t v56 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v26 = swift_release();
  v23(v66, v26);
  sub_1001CEC14(v66[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_locations, (uint64_t)v13, (void (*)(void))type metadata accessor for LocationsState);
  swift_release();
  sub_10013B3F0((uint64_t)v13, (uint64_t)v22);
  uint64_t v27 = sub_1001CEDE4((uint64_t)v13, (void (*)(void))type metadata accessor for LocationsState);
  uint64_t v58 = v23;
  v23(v66, v27);
  sub_1001CEC14(v66[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn, (uint64_t)v10, (void (*)(void))type metadata accessor for NotificationsOptInState);
  swift_release();
  uint64_t v54 = v10[*(int *)(v8 + 64)];
  sub_1001CEDE4((uint64_t)v10, (void (*)(void))type metadata accessor for NotificationsOptInState);
  sub_10013B3F0((uint64_t)v22, (uint64_t)v19);
  uint64_t v28 = type metadata accessor for CurrentLocation();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v19, 1, v28) == 1)
  {
    sub_100563488((uint64_t)v19);
  }
  else
  {
    CurrentLocation.id.getter();
    sub_1001CEDE4((uint64_t)v19, (void (*)(void))&type metadata accessor for CurrentLocation);
  }
  sub_10013F4E8();
  uint64_t v30 = v29;
  swift_bridgeObjectRelease();
  __n128 v31 = v55;
  sub_10013B3F0((uint64_t)v22, (uint64_t)v55);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v31, 1, v28) == 1)
  {
    sub_100563488((uint64_t)v31);
  }
  else
  {
    CurrentLocation.id.getter();
    sub_1001CEDE4((uint64_t)v31, (void (*)(void))&type metadata accessor for CurrentLocation);
  }
  sub_10013F4D0();
  uint64_t v33 = v32;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v34 = swift_bridgeObjectRelease();
  uint64_t v35 = v58;
  v58(v66, v34);
  BOOL v36 = v66[0] + OBJC_IVAR____TtCV7Weather9MainState8_Storage_environment;
  swift_beginAccess();
  uint64_t v37 = v59;
  sub_1001CEC14(v36, v59, (void (*)(void))type metadata accessor for EnvironmentState);
  swift_release();
  LOBYTE(v36) = *(unsigned char *)(v37 + 1);
  uint64_t v38 = sub_1001CEDE4(v37, (void (*)(void))type metadata accessor for EnvironmentState);
  v35(&v65, v38);
  unint64_t v39 = *(unsigned char *)(v65 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_notifications);
  swift_release();
  uint64_t v40 = sub_10013D94C(v54, v30 & 1, v33 & 1, v36, v39);
  uint64_t v41 = [self mainBundle];
  v67._uint64_t countAndFlagsBits = 0xD000000000000028;
  v67._object = (void *)0x8000000100CA4B30;
  v42._object = (void *)0x8000000100C9A940;
  v42._uint64_t countAndFlagsBits = 0xD000000000000014;
  v43._uint64_t countAndFlagsBits = 0;
  v43._object = (void *)0xE000000000000000;
  uint64_t v44 = NSLocalizedString(_:tableName:bundle:value:comment:)(v42, (Swift::String_optional)0, (NSBundle)v41, v43, v67);

  sub_100563488((uint64_t)v22);
  unint64_t v45 = (uint64_t)v60;
  *uint64_t v60 = v44;
  strcpy((char *)(v45 + 16), "location.fill");
  *(_WORD *)(v45 + 30) = -4864;
  *(unsigned char *)(v45 + 32) = 0;
  *(void *)(v45 + 40) = 0;
  *(void *)(v45 + 48) = 0;
  swift_storeEnumTagMultiPayload();
  uint64_t v46 = (int *)type metadata accessor for LocationComponentContainerViewModel();
  uint64_t v47 = v63;
  Swift::Int v48 = v63 + v46[5];
  type metadata accessor for Location();
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v49 + 16))(v48, v62);
  *(unsigned char *)(v48 + *(int *)(type metadata accessor for NotificationsOptInComponentViewModel() + 20)) = v40;
  type metadata accessor for LocationComponentViewModel();
  swift_storeEnumTagMultiPayload();
  unint64_t v50 = v47 + v46[7];
  uint64_t v51 = type metadata accessor for LocationComponentAction(0);
  _s7Weather24LocationCompositionStateOwst_0(v50, 1, 1, v51);
  uint64_t result = sub_1001F50EC(v45, v47);
  *(_WORD *)(v47 + v46[6]) = 258;
  return result;
}

uint64_t sub_10056343C()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_100563488(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08((uint64_t *)&unk_100EADD50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005634E8(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v5 & 1) != 0))
  {
    BOOL v7 = a1[2] == a2[2] && a1[3] == a2[3];
    if (v7 || (char v8 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v8 & 1) != 0))
    {
      if (a1[4] == a2[4] && a1[5] == a2[5])
      {
        return 1;
      }
      else
      {
        return _stringCompareWithSmolCheck(_:_:expecting:)();
      }
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VisibilityComponentViewModel()
{
  return &type metadata for VisibilityComponentViewModel;
}

uint64_t *sub_1005635AC(uint64_t *a1, uint64_t *a2, int *a3)
{
  BOOL v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *BOOL v4 = *a2;
    BOOL v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    char v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[7];
    *(uint64_t *)((char *)v4 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)v4 + v11) = *(uint64_t *)((char *)a2 + v11);
  }
  return v4;
}

uint64_t sub_10056369C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = type metadata accessor for Date();
  BOOL v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

void *sub_100563704(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  char v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  return a1;
}

void *sub_1005637A4(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  char v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  return a1;
}

void *sub_100563848(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  char v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  return a1;
}

void *sub_1005638E8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  char v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  *(void *)((char *)a1 + v10) = *(void *)((char *)a2 + v10);
  return a1;
}

uint64_t sub_100563988(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10056399C);
}

uint64_t sub_10056399C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = type metadata accessor for Date();

  return _s7Weather24LocationCompositionStateOwet_0(v4, a2, v5);
}

uint64_t sub_1005639E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005639FC);
}

uint64_t sub_1005639FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = type metadata accessor for Date();

  return _s7Weather24LocationCompositionStateOwst_0(v5, a2, a2, v6);
}

uint64_t *sub_100563A4C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = *(int *)(a3 + 20);
    char v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = (int *)type metadata accessor for LollipopMarkModel(0);
    *(void *)&v8[v11[5]] = *(void *)&v9[v11[5]];
    *(void *)&v8[v11[6]] = *(void *)&v9[v11[6]];
    *(void *)&v8[v11[7]] = *(void *)&v9[v11[7]];
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (char *)v4 + v12;
    uint64_t v14 = (char *)a2 + v12;
    type metadata accessor for LollipopDetailViewModel(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v21 = *((void *)v14 + 1);
      *(void *)uint64_t v13 = *(void *)v14;
      *((void *)v13 + 1) = v21;
      unint64_t v22 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v23 = v22[5];
      uint64_t v24 = &v13[v23];
      uint64_t v25 = &v14[v23];
      uint64_t v26 = type metadata accessor for AttributedString();
      uint64_t v27 = *(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16);
      swift_bridgeObjectRetain();
      v27(v24, v25, v26);
      uint64_t v28 = v22[6];
      uint64_t v29 = &v13[v28];
      uint64_t v30 = &v14[v28];
      uint64_t v31 = *((void *)v30 + 1);
      *(void *)uint64_t v29 = *(void *)v30;
      *((void *)v29 + 1) = v31;
      uint64_t v32 = v22[7];
      uint64_t v33 = &v13[v32];
      uint64_t v34 = &v14[v32];
      uint64_t v35 = *((void *)v34 + 1);
      *(void *)uint64_t v33 = *(void *)v34;
      *((void *)v33 + 1) = v35;
      uint64_t v36 = v22[8];
      uint64_t v37 = &v13[v36];
      uint64_t v38 = &v14[v36];
      uint64_t v39 = *((void *)v38 + 1);
      *(void *)uint64_t v37 = *(void *)v38;
      *((void *)v37 + 1) = v39;
      uint64_t v40 = v22[9];
      uint64_t v41 = &v13[v40];
      unint64_t v42 = &v14[v40];
      uint64_t v43 = *((void *)v42 + 1);
      *(void *)uint64_t v41 = *(void *)v42;
      *((void *)v41 + 1) = v43;
      uint64_t v44 = v22[10];
      unint64_t v45 = &v13[v44];
      uint64_t v46 = &v14[v44];
      uint64_t v47 = *((void *)v46 + 1);
      *(void *)unint64_t v45 = *(void *)v46;
      *((void *)v45 + 1) = v47;
      v13[v22[11]] = v14[v22[11]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v16 = *((void *)v14 + 1);
        *(void *)uint64_t v13 = *(void *)v14;
        *((void *)v13 + 1) = v16;
        uint64_t v17 = *((void *)v14 + 3);
        *((void *)v13 + 2) = *((void *)v14 + 2);
        *((void *)v13 + 3) = v17;
        uint64_t v18 = *((void *)v14 + 5);
        *((void *)v13 + 4) = *((void *)v14 + 4);
        *((void *)v13 + 5) = v18;
        uint64_t v19 = *((void *)v14 + 7);
        *((void *)v13 + 6) = *((void *)v14 + 6);
        *((void *)v13 + 7) = v19;
        v13[64] = v14[64];
        v13[65] = v14[65];
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v48 = *((void *)v14 + 1);
        *(void *)uint64_t v13 = *(void *)v14;
        *((void *)v13 + 1) = v48;
        uint64_t v49 = *((void *)v14 + 3);
        *((void *)v13 + 2) = *((void *)v14 + 2);
        *((void *)v13 + 3) = v49;
        uint64_t v50 = *((void *)v14 + 4);
        uint64_t v51 = *((void *)v14 + 5);
        *((void *)v13 + 4) = v50;
        *((void *)v13 + 5) = v51;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v4;
}

uint64_t sub_100563D48(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  type metadata accessor for LollipopDetailViewModel(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = v6 + *(int *)(type metadata accessor for TitleAndDetailLollipopDetailViewModel(0) + 20);
    uint64_t v9 = type metadata accessor for AttributedString();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else if (result == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (result) {
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

void *sub_100563EE0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for LollipopMarkModel(0);
  *(void *)&v7[v10[5]] = *(void *)&v8[v10[5]];
  *(void *)&v7[v10[6]] = *(void *)&v8[v10[6]];
  *(void *)&v7[v10[7]] = *(void *)&v8[v10[7]];
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  type metadata accessor for LollipopDetailViewModel(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v19 = *((void *)v13 + 1);
    *(void *)uint64_t v12 = *(void *)v13;
    *((void *)v12 + 1) = v19;
    uint64_t v20 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
    uint64_t v21 = v20[5];
    uint64_t v48 = &v13[v21];
    uint64_t v49 = &v12[v21];
    uint64_t v22 = type metadata accessor for AttributedString();
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
    swift_bridgeObjectRetain();
    v23(v49, v48, v22);
    uint64_t v24 = v20[6];
    uint64_t v25 = &v12[v24];
    uint64_t v26 = &v13[v24];
    uint64_t v27 = *((void *)v26 + 1);
    *(void *)uint64_t v25 = *(void *)v26;
    *((void *)v25 + 1) = v27;
    uint64_t v28 = v20[7];
    uint64_t v29 = &v12[v28];
    uint64_t v30 = &v13[v28];
    uint64_t v31 = *((void *)v30 + 1);
    *(void *)uint64_t v29 = *(void *)v30;
    *((void *)v29 + 1) = v31;
    uint64_t v32 = v20[8];
    uint64_t v33 = &v12[v32];
    uint64_t v34 = &v13[v32];
    uint64_t v35 = *((void *)v34 + 1);
    *(void *)uint64_t v33 = *(void *)v34;
    *((void *)v33 + 1) = v35;
    uint64_t v36 = v20[9];
    uint64_t v37 = &v12[v36];
    uint64_t v38 = &v13[v36];
    uint64_t v39 = *((void *)v38 + 1);
    *(void *)uint64_t v37 = *(void *)v38;
    *((void *)v37 + 1) = v39;
    uint64_t v40 = v20[10];
    uint64_t v41 = &v12[v40];
    unint64_t v42 = &v13[v40];
    uint64_t v43 = *((void *)v42 + 1);
    *(void *)uint64_t v41 = *(void *)v42;
    *((void *)v41 + 1) = v43;
    v12[v20[11]] = v13[v20[11]];
    swift_bridgeObjectRetain();
  }
  else
  {
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v44 = *((void *)v13 + 1);
      *(void *)uint64_t v12 = *(void *)v13;
      *((void *)v12 + 1) = v44;
      uint64_t v45 = *((void *)v13 + 3);
      *((void *)v12 + 2) = *((void *)v13 + 2);
      *((void *)v12 + 3) = v45;
      uint64_t v46 = *((void *)v13 + 5);
      *((void *)v12 + 4) = *((void *)v13 + 4);
      *((void *)v12 + 5) = v46;
      goto LABEL_7;
    }
    uint64_t v15 = *((void *)v13 + 1);
    *(void *)uint64_t v12 = *(void *)v13;
    *((void *)v12 + 1) = v15;
    uint64_t v16 = *((void *)v13 + 3);
    *((void *)v12 + 2) = *((void *)v13 + 2);
    *((void *)v12 + 3) = v16;
    uint64_t v17 = *((void *)v13 + 5);
    *((void *)v12 + 4) = *((void *)v13 + 4);
    *((void *)v12 + 5) = v17;
    uint64_t v18 = *((void *)v13 + 7);
    *((void *)v12 + 6) = *((void *)v13 + 6);
    *((void *)v12 + 7) = v18;
    v12[64] = v13[64];
    v12[65] = v13[65];
  }
  swift_bridgeObjectRetain();
LABEL_7:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_10056414C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for LollipopMarkModel(0);
  *(void *)&v7[v10[5]] = *(void *)&v8[v10[5]];
  *(void *)&v7[v10[6]] = *(void *)&v8[v10[6]];
  *(void *)&v7[v10[7]] = *(void *)&v8[v10[7]];
  if (a1 != a2)
  {
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    sub_1005659EC((uint64_t)a1 + v11, (void (*)(void))type metadata accessor for LollipopDetailViewModel);
    type metadata accessor for LollipopDetailViewModel(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(void *)uint64_t v12 = *(void *)v13;
      *((void *)v12 + 1) = *((void *)v13 + 1);
      uint64_t v15 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v16 = v15[5];
      uint64_t v35 = &v13[v16];
      uint64_t v36 = &v12[v16];
      uint64_t v17 = type metadata accessor for AttributedString();
      uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v18(v36, v35, v17);
      uint64_t v19 = v15[6];
      uint64_t v20 = &v12[v19];
      uint64_t v21 = &v13[v19];
      *(void *)uint64_t v20 = *(void *)v21;
      *((void *)v20 + 1) = *((void *)v21 + 1);
      uint64_t v22 = v15[7];
      uint64_t v23 = &v12[v22];
      uint64_t v24 = &v13[v22];
      *(void *)uint64_t v23 = *(void *)v24;
      *((void *)v23 + 1) = *((void *)v24 + 1);
      uint64_t v25 = v15[8];
      uint64_t v26 = &v12[v25];
      uint64_t v27 = &v13[v25];
      *(void *)uint64_t v26 = *(void *)v27;
      *((void *)v26 + 1) = *((void *)v27 + 1);
      uint64_t v28 = v15[9];
      uint64_t v29 = &v12[v28];
      uint64_t v30 = &v13[v28];
      *(void *)uint64_t v29 = *(void *)v30;
      *((void *)v29 + 1) = *((void *)v30 + 1);
      uint64_t v31 = v15[10];
      uint64_t v32 = &v12[v31];
      uint64_t v33 = &v13[v31];
      *(void *)uint64_t v32 = *(void *)v33;
      *((void *)v32 + 1) = *((void *)v33 + 1);
      v12[v15[11]] = v13[v15[11]];
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        *(void *)uint64_t v12 = *(void *)v13;
        *((void *)v12 + 1) = *((void *)v13 + 1);
        *((void *)v12 + 2) = *((void *)v13 + 2);
        *((void *)v12 + 3) = *((void *)v13 + 3);
        *((void *)v12 + 4) = *((void *)v13 + 4);
        *((void *)v12 + 5) = *((void *)v13 + 5);
        goto LABEL_8;
      }
      *(void *)uint64_t v12 = *(void *)v13;
      *((void *)v12 + 1) = *((void *)v13 + 1);
      *((void *)v12 + 2) = *((void *)v13 + 2);
      *((void *)v12 + 3) = *((void *)v13 + 3);
      *((void *)v12 + 4) = *((void *)v13 + 4);
      *((void *)v12 + 5) = *((void *)v13 + 5);
      *((void *)v12 + 6) = *((void *)v13 + 6);
      *((void *)v12 + 7) = *((void *)v13 + 7);
      v12[64] = v13[64];
      v12[65] = v13[65];
    }
    swift_bridgeObjectRetain();
LABEL_8:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_100564444(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for LollipopMarkModel(0);
  *(void *)&v7[v10[5]] = *(void *)&v8[v10[5]];
  *(void *)&v7[v10[6]] = *(void *)&v8[v10[6]];
  *(void *)&v7[v10[7]] = *(void *)&v8[v10[7]];
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (_OWORD *)((char *)a1 + v11);
  uint64_t v13 = (_OWORD *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for LollipopDetailViewModel(0);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    *uint64_t v12 = *v13;
    uint64_t v15 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
    uint64_t v16 = v15[5];
    uint64_t v17 = (char *)v12 + v16;
    uint64_t v18 = (char *)v13 + v16;
    uint64_t v19 = type metadata accessor for AttributedString();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
    *(_OWORD *)((char *)v12 + v15[6]) = *(_OWORD *)((char *)v13 + v15[6]);
    *(_OWORD *)((char *)v12 + v15[7]) = *(_OWORD *)((char *)v13 + v15[7]);
    *(_OWORD *)((char *)v12 + v15[8]) = *(_OWORD *)((char *)v13 + v15[8]);
    *(_OWORD *)((char *)v12 + v15[9]) = *(_OWORD *)((char *)v13 + v15[9]);
    *(_OWORD *)((char *)v12 + v15[10]) = *(_OWORD *)((char *)v13 + v15[10]);
    *((unsigned char *)v12 + v15[11]) = *((unsigned char *)v13 + v15[11]);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  return a1;
}

void *sub_100564608(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = (int *)type metadata accessor for LollipopMarkModel(0);
  *(void *)&v7[v10[5]] = *(void *)&v8[v10[5]];
  *(void *)&v7[v10[6]] = *(void *)&v8[v10[6]];
  *(void *)&v7[v10[7]] = *(void *)&v8[v10[7]];
  if (a1 != a2)
  {
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (_OWORD *)((char *)a1 + v11);
    uint64_t v13 = (_OWORD *)((char *)a2 + v11);
    sub_1005659EC((uint64_t)a1 + v11, (void (*)(void))type metadata accessor for LollipopDetailViewModel);
    uint64_t v14 = type metadata accessor for LollipopDetailViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *uint64_t v12 = *v13;
      uint64_t v15 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v16 = v15[5];
      uint64_t v17 = (char *)v12 + v16;
      uint64_t v18 = (char *)v13 + v16;
      uint64_t v19 = type metadata accessor for AttributedString();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
      *(_OWORD *)((char *)v12 + v15[6]) = *(_OWORD *)((char *)v13 + v15[6]);
      *(_OWORD *)((char *)v12 + v15[7]) = *(_OWORD *)((char *)v13 + v15[7]);
      *(_OWORD *)((char *)v12 + v15[8]) = *(_OWORD *)((char *)v13 + v15[8]);
      *(_OWORD *)((char *)v12 + v15[9]) = *(_OWORD *)((char *)v13 + v15[9]);
      *(_OWORD *)((char *)v12 + v15[10]) = *(_OWORD *)((char *)v13 + v15[10]);
      *((unsigned char *)v12 + v15[11]) = *((unsigned char *)v13 + v15[11]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1005647F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100564804);
}

uint64_t sub_100564804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for LollipopMarkModel(0);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(int *)(a3 + 20);
  }
  else
  {
    uint64_t v8 = type metadata accessor for LollipopDetailViewModel(0);
    uint64_t v9 = *(int *)(a3 + 24);
  }

  return _s7Weather24LocationCompositionStateOwet_0(a1 + v9, a2, v8);
}

uint64_t sub_100564880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100564894);
}

uint64_t sub_100564894(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for LollipopMarkModel(0);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(int *)(a4 + 20);
  }
  else
  {
    uint64_t v10 = type metadata accessor for LollipopDetailViewModel(0);
    uint64_t v11 = *(int *)(a4 + 24);
  }

  return _s7Weather24LocationCompositionStateOwst_0(a1 + v11, a2, a2, v10);
}

uint64_t type metadata accessor for DetailHeroChartActiveLollipopModel(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E7F848);
}

uint64_t sub_100564938()
{
  uint64_t result = type metadata accessor for LollipopMarkModel(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for LollipopDetailViewModel(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100564A10(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)a1 = *a2;
      uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
      uint64_t v7 = *(int *)(active + 20);
      uint64_t v8 = a1 + v7;
      uint64_t v9 = (uint64_t)a2 + v7;
      uint64_t v10 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
      uint64_t v11 = (int *)type metadata accessor for LollipopMarkModel(0);
      *(void *)(v8 + v11[5]) = *(void *)(v9 + v11[5]);
      *(void *)(v8 + v11[6]) = *(void *)(v9 + v11[6]);
      *(void *)(v8 + v11[7]) = *(void *)(v9 + v11[7]);
      uint64_t v12 = *(int *)(active + 24);
      uint64_t v13 = a1 + v12;
      uint64_t v14 = (uint64_t)a2 + v12;
      type metadata accessor for LollipopDetailViewModel(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v26 = *(void *)(v14 + 8);
        *(void *)uint64_t v13 = *(void *)v14;
        *(void *)(v13 + 8) = v26;
        uint64_t v27 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        uint64_t v28 = v27[5];
        uint64_t v83 = v14 + v28;
        uint64_t v84 = v13 + v28;
        uint64_t v29 = type metadata accessor for AttributedString();
        uint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16);
        swift_bridgeObjectRetain();
        v30(v84, v83, v29);
        uint64_t v31 = v27[6];
        uint64_t v32 = (void *)(v13 + v31);
        uint64_t v33 = (void *)(v14 + v31);
        uint64_t v34 = v33[1];
        *uint64_t v32 = *v33;
        v32[1] = v34;
        uint64_t v35 = v27[7];
        uint64_t v36 = (void *)(v13 + v35);
        uint64_t v37 = (void *)(v14 + v35);
        uint64_t v38 = v37[1];
        void *v36 = *v37;
        v36[1] = v38;
        uint64_t v39 = v27[8];
        uint64_t v40 = (void *)(v13 + v39);
        uint64_t v41 = (void *)(v14 + v39);
        uint64_t v42 = v41[1];
        void *v40 = *v41;
        v40[1] = v42;
        uint64_t v43 = v27[9];
        uint64_t v44 = (void *)(v13 + v43);
        uint64_t v45 = (void *)(v14 + v43);
        uint64_t v46 = v45[1];
        *uint64_t v44 = *v45;
        v44[1] = v46;
        uint64_t v47 = v27[10];
        uint64_t v48 = (void *)(v13 + v47);
        uint64_t v49 = (void *)(v14 + v47);
        uint64_t v50 = v49[1];
        void *v48 = *v49;
        v48[1] = v50;
        *(unsigned char *)(v13 + v27[11]) = *(unsigned char *)(v14 + v27[11]);
        swift_bridgeObjectRetain();
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          uint64_t v51 = *(void *)(v14 + 8);
          *(void *)uint64_t v13 = *(void *)v14;
          *(void *)(v13 + 8) = v51;
          uint64_t v52 = *(void *)(v14 + 24);
          *(void *)(v13 + 16) = *(void *)(v14 + 16);
          *(void *)(v13 + 24) = v52;
          uint64_t v53 = *(void *)(v14 + 40);
          *(void *)(v13 + 32) = *(void *)(v14 + 32);
          *(void *)(v13 + 40) = v53;
LABEL_15:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        uint64_t v16 = *(void *)(v14 + 8);
        *(void *)uint64_t v13 = *(void *)v14;
        *(void *)(v13 + 8) = v16;
        uint64_t v17 = *(void *)(v14 + 24);
        *(void *)(v13 + 16) = *(void *)(v14 + 16);
        *(void *)(v13 + 24) = v17;
        uint64_t v18 = *(void *)(v14 + 40);
        *(void *)(v13 + 32) = *(void *)(v14 + 32);
        *(void *)(v13 + 40) = v18;
        uint64_t v19 = *(void *)(v14 + 56);
        *(void *)(v13 + 48) = *(void *)(v14 + 48);
        *(void *)(v13 + 56) = v19;
        *(unsigned char *)(v13 + 64) = *(unsigned char *)(v14 + 64);
        *(unsigned char *)(v13 + 65) = *(unsigned char *)(v14 + 65);
      }
    }
    else
    {
      type metadata accessor for LollipopDetailViewModel(0);
      int v21 = swift_getEnumCaseMultiPayload();
      if (v21 == 2)
      {
        uint64_t v54 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v54;
        uint64_t v55 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        uint64_t v56 = v55[5];
        uint64_t v85 = (uint64_t)a2 + v56;
        uint64_t v86 = a1 + v56;
        uint64_t v57 = type metadata accessor for AttributedString();
        uint64_t v58 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 16);
        swift_bridgeObjectRetain();
        v58(v86, v85, v57);
        uint64_t v59 = v55[6];
        uint64_t v60 = (void *)(a1 + v59);
        uint64_t v61 = (uint64_t *)((char *)a2 + v59);
        uint64_t v62 = v61[1];
        *uint64_t v60 = *v61;
        v60[1] = v62;
        uint64_t v63 = v55[7];
        unint64_t v64 = (void *)(a1 + v63);
        BOOL v65 = (uint64_t *)((char *)a2 + v63);
        uint64_t v66 = v65[1];
        *unint64_t v64 = *v65;
        v64[1] = v66;
        uint64_t v67 = v55[8];
        uint64_t v68 = (void *)(a1 + v67);
        uint64_t v69 = (uint64_t *)((char *)a2 + v67);
        uint64_t v70 = v69[1];
        *uint64_t v68 = *v69;
        v68[1] = v70;
        uint64_t v71 = v55[9];
        uint64_t v72 = (void *)(a1 + v71);
        uint64_t v73 = (uint64_t *)((char *)a2 + v71);
        uint64_t v74 = v73[1];
        *uint64_t v72 = *v73;
        v72[1] = v74;
        uint64_t v75 = v55[10];
        uint64_t v76 = (void *)(a1 + v75);
        uint64_t v77 = (uint64_t *)((char *)a2 + v75);
        uint64_t v78 = v77[1];
        *uint64_t v76 = *v77;
        v76[1] = v78;
        *(unsigned char *)(a1 + v55[11]) = *((unsigned char *)a2 + v55[11]);
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v21 != 1)
        {
          uint64_t v79 = a2[1];
          *(void *)a1 = *a2;
          *(void *)(a1 + 8) = v79;
          uint64_t v80 = a2[3];
          *(void *)(a1 + 16) = a2[2];
          *(void *)(a1 + 24) = v80;
          uint64_t v81 = a2[5];
          *(void *)(a1 + 32) = a2[4];
          *(void *)(a1 + 40) = v81;
          goto LABEL_15;
        }
        uint64_t v22 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v22;
        uint64_t v23 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v23;
        uint64_t v24 = a2[5];
        *(void *)(a1 + 32) = a2[4];
        *(void *)(a1 + 40) = v24;
        uint64_t v25 = a2[7];
        *(void *)(a1 + 48) = a2[6];
        *(void *)(a1 + 56) = v25;
        *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
        *(unsigned char *)(a1 + 65) = *((unsigned char *)a2 + 65);
      }
    }
    swift_bridgeObjectRetain();
    goto LABEL_15;
  }
  uint64_t v20 = *a2;
  *(void *)a1 = *a2;
  a1 = v20 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return a1;
}

uint64_t sub_100564E9C(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    type metadata accessor for LollipopDetailViewModel(0);
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result != 2)
    {
      if (result != 1)
      {
        if (result) {
          return result;
        }
        goto LABEL_9;
      }
LABEL_11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    uint64_t v6 = a1 + *(int *)(type metadata accessor for TitleAndDetailLollipopDetailViewModel(0) + 20);
    uint64_t v7 = type metadata accessor for AttributedString();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
  uint64_t v3 = a1 + *(int *)(active + 20);
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  a1 += *(int *)(active + 24);
  type metadata accessor for LollipopDetailViewModel(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2) {
    goto LABEL_10;
  }
  if (result == 1) {
    goto LABEL_11;
  }
  if (result) {
    return result;
  }
LABEL_9:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_12:

  return swift_bridgeObjectRelease();
}

uint64_t sub_100565070(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    type metadata accessor for LollipopDetailViewModel(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v51 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v51;
      uint64_t v52 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v53 = v52[5];
      uint64_t v82 = a2 + v53;
      uint64_t v83 = a1 + v53;
      uint64_t v54 = type metadata accessor for AttributedString();
      uint64_t v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 16);
      swift_bridgeObjectRetain();
      v55(v83, v82, v54);
      uint64_t v56 = v52[6];
      uint64_t v57 = (void *)(a1 + v56);
      uint64_t v58 = (void *)(a2 + v56);
      uint64_t v59 = v58[1];
      void *v57 = *v58;
      v57[1] = v59;
      uint64_t v60 = v52[7];
      uint64_t v61 = (void *)(a1 + v60);
      uint64_t v62 = (void *)(a2 + v60);
      uint64_t v63 = v62[1];
      void *v61 = *v62;
      v61[1] = v63;
      uint64_t v64 = v52[8];
      BOOL v65 = (void *)(a1 + v64);
      uint64_t v66 = (void *)(a2 + v64);
      uint64_t v67 = v66[1];
      void *v65 = *v66;
      v65[1] = v67;
      uint64_t v68 = v52[9];
      uint64_t v69 = (void *)(a1 + v68);
      uint64_t v70 = (void *)(a2 + v68);
      uint64_t v71 = v70[1];
      void *v69 = *v70;
      v69[1] = v71;
      uint64_t v72 = v52[10];
      uint64_t v73 = (void *)(a1 + v72);
      uint64_t v74 = (void *)(a2 + v72);
      uint64_t v75 = v74[1];
      void *v73 = *v74;
      v73[1] = v75;
      *(unsigned char *)(a1 + v52[11]) = *(unsigned char *)(a2 + v52[11]);
      swift_bridgeObjectRetain();
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v76 = *(void *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = v76;
        uint64_t v77 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v77;
        uint64_t v78 = *(void *)(a2 + 40);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = v78;
        goto LABEL_13;
      }
      uint64_t v19 = *(void *)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v19;
      uint64_t v20 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v20;
      uint64_t v21 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = v21;
      uint64_t v22 = *(void *)(a2 + 56);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = v22;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
    }
    goto LABEL_11;
  }
  *(void *)a1 = *(void *)a2;
  uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
  uint64_t v5 = *(int *)(active + 20);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  uint64_t v9 = (int *)type metadata accessor for LollipopMarkModel(0);
  *(void *)(v6 + v9[5]) = *(void *)(v7 + v9[5]);
  *(void *)(v6 + v9[6]) = *(void *)(v7 + v9[6]);
  *(void *)(v6 + v9[7]) = *(void *)(v7 + v9[7]);
  uint64_t v10 = *(int *)(active + 24);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  type metadata accessor for LollipopDetailViewModel(0);
  int v13 = swift_getEnumCaseMultiPayload();
  if (v13 == 2)
  {
    uint64_t v23 = *(void *)(v12 + 8);
    *(void *)uint64_t v11 = *(void *)v12;
    *(void *)(v11 + 8) = v23;
    uint64_t v24 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
    uint64_t v25 = v24[5];
    uint64_t v80 = v12 + v25;
    uint64_t v81 = v11 + v25;
    uint64_t v26 = type metadata accessor for AttributedString();
    uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16);
    swift_bridgeObjectRetain();
    v27(v81, v80, v26);
    uint64_t v28 = v24[6];
    uint64_t v29 = (void *)(v11 + v28);
    uint64_t v30 = (void *)(v12 + v28);
    uint64_t v31 = v30[1];
    void *v29 = *v30;
    v29[1] = v31;
    uint64_t v32 = v24[7];
    uint64_t v33 = (void *)(v11 + v32);
    uint64_t v34 = (void *)(v12 + v32);
    uint64_t v35 = v34[1];
    *uint64_t v33 = *v34;
    v33[1] = v35;
    uint64_t v36 = v24[8];
    uint64_t v37 = (void *)(v11 + v36);
    uint64_t v38 = (void *)(v12 + v36);
    uint64_t v39 = v38[1];
    void *v37 = *v38;
    v37[1] = v39;
    uint64_t v40 = v24[9];
    uint64_t v41 = (void *)(v11 + v40);
    uint64_t v42 = (void *)(v12 + v40);
    uint64_t v43 = v42[1];
    *uint64_t v41 = *v42;
    v41[1] = v43;
    uint64_t v44 = v24[10];
    uint64_t v45 = (void *)(v11 + v44);
    uint64_t v46 = (void *)(v12 + v44);
    uint64_t v47 = v46[1];
    *uint64_t v45 = *v46;
    v45[1] = v47;
    *(unsigned char *)(v11 + v24[11]) = *(unsigned char *)(v12 + v24[11]);
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  if (v13 == 1)
  {
    uint64_t v14 = *(void *)(v12 + 8);
    *(void *)uint64_t v11 = *(void *)v12;
    *(void *)(v11 + 8) = v14;
    uint64_t v15 = *(void *)(v12 + 24);
    *(void *)(v11 + 16) = *(void *)(v12 + 16);
    *(void *)(v11 + 24) = v15;
    uint64_t v16 = *(void *)(v12 + 40);
    *(void *)(v11 + 32) = *(void *)(v12 + 32);
    *(void *)(v11 + 40) = v16;
    uint64_t v17 = *(void *)(v12 + 56);
    *(void *)(v11 + 48) = *(void *)(v12 + 48);
    *(void *)(v11 + 56) = v17;
    *(unsigned char *)(v11 + 64) = *(unsigned char *)(v12 + 64);
    *(unsigned char *)(v11 + 65) = *(unsigned char *)(v12 + 65);
LABEL_11:
    swift_bridgeObjectRetain();
    goto LABEL_13;
  }
  uint64_t v48 = *(void *)(v12 + 8);
  *(void *)uint64_t v11 = *(void *)v12;
  *(void *)(v11 + 8) = v48;
  uint64_t v49 = *(void *)(v12 + 24);
  *(void *)(v11 + 16) = *(void *)(v12 + 16);
  *(void *)(v11 + 24) = v49;
  uint64_t v50 = *(void *)(v12 + 40);
  *(void *)(v11 + 32) = *(void *)(v12 + 32);
  *(void *)(v11 + 40) = v50;
LABEL_13:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1005654B4(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1005659EC(a1, (void (*)(void))type metadata accessor for DetailHeroChartLollipopModel);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(void *)a1 = *(void *)a2;
      uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
      uint64_t v5 = *(int *)(active + 20);
      uint64_t v6 = a1 + v5;
      uint64_t v7 = a2 + v5;
      uint64_t v8 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
      uint64_t v9 = (int *)type metadata accessor for LollipopMarkModel(0);
      *(void *)(v6 + v9[5]) = *(void *)(v7 + v9[5]);
      *(void *)(v6 + v9[6]) = *(void *)(v7 + v9[6]);
      *(void *)(v6 + v9[7]) = *(void *)(v7 + v9[7]);
      uint64_t v10 = *(int *)(active + 24);
      uint64_t v11 = a1 + v10;
      uint64_t v12 = a2 + v10;
      type metadata accessor for LollipopDetailViewModel(0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        *(void *)uint64_t v11 = *(void *)v12;
        *(void *)(v11 + 8) = *(void *)(v12 + 8);
        uint64_t v15 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        uint64_t v16 = v15[5];
        uint64_t v54 = v12 + v16;
        uint64_t v55 = v11 + v16;
        uint64_t v17 = type metadata accessor for AttributedString();
        uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
        swift_bridgeObjectRetain();
        v18(v55, v54, v17);
        uint64_t v19 = v15[6];
        uint64_t v20 = (void *)(v11 + v19);
        uint64_t v21 = (void *)(v12 + v19);
        *uint64_t v20 = *v21;
        v20[1] = v21[1];
        uint64_t v22 = v15[7];
        uint64_t v23 = (void *)(v11 + v22);
        uint64_t v24 = (void *)(v12 + v22);
        *uint64_t v23 = *v24;
        v23[1] = v24[1];
        uint64_t v25 = v15[8];
        uint64_t v26 = (void *)(v11 + v25);
        uint64_t v27 = (void *)(v12 + v25);
        void *v26 = *v27;
        v26[1] = v27[1];
        uint64_t v28 = v15[9];
        uint64_t v29 = (void *)(v11 + v28);
        uint64_t v30 = (void *)(v12 + v28);
        void *v29 = *v30;
        v29[1] = v30[1];
        uint64_t v31 = v15[10];
        uint64_t v32 = (void *)(v11 + v31);
        uint64_t v33 = (void *)(v12 + v31);
        *uint64_t v32 = *v33;
        v32[1] = v33[1];
        *(unsigned char *)(v11 + v15[11]) = *(unsigned char *)(v12 + v15[11]);
        swift_bridgeObjectRetain();
      }
      else
      {
        if (EnumCaseMultiPayload != 1)
        {
          *(void *)uint64_t v11 = *(void *)v12;
          *(void *)(v11 + 8) = *(void *)(v12 + 8);
          *(void *)(v11 + 16) = *(void *)(v12 + 16);
          *(void *)(v11 + 24) = *(void *)(v12 + 24);
          *(void *)(v11 + 32) = *(void *)(v12 + 32);
          *(void *)(v11 + 40) = *(void *)(v12 + 40);
LABEL_14:
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          return a1;
        }
        *(void *)uint64_t v11 = *(void *)v12;
        *(void *)(v11 + 8) = *(void *)(v12 + 8);
        *(void *)(v11 + 16) = *(void *)(v12 + 16);
        *(void *)(v11 + 24) = *(void *)(v12 + 24);
        *(void *)(v11 + 32) = *(void *)(v12 + 32);
        *(void *)(v11 + 40) = *(void *)(v12 + 40);
        *(void *)(v11 + 48) = *(void *)(v12 + 48);
        *(void *)(v11 + 56) = *(void *)(v12 + 56);
        *(unsigned char *)(v11 + 64) = *(unsigned char *)(v12 + 64);
        *(unsigned char *)(v11 + 65) = *(unsigned char *)(v12 + 65);
      }
    }
    else
    {
      type metadata accessor for LollipopDetailViewModel(0);
      int v14 = swift_getEnumCaseMultiPayload();
      if (v14 == 2)
      {
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        uint64_t v34 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        uint64_t v35 = v34[5];
        uint64_t v56 = a2 + v35;
        uint64_t v57 = a1 + v35;
        uint64_t v36 = type metadata accessor for AttributedString();
        uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16);
        swift_bridgeObjectRetain();
        v37(v57, v56, v36);
        uint64_t v38 = v34[6];
        uint64_t v39 = (void *)(a1 + v38);
        uint64_t v40 = (void *)(a2 + v38);
        *uint64_t v39 = *v40;
        v39[1] = v40[1];
        uint64_t v41 = v34[7];
        uint64_t v42 = (void *)(a1 + v41);
        uint64_t v43 = (void *)(a2 + v41);
        void *v42 = *v43;
        v42[1] = v43[1];
        uint64_t v44 = v34[8];
        uint64_t v45 = (void *)(a1 + v44);
        uint64_t v46 = (void *)(a2 + v44);
        *uint64_t v45 = *v46;
        v45[1] = v46[1];
        uint64_t v47 = v34[9];
        uint64_t v48 = (void *)(a1 + v47);
        uint64_t v49 = (void *)(a2 + v47);
        void *v48 = *v49;
        v48[1] = v49[1];
        uint64_t v50 = v34[10];
        uint64_t v51 = (void *)(a1 + v50);
        uint64_t v52 = (void *)(a2 + v50);
        *uint64_t v51 = *v52;
        v51[1] = v52[1];
        *(unsigned char *)(a1 + v34[11]) = *(unsigned char *)(a2 + v34[11]);
        swift_bridgeObjectRetain();
      }
      else
      {
        if (v14 != 1)
        {
          *(void *)a1 = *(void *)a2;
          *(void *)(a1 + 8) = *(void *)(a2 + 8);
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(void *)(a1 + 24) = *(void *)(a2 + 24);
          *(void *)(a1 + 32) = *(void *)(a2 + 32);
          *(void *)(a1 + 40) = *(void *)(a2 + 40);
          goto LABEL_14;
        }
        *(void *)a1 = *(void *)a2;
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = *(void *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        *(void *)(a1 + 56) = *(void *)(a2 + 56);
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
      }
    }
    swift_bridgeObjectRetain();
    goto LABEL_14;
  }
  return a1;
}

uint64_t sub_1005659EC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t type metadata accessor for DetailHeroChartLollipopModel(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E7F8F8);
}

void *sub_100565A64(void *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
    uint64_t v5 = *(int *)(active + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
    uint64_t v9 = (int *)type metadata accessor for LollipopMarkModel(0);
    *(void *)&v6[v9[5]] = *(void *)&v7[v9[5]];
    *(void *)&v6[v9[6]] = *(void *)&v7[v9[6]];
    *(void *)&v6[v9[7]] = *(void *)&v7[v9[7]];
    uint64_t v10 = *(int *)(active + 24);
    uint64_t v11 = (_OWORD *)((char *)a1 + v10);
    uint64_t v12 = (_OWORD *)((char *)a2 + v10);
    uint64_t v13 = type metadata accessor for LollipopDetailViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      _OWORD *v11 = *v12;
      int v14 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v15 = v14[5];
      uint64_t v16 = (char *)v11 + v15;
      uint64_t v17 = (char *)v12 + v15;
      uint64_t v18 = type metadata accessor for AttributedString();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      *(_OWORD *)((char *)v11 + v14[6]) = *(_OWORD *)((char *)v12 + v14[6]);
      *(_OWORD *)((char *)v11 + v14[7]) = *(_OWORD *)((char *)v12 + v14[7]);
      *(_OWORD *)((char *)v11 + v14[8]) = *(_OWORD *)((char *)v12 + v14[8]);
      *(_OWORD *)((char *)v11 + v14[9]) = *(_OWORD *)((char *)v12 + v14[9]);
      *(_OWORD *)((char *)v11 + v14[10]) = *(_OWORD *)((char *)v12 + v14[10]);
      *((unsigned char *)v11 + v14[11]) = *((unsigned char *)v12 + v14[11]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
  }
  else
  {
    uint64_t v19 = type metadata accessor for LollipopDetailViewModel(0);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v20 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
      uint64_t v21 = v20[5];
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = type metadata accessor for AttributedString();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
      *(_OWORD *)((char *)a1 + v20[6]) = *(_OWORD *)((char *)a2 + v20[6]);
      *(_OWORD *)((char *)a1 + v20[7]) = *(_OWORD *)((char *)a2 + v20[7]);
      *(_OWORD *)((char *)a1 + v20[8]) = *(_OWORD *)((char *)a2 + v20[8]);
      *(_OWORD *)((char *)a1 + v20[9]) = *(_OWORD *)((char *)a2 + v20[9]);
      *(_OWORD *)((char *)a1 + v20[10]) = *(_OWORD *)((char *)a2 + v20[10]);
      *((unsigned char *)a1 + v20[11]) = *((unsigned char *)a2 + v20[11]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_100565D60(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1005659EC((uint64_t)a1, (void (*)(void))type metadata accessor for DetailHeroChartLollipopModel);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
      uint64_t v5 = *(int *)(active + 20);
      uint64_t v6 = (char *)a1 + v5;
      uint64_t v7 = (char *)a2 + v5;
      uint64_t v8 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
      uint64_t v9 = (int *)type metadata accessor for LollipopMarkModel(0);
      *(void *)&v6[v9[5]] = *(void *)&v7[v9[5]];
      *(void *)&v6[v9[6]] = *(void *)&v7[v9[6]];
      *(void *)&v6[v9[7]] = *(void *)&v7[v9[7]];
      uint64_t v10 = *(int *)(active + 24);
      uint64_t v11 = (_OWORD *)((char *)a1 + v10);
      uint64_t v12 = (_OWORD *)((char *)a2 + v10);
      uint64_t v13 = type metadata accessor for LollipopDetailViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        _OWORD *v11 = *v12;
        int v14 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        uint64_t v15 = v14[5];
        uint64_t v16 = (char *)v11 + v15;
        uint64_t v17 = (char *)v12 + v15;
        uint64_t v18 = type metadata accessor for AttributedString();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
        *(_OWORD *)((char *)v11 + v14[6]) = *(_OWORD *)((char *)v12 + v14[6]);
        *(_OWORD *)((char *)v11 + v14[7]) = *(_OWORD *)((char *)v12 + v14[7]);
        *(_OWORD *)((char *)v11 + v14[8]) = *(_OWORD *)((char *)v12 + v14[8]);
        *(_OWORD *)((char *)v11 + v14[9]) = *(_OWORD *)((char *)v12 + v14[9]);
        *(_OWORD *)((char *)v11 + v14[10]) = *(_OWORD *)((char *)v12 + v14[10]);
        *((unsigned char *)v11 + v14[11]) = *((unsigned char *)v12 + v14[11]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
      }
    }
    else
    {
      uint64_t v19 = type metadata accessor for LollipopDetailViewModel(0);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v20 = (int *)type metadata accessor for TitleAndDetailLollipopDetailViewModel(0);
        uint64_t v21 = v20[5];
        uint64_t v22 = (char *)a1 + v21;
        uint64_t v23 = (char *)a2 + v21;
        uint64_t v24 = type metadata accessor for AttributedString();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
        *(_OWORD *)((char *)a1 + v20[6]) = *(_OWORD *)((char *)a2 + v20[6]);
        *(_OWORD *)((char *)a1 + v20[7]) = *(_OWORD *)((char *)a2 + v20[7]);
        *(_OWORD *)((char *)a1 + v20[8]) = *(_OWORD *)((char *)a2 + v20[8]);
        *(_OWORD *)((char *)a1 + v20[9]) = *(_OWORD *)((char *)a2 + v20[9]);
        *(_OWORD *)((char *)a1 + v20[10]) = *(_OWORD *)((char *)a2 + v20[10]);
        *((unsigned char *)a1 + v20[11]) = *((unsigned char *)a2 + v20[11]);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100566080()
{
  uint64_t result = type metadata accessor for LollipopDetailViewModel(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for DetailHeroChartActiveLollipopModel(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100566144()
{
  type metadata accessor for DetailHeroChartActiveLollipopModel(0);
  sub_100162E4C();
  __chkstk_darwin(v2);
  sub_100162E88();
  type metadata accessor for DetailHeroChartLollipopModel(0);
  sub_100162E4C();
  __chkstk_darwin(v3);
  sub_10012B938();
  sub_1005671A4();
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1005670B4();
    uint64_t v4 = *v0;
    type metadata accessor for LollipopMarkModel(0);
    sub_1005659EC((uint64_t)v0, (void (*)(void))type metadata accessor for DetailHeroChartActiveLollipopModel);
  }
  else
  {
    sub_1005659EC(v1, (void (*)(void))type metadata accessor for DetailHeroChartLollipopModel);
    return 0;
  }
  return v4;
}

BOOL sub_1005662A8(double *a1, double *a2)
{
  if (*a1 == *a2
    && (uint64_t v4 = sub_100162814(),
        uint64_t v5 = type metadata accessor for DetailHeroChartLollipopPosition(v4),
        (static Date.== infix(_:_:)() & 1) != 0)
    && *(double *)(v3 + *(int *)(v5 + 24)) == *(double *)(v2 + *(int *)(v5 + 24)))
  {
    return *(double *)(v3 + *(int *)(v5 + 28)) == *(double *)(v2 + *(int *)(v5 + 28));
  }
  else
  {
    return 0;
  }
}

uint64_t sub_10056632C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 120 && a2 == 0xE100000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    BOOL v6 = a1 == 1702125924 && a2 == 0xE400000000000000;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      BOOL v7 = a1 == 0x597472617473 && a2 == 0xE600000000000000;
      if (v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 1499754085 && a2 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v9) {
          return 3;
        }
        else {
          return 4;
        }
      }
    }
  }
}

uint64_t sub_100566498(char a1)
{
  uint64_t result = 120;
  switch(a1)
  {
    case 1:
      uint64_t result = 1702125924;
      break;
    case 2:
      uint64_t result = 0x597472617473;
      break;
    case 3:
      uint64_t result = 1499754085;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10056650C(void *a1)
{
  uint64_t v4 = sub_10017DF08(&qword_100E7F950);
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10012B938();
  sub_1001B1E64(a1, a1[3]);
  sub_10056710C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  sub_1005671FC();
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v1)
  {
    type metadata accessor for DetailHeroChartLollipopPosition(0);
    type metadata accessor for Date();
    sub_1001457CC(&qword_100E63968);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    KeyedEncodingContainer.encode(_:forKey:)();
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
}

uint64_t sub_1005666EC(void *a1)
{
  uint64_t v21 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v19 = v3;
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  sub_10017DF08(&qword_100E7F938);
  sub_100179C0C();
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v20 = (int *)type metadata accessor for DetailHeroChartLollipopPosition(0);
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = (char *)(v11 - v10);
  sub_1001B1E64(a1, a1[3]);
  sub_10056710C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  sub_100567158();
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  *(void *)uint64_t v12 = v22;
  sub_1001457CC(&qword_100E63948);
  KeyedDecodingContainer.decode<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(&v12[v20[5]], v7, v21);
  KeyedDecodingContainer.decode(_:forKey:)();
  *(void *)&v12[v20[6]] = v13;
  KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v15 = v14;
  uint64_t v16 = sub_10019ECB0();
  v17(v16);
  *(void *)&v12[v20[7]] = v15;
  sub_1005671A4();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  return sub_1005659EC((uint64_t)v12, (void (*)(void))type metadata accessor for DetailHeroChartLollipopPosition);
}

uint64_t sub_100566A70()
{
  return sub_100566498(*v0);
}

uint64_t sub_100566A78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10056632C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100566AA0(uint64_t a1)
{
  unint64_t v2 = sub_10056710C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100566ADC(uint64_t a1)
{
  unint64_t v2 = sub_10056710C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100566B1C(void *a1)
{
  return sub_1005666EC(a1);
}

uint64_t sub_100566B34(void *a1)
{
  return sub_10056650C(a1);
}

void sub_100566B4C(void *a1@<X8>)
{
}

uint64_t sub_100566B64()
{
  return sub_100899504();
}

uint64_t sub_100566B7C()
{
  uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(0);
  sub_100162E4C();
  __chkstk_darwin(v1);
  sub_1001626E0();
  uint64_t v4 = (double *)(v3 - v2);
  uint64_t v5 = type metadata accessor for LollipopDetailViewModel(0);
  __chkstk_darwin(v5 - 8);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  type metadata accessor for DetailHeroChartLollipopModel(0);
  sub_100162E4C();
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (double *)((char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v24 - v13;
  uint64_t v15 = sub_10017DF08(&qword_100E7F930);
  __chkstk_darwin(v15 - 8);
  sub_100162E88();
  sub_1005671A4();
  sub_1005671A4();
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1005671A4();
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_1005670B4();
      char v20 = sub_1004CA7DC((uint64_t)v14, v8);
      sub_1005659EC(v8, (void (*)(void))type metadata accessor for LollipopDetailViewModel);
      sub_1005659EC((uint64_t)v14, (void (*)(void))type metadata accessor for LollipopDetailViewModel);
      sub_1005659EC(v0, (void (*)(void))type metadata accessor for DetailHeroChartLollipopModel);
      return v20 & 1;
    }
    uint64_t v21 = type metadata accessor for LollipopDetailViewModel;
    uint64_t v22 = (uint64_t)v14;
    goto LABEL_16;
  }
  sub_1005671A4();
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v21 = type metadata accessor for DetailHeroChartActiveLollipopModel;
    uint64_t v22 = (uint64_t)v12;
LABEL_16:
    sub_1005659EC(v22, (void (*)(void))v21);
    sub_100567054(v0);
LABEL_19:
    char v20 = 0;
    return v20 & 1;
  }
  sub_1005670B4();
  if (*v12 != *v4
    || (static Date.== infix(_:_:)() & 1) == 0
    || (uint64_t v16 = type metadata accessor for LollipopMarkModel(0), sub_10017E600(*(int *)(v16 + 20)), !v18)
    || (sub_10017E600(*(int *)(v17 + 24)), !v18)
    || (sub_10017E600(*(int *)(v19 + 28)), !v18)
    || (sub_1004CA7DC((uint64_t)v12 + *(int *)(active + 24), (uint64_t)v4 + *(int *)(active + 24)) & 1) == 0)
  {
    sub_1005659EC((uint64_t)v4, (void (*)(void))type metadata accessor for DetailHeroChartActiveLollipopModel);
    sub_1005659EC((uint64_t)v12, (void (*)(void))type metadata accessor for DetailHeroChartActiveLollipopModel);
    sub_1005659EC(v0, (void (*)(void))type metadata accessor for DetailHeroChartLollipopModel);
    goto LABEL_19;
  }
  sub_1005659EC((uint64_t)v4, (void (*)(void))type metadata accessor for DetailHeroChartActiveLollipopModel);
  sub_1005659EC((uint64_t)v12, (void (*)(void))type metadata accessor for DetailHeroChartActiveLollipopModel);
  sub_1005659EC(v0, (void (*)(void))type metadata accessor for DetailHeroChartLollipopModel);
  char v20 = 1;
  return v20 & 1;
}

uint64_t sub_100566F8C(double *a1, double *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v4 = sub_100162814();
  uint64_t active = type metadata accessor for DetailHeroChartActiveLollipopModel(v4);
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = type metadata accessor for LollipopMarkModel(0);
  sub_1001A2138(*(int *)(v6 + 20));
  if (!v8) {
    return 0;
  }
  sub_1001A2138(*(int *)(v7 + 24));
  if (!v8) {
    return 0;
  }
  sub_1001A2138(*(int *)(v9 + 28));
  if (!v8) {
    return 0;
  }
  uint64_t v10 = *(int *)(active + 24);

  return sub_1004CA7DC(v3 + v10, v2 + v10);
}

uint64_t sub_100567054(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E7F930);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005670B4()
{
  uint64_t v2 = sub_100162814();
  v3(v2);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v0, v1);
  return v0;
}

unint64_t sub_10056710C()
{
  unint64_t result = qword_100E7F940;
  if (!qword_100E7F940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7F940);
  }
  return result;
}

unint64_t sub_100567158()
{
  unint64_t result = qword_100E7F948;
  if (!qword_100E7F948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7F948);
  }
  return result;
}

uint64_t sub_1005671A4()
{
  uint64_t v2 = sub_100162814();
  v3(v2);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v0, v1);
  return v0;
}

unint64_t sub_1005671FC()
{
  unint64_t result = qword_100E7F958;
  if (!qword_100E7F958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7F958);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DetailHeroChartLollipopPosition.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100567314);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DetailHeroChartLollipopPosition.CodingKeys()
{
  return &type metadata for DetailHeroChartLollipopPosition.CodingKeys;
}

unint64_t sub_100567350()
{
  unint64_t result = qword_100E7F960;
  if (!qword_100E7F960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7F960);
  }
  return result;
}

unint64_t sub_1005673A0()
{
  unint64_t result = qword_100E7F968;
  if (!qword_100E7F968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7F968);
  }
  return result;
}

unint64_t sub_1005673F0()
{
  unint64_t result = qword_100E7F970;
  if (!qword_100E7F970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7F970);
  }
  return result;
}

uint64_t sub_10056743C()
{
  swift_beginAccess();
  *(void *)(v0 + 16) = sub_1009D950C();
  sub_1000DBCCC();
  *(void *)(v0 + 24) = OS_os_log.init(subsystem:category:)();
  return v0;
}

uint64_t sub_1005674D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for OSSignpostID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = *(id *)(v2 + 24);
  OSSignpostID.init(log:)();
  static os_signpost_type_t.begin.getter();
  sub_10017CFCC();
  sub_100567608(a1, a2);
  static os_signpost_type_t.end.getter();
  sub_10017CFCC();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v10 = type metadata accessor for MoonScrubberViewModel();
  return _s7Weather24LocationCompositionStateOwst_0(a2, 0, 1, v10);
}

uint64_t sub_100567608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v189 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100E668C0);
  __chkstk_darwin(v3 - 8);
  uint64_t v188 = (uint64_t)&v172 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10017DF08(&qword_100E7FA28);
  __chkstk_darwin(v5 - 8);
  uint64_t v179 = (uint64_t)&v172 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v7 - 8);
  uint64_t v180 = (uint64_t)&v172 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10017DF08(&qword_100E7FA30);
  __chkstk_darwin(v9 - 8);
  uint64_t v190 = (uint64_t)&v172 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v216 = (int *)type metadata accessor for ScrubberDay(0);
  uint64_t v214 = *((void *)v216 - 1);
  uint64_t v11 = __chkstk_darwin(v216);
  uint64_t v174 = (uint64_t)&v172 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v173 = (uint64_t)&v172 - v14;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v181 = (uint64_t)&v172 - v16;
  __chkstk_darwin(v15);
  uint64_t v220 = (uint64_t)&v172 - v17;
  uint64_t v208 = type metadata accessor for Date.FormatStyle.Symbol.Weekday();
  uint64_t v221 = *(void **)(v208 - 8);
  __chkstk_darwin(v208);
  uint64_t v207 = (char *)&v172 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for FormatStyleCapitalizationContext();
  __chkstk_darwin(v19 - 8);
  uint64_t v206 = (char *)&v172 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for Locale();
  __chkstk_darwin(v21 - 8);
  uint64_t v213 = (char *)&v172 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10017DF08(&qword_100E7FA38);
  __chkstk_darwin(v23 - 8);
  uint64_t v212 = (uint64_t)&v172 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10017DF08(&qword_100E7FA40);
  __chkstk_darwin(v25 - 8);
  uint64_t v211 = (uint64_t)&v172 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v205 = type metadata accessor for Date.FormatStyle();
  uint64_t v219 = *(void *)(v205 - 8);
  uint64_t v27 = __chkstk_darwin(v205);
  uint64_t v204 = (char *)&v172 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v203 = (char *)&v172 - v29;
  uint64_t v224 = type metadata accessor for ScrubberHour(0);
  uint64_t v222 = *(void *)(v224 - 8);
  uint64_t v30 = __chkstk_darwin(v224);
  uint64_t v172 = (uint64_t)&v172 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v178 = (uint64_t)&v172 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  unint64_t v235 = (unint64_t)&v172 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v234 = (uint64_t)&v172 - v37;
  __chkstk_darwin(v36);
  uint64_t v39 = (char *)&v172 - v38;
  uint64_t v231 = sub_10017DF08(&qword_100E7FA48) - 8;
  uint64_t v40 = __chkstk_darwin(v231);
  long long v233 = (void (*)(void))((char *)&v172 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v40);
  uint64_t v195 = (uint64_t)&v172 - v42;
  uint64_t v43 = type metadata accessor for Date();
  uint64_t v232 = *(void *)(v43 - 8);
  uint64_t v44 = __chkstk_darwin(v43);
  Swift::Int v187 = (char *)&v172 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v193 = (char *)&v172 - v47;
  uint64_t v48 = __chkstk_darwin(v46);
  uint64_t v177 = (char *)&v172 - v49;
  uint64_t v50 = __chkstk_darwin(v48);
  uint64_t v176 = (char *)&v172 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  uint64_t v175 = (char *)&v172 - v53;
  uint64_t v54 = __chkstk_darwin(v52);
  uint64_t v227 = (void (*)(void))((char *)&v172 - v55);
  uint64_t v56 = __chkstk_darwin(v54);
  uint64_t v226 = (void (*)(void))((char *)&v172 - v57);
  uint64_t v58 = __chkstk_darwin(v56);
  uint64_t v60 = (char *)&v172 - v59;
  uint64_t v61 = __chkstk_darwin(v58);
  uint64_t v63 = (char *)&v172 - v62;
  uint64_t v64 = __chkstk_darwin(v61);
  uint64_t v218 = (char *)&v172 - v65;
  uint64_t v66 = __chkstk_darwin(v64);
  uint64_t v194 = (char *)&v172 - v67;
  __chkstk_darwin(v66);
  uint64_t v217 = (char *)&v172 - v68;
  uint64_t v69 = type metadata accessor for TimeZone();
  uint64_t v196 = v69;
  uint64_t v70 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v72 = (char *)&v172 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = type metadata accessor for Calendar();
  uint64_t v184 = *(void *)(v185 - 8);
  uint64_t v73 = __chkstk_darwin(v185);
  uint64_t v202 = (char *)&v172 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v73);
  uint64_t v230 = (uint64_t)&v172 - v75;
  Location.timeZone.getter();
  static Calendar.currentCalendar(with:)();
  uint64_t v186 = v70;
  uint64_t v76 = v63;
  uint64_t v77 = *(void (**)(char *, uint64_t))(v70 + 8);
  v77(v72, v69);
  uint64_t v182 = type metadata accessor for MoonScrubberInput();
  uint64_t v78 = a1 + *(int *)(v182 + 24);
  uint64_t v209 = a1;
  Location.timeZone.getter();
  uint64_t v79 = (uint64_t)v217;
  uint64_t v183 = v78;
  Date.startOfDay(timeZone:)();
  uint64_t v215 = v72;
  uint64_t v192 = v70 + 8;
  uint64_t v191 = v77;
  v77(v72, v196);
  uint64_t v80 = v231;
  uint64_t v81 = v195;
  uint64_t v228 = v195 + *(int *)(v231 + 56);
  sub_100325B44(v195, v228, v79, v230);
  uint64_t v82 = v232;
  uint64_t v83 = v233;
  uint64_t v84 = (char *)v233 + *(int *)(v80 + 56);
  uint64_t v86 = v232 + 16;
  uint64_t v85 = *(void (**)(void))(v232 + 16);
  ((void (*)(void (*)(void), uint64_t, uint64_t))v85)(v233, v81, v43);
  ((void (*)(char *, uint64_t, uint64_t))v85)(v84, v228, v43);
  uint64_t v229 = *(void (**)(char *, void (*)(void), uint64_t))(v82 + 32);
  v229(v194, v83, v43);
  uint64_t v87 = *(void (**)(char *, uint64_t))(v82 + 8);
  v87(v84, v43);
  uint64_t v88 = (char *)v233 + *(int *)(v231 + 56);
  v85();
  ((void (*)(char *, uint64_t, uint64_t))v85)(v88, v228, v43);
  uint64_t v228 = v82 + 32;
  v229(v218, (void (*)(void))v88, v43);
  uint64_t v231 = (uint64_t)v87;
  uint64_t v232 = v82 + 8;
  v87((char *)v233, v43);
  uint64_t v89 = v86;
  long long v233 = v85;
  ((void (*)(char *, char *, uint64_t))v85)(v76, v194, v43);
  char v90 = static Date.< infix(_:_:)();
  uint64_t v225 = v76;
  uint64_t v223 = v86;
  if (v90)
  {
    uint64_t v201 = (void (**)(char *, uint64_t))(v221 + 1);
    uint64_t v200 = (void (**)(char *, uint64_t))(v219 + 8);
    uint64_t v91 = _swiftEmptyArrayStorage;
    uint64_t v199 = (void *)0x8000000100CA4C20;
    uint64_t v198 = (void *)0x8000000100CA4C00;
    uint64_t v92 = _swiftEmptyArrayStorage;
    uint64_t v197 = v43;
    do
    {
      uint64_t v221 = v91;
      ((void (*)(char *, char *, uint64_t))v233)(v60, v76, v43);
      Date.wc_addDays(_:calendar:)();
      if (static Date.< infix(_:_:)())
      {
        uint64_t v93 = _swiftEmptyArrayStorage;
        do
        {
          ((void (*)(char *, char *, uint64_t))v233)(v39, v60, v43);
          v39[*(int *)(v224 + 20)] = static Date.== infix(_:_:)() & 1;
          sub_100569124((uint64_t)v39, v234, (void (*)(void))type metadata accessor for ScrubberHour);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v92 = (void *)sub_1007E9E78(0, v92[2] + 1, 1, (uint64_t)v92);
          }
          unint64_t v95 = v92[2];
          unint64_t v94 = v92[3];
          if (v95 >= v94 >> 1) {
            uint64_t v92 = (void *)sub_1007E9E78(v94 > 1, v95 + 1, 1, (uint64_t)v92);
          }
          v92[2] = v95 + 1;
          unint64_t v96 = (*(unsigned __int8 *)(v222 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v222 + 80);
          uint64_t v97 = *(void *)(v222 + 72);
          sub_1005690C4(v234, (uint64_t)v92 + v96 + v97 * v95, (void (*)(void))type metadata accessor for ScrubberHour);
          sub_100569124((uint64_t)v39, v235, (void (*)(void))type metadata accessor for ScrubberHour);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v93 = (void *)sub_1007E9E78(0, v93[2] + 1, 1, (uint64_t)v93);
          }
          unint64_t v99 = v93[2];
          unint64_t v98 = v93[3];
          if (v99 >= v98 >> 1) {
            uint64_t v93 = (void *)sub_1007E9E78(v98 > 1, v99 + 1, 1, (uint64_t)v93);
          }
          v93[2] = v99 + 1;
          sub_1005690C4(v235, (uint64_t)v93 + v96 + v99 * v97, (void (*)(void))type metadata accessor for ScrubberHour);
          uint64_t v100 = v227;
          Date.wc_addHours(_:calendar:)();
          sub_10056906C((uint64_t)v39, (void (*)(void))type metadata accessor for ScrubberHour);
          ((void (*)(char *, uint64_t))v231)(v60, v43);
          v229(v60, v100, v43);
          char v101 = static Date.< infix(_:_:)();
          uint64_t v76 = v225;
          uint64_t v89 = v223;
        }
        while ((v101 & 1) != 0);
      }
      else
      {
        uint64_t v93 = _swiftEmptyArrayStorage;
      }
      LODWORD(v219) = static Date.== infix(_:_:)();
      if (v219)
      {
        uint64_t v102 = v89;
        id v103 = [self mainBundle];
        v237._uint64_t countAndFlagsBits = 0xD000000000000082;
        v237._object = v199;
        v104._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
        v104._object = v198;
        v105._uint64_t countAndFlagsBits = 0x5941444F54;
        v105._object = (void *)0xE500000000000000;
        Swift::String v106 = NSLocalizedString(_:tableName:bundle:value:comment:)(v104, (Swift::String_optional)0, (NSBundle)v103, v105, v237);
        uint64_t countAndFlagsBits = v106._countAndFlagsBits;
        object = v106._object;
      }
      else
      {
        ((void (*)(void (*)(void), char *, uint64_t))v233)(v227, v76, v43);
        uint64_t v109 = type metadata accessor for Date.FormatStyle.DateStyle();
        _s7Weather24LocationCompositionStateOwst_0(v211, 1, 1, v109);
        uint64_t v110 = type metadata accessor for Date.FormatStyle.TimeStyle();
        _s7Weather24LocationCompositionStateOwst_0(v212, 1, 1, v110);
        Location.timeZone.getter();
        static Locale.autoupdatingCurrent.getter();
        static Calendar.autoupdatingCurrent.getter();
        static FormatStyleCapitalizationContext.unknown.getter();
        uint64_t v111 = v204;
        Date.FormatStyle.init(date:time:locale:calendar:timeZone:capitalizationContext:)();
        uint64_t v112 = v207;
        static Date.FormatStyle.Symbol.Weekday.abbreviated.getter();
        uint64_t v113 = v203;
        Date.FormatStyle.weekday(_:)();
        (*v201)(v112, v208);
        uint64_t v210 = *v200;
        uint64_t v114 = v111;
        uint64_t v115 = v205;
        v210(v114, v205);
        sub_100569184();
        uint64_t v116 = (char *)v227;
        Date.formatted<A>(_:)();
        uint64_t v117 = v113;
        uint64_t v43 = v197;
        v210(v117, v115);
        ((void (*)(void (*)(void), uint64_t))v231)((void (*)(void))v116, v43);
        uint64_t v102 = v89;
        Swift::String v118 = String.uppercasedWithPreferredLocale()();
        uint64_t countAndFlagsBits = v118._countAndFlagsBits;
        object = v118._object;
        swift_bridgeObjectRelease();
      }
      uint64_t v119 = v220;
      ((void (*)(uint64_t, char *, uint64_t))v233)(v220, v76, v43);
      unint64_t v120 = v216;
      *(void *)(v119 + v216[5]) = v93;
      uint64_t v121 = (uint64_t *)(v119 + v120[6]);
      *uint64_t v121 = countAndFlagsBits;
      v121[1] = (uint64_t)object;
      *(unsigned char *)(v119 + v120[7]) = v219 & 1;
      uint64_t v91 = v221;
      uint64_t v89 = v102;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v91 = (void *)sub_1007E9EC0(0, v91[2] + 1, 1, (uint64_t)v91);
      }
      uint64_t v122 = v226;
      unint64_t v124 = v91[2];
      unint64_t v123 = v91[3];
      if (v124 >= v123 >> 1) {
        uint64_t v91 = (void *)sub_1007E9EC0(v123 > 1, v124 + 1, 1, (uint64_t)v91);
      }
      v91[2] = v124 + 1;
      sub_1005690C4(v220, (uint64_t)v91+ ((*(unsigned __int8 *)(v214 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v214 + 80))+ *(void *)(v214 + 72) * v124, (void (*)(void))type metadata accessor for ScrubberDay);
      uint64_t v125 = (void (*)(char *, uint64_t))v231;
      ((void (*)(char *, uint64_t))v231)(v60, v43);
      v125(v76, v43);
      v229(v76, v122, v43);
    }
    while ((static Date.< infix(_:_:)() & 1) != 0);
  }
  else
  {
    uint64_t v92 = _swiftEmptyArrayStorage;
    uint64_t v91 = _swiftEmptyArrayStorage;
  }
  uint64_t v126 = v190;
  sub_1003041E8((uint64_t)v91, v190);
  uint64_t v127 = v216;
  int v128 = _s7Weather24LocationCompositionStateOwet_0(v126, 1, (uint64_t)v216);
  uint64_t v221 = v91;
  if (v128 != 1)
  {
    uint64_t v130 = v126;
    uint64_t v131 = v181;
    sub_1005690C4(v130, v181, (void (*)(void))type metadata accessor for ScrubberDay);
    unint64_t v132 = v127[5];
    uint64_t v133 = v179;
    sub_100304214(*(void *)(v131 + v132), v179);
    int v134 = _s7Weather24LocationCompositionStateOwet_0(v133, 1, v224);
    uint64_t v129 = v233;
    if (v134 == 1)
    {
      sub_1001781AC(v133, &qword_100E7FA28);
      uint64_t v135 = v180;
      _s7Weather24LocationCompositionStateOwst_0(v180, 1, 1, v43);
LABEL_31:
      sub_10056906C(v131, (void (*)(void))type metadata accessor for ScrubberDay);
      sub_1001781AC(v135, (uint64_t *)&unk_100E73CA0);
      goto LABEL_41;
    }
    uint64_t v135 = v180;
    ((void (*)(uint64_t, uint64_t, uint64_t))v233)(v180, v133, v43);
    sub_10056906C(v133, (void (*)(void))type metadata accessor for ScrubberHour);
    _s7Weather24LocationCompositionStateOwst_0(v135, 0, 1, v43);
    if (_s7Weather24LocationCompositionStateOwet_0(v135, 1, v43) == 1) {
      goto LABEL_31;
    }
    v229(v175, (void (*)(void))v135, v43);
    Date.wc_addHours(_:calendar:)();
    unint64_t v136 = v215;
    Location.timeZone.getter();
    Date.startOfDay(timeZone:)();
    v191(v136, v196);
    uint64_t v137 = v178;
    Date.addMinutes(_:calendar:)();
    *(unsigned char *)(v137 + *(int *)(v224 + 20)) = static Date.== infix(_:_:)() & 1;
    uint64_t v138 = v172;
    sub_100569124(v137, v172, (void (*)(void))type metadata accessor for ScrubberHour);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v92 = (void *)sub_1007E9E78(0, v92[2] + 1, 1, (uint64_t)v92);
    }
    unint64_t v140 = v92[2];
    unint64_t v139 = v92[3];
    uint64_t v141 = v140 + 1;
    if (v140 >= v139 >> 1) {
      uint64_t v92 = (void *)sub_1007E9E78(v139 > 1, v140 + 1, 1, (uint64_t)v92);
    }
    v92[2] = v141;
    unint64_t v142 = *(unsigned __int8 *)(v222 + 80);
    uint64_t v143 = (v142 + 32) & ~v142;
    sub_1005690C4(v138, (uint64_t)v92 + v143 + *(void *)(v222 + 72) * v140, (void (*)(void))type metadata accessor for ScrubberHour);
    uint64_t v144 = (uint64_t)v221;
    if (v221[2])
    {
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_38;
      }
    }
    else
    {
      __break(1u);
    }
    uint64_t v144 = sub_100ABB5EC();
LABEL_38:
    uint64_t v145 = *(void *)(v144 + 16);
    if (v145)
    {
      uint64_t v146 = v145 - 1;
      unint64_t v235 = (*(unsigned __int8 *)(v214 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v214 + 80);
      uint64_t v234 = *(void *)(v214 + 72);
      sub_10056906C(v144 + v235 + v234 * (v145 - 1), (void (*)(void))type metadata accessor for ScrubberDay);
      *(void *)(v144 + 16) = v146;
      uint64_t v147 = v181;
      uint64_t v148 = *(void *)(v181 + v132);
      sub_10017DF08(&qword_100E7FA50);
      uint64_t v149 = swift_allocObject();
      *(_OWORD *)(v149 + 16) = xmmword_100C251B0;
      sub_100569124(v178, v149 + v143, (void (*)(void))type metadata accessor for ScrubberHour);
      uint64_t v236 = v148;
      swift_bridgeObjectRetain();
      sub_10037FC98(v149);
      uint64_t v150 = v236;
      uint64_t v151 = v216;
      BOOL v152 = (uint64_t *)(v147 + v216[6]);
      uint64_t v154 = *v152;
      uint64_t v153 = v152[1];
      char v155 = *(unsigned char *)(v147 + v216[7]);
      uint64_t v156 = v173;
      uint64_t v157 = v147;
      uint64_t v129 = v233;
      ((void (*)(uint64_t, uint64_t, uint64_t))v233)(v173, v157, v43);
      *(void *)(v156 + v151[5]) = v150;
      uint64_t v158 = (void *)(v156 + v151[6]);
      *uint64_t v158 = v154;
      v158[1] = v153;
      *(unsigned char *)(v156 + v151[7]) = v155;
      sub_100569124(v156, v174, (void (*)(void))type metadata accessor for ScrubberDay);
      unint64_t v132 = *(void *)(v144 + 16);
      unint64_t v142 = *(void *)(v144 + 24);
      uint64_t v221 = (void *)v144;
      uint64_t v141 = v132 + 1;
      swift_bridgeObjectRetain();
      if (v132 < v142 >> 1)
      {
LABEL_40:
        uint64_t v159 = (uint64_t)v221;
        v221[2] = v141;
        sub_1005690C4(v174, v159 + v235 + v132 * v234, (void (*)(void))type metadata accessor for ScrubberDay);
        sub_10056906C(v173, (void (*)(void))type metadata accessor for ScrubberDay);
        sub_10056906C(v178, (void (*)(void))type metadata accessor for ScrubberHour);
        uint64_t v160 = (void (*)(char *, uint64_t))v231;
        ((void (*)(char *, uint64_t))v231)(v177, v43);
        v160(v176, v43);
        v160(v175, v43);
        sub_10056906C(v181, (void (*)(void))type metadata accessor for ScrubberDay);
        goto LABEL_41;
      }
    }
    else
    {
      __break(1u);
    }
    uint64_t v221 = (void *)sub_1007E9EC0(v142 > 1, v141, 1, (uint64_t)v221);
    goto LABEL_40;
  }
  sub_1001781AC(v126, &qword_100E7FA30);
  uint64_t v129 = v233;
LABEL_41:
  uint64_t v161 = v188;
  sub_1002AFBCC(v209 + *(int *)(v182 + 20), v188);
  uint64_t v162 = v227;
  unint64_t v163 = v194;
  ((void (*)(void (*)(void), char *, uint64_t))v129)(v227, v194, v43);
  uint64_t v164 = v218;
  ((void (*)(char *, char *, uint64_t))v129)(v193, v218, v43);
  uint64_t v165 = v215;
  Location.timeZone.getter();
  uint64_t v166 = v187;
  Date.zeroMinutes(timeZone:)();
  v191(v165, v196);
  Location.timeZone.getter();
  uint64_t v167 = (void (*)(char *, uint64_t))v231;
  ((void (*)(char *, uint64_t))v231)(v225, v43);
  v167(v164, v43);
  v167(v163, v43);
  sub_1001781AC(v195, &qword_100E7FA48);
  v167(v217, v43);
  (*(void (**)(uint64_t, uint64_t))(v184 + 8))(v230, v185);
  uint64_t v168 = v189;
  sub_1004ABC50(v161, v189);
  uint64_t v169 = (int *)type metadata accessor for MoonScrubberViewModel();
  unint64_t v170 = (void (*)(uint64_t, char *, uint64_t))v229;
  v229((char *)(v168 + v169[5]), v162, v43);
  v170(v168 + v169[6], v193, v43);
  v170(v168 + v169[7], v166, v43);
  *(void *)(v168 + v169[8]) = v221;
  *(void *)(v168 + v169[9]) = v92;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v186 + 32))(v168 + v169[10], v165, v196);
}

uint64_t sub_100569010()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MoonScrubberViewModelFactory()
{
  return self;
}

uint64_t sub_10056906C(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_1005690C4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_100569124(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

unint64_t sub_100569184()
{
  unint64_t result = qword_100E7FA58;
  if (!qword_100E7FA58)
  {
    type metadata accessor for Date.FormatStyle();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7FA58);
  }
  return result;
}

id sub_1005691D4(double *a1, id *a2)
{
  return [*a2 setFrame:*a1 a1[1] a1[2] a1[3]];
}

uint64_t sub_1005691EC()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    asyncMain(block:)();
    return swift_release_n();
  }
  return result;
}

uint64_t sub_100569264()
{
  sub_1005692B8();
  swift_release();

  sub_1001AB060(v0 + OBJC_IVAR____TtC7Weather21DisplayMetricsMonitor_previousDisplayMetrics, &qword_100E66400);
  swift_unknownObjectWeakDestroy();
  return v0;
}

void sub_1005692B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + 32);
  if (v2)
  {
    id v3 = v2;
    dispatch thunk of NSKeyValueObservation.invalidate()();
  }
  id v4 = [self defaultCenter];
  [v4 removeObserver:v1 name:UIContentSizeCategoryDidChangeNotification object:0];
}

uint64_t sub_100569350()
{
  sub_100569264();

  return swift_deallocClassInstance();
}

uint64_t sub_1005693A8()
{
  return type metadata accessor for DisplayMetricsMonitor();
}

id sub_1005693EC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 frame];
  *a2 = v4;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  return result;
}

uint64_t sub_100569428()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100569460()
{
  return sub_1005691EC();
}

uint64_t sub_10056946C()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100097814(v6, static OpenNotificationsConfigurationIntent.title);
  sub_1002102B0(v6, (uint64_t)static OpenNotificationsConfigurationIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t OpenNotificationsConfigurationIntent.title.unsafeMutableAddressor()
{
  return sub_10034090C(&qword_100E62428, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)static OpenNotificationsConfigurationIntent.title);
}

uint64_t static OpenNotificationsConfigurationIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1003409A0(&qword_100E62428, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)static OpenNotificationsConfigurationIntent.title, a1);
}

uint64_t sub_1005696BC()
{
  uint64_t v0 = sub_10017DF08(&qword_100E62CC8);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = &v12[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for Locale();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v9);
  uint64_t v10 = type metadata accessor for IntentDescription();
  sub_100097814(v10, static OpenNotificationsConfigurationIntent.description);
  sub_1002102B0(v10, (uint64_t)static OpenNotificationsConfigurationIntent.description);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v4 + 104))(v6, enum case for LocalizedStringResource.BundleDescription.main(_:), v3);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v2, 1, 1, v9);
  return IntentDescription.init(_:categoryName:searchKeywords:)();
}

uint64_t OpenNotificationsConfigurationIntent.description.unsafeMutableAddressor()
{
  return sub_10034090C(&qword_100E62430, (uint64_t (*)(void))&type metadata accessor for IntentDescription, (uint64_t)static OpenNotificationsConfigurationIntent.description);
}

uint64_t static OpenNotificationsConfigurationIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1003409A0(&qword_100E62430, (uint64_t (*)(void))&type metadata accessor for IntentDescription, (uint64_t)static OpenNotificationsConfigurationIntent.description, a1);
}

void *OpenNotificationsConfigurationIntent.openAppWhenRun.unsafeMutableAddressor()
{
  return &static OpenNotificationsConfigurationIntent.openAppWhenRun;
}

void *OpenNotificationsConfigurationIntent.isDiscoverable.unsafeMutableAddressor()
{
  return &static OpenNotificationsConfigurationIntent.isDiscoverable;
}

uint64_t OpenNotificationsConfigurationIntent.perform()()
{
  sub_1000A9DE8();
  v0[7] = v1;
  v0[8] = v2;
  uint64_t v3 = type metadata accessor for WeatherIntentType();
  v0[9] = v3;
  v0[10] = *(void *)(v3 - 8);
  v0[11] = swift_task_alloc();
  return _swift_task_switch(sub_100569AA8, 0, 0);
}

uint64_t sub_100569AA8()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[9];
  AppDependency.wrappedValue.getter();
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  sub_1001B1E64(v0 + 2, v4);
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for WeatherIntentType.openNotificationsConfiguration(_:), v3);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[12] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_100340C78;
  uint64_t v7 = v0[11];
  return dispatch thunk of WeatherIntentHandlerType.handleIntent(_:)(v7, v4, v5);
}

unint64_t sub_100569BB0()
{
  unint64_t result = qword_100E7FB48;
  if (!qword_100E7FB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7FB48);
  }
  return result;
}

unint64_t sub_100569C00()
{
  unint64_t result = qword_100E7FB50;
  if (!qword_100E7FB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7FB50);
  }
  return result;
}

uint64_t sub_100569C4C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100569C68()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100569CB8()
{
  unint64_t result = qword_100E7FB58;
  if (!qword_100E7FB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7FB58);
  }
  return result;
}

uint64_t sub_100569D04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = OpenNotificationsConfigurationIntent.title.unsafeMutableAddressor();
  uint64_t v3 = type metadata accessor for LocalizedStringResource();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v2, v3);
}

uint64_t sub_100569D78()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100321064;
  return OpenNotificationsConfigurationIntent.perform()();
}

uint64_t sub_100569E18(uint64_t a1)
{
  unint64_t v2 = sub_100569CB8();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenNotificationsConfigurationIntent()
{
  return &type metadata for OpenNotificationsConfigurationIntent;
}

id sub_100569E64()
{
  uint64_t v1 = OBJC_IVAR____TtC7Weather37DebugSevereNotificationViewController____lazy_storage___dateFormatter;
  unint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC7Weather37DebugSevereNotificationViewController____lazy_storage___dateFormatter);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC7Weather37DebugSevereNotificationViewController____lazy_storage___dateFormatter);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)NSDateFormatter) init];
    [v4 setDateStyle:1];
    [v4 setTimeStyle:1];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    unint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_100569F00(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for SevereNotificationContent();
  __chkstk_darwin(v4);
  sub_10016279C();
  *(void *)&v1[OBJC_IVAR____TtC7Weather37DebugSevereNotificationViewController____lazy_storage___dateFormatter] = 0;
  uint64_t v5 = &v1[OBJC_IVAR____TtC7Weather37DebugSevereNotificationViewController_notification];
  uint64_t v6 = type metadata accessor for SevereNotificationEntity();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v5, a1, v6);
  type metadata accessor for JSONDecoder();
  swift_allocObject();
  uint64_t v8 = v1;
  JSONDecoder.init()();
  SevereNotificationEntity.notification.getter();
  dispatch thunk of Column.value.getter();
  swift_release();
  if (v13 >> 60 == 15)
  {
    __break(1u);
    uint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_10056AEB0();
    dispatch thunk of JSONDecoder.decode<A>(_:from:)();
    swift_release();
    sub_1003FC164(v12, v13);
    sub_10056AF00(v2, (uint64_t)&v8[OBJC_IVAR____TtC7Weather37DebugSevereNotificationViewController_content]);

    v11.receiver = v8;
    v11.super_class = (Class)type metadata accessor for DebugSevereNotificationViewController();
    [super initWithStyle:2];
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    return (uint64_t)v9;
  }
  return result;
}

void sub_10056A10C()
{
  *(void *)&v0[OBJC_IVAR____TtC7Weather37DebugSevereNotificationViewController____lazy_storage___dateFormatter] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10056A194()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for DebugSevereNotificationViewController();
  [super viewDidLoad];
  id v2 = [v0 tableView];
  if (v2)
  {
    id v3 = v2;
    sub_10056AF64();
    swift_getObjCClassFromMetadata();
    NSString v4 = sub_10017A514();
    [v3 registerClass:v1 forCellReuseIdentifier:v4];

    sub_10040BF9C(0xD000000000000013, 0x8000000100CA4F10, v0);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10056A2A4(uint64_t a1, unint64_t a2)
{
  if (a2 > 2) {
    return 0;
  }
  else {
    return qword_100C44AC8[a2];
  }
}

uint64_t sub_10056A2E0(uint64_t a1, unint64_t a2)
{
  if (a2 > 2) {
    return 0;
  }
  else {
    return *(void *)&aMetadatanotifi[8 * a2];
  }
}

id sub_10056A368()
{
  NSString v1 = sub_10017A514();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v3 = [v0 dequeueReusableCellWithIdentifier:v1 forIndexPath:isa];

  if (IndexPath.section.getter())
  {
    if (IndexPath.section.getter() == 1)
    {
      uint64_t v4 = IndexPath.row.getter();
      sub_10056A888(v3, v4);
    }
    else if (IndexPath.section.getter() == 2)
    {
      sub_10056AAA4(v3);
    }
  }
  else
  {
    uint64_t v5 = IndexPath.row.getter();
    sub_10056A54C(v3, v5);
  }
  return v3;
}

uint64_t sub_10056A54C(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v18[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UIListContentConfiguration();
  sub_100179C0C();
  __chkstk_darwin(v8);
  sub_10017CC58();
  switch(a2)
  {
    case 0:
      UIListContentConfiguration.text.setter();
      SevereNotificationEntity.id.getter();
      goto LABEL_7;
    case 1:
      UIListContentConfiguration.text.setter();
      SevereNotificationEntity.alertIdentifier.getter();
      dispatch thunk of Column.value.getter();
      swift_release();
      goto LABEL_8;
    case 2:
      UIListContentConfiguration.text.setter();
      id v9 = sub_100569E64();
      SevereNotificationEntity.date.getter();
      dispatch thunk of Column.value.getter();
      swift_release();
      uint64_t v10 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v10) == 1)
      {
        __break(1u);
        JUMPOUT(0x10056A878);
      }
      Class isa = Date._bridgeToObjectiveC()().super.isa;
      (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v6, v10);
      id v12 = [v9 stringFromDate:isa];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      goto LABEL_8;
    case 3:
      UIListContentConfiguration.text.setter();
      SevereNotificationEntity.subscription.getter();
LABEL_7:
      dispatch thunk of Column.value.getter();
      swift_release();
      sub_100633398(v18[0], v18[1]);
      swift_bridgeObjectRelease();
LABEL_8:
      UIListContentConfiguration.secondaryText.setter();
      break;
    default:
      break;
  }
  v18[3] = v7;
  v18[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  sub_100170694(v18);
  sub_10019ECC8();
  v13();
  UITableViewCell.contentConfiguration.setter();
  [a1 setSelectionStyle:0];
  uint64_t v14 = sub_10017A4FC();
  return v15(v14);
}

uint64_t sub_10056A888(void *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for UIListContentConfiguration();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_10017CC58();
  switch(a2)
  {
    case 0:
    case 1:
    case 2:
      UIListContentConfiguration.text.setter();
      swift_bridgeObjectRetain();
      goto LABEL_4;
    case 3:
      UIListContentConfiguration.text.setter();
LABEL_4:
      UIListContentConfiguration.secondaryText.setter();
      break;
    default:
      break;
  }
  v11[3] = v5;
  _OWORD v11[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  id v9 = sub_100170694(v11);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16))(v9, v2, v5);
  UITableViewCell.contentConfiguration.setter();
  [a1 setSelectionStyle:0];
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v2, v5);
}

uint64_t sub_10056AAA4(void *a1)
{
  uint64_t v2 = type metadata accessor for String.Encoding();
  __chkstk_darwin(v2 - 8);
  sub_10016279C();
  uint64_t v3 = type metadata accessor for UIListContentConfiguration();
  sub_100179C0C();
  __chkstk_darwin(v4);
  static UIListContentConfiguration.cell()();
  SevereNotificationEntity.alert.getter();
  dispatch thunk of Column.value.getter();
  uint64_t result = swift_release();
  unint64_t v6 = v12;
  if (v12 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = v11;
    static String.Encoding.utf8.getter();
    String.init(data:encoding:)();
    sub_1003FC164(v7, v6);
    UIListContentConfiguration.text.setter();
    uint64_t v13 = v3;
    uint64_t v14 = &protocol witness table for UIListContentConfiguration;
    sub_100170694(&v11);
    sub_10019ECC8();
    v8();
    UITableViewCell.contentConfiguration.setter();
    [a1 setSelectionStyle:0];
    uint64_t v9 = sub_10017A4FC();
    return v10(v9);
  }
  return result;
}

void sub_10056AC2C()
{
}

void sub_10056AC6C()
{
}

id sub_10056ACC4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for DebugSevereNotificationViewController();
  return [super dealloc];
}

uint64_t sub_10056AD8C()
{
  return type metadata accessor for DebugSevereNotificationViewController();
}

uint64_t type metadata accessor for DebugSevereNotificationViewController()
{
  uint64_t result = qword_100E7FBA8;
  if (!qword_100E7FBA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10056ADDC()
{
  uint64_t result = type metadata accessor for SevereNotificationEntity();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SevereNotificationContent();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

unint64_t sub_10056AEB0()
{
  unint64_t result = qword_100E7FBB8[0];
  if (!qword_100E7FBB8[0])
  {
    type metadata accessor for SevereNotificationContent();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100E7FBB8);
  }
  return result;
}

uint64_t sub_10056AF00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SevereNotificationContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10056AF64()
{
  unint64_t result = qword_100E73CE0;
  if (!qword_100E73CE0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100E73CE0);
  }
  return result;
}

uint64_t type metadata accessor for ElevatedAqiMinorAlertContentView()
{
  return sub_100109098();
}

uint64_t sub_10056AFBC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10056B000@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v57 = a7;
  uint64_t v58 = a6;
  uint64_t v45 = a4;
  uint64_t v52 = a3;
  v70[2] = a5;
  v70[3] = a5;
  int v9 = a2;
  unsigned int v10 = a2 & 0x100;
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  v70[7] = a5;
  sub_100179D2C();
  uint64_t v50 = sub_10017F7C0();
  uint64_t v56 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v53 = v11;
  __chkstk_darwin(v12);
  sub_100162EF8();
  uint64_t v55 = v13;
  __chkstk_darwin(v14);
  uint64_t v54 = (uint64_t)&v41 - v15;
  v70[0] = a5;
  v70[1] = a5;
  v70[2] = type metadata accessor for Optional();
  v70[3] = a5;
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  sub_100179D2C();
  sub_10017F7C0();
  uint64_t v51 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v49 = v16;
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v59 = v18;
  __chkstk_darwin(v19);
  uint64_t v60 = (uint64_t)&v41 - v20;
  if (v9)
  {
    if (v9 == 1)
    {
      if (v10)
      {
        uint64_t v21 = &qword_100E88998;
        goto LABEL_11;
      }
    }
    else if (v10)
    {
      uint64_t v21 = &qword_100E88D68;
      goto LABEL_11;
    }
    uint64_t v21 = &qword_100E88B80;
    goto LABEL_11;
  }
  if (v10) {
    uint64_t v21 = &qword_100E885C8;
  }
  else {
    uint64_t v21 = &qword_100E887B0;
  }
LABEL_11:
  memcpy(v70, v21, sizeof(v70));
  uint64_t v22 = memcpy(v69, v70, sizeof(v69));
  __chkstk_darwin(v22);
  uint64_t v23 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v23;
  *(&v41 - 6) = a1;
  *((unsigned char *)&v41 - 40) = v9;
  uint64_t v44 = a1;
  int v42 = v9;
  unsigned int v43 = v10 >> 8;
  *((unsigned char *)&v41 - 39) = BYTE1(v10);
  uint64_t v24 = v45;
  *(&v41 - 4) = v52;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v26 = v59;
  Group<A>.init(content:)();
  uint64_t v68 = WitnessTable;
  uint64_t v27 = v51;
  uint64_t v46 = swift_getWitnessTable();
  sub_100121584(v26, v27, v60);
  uint64_t v28 = v49;
  uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8);
  uint64_t v48 = v49 + 8;
  uint64_t v29 = v47(v26, v27);
  __chkstk_darwin(v29);
  uint64_t v30 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v30;
  *(&v41 - 6) = v44;
  *((unsigned char *)&v41 - 40) = v42;
  *((unsigned char *)&v41 - 39) = v43;
  *(&v41 - 4) = v31;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = v55;
  Group<A>.init(content:)();
  uint64_t v67 = v32;
  uint64_t v34 = v56;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v35 = v54;
  sub_100121584(v33, v34, v54);
  uint64_t v36 = v53;
  uint64_t v37 = *(void (**)(void))(v53 + 8);
  sub_10017C768();
  v37();
  uint64_t v38 = v59;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v59, v60, v27);
  uint64_t v65 = v38;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v33, v35, v34);
  uint64_t v66 = v33;
  uint64_t v63 = v27;
  uint64_t v64 = v34;
  uint64_t v61 = v46;
  uint64_t v62 = v58;
  sub_1006E9080();
  sub_10017C768();
  v37();
  uint64_t v39 = v47;
  v47(v60, v27);
  sub_10017C768();
  v37();
  return v39(v38, v27);
}

uint64_t sub_10056B4CC@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v103 = a5;
  Swift::String v104 = a2;
  uint64_t v85 = a6;
  uint64_t v9 = sub_10017DF08(&qword_100E64E80);
  __chkstk_darwin(v9 - 8);
  uint64_t v82 = (uint64_t)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for Optional();
  uint64_t v93 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  unint64_t v98 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v97 = (char *)&v79 - v13;
  uint64_t v81 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v81);
  uint64_t v80 = (uint64_t)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v79 - v16;
  uint64_t v18 = *(void *)(a4 - 8);
  __chkstk_darwin(v19);
  uint64_t v84 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v92 = (char *)&v79 - v22;
  __chkstk_darwin(v23);
  uint64_t v91 = (char *)&v79 - v24;
  __chkstk_darwin(v25);
  char v90 = (char *)&v79 - v26;
  __chkstk_darwin(v27);
  uint64_t v89 = (char *)&v79 - v28;
  __chkstk_darwin(v29);
  uint64_t v88 = (char *)&v79 - v30;
  __chkstk_darwin(v31);
  uint64_t v87 = (char *)&v79 - v32;
  __chkstk_darwin(v33);
  unint64_t v94 = (char *)&v79 - v34;
  __chkstk_darwin(v35);
  uint64_t v102 = (char *)&v79 - v36;
  __chkstk_darwin(v37);
  unint64_t v95 = (char *)&v79 - v38;
  __chkstk_darwin(v39);
  uint64_t v41 = (char *)&v79 - v40;
  __chkstk_darwin(v42);
  uint64_t v44 = (char *)&v79 - v43;
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather28ElevatedAqiMinorAlertContent8_Storage_airQuality, (uint64_t)v17);
  v104(v17, *a3, a3[1], a3[2], a3[3]);
  sub_1001F2B74((uint64_t)v17);
  uint64_t v86 = v44;
  sub_100121584((uint64_t)v41, a4, (uint64_t)v44);
  uint64_t v83 = v18;
  uint64_t v45 = *(void (**)(char *, uint64_t))(v18 + 8);
  v45(v41, a4);
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather28ElevatedAqiMinorAlertContent8_Storage_severeAlert, (uint64_t)v17);
  v104(v17, a3[41], a3[42], a3[43], a3[44]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584((uint64_t)v41, a4, (uint64_t)v95);
  uint64_t v100 = (void (*)(uint64_t, uint64_t))v45;
  char v101 = v41;
  v45(v41, a4);
  uint64_t v96 = a1;
  uint64_t v46 = a1 + OBJC_IVAR____TtCV7Weather28ElevatedAqiMinorAlertContent8_Storage_map;
  swift_beginAccess();
  uint64_t v47 = v46;
  uint64_t v48 = v82;
  sub_10027A764(v47, v82);
  if (_s7Weather24LocationCompositionStateOwet_0(v48, 1, v81) == 1)
  {
    sub_10027A7CC(v48);
  }
  else
  {
    uint64_t v49 = v80;
    sub_10027A82C(v48, v80);
    sub_10027A890((uint64_t)(a3 + 24), (uint64_t)v127);
    sub_10027A890((uint64_t)v127, (uint64_t)v128);
    if (v129 != 1)
    {
      uint64_t v51 = (uint64_t)v102;
      v104((char *)v49, v128[0], v128[1], v128[2], v128[3]);
      sub_1001F2B74(v49);
      uint64_t v52 = (uint64_t)v101;
      sub_100121584(v51, a4, (uint64_t)v101);
      uint64_t v53 = v100;
      v100(v51, a4);
      uint64_t v50 = (uint64_t)v98;
      sub_100121584(v52, a4, (uint64_t)v98);
      v53(v52, a4);
      _s7Weather24LocationCompositionStateOwst_0(v50, 0, 1, a4);
      goto LABEL_7;
    }
    sub_1001F2B74(v49);
  }
  uint64_t v50 = (uint64_t)v98;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v98, 1, 1, a4);
LABEL_7:
  sub_1000CA354();
  uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v93 + 8);
  uint64_t v82 = (v93 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v54(v50, v99);
  sub_1001F3734(*(void *)(v96 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v17);
  uint64_t v55 = (uint64_t)v102;
  uint64_t v56 = v104;
  v104(v17, a3[16], a3[17], a3[18], a3[19]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584(v55, a4, (uint64_t)v101);
  v100(v55, a4);
  uint64_t v57 = v96;
  sub_1001F3734(*(void *)(v96 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, (uint64_t)v17);
  uint64_t v58 = (uint64_t)v94;
  v56(v17, a3[8], a3[9], a3[10], a3[11]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584(v58, a4, v55);
  v100(v58, a4);
  sub_1001F3734(*(void *)(v57 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v17);
  uint64_t v59 = (uint64_t)v87;
  uint64_t v60 = v104;
  v104(v17, a3[49], a3[50], a3[51], a3[52]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584(v59, a4, v58);
  uint64_t v61 = (void (*)(char *, uint64_t))v100;
  v100(v59, a4);
  sub_1001F3734(*(void *)(v96 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)v17);
  uint64_t v62 = (uint64_t)v88;
  v60(v17, a3[45], a3[46], a3[47], a3[48]);
  sub_1001F2B74((uint64_t)v17);
  uint64_t v63 = v103;
  sub_100121584(v62, a4, v59);
  uint64_t v64 = v61;
  v61((char *)v62, a4);
  uint64_t v65 = *(void (**)(uint64_t, char *, uint64_t))(v83 + 16);
  v65(v62, v86, a4);
  uint64_t v120 = v62;
  uint64_t v66 = v89;
  v65((uint64_t)v89, v95, a4);
  uint64_t v121 = v66;
  uint64_t v67 = v93 + 16;
  uint64_t v68 = (uint64_t)v98;
  (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v98, v97, v99);
  uint64_t v122 = v68;
  uint64_t v69 = v90;
  v65((uint64_t)v90, v101, a4);
  unint64_t v123 = v69;
  uint64_t v70 = v63;
  uint64_t v71 = v91;
  v65((uint64_t)v91, v102, a4);
  unint64_t v124 = v71;
  uint64_t v72 = v92;
  v65((uint64_t)v92, v94, a4);
  uint64_t v125 = v72;
  uint64_t v73 = v84;
  uint64_t v74 = v87;
  v65((uint64_t)v84, v87, a4);
  uint64_t v126 = v73;
  uint64_t v75 = v73;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v76 = v99;
  uint64_t v115 = v99;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v119 = a4;
  uint64_t v106 = v70;
  uint64_t v107 = v70;
  uint64_t v105 = v70;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v109 = v70;
  uint64_t v110 = v70;
  uint64_t v111 = v70;
  uint64_t v112 = v70;
  sub_1006E9080();
  v64(v74, a4);
  v64(v94, a4);
  v64(v102, a4);
  v64(v101, a4);
  uint64_t v77 = *(void (**)(char *, uint64_t))(v67 - 8);
  v77(v97, v76);
  v64(v95, a4);
  v64(v86, a4);
  v64(v75, a4);
  v64(v92, a4);
  v64(v91, a4);
  v64(v90, a4);
  v77(v98, v76);
  v64(v89, a4);
  return ((uint64_t (*)(char *, uint64_t))v64)(v88, a4);
}

uint64_t sub_10056BF38@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v102 = a5;
  uint64_t v84 = a6;
  uint64_t v10 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = *(void *)(a4 - 8);
  uint64_t v13 = v82;
  __chkstk_darwin(v14);
  uint64_t v83 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  unint64_t v98 = (char *)&v82 - v17;
  __chkstk_darwin(v18);
  uint64_t v97 = (char *)&v82 - v19;
  __chkstk_darwin(v20);
  uint64_t v96 = (char *)&v82 - v21;
  __chkstk_darwin(v22);
  unint64_t v95 = (char *)&v82 - v23;
  __chkstk_darwin(v24);
  uint64_t v93 = (char *)&v82 - v25;
  __chkstk_darwin(v26);
  uint64_t v92 = (char *)&v82 - v27;
  __chkstk_darwin(v28);
  char v90 = (char *)&v82 - v29;
  __chkstk_darwin(v30);
  uint64_t v89 = (char *)&v82 - v31;
  __chkstk_darwin(v32);
  char v101 = (char *)&v82 - v33;
  __chkstk_darwin(v34);
  uint64_t v87 = (char *)&v82 - v35;
  __chkstk_darwin(v36);
  uint64_t v86 = (char *)&v82 - v37;
  __chkstk_darwin(v38);
  uint64_t v100 = (char *)&v82 - v39;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v82 - v41;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v82 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v82 - v47;
  unint64_t v94 = (char *)&v82 - v47;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v12);
  uint64_t v49 = a3[57];
  uint64_t v50 = a3[58];
  uint64_t v51 = a3[59];
  uint64_t v52 = a3[60];
  uint64_t v99 = a2;
  a2(v12, v49, v50, v51, v52);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v45, a4, (uint64_t)v48);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v91 = v45;
  v53(v45, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)v12);
  a2(v12, a3[37], a3[38], a3[39], a3[40]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v42, a4, (uint64_t)v45);
  uint64_t v88 = v42;
  v53(v42, a4);
  uint64_t v85 = a1;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v12);
  uint64_t v54 = (uint64_t)v100;
  v99(v12, a3[12], a3[13], a3[14], a3[15]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v54, a4, (uint64_t)v42);
  uint64_t v55 = v54;
  v53((char *)v54, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)v12);
  uint64_t v56 = (uint64_t)v86;
  uint64_t v57 = v99;
  v99(v12, a3[20], a3[21], a3[22], a3[23]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v56, a4, v55);
  v53((char *)v56, a4);
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v12);
  uint64_t v58 = (uint64_t)v87;
  v57(v12, a3[53], a3[54], a3[55], a3[56]);
  sub_1001F2B74((uint64_t)v12);
  uint64_t v59 = v58;
  sub_100121584(v58, a4, v56);
  v53((char *)v58, a4);
  uint64_t v60 = v85;
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)v12);
  uint64_t v61 = (uint64_t)v101;
  uint64_t v62 = v99;
  v99(v12, a3[33], a3[34], a3[35], a3[36]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v61, a4, v59);
  v53((char *)v61, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, (uint64_t)v12);
  uint64_t v63 = (uint64_t)v89;
  v62(v12, a3[29], a3[30], a3[31], a3[32]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v63, a4, (uint64_t)v101);
  v53((char *)v63, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, (uint64_t)v12);
  uint64_t v64 = a3[4];
  uint64_t v65 = a3[5];
  uint64_t v66 = a3[6];
  uint64_t v67 = a3[7];
  uint64_t v68 = (uint64_t)v90;
  v62(v12, v64, v65, v66, v67);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v68, a4, v63);
  v53((char *)v68, a4);
  uint64_t v69 = *(void (**)(uint64_t, char *, uint64_t))(v82 + 16);
  v69(v68, v94, a4);
  uint64_t v119 = v68;
  uint64_t v70 = v92;
  v69((uint64_t)v92, v91, a4);
  uint64_t v120 = v70;
  uint64_t v71 = v93;
  v69((uint64_t)v93, v88, a4);
  uint64_t v121 = v71;
  uint64_t v72 = v95;
  v69((uint64_t)v95, v100, a4);
  uint64_t v122 = v72;
  uint64_t v73 = v96;
  uint64_t v74 = v86;
  v69((uint64_t)v96, v86, a4);
  unint64_t v123 = v73;
  uint64_t v75 = v97;
  uint64_t v76 = v87;
  v69((uint64_t)v97, v87, a4);
  unint64_t v124 = v75;
  uint64_t v77 = v98;
  uint64_t v78 = (uint64_t)v101;
  v69((uint64_t)v98, v101, a4);
  uint64_t v125 = v77;
  uint64_t v79 = v83;
  uint64_t v80 = v89;
  v69((uint64_t)v83, v89, a4);
  uint64_t v126 = v79;
  uint64_t v111 = a4;
  uint64_t v112 = a4;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v115 = a4;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v103 = v102;
  uint64_t v104 = v102;
  uint64_t v105 = v102;
  uint64_t v106 = v102;
  uint64_t v107 = v102;
  uint64_t v108 = v102;
  uint64_t v109 = v102;
  uint64_t v110 = v102;
  sub_1006E9080();
  v53(v80, a4);
  v53((char *)v78, a4);
  v53(v76, a4);
  v53(v74, a4);
  v53(v100, a4);
  v53(v88, a4);
  v53(v91, a4);
  v53(v94, a4);
  v53(v79, a4);
  v53(v98, a4);
  v53(v97, a4);
  v53(v96, a4);
  v53(v95, a4);
  v53(v93, a4);
  v53(v92, a4);
  return ((uint64_t (*)(char *, uint64_t))v53)(v90, a4);
}

uint64_t sub_10056C980@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(v2 + 9)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_10056B000(*(void *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_10056C9AC()
{
  return sub_10056C9DC((uint64_t (*)(void, void, void, void, void, void, void))sub_10056B4CC);
}

uint64_t sub_10056C9C4()
{
  return sub_10056C9DC((uint64_t (*)(void, void, void, void, void, void, void))sub_10056BF38);
}

uint64_t sub_10056C9DC(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  if (*(unsigned char *)(v1 + 41)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return a1(*(void *)(v1 + 32), v2 | *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10056CA10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for PresentedLocation();
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E6DC08);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100111070(v2 + *(int *)(v5 + 28), (uint64_t)v10);
  sub_10056CBE4(v2, (uint64_t)v7);
  uint64_t v11 = type metadata accessor for Location.Identifier();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, v7, v11);
    sub_10056CC48((uint64_t)v7);
    return sub_10056CCA4((uint64_t)v10);
  }
  else
  {
    sub_10056CC48((uint64_t)v7);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, v10, v11);
  }
}

uint64_t type metadata accessor for PresentedLocation()
{
  uint64_t result = qword_100E7FC98;
  if (!qword_100E7FC98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10056CBE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PresentedLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10056CC48(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PresentedLocation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10056CCA4(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E6DC08);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_10056CD04(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Location.Identifier();
    uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v9], 1, v7))
    {
      uint64_t v12 = sub_10017DF08(&qword_100E6DC08);
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      v8(v10, v11, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v7);
    }
    a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  }
  return a1;
}

uint64_t sub_10056CE60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Location.Identifier();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v7(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v5, 1, v4);
  if (!result)
  {
    return v7(v5, v4);
  }
  return result;
}

char *sub_10056CF28(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v8], 1, v6))
  {
    uint64_t v11 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v6);
  }
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_10056D034(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&a1[v9], 1, v6);
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v6);
  if (!v12)
  {
    if (!v13)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v6);
LABEL_7:
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_10056D1C8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v8], 1, v6))
  {
    uint64_t v11 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v6);
  }
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_10056D2D4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&a1[v9], 1, v6);
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v6);
  if (!v12)
  {
    if (!v13)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_10017DF08(&qword_100E6DC08);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v6);
LABEL_7:
  a1[*(int *)(a3 + 24)] = a2[*(int *)(a3 + 24)];
  return a1;
}

uint64_t sub_10056D468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10056D47C);
}

uint64_t sub_10056D47C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for Location.Identifier();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_5:
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  sub_10017DF08(&qword_100E6DC08);
  sub_100162F30();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    goto LABEL_5;
  }
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) <= 2u) {
    int v13 = 2;
  }
  else {
    int v13 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  }
  unsigned int v14 = v13 - 2;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 24)) >= 2u) {
    return v14;
  }
  else {
    return 0;
  }
}

uint64_t sub_10056D53C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10056D550);
}

void sub_10056D550(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for Location.Identifier();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    sub_10017DF08(&qword_100E6DC08);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 2;
      return;
    }
    uint64_t v10 = v12;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

void sub_10056D604()
{
  type metadata accessor for Location.Identifier();
  if (v0 <= 0x3F)
  {
    sub_10000F990();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

BOOL sub_10056D6D4(uint64_t a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E639E8);
  __chkstk_darwin(v3 - 8);
  sub_10016279C();
  uint64_t v4 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = type metadata accessor for PreviewLocation();
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  sub_10056D9DC(a1, v13 - v12);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_1004CC7A8(v14);
  if (EnumCaseMultiPayload == 1)
  {
    if (qword_100E627A0 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_1002102B0(v16, (uint64_t)qword_100F51DF8);
    uint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v17, v18)) {
      goto LABEL_12;
    }
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    uint64_t v20 = "Check AddLocationActAsLocationOfInterest flag for a location of interest";
    goto LABEL_11;
  }
  sub_10081B708(v1);
  if (_s7Weather24LocationCompositionStateOwet_0(v1, 1, v4) != 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v10, v1, v4);
    BOOL v22 = sub_10056DA40(v10);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v4);
    return v22;
  }
  sub_1000F3400(v1, &qword_100E639E8);
  if (qword_100E627A0 != -1) {
    swift_once();
  }
  uint64_t v21 = type metadata accessor for Logger();
  sub_1002102B0(v21, (uint64_t)qword_100F51DF8);
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    uint64_t v20 = "Check AddLocationActAsLocationOfInterest, but locationForPreview has no location";
LABEL_11:
    _os_log_impl((void *)&_mh_execute_header, v17, v18, v20, v19, 2u);
    swift_slowDealloc();
  }
LABEL_12:

  return 1;
}

uint64_t sub_10056D9DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PreviewLocation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

BOOL sub_10056DA40(uint64_t a1)
{
  uint64_t v4 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  sub_10016279C();
  uint64_t v8 = sub_10017DF08(&qword_100E63508);
  __chkstk_darwin(v8 - 8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  type metadata accessor for LocationOfInterestMatchResult();
  sub_100179C0C();
  uint64_t v27 = v13;
  uint64_t v28 = v12;
  __chkstk_darwin(v12);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  sub_1001B1E64(v1, v1[3]);
  dispatch thunk of WeatherLocationCoalescenceManagerType.matchLocationsOfInterest(for:locationsOfInterest:)();
  LocationOfInterestMatchResult.locationsOfInterest.getter();
  uint64_t v17 = type metadata accessor for LocationOfInterest();
  int v18 = _s7Weather24LocationCompositionStateOwet_0(v11, 1, v17);
  sub_1000F3400(v11, &qword_100E63508);
  if (qword_100E627A0 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_1002102B0(v19, (uint64_t)qword_100F51DF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v2, a1, v4);
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = v4;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 67240707;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v23 + 8) = 2160;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v23 + 18) = 2081;
    sub_1002FF134();
    uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10016414C(v24, v25, &v29);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2, v22);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "canAddLocationActAsLocationOfInterest is %{BOOL,public}d for location:%{private,mask.hash}s", (uint8_t *)v23, 0x1Cu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v2, v4);
  }
  (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v16, v28);
  return v18 == 1;
}

ValueMetadata *type metadata accessor for AddLocationContextHelper()
{
  return &type metadata for AddLocationContextHelper;
}

uint64_t sub_10056DDE8()
{
  if (*v0)
  {
    uint64_t v1 = *v0;
  }
  else
  {
    id v2 = [self secondarySystemFillColor];
    Color.init(uiColor:)();
    uint64_t v1 = AnyShapeStyle.init<A>(_:)();
    uint64_t *v0 = v1;
    swift_retain();
  }
  swift_retain();
  return v1;
}

uint64_t sub_10056DE74()
{
  uint64_t v1 = type metadata accessor for Material();
  __chkstk_darwin(v1);
  if (*(void *)(v0 + 8))
  {
    uint64_t v2 = *(void *)(v0 + 8);
  }
  else
  {
    static Material.thick.getter();
    uint64_t v2 = AnyShapeStyle.init<A>(_:)();
    *(void *)(v0 + 8) = v2;
    swift_retain();
  }
  swift_retain();
  return v2;
}

uint64_t sub_10056DF2C()
{
  if (*(void *)(v0 + 16))
  {
    uint64_t v1 = *(void *)(v0 + 16);
  }
  else
  {
    uint64_t v1 = static Color.white.getter();
    *(void *)(v0 + 16) = v1;
    swift_retain();
  }
  swift_retain();
  return v1;
}

uint64_t sub_10056DF74()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100097814(v6, static OpenSunriseSunsetIntent.title);
  sub_1002102B0(v6, (uint64_t)static OpenSunriseSunsetIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t OpenSunriseSunsetIntent.title.unsafeMutableAddressor()
{
  return sub_10034090C(&qword_100E62438, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)static OpenSunriseSunsetIntent.title);
}

uint64_t static OpenSunriseSunsetIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10056E598(&qword_100E62438, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)static OpenSunriseSunsetIntent.title, a1);
}

uint64_t static OpenSunriseSunsetIntent.title.setter(uint64_t a1)
{
  return sub_10056E67C(a1, &qword_100E62438, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)static OpenSunriseSunsetIntent.title);
}

uint64_t (*static OpenSunriseSunsetIntent.title.modify())()
{
  if (qword_100E62438 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();
  sub_1002102B0(v0, (uint64_t)static OpenSunriseSunsetIntent.title);
  sub_10017FEE0();
  return j_j__swift_endAccess_0;
}

uint64_t sub_10056E280()
{
  uint64_t v0 = sub_10017DF08(&qword_100E62CC8);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = &v12[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v12[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for Locale();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v9);
  uint64_t v10 = type metadata accessor for IntentDescription();
  sub_100097814(v10, static OpenSunriseSunsetIntent.description);
  sub_1002102B0(v10, (uint64_t)static OpenSunriseSunsetIntent.description);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v4 + 104))(v6, enum case for LocalizedStringResource.BundleDescription.main(_:), v3);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v2, 1, 1, v9);
  return IntentDescription.init(_:categoryName:searchKeywords:)();
}

uint64_t OpenSunriseSunsetIntent.description.unsafeMutableAddressor()
{
  return sub_10034090C(&qword_100E62440, (uint64_t (*)(void))&type metadata accessor for IntentDescription, (uint64_t)static OpenSunriseSunsetIntent.description);
}

uint64_t static OpenSunriseSunsetIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10056E598(&qword_100E62440, (uint64_t (*)(void))&type metadata accessor for IntentDescription, (uint64_t)static OpenSunriseSunsetIntent.description, a1);
}

uint64_t sub_10056E598@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_1002102B0(v7, a3);
  swift_beginAccess();
  sub_100162880();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(a4, v8, v7);
}

uint64_t static OpenSunriseSunsetIntent.description.setter(uint64_t a1)
{
  return sub_10056E67C(a1, &qword_100E62440, (uint64_t (*)(void))&type metadata accessor for IntentDescription, (uint64_t)static OpenSunriseSunsetIntent.description);
}

uint64_t sub_10056E67C(uint64_t a1, void *a2, uint64_t (*a3)(void), uint64_t a4)
{
  if (*a2 != -1) {
    swift_once();
  }
  uint64_t v7 = a3(0);
  uint64_t v8 = sub_1002102B0(v7, a4);
  swift_beginAccess();
  sub_10017C808();
  uint64_t v10 = v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 24))(v8, a1, v7);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(a1, v7);
}

uint64_t (*static OpenSunriseSunsetIntent.description.modify())()
{
  if (qword_100E62440 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for IntentDescription();
  sub_1002102B0(v0, (uint64_t)static OpenSunriseSunsetIntent.description);
  sub_10017FEE0();
  return j__swift_endAccess_0;
}

void *OpenSunriseSunsetIntent.isDiscoverable.unsafeMutableAddressor()
{
  return &static OpenSunriseSunsetIntent.isDiscoverable;
}

uint64_t static OpenSunriseSunsetIntent.parameterSummary.getter()
{
  uint64_t v0 = sub_10017DF08(&qword_100E7FCD8);
  uint64_t v1 = sub_100109308(v0);
  __chkstk_darwin(v1);
  sub_10011BFD8();
  sub_10017DF08(&qword_100E7FCE0);
  sub_100162880();
  __chkstk_darwin(v2);
  sub_1001626E0();
  sub_10056E948();
  ParameterSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v3._object = (void *)0x8000000100CA4F30;
  v3._uint64_t countAndFlagsBits = 0xD000000000000024;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v3);
  swift_getKeyPath();
  sub_10017DF08(&qword_100E7FCF0);
  ParameterSummaryString.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v4._uint64_t countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  ParameterSummaryString.StringInterpolation.appendLiteral(_:)(v4);
  ParameterSummaryString.init(stringInterpolation:)();
  return IntentParameterSummary.init(_:table:)();
}

unint64_t sub_10056E948()
{
  unint64_t result = qword_100E7FCE8;
  if (!qword_100E7FCE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7FCE8);
  }
  return result;
}

uint64_t sub_10056E994@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100547078();
  *a1 = result;
  return result;
}

uint64_t sub_10056E9C0()
{
  uint64_t v1 = sub_10017DF08(&qword_100E7F270);
  sub_100179C0C();
  uint64_t v3 = v2;
  __chkstk_darwin(v4);
  sub_10011BFD8();
  sub_10054963C();
  static ResolverSpecificationBuilder.buildExpression<A>(_:)();
  sub_100549688();
  static ResolverSpecificationBuilder.buildExpression<A>(_:)();
  sub_1002F0EBC();
  static ResolverSpecificationBuilder.buildPartialBlock<A>(first:)();
  static ResolverSpecificationBuilder.buildPartialBlock<A, each B>(accumulated:next:)();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v0, v1);
}

uint64_t sub_10056EAFC()
{
  uint64_t v0 = sub_10017DF08(&qword_100E7FD30);
  __chkstk_darwin(v0);
  uint64_t v1 = sub_10017DF08(&qword_100E7FCF8);
  sub_100097814(v1, static OpenSunriseSunsetIntent.urlRepresentation);
  sub_1002102B0(v1, (uint64_t)static OpenSunriseSunsetIntent.urlRepresentation);
  sub_10056E948();
  IntentURLRepresentation.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v2._object = (void *)0x8000000100CA4F60;
  v2._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
  IntentURLRepresentation.StringInterpolation.appendLiteral(_:)(v2);
  swift_getKeyPath();
  sub_10017DF08(&qword_100E7FCF0);
  IntentURLRepresentation.StringInterpolation.appendInterpolation<A, B>(_:)();
  swift_release();
  v3._uint64_t countAndFlagsBits = 0;
  v3._object = (void *)0xE000000000000000;
  IntentURLRepresentation.StringInterpolation.appendLiteral(_:)(v3);
  return IntentURLRepresentation.init(stringInterpolation:)();
}

uint64_t OpenSunriseSunsetIntent.urlRepresentation.unsafeMutableAddressor()
{
  if (qword_100E62448 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_10017DF08(&qword_100E7FCF8);

  return sub_1002102B0(v0, (uint64_t)static OpenSunriseSunsetIntent.urlRepresentation);
}

uint64_t static OpenSunriseSunsetIntent.urlRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_100E62448 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10017DF08(&qword_100E7FCF8);
  uint64_t v3 = sub_1002102B0(v2, (uint64_t)static OpenSunriseSunsetIntent.urlRepresentation);
  swift_beginAccess();
  sub_100162880();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(a1, v3, v2);
}

uint64_t static OpenSunriseSunsetIntent.urlRepresentation.setter(uint64_t a1)
{
  if (qword_100E62448 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_10017DF08(&qword_100E7FCF8);
  uint64_t v3 = sub_1002102B0(v2, (uint64_t)static OpenSunriseSunsetIntent.urlRepresentation);
  swift_beginAccess();
  sub_10017C808();
  uint64_t v5 = v4;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v2);
}

uint64_t (*static OpenSunriseSunsetIntent.urlRepresentation.modify())()
{
  if (qword_100E62448 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_10017DF08(&qword_100E7FCF8);
  sub_1002102B0(v0, (uint64_t)static OpenSunriseSunsetIntent.urlRepresentation);
  sub_10017FEE0();
  return j_j__swift_endAccess_0;
}

uint64_t OpenSunriseSunsetIntent.init()()
{
  type metadata accessor for InputConnectionBehavior();
  sub_100179C0C();
  uint64_t v32 = v1;
  uint64_t v33 = v0;
  __chkstk_darwin(v0);
  sub_1001626E0();
  uint64_t v31 = v3 - v2;
  uint64_t v4 = sub_10017DF08(&qword_100E62CC0);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  uint64_t v30 = (uint64_t)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v29 = (uint64_t)&v28 - v8;
  uint64_t v9 = sub_10017DF08(&qword_100E62CC8);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  type metadata accessor for LocalizedStringResource.BundleDescription();
  sub_100179C0C();
  uint64_t v15 = v14;
  __chkstk_darwin(v16);
  sub_1001626E0();
  uint64_t v17 = type metadata accessor for Locale();
  uint64_t v18 = sub_100109308(v17);
  __chkstk_darwin(v18);
  sub_1001626E0();
  uint64_t v19 = type metadata accessor for String.LocalizationValue();
  uint64_t v20 = sub_100109308(v19);
  __chkstk_darwin(v20);
  sub_1001626E0();
  uint64_t v21 = type metadata accessor for LocalizedStringResource();
  sub_100162880();
  __chkstk_darwin(v22);
  sub_1001626E0();
  uint64_t v28 = sub_10017DF08(&qword_100E62CD0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v23 = *(void (**)(uint64_t))(v15 + 104);
  uint64_t v24 = sub_10017DF98();
  v23(v24);
  sub_1001A0A10();
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v25 = sub_10017DF98();
  v23(v25);
  sub_1001A0A10();
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  _s7Weather24LocationCompositionStateOwst_0(v13, 0, 1, v21);
  uint64_t v26 = type metadata accessor for IntentDialog();
  long long v34 = 0u;
  long long v35 = 0u;
  char v36 = 0;
  _s7Weather24LocationCompositionStateOwst_0(v29, 1, 1, v26);
  _s7Weather24LocationCompositionStateOwst_0(v30, 1, 1, v26);
  (*(void (**)(uint64_t, void, uint64_t))(v32 + 104))(v31, enum case for InputConnectionBehavior.default(_:), v33);
  sub_10017DF08(&qword_100E62CD8);
  sub_1001246C8(&qword_100E62CE0, &qword_100E62CD8);
  sub_100232310();
  return IntentParameter<>.init<A>(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:resolvers:)();
}

uint64_t sub_10056F2C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = OpenSunriseSunsetIntent.urlRepresentation.unsafeMutableAddressor();
  swift_beginAccess();
  uint64_t v3 = sub_10017DF08(&qword_100E7FCF8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(a1, v2, v3);
}

unint64_t sub_10056F34C()
{
  unint64_t result = qword_100E7FD00;
  if (!qword_100E7FD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7FD00);
  }
  return result;
}

unint64_t sub_10056F39C()
{
  unint64_t result = qword_100E7FD08;
  if (!qword_100E7FD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7FD08);
  }
  return result;
}

uint64_t sub_10056F3E8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10056F404@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = OpenSunriseSunsetIntent.title.unsafeMutableAddressor();
  swift_beginAccess();
  uint64_t v3 = type metadata accessor for LocalizedStringResource();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(a1, v2, v3);
}

uint64_t sub_10056F484(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  unint64_t v5 = sub_10056F5E0();
  *uint64_t v4 = v2;
  v4[1] = sub_100547E08;
  return URLRepresentableIntent.perform()(a2, v5);
}

uint64_t sub_10056F530@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = OpenSunriseSunsetIntent.init()();
  *a1 = result;
  return result;
}

uint64_t sub_10056F558(uint64_t a1)
{
  unint64_t v2 = sub_10056E948();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenSunriseSunsetIntent()
{
  return &type metadata for OpenSunriseSunsetIntent;
}

uint64_t sub_10056F5A4()
{
  return sub_1001246C8(&qword_100E7FD18, &qword_100E7FD20);
}

unint64_t sub_10056F5E0()
{
  unint64_t result = qword_100E7FD28;
  if (!qword_100E7FD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7FD28);
  }
  return result;
}

uint64_t sub_10056F62C@<X0>(uint64_t *a1@<X8>)
{
  sub_10056F9AC(v1, v16);
  v10[6] = v16[1];
  uint64_t v11 = v16[0];
  v10[4] = v16[3];
  v10[5] = v16[2];
  v10[2] = v16[5];
  v10[3] = v16[4];
  v10[0] = v16[7];
  v10[1] = v16[6];
  uint64_t v3 = sub_10017DF08(&qword_100E7FD40);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10056F9AC(v1, v17);
  if ((~v17[0] & 0xF000000000000006) != 0)
  {
    sub_1002A8CC8((uint64_t)v17, (uint64_t)v18);
    uint64_t v12 = 0;
    unint64_t v13 = 0xE000000000000000;
    sub_100274EDC(v11);
    _StringGuts.grow(_:)(22);
    uint64_t v14 = v12;
    unint64_t v15 = v13;
    v7._uint64_t countAndFlagsBits = 0xD000000000000014;
    v7._object = (void *)0x8000000100CA5070;
    String.append(_:)(v7);
    sub_10040FAB8(&v12);
    sub_10017DF08(&qword_100E71428);
    _print_unlocked<A, B>(_:_:)();
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v12);
    Dictionary.init(dictionaryLiteral:)();
    ShortDescription.init(name:_:)();
    sub_10056F9C0((uint64_t *)v1);
  }
  else
  {
    Dictionary.init(dictionaryLiteral:)();
    ShortDescription.init(name:_:)();
  }
  a1[3] = v3;
  a1[4] = sub_10056FA14();
  uint64_t v8 = sub_100170694(a1);
  return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v4 + 32))(v8, v6, v3);
}

uint64_t sub_10056F8E0@<X0>(uint64_t *a1@<X8>)
{
  sub_10056F9AC(v1, &v4);
  return sub_10056F62C(a1);
}

uint64_t sub_10056F920()
{
  sub_10056FA68();

  return ShortDescribable.description.getter();
}

unint64_t sub_10056F960()
{
  unint64_t result = qword_100E7FD38;
  if (!qword_100E7FD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7FD38);
  }
  return result;
}

void *sub_10056F9AC(void *__src, void *__dst)
{
  return memcpy(__dst, __src, 0x60uLL);
}

uint64_t *sub_10056F9C0(uint64_t *a1)
{
  return a1;
}

unint64_t sub_10056FA14()
{
  unint64_t result = qword_100E7FD48;
  if (!qword_100E7FD48)
  {
    sub_10018C6DC(&qword_100E7FD40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7FD48);
  }
  return result;
}

unint64_t sub_10056FA68()
{
  unint64_t result = qword_100E7FD50;
  if (!qword_100E7FD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7FD50);
  }
  return result;
}

unint64_t destroy for ReportWeatherViewAction(unint64_t *a1)
{
  unint64_t result = *a1;
  if (!((result >> 57) & 0x38 | result & 6)) {
    return sub_100274E38(result);
  }
  return result;
}

uint64_t *initializeWithCopy for ReportWeatherViewAction(uint64_t *__dst, uint64_t *a2)
{
  uint64_t v3 = *a2;
  if (((unint64_t)*a2 >> 57) & 0x38 | *(_DWORD *)a2 & 6)
  {
    memcpy(__dst, a2, 0x60uLL);
  }
  else
  {
    uint64_t v4 = a2[1];
    uint64_t v5 = a2[2];
    uint64_t v6 = a2[3];
    uint64_t v7 = a2[4];
    uint64_t v8 = a2[5];
    uint64_t v9 = a2[6];
    uint64_t v10 = a2[7];
    uint64_t v11 = a2[8];
    uint64_t v13 = a2[9];
    uint64_t v14 = a2[10];
    uint64_t v15 = a2[11];
    sub_100274EDC(v3);
    void *__dst = v3;
    __dst[1] = v4;
    __dst[2] = v5;
    __dst[3] = v6;
    __dst[4] = v7;
    __dst[5] = v8;
    __dst[6] = v9;
    __dst[7] = v10;
    __dst[8] = v11;
    __dst[9] = v13;
    __dst[10] = v14;
    __dst[11] = v15;
  }
  return __dst;
}

uint64_t *assignWithCopy for ReportWeatherViewAction(uint64_t *__dst, uint64_t *__src)
{
  unint64_t v4 = *__dst;
  uint64_t v5 = *__src;
  int v6 = ((unint64_t)*__src >> 57) & 0x38 | *(_DWORD *)__src & 6;
  if (!((v4 >> 57) & 0x38 | v4 & 6))
  {
    if (!v6)
    {
      uint64_t v16 = __src[1];
      uint64_t v17 = __src[2];
      uint64_t v18 = __src[3];
      uint64_t v19 = __src[4];
      uint64_t v20 = __src[5];
      uint64_t v21 = __src[6];
      uint64_t v22 = __src[7];
      uint64_t v26 = __src[8];
      uint64_t v28 = __src[9];
      uint64_t v30 = __src[10];
      uint64_t v23 = __src[11];
      sub_100274EDC(v5);
      uint64_t v24 = *__dst;
      void *__dst = v5;
      __dst[1] = v16;
      __dst[2] = v17;
      __dst[3] = v18;
      __dst[4] = v19;
      __dst[5] = v20;
      __dst[6] = v21;
      __dst[7] = v22;
      __dst[8] = v26;
      __dst[9] = v28;
      __dst[10] = v30;
      __dst[11] = v23;
      sub_100274E38(v24);
      return __dst;
    }
    sub_100274E38(v4);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    memcpy(__dst, __src, 0x60uLL);
    return __dst;
  }
  uint64_t v7 = __src[1];
  uint64_t v8 = __src[2];
  uint64_t v9 = __src[3];
  uint64_t v10 = __src[4];
  uint64_t v11 = __src[5];
  uint64_t v12 = __src[6];
  uint64_t v13 = __src[7];
  uint64_t v25 = __src[8];
  uint64_t v27 = __src[9];
  uint64_t v29 = __src[10];
  uint64_t v14 = __src[11];
  sub_100274EDC(v5);
  void *__dst = v5;
  __dst[1] = v7;
  __dst[2] = v8;
  __dst[3] = v9;
  __dst[4] = v10;
  __dst[5] = v11;
  __dst[6] = v12;
  __dst[7] = v13;
  __dst[8] = v25;
  __dst[9] = v27;
  __dst[10] = v29;
  __dst[11] = v14;
  return __dst;
}

char *assignWithTake for ReportWeatherViewAction(char *__dst, char *__src)
{
  unint64_t v4 = *(void *)__dst;
  if (!((v4 >> 57) & 0x38 | v4 & 6))
  {
    if (!((*(void *)__src >> 57) & 0x38 | *(_DWORD *)__src & 6))
    {
      uint64_t v6 = *((void *)__src + 11);
      *(void *)__dst = *(void *)__src;
      *(_OWORD *)(__dst + 8) = *(_OWORD *)(__src + 8);
      *(_OWORD *)(__dst + 24) = *(_OWORD *)(__src + 24);
      *(_OWORD *)(__dst + 40) = *(_OWORD *)(__src + 40);
      *(_OWORD *)(__dst + 56) = *(_OWORD *)(__src + 56);
      *(_OWORD *)(__dst + 72) = *(_OWORD *)(__src + 72);
      *((void *)__dst + 11) = v6;
      sub_100274E38(v4);
      return __dst;
    }
    sub_100274E38(v4);
  }
  memcpy(__dst, __src, 0x60uLL);
  return __dst;
}

uint64_t getEnumTagSinglePayload for ReportWeatherViewAction(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3E && *(unsigned char *)(a1 + 96)) {
    return (*(_DWORD *)a1 + 62);
  }
  unsigned int v3 = (*(void *)a1 & 6 | ((*(void *)a1 >> 58) >> 5) & 0xFFFFFFC7 | (8
                                                                                     * (((*(void *)a1 >> 58) >> 2) & 7))) ^ 0x3F;
  if (v3 >= 0x3E) {
    unsigned int v3 = -1;
  }
  if (v3 + 1 >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ReportWeatherViewAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3D)
  {
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 62;
    if (a3 >= 0x3E) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3E) {
      *(unsigned char *)(result + 96) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (32 * (a2 ^ 0x3F)) | ((a2 ^ 0x3F) >> 1);
      *(void *)unint64_t result = ((v3 << 58) | (2 * v3)) & 0xF000000000000007;
      *(_OWORD *)(result + 8) = 0u;
      *(_OWORD *)(result + 24) = 0u;
      *(_OWORD *)(result + 40) = 0u;
      *(_OWORD *)(result + 56) = 0u;
      *(_OWORD *)(result + 72) = 0u;
      *(void *)(result + 88) = 0;
    }
  }
  return result;
}

uint64_t sub_10056FF84(void *a1)
{
  uint64_t v1 = *a1 >> 58;
  int v2 = *a1 & 6 | (8 * ((v1 >> 2) & 7));
  unsigned int v3 = 64 - (v2 | (v1 >> 5));
  if (v2) {
    return v3;
  }
  else {
    return 0;
  }
}

double sub_10056FFB0(uint64_t a1, unsigned int a2)
{
  if (a2 > 0x3E)
  {
    *(void *)(a1 + 88) = 0;
    double result = 0.0;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(void *)a1 = a2 - 63;
  }
  else if (a2)
  {
    uint64_t v2 = (-a2 >> 1) & 0x1F | (32 * (-a2 & 0x3F));
    *(void *)a1 = ((v2 << 58) | (2 * v2)) & 0xF000000000000007;
    double result = 0.0;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(void *)(a1 + 88) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ReportWeatherViewAction()
{
  return &type metadata for ReportWeatherViewAction;
}

BOOL sub_100570030(unsigned __int8 a1, unsigned __int8 a2)
{
  return a1 >= a2;
}

BOOL sub_100570040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 == a4) {
    return a1 >= a3;
  }
  else {
    return a2 >= a4;
  }
}

BOOL sub_100570058(char a1, char a2)
{
  return dbl_100C44F60[a1] >= dbl_100C44F60[a2];
}

BOOL sub_10057007C(char a1, char a2)
{
  double v2 = 1024.0;
  if (a1) {
    double v3 = 1024.0;
  }
  else {
    double v3 = 0.0;
  }
  if ((a2 & 1) == 0) {
    double v2 = 0.0;
  }
  return v3 >= v2;
}

BOOL sub_1005700A4(char a1, char a2)
{
  return dbl_100C44F80[a1] >= dbl_100C44F80[a2];
}

BOOL sub_1005700C8(unsigned __int8 a1, unsigned __int8 a2)
{
  return a2 < a1;
}

BOOL sub_1005700D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 == a2) {
    return a3 < a1;
  }
  else {
    return a4 < a2;
  }
}

BOOL sub_1005700F0(char a1, char a2)
{
  return dbl_100C44F60[a2] < dbl_100C44F60[a1];
}

BOOL sub_100570114(char a1, char a2)
{
  double v2 = 1024.0;
  if (a2) {
    double v3 = 1024.0;
  }
  else {
    double v3 = 0.0;
  }
  if ((a1 & 1) == 0) {
    double v2 = 0.0;
  }
  return v3 < v2;
}

BOOL sub_10057013C(char a1, char a2)
{
  return dbl_100C44F80[a2] < dbl_100C44F80[a1];
}

BOOL sub_100570160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  BOOL v9 = a3 == a7 && a4 == a8;
  return a1 == a5 && a2 == a6 && v9;
}

BOOL sub_10057017C(uint64_t *a1, uint64_t *a2)
{
  return sub_100570160(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

uint64_t sub_100570198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C25ED0;
  *(void *)(inited + 32) = 120;
  *(void *)(inited + 40) = 0xE100000000000000;
  uint64_t v11 = sub_10017DF08(&qword_100E7FD68);
  *(void *)(inited + 48) = a1;
  *(void *)(inited + 56) = a2;
  *(void *)(inited + 72) = v11;
  *(void *)(inited + 80) = 121;
  *(void *)(inited + 120) = v11;
  *(void *)(inited + 88) = 0xE100000000000000;
  *(void *)(inited + 96) = a3;
  *(void *)(inited + 104) = a4;
  Dictionary.init(dictionaryLiteral:)();
  a5[3] = sub_10017DF08(&qword_100E7FD70);
  a5[4] = sub_1005704C4();
  sub_100170694(a5);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_1005702B8@<X0>(uint64_t *a1@<X8>)
{
  return sub_100570198(*v1, v1[1], v1[2], v1[3], a1);
}

uint64_t sub_1005702C4()
{
  sub_100570518();

  return ShortDescribable.description.getter();
}

BOOL sub_100570300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1 == a3 && a2 == a4;
}

BOOL sub_100570310(uint64_t *a1, uint64_t *a2)
{
  return sub_100570300(*a1, a1[1], *a2, a2[1]);
}

unint64_t sub_100570328()
{
  unint64_t result = qword_100E7FD58;
  if (!qword_100E7FD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7FD58);
  }
  return result;
}

BOOL sub_100570374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 == a4) {
    return a1 < a3;
  }
  else {
    return a2 < a4;
  }
}

BOOL sub_10057038C(uint64_t *a1, uint64_t *a2)
{
  return sub_100570374(*a1, a1[1], *a2, a2[1]);
}

BOOL sub_1005703A0(uint64_t *a1, uint64_t *a2)
{
  return sub_1005703C4(*a1, a1[1], *a2, a2[1]);
}

BOOL sub_1005703B4(unsigned __int8 a1, unsigned __int8 a2)
{
  return a2 >= a1;
}

BOOL sub_1005703C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4 == a2) {
    return a3 >= a1;
  }
  else {
    return a4 >= a2;
  }
}

BOOL sub_1005703DC(char a1, char a2)
{
  return dbl_100C44F60[a2] >= dbl_100C44F60[a1];
}

BOOL sub_100570400(char a1, char a2)
{
  double v2 = 1024.0;
  if (a2) {
    double v3 = 1024.0;
  }
  else {
    double v3 = 0.0;
  }
  if ((a1 & 1) == 0) {
    double v2 = 0.0;
  }
  return v3 >= v2;
}

BOOL sub_100570428(char a1, char a2)
{
  return dbl_100C44F80[a2] >= dbl_100C44F80[a1];
}

BOOL sub_10057044C(uint64_t *a1, uint64_t *a2)
{
  return sub_100570040(*a1, a1[1], *a2, a2[1]);
}

BOOL sub_100570460(uint64_t *a1, uint64_t *a2)
{
  return sub_1005700D8(*a1, a1[1], *a2, a2[1]);
}

unint64_t sub_100570478()
{
  unint64_t result = qword_100E7FD60;
  if (!qword_100E7FD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7FD60);
  }
  return result;
}

unint64_t sub_1005704C4()
{
  unint64_t result = qword_100E7FD78;
  if (!qword_100E7FD78)
  {
    sub_10018C6DC(&qword_100E7FD70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7FD78);
  }
  return result;
}

unint64_t sub_100570518()
{
  unint64_t result = qword_100E7FD80;
  if (!qword_100E7FD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7FD80);
  }
  return result;
}

void *sub_100570564(uint64_t a1, uint64_t a2, unint64_t a3)
{
  double v3 = 0;
  switch((a3 >> 59) & 0x1E | (a3 >> 2) & 1)
  {
    case 1uLL:
      sub_100187D7C();
      char v7 = sub_10017FF00();
      uint64_t v10 = sub_100BA3524(v7, v8, v9);
      goto LABEL_27;
    case 2uLL:
      sub_100187D7C();
      char v11 = sub_10017FF00();
      uint64_t v10 = sub_100479DE8(v11, v12, v13);
      goto LABEL_27;
    case 3uLL:
      sub_100187D7C();
      char v14 = sub_10017FF00();
      uint64_t v10 = sub_100B5873C(v14, v15, v16);
      goto LABEL_27;
    case 4uLL:
      sub_100187D7C();
      char v17 = sub_10017FF00();
      uint64_t v10 = sub_1007249A8(v17, v18, v19);
      goto LABEL_27;
    case 5uLL:
      sub_100187D7C();
      char v20 = sub_10017FF00();
      uint64_t v10 = sub_10082019C(v20, v21, v22);
      goto LABEL_27;
    case 6uLL:
      sub_100187D7C();
      char v23 = sub_10017FF00();
      uint64_t v10 = sub_1009D0568(v23, v24, v25);
      goto LABEL_27;
    case 7uLL:
      sub_100187D7C();
      char v26 = sub_10017FF00();
      uint64_t v10 = sub_10094E6A4(v26, v27, v28);
      goto LABEL_27;
    case 8uLL:
      sub_100187D7C();
      char v29 = sub_10017FF00();
      uint64_t v10 = sub_1007CC638(v29, v30, v31);
      goto LABEL_27;
    case 9uLL:
      sub_100187D7C();
      char v32 = sub_10017FF00();
      uint64_t v10 = sub_1009E89C0(v32, v33, v34);
      goto LABEL_27;
    case 0xAuLL:
      sub_100187D7C();
      char v35 = sub_10017FF00();
      uint64_t v10 = sub_1003BE25C(v35, v36, v37);
      goto LABEL_27;
    case 0xBuLL:
      sub_100187D7C();
      char v38 = sub_10017FF00();
      uint64_t v10 = sub_100429180(v38, v39, v40);
      goto LABEL_27;
    case 0xCuLL:
      sub_100187D7C();
      char v41 = sub_10017FF00();
      uint64_t v10 = sub_100791A34(v41, v42, v43);
      goto LABEL_27;
    case 0xDuLL:
      sub_100187D7C();
      char v44 = sub_10017FF00();
      uint64_t v10 = sub_10031F064(v44, v45, v46);
      goto LABEL_27;
    case 0xEuLL:
      sub_100187D7C();
      char v47 = sub_10017FF00();
      uint64_t v10 = sub_1006B87A0(v47, v48, v49);
      goto LABEL_27;
    case 0xFuLL:
      sub_100187D7C();
      char v50 = sub_10017FF00();
      uint64_t v10 = sub_10070B82C(v50, v51, v52);
      goto LABEL_27;
    case 0x10uLL:
      sub_100187D7C();
      char v53 = sub_10017FF00();
      uint64_t v10 = sub_1006E15D4(v53, v54, v55);
      goto LABEL_27;
    case 0x11uLL:
      sub_100187D7C();
      char v56 = sub_10017FF00();
      uint64_t v10 = sub_1004A9670(v56, v57, v58);
      goto LABEL_27;
    case 0x12uLL:
      sub_100187D7C();
      char v59 = sub_10017FF00();
      uint64_t v10 = sub_1008D689C(v59, v60, v61);
      goto LABEL_27;
    case 0x13uLL:
      sub_100187D7C();
      char v62 = sub_10017FF00();
      uint64_t v10 = sub_100ADFF44(v62, v63, v64);
      goto LABEL_27;
    case 0x14uLL:
      sub_100187D7C();
      char v65 = sub_10017FF00();
      uint64_t v10 = sub_1003876AC(v65, v66, v67);
      goto LABEL_27;
    case 0x15uLL:
      sub_100187D7C();
      char v68 = sub_10017FF00();
      uint64_t v10 = sub_1006A2A74(v68, v69, v70);
      goto LABEL_27;
    case 0x16uLL:
      sub_100187D7C();
      char v71 = sub_10017FF00();
      uint64_t v10 = sub_1008EC020(v71, v72, v73);
      goto LABEL_27;
    case 0x17uLL:
      sub_100187D7C();
      char v74 = sub_10017FF00();
      uint64_t v10 = sub_1007F4EC0(v74, v75, v76);
      goto LABEL_27;
    case 0x18uLL:
      sub_100187D7C();
      char v77 = sub_10017FF00();
      uint64_t v10 = sub_100686B20(v77, v78, v79);
LABEL_27:
      double v3 = v10;
      goto LABEL_28;
    case 0x19uLL:
      return v3;
    default:
      swift_retain();
      char v4 = sub_10017FF00();
      double v3 = sub_100663714(v4, v5, v6);
LABEL_28:
      swift_release();
      return v3;
  }
}

void *sub_1005707D8(unint64_t a1)
{
  uint64_t v1 = _swiftEmptyArrayStorage;
  switch((a1 >> 59) & 0x1E | (a1 >> 2) & 1)
  {
    case 1uLL:
      uint64_t v3 = sub_100187D7C();
      uint64_t v4 = sub_100BA3AB0(v3);
      goto LABEL_27;
    case 2uLL:
      uint64_t v5 = sub_100187D7C();
      uint64_t v4 = sub_10047957C(v5);
      goto LABEL_27;
    case 3uLL:
      uint64_t v6 = sub_100187D7C();
      uint64_t v4 = sub_100B58D18(v6);
      goto LABEL_27;
    case 4uLL:
      uint64_t v7 = sub_100187D7C();
      uint64_t v4 = sub_100724F84(v7);
      goto LABEL_27;
    case 5uLL:
      uint64_t v8 = sub_100187D7C();
      uint64_t v4 = sub_100820778(v8);
      goto LABEL_27;
    case 6uLL:
      uint64_t v9 = sub_100187D7C();
      uint64_t v4 = sub_1009D0B44(v9);
      goto LABEL_27;
    case 7uLL:
      uint64_t v10 = sub_100187D7C();
      uint64_t v4 = sub_10094EC80(v10);
      goto LABEL_27;
    case 8uLL:
      uint64_t v11 = sub_100187D7C();
      uint64_t v4 = sub_1007CCBC4(v11);
      goto LABEL_27;
    case 9uLL:
      uint64_t v12 = sub_100187D7C();
      uint64_t v4 = sub_1009E8F4C(v12);
      goto LABEL_27;
    case 0xAuLL:
      uint64_t v13 = sub_100187D7C();
      uint64_t v4 = sub_1003BD9EC(v13);
      goto LABEL_27;
    case 0xBuLL:
      uint64_t v14 = sub_100187D7C();
      uint64_t v4 = sub_1004288B4(v14);
      goto LABEL_27;
    case 0xCuLL:
      uint64_t v15 = sub_100187D7C();
      uint64_t v4 = sub_100792010(v15);
      goto LABEL_27;
    case 0xDuLL:
      uint64_t v16 = sub_100187D7C();
      uint64_t v4 = sub_10031E798(v16);
      goto LABEL_27;
    case 0xEuLL:
      uint64_t v17 = sub_100187D7C();
      uint64_t v4 = sub_1006B8D7C(v17);
      goto LABEL_27;
    case 0xFuLL:
      uint64_t v18 = sub_100187D7C();
      uint64_t v4 = sub_10070BE08(v18);
      goto LABEL_27;
    case 0x10uLL:
      uint64_t v19 = sub_100187D7C();
      uint64_t v4 = sub_1006E1B60(v19);
      goto LABEL_27;
    case 0x11uLL:
      uint64_t v20 = sub_100187D7C();
      uint64_t v4 = sub_1004A8E80(v20);
      goto LABEL_27;
    case 0x12uLL:
      uint64_t v21 = sub_100187D7C();
      uint64_t v4 = sub_1008D6E28(v21);
      goto LABEL_27;
    case 0x13uLL:
      uint64_t v22 = sub_100187D7C();
      uint64_t v4 = sub_100AE04D0(v22);
      goto LABEL_27;
    case 0x14uLL:
      uint64_t v23 = sub_100187D7C();
      uint64_t v4 = sub_100386E94(v23);
      goto LABEL_27;
    case 0x15uLL:
      uint64_t v24 = sub_100187D7C();
      uint64_t v4 = sub_1006A304C(v24);
      goto LABEL_27;
    case 0x16uLL:
      uint64_t v25 = sub_100187D7C();
      uint64_t v4 = sub_1008EC5FC(v25);
      goto LABEL_27;
    case 0x17uLL:
      uint64_t v26 = sub_100187D7C();
      uint64_t v4 = sub_1007F549C(v26);
      goto LABEL_27;
    case 0x18uLL:
      uint64_t v27 = sub_100187D7C();
      uint64_t v4 = sub_1006870FC(v27);
LABEL_27:
      uint64_t v1 = (void *)v4;
      goto LABEL_28;
    case 0x19uLL:
      return v1;
    default:
      uint64_t v2 = swift_retain();
      uint64_t v1 = (void *)sub_100663CE8(v2);
LABEL_28:
      swift_release();
      return v1;
  }
}

uint64_t sub_100570A44(unint64_t *a1, uint64_t *a2)
{
  return sub_1000C8698(*a1, *a2);
}

void type metadata accessor for ComponentSpan()
{
}

void *sub_100570A5C(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t sub_100570A94()
{
  return swift_release();
}

void *sub_100570AA4(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *sub_100570AF0(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_100570B2C(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0x67 && *(unsigned char *)(a1 + 8))
    {
      unsigned int v2 = *(_DWORD *)a1 + 102;
    }
    else
    {
      unsigned int v2 = ((((*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7) >> 2) & 0xFFFFFF9F | (32 * (*(void *)a1 & 3))) ^ 0x7F;
      if (v2 >= 0x66) {
        unsigned int v2 = -1;
      }
    }
  }
  else
  {
    unsigned int v2 = -1;
  }
  return v2 + 1;
}

uint64_t sub_100570B80(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x66)
  {
    *(void *)unint64_t result = a2 - 103;
    if (a3 >= 0x67) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x67) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 5) & 3 | (4 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_100570BD0(void *a1)
{
  unsigned int v1 = (*a1 >> 59) & 0x1E | (*a1 >> 2) & 1;
  if (v1 <= 0x18) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 25;
  }
}

void *sub_100570BF4(void *result)
{
  *result &= 0xFFFFFFFFFFFFFFBuLL;
  return result;
}

unint64_t *sub_100570C08(unint64_t *result, uint64_t a2)
{
  if (a2 < 0x19) {
    unint64_t v2 = (a2 << 59) & 0xF000000000000000 | (4 * (a2 & 1)) | *result & 0xFFFFFFFFFFFFFF8;
  }
  else {
    unint64_t v2 = (8 * (a2 - 25)) | 0xC000000000000004;
  }
  *unint64_t result = v2;
  return result;
}

void type metadata accessor for LocationContentViewModel()
{
}

uint64_t sub_100570C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  uint64_t v45 = a3;
  uint64_t v46 = a4;
  uint64_t v10 = sub_10017DF08(&qword_100E6B648);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v45 - v15;
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v17((char *)&v45 - v15, a1, v10);
  v17(v14, a2, v10);
  if (a5)
  {
    uint64_t v18 = *(void (**)(char *, uint64_t))(v11 + 8);
    v18(v14, v10);
    v18(v16, v10);
LABEL_4:
    id v21 = [self mainBundle];
    v47._object = (void *)0x8000000100CA5A30;
    v22._object = (void *)0x8000000100CA5A10;
    v22._uint64_t countAndFlagsBits = 0xD000000000000019;
    v23._uint64_t countAndFlagsBits = 0x206D6F7266204025;
    v23._object = (void *)0xEF65676172657661;
    v47._uint64_t countAndFlagsBits = 0x10000000000000A6;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v22, (Swift::String_optional)0, (NSBundle)v21, v23, v47);

    sub_10017DF08(&qword_100E64020);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_100C251B0;
    *(void *)(v24 + 56) = &type metadata for String;
    *(void *)(v24 + 64) = sub_10012B7C0();
    uint64_t v25 = v46;
    *(void *)(v24 + 32) = v45;
    *(void *)(v24 + 40) = v25;
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  sub_1001ABC4C(0, (unint64_t *)&qword_100E6B678);
  char v19 = static Measurement.== infix<A, B>(_:_:)();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v11 + 8);
  v20(v14, v10);
  v20(v16, v10);
  if (v19) {
    goto LABEL_4;
  }
  sub_100573ACC();
  char v26 = dispatch thunk of static Comparable.< infix(_:_:)();
  id v27 = [self mainBundle];
  if (v26)
  {
    v48._uint64_t countAndFlagsBits = 0x10000000000000B6;
    v28._uint64_t countAndFlagsBits = 0xD000000000000010;
    v48._object = (void *)0x8000000100CA5950;
    v29._object = (void *)0x8000000100CA5910;
    v28._object = (void *)0x8000000100CA5930;
    v29._uint64_t countAndFlagsBits = 0xD000000000000019;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v29, (Swift::String_optional)0, (NSBundle)v27, v28, v48);

    sub_10017DF08(&qword_100E64020);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_100C251B0;
    *(void *)(v30 + 56) = &type metadata for String;
    *(void *)(v30 + 64) = sub_10012B7C0();
    uint64_t v31 = v46;
    *(void *)(v30 + 32) = v45;
    *(void *)(v30 + 40) = v31;
    swift_bridgeObjectRetain();
  }
  else
  {
    if (a6)
    {
      v49._uint64_t countAndFlagsBits = 0x10000000000000D2;
      v32._uint64_t countAndFlagsBits = 0xD000000000000010;
      v33._uint64_t countAndFlagsBits = 0xD000000000000027;
      v49._object = (void *)0x8000000100CA5830;
      v33._object = (void *)0x8000000100CA57E0;
      v32._object = (void *)0x8000000100CA5810;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v33, (Swift::String_optional)0, (NSBundle)v27, v32, v49);

      sub_10017DF08(&qword_100E64020);
      uint64_t v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = xmmword_100C251B0;
      Swift::String v37 = String.trimmingHyphensAndMinusSigns()();
      object = v37._object;
      uint64_t countAndFlagsBits = v37._countAndFlagsBits;
    }
    else
    {
      v50._uint64_t countAndFlagsBits = 0x10000000000000B9;
      v50._object = (void *)0x8000000100CA5720;
      v38._object = (void *)0x8000000100CA5700;
      v38._uint64_t countAndFlagsBits = 0xD000000000000019;
      v39._uint64_t countAndFlagsBits = 0x206D6F7266204025;
      v39._object = (void *)0xEF65676172657661;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v38, (Swift::String_optional)0, (NSBundle)v27, v39, v50);

      sub_10017DF08(&qword_100E64020);
      uint64_t v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = xmmword_100C251B0;
      Swift::String v40 = String.replacingHyphensWithMinusSigns()();
      object = v40._object;
      uint64_t countAndFlagsBits = v40._countAndFlagsBits;
    }
    uint64_t v41 = countAndFlagsBits;
    char v42 = object;
    *(void *)(v34 + 56) = &type metadata for String;
    *(void *)(v34 + 64) = sub_10012B7C0();
    *(void *)(v34 + 32) = v41;
    *(void *)(v34 + 40) = v42;
  }
LABEL_11:
  uint64_t v43 = String.init(format:_:)();
  swift_bridgeObjectRelease();
  return v43;
}

uint64_t sub_100571190(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = self;
  id v5 = [v4 mainBundle];
  v6._uint64_t countAndFlagsBits = 0xD000000000000014;
  v7._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v16._uint64_t countAndFlagsBits = 0xD00000000000009ELL;
  v16._object = (void *)0x8000000100CA5550;
  v7._object = (void *)0x8000000100CA5510;
  v6._object = (void *)0x8000000100CA5530;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v5, v6, v16);

  sub_10017DF08(&qword_100E64020);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_100C25ED0;
  *(void *)(v8 + 56) = &type metadata for Int;
  *(void *)(v8 + 64) = &protocol witness table for Int;
  *(void *)(v8 + 32) = 30;
  *(void *)(v8 + 96) = &type metadata for String;
  unint64_t v9 = sub_10012B7C0();
  *(void *)(v8 + 104) = v9;
  *(void *)(v8 + 72) = a1;
  *(void *)(v8 + 80) = a2;
  swift_bridgeObjectRetain();
  uint64_t v10 = static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v11 = [v4 mainBundle];
  v12._uint64_t countAndFlagsBits = 0xD000000000000027;
  v17._uint64_t countAndFlagsBits = 0xD0000000000000B0;
  v17._object = (void *)0x8000000100CA5640;
  v12._object = (void *)0x8000000100CA55F0;
  v13._object = (void *)0x8000000100CA5620;
  v13._uint64_t countAndFlagsBits = 0xD000000000000010;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v17);

  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_100C25ED0;
  *(void *)(v14 + 56) = &type metadata for Int;
  *(void *)(v14 + 64) = &protocol witness table for Int;
  *(void *)(v14 + 32) = 30;
  *(void *)(v14 + 96) = &type metadata for String;
  *(void *)(v14 + 104) = v9;
  *(void *)(v14 + 72) = a1;
  *(void *)(v14 + 80) = a2;
  swift_bridgeObjectRetain();
  static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_100571410@<X0>(uint64_t a1@<X2>, int a2@<W3>, uint64_t a3@<X8>)
{
  int v126 = a2;
  uint64_t v102 = a3;
  uint64_t v112 = type metadata accessor for NumberFormatStyleConfiguration.SignDisplayStrategy();
  sub_100179C0C();
  uint64_t v111 = v5;
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v128 = v7;
  uint64_t v8 = type metadata accessor for WeatherFormatPlaceholder();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_10017DF08(&qword_100E63730);
  uint64_t v14 = sub_100109308(v13);
  __chkstk_darwin(v14);
  sub_10017FDD0();
  type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle();
  sub_100179C0C();
  uint64_t v131 = v15;
  unint64_t v132 = v16;
  __chkstk_darwin(v15);
  sub_100162EF8();
  uint64_t v122 = v17;
  sub_1001626D4();
  __chkstk_darwin(v18);
  uint64_t v19 = sub_10017DF08(&qword_100E65250);
  sub_100179C0C();
  uint64_t v101 = v20;
  __chkstk_darwin(v21);
  sub_100162EF8();
  uint64_t v130 = v22;
  sub_1001626D4();
  uint64_t v24 = __chkstk_darwin(v23);
  char v129 = (char *)&v133._object - v25;
  __chkstk_darwin(v24);
  sub_100128F8C();
  uint64_t v127 = v26;
  Measurement.rounded.getter();
  Measurement.rounded.getter();
  id v108 = self;
  id v27 = [v108 mainBundle];
  sub_1001631D8();
  v28._uint64_t countAndFlagsBits = sub_10019D5A8();
  v29._uint64_t countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  v133._uint64_t countAndFlagsBits = 0x100000000000006ALL;
  Swift::String v30 = NSLocalizedString(_:tableName:bundle:value:comment:)(v28, (Swift::String_optional)0, (NSBundle)v27, v29, v133);
  uint64_t countAndFlagsBits = v30._countAndFlagsBits;
  object = v30._object;

  uint64_t v113 = sub_10017DF08(&qword_100E64020);
  uint64_t v31 = sub_100182E98();
  long long v114 = xmmword_100C251B0;
  *(_OWORD *)(v31 + 16) = xmmword_100C251B0;
  uint64_t v32 = type metadata accessor for Locale();
  sub_100162E4C();
  uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16);
  uint64_t v110 = a1;
  uint64_t v104 = v34;
  uint64_t v103 = v33 + 16;
  v34(v3, a1, v32);
  sub_1001093B0();
  uint64_t v106 = v32;
  _s7Weather24LocationCompositionStateOwst_0(v35, v36, v37, v32);
  static Set<>.full.getter();
  static WeatherFormatStyle<>.weather(_:locale:)();
  swift_bridgeObjectRelease();
  uint64_t v107 = v3;
  sub_10012B8A0(v3);
  uint64_t v38 = *(void *)(v9 + 104);
  int v105 = enum case for WeatherFormatPlaceholder.none(_:);
  uint64_t v120 = v38;
  uint64_t v121 = v9 + 104;
  sub_1001649D0();
  v40(v39);
  uint64_t v119 = type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  uint64_t v41 = sub_100573BD0((unint64_t *)&qword_100E6BF60, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
  uint64_t v125 = v19;
  uint64_t v118 = v41;
  uint64_t v42 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v44 = v43;
  swift_release();
  uint64_t v117 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  sub_100127BA4();
  v46(v45);
  uint64_t v47 = v132[1];
  ++v132;
  uint64_t v115 = v47;
  sub_100127BA4();
  v49(v48);
  *(void *)(v31 + 56) = &type metadata for String;
  unint64_t v109 = sub_10012B7C0();
  *(void *)(v31 + 64) = v109;
  *(void *)(v31 + 32) = v42;
  *(void *)(v31 + 40) = v44;
  uint64_t v50 = static String.localizedStringWithFormat(_:_:)();
  uint64_t v123 = v51;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1001ABC4C(0, (unint64_t *)&qword_100E659A0);
  static Measurement<>.- infix(_:_:)();
  uint64_t countAndFlagsBits = v50;
  if (v126) {
    static NumberFormatStyleConfiguration.SignDisplayStrategy.never.getter();
  }
  else {
    static NumberFormatStyleConfiguration.SignDisplayStrategy.always(includingZero:)();
  }
  uint64_t v52 = v112;
  uint64_t v53 = v111;
  uint64_t v54 = v107;
  uint64_t v55 = v106;
  v104(v107, v110, v106);
  sub_1001093B0();
  _s7Weather24LocationCompositionStateOwst_0(v56, v57, v58, v55);
  static Set<>.full.getter();
  uint64_t v59 = v128;
  static WeatherFormatStyle<>.weather(_:sign:locale:)();
  swift_bridgeObjectRelease();
  sub_10012B8A0(v54);
  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v59, v52);
  sub_1001649D0();
  v61(v60);
  static UnitManager.standard.getter();
  sub_100182454();
  uint64_t v62 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v64 = v63;
  swift_release();
  v117(v12, v8);
  sub_100127BA4();
  v66(v65);
  Measurement.value.getter();
  if (v67 > 0.0)
  {
    id v68 = [v108 mainBundle];
    sub_1001631D8();
    uint64_t v69 = sub_10019D5A8();
LABEL_10:
    sub_10017FF10(v69, v70, v71, v72, v73, v74, v75, v76);

    uint64_t v87 = (__n128 *)sub_100182E98();
    sub_10019B4F4(v87);
    unint64_t v88 = v109;
    v89[7] = &type metadata for String;
    v89[8] = v88;
    v89[4] = v62;
    v89[5] = v64;
    uint64_t v90 = static String.localizedStringWithFormat(_:_:)();
    uint64_t v92 = v91;
    sub_100166BF0();
    goto LABEL_13;
  }
  Measurement.value.getter();
  double v78 = v77;
  id v68 = [v108 mainBundle:v102];
  if (v78 >= 0.0)
  {
    uint64_t v69 = sub_1001A2148();
    goto LABEL_10;
  }
  unint64_t v132 = v64;
  sub_100166BF0();
  if (v126)
  {
    sub_1001631D8();
    uint64_t v79 = sub_10019D5A8();
  }
  else
  {
    uint64_t v79 = sub_1001A2148();
  }
  sub_10017FF10(v79, v80, v81, v82, v83, v84, v85, v86);

  uint64_t v93 = (__n128 *)sub_100182E98();
  sub_10019B4F4(v93);
  unint64_t v94 = v109;
  v95[7] = &type metadata for String;
  v95[8] = v94;
  uint64_t v96 = v132;
  v95[4] = v62;
  v95[5] = v96;
  uint64_t v90 = static String.localizedStringWithFormat(_:_:)();
  uint64_t v92 = v97;
LABEL_13:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v98 = *(void (**)(void))(v8 + 8);
  sub_10017CA60();
  v98();
  sub_10017CA60();
  v98();
  sub_10017CA60();
  uint64_t result = ((uint64_t (*)(void))v98)();
  *uint64_t v64 = v90;
  v64[1] = v92;
  v64[2] = 0;
  v64[3] = 0;
  uint64_t v100 = v123;
  v64[4] = countAndFlagsBits;
  v64[5] = v100;
  return result;
}

uint64_t sub_100571C94@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, int a3@<W3>, uint64_t *a4@<X8>)
{
  int v132 = a3;
  unint64_t v136 = (char *)a1;
  uint64_t v118 = a4;
  uint64_t v5 = sub_10017DF08(&qword_100E79020);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_100162EF8();
  uint64_t v117 = v7;
  sub_1001626D4();
  __chkstk_darwin(v8);
  sub_100128F8C();
  sub_100109328(v9);
  uint64_t v116 = type metadata accessor for AttributedString();
  sub_100179C0C();
  uint64_t v114 = v10;
  __chkstk_darwin(v11);
  sub_100162EF8();
  uint64_t v113 = v12;
  sub_1001626D4();
  __chkstk_darwin(v13);
  sub_100128F8C();
  uint64_t v112 = v14;
  uint64_t v131 = type metadata accessor for WeatherFormatPlaceholder();
  sub_100179C0C();
  uint64_t v139 = v15;
  __chkstk_darwin(v16);
  sub_100109314();
  uint64_t v110 = v17;
  uint64_t v18 = sub_10017DF08(&qword_100E63730);
  uint64_t v19 = sub_100109308(v18);
  __chkstk_darwin(v19);
  sub_100109314();
  sub_100109328(v20);
  type metadata accessor for NumberFormatStyleConfiguration.SignDisplayStrategy();
  sub_100179C0C();
  uint64_t v125 = v22;
  uint64_t v126 = v21;
  __chkstk_darwin(v21);
  sub_100109314();
  uint64_t v124 = v23;
  uint64_t v109 = type metadata accessor for NSUnitLength.BaseWeatherFormatStyle();
  sub_100179C0C();
  uint64_t v135 = v24;
  __chkstk_darwin(v25);
  sub_100162EF8();
  uint64_t v111 = v26;
  sub_1001626D4();
  __chkstk_darwin(v27);
  sub_100128F8C();
  sub_100109328(v28);
  uint64_t v29 = type metadata accessor for WeatherFormatScaling();
  sub_100179C0C();
  uint64_t v31 = v30;
  __chkstk_darwin(v32);
  sub_100162EF8();
  uint64_t v122 = v33;
  sub_1001626D4();
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)&v141._object - v35;
  sub_10017DF08(&qword_100E6B648);
  sub_100179C0C();
  uint64_t v137 = v38;
  uint64_t v138 = v37;
  __chkstk_darwin(v37);
  sub_100162EF8();
  uint64_t v127 = v39;
  sub_1001626D4();
  __chkstk_darwin(v40);
  uint64_t v140 = (uint64_t)&v141._object - v41;
  sub_1001626D4();
  __chkstk_darwin(v42);
  uint64_t v44 = (char *)&v141._object - v43;
  int v45 = enum case for WeatherFormatScaling.automatic(_:);
  uint64_t v46 = *(void (**)(void))(v31 + 104);
  sub_100188A44();
  v46();
  Measurement<>.converted(usage:scaling:)();
  uint64_t v47 = *(void (**)(char *, uint64_t))(v31 + 8);
  v47(v36, v29);
  int v130 = v45;
  sub_100188A44();
  v46();
  uint64_t v48 = a2;
  uint64_t v49 = v122;
  uint64_t v133 = v48;
  Measurement<>.converted(usage:scaling:)();
  uint64_t v104 = v36;
  uint64_t v50 = v31 + 8;
  int v134 = v47;
  v47(v36, v29);
  sub_1001ABC4C(0, (unint64_t *)&qword_100E6B678);
  unint64_t v136 = v44;
  static Measurement<>.- infix(_:_:)();
  uint64_t v128 = v46;
  uint64_t v129 = v31 + 104;
  ((void (*)(uint64_t, void, uint64_t))v46)(v49, enum case for WeatherFormatScaling.asProvided(_:), v29);
  if (v132) {
    static NumberFormatStyleConfiguration.SignDisplayStrategy.automatic.getter();
  }
  else {
    static NumberFormatStyleConfiguration.SignDisplayStrategy.always(includingZero:)();
  }
  uint64_t v119 = type metadata accessor for Locale();
  uint64_t v51 = v108;
  _s7Weather24LocationCompositionStateOwst_0(v108, 1, 1, v119);
  static Set<>.full.getter();
  static WeatherFormatStyle<>.weather(_:usage:scaling:trimLeadingZeroes:sign:locale:)();
  swift_bridgeObjectRelease();
  sub_10012B8A0(v51);
  sub_100162F0C();
  v52();
  uint64_t v103 = v29;
  uint64_t v123 = v50;
  sub_1001629EC();
  v53();
  LODWORD(v126) = enum case for WeatherFormatPlaceholder.none(_:);
  uint64_t v54 = v139;
  uint64_t v55 = *(void *)(v139 + 104);
  uint64_t v124 = v139 + 104;
  uint64_t v125 = v55;
  sub_1001631E8();
  v56();
  uint64_t v122 = type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  uint64_t v121 = sub_100573BD0((unint64_t *)&qword_100E6B658, (void (*)(uint64_t))&type metadata accessor for NSUnitLength.BaseWeatherFormatStyle);
  uint64_t v57 = v109;
  uint64_t v105 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v106 = v58;
  swift_release();
  uint64_t v102 = *(void (**)(void))(v54 + 8);
  uint64_t v139 = v54 + 8;
  sub_100183838();
  v59();
  uint64_t v60 = *(void (**)(uint64_t, uint64_t))(v135 + 8);
  v135 += 8;
  uint64_t v120 = v60;
  sub_100162F0C();
  v61();
  uint64_t v62 = *(void (**)(void))(v137 + 8);
  v137 += 8;
  uint64_t v127 = v62;
  sub_100127BA4();
  v63();
  sub_10018715C();
  sub_1001631E8();
  v64();
  uint64_t v65 = v111;
  sub_100185394();
  swift_bridgeObjectRelease();
  sub_100162F0C();
  v66();
  sub_10012B8A0(v51);
  sub_1001631E8();
  v67();
  static UnitManager.standard.getter();
  uint64_t v101 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v107 = v68;
  swift_release();
  uint64_t v69 = v102;
  sub_100127BA4();
  v69();
  v120(v65, v57);
  sub_10018715C();
  sub_1001631E8();
  v70();
  sub_100185394();
  swift_bridgeObjectRelease();
  sub_100162F0C();
  v71();
  sub_10012B8A0(v51);
  sub_1001631E8();
  v72();
  static UnitManager.standard.getter();
  uint64_t v73 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v75 = v74;
  swift_release();
  uint64_t v76 = v101;
  sub_100127BA4();
  v69();
  uint64_t v77 = v107;
  v120(v65, v57);
  char v78 = 1;
  if (v76 != v73 || v77 != v75) {
    char v78 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  uint64_t v139 = sub_100570C50((uint64_t)v136, v140, v105, v106, v78 & 1, v132 & 1);
  uint64_t v135 = v80;
  swift_bridgeObjectRelease();
  uint64_t v133 = sub_100571190(v76, v77);
  int v134 = v81;
  swift_bridgeObjectRelease();
  id v82 = [self mainBundle];
  sub_1001631D8();
  sub_100164FD4();
  sub_100189170();
  v83._uint64_t countAndFlagsBits = 0xD000000000000016;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v84, v85, (NSBundle)v82, v83, v141);

  sub_10017DF08(&qword_100E64020);
  uint64_t v86 = swift_allocObject();
  *(_OWORD *)(v86 + 16) = xmmword_100C25ED0;
  *(void *)(v86 + 56) = &type metadata for Int;
  *(void *)(v86 + 64) = &protocol witness table for Int;
  *(void *)(v86 + 32) = 30;
  *(void *)(v86 + 96) = &type metadata for String;
  *(void *)(v86 + 104) = sub_10012B7C0();
  *(void *)(v86 + 72) = v73;
  *(void *)(v86 + 80) = v75;
  static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v87 = v112;
  AttributedString.init(markdown:fallback:)();
  uint64_t v88 = v115;
  uint64_t v89 = v116;
  _s7Weather24LocationCompositionStateOwst_0(v115, 1, 1, v116);
  swift_bridgeObjectRetain();
  uint64_t v90 = v113;
  AttributedString.init(markdown:fallback:)();
  swift_bridgeObjectRetain();
  uint64_t v91 = v117;
  AttributedString.init(markdown:fallback:)();
  uint64_t v92 = v127;
  sub_1001629EC();
  v92();
  sub_1001629EC();
  v92();
  sub_1001093B0();
  _s7Weather24LocationCompositionStateOwst_0(v93, v94, v95, v89);
  uint64_t v96 = v118;
  uint64_t v97 = v135;
  *uint64_t v118 = v139;
  v96[1] = v97;
  unint64_t v98 = (int *)type metadata accessor for AveragesComparisonStrings();
  uint64_t v99 = *(void (**)(char *, uint64_t, uint64_t))(v114 + 32);
  v99((char *)v96 + v98[5], v87, v89);
  sub_100573B68(v88, (uint64_t)v96 + v98[6]);
  v99((char *)v96 + v98[7], v90, v89);
  return sub_100573B68(v91, (uint64_t)v96 + v98[8]);
}

uint64_t sub_10057278C@<X0>(uint64_t a1@<X3>, uint64_t *a2@<X8>)
{
  type metadata accessor for Locale.Language();
  sub_100179C0C();
  __chkstk_darwin(v2);
  sub_100109314();
  uint64_t v3 = type metadata accessor for WeatherFormatPlaceholder();
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  uint64_t v10 = sub_10017DF08(&qword_100E63730);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle();
  sub_100179C0C();
  uint64_t v71 = v15;
  __chkstk_darwin(v16);
  sub_10017FDD0();
  uint64_t v17 = type metadata accessor for Locale();
  sub_100162E4C();
  uint64_t v68 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16);
  sub_100162808();
  v19();
  sub_100183C10();
  static Set<>.full.getter();
  static WeatherFormatStyle<>.weather(_:locale:)();
  swift_bridgeObjectRelease();
  sub_10012B8A0(v14);
  unsigned int v70 = enum case for WeatherFormatPlaceholder.none(_:);
  uint64_t v69 = *(void (**)(uint64_t))(v5 + 104);
  v69(v9);
  type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  sub_10017DF08(&qword_100E65250);
  sub_100573BD0((unint64_t *)&qword_100E6BF60, (void (*)(uint64_t))&type metadata accessor for NSUnitTemperature.BaseWeatherFormatStyle);
  uint64_t v20 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v64 = v21;
  uint64_t v65 = v20;
  swift_release();
  double v67 = *(void (**)(void))(v5 + 8);
  sub_100183838();
  v22();
  uint64_t v23 = *(void (**)(void))(v71 + 8);
  sub_100127BA4();
  v23();
  v68(v14, a1, v17);
  sub_1001093B0();
  _s7Weather24LocationCompositionStateOwst_0(v24, v25, v26, v17);
  static Set<>.full.getter();
  static WeatherFormatStyle<>.weather(_:locale:)();
  swift_bridgeObjectRelease();
  sub_10012B8A0(v14);
  ((void (*)(uint64_t, void, uint64_t))v69)(v9, v70, v3);
  static UnitManager.standard.getter();
  uint64_t v27 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v62 = v28;
  uint64_t v63 = v27;
  swift_release();
  sub_100127BA4();
  v29();
  sub_100127BA4();
  v23();
  Locale.language.getter();
  char v30 = Locale.Language.prefersFullTemperatureScale.getter();
  sub_100162F0C();
  v31();
  if (v30)
  {
    static Set<>.value.getter();
    sub_100162808();
    v32();
    sub_100183C10();
    static WeatherFormatStyle<>.weather(_:locale:)();
    swift_bridgeObjectRelease();
    sub_10012B8A0(v14);
    sub_1001649D0();
    v33();
    static UnitManager.standard.getter();
    uint64_t v60 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    uint64_t v61 = v34;
    swift_release();
    sub_100182454();
    sub_100127BA4();
    v67();
    sub_100127BA4();
    v23();
    static Set<>.unit.getter();
    sub_100162808();
    v35();
    sub_100183C10();
    static WeatherFormatStyle<>.weather(_:locale:)();
    swift_bridgeObjectRelease();
    sub_10012B8A0(v14);
    sub_1001649D0();
    v36();
    static UnitManager.standard.getter();
    uint64_t v37 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    uint64_t v39 = v38;
    uint64_t v40 = v60;
    swift_release();
    sub_100182454();
    sub_100127BA4();
    v67();
    sub_100127BA4();
    v23();
  }
  else
  {
    v68(v14, a1, v17);
    sub_1001093B0();
    _s7Weather24LocationCompositionStateOwst_0(v41, v42, v43, v17);
    static Set<>.full.getter();
    static WeatherFormatStyle<>.weather(_:locale:)();
    swift_bridgeObjectRelease();
    sub_10012B8A0(v14);
    sub_1001649D0();
    v44();
    static UnitManager.standard.getter();
    uint64_t v40 = Measurement.formatted<A>(_:placeholder:unitManager:)();
    uint64_t v61 = v45;
    swift_release();
    sub_100127BA4();
    v46();
    sub_100127BA4();
    v47();
    uint64_t v37 = 0;
    uint64_t v39 = 0;
  }
  id v48 = [self mainBundle];
  sub_1001631D8();
  sub_100164FD4();
  v49._uint64_t countAndFlagsBits = 0xD000000000000016;
  v50._uint64_t countAndFlagsBits = 0;
  v50._object = (void *)0xE000000000000000;
  uint64_t v51 = 0x10000000000000A0;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v49, (Swift::String_optional)0, (NSBundle)v48, v50, *(Swift::String *)(&v58 - 1));

  sub_10017DF08(&qword_100E64020);
  uint64_t v52 = swift_allocObject();
  *(_OWORD *)(v52 + 16) = xmmword_100C25ED0;
  *(void *)(v52 + 56) = &type metadata for String;
  unint64_t v53 = sub_10012B7C0();
  *(void *)(v52 + 32) = v63;
  *(void *)(v52 + 40) = v62;
  *(void *)(v52 + 96) = &type metadata for String;
  *(void *)(v52 + 104) = v53;
  *(void *)(v52 + 64) = v53;
  *(void *)(v52 + 72) = v65;
  *(void *)(v52 + 80) = v64;
  uint64_t v54 = static String.localizedStringWithFormat(_:_:)();
  uint64_t v56 = v55;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v40;
  a2[1] = v61;
  a2[2] = v37;
  a2[3] = v39;
  a2[4] = v54;
  a2[5] = v56;
  return result;
}

uint64_t sub_100572F50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t *a5@<X8>)
{
  int v141 = a4;
  uint64_t v142 = a3;
  uint64_t v144 = a1;
  uint64_t v111 = a5;
  uint64_t v143 = type metadata accessor for WeatherFormatPlaceholder();
  sub_100179C0C();
  object = v6;
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v128 = v8;
  uint64_t v9 = sub_10017DF08(&qword_100E63730);
  uint64_t v10 = sub_100109308(v9);
  __chkstk_darwin(v10);
  sub_100109314();
  uint64_t v138 = v11;
  type metadata accessor for NumberFormatStyleConfiguration.SignDisplayStrategy();
  sub_100179C0C();
  uint64_t v130 = v13;
  uint64_t v131 = v12;
  __chkstk_darwin(v12);
  sub_1001626E0();
  uint64_t v14 = type metadata accessor for WeatherFormatScaling();
  sub_100179C0C();
  uint64_t v16 = v15;
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v137 = v18;
  sub_1001626D4();
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v149._object - v20;
  uint64_t v22 = type metadata accessor for NSUnitLength.WeatherFormatUsage();
  sub_100179C0C();
  uint64_t v24 = v23;
  __chkstk_darwin(v25);
  sub_100162EF8();
  uint64_t v132 = v26;
  sub_1001626D4();
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v149._object - v28;
  type metadata accessor for NSUnitLength.BaseWeatherFormatStyle();
  sub_100179C0C();
  uint64_t v135 = v31;
  uint64_t v136 = v30;
  __chkstk_darwin(v30);
  sub_100162EF8();
  uint64_t v133 = v32;
  sub_1001626D4();
  __chkstk_darwin(v33);
  sub_100128F8C();
  uint64_t v129 = v34;
  uint64_t v35 = sub_10017DF08(&qword_100E6B648);
  sub_100179C0C();
  uint64_t v140 = v36;
  __chkstk_darwin(v37);
  sub_100162EF8();
  uint64_t v107 = v38;
  sub_1001626D4();
  __chkstk_darwin(v39);
  uint64_t v108 = (uint64_t *)((char *)&v149._object - v40);
  sub_1001626D4();
  __chkstk_darwin(v41);
  uint64_t v43 = (char *)&v149._object - v42;
  uint64_t v44 = (void *)sub_1001ABC4C(0, (unint64_t *)&qword_100E6B678);
  uint64_t v145 = v43;
  uint64_t v139 = a2;
  v149._object = v44;
  static Measurement<>.- infix(_:_:)();
  uint64_t v147 = v24;
  uint64_t v45 = *(void (**)(void))(v24 + 104);
  int v127 = enum case for NSUnitLength.WeatherFormatUsage.rainfall(_:);
  uint64_t v134 = v22;
  uint64_t v125 = v45;
  v45(v29);
  LODWORD(v22) = enum case for WeatherFormatScaling.asProvidedButRounded(_:);
  uint64_t v46 = v16;
  uint64_t v122 = *(void (**)(char *, void, uint64_t))(v16 + 104);
  v122(v21, enum case for WeatherFormatScaling.asProvidedButRounded(_:), v14);
  uint64_t v146 = v35;
  uint64_t v126 = v24 + 104;
  int v124 = v22;
  uint64_t v123 = v16 + 104;
  if (v141) {
    static NumberFormatStyleConfiguration.SignDisplayStrategy.automatic.getter();
  }
  else {
    static NumberFormatStyleConfiguration.SignDisplayStrategy.always(includingZero:)();
  }
  uint64_t v47 = type metadata accessor for Locale();
  sub_100162E4C();
  uint64_t v120 = *(void *)(v48 + 16);
  uint64_t v121 = v48 + 16;
  uint64_t v49 = v138;
  sub_100162808();
  v50();
  _s7Weather24LocationCompositionStateOwst_0(v49, 0, 1, v47);
  static Set<>.full.getter();
  static WeatherFormatStyle<>.weather(_:usage:scaling:trimLeadingZeroes:sign:locale:)();
  swift_bridgeObjectRelease();
  sub_10012B8A0(v49);
  sub_100162F0C();
  v51();
  uint64_t v52 = *(void (**)(void, void))(v46 + 8);
  uint64_t v130 = v46 + 8;
  uint64_t v131 = v52;
  uint64_t v112 = v14;
  v52(v21, v14);
  uint64_t v53 = *(void *)(v147 + 8);
  v147 += 8;
  uint64_t v119 = v53;
  sub_100162F0C();
  v54();
  int v118 = enum case for WeatherFormatPlaceholder.none(_:);
  uint64_t v55 = object;
  uint64_t v56 = object[13];
  uint64_t v116 = (char *)(object + 13);
  uint64_t v117 = v56;
  sub_1001631E8();
  v57();
  uint64_t v115 = type metadata accessor for UnitManager();
  static UnitManager.standard.getter();
  uint64_t v114 = sub_100573BD0((unint64_t *)&qword_100E6B658, (void (*)(uint64_t))&type metadata accessor for NSUnitLength.BaseWeatherFormatStyle);
  uint64_t v110 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v109 = v58;
  swift_release();
  uint64_t v59 = v55[1];
  object = v55 + 1;
  uint64_t v113 = v59;
  sub_100183838();
  v60();
  uint64_t v135 = *(void *)(v135 + 8);
  sub_100183838();
  v61();
  sub_1001649D0();
  v62();
  sub_1001649D0();
  v63();
  sub_100162808();
  v64();
  _s7Weather24LocationCompositionStateOwst_0(v49, 0, 1, v47);
  static Set<>.full.getter();
  static WeatherFormatStyle<>.weather(_:usage:scaling:trimLeadingZeroes:locale:)();
  swift_bridgeObjectRelease();
  sub_10012B8A0(v49);
  sub_100162F0C();
  v65();
  sub_100182454();
  sub_100162F0C();
  v66();
  sub_1001631E8();
  v67();
  uint64_t v68 = v146;
  static UnitManager.standard.getter();
  uint64_t v69 = v139;
  uint64_t v147 = Measurement.formatted<A>(_:placeholder:unitManager:)();
  uint64_t v71 = v70;
  swift_release();
  sub_100162F0C();
  v72();
  sub_100183838();
  v73();
  sub_100573ACC();
  uint64_t v74 = v144;
  if ((dispatch thunk of static Comparable.< infix(_:_:)() & 1) == 0)
  {
    uint64_t v87 = v140;
    uint64_t v88 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v140 + 16);
    Swift::String v84 = v108;
    v88(v108, v74, v68);
    uint64_t v89 = v107;
    v88(v107, v69, v68);
    if (v141)
    {
      char v90 = static Measurement.< infix<A, B>(_:_:)();
      Swift::String v83 = *(void (**)(void))(v87 + 8);
      sub_1001629EC();
      v83();
      sub_1001629EC();
      v83();
      sub_100185AEC();
      if (v90)
      {
        Swift::String v91 = String.trimmingHyphensAndMinusSigns()();
        uint64_t countAndFlagsBits = v91._countAndFlagsBits;
        object = v91._object;
        swift_bridgeObjectRelease();
        id v92 = [self mainBundle];
        sub_1001631D8();
        sub_100164FD4();
        sub_100189170();
        v93._uint64_t countAndFlagsBits = 0xD000000000000010;
        NSLocalizedString(_:tableName:bundle:value:comment:)(v94, v95, (NSBundle)v92, v93, v150);

        sub_10017DF08(&qword_100E64020);
        uint64_t v96 = sub_100182E98();
        *(_OWORD *)(v96 + 16) = xmmword_100C251B0;
        *(void *)(v96 + 56) = &type metadata for String;
        unint64_t v97 = sub_10012B7C0();
        uint64_t v80 = sub_1001A4678(v97);
        uint64_t v82 = v98;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v86 = object;
        goto LABEL_11;
      }
    }
    else
    {
      Swift::String v83 = *(void (**)(void))(v87 + 8);
      ((void (*)(uint64_t *, uint64_t))v83)(v89, v68);
      ((void (*)(uint64_t *, uint64_t))v83)(v84, v68);
      sub_100185AEC();
    }
    Swift::String v99 = String.replacingHyphensWithMinusSigns()();
    uint64_t countAndFlagsBits = v99._countAndFlagsBits;
    uint64_t v86 = v99._object;
    swift_bridgeObjectRelease();
    id v100 = [self mainBundle];
    sub_1001631D8();
    sub_100164FD4();
    v101._uint64_t countAndFlagsBits = 0x204025206D6F7266;
    v101._object = (void *)0xEF65676172657661;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v102, (Swift::String_optional)0, (NSBundle)v100, v101, v151);

    sub_10017DF08(&qword_100E64020);
    uint64_t v103 = sub_100182E98();
    *(_OWORD *)(v103 + 16) = xmmword_100C251B0;
    *(void *)(v103 + 56) = &type metadata for String;
    unint64_t v104 = sub_10012B7C0();
    uint64_t v80 = sub_1001A4678(v104);
    uint64_t v82 = v105;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  id v75 = [self mainBundle];
  sub_1001631D8();
  sub_100164FD4();
  sub_100189170();
  v76._uint64_t countAndFlagsBits = 0xD000000000000010;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v77, v78, (NSBundle)v75, v76, v149);

  sub_10017DF08(&qword_100E64020);
  uint64_t v79 = sub_100182E98();
  *(_OWORD *)(v79 + 16) = xmmword_100C251B0;
  *(void *)(v79 + 56) = &type metadata for String;
  *(void *)(v79 + 64) = sub_10012B7C0();
  *(void *)(v79 + 32) = v147;
  *(void *)(v79 + 40) = v71;
  uint64_t v80 = static String.localizedStringWithFormat(_:_:)();
  uint64_t v82 = v81;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  Swift::String v83 = *(void (**)(void))(v140 + 8);
  Swift::String v84 = v111;
  uint64_t countAndFlagsBits = v110;
  uint64_t v86 = v109;
LABEL_11:
  sub_100127BA4();
  uint64_t result = ((uint64_t (*)(void))v83)();
  uint64_t *v84 = countAndFlagsBits;
  v84[1] = (uint64_t)v86;
  v84[2] = 0;
  v84[3] = 0;
  v84[4] = v80;
  v84[5] = v82;
  return result;
}

unint64_t sub_100573ACC()
{
  unint64_t result = qword_100E7FD88;
  if (!qword_100E7FD88)
  {
    sub_10018C6DC(&qword_100E6B648);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7FD88);
  }
  return result;
}

uint64_t type metadata accessor for AveragesComparisonStrings()
{
  uint64_t result = qword_100E7FDE8;
  if (!qword_100E7FDE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100573B68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E79020);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100573BD0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_100573C18(char *a1, char *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *(void *)a2;
    *(void *)uint64_t v4 = *(void *)a2;
    uint64_t v4 = (char *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = type metadata accessor for AttributedString();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = &v4[v13];
    uint64_t v15 = &a2[v13];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v13], 1, v11))
    {
      uint64_t v16 = sub_10017DF08(&qword_100E79020);
      memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      v12(v14, v15, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v11);
    }
    v12(&v4[a3[7]], &a2[a3[7]], v11);
    uint64_t v18 = a3[8];
    uint64_t v19 = &v4[v18];
    uint64_t v20 = &a2[v18];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v11))
    {
      uint64_t v21 = sub_10017DF08(&qword_100E79020);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      v12(v19, v20, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v11);
    }
  }
  return v4;
}

uint64_t sub_100573E24(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for AttributedString();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v9(v4, v5);
  uint64_t v6 = a1 + a2[6];
  if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, v5)) {
    v9(v6, v5);
  }
  v9(a1 + a2[7], v5);
  uint64_t v7 = a1 + a2[8];
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v7, 1, v5);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(v7, v5);
  }
  return result;
}

char *sub_100573F4C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for AttributedString();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v12], 1, v10))
  {
    uint64_t v15 = sub_10017DF08(&qword_100E79020);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v10);
  }
  v11(&a1[a3[7]], &a2[a3[7]], v10);
  uint64_t v16 = a3[8];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v10))
  {
    uint64_t v19 = sub_10017DF08(&qword_100E79020);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    v11(v17, v18, v10);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v10);
  }
  return a1;
}

char *sub_100574108(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for AttributedString();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  int v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&a1[v12], 1, v9);
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v9);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v14, v9);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
LABEL_6:
    uint64_t v17 = sub_10017DF08(&qword_100E79020);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  v11(v13, v14, v9);
LABEL_7:
  v11(&a1[a3[7]], &a2[a3[7]], v9);
  uint64_t v18 = a3[8];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  int v21 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&a1[v18], 1, v9);
  int v22 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v20, 1, v9);
  if (!v21)
  {
    if (!v22)
    {
      v11(v19, v20, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v19, v9);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v23 = sub_10017DF08(&qword_100E79020);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v19, v20, v9);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v19, 0, 1, v9);
  return a1;
}

char *sub_10057439C(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for AttributedString();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[6];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v11], 1, v9))
  {
    uint64_t v14 = sub_10017DF08(&qword_100E79020);
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v9);
  }
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  uint64_t v15 = a3[8];
  int v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v9))
  {
    uint64_t v18 = sub_10017DF08(&qword_100E79020);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    v10(v16, v17, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v9);
  }
  return a1;
}

char *sub_100574548(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for AttributedString();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&a1[v13], 1, v10);
  int v17 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v10);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v15, v10);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
LABEL_6:
    uint64_t v18 = sub_10017DF08(&qword_100E79020);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v12(v14, v15, v10);
LABEL_7:
  v12(&a1[a3[7]], &a2[a3[7]], v10);
  uint64_t v19 = a3[8];
  uint64_t v20 = &a1[v19];
  int v21 = &a2[v19];
  int v22 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&a1[v19], 1, v10);
  int v23 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v10);
  if (!v22)
  {
    if (!v23)
    {
      v12(v20, v21, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v20, v10);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    uint64_t v24 = sub_10017DF08(&qword_100E79020);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v20, v21, v10);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v10);
  return a1;
}

uint64_t sub_1005747CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005747E0);
}

uint64_t sub_1005747E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    type metadata accessor for AttributedString();
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a3 + 20);
    }
    else
    {
      uint64_t v10 = sub_10017DF08(&qword_100E79020);
      uint64_t v11 = *(int *)(a3 + 24);
    }
    return _s7Weather24LocationCompositionStateOwet_0(a1 + v11, a2, v10);
  }
}

uint64_t sub_100574890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005748A4);
}

uint64_t sub_1005748A4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    type metadata accessor for AttributedString();
    sub_100162F30();
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = *(int *)(a4 + 20);
    }
    else
    {
      uint64_t v10 = sub_10017DF08(&qword_100E79020);
      uint64_t v11 = *(int *)(a4 + 24);
    }
    return _s7Weather24LocationCompositionStateOwst_0(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_100574950()
{
  type metadata accessor for AttributedString();
  if (v0 <= 0x3F)
  {
    sub_1004C8D88();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

ValueMetadata *type metadata accessor for AveragesStringBuilder()
{
  return &type metadata for AveragesStringBuilder;
}

unint64_t sub_100574A38(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_100195B7C(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(unsigned char *)(a1 + 8) = v8;
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (void *)(a2 + v9);
    sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
    }
    else
    {
      *uint64_t v10 = *v11;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100574B78(uint64_t a1, uint64_t a2)
{
  sub_10018F6D8(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for ColorSchemeContrast();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_100574C34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (void *)(a2 + v8);
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  else
  {
    *uint64_t v9 = *v10;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_100574D1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_100195B7C(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10018F6D8(v8, v9);
  if (a1 != a2)
  {
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (void *)(a2 + v10);
    sub_1001781AC(a1 + v10, &qword_100E66E50);
    sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      void *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100574E28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = type metadata accessor for ColorSchemeContrast();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(v5, v6, v8);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100574F04(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_10018F6D8(v8, v9);
  if ((uint64_t *)a1 != a2)
  {
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (void *)(a1 + v10);
    uint64_t v12 = (char *)a2 + v10;
    sub_1001781AC(a1 + v10, &qword_100E66E50);
    uint64_t v13 = sub_10017DF08(&qword_100E66E50);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for ColorSchemeContrast();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v14 - 8) + 32))(v11, v12, v14);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_10057500C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100575020);
}

uint64_t sub_100575020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_10017DF08(&qword_100E6D908);
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_1005750A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005750B8);
}

uint64_t sub_1005750B8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = -(char)a2;
  }
  else
  {
    uint64_t v7 = sub_10017DF08(&qword_100E6D908);
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for PressureComponentGaugeView()
{
  uint64_t result = qword_100E7FE88;
  if (!qword_100E7FE88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100575180()
{
  sub_10000F5F8();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_100575218()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100575234@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v68 = a1;
  type metadata accessor for BlendMode();
  sub_100179C0C();
  uint64_t v66 = v4;
  uint64_t v67 = v3;
  __chkstk_darwin(v3);
  sub_100109314();
  uint64_t v65 = v5;
  uint64_t v60 = type metadata accessor for ColorSchemeContrast();
  sub_100179C0C();
  uint64_t v58 = v6;
  __chkstk_darwin(v7);
  uint64_t v57 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v56 = (char *)&v54 - v10;
  uint64_t v62 = sub_10017DF08(&qword_100E7FEC0);
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_100109314();
  uint64_t v63 = v12;
  uint64_t v61 = sub_10017DF08(&qword_100E7FEC8);
  sub_100162E4C();
  __chkstk_darwin(v13);
  sub_100109314();
  uint64_t v64 = v14;
  uint64_t v59 = type metadata accessor for ColorRenderingMode();
  sub_100179C0C();
  uint64_t v55 = v15;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for PressureComponentGaugeView();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void *)(v20 + 64);
  __chkstk_darwin(v19);
  uint64_t v22 = sub_10017DF08(&qword_100E7FED0);
  sub_100179C0C();
  uint64_t v24 = v23;
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v54 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v54 - v29;
  sub_100575BC0(v2, (uint64_t)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v31 = (*(unsigned __int8 *)(v20 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v32 = swift_allocObject();
  sub_100575D38((uint64_t)&v54 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), v32 + v31);
  (*((void (**)(char *, void, uint64_t))v55 + 13))(v18, enum case for ColorRenderingMode.nonLinear(_:), v59);
  Canvas<>.init(opaque:colorMode:rendersAsynchronously:renderer:)();
  Canvas.rendersAsynchronously.setter();
  Canvas.rendersFirstFrameAsynchronously.setter();
  uint64_t v59 = v24;
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v24 + 16);
  uint64_t v55 = v27;
  uint64_t v34 = v27;
  uint64_t v35 = v30;
  v33(v34, v30, v22);
  uint64_t v36 = v56;
  sub_10014BB38();
  uint64_t v37 = v57;
  uint64_t v38 = v58;
  uint64_t v39 = v60;
  (*(void (**)(char *, void, uint64_t))(v58 + 104))(v57, enum case for ColorSchemeContrast.increased(_:), v60);
  uint64_t v40 = v37;
  LOBYTE(v37) = static ColorSchemeContrast.== infix(_:_:)();
  uint64_t v41 = *(void (**)(char *, uint64_t))(v38 + 8);
  v41(v40, v39);
  v41(v36, v39);
  if (v37) {
    int v42 = static HierarchicalShapeStyle.primary.getter();
  }
  else {
    int v42 = static HierarchicalShapeStyle.tertiary.getter();
  }
  int v43 = v42;
  uint64_t v44 = v63;
  uint64_t v45 = v55;
  v33((char *)v63, v55, v22);
  *(_DWORD *)(v44 + *(int *)(v62 + 36)) = v43;
  uint64_t v46 = *(void (**)(char *, uint64_t))(v59 + 8);
  v46(v45, v22);
  uint64_t v48 = v65;
  uint64_t v47 = v66;
  uint64_t v49 = v67;
  (*(void (**)(uint64_t, void, uint64_t))(v66 + 104))(v65, enum case for BlendMode.plusLighter(_:), v67);
  uint64_t v50 = v64;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 16))(v64 + *(int *)(v61 + 36), v48, v49);
  sub_1001262FC(v44, v50, &qword_100E7FEC0);
  (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v48, v49);
  sub_1001781AC(v44, &qword_100E7FEC0);
  uint64_t v51 = v68;
  sub_1001262FC(v50, v68, &qword_100E7FEC8);
  uint64_t v52 = v51 + *(int *)(sub_10017DF08(&qword_100E7FED8) + 36);
  *(void *)uint64_t v52 = 0x3FF0000000000000;
  *(_WORD *)(v52 + 8) = 0;
  sub_1001781AC(v50, &qword_100E7FEC8);
  return ((uint64_t (*)(char *, uint64_t))v46)(v35, v22);
}

uint64_t sub_1005757A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for GraphicsContext.Shading();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for EnvironmentValues();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v27 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  GraphicsContext.translateBy(x:y:)();
  uint64_t v10 = 0;
  uint64_t v26 = (void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v11 = (void (**)(char *, uint64_t))(v4 + 8);
  *(void *)&long long v12 = 136315138;
  long long v23 = v12;
  v22[1] = (char *)&type metadata for Any + 8;
  uint64_t v24 = v7;
  uint64_t v25 = v11;
  do
  {
    double v13 = (double)v10 * 360.0 / 60.0;
    if (v13 <= 130.0 || v13 > 230.0)
    {
      uint64_t v14 = *(void *)a2;
      if (*(unsigned char *)(a2 + 8) != 1)
      {
        sub_100195B7C(*(void *)a2, 0);
        swift_retain();
        os_log_type_t v15 = static os_log_type_t.fault.getter();
        uint64_t v16 = static Log.runtimeIssuesLog.getter();
        if (os_log_type_enabled(v16, v15))
        {
          uint64_t v17 = a2;
          uint64_t v18 = v3;
          uint64_t v19 = swift_slowAlloc();
          v28[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v19 = v23;
          *(void *)(v19 + 4) = sub_10016414C(1819242306, 0xE400000000000000, v28);
          _os_log_impl((void *)&_mh_execute_header, v16, v15, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", (uint8_t *)v19, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v3 = v18;
          a2 = v17;
          uint64_t v7 = v24;
          swift_slowDealloc();
        }

        uint64_t v20 = v27;
        EnvironmentValues.init()();
        swift_getAtKeyPath();
        sub_10018F6D8(v14, 0);
        (*v26)(v20, v7);
        sub_10018F6D8(v14, 0);
        uint64_t v11 = v25;
      }
      Path.init(_:)();
      swift_beginAccess();
      sub_100724940();
      swift_endAccess();
      static GraphicsContext.Shading.color(_:)();
      swift_release();
      GraphicsContext.fill(_:with:style:)();
      sub_10020C4D4((uint64_t)v29);
      (*v11)(v6, v3);
    }
    ++v10;
    uint64_t result = GraphicsContext.rotate(by:)();
  }
  while (v10 != 60);
  return result;
}

uint64_t sub_100575BC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PressureComponentGaugeView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100575C24()
{
  uint64_t v1 = (int *)(type metadata accessor for PressureComponentGaugeView() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  sub_10018F6D8(*(void *)(v0 + v2), *(unsigned char *)(v0 + v2 + 8));
  unint64_t v3 = v0 + v2 + v1[7];
  sub_10017DF08(&qword_100E66E50);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for ColorSchemeContrast();
    sub_100162E4C();
    (*(void (**)(unint64_t))(v4 + 8))(v3);
  }
  else
  {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_100575D38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PressureComponentGaugeView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100575D9C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for PressureComponentGaugeView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1005757A4(a1, v4);
}

uint64_t sub_100575E24()
{
  return sub_100575E98(&qword_100E7FEE0, &qword_100E7FED8, (void (*)(void))sub_100575E68);
}

uint64_t sub_100575E68()
{
  return sub_100575E98(&qword_100E7FEE8, &qword_100E7FEC8, (void (*)(void))sub_100575F14);
}

uint64_t sub_100575E98(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100575F14()
{
  unint64_t result = qword_100E7FEF0;
  if (!qword_100E7FEF0)
  {
    sub_10018C6DC(&qword_100E7FEC0);
    sub_1001246C8((unint64_t *)&qword_100E7FEF8, &qword_100E7FED0);
    sub_1001246C8(&qword_100E63EC8, &qword_100E63ED0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7FEF0);
  }
  return result;
}

uint64_t *sub_100575FD8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v11 = *a2;
      if ((~*a2 & 0xF000000000000006) != 0)
      {
        uint64_t v12 = a2[1];
        uint64_t v13 = a2[2];
        uint64_t v14 = a2[3];
        uint64_t v15 = a2[4];
        uint64_t v16 = a2[5];
        uint64_t v17 = a2[6];
        uint64_t v20 = a2[8];
        uint64_t v21 = a2[9];
        uint64_t v22 = a2[10];
        uint64_t v23 = a2[11];
        uint64_t v18 = a2[7];
        sub_100274EDC(v11);
        *a1 = v11;
        a1[1] = v12;
        a1[2] = v13;
        a1[3] = v14;
        a1[4] = v15;
        a1[5] = v16;
        a1[6] = v17;
        a1[7] = v18;
        a1[8] = v20;
        a1[9] = v21;
        a1[10] = v22;
        a1[11] = v23;
      }
      else
      {
        memcpy(a1, a2, 0x60uLL);
      }
      goto LABEL_13;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v8 = type metadata accessor for LocationPreviewViewAction();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v9 = type metadata accessor for Location();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
LABEL_13:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(v6 + 64));
  }
  return a1;
}

uint64_t sub_100576200(uint64_t *a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 3)
  {
    uint64_t result = *a1;
    if ((~*a1 & 0xF000000000000006) != 0) {
      return sub_100274E38(result);
    }
  }
  else if (!result)
  {
    type metadata accessor for LocationPreviewViewAction();
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 1)
    {
      uint64_t v3 = type metadata accessor for Location();
      uint64_t v4 = *(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(v3 - 8) + 8);
      return v4(a1, v3);
    }
  }
  return result;
}

uint64_t *sub_1005762E0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v9 = *a2;
    if ((~*a2 & 0xF000000000000006) != 0)
    {
      uint64_t v10 = a2[1];
      uint64_t v11 = a2[2];
      uint64_t v12 = a2[3];
      uint64_t v13 = a2[4];
      uint64_t v14 = a2[5];
      uint64_t v15 = a2[6];
      uint64_t v18 = a2[8];
      uint64_t v19 = a2[9];
      uint64_t v20 = a2[10];
      uint64_t v21 = a2[11];
      uint64_t v16 = a2[7];
      sub_100274EDC(v9);
      *a1 = v9;
      a1[1] = v10;
      a1[2] = v11;
      a1[3] = v12;
      a1[4] = v13;
      a1[5] = v14;
      a1[6] = v15;
      a1[7] = v16;
      a1[8] = v18;
      a1[9] = v19;
      a1[10] = v20;
      a1[11] = v21;
    }
    else
    {
      memcpy(a1, a2, 0x60uLL);
    }
    goto LABEL_11;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = type metadata accessor for LocationPreviewViewAction();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v8 = type metadata accessor for Location();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
    }
LABEL_11:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

uint64_t *sub_1005764C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100577138((uint64_t)a1, (void (*)(void))type metadata accessor for ModalViewAction);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v9 = *a2;
      if ((~*a2 & 0xF000000000000006) != 0)
      {
        uint64_t v10 = a2[1];
        uint64_t v11 = a2[2];
        uint64_t v12 = a2[3];
        uint64_t v13 = a2[4];
        uint64_t v14 = a2[5];
        uint64_t v15 = a2[6];
        uint64_t v18 = a2[8];
        uint64_t v19 = a2[9];
        uint64_t v20 = a2[10];
        uint64_t v21 = a2[11];
        uint64_t v16 = a2[7];
        sub_100274EDC(v9);
        *a1 = v9;
        a1[1] = v10;
        a1[2] = v11;
        a1[3] = v12;
        a1[4] = v13;
        a1[5] = v14;
        a1[6] = v15;
        a1[7] = v16;
        a1[8] = v18;
        a1[9] = v19;
        a1[10] = v20;
        a1[11] = v21;
      }
      else
      {
        memcpy(a1, a2, 0x60uLL);
      }
      goto LABEL_12;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = type metadata accessor for LocationPreviewViewAction();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v8 = type metadata accessor for Location();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
LABEL_12:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1005766CC(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = type metadata accessor for LocationPreviewViewAction();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for Location();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1005767D4(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100577138((uint64_t)a1, (void (*)(void))type metadata accessor for ModalViewAction);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = type metadata accessor for LocationPreviewViewAction();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v7 = type metadata accessor for Location();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_100576900@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for LocationPreviewViewAction();
  sub_100162E4C();
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  type metadata accessor for ModalViewAction();
  sub_100162E4C();
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v12 = v11 - v10;
  uint64_t v13 = sub_10017DF08(&qword_100E7FFB0);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  sub_1005770D8(v2, v12, (void (*)(void))type metadata accessor for ModalViewAction);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      unsigned __int8 v20 = *(unsigned char *)v12;
      sub_10017DF08(&qword_100E635E0);
      uint64_t inited = (__n128 *)swift_initStackObject();
      uint64_t v22 = sub_10017FEC4(inited, (__n128)xmmword_100C251B0);
      v22[4].n128_u64[1] = (unint64_t)&type metadata for NotificationSettingsViewAction;
      v22[3].n128_u8[0] = v20;
      Dictionary.init(dictionaryLiteral:)();
      goto LABEL_8;
    case 2u:
      unsigned __int8 v23 = *(unsigned char *)v12;
      sub_10017DF08(&qword_100E635E0);
      uint64_t v24 = (__n128 *)swift_initStackObject();
      uint64_t v25 = sub_10017FEC4(v24, (__n128)xmmword_100C251B0);
      v25[4].n128_u64[1] = (unint64_t)&type metadata for NotificationsOptInViewAction;
      v25[3].n128_u8[0] = v23;
      Dictionary.init(dictionaryLiteral:)();
      goto LABEL_8;
    case 3u:
      uint64_t v42 = *(void *)(v12 + 8);
      uint64_t v43 = *(void *)v12;
      uint64_t v40 = *(void *)(v12 + 24);
      uint64_t v41 = *(void *)(v12 + 16);
      uint64_t v38 = *(void *)(v12 + 40);
      uint64_t v39 = *(void *)(v12 + 32);
      uint64_t v36 = *(void *)(v12 + 56);
      uint64_t v37 = *(void *)(v12 + 48);
      uint64_t v26 = *(void *)(v12 + 72);
      uint64_t v35 = *(void *)(v12 + 64);
      uint64_t v28 = *(void *)(v12 + 80);
      uint64_t v27 = *(void *)(v12 + 88);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v29 = (__n128 *)swift_initStackObject();
      sub_10017FEC4(v29, (__n128)xmmword_100C251B0)[4].n128_u64[1] = (unint64_t)&type metadata for ReportWeatherViewAction;
      uint64_t v30 = (void *)swift_allocObject();
      v29[3].n128_u64[0] = (unint64_t)v30;
      v30[2] = v43;
      v30[3] = v42;
      v30[4] = v41;
      v30[5] = v40;
      v30[6] = v39;
      v30[7] = v38;
      v30[8] = v37;
      v30[9] = v36;
      v30[10] = v35;
      v30[11] = v26;
      v30[12] = v28;
      v30[13] = v27;
      sub_100274EB4(v43);
      Dictionary.init(dictionaryLiteral:)();
      ShortDescription.init(name:_:)();
      sub_100274F58(v43);
      break;
    case 4u:
      unsigned __int8 v31 = *(unsigned char *)v12;
      sub_10017DF08(&qword_100E635E0);
      uint64_t v32 = swift_initStackObject();
      *(_OWORD *)(v32 + 16) = xmmword_100C251B0;
      strcpy((char *)(v32 + 32), "userInitiated");
      *(_WORD *)(v32 + 46) = -4864;
      *(void *)(v32 + 72) = &type metadata for Bool;
      *(unsigned char *)(v32 + 48) = v31;
      Dictionary.init(dictionaryLiteral:)();
      goto LABEL_8;
    case 5u:
    case 6u:
      Dictionary.init(dictionaryLiteral:)();
LABEL_8:
      ShortDescription.init(name:_:)();
      break;
    default:
      sub_100577074(v12, v8);
      sub_10017DF08(&qword_100E635E0);
      uint64_t v18 = swift_initStackObject();
      *(_OWORD *)(v18 + 16) = xmmword_100C251B0;
      *(void *)(v18 + 32) = 0x6E6F69746361;
      *(void *)(v18 + 40) = 0xE600000000000000;
      *(void *)(v18 + 72) = v4;
      uint64_t v19 = sub_100170694((uint64_t *)(v18 + 48));
      sub_1005770D8(v8, (uint64_t)v19, (void (*)(void))type metadata accessor for LocationPreviewViewAction);
      Dictionary.init(dictionaryLiteral:)();
      ShortDescription.init(name:_:)();
      sub_100577138(v8, (void (*)(void))type metadata accessor for LocationPreviewViewAction);
      break;
  }
  a1[3] = v13;
  a1[4] = sub_100576FB0();
  uint64_t v33 = sub_100170694(a1);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v14 + 32))(v33, v17, v13);
}

uint64_t sub_100576F24()
{
  sub_100577190(&qword_100E7FFC0);

  return ShortDescribable.description.getter();
}

uint64_t sub_100576F7C()
{
  return sub_100577190(&qword_100E7FFA8);
}

unint64_t sub_100576FB0()
{
  unint64_t result = qword_100E7FFB8;
  if (!qword_100E7FFB8)
  {
    sub_10018C6DC(&qword_100E7FFB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E7FFB8);
  }
  return result;
}

uint64_t sub_100577004()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if ((~v1 & 0xF000000000000006) != 0) {
    sub_100274E38(v1);
  }

  return swift_deallocObject();
}

uint64_t sub_100577074(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LocationPreviewViewAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005770D8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_100577138(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t sub_100577190(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ModalViewAction();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_1005771D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v7))
    {
      uint64_t v13 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v11, v12, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_100577388(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v5, 1, v4);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v7(v5, v4);
  }
  return result;
}

char *sub_10057746C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v6))
  {
    uint64_t v11 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v9, v10, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v6);
  }
  return a1;
}

char *sub_1005775D0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  int v14 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&a1[v11], 1, v6);
  int v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v6);
  if (!v14)
  {
    uint64_t v16 = *(void *)(v6 - 8);
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v12, v13, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
    goto LABEL_12;
  }
  if (v15)
  {
LABEL_12:
    uint64_t v17 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(v12, v13, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v6);
  return a1;
}

char *sub_10057783C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v6))
  {
    uint64_t v11 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v9, v10, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v6);
  }
  return a1;
}

char *sub_1005779A0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v9 = *(void *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    uint64_t v10 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v11 = *(int *)(a3 + 20);
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  int v14 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&a1[v11], 1, v6);
  int v15 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v6);
  if (!v14)
  {
    uint64_t v16 = *(void *)(v6 - 8);
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v12, v13, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
    goto LABEL_12;
  }
  if (v15)
  {
LABEL_12:
    uint64_t v17 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v12, v13, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v12, v13, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v6);
  return a1;
}

uint64_t sub_100577C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08((uint64_t *)&unk_100E73CA0);

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_100577C58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08((uint64_t *)&unk_100E73CA0);

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v4);
}

uint64_t sub_100577CA8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x657461446E6F6F6DLL && a2 == 0xE800000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000100CA6070)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100577D98(char a1)
{
  if (a1) {
    return 0xD000000000000017;
  }
  else {
    return 0x657461446E6F6F6DLL;
  }
}

uint64_t sub_100577DD4(void *a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E80068);
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  sub_1001626E0();
  uint64_t v9 = v8 - v7;
  sub_1001B1E64(a1, a1[3]);
  sub_100578274();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  type metadata accessor for Date();
  sub_1001457CC(&qword_100E63968);
  sub_10019ECF4();
  if (!v1)
  {
    type metadata accessor for WeatherDataOverrides();
    sub_10019ECF4();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v9, v3);
}

uint64_t sub_100577F28@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v4 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v26 = (char *)&v21 - v8;
  sub_10017DF08(&qword_100E80058);
  sub_100179C0C();
  uint64_t v27 = v9;
  uint64_t v28 = v10;
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v11 = type metadata accessor for WeatherDataOverrides();
  __chkstk_darwin(v11);
  sub_1001626E0();
  uint64_t v14 = v13 - v12;
  sub_1001B1E64(a1, a1[3]);
  sub_100578274();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  uint64_t v22 = v11;
  uint64_t v23 = v14;
  uint64_t v24 = v6;
  type metadata accessor for Date();
  char v30 = 0;
  sub_1001457CC(&qword_100E63948);
  uint64_t v15 = (uint64_t)v26;
  sub_10017D00C();
  uint64_t v16 = v23;
  sub_100246A0C(v15, v23);
  char v29 = 1;
  uint64_t v17 = (uint64_t)v24;
  sub_10017D00C();
  uint64_t v18 = sub_10017FF34();
  v19(v18);
  sub_100246A0C(v17, v16 + *(int *)(v22 + 20));
  sub_1005782C0(v16, v25);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  return sub_100578324(v16);
}

uint64_t sub_10057819C()
{
  return sub_100577D98(*v0);
}

uint64_t sub_1005781A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100577CA8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1005781CC(uint64_t a1)
{
  unint64_t v2 = sub_100578274();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100578208(uint64_t a1)
{
  unint64_t v2 = sub_100578274();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100578244@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100577F28(a1, a2);
}

uint64_t sub_10057825C(void *a1)
{
  return sub_100577DD4(a1);
}

unint64_t sub_100578274()
{
  unint64_t result = qword_100E80060;
  if (!qword_100E80060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E80060);
  }
  return result;
}

uint64_t sub_1005782C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for WeatherDataOverrides();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100578324(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for WeatherDataOverrides();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for WeatherDataOverrides.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10057844CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeatherDataOverrides.CodingKeys()
{
  return &type metadata for WeatherDataOverrides.CodingKeys;
}

unint64_t sub_100578488()
{
  unint64_t result = qword_100E80070;
  if (!qword_100E80070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E80070);
  }
  return result;
}

unint64_t sub_1005784D8()
{
  unint64_t result = qword_100E80078;
  if (!qword_100E80078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E80078);
  }
  return result;
}

unint64_t sub_100578528()
{
  unint64_t result = qword_100E80080;
  if (!qword_100E80080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E80080);
  }
  return result;
}

void *sub_100578574(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v19 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    *(_WORD *)(a1 + 33) = *(_WORD *)((char *)a2 + 33);
    uint64_t v9 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
    uint64_t v10 = (char *)v4 + v9;
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = type metadata accessor for MoonPhase.Hemisphere();
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    uint64_t v14 = *(int *)(a3 + 24);
    *((unsigned char *)v4 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
    {
      uint64_t v18 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
    }
  }
  return v4;
}

uint64_t sub_100578740(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
  uint64_t v5 = type metadata accessor for MoonPhase.Hemisphere();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v6, 1, v7);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v9(v6, v7);
  }
  return result;
}

uint64_t sub_100578838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  uint64_t v8 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for MoonPhase.Hemisphere();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  uint64_t v13 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (const void *)(a2 + v13);
  uint64_t v16 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
  {
    uint64_t v17 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
  }
  return a1;
}

uint64_t sub_1005789B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  uint64_t v6 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for MoonPhase.Hemisphere();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (const void *)(a2 + v10);
  uint64_t v13 = type metadata accessor for Date();
  LODWORD(v8) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v13);
  int v14 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v12, 1, v13);
  if (!v8)
  {
    uint64_t v15 = *(void *)(v13 - 8);
    if (!v14)
    {
      (*(void (**)(void *, const void *, uint64_t))(v15 + 24))(v11, v12, v13);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v16 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v11, 0, 1, v13);
  return a1;
}

uint64_t sub_100578BC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  uint64_t v7 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for MoonPhase.Hemisphere();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v12 = (void *)(a1 + v11);
  uint64_t v13 = (const void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
  {
    uint64_t v15 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_100578D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  uint64_t v8 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for MoonPhase.Hemisphere();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  uint64_t v15 = type metadata accessor for Date();
  LODWORD(v10) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v15);
  int v16 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15);
  if (!v10)
  {
    uint64_t v17 = *(void *)(v15 - 8);
    if (!v16)
    {
      (*(void (**)(void *, const void *, uint64_t))(v17 + 40))(v13, v14, v15);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v17 + 8))(v13, v15);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v18 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
  return a1;
}

uint64_t sub_100578F08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100578F1C);
}

uint64_t sub_100578F1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for CalendarDayViewModel(0);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
  }
  else
  {
    if (a2 == 254)
    {
      unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
      if (v10 >= 2) {
        return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    uint64_t v9 = a1 + *(int *)(a3 + 24);
  }

  return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
}

uint64_t sub_100578FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100578FF0);
}

void sub_100578FF0()
{
  uint64_t v4 = sub_100183C30();
  type metadata accessor for CalendarDayViewModel(v4);
  sub_100162F30();
  if (*(_DWORD *)(v6 + 84) == v3)
  {
    uint64_t v7 = v5;
    uint64_t v8 = v1;
  }
  else
  {
    if (v3 == 254)
    {
      *(unsigned char *)(v1 + *(int *)(v2 + 20)) = v0 + 1;
      return;
    }
    uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    uint64_t v8 = v1 + *(int *)(v2 + 24);
  }

  _s7Weather24LocationCompositionStateOwst_0(v8, v0, v0, v7);
}

uint64_t type metadata accessor for CalendarDayCellViewModel(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E800E0);
}

void sub_1005790AC()
{
  type metadata accessor for CalendarDayViewModel(319);
  if (v0 <= 0x3F)
  {
    sub_1000159D8();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_10057917C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = type metadata accessor for CalendarDayCellViewModel(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      uint64_t v10 = a2[3];
      a1[2] = a2[2];
      a1[3] = v10;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      *(_WORD *)((char *)a1 + 33) = *(_WORD *)((char *)a2 + 33);
      uint64_t v11 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = type metadata accessor for MoonPhase.Hemisphere();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      *((unsigned char *)a1 + *(int *)(v7 + 20)) = *((unsigned char *)a2 + *(int *)(v7 + 20));
      uint64_t v16 = *(int *)(v7 + 24);
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
      {
        uint64_t v20 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_100579390(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CalendarDayCellViewModel(0);
  uint64_t result = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = a1 + *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
    uint64_t v5 = type metadata accessor for MoonPhase.Hemisphere();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
    uint64_t v6 = a1 + *(int *)(v2 + 24);
    uint64_t v7 = type metadata accessor for Date();
    uint64_t result = _s7Weather24LocationCompositionStateOwet_0(v6, 1, v7);
    if (!result)
    {
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
      return v8(v6, v7);
    }
  }
  return result;
}

void *sub_1005794A4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CalendarDayCellViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
    *(_WORD *)((char *)a1 + 33) = *(_WORD *)((char *)a2 + 33);
    uint64_t v9 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for MoonPhase.Hemisphere();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    *((unsigned char *)a1 + *(int *)(v6 + 20)) = *((unsigned char *)a2 + *(int *)(v6 + 20));
    uint64_t v14 = *(int *)(v6 + 24);
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
    {
      uint64_t v18 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

uint64_t sub_10057967C(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CalendarDayCellViewModel(0);
  int v7 = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(void *)(a1 + 24) = *((void *)a2 + 3);
      *(unsigned char *)(a1 + 32) = a2[32];
      *(unsigned char *)(a1 + 33) = a2[33];
      *(unsigned char *)(a1 + 34) = a2[34];
      uint64_t v9 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
      uint64_t v10 = a1 + v9;
      uint64_t v11 = &a2[v9];
      uint64_t v12 = type metadata accessor for MoonPhase.Hemisphere();
      uint64_t v13 = *(void (**)(uint64_t, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13(v10, v11, v12);
      *(unsigned char *)(a1 + *(int *)(v6 + 20)) = a2[*(int *)(v6 + 20)];
      uint64_t v14 = *(int *)(v6 + 24);
      uint64_t v15 = (void *)(a1 + v14);
      uint64_t v16 = &a2[v14];
      uint64_t v17 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
      {
        uint64_t v18 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
      }
      uint64_t v29 = a1;
      uint64_t v30 = v6;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_10057D3B0(a1, (void (*)(void))type metadata accessor for CalendarDayCellViewModel);
LABEL_7:
    size_t v19 = *(void *)(*(void *)(a3 - 8) + 64);
    uint64_t v20 = (void *)a1;
    goto LABEL_8;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = a2[32];
  *(unsigned char *)(a1 + 33) = a2[33];
  *(unsigned char *)(a1 + 34) = a2[34];
  uint64_t v21 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = &a2[v21];
  uint64_t v24 = type metadata accessor for MoonPhase.Hemisphere();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 24))(v22, v23, v24);
  *(unsigned char *)(a1 + *(int *)(v6 + 20)) = a2[*(int *)(v6 + 20)];
  uint64_t v25 = *(int *)(v6 + 24);
  uint64_t v26 = a1 + v25;
  a2 += v25;
  uint64_t v27 = type metadata accessor for Date();
  LODWORD(v23) = _s7Weather24LocationCompositionStateOwet_0(v26, 1, v27);
  int v28 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v27);
  if (v23)
  {
    if (!v28)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v27 - 8) + 16))(v26, a2, v27);
      uint64_t v29 = v26;
      uint64_t v30 = v27;
LABEL_14:
      _s7Weather24LocationCompositionStateOwst_0(v29, 0, 1, v30);
      return a1;
    }
  }
  else
  {
    uint64_t v32 = *(void *)(v27 - 8);
    if (!v28)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v32 + 24))(v26, a2, v27);
      return a1;
    }
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v26, v27);
  }
  size_t v19 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
  uint64_t v20 = (void *)v26;
LABEL_8:
  memcpy(v20, a2, v19);
  return a1;
}

_OWORD *sub_100579A74(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CalendarDayCellViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    long long v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
    *(_WORD *)((char *)a1 + 33) = *(_WORD *)((char *)a2 + 33);
    uint64_t v8 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for MoonPhase.Hemisphere();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    *((unsigned char *)a1 + *(int *)(v6 + 20)) = *((unsigned char *)a2 + *(int *)(v6 + 20));
    uint64_t v12 = *(int *)(v6 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v14, 1, v15))
    {
      uint64_t v16 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v13, v14, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v13, 0, 1, v15);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  return a1;
}

uint64_t sub_100579C20(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CalendarDayCellViewModel(0);
  int v7 = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      long long v9 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v9;
      *(unsigned char *)(a1 + 32) = a2[32];
      *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
      uint64_t v10 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
      uint64_t v11 = a1 + v10;
      uint64_t v12 = &a2[v10];
      uint64_t v13 = type metadata accessor for MoonPhase.Hemisphere();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      *(unsigned char *)(a1 + *(int *)(v6 + 20)) = a2[*(int *)(v6 + 20)];
      uint64_t v14 = *(int *)(v6 + 24);
      uint64_t v15 = (void *)(a1 + v14);
      uint64_t v16 = &a2[v14];
      uint64_t v17 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
      {
        uint64_t v18 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
      }
      uint64_t v31 = a1;
      uint64_t v32 = v6;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_10057D3B0(a1, (void (*)(void))type metadata accessor for CalendarDayCellViewModel);
LABEL_7:
    size_t v19 = *(void *)(*(void *)(a3 - 8) + 64);
    uint64_t v20 = (void *)a1;
    goto LABEL_8;
  }
  uint64_t v21 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v21;
  swift_bridgeObjectRelease();
  uint64_t v22 = *((void *)a2 + 3);
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  *(void *)(a1 + 24) = v22;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = a2[32];
  *(unsigned char *)(a1 + 33) = a2[33];
  *(unsigned char *)(a1 + 34) = a2[34];
  uint64_t v23 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
  uint64_t v24 = a1 + v23;
  uint64_t v25 = &a2[v23];
  uint64_t v26 = type metadata accessor for MoonPhase.Hemisphere();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
  *(unsigned char *)(a1 + *(int *)(v6 + 20)) = a2[*(int *)(v6 + 20)];
  uint64_t v27 = *(int *)(v6 + 24);
  uint64_t v28 = a1 + v27;
  a2 += v27;
  uint64_t v29 = type metadata accessor for Date();
  LODWORD(v25) = _s7Weather24LocationCompositionStateOwet_0(v28, 1, v29);
  int v30 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v29);
  if (v25)
  {
    if (!v30)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v28, a2, v29);
      uint64_t v31 = v28;
      uint64_t v32 = v29;
LABEL_14:
      _s7Weather24LocationCompositionStateOwst_0(v31, 0, 1, v32);
      return a1;
    }
  }
  else
  {
    uint64_t v34 = *(void *)(v29 - 8);
    if (!v30)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v34 + 40))(v28, a2, v29);
      return a1;
    }
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v28, v29);
  }
  size_t v19 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
  uint64_t v20 = (void *)v28;
LABEL_8:
  memcpy(v20, a2, v19);
  return a1;
}

uint64_t sub_100579FB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100579FC8);
}

uint64_t sub_100579FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CalendarDayCellViewModel(0);
  unsigned int v5 = _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_10057A010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10057A024);
}

uint64_t sub_10057A024(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = type metadata accessor for CalendarDayCellViewModel(0);

  return _s7Weather24LocationCompositionStateOwst_0(a1, v5, a3, v6);
}

uint64_t sub_10057A080(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CalendarDayCellViewModel(0);

  return _s7Weather24LocationCompositionStateOwet_0(a1, 1, v2);
}

uint64_t sub_10057A0C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CalendarDayCellViewModel(0);

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, 1, v4);
}

uint64_t type metadata accessor for CalendarGridCellViewModel(uint64_t a1)
{
  return sub_10018678C(a1, (uint64_t *)&unk_100E80190);
}

uint64_t sub_10057A130()
{
  uint64_t result = type metadata accessor for CalendarDayCellViewModel(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_10057A1A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for CalendarDayCellViewModel(0);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = type metadata accessor for CalendarGridCellViewModel(0);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v11 = a2[3];
      a1[2] = a2[2];
      a1[3] = v11;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      *(_WORD *)((char *)a1 + 33) = *(_WORD *)((char *)a2 + 33);
      uint64_t v12 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
      uint64_t v24 = (char *)a1 + v12;
      uint64_t v13 = (char *)a2 + v12;
      uint64_t v14 = type metadata accessor for MoonPhase.Hemisphere();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v15(v24, v13, v14);
      *((unsigned char *)a1 + *(int *)(v7 + 20)) = *((unsigned char *)a2 + *(int *)(v7 + 20));
      uint64_t v16 = *(int *)(v7 + 24);
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v18, 1, v19))
      {
        uint64_t v20 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v17, v18, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v17, 0, 1, v19);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v21 = *(int *)(a3 + 20);
    long long v22 = *(_OWORD *)((char *)a2 + v21 + 24);
    *(_OWORD *)((char *)a1 + v21 + 24) = v22;
    (**(void (***)(void))(v22 - 8))();
  }
  return a1;
}

uint64_t sub_10057A424(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CalendarDayCellViewModel(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = a1 + *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
    uint64_t v6 = type metadata accessor for MoonPhase.Hemisphere();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
    uint64_t v7 = a1 + *(int *)(v4 + 24);
    uint64_t v8 = type metadata accessor for Date();
    if (!_s7Weather24LocationCompositionStateOwet_0(v7, 1, v8)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
    }
  }
  uint64_t v9 = a1 + *(int *)(a2 + 20);

  return _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v9);
}

void *sub_10057A538(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CalendarDayCellViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = type metadata accessor for CalendarGridCellViewModel(0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    uint64_t v9 = a2[3];
    a1[2] = a2[2];
    a1[3] = v9;
    *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
    *(_WORD *)((char *)a1 + 33) = *(_WORD *)((char *)a2 + 33);
    uint64_t v10 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = type metadata accessor for MoonPhase.Hemisphere();
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    *((unsigned char *)a1 + *(int *)(v6 + 20)) = *((unsigned char *)a2 + *(int *)(v6 + 20));
    uint64_t v15 = *(int *)(v6 + 24);
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    uint64_t v18 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v17, 1, v18))
    {
      uint64_t v19 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v16, v17, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v16, 0, 1, v18);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v20 = *(int *)(a3 + 20);
  long long v21 = *(_OWORD *)((char *)a2 + v20 + 24);
  *(_OWORD *)((char *)a1 + v20 + 24) = v21;
  (**(void (***)(void))(v21 - 8))();
  return a1;
}

uint64_t sub_10057A768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CalendarDayCellViewModel(0);
  int v7 = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0(a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
      *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
      uint64_t v9 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
      uint64_t v10 = a1 + v9;
      uint64_t v11 = a2 + v9;
      uint64_t v12 = type metadata accessor for MoonPhase.Hemisphere();
      uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v13(v10, v11, v12);
      *(unsigned char *)(a1 + *(int *)(v6 + 20)) = *(unsigned char *)(a2 + *(int *)(v6 + 20));
      uint64_t v14 = *(int *)(v6 + 24);
      uint64_t v15 = (void *)(a1 + v14);
      uint64_t v16 = (const void *)(a2 + v14);
      uint64_t v17 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
      {
        uint64_t v18 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
      }
      uint64_t v32 = a1;
      uint64_t v33 = v6;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_10057D3B0(a1, (void (*)(void))type metadata accessor for CalendarDayCellViewModel);
LABEL_7:
    size_t v19 = *(void *)(*(void *)(type metadata accessor for CalendarGridCellViewModel(0) - 8) + 64);
    uint64_t v20 = (void *)a1;
    long long v21 = (const void *)a2;
    goto LABEL_8;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  uint64_t v22 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
  uint64_t v23 = a1 + v22;
  uint64_t v24 = a2 + v22;
  uint64_t v25 = type metadata accessor for MoonPhase.Hemisphere();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 24))(v23, v24, v25);
  *(unsigned char *)(a1 + *(int *)(v6 + 20)) = *(unsigned char *)(a2 + *(int *)(v6 + 20));
  uint64_t v26 = *(int *)(v6 + 24);
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  uint64_t v29 = type metadata accessor for Date();
  int v30 = _s7Weather24LocationCompositionStateOwet_0(v27, 1, v29);
  int v31 = _s7Weather24LocationCompositionStateOwet_0(v28, 1, v29);
  if (v30)
  {
    if (!v31)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
      uint64_t v32 = v27;
      uint64_t v33 = v29;
LABEL_14:
      _s7Weather24LocationCompositionStateOwst_0(v32, 0, 1, v33);
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v35 = *(void *)(v29 - 8);
    if (!v31)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 24))(v27, v28, v29);
      goto LABEL_15;
    }
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v27, v29);
  }
  size_t v19 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
  uint64_t v20 = (void *)v27;
  long long v21 = (const void *)v28;
LABEL_8:
  memcpy(v20, v21, v19);
LABEL_15:
  sub_1000C1E18((uint64_t *)(a1 + *(int *)(a3 + 20)), (uint64_t *)(a2 + *(int *)(a3 + 20)));
  return a1;
}

_OWORD *sub_10057AB8C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CalendarDayCellViewModel(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = type metadata accessor for CalendarGridCellViewModel(0);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    long long v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
    *(_WORD *)((char *)a1 + 33) = *(_WORD *)((char *)a2 + 33);
    uint64_t v9 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for MoonPhase.Hemisphere();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    *((unsigned char *)a1 + *(int *)(v6 + 20)) = *((unsigned char *)a2 + *(int *)(v6 + 20));
    uint64_t v13 = *(int *)(v6 + 24);
    uint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v15, 1, v16))
    {
      uint64_t v17 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v14, v15, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v14, 0, 1, v16);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v18 = *(int *)(a3 + 20);
  size_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  long long v21 = *((_OWORD *)v20 + 1);
  *(_OWORD *)size_t v19 = *(_OWORD *)v20;
  *((_OWORD *)v19 + 1) = v21;
  *((void *)v19 + 4) = *((void *)v20 + 4);
  return a1;
}

uint64_t sub_10057AD64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CalendarDayCellViewModel(0);
  int v7 = _s7Weather24LocationCompositionStateOwet_0(a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0(a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      long long v9 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v9;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
      uint64_t v10 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
      uint64_t v11 = a1 + v10;
      uint64_t v12 = a2 + v10;
      uint64_t v13 = type metadata accessor for MoonPhase.Hemisphere();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      *(unsigned char *)(a1 + *(int *)(v6 + 20)) = *(unsigned char *)(a2 + *(int *)(v6 + 20));
      uint64_t v14 = *(int *)(v6 + 24);
      uint64_t v15 = (void *)(a1 + v14);
      uint64_t v16 = (const void *)(a2 + v14);
      uint64_t v17 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, v17))
      {
        uint64_t v18 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, v17);
      }
      uint64_t v34 = a1;
      uint64_t v35 = v6;
      goto LABEL_14;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_10057D3B0(a1, (void (*)(void))type metadata accessor for CalendarDayCellViewModel);
LABEL_7:
    size_t v19 = *(void *)(*(void *)(type metadata accessor for CalendarGridCellViewModel(0) - 8) + 64);
    uint64_t v20 = (void *)a1;
    long long v21 = (const void *)a2;
    goto LABEL_8;
  }
  uint64_t v22 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v23;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  uint64_t v24 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = type metadata accessor for MoonPhase.Hemisphere();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 40))(v25, v26, v27);
  *(unsigned char *)(a1 + *(int *)(v6 + 20)) = *(unsigned char *)(a2 + *(int *)(v6 + 20));
  uint64_t v28 = *(int *)(v6 + 24);
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = type metadata accessor for Date();
  int v32 = _s7Weather24LocationCompositionStateOwet_0(v29, 1, v31);
  int v33 = _s7Weather24LocationCompositionStateOwet_0(v30, 1, v31);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 32))(v29, v30, v31);
      uint64_t v34 = v29;
      uint64_t v35 = v31;
LABEL_14:
      _s7Weather24LocationCompositionStateOwst_0(v34, 0, 1, v35);
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v41 = *(void *)(v31 - 8);
    if (!v33)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 40))(v29, v30, v31);
      goto LABEL_15;
    }
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v29, v31);
  }
  size_t v19 = *(void *)(*(void *)(sub_10017DF08((uint64_t *)&unk_100E73CA0) - 8) + 64);
  uint64_t v20 = (void *)v29;
  long long v21 = (const void *)v30;
LABEL_8:
  memcpy(v20, v21, v19);
LABEL_15:
  uint64_t v36 = *(int *)(a3 + 20);
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + v36);
  long long v39 = *(_OWORD *)(v38 + 16);
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
  *(_OWORD *)(v37 + 16) = v39;
  *(void *)(v37 + 32) = *(void *)(v38 + 32);
  return a1;
}

uint64_t sub_10057B130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10057B144);
}

uint64_t sub_10057B144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for CalendarGridCellViewModel(0);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v6);
  }
  else
  {
    unint64_t v9 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v9 >= 0xFFFFFFFF) {
      LODWORD(v9) = -1;
    }
    return (v9 + 1);
  }
}

uint64_t sub_10057B1D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10057B1E8);
}

void sub_10057B1E8()
{
  uint64_t v4 = sub_100183C30();
  type metadata accessor for CalendarGridCellViewModel(v4);
  sub_100162F30();
  if (*(_DWORD *)(v6 + 84) == v3)
  {
    _s7Weather24LocationCompositionStateOwst_0(v1, v0, v0, v5);
  }
  else
  {
    *(void *)(v1 + *(int *)(v2 + 20) + 24) = (v0 - 1);
  }
}

uint64_t type metadata accessor for CalendarGridCell(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E801F8);
}

uint64_t sub_10057B284()
{
  uint64_t result = type metadata accessor for CalendarGridCellViewModel(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

BOOL sub_10057B318(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = type metadata accessor for CalendarDayCellViewModel(0);
  sub_100162E4C();
  __chkstk_darwin(v7);
  unint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for CalendarGridCellViewModel(0);
  uint64_t v11 = sub_100109308(v10);
  __chkstk_darwin(v11);
  sub_10011BFD8();
  uint64_t v12 = sub_10017DF08(&qword_100E802B0);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_100162E88();
  uint64_t v15 = v2 + *(int *)(v14 + 56);
  sub_10057C700(a1, v2, (void (*)(void))type metadata accessor for CalendarGridCellViewModel);
  sub_10057C700(a2, v15, (void (*)(void))type metadata accessor for CalendarGridCellViewModel);
  sub_10012B520(v2, 1, v6);
  if (!v17)
  {
    sub_10057C700(v2, v3, (void (*)(void))type metadata accessor for CalendarGridCellViewModel);
    sub_10012B520(v15, 1, v6);
    if (!v17)
    {
      sub_10057C994(v15, (uint64_t)v9, (void (*)(void))type metadata accessor for CalendarDayCellViewModel);
      BOOL v16 = sub_10057B56C(v3, (uint64_t)v9);
      sub_10057D3B0((uint64_t)v9, (void (*)(void))type metadata accessor for CalendarDayCellViewModel);
      sub_10057D3B0(v3, (void (*)(void))type metadata accessor for CalendarDayCellViewModel);
      sub_10057D3B0(v2, (void (*)(void))type metadata accessor for CalendarGridCellViewModel);
      return v16;
    }
    sub_10057D3B0(v3, (void (*)(void))type metadata accessor for CalendarDayCellViewModel);
LABEL_9:
    sub_1001781AC(v2, &qword_100E802B0);
    return 0;
  }
  sub_10012B520(v15, 1, v6);
  if (!v17) {
    goto LABEL_9;
  }
  sub_10057D3B0(v2, (void (*)(void))type metadata accessor for CalendarGridCellViewModel);
  return 1;
}

BOOL sub_10057B56C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_10011BFD8();
  uint64_t v10 = sub_10017DF08(&qword_100E64D60);
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_100162E88();
  uint64_t v12 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v30 - v17;
  __chkstk_darwin(v19);
  long long v21 = (char *)&v30 - v20;
  if ((sub_10058D938(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v31 = v8;
  uint64_t v22 = type metadata accessor for CalendarDayCellViewModel(0);
  if (*(unsigned __int8 *)(a1 + *(int *)(v22 + 20)) != *(unsigned __int8 *)(a2 + *(int *)(v22 + 20))) {
    return 0;
  }
  uint64_t v23 = v22;
  sub_10006DF38(a1 + *(int *)(v22 + 24), (uint64_t)v21, (uint64_t *)&unk_100E73CA0);
  sub_10006DF38(a2 + *(int *)(v23 + 24), (uint64_t)v18, (uint64_t *)&unk_100E73CA0);
  uint64_t v24 = v2 + *(int *)(v10 + 48);
  sub_10006DF38((uint64_t)v21, v2, (uint64_t *)&unk_100E73CA0);
  sub_10006DF38((uint64_t)v18, v24, (uint64_t *)&unk_100E73CA0);
  sub_10012B520(v2, 1, v6);
  if (v25)
  {
    sub_1001781AC((uint64_t)v18, (uint64_t *)&unk_100E73CA0);
    sub_1001781AC((uint64_t)v21, (uint64_t *)&unk_100E73CA0);
    sub_10012B520(v24, 1, v6);
    if (v25)
    {
      sub_1001781AC(v2, (uint64_t *)&unk_100E73CA0);
      return 1;
    }
    goto LABEL_11;
  }
  sub_10006DF38(v2, (uint64_t)v15, (uint64_t *)&unk_100E73CA0);
  sub_10012B520(v24, 1, v6);
  if (v25)
  {
    sub_1001781AC((uint64_t)v18, (uint64_t *)&unk_100E73CA0);
    sub_1001781AC((uint64_t)v21, (uint64_t *)&unk_100E73CA0);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v15, v6);
LABEL_11:
    sub_1001781AC(v2, &qword_100E64D60);
    return 0;
  }
  uint64_t v26 = v31;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v3, v24, v6);
  sub_10057DA60((unint64_t *)&qword_100E63980, (void (*)(uint64_t))&type metadata accessor for Date);
  char v27 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
  v28(v3, v6);
  sub_1001781AC((uint64_t)v18, (uint64_t *)&unk_100E73CA0);
  sub_1001781AC((uint64_t)v21, (uint64_t *)&unk_100E73CA0);
  v28((uint64_t)v15, v6);
  sub_1001781AC(v2, (uint64_t *)&unk_100E73CA0);
  return (v27 & 1) != 0;
}

uint64_t sub_10057B8F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10057B910@<X0>(uint64_t a1@<X8>)
{
  uint64_t v110 = a1;
  type metadata accessor for AccessibilityTraits();
  sub_100179C0C();
  uint64_t v104 = v3;
  uint64_t v105 = (char *)v2;
  __chkstk_darwin(v2);
  sub_100109314();
  uint64_t v103 = v4;
  uint64_t v5 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v6 = sub_100109308(v5);
  __chkstk_darwin(v6);
  sub_100109314();
  uint64_t v98 = v7;
  uint64_t v8 = type metadata accessor for CalendarGridCell(0);
  uint64_t v9 = sub_100164920(v8);
  uint64_t v89 = v10;
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v9);
  uint64_t v92 = sub_10017DF08(&qword_100E80230);
  sub_100179C0C();
  uint64_t v91 = v13;
  __chkstk_darwin(v14);
  sub_100109314();
  uint64_t v90 = v15;
  sub_10017DF08(&qword_100E80238);
  sub_100179C0C();
  uint64_t v96 = v17;
  uint64_t v97 = v16;
  __chkstk_darwin(v16);
  sub_100109314();
  uint64_t v95 = v18;
  uint64_t v94 = sub_10017DF08(&qword_100E80240);
  sub_100162E4C();
  __chkstk_darwin(v19);
  sub_100109314();
  uint64_t v93 = v20;
  uint64_t v108 = sub_10017DF08(&qword_100E80248);
  sub_100162E4C();
  __chkstk_darwin(v21);
  sub_100109314();
  uint64_t v100 = v22;
  uint64_t v109 = sub_10017DF08(&qword_100E80250);
  sub_100179C0C();
  uint64_t v102 = v23;
  __chkstk_darwin(v24);
  Swift::String v99 = (char *)&v88 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  Swift::String v101 = (char *)&v88 - v27;
  uint64_t v28 = type metadata accessor for CalendarDayCellViewModel(0);
  sub_100179C0C();
  uint64_t v30 = v29;
  uint64_t v32 = *(void *)(v31 + 64);
  __chkstk_darwin(v33);
  uint64_t v34 = (char *)&v88 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  uint64_t v37 = (char *)&v88 - v36;
  uint64_t v106 = sub_10017DF08(&qword_100E80258);
  sub_100162E4C();
  __chkstk_darwin(v38);
  sub_100109314();
  uint64_t v107 = v39;
  uint64_t v40 = type metadata accessor for CalendarGridCellViewModel(0);
  uint64_t v41 = sub_100109308(v40);
  __chkstk_darwin(v41);
  uint64_t v43 = (char *)&v88 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10057C700(v1, (uint64_t)v43, (void (*)(void))type metadata accessor for CalendarGridCellViewModel);
  sub_10012B520((uint64_t)v43, 1, v28);
  if (v64)
  {
    uint64_t v44 = static Color.clear.getter();
    unsigned __int8 v45 = static Axis.Set.horizontal.getter();
    unsigned __int8 v46 = static Axis.Set.vertical.getter();
    char v47 = Axis.Set.init(rawValue:)();
    Axis.Set.init(rawValue:)();
    if (Axis.Set.init(rawValue:)() != v45) {
      char v47 = Axis.Set.init(rawValue:)();
    }
    Axis.Set.init(rawValue:)();
    if (Axis.Set.init(rawValue:)() != v46) {
      char v47 = Axis.Set.init(rawValue:)();
    }
    uint64_t v48 = v107;
    uint64_t *v107 = v44;
    *((unsigned char *)v48 + 8) = v47;
    swift_storeEnumTagMultiPayload();
    sub_10017DF08(&qword_100E80298);
    sub_10057D2E8();
    uint64_t v49 = sub_10018C6DC(&qword_100E80280);
    unint64_t v50 = sub_10057D23C();
    uint64_t v51 = sub_1001246C8(&qword_100E80290, &qword_100E80280);
    uint64_t v111 = (void *)v108;
    uint64_t v112 = v49;
    unint64_t v113 = v50;
    uint64_t v114 = v51;
    swift_getOpaqueTypeConformance2();
    return _ConditionalContent<>.init(storage:)();
  }
  else
  {
    sub_10057C994((uint64_t)v43, (uint64_t)v37, (void (*)(void))type metadata accessor for CalendarDayCellViewModel);
    sub_10057C700((uint64_t)v37, (uint64_t)v34, (void (*)(void))type metadata accessor for CalendarDayCellViewModel);
    sub_10057C700(v1, (uint64_t)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), (void (*)(void))type metadata accessor for CalendarGridCell);
    unint64_t v53 = (*(unsigned __int8 *)(v30 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
    unint64_t v54 = (v32 + *(unsigned __int8 *)(v89 + 80) + v53) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
    uint64_t v55 = swift_allocObject();
    sub_10057C994((uint64_t)v34, v55 + v53, (void (*)(void))type metadata accessor for CalendarDayCellViewModel);
    uint64_t v56 = sub_10057C994((uint64_t)&v88 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v55 + v54, (void (*)(void))type metadata accessor for CalendarGridCell);
    __chkstk_darwin(v56);
    *(&v88 - 2) = (uint64_t)v37;
    type metadata accessor for CalendarDayView(0);
    sub_10057DA60(&qword_100E80260, (void (*)(uint64_t))type metadata accessor for CalendarDayView);
    uint64_t v57 = v90;
    Button.init(action:label:)();
    uint64_t v58 = *(int *)(v28 + 20);
    char v59 = v37[32];
    LOBYTE(v111) = v37[v58];
    BYTE1(v111) = v59;
    sub_1001246C8(&qword_100E80268, &qword_100E80230);
    sub_10057CAD0();
    uint64_t v60 = v95;
    uint64_t v61 = v92;
    View.buttonStyle<A>(_:)();
    (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v57, v61);
    uint64_t v62 = v98;
    sub_10006DF38((uint64_t)&v37[*(int *)(v28 + 24)], v98, (uint64_t *)&unk_100E73CA0);
    uint64_t v63 = type metadata accessor for Date();
    sub_10012B520(v62, 1, v63);
    if (v64) {
      char v65 = 1;
    }
    else {
      char v65 = 0;
    }
    sub_1001781AC(v62, (uint64_t *)&unk_100E73CA0);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v67 = swift_allocObject();
    *(unsigned char *)(v67 + 16) = v65;
    uint64_t v69 = v96;
    uint64_t v68 = v97;
    uint64_t v70 = v93;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v96 + 16))(v93, v60, v97);
    uint64_t v71 = (uint64_t *)(v70 + *(int *)(v94 + 36));
    *uint64_t v71 = KeyPath;
    v71[1] = (uint64_t)sub_10021277C;
    v71[2] = v67;
    uint64_t v73 = *(void (**)(uint64_t, uint64_t))(v69 + 8);
    uint64_t v72 = v69 + 8;
    v73(v60, v68);
    if (v37[v58] == 1)
    {
      sub_10017DF08((uint64_t *)&unk_100EAAE80);
      uint64_t v74 = v104;
      uint64_t v75 = swift_allocObject();
      *(_OWORD *)(v75 + 16) = xmmword_100C251B0;
      static AccessibilityTraits.isSelected.getter();
      uint64_t v111 = (void *)v75;
      sub_10057DA60(&qword_100E742F8, (void (*)(uint64_t))&type metadata accessor for AccessibilityTraits);
      uint64_t v76 = sub_10017DF08((uint64_t *)&unk_100EAAE90);
      sub_1001246C8(&qword_100E74300, (uint64_t *)&unk_100EAAE90);
      sub_1001A2178();
    }
    else
    {
      uint64_t v111 = _swiftEmptyArrayStorage;
      sub_10057DA60(&qword_100E742F8, (void (*)(uint64_t))&type metadata accessor for AccessibilityTraits);
      uint64_t v76 = sub_10017DF08((uint64_t *)&unk_100EAAE90);
      sub_1001246C8(&qword_100E74300, (uint64_t *)&unk_100EAAE90);
      sub_1001A2178();
      uint64_t v74 = v104;
    }
    sub_10057D120();
    uint64_t v77 = v100;
    View.accessibilityAddTraits(_:)();
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v72, v76);
    uint64_t v78 = sub_1001781AC(v70, &qword_100E80240);
    __chkstk_darwin(v78);
    *(&v88 - 2) = (uint64_t)v37;
    uint64_t v79 = sub_10017DF08(&qword_100E80280);
    unint64_t v80 = sub_10057D23C();
    uint64_t v81 = sub_1001246C8(&qword_100E80290, &qword_100E80280);
    uint64_t v82 = v99;
    Swift::String v83 = (void *)v108;
    View.accessibilityShowsLargeContentViewer<A>(_:)();
    sub_1001781AC(v77, &qword_100E80248);
    uint64_t v105 = v37;
    Swift::String_optional v85 = v101;
    uint64_t v84 = v102;
    uint64_t v86 = v82;
    uint64_t v87 = v109;
    (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v101, v86, v109);
    (*(void (**)(uint64_t *, char *, uint64_t))(v84 + 16))(v107, v85, v87);
    swift_storeEnumTagMultiPayload();
    sub_10017DF08(&qword_100E80298);
    sub_10057D2E8();
    uint64_t v111 = v83;
    uint64_t v112 = v79;
    unint64_t v113 = v80;
    uint64_t v114 = v81;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v85, v87);
    return sub_10057D3B0((uint64_t)v105, (void (*)(void))type metadata accessor for CalendarDayCellViewModel);
  }
}

uint64_t sub_10057C458(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CalendarDayCellViewModel(0);
  sub_10006DF38(a1 + *(int *)(v11 + 24), (uint64_t)v6, (uint64_t *)&unk_100E73CA0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v6, 1, v7) == 1) {
    return sub_1001781AC((uint64_t)v6, (uint64_t *)&unk_100E73CA0);
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  uint64_t v13 = type metadata accessor for CalendarGridCell(0);
  sub_1001B1E64((void *)(a2 + *(int *)(v13 + 20)), *(void *)(a2 + *(int *)(v13 + 20) + 24));
  sub_100A77434((uint64_t)v10);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_10057C600@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(a1 + 34) == 8)
  {
    uint64_t v3 = 0;
  }
  else
  {
    type metadata accessor for CalendarDayViewModel(0);
    MoonPhase.symbolName(for:)();
    uint64_t v3 = Image.init(systemName:)();
  }
  sub_10014A85C();
  swift_bridgeObjectRetain();
  uint64_t v4 = Text.init<A>(_:)();
  uint64_t v6 = v5;
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = v4;
  char v8 = v7 & 1;
  *(void *)(a2 + 16) = v5;
  *(unsigned char *)(a2 + 24) = v7 & 1;
  *(void *)(a2 + 32) = v9;
  swift_retain();
  sub_100190CC4(v4, v6, v8);
  swift_bridgeObjectRetain();
  sub_100191924(v4, v6, v8);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10057C700(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_10057C754()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CalendarDayCellViewModel(0);
  sub_100179EF0();
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v20 = type metadata accessor for CalendarGridCell(0);
  sub_100179EF0();
  unint64_t v8 = (v4 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v1 + v4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = type metadata accessor for CalendarDayViewModel(0);
  unint64_t v11 = v1 + v4 + *(int *)(v10 + 36);
  uint64_t v12 = type metadata accessor for MoonPhase.Hemisphere();
  sub_100162E4C();
  uint64_t v14 = *(void (**)(unint64_t, uint64_t))(v13 + 8);
  v14(v11, v12);
  uint64_t v15 = v9 + *(int *)(v2 + 24);
  uint64_t v16 = type metadata accessor for Date();
  if (!_s7Weather24LocationCompositionStateOwet_0(v15, 1, v16)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
  }
  uint64_t v17 = v1 + v8;
  if (!_s7Weather24LocationCompositionStateOwet_0(v1 + v8, 1, v2))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14(v17 + *(int *)(v10 + 36), v12);
    uint64_t v18 = v17 + *(int *)(v2 + 24);
    if (!_s7Weather24LocationCompositionStateOwet_0(v18, 1, v16)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v18, v16);
    }
  }
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v17 + *(int *)(v20 + 20));

  return swift_deallocObject();
}

uint64_t sub_10057C994(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_10057C9F4()
{
  uint64_t v1 = type metadata accessor for CalendarDayCellViewModel(0);
  sub_100164920(v1);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for CalendarGridCell(0) - 8);
  uint64_t v7 = v0 + ((v3 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_10057C458(v0 + v3, v7);
}

uint64_t sub_10057CA9C@<X0>(uint64_t a1@<X8>)
{
  return sub_10057C700(*(void *)(v1 + 16), a1, (void (*)(void))type metadata accessor for CalendarDayViewModel);
}

unint64_t sub_10057CAD0()
{
  unint64_t result = qword_100E80270;
  if (!qword_100E80270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E80270);
  }
  return result;
}

uint64_t sub_10057CB1C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v53 = a2;
  uint64_t v63 = a3;
  int v62 = a2 & 1;
  uint64_t v4 = type metadata accessor for RoundedRectangle();
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v52 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_10017DF08(&qword_100E802C8);
  __chkstk_darwin(v61);
  unint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ButtonStyleConfiguration.Label();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10017DF08(&qword_100E802D0);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_10017DF08(&qword_100E802D8);
  __chkstk_darwin(v54);
  uint64_t v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_10017DF08(&qword_100E802E0);
  __chkstk_darwin(v55);
  uint64_t v59 = (uint64_t)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_10017DF08(&qword_100E802E8);
  __chkstk_darwin(v58);
  uint64_t v21 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_10017DF08(&qword_100E802F0);
  __chkstk_darwin(v57);
  uint64_t v56 = (uint64_t)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  ButtonStyleConfiguration.label.getter();
  uint64_t v60 = a1;
  if (ButtonStyleConfiguration.isPressed.getter()) {
    double v23 = 0.4;
  }
  else {
    double v23 = 1.0;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v12, v9);
  *(double *)&v16[*(int *)(v14 + 44)] = v23;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v24 = *(int *)(v5 + 28);
  uint64_t v25 = v52;
  uint64_t v26 = &v52[v24];
  uint64_t v27 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v28 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(v26, v27, v28);
  __int16 v29 = v53;
  __asm { FMOV            V0.2D, #6.0 }
  _OWORD *v25 = _Q0;
  if (v29)
  {
    if ((v29 & 0x100) != 0)
    {
      static Color.cyan.getter();
      uint64_t v37 = Color.opacity(_:)();
      swift_release();
      goto LABEL_10;
    }
    id v36 = [self tertiarySystemFillColor];
    uint64_t v35 = Color.init(_:)();
  }
  else
  {
    uint64_t v35 = static Color.clear.getter();
  }
  uint64_t v37 = v35;
LABEL_10:
  sub_10057C700((uint64_t)v25, (uint64_t)v8, (void (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v38 = v61;
  *(void *)&v8[*(int *)(v61 + 52)] = v37;
  *(_WORD *)&v8[*(int *)(v38 + 56)] = 256;
  sub_10057D3B0((uint64_t)v25, (void (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v39 = static Alignment.center.getter();
  uint64_t v41 = v40;
  uint64_t v42 = (uint64_t)&v18[*(int *)(v54 + 36)];
  sub_10006DF38((uint64_t)v8, v42, &qword_100E802C8);
  uint64_t v43 = (uint64_t *)(v42 + *(int *)(sub_10017DF08(&qword_100E802F8) + 36));
  uint64_t *v43 = v39;
  v43[1] = v41;
  sub_10006DF38((uint64_t)v16, (uint64_t)v18, &qword_100E802D0);
  sub_1001781AC((uint64_t)v8, &qword_100E802C8);
  sub_1001781AC((uint64_t)v16, &qword_100E802D0);
  uint64_t v44 = v59;
  sub_10006DF38((uint64_t)v18, v59, &qword_100E802D8);
  *(unsigned char *)(v44 + *(int *)(v55 + 36)) = 0;
  sub_1001781AC((uint64_t)v18, &qword_100E802D8);
  uint64_t v45 = static Animation.default.getter();
  char v46 = ButtonStyleConfiguration.isPressed.getter();
  sub_10006DF38(v44, (uint64_t)v21, &qword_100E802E0);
  char v47 = &v21[*(int *)(v58 + 36)];
  *(void *)char v47 = v45;
  v47[8] = v46 & 1;
  sub_1001781AC(v44, &qword_100E802E0);
  uint64_t v48 = static Animation.default.getter();
  uint64_t v49 = v56;
  sub_10006DF38((uint64_t)v21, v56, &qword_100E802E8);
  uint64_t v50 = v49 + *(int *)(v57 + 36);
  *(void *)uint64_t v50 = v48;
  *(unsigned char *)(v50 + 8) = v62;
  sub_1001781AC((uint64_t)v21, &qword_100E802E8);
  return sub_10057D6C8(v49, v63);
}

uint64_t sub_10057D0EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (v2[1]) {
    int v3 = 256;
  }
  else {
    int v3 = 0;
  }
  return sub_10057CB1C(a1, v3 | *v2, a2);
}

uint64_t sub_10057D110()
{
  return swift_deallocObject();
}

unint64_t sub_10057D120()
{
  unint64_t result = qword_100E80278;
  if (!qword_100E80278)
  {
    sub_10018C6DC(&qword_100E80240);
    sub_10018C6DC(&qword_100E80230);
    sub_1001246C8(&qword_100E80268, &qword_100E80230);
    sub_10057CAD0();
    swift_getOpaqueTypeConformance2();
    sub_1001246C8(&qword_100E66BA8, &qword_100E66BB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E80278);
  }
  return result;
}

uint64_t sub_10057D234@<X0>(uint64_t a1@<X8>)
{
  return sub_10057C600(*(void *)(v1 + 16), a1);
}

unint64_t sub_10057D23C()
{
  unint64_t result = qword_100E80288;
  if (!qword_100E80288)
  {
    sub_10018C6DC(&qword_100E80248);
    sub_10057D120();
    sub_10057DA60((unint64_t *)&qword_100EAACA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E80288);
  }
  return result;
}

unint64_t sub_10057D2E8()
{
  unint64_t result = qword_100E802A0;
  if (!qword_100E802A0)
  {
    sub_10018C6DC(&qword_100E80298);
    sub_10057D364();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E802A0);
  }
  return result;
}

unint64_t sub_10057D364()
{
  unint64_t result = qword_100E802A8;
  if (!qword_100E802A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E802A8);
  }
  return result;
}

uint64_t sub_10057D3B0(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationSettingsViewState(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 65281 <= 0xFFFEFFFF) {
      int v2 = 2;
    }
    else {
      int v2 = 4;
    }
    if (a2 + 65281 < 0xFF0000) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = *((unsigned __int8 *)a1 + 2);
      if (!*((unsigned char *)a1 + 2)) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 16)) - 65282;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 2;
  int v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for CalendarDayCellButtonStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10057D570);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CalendarDayCellButtonStyle()
{
  return &type metadata for CalendarDayCellButtonStyle;
}

unint64_t sub_10057D5AC()
{
  unint64_t result = qword_100E802B8;
  if (!qword_100E802B8)
  {
    sub_10018C6DC(&qword_100E802C0);
    sub_10057D2E8();
    sub_10018C6DC(&qword_100E80248);
    sub_10018C6DC(&qword_100E80280);
    sub_10057D23C();
    sub_1001246C8(&qword_100E80290, &qword_100E80280);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E802B8);
  }
  return result;
}

uint64_t sub_10057D6AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10057D6C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E802F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10057D734()
{
  unint64_t result = qword_100E80300;
  if (!qword_100E80300)
  {
    sub_10018C6DC(&qword_100E802F0);
    sub_10057D7D4();
    sub_1001246C8(&qword_100E80348, &qword_100E80350);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E80300);
  }
  return result;
}

unint64_t sub_10057D7D4()
{
  unint64_t result = qword_100E80308;
  if (!qword_100E80308)
  {
    sub_10018C6DC(&qword_100E802E8);
    sub_10057D874();
    sub_1001246C8(&qword_100E80348, &qword_100E80350);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E80308);
  }
  return result;
}

unint64_t sub_10057D874()
{
  unint64_t result = qword_100E80310;
  if (!qword_100E80310)
  {
    sub_10018C6DC(&qword_100E802E0);
    sub_10057D914();
    sub_1001246C8(&qword_100E80338, &qword_100E80340);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E80310);
  }
  return result;
}

unint64_t sub_10057D914()
{
  unint64_t result = qword_100E80318;
  if (!qword_100E80318)
  {
    sub_10018C6DC(&qword_100E802D8);
    sub_10057D9B4();
    sub_1001246C8(&qword_100E80330, &qword_100E802F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E80318);
  }
  return result;
}

unint64_t sub_10057D9B4()
{
  unint64_t result = qword_100E80320;
  if (!qword_100E80320)
  {
    sub_10018C6DC(&qword_100E802D0);
    sub_10057DA60(&qword_100E80328, (void (*)(uint64_t))&type metadata accessor for ButtonStyleConfiguration.Label);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E80320);
  }
  return result;
}

uint64_t sub_10057DA60(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10057DAA8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v1058 = a2;
  uint64_t v1056 = sub_10017DF08(&qword_100E80410);
  uint64_t v1055 = *(void *)(v1056 - 8);
  __chkstk_darwin(v1056);
  unsigned int v6 = (char *)&v1012 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1053 = sub_10017DF08(&qword_100E80418);
  uint64_t v1052 = *(void *)(v1053 - 8);
  __chkstk_darwin(v1053);
  v1054 = (char *)&v1012 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1051 = sub_10017DF08(&qword_100E80420);
  uint64_t v1050 = *(void *)(v1051 - 8);
  __chkstk_darwin(v1051);
  v1049 = (char *)&v1012 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1047 = sub_10017DF08(&qword_100E80428);
  uint64_t v1046 = *(void *)(v1047 - 8);
  __chkstk_darwin(v1047);
  v1048 = (char *)&v1012 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1044 = sub_10017DF08(&qword_100E80430);
  uint64_t v1043 = *(void *)(v1044 - 8);
  __chkstk_darwin(v1044);
  v1045 = (char *)&v1012 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1094 = sub_10017DF08(&qword_100E80438);
  uint64_t v11 = *(void *)(v1094 - 8);
  __chkstk_darwin(v1094);
  v1078 = (char *)&v1012 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1082 = sub_10017DF08(&qword_100E80440);
  uint64_t v1077 = *(void *)(v1082 - 8);
  __chkstk_darwin(v1082);
  v1042 = (uint64_t *)((char *)&v1012 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v1070 = sub_10017DF08(&qword_100E80448);
  uint64_t v1069 = *(void *)(v1070 - 8);
  __chkstk_darwin(v1070);
  v1071 = (char *)&v1012 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1079 = sub_10017DF08(&qword_100E80450);
  uint64_t v1095 = *(void *)(v1079 - 8);
  __chkstk_darwin(v1079);
  v1076 = (uint64_t *)((char *)&v1012 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v1059 = sub_10017DF08(&qword_100E80458);
  uint64_t v1041 = *(void *)(v1059 - 8);
  __chkstk_darwin(v1059);
  v1072 = (char *)&v1012 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1039 = sub_10017DF08(&qword_100E80460);
  uint64_t v1038 = *(void *)(v1039 - 8);
  __chkstk_darwin(v1039);
  v1040 = (char *)&v1012 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1037 = (uint64_t *)sub_10017DF08(&qword_100E80468);
  v1036 = (uint64_t *)*(v1037 - 1);
  __chkstk_darwin(v1037);
  v1060 = (char *)&v1012 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1034 = sub_10017DF08(&qword_100E80470);
  uint64_t v1033 = *(void *)(v1034 - 8);
  __chkstk_darwin(v1034);
  v1035 = (char *)&v1012 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1032 = (char *)sub_10017DF08(&qword_100E80478);
  v1031 = (uint64_t *)*((void *)v1032 - 1);
  __chkstk_darwin(v1032);
  v1061 = (char *)&v1012 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1103 = (uint64_t *)sub_10017DF08(&qword_100E80480);
  v1102 = (uint64_t *)*(v1103 - 1);
  __chkstk_darwin(v1103);
  v1087 = (char *)&v1012 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1086 = sub_10017DF08(&qword_100E80488);
  v1029 = *(uint64_t **)(v1086 - 8);
  __chkstk_darwin(v1086);
  v1030 = (char *)&v1012 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1028 = type metadata accessor for PrivacyConfiguration();
  uint64_t v1027 = *(void *)(v1028 - 8);
  __chkstk_darwin(v1028);
  v1026 = (char *)&v1012 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1085 = (void (*)(const char *, uint64_t, uint64_t))type metadata accessor for DebugModel();
  uint64_t v1067 = *((void *)v1085 - 1);
  __chkstk_darwin(v1085);
  uint64_t v25 = (uint64_t *)((char *)&v1012 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v1083 = (char *)sub_10017DF08(&qword_100E80490);
  uint64_t v1025 = *((void *)v1083 - 1);
  __chkstk_darwin(v1083);
  v1024 = (char *)&v1012 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1120 = sub_10017DF08(&qword_100E80498);
  uint64_t v1117 = *(void *)(v1120 - 8);
  __chkstk_darwin(v1120);
  v1114 = (char *)&v1012 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1109 = sub_10017DF08(&qword_100E804A0);
  v1108 = *(void **)(v1109 - 8);
  __chkstk_darwin(v1109);
  *(void *)&long long v1111 = (char *)&v1012 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1100 = (uint64_t *)sub_10017DF08(&qword_100E804A8);
  uint64_t v1098 = *(v1100 - 1);
  __chkstk_darwin(v1100);
  *(void *)&long long v1104 = (char *)&v1012 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v1099 = sub_10017DF08(&qword_100E804B0);
  v1101 = *(uint64_t **)(v1099 - 8);
  __chkstk_darwin(v1099);
  v1093 = (uint64_t *)((char *)&v1012 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v1116 = type metadata accessor for ChangeBehavior();
  uint64_t v1124 = *(void *)(v1116 - 8);
  __chkstk_darwin(v1116);
  v1112 = (char *)&v1012 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_10017DF08(&qword_100E804B8);
  uint64_t v33 = *(void *)(v32 - 8);
  v1122 = (void (*)(char *, void, uint64_t))v32;
  uint64_t v1123 = v33;
  __chkstk_darwin(v32);
  v1115 = (char *)&v1012 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1125 = (void *)sub_10017DF08(&qword_100E804C0);
  uint64_t v1097 = *(v1125 - 1);
  __chkstk_darwin(v1125);
  v1121 = (char *)&v1012 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for AppConfiguration();
  uint64_t v1057 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v38 = (char *)&v1012 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E6FC60);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!v1129)
  {
    __break(1u);
    goto LABEL_175;
  }
  uint64_t v1023 = v36;
  sub_1001B1E64(&v1128, v1129);
  v1066 = v38;
  dispatch thunk of AppConfigurationManagerType.appConfiguration.getter();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v1128);
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for AppSessionManager();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  uint64_t v1065 = result;
  if (!result)
  {
LABEL_175:
    __break(1u);
    return result;
  }
  uint64_t v40 = sub_10017DF08(&qword_100E6BBD0);
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_100C454D0;
  uint64_t v1019 = type metadata accessor for Settings.Maps.Requests();
  static Settings.Maps.Requests.implicationTimerMs.getter();
  type metadata accessor for FeatureFlag();
  swift_allocObject();
  *(void *)(v41 + 32) = FeatureFlag.init<A>(_:label:isEnabled:setEnabled:)();
  static Settings.Maps.useClientHashRendering.getter();
  swift_allocObject();
  *(void *)(v41 + 40) = FeatureFlag.init(_:label:invertValue:)();
  static Settings.Maps.improvedLoadingBar.getter();
  swift_allocObject();
  *(void *)(v41 + 48) = FeatureFlag.init(_:label:invertValue:)();
  uint64_t v1128 = v41;
  specialized Array._endMutation()();
  type metadata accessor for FeatureFlags();
  swift_allocObject();
  uint64_t v1064 = FeatureFlags.init(_:)();
  uint64_t v1118 = v40;
  uint64_t v42 = swift_allocObject();
  *(_OWORD *)(v42 + 16) = xmmword_100C454E0;
  if (qword_100E62658 != -1) {
    swift_once();
  }
  v1017 = v25;
  v1020 = v6;
  v1022 = a3;
  swift_allocObject();
  swift_retain();
  *(void *)(v42 + 32) = FeatureFlag.init(_:label:)();
  static Settings.Features.homeAndWork.getter();
  swift_allocObject();
  *(void *)(v42 + 40) = FeatureFlag.init(_:label:)();
  if (qword_100E62660 != -1) {
    swift_once();
  }
  uint64_t v1090 = v11;
  swift_allocObject();
  swift_retain();
  *(void *)(v42 + 48) = FeatureFlag.init(_:label:)();
  static Settings.Daemon.enableFlatbuffers.getter();
  swift_allocObject();
  *(void *)(v42 + 56) = FeatureFlag.init(_:label:invertValue:)();
  static Settings.Daemon.enableStatisticsFlatbuffers.getter();
  swift_allocObject();
  *(void *)(v42 + 64) = FeatureFlag.init(_:label:invertValue:)();
  static Settings.Daemon.enablePushLocationViewLoadData.getter();
  swift_allocObject();
  v1096 = (uint64_t *)0xD00000000000001CLL;
  *(void *)(v42 + 72) = FeatureFlag.init(_:label:invertValue:)();
  uint64_t v1128 = v42;
  specialized Array._endMutation()();
  swift_allocObject();
  uint64_t v1063 = FeatureFlags.init(_:)();
  uint64_t v1110 = sub_10017DF08(&qword_100E80400);
  uint64_t v43 = *(void *)(type metadata accessor for Group() - 8);
  uint64_t v1105 = *(void *)(v43 + 72);
  uint64_t v44 = *(unsigned __int8 *)(v43 + 80);
  uint64_t v1068 = 3 * v1105;
  uint64_t v45 = (v44 + 32) & ~v44;
  uint64_t v1107 = v45;
  uint64_t v1106 = v44 | 7;
  uint64_t v1074 = v45 + 3 * v1105;
  uint64_t v46 = swift_allocObject();
  long long v1089 = xmmword_100C33BA0;
  *(_OWORD *)(v46 + 16) = xmmword_100C33BA0;
  uint64_t v1021 = v46;
  uint64_t v1062 = v46 + v45;
  uint64_t v1113 = sub_10017DF08(&qword_100E80408);
  uint64_t v47 = swift_allocObject();
  long long v1081 = xmmword_100C31880;
  *(_OWORD *)(v47 + 16) = xmmword_100C31880;
  uint64_t v48 = sub_10017DF08(&qword_100E804C8);
  static Settings.WeatherEnvironment.contentEnvironment.getter();
  uint64_t v49 = swift_allocObject();
  long long v1127 = xmmword_100C31F30;
  *(_OWORD *)(v49 + 16) = xmmword_100C31F30;
  uint64_t v50 = type metadata accessor for SettingAction();
  *(void *)(v49 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v49;
  specialized Array._endMutation()();
  uint64_t v51 = enum case for Item.ResetBehavior.reset<A>(_:);
  (*(void (**)(char *, void, void *))(v1097 + 104))(v1121, enum case for Item.ResetBehavior.reset<A>(_:), v1125);
  sub_10058BB8C();
  uint64_t v52 = Item<>.init(_:label:resetBehavior:actions:)();
  *(void *)(v47 + 56) = v48;
  *(void *)(v47 + 64) = sub_10058BC6C(&qword_100E804D8, &qword_100E804C8);
  *(void *)(v47 + 32) = v52;
  uint64_t v53 = sub_10017DF08(&qword_100E804E0);
  static Settings.WeatherEnvironment.localServerURL.getter();
  uint64_t v54 = *(void (**)(char *, uint64_t, void))(v1123 + 104);
  v1123 += 104;
  uint64_t v1075 = (uint64_t)v54;
  v54(v1115, v51, v1122);
  v1084 = (char *)0xD000000000000011;
  uint64_t v55 = Item<>.init(_:label:resetBehavior:actions:)();
  uint64_t v1013 = v53;
  *(void *)(v47 + 96) = v53;
  unint64_t v1073 = sub_10058BC6C(&qword_100E804E8, &qword_100E804E0);
  *(void *)(v47 + 104) = v1073;
  *(void *)(v47 + 72) = v55;
  uint64_t v56 = sub_10017DF08(&qword_100E804F0);
  static Settings.WeatherEnvironment.localServerPort.getter();
  uint64_t v57 = *(void (**)(void))(v1124 + 104);
  LODWORD(v1121) = enum case for ChangeBehavior.default(_:);
  v1124 += 104;
  v1125 = v57;
  v57(v1112);
  uint64_t v58 = (void (*)(uint64_t *, uint64_t, void))v1101[13];
  v1101 += 13;
  uint64_t v1097 = (uint64_t)v58;
  v58(v1093, v51, v1099);
  uint64_t v59 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v1092 = v56;
  *(void *)(v47 + 136) = v56;
  uint64_t v1091 = sub_10058BC6C(&qword_100E804F8, &qword_100E804F0);
  *(void *)(v47 + 144) = v1091;
  *(void *)(v47 + 112) = v59;
  uint64_t v60 = sub_10017DF08(&qword_100E80500);
  static Settings.WeatherEnvironment.apsEnvironment.getter();
  (*(void (**)(void, uint64_t, uint64_t *))(v1098 + 104))(v1104, v51, v1100);
  sub_10058BC24(&qword_100E80508, (void (*)(uint64_t))&type metadata accessor for APSEnvironment);
  uint64_t v61 = Item<>.init(_:label:resetBehavior:actions:)();
  *(void *)(v47 + 176) = v60;
  *(void *)(v47 + 184) = sub_10058BC6C(&qword_100E80510, &qword_100E80500);
  *(void *)(v47 + 152) = v61;
  uint64_t v62 = sub_10017DF08(&qword_100E80518);
  static Settings.Container.testSuite.getter();
  uint64_t v63 = swift_allocObject();
  *(_OWORD *)(v63 + 16) = v1127;
  uint64_t v1119 = v50;
  *(void *)(v63 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v63;
  specialized Array._endMutation()();
  char v64 = (void (*)(void, uint64_t, uint64_t))v1108[13];
  unsigned int v1126 = v51;
  v64(v1111, v51, v1109);
  sub_10058BC24(&qword_100E80520, (void (*)(uint64_t))&type metadata accessor for Settings.Container.TestSuite);
  uint64_t v65 = Item<>.init(_:label:resetBehavior:actions:)();
  *(void *)(v47 + 216) = v62;
  *(void *)(v47 + 224) = sub_10058BC6C(&qword_100E80528, &qword_100E80518);
  *(void *)(v47 + 192) = v65;
  uint64_t v66 = v1062;
  Group.init(title:footer:_:)();
  uint64_t v67 = v1105;
  v1108 = (void *)(v66 + v1105);
  uint64_t v68 = swift_allocObject();
  long long v1080 = xmmword_100C31870;
  *(_OWORD *)(v68 + 16) = xmmword_100C31870;
  FeatureFlags.enableAllItem(title:)();
  uint64_t v69 = v1107 + v67;
  uint64_t v70 = swift_allocObject();
  long long v1111 = xmmword_100C251B0;
  *(_OWORD *)(v70 + 16) = xmmword_100C251B0;
  FeatureFlags.items.getter();
  Group.init(title:footer:_:)();
  uint64_t v71 = type metadata accessor for Page();
  *(void *)(v68 + 96) = v71;
  *(void *)(v68 + 104) = &protocol witness table for Page;
  sub_100170694((uint64_t *)(v68 + 72));
  Page.init(title:_:)();
  *(_OWORD *)(swift_allocObject() + 16) = v1111;
  FeatureFlags.items.getter();
  Group.init(title:footer:_:)();
  uint64_t v1109 = v71;
  *(void *)(v68 + 136) = v71;
  *(void *)(v68 + 144) = &protocol witness table for Page;
  sub_100170694((uint64_t *)(v68 + 112));
  Page.init(title:_:)();
  v1100 = (uint64_t *)(v68 + 152);
  uint64_t v1098 = v69;
  *(_OWORD *)(swift_allocObject() + 16) = v1111;
  uint64_t v72 = swift_allocObject();
  long long v1104 = xmmword_100C25ED0;
  *(_OWORD *)(v72 + 16) = xmmword_100C25ED0;
  if (qword_100E625A8 != -1) {
    swift_once();
  }
  uint64_t v73 = swift_allocObject();
  *(_OWORD *)(v73 + 16) = xmmword_100C31780;
  swift_allocObject();
  swift_retain();
  *(void *)(v73 + 32) = SettingAction.init(_:_:)();
  *(void *)(v73 + 40) = static SettingActions.restart.getter();
  uint64_t v1128 = v73;
  specialized Array._endMutation()();
  uint64_t v74 = v1115;
  ((void (*)(char *, void, void))v1075)(v1115, v1126, v1122);
  uint64_t v75 = v1013;
  uint64_t v76 = Item<>.init(_:label:resetBehavior:actions:)();
  uint64_t v77 = (uint64_t *)v1073;
  *(void *)(v72 + 56) = v75;
  *(void *)(v72 + 64) = v77;
  *(void *)(v72 + 32) = v76;
  uint64_t v78 = type metadata accessor for DemoPresetSaveWeatherMainStateButton();
  *(void *)(v72 + 96) = v78;
  *(void *)(v72 + 104) = sub_10058BC24(&qword_100E80530, (void (*)(uint64_t))type metadata accessor for DemoPresetSaveWeatherMainStateButton);
  uint64_t v79 = sub_100170694((uint64_t *)(v72 + 72));
  unint64_t v1016 = 0xD000000000000027;
  uint64_t *v79 = 0xD000000000000027;
  v79[1] = 0x8000000100CA62A0;
  *((unsigned char *)v79 + 16) = 1;
  unint64_t v80 = (char *)v79 + *(int *)(v78 + 24);
  uint64_t v81 = sub_10017DF08(&qword_100E80538);
  uint64_t v82 = *(int *)(v81 + 48);
  Swift::String v83 = (uint64_t (**)())&v80[*(int *)(v81 + 64)];
  uint64_t v84 = enum case for SettingCellStyle.ButtonStyle.default(_:);
  uint64_t v85 = type metadata accessor for SettingCellStyle.ButtonStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v85 - 8) + 104))(v80, v84, v85);
  *(void *)&v80[v82] = _swiftEmptyArrayStorage;
  void *v83 = sub_1005A4C6C;
  v83[1] = 0;
  uint64_t v86 = enum case for SettingCellStyle.button(_:);
  uint64_t v87 = type metadata accessor for SettingCellStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v87 - 8) + 104))(v80, v86, v87);
  Group.init(title:footer:_:)();
  *(void *)(v68 + 176) = v1109;
  *(void *)(v68 + 184) = &protocol witness table for Page;
  sub_100170694(v1100);
  Page.init(title:_:)();
  Group.init(title:footer:_:)();
  uint64_t v1088 = 2 * v1105;
  uint64_t v88 = swift_allocObject();
  *(_OWORD *)(v88 + 16) = xmmword_100C454F0;
  v1108 = (void *)v88;
  v1015 = (uint64_t *)(v88 + 32);
  uint64_t v89 = v1107;
  uint64_t v90 = swift_allocObject();
  long long v1018 = xmmword_100C34240;
  *(_OWORD *)(v90 + 16) = xmmword_100C34240;
  uint64_t v1014 = v90;
  v1100 = (uint64_t *)(v90 + v89);
  uint64_t v91 = swift_allocObject();
  *(_OWORD *)(v91 + 16) = xmmword_100C367B0;
  static Settings.WeatherAnalytics.Debugging.sessionName.getter();
  uint64_t v92 = v1126;
  ((void (*)(char *, void, void))v1075)(v74, v1126, v1122);
  uint64_t v93 = Item<>.init(_:label:resetBehavior:actions:)();
  uint64_t v94 = (uint64_t *)v1073;
  *(void *)(v91 + 56) = v75;
  *(void *)(v91 + 64) = v94;
  *(void *)(v91 + 32) = v93;
  uint64_t v95 = sub_10017DF08(&qword_100E80540);
  static Settings.WeatherAnalytics.Debugging.batchDebugging.getter();
  uint64_t v96 = swift_allocObject();
  *(_OWORD *)(v96 + 16) = v1127;
  *(void *)(v96 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v96;
  specialized Array._endMutation()();
  uint64_t v97 = v1112;
  uint64_t v98 = (void (*)(char *, void, uint64_t))v1125;
  ((void (*)(char *, void, uint64_t))v1125)(v1112, v1121, v1116);
  Swift::String v99 = *(void (**)(char *, void, uint64_t))(v1117 + 104);
  v1117 += 104;
  v1122 = v99;
  v99(v1114, v92, v1120);
  uint64_t v100 = v95;
  v1115 = (char *)v95;
  uint64_t v101 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v91 + 96) = v100;
  uint64_t v1123 = sub_10058BC6C(&qword_100E80548, &qword_100E80540);
  *(void *)(v91 + 104) = v1123;
  *(void *)(v91 + 72) = v101;
  static Settings.WeatherAnalytics.Debugging.batchSize.getter();
  uint64_t v102 = swift_allocObject();
  *(_OWORD *)(v102 + 16) = v1127;
  *(void *)(v102 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v102;
  specialized Array._endMutation()();
  uint64_t v103 = v1121;
  uint64_t v104 = v1116;
  v98(v97, v1121, v1116);
  uint64_t v105 = v1093;
  uint64_t v106 = v1126;
  ((void (*)(uint64_t *, void, void))v1097)(v1093, v1126, v1099);
  uint64_t v107 = v1092;
  uint64_t v108 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v109 = v1091;
  *(void *)(v91 + 136) = v107;
  *(void *)(v91 + 144) = v109;
  *(void *)(v91 + 112) = v108;
  uint64_t v1075 = static Settings.WeatherAnalytics.Debugging.maxUploadRetryCount.getter();
  uint64_t v110 = swift_allocObject();
  *(_OWORD *)(v110 + 16) = v1127;
  *(void *)(v110 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v110;
  specialized Array._endMutation()();
  uint64_t v111 = v1112;
  ((void (*)(char *, uint64_t, uint64_t))v1125)(v1112, v103, v104);
  ((void (*)(uint64_t *, uint64_t, void))v1097)(v105, v106, v1099);
  uint64_t v112 = v111;
  uint64_t v113 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v91 + 176) = v107;
  *(void *)(v91 + 184) = v109;
  *(void *)(v91 + 152) = v113;
  static Settings.WeatherAnalytics.Debugging.disableAnalytics.getter();
  uint64_t v114 = swift_allocObject();
  *(_OWORD *)(v114 + 16) = v1127;
  *(void *)(v114 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v114;
  specialized Array._endMutation()();
  ((void (*)(char *, uint64_t, uint64_t))v1125)(v112, v103, v104);
  uint64_t v115 = v1126;
  v1122(v1114, v1126, v1120);
  uint64_t v116 = v1115;
  uint64_t v117 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v118 = v1123;
  *(void *)(v91 + 216) = v116;
  *(void *)(v91 + 224) = v118;
  *(void *)(v91 + 192) = v117;
  v1084 = (char *)static Settings.WeatherAnalytics.Debugging.disableWidgetAnalytics.getter();
  uint64_t v119 = swift_allocObject();
  *(_OWORD *)(v119 + 16) = v1127;
  *(void *)(v119 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v119;
  specialized Array._endMutation()();
  uint64_t v120 = (void (*)(char *, void, uint64_t))v1125;
  ((void (*)(char *, uint64_t, uint64_t))v1125)(v1112, v103, v104);
  uint64_t v121 = v115;
  uint64_t v122 = v1120;
  uint64_t v123 = v1122;
  v1122(v1114, v121, v1120);
  int v124 = v1115;
  uint64_t v125 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v91 + 256) = v124;
  *(void *)(v91 + 264) = v118;
  *(void *)(v91 + 232) = v125;
  v1084 = (char *)static Settings.AppConfig.disableNetworkTelemetry.getter();
  uint64_t v126 = swift_allocObject();
  *(_OWORD *)(v126 + 16) = v1127;
  *(void *)(v126 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v126;
  specialized Array._endMutation()();
  int v127 = v1112;
  v120(v1112, v1121, v1116);
  uint64_t v128 = v1114;
  v123(v1114, v1126, v122);
  uint64_t v129 = v128;
  uint64_t v130 = v1115;
  uint64_t v131 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v132 = v1123;
  *(void *)(v91 + 296) = v130;
  *(void *)(v91 + 304) = v132;
  *(void *)(v91 + 272) = v131;
  v1084 = (char *)static Settings.WeatherAnalytics.Debugging.sendAppSessionStartAndEventsForNonDnuUsers.getter();
  uint64_t v133 = swift_allocObject();
  *(_OWORD *)(v133 + 16) = v1127;
  *(void *)(v133 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v133;
  specialized Array._endMutation()();
  uint64_t v134 = v1121;
  uint64_t v135 = v1116;
  ((void (*)(char *, void, uint64_t))v1125)(v127, v1121, v1116);
  uint64_t v136 = v129;
  uint64_t v137 = v1126;
  v1122(v136, v1126, v1120);
  uint64_t v138 = v1115;
  uint64_t v139 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v91 + 336) = v138;
  *(void *)(v91 + 344) = v132;
  *(void *)(v91 + 312) = v139;
  v1084 = (char *)static Settings.WeatherAnalytics.Debugging.forceSendCDNServer.getter();
  uint64_t v140 = swift_allocObject();
  *(_OWORD *)(v140 + 16) = v1127;
  *(void *)(v140 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v140;
  specialized Array._endMutation()();
  ((void (*)(char *, uint64_t, uint64_t))v1125)(v127, v134, v135);
  uint64_t v141 = v137;
  v1122(v1114, v137, v1120);
  v1084 = (char *)0xD000000000000014;
  uint64_t v142 = v1115;
  uint64_t v143 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v91 + 376) = v142;
  *(void *)(v91 + 384) = v132;
  *(void *)(v91 + 352) = v143;
  uint64_t v144 = v1100;
  Group.init(title:footer:_:)();
  uint64_t v145 = v1105;
  unint64_t v1073 = (unint64_t)v144 + v1105;
  uint64_t v146 = swift_allocObject();
  *(_OWORD *)(v146 + 16) = v1111;
  uint64_t v1075 = sub_10017DF08(&qword_100E80550);
  static Settings.WeatherAnalytics.Location.samplingRate.getter();
  uint64_t v147 = swift_allocObject();
  *(_OWORD *)(v147 + 16) = v1127;
  *(void *)(v147 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v147;
  specialized Array._endMutation()();
  uint64_t v1025 = *(void *)(v1025 + 104);
  uint64_t v148 = v1024;
  ((void (*)(char *, uint64_t, char *))v1025)(v1024, v141, v1083);
  uint64_t v1013 = sub_10058BC24(&qword_100E80558, (void (*)(uint64_t))&type metadata accessor for Settings.WeatherAnalytics.SamplingRate);
  uint64_t v149 = v1075;
  uint64_t v150 = Item<>.init(_:label:resetBehavior:actions:)();
  *(void *)(v146 + 56) = v149;
  uint64_t v151 = sub_10058BC6C(&qword_100E80560, &qword_100E80550);
  *(void *)(v146 + 64) = v151;
  *(void *)(v146 + 32) = v150;
  Group.init(title:footer:_:)();
  unint64_t v1073 = (unint64_t)v1100 + 2 * v145;
  uint64_t v152 = swift_allocObject();
  *(_OWORD *)(v152 + 16) = v1111;
  static Settings.WeatherAnalytics.Geocode.samplingRate.getter();
  uint64_t v153 = swift_allocObject();
  *(_OWORD *)(v153 + 16) = v1127;
  *(void *)(v153 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v153;
  specialized Array._endMutation()();
  ((void (*)(char *, void, char *))v1025)(v148, v1126, v1083);
  uint64_t v154 = v1075;
  uint64_t v155 = Item<>.init(_:label:resetBehavior:actions:)();
  *(void *)(v152 + 56) = v154;
  *(void *)(v152 + 64) = v151;
  *(void *)(v152 + 32) = v155;
  Group.init(title:footer:_:)();
  uint64_t v156 = swift_allocObject();
  *(_OWORD *)(v156 + 16) = v1111;
  static Settings.WeatherAnalytics.Telemetry.bypassSampling.getter();
  uint64_t v157 = swift_allocObject();
  *(_OWORD *)(v157 + 16) = v1127;
  *(void *)(v157 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v157;
  specialized Array._endMutation()();
  uint64_t v158 = v1116;
  ((void (*)(char *, void, uint64_t))v1125)(v1112, v1121, v1116);
  v1122(v1114, v1126, v1120);
  uint64_t v159 = v1115;
  uint64_t v160 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v161 = v1123;
  *(void *)(v156 + 56) = v159;
  *(void *)(v156 + 64) = v161;
  *(void *)(v156 + 32) = v160;
  Group.init(title:footer:_:)();
  uint64_t v162 = swift_allocObject();
  *(_OWORD *)(v162 + 16) = v1104;
  unint64_t v163 = v1026;
  AppConfiguration.privacy.getter();
  uint64_t v164 = PrivacyConfiguration.reportWeatherEventSubmissionDrivenIdentifierResetCount.getter();
  (*(void (**)(char *, uint64_t))(v1027 + 8))(v163, v1028);
  uint64_t v1128 = v164;
  uint64_t v165 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v166 = v1017;
  uint64_t *v1017 = v165;
  v166[1] = v167;
  v1083 = *(char **)(v1067 + 104);
  ((void (*)(uint64_t *, void, void))v1083)(v166, enum case for DebugModel.label(_:), v1085);
  unint64_t v1073 = type metadata accessor for DebugItem();
  *(void *)(v162 + 56) = v1073;
  uint64_t v168 = sub_10058BC24(&qword_100E80568, (void (*)(uint64_t))&type metadata accessor for DebugItem);
  *(void *)(v162 + 64) = v168;
  sub_100170694((uint64_t *)(v162 + 32));
  DebugItem.init(title:model:)();
  if (qword_100E62AA0 != -1) {
    swift_once();
  }
  ((void (*)(char *, void, uint64_t))v1125)(v1112, v1121, v158);
  ((void (*)(uint64_t *, void, void))v1097)(v1093, v1126, v1099);
  swift_retain();
  uint64_t v169 = v1092;
  uint64_t v170 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v171 = v1091;
  *(void *)(v162 + 96) = v169;
  *(void *)(v162 + 104) = v171;
  *(void *)(v162 + 72) = v170;
  Group.init(title:footer:_:)();
  uint64_t v172 = v1105;
  uint64_t v1075 = 5 * v1105;
  uint64_t v173 = v1100;
  uint64_t v174 = swift_allocObject();
  *(_OWORD *)(v174 + 16) = v1111;
  *(unsigned char *)uint64_t v166 = AppSessionManager.wasPriorSessionCrashDetected.getter() & 1;
  ((void (*)(uint64_t *, void, void))v1083)(v166, enum case for DebugModel.BOOL(_:), v1085);
  *(void *)(v174 + 56) = v1073;
  *(void *)(v174 + 64) = v168;
  sub_100170694((uint64_t *)(v174 + 32));
  DebugItem.init(title:model:)();
  Group.init(title:footer:_:)();
  v1096 = (uint64_t *)((char *)v173 + 6 * v172);
  uint64_t v175 = swift_allocObject();
  *(_OWORD *)(v175 + 16) = v1080;
  v1085 = (void (*)(const char *, uint64_t, uint64_t))static Settings.Identity.resetAllOnNextLaunch.getter();
  uint64_t v176 = swift_allocObject();
  *(_OWORD *)(v176 + 16) = v1127;
  *(void *)(v176 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v176;
  specialized Array._endMutation()();
  uint64_t v177 = v1121;
  uint64_t v178 = v1116;
  uint64_t v179 = (void (*)(char *, uint64_t, uint64_t))v1125;
  ((void (*)(char *, void, uint64_t))v1125)(v1112, v1121, v1116);
  uint64_t v180 = v1126;
  v1122(v1114, v1126, v1120);
  uint64_t v181 = v1115;
  uint64_t v182 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v183 = v1123;
  *(void *)(v175 + 56) = v181;
  *(void *)(v175 + 64) = v183;
  *(void *)(v175 + 32) = v182;
  v1085 = (void (*)(const char *, uint64_t, uint64_t))static Settings.Identity.resetUserIdentifierOnNextLaunch.getter();
  uint64_t v184 = swift_allocObject();
  *(_OWORD *)(v184 + 16) = v1127;
  *(void *)(v184 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v184;
  specialized Array._endMutation()();
  v179(v1112, v177, v178);
  uint64_t v185 = v1120;
  v1122(v1114, v180, v1120);
  uint64_t v186 = v1115;
  uint64_t v187 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v188 = v1123;
  *(void *)(v175 + 96) = v186;
  *(void *)(v175 + 104) = v188;
  *(void *)(v175 + 72) = v187;
  v1085 = (void (*)(const char *, uint64_t, uint64_t))static Settings.Identity.resetPrivateUserIdentifierOnNextLaunch.getter();
  uint64_t v189 = swift_allocObject();
  *(_OWORD *)(v189 + 16) = v1127;
  *(void *)(v189 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v189;
  specialized Array._endMutation()();
  uint64_t v190 = v1112;
  uint64_t v191 = (void (*)(char *, void, uint64_t))v1125;
  ((void (*)(char *, uint64_t, uint64_t))v1125)(v1112, v177, v1116);
  uint64_t v192 = v1114;
  uint64_t v193 = v1122;
  v1122(v1114, v180, v185);
  uint64_t v194 = v192;
  uint64_t v195 = v1115;
  uint64_t v196 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v197 = v1123;
  *(void *)(v175 + 136) = v195;
  *(void *)(v175 + 144) = v197;
  *(void *)(v175 + 112) = v196;
  v1085 = (void (*)(const char *, uint64_t, uint64_t))static Settings.Identity.resetReportWeatherUserIdentifierOnNextLaunch.getter();
  uint64_t v198 = swift_allocObject();
  *(_OWORD *)(v198 + 16) = v1127;
  *(void *)(v198 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v198;
  specialized Array._endMutation()();
  uint64_t v199 = v190;
  uint64_t v200 = v1121;
  v191(v190, v1121, v1116);
  uint64_t v201 = v194;
  uint64_t v202 = v194;
  uint64_t v203 = v1120;
  v193(v202, v1126, v1120);
  uint64_t v204 = v199;
  uint64_t v205 = v1115;
  uint64_t v206 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v175 + 176) = v205;
  *(void *)(v175 + 184) = v197;
  *(void *)(v175 + 152) = v206;
  Group.init(title:footer:_:)();
  v1100 = (uint64_t *)((char *)&v1100[v1105] - v1105);
  uint64_t v207 = swift_allocObject();
  *(_OWORD *)(v207 + 16) = v1111;
  static Settings.ActiveUser.resetActiveUserStatusOnNextLaunch.getter();
  uint64_t v208 = swift_allocObject();
  *(_OWORD *)(v208 + 16) = v1127;
  *(void *)(v208 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v208;
  specialized Array._endMutation()();
  ((void (*)(char *, uint64_t, uint64_t))v1125)(v204, v200, v1116);
  uint64_t v209 = v1126;
  v1122(v201, v1126, v203);
  uint64_t v210 = v1115;
  uint64_t v211 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v212 = v1123;
  *(void *)(v207 + 56) = v210;
  *(void *)(v207 + 64) = v212;
  *(void *)(v207 + 32) = v211;
  Group.init(title:footer:_:)();
  uint64_t v213 = v1108;
  v1108[7] = v1109;
  v213[8] = &protocol witness table for Page;
  uint64_t v214 = v213;
  sub_100170694(v1015);
  Page.init(title:_:)();
  v1083 = (char *)(v214 + 9);
  uint64_t v215 = v1107;
  uint64_t v1067 = v1107 + v1088;
  uint64_t v216 = swift_allocObject();
  unint64_t v1073 = v216;
  *(_OWORD *)(v216 + 16) = v1104;
  v1096 = (uint64_t *)(v216 + v215);
  v1100 = (uint64_t *)static Settings.VFX.animatedBackgrounds.getter();
  uint64_t v217 = swift_allocObject();
  *(_OWORD *)(v217 + 16) = v1104;
  uint64_t v218 = sub_10017DF08(&qword_100E80570);
  static Settings.VFX.animatedBackgrounds.getter();
  Settings.VFX.AnimatedBackgrounds.locationAnimationKind.getter();
  swift_release();
  uint64_t v219 = swift_allocObject();
  *(_OWORD *)(v219 + 16) = v1127;
  *(void *)(v219 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v219;
  specialized Array._endMutation()();
  v1085 = (void (*)(const char *, uint64_t, uint64_t))v1029[13];
  uint64_t v220 = v1030;
  v1085(v1030, v209, v1086);
  sub_10058BC24(&qword_100E80578, (void (*)(uint64_t))&type metadata accessor for Settings.VFX.AnimatedBackgrounds.AnimationKind);
  uint64_t v221 = Item<>.init(_:label:resetBehavior:actions:)();
  *(void *)(v217 + 56) = v218;
  uint64_t v222 = sub_10058BC6C(&qword_100E80580, &qword_100E80570);
  *(void *)(v217 + 64) = v222;
  *(void *)(v217 + 32) = v221;
  static Settings.VFX.animatedBackgrounds.getter();
  Settings.VFX.AnimatedBackgrounds.listAnimationKind.getter();
  swift_release();
  uint64_t v223 = swift_allocObject();
  *(_OWORD *)(v223 + 16) = v1127;
  *(void *)(v223 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v223;
  specialized Array._endMutation()();
  uint64_t v224 = v1126;
  v1085(v220, v1126, v1086);
  uint64_t v225 = Item<>.init(_:label:resetBehavior:actions:)();
  *(void *)(v217 + 96) = v218;
  *(void *)(v217 + 104) = v222;
  *(void *)(v217 + 72) = v225;
  v1030 = (const char *)0x8000000100CA6750;
  uint64_t v226 = v1096;
  Group.init(title:footer:group:_:)();
  v1029 = (uint64_t *)((char *)v226 + v1105);
  uint64_t v227 = swift_allocObject();
  *(_OWORD *)(v227 + 16) = v1081;
  uint64_t v228 = sub_10017DF08(&qword_100E80588);
  static Settings.VFX.moonEnabled.getter();
  uint64_t v229 = swift_allocObject();
  *(_OWORD *)(v229 + 16) = v1127;
  *(void *)(v229 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v229;
  specialized Array._endMutation()();
  uint64_t v230 = (uint64_t *)v1102[13];
  uint64_t v231 = v224;
  v1102 += 13;
  v1096 = v230;
  ((void (*)(char *, uint64_t, uint64_t *))v230)(v1087, v224, v1103);
  v1085 = (void (*)(const char *, uint64_t, uint64_t))sub_10058BC24(&qword_100E80590, (void (*)(uint64_t))&type metadata accessor for FeatureState);
  uint64_t v232 = Item<>.init(_:label:resetBehavior:actions:)();
  uint64_t v1086 = v228;
  *(void *)(v227 + 56) = v228;
  v1100 = (uint64_t *)sub_10058BC6C(&qword_100E80598, &qword_100E80588);
  *(void *)(v227 + 64) = v1100;
  *(void *)(v227 + 32) = v232;
  static Settings.VFX.listVfxCellsEnabled.getter();
  long long v233 = v1112;
  uint64_t v234 = v1121;
  uint64_t v235 = v1116;
  uint64_t v236 = (void (*)(char *, uint64_t, uint64_t))v1125;
  ((void (*)(char *, void, uint64_t))v1125)(v1112, v1121, v1116);
  ((void (*)(uint64_t *, uint64_t, void))v1097)(v1093, v231, v1099);
  uint64_t v1028 = 0xD000000000000019;
  Swift::String v237 = v233;
  uint64_t v238 = v1092;
  uint64_t v239 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v240 = v1091;
  *(void *)(v227 + 96) = v238;
  *(void *)(v227 + 104) = v240;
  *(void *)(v227 + 72) = v239;
  uint64_t v1027 = static Settings.VFX.allListVfxBackgroundsEnabled.getter();
  uint64_t v241 = swift_allocObject();
  *(_OWORD *)(v241 + 16) = v1127;
  *(void *)(v241 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v241;
  specialized Array._endMutation()();
  v236(v237, v234, v235);
  uint64_t v242 = v1126;
  uint64_t v243 = v1120;
  uint64_t v244 = v1122;
  v1122(v1114, v1126, v1120);
  uint64_t v245 = v1115;
  uint64_t v246 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v247 = v1123;
  *(void *)(v227 + 136) = v245;
  *(void *)(v227 + 144) = v247;
  *(void *)(v227 + 112) = v246;
  uint64_t v1027 = static Settings.VFX.vfxCollisionEnabled.getter();
  uint64_t v248 = swift_allocObject();
  *(_OWORD *)(v248 + 16) = v1127;
  *(void *)(v248 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v248;
  specialized Array._endMutation()();
  uint64_t v249 = v1112;
  ((void (*)(char *, void, uint64_t))v1125)(v1112, v1121, v1116);
  uint64_t v250 = v1114;
  v244(v1114, v242, v243);
  uint64_t v251 = v1115;
  uint64_t v252 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v253 = v1123;
  *(void *)(v227 + 176) = v251;
  *(void *)(v227 + 184) = v253;
  *(void *)(v227 + 152) = v252;
  uint64_t v1027 = static Settings.VFX.overrideConditionBackground.getter();
  uint64_t v254 = swift_allocObject();
  *(_OWORD *)(v254 + 16) = v1127;
  *(void *)(v254 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v254;
  specialized Array._endMutation()();
  v255 = v249;
  uint64_t v256 = v249;
  uint64_t v257 = v1116;
  ((void (*)(char *, void, uint64_t))v1125)(v256, v1121, v1116);
  v244(v250, v1126, v1120);
  uint64_t v258 = v250;
  uint64_t v259 = v1115;
  uint64_t v260 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v227 + 216) = v259;
  *(void *)(v227 + 224) = v253;
  *(void *)(v227 + 192) = v260;
  Group.init(title:footer:_:)();
  uint64_t v261 = v1108;
  v1108[12] = v1109;
  v261[13] = &protocol witness table for Page;
  sub_100170694((uint64_t *)v1083);
  Page.init(title:_:)();
  v1083 = (char *)(v261 + 14);
  uint64_t v262 = swift_allocObject();
  v1084 = (char *)v262;
  *(_OWORD *)(v262 + 16) = v1111;
  unint64_t v1073 = v262 + v1107;
  uint64_t v263 = swift_allocObject();
  *(_OWORD *)(v263 + 16) = v1104;
  static Settings.AppConfig.forceDefault.getter();
  uint64_t v264 = swift_allocObject();
  *(_OWORD *)(v264 + 16) = v1127;
  *(void *)(v264 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v264;
  specialized Array._endMutation()();
  uint64_t v265 = v255;
  uint64_t v266 = v1121;
  uint64_t v267 = (void (*)(char *, uint64_t, uint64_t))v1125;
  ((void (*)(char *, void, uint64_t))v1125)(v255, v1121, v257);
  uint64_t v268 = v1126;
  uint64_t v269 = v1120;
  v1122(v258, v1126, v1120);
  uint64_t v270 = v1115;
  uint64_t v271 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v272 = v1123;
  *(void *)(v263 + 56) = v270;
  *(void *)(v263 + 64) = v272;
  *(void *)(v263 + 32) = v271;
  v1030 = (const char *)static Settings.AppConfig.clearConfigCacheOnNextLaunch.getter();
  uint64_t v273 = swift_allocObject();
  *(_OWORD *)(v273 + 16) = v1127;
  *(void *)(v273 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v273;
  specialized Array._endMutation()();
  v267(v265, v266, v1116);
  uint64_t v274 = v268;
  v1122(v258, v268, v269);
  v275 = v1115;
  uint64_t v276 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v277 = v1123;
  *(void *)(v263 + 96) = v275;
  *(void *)(v263 + 104) = v277;
  *(void *)(v263 + 72) = v276;
  Group.init(title:footer:_:)();
  uint64_t v278 = v1108;
  v1108[17] = v1109;
  v278[18] = &protocol witness table for Page;
  sub_100170694((uint64_t *)v1083);
  Page.init(title:_:)();
  uint64_t v279 = swift_allocObject();
  *(_OWORD *)(v279 + 16) = v1111;
  uint64_t v280 = swift_allocObject();
  *(_OWORD *)(v280 + 16) = v1080;
  if (qword_100E629C8 != -1) {
    swift_once();
  }
  uint64_t v281 = swift_allocObject();
  *(_OWORD *)(v281 + 16) = v1127;
  swift_retain();
  *(void *)(v281 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v281;
  specialized Array._endMutation()();
  ((void (*)(char *, uint64_t, uint64_t *))v1096)(v1087, v274, v1103);
  uint64_t v282 = v1086;
  uint64_t v283 = Item<>.init(_:label:resetBehavior:actions:)();
  uint64_t v284 = v1100;
  *(void *)(v280 + 56) = v282;
  *(void *)(v280 + 64) = v284;
  *(void *)(v280 + 32) = v283;
  if (qword_100E629D8 != -1) {
    swift_once();
  }
  unint64_t v1073 = (unint64_t)(v278 + 19);
  v1083 = (char *)v279;
  v1030 = (const char *)(v279 + v1107);
  uint64_t v285 = swift_allocObject();
  *(_OWORD *)(v285 + 16) = v1127;
  swift_retain();
  *(void *)(v285 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v285;
  specialized Array._endMutation()();
  uint64_t v286 = v1112;
  uint64_t v287 = v1121;
  uint64_t v288 = v1116;
  ((void (*)(char *, void, uint64_t))v1125)(v1112, v1121, v1116);
  uint64_t v289 = v274;
  v1122(v1114, v274, v1120);
  v290 = v1115;
  uint64_t v291 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v292 = v1123;
  *(void *)(v280 + 96) = v290;
  *(void *)(v280 + 104) = v292;
  *(void *)(v280 + 72) = v291;
  if (qword_100E629E0 != -1) {
    swift_once();
  }
  uint64_t v293 = swift_allocObject();
  *(_OWORD *)(v293 + 16) = v1127;
  swift_retain();
  *(void *)(v293 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v293;
  specialized Array._endMutation()();
  ((void (*)(char *, uint64_t, uint64_t))v1125)(v286, v287, v288);
  v1122(v1114, v289, v1120);
  uint64_t v294 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v295 = v1123;
  *(void *)(v280 + 136) = v290;
  *(void *)(v280 + 144) = v295;
  *(void *)(v280 + 112) = v294;
  uint64_t v296 = v288;
  if (qword_100E629E8 != -1) {
    swift_once();
  }
  uint64_t v297 = swift_allocObject();
  *(_OWORD *)(v297 + 16) = v1127;
  swift_retain();
  *(void *)(v297 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v297;
  specialized Array._endMutation()();
  ((void (*)(char *, uint64_t, uint64_t))v1125)(v286, v287, v288);
  ((void (*)(uint64_t *, void, void))v1097)(v1093, v1126, v1099);
  v1084 = (char *)0xD000000000000019;
  uint64_t v298 = v1092;
  uint64_t v299 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v300 = v1091;
  *(void *)(v280 + 176) = v298;
  *(void *)(v280 + 184) = v300;
  *(void *)(v280 + 152) = v299;
  Group.init(title:footer:_:)();
  v301 = v1108;
  v1108[22] = v1109;
  v301[23] = &protocol witness table for Page;
  sub_100170694((uint64_t *)v1073);
  Page.init(title:_:)();
  v1083 = (char *)(v301 + 24);
  uint64_t v302 = swift_allocObject();
  *(_OWORD *)(v302 + 16) = v1111;
  unint64_t v1073 = v302 + v1107;
  uint64_t v303 = swift_allocObject();
  *(_OWORD *)(v303 + 16) = v1111;
  static Settings.Daemon.useDemoWeatherData.getter();
  uint64_t v304 = v287;
  uint64_t v305 = swift_allocObject();
  *(_OWORD *)(v305 + 16) = v1127;
  *(void *)(v305 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v305;
  specialized Array._endMutation()();
  ((void (*)(char *, uint64_t, uint64_t))v1125)(v286, v304, v296);
  uint64_t v306 = v1122;
  v1122(v1114, v1126, v1120);
  uint64_t v307 = v1115;
  uint64_t v308 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v309 = v1123;
  *(void *)(v303 + 56) = v307;
  *(void *)(v303 + 64) = v309;
  *(void *)(v303 + 32) = v308;
  v1030 = "Saved locations threshold";
  Group.init(title:footer:_:)();
  v301[27] = v1109;
  v301[28] = &protocol witness table for Page;
  sub_100170694((uint64_t *)v1083);
  Page.init(title:_:)();
  v1083 = (char *)(v301 + 29);
  uint64_t v310 = swift_allocObject();
  *(_OWORD *)(v310 + 16) = v1111;
  unint64_t v1073 = v310 + v1107;
  uint64_t v311 = swift_allocObject();
  *(_OWORD *)(v311 + 16) = v1111;
  uint64_t v312 = v306;
  if (qword_100E62470 != -1) {
    swift_once();
  }
  uint64_t v313 = swift_allocObject();
  *(_OWORD *)(v313 + 16) = v1127;
  swift_retain();
  *(void *)(v313 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v313;
  specialized Array._endMutation()();
  uint64_t v314 = (void (*)(char *, void, uint64_t))v1125;
  ((void (*)(char *, void, uint64_t))v1125)(v286, v1121, v1116);
  v312(v1114, v1126, v1120);
  uint64_t v315 = v1115;
  uint64_t v316 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v317 = v1123;
  *(void *)(v311 + 56) = v315;
  *(void *)(v311 + 64) = v317;
  *(void *)(v311 + 32) = v316;
  Group.init(title:footer:_:)();
  uint64_t v318 = v312;
  v319 = v1108;
  v1108[32] = v1109;
  v319[33] = &protocol witness table for Page;
  uint64_t v320 = v319;
  sub_100170694((uint64_t *)v1083);
  Page.init(title:_:)();
  v1029 = v320 + 34;
  uint64_t v321 = swift_allocObject();
  v1083 = (char *)v321;
  *(_OWORD *)(v321 + 16) = v1104;
  uint64_t v1028 = v321 + v1107;
  uint64_t v322 = swift_allocObject();
  *(_OWORD *)(v322 + 16) = v1081;
  static Settings.Geocoding.bypassGeocodingCache.getter();
  uint64_t v323 = v1121;
  uint64_t v324 = v1116;
  v314(v286, v1121, v1116);
  uint64_t v325 = v1126;
  uint64_t v326 = v1120;
  v318(v1114, v1126, v1120);
  unint64_t v1073 = 0xD00000000000001CLL;
  uint64_t v327 = v1115;
  uint64_t v328 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v329 = v1123;
  *(void *)(v322 + 56) = v327;
  *(void *)(v322 + 64) = v329;
  *(void *)(v322 + 32) = v328;
  uint64_t v1027 = static Settings.Geocoding.bypassReverseGeocodingCache.getter();
  uint64_t v330 = v286;
  uint64_t v331 = v324;
  uint64_t v332 = v286;
  uint64_t v333 = v324;
  uint64_t v334 = (void (*)(char *, void, uint64_t))v1125;
  ((void (*)(char *, uint64_t, uint64_t))v1125)(v330, v323, v331);
  uint64_t v335 = v1114;
  v1122(v1114, v325, v326);
  uint64_t v336 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v322 + 96) = v327;
  *(void *)(v322 + 104) = v329;
  uint64_t v337 = v329;
  *(void *)(v322 + 72) = v336;
  uint64_t v1027 = static Settings.Geocoding.clearGeocodingCacheOnNextLaunch.getter();
  uint64_t v338 = v1121;
  v334(v332, v1121, v333);
  uint64_t v339 = v335;
  uint64_t v340 = v335;
  uint64_t v341 = v1126;
  uint64_t v342 = v1120;
  uint64_t v343 = v1122;
  v1122(v339, v1126, v1120);
  uint64_t v344 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v322 + 136) = v327;
  *(void *)(v322 + 144) = v337;
  *(void *)(v322 + 112) = v344;
  uint64_t v1027 = static Settings.Geocoding.clearReverseGeocodingCacheOnNextLaunch.getter();
  ((void (*)(char *, uint64_t, uint64_t))v1125)(v332, v338, v1116);
  v343(v340, v341, v342);
  uint64_t v345 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v322 + 176) = v327;
  *(void *)(v322 + 184) = v337;
  *(void *)(v322 + 152) = v345;
  uint64_t v346 = sub_10017DF08(&qword_100E805A0);
  static Settings.Geocoding.clientServerSideRevGeo.getter();
  ((void (*)(char *, uint64_t, char *))v1031[13])(v1061, v341, v1032);
  sub_10058BC24(&qword_100E805A8, (void (*)(uint64_t))&type metadata accessor for Settings.Geocoding.ClientServerSideRevGeocode);
  uint64_t v347 = Item<>.init(_:label:resetBehavior:actions:)();
  *(void *)(v322 + 216) = v346;
  *(void *)(v322 + 224) = sub_10058BC6C(&qword_100E805B0, &qword_100E805A0);
  *(void *)(v322 + 192) = v347;
  uint64_t v348 = v1028;
  Group.init(title:footer:_:)();
  v1061 = (char *)(v348 + v1105);
  uint64_t v349 = swift_allocObject();
  *(_OWORD *)(v349 + 16) = v1104;
  static Settings.Geocoding.useBackgroundReverseGeocodingPriority.getter();
  uint64_t v350 = swift_allocObject();
  *(_OWORD *)(v350 + 16) = v1127;
  *(void *)(v350 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v350;
  specialized Array._endMutation()();
  uint64_t v351 = v1121;
  uint64_t v352 = (void (*)(char *, uint64_t, uint64_t))v1125;
  ((void (*)(char *, void, uint64_t))v1125)(v332, v1121, v1116);
  v1122(v1114, v1126, v1120);
  uint64_t v353 = v1115;
  uint64_t v354 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v355 = v1123;
  *(void *)(v349 + 56) = v353;
  *(void *)(v349 + 64) = v355;
  *(void *)(v349 + 32) = v354;
  v1032 = (char *)static Settings.Geocoding.bypassGreenTea.getter();
  uint64_t v356 = swift_allocObject();
  *(_OWORD *)(v356 + 16) = v1127;
  *(void *)(v356 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v356;
  specialized Array._endMutation()();
  v352(v332, v351, v1116);
  uint64_t v357 = v1126;
  v1122(v1114, v1126, v1120);
  uint64_t v358 = v1115;
  uint64_t v359 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v349 + 96) = v358;
  *(void *)(v349 + 104) = v355;
  *(void *)(v349 + 72) = v359;
  Group.init(title:footer:_:)();
  uint64_t v360 = v1108;
  v1108[37] = v1109;
  v360[38] = &protocol witness table for Page;
  sub_100170694(v1029);
  v1061 = (char *)0xE900000000000067;
  Page.init(title:_:)();
  v1083 = (char *)(v360 + 39);
  uint64_t v361 = swift_allocObject();
  *(_OWORD *)(v361 + 16) = v1111;
  v1032 = (char *)(v361 + v1107);
  uint64_t v362 = swift_allocObject();
  *(_OWORD *)(v362 + 16) = v1111;
  static Settings.InternationalAuthenticity.verticalHeroForceInAllLocales.getter();
  uint64_t v363 = swift_allocObject();
  *(_OWORD *)(v363 + 16) = v1127;
  *(void *)(v363 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v363;
  specialized Array._endMutation()();
  ((void (*)(char *, uint64_t, uint64_t *))v1096)(v1087, v357, v1103);
  uint64_t v364 = v1086;
  uint64_t v365 = Item<>.init(_:label:resetBehavior:actions:)();
  uint64_t v366 = v1100;
  *(void *)(v362 + 56) = v364;
  *(void *)(v362 + 64) = v366;
  *(void *)(v362 + 32) = v365;
  Group.init(title:footer:_:)();
  v360[42] = v1109;
  v360[43] = &protocol witness table for Page;
  sub_100170694((uint64_t *)v1083);
  Page.init(title:_:)();
  v1031 = v360 + 44;
  uint64_t v367 = swift_allocObject();
  *(_OWORD *)(v367 + 16) = v1089;
  v1032 = (char *)v367;
  v1083 = (char *)(v367 + v1107);
  uint64_t v368 = swift_allocObject();
  *(_OWORD *)(v368 + 16) = v1089;
  v1029 = (uint64_t *)static Settings.SavedLocations.useCoherence.getter();
  uint64_t v369 = swift_allocObject();
  *(_OWORD *)(v369 + 16) = v1127;
  *(void *)(v369 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v369;
  specialized Array._endMutation()();
  uint64_t v1028 = v1128;
  uint64_t v370 = v1121;
  uint64_t v371 = v1116;
  v372 = (void (*)(char *, uint64_t, uint64_t))v1125;
  ((void (*)(char *, void, uint64_t))v1125)(v1112, v1121, v1116);
  uint64_t v373 = v1122;
  v1122(v1114, v1126, v1120);
  v374 = v1115;
  uint64_t v375 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v376 = v1123;
  *(void *)(v368 + 56) = v374;
  *(void *)(v368 + 64) = v376;
  *(void *)(v368 + 32) = v375;
  v1029 = (uint64_t *)static Settings.SavedLocations.forceMigrateToCoherence.getter();
  uint64_t v377 = swift_allocObject();
  *(_OWORD *)(v377 + 16) = v1127;
  *(void *)(v377 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v377;
  specialized Array._endMutation()();
  v378 = v1112;
  v372(v1112, v370, v371);
  v379 = v1114;
  uint64_t v380 = v1126;
  uint64_t v381 = v1120;
  v373(v1114, v1126, v1120);
  v382 = v1115;
  uint64_t v383 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v384 = v1123;
  *(void *)(v368 + 96) = v382;
  *(void *)(v368 + 104) = v384;
  *(void *)(v368 + 72) = v383;
  v1084 = (char *)static Settings.SavedLocations.removeCoherenceContainer.getter();
  uint64_t v385 = swift_allocObject();
  *(_OWORD *)(v385 + 16) = v1127;
  *(void *)(v385 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v385;
  specialized Array._endMutation()();
  ((void (*)(char *, void, uint64_t))v1125)(v378, v1121, v1116);
  v373(v379, v380, v381);
  uint64_t v386 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v368 + 136) = v382;
  *(void *)(v368 + 144) = v384;
  *(void *)(v368 + 112) = v386;
  v387 = (uint64_t *)v1083;
  Group.init(title:footer:_:)();
  v1084 = (char *)v387 + v1105;
  uint64_t v388 = swift_allocObject();
  *(_OWORD *)(v388 + 16) = v1111;
  uint64_t v389 = v381;
  if (qword_100E62698 != -1) {
    swift_once();
  }
  uint64_t v390 = swift_allocObject();
  *(_OWORD *)(v390 + 16) = v1127;
  swift_retain();
  *(void *)(v390 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v390;
  specialized Array._endMutation()();
  ((void (*)(char *, void, uint64_t))v1125)(v1112, v1121, v1116);
  uint64_t v391 = v1126;
  v1122(v1114, v1126, v389);
  uint64_t v392 = v1115;
  uint64_t v393 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v394 = v1123;
  *(void *)(v388 + 56) = v392;
  *(void *)(v388 + 64) = v394;
  *(void *)(v388 + 32) = v393;
  Group.init(title:footer:_:)();
  v1084 = &v1083[v1088];
  uint64_t v395 = swift_allocObject();
  *(_OWORD *)(v395 + 16) = v1089;
  uint64_t v396 = sub_10017DF08(&qword_100E805B8);
  static Settings.Location.mockedCurrentLocation.getter();
  uint64_t v397 = swift_allocObject();
  *(_OWORD *)(v397 + 16) = v1127;
  *(void *)(v397 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v397;
  specialized Array._endMutation()();
  (*(void (**)(char *, uint64_t, uint64_t))(v1033 + 104))(v1035, v391, v1034);
  sub_10058BC24(&qword_100E805C0, (void (*)(uint64_t))&type metadata accessor for MockLocation);
  uint64_t v398 = Item<>.init(_:label:resetBehavior:actions:)();
  *(void *)(v395 + 56) = v396;
  *(void *)(v395 + 64) = sub_10058BC6C(&qword_100E805C8, &qword_100E805B8);
  *(void *)(v395 + 32) = v398;
  uint64_t v399 = sub_10017DF08(&qword_100E805D0);
  static Settings.LocationsOfInterest.mockedHomeAndWorkLocation.getter();
  uint64_t v400 = swift_allocObject();
  *(_OWORD *)(v400 + 16) = v1127;
  *(void *)(v400 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v400;
  specialized Array._endMutation()();
  ((void (*)(char *, uint64_t, uint64_t *))v1036[13])(v1060, v391, v1037);
  sub_10058BC24(&qword_100E805D8, (void (*)(uint64_t))&type metadata accessor for MockHomeAndWorkLocation);
  uint64_t v401 = Item<>.init(_:label:resetBehavior:actions:)();
  *(void *)(v395 + 96) = v399;
  *(void *)(v395 + 104) = sub_10058BC6C(&qword_100E805E0, &qword_100E805D0);
  *(void *)(v395 + 72) = v401;
  if (qword_100E62A68 != -1) {
    swift_once();
  }
  uint64_t v402 = swift_allocObject();
  *(_OWORD *)(v402 + 16) = v1127;
  swift_retain();
  *(void *)(v402 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v402;
  specialized Array._endMutation()();
  ((void (*)(char *, void, uint64_t))v1125)(v1112, v1121, v1116);
  uint64_t v403 = v1126;
  v1122(v1114, v1126, v1120);
  v404 = v1115;
  uint64_t v405 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v406 = v1123;
  *(void *)(v395 + 136) = v404;
  *(void *)(v395 + 144) = v406;
  *(void *)(v395 + 112) = v405;
  Group.init(title:footer:_:)();
  uint64_t v407 = v1108;
  v1108[47] = v1109;
  v407[48] = &protocol witness table for Page;
  sub_100170694(v1031);
  Page.init(title:_:)();
  v1083 = (char *)swift_allocObject();
  *((_OWORD *)v1083 + 1) = v1089;
  uint64_t v408 = swift_allocObject();
  *(_OWORD *)(v408 + 16) = xmmword_100C45500;
  v409 = v1087;
  v410 = (void (*)(char *, uint64_t, uint64_t *))v1096;
  if (qword_100E62670 != -1) {
    swift_once();
  }
  uint64_t v411 = swift_allocObject();
  *(_OWORD *)(v411 + 16) = v1127;
  swift_retain();
  *(void *)(v411 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v411;
  specialized Array._endMutation()();
  v410(v409, v403, v1103);
  uint64_t v412 = v1086;
  uint64_t v413 = Item<>.init(_:label:resetBehavior:actions:)();
  v414 = v1100;
  *(void *)(v408 + 56) = v412;
  *(void *)(v408 + 64) = v414;
  *(void *)(v408 + 32) = v413;
  if (qword_100E62A00 != -1) {
    swift_once();
  }
  uint64_t v415 = swift_allocObject();
  *(_OWORD *)(v415 + 16) = v1127;
  swift_retain();
  *(void *)(v415 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v415;
  specialized Array._endMutation()();
  uint64_t v416 = v1126;
  ((void (*)(char *, void, uint64_t *))v1096)(v409, v1126, v1103);
  uint64_t v417 = Item<>.init(_:label:resetBehavior:actions:)();
  v418 = v1100;
  *(void *)(v408 + 96) = v412;
  *(void *)(v408 + 104) = v418;
  *(void *)(v408 + 72) = v417;
  uint64_t v419 = v1116;
  if (qword_100E62A08 != -1) {
    swift_once();
  }
  uint64_t v420 = swift_allocObject();
  *(_OWORD *)(v420 + 16) = v1127;
  swift_retain();
  *(void *)(v420 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v420;
  specialized Array._endMutation()();
  v421 = v1112;
  uint64_t v422 = v1121;
  ((void (*)(char *, void, uint64_t))v1125)(v1112, v1121, v419);
  v423 = v1114;
  uint64_t v424 = v416;
  v425 = v1122;
  v1122(v1114, v424, v1120);
  v426 = v1115;
  uint64_t v427 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v428 = v1123;
  *(void *)(v408 + 136) = v426;
  *(void *)(v408 + 144) = v428;
  *(void *)(v408 + 112) = v427;
  if (qword_100E62A10 != -1) {
    swift_once();
  }
  uint64_t v429 = swift_allocObject();
  *(_OWORD *)(v429 + 16) = v1127;
  swift_retain();
  *(void *)(v429 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v429;
  specialized Array._endMutation()();
  ((void (*)(char *, uint64_t, uint64_t))v1125)(v421, v422, v1116);
  v425(v423, v1126, v1120);
  uint64_t v430 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v431 = v1123;
  *(void *)(v408 + 176) = v426;
  *(void *)(v408 + 184) = v431;
  *(void *)(v408 + 152) = v430;
  if (qword_100E62A18 != -1) {
    swift_once();
  }
  uint64_t v432 = swift_allocObject();
  *(_OWORD *)(v432 + 16) = v1127;
  swift_retain();
  *(void *)(v432 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v432;
  specialized Array._endMutation()();
  ((void (*)(char *, uint64_t, uint64_t))v1125)(v421, v422, v1116);
  v425(v423, v1126, v1120);
  uint64_t v433 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v434 = v1123;
  *(void *)(v408 + 216) = v426;
  *(void *)(v408 + 224) = v434;
  *(void *)(v408 + 192) = v433;
  if (qword_100E62A20 != -1) {
    swift_once();
  }
  uint64_t v435 = swift_allocObject();
  *(_OWORD *)(v435 + 16) = v1127;
  swift_retain();
  *(void *)(v435 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v435;
  specialized Array._endMutation()();
  ((void (*)(char *, uint64_t, uint64_t))v1125)(v421, v422, v1116);
  v425(v423, v1126, v1120);
  uint64_t v436 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v437 = v1123;
  *(void *)(v408 + 256) = v426;
  *(void *)(v408 + 264) = v437;
  *(void *)(v408 + 232) = v436;
  if (qword_100E62A28 != -1) {
    swift_once();
  }
  uint64_t v438 = swift_allocObject();
  *(_OWORD *)(v438 + 16) = v1127;
  swift_retain();
  *(void *)(v438 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v438;
  specialized Array._endMutation()();
  ((void (*)(char *, uint64_t, uint64_t))v1125)(v421, v422, v1116);
  v439 = v1122;
  v1122(v423, v1126, v1120);
  uint64_t v440 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v441 = v1123;
  *(void *)(v408 + 296) = v426;
  *(void *)(v408 + 304) = v441;
  *(void *)(v408 + 272) = v440;
  v1084 = (char *)static Settings.WeatherAlert.forceAlertToHighProminence.getter();
  uint64_t v442 = swift_allocObject();
  *(_OWORD *)(v442 + 16) = v1127;
  *(void *)(v442 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v442;
  specialized Array._endMutation()();
  ((void (*)(char *, void, uint64_t))v1125)(v421, v1121, v1116);
  uint64_t v443 = v1120;
  v439(v423, v1126, v1120);
  uint64_t v444 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v445 = v1123;
  *(void *)(v408 + 336) = v426;
  *(void *)(v408 + 344) = v445;
  *(void *)(v408 + 312) = v444;
  v1084 = (char *)static Settings.WeatherAlert.forceAlertToLowProminence.getter();
  uint64_t v446 = swift_allocObject();
  *(_OWORD *)(v446 + 16) = v1127;
  *(void *)(v446 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v446;
  specialized Array._endMutation()();
  ((void (*)(char *, void, uint64_t))v1125)(v421, v1121, v1116);
  v447 = v1122;
  v1122(v423, v1126, v443);
  uint64_t v448 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v408 + 376) = v426;
  *(void *)(v408 + 384) = v445;
  *(void *)(v408 + 352) = v448;
  v449 = v447;
  if (qword_100E62A30 != -1) {
    swift_once();
  }
  uint64_t v450 = swift_allocObject();
  *(_OWORD *)(v450 + 16) = v1127;
  swift_retain();
  *(void *)(v450 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v450;
  specialized Array._endMutation()();
  uint64_t v451 = v1121;
  ((void (*)(char *, void, uint64_t))v1125)(v421, v1121, v1116);
  v449(v423, v1126, v1120);
  uint64_t v452 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v453 = v1123;
  *(void *)(v408 + 416) = v426;
  *(void *)(v408 + 424) = v453;
  *(void *)(v408 + 392) = v452;
  uint64_t v454 = v451;
  if (qword_100E62A38 != -1) {
    swift_once();
  }
  uint64_t v455 = swift_allocObject();
  *(_OWORD *)(v455 + 16) = v1127;
  swift_retain();
  *(void *)(v455 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v455;
  specialized Array._endMutation()();
  ((void (*)(char *, uint64_t, uint64_t))v1125)(v421, v454, v1116);
  uint64_t v456 = v1120;
  v1122(v423, v1126, v1120);
  uint64_t v457 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v458 = v1123;
  *(void *)(v408 + 456) = v426;
  *(void *)(v408 + 464) = v458;
  *(void *)(v408 + 432) = v457;
  if (qword_100E62A40 != -1) {
    swift_once();
  }
  uint64_t v459 = swift_allocObject();
  *(_OWORD *)(v459 + 16) = v1127;
  swift_retain();
  *(void *)(v459 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v459;
  specialized Array._endMutation()();
  ((void (*)(char *, void, uint64_t))v1125)(v421, v1121, v1116);
  v1122(v423, v1126, v456);
  uint64_t v460 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v461 = v1123;
  *(void *)(v408 + 496) = v426;
  *(void *)(v408 + 504) = v461;
  *(void *)(v408 + 472) = v460;
  v462 = v421;
  if (qword_100E62A48 != -1) {
    swift_once();
  }
  uint64_t v463 = swift_allocObject();
  *(_OWORD *)(v463 + 16) = v1127;
  swift_retain();
  *(void *)(v463 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v463;
  specialized Array._endMutation()();
  ((void (*)(char *, void, uint64_t))v1125)(v421, v1121, v1116);
  v1122(v423, v1126, v456);
  uint64_t v464 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v408 + 536) = v426;
  *(void *)(v408 + 544) = v1123;
  *(void *)(v408 + 512) = v464;
  if (qword_100E62A50 != -1) {
    swift_once();
  }
  v1084 = &v1083[v1107];
  uint64_t v465 = swift_allocObject();
  *(_OWORD *)(v465 + 16) = v1127;
  swift_retain();
  *(void *)(v465 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v465;
  specialized Array._endMutation()();
  v466 = v1125;
  ((void (*)(char *, void, uint64_t))v1125)(v462, v1121, v1116);
  v1122(v423, v1126, v456);
  uint64_t v467 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v408 + 576) = v426;
  *(void *)(v408 + 584) = v1123;
  *(void *)(v408 + 552) = v467;
  v468 = (void (*)(char *, void, uint64_t))v466;
  if (qword_100E62A58 != -1) {
    swift_once();
  }
  uint64_t v469 = swift_allocObject();
  *(_OWORD *)(v469 + 16) = v1127;
  swift_retain();
  *(void *)(v469 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v469;
  specialized Array._endMutation()();
  v468(v462, v1121, v1116);
  v1122(v423, v1126, v1120);
  uint64_t v470 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v408 + 616) = v426;
  *(void *)(v408 + 624) = v1123;
  *(void *)(v408 + 592) = v470;
  if (qword_100E62A60 != -1) {
    swift_once();
  }
  uint64_t v471 = swift_allocObject();
  *(_OWORD *)(v471 + 16) = v1127;
  swift_retain();
  *(void *)(v471 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v471;
  specialized Array._endMutation()();
  v468(v462, v1121, v1116);
  v1122(v423, v1126, v1120);
  uint64_t v472 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v408 + 656) = v426;
  *(void *)(v408 + 664) = v1123;
  *(void *)(v408 + 632) = v472;
  Group.init(title:footer:_:)();
  if (qword_100E62A98 != -1) {
    swift_once();
  }
  v473 = (uint64_t *)qword_100F52360;
  uint64_t v474 = swift_allocObject();
  *(_OWORD *)(v474 + 16) = v1080;
  uint64_t v475 = qword_100E62A78;
  unint64_t v1073 = (unint64_t)v473;
  swift_retain();
  if (v475 != -1) {
    swift_once();
  }
  uint64_t v476 = swift_allocObject();
  *(_OWORD *)(v476 + 16) = v1127;
  swift_retain();
  *(void *)(v476 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v476;
  specialized Array._endMutation()();
  uint64_t v477 = v1121;
  uint64_t v478 = v1116;
  ((void (*)(char *, void, uint64_t))v1125)(v1112, v1121, v1116);
  uint64_t v479 = v1126;
  uint64_t v480 = v1120;
  v1122(v423, v1126, v1120);
  v481 = v1115;
  uint64_t v482 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v483 = v1123;
  *(void *)(v474 + 56) = v481;
  *(void *)(v474 + 64) = v483;
  *(void *)(v474 + 32) = v482;
  if (qword_100E62A80 != -1) {
    swift_once();
  }
  v1036 = (uint64_t *)&v1084[v1105];
  uint64_t v484 = swift_allocObject();
  *(_OWORD *)(v484 + 16) = v1127;
  swift_retain();
  *(void *)(v484 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v484;
  specialized Array._endMutation()();
  ((void (*)(char *, uint64_t, uint64_t))v1125)(v1112, v477, v478);
  v1122(v423, v479, v480);
  uint64_t v485 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v486 = v1123;
  *(void *)(v474 + 96) = v481;
  *(void *)(v474 + 104) = v486;
  *(void *)(v474 + 72) = v485;
  uint64_t v487 = v478;
  uint64_t v488 = v479;
  if (qword_100E62A88 != -1) {
    swift_once();
  }
  v1037 = v1108 + 49;
  uint64_t v489 = swift_allocObject();
  *(_OWORD *)(v489 + 16) = v1127;
  swift_retain();
  *(void *)(v489 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v489;
  specialized Array._endMutation()();
  ((void (*)(char *, void, uint64_t))v1125)(v1112, v1121, v487);
  v1122(v423, v479, v480);
  uint64_t v490 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v491 = v1123;
  *(void *)(v474 + 136) = v481;
  *(void *)(v474 + 144) = v491;
  *(void *)(v474 + 112) = v490;
  if (qword_100E62A90 != -1) {
    swift_once();
  }
  v1060 = (char *)(4 * v1105);
  uint64_t v492 = swift_allocObject();
  *(_OWORD *)(v492 + 16) = v1127;
  swift_retain();
  *(void *)(v492 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v492;
  specialized Array._endMutation()();
  ((void (*)(char *, void, uint64_t))v1125)(v1112, v1121, v487);
  v1122(v423, v479, v480);
  uint64_t v493 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v494 = v1123;
  *(void *)(v474 + 176) = v481;
  *(void *)(v474 + 184) = v494;
  *(void *)(v474 + 152) = v493;
  v1035 = (char *)0xD000000000000012;
  Group.init(title:footer:group:_:)();
  uint64_t v495 = swift_allocObject();
  *(_OWORD *)(v495 + 16) = v1111;
  if (qword_100E62A70 != -1) {
    swift_once();
  }
  uint64_t v496 = swift_allocObject();
  *(_OWORD *)(v496 + 16) = v1127;
  swift_retain();
  *(void *)(v496 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v496;
  specialized Array._endMutation()();
  v497 = v1112;
  ((void (*)(char *, void, uint64_t))v1125)(v1112, v1121, v487);
  v1122(v423, v488, v480);
  v498 = v1115;
  uint64_t v499 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v500 = v1123;
  *(void *)(v495 + 56) = v498;
  *(void *)(v495 + 64) = v500;
  *(void *)(v495 + 32) = v499;
  Group.init(title:footer:_:)();
  v501 = v1108;
  v1108[52] = v1109;
  v501[53] = &protocol witness table for Page;
  v502 = v501;
  sub_100170694(v1037);
  Page.init(title:_:)();
  v1036 = v502 + 54;
  uint64_t v503 = v1107;
  uint64_t v504 = swift_allocObject();
  v1037 = (uint64_t *)v504;
  *(_OWORD *)(v504 + 16) = v1081;
  unint64_t v1073 = v504 + v503;
  uint64_t v505 = swift_allocObject();
  *(_OWORD *)(v505 + 16) = v1018;
  static Settings.Maps.disableMetadataCaching.getter();
  uint64_t v506 = swift_allocObject();
  *(_OWORD *)(v506 + 16) = v1127;
  *(void *)(v506 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v506;
  specialized Array._endMutation()();
  ((void (*)(char *, void, uint64_t))v1125)(v497, v1121, v1116);
  uint64_t v507 = v1126;
  v1122(v423, v1126, v1120);
  v508 = v1115;
  uint64_t v509 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v510 = v1123;
  *(void *)(v505 + 56) = v508;
  *(void *)(v505 + 64) = v510;
  *(void *)(v505 + 32) = v509;
  uint64_t v511 = sub_10017DF08(&qword_100E805E8);
  static Settings.Maps.source.getter();
  uint64_t v512 = swift_allocObject();
  *(_OWORD *)(v512 + 16) = v1127;
  *(void *)(v512 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v512;
  specialized Array._endMutation()();
  (*(void (**)(char *, uint64_t, uint64_t))(v1038 + 104))(v1040, v507, v1039);
  sub_10058BC24(&qword_100E805F0, (void (*)(uint64_t))&type metadata accessor for WeatherMapOverlayServiceSource);
  uint64_t v513 = Item<>.init(_:label:resetBehavior:actions:)();
  *(void *)(v505 + 96) = v511;
  *(void *)(v505 + 104) = sub_10058BC6C(&qword_100E805F8, &qword_100E805E8);
  *(void *)(v505 + 72) = v513;
  uint64_t v514 = sub_10017DF08(&qword_100E80600);
  static Settings.Maps.cdn.getter();
  uint64_t v515 = swift_allocObject();
  *(_OWORD *)(v515 + 16) = v1127;
  *(void *)(v515 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v515;
  specialized Array._endMutation()();
  (*(void (**)(char *, uint64_t, uint64_t))(v1041 + 104))(v1072, v507, v1059);
  sub_10058BC24(&qword_100E80608, (void (*)(uint64_t))&type metadata accessor for WeatherMapOverlayServiceCDN);
  uint64_t v1041 = 0xD00000000000001BLL;
  uint64_t v516 = Item<>.init(_:label:resetBehavior:actions:)();
  *(void *)(v505 + 136) = v514;
  *(void *)(v505 + 144) = sub_10058BC6C(&qword_100E80610, &qword_100E80600);
  *(void *)(v505 + 112) = v516;
  v1083 = (char *)static Settings.Maps.useMergedPrecipitation.getter();
  uint64_t v517 = swift_allocObject();
  *(_OWORD *)(v517 + 16) = v1127;
  *(void *)(v517 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v517;
  specialized Array._endMutation()();
  uint64_t v518 = v1121;
  uint64_t v519 = v507;
  uint64_t v520 = v1116;
  v521 = (void (*)(char *, uint64_t, uint64_t))v1125;
  ((void (*)(char *, void, uint64_t))v1125)(v1112, v1121, v1116);
  v522 = v1114;
  v523 = v1122;
  v1122(v1114, v519, v1120);
  v1084 = (char *)0xD000000000000014;
  v524 = v1115;
  uint64_t v525 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v526 = v1123;
  *(void *)(v505 + 176) = v524;
  *(void *)(v505 + 184) = v526;
  *(void *)(v505 + 152) = v525;
  v1083 = (char *)static Settings.Maps.forceSeparateRadarEndpoints.getter();
  uint64_t v527 = swift_allocObject();
  *(_OWORD *)(v527 + 16) = v1127;
  *(void *)(v527 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v527;
  specialized Array._endMutation()();
  v528 = v1112;
  v521(v1112, v518, v520);
  uint64_t v529 = v1126;
  v523(v522, v1126, v1120);
  v530 = v528;
  v531 = v1115;
  uint64_t v532 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v505 + 216) = v531;
  *(void *)(v505 + 224) = v526;
  *(void *)(v505 + 192) = v532;
  static Settings.Maps.interactiveMapRefreshIntervalMinutes.getter();
  uint64_t v533 = enum case for Item.RangeControlType.Precision.integer<A>(_:);
  LODWORD(v1034) = enum case for Item.RangeControlType.Precision.integer<A>(_:);
  uint64_t v1033 = sub_10017DF08(&qword_100E80618);
  uint64_t v534 = *(void *)(v1033 - 8);
  uint64_t v1075 = *(void *)(v534 + 104);
  uint64_t v1038 = v534 + 104;
  v535 = v1076;
  ((void (*)(uint64_t *, uint64_t, uint64_t))v1075)(v1076, v533, v1033);
  LODWORD(v1083) = enum case for Item.RangeControlType.slider<A>(_:);
  v536 = *(char **)(v1095 + 104);
  v1095 += 104;
  v1072 = v536;
  ((void (*)(uint64_t *))v536)(v535);
  ((void (*)(uint64_t *, uint64_t, void))v1097)(v1093, v529, v1099);
  uint64_t v537 = v1092;
  uint64_t v538 = Item<>.init(_:label:resetBehavior:type:)();
  uint64_t v539 = v1091;
  *(void *)(v505 + 256) = v537;
  *(void *)(v505 + 264) = v539;
  *(void *)(v505 + 232) = v538;
  static Settings.Maps.showDebugConsole.getter();
  uint64_t v540 = swift_allocObject();
  *(_OWORD *)(v540 + 16) = v1127;
  *(void *)(v540 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v540;
  specialized Array._endMutation()();
  v541 = v530;
  v542 = (void (*)(char *, void, uint64_t))v1125;
  ((void (*)(char *, void, uint64_t))v1125)(v541, v1121, v1116);
  v543 = v1122;
  v1122(v1114, v529, v1120);
  v544 = v1115;
  uint64_t v545 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v546 = v1123;
  *(void *)(v505 + 296) = v544;
  *(void *)(v505 + 304) = v546;
  *(void *)(v505 + 272) = v545;
  static Settings.Maps.resetLocalStoragePreset.getter();
  uint64_t v547 = type metadata accessor for PresetItem();
  swift_allocObject();
  v1040 = (char *)0xD000000000000015;
  uint64_t v548 = PresetItem.init(_:label:actions:)();
  *(void *)(v505 + 336) = v547;
  *(void *)(v505 + 344) = &protocol witness table for PresetItem;
  *(void *)(v505 + 312) = v548;
  v549 = (uint64_t *)v1073;
  Group.init(title:footer:_:)();
  v1035 = (char *)v549 + v1105;
  uint64_t v550 = swift_allocObject();
  *(_OWORD *)(v550 + 16) = v1104;
  static Settings.Maps.disableBlending.getter();
  uint64_t v551 = swift_allocObject();
  *(_OWORD *)(v551 + 16) = v1127;
  *(void *)(v551 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v551;
  specialized Array._endMutation()();
  v542(v1112, v1121, v1116);
  v543(v1114, v1126, v1120);
  v552 = v1115;
  uint64_t v553 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v554 = v1123;
  *(void *)(v550 + 56) = v552;
  *(void *)(v550 + 64) = v554;
  *(void *)(v550 + 32) = v553;
  static Settings.Maps.resetTransparentOverlaysPreset.getter();
  uint64_t v555 = swift_allocObject();
  *(_OWORD *)(v555 + 16) = v1127;
  *(void *)(v555 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v555;
  specialized Array._endMutation()();
  uint64_t v1039 = v547;
  swift_allocObject();
  uint64_t v1059 = 0xD000000000000017;
  uint64_t v556 = PresetItem.init(_:label:actions:)();
  *(void *)(v550 + 96) = v547;
  *(void *)(v550 + 104) = &protocol witness table for PresetItem;
  *(void *)(v550 + 72) = v556;
  Group.init(title:footer:_:)();
  v1032 = (char *)(v1073 + v1088);
  v1035 = (char *)static Settings.Maps.requests.getter();
  uint64_t v557 = swift_allocObject();
  *(_OWORD *)(v557 + 16) = v1104;
  static Settings.Maps.Requests.maxRequestConcurrency.getter();
  v558 = v1076;
  uint64_t v559 = v1034;
  uint64_t v560 = v1033;
  ((void (*)(uint64_t *, void, uint64_t))v1075)(v1076, v1034, v1033);
  uint64_t v561 = v1083;
  ((void (*)(uint64_t *, void, uint64_t))v1072)(v558, v1083, v1079);
  v562 = v1093;
  uint64_t v563 = v1126;
  ((void (*)(uint64_t *, void, void))v1097)(v1093, v1126, v1099);
  uint64_t v564 = v1092;
  uint64_t v565 = Item<>.init(_:label:resetBehavior:type:)();
  uint64_t v566 = v1091;
  *(void *)(v557 + 56) = v564;
  *(void *)(v557 + 64) = v566;
  *(void *)(v557 + 32) = v565;
  static Settings.Maps.Requests.implicationTimerMs.getter();
  ((void (*)(uint64_t *, uint64_t, uint64_t))v1075)(v558, v559, v560);
  ((void (*)(uint64_t *, uint64_t, uint64_t))v1072)(v558, v561, v1079);
  ((void (*)(uint64_t *, uint64_t, void))v1097)(v562, v563, v1099);
  uint64_t v567 = v1092;
  uint64_t v568 = Item<>.init(_:label:resetBehavior:type:)();
  uint64_t v569 = v1091;
  *(void *)(v557 + 96) = v567;
  *(void *)(v557 + 104) = v569;
  *(void *)(v557 + 72) = v568;
  Group.init(title:footer:group:_:)();
  v1035 = (char *)(v1073 + v1068);
  uint64_t v1038 = static Settings.Maps.overrides.getter();
  uint64_t v570 = swift_allocObject();
  *(_OWORD *)(v570 + 16) = xmmword_100C31F20;
  uint64_t v571 = sub_10017DF08(&qword_100E80620);
  uint64_t v572 = type metadata accessor for Settings.Maps.Overrides();
  static Settings.Maps.Overrides.defaultOverlayKind.getter();
  uint64_t v573 = swift_allocObject();
  *(_OWORD *)(v573 + 16) = v1127;
  *(void *)(v573 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v573;
  specialized Array._endMutation()();
  uint64_t v574 = v1126;
  (*(void (**)(char *, void, uint64_t))(v1069 + 104))(v1071, v1126, v1070);
  sub_10058BC24(&qword_100E80628, (void (*)(uint64_t))&type metadata accessor for MapsConfiguration.OverlayKind);
  uint64_t v575 = Item<>.init(_:label:resetBehavior:actions:)();
  *(void *)(v570 + 56) = v571;
  *(void *)(v570 + 64) = sub_10058BC6C(&qword_100E80630, &qword_100E80620);
  *(void *)(v570 + 32) = v575;
  static Settings.Maps.Overrides.disableWindOverlay.getter();
  uint64_t v576 = swift_allocObject();
  *(_OWORD *)(v576 + 16) = v1127;
  *(void *)(v576 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v576;
  specialized Array._endMutation()();
  ((void (*)(char *, uint64_t, uint64_t *))v1096)(v1087, v574, v1103);
  uint64_t v577 = v1086;
  uint64_t v578 = Item<>.init(_:label:resetBehavior:actions:)();
  v579 = v1100;
  *(void *)(v570 + 96) = v577;
  *(void *)(v570 + 104) = v579;
  *(void *)(v570 + 72) = v578;
  uint64_t v1095 = sub_10017DF08(&qword_100E80638);
  v1072 = (char *)v572;
  static Settings.Maps.Overrides.airQualityZoomLevel.getter();
  v580 = v1042;
  void *v1042 = 1;
  uint64_t v581 = enum case for Item.RangeControlType.Precision.fraction<A>(_:);
  uint64_t v582 = sub_10017DF08(&qword_100E80640);
  uint64_t v583 = *(void *)(v582 - 8);
  v1076 = *(uint64_t **)(v583 + 104);
  uint64_t v1069 = v583 + 104;
  v1071 = (char *)v582;
  ((void (*)(void *, uint64_t, uint64_t))v1076)(v580, v581, v582);
  uint64_t v1075 = *(void *)(v1077 + 104);
  v1077 += 104;
  uint64_t v584 = v1083;
  ((void (*)(void *, void, uint64_t))v1075)(v580, v1083, v1082);
  v1084 = *(char **)(v1090 + 104);
  v1090 += 104;
  ((void (*)(char *, void, uint64_t))v1084)(v1078, v1126, v1094);
  uint64_t v585 = v1095;
  uint64_t v586 = Item<>.init(_:label:resetBehavior:type:)();
  *(void *)(v570 + 136) = v585;
  uint64_t v1079 = sub_10058BC6C(&qword_100E80648, &qword_100E80638);
  *(void *)(v570 + 144) = v1079;
  *(void *)(v570 + 112) = v586;
  uint64_t v1034 = static Settings.Maps.Overrides.precipitationForecastZoomLevel.getter();
  void *v580 = 1;
  LODWORD(v1070) = v581;
  v587 = v1076;
  ((void (*)(void *, uint64_t, uint64_t))v1076)(v580, v581, v582);
  uint64_t v588 = v1082;
  v589 = (void (*)(void *, void, uint64_t))v1075;
  ((void (*)(void *, uint64_t, uint64_t))v1075)(v580, v584, v1082);
  uint64_t v590 = v1126;
  ((void (*)(char *, void, uint64_t))v1084)(v1078, v1126, v1094);
  uint64_t v591 = v1095;
  uint64_t v592 = Item<>.init(_:label:resetBehavior:type:)();
  uint64_t v593 = v1079;
  *(void *)(v570 + 176) = v591;
  *(void *)(v570 + 184) = v593;
  *(void *)(v570 + 152) = v592;
  static Settings.Maps.Overrides.precipitationForecastRainsInNextHourZoomLevel.getter();
  void *v580 = 1;
  uint64_t v594 = v581;
  v595 = v1071;
  ((void (*)(void *, uint64_t, char *))v587)(v580, v594, v1071);
  uint64_t v596 = v1083;
  v589(v580, v1083, v588);
  v597 = v1078;
  ((void (*)(char *, uint64_t, uint64_t))v1084)(v1078, v590, v1094);
  uint64_t v598 = v1095;
  uint64_t v599 = Item<>.init(_:label:resetBehavior:type:)();
  uint64_t v600 = v1079;
  *(void *)(v570 + 216) = v598;
  *(void *)(v570 + 224) = v600;
  *(void *)(v570 + 192) = v599;
  static Settings.Maps.Overrides.precipitationRadarZoomLevel.getter();
  void *v580 = 1;
  uint64_t v601 = v1070;
  ((void (*)(void *, void, char *))v1076)(v580, v1070, v595);
  ((void (*)(void *, uint64_t, uint64_t))v1075)(v580, v596, v1082);
  v602 = v1084;
  ((void (*)(char *, void, uint64_t))v1084)(v597, v1126, v1094);
  uint64_t v603 = v1095;
  uint64_t v604 = Item<>.init(_:label:resetBehavior:type:)();
  uint64_t v605 = v1079;
  *(void *)(v570 + 256) = v603;
  *(void *)(v570 + 264) = v605;
  *(void *)(v570 + 232) = v604;
  static Settings.Maps.Overrides.precipitationRadarIsRainingZoomLevel.getter();
  void *v580 = 1;
  uint64_t v606 = v601;
  v607 = v1071;
  ((void (*)(void *, uint64_t, char *))v1076)(v580, v606, v1071);
  ((void (*)(void *, void, uint64_t))v1075)(v580, v1083, v1082);
  uint64_t v608 = v1126;
  ((void (*)(char *, void, uint64_t))v602)(v597, v1126, v1094);
  uint64_t v609 = v1095;
  uint64_t v610 = Item<>.init(_:label:resetBehavior:type:)();
  *(void *)(v570 + 296) = v609;
  *(void *)(v570 + 304) = v605;
  *(void *)(v570 + 272) = v610;
  uint64_t v1041 = static Settings.Maps.Overrides.radarZoomLevelThreshold.getter();
  void *v580 = 1;
  v611 = v607;
  v612 = v1076;
  ((void (*)(void *, void, char *))v1076)(v580, v1070, v611);
  uint64_t v613 = v1082;
  ((void (*)(void *, void, uint64_t))v1075)(v580, v1083, v1082);
  v614 = v597;
  v615 = v597;
  uint64_t v616 = v1094;
  ((void (*)(char *, uint64_t, uint64_t))v1084)(v615, v608, v1094);
  v617 = v614;
  uint64_t v618 = v1095;
  uint64_t v619 = Item<>.init(_:label:resetBehavior:type:)();
  uint64_t v620 = v1079;
  *(void *)(v570 + 336) = v618;
  *(void *)(v570 + 344) = v620;
  *(void *)(v570 + 312) = v619;
  static Settings.Maps.Overrides.temperatureZoomLevel.getter();
  void *v580 = 1;
  ((void (*)(void *, void, char *))v612)(v580, v1070, v1071);
  v621 = (void (*)(void *, void, uint64_t))v1075;
  ((void (*)(void *, void, uint64_t))v1075)(v580, v1083, v613);
  v622 = v617;
  v623 = v617;
  uint64_t v624 = v1126;
  uint64_t v625 = v616;
  v626 = v1084;
  ((void (*)(char *, void, uint64_t))v1084)(v623, v1126, v625);
  v627 = v622;
  uint64_t v628 = v1095;
  uint64_t v629 = Item<>.init(_:label:resetBehavior:type:)();
  *(void *)(v570 + 376) = v628;
  *(void *)(v570 + 384) = v620;
  *(void *)(v570 + 352) = v629;
  static Settings.Maps.Overrides.windZoomLevel.getter();
  void *v580 = 1;
  ((void (*)(void *, void, char *))v1076)(v580, v1070, v1071);
  v621(v580, v1083, v1082);
  ((void (*)(char *, uint64_t, uint64_t))v626)(v627, v624, v1094);
  v630 = v1114;
  uint64_t v631 = v1095;
  uint64_t v632 = Item<>.init(_:label:resetBehavior:type:)();
  *(void *)(v570 + 416) = v631;
  *(void *)(v570 + 424) = v620;
  *(void *)(v570 + 392) = v632;
  static Settings.Maps.resetZoomLevelsPreset.getter();
  uint64_t v633 = v1039;
  swift_allocObject();
  uint64_t v634 = PresetItem.init(_:label:actions:)();
  *(void *)(v570 + 456) = v633;
  *(void *)(v570 + 464) = &protocol witness table for PresetItem;
  *(void *)(v570 + 432) = v634;
  Group.init(title:footer:group:_:)();
  v1083 = &v1060[v1073];
  uint64_t v635 = swift_allocObject();
  *(_OWORD *)(v635 + 16) = v1104;
  static Settings.Maps.disableMapLocationAccessibilityModels.getter();
  uint64_t v636 = swift_allocObject();
  *(_OWORD *)(v636 + 16) = v1127;
  *(void *)(v636 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v636;
  specialized Array._endMutation()();
  v637 = v1112;
  uint64_t v638 = v1121;
  uint64_t v639 = v1116;
  v640 = (void (*)(char *, uint64_t, uint64_t))v1125;
  ((void (*)(char *, void, uint64_t))v1125)(v1112, v1121, v1116);
  v1122(v630, v1126, v1120);
  v641 = v637;
  v642 = v1115;
  uint64_t v643 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v644 = v1123;
  *(void *)(v635 + 56) = v642;
  *(void *)(v635 + 64) = v644;
  *(void *)(v635 + 32) = v643;
  uint64_t v1082 = static Settings.Maps.disableMapOverlaySonification.getter();
  uint64_t v645 = swift_allocObject();
  *(_OWORD *)(v645 + 16) = v1127;
  *(void *)(v645 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v645;
  specialized Array._endMutation()();
  v640(v641, v638, v639);
  v646 = v1114;
  v1122(v1114, v1126, v1120);
  uint64_t v647 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v648 = v1123;
  *(void *)(v635 + 96) = v642;
  *(void *)(v635 + 104) = v648;
  *(void *)(v635 + 72) = v647;
  Group.init(title:footer:_:)();
  v649 = v1108;
  v1108[57] = v1109;
  v649[58] = &protocol witness table for Page;
  sub_100170694(v1036);
  Page.init(title:_:)();
  uint64_t v650 = swift_allocObject();
  *(_OWORD *)(v650 + 16) = v1104;
  uint64_t v651 = swift_allocObject();
  *(_OWORD *)(v651 + 16) = v1089;
  if (qword_100E62720 != -1) {
    swift_once();
  }
  uint64_t v1082 = v650;
  v1083 = (char *)(v650 + v1107);
  uint64_t v652 = swift_allocObject();
  *(_OWORD *)(v652 + 16) = v1127;
  swift_retain();
  *(void *)(v652 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v652;
  specialized Array._endMutation()();
  ((void (*)(char *, void, uint64_t))v1125)(v641, v1121, v639);
  uint64_t v653 = v1126;
  v1122(v646, v1126, v1120);
  v654 = v1115;
  uint64_t v655 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v656 = v1123;
  *(void *)(v651 + 56) = v654;
  *(void *)(v651 + 64) = v656;
  *(void *)(v651 + 32) = v655;
  if (qword_100E62728 != -1) {
    swift_once();
  }
  uint64_t v657 = swift_allocObject();
  *(_OWORD *)(v657 + 16) = v1127;
  swift_retain();
  *(void *)(v657 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v657;
  specialized Array._endMutation()();
  ((void (*)(char *, void, uint64_t))v1125)(v641, v1121, v639);
  ((void (*)(uint64_t *, uint64_t, void))v1097)(v1093, v653, v1099);
  uint64_t v658 = v1092;
  uint64_t v659 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v660 = v1091;
  *(void *)(v651 + 96) = v658;
  *(void *)(v651 + 104) = v660;
  *(void *)(v651 + 72) = v659;
  if (qword_100E62730 != -1) {
    swift_once();
  }
  ((void (*)(char *, void, uint64_t))v1125)(v641, v1121, v639);
  v1122(v646, v653, v1120);
  swift_retain();
  v661 = v1115;
  uint64_t v662 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v663 = v1123;
  *(void *)(v651 + 136) = v661;
  *(void *)(v651 + 144) = v663;
  *(void *)(v651 + 112) = v662;
  Group.init(title:footer:_:)();
  if (qword_100E62718 != -1) {
    swift_once();
  }
  uint64_t v664 = qword_100F51D18;
  uint64_t v665 = swift_allocObject();
  *(_OWORD *)(v665 + 16) = xmmword_100C45510;
  uint64_t v666 = qword_100E626A0;
  uint64_t v1077 = v664;
  swift_retain();
  if (v666 != -1) {
    swift_once();
  }
  uint64_t v667 = swift_allocObject();
  *(_OWORD *)(v667 + 16) = v1127;
  uint64_t v668 = qword_100E62B80;
  swift_retain();
  if (v668 != -1) {
    swift_once();
  }
  *(void *)(v667 + 32) = qword_100F52448;
  uint64_t v1128 = v667;
  specialized Array._endMutation()();
  ((void (*)(char *, void, uint64_t))v1125)(v641, v1121, v639);
  v1122(v646, v1126, v1120);
  swift_retain();
  v669 = v1115;
  uint64_t v670 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v671 = v1123;
  *(void *)(v665 + 56) = v669;
  *(void *)(v665 + 64) = v671;
  *(void *)(v665 + 32) = v670;
  if (qword_100E626A8 != -1) {
    swift_once();
  }
  uint64_t v672 = swift_allocObject();
  *(_OWORD *)(v672 + 16) = v1127;
  *(void *)(v672 + 32) = qword_100F52448;
  uint64_t v1128 = v672;
  specialized Array._endMutation()();
  ((void (*)(char *, void, uint64_t))v1125)(v641, v1121, v639);
  v1122(v646, v1126, v1120);
  swift_retain();
  swift_retain();
  uint64_t v673 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v674 = v1123;
  *(void *)(v665 + 96) = v669;
  *(void *)(v665 + 104) = v674;
  *(void *)(v665 + 72) = v673;
  if (qword_100E626B0 != -1) {
    swift_once();
  }
  uint64_t v675 = swift_allocObject();
  *(_OWORD *)(v675 + 16) = v1127;
  *(void *)(v675 + 32) = qword_100F52448;
  uint64_t v1128 = v675;
  specialized Array._endMutation()();
  ((void (*)(char *, void, uint64_t))v1125)(v641, v1121, v639);
  v1122(v646, v1126, v1120);
  swift_retain();
  swift_retain();
  uint64_t v676 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v677 = v1123;
  *(void *)(v665 + 136) = v669;
  *(void *)(v665 + 144) = v677;
  *(void *)(v665 + 112) = v676;
  if (qword_100E626B8 != -1) {
    swift_once();
  }
  uint64_t v678 = swift_allocObject();
  *(_OWORD *)(v678 + 16) = v1127;
  *(void *)(v678 + 32) = qword_100F52448;
  uint64_t v1128 = v678;
  specialized Array._endMutation()();
  ((void (*)(char *, void, uint64_t))v1125)(v641, v1121, v639);
  v1122(v646, v1126, v1120);
  swift_retain();
  swift_retain();
  uint64_t v679 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v680 = v1123;
  *(void *)(v665 + 176) = v669;
  *(void *)(v665 + 184) = v680;
  *(void *)(v665 + 152) = v679;
  if (qword_100E626C0 != -1) {
    swift_once();
  }
  uint64_t v681 = swift_allocObject();
  *(_OWORD *)(v681 + 16) = v1127;
  *(void *)(v681 + 32) = qword_100F52448;
  uint64_t v1128 = v681;
  specialized Array._endMutation()();
  ((void (*)(char *, void, uint64_t))v1125)(v641, v1121, v639);
  v1122(v646, v1126, v1120);
  swift_retain();
  swift_retain();
  uint64_t v682 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v683 = v1123;
  *(void *)(v665 + 216) = v669;
  *(void *)(v665 + 224) = v683;
  *(void *)(v665 + 192) = v682;
  if (qword_100E626C8 != -1) {
    swift_once();
  }
  uint64_t v684 = swift_allocObject();
  *(_OWORD *)(v684 + 16) = v1127;
  *(void *)(v684 + 32) = qword_100F52448;
  uint64_t v1128 = v684;
  specialized Array._endMutation()();
  ((void (*)(char *, void, uint64_t))v1125)(v641, v1121, v639);
  v1122(v646, v1126, v1120);
  swift_retain();
  swift_retain();
  uint64_t v685 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v686 = v1123;
  *(void *)(v665 + 256) = v669;
  *(void *)(v665 + 264) = v686;
  *(void *)(v665 + 232) = v685;
  if (qword_100E626D0 != -1) {
    swift_once();
  }
  uint64_t v687 = swift_allocObject();
  *(_OWORD *)(v687 + 16) = v1127;
  *(void *)(v687 + 32) = qword_100F52448;
  uint64_t v1128 = v687;
  specialized Array._endMutation()();
  ((void (*)(char *, void, uint64_t))v1125)(v641, v1121, v639);
  v1122(v646, v1126, v1120);
  swift_retain();
  swift_retain();
  uint64_t v688 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v689 = v1123;
  *(void *)(v665 + 296) = v669;
  *(void *)(v665 + 304) = v689;
  *(void *)(v665 + 272) = v688;
  if (qword_100E626D8 != -1) {
    swift_once();
  }
  uint64_t v690 = swift_allocObject();
  *(_OWORD *)(v690 + 16) = v1127;
  *(void *)(v690 + 32) = qword_100F52448;
  uint64_t v1128 = v690;
  specialized Array._endMutation()();
  ((void (*)(char *, void, uint64_t))v1125)(v641, v1121, v639);
  v1122(v646, v1126, v1120);
  swift_retain();
  swift_retain();
  uint64_t v691 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v692 = v1123;
  *(void *)(v665 + 336) = v669;
  *(void *)(v665 + 344) = v692;
  *(void *)(v665 + 312) = v691;
  if (qword_100E626E8 != -1) {
    swift_once();
  }
  uint64_t v693 = swift_allocObject();
  *(_OWORD *)(v693 + 16) = v1127;
  *(void *)(v693 + 32) = qword_100F52448;
  uint64_t v1128 = v693;
  specialized Array._endMutation()();
  ((void (*)(char *, void, uint64_t))v1125)(v641, v1121, v639);
  v1122(v646, v1126, v1120);
  swift_retain();
  swift_retain();
  uint64_t v694 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v695 = v1123;
  *(void *)(v665 + 376) = v669;
  *(void *)(v665 + 384) = v695;
  *(void *)(v665 + 352) = v694;
  if (qword_100E626E0 != -1) {
    swift_once();
  }
  uint64_t v696 = swift_allocObject();
  *(_OWORD *)(v696 + 16) = v1127;
  *(void *)(v696 + 32) = qword_100F52448;
  uint64_t v1128 = v696;
  specialized Array._endMutation()();
  ((void (*)(char *, void, uint64_t))v1125)(v641, v1121, v639);
  v1122(v646, v1126, v1120);
  swift_retain();
  swift_retain();
  uint64_t v697 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v698 = v1123;
  *(void *)(v665 + 416) = v669;
  *(void *)(v665 + 424) = v698;
  *(void *)(v665 + 392) = v697;
  if (qword_100E626F0 != -1) {
    swift_once();
  }
  uint64_t v699 = swift_allocObject();
  *(_OWORD *)(v699 + 16) = v1127;
  *(void *)(v699 + 32) = qword_100F52448;
  uint64_t v1128 = v699;
  specialized Array._endMutation()();
  ((void (*)(char *, void, uint64_t))v1125)(v641, v1121, v639);
  v1122(v646, v1126, v1120);
  swift_retain();
  swift_retain();
  uint64_t v700 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v701 = v1123;
  *(void *)(v665 + 456) = v669;
  *(void *)(v665 + 464) = v701;
  *(void *)(v665 + 432) = v700;
  if (qword_100E626F8 != -1) {
    swift_once();
  }
  uint64_t v702 = swift_allocObject();
  *(_OWORD *)(v702 + 16) = v1127;
  *(void *)(v702 + 32) = qword_100F52448;
  uint64_t v1128 = v702;
  specialized Array._endMutation()();
  ((void (*)(char *, void, uint64_t))v1125)(v641, v1121, v639);
  v1122(v646, v1126, v1120);
  swift_retain();
  swift_retain();
  uint64_t v703 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v704 = v1123;
  *(void *)(v665 + 496) = v669;
  *(void *)(v665 + 504) = v704;
  *(void *)(v665 + 472) = v703;
  uint64_t v705 = v639;
  v706 = v641;
  if (qword_100E62700 != -1) {
    swift_once();
  }
  v1076 = v1108 + 59;
  v1083 += v1105;
  uint64_t v707 = swift_allocObject();
  *(_OWORD *)(v707 + 16) = v1127;
  *(void *)(v707 + 32) = qword_100F52448;
  uint64_t v1128 = v707;
  specialized Array._endMutation()();
  ((void (*)(char *, void, uint64_t))v1125)(v641, v1121, v705);
  v1122(v646, v1126, v1120);
  swift_retain();
  swift_retain();
  uint64_t v708 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v665 + 536) = v669;
  *(void *)(v665 + 544) = v1123;
  *(void *)(v665 + 512) = v708;
  if (qword_100E62708 != -1) {
    swift_once();
  }
  uint64_t v709 = swift_allocObject();
  *(_OWORD *)(v709 + 16) = v1127;
  *(void *)(v709 + 32) = qword_100F52448;
  uint64_t v1128 = v709;
  specialized Array._endMutation()();
  ((void (*)(char *, void, uint64_t))v1125)(v641, v1121, v705);
  v1122(v646, v1126, v1120);
  swift_retain();
  swift_retain();
  uint64_t v710 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v665 + 576) = v669;
  *(void *)(v665 + 584) = v1123;
  *(void *)(v665 + 552) = v710;
  if (qword_100E62710 != -1) {
    swift_once();
  }
  uint64_t v711 = swift_allocObject();
  *(_OWORD *)(v711 + 16) = v1127;
  *(void *)(v711 + 32) = qword_100F52448;
  uint64_t v1128 = v711;
  specialized Array._endMutation()();
  ((void (*)(char *, void, uint64_t))v1125)(v641, v1121, v705);
  v1122(v646, v1126, v1120);
  swift_retain();
  swift_retain();
  uint64_t v712 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v665 + 616) = v669;
  *(void *)(v665 + 624) = v1123;
  *(void *)(v665 + 592) = v712;
  Group.init(title:footer:group:_:)();
  v713 = v1108;
  v1108[62] = v1109;
  v713[63] = &protocol witness table for Page;
  sub_100170694(v1076);
  Page.init(title:_:)();
  v1083 = (char *)(v713 + 64);
  *(_OWORD *)(swift_allocObject() + 16) = v1111;
  uint64_t v714 = v1107;
  uint64_t v715 = swift_allocObject();
  *(_OWORD *)(v715 + 16) = v1104;
  if (qword_100E622A0 != -1) {
    swift_once();
  }
  ((void (*)(char *, void, uint64_t))v1125)(v706, v1121, v705);
  v1122(v646, v1126, v1120);
  swift_retain();
  uint64_t v716 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v717 = v1123;
  *(void *)(v715 + 56) = v669;
  *(void *)(v715 + 64) = v717;
  *(void *)(v715 + 32) = v716;
  if (qword_100E622A8 != -1) {
    swift_once();
  }
  ((void (*)(char *, void, uint64_t))v1125)(v706, v1121, v705);
  ((void (*)(uint64_t *, void, void))v1097)(v1093, v1126, v1099);
  swift_retain();
  uint64_t v718 = v1092;
  uint64_t v719 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v720 = v1091;
  *(void *)(v715 + 96) = v718;
  *(void *)(v715 + 104) = v720;
  *(void *)(v715 + 72) = v719;
  Group.init(title:footer:_:)();
  v721 = v1108;
  v1108[67] = v1109;
  v721[68] = &protocol witness table for Page;
  sub_100170694((uint64_t *)v1083);
  Page.init(title:_:)();
  uint64_t v722 = swift_allocObject();
  *(_OWORD *)(v722 + 16) = v1080;
  uint64_t v1097 = v722;
  v1101 = (uint64_t *)(v722 + v714);
  uint64_t v723 = swift_allocObject();
  *(_OWORD *)(v723 + 16) = v1111;
  v724 = v1087;
  uint64_t v725 = v1086;
  if (qword_100E624D8 != -1) {
    swift_once();
  }
  uint64_t v726 = swift_allocObject();
  *(_OWORD *)(v726 + 16) = v1127;
  swift_retain();
  *(void *)(v726 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v726;
  specialized Array._endMutation()();
  uint64_t v727 = v1126;
  ((void (*)(char *, void, uint64_t *))v1096)(v724, v1126, v1103);
  uint64_t v728 = Item<>.init(_:label:resetBehavior:actions:)();
  v729 = v1100;
  *(void *)(v723 + 56) = v725;
  *(void *)(v723 + 64) = v729;
  *(void *)(v723 + 32) = v728;
  Group.init(title:footer:_:)();
  uint64_t v730 = swift_allocObject();
  *(_OWORD *)(v730 + 16) = v1104;
  uint64_t v731 = sub_10017DF08(&qword_100E80650);
  if (qword_100E624C8 != -1) {
    swift_once();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v1043 + 104))(v1045, v727, v1044);
  sub_10058BBD8();
  swift_retain();
  *(void *)&long long v1099 = 0xD000000000000011;
  uint64_t v732 = Item<>.init(_:label:resetBehavior:actions:)();
  *(void *)(v730 + 56) = v731;
  *(void *)(v730 + 64) = sub_10058BC6C(&qword_100E80660, &qword_100E80650);
  *(void *)(v730 + 32) = v732;
  static Settings.StubData.includeNextHourPrecipitation.getter();
  ((void (*)(char *, void, uint64_t))v1125)(v1112, v1121, v1116);
  v1122(v646, v727, v1120);
  v733 = v1115;
  uint64_t v734 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v735 = v1123;
  *(void *)(v730 + 96) = v733;
  *(void *)(v730 + 104) = v735;
  *(void *)(v730 + 72) = v734;
  Group.init(title:footer:_:)();
  uint64_t v736 = swift_allocObject();
  *(_OWORD *)(v736 + 16) = v1111;
  if (qword_100E624E0 != -1) {
    swift_once();
  }
  uint64_t v737 = swift_allocObject();
  *(_OWORD *)(v737 + 16) = v1127;
  swift_retain();
  *(void *)(v737 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v737;
  specialized Array._endMutation()();
  v738 = v1087;
  ((void (*)(char *, uint64_t, uint64_t *))v1096)(v1087, v727, v1103);
  uint64_t v739 = v727;
  uint64_t v740 = v1086;
  uint64_t v741 = Item<>.init(_:label:resetBehavior:actions:)();
  v742 = v1100;
  *(void *)(v736 + 56) = v740;
  *(void *)(v736 + 64) = v742;
  *(void *)(v736 + 32) = v741;
  Group.init(title:footer:_:)();
  uint64_t v743 = swift_allocObject();
  long long v1099 = xmmword_100C349B0;
  *(_OWORD *)(v743 + 16) = xmmword_100C349B0;
  if (qword_100E624E8 != -1) {
    swift_once();
  }
  uint64_t v744 = swift_allocObject();
  *(_OWORD *)(v744 + 16) = v1127;
  swift_retain();
  *(void *)(v744 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v744;
  specialized Array._endMutation()();
  ((void (*)(char *, uint64_t, uint64_t *))v1096)(v738, v739, v1103);
  uint64_t v745 = Item<>.init(_:label:resetBehavior:actions:)();
  v746 = v1100;
  *(void *)(v743 + 56) = v740;
  *(void *)(v743 + 64) = v746;
  *(void *)(v743 + 32) = v745;
  if (qword_100E624F0 != -1) {
    swift_once();
  }
  uint64_t v747 = swift_allocObject();
  *(_OWORD *)(v747 + 16) = v1127;
  swift_retain();
  *(void *)(v747 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v747;
  specialized Array._endMutation()();
  v748 = (void (*)(char *, void, uint64_t *))v1096;
  ((void (*)(char *, uint64_t, uint64_t *))v1096)(v738, v739, v1103);
  uint64_t v749 = Item<>.init(_:label:resetBehavior:actions:)();
  v750 = v1100;
  *(void *)(v743 + 96) = v740;
  *(void *)(v743 + 104) = v750;
  *(void *)(v743 + 72) = v749;
  if (qword_100E624F8 != -1) {
    swift_once();
  }
  v1093 = v1108 + 69;
  v1101 = (uint64_t *)((char *)v1101 + v1068);
  uint64_t v751 = swift_allocObject();
  *(_OWORD *)(v751 + 16) = v1127;
  swift_retain();
  *(void *)(v751 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v751;
  specialized Array._endMutation()();
  v748(v738, v1126, v1103);
  uint64_t v752 = Item<>.init(_:label:resetBehavior:actions:)();
  v753 = v1100;
  *(void *)(v743 + 136) = v740;
  *(void *)(v743 + 144) = v753;
  *(void *)(v743 + 112) = v752;
  if (qword_100E62500 != -1) {
    swift_once();
  }
  uint64_t v754 = swift_allocObject();
  *(_OWORD *)(v754 + 16) = v1127;
  swift_retain();
  *(void *)(v754 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v754;
  specialized Array._endMutation()();
  v755 = v1103;
  v748(v738, v1126, v1103);
  uint64_t v756 = v1086;
  uint64_t v757 = Item<>.init(_:label:resetBehavior:actions:)();
  v758 = v1100;
  *(void *)(v743 + 176) = v756;
  *(void *)(v743 + 184) = v758;
  *(void *)(v743 + 152) = v757;
  uint64_t v1092 = static Settings.VFX.foregroundEffects.getter();
  uint64_t v759 = swift_allocObject();
  *(_OWORD *)(v759 + 16) = v1127;
  *(void *)(v759 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v759;
  specialized Array._endMutation()();
  v748(v738, v1126, v755);
  uint64_t v760 = Item<>.init(_:label:resetBehavior:actions:)();
  *(void *)(v743 + 216) = v756;
  *(void *)(v743 + 224) = v758;
  *(void *)(v743 + 192) = v760;
  if (qword_100E62508 != -1) {
    swift_once();
  }
  uint64_t v761 = swift_allocObject();
  *(_OWORD *)(v761 + 16) = v1127;
  swift_retain();
  *(void *)(v761 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v761;
  specialized Array._endMutation()();
  uint64_t v762 = v1126;
  ((void (*)(char *))v1096)(v738);
  uint64_t v763 = Item<>.init(_:label:resetBehavior:actions:)();
  v764 = v1100;
  *(void *)(v743 + 256) = v756;
  *(void *)(v743 + 264) = v764;
  *(void *)(v743 + 232) = v763;
  Group.init(title:footer:_:)();
  v765 = v1108;
  v1108[72] = v1109;
  v765[73] = &protocol witness table for Page;
  v766 = v765;
  sub_100170694(v1093);
  Page.init(title:_:)();
  v1102 = v766 + 74;
  uint64_t v767 = swift_allocObject();
  v1103 = (uint64_t *)v767;
  *(_OWORD *)(v767 + 16) = v1104;
  uint64_t v768 = v767 + v1107;
  uint64_t v769 = swift_allocObject();
  *(_OWORD *)(v769 + 16) = v1111;
  static Settings.Notifications.Precipitation.evaluate.getter();
  ((void (*)(char *, void, uint64_t))v1125)(v1112, v1121, v1116);
  v1122(v1114, v762, v1120);
  v770 = v1115;
  uint64_t v771 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v772 = v1123;
  *(void *)(v769 + 56) = v770;
  *(void *)(v769 + 64) = v772;
  *(void *)(v769 + 32) = v771;
  Group.init(title:footer:_:)();
  v1100 = (uint64_t *)(v768 + v1105);
  v1101 = (uint64_t *)static Settings.Notifications.Precipitation.overrides.getter();
  uint64_t v773 = swift_allocObject();
  *(_OWORD *)(v773 + 16) = v1081;
  uint64_t v774 = sub_10017DF08(&qword_100E80668);
  uint64_t v1097 = type metadata accessor for Settings.Notifications.Precipitation.Overrides();
  static Settings.Notifications.Precipitation.Overrides.location.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v1046 + 104))(v1048, v762, v1047);
  sub_10058BC24(&qword_100E80670, (void (*)(uint64_t))&type metadata accessor for Settings.Notifications.Precipitation.Overrides.Location);
  uint64_t v775 = Item<>.init(_:label:resetBehavior:actions:)();
  *(void *)(v773 + 56) = v774;
  *(void *)(v773 + 64) = sub_10058BC6C(&qword_100E80678, &qword_100E80668);
  *(void *)(v773 + 32) = v775;
  uint64_t v776 = sub_10017DF08(&qword_100E80680);
  static Settings.Notifications.Precipitation.Overrides.currentCondition.getter();
  v1096 = *(uint64_t **)(v1050 + 104);
  v777 = v1049;
  uint64_t v778 = v762;
  uint64_t v779 = v762;
  uint64_t v780 = v1051;
  ((void (*)(char *, uint64_t, uint64_t))v1096)(v1049, v778, v1051);
  sub_10058BC24(&qword_100E80688, (void (*)(uint64_t))&type metadata accessor for Settings.Notifications.Precipitation.Overrides.Conditions);
  uint64_t v781 = Item<>.init(_:label:resetBehavior:actions:)();
  *(void *)(v773 + 96) = v776;
  uint64_t v782 = sub_10058BC6C(&qword_100E80690, &qword_100E80680);
  *(void *)(v773 + 104) = v782;
  *(void *)(v773 + 72) = v781;
  static Settings.Notifications.Precipitation.Overrides.nextCondition.getter();
  ((void (*)(char *, uint64_t, uint64_t))v1096)(v777, v779, v780);
  uint64_t v783 = Item<>.init(_:label:resetBehavior:actions:)();
  *(void *)(v773 + 136) = v776;
  *(void *)(v773 + 144) = v782;
  *(void *)(v773 + 112) = v783;
  uint64_t v784 = sub_10017DF08(&qword_100E80698);
  static Settings.Notifications.Precipitation.Overrides.intensity.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v1052 + 104))(v1054, v779, v1053);
  sub_10058BC24(&qword_100E806A0, (void (*)(uint64_t))&type metadata accessor for Settings.Notifications.Precipitation.Overrides.Intensity);
  uint64_t v785 = Item<>.init(_:label:resetBehavior:actions:)();
  *(void *)(v773 + 176) = v784;
  *(void *)(v773 + 184) = sub_10058BC6C(&qword_100E806A8, &qword_100E80698);
  *(void *)(v773 + 152) = v785;
  uint64_t v786 = sub_10017DF08(&qword_100E806B0);
  static Settings.Notifications.Precipitation.Overrides.date.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v1055 + 104))(v1020, v779, v1056);
  sub_10058BC24(&qword_100E806B8, (void (*)(uint64_t))&type metadata accessor for Settings.Notifications.Precipitation.Overrides.EventDate);
  uint64_t v787 = Item<>.init(_:label:resetBehavior:actions:)();
  *(void *)(v773 + 216) = v786;
  *(void *)(v773 + 224) = sub_10058BC6C(&qword_100E806C0, &qword_100E806B0);
  *(void *)(v773 + 192) = v787;
  Group.init(title:footer:group:_:)();
  v788 = v1108;
  v1108[77] = v1109;
  v788[78] = &protocol witness table for Page;
  v789 = v788;
  sub_100170694(v1102);
  Page.init(title:_:)();
  v1103 = v789 + 79;
  uint64_t v790 = swift_allocObject();
  *(_OWORD *)(v790 + 16) = v1111;
  v1101 = (uint64_t *)v790;
  v1102 = (uint64_t *)(v790 + v1107);
  uint64_t v791 = swift_allocObject();
  *(_OWORD *)(v791 + 16) = v1104;
  if (qword_100E62418 != -1) {
    swift_once();
  }
  v792 = v1112;
  uint64_t v793 = v1121;
  uint64_t v794 = v1116;
  v795 = (void (*)(char *, uint64_t, uint64_t))v1125;
  ((void (*)(char *, void, uint64_t))v1125)(v1112, v1121, v1116);
  ((void (*)(char *, uint64_t, uint64_t))v1084)(v1078, v779, v1094);
  swift_retain();
  uint64_t v796 = v1095;
  uint64_t v797 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v798 = v1079;
  *(void *)(v791 + 56) = v796;
  *(void *)(v791 + 64) = v798;
  *(void *)(v791 + 32) = v797;
  if (qword_100E62420 != -1) {
    swift_once();
  }
  v795(v792, v793, v794);
  v799 = v1114;
  v1122(v1114, v779, v1120);
  swift_retain();
  v800 = v1115;
  uint64_t v801 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v802 = v1123;
  *(void *)(v791 + 96) = v800;
  *(void *)(v791 + 104) = v802;
  *(void *)(v791 + 72) = v801;
  Group.init(title:footer:_:)();
  v803 = v1108;
  v1108[82] = v1109;
  v803[83] = &protocol witness table for Page;
  v804 = v803;
  sub_100170694(v1103);
  Page.init(title:_:)();
  v1103 = v804 + 84;
  uint64_t v805 = swift_allocObject();
  *(void *)&long long v1104 = v805;
  *(_OWORD *)(v805 + 16) = v1111;
  v1102 = (uint64_t *)(v805 + v1107);
  uint64_t v806 = swift_allocObject();
  *(_OWORD *)(v806 + 16) = v1080;
  static Settings.Notifications.Severe.debugNotifications.getter();
  uint64_t v807 = v1121;
  v808 = (void (*)(char *, uint64_t, uint64_t))v1125;
  ((void (*)(char *, void, uint64_t))v1125)(v792, v1121, v794);
  v809 = v1122;
  v1122(v799, v779, v1120);
  v1101 = (uint64_t *)0xD00000000000001BLL;
  uint64_t v810 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v811 = v1123;
  *(void *)(v806 + 56) = v800;
  *(void *)(v806 + 64) = v811;
  *(void *)(v806 + 32) = v810;
  v1100 = (uint64_t *)static Settings.Notifications.Severe.useGlobalChannelMap.getter();
  v808(v792, v807, v1116);
  uint64_t v812 = v1126;
  v809(v799, v1126, v1120);
  v813 = v792;
  uint64_t v814 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v806 + 96) = v800;
  *(void *)(v806 + 104) = v811;
  *(void *)(v806 + 72) = v814;
  v1101 = (uint64_t *)static Settings.Notifications.Severe.filterIncomingEvents.getter();
  uint64_t v815 = swift_allocObject();
  *(_OWORD *)(v815 + 16) = v1127;
  *(void *)(v815 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v815;
  specialized Array._endMutation()();
  uint64_t v816 = v1121;
  v817 = (void (*)(char *, uint64_t, uint64_t))v1125;
  ((void (*)(char *, void, uint64_t))v1125)(v813, v1121, v1116);
  uint64_t v818 = v812;
  uint64_t v819 = v1120;
  v820 = v1122;
  v1122(v799, v818, v1120);
  v1100 = (uint64_t *)0xD000000000000016;
  uint64_t v821 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v822 = v1123;
  *(void *)(v806 + 136) = v800;
  *(void *)(v806 + 144) = v822;
  *(void *)(v806 + 112) = v821;
  static Settings.Notifications.Severe.simulateAlertUpdates.getter();
  v817(v813, v816, v1116);
  v820(v799, v1126, v819);
  v823 = v1108;
  v824 = v813;
  uint64_t v825 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v826 = v1123;
  *(void *)(v806 + 176) = v800;
  *(void *)(v806 + 184) = v826;
  *(void *)(v806 + 152) = v825;
  Group.init(title:footer:_:)();
  v823[87] = v1109;
  v823[88] = &protocol witness table for Page;
  sub_100170694(v1103);
  Page.init(title:_:)();
  *(_OWORD *)(swift_allocObject() + 16) = v1111;
  uint64_t v827 = swift_allocObject();
  *(_OWORD *)(v827 + 16) = v1111;
  if (qword_100E62B20 != -1) {
    swift_once();
  }
  ((void (*)(char *, void, uint64_t))v1125)(v813, v1121, v1116);
  uint64_t v828 = v1120;
  v1122(v1114, v1126, v1120);
  swift_retain();
  v829 = v1115;
  uint64_t v830 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v831 = v1123;
  *(void *)(v827 + 56) = v829;
  *(void *)(v827 + 64) = v831;
  *(void *)(v827 + 32) = v830;
  Group.init(title:footer:_:)();
  v823[92] = v1109;
  v823[93] = &protocol witness table for Page;
  sub_100170694(v823 + 89);
  Page.init(title:_:)();
  uint64_t v832 = swift_allocObject();
  *(_OWORD *)(v832 + 16) = v1089;
  uint64_t v833 = swift_allocObject();
  *(_OWORD *)(v833 + 16) = v1080;
  uint64_t v834 = v828;
  v835 = v824;
  if (qword_100E62618 != -1) {
    swift_once();
  }
  uint64_t v836 = swift_allocObject();
  *(_OWORD *)(v836 + 16) = v1127;
  swift_retain();
  *(void *)(v836 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v836;
  specialized Array._endMutation()();
  uint64_t v837 = v1116;
  ((void (*)(char *, void, uint64_t))v1125)(v835, v1121, v1116);
  v1122(v1114, v1126, v834);
  uint64_t v838 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v839 = v1123;
  *(void *)(v833 + 56) = v829;
  *(void *)(v833 + 64) = v839;
  *(void *)(v833 + 32) = v838;
  uint64_t v840 = v837;
  if (qword_100E62620 != -1) {
    swift_once();
  }
  v1103 = (uint64_t *)v832;
  *(void *)&long long v1104 = v832 + v1107;
  uint64_t v841 = swift_allocObject();
  *(_OWORD *)(v841 + 16) = v1127;
  swift_retain();
  *(void *)(v841 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v841;
  specialized Array._endMutation()();
  ((void (*)(char *, void, uint64_t))v1125)(v835, v1121, v837);
  v1122(v1114, v1126, v834);
  uint64_t v842 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v843 = v1123;
  *(void *)(v833 + 96) = v829;
  *(void *)(v833 + 104) = v843;
  *(void *)(v833 + 72) = v842;
  uint64_t v844 = v834;
  if (qword_100E62628 != -1) {
    swift_once();
  }
  uint64_t v845 = swift_allocObject();
  *(_OWORD *)(v845 + 16) = v1127;
  swift_retain();
  *(void *)(v845 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v845;
  specialized Array._endMutation()();
  ((void (*)(char *, void, uint64_t))v1125)(v835, v1121, v837);
  v1122(v1114, v1126, v834);
  uint64_t v846 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v847 = v1123;
  *(void *)(v833 + 136) = v829;
  *(void *)(v833 + 144) = v847;
  *(void *)(v833 + 112) = v846;
  if (qword_100E62630 != -1) {
    swift_once();
  }
  uint64_t v848 = swift_allocObject();
  *(_OWORD *)(v848 + 16) = v1127;
  swift_retain();
  *(void *)(v848 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v848;
  specialized Array._endMutation()();
  ((void (*)(char *, void, uint64_t))v1125)(v835, v1121, v837);
  v849 = v1114;
  v850 = v1122;
  v1122(v1114, v1126, v844);
  uint64_t v851 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v852 = v1123;
  *(void *)(v833 + 176) = v829;
  *(void *)(v833 + 184) = v852;
  *(void *)(v833 + 152) = v851;
  Group.init(title:footer:_:)();
  v853 = v850;
  if (qword_100E62638 != -1) {
    swift_once();
  }
  uint64_t v854 = v844;
  v855 = (uint64_t *)qword_100F51BF8;
  uint64_t v856 = swift_allocObject();
  *(_OWORD *)(v856 + 16) = v1099;
  uint64_t v857 = qword_100E625B8;
  v1102 = v855;
  swift_retain();
  if (v857 != -1) {
    swift_once();
  }
  uint64_t v858 = swift_allocObject();
  *(_OWORD *)(v858 + 16) = v1127;
  swift_retain();
  *(void *)(v858 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v858;
  specialized Array._endMutation()();
  uint64_t v859 = v840;
  v860 = (void (*)(char *, void, uint64_t))v1125;
  ((void (*)(char *, void, uint64_t))v1125)(v835, v1121, v859);
  v853(v849, v1126, v854);
  v861 = v849;
  v862 = v1115;
  uint64_t v863 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v864 = v1123;
  *(void *)(v856 + 56) = v862;
  *(void *)(v856 + 64) = v864;
  *(void *)(v856 + 32) = v863;
  if (qword_100E625C0 != -1) {
    swift_once();
  }
  uint64_t v865 = swift_allocObject();
  *(_OWORD *)(v865 + 16) = v1127;
  swift_retain();
  *(void *)(v865 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v865;
  specialized Array._endMutation()();
  v860(v835, v1121, v1116);
  v1122(v849, v1126, v1120);
  uint64_t v866 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v856 + 96) = v862;
  *(void *)(v856 + 104) = v864;
  *(void *)(v856 + 72) = v866;
  if (qword_100E625C8 != -1) {
    swift_once();
  }
  uint64_t v867 = swift_allocObject();
  *(_OWORD *)(v867 + 16) = v1127;
  swift_retain();
  *(void *)(v867 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v867;
  specialized Array._endMutation()();
  v860(v835, v1121, v1116);
  v1122(v849, v1126, v1120);
  uint64_t v868 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v856 + 136) = v862;
  *(void *)(v856 + 144) = v864;
  *(void *)(v856 + 112) = v868;
  v869 = v835;
  if (qword_100E625D0 != -1) {
    swift_once();
  }
  v1101 = (uint64_t *)(v1104 + v1105);
  uint64_t v870 = swift_allocObject();
  *(_OWORD *)(v870 + 16) = v1127;
  swift_retain();
  *(void *)(v870 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v870;
  specialized Array._endMutation()();
  ((void (*)(char *, void, uint64_t))v1125)(v869, v1121, v1116);
  uint64_t v871 = v1120;
  v1122(v861, v1126, v1120);
  uint64_t v872 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v873 = v1123;
  *(void *)(v856 + 176) = v862;
  *(void *)(v856 + 184) = v873;
  *(void *)(v856 + 152) = v872;
  if (qword_100E625D8 != -1) {
    swift_once();
  }
  uint64_t v874 = swift_allocObject();
  *(_OWORD *)(v874 + 16) = v1127;
  swift_retain();
  *(void *)(v874 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v874;
  specialized Array._endMutation()();
  uint64_t v875 = v1121;
  ((void (*)(char *, void, uint64_t))v1125)(v869, v1121, v1116);
  v1122(v861, v1126, v871);
  uint64_t v876 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v877 = v1123;
  *(void *)(v856 + 216) = v862;
  *(void *)(v856 + 224) = v877;
  *(void *)(v856 + 192) = v876;
  if (qword_100E625E0 != -1) {
    swift_once();
  }
  uint64_t v878 = swift_allocObject();
  *(_OWORD *)(v878 + 16) = v1127;
  swift_retain();
  *(void *)(v878 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v878;
  specialized Array._endMutation()();
  uint64_t v879 = v1116;
  ((void (*)(char *, uint64_t, uint64_t))v1125)(v869, v875, v1116);
  v1122(v861, v1126, v871);
  uint64_t v880 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v881 = v1123;
  *(void *)(v856 + 256) = v862;
  *(void *)(v856 + 264) = v881;
  *(void *)(v856 + 232) = v880;
  Group.init(title:footer:group:_:)();
  v882 = v869;
  if (qword_100E62640 != -1) {
    swift_once();
  }
  v883 = (uint64_t *)qword_100F51C00;
  uint64_t v884 = swift_allocObject();
  *(_OWORD *)(v884 + 16) = v1099;
  uint64_t v885 = qword_100E625E8;
  v1101 = v883;
  swift_retain();
  if (v885 != -1) {
    swift_once();
  }
  uint64_t v886 = swift_allocObject();
  *(_OWORD *)(v886 + 16) = v1127;
  swift_retain();
  *(void *)(v886 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v886;
  specialized Array._endMutation()();
  ((void (*)(char *, uint64_t, uint64_t))v1125)(v882, v875, v879);
  v887 = v1114;
  v1122(v1114, v1126, v871);
  v888 = v1115;
  uint64_t v889 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v890 = v1123;
  *(void *)(v884 + 56) = v888;
  *(void *)(v884 + 64) = v890;
  *(void *)(v884 + 32) = v889;
  if (qword_100E625F0 != -1) {
    swift_once();
  }
  uint64_t v891 = swift_allocObject();
  *(_OWORD *)(v891 + 16) = v1127;
  swift_retain();
  *(void *)(v891 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v891;
  specialized Array._endMutation()();
  ((void (*)(char *, uint64_t, uint64_t))v1125)(v882, v875, v1116);
  v1122(v887, v1126, v871);
  uint64_t v892 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v893 = v1123;
  *(void *)(v884 + 96) = v888;
  *(void *)(v884 + 104) = v893;
  *(void *)(v884 + 72) = v892;
  if (qword_100E625F8 != -1) {
    swift_once();
  }
  uint64_t v894 = swift_allocObject();
  *(_OWORD *)(v894 + 16) = v1127;
  swift_retain();
  *(void *)(v894 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v894;
  specialized Array._endMutation()();
  ((void (*)(char *, uint64_t, uint64_t))v1125)(v882, v875, v1116);
  v1122(v887, v1126, v871);
  uint64_t v895 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v896 = v1123;
  *(void *)(v884 + 136) = v888;
  *(void *)(v884 + 144) = v896;
  *(void *)(v884 + 112) = v895;
  if (qword_100E62600 != -1) {
    swift_once();
  }
  v1100 = v1108 + 94;
  *(void *)&long long v1104 = v1104 + v1088;
  uint64_t v897 = swift_allocObject();
  *(_OWORD *)(v897 + 16) = v1127;
  swift_retain();
  *(void *)(v897 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v897;
  specialized Array._endMutation()();
  ((void (*)(char *, uint64_t, uint64_t))v1125)(v1112, v875, v1116);
  v1122(v1114, v1126, v871);
  uint64_t v898 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v899 = v1123;
  *(void *)(v884 + 176) = v888;
  *(void *)(v884 + 184) = v899;
  *(void *)(v884 + 152) = v898;
  if (qword_100E62608 != -1) {
    swift_once();
  }
  uint64_t v900 = swift_allocObject();
  *(_OWORD *)(v900 + 16) = v1127;
  swift_retain();
  *(void *)(v900 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v900;
  specialized Array._endMutation()();
  ((void (*)(char *, void, uint64_t))v1125)(v1112, v1121, v1116);
  v901 = v1122;
  v1122(v1114, v1126, v871);
  uint64_t v902 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v903 = v1123;
  *(void *)(v884 + 216) = v888;
  *(void *)(v884 + 224) = v903;
  *(void *)(v884 + 192) = v902;
  if (qword_100E62610 != -1) {
    swift_once();
  }
  uint64_t v904 = swift_allocObject();
  *(_OWORD *)(v904 + 16) = v1127;
  swift_retain();
  *(void *)(v904 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v904;
  specialized Array._endMutation()();
  ((void (*)(char *, void, uint64_t))v1125)(v1112, v1121, v1116);
  v901(v1114, v1126, v871);
  v1102 = (uint64_t *)0xD000000000000012;
  uint64_t v905 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v906 = v1123;
  *(void *)(v884 + 256) = v888;
  *(void *)(v884 + 264) = v906;
  *(void *)(v884 + 232) = v905;
  Group.init(title:footer:group:_:)();
  v907 = v1108;
  v1108[97] = v1109;
  v907[98] = &protocol witness table for Page;
  v908 = v907;
  sub_100170694(v1100);
  Page.init(title:_:)();
  uint64_t v909 = v871;
  *(void *)&long long v1104 = v908 + 99;
  uint64_t v910 = swift_allocObject();
  *(_OWORD *)(v910 + 16) = v1111;
  v1103 = (uint64_t *)(v910 + v1107);
  uint64_t v911 = swift_allocObject();
  *(_OWORD *)(v911 + 16) = v1111;
  v1101 = (uint64_t *)static Settings.Beaufort.forceEnabled.getter();
  uint64_t v912 = swift_allocObject();
  *(_OWORD *)(v912 + 16) = v1127;
  *(void *)(v912 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v912;
  specialized Array._endMutation()();
  v913 = v1112;
  uint64_t v914 = v1121;
  uint64_t v915 = v1116;
  ((void (*)(char *, void, uint64_t))v1125)(v1112, v1121, v1116);
  v901(v1114, v1126, v909);
  v916 = v1115;
  uint64_t v917 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v918 = v1123;
  *(void *)(v911 + 56) = v916;
  *(void *)(v911 + 64) = v918;
  *(void *)(v911 + 32) = v917;
  Group.init(title:footer:_:)();
  v919 = v1108;
  v1108[102] = v1109;
  v919[103] = &protocol witness table for Page;
  sub_100170694((uint64_t *)v1104);
  Page.init(title:_:)();
  v1101 = v919 + 104;
  uint64_t v920 = swift_allocObject();
  v1103 = (uint64_t *)v920;
  *(_OWORD *)(v920 + 16) = v1089;
  *(void *)&long long v1104 = v920 + v1107;
  uint64_t v921 = swift_allocObject();
  *(_OWORD *)(v921 + 16) = v1081;
  *(void *)&long long v1099 = static Settings.Daemon.clearAQIScalesCacheOnNextLaunch.getter();
  uint64_t v922 = swift_allocObject();
  *(_OWORD *)(v922 + 16) = v1127;
  *(void *)(v922 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v922;
  specialized Array._endMutation()();
  v923 = (void (*)(char *, void, uint64_t))v1125;
  ((void (*)(char *, uint64_t, uint64_t))v1125)(v913, v914, v915);
  uint64_t v924 = v1120;
  v925 = v1122;
  v1122(v1114, v1126, v1120);
  v1100 = (uint64_t *)0xD00000000000001FLL;
  v926 = v1115;
  uint64_t v927 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v928 = v1123;
  *(void *)(v921 + 56) = v926;
  *(void *)(v921 + 64) = v928;
  *(void *)(v921 + 32) = v927;
  *(void *)&long long v1099 = static Settings.Daemon.clearWeatherDataCacheOnNextLaunch.getter();
  uint64_t v929 = swift_allocObject();
  *(_OWORD *)(v929 + 16) = v1127;
  *(void *)(v929 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v929;
  specialized Array._endMutation()();
  v930 = v1112;
  uint64_t v931 = v1121;
  v923(v1112, v1121, v1116);
  v932 = v1114;
  uint64_t v933 = v1126;
  v925(v1114, v1126, v924);
  v934 = v930;
  v935 = v1115;
  uint64_t v936 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v937 = v1123;
  *(void *)(v921 + 96) = v935;
  *(void *)(v921 + 104) = v937;
  *(void *)(v921 + 72) = v936;
  *(void *)&long long v1099 = static Settings.Daemon.clearWeatherAvailableDataSetsCacheOnNextLaunch.getter();
  uint64_t v938 = swift_allocObject();
  *(_OWORD *)(v938 + 16) = v1127;
  *(void *)(v938 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v938;
  specialized Array._endMutation()();
  v939 = v934;
  uint64_t v940 = v1116;
  v941 = (void (*)(char *, void, uint64_t))v1125;
  ((void (*)(char *, uint64_t, uint64_t))v1125)(v939, v931, v1116);
  v942 = v1122;
  v1122(v932, v933, v1120);
  v943 = v1115;
  uint64_t v944 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v921 + 136) = v943;
  *(void *)(v921 + 144) = v937;
  *(void *)(v921 + 112) = v944;
  *(void *)&long long v1099 = static Settings.Daemon.disableCaching.getter();
  uint64_t v945 = swift_allocObject();
  *(_OWORD *)(v945 + 16) = v1127;
  *(void *)(v945 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v945;
  specialized Array._endMutation()();
  v946 = v1112;
  uint64_t v947 = v1121;
  v941(v1112, v1121, v940);
  v948 = v1114;
  uint64_t v949 = v1126;
  v942(v1114, v1126, v1120);
  v950 = v946;
  v951 = v1115;
  uint64_t v952 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v953 = v1123;
  *(void *)(v921 + 176) = v951;
  *(void *)(v921 + 184) = v953;
  *(void *)(v921 + 152) = v952;
  v1100 = (uint64_t *)static Settings.Daemon.disableAvailableDataSetsCaching.getter();
  uint64_t v954 = swift_allocObject();
  *(_OWORD *)(v954 + 16) = v1127;
  *(void *)(v954 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v954;
  specialized Array._endMutation()();
  v955 = v946;
  v956 = (void (*)(char *, void, uint64_t))v1125;
  ((void (*)(char *, uint64_t, uint64_t))v1125)(v955, v947, v1116);
  v1122(v948, v949, v1120);
  v957 = v1115;
  uint64_t v958 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v921 + 216) = v957;
  *(void *)(v921 + 224) = v953;
  *(void *)(v921 + 192) = v958;
  uint64_t v959 = v1104;
  Group.init(title:footer:_:)();
  v1105 += v959;
  uint64_t v960 = swift_allocObject();
  *(_OWORD *)(v960 + 16) = v1081;
  *(void *)&long long v1099 = static Settings.Daemon.clearDailyStatisticsCacheOnNextLaunch.getter();
  uint64_t v961 = swift_allocObject();
  *(_OWORD *)(v961 + 16) = v1127;
  *(void *)(v961 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v961;
  specialized Array._endMutation()();
  uint64_t v962 = v1121;
  uint64_t v963 = v1116;
  v956(v950, v1121, v1116);
  uint64_t v964 = v1126;
  v1122(v948, v1126, v1120);
  v1100 = (uint64_t *)0xD000000000000025;
  v965 = v1115;
  uint64_t v966 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v967 = v1123;
  *(void *)(v960 + 56) = v965;
  *(void *)(v960 + 64) = v967;
  *(void *)(v960 + 32) = v966;
  *(void *)&long long v1099 = static Settings.Daemon.clearDailySummaryCacheOnNextLaunch.getter();
  uint64_t v968 = swift_allocObject();
  *(_OWORD *)(v968 + 16) = v1127;
  *(void *)(v968 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v968;
  specialized Array._endMutation()();
  v969 = v1112;
  uint64_t v970 = v962;
  v971 = (void (*)(char *, void, uint64_t))v1125;
  ((void (*)(char *, uint64_t, uint64_t))v1125)(v1112, v970, v963);
  uint64_t v972 = v964;
  v973 = v1122;
  v1122(v1114, v972, v1120);
  v974 = v969;
  v975 = v1115;
  uint64_t v976 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v960 + 96) = v975;
  *(void *)(v960 + 104) = v967;
  *(void *)(v960 + 72) = v976;
  *(void *)&long long v1099 = static Settings.Daemon.clearHourlyStatisticsCacheOnNextLaunch.getter();
  uint64_t v977 = swift_allocObject();
  *(_OWORD *)(v977 + 16) = v1127;
  *(void *)(v977 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v977;
  specialized Array._endMutation()();
  uint64_t v978 = v1116;
  v971(v974, v1121, v1116);
  v979 = v1114;
  uint64_t v980 = v1126;
  v973(v1114, v1126, v1120);
  v981 = v1115;
  uint64_t v982 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v983 = v1123;
  *(void *)(v960 + 136) = v981;
  *(void *)(v960 + 144) = v983;
  *(void *)(v960 + 112) = v982;
  *(void *)&long long v1099 = static Settings.Daemon.clearMonthlyStatisticsCacheOnNextLaunch.getter();
  uint64_t v984 = swift_allocObject();
  *(_OWORD *)(v984 + 16) = v1127;
  *(void *)(v984 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v984;
  specialized Array._endMutation()();
  uint64_t v985 = v1121;
  ((void (*)(char *, void, uint64_t))v1125)(v974, v1121, v978);
  uint64_t v986 = v980;
  v987 = v1122;
  v1122(v979, v986, v1120);
  v988 = v1115;
  uint64_t v989 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v960 + 176) = v988;
  *(void *)(v960 + 184) = v983;
  *(void *)(v960 + 152) = v989;
  static Settings.Daemon.disableStatisticsCaching.getter();
  uint64_t v990 = swift_allocObject();
  *(_OWORD *)(v990 + 16) = v1127;
  *(void *)(v990 + 32) = static SettingActions.restart.getter();
  uint64_t v1128 = v990;
  uint64_t v991 = v1120;
  specialized Array._endMutation()();
  uint64_t v992 = v985;
  uint64_t v993 = v991;
  ((void (*)(char *, uint64_t, uint64_t))v1125)(v974, v992, v1116);
  v987(v979, v1126, v991);
  v994 = v974;
  v995 = v1115;
  uint64_t v996 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v960 + 216) = v995;
  *(void *)(v960 + 224) = v983;
  uint64_t v997 = v983;
  *(void *)(v960 + 192) = v996;
  Group.init(title:footer:_:)();
  sub_10058B238();
  Group.init(title:footer:_:)();
  v998 = v1108;
  v1108[107] = v1109;
  v998[108] = &protocol witness table for Page;
  sub_100170694(v1101);
  Page.init(title:_:)();
  *(void *)&long long v1127 = swift_allocObject();
  *(_OWORD *)(v1127 + 16) = v1111;
  uint64_t v999 = swift_allocObject();
  *(_OWORD *)(v999 + 16) = v1089;
  v1000 = v994;
  v1001 = v979;
  if (qword_100E62758 != -1) {
    swift_once();
  }
  v1002 = (void (*)(char *, void, uint64_t))v1125;
  ((void (*)(char *, void, uint64_t))v1125)(v1000, v1121, v1116);
  v1003 = v979;
  uint64_t v1004 = v1126;
  v1122(v1003, v1126, v993);
  swift_retain();
  uint64_t v1005 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v999 + 56) = v995;
  *(void *)(v999 + 64) = v997;
  *(void *)(v999 + 32) = v1005;
  if (qword_100E62760 != -1) {
    swift_once();
  }
  v1002(v1000, v1121, v1116);
  v1122(v1001, v1004, v1120);
  swift_retain();
  uint64_t v1006 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v999 + 96) = v995;
  *(void *)(v999 + 104) = v997;
  *(void *)(v999 + 72) = v1006;
  v1007 = v1002;
  if (qword_100E62768 != -1) {
    swift_once();
  }
  v1008 = v1108;
  uint64_t v1123 = v1062 + v1088;
  v1007(v1000, v1121, v1116);
  ((void (*)(char *, uint64_t, uint64_t))v1084)(v1078, v1004, v1094);
  swift_retain();
  uint64_t v1009 = v1095;
  uint64_t v1010 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v1011 = v1079;
  *(void *)(v999 + 136) = v1009;
  *(void *)(v999 + 144) = v1011;
  *(void *)(v999 + 112) = v1010;
  Group.init(title:footer:_:)();
  v1008[112] = v1109;
  v1008[113] = (uint64_t)&protocol witness table for Page;
  sub_100170694(v1008 + 109);
  Page.init(title:_:)();
  uint64_t v1128 = (uint64_t)v1008;
  sub_10037FCD8((uint64_t)_swiftEmptyArrayStorage);
  Group.init(title:footer:_:)();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1057 + 8))(v1066, v1023);
  uint64_t *v1022 = v1021;
  return result;
}

BOOL sub_10058B008(void *a1)
{
  return *a1 > 0;
}

uint64_t sub_10058B018@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = 100;
  if ((result & 1) == 0) {
    uint64_t v2 = 0;
  }
  *a2 = v2;
  return result;
}

uint64_t sub_10058B02C()
{
  swift_getObjectType();
  if (qword_100E625A8 != -1) {
    swift_once();
  }
  dispatch thunk of Configurable.setting<A>(_:)();
  char v0 = 0;
  uint64_t v1 = 0;
  while (1)
  {
    char v2 = v0;
    int v3 = *((unsigned __int8 *)&off_100E07260 + v1 + 32);
    uint64_t v4 = *((unsigned char *)&off_100E07260 + v1 + 32) ? 0x30327265746E6977 : 0x343230326C6C6166;
    unint64_t v5 = *((unsigned char *)&off_100E07260 + v1 + 32) ? 0xEA00000000003432 : 0xE800000000000000;
    if (v4 == v13 && v5 == v14) {
      break;
    }
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_18;
    }
    char v0 = 1;
    uint64_t v1 = &_mh_execute_header.magic + 1;
    if (v2)
    {
      int v3 = 2;
      goto LABEL_18;
    }
  }
  swift_bridgeObjectRelease();
LABEL_18:
  type metadata accessor for LocalPreset();
  swift_allocObject();
  uint64_t result = sub_1000AE98C(v13, v14);
  uint64_t v9 = result;
  if (v3 != 2)
  {
    sub_100A39674(v3, &v13);
    uint64_t v10 = v15;
    uint64_t v11 = v16;
    sub_1001B1E64(&v13, v15);
    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 40))(v10, v11);
    uint64_t result = _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)&v13);
    if (v12) {
      goto LABEL_22;
    }
  }
  if (!v9) {
    return result;
  }
  if (sub_1007C1704())
  {
LABEL_22:
    dispatch thunk of Updatable.apply(preset:)();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_10058B238()
{
  uint64_t v62 = sub_10017DF08(&qword_100E80498);
  uint64_t v54 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v53 = (char *)&v48 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for ChangeBehavior();
  uint64_t v63 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v49 = (char *)&v48 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10017DF08(&qword_100E804B8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10017DF08(&qword_100E80408);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100C34ED0;
  uint64_t v7 = sub_10017DF08(&qword_100E804E0);
  static Settings.Daemon.treatmentIdentifierOverrides.getter();
  uint64_t v60 = sub_10017DF08(&qword_100E6BBD0);
  uint64_t v8 = swift_allocObject();
  long long v64 = xmmword_100C31F30;
  *(_OWORD *)(v8 + 16) = xmmword_100C31F30;
  uint64_t v56 = type metadata accessor for SettingAction();
  *(void *)(v8 + 32) = static SettingActions.restart.getter();
  uint64_t v65 = v8;
  specialized Array._endMutation()();
  unsigned int v52 = enum case for Item.ResetBehavior.reset<A>(_:);
  (*(void (**)(char *))(v3 + 104))(v5);
  uint64_t v9 = Item<>.init(_:label:resetBehavior:actions:)();
  *(void *)(v6 + 56) = v7;
  *(void *)(v6 + 64) = sub_10058BC6C(&qword_100E804E8, &qword_100E804E0);
  *(void *)(v6 + 32) = v9;
  uint64_t v10 = sub_10017DF08(&qword_100E80540);
  static Settings.Daemon.clearCachedJWTTokenOnNextLaunch.getter();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = v64;
  *(void *)(v11 + 32) = static SettingActions.restart.getter();
  uint64_t v65 = v11;
  specialized Array._endMutation()();
  unsigned int v61 = enum case for ChangeBehavior.default(_:);
  uint64_t v12 = *(void (**)(void))(v63 + 104);
  v63 += 104;
  uint64_t v59 = (void (*)(char *, void, uint64_t))v12;
  uint64_t v13 = v49;
  v12(v49);
  uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t))(v54 + 104);
  v54 += 104;
  uint64_t v14 = v52;
  uint64_t v15 = v62;
  v58(v53, v52, v62);
  uint64_t v50 = 0xD000000000000025;
  uint64_t v55 = v10;
  uint64_t v16 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v6 + 96) = v10;
  uint64_t v17 = sub_10058BC6C(&qword_100E80548, &qword_100E80540);
  *(void *)(v6 + 104) = v17;
  uint64_t v51 = v17;
  *(void *)(v6 + 72) = v16;
  uint64_t v48 = static Settings.Daemon.mangleCachedJWTTokenOnNextLaunch.getter();
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = v64;
  *(void *)(v18 + 32) = static SettingActions.restart.getter();
  uint64_t v65 = v18;
  specialized Array._endMutation()();
  uint64_t v19 = v13;
  uint64_t v20 = v13;
  uint64_t v21 = v61;
  v59(v20, v61, v57);
  v58(v53, v14, v15);
  uint64_t v22 = v55;
  uint64_t v23 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v6 + 136) = v22;
  *(void *)(v6 + 144) = v17;
  *(void *)(v6 + 112) = v23;
  uint64_t v48 = static Settings.Daemon.forceQAAndNoAuthOnSimulator.getter();
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = v64;
  *(void *)(v24 + 32) = static SettingActions.restart.getter();
  uint64_t v65 = v24;
  specialized Array._endMutation()();
  uint64_t v25 = v19;
  uint64_t v26 = v19;
  uint64_t v27 = v57;
  uint64_t v28 = v59;
  v59(v26, v21, v57);
  uint64_t v29 = v53;
  uint64_t v30 = v52;
  v58(v53, v52, v62);
  uint64_t v31 = v25;
  uint64_t v32 = v55;
  uint64_t v33 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v34 = v51;
  *(void *)(v6 + 176) = v32;
  *(void *)(v6 + 184) = v34;
  *(void *)(v6 + 152) = v33;
  uint64_t v48 = static Settings.Daemon.fetchesWeatherData.getter();
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = v64;
  *(void *)(v35 + 32) = static SettingActions.restart.getter();
  uint64_t v65 = v35;
  specialized Array._endMutation()();
  v28(v31, v61, v27);
  uint64_t v36 = v62;
  uint64_t v37 = v58;
  v58(v29, v30, v62);
  uint64_t v38 = v55;
  uint64_t v39 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  uint64_t v40 = v51;
  *(void *)(v6 + 216) = v38;
  *(void *)(v6 + 224) = v40;
  *(void *)(v6 + 192) = v39;
  uint64_t v50 = static Settings.Daemon.enableFlatbuffers.getter();
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = v64;
  *(void *)(v41 + 32) = static SettingActions.restart.getter();
  uint64_t v65 = v41;
  specialized Array._endMutation()();
  v59(v31, v61, v57);
  uint64_t v42 = v52;
  v37(v29, v52, v36);
  uint64_t v43 = v55;
  uint64_t v44 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v6 + 256) = v43;
  *(void *)(v6 + 264) = v40;
  *(void *)(v6 + 232) = v44;
  static Settings.Daemon.enableSendFlatbufferSchemaVersion.getter();
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = v64;
  *(void *)(v45 + 32) = static SettingActions.restart.getter();
  uint64_t v65 = v45;
  specialized Array._endMutation()();
  v59(v31, v61, v57);
  v58(v29, v42, v62);
  uint64_t v46 = Item.__allocating_init(_:label:changeBehavior:resetBehavior:actions:)();
  *(void *)(v6 + 296) = v43;
  *(void *)(v6 + 304) = v40;
  *(void *)(v6 + 272) = v46;
  return v6;
}

uint64_t sub_10058B9F8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_10017DF08(&qword_100E80400);
  type metadata accessor for Group();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_100C251B0;
  sub_10017DF08(&qword_100E80408);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100C251B0;
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E803F8);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (v9)
  {
    uint64_t v7 = type metadata accessor for ResetItem();
    swift_allocObject();
    uint64_t v8 = ResetItem.init(layout:)();
    *(void *)(v5 + 56) = v7;
    *(void *)(v5 + 64) = &protocol witness table for ResetItem;
    *(void *)(v5 + 32) = v8;
    uint64_t result = Group.init(title:footer:_:)();
    *a2 = v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10058BB84@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10057DAA8(a1, v2, a2);
}

unint64_t sub_10058BB8C()
{
  unint64_t result = qword_100E804D0;
  if (!qword_100E804D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E804D0);
  }
  return result;
}

unint64_t sub_10058BBD8()
{
  unint64_t result = qword_100E80658;
  if (!qword_100E80658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E80658);
  }
  return result;
}

uint64_t sub_10058BC24(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10058BC6C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_10058BCBC()
{
  char v5 = v0;
  type metadata accessor for DisplayMetrics();
  sub_10019ED18();
  __chkstk_darwin(v6);
  sub_100162758();
  __chkstk_darwin(v7);
  sub_10017FF4C();
  __chkstk_darwin(v8);
  sub_10011B090();
  if (qword_100E62650 != -1) {
    swift_once();
  }
  sub_10017D038();
  if (v4 != 1)
  {
    sub_1001CB340(v3);
    sub_10017A534();
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v3 + 8);
  sub_1001CB340(v3);
  sub_10017A534();
  if (v9 == 1)
  {
LABEL_8:
    BOOL v11 = 0;
LABEL_9:
    sub_1001CB340(v2);
    return v11;
  }
  char v10 = DynamicTypeSize.isAccessibilitySize.getter();
  sub_1001CB340(v2);
  if ((v10 & 1) == 0)
  {
    sub_10058BF64();
    sub_1001A0A40();
    BOOL v11 = (v5 & 1) != 0 || sub_10058BE08();
    uint64_t v2 = v1;
    goto LABEL_9;
  }
  return 0;
}

BOOL sub_10058BE08()
{
  char v5 = v0;
  type metadata accessor for DisplayMetrics();
  sub_10019ED18();
  __chkstk_darwin(v6);
  sub_100162758();
  __chkstk_darwin(v7);
  sub_10017FF4C();
  __chkstk_darwin(v8);
  sub_10011B090();
  if (qword_100E62650 != -1) {
    swift_once();
  }
  sub_10017D038();
  if (v4 != 1)
  {
    sub_1001CB340(v3);
    sub_10017A534();
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v3 + 8);
  sub_1001CB340(v3);
  sub_10017A534();
  if (v9 == 1)
  {
LABEL_8:
    BOOL v11 = 0;
LABEL_9:
    sub_1001CB340(v2);
    return v11;
  }
  char v10 = DynamicTypeSize.isAccessibilitySize.getter();
  sub_1001CB340(v2);
  if ((v10 & 1) == 0)
  {
    sub_10058BF64();
    sub_1001A0A40();
    BOOL v11 = (v5 & 1) == 0 && *(unsigned __int8 *)(v1 + 18) != 0;
    uint64_t v2 = v1;
    goto LABEL_9;
  }
  return 0;
}

uint64_t sub_10058BF64()
{
  char v5 = v0;
  type metadata accessor for DisplayMetrics();
  sub_10019ED18();
  __chkstk_darwin(v6);
  sub_100162758();
  __chkstk_darwin(v7);
  sub_10017FF4C();
  __chkstk_darwin(v8);
  sub_10011B090();
  if (qword_100E62650 != -1) {
    swift_once();
  }
  sub_10017D038();
  if (v4 != 1)
  {
    sub_1001CB340(v3);
    sub_10017A534();
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v3 + 8);
  sub_1001CB340(v3);
  sub_10017A534();
  if (v9 == 1)
  {
LABEL_8:
    uint64_t v11 = 0;
LABEL_9:
    sub_1001CB340(v2);
    return v11;
  }
  int v10 = DynamicTypeSize.isAccessibilitySize.getter();
  sub_1001CB340(v2);
  if ((v10 & 1) == 0)
  {
    sub_10058C0A8(*v5);
    sub_1001A0A40();
    if (v10) {
      uint64_t v11 = *(unsigned __int8 *)(v1 + 17);
    }
    else {
      uint64_t v11 = 0;
    }
    uint64_t v2 = v1;
    goto LABEL_9;
  }
  return 0;
}

BOOL sub_10058C0A8(uint64_t a1)
{
  return (unint64_t)(a1 - 3) < 2;
}

uint64_t sub_10058C0B8(void *a1)
{
  uint64_t v2 = type metadata accessor for LoggingEventProcessorFormat();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (uint64_t *)((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10017DF08(&qword_100E807C0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100C25ED0;
  type metadata accessor for LoggingEventProcessor();
  *char v5 = 11;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for LoggingEventProcessorFormat.json(_:), v2);
  *(void *)(v6 + 32) = LoggingEventProcessor.__allocating_init(logFormat:)();
  *(void *)(v6 + 40) = &protocol witness table for LoggingEventProcessor;
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for Client();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  sub_1001B1E64(a1, a1[3]);
  sub_10017DF08(&qword_100E71B70);
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (!result)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_1001B1E64(a1, a1[3]);
  type metadata accessor for UploadBatchEventConfig();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    type metadata accessor for UploadBatchEventProcessor();
    *(void *)(v6 + 48) = UploadBatchEventProcessor.__allocating_init(client:endpoint:contentType:config:)();
    *(void *)(v6 + 56) = &protocol witness table for UploadBatchEventProcessor;
    return v6;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_10058C2C4(uint64_t a1, void *a2)
{
  sub_1001B1E64(a2, a2[3]);
  type metadata accessor for SessionEventsAndDataCoordinator();
  uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:)();
  if (result)
  {
    sub_100019A3C(&qword_100E76B10, (void (*)(uint64_t))type metadata accessor for SessionEventsAndDataCoordinator);
    URLHandlerManager.add<A>(processor:)();
    swift_release();
    sub_1001B1E64(a2, a2[3]);
    uint64_t result = dispatch thunk of ResolverType.resolve<A>(_:name:)();
    if (result)
    {
      URLHandlerManager.add<A>(processor:)();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10058C408()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_10058C440()
{
  return sub_10058C0B8((void *)(v0 + 16));
}

uint64_t sub_10058C448()
{
  return sub_10058C6B0();
}

uint64_t sub_10058C450()
{
  return sub_10058C6B0();
}

uint64_t sub_10058C458()
{
  return sub_10058C6B0();
}

uint64_t sub_10058C460()
{
  return sub_10058C478(&enum case for UnitConfiguration.Temperature.celsius(_:));
}

uint64_t sub_10058C46C()
{
  return sub_10058C478(&enum case for UnitConfiguration.Temperature.fahrenheit(_:));
}

uint64_t sub_10058C478(unsigned int *a1)
{
  uint64_t v4 = type metadata accessor for ConfiguredUnit();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  sub_10012B938();
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(uint64_t (**)(uint64_t))(v1 + 16);
  uint64_t v10 = *a1;
  uint64_t v11 = type metadata accessor for UnitConfiguration.Temperature();
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 104))(v2, v10, v11);
  _s7Weather24LocationCompositionStateOwst_0(v2, 0, 1, v11);
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v2, enum case for ConfiguredUnit.temperature(_:), v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v2, v4);
  type metadata accessor for ConfiguredUnitsAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for EnvironmentAction();
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  swift_retain();
  v13(v2, v4);
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = 0;
  memset(v15, 0, sizeof(v15));
  sub_1001AAF58((uint64_t)v8, (uint64_t)v15, v9);
  sub_100016E7C((uint64_t)v15);
  sub_1001ABE70((uint64_t)v8);
  return swift_release();
}

uint64_t sub_10058C6A0()
{
  return sub_10058C6B0();
}

uint64_t sub_10058C6A8()
{
  return sub_10058C6B0();
}

uint64_t sub_10058C6B0()
{
  type metadata accessor for MainAction();
  sub_100162E4C();
  __chkstk_darwin(v2);
  sub_10012B938();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 16);
  type metadata accessor for ListViewAction();
  swift_storeEnumTagMultiPayload();
  type metadata accessor for ViewAction();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v6 = 0;
  memset(v5, 0, sizeof(v5));
  swift_retain();
  sub_1001AAF58(v1, (uint64_t)v5, v3);
  sub_100016E7C((uint64_t)v5);
  sub_1001ABE70(v1);
  return swift_release();
}

uint64_t type metadata accessor for ListMenuInteractor()
{
  return self;
}

double sub_10058C7C4()
{
  if ((*(unsigned char *)(v0 + 80) & 1) == 0) {
    return *(double *)(v0 + 72);
  }
  *(void *)(v0 + 72) = 0x4014000000000000;
  *(unsigned char *)(v0 + 80) = 0;
  return 5.0;
}

double sub_10058C7E8()
{
  if ((*(unsigned char *)(v0 + 24) & 1) == 0) {
    return *(double *)(v0 + 16);
  }
  *(void *)(v0 + 16) = 0x406E000000000000;
  *(unsigned char *)(v0 + 24) = 0;
  return 240.0;
}

double sub_10058C80C()
{
  if ((*(unsigned char *)(v0 + 136) & 1) == 0) {
    return *(double *)(v0 + 128);
  }
  *(void *)(v0 + 128) = 0x4010000000000000;
  *(unsigned char *)(v0 + 136) = 0;
  return 4.0;
}

double sub_10058C830()
{
  if ((*(unsigned char *)(v0 + 360) & 1) == 0) {
    return *(double *)(v0 + 352);
  }
  *(void *)(v0 + 352) = 0x4020000000000000;
  *(unsigned char *)(v0 + 360) = 0;
  return 8.0;
}

double sub_10058C858()
{
  if ((v0[8] & 1) == 0) {
    return *(double *)v0;
  }
  *(void *)uint64_t v0 = 0x4073000000000000;
  v0[8] = 0;
  return 304.0;
}

uint64_t sub_10058C87C()
{
  if (*(void *)(v0 + 64))
  {
    uint64_t v1 = *(void *)(v0 + 64);
  }
  else
  {
    id v2 = [self quaternaryLabelColor];
    uint64_t v1 = Color.init(_:)();
    *(void *)(v0 + 64) = v1;
    swift_retain();
  }
  swift_retain();
  return v1;
}

void sub_10058C8E4()
{
  if (*(unsigned char *)(v0 + 400))
  {
    swift_beginAccess();
    double v1 = sub_10052E644() + 6.0;
    double v2 = sub_10052E644();
    *(void *)(v0 + 368) = 0x4024000000000000;
    *(double *)(v0 + 376) = v1;
    *(void *)(v0 + 384) = 0;
    *(double *)(v0 + 392) = v2 + 6.0;
    *(unsigned char *)(v0 + 400) = 0;
  }
}

double sub_10058C988@<D0>(char a1@<W0>, double *a2@<X8>)
{
  if (a1)
  {
    sub_10017DF08(&qword_100E6BEF0);
    uint64_t v3 = swift_allocObject();
    __asm { FMOV            V1.2D, #2.0 }
    *(_OWORD *)(v3 + 16) = xmmword_100C25ED0;
    *(_OWORD *)(v3 + 32) = _Q1;
  }
  sub_10017D058();
  double result = v12;
  *(void *)a2 = v10;
  *((void *)a2 + 1) = v11;
  a2[2] = v12;
  *((void *)a2 + 3) = v13;
  *((void *)a2 + 4) = v14;
  return result;
}

uint64_t sub_10058CA14()
{
  uint64_t v1 = type metadata accessor for Font.TextStyle();
  uint64_t v2 = *(void *)(v1 - 8);
  __n128 v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v0 + 48))
  {
    uint64_t v6 = *(void *)(v0 + 48);
  }
  else
  {
    (*(void (**)(char *, void, uint64_t, __n128))(v2 + 104))(v5, enum case for Font.TextStyle.caption(_:), v1, v3);
    static Font.Weight.semibold.getter();
    uint64_t v6 = static Font.system(_:weight:)();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    swift_retain();
    swift_release();
    *(void *)(v0 + 48) = v6;
  }
  swift_retain();
  return v6;
}

uint64_t sub_10058CB40()
{
  if (*(void *)(v0 + 56))
  {
    uint64_t v1 = *(void *)(v0 + 56);
  }
  else
  {
    id v2 = [self secondaryLabelColor];
    uint64_t v1 = Color.init(_:)();
    *(void *)(v0 + 56) = v1;
    swift_retain();
  }
  swift_retain();
  return v1;
}

uint64_t sub_10058CBA8()
{
  if (*(void *)(v0 + 88))
  {
    uint64_t v1 = *(void *)(v0 + 88);
  }
  else
  {
    id v2 = [self secondaryLabelColor];
    uint64_t v1 = Color.init(_:)();
    *(void *)(v0 + 88) = v1;
    swift_retain();
  }
  swift_retain();
  return v1;
}

double sub_10058CC10()
{
  if ((*(unsigned char *)(v0 + 104) & 1) == 0) {
    return *(double *)(v0 + 96);
  }
  *(void *)(v0 + 96) = 0x4028000000000000;
  *(unsigned char *)(v0 + 104) = 0;
  return 12.0;
}

double sub_10058CC34()
{
  if ((*(unsigned char *)(v0 + 120) & 1) == 0) {
    return *(double *)(v0 + 112);
  }
  *(void *)(v0 + 112) = 0x405E400000000000;
  *(unsigned char *)(v0 + 120) = 0;
  return 121.0;
}

void sub_10058CC60()
{
  if (!v0[21])
  {
    StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
    sub_100187D98();
    v0[18] = v4;
    v0[19] = v5;
    v0[20] = v2;
    v0[21] = v1;
    v0[22] = v3;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_10019ED40();
}

void sub_10058CD14()
{
  if (!v0[33])
  {
    sub_10017DF08(&qword_100E6BEF0);
    uint64_t v5 = swift_allocObject();
    __asm { FMOV            V1.2D, #2.0 }
    *(_OWORD *)(v5 + 16) = xmmword_100C25ED0;
    *(_OWORD *)(v5 + 32) = _Q1;
    sub_10017D058();
    sub_100187D98();
    v0[30] = v4;
    v0[31] = v11;
    v0[32] = v2;
    v0[33] = v1;
    v0[34] = v3;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  sub_10019ED40();
}

double sub_10058CDD8()
{
  if ((*(unsigned char *)(v0 + 328) & 1) == 0) {
    return *(double *)(v0 + 320);
  }
  *(void *)(v0 + 320) = 0x3FE0000000000000;
  *(unsigned char *)(v0 + 328) = 0;
  return 0.5;
}

double sub_10058CE00()
{
  if ((*(unsigned char *)(v0 + 344) & 1) == 0) {
    return *(double *)(v0 + 336);
  }
  *(void *)(v0 + 336) = 0x4000000000000000;
  *(unsigned char *)(v0 + 344) = 0;
  return 2.0;
}

double sub_10058CE28()
{
  qword_100F51778 = 0;
  byte_100F51780 = 1;
  qword_100F51788 = 0;
  byte_100F51790 = 1;
  xmmword_100F517A8 = 0u;
  unk_100F517B8 = 0u;
  xmmword_100F51798 = xmmword_100C45610;
  byte_100F517C8 = 1;
  qword_100F517D0 = 0;
  unk_100F517D8 = 0;
  byte_100F517E0 = 1;
  qword_100F517E8 = 0;
  byte_100F517F0 = 1;
  qword_100F517F8 = 0;
  byte_100F51800 = 1;
  xmmword_100F51818 = 0u;
  unk_100F51828 = 0u;
  xmmword_100F51808 = 0u;
  byte_100F51838 = 1;
  qword_100F51840 = 0;
  byte_100F51848 = 1;
  qword_100F51850 = 0;
  unk_100F51858 = 0;
  byte_100F51860 = 1;
  qword_100F518B8 = 0;
  xmmword_100F51898 = 0u;
  unk_100F518A8 = 0u;
  xmmword_100F51878 = 0u;
  unk_100F51888 = 0u;
  xmmword_100F51868 = 0u;
  byte_100F518C0 = 1;
  qword_100F518C8 = 0;
  byte_100F518D0 = 1;
  qword_100F518D8 = 0;
  byte_100F518E0 = 1;
  xmmword_100F518E8 = 0u;
  unk_100F518F8 = 0u;
  byte_100F51908 = 1;
  double result = 6.0;
  xmmword_100F51910 = xmmword_100C45620;
  qword_100F51920 = 0x4018000000000000;
  return result;
}

unsigned char *storeEnumTagSinglePayload for WireframeInterestLevel(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *double result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10058D00CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 1;
        break;
    }
  }
  return result;
}

unint64_t sub_10058D038()
{
  unint64_t result = qword_100E80880[0];
  if (!qword_100E80880[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100E80880);
  }
  return result;
}

uint64_t sub_10058D084(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  return a1;
}

void sub_10058D0FC(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + 17))
  {
    if ((Transaction.disablesAnimations.getter() & 1) == 0)
    {
      if (Transaction.animation.getter()) {
        swift_release();
      }
    }
    Transaction.disablesAnimations.setter();
  }
}

void sub_10058D15C(uint64_t a1)
{
  sub_10058D0FC(a1, v1 + 32);
}

uint64_t sub_10058D170()
{
  return swift_getWitnessTable();
}

void *sub_10058D2E4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *int v3 = *a2;
    int v3 = (void *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    uint64_t v6 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v6;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v7 = *(int *)(a3 + 36);
    uint64_t v8 = (uint64_t)a2 + v7;
    uint64_t v9 = a1 + v7;
    *(_WORD *)(a1 + 33) = *(_WORD *)((char *)a2 + 33);
    uint64_t v10 = type metadata accessor for MoonPhase.Hemisphere();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v9, v8, v10);
  }
  return v3;
}

uint64_t sub_10058D3EC(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = type metadata accessor for MoonPhase.Hemisphere();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_10058D46C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = a2 + v6;
  uint64_t v8 = a1 + v6;
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  uint64_t v9 = type metadata accessor for MoonPhase.Hemisphere();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v8, v7, v9);
  return a1;
}

uint64_t sub_10058D524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for MoonPhase.Hemisphere();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_10058D5F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = type metadata accessor for MoonPhase.Hemisphere();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_10058D684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  uint64_t v8 = *(int *)(a3 + 36);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = type metadata accessor for MoonPhase.Hemisphere();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_10058D738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10058D74C);
}

uint64_t sub_10058D74C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for MoonPhase.Hemisphere();
    uint64_t v9 = a1 + *(int *)(a3 + 36);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_10058D7D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10058D7E8);
}

uint64_t sub_10058D7E8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for MoonPhase.Hemisphere();
    uint64_t v8 = v5 + *(int *)(a4 + 36);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for CalendarDayViewModel(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E80970);
}

uint64_t sub_10058D888()
{
  uint64_t result = type metadata accessor for MoonPhase.Hemisphere();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10058D938(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (!v4 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  BOOL v5 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
  if (!v5 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0
    || *(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32)
    || *(unsigned __int8 *)(a1 + 33) != *(unsigned __int8 *)(a2 + 33))
  {
    return 0;
  }
  int v6 = *(unsigned __int8 *)(a2 + 34);
  if (*(unsigned char *)(a1 + 34) == 8)
  {
    if (v6 == 8) {
      goto LABEL_24;
    }
    return 0;
  }
  if (v6 == 8) {
    return 0;
  }
  uint64_t v7 = MoonPhase.rawValue.getter();
  uint64_t v9 = v8;
  if (v7 == MoonPhase.rawValue.getter() && v9 == v10)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0) {
      return 0;
    }
  }
LABEL_24:
  type metadata accessor for CalendarDayViewModel(0);

  return static MoonPhase.Hemisphere.== infix(_:_:)();
}

uint64_t sub_10058DA94(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for CalendarDayViewModel(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *(void *)a1 = *a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v6;
    uint64_t v7 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v7;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    *(_WORD *)(a1 + 33) = *(_WORD *)((char *)a2 + 33);
    uint64_t v8 = *(int *)(v4 + 36);
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = type metadata accessor for MoonPhase.Hemisphere();
    char v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_10058DBA8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = a1 + *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
  uint64_t v3 = type metadata accessor for MoonPhase.Hemisphere();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

uint64_t sub_10058DC2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  uint64_t v6 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for MoonPhase.Hemisphere();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

uint64_t sub_10058DCF0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  uint64_t v4 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = type metadata accessor for MoonPhase.Hemisphere();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t sub_10058DDC8(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  uint64_t v5 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = type metadata accessor for MoonPhase.Hemisphere();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_10058DE60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  uint64_t v6 = *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for MoonPhase.Hemisphere();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_10058DF18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10058DF2C);
}

uint64_t sub_10058DF2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CalendarDayViewModel(0);

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_10058DF74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10058DF88);
}

uint64_t sub_10058DF88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CalendarDayViewModel(0);

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v4);
}

uint64_t type metadata accessor for CalendarDayView(uint64_t a1)
{
  return sub_10018678C(a1, qword_100E80A10);
}

uint64_t sub_10058DFF4()
{
  uint64_t result = type metadata accessor for CalendarDayViewModel(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10058E080()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10058E09C()
{
  uint64_t v0 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  sub_1001626E0();
  uint64_t v4 = v3 - v2;
  uint64_t v5 = sub_10017DF08(&qword_100E80A48);
  __chkstk_darwin(v5 - 8);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  uint64_t v9 = sub_10017DF08(&qword_100E80A50);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  sub_1001626E0();
  uint64_t v13 = v12 - v11;
  uint64_t v14 = sub_10017DF08(&qword_100E80A58);
  sub_100162E4C();
  __chkstk_darwin(v15);
  sub_1001626E0();
  uint64_t v18 = v17 - v16;
  *(void *)uint64_t v8 = static HorizontalAlignment.center.getter();
  *(void *)(v8 + 8) = 0x4000000000000000;
  *(unsigned char *)(v8 + 16) = 0;
  uint64_t v19 = sub_10017DF08(&qword_100E80A60);
  sub_10058E330(v22, (uint64_t *)(v8 + *(int *)(v19 + 44)));
  sub_1001262FC(v8, v13, &qword_100E80A48);
  *(_WORD *)(v13 + *(int *)(v10 + 44)) = 1;
  sub_1001781AC(v8, &qword_100E80A48);
  LOBYTE(v8) = static Edge.Set.all.getter();
  sub_1001262FC(v13, v18, &qword_100E80A50);
  uint64_t v20 = v18 + *(int *)(v14 + 36);
  *(unsigned char *)uint64_t v20 = v8;
  *(_OWORD *)(v20 + 8) = xmmword_100C45760;
  *(_OWORD *)(v20 + 24) = xmmword_100C45760;
  *(unsigned char *)(v20 + 40) = 0;
  sub_1001781AC(v13, &qword_100E80A50);
  static AccessibilityChildBehavior.combine.getter();
  sub_10058E7F4(&qword_100E80A68, &qword_100E80A58, (void (*)(void))sub_10058E7C4);
  View.accessibilityElement(children:)();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v4, v0);
  return sub_1001781AC(v18, &qword_100E80A58);
}

uint64_t sub_10058E330@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  unsigned int v61 = a2;
  uint64_t v3 = type metadata accessor for MoonPhase.Hemisphere();
  uint64_t v57 = *(void *)(v3 - 8);
  uint64_t v58 = v3;
  __chkstk_darwin(v3);
  uint64_t v56 = (char *)v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for CalendarDayMoonPhase();
  __chkstk_darwin(v55);
  uint64_t v60 = (uint64_t)v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v59 = (char *)v54 - v7;
  uint64_t v8 = type metadata accessor for Font.TextStyle();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[1];
  uint64_t v62 = *a1;
  uint64_t v63 = v12;
  unint64_t v13 = sub_10014A85C();
  swift_bridgeObjectRetain();
  v54[1] = v13;
  uint64_t v14 = Text.init<A>(_:)();
  uint64_t v16 = v15;
  char v18 = v17;
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for Font.TextStyle.caption2(_:), v8);
  if (*((unsigned char *)a1 + 32) == 1) {
    static Font.Weight.semibold.getter();
  }
  else {
    static Font.Weight.medium.getter();
  }
  static Font.system(_:weight:)();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  char v19 = v18 & 1;
  uint64_t v20 = Text.font(_:)();
  uint64_t v22 = v21;
  char v24 = v23;
  swift_release();
  sub_100191924(v14, v16, v19);
  swift_bridgeObjectRelease();
  if (*((unsigned char *)a1 + 32) == 1)
  {
    uint64_t v25 = a1;
    static Color.cyan.getter();
  }
  else
  {
    uint64_t v25 = a1;
    if (*((unsigned char *)a1 + 33) == 1) {
      static Color.secondary.getter();
    }
    else {
      static Color.primary.getter();
    }
  }
  char v26 = v24 & 1;
  uint64_t v27 = Text.foregroundColor(_:)();
  uint64_t v29 = v28;
  char v31 = v30;
  swift_release();
  char v32 = v31 & 1;
  sub_100191924(v20, v22, v26);
  swift_bridgeObjectRelease();
  uint64_t v33 = v25;
  uint64_t v34 = v25[3];
  uint64_t v62 = v25[2];
  uint64_t v63 = v34;
  swift_bridgeObjectRetain();
  uint64_t v35 = Text.accessibilityLabel<A>(_:)();
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  char v41 = v40 & 1;
  sub_100191924(v27, v29, v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v42 = *((unsigned __int8 *)v33 + 34);
  uint64_t v43 = (uint64_t)v33 + *(int *)(type metadata accessor for CalendarDayViewModel(0) + 36);
  uint64_t v45 = v56;
  uint64_t v44 = v57;
  uint64_t v46 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v56, v43, v58);
  if (v42 == 8) {
    char v47 = 0;
  }
  else {
    char v47 = v42;
  }
  uint64_t v48 = (uint64_t)v59;
  *uint64_t v59 = v47;
  *(unsigned char *)(v48 + 1) = v42 != 8;
  (*(void (**)(uint64_t, char *, uint64_t))(v44 + 32))(v48 + *(int *)(v55 + 24), v45, v46);
  uint64_t v49 = v60;
  sub_10058E8C4(v48, v60);
  uint64_t v50 = v61;
  uint64_t *v61 = v35;
  v50[1] = v37;
  *((unsigned char *)v50 + 16) = v41;
  v50[3] = v39;
  uint64_t v51 = sub_10017DF08(&qword_100E80A80);
  sub_10058E8C4(v49, (uint64_t)v50 + *(int *)(v51 + 48));
  unsigned int v52 = (char *)v50 + *(int *)(v51 + 64);
  *(void *)unsigned int v52 = 0;
  v52[8] = 0;
  sub_100190CC4(v35, v37, v41);
  swift_bridgeObjectRetain();
  sub_10058E928(v48);
  sub_10058E928(v49);
  sub_100191924(v35, v37, v41);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10058E7C4()
{
  return sub_10058E7F4(&qword_100E80A70, &qword_100E80A50, (void (*)(void))sub_10058E870);
}

uint64_t sub_10058E7F4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10058E870()
{
  unint64_t result = qword_100E80A78;
  if (!qword_100E80A78)
  {
    sub_10018C6DC(&qword_100E80A48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E80A78);
  }
  return result;
}

uint64_t sub_10058E8C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CalendarDayMoonPhase();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10058E928(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CalendarDayMoonPhase();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10058E984()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10058EA0C(void *a1, void *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1])
  {
    _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = sub_1001190E0();
    if ((v6 & 1) == 0) {
      return result;
    }
  }
  uint64_t v7 = a1[3];
  uint64_t v8 = a2[3];
  if (v7)
  {
    if (!v8) {
      return 0;
    }
    if (a1[2] != a2[2] || v7 != v8)
    {
      _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t result = sub_1001190E0();
      if ((v10 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v8)
  {
    return 0;
  }
  if (a1[4] != a2[4] || a1[5] != a2[5])
  {
    _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = sub_1001190E0();
    if ((v12 & 1) == 0) {
      return result;
    }
  }
  if (a1[6] != a2[6] || a1[7] != a2[7])
  {
    _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = sub_1001190E0();
    if ((v14 & 1) == 0) {
      return result;
    }
  }
  if (a1[8] != a2[8] || a1[9] != a2[9])
  {
    _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = sub_1001190E0();
    if ((v16 & 1) == 0) {
      return result;
    }
  }
  if (a1[10] != a2[10] || a1[11] != a2[11])
  {
    _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = sub_1001190E0();
    if ((v18 & 1) == 0) {
      return result;
    }
  }
  uint64_t v19 = a1[13];
  uint64_t v20 = a2[13];
  if (v19)
  {
    if (!v20) {
      return 0;
    }
    if (a1[12] != a2[12] || v19 != v20)
    {
      _stringCompareWithSmolCheck(_:_:expecting:)();
      uint64_t result = sub_1001190E0();
      if ((v22 & 1) == 0) {
        return result;
      }
    }
  }
  else if (v20)
  {
    return 0;
  }
  if (a1[14] != a2[14] || a1[15] != a2[15])
  {
    _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = sub_1001190E0();
    if ((v24 & 1) == 0) {
      return result;
    }
  }
  if (a1[16] != a2[16] || a1[17] != a2[17])
  {
    _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = sub_1001190E0();
    if ((v26 & 1) == 0) {
      return result;
    }
  }
  if (a1[18] != a2[18] || a1[19] != a2[19])
  {
    _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = sub_1001190E0();
    if ((v28 & 1) == 0) {
      return result;
    }
  }
  uint64_t v29 = a1[21];
  uint64_t v30 = a2[21];
  if (v29)
  {
    if (v30)
    {
      if (a1[20] != a2[20] || v29 != v30)
      {
        _stringCompareWithSmolCheck(_:_:expecting:)();
        uint64_t result = sub_1001190E0();
        if ((v32 & 1) == 0) {
          return result;
        }
      }
      goto LABEL_70;
    }
    return 0;
  }
  if (v30) {
    return 0;
  }
LABEL_70:
  BOOL v33 = a1[22] == a2[22] && a1[23] == a2[23];
  if (v33 || (_stringCompareWithSmolCheck(_:_:expecting:)(), uint64_t result = sub_1001190E0(), (v34 & 1) != 0))
  {
    if (a1[24] == a2[24] && a1[25] == a2[25])
    {
      return 1;
    }
    else
    {
      return _stringCompareWithSmolCheck(_:_:expecting:)();
    }
  }
  return result;
}

uint64_t sub_10058EC70@<X0>(uint64_t *a1@<X8>)
{
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C33BA0;
  *(void *)(inited + 32) = 0x726564616568;
  *(void *)(inited + 40) = 0xE600000000000000;
  uint64_t v4 = v1[4];
  uint64_t v5 = (void *)v1[5];
  uint64_t v14 = *v1;
  uint64_t v17 = v1[1];
  swift_bridgeObjectRetain();
  v6._uint64_t countAndFlagsBits = v4;
  v6._object = v5;
  String.append(_:)(v6);
  *(void *)(inited + 48) = v14;
  *(void *)(inited + 56) = v17;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 80) = 0x65746F6F46706F74;
  *(void *)(inited + 88) = 0xE900000000000072;
  uint64_t v7 = v1[14];
  uint64_t v8 = (void *)v1[15];
  uint64_t v15 = v1[10];
  uint64_t v18 = v1[11];
  swift_bridgeObjectRetain();
  v9._uint64_t countAndFlagsBits = v7;
  v9._object = v8;
  String.append(_:)(v9);
  *(void *)(inited + 96) = v15;
  *(void *)(inited + 104) = v18;
  *(void *)(inited + 120) = &type metadata for String;
  strcpy((char *)(inited + 128), "bottomFooter");
  *(unsigned char *)(inited + 141) = 0;
  *(_WORD *)(inited + 142) = -5120;
  uint64_t v11 = v1[22];
  char v10 = (void *)v1[23];
  uint64_t v16 = v1[18];
  uint64_t v19 = v1[19];
  swift_bridgeObjectRetain();
  v12._uint64_t countAndFlagsBits = v11;
  v12._object = v10;
  String.append(_:)(v12);
  *(void *)(inited + 168) = &type metadata for String;
  *(void *)(inited + 144) = v16;
  *(void *)(inited + 152) = v19;
  Dictionary.init(dictionaryLiteral:)();
  a1[3] = sub_10017DF08(&qword_100E80A90);
  a1[4] = sub_10058EEB4();
  sub_100170694(a1);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_10058EE28()
{
  sub_10058EF08();

  return ShortDescribable.description.getter();
}

unint64_t sub_10058EE68()
{
  unint64_t result = qword_100E80A88;
  if (!qword_100E80A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E80A88);
  }
  return result;
}

unint64_t sub_10058EEB4()
{
  unint64_t result = qword_100E80A98;
  if (!qword_100E80A98)
  {
    sub_10018C6DC(&qword_100E80A90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E80A98);
  }
  return result;
}

unint64_t sub_10058EF08()
{
  unint64_t result = qword_100E80AA0;
  if (!qword_100E80AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E80AA0);
  }
  return result;
}

uint64_t destroy for AveragesComponentViewModel()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for AveragesComponentViewModel(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  uint64_t v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  uint64_t v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  uint64_t v11 = a2[17];
  a1[16] = a2[16];
  a1[17] = v11;
  uint64_t v12 = a2[19];
  a1[18] = a2[18];
  a1[19] = v12;
  uint64_t v13 = a2[21];
  a1[20] = a2[20];
  a1[21] = v13;
  uint64_t v14 = a2[23];
  a1[22] = a2[22];
  a1[23] = v14;
  uint64_t v15 = a2[25];
  a1[24] = a2[24];
  a1[25] = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AveragesComponentViewModel(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  a1[21] = a2[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[22] = a2[22];
  a1[23] = a2[23];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[24] = a2[24];
  a1[25] = a2[25];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for AveragesComponentViewModel(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0xD0uLL);
}

void *assignWithTake for AveragesComponentViewModel(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a2[17];
  a1[16] = a2[16];
  a1[17] = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = a2[19];
  a1[18] = a2[18];
  a1[19] = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = a2[21];
  a1[20] = a2[20];
  a1[21] = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = a2[23];
  a1[22] = a2[22];
  a1[23] = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = a2[25];
  a1[24] = a2[24];
  a1[25] = v16;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AveragesComponentViewModel(uint64_t a1, int a2)
{
  if (a2)
  {
    if (a2 < 0 && *(unsigned char *)(a1 + 208))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      unint64_t v2 = *(void *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF) {
        LODWORD(v2) = -1;
      }
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AveragesComponentViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 208) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 208) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AveragesComponentViewModel()
{
  return &type metadata for AveragesComponentViewModel;
}

void sub_10058F4A0()
{
  type metadata accessor for AppConfiguration();
  firstly<A>(closure:)();
  id v0 = (id)zalgo.getter();
  Promise.then<A, B>(on:disposeOn:closure:)();
  swift_release();
  swift_release();
}

uint64_t sub_10058F57C(uint64_t a1)
{
  return AppConfigurationManagerType.fetchAppConfig()();
}

uint64_t sub_10058F5D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for PrivacyConfiguration();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_10058F7D4();
  uint64_t v8 = result + 1;
  if (__OFADD__(result, 1))
  {
    __break(1u);
  }
  else
  {
    AppConfiguration.privacy.getter();
    uint64_t v9 = PrivacyConfiguration.reportWeatherEventSubmissionDrivenIdentifierResetCount.getter();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if (v8 >= v9)
    {
      sub_1001B1E64((void *)(a2 + 56), *(void *)(a2 + 80));
      dispatch thunk of IdentityRotationManagerType.rotateReportWeatherIdentifier()();
    }
    return sub_10058F70C();
  }
  return result;
}

uint64_t sub_10058F70C()
{
  if (qword_100E62AA0 != -1) {
    swift_once();
  }
  sub_10058F930(&qword_100E80B58);
  return Updatable.save<A>(setting:value:)();
}

uint64_t sub_10058F7D4()
{
  if (qword_100E62AA0 != -1) {
    swift_once();
  }
  sub_10058F930(&qword_100E80B50);
  Configurable.setting<A>(_:)();
  return v1;
}

uint64_t type metadata accessor for ReportWeatherSubmissionTracker()
{
  return self;
}

void sub_10058F8BC()
{
}

uint64_t sub_10058F8E0()
{
  return sub_10058F930(&qword_100E80B50);
}

uint64_t sub_10058F914()
{
  return sub_10058F57C(v0);
}

uint64_t sub_10058F930(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ReportWeatherSubmissionTracker();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10058F970()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
  sub_100179DC0();
  sub_100162F0C();
  v1();

  type metadata accessor for OSSignpostID();
  sub_100179DC0();
  sub_100162F0C();
  v2();
  return v0;
}

uint64_t sub_10058FA20()
{
  sub_10058F970();

  return swift_deallocClassInstance();
}

uint64_t sub_10058FA78()
{
  return type metadata accessor for WeatherDataDebounceMiddleware();
}

uint64_t sub_10058FA80()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

void _s7Weather13LocaleMonitorC29applicationDidEnterBackgroundyyF_0()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0 name:NSCurrentLocaleDidChangeNotification object:0];
}

uint64_t LocaleMonitor.deinit()
{
  swift_release();
  sub_1000F3400(v0 + OBJC_IVAR____TtC7Weather13LocaleMonitor_lastLocale, &qword_100E63730);
  sub_1000F3400(v0 + OBJC_IVAR____TtC7Weather13LocaleMonitor_lastTemperatureUnit, &qword_100E6F620);
  return v0;
}

uint64_t LocaleMonitor.__deallocating_deinit()
{
  LocaleMonitor.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_10058FC18()
{
  return type metadata accessor for LocaleMonitor();
}

uint64_t sub_10058FC20(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ElevatedAqiNewsContentView()
{
  return sub_100109098();
}

uint64_t sub_10058FC80()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10058FCC4@<X0>(uint64_t a1@<X0>, __int16 a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v57 = a7;
  uint64_t v58 = a6;
  uint64_t v45 = a4;
  uint64_t v52 = a3;
  v70[2] = a5;
  v70[3] = a5;
  int v9 = a2;
  unsigned int v10 = a2 & 0x100;
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  v70[7] = a5;
  sub_100179D2C();
  uint64_t v50 = sub_10017F7C0();
  uint64_t v56 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v53 = v11;
  __chkstk_darwin(v12);
  sub_100162EF8();
  uint64_t v55 = v13;
  __chkstk_darwin(v14);
  uint64_t v54 = (uint64_t)&v41 - v15;
  v70[0] = a5;
  v70[1] = a5;
  v70[2] = type metadata accessor for Optional();
  v70[3] = a5;
  v70[4] = a5;
  v70[5] = a5;
  v70[6] = a5;
  sub_100179D2C();
  sub_10017F7C0();
  uint64_t v51 = type metadata accessor for Group();
  sub_100179C0C();
  uint64_t v49 = v16;
  __chkstk_darwin(v17);
  sub_100162EF8();
  uint64_t v59 = v18;
  __chkstk_darwin(v19);
  uint64_t v60 = (uint64_t)&v41 - v20;
  if (v9)
  {
    if (v9 == 1)
    {
      if (v10)
      {
        uint64_t v21 = &qword_100EA2F18;
        goto LABEL_11;
      }
    }
    else if (v10)
    {
      uint64_t v21 = &qword_100EA32E8;
      goto LABEL_11;
    }
    uint64_t v21 = &qword_100EA3100;
    goto LABEL_11;
  }
  if (v10) {
    uint64_t v21 = &qword_100EA2B48;
  }
  else {
    uint64_t v21 = &qword_100EA2D30;
  }
LABEL_11:
  memcpy(v70, v21, sizeof(v70));
  char v22 = memcpy(v69, v70, sizeof(v69));
  __chkstk_darwin(v22);
  uint64_t v23 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v23;
  *(&v41 - 6) = a1;
  *((unsigned char *)&v41 - 40) = v9;
  uint64_t v44 = a1;
  int v42 = v9;
  unsigned int v43 = v10 >> 8;
  *((unsigned char *)&v41 - 39) = BYTE1(v10);
  uint64_t v24 = v45;
  *(&v41 - 4) = v52;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v26 = v59;
  Group<A>.init(content:)();
  uint64_t v68 = WitnessTable;
  uint64_t v27 = v51;
  uint64_t v46 = swift_getWitnessTable();
  sub_100121584(v26, v27, v60);
  uint64_t v28 = v49;
  char v47 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 8);
  uint64_t v48 = v49 + 8;
  uint64_t v29 = v47(v26, v27);
  __chkstk_darwin(v29);
  uint64_t v30 = v58;
  *(&v41 - 8) = a5;
  *(&v41 - 7) = v30;
  *(&v41 - 6) = v44;
  *((unsigned char *)&v41 - 40) = v42;
  *((unsigned char *)&v41 - 39) = v43;
  *(&v41 - 4) = v31;
  *(&v41 - 3) = v24;
  *(&v41 - 2) = (uint64_t)v69;
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v33 = v55;
  Group<A>.init(content:)();
  uint64_t v67 = v32;
  uint64_t v34 = v56;
  uint64_t v58 = swift_getWitnessTable();
  uint64_t v35 = v54;
  sub_100121584(v33, v34, v54);
  uint64_t v36 = v53;
  uint64_t v37 = *(void (**)(void))(v53 + 8);
  sub_10017C768();
  v37();
  uint64_t v38 = v59;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 16))(v59, v60, v27);
  uint64_t v65 = v38;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v33, v35, v34);
  uint64_t v66 = v33;
  uint64_t v63 = v27;
  uint64_t v64 = v34;
  uint64_t v61 = v46;
  uint64_t v62 = v58;
  sub_1006E9080();
  sub_10017C768();
  v37();
  uint64_t v39 = v47;
  v47(v60, v27);
  sub_10017C768();
  v37();
  return v39(v38, v27);
}

uint64_t sub_100590190@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v103 = a5;
  uint64_t v104 = a2;
  uint64_t v85 = a6;
  uint64_t v9 = sub_10017DF08(&qword_100E64E80);
  __chkstk_darwin(v9 - 8);
  uint64_t v82 = (uint64_t)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for Optional();
  uint64_t v93 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  uint64_t v98 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v97 = (char *)&v79 - v13;
  uint64_t v81 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v81);
  uint64_t v80 = (uint64_t)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v79 - v16;
  uint64_t v18 = *(void *)(a4 - 8);
  __chkstk_darwin(v19);
  uint64_t v84 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v92 = (char *)&v79 - v22;
  __chkstk_darwin(v23);
  uint64_t v91 = (char *)&v79 - v24;
  __chkstk_darwin(v25);
  uint64_t v90 = (char *)&v79 - v26;
  __chkstk_darwin(v27);
  uint64_t v89 = (char *)&v79 - v28;
  __chkstk_darwin(v29);
  uint64_t v88 = (char *)&v79 - v30;
  __chkstk_darwin(v31);
  uint64_t v87 = (char *)&v79 - v32;
  __chkstk_darwin(v33);
  uint64_t v94 = (char *)&v79 - v34;
  __chkstk_darwin(v35);
  uint64_t v102 = (char *)&v79 - v36;
  __chkstk_darwin(v37);
  uint64_t v95 = (char *)&v79 - v38;
  __chkstk_darwin(v39);
  uint64_t v41 = (char *)&v79 - v40;
  __chkstk_darwin(v42);
  uint64_t v44 = (char *)&v79 - v43;
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather22ElevatedAqiNewsContent8_Storage_airQuality, (uint64_t)v17);
  v104(v17, *a3, a3[1], a3[2], a3[3]);
  sub_1001F2B74((uint64_t)v17);
  uint64_t v86 = v44;
  sub_100121584((uint64_t)v41, a4, (uint64_t)v44);
  uint64_t v83 = v18;
  uint64_t v45 = *(void (**)(char *, uint64_t))(v18 + 8);
  v45(v41, a4);
  sub_1001F3734(a1 + OBJC_IVAR____TtCV7Weather22ElevatedAqiNewsContent8_Storage_newsArticle, (uint64_t)v17);
  v104(v17, a3[33], a3[34], a3[35], a3[36]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584((uint64_t)v41, a4, (uint64_t)v95);
  uint64_t v100 = (void (*)(uint64_t, uint64_t))v45;
  uint64_t v101 = v41;
  v45(v41, a4);
  uint64_t v96 = a1;
  uint64_t v46 = a1 + OBJC_IVAR____TtCV7Weather22ElevatedAqiNewsContent8_Storage_map;
  swift_beginAccess();
  uint64_t v47 = v46;
  uint64_t v48 = v82;
  sub_10027A764(v47, v82);
  if (_s7Weather24LocationCompositionStateOwet_0(v48, 1, v81) == 1)
  {
    sub_10027A7CC(v48);
  }
  else
  {
    uint64_t v49 = v80;
    sub_10027A82C(v48, v80);
    sub_10027A890((uint64_t)(a3 + 24), (uint64_t)v127);
    sub_10027A890((uint64_t)v127, (uint64_t)v128);
    if (v129 != 1)
    {
      uint64_t v51 = (uint64_t)v102;
      v104((char *)v49, v128[0], v128[1], v128[2], v128[3]);
      sub_1001F2B74(v49);
      uint64_t v52 = (uint64_t)v101;
      sub_100121584(v51, a4, (uint64_t)v101);
      uint64_t v53 = v100;
      v100(v51, a4);
      uint64_t v50 = (uint64_t)v98;
      sub_100121584(v52, a4, (uint64_t)v98);
      v53(v52, a4);
      _s7Weather24LocationCompositionStateOwst_0(v50, 0, 1, a4);
      goto LABEL_7;
    }
    sub_1001F2B74(v49);
  }
  uint64_t v50 = (uint64_t)v98;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v98, 1, 1, a4);
LABEL_7:
  sub_1000CA354();
  uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v93 + 8);
  uint64_t v82 = (v93 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v54(v50, v99);
  sub_1001F3734(*(void *)(v96 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_hourlyForecast, (uint64_t)v17);
  uint64_t v55 = (uint64_t)v102;
  uint64_t v56 = v104;
  v104(v17, a3[16], a3[17], a3[18], a3[19]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584(v55, a4, (uint64_t)v101);
  v100(v55, a4);
  uint64_t v57 = v96;
  sub_1001F3734(*(void *)(v96 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_dailyForecast, (uint64_t)v17);
  uint64_t v58 = (uint64_t)v94;
  v56(v17, a3[8], a3[9], a3[10], a3[11]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584(v58, a4, v55);
  v100(v58, a4);
  sub_1001F3734(*(void *)(v57 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_uvIndex, (uint64_t)v17);
  uint64_t v59 = (uint64_t)v87;
  uint64_t v60 = v104;
  v104(v17, a3[49], a3[50], a3[51], a3[52]);
  sub_1001F2B74((uint64_t)v17);
  sub_100121584(v59, a4, v58);
  uint64_t v61 = (void (*)(char *, uint64_t))v100;
  v100(v59, a4);
  sub_1001F3734(*(void *)(v96 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_sunriseSunset, (uint64_t)v17);
  uint64_t v62 = (uint64_t)v88;
  v60(v17, a3[45], a3[46], a3[47], a3[48]);
  sub_1001F2B74((uint64_t)v17);
  uint64_t v63 = v103;
  sub_100121584(v62, a4, v59);
  uint64_t v64 = v61;
  v61((char *)v62, a4);
  uint64_t v65 = *(void (**)(uint64_t, char *, uint64_t))(v83 + 16);
  v65(v62, v86, a4);
  uint64_t v120 = v62;
  uint64_t v66 = v89;
  v65((uint64_t)v89, v95, a4);
  uint64_t v121 = v66;
  uint64_t v67 = v93 + 16;
  uint64_t v68 = (uint64_t)v98;
  (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v98, v97, v99);
  uint64_t v122 = v68;
  uint64_t v69 = v90;
  v65((uint64_t)v90, v101, a4);
  uint64_t v123 = v69;
  uint64_t v70 = v63;
  uint64_t v71 = v91;
  v65((uint64_t)v91, v102, a4);
  int v124 = v71;
  uint64_t v72 = v92;
  v65((uint64_t)v92, v94, a4);
  uint64_t v125 = v72;
  uint64_t v73 = v84;
  uint64_t v74 = v87;
  v65((uint64_t)v84, v87, a4);
  uint64_t v126 = v73;
  uint64_t v75 = v73;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v76 = v99;
  uint64_t v115 = v99;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v119 = a4;
  uint64_t v106 = v70;
  uint64_t v107 = v70;
  uint64_t v105 = v70;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v109 = v70;
  uint64_t v110 = v70;
  uint64_t v111 = v70;
  uint64_t v112 = v70;
  sub_1006E9080();
  v64(v74, a4);
  v64(v94, a4);
  v64(v102, a4);
  v64(v101, a4);
  uint64_t v77 = *(void (**)(char *, uint64_t))(v67 - 8);
  v77(v97, v76);
  v64(v95, a4);
  v64(v86, a4);
  v64(v75, a4);
  v64(v92, a4);
  v64(v91, a4);
  v64(v90, a4);
  v77(v98, v76);
  v64(v89, a4);
  return ((uint64_t (*)(char *, uint64_t))v64)(v88, a4);
}

uint64_t sub_100590BFC@<X0>(uint64_t a1@<X0>, void (*a2)(char *, void, void, void, void)@<X2>, void *a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v102 = a5;
  uint64_t v84 = a6;
  uint64_t v10 = type metadata accessor for LocationComponentContainerViewModel();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = *(void *)(a4 - 8);
  uint64_t v13 = v82;
  __chkstk_darwin(v14);
  uint64_t v83 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v98 = (char *)&v82 - v17;
  __chkstk_darwin(v18);
  uint64_t v97 = (char *)&v82 - v19;
  __chkstk_darwin(v20);
  uint64_t v96 = (char *)&v82 - v21;
  __chkstk_darwin(v22);
  uint64_t v95 = (char *)&v82 - v23;
  __chkstk_darwin(v24);
  uint64_t v93 = (char *)&v82 - v25;
  __chkstk_darwin(v26);
  uint64_t v92 = (char *)&v82 - v27;
  __chkstk_darwin(v28);
  uint64_t v90 = (char *)&v82 - v29;
  __chkstk_darwin(v30);
  uint64_t v89 = (char *)&v82 - v31;
  __chkstk_darwin(v32);
  uint64_t v101 = (char *)&v82 - v33;
  __chkstk_darwin(v34);
  uint64_t v87 = (char *)&v82 - v35;
  __chkstk_darwin(v36);
  uint64_t v86 = (char *)&v82 - v37;
  __chkstk_darwin(v38);
  uint64_t v100 = (char *)&v82 - v39;
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v82 - v41;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v82 - v44;
  __chkstk_darwin(v46);
  uint64_t v48 = (char *)&v82 - v47;
  uint64_t v94 = (char *)&v82 - v47;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_wind, (uint64_t)v12);
  uint64_t v49 = a3[57];
  uint64_t v50 = a3[58];
  uint64_t v51 = a3[59];
  uint64_t v52 = a3[60];
  uint64_t v99 = a2;
  a2(v12, v49, v50, v51, v52);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v45, a4, (uint64_t)v48);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v91 = v45;
  v53(v45, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_precipitationTotal, (uint64_t)v12);
  a2(v12, a3[41], a3[42], a3[43], a3[44]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584((uint64_t)v42, a4, (uint64_t)v45);
  uint64_t v88 = v42;
  v53(v42, a4);
  uint64_t v85 = a1;
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_feelsLike, (uint64_t)v12);
  uint64_t v54 = (uint64_t)v100;
  v99(v12, a3[12], a3[13], a3[14], a3[15]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v54, a4, (uint64_t)v42);
  uint64_t v55 = v54;
  v53((char *)v54, a4);
  sub_1001F3734(*(void *)(a1 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_humidity, (uint64_t)v12);
  uint64_t v56 = (uint64_t)v86;
  uint64_t v57 = v99;
  v99(v12, a3[20], a3[21], a3[22], a3[23]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v56, a4, v55);
  v53((char *)v56, a4);
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_visibility, (uint64_t)v12);
  uint64_t v58 = (uint64_t)v87;
  v57(v12, a3[53], a3[54], a3[55], a3[56]);
  sub_1001F2B74((uint64_t)v12);
  uint64_t v59 = v58;
  sub_100121584(v58, a4, v56);
  v53((char *)v58, a4);
  uint64_t v60 = v85;
  sub_1001F3734(*(void *)(v85 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_pressure, (uint64_t)v12);
  uint64_t v61 = (uint64_t)v101;
  uint64_t v62 = v99;
  v99(v12, a3[37], a3[38], a3[39], a3[40]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v61, a4, v59);
  v53((char *)v61, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_moon, (uint64_t)v12);
  uint64_t v63 = (uint64_t)v89;
  v62(v12, a3[29], a3[30], a3[31], a3[32]);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v63, a4, (uint64_t)v101);
  v53((char *)v63, a4);
  sub_1001F3734(*(void *)(v60 + 16) + OBJC_IVAR____TtCV7Weather28LocationCommonViewComponents8_Storage_averages, (uint64_t)v12);
  uint64_t v64 = a3[4];
  uint64_t v65 = a3[5];
  uint64_t v66 = a3[6];
  uint64_t v67 = a3[7];
  uint64_t v68 = (uint64_t)v90;
  v62(v12, v64, v65, v66, v67);
  sub_1001F2B74((uint64_t)v12);
  sub_100121584(v68, a4, v63);
  v53((char *)v68, a4);
  uint64_t v69 = *(void (**)(uint64_t, char *, uint64_t))(v82 + 16);
  v69(v68, v94, a4);
  uint64_t v119 = v68;
  uint64_t v70 = v92;
  v69((uint64_t)v92, v91, a4);
  uint64_t v120 = v70;
  uint64_t v71 = v93;
  v69((uint64_t)v93, v88, a4);
  uint64_t v121 = v71;
  uint64_t v72 = v95;
  v69((uint64_t)v95, v100, a4);
  uint64_t v122 = v72;
  uint64_t v73 = v96;
  uint64_t v74 = v86;
  v69((uint64_t)v96, v86, a4);
  uint64_t v123 = v73;
  uint64_t v75 = v97;
  uint64_t v76 = v87;
  v69((uint64_t)v97, v87, a4);
  int v124 = v75;
  uint64_t v77 = v98;
  uint64_t v78 = (uint64_t)v101;
  v69((uint64_t)v98, v101, a4);
  uint64_t v125 = v77;
  uint64_t v79 = v83;
  uint64_t v80 = v89;
  v69((uint64_t)v83, v89, a4);
  uint64_t v126 = v79;
  uint64_t v111 = a4;
  uint64_t v112 = a4;
  uint64_t v113 = a4;
  uint64_t v114 = a4;
  uint64_t v115 = a4;
  uint64_t v116 = a4;
  uint64_t v117 = a4;
  uint64_t v118 = a4;
  uint64_t v103 = v102;
  uint64_t v104 = v102;
  uint64_t v105 = v102;
  uint64_t v106 = v102;
  uint64_t v107 = v102;
  uint64_t v108 = v102;
  uint64_t v109 = v102;
  uint64_t v110 = v102;
  sub_1006E9080();
  v53(v80, a4);
  v53((char *)v78, a4);
  v53(v76, a4);
  v53(v74, a4);
  v53(v100, a4);
  v53(v88, a4);
  v53(v91, a4);
  v53(v94, a4);
  v53(v79, a4);
  v53(v98, a4);
  v53(v97, a4);
  v53(v96, a4);
  v53(v95, a4);
  v53(v93, a4);
  v53(v92, a4);
  return ((uint64_t (*)(char *, uint64_t))v53)(v90, a4);
}

uint64_t sub_100591644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(v2 + 9)) {
    __int16 v3 = 256;
  }
  else {
    __int16 v3 = 0;
  }
  return sub_10058FCC4(*(void *)v2, v3 | *(unsigned __int8 *)(v2 + 8), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(a1 + 16), *(void *)(a1 + 24), a2);
}

uint64_t sub_100591670()
{
  return sub_1005916A0((uint64_t (*)(void, void, void, void, void, void, void))sub_100590190);
}

uint64_t sub_100591688()
{
  return sub_1005916A0((uint64_t (*)(void, void, void, void, void, void, void))sub_100590BFC);
}

uint64_t sub_1005916A0(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  if (*(unsigned char *)(v1 + 41)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return a1(*(void *)(v1 + 32), v2 | *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void *sub_1005916D4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[3];
    *(void *)(a1 + 16) = a2[2];
    *(void *)(a1 + 24) = v8;
    uint64_t v9 = a2[5];
    *(void *)(a1 + 32) = a2[4];
    *(void *)(a1 + 40) = v9;
    uint64_t v10 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v10;
    uint64_t v11 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v11;
    uint64_t v12 = a2[11];
    *(void *)(a1 + 80) = a2[10];
    *(void *)(a1 + 88) = v12;
    uint64_t v13 = a2[13];
    *(void *)(a1 + 96) = a2[12];
    *(void *)(a1 + 104) = v13;
    uint64_t v14 = a2[15];
    *(void *)(a1 + 112) = a2[14];
    *(void *)(a1 + 120) = v14;
    uint64_t v15 = a2[17];
    *(void *)(a1 + 128) = a2[16];
    *(void *)(a1 + 136) = v15;
    uint64_t v16 = a2[19];
    *(void *)(a1 + 144) = a2[18];
    *(void *)(a1 + 152) = v16;
    uint64_t v17 = a2[21];
    *(void *)(a1 + 160) = a2[20];
    *(void *)(a1 + 168) = v17;
    *(_OWORD *)(a1 + 176) = *((_OWORD *)a2 + 11);
    uint64_t v18 = *(int *)(a3 + 68);
    uint64_t v23 = (uint64_t)a2 + v18;
    uint64_t v24 = a1 + v18;
    *(void *)(a1 + 192) = a2[24];
    uint64_t v19 = type metadata accessor for WindComponentCompassViewModel();
    uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22(v24, v23, v19);
    *(void *)((char *)v4 + *(int *)(a3 + 72)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 72));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1005918B4(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 68);
  uint64_t v5 = type metadata accessor for WindComponentCompassViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100591998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  uint64_t v9 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v9;
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  uint64_t v11 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v11;
  uint64_t v12 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v12;
  uint64_t v13 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v13;
  uint64_t v14 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v14;
  uint64_t v15 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v15;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  uint64_t v16 = *(int *)(a3 + 68);
  uint64_t v20 = a2 + v16;
  uint64_t v21 = a1 + v16;
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  uint64_t v17 = type metadata accessor for WindComponentCompassViewModel();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19(v21, v20, v17);
  *(void *)(a1 + *(int *)(a3 + 72)) = *(void *)(a2 + *(int *)(a3 + 72));
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_100591B28(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[16] = a2[16];
  a1[17] = a2[17];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[18] = a2[18];
  a1[19] = a2[19];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[20] = a2[20];
  a1[21] = a2[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[22] = a2[22];
  a1[23] = a2[23];
  a1[24] = a2[24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 68);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for WindComponentCompassViewModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)((char *)a1 + *(int *)(a3 + 72)) = *(void *)((char *)a2 + *(int *)(a3 + 72));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100591D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  long long v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  long long v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v9;
  long long v10 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v10;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  uint64_t v11 = *(int *)(a3 + 68);
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  uint64_t v14 = type metadata accessor for WindComponentCompassViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  *(void *)(a1 + *(int *)(a3 + 72)) = *(void *)(a2 + *(int *)(a3 + 72));
  return a1;
}

void *sub_100591E20(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  uint64_t v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = a2[11];
  a1[10] = a2[10];
  a1[11] = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = a2[13];
  a1[12] = a2[12];
  a1[13] = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = a2[15];
  a1[14] = a2[14];
  a1[15] = v13;
  swift_bridgeObjectRelease();
  uint64_t v14 = a2[17];
  a1[16] = a2[16];
  a1[17] = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = a2[19];
  a1[18] = a2[18];
  a1[19] = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = a2[21];
  a1[20] = a2[20];
  a1[21] = v16;
  swift_bridgeObjectRelease();
  a1[22] = a2[22];
  uint64_t v17 = a2[24];
  a1[23] = a2[23];
  a1[24] = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = *(int *)(a3 + 68);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = type metadata accessor for WindComponentCompassViewModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 40))(v19, v20, v21);
  *(void *)((char *)a1 + *(int *)(a3 + 72)) = *(void *)((char *)a2 + *(int *)(a3 + 72));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100591F80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100591F94);
}

uint64_t sub_100591F94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for WindComponentCompassViewModel();
    uint64_t v9 = a1 + *(int *)(a3 + 68);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_10059201C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100592030);
}

uint64_t sub_100592030(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for WindComponentCompassViewModel();
    uint64_t v8 = v5 + *(int *)(a4 + 68);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t sub_1005920B0(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (!v4 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  BOOL v5 = *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
  if (!v5 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  BOOL v6 = *(void *)(a1 + 32) == *(void *)(a2 + 32) && *(void *)(a1 + 40) == *(void *)(a2 + 40);
  if (!v6 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  BOOL v7 = *(void *)(a1 + 48) == *(void *)(a2 + 48) && *(void *)(a1 + 56) == *(void *)(a2 + 56);
  if (!v7 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  BOOL v8 = *(void *)(a1 + 64) == *(void *)(a2 + 64) && *(void *)(a1 + 72) == *(void *)(a2 + 72);
  if (!v8 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  BOOL v9 = *(void *)(a1 + 80) == *(void *)(a2 + 80) && *(void *)(a1 + 88) == *(void *)(a2 + 88);
  if (!v9 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  BOOL v10 = *(void *)(a1 + 96) == *(void *)(a2 + 96) && *(void *)(a1 + 104) == *(void *)(a2 + 104);
  if (!v10 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  BOOL v11 = *(void *)(a1 + 112) == *(void *)(a2 + 112) && *(void *)(a1 + 120) == *(void *)(a2 + 120);
  if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  BOOL v12 = *(void *)(a1 + 128) == *(void *)(a2 + 128) && *(void *)(a1 + 136) == *(void *)(a2 + 136);
  if (!v12 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  BOOL v13 = *(void *)(a1 + 144) == *(void *)(a2 + 144) && *(void *)(a1 + 152) == *(void *)(a2 + 152);
  if (!v13 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  BOOL v14 = *(void *)(a1 + 160) == *(void *)(a2 + 160) && *(void *)(a1 + 168) == *(void *)(a2 + 168);
  if (!v14 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  if (*(double *)(a1 + 176) != *(double *)(a2 + 176)) {
    return 0;
  }
  BOOL v15 = *(void *)(a1 + 184) == *(void *)(a2 + 184) && *(void *)(a1 + 192) == *(void *)(a2 + 192);
  if (!v15 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  uint64_t v16 = type metadata accessor for WindComponentViewModel();
  if ((static WindComponentCompassViewModel.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v17 = *(int *)(v16 + 72);
  uint64_t v18 = *(void *)(a1 + v17);
  uint64_t v19 = *(void *)(a2 + v17);

  return sub_100BDB36C(v18, v19);
}

uint64_t static Neighborhood.__derived_struct_equals(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  BOOL v12 = a1 == a5 && a2 == a6;
  if (v12 || (char v13 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v13 & 1) != 0))
  {
    if (a3 == a7 && a4 == a8)
    {
      return 1;
    }
    else
    {
      return _stringCompareWithSmolCheck(_:_:expecting:)();
    }
  }
  return result;
}

uint64_t sub_100592364(uint64_t *a1, uint64_t *a2)
{
  return static Neighborhood.__derived_struct_equals(_:_:)(*a1, a1[1], a1[2], a1[3], *a2, a2[1], a2[2], a2[3]);
}

double sub_100592380()
{
  if ((*(unsigned char *)(v0 + 40) & 1) == 0) {
    return *(double *)(v0 + 32);
  }
  swift_beginAccess();
  double result = sub_10052E644();
  *(double *)(v0 + 32) = result;
  *(unsigned char *)(v0 + 40) = 0;
  return result;
}

uint64_t sub_1005923E0()
{
  type metadata accessor for Font.TextStyle();
  sub_10017CE00();
  __chkstk_darwin(v2);
  sub_10011BFD8();
  if (*(void *)(v0 + 8))
  {
    uint64_t v1 = *(void *)(v0 + 8);
  }
  else
  {
    uint64_t v3 = sub_10019ED58();
    v4(v3);
    static Font.Weight.semibold.getter();
    static Font.system(_:weight:)();
    uint64_t v5 = sub_10017D080();
    v6(v5);
    swift_retain();
    swift_release();
    *(void *)(v0 + 8) = v1;
  }
  swift_retain();
  return v1;
}

uint64_t sub_1005924A8()
{
  type metadata accessor for Font.TextStyle();
  sub_10017CE00();
  __chkstk_darwin(v2);
  sub_10011BFD8();
  if (*v0)
  {
    uint64_t v1 = *v0;
  }
  else
  {
    uint64_t v3 = sub_10019ED58();
    v4(v3);
    static Font.Weight.semibold.getter();
    static Font.system(_:weight:)();
    uint64_t v5 = sub_10017D080();
    v6(v5);
    swift_retain();
    swift_release();
    uint64_t *v0 = v1;
  }
  swift_retain();
  return v1;
}

double sub_100592570()
{
  if ((*(unsigned char *)(v0 + 192) & 1) == 0) {
    return *(double *)(v0 + 184);
  }
  *(void *)(v0 + 184) = 0x4000000000000000;
  *(unsigned char *)(v0 + 192) = 0;
  return 2.0;
}

double sub_100592594()
{
  if ((*(unsigned char *)(v0 + 96) & 1) == 0) {
    return *(double *)(v0 + 64);
  }
  double result = sub_10059263C();
  *(double *)(v0 + 64) = result;
  *(_OWORD *)(v0 + 72) = xmmword_100C45C00;
  *(void *)(v0 + 88) = 0x4033000000000000;
  *(unsigned char *)(v0 + 96) = 0;
  return result;
}

double sub_1005925E8()
{
  if ((*(unsigned char *)(v0 + 176) & 1) == 0) {
    return *(double *)(v0 + 144);
  }
  double result = sub_10059263C();
  *(double *)(v0 + 144) = result;
  *(_OWORD *)(v0 + 152) = xmmword_100C45C00;
  *(void *)(v0 + 168) = 0x4033000000000000;
  *(unsigned char *)(v0 + 176) = 0;
  return result;
}

double sub_10059263C()
{
  if ((*(unsigned char *)(v0 + 56) & 1) == 0) {
    return *(double *)(v0 + 48);
  }
  *(void *)(v0 + 48) = 0x4033000000000000;
  *(unsigned char *)(v0 + 56) = 0;
  return 19.0;
}

double sub_100592660()
{
  if ((*(unsigned char *)(v0 + 232) & 1) == 0) {
    return *(double *)(v0 + 200);
  }
  *(_OWORD *)(v0 + 200) = xmmword_100C45C10;
  *(_OWORD *)(v0 + 216) = xmmword_100C45C10;
  *(unsigned char *)(v0 + 232) = 0;
  return 13.0;
}

double sub_10059269C()
{
  if ((*(unsigned char *)(v0 + 248) & 1) == 0) {
    return *(double *)(v0 + 240);
  }
  *(void *)(v0 + 240) = 0x4020000000000000;
  *(unsigned char *)(v0 + 248) = 0;
  return 8.0;
}

double sub_1005926C0()
{
  if ((*(unsigned char *)(v0 + 264) & 1) == 0) {
    return *(double *)(v0 + 256);
  }
  *(void *)(v0 + 256) = 0x4020000000000000;
  *(unsigned char *)(v0 + 264) = 0;
  return 8.0;
}

uint64_t sub_1005926E8()
{
  if (*(void *)(v0 + 272))
  {
    uint64_t v1 = *(void *)(v0 + 272);
  }
  else
  {
    id v2 = [self quaternarySystemFillColor];
    uint64_t v1 = Color.init(_:)();
    *(void *)(v0 + 272) = v1;
    swift_retain();
  }
  swift_retain();
  return v1;
}

uint64_t sub_100592750@<X0>(long long *a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  sub_10017DF08(&qword_100E64B00);
  sub_1001246C8(&qword_100E64B08, &qword_100E64B00);
  *a3 = ObservedObject.init(wrappedValue:)();
  a3[1] = v6;
  sub_1001262E4(a1, (uint64_t)(a3 + 2));
  uint64_t v7 = type metadata accessor for SearchView();
  sub_10024D364(a2, (uint64_t)a3 + *(int *)(v7 + 24), (uint64_t *)&unk_100EAA540);
  BOOL v8 = (char *)a3 + *(int *)(v7 + 28);
  uint64_t result = State.init(wrappedValue:)();
  *BOOL v8 = v10;
  *((void *)v8 + 1) = v11;
  return result;
}

uint64_t type metadata accessor for SearchView()
{
  uint64_t result = qword_100E81080;
  if (!qword_100E81080) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100592894(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *(void *)a1 = *a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    long long v8 = *(_OWORD *)(a2 + 5);
    *(_OWORD *)(a1 + 40) = v8;
    uint64_t v9 = v8;
    char v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
    swift_retain();
    v10(a1 + 16, (uint64_t)(a2 + 2), v9);
    uint64_t v11 = *(int *)(a3 + 24);
    BOOL v12 = (void *)(a1 + v11);
    char v13 = (uint64_t *)((char *)a2 + v11);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v14 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
      {
        uint64_t v15 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
      }
    }
    else
    {
      *BOOL v12 = *v13;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = *(int *)(a3 + 28);
    uint64_t v18 = a1 + v17;
    uint64_t v19 = (uint64_t)a2 + v17;
    *(unsigned char *)uint64_t v18 = *(unsigned char *)v19;
    *(void *)(v18 + 8) = *(void *)(v19 + 8);
  }
  swift_retain();
  return a1;
}

uint64_t sub_100592A8C(uint64_t a1, uint64_t a2)
{
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 16);
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
    }
  }
  else
  {
    swift_release();
  }

  return swift_release();
}

uint64_t sub_100592B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  uint64_t v7 = a2 + 16;
  long long v8 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 40) = v8;
  uint64_t v9 = v8;
  char v10 = **(void (***)(uint64_t, uint64_t, uint64_t))(v8 - 8);
  swift_retain();
  v10(a1 + 16, v7, v9);
  uint64_t v11 = *(int *)(a3 + 24);
  BOOL v12 = (void *)(a1 + v11);
  char v13 = (void *)(a2 + v11);
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v14 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v13, 1, v14))
    {
      uint64_t v15 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v12, v13, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v12, 0, 1, v14);
    }
  }
  else
  {
    *BOOL v12 = *v13;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v16 = *(int *)(a3 + 28);
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  swift_retain();
  return a1;
}

void *sub_100592D14(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  sub_1000C1E18(a1 + 2, a2 + 2);
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (void *)((char *)a1 + v6);
    long long v8 = (void *)((char *)a2 + v6);
    sub_1001781AC((uint64_t)a1 + v6, (uint64_t *)&unk_100EAA560);
    sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
      {
        uint64_t v10 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
      }
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v11 = *(int *)(a3 + 28);
  BOOL v12 = (char *)a1 + v11;
  char v13 = (char *)a2 + v11;
  *BOOL v12 = *v13;
  *((void *)v12 + 1) = *((void *)v13 + 1);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100592EBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v7 = *(int *)(a3 + 24);
  long long v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v11 = type metadata accessor for UserInterfaceSizeClass();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v9, 1, v11))
    {
      uint64_t v12 = sub_10017DF08(&qword_100E65ED8);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v8, 0, 1, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  *(_OWORD *)(a1 + *(int *)(a3 + 28)) = *(_OWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_100593020(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 16);
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  if (a1 != a2)
  {
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (void *)(a1 + v8);
    uint64_t v10 = (const void *)(a2 + v8);
    sub_1001781AC(a1 + v8, (uint64_t *)&unk_100EAA560);
    uint64_t v11 = sub_10017DF08((uint64_t *)&unk_100EAA560);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v12 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v12))
      {
        uint64_t v13 = sub_10017DF08(&qword_100E65ED8);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v9, v10, v12);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v12);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
  }
  uint64_t v14 = *(int *)(a3 + 28);
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  *(unsigned char *)uint64_t v15 = *(unsigned char *)v16;
  *(void *)(v15 + 8) = *(void *)(v16 + 8);
  swift_release();
  return a1;
}

uint64_t sub_1005931C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005931D8);
}

uint64_t sub_1005931D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10017DF08((uint64_t *)&unk_100EAA540);
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_100593264(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100593278);
}

uint64_t sub_100593278(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100EAA540);
    uint64_t v8 = v5 + *(int *)(a4 + 24);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

void sub_1005932FC()
{
  sub_1002308A0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1005933A4()
{
  return swift_getOpaqueTypeConformance2();
}

#error "1005934C8: call analysis failed (funcsize=78)"

uint64_t sub_10059350C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v196 = a2;
  uint64_t v164 = type metadata accessor for SearchZeroKeywordView();
  __chkstk_darwin(v164);
  uint64_t v163 = (uint64_t)&v152 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = sub_10017DF08(&qword_100E810C8);
  __chkstk_darwin(v175);
  uint64_t v162 = (char *)&v152 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v165 = (uint64_t)&v152 - v6;
  uint64_t v172 = sub_10017DF08(&qword_100E810D0);
  __chkstk_darwin(v172);
  uint64_t v174 = (uint64_t)&v152 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = sub_10017DF08(&qword_100E810D8);
  __chkstk_darwin(v173);
  uint64_t v158 = (uint64_t *)((char *)&v152 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_10017DF08(&qword_100E810E0);
  __chkstk_darwin(v9 - 8);
  uint64_t v156 = (uint64_t)&v152 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v157 = (char *)&v152 - v12;
  uint64_t v192 = type metadata accessor for SearchView();
  uint64_t v153 = *(void *)(v192 - 8);
  __chkstk_darwin(v192);
  uint64_t v154 = v13;
  uint64_t v155 = (uint64_t)&v152 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = sub_10017DF08(&qword_100E810E8);
  __chkstk_darwin(v185);
  uint64_t v176 = (char *)&v152 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v183 = sub_10017DF08(&qword_100E810F0);
  __chkstk_darwin(v183);
  uint64_t v184 = (uint64_t)&v152 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v191 = sub_10017DF08(&qword_100E810F8);
  __chkstk_darwin(v191);
  uint64_t v186 = (char *)&v152 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v182 = sub_10017DF08(&qword_100E81100);
  __chkstk_darwin(v182);
  uint64_t v171 = (uint64_t *)((char *)&v152 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v169 = type metadata accessor for LegacySearchResultsView();
  __chkstk_darwin(v169);
  uint64_t v160 = (char *)&v152 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v161 = (uint64_t)&v152 - v20;
  uint64_t v166 = sub_10017DF08(&qword_100E81108);
  __chkstk_darwin(v166);
  uint64_t v167 = (uint64_t)&v152 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v178 = type metadata accessor for SearchResultsView(0);
  __chkstk_darwin(v178);
  uint64_t v159 = (char *)&v152 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10017DF08(&qword_100E81110);
  __chkstk_darwin(v23 - 8);
  uint64_t v168 = (uint64_t)&v152 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v170 = (char *)&v152 - v26;
  uint64_t v193 = sub_10017DF08(&qword_100E81118);
  __chkstk_darwin(v193);
  uint64_t v195 = (uint64_t *)((char *)&v152 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v187 = sub_10017DF08(&qword_100E81120);
  __chkstk_darwin(v187);
  uint64_t v189 = (uint64_t)&v152 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = sub_10017DF08(&qword_100E81128);
  __chkstk_darwin(v179);
  uint64_t v180 = (uint64_t *)((char *)&v152 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v188 = sub_10017DF08(&qword_100E81130);
  __chkstk_darwin(v188);
  uint64_t v181 = (char *)&v152 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v194 = sub_10017DF08(&qword_100E81138);
  __chkstk_darwin(v194);
  uint64_t v190 = (char *)&v152 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_10017DF08(&qword_100E65ED8);
  __chkstk_darwin(v32 - 8);
  uint64_t v34 = (char *)&v152 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  uint64_t v37 = (char *)&v152 - v36;
  __chkstk_darwin(v38);
  uint64_t v40 = (char *)&v152 - v39;
  __chkstk_darwin(v41);
  uint64_t v43 = (char *)&v152 - v42;
  __chkstk_darwin(v44);
  uint64_t v46 = (char *)&v152 - v45;
  uint64_t v47 = a1;
  swift_retain();
  sub_10024F864((uint64_t)v198);
  swift_release();
  uint64_t v48 = *(void *)&v198[1];
  uint64_t v49 = *(void *)&v198[3];
  uint64_t v50 = *(void *)&v198[4];
  switch(LOBYTE(v198[6]))
  {
    case 1:
      uint64_t v178 = *(void *)&v198[5];
      uint64_t v179 = *((void *)&v198[4] + 1);
      uint64_t v180 = (uint64_t *)*((void *)&v198[5] + 1);
      uint64_t v181 = (char *)*((void *)&v198[3] + 1);
      uint64_t v175 = *(void *)&v198[2];
      uint64_t v176 = (char *)*((void *)&v198[1] + 1);
      uint64_t v182 = *((void *)&v198[2] + 1);
      uint64_t v177 = *((void *)&v198[0] + 1);
      uint64_t v165 = *(void *)&v198[1];
      char v59 = v198[0] & 1;
      sub_10019B2FC();
      uint64_t v60 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v40, 1, v60) == 1)
      {
        sub_1001781AC((uint64_t)v40, &qword_100E65ED8);
      }
      else
      {
        uint64_t v75 = *(void *)(v60 - 8);
        int v76 = (*(uint64_t (**)(char *, uint64_t))(v75 + 88))(v40, v60);
        int v77 = enum case for UserInterfaceSizeClass.regular(_:);
        (*(void (**)(char *, uint64_t))(v75 + 8))(v40, v60);
        if (v76 == v77)
        {
          id v78 = [self tertiarySystemBackgroundColor];
          uint64_t v79 = Color.init(_:)();
LABEL_21:
          uint64_t v80 = v79;
          uint64_t v81 = static SafeAreaRegions.all.getter();
          char v82 = static Edge.Set.all.getter();
          uint64_t v83 = swift_allocObject();
          *(unsigned char *)(v83 + 16) = v59;
          *(_DWORD *)(v83 + 17) = v200[0];
          *(_DWORD *)(v83 + 20) = *(_DWORD *)((char *)v200 + 3);
          uint64_t v84 = v165;
          *(void *)(v83 + 24) = v177;
          *(void *)(v83 + 32) = v84;
          uint64_t v85 = v175;
          *(void *)(v83 + 40) = v176;
          *(void *)(v83 + 48) = v85;
          *(void *)(v83 + 56) = v182;
          *(void *)(v83 + 64) = v49;
          *(void *)(v83 + 72) = v181;
          *(void *)(v83 + 80) = v50;
          uint64_t v86 = v178;
          *(void *)(v83 + 88) = v179;
          *(void *)(v83 + 96) = v86;
          *(void *)(v83 + 104) = v180;
          uint64_t v87 = sub_10017DF08(&qword_100E66BC8);
          *((void *)&v198[5] + 1) = 0;
          LOBYTE(v198[6]) = 0;
          *(void *)&v198[5] = sub_1008749EC;
          *(void *)&v198[0] = v87;
          if (qword_100E62290 != -1) {
            swift_once();
          }
          swift_beginAccess();
          sub_10006DF38((uint64_t)&xmmword_100F51398, (uint64_t)__dst, &qword_100E6F2A0);
          if (!*(void *)&__dst[24])
          {
            __break(1u);
            JUMPOUT(0x100595288);
          }
          sub_1001262E4((long long *)__dst, (uint64_t)&v198[1] + 8);
          *((void *)&v198[0] + 1) = sub_1002B3CBC;
          *(void *)&v198[1] = v83;
          uint64_t v88 = Dictionary.init(dictionaryLiteral:)();
          *(void *)&v198[4] = _swiftEmptyArrayStorage;
          *((void *)&v198[4] + 1) = v88;
          memcpy(__dst, v198, sizeof(__dst));
          sub_10006DF38((uint64_t)__dst, (uint64_t)v197, &qword_100E66B30);
          *(void *)&v198[0] = v80;
          BYTE8(v198[0]) = 1;
          *(void *)&v198[1] = v81;
          BYTE8(v198[1]) = v82;
          sub_10006DF38((uint64_t)v197, (uint64_t)&v198[2], &qword_100E66B30);
          swift_retain_n();
          sub_1001781AC((uint64_t)v197, &qword_100E66B30);
          swift_release();
          sub_10006DF38((uint64_t)v198, v184, &qword_100E81188);
          swift_storeEnumTagMultiPayload();
          sub_10017DF08(&qword_100E81188);
          sub_1001246C8(&qword_100E81180, &qword_100E81188);
          sub_100595630();
          uint64_t v89 = (uint64_t)v186;
          _ConditionalContent<>.init(storage:)();
          sub_1001781AC((uint64_t)v198, &qword_100E81188);
          sub_10006DF38(v89, v189, &qword_100E810F8);
          swift_storeEnumTagMultiPayload();
          sub_1005953F8();
          sub_100595590();
          uint64_t v90 = (uint64_t)v190;
          _ConditionalContent<>.init(storage:)();
          sub_1001781AC(v89, &qword_100E810F8);
          sub_10006DF38(v90, (uint64_t)v195, &qword_100E81138);
          swift_storeEnumTagMultiPayload();
          sub_10017DF08(&qword_100E81140);
          sub_10059537C();
          sub_100595498();
          _ConditionalContent<>.init(storage:)();
          sub_1001781AC(v90, &qword_100E81138);
          uint64_t v91 = __dst;
          uint64_t v92 = &qword_100E66B30;
          goto LABEL_38;
        }
      }
      uint64_t v79 = static Color.black.getter();
      goto LABEL_21;
    case 2:
      uint64_t v177 = *((void *)&v198[0] + 1);
      uint64_t v55 = *(void *)&v198[0];
      if ((static Settings.Features.homeAndWorkEnabled.getter() & 1) == 0 || !*(void *)(v55 + 16))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v114 = (uint64_t)v176;
        uint64_t v115 = v163;
        sub_10020D948(v47 + 16, v163);
        uint64_t v116 = (uint64_t *)(v115 + *(int *)(v164 + 20));
        uint64_t *v116 = swift_getKeyPath();
        sub_10017DF08((uint64_t *)&unk_100EAA560);
        swift_storeEnumTagMultiPayload();
        sub_100595B60(&qword_100E811A8, (void (*)(uint64_t))type metadata accessor for SearchZeroKeywordView);
        uint64_t v117 = v162;
        View.accessibilityHidden(_:)();
        sub_10014CD6C(v115, (void (*)(void))type metadata accessor for SearchZeroKeywordView);
        uint64_t v118 = (uint64_t)v117;
        uint64_t v119 = v165;
        sub_10024D364(v118, v165, &qword_100E810C8);
        sub_10006DF38(v119, v174, &qword_100E810C8);
        swift_storeEnumTagMultiPayload();
        sub_1001246C8(&qword_100E81198, &qword_100E810D8);
        sub_1005956D0();
        _ConditionalContent<>.init(storage:)();
        sub_1001781AC(v119, &qword_100E810C8);
        goto LABEL_47;
      }
      uint64_t v165 = v48;
      sub_10019B2FC();
      uint64_t v56 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v56) == 1)
      {
        sub_1001781AC((uint64_t)v37, &qword_100E65ED8);
        uint64_t v57 = v157;
      }
      else
      {
        uint64_t v130 = *(void *)(v56 - 8);
        int v131 = (*(uint64_t (**)(char *, uint64_t))(v130 + 88))(v37, v56);
        int v132 = enum case for UserInterfaceSizeClass.regular(_:);
        (*(void (**)(char *, uint64_t))(v130 + 8))(v37, v56);
        uint64_t v57 = v157;
        if (v131 == v132)
        {
          id v133 = [self tertiarySystemBackgroundColor];
          uint64_t v134 = Color.init(_:)();
          goto LABEL_43;
        }
      }
      uint64_t v134 = static Color.black.getter();
LABEL_43:
      uint64_t v135 = v134;
      uint64_t v182 = static SafeAreaRegions.all.getter();
      char v136 = static Edge.Set.all.getter();
      uint64_t v137 = v155;
      sub_100595A1C(v47, v155, (void (*)(void))type metadata accessor for SearchView);
      unint64_t v138 = (*(unsigned __int8 *)(v153 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v153 + 80);
      uint64_t v139 = swift_allocObject();
      sub_1005959C8(v137, v139 + v138, (void (*)(void))type metadata accessor for SearchView);
      uint64_t v140 = v47 + *(int *)(v192 + 28);
      char v141 = *(unsigned char *)v140;
      uint64_t v142 = *(void *)(v140 + 8);
      LOBYTE(v198[0]) = v141;
      *((void *)&v198[0] + 1) = v142;
      sub_10017DF08(&qword_100E65950);
      State.wrappedValue.getter();
      if (__dst[0])
      {
        sub_10020D948(v47 + 16, (uint64_t)v198);
        uint64_t v143 = v178;
        uint64_t v144 = (void *)((char *)v57 + *(int *)(v178 + 36));
        *uint64_t v144 = swift_getKeyPath();
        sub_10017DF08((uint64_t *)&unk_100EAA560);
        swift_storeEnumTagMultiPayload();
        sub_1001262E4(v198, (uint64_t)v57);
        uint64_t v145 = 0;
        v57[5] = v55;
        v57[6] = _swiftEmptyArrayStorage;
        v57[7] = 0;
        v57[8] = 0xE000000000000000;
        uint64_t v146 = v165;
        v57[9] = v177;
        v57[10] = v146;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v145 = 1;
        uint64_t v143 = v178;
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v57, v145, 1, v143);
      uint64_t v147 = v156;
      sub_10006DF38((uint64_t)v57, v156, &qword_100E810E0);
      uint64_t v148 = (uint64_t)v158;
      *uint64_t v158 = v135;
      *(unsigned char *)(v148 + 8) = 1;
      *(void *)(v148 + 16) = v182;
      *(unsigned char *)(v148 + 24) = v136;
      *(void *)(v148 + 32) = sub_100595910;
      *(void *)(v148 + 40) = v139;
      *(void *)(v148 + 48) = 0;
      *(void *)(v148 + 56) = 0;
      uint64_t v149 = sub_10017DF08(&qword_100E811B0);
      sub_10006DF38(v147, v148 + *(int *)(v149 + 48), &qword_100E810E0);
      swift_retain();
      sub_10005BEBC((uint64_t)sub_100595910);
      sub_10005BEBC(0);
      swift_retain();
      swift_retain();
      sub_1001781AC(v147, &qword_100E810E0);
      swift_release();
      sub_1001361AC((uint64_t)sub_100595910);
      sub_1001361AC(0);
      sub_10006DF38(v148, v174, &qword_100E810D8);
      swift_storeEnumTagMultiPayload();
      sub_1001246C8(&qword_100E81198, &qword_100E810D8);
      sub_1005956D0();
      uint64_t v114 = (uint64_t)v176;
      _ConditionalContent<>.init(storage:)();
      sub_1001781AC(v148, &qword_100E810D8);
      sub_1001781AC((uint64_t)v57, &qword_100E810E0);
      swift_release();
      swift_release();
LABEL_47:
      sub_10006DF38(v114, v184, &qword_100E810E8);
      swift_storeEnumTagMultiPayload();
      sub_10017DF08(&qword_100E81188);
      sub_1001246C8(&qword_100E81180, &qword_100E81188);
      sub_100595630();
      uint64_t v150 = (uint64_t)v186;
      _ConditionalContent<>.init(storage:)();
      sub_10006DF38(v150, v189, &qword_100E810F8);
      swift_storeEnumTagMultiPayload();
      sub_1005953F8();
      sub_100595590();
      uint64_t v151 = (uint64_t)v190;
      _ConditionalContent<>.init(storage:)();
      sub_1001781AC(v150, &qword_100E810F8);
      sub_10006DF38(v151, (uint64_t)v195, &qword_100E81138);
      swift_storeEnumTagMultiPayload();
      sub_10017DF08(&qword_100E81140);
      sub_10059537C();
      sub_100595498();
      _ConditionalContent<>.init(storage:)();
      sub_1001781AC(v151, &qword_100E81138);
      return sub_1001781AC(v114, &qword_100E810E8);
    case 3:
      if (*((void *)&v198[0] + 1) | *(void *)&v198[0] | *(void *)&v198[1] | *((void *)&v198[1] + 1) | *(void *)&v198[2] | *((void *)&v198[2] + 1) | *(void *)&v198[3] | *((void *)&v198[3] + 1) | *(void *)&v198[4] | *((void *)&v198[4] + 1) | *(void *)&v198[5] | *((void *)&v198[5] + 1))
      {
        sub_10019B2FC();
        uint64_t v58 = type metadata accessor for UserInterfaceSizeClass();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v34, 1, v58) == 1)
        {
          sub_1001781AC((uint64_t)v34, &qword_100E65ED8);
        }
        else
        {
          uint64_t v104 = *(void *)(v58 - 8);
          int v105 = (*(uint64_t (**)(char *, uint64_t))(v104 + 88))(v34, v58);
          int v106 = enum case for UserInterfaceSizeClass.regular(_:);
          (*(void (**)(char *, uint64_t))(v104 + 8))(v34, v58);
          if (v105 == v106)
          {
            id v107 = [self tertiarySystemBackgroundColor];
            uint64_t v108 = Color.init(_:)();
LABEL_32:
            uint64_t v109 = v108;
            uint64_t v110 = static SafeAreaRegions.all.getter();
            char v111 = static Edge.Set.all.getter();
            uint64_t v112 = v195;
            uint64_t *v195 = v109;
            *((unsigned char *)v112 + 8) = 1;
            v112[2] = v110;
            *((unsigned char *)v112 + 24) = v111;
            swift_storeEnumTagMultiPayload();
            sub_10017DF08(&qword_100E81140);
            sub_10059537C();
            sub_100595498();
            return _ConditionalContent<>.init(storage:)();
          }
        }
        uint64_t v108 = static Color.black.getter();
        goto LABEL_32;
      }
      sub_10019B2FC();
      uint64_t v102 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v102) == 1)
      {
        sub_1001781AC((uint64_t)v46, &qword_100E65ED8);
        uint64_t v103 = (uint64_t)v181;
      }
      else
      {
        uint64_t v120 = *(void *)(v102 - 8);
        int v121 = (*(uint64_t (**)(char *, uint64_t))(v120 + 88))(v46, v102);
        int v122 = enum case for UserInterfaceSizeClass.regular(_:);
        (*(void (**)(char *, uint64_t))(v120 + 8))(v46, v102);
        uint64_t v103 = (uint64_t)v181;
        if (v121 == v122)
        {
          id v123 = [self tertiarySystemBackgroundColor];
          uint64_t v124 = Color.init(_:)();
          goto LABEL_37;
        }
      }
      uint64_t v124 = static Color.black.getter();
LABEL_37:
      uint64_t v125 = v124;
      uint64_t v126 = static SafeAreaRegions.all.getter();
      char v127 = static Edge.Set.all.getter();
      uint64_t v128 = v180;
      *uint64_t v180 = v125;
      *((unsigned char *)v128 + 8) = 1;
      v128[2] = v126;
      *((unsigned char *)v128 + 24) = v127;
      swift_storeEnumTagMultiPayload();
      swift_retain();
      sub_10017DF08(&qword_100E81140);
      sub_100595498();
      sub_1001246C8(&qword_100E81170, &qword_100E81100);
      _ConditionalContent<>.init(storage:)();
      sub_10006DF38(v103, v189, &qword_100E81130);
      swift_storeEnumTagMultiPayload();
      sub_1005953F8();
      sub_100595590();
      uint64_t v129 = (uint64_t)v190;
      _ConditionalContent<>.init(storage:)();
      sub_1001781AC(v103, &qword_100E81130);
      sub_10006DF38(v129, (uint64_t)v195, &qword_100E81138);
      swift_storeEnumTagMultiPayload();
      sub_10059537C();
      _ConditionalContent<>.init(storage:)();
      uint64_t v91 = (unsigned char *)v129;
      uint64_t v92 = &qword_100E81138;
LABEL_38:
      sub_1001781AC((uint64_t)v91, v92);
      return swift_release();
    default:
      uint64_t v175 = *(void *)&v198[2];
      uint64_t v176 = (char *)*((void *)&v198[1] + 1);
      uint64_t v51 = *((void *)&v198[2] + 1);
      uint64_t v177 = *((void *)&v198[0] + 1);
      uint64_t v52 = *(void *)&v198[0];
      uint64_t v165 = *(void *)&v198[1];
      uint64_t v53 = v47;
      sub_10019B2FC();
      uint64_t v54 = type metadata accessor for UserInterfaceSizeClass();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v43, 1, v54) == 1)
      {
        sub_1001781AC((uint64_t)v43, &qword_100E65ED8);
      }
      else
      {
        uint64_t v61 = *(void *)(v54 - 8);
        int v62 = (*(uint64_t (**)(char *, uint64_t))(v61 + 88))(v43, v54);
        int v63 = enum case for UserInterfaceSizeClass.regular(_:);
        (*(void (**)(char *, uint64_t))(v61 + 8))(v43, v54);
        if (v62 == v63)
        {
          id v64 = [self tertiarySystemBackgroundColor];
          uint64_t v65 = Color.init(_:)();
          goto LABEL_16;
        }
      }
      uint64_t v65 = static Color.black.getter();
LABEL_16:
      uint64_t v192 = v65;
      uint64_t v66 = static SafeAreaRegions.all.getter();
      char v67 = static Edge.Set.all.getter();
      if (static Settings.Features.homeAndWorkEnabled.getter())
      {
        sub_10020D948(v53 + 16, (uint64_t)v198);
        uint64_t v68 = v159;
        uint64_t v69 = (uint64_t *)&v159[*(int *)(v178 + 36)];
        uint64_t *v69 = swift_getKeyPath();
        sub_10017DF08((uint64_t *)&unk_100EAA560);
        swift_storeEnumTagMultiPayload();
        sub_1001262E4(v198, (uint64_t)v68);
        uint64_t v70 = v177;
        v68[5] = v52;
        v68[6] = v70;
        uint64_t v71 = v176;
        v68[7] = v165;
        v68[8] = v71;
        v68[9] = v175;
        v68[10] = v51;
        sub_100595A1C((uint64_t)v68, v167, (void (*)(void))type metadata accessor for SearchResultsView);
        swift_storeEnumTagMultiPayload();
        sub_100595B60(&qword_100E811B8, (void (*)(uint64_t))type metadata accessor for SearchResultsView);
        sub_100595B60(&qword_100E811C0, (void (*)(uint64_t))type metadata accessor for LegacySearchResultsView);
        uint64_t v72 = (uint64_t)v170;
        _ConditionalContent<>.init(storage:)();
        uint64_t v73 = (void (*)(void))type metadata accessor for SearchResultsView;
        uint64_t v74 = (uint64_t)v68;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10020D948(v53 + 16, (uint64_t)v198);
        uint64_t v93 = v160;
        uint64_t v94 = (uint64_t *)&v160[*(int *)(v169 + 28)];
        *uint64_t v94 = swift_getKeyPath();
        sub_10017DF08((uint64_t *)&unk_100EAA560);
        swift_storeEnumTagMultiPayload();
        sub_1001262E4(v198, (uint64_t)v93);
        uint64_t v95 = v165;
        v93[5] = v177;
        v93[6] = v95;
        v93[7] = v176;
        uint64_t v96 = v161;
        sub_1005959C8((uint64_t)v93, v161, (void (*)(void))type metadata accessor for LegacySearchResultsView);
        sub_100595A1C(v96, v167, (void (*)(void))type metadata accessor for LegacySearchResultsView);
        swift_storeEnumTagMultiPayload();
        sub_100595B60(&qword_100E811B8, (void (*)(uint64_t))type metadata accessor for SearchResultsView);
        sub_100595B60(&qword_100E811C0, (void (*)(uint64_t))type metadata accessor for LegacySearchResultsView);
        uint64_t v72 = (uint64_t)v170;
        _ConditionalContent<>.init(storage:)();
        uint64_t v73 = (void (*)(void))type metadata accessor for LegacySearchResultsView;
        uint64_t v74 = v96;
      }
      sub_10014CD6C(v74, v73);
      uint64_t v97 = v168;
      sub_10006DF38(v72, v168, &qword_100E81110);
      uint64_t v98 = (uint64_t)v171;
      *uint64_t v171 = v192;
      *(unsigned char *)(v98 + 8) = 1;
      *(void *)(v98 + 16) = v66;
      *(unsigned char *)(v98 + 24) = v67;
      uint64_t v99 = sub_10017DF08(&qword_100E811C8);
      sub_10006DF38(v97, v98 + *(int *)(v99 + 48), &qword_100E81110);
      swift_retain_n();
      sub_1001781AC(v97, &qword_100E81110);
      swift_release();
      sub_10006DF38(v98, (uint64_t)v180, &qword_100E81100);
      swift_storeEnumTagMultiPayload();
      sub_10017DF08(&qword_100E81140);
      sub_100595498();
      sub_1001246C8(&qword_100E81170, &qword_100E81100);
      uint64_t v100 = (uint64_t)v181;
      _ConditionalContent<>.init(storage:)();
      sub_1001781AC(v98, &qword_100E81100);
      sub_10006DF38(v100, v189, &qword_100E81130);
      swift_storeEnumTagMultiPayload();
      sub_1005953F8();
      sub_100595590();
      uint64_t v101 = (uint64_t)v190;
      _ConditionalContent<>.init(storage:)();
      sub_1001781AC(v100, &qword_100E81130);
      sub_10006DF38(v101, (uint64_t)v195, &qword_100E81138);
      swift_storeEnumTagMultiPayload();
      sub_10059537C();
      _ConditionalContent<>.init(storage:)();
      sub_1001781AC(v101, &qword_100E81138);
      sub_1001781AC(v72, &qword_100E81110);
      return swift_release();
  }
}

uint64_t sub_100595298()
{
  return swift_release();
}

uint64_t sub_100595304()
{
  return State.wrappedValue.setter();
}

unint64_t sub_10059537C()
{
  unint64_t result = qword_100E81148;
  if (!qword_100E81148)
  {
    sub_10018C6DC(&qword_100E81138);
    sub_1005953F8();
    sub_100595590();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E81148);
  }
  return result;
}

unint64_t sub_1005953F8()
{
  unint64_t result = qword_100E81150;
  if (!qword_100E81150)
  {
    sub_10018C6DC(&qword_100E81130);
    sub_100595498();
    sub_1001246C8(&qword_100E81170, &qword_100E81100);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E81150);
  }
  return result;
}

unint64_t sub_100595498()
{
  unint64_t result = qword_100E81158;
  if (!qword_100E81158)
  {
    sub_10018C6DC(&qword_100E81140);
    sub_100595514();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E81158);
  }
  return result;
}

unint64_t sub_100595514()
{
  unint64_t result = qword_100E81160;
  if (!qword_100E81160)
  {
    sub_10018C6DC(&qword_100E81168);
    sub_10022736C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E81160);
  }
  return result;
}

unint64_t sub_100595590()
{
  unint64_t result = qword_100E81178;
  if (!qword_100E81178)
  {
    sub_10018C6DC(&qword_100E810F8);
    sub_1001246C8(&qword_100E81180, &qword_100E81188);
    sub_100595630();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E81178);
  }
  return result;
}

unint64_t sub_100595630()
{
  unint64_t result = qword_100E81190;
  if (!qword_100E81190)
  {
    sub_10018C6DC(&qword_100E810E8);
    sub_1001246C8(&qword_100E81198, &qword_100E810D8);
    sub_1005956D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E81190);
  }
  return result;
}

unint64_t sub_1005956D0()
{
  unint64_t result = qword_100E811A0;
  if (!qword_100E811A0)
  {
    sub_10018C6DC(&qword_100E810C8);
    sub_100595B60(&qword_100E811A8, (void (*)(uint64_t))type metadata accessor for SearchZeroKeywordView);
    sub_100595B60((unint64_t *)&qword_100EAACA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E811A0);
  }
  return result;
}

uint64_t sub_1005957B4()
{
  uint64_t v1 = type metadata accessor for SearchView();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  swift_release();
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v2 + 16);
  uint64_t v3 = v2 + *(int *)(v1 + 24);
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for UserInterfaceSizeClass();
    if (!_s7Weather24LocationCompositionStateOwet_0(v3, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
    }
  }
  else
  {
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100595910()
{
  type metadata accessor for SearchView();

  return sub_100595298();
}

uint64_t sub_100595970()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1005959C8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_100126010();
  v5(v4);
  return a2;
}

uint64_t sub_100595A1C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  uint64_t v4 = sub_10011BFA4();
  v5(v4);
  return a2;
}

uint64_t sub_100595A70()
{
  return sub_100595304();
}

unint64_t sub_100595A90()
{
  unint64_t result = qword_100E811D0;
  if (!qword_100E811D0)
  {
    sub_10018C6DC(&qword_100E79F10);
    sub_1001246C8(&qword_100E811D8, &qword_100E79F08);
    sub_100595B60((unint64_t *)&qword_100E66BF8, (void (*)(uint64_t))type metadata accessor for AutomationInfoViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E811D0);
  }
  return result;
}

uint64_t sub_100595B60(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_100595BA8(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Location.Identifier();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v7))
    {
      uint64_t v8 = sub_10017DF08(&qword_100E6DC08);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v7);
    }
    uint64_t v10 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v11 = (_OWORD *)((char *)a1 + v10);
    uint64_t v12 = (char *)a2 + v10;
    long long v13 = *(_OWORD *)((char *)a2 + v10 + 16);
    _OWORD *v11 = *(_OWORD *)((char *)a2 + v10);
    v11[1] = v13;
    StatusLog = (int *)type metadata accessor for VisibleLocationWeatherLoadStatusLog();
    uint64_t v15 = StatusLog[8];
    uint64_t v26 = &v12[v15];
    uint64_t v27 = (char *)v11 + v15;
    uint64_t v16 = type metadata accessor for Date();
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    v17(v27, v26, v16);
    uint64_t v18 = StatusLog[9];
    uint64_t v19 = (char *)v11 + v18;
    uint64_t v20 = &v12[v18];
    *(void *)uint64_t v19 = *(void *)v20;
    v19[8] = v20[8];
    uint64_t v21 = StatusLog[10];
    uint64_t v22 = (char *)v11 + v21;
    uint64_t v23 = &v12[v21];
    *(void *)uint64_t v22 = *(void *)v23;
    v22[8] = v23[8];
    uint64_t v24 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    v17((char *)a1 + v24, (char *)a2 + v24, v16);
  }
  return a1;
}

uint64_t sub_100595DBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Location.Identifier();
  if (!_s7Weather24LocationCompositionStateOwet_0(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 24);
  uint64_t v6 = v5 + *(int *)(type metadata accessor for VisibleLocationWeatherLoadStatusLog() + 32);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v10)((void *)(v7 - 8), v6, v7);
  uint64_t v8 = a1 + *(int *)(a2 + 32);

  return v10(v8, v7);
}

char *sub_100595ED0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_10017DF08(&qword_100E6DC08);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  long long v11 = *(_OWORD *)&a2[v8 + 16];
  *(_OWORD *)uint64_t v9 = *(_OWORD *)&a2[v8];
  *((_OWORD *)v9 + 1) = v11;
  StatusLog = (int *)type metadata accessor for VisibleLocationWeatherLoadStatusLog();
  uint64_t v13 = StatusLog[8];
  uint64_t v24 = &v10[v13];
  uint64_t v25 = &v9[v13];
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v25, v24, v14);
  uint64_t v16 = StatusLog[9];
  uint64_t v17 = &v9[v16];
  uint64_t v18 = &v10[v16];
  *(void *)uint64_t v17 = *(void *)v18;
  v17[8] = v18[8];
  uint64_t v19 = StatusLog[10];
  uint64_t v20 = &v9[v19];
  uint64_t v21 = &v10[v19];
  *(void *)uint64_t v20 = *(void *)v21;
  v20[8] = v21[8];
  uint64_t v22 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  v15(&a1[v22], &a2[v22], v14);
  return a1;
}

char *sub_100596094(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v10 = sub_10017DF08(&qword_100E6DC08);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[6];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  *(void *)uint64_t v12 = *(void *)&a2[v11];
  *((void *)v12 + 1) = *(void *)&a2[v11 + 8];
  *((void *)v12 + 2) = *(void *)&a2[v11 + 16];
  *((void *)v12 + 3) = *(void *)&a2[v11 + 24];
  StatusLog = (int *)type metadata accessor for VisibleLocationWeatherLoadStatusLog();
  uint64_t v15 = StatusLog[8];
  uint64_t v27 = &v12[v15];
  uint64_t v16 = &v13[v15];
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24);
  v18(v27, v16, v17);
  uint64_t v19 = StatusLog[9];
  uint64_t v20 = &v12[v19];
  uint64_t v21 = &v13[v19];
  uint64_t v22 = *(void *)v21;
  v20[8] = v21[8];
  *(void *)uint64_t v20 = v22;
  uint64_t v23 = StatusLog[10];
  uint64_t v24 = &v12[v23];
  uint64_t v25 = &v13[v23];
  LOBYTE(v22) = v25[8];
  *(void *)uint64_t v24 = *(void *)v25;
  v24[8] = v22;
  a1[a3[7]] = a2[a3[7]];
  v18(&a1[a3[8]], &a2[a3[8]], v17);
  return a1;
}

char *sub_100596304(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6))
  {
    uint64_t v7 = sub_10017DF08(&qword_100E6DC08);
    memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
  }
  uint64_t v8 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  long long v11 = *(_OWORD *)&a2[v8 + 16];
  *(_OWORD *)uint64_t v9 = *(_OWORD *)&a2[v8];
  *((_OWORD *)v9 + 1) = v11;
  StatusLog = (int *)type metadata accessor for VisibleLocationWeatherLoadStatusLog();
  uint64_t v13 = StatusLog[8];
  uint64_t v25 = &v9[v13];
  uint64_t v14 = &v10[v13];
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
  v16(v25, v14, v15);
  uint64_t v17 = StatusLog[9];
  uint64_t v18 = &v9[v17];
  uint64_t v19 = &v10[v17];
  *(void *)uint64_t v18 = *(void *)v19;
  v18[8] = v19[8];
  uint64_t v20 = StatusLog[10];
  uint64_t v21 = &v9[v20];
  uint64_t v22 = &v10[v20];
  *(void *)uint64_t v21 = *(void *)v22;
  v21[8] = v22[8];
  uint64_t v23 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  v16(&a1[v23], &a2[v23], v15);
  return a1;
}

char *sub_1005964C4(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Location.Identifier();
  int v7 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a1, 1, v6);
  int v8 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)a2, 1, v6);
  if (!v7)
  {
    uint64_t v9 = *(void *)(v6 - 8);
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v10 = sub_10017DF08(&qword_100E6DC08);
    memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)a1, 0, 1, v6);
LABEL_7:
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  swift_bridgeObjectRelease();
  uint64_t v11 = a3[6];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  long long v14 = *(_OWORD *)&a2[v11 + 16];
  *(_OWORD *)uint64_t v12 = *(_OWORD *)&a2[v11];
  *((_OWORD *)v12 + 1) = v14;
  StatusLog = (int *)type metadata accessor for VisibleLocationWeatherLoadStatusLog();
  uint64_t v16 = StatusLog[8];
  uint64_t v28 = &v12[v16];
  uint64_t v17 = &v13[v16];
  uint64_t v18 = type metadata accessor for Date();
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 40);
  v19(v28, v17, v18);
  uint64_t v20 = StatusLog[9];
  uint64_t v21 = &v12[v20];
  uint64_t v22 = &v13[v20];
  *(void *)uint64_t v21 = *(void *)v22;
  v21[8] = v22[8];
  uint64_t v23 = StatusLog[10];
  uint64_t v24 = &v12[v23];
  uint64_t v25 = &v13[v23];
  *(void *)uint64_t v24 = *(void *)v25;
  v24[8] = v25[8];
  uint64_t v26 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  v19(&a1[v26], &a2[v26], v18);
  return a1;
}

uint64_t sub_100596710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100596724);
}

uint64_t sub_100596724(uint64_t a1, uint64_t a2, int *a3)
{
  sub_10017DF08(&qword_100E6DC08);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_11:
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  if (a2 != 0x7FFFFFFF)
  {
    type metadata accessor for VisibleLocationWeatherLoadStatusLog();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a2)
    {
      uint64_t v8 = v12;
      uint64_t v14 = a3[6];
    }
    else
    {
      uint64_t v8 = type metadata accessor for Date();
      uint64_t v14 = a3[8];
    }
    uint64_t v9 = a1 + v14;
    goto LABEL_11;
  }
  unint64_t v10 = *(void *)(a1 + a3[5]);
  if (v10 >= 0xFFFFFFFF) {
    LODWORD(v10) = -1;
  }
  return (v10 + 1);
}

uint64_t sub_1005967FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100596810);
}

void sub_100596810(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_10017DF08(&qword_100E6DC08);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(void *)(a1 + a4[5]) = (a2 - 1);
      return;
    }
    type metadata accessor for VisibleLocationWeatherLoadStatusLog();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[6];
    }
    else
    {
      uint64_t v10 = type metadata accessor for Date();
      uint64_t v14 = a4[8];
    }
    uint64_t v11 = a1 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

double sub_1005968E4()
{
  uint64_t State = type metadata accessor for VisibleLocationWeatherLoadState();
  Date.distance(to:)();
  unsigned int v3 = *(unsigned __int8 *)(v0 + *(int *)(State + 28));
  if (v3 >= 2)
  {
    if (v3 == 2) {
      uint64_t v4 = (double *)(v0 + *(int *)(State + 24) + 8);
    }
    else {
      uint64_t v4 = (double *)(v0 + *(int *)(State + 24) + 16);
    }
  }
  else
  {
    uint64_t v4 = (double *)(v0 + *(int *)(State + 24));
  }
  double result = v2 + *v4;
  *uint64_t v4 = result;
  return result;
}

void *sub_100596974(void *a1, void *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    a1[1] = a2[1];
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Font.Leading();
    swift_retain();
    swift_retain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v11))
    {
      uint64_t v12 = sub_10017DF08(&qword_100E6D330);
      memcpy(v9, v10, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v11);
    }
    *((unsigned char *)v7 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  }
  return v7;
}

_OWORD *sub_100596AD4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Font.Leading();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9))
  {
    uint64_t v10 = sub_10017DF08(&qword_100E6D330);
    memcpy(v7, v8, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
  }
  *((unsigned char *)a1 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  return a1;
}

void *sub_100596BC8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Font.Leading();
  int v10 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v7, 1, v9);
  int v11 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v8, 1, v9);
  if (!v10)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = sub_10017DF08(&qword_100E6D330);
    memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v7, 0, 1, v9);
LABEL_7:
  *((unsigned char *)a1 + *(int *)(a3 + 28)) = *((unsigned char *)a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_100596D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100596D70);
}

uint64_t sub_100596D70(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10017DF08(&qword_100E6D330);
    uint64_t v9 = (uint64_t)a1 + *(int *)(a3 + 24);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_100596DFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100596E10);
}

void *sub_100596E10(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *double result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10017DF08(&qword_100E6D330);
    uint64_t v8 = (uint64_t)v5 + *(int *)(a4 + 24);
    return (void *)_s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

double sub_100596E94@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(v3 + 32);
  char v7 = *(unsigned char *)(v3 + 40);
  sub_100195B7C(v6, v7);
  sub_100149AE8();
  sub_1005971F4(v3);
  sub_100195B7C(v6, v7);
  sub_100149AE8();
  sub_1005971F4(v3);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v8 = sub_10017DF08(&qword_100E81340);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a2, a1, v8);
  uint64_t v9 = (_OWORD *)(a2 + *(int *)(sub_10017DF08(&qword_100E81348) + 36));
  *uint64_t v9 = v11;
  v9[1] = v12;
  double result = *(double *)&v13;
  v9[2] = v13;
  return result;
}

double sub_100596FD4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100596E94(a1, a2);
}

uint64_t destroy for SizeWithSmallVariantModifier(uint64_t a1)
{
  return sub_10018F6D8(*(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
}

uint64_t initializeWithCopy for SizeWithSmallVariantModifier(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  char v5 = *(unsigned char *)(a2 + 40);
  sub_100195B7C(v4, v5);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = v5;
  return a1;
}

uint64_t assignWithCopy for SizeWithSmallVariantModifier(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 32);
  char v4 = *(unsigned char *)(a2 + 40);
  sub_100195B7C(v3, v4);
  uint64_t v5 = *(void *)(a1 + 32);
  char v6 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = v3;
  *(unsigned char *)(a1 + 40) = v4;
  sub_10018F6D8(v5, v6);
  return a1;
}

uint64_t assignWithTake for SizeWithSmallVariantModifier(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  char v5 = *(unsigned char *)(a2 + 40);
  uint64_t v6 = *(void *)(a1 + 32);
  char v7 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = v5;
  sub_10018F6D8(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for SizeWithSmallVariantModifier(uint64_t a1, unsigned int a2)
{
  if (a2)
  {
    if (a2 >= 0xFF && *(unsigned char *)(a1 + 41))
    {
      int v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
      if (v3 <= 1) {
        int v2 = -1;
      }
      else {
        int v2 = v3 ^ 0xFF;
      }
    }
  }
  else
  {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SizeWithSmallVariantModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)double result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SizeWithSmallVariantModifier()
{
  return &type metadata for SizeWithSmallVariantModifier;
}

uint64_t sub_1005971D8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005971F4(uint64_t a1)
{
  return a1;
}

unint64_t sub_100597228()
{
  unint64_t result = qword_100E81350;
  if (!qword_100E81350)
  {
    sub_10018C6DC(&qword_100E81348);
    sub_1001246C8(&qword_100E81358, &qword_100E81340);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E81350);
  }
  return result;
}

unint64_t sub_1005972C8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v26 + ((v5 + 16) & ~(unint64_t)v5);
    goto LABEL_29;
  }
  uint64_t v7 = *(void *)a2;
  uint64_t v8 = *(void *)(a2 + 8);
  char v9 = *(unsigned char *)(a2 + 17);
  unsigned __int8 v10 = *(unsigned char *)(a2 + 16);
  sub_10059793C(*(void *)a2, v8, v10, v9);
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v8;
  *(unsigned char *)(a1 + 16) = v10;
  *(unsigned char *)(a1 + 17) = v9;
  uint64_t v78 = a3;
  uint64_t v11 = *(int *)(a3 + 20);
  long long v12 = (void *)(a1 + v11);
  uint64_t v75 = a2;
  long long v13 = (void *)(a2 + v11);
  uint64_t v14 = v13[1];
  *long long v12 = *v13;
  v12[1] = v14;
  uint64_t v15 = type metadata accessor for ConditionDetailMapViewModel();
  uint64_t v16 = *(int *)(v15 + 20);
  uint64_t v17 = (char *)v12 + v16;
  uint64_t v18 = (char *)v13 + v16;
  uint64_t v19 = type metadata accessor for Location();
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
  swift_bridgeObjectRetain();
  v20(v17, v18, v19);
  int v77 = (int *)v15;
  uint64_t v21 = *(int *)(v15 + 24);
  uint64_t v22 = (void *)((char *)v12 + v21);
  int v76 = v13;
  uint64_t v23 = (void *)((char *)v13 + v21);
  uint64_t v24 = (int *)type metadata accessor for WeatherData(0);
  if (!_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, (uint64_t)v24))
  {
    uint64_t v27 = v23[1];
    void *v22 = *v23;
    v22[1] = v27;
    uint64_t v28 = v24[5];
    uint64_t v29 = (char *)v22 + v28;
    uint64_t v30 = (char *)v23 + v28;
    uint64_t v31 = type metadata accessor for Locale();
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31))
    {
      uint64_t v32 = sub_10017DF08(&qword_100E63730);
      memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
    }
    uint64_t v33 = v24[6];
    uint64_t v34 = (char *)v22 + v33;
    uint64_t v35 = (char *)v23 + v33;
    uint64_t v36 = type metadata accessor for WeatherDataModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
    uint64_t v37 = v24[7];
    uint64_t v38 = (char *)v22 + v37;
    uint64_t v39 = (char *)v23 + v37;
    uint64_t v40 = sub_10017DF08(&qword_100E63738);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v39, 1, v40))
    {
      uint64_t v41 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v38, v39, *(void *)(*(void *)(v41 - 8) + 64));
    }
    else
    {
      uint64_t v42 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v38, v39, v42);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v38, 0, 1, v40);
    }
    uint64_t v43 = v24[8];
    uint64_t v44 = (void *)((char *)v22 + v43);
    uint64_t v45 = (void *)((char *)v23 + v43);
    uint64_t v46 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v49 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v49 - 8) + 16))(v44, v45, v49);
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
        goto LABEL_17;
      }
      uint64_t v48 = v45[1];
      *uint64_t v44 = *v45;
      v44[1] = v48;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
LABEL_17:
    uint64_t v50 = v24[9];
    uint64_t v51 = (char *)v22 + v50;
    uint64_t v52 = (char *)v23 + v50;
    uint64_t v53 = type metadata accessor for WeatherDataOverrides();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v53))
    {
      uint64_t v54 = sub_10017DF08(&qword_100E63740);
      memcpy(v51, v52, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      uint64_t v55 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v52, 1, v55))
      {
        uint64_t v56 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v51, v52, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v51, v52, v55);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v51, 0, 1, v55);
      }
      uint64_t v57 = *(int *)(v53 + 20);
      uint64_t v58 = &v51[v57];
      char v59 = &v52[v57];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v59, 1, v55))
      {
        uint64_t v60 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v58, v59, *(void *)(*(void *)(v60 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v58, v59, v55);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v58, 0, 1, v55);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v51, 0, 1, v53);
    }
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, (uint64_t)v24);
    goto LABEL_27;
  }
  uint64_t v25 = sub_10017DF08(&qword_100E63850);
  memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
LABEL_27:
  uint64_t v61 = v77[7];
  int v62 = (void *)((char *)v12 + v61);
  int v63 = (void *)((char *)v76 + v61);
  uint64_t v64 = v63[1];
  void *v62 = *v63;
  v62[1] = v64;
  uint64_t v65 = v77[8];
  uint64_t v66 = (char *)v12 + v65;
  char v67 = (char *)v76 + v65;
  uint64_t v68 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t v69 = *(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16);
  swift_bridgeObjectRetain();
  v69(v66, v67, v68);
  *((unsigned char *)v12 + v77[9]) = *((unsigned char *)v76 + v77[9]);
  uint64_t v70 = *(int *)(v78 + 24);
  uint64_t v71 = a1 + v70;
  uint64_t v72 = v75 + v70;
  if (!*(void *)v72)
  {
    *(_OWORD *)uint64_t v71 = *(_OWORD *)v72;
    return a1;
  }
  uint64_t v73 = *(void *)(v72 + 8);
  *(void *)uint64_t v71 = *(void *)v72;
  *(void *)(v71 + 8) = v73;
LABEL_29:
  swift_retain();
  return a1;
}

uint64_t sub_10059793C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_100597948(uint64_t a1, uint64_t a2)
{
  sub_100597CD8(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(unsigned char *)(a1 + 17));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  int v5 = (int *)type metadata accessor for ConditionDetailMapViewModel();
  uint64_t v6 = v4 + v5[5];
  uint64_t v7 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = v4 + v5[6];
  char v9 = (int *)type metadata accessor for WeatherData(0);
  if (!_s7Weather24LocationCompositionStateOwet_0(v8, 1, (uint64_t)v9))
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = v8 + v9[5];
    uint64_t v11 = type metadata accessor for Locale();
    if (!_s7Weather24LocationCompositionStateOwet_0(v10, 1, v11)) {
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    }
    uint64_t v12 = v8 + v9[6];
    uint64_t v13 = type metadata accessor for WeatherDataModel();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
    uint64_t v14 = v8 + v9[7];
    uint64_t v15 = sub_10017DF08(&qword_100E63738);
    if (!_s7Weather24LocationCompositionStateOwet_0(v14, 1, v15))
    {
      uint64_t v16 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v14, v16);
    }
    uint64_t v17 = v8 + v9[8];
    type metadata accessor for WeatherData.WeatherStatisticsState(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v19 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v17, v19);
    }
    else if (!EnumCaseMultiPayload)
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v20 = v8 + v9[9];
    uint64_t v21 = type metadata accessor for WeatherDataOverrides();
    if (!_s7Weather24LocationCompositionStateOwet_0(v20, 1, v21))
    {
      uint64_t v22 = type metadata accessor for Date();
      if (!_s7Weather24LocationCompositionStateOwet_0(v20, 1, v22)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v20, v22);
      }
      uint64_t v23 = v20 + *(int *)(v21 + 20);
      if (!_s7Weather24LocationCompositionStateOwet_0(v23, 1, v22)) {
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v23, v22);
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v24 = v4 + v5[8];
  uint64_t v25 = type metadata accessor for WeatherMapOverlayKind();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
  if (*(void *)(a1 + *(int *)(a2 + 24)))
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_100597CD8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_100597CE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  char v8 = *(unsigned char *)(a2 + 17);
  uint64_t v9 = *(unsigned __int8 *)(a2 + 16);
  sub_10059793C(*(void *)a2, v7, v9, v8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v9;
  *(unsigned char *)(a1 + 17) = v8;
  uint64_t v76 = a3;
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v74 = a1;
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = v4 + v10;
  uint64_t v13 = *(void *)(v4 + v10 + 8);
  void *v11 = *(void *)(v4 + v10);
  v11[1] = v13;
  uint64_t v14 = type metadata accessor for ConditionDetailMapViewModel();
  uint64_t v15 = *(int *)(v14 + 20);
  uint64_t v16 = (char *)v11 + v15;
  uint64_t v17 = v12 + v15;
  uint64_t v18 = type metadata accessor for Location();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
  swift_bridgeObjectRetain();
  v19(v16, v17, v18);
  uint64_t v75 = (int *)v14;
  uint64_t v20 = *(int *)(v14 + 24);
  uint64_t v21 = (void *)((char *)v11 + v20);
  uint64_t v22 = (void *)(v12 + v20);
  uint64_t v23 = (int *)type metadata accessor for WeatherData(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, (uint64_t)v23))
  {
    uint64_t v24 = sub_10017DF08(&qword_100E63850);
    memcpy(v21, v22, *(void *)(*(void *)(v24 - 8) + 64));
    goto LABEL_25;
  }
  uint64_t v73 = v4;
  uint64_t v25 = v22[1];
  void *v21 = *v22;
  v21[1] = v25;
  uint64_t v26 = v23[5];
  uint64_t v27 = (char *)v21 + v26;
  uint64_t v28 = (char *)v22 + v26;
  uint64_t v29 = type metadata accessor for Locale();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v29))
  {
    uint64_t v30 = sub_10017DF08(&qword_100E63730);
    memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v29);
  }
  uint64_t v31 = v23[6];
  uint64_t v32 = (char *)v21 + v31;
  uint64_t v33 = (char *)v22 + v31;
  uint64_t v34 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
  uint64_t v35 = v23[7];
  uint64_t v36 = (char *)v21 + v35;
  uint64_t v37 = (char *)v22 + v35;
  uint64_t v38 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v37, 1, v38))
  {
    uint64_t v39 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
  }
  else
  {
    uint64_t v40 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v36, v37, v40);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v36, 0, 1, v38);
  }
  uint64_t v41 = v23[8];
  uint64_t v42 = (void *)((char *)v21 + v41);
  uint64_t v43 = (void *)((char *)v22 + v41);
  uint64_t v44 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v47 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v47 - 8) + 16))(v42, v43, v47);
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
      goto LABEL_15;
    }
    uint64_t v46 = v43[1];
    void *v42 = *v43;
    v42[1] = v46;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
LABEL_15:
  uint64_t v4 = v73;
  uint64_t v48 = v23[9];
  uint64_t v49 = (char *)v21 + v48;
  uint64_t v50 = (char *)v22 + v48;
  uint64_t v51 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v51))
  {
    uint64_t v52 = sub_10017DF08(&qword_100E63740);
    memcpy(v49, v50, *(void *)(*(void *)(v52 - 8) + 64));
  }
  else
  {
    uint64_t v53 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v50, 1, v53))
    {
      uint64_t v54 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v49, v50, *(void *)(*(void *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v49, v50, v53);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, v53);
    }
    uint64_t v55 = *(int *)(v51 + 20);
    uint64_t v56 = &v49[v55];
    uint64_t v57 = &v50[v55];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v53))
    {
      uint64_t v58 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v56, v57, *(void *)(*(void *)(v58 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v56, v57, v53);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v56, 0, 1, v53);
    }
    uint64_t v4 = v73;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v49, 0, 1, v51);
  }
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v21, 0, 1, (uint64_t)v23);
LABEL_25:
  uint64_t v59 = v75[7];
  uint64_t v60 = (void *)((char *)v11 + v59);
  uint64_t v61 = (void *)(v12 + v59);
  uint64_t v62 = v61[1];
  *uint64_t v60 = *v61;
  v60[1] = v62;
  uint64_t v63 = v75[8];
  uint64_t v64 = (char *)v11 + v63;
  uint64_t v65 = v12 + v63;
  uint64_t v66 = type metadata accessor for WeatherMapOverlayKind();
  char v67 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v66 - 8) + 16);
  swift_bridgeObjectRetain();
  v67(v64, v65, v66);
  *((unsigned char *)v11 + v75[9]) = *(unsigned char *)(v12 + v75[9]);
  uint64_t v68 = *(int *)(v76 + 24);
  uint64_t v69 = (void *)(v74 + v68);
  uint64_t v70 = (void *)(v4 + v68);
  if (*v70)
  {
    uint64_t v71 = v70[1];
    void *v69 = *v70;
    v69[1] = v71;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v69 = *(_OWORD *)v70;
  }
  return v74;
}

uint64_t sub_100598310(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  char v8 = *(unsigned char *)(a2 + 17);
  uint64_t v9 = *(unsigned __int8 *)(a2 + 16);
  sub_10059793C(*(void *)a2, v7, v9, v8);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  char v12 = *(unsigned char *)(a1 + 17);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  uint64_t v13 = *(unsigned __int8 *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v9;
  *(unsigned char *)(a1 + 17) = v8;
  sub_100597CD8(v10, v11, v13, v12);
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = v4 + v14;
  *uint64_t v15 = *(void *)(v4 + v14);
  v15[1] = *(void *)(v4 + v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v17 = (int *)type metadata accessor for ConditionDetailMapViewModel();
  uint64_t v18 = v17[5];
  uint64_t v19 = (char *)v15 + v18;
  uint64_t v20 = v16 + v18;
  uint64_t v21 = type metadata accessor for Location();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 24))(v19, v20, v21);
  uint64_t v22 = v17[6];
  uint64_t v23 = (void *)((char *)v15 + v22);
  uint64_t v24 = (void *)(v16 + v22);
  uint64_t v25 = (int *)type metadata accessor for WeatherData(0);
  LODWORD(v19) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, (uint64_t)v25);
  int v26 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, (uint64_t)v25);
  if (!v19)
  {
    if (v26)
    {
      sub_1001BC074((uint64_t)v23, (void (*)(void))type metadata accessor for WeatherData);
      goto LABEL_7;
    }
    uint64_t v127 = a3;
    uint64_t v129 = v17;
    uint64_t v125 = v4;
    *uint64_t v23 = *v24;
    v23[1] = v24[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v34 = v25[5];
    uint64_t v35 = (char *)v23 + v34;
    uint64_t v36 = (char *)v24 + v34;
    uint64_t v37 = type metadata accessor for Locale();
    int v38 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v37);
    int v39 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37);
    if (v38)
    {
      if (!v39)
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 16))(v35, v36, v37);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v37);
        goto LABEL_29;
      }
    }
    else
    {
      uint64_t v63 = *(void *)(v37 - 8);
      if (!v39)
      {
        (*(void (**)(char *, char *, uint64_t))(v63 + 24))(v35, v36, v37);
LABEL_29:
        uint64_t v65 = v25[6];
        uint64_t v66 = (char *)v23 + v65;
        char v67 = (char *)v24 + v65;
        uint64_t v68 = type metadata accessor for WeatherDataModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 24))(v66, v67, v68);
        uint64_t v69 = v25[7];
        uint64_t v70 = (char *)v23 + v69;
        uint64_t v71 = (char *)v24 + v69;
        uint64_t v72 = sub_10017DF08(&qword_100E63738);
        LODWORD(v66) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v70, 1, v72);
        int v73 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v71, 1, v72);
        if (v66)
        {
          if (!v73)
          {
            uint64_t v74 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16))(v70, v71, v74);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v70, 0, 1, v72);
            goto LABEL_35;
          }
        }
        else
        {
          if (!v73)
          {
            uint64_t v107 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 24))(v70, v71, v107);
LABEL_35:
            uint64_t v4 = v125;
            a3 = v127;
            uint64_t v17 = v129;
            if (a1 == v125) {
              goto LABEL_57;
            }
            uint64_t v76 = v25[8];
            int v77 = (void *)((char *)v23 + v76);
            uint64_t v78 = (void *)((char *)v24 + v76);
            sub_1001BC074((uint64_t)v23 + v76, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
            uint64_t v79 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 1)
            {
              uint64_t v100 = type metadata accessor for WeatherStatisticsModel();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v100 - 8) + 16))(v77, v78, v100);
            }
            else
            {
              if (EnumCaseMultiPayload)
              {
                memcpy(v77, v78, *(void *)(*(void *)(v79 - 8) + 64));
                goto LABEL_56;
              }
              void *v77 = *v78;
              v77[1] = v78[1];
              swift_bridgeObjectRetain();
            }
            swift_storeEnumTagMultiPayload();
LABEL_56:
            uint64_t v4 = v125;
            a3 = v127;
            uint64_t v17 = v129;
LABEL_57:
            uint64_t v101 = v25[9];
            uint64_t v23 = (void *)((char *)v23 + v101);
            uint64_t v24 = (void *)((char *)v24 + v101);
            uint64_t v102 = type metadata accessor for WeatherDataOverrides();
            int v103 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v102);
            int v104 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v102);
            if (v103)
            {
              if (!v104)
              {
                uint64_t v105 = type metadata accessor for Date();
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v105))
                {
                  uint64_t v106 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v23, v24, *(void *)(*(void *)(v106 - 8) + 64));
                }
                else
                {
                  (*(void (**)(void *, void *, uint64_t))(*(void *)(v105 - 8) + 16))(v23, v24, v105);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v105);
                }
                uint64_t v111 = *(int *)(v102 + 20);
                uint64_t v112 = (char *)v23 + v111;
                uint64_t v113 = (char *)v24 + v111;
                if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v24 + v111, 1, v105))
                {
                  uint64_t v114 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                  memcpy(v112, v113, *(void *)(*(void *)(v114 - 8) + 64));
                }
                else
                {
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 16))(v112, v113, v105);
                  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v112, 0, 1, v105);
                }
                a3 = v127;
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v102);
                uint64_t v4 = v125;
                goto LABEL_45;
              }
              goto LABEL_63;
            }
            if (v104)
            {
              sub_1001BC074((uint64_t)v23, (void (*)(void))type metadata accessor for WeatherDataOverrides);
LABEL_63:
              uint64_t v32 = &qword_100E63740;
              goto LABEL_8;
            }
            uint64_t v108 = type metadata accessor for Date();
            int v109 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v108);
            int v110 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v24, 1, v108);
            if (v109)
            {
              if (!v110)
              {
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v108 - 8) + 16))(v23, v24, v108);
                _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, v108);
                goto LABEL_77;
              }
            }
            else
            {
              uint64_t v115 = *(void *)(v108 - 8);
              if (!v110)
              {
                (*(void (**)(void *, void *, uint64_t))(v115 + 24))(v23, v24, v108);
LABEL_77:
                uint64_t v117 = *(int *)(v102 + 20);
                uint64_t v118 = (char *)v23 + v117;
                uint64_t v119 = (char *)v24 + v117;
                int v120 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v118, 1, v108);
                int v121 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v119, 1, v108);
                if (v120)
                {
                  if (!v121)
                  {
                    (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 16))(v118, v119, v108);
                    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v118, 0, 1, v108);
LABEL_83:
                    a3 = v127;
                    goto LABEL_45;
                  }
                }
                else
                {
                  uint64_t v122 = *(void *)(v108 - 8);
                  if (!v121)
                  {
                    (*(void (**)(char *, char *, uint64_t))(v122 + 24))(v118, v119, v108);
                    goto LABEL_83;
                  }
                  (*(void (**)(char *, uint64_t))(v122 + 8))(v118, v108);
                }
                uint64_t v123 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
                memcpy(v118, v119, *(void *)(*(void *)(v123 - 8) + 64));
                goto LABEL_83;
              }
              (*(void (**)(void *, uint64_t))(v115 + 8))(v23, v108);
            }
            uint64_t v116 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
            memcpy(v23, v24, *(void *)(*(void *)(v116 - 8) + 64));
            goto LABEL_77;
          }
          sub_1001781AC((uint64_t)v70, &qword_100E63738);
        }
        uint64_t v75 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v70, v71, *(void *)(*(void *)(v75 - 8) + 64));
        goto LABEL_35;
      }
      (*(void (**)(char *, uint64_t))(v63 + 8))(v35, v37);
    }
    uint64_t v64 = sub_10017DF08(&qword_100E63730);
    memcpy(v35, v36, *(void *)(*(void *)(v64 - 8) + 64));
    goto LABEL_29;
  }
  if (v26)
  {
LABEL_7:
    uint64_t v32 = &qword_100E63850;
LABEL_8:
    uint64_t v33 = sub_10017DF08(v32);
    memcpy(v23, v24, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_45;
  }
  uint64_t v126 = a3;
  uint64_t v128 = v17;
  uint64_t v124 = v4;
  *uint64_t v23 = *v24;
  v23[1] = v24[1];
  uint64_t v27 = v25[5];
  uint64_t v28 = (char *)v23 + v27;
  uint64_t v29 = (char *)v24 + v27;
  uint64_t v30 = type metadata accessor for Locale();
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v29, 1, v30))
  {
    uint64_t v31 = sub_10017DF08(&qword_100E63730);
    memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v28, 0, 1, v30);
  }
  uint64_t v40 = v25[6];
  uint64_t v41 = (char *)v23 + v40;
  uint64_t v42 = (char *)v24 + v40;
  uint64_t v43 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
  uint64_t v44 = v25[7];
  uint64_t v45 = (char *)v23 + v44;
  uint64_t v46 = (char *)v24 + v44;
  uint64_t v47 = sub_10017DF08(&qword_100E63738);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v47))
  {
    uint64_t v48 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
  }
  else
  {
    uint64_t v49 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 16))(v45, v46, v49);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v47);
  }
  uint64_t v50 = v25[8];
  uint64_t v51 = (void *)((char *)v23 + v50);
  uint64_t v52 = (void *)((char *)v24 + v50);
  uint64_t v53 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
  int v54 = swift_getEnumCaseMultiPayload();
  if (v54 == 1)
  {
    uint64_t v55 = type metadata accessor for WeatherStatisticsModel();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v55 - 8) + 16))(v51, v52, v55);
  }
  else
  {
    if (v54)
    {
      memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
      goto LABEL_22;
    }
    *uint64_t v51 = *v52;
    v51[1] = v52[1];
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
LABEL_22:
  uint64_t v17 = v128;
  uint64_t v56 = v25[9];
  uint64_t v57 = (char *)v23 + v56;
  uint64_t v58 = (char *)v24 + v56;
  uint64_t v59 = type metadata accessor for WeatherDataOverrides();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v58, 1, v59))
  {
    uint64_t v60 = sub_10017DF08(&qword_100E63740);
    memcpy(v57, v58, *(void *)(*(void *)(v60 - 8) + 64));
  }
  else
  {
    uint64_t v61 = type metadata accessor for Date();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v58, 1, v61))
    {
      uint64_t v62 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v57, v58, *(void *)(*(void *)(v62 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v57, v58, v61);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v57, 0, 1, v61);
    }
    uint64_t v81 = *(int *)(v59 + 20);
    char v82 = &v57[v81];
    uint64_t v83 = &v58[v81];
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v83, 1, v61))
    {
      uint64_t v84 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v82, v83, *(void *)(*(void *)(v84 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v61 - 8) + 16))(v82, v83, v61);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v82, 0, 1, v61);
    }
    uint64_t v17 = v128;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v57, 0, 1, v59);
  }
  uint64_t v4 = v124;
  a3 = v126;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v23, 0, 1, (uint64_t)v25);
LABEL_45:
  uint64_t v85 = v17[7];
  uint64_t v86 = (void *)((char *)v15 + v85);
  uint64_t v87 = (void *)(v16 + v85);
  *uint64_t v86 = *v87;
  v86[1] = v87[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v88 = v17[8];
  uint64_t v89 = (char *)v15 + v88;
  uint64_t v90 = v16 + v88;
  uint64_t v91 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v91 - 8) + 24))(v89, v90, v91);
  *((unsigned char *)v15 + v17[9]) = *(unsigned char *)(v16 + v17[9]);
  uint64_t v92 = *(int *)(a3 + 24);
  uint64_t v93 = (void *)(a1 + v92);
  uint64_t v94 = v4 + v92;
  uint64_t v95 = *(void *)(a1 + v92);
  uint64_t v96 = *(void *)(v4 + v92);
  if (!v95)
  {
    if (v96)
    {
      uint64_t v98 = *(void *)(v94 + 8);
      void *v93 = v96;
      v93[1] = v98;
      swift_retain();
      return a1;
    }
LABEL_51:
    *(_OWORD *)uint64_t v93 = *(_OWORD *)v94;
    return a1;
  }
  if (!v96)
  {
    swift_release();
    goto LABEL_51;
  }
  uint64_t v97 = *(void *)(v94 + 8);
  void *v93 = v96;
  v93[1] = v97;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_100599168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(_OWORD *)(a1 + v6) = *(_OWORD *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for ConditionDetailMapViewModel();
  uint64_t v10 = v9[5];
  uint64_t v11 = v7 + v10;
  uint64_t v12 = v8 + v10;
  uint64_t v13 = type metadata accessor for Location();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  uint64_t v14 = v9[6];
  uint64_t v15 = (_OWORD *)(v7 + v14);
  uint64_t v16 = (_OWORD *)(v8 + v14);
  uint64_t v17 = (int *)type metadata accessor for WeatherData(0);
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v16, 1, (uint64_t)v17))
  {
    uint64_t v18 = sub_10017DF08(&qword_100E63850);
    memcpy(v15, v16, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    uint64_t v60 = v3;
    uint64_t v61 = v4;
    *uint64_t v15 = *v16;
    uint64_t v19 = v17[5];
    uint64_t v20 = (char *)v15 + v19;
    uint64_t v21 = (char *)v16 + v19;
    uint64_t v22 = type metadata accessor for Locale();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v21, 1, v22))
    {
      uint64_t v23 = sub_10017DF08(&qword_100E63730);
      memcpy(v20, v21, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v20, 0, 1, v22);
    }
    uint64_t v24 = v17[6];
    uint64_t v25 = (char *)v15 + v24;
    int v26 = (char *)v16 + v24;
    uint64_t v27 = type metadata accessor for WeatherDataModel();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(v25, v26, v27);
    uint64_t v28 = v17[7];
    uint64_t v29 = (char *)v15 + v28;
    uint64_t v30 = (char *)v16 + v28;
    uint64_t v31 = sub_10017DF08(&qword_100E63738);
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v30, 1, v31))
    {
      uint64_t v32 = type metadata accessor for WeatherData.CachingState(0);
      memcpy(v29, v30, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      uint64_t v33 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v29, v30, v33);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v29, 0, 1, v31);
    }
    uint64_t v34 = v17[8];
    uint64_t v35 = (char *)v15 + v34;
    uint64_t v36 = (char *)v16 + v34;
    uint64_t v37 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v38 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v35, v36, v38);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
    }
    uint64_t v39 = v17[9];
    uint64_t v40 = (char *)v15 + v39;
    uint64_t v41 = (char *)v16 + v39;
    uint64_t v42 = type metadata accessor for WeatherDataOverrides();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v42))
    {
      uint64_t v43 = sub_10017DF08(&qword_100E63740);
      memcpy(v40, v41, *(void *)(*(void *)(v43 - 8) + 64));
    }
    else
    {
      uint64_t v44 = type metadata accessor for Date();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v41, 1, v44))
      {
        uint64_t v45 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v40, v41, *(void *)(*(void *)(v45 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(v40, v41, v44);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v44);
      }
      uint64_t v46 = *(int *)(v42 + 20);
      __dst = &v40[v46];
      uint64_t v47 = &v41[v46];
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v47, 1, v44))
      {
        uint64_t v48 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(__dst, v47, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 32))(__dst, v47, v44);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)__dst, 0, 1, v44);
      }
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v40, 0, 1, v42);
    }
    uint64_t v3 = v60;
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v15, 0, 1, (uint64_t)v17);
    uint64_t v4 = v61;
  }
  *(_OWORD *)(v7 + v9[7]) = *(_OWORD *)(v8 + v9[7]);
  uint64_t v49 = v9[8];
  uint64_t v50 = v7 + v49;
  uint64_t v51 = v8 + v49;
  uint64_t v52 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 32))(v50, v51, v52);
  *(unsigned char *)(v7 + v9[9]) = *(unsigned char *)(v8 + v9[9]);
  uint64_t v53 = *(int *)(v3 + 24);
  int v54 = (void *)(a1 + v53);
  uint64_t v55 = (uint64_t *)(v4 + v53);
  uint64_t v56 = *v55;
  if (*v55)
  {
    uint64_t v57 = v55[1];
    *int v54 = v56;
    v54[1] = v57;
  }
  else
  {
    *(_OWORD *)int v54 = *(_OWORD *)v55;
  }
  return a1;
}

uint64_t sub_100599718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (_OWORD *)a2;
  char v6 = *(unsigned char *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 17);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  char v10 = *(unsigned char *)(a1 + 17);
  *(_OWORD *)a1 = *v4;
  uint64_t v11 = *(unsigned __int8 *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 17) = v7;
  sub_100597CD8(v8, v9, v11, v10);
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (char *)v4 + v12;
  uint64_t v15 = *(void *)((char *)v4 + v12 + 8);
  void *v13 = *(void *)((char *)v4 + v12);
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = (int *)type metadata accessor for ConditionDetailMapViewModel();
  uint64_t v17 = v16[5];
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = &v14[v17];
  uint64_t v20 = type metadata accessor for Location();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  uint64_t v21 = v16[6];
  uint64_t v22 = (void *)((char *)v13 + v21);
  uint64_t v23 = &v14[v21];
  uint64_t v24 = (int *)type metadata accessor for WeatherData(0);
  LODWORD(v18) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, (uint64_t)v24);
  int v25 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, (uint64_t)v24);
  if (v18)
  {
    if (!v25)
    {
      uint64_t v126 = a3;
      uint64_t v128 = v16;
      *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
      uint64_t v26 = v24[5];
      uint64_t v27 = (char *)v22 + v26;
      uint64_t v28 = &v23[v26];
      uint64_t v29 = type metadata accessor for Locale();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v28, 1, v29))
      {
        uint64_t v30 = sub_10017DF08(&qword_100E63730);
        memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v27, 0, 1, v29);
      }
      uint64_t v40 = v24[6];
      uint64_t v41 = (char *)v22 + v40;
      uint64_t v42 = &v23[v40];
      uint64_t v43 = type metadata accessor for WeatherDataModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v41, v42, v43);
      uint64_t v44 = v24[7];
      uint64_t v45 = (char *)v22 + v44;
      uint64_t v46 = &v23[v44];
      uint64_t v47 = sub_10017DF08(&qword_100E63738);
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v46, 1, v47))
      {
        uint64_t v48 = type metadata accessor for WeatherData.CachingState(0);
        memcpy(v45, v46, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        uint64_t v49 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v45, v46, v49);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v45, 0, 1, v47);
      }
      uint64_t v50 = v24[8];
      uint64_t v51 = (char *)v22 + v50;
      uint64_t v52 = &v23[v50];
      uint64_t v53 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v54 = type metadata accessor for WeatherStatisticsModel();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 32))(v51, v52, v54);
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        memcpy(v51, v52, *(void *)(*(void *)(v53 - 8) + 64));
      }
      uint64_t v55 = v24[9];
      uint64_t v56 = (char *)v22 + v55;
      uint64_t v57 = &v23[v55];
      uint64_t v58 = type metadata accessor for WeatherDataOverrides();
      if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v58))
      {
        uint64_t v59 = sub_10017DF08(&qword_100E63740);
        memcpy(v56, v57, *(void *)(*(void *)(v59 - 8) + 64));
      }
      else
      {
        uint64_t v125 = v4;
        uint64_t v60 = type metadata accessor for Date();
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v57, 1, v60))
        {
          uint64_t v61 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v56, v57, *(void *)(*(void *)(v61 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v56, v57, v60);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v56, 0, 1, v60);
        }
        uint64_t v86 = *(int *)(v58 + 20);
        uint64_t v87 = &v56[v86];
        uint64_t v88 = &v57[v86];
        if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v88, 1, v60))
        {
          uint64_t v89 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
          memcpy(v87, v88, *(void *)(*(void *)(v89 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(v87, v88, v60);
          _s7Weather24LocationCompositionStateOwst_0((uint64_t)v87, 0, 1, v60);
        }
        uint64_t v4 = v125;
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v56, 0, 1, v58);
      }
      a3 = v126;
      uint64_t v16 = v128;
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, (uint64_t)v24);
      goto LABEL_50;
    }
    goto LABEL_7;
  }
  if (v25)
  {
    sub_1001BC074((uint64_t)v22, (void (*)(void))type metadata accessor for WeatherData);
LABEL_7:
    uint64_t v31 = &qword_100E63850;
LABEL_8:
    uint64_t v32 = sub_10017DF08(v31);
    memcpy(v22, v23, *(void *)(*(void *)(v32 - 8) + 64));
    goto LABEL_50;
  }
  uint64_t v127 = a3;
  uint64_t v129 = v16;
  uint64_t v124 = v4;
  uint64_t v33 = *((void *)v23 + 1);
  void *v22 = *(void *)v23;
  v22[1] = v33;
  swift_bridgeObjectRelease();
  uint64_t v34 = v24[5];
  uint64_t v35 = (char *)v22 + v34;
  uint64_t v36 = &v23[v34];
  uint64_t v37 = type metadata accessor for Locale();
  int v38 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v35, 1, v37);
  int v39 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v36, 1, v37);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v35, v36, v37);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v35, 0, 1, v37);
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  uint64_t v62 = *(void *)(v37 - 8);
  if (v39)
  {
    (*(void (**)(char *, uint64_t))(v62 + 8))(v35, v37);
LABEL_25:
    uint64_t v63 = sub_10017DF08(&qword_100E63730);
    memcpy(v35, v36, *(void *)(*(void *)(v63 - 8) + 64));
    goto LABEL_26;
  }
  (*(void (**)(char *, char *, uint64_t))(v62 + 40))(v35, v36, v37);
LABEL_26:
  uint64_t v64 = v24[6];
  uint64_t v65 = (char *)v22 + v64;
  uint64_t v66 = &v23[v64];
  uint64_t v67 = type metadata accessor for WeatherDataModel();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v67 - 8) + 40))(v65, v66, v67);
  uint64_t v68 = v24[7];
  uint64_t v69 = (char *)v22 + v68;
  uint64_t v70 = &v23[v68];
  uint64_t v71 = sub_10017DF08(&qword_100E63738);
  LODWORD(v65) = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v69, 1, v71);
  int v72 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v70, 1, v71);
  if (v65)
  {
    if (!v72)
    {
      uint64_t v73 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 32))(v69, v70, v73);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v69, 0, 1, v71);
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  if (v72)
  {
    sub_1001781AC((uint64_t)v69, &qword_100E63738);
LABEL_31:
    uint64_t v74 = type metadata accessor for WeatherData.CachingState(0);
    memcpy(v69, v70, *(void *)(*(void *)(v74 - 8) + 64));
    goto LABEL_32;
  }
  uint64_t v107 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v107 - 8) + 40))(v69, v70, v107);
LABEL_32:
  uint64_t v4 = v124;
  a3 = v127;
  uint64_t v16 = v129;
  if ((_OWORD *)a1 != v124)
  {
    uint64_t v75 = v24[8];
    uint64_t v76 = (char *)v22 + v75;
    int v77 = &v23[v75];
    sub_1001BC074((uint64_t)v22 + v75, (void (*)(void))type metadata accessor for WeatherData.WeatherStatisticsState);
    uint64_t v78 = type metadata accessor for WeatherData.WeatherStatisticsState(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v79 = type metadata accessor for WeatherStatisticsModel();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v76, v77, v79);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v76, v77, *(void *)(*(void *)(v78 - 8) + 64));
    }
    a3 = v127;
    uint64_t v16 = v129;
  }
  uint64_t v80 = v24[9];
  uint64_t v22 = (void *)((char *)v22 + v80);
  v23 += v80;
  uint64_t v81 = type metadata accessor for WeatherDataOverrides();
  int v82 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v81);
  int v83 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v81);
  if (!v82)
  {
    if (v83)
    {
      sub_1001BC074((uint64_t)v22, (void (*)(void))type metadata accessor for WeatherDataOverrides);
      goto LABEL_43;
    }
    uint64_t v108 = type metadata accessor for Date();
    int v109 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v22, 1, v108);
    int v110 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v108);
    if (v109)
    {
      if (!v110)
      {
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v108 - 8) + 32))(v22, v23, v108);
        _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v108);
        goto LABEL_71;
      }
    }
    else
    {
      uint64_t v115 = *(void *)(v108 - 8);
      if (!v110)
      {
        (*(void (**)(void *, char *, uint64_t))(v115 + 40))(v22, v23, v108);
LABEL_71:
        uint64_t v117 = *(int *)(v81 + 20);
        uint64_t v118 = (char *)v22 + v117;
        uint64_t v119 = &v23[v117];
        int v120 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v118, 1, v108);
        int v121 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v119, 1, v108);
        if (v120)
        {
          if (!v121)
          {
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v108 - 8) + 32))(v118, v119, v108);
            _s7Weather24LocationCompositionStateOwst_0((uint64_t)v118, 0, 1, v108);
LABEL_77:
            uint64_t v16 = v129;
            goto LABEL_50;
          }
        }
        else
        {
          uint64_t v122 = *(void *)(v108 - 8);
          if (!v121)
          {
            (*(void (**)(char *, char *, uint64_t))(v122 + 40))(v118, v119, v108);
            goto LABEL_77;
          }
          (*(void (**)(char *, uint64_t))(v122 + 8))(v118, v108);
        }
        uint64_t v123 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
        memcpy(v118, v119, *(void *)(*(void *)(v123 - 8) + 64));
        goto LABEL_77;
      }
      (*(void (**)(void *, uint64_t))(v115 + 8))(v22, v108);
    }
    uint64_t v116 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v22, v23, *(void *)(*(void *)(v116 - 8) + 64));
    goto LABEL_71;
  }
  if (v83)
  {
LABEL_43:
    uint64_t v31 = &qword_100E63740;
    goto LABEL_8;
  }
  uint64_t v84 = type metadata accessor for Date();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v23, 1, v84))
  {
    uint64_t v85 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v22, v23, *(void *)(*(void *)(v85 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v84 - 8) + 32))(v22, v23, v84);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v84);
  }
  uint64_t v111 = *(int *)(v81 + 20);
  uint64_t v112 = (char *)v22 + v111;
  uint64_t v113 = &v23[v111];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&v23[v111], 1, v84))
  {
    uint64_t v114 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v112, v113, *(void *)(*(void *)(v114 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 32))(v112, v113, v84);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v112, 0, 1, v84);
  }
  uint64_t v16 = v129;
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v22, 0, 1, v81);
  a3 = v127;
LABEL_50:
  uint64_t v90 = v16[7];
  uint64_t v91 = (void *)((char *)v13 + v90);
  uint64_t v92 = &v14[v90];
  uint64_t v94 = *(void *)v92;
  uint64_t v93 = *((void *)v92 + 1);
  *uint64_t v91 = v94;
  v91[1] = v93;
  swift_bridgeObjectRelease();
  uint64_t v95 = v16[8];
  uint64_t v96 = (char *)v13 + v95;
  uint64_t v97 = &v14[v95];
  uint64_t v98 = type metadata accessor for WeatherMapOverlayKind();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v98 - 8) + 40))(v96, v97, v98);
  *((unsigned char *)v13 + v16[9]) = v14[v16[9]];
  uint64_t v99 = *(int *)(a3 + 24);
  uint64_t v100 = (void *)(a1 + v99);
  uint64_t v101 = (char *)v4 + v99;
  uint64_t v102 = *(void *)(a1 + v99);
  uint64_t v103 = *(void *)((char *)v4 + v99);
  if (!v102)
  {
    if (v103)
    {
      uint64_t v105 = *((void *)v101 + 1);
      *uint64_t v100 = v103;
      v100[1] = v105;
      return a1;
    }
LABEL_56:
    *(_OWORD *)uint64_t v100 = *(_OWORD *)v101;
    return a1;
  }
  if (!v103)
  {
    swift_release();
    goto LABEL_56;
  }
  uint64_t v104 = *((void *)v101 + 1);
  *uint64_t v100 = v103;
  v100[1] = v104;
  swift_release();
  return a1;
}

uint64_t sub_10059A4BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10059A4D0);
}

uint64_t sub_10059A4D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for ConditionDetailMapViewModel();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  else
  {
    unint64_t v11 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    int v12 = v11 - 1;
    if (v12 < 0) {
      int v12 = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_10059A56C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10059A580);
}

void sub_10059A580(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  type metadata accessor for ConditionDetailMapViewModel();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = a2;
  }
}

uint64_t type metadata accessor for ConditionDetailMapView()
{
  uint64_t result = qword_100E813B8;
  if (!qword_100E813B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10059A654()
{
  uint64_t result = type metadata accessor for ConditionDetailMapViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10059A6F4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10059A710()
{
  uint64_t v1 = sub_10017DF08(&qword_100E63850);
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_1001626E0();
  uint64_t v5 = v4 - v3;
  uint64_t v6 = sub_10017DF08(&qword_100E71950);
  uint64_t v7 = sub_100109308(v6);
  __chkstk_darwin(v7);
  sub_1001626E0();
  uint64_t v10 = v9 - v8;
  uint64_t v11 = type metadata accessor for WeatherDataModel();
  sub_100179C0C();
  uint64_t v13 = v12;
  __chkstk_darwin(v14);
  sub_1001626E0();
  uint64_t v17 = v16 - v15;
  uint64_t v18 = v0 + *(int *)(type metadata accessor for ConditionDetailMapView() + 20);
  uint64_t v19 = type metadata accessor for ConditionDetailMapViewModel();
  sub_1001262FC(v18 + *(int *)(v19 + 24), v5, &qword_100E63850);
  uint64_t v20 = type metadata accessor for WeatherData(0);
  if (_s7Weather24LocationCompositionStateOwet_0(v5, 1, v20) == 1)
  {
    sub_1001781AC(v5, &qword_100E63850);
    _s7Weather24LocationCompositionStateOwst_0(v10, 1, 1, v11);
  }
  else
  {
    uint64_t v21 = v5 + *(int *)(v20 + 24);
    uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
    v22(v10, v21, v11);
    sub_1001BC074(v5, (void (*)(void))type metadata accessor for WeatherData);
    _s7Weather24LocationCompositionStateOwst_0(v10, 0, 1, v11);
    if (_s7Weather24LocationCompositionStateOwet_0(v10, 1, v11) != 1)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v17, v10, v11);
      sub_10017DF08(&qword_100E81498);
      uint64_t v24 = (int *)(sub_10017DF08(&qword_100E814A0) - 8);
      unint64_t v25 = (*(unsigned __int8 *)(*(void *)v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v24 + 80);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_100C251B0;
      uint64_t v27 = (uint64_t *)(v26 + v25);
      uint64_t v28 = (char *)v27 + v24[14];
      *uint64_t v27 = Location.id.getter();
      v27[1] = v29;
      v22((uint64_t)v28, v17, v11);
      uint64_t v23 = Dictionary.init(dictionaryLiteral:)();
      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v17, v11);
      return v23;
    }
  }
  sub_1001781AC(v10, &qword_100E71950);
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t sub_10059AA5C()
{
  uint64_t v1 = sub_10017DF08(&qword_100E813F8);
  uint64_t v2 = sub_100109308(v1);
  __chkstk_darwin(v2);
  sub_1001626E0();
  uint64_t v5 = v4 - v3;
  *(void *)uint64_t v5 = static HorizontalAlignment.leading.getter();
  *(void *)(v5 + 8) = 0;
  *(unsigned char *)(v5 + 16) = 0;
  uint64_t v6 = sub_10017DF08(&qword_100E81400);
  sub_10059AB4C(v0, v5 + *(int *)(v6 + 44));
  static Alignment.center.getter();
  sub_100BD82D0();
  return sub_1001781AC(v5, &qword_100E813F8);
}

uint64_t sub_10059AB4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v3 = sub_10017DF08(&qword_100E81408);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_10017DF08(&qword_100E81410);
  __chkstk_darwin(v60);
  uint64_t v62 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v59 = (char *)&v56 - v8;
  __chkstk_darwin(v9);
  uint64_t v61 = (char *)&v56 - v10;
  uint64_t v11 = (void *)(a1 + *(int *)(type metadata accessor for ConditionDetailMapView() + 20));
  uint64_t v12 = v11[1];
  uint64_t v58 = v11;
  if (v12)
  {
    v74[0] = *v11;
    v74[1] = v12;
    sub_10014A85C();
    swift_bridgeObjectRetain();
    uint64_t v13 = Text.init<A>(_:)();
    uint64_t v56 = a1;
    uint64_t v15 = v14;
    char v17 = v16 & 1;
    swift_beginAccess();
    sub_1005924A8();
    swift_endAccess();
    uint64_t v18 = Text.font(_:)();
    uint64_t v57 = v5;
    uint64_t v20 = v19;
    char v22 = v21;
    uint64_t v24 = v23;
    swift_release();
    uint64_t v25 = v15;
    a1 = v56;
    sub_100191924(v13, v25, v17);
    swift_bridgeObjectRelease();
    uint64_t v26 = static Alignment.leading.getter();
    sub_100BD7E24(v74, 0, 1, 0, 1, 0x7FF0000000000000, 0, 0, 1, 0, 1, 0, 1, v26, v27, v18, v20, v22 & 1, v24);
    uint64_t v28 = v20;
    uint64_t v5 = v57;
    sub_100191924(v18, v28, v22 & 1);
    swift_bridgeObjectRelease();
    memcpy(v66, v74, 0x90uLL);
    double v29 = sub_100592594();
    uint64_t v31 = v30;
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    LOBYTE(v24) = static Edge.Set.all.getter();
    char v64 = 0;
    memcpy(v67, v66, 0x90uLL);
    v67[144] = v24;
    *(_DWORD *)uint64_t v68 = *(_DWORD *)v65;
    *(_DWORD *)&v68[3] = *(_DWORD *)&v65[3];
    double v69 = v29;
    uint64_t v70 = v31;
    uint64_t v71 = v33;
    uint64_t v72 = v35;
    char v73 = 0;
    LocationSearchEntityFromStringResolver.init()();
  }
  else
  {
    sub_10059BAC0(v67);
  }
  sub_10020E72C((uint64_t)v67, (uint64_t)v74, &qword_100E81418);
  sub_10059B06C(a1, (uint64_t)v5);
  unsigned __int8 v36 = static Edge.Set.leading.getter();
  unsigned __int8 v37 = static Edge.Set.trailing.getter();
  char v38 = Edge.Set.init(rawValue:)();
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v36) {
    char v38 = Edge.Set.init(rawValue:)();
  }
  Edge.Set.init(rawValue:)();
  if (Edge.Set.init(rawValue:)() != v37) {
    char v38 = Edge.Set.init(rawValue:)();
  }
  uint64_t v40 = (uint64_t)v62;
  uint64_t v39 = v63;
  uint64_t v42 = v60;
  uint64_t v41 = (uint64_t)v61;
  uint64_t v43 = v58;
  uint64_t v44 = (uint64_t)v59;
  if (*((unsigned char *)v43 + *(int *)(type metadata accessor for ConditionDetailMapViewModel() + 36)))
  {
    swift_beginAccess();
    sub_100592380();
  }
  EdgeInsets.init(_all:)();
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  sub_1001262FC((uint64_t)v5, v44, &qword_100E81408);
  uint64_t v53 = v44 + *(int *)(v42 + 36);
  *(unsigned char *)uint64_t v53 = v38;
  *(void *)(v53 + 8) = v46;
  *(void *)(v53 + 16) = v48;
  *(void *)(v53 + 24) = v50;
  *(void *)(v53 + 32) = v52;
  *(unsigned char *)(v53 + 40) = 0;
  sub_1001781AC((uint64_t)v5, &qword_100E81408);
  sub_10020E72C(v44, v41, &qword_100E81410);
  sub_10020E72C((uint64_t)v74, (uint64_t)v65, &qword_100E81418);
  sub_1001262FC(v41, v40, &qword_100E81410);
  sub_10020E72C((uint64_t)v65, (uint64_t)v66, &qword_100E81418);
  sub_10020E72C((uint64_t)v66, v39, &qword_100E81418);
  uint64_t v54 = sub_10017DF08(&qword_100E81420);
  sub_1001262FC(v40, v39 + *(int *)(v54 + 48), &qword_100E81410);
  sub_10059BAC8((uint64_t)v66, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_100147E1C);
  sub_1001781AC(v41, &qword_100E81410);
  sub_1001781AC(v40, &qword_100E81410);
  sub_10020E72C((uint64_t)v65, (uint64_t)v67, &qword_100E81418);
  return sub_10059BAC8((uint64_t)v67, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_100147E60);
}

uint64_t sub_10059B06C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E81428);
  __chkstk_darwin(v4);
  uint64_t v6 = (uint64_t *)((char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_10017DF08(&qword_100E81430);
  uint64_t v46 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v44 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v45 = (char *)&v39 - v10;
  uint64_t v47 = sub_10017DF08(&qword_100E81438);
  __chkstk_darwin(v47);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_10017DF08(&qword_100E81440);
  __chkstk_darwin(v48);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  char v17 = (char *)&v39 - v16;
  uint64_t v18 = type metadata accessor for ConditionDetailMapView();
  uint64_t v19 = (uint64_t *)(a1 + *(int *)(v18 + 24));
  uint64_t v20 = *v19;
  if (*v19)
  {
    uint64_t v21 = v18;
    uint64_t v43 = a2;
    uint64_t v41 = v19[1];
    swift_retain();
    *uint64_t v6 = static Alignment.bottom.getter();
    v6[1] = v22;
    uint64_t v23 = *(int *)(sub_10017DF08(&qword_100E81470) + 44);
    uint64_t v42 = v4;
    uint64_t v24 = (uint64_t)v6 + v23;
    sub_10059B5B4((uint64_t)v17);
    uint64_t v25 = a1 + *(int *)(v21 + 20);
    uint64_t v26 = (uint64_t *)(v25 + *(int *)(type metadata accessor for ConditionDetailMapViewModel() + 28));
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    sub_1001262FC((uint64_t)v17, (uint64_t)v14, &qword_100E81440);
    sub_1001262FC((uint64_t)v14, v24, &qword_100E81440);
    double v29 = (void *)(v24 + *(int *)(sub_10017DF08(&qword_100E81478) + 48));
    void *v29 = v28;
    v29[1] = v27;
    swift_bridgeObjectRetain_n();
    sub_1001781AC((uint64_t)v17, &qword_100E81440);
    swift_bridgeObjectRelease();
    sub_1001781AC((uint64_t)v14, &qword_100E81440);
    uint64_t v30 = swift_allocObject();
    uint64_t v31 = v41;
    *(void *)(v30 + 16) = v20;
    *(void *)(v30 + 24) = v31;
    uint64_t v32 = sub_1001246C8(&qword_100E81448, &qword_100E81428);
    swift_retain();
    uint64_t v33 = v44;
    uint64_t v40 = v20;
    uint64_t v34 = v42;
    View.onTapGesture(count:perform:)();
    swift_release();
    sub_1001781AC((uint64_t)v6, &qword_100E81428);
    unsigned __int8 v36 = v45;
    uint64_t v35 = v46;
    (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v45, v33, v7);
    (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v12, v36, v7);
    swift_storeEnumTagMultiPayload();
    uint64_t v49 = v34;
    uint64_t v50 = v32;
    swift_getOpaqueTypeConformance2();
    sub_10059BB74(&qword_100E81450, &qword_100E81440, (void (*)(void))sub_10059BB44);
    _ConditionalContent<>.init(storage:)();
    sub_1001361AC(v40);
    return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v36, v7);
  }
  else
  {
    sub_10059B5B4((uint64_t)v17);
    sub_1001262FC((uint64_t)v17, (uint64_t)v12, &qword_100E81440);
    swift_storeEnumTagMultiPayload();
    uint64_t v38 = sub_1001246C8(&qword_100E81448, &qword_100E81428);
    uint64_t v49 = v4;
    uint64_t v50 = v38;
    swift_getOpaqueTypeConformance2();
    sub_10059BB74(&qword_100E81450, &qword_100E81440, (void (*)(void))sub_10059BB44);
    _ConditionalContent<>.init(storage:)();
    return sub_1001781AC((uint64_t)v17, &qword_100E81440);
  }
}

uint64_t sub_10059B5B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v3 = sub_10017DF08(&qword_100E81480);
  uint64_t v4 = sub_100109308(v3);
  __chkstk_darwin(v4);
  sub_1001626E0();
  uint64_t v5 = type metadata accessor for WeatherMapDisplayMode();
  sub_100179C0C();
  uint64_t v7 = v6;
  __chkstk_darwin(v8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  type metadata accessor for WeatherMap();
  sub_100179C0C();
  uint64_t v50 = v13;
  uint64_t v51 = v12;
  __chkstk_darwin(v12);
  sub_100109314();
  uint64_t v49 = v14;
  uint64_t v48 = sub_10017DF08(&qword_100E81460);
  sub_100162E4C();
  __chkstk_darwin(v15);
  sub_100109314();
  uint64_t v52 = v16;
  uint64_t v17 = *(int *)(sub_10017DF08(&qword_100E81488) + 48);
  uint64_t v18 = enum case for WeatherMapDisplayMode.SnapshotSizingBehavior.autoSizing(_:);
  type metadata accessor for WeatherMapDisplayMode.SnapshotSizingBehavior();
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v19 + 104))(v11, v18);
  if (qword_100E62458 != -1) {
    swift_once();
  }
  *(void *)(v11 + v17) = qword_100F51928;
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v11, enum case for WeatherMapDisplayMode.snapshot(_:), v5);
  uint64_t v20 = sub_1001A21E0();
  sub_10059793C(v20, v21, v22, v23);
  sub_1005D21B4();
  uint64_t v24 = sub_1001A21E0();
  sub_100597CD8(v24, v25, v26, v27);
  sub_10017DF08(&qword_100E81490);
  uint64_t v28 = type metadata accessor for Location();
  sub_100179C0C();
  uint64_t v30 = v29;
  unint64_t v31 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_100C251B0;
  unint64_t v33 = v32 + v31;
  uint64_t v34 = v2 + *(int *)(type metadata accessor for ConditionDetailMapView() + 20);
  uint64_t v35 = type metadata accessor for ConditionDetailMapViewModel();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v30 + 16))(v33, v34 + *(int *)(v35 + 20), v28);
  type metadata accessor for WeatherMapOverlayKind();
  static Binding.constant(_:)();
  Location.id.getter();
  sub_10017DF08(&qword_100E65F18);
  static Binding.constant(_:)();
  swift_bridgeObjectRelease();
  sub_10059A710();
  WeatherMap.init(displayMode:preferredMapSize:locations:overlayKind:selectedLocationId:weatherData:options:cacheIdentifier:isPreferredForCachedInstance:debugIdentifier:)();
  char v36 = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16))(v52, v49, v51);
  uint64_t v45 = v52 + *(int *)(v48 + 36);
  *(unsigned char *)uint64_t v45 = v36;
  *(void *)(v45 + 8) = v38;
  *(void *)(v45 + 16) = v40;
  *(void *)(v45 + 24) = v42;
  *(void *)(v45 + 32) = v44;
  *(unsigned char *)(v45 + 40) = 0;
  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v51);
  swift_beginAccess();
  sub_100B23978();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_1001262FC(v52, a1, &qword_100E81460);
  uint64_t v46 = (_OWORD *)(a1 + *(int *)(sub_10017DF08(&qword_100E81440) + 36));
  _OWORD *v46 = v54;
  v46[1] = v55;
  v46[2] = v56;
  return sub_1001781AC(v52, &qword_100E81460);
}

void sub_10059BAC0(void *a1)
{
}

uint64_t sub_10059BAC8(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 184);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    v4);
  return a1;
}

uint64_t sub_10059BB44()
{
  return sub_10059BB74(&qword_100E81458, &qword_100E81460, (void (*)(void))sub_10059BBF0);
}

uint64_t sub_10059BB74(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10059BBF0()
{
  unint64_t result = qword_100E81468;
  if (!qword_100E81468)
  {
    type metadata accessor for WeatherMap();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E81468);
  }
  return result;
}

uint64_t sub_10059BC40()
{
  swift_release();

  return swift_deallocObject();
}

unint64_t sub_10059BC7C()
{
  unint64_t result = qword_100E814A8;
  if (!qword_100E814A8)
  {
    sub_10018C6DC(&qword_100E814B0);
    sub_1001246C8(&qword_100E814B8, &qword_100E813F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E814A8);
  }
  return result;
}

uint64_t sub_10059BD1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10017DF08(&qword_100E81558);
  __chkstk_darwin(v4 - 8);
  sub_1001626E0();
  uint64_t v7 = v6 - v5;
  uint64_t v8 = type metadata accessor for ViewState(0);
  __chkstk_darwin(v8 - 8);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = type metadata accessor for VFXTestViewState();
  sub_100162E4C();
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = v15 - v14;
  sub_10059BF00(a1 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_view, v11);
  sub_100987144(v7);
  sub_10059BF64(v11);
  if (_s7Weather24LocationCompositionStateOwet_0(v7, 1, v12) == 1)
  {
    sub_10059BFC0(v7);
    uint64_t v17 = enum case for WeatherCondition.clear(_:);
    type metadata accessor for WeatherCondition();
    sub_100162E4C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 104))(a2, v17);
  }
  else
  {
    sub_10059C020(v7, v16);
    type metadata accessor for WeatherCondition();
    sub_100162E4C();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 32))(a2, v16);
  }
}

uint64_t type metadata accessor for VFXTestViewModelFactory()
{
  return self;
}

uint64_t sub_10059BF00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ViewState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10059BF64(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ViewState(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10059BFC0(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E81558);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10059C020(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for VFXTestViewState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

char *sub_10059C084(char *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *(void *)a1 = *a2;
    a1 = (char *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_10017DF08(&qword_100E66E70);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for Locale();
      (*(void (**)(char *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *(void *)a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for Date();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    v13(v10, v11, v12);
    uint64_t v14 = a3[6];
    uint64_t v15 = &a1[v14];
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = type metadata accessor for Calendar();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
    v13(&a1[a3[7]], (char *)a2 + a3[7], v12);
    v13(&a1[a3[8]], (char *)a2 + a3[8], v12);
    uint64_t v18 = a3[10];
    *(void *)&a1[a3[9]] = *(uint64_t *)((char *)a2 + a3[9]);
    uint64_t v19 = &a1[v18];
    uint64_t v20 = (char *)a2 + v18;
    swift_bridgeObjectRetain();
    v13(v19, v20, v12);
  }
  return a1;
}

uint64_t sub_10059C2A0(uint64_t a1, int *a2)
{
  sub_10017DF08(&qword_100E66E70);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for Locale();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v11)((void *)(v6 - 8), v5, v6);
  uint64_t v7 = a1 + a2[6];
  uint64_t v8 = type metadata accessor for Calendar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  v11(a1 + a2[7], v6);
  v11(a1 + a2[8], v6);
  swift_bridgeObjectRelease();
  uint64_t v9 = a1 + a2[10];

  return ((uint64_t (*)(uint64_t, uint64_t))v11)(v9, v6);
}

char *sub_10059C430(char *a1, char *a2, int *a3)
{
  sub_10017DF08(&qword_100E66E70);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for Locale();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for Calendar();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  v11(&a1[a3[7]], &a2[a3[7]], v10);
  v11(&a1[a3[8]], &a2[a3[8]], v10);
  uint64_t v16 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  swift_bridgeObjectRetain();
  v11(v17, v18, v10);
  return a1;
}

char *sub_10059C5FC(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10059C7E0((uint64_t)a1);
    sub_10017DF08(&qword_100E66E70);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for Locale();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for Calendar();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  v11(&a1[a3[7]], &a2[a3[7]], v10);
  v11(&a1[a3[8]], &a2[a3[8]], v10);
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11(&a1[a3[10]], &a2[a3[10]], v10);
  return a1;
}

uint64_t sub_10059C7E0(uint64_t a1)
{
  uint64_t v2 = sub_10017DF08(&qword_100E66E70);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_10059C840(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E66E70);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for Locale();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32);
  v12(v9, v10, v11);
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = type metadata accessor for Calendar();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  v12(&a1[a3[7]], &a2[a3[7]], v11);
  v12(&a1[a3[8]], &a2[a3[8]], v11);
  uint64_t v17 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  v12(&a1[v17], &a2[v17], v11);
  return a1;
}

char *sub_10059CA08(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10059C7E0((uint64_t)a1);
    uint64_t v6 = sub_10017DF08(&qword_100E66E70);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for Locale();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 40);
  v12(v9, v10, v11);
  uint64_t v13 = a3[6];
  uint64_t v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = type metadata accessor for Calendar();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 40))(v14, v15, v16);
  v12(&a1[a3[7]], &a2[a3[7]], v11);
  v12(&a1[a3[8]], &a2[a3[8]], v11);
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  v12(&a1[a3[10]], &a2[a3[10]], v11);
  return a1;
}

uint64_t sub_10059CBEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10059CC00);
}

uint64_t sub_10059CC00(uint64_t a1, uint64_t a2, int *a3)
{
  sub_10017DF08(&qword_100E81560);
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_8:
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v11 + 84) == a2)
  {
    uint64_t v8 = v10;
    uint64_t v12 = a3[5];
LABEL_7:
    uint64_t v9 = a1 + v12;
    goto LABEL_8;
  }
  type metadata accessor for Calendar();
  sub_100162F30();
  if (*(_DWORD *)(v14 + 84) == a2)
  {
    uint64_t v8 = v13;
    uint64_t v12 = a3[6];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[9]);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  return (v16 + 1);
}

uint64_t sub_10059CCDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10059CCF0);
}

void sub_10059CCF0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  sub_10017DF08(&qword_100E81560);
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    type metadata accessor for Date();
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[5];
    }
    else
    {
      type metadata accessor for Calendar();
      sub_100162F30();
      if (*(_DWORD *)(v16 + 84) != a3)
      {
        *(void *)(a1 + a4[9]) = (a2 - 1);
        return;
      }
      uint64_t v10 = v15;
      uint64_t v14 = a4[6];
    }
    uint64_t v11 = a1 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t _s13CalendarStateVMa()
{
  uint64_t result = qword_100E815C0;
  if (!qword_100E815C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10059CE10()
{
  sub_10059CF28();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Date();
    if (v1 <= 0x3F)
    {
      type metadata accessor for Calendar();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_10059CF28()
{
  if (!qword_100E815D0)
  {
    type metadata accessor for Locale();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100E815D0);
    }
  }
}

uint64_t sub_10059CF80()
{
  uint64_t v132 = type metadata accessor for Calendar.Component();
  uint64_t v134 = *(void *)(v132 - 8);
  uint64_t v1 = v134;
  __chkstk_darwin(v132);
  sub_100109314();
  uint64_t v128 = v2;
  uint64_t v3 = sub_10017DF08(&qword_100E6D1D8);
  __chkstk_darwin(v3 - 8);
  sub_100109314();
  uint64_t v115 = v4;
  uint64_t v5 = sub_10017DF08(&qword_100E7D438);
  __chkstk_darwin(v5 - 8);
  sub_100109314();
  uint64_t v117 = v6;
  uint64_t v7 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v7 - 8);
  sub_100162EF8();
  uint64_t v102 = v8;
  sub_1001626D4();
  __chkstk_darwin(v9);
  sub_100109770();
  uint64_t v103 = v10;
  sub_1001626D4();
  __chkstk_darwin(v11);
  sub_100109770();
  uint64_t v126 = v12;
  sub_1001626D4();
  __chkstk_darwin(v13);
  sub_100109770();
  uint64_t v122 = v14;
  sub_1001626D4();
  __chkstk_darwin(v15);
  sub_100109770();
  uint64_t v124 = v16;
  sub_1001626D4();
  __chkstk_darwin(v17);
  uint64_t v125 = (void (*)(uint64_t, uint64_t))((char *)&v100 - v18);
  uint64_t v19 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v133 = v20;
  __chkstk_darwin(v21);
  sub_100162EF8();
  char v136 = v22;
  sub_1001626D4();
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v100 - v24;
  __chkstk_darwin(v26);
  sub_100109770();
  uint64_t v112 = v27;
  sub_1001626D4();
  __chkstk_darwin(v28);
  sub_100109770();
  uint64_t v130 = v29;
  sub_1001626D4();
  __chkstk_darwin(v30);
  int v120 = (char *)&v100 - v31;
  uint64_t v116 = type metadata accessor for DateComponents();
  sub_100179C0C();
  uint64_t v118 = v32;
  __chkstk_darwin(v33);
  sub_100162EF8();
  uint64_t v113 = v34;
  sub_1001626D4();
  __chkstk_darwin(v35);
  sub_100109770();
  uint64_t v114 = v36;
  sub_1001626D4();
  __chkstk_darwin(v37);
  uint64_t v39 = (char *)&v100 - v38;
  uint64_t v40 = type metadata accessor for Locale();
  sub_100179C0C();
  uint64_t v42 = v41;
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v100 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = v0;
  sub_1005D233C();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v45, v40);
  uint64_t v46 = _s13CalendarStateVMa();
  uint64_t v135 = v0 + *(int *)(v46 + 24);
  uint64_t v47 = sub_10017DF08(&qword_100E65238);
  uint64_t v48 = *(void *)(v1 + 72);
  uint64_t v49 = v134;
  uint64_t v50 = *(unsigned __int8 *)(v134 + 80);
  uint64_t v51 = (v50 + 32) & ~v50;
  uint64_t v107 = v47;
  uint64_t v106 = v51 + 2 * v48;
  uint64_t v105 = v50 | 7;
  uint64_t v52 = swift_allocObject();
  long long v104 = xmmword_100C25ED0;
  *(_OWORD *)(v52 + 16) = xmmword_100C25ED0;
  uint64_t v108 = v51;
  uint64_t v53 = v52 + v51;
  long long v55 = *(void (**)(uint64_t, void, uint64_t))(v49 + 104);
  uint64_t v54 = v49 + 104;
  v55(v53, enum case for Calendar.Component.year(_:), v132);
  uint64_t v121 = v48;
  LODWORD(v123) = enum case for Calendar.Component.month(_:);
  uint64_t v127 = v55;
  ((void (*)(uint64_t))v55)(v53 + v48);
  sub_1000EEDB0(v52);
  Calendar.dateComponents(_:from:)();
  swift_bridgeObjectRelease();
  uint64_t result = DateComponents.year.getter();
  if (v57)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v131 = v54;
  uint64_t v101 = v39;
  uint64_t result = DateComponents.month.getter();
  if (v58)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v129 = type metadata accessor for Calendar();
  _s7Weather24LocationCompositionStateOwst_0(v117, 1, 1, v129);
  uint64_t v110 = type metadata accessor for TimeZone();
  _s7Weather24LocationCompositionStateOwst_0(v115, 1, 1, v110);
  uint64_t v59 = v114;
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
  uint64_t v60 = (uint64_t)v125;
  Calendar.date(from:)();
  uint64_t v61 = *(void (**)(uint64_t, uint64_t))(v118 + 8);
  v118 += 8;
  uint64_t v111 = v61;
  v61(v59, v116);
  uint64_t result = sub_100163F10(v60);
  if (v62)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v109 = v46;
  uint64_t v63 = *(void (**)(void))(v133 + 32);
  sub_10017D0F4();
  v63();
  char v64 = v127;
  uint64_t v65 = v128;
  uint64_t v66 = v132;
  v127(v128, v123, v132);
  uint64_t v67 = v124;
  Calendar.date(byAdding:value:to:wrappingComponents:)();
  uint64_t v68 = *(void (**)(uint64_t, uint64_t))(v134 + 8);
  v134 += 8;
  uint64_t v125 = v68;
  v68(v65, v66);
  uint64_t result = sub_100163F10(v67);
  if (v62)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_10017D0F4();
  v63();
  uint64_t v69 = swift_allocObject();
  *(_OWORD *)(v69 + 16) = v104;
  uint64_t v70 = v69 + v108;
  v64(v69 + v108, enum case for Calendar.Component.weekOfYear(_:), v66);
  v64(v70 + v121, enum case for Calendar.Component.yearForWeekOfYear(_:), v66);
  sub_1000EEDB0(v69);
  Calendar.dateComponents(_:from:)();
  swift_bridgeObjectRelease();
  uint64_t v71 = (uint64_t)v122;
  Calendar.date(from:)();
  uint64_t result = sub_100163F10(v71);
  if (v62)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v72 = v112;
  sub_10017D0F4();
  v63();
  uint64_t v73 = v133;
  uint64_t v123 = *(void (**)(char *, uint64_t, uint64_t))(v133 + 16);
  uint64_t v124 = v133 + 16;
  v123(v25, v72, v19);
  char v74 = static Date.< infix(_:_:)();
  uint64_t v75 = v129;
  if (v74)
  {
    LODWORD(v121) = enum case for Calendar.Component.day(_:);
    uint64_t v76 = (void (**)(char *, uint64_t))(v73 + 8);
    int v77 = _swiftEmptyArrayStorage;
    uint64_t v122 = v25;
    uint64_t v78 = v128;
    while (1)
    {
      v123(v136, (uint64_t)v25, v19);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v77 = (void *)sub_1007E9738(0, v77[2] + 1, 1, (uint64_t)v77);
      }
      uint64_t v79 = v127;
      unint64_t v81 = v77[2];
      unint64_t v80 = v77[3];
      if (v81 >= v80 >> 1) {
        int v77 = (void *)sub_1007E9738(v80 > 1, v81 + 1, 1, (uint64_t)v77);
      }
      v77[2] = v81 + 1;
      sub_10017D0F4();
      v63();
      uint64_t v82 = v132;
      v79(v78, v121, v132);
      uint64_t v83 = v126;
      uint64_t v25 = v122;
      Calendar.date(byAdding:value:to:wrappingComponents:)();
      v125(v78, v82);
      uint64_t result = sub_100163F10(v83);
      if (v62) {
        break;
      }
      (*v76)(v25, v19);
      sub_10017D0F4();
      v63();
      char v84 = static Date.< infix(_:_:)();
      uint64_t v75 = v129;
      if ((v84 & 1) == 0) {
        goto LABEL_16;
      }
    }
    __break(1u);
    goto LABEL_20;
  }
  int v77 = _swiftEmptyArrayStorage;
LABEL_16:
  uint64_t v137 = v77;
  sub_10017DF08(&qword_100E66F68);
  sub_10059DBC4();
  uint64_t v85 = Collection<>.chunk(by:)();
  uint64_t v86 = v109;
  uint64_t v87 = *(int *)(v109 + 36);
  uint64_t v88 = v119;
  swift_bridgeObjectRelease();
  *(void *)(v88 + v87) = v85;
  uint64_t v89 = (char *)(v88 + *(int *)(v86 + 40));
  uint64_t v90 = v133;
  (*(void (**)(char *, char *, uint64_t))(v133 + 24))(v89, v120, v19);
  _s7Weather24LocationCompositionStateOwst_0(v117, 1, 1, v75);
  uint64_t v91 = v115;
  _s7Weather24LocationCompositionStateOwst_0(v115, 1, 1, v110);
  sub_10017D09C();
  LOBYTE(v101) = 1;
  uint64_t v100 = 0;
  uint64_t v92 = v114;
  sub_100163650();
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
  uint64_t v93 = v103;
  char v136 = v89;
  Calendar.date(byAdding:to:wrappingComponents:)();
  v111(v92, v116);
  uint64_t result = sub_100163F10(v93);
  if (v62) {
    goto LABEL_25;
  }
  uint64_t v94 = v119 + *(int *)(v86 + 28);
  uint64_t v134 = *(void *)(v90 + 40);
  ((void (*)(uint64_t, uint64_t, uint64_t))v134)(v94, v93, v19);
  _s7Weather24LocationCompositionStateOwst_0(v117, 1, 1, v129);
  _s7Weather24LocationCompositionStateOwst_0(v91, 1, 1, v110);
  sub_10017D09C();
  LOBYTE(v122) = 1;
  uint64_t v121 = 0;
  sub_100163650();
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
  uint64_t v95 = v102;
  Calendar.date(byAdding:to:wrappingComponents:)();
  uint64_t v96 = (void (*)(uint64_t))v111;
  v111(v92, v116);
  uint64_t result = sub_100163F10(v95);
  if (!v62)
  {
    uint64_t v97 = *(void (**)(void))(v90 + 8);
    sub_1001628B0();
    v97();
    swift_bridgeObjectRelease();
    sub_1001628B0();
    v97();
    uint64_t v98 = sub_100183C48((uint64_t)&v138);
    v96(v98);
    sub_1001628B0();
    v97();
    sub_1001628B0();
    v97();
    uint64_t v99 = sub_100183C48((uint64_t)&v132);
    v96(v99);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v134)(v119 + *(int *)(v109 + 32), v95, v19);
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t sub_10059DBC4()
{
  unint64_t result = qword_100E81618;
  if (!qword_100E81618)
  {
    sub_10018C6DC(&qword_100E66F68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E81618);
  }
  return result;
}

uint64_t sub_10059DC18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_1001626E0();
  uint64_t v8 = v7 - v6;
  uint64_t v86 = type metadata accessor for NotificationsOptInState();
  __chkstk_darwin(v86);
  sub_1001626E0();
  uint64_t v11 = v10 - v9;
  uint64_t v12 = sub_10017DF08(&qword_100E663F0);
  uint64_t v13 = sub_100109308(v12);
  __chkstk_darwin(v13);
  sub_1001626E0();
  uint64_t v16 = (_WORD *)(v15 - v14);
  uint64_t v17 = sub_10017DF08(&qword_100E66418);
  uint64_t v18 = sub_100109308(v17);
  __chkstk_darwin(v18);
  sub_1001626E0();
  uint64_t v21 = v20 - v19;
  uint64_t v22 = sub_10017DF08(&qword_100E66420);
  uint64_t v23 = sub_100109308(v22);
  __chkstk_darwin(v23);
  sub_1001626E0();
  uint64_t v26 = v25 - v24;
  uint64_t v27 = sub_10017DF08(&qword_100E66428);
  uint64_t v28 = sub_100109308(v27);
  __chkstk_darwin(v28);
  sub_1001626E0();
  uint64_t v31 = v30 - v29;
  uint64_t v32 = sub_10017DF08(&qword_100E66430);
  uint64_t v33 = sub_100109308(v32);
  __chkstk_darwin(v33);
  sub_1001626E0();
  uint64_t v36 = v35 - v34;
  uint64_t v37 = sub_10017DF08(&qword_100E66438);
  uint64_t v38 = sub_100109308(v37);
  __chkstk_darwin(v38);
  sub_1001626E0();
  uint64_t v41 = v40 - v39;
  uint64_t v42 = sub_10017DF08(&qword_100E66440);
  uint64_t v43 = sub_100109308(v42);
  __chkstk_darwin(v43);
  sub_1001626E0();
  uint64_t v46 = v45 - v44;
  switch((char)a3)
  {
    case 1:
      uint64_t v52 = type metadata accessor for AppConfigurationState();
      uint64_t v53 = sub_10017D104(v52);
      uint64_t v54 = sub_10019ED74(v53);
      sub_10017E628(v54);
      sub_10018143C(OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn);
      uint64_t v55 = type metadata accessor for Date();
      _s7Weather24LocationCompositionStateOwst_0(v8, 1, 1, v55);
      sub_1001A0AA8(33686019, v85, 0);
      sub_1000F3400(v8, (uint64_t *)&unk_100E73CA0);
      sub_1001C6D4C(v11);
      uint64_t v56 = sub_10017A580(v31, 0);
      uint64_t v57 = sub_100187DD4(v56);
      _s7Weather24LocationCompositionStateOwst_0(v21, 1, 1, v57);
      *uint64_t v16 = 0;
      goto LABEL_8;
    case 3:
      uint64_t v58 = type metadata accessor for AppConfigurationState();
      uint64_t v59 = sub_10017D104(v58);
      uint64_t v60 = sub_10019ED74(v59);
      sub_10017E628(v60);
      sub_10018143C(OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn);
      uint64_t v61 = type metadata accessor for Date();
      _s7Weather24LocationCompositionStateOwst_0(v8, 1, 1, v61);
      sub_1001A0AA8(16908803, v85, 0);
      sub_1000F3400(v8, (uint64_t *)&unk_100E73CA0);
      sub_1001C6D4C(v11);
      uint64_t v62 = sub_10017A580(v31, 0);
      uint64_t v63 = sub_100187DD4(v62);
      uint64_t v64 = sub_1001D1AA4(v63);
      uint64_t v65 = (uint64_t)v16;
      uint64_t v66 = 1;
      uint64_t v67 = 1;
      goto LABEL_9;
    case 4:
      uint64_t v68 = type metadata accessor for AppConfigurationState();
      uint64_t v69 = sub_10017D104(v68);
      uint64_t v70 = sub_10019ED74(v69);
      _s7Weather24LocationCompositionStateOwst_0(v36, 1, 1, v70);
      uint64_t v71 = sub_10017A580(v31, 1);
      uint64_t v72 = sub_100187DD4(v71);
      sub_1001D1AA4(v72);
      goto LABEL_6;
    case 5:
      uint64_t v77 = type metadata accessor for AppConfigurationState();
      uint64_t v78 = sub_10017D104(v77);
      uint64_t v79 = sub_10019ED74(v78);
      sub_10017E628(v79);
      sub_10018143C(OBJC_IVAR____TtCV7Weather9MainState8_Storage_notificationsOptIn);
      uint64_t v80 = type metadata accessor for Date();
      _s7Weather24LocationCompositionStateOwst_0(v8, 1, 1, v80);
      sub_1001C6768(2u, 0, 2, 2, 2, 2, v8, 2, v31, 3, 2, 1, 2, 2);
      sub_1000F3400(v8, (uint64_t *)&unk_100E73CA0);
      sub_1001C6D4C(v11);
      uint64_t v81 = sub_10017A580(v31, 0);
      uint64_t v82 = sub_100187DD4(v81);
      _s7Weather24LocationCompositionStateOwst_0(v21, 1, 1, v82);
      *uint64_t v16 = 1;
LABEL_8:
      type metadata accessor for ModalViewState(0);
      sub_100183C5C();
      swift_storeEnumTagMultiPayload();
      uint64_t v65 = sub_100163668();
LABEL_9:
      _s7Weather24LocationCompositionStateOwst_0(v65, v66, v67, v64);
      break;
    default:
      uint64_t v47 = type metadata accessor for AppConfigurationState();
      uint64_t v48 = sub_10017D104(v47);
      uint64_t v49 = sub_10019ED74(v48);
      _s7Weather24LocationCompositionStateOwst_0(v36, 1, 1, v49);
      uint64_t v50 = sub_10017A580(v31, 1);
      uint64_t v51 = sub_100187DD4(v50);
      _s7Weather24LocationCompositionStateOwst_0(v21, 1, 1, v51);
      *uint64_t v16 = 0;
      type metadata accessor for ModalViewState(0);
      sub_100183C5C();
LABEL_6:
      swift_storeEnumTagMultiPayload();
      uint64_t v73 = sub_100163668();
      _s7Weather24LocationCompositionStateOwst_0(v73, v74, v75, v76);
      a3 = a2;
      break;
  }
  uint64_t v83 = sub_1001659F0(0, 3, v46, v41, v36, 0, 0, 0, 0, v31, v26, v21, (uint64_t)v16, 0, 0, 0, 0, 0, 0,
          0,
          a3);
  sub_1000F3400((uint64_t)v16, &qword_100E663F0);
  sub_1000F3400(v21, &qword_100E66418);
  sub_1000F3400(v26, &qword_100E66420);
  sub_1000F3400(v31, &qword_100E66428);
  sub_1000F3400(v36, &qword_100E66430);
  sub_1000F3400(v41, &qword_100E66438);
  sub_1000F3400(v46, &qword_100E66440);
  return v83;
}

void *sub_10059E254(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = type metadata accessor for URL();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    uint64_t v7 = sub_10017DF08(&qword_100E66478);
    *((unsigned char *)a1 + *(int *)(v7 + 48)) = *((unsigned char *)a2 + *(int *)(v7 + 48));
  }
  return a1;
}

uint64_t sub_10059E31C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_10059E380(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  uint64_t v5 = sub_10017DF08(&qword_100E66478);
  *(unsigned char *)(a1 + *(int *)(v5 + 48)) = *(unsigned char *)(a2 + *(int *)(v5 + 48));
  return a1;
}

uint64_t sub_10059E3FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  uint64_t v5 = sub_10017DF08(&qword_100E66478);
  *(unsigned char *)(a1 + *(int *)(v5 + 48)) = *(unsigned char *)(a2 + *(int *)(v5 + 48));
  return a1;
}

uint64_t sub_10059E478(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  uint64_t v5 = sub_10017DF08(&qword_100E66478);
  *(unsigned char *)(a1 + *(int *)(v5 + 48)) = *(unsigned char *)(a2 + *(int *)(v5 + 48));
  return a1;
}

uint64_t sub_10059E4F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  uint64_t v5 = sub_10017DF08(&qword_100E66478);
  *(unsigned char *)(a1 + *(int *)(v5 + 48)) = *(unsigned char *)(a2 + *(int *)(v5 + 48));
  return a1;
}

uint64_t sub_10059E570(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E66478);

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_10059E5BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10017DF08(&qword_100E66478);

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a3, v6);
}

uint64_t type metadata accessor for DetailComponentAction()
{
  uint64_t result = qword_100E81728;
  if (!qword_100E81728) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10059E660(uint64_t a1)
{
  uint64_t result = type metadata accessor for URL();
  if (v3 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = v4;
  }
  return result;
}

uint64_t sub_10059E71C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10017DF08(&qword_100E81738);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (uint64_t)&v11[*(int *)(v9 + 56)];
  sub_10059E8C8(a1, (uint64_t)v11);
  sub_10059E8C8(a2, v12);
  uint64_t v13 = *(int *)(sub_10017DF08(&qword_100E66478) + 48);
  LODWORD(a1) = v11[v13];
  int v14 = *(unsigned __int8 *)(v12 + v13);
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
  LODWORD(a2) = static URL.== infix(_:_:)();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v15(v12, v4);
  v15((uint64_t)v7, v4);
  return a2 & ~(a1 ^ v14) & 1;
}

uint64_t sub_10059E8C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DetailComponentAction();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10059E92C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for AutomationInfoProperty();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *(void *)a1 = *a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    uint64_t v8 = a2[2];
    char v9 = *((unsigned char *)a2 + 24);
    swift_bridgeObjectRetain();
    sub_100195B7C(v8, v9);
    *(void *)(a1 + 16) = v8;
    *(unsigned char *)(a1 + 24) = v9;
    uint64_t v10 = *(int *)(v6 + 24);
    uint64_t v11 = (uint64_t *)(a1 + v10);
    uint64_t v12 = (uint64_t *)((char *)a2 + v10);
    type metadata accessor for AutomationInfo(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v17 = *v12;
      uint64_t v18 = v12[1];
      unsigned __int8 v19 = *((unsigned char *)v12 + 16);
      sub_10018F6EC(v17, v18, v19);
      uint64_t *v11 = v17;
      v11[1] = v18;
      *((unsigned char *)v11 + 16) = v19;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v14 = type metadata accessor for AutomationCellInfo(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 7u:
        case 0xAu:
          uint64_t v15 = v12[1];
          uint64_t *v11 = *v12;
          v11[1] = v15;
          swift_bridgeObjectRetain();
          goto LABEL_17;
        case 6u:
          uint64_t v23 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(v11, v12, v23);
          goto LABEL_17;
        case 8u:
          uint64_t v24 = v12[1];
          uint64_t *v11 = *v12;
          v11[1] = v24;
          uint64_t v25 = v12[3];
          v11[2] = v12[2];
          v11[3] = v25;
          uint64_t v26 = v12[4];
          uint64_t v27 = v12[5];
          _OWORD v11[4] = v26;
          uint64_t v11[5] = v27;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_17;
        case 9u:
        case 0xBu:
          uint64_t v28 = v12[1];
          uint64_t *v11 = *v12;
          v11[1] = v28;
          uint64_t v29 = v12[2];
          uint64_t v30 = v12[3];
          v11[2] = v29;
          v11[3] = v30;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_17:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v11, v12, *(void *)(*(void *)(v14 - 8) + 64));
          break;
      }
    }
    else
    {
      uint64_t v20 = type metadata accessor for AutomationViewInfo(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 3u:
          uint64_t v22 = v12[1];
          uint64_t *v11 = *v12;
          v11[1] = v22;
          swift_bridgeObjectRetain();
          goto LABEL_12;
        case 2u:
          uint64_t v21 = type metadata accessor for WeatherMapOverlayKind();
          (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(v11, v12, v21);
LABEL_12:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v11, v12, *(void *)(*(void *)(v20 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10059EE9C(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(int *)(type metadata accessor for AutomationInfoProperty() + 24);
  int v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = type metadata accessor for AutomationInfo(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v9 = type metadata accessor for AutomationCellInfo(0);
    if (swift_getEnumCaseMultiPayload() == 6)
    {
LABEL_6:
      uint64_t v10 = type metadata accessor for WeatherMapOverlayKind();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v5, v6, v10);
      swift_storeEnumTagMultiPayload();
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
LABEL_8:
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
    goto LABEL_9;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v9 = type metadata accessor for AutomationViewInfo(0);
    if (swift_getEnumCaseMultiPayload() == 2) {
      goto LABEL_6;
    }
    goto LABEL_8;
  }
  memcpy(v5, v6, *(void *)(*(void *)(v7 - 8) + 64));
  return a1;
}

uint64_t sub_10059F088(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  char v5 = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)(a1 + 16);
  char v7 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v5;
  sub_10018F6D8(v6, v7);
  uint64_t v8 = type metadata accessor for AutomationInfoProperty();
  if (a1 != a2)
  {
    uint64_t v9 = *(int *)(v8 + 24);
    uint64_t v10 = (void *)(a1 + v9);
    uint64_t v11 = (const void *)(a2 + v9);
    sub_10014CDC4(a1 + v9, type metadata accessor for AutomationInfo);
    uint64_t v12 = type metadata accessor for AutomationInfo(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v14 = type metadata accessor for AutomationCellInfo(0);
      if (swift_getEnumCaseMultiPayload() == 6)
      {
LABEL_7:
        uint64_t v15 = type metadata accessor for WeatherMapOverlayKind();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32))(v10, v11, v15);
        swift_storeEnumTagMultiPayload();
LABEL_10:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_9:
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      goto LABEL_10;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v14 = type metadata accessor for AutomationViewInfo(0);
      if (swift_getEnumCaseMultiPayload() == 2) {
        goto LABEL_7;
      }
      goto LABEL_9;
    }
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  return a1;
}

uint64_t sub_10059F2AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AutomationInfoProperty();

  return _s7Weather24LocationCompositionStateOwet_0(a1, a2, v4);
}

uint64_t sub_10059F2F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10059F308);
}

uint64_t sub_10059F308(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AutomationInfoProperty();

  return _s7Weather24LocationCompositionStateOwst_0(a1, a2, a2, v4);
}

uint64_t sub_10059F354(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AutomationInfo(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  char v7 = (char *)&v13 - v6;
  uint64_t v8 = type metadata accessor for AutomationInfoViewModifier();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10059F544(a1, (uint64_t)v7);
  sub_10059F5A8((uint64_t)v7, (uint64_t)v4);
  *(void *)uint64_t v10 = 0;
  *((void *)v10 + 1) = 0xE000000000000000;
  *((void *)v10 + 2) = swift_getKeyPath();
  v10[24] = 0;
  uint64_t v11 = type metadata accessor for AutomationInfoProperty();
  sub_10059F5A8((uint64_t)v4, (uint64_t)&v10[*(int *)(v11 + 24)]);
  View.modifier<A>(_:)();
  return sub_10014CDC4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for AutomationInfoViewModifier);
}

uint64_t sub_10059F4D4()
{
  return View.accessibilityIdentifier(_:)();
}

uint64_t sub_10059F544(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AutomationInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10059F5A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AutomationInfo(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10059F614()
{
  swift_retain();
  SettingProperty.wrappedValue.getter();

  return swift_release();
}

uint64_t sub_10059F65C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  swift_retain();
  SettingProperty.wrappedValue.setter();
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t sub_10059F75C(uint64_t a1)
{
  if (qword_100E62778 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_1002102B0(v2, (uint64_t)qword_100F51D80);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "We received a request to show the app store review prompt", v5, 2u);
    swift_slowDealloc();
  }

  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = a1;
  swift_retain();
  asyncMain(block:)();
  swift_release();

  return swift_release();
}

void sub_10059F8C4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for Date();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (sub_10059FBF4(a2))
    {
      sub_1005A0E10();
      uint64_t v6 = static UIWindowScene.activeScene.getter();
      if (v6)
      {
        uint64_t v7 = (void *)v6;
        if (qword_100E62778 != -1) {
          swift_once();
        }
        uint64_t v8 = type metadata accessor for Logger();
        sub_1002102B0(v8, (uint64_t)qword_100F51D80);
        uint64_t v9 = Logger.logObject.getter();
        os_log_type_t v10 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v9, v10))
        {
          uint64_t v11 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v11 = 0;
          _os_log_impl((void *)&_mh_execute_header, v9, v10, "Requesting review prompt", v11, 2u);
          swift_slowDealloc();
        }

        [self requestReviewInScene:v7];
        static Date.now.getter();
        sub_10059F65C((uint64_t)v5);
      }
      else
      {
        if (qword_100E62778 != -1) {
          swift_once();
        }
        uint64_t v16 = type metadata accessor for Logger();
        sub_1002102B0(v16, (uint64_t)qword_100F51D80);
        uint64_t v17 = Logger.logObject.getter();
        os_log_type_t v18 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v17, v18))
        {
          unsigned __int8 v19 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unsigned __int8 v19 = 0;
          _os_log_impl((void *)&_mh_execute_header, v17, v18, "No active window scene! Skipping app store review prompt", v19, 2u);
          swift_slowDealloc();
        }
      }
    }
    swift_release();
  }
  else
  {
    if (qword_100E62778 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_1002102B0(v12, (uint64_t)qword_100F51D80);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "We were deallocated! Skipping app store review prompt", v15, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_10059FBF4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for AppStoreReviewConfiguration();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AppConfiguration();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!sub_1005A00F4())
  {
    uint64_t v36 = a1;
    uint64_t v37 = v9;
    if (qword_100E62778 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_1002102B0(v13, (uint64_t)qword_100F51D80);
    os_log_type_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Checking if the review prompt feature is enabled", v16, 2u);
      swift_slowDealloc();
    }

    sub_1001B1E64(v2 + 2, v2[5]);
    dispatch thunk of AppConfigurationManagerType.appConfiguration.getter();
    AppConfiguration.appStoreReview.getter();
    AppStoreReviewConfiguration.appReviewEnabled.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    type metadata accessor for SettingReader();
    static SettingReader.shared.getter();
    if (qword_100E629C8 != -1) {
      swift_once();
    }
    char v17 = SettingReader.isEnabled(_:with:)();
    swift_release();
    if (v17)
    {
      sub_1001B1E64(v2 + 7, v2[10]);
      BOOL v18 = sub_100349EA8();
      unsigned __int8 v19 = Logger.logObject.getter();
      os_log_type_t v20 = static os_log_type_t.default.getter();
      BOOL v21 = os_log_type_enabled(v19, v20);
      if (v18)
      {
        if (v21)
        {
          uint64_t v22 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v22 = 0;
          _os_log_impl((void *)&_mh_execute_header, v19, v20, "The review prompt featured is enabled and this user is in the chosen random sample", v22, 2u);
          swift_slowDealloc();
        }

        uint64_t v23 = v36;
        uint64_t v24 = sub_1005A05C8((uint64_t)v11, v36);
        unsigned __int8 v19 = Logger.logObject.getter();
        os_log_type_t v25 = static os_log_type_t.default.getter();
        BOOL v26 = os_log_type_enabled(v19, v25);
        if (v24 >= v23)
        {
          uint64_t v27 = v37;
          if (!v26)
          {
            uint64_t v12 = 0;
            goto LABEL_23;
          }
          uint64_t v35 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v35 = 0;
          _os_log_impl((void *)&_mh_execute_header, v19, v25, "We are not past the location count threshold. Showing the review prompt is disallowed", v35, 2u);
          uint64_t v12 = 0;
        }
        else
        {
          uint64_t v27 = v37;
          if (!v26)
          {
            uint64_t v12 = 1;
            goto LABEL_23;
          }
          uint64_t v28 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v28 = 0;
          _os_log_impl((void *)&_mh_execute_header, v19, v25, "We are past the location count threshold. Showing the review prompt is allowed", v28, 2u);
          uint64_t v12 = 1;
        }
        goto LABEL_21;
      }
      if (v21)
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v30 = 0;
        os_log_type_t v33 = v20;
        uint64_t v31 = "The review prompt featured is enabled but this user is not in the chosen random sample";
        uint64_t v32 = v19;
        goto LABEL_20;
      }
    }
    else
    {
      unsigned __int8 v19 = Logger.logObject.getter();
      os_log_type_t v29 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v19, v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v30 = 0;
        uint64_t v31 = "The review prompt featured is disabled";
        uint64_t v32 = v19;
        os_log_type_t v33 = v29;
LABEL_20:
        _os_log_impl((void *)&_mh_execute_header, v32, v33, v31, v30, 2u);
        uint64_t v12 = 0;
        uint64_t v27 = v37;
LABEL_21:
        swift_slowDealloc();
LABEL_23:

        (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v8);
        return v12;
      }
    }
    uint64_t v12 = 0;
    uint64_t v27 = v37;
    goto LABEL_23;
  }
  return 0;
}

BOOL sub_1005A00F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v30 - v7;
  if (qword_100E62778 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_1002102B0(v9, (uint64_t)qword_100F51D80);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Checking if the prompt was shown recently ...", v12, 2u);
    swift_slowDealloc();
  }

  sub_10059F614();
  static Date.distantPast.getter();
  sub_1005A0E50((unint64_t *)&qword_100E63980, 255, (void (*)(uint64_t))&type metadata accessor for Date);
  char v13 = dispatch thunk of static Equatable.== infix(_:_:)();
  os_log_type_t v14 = *(void (**)(char *, uint64_t))(v3 + 8);
  v14(v5, v2);
  v14(v8, v2);
  if (v13)
  {
    os_log_type_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      char v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "promptLastShownDate == .distantPast .. concluding that the prompt was NOT shown recently", v17, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
  else
  {
    double v19 = sub_1005A095C(v1);
    static Date.now.getter();
    sub_10059F614();
    Date.timeIntervalSince(_:)();
    double v21 = v20;
    v14(v5, v2);
    v14(v8, v2);
    BOOL v18 = v21 < v19;
    swift_retain_n();
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    int v24 = v23;
    if (os_log_type_enabled(v22, v23))
    {
      int v32 = v24;
      uint64_t v25 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v34 = v31;
      *(_DWORD *)uint64_t v25 = 67109378;
      LODWORD(v33) = v21 < v19;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v25 + 8) = 2080;
      v30[1] = v25 + 10;
      sub_10059F614();
      sub_1005A0E50(&qword_100E656D8, 255, (void (*)(uint64_t))&type metadata accessor for Date);
      uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter();
      unint64_t v28 = v27;
      v14(v8, v2);
      uint64_t v33 = sub_10016414C(v26, v28, &v34);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v22, (os_log_type_t)v32, "Just finished checking if the prompt was shown recently. promptWasRecentlyShown=%{BOOL}d, promptLastShownDate=%s", (uint8_t *)v25, 0x12u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
  }
  return v18;
}

uint64_t sub_1005A05C8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for AppStoreReviewConfiguration();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  AppConfiguration.appStoreReview.getter();
  uint64_t v7 = AppStoreReviewConfiguration.savedLocationsCountThreshold.getter();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  if (qword_100E62778 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_1002102B0(v8, (uint64_t)qword_100F51D80);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 134218240;
    uint64_t v18 = a2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v11 + 12) = 2048;
    uint64_t v18 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, " ... now checking if we pass our location count threshold. locationCount=%ld, (app config)locationCountThreshold=%ld", (uint8_t *)v11, 0x16u);
    swift_slowDealloc();
  }

  if (qword_100E629E0 != -1) {
    swift_once();
  }
  sub_1005A0E50(&qword_100E818A8, v12, (void (*)(uint64_t))type metadata accessor for AppStoreReviewManager);
  Configurable.setting<A>(_:)();
  if (v18 == 1)
  {
    if (qword_100E629E8 != -1) {
      swift_once();
    }
    Configurable.setting<A>(_:)();
    uint64_t v7 = v18;
    char v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v13, v14))
    {
      os_log_type_t v15 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v15 = 134217984;
      uint64_t v18 = v7;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "We have a local setting override. locationCountThresholdOverrideEnabled=true. (local override)locationsCountThreshold=%ld", v15, 0xCu);
      swift_slowDealloc();
    }
  }
  return v7;
}

double sub_1005A095C(void *a1)
{
  v26[1] = *a1;
  uint64_t v2 = type metadata accessor for AppStoreReviewConfiguration();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for AppConfiguration();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(a1 + 2, a1[5]);
  dispatch thunk of AppConfigurationManagerType.appConfiguration.getter();
  AppConfiguration.appStoreReview.getter();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  AppStoreReviewConfiguration.timeIntervalBetweenPrompts.getter();
  double v11 = v10;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (qword_100E629D8 != -1) {
    swift_once();
  }
  sub_1005A0E50(&qword_100E818A8, v12, (void (*)(uint64_t))type metadata accessor for AppStoreReviewManager);
  Configurable.setting<A>(_:)();
  if (v27)
  {
    if (qword_100E62778 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_1002102B0(v13, (uint64_t)qword_100F51D80);
    os_log_type_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.default.getter();
    double v11 = 0.0;
    if (os_log_type_enabled(v14, v15))
    {
      os_log_type_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v16 = 0;
      uint64_t v17 = "We have a local setting override. ignoreRepromptTimeInterval=true ... returning zero for timeIntervalBetweenPrompts";
      uint64_t v18 = v14;
      os_log_type_t v19 = v15;
      double v20 = v16;
      uint32_t v21 = 2;
LABEL_12:
      _os_log_impl((void *)&_mh_execute_header, v18, v19, v17, v20, v21);
      swift_slowDealloc();
    }
  }
  else
  {
    if (qword_100E62778 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    sub_1002102B0(v22, (uint64_t)qword_100F51D80);
    os_log_type_t v14 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v14, v23))
    {
      int v24 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)int v24 = 134217984;
      *(double *)&v26[2] = v11;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v17 = "Returning the app config timeIntervalBetweenPrompts. value=%f";
      uint64_t v18 = v14;
      os_log_type_t v19 = v23;
      double v20 = v24;
      uint32_t v21 = 12;
      goto LABEL_12;
    }
  }

  return v11;
}

uint64_t sub_1005A0D34()
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 16);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + 56);
  swift_release();
  return v0;
}

uint64_t sub_1005A0D64()
{
  sub_1005A0D34();

  return swift_deallocClassInstance();
}

uint64_t sub_1005A0D98()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1005A0DD0()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1005A0E08()
{
  sub_10059F8C4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_1005A0E10()
{
  unint64_t result = qword_100E818A0;
  if (!qword_100E818A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100E818A0);
  }
  return result;
}

uint64_t sub_1005A0E50(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005A0E98()
{
  unint64_t v0 = _findStringSwitchCaseWithCache(cases:string:cache:)();
  swift_bridgeObjectRelease();
  if (v0 >= 0x1C) {
    return 28;
  }
  else {
    return v0;
  }
}

unint64_t sub_1005A0EEC(char a1)
{
  unint64_t result = 0x776569567473694CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x7463616544707041;
      break;
    case 4:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 5:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 6:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 7:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 8:
      unint64_t result = 0xD000000000000012;
      break;
    case 9:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 10:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 11:
    case 13:
    case 24:
      unint64_t result = 0xD000000000000016;
      break;
    case 12:
      unint64_t result = 0xD000000000000015;
      break;
    case 14:
      unint64_t result = 0xD000000000000017;
      break;
    case 15:
      unint64_t result = 0xD000000000000023;
      break;
    case 16:
      unint64_t result = 0xD000000000000025;
      break;
    case 17:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 18:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 19:
      unint64_t result = 0xD000000000000029;
      break;
    case 20:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case 21:
      unint64_t result = 0xD000000000000021;
      break;
    case 22:
      unint64_t result = 0xD000000000000022;
      break;
    case 23:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 25:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 26:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 27:
      unint64_t result = 0xD00000000000002CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PerformanceTest.Name(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2)
  {
    int v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xE5)
  {
    if (a2 + 27 >= 0xFFFF00) {
      int v2 = 4;
    }
    else {
      int v2 = 2;
    }
    if ((a2 + 27) >> 8 < 0xFF) {
      int v3 = 1;
    }
    else {
      int v3 = v2;
    }
    if (v3 == 4)
    {
      int v4 = *(_DWORD *)(a1 + 1);
      if (!v4) {
        goto LABEL_17;
      }
    }
    else if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
    }
    else
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
    }
    int v5 = (*a1 | (v4 << 8)) - 28;
    return (v5 + 1);
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1C;
  int v5 = v6 - 28;
  if (!v7) {
    int v5 = -1;
  }
  return (v5 + 1);
}

unsigned char *storeEnumTagSinglePayload for PerformanceTest.Name(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 27 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 27) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE4)
  {
    unsigned int v6 = ((a2 - 229) >> 8) + 1;
    *unint64_t result = a2 + 27;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005A1380);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 27;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PerformanceTest.Name()
{
  return &type metadata for PerformanceTest.Name;
}

uint64_t sub_1005A13B8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10088B228(*a1, *a2);
}

Swift::Int sub_1005A13C4()
{
  return sub_10065277C(*v0);
}

uint64_t sub_1005A13CC(uint64_t a1)
{
  return sub_1002C2E38(a1, *v1);
}

Swift::Int sub_1005A13D4(uint64_t a1)
{
  return sub_1002C441C(a1, *v1);
}

uint64_t sub_1005A13DC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1005A0E98();
  *a1 = result;
  return result;
}

unint64_t sub_1005A140C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1005A0EEC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1005A143C()
{
  unint64_t result = qword_100E818B0;
  if (!qword_100E818B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E818B0);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for DebugState(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for DebugState(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DebugState(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PerformanceTest()
{
  return &type metadata for PerformanceTest;
}

void sub_1005A1554(char *a1)
{
  uint64_t v2 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for ActivityAction();
  __chkstk_darwin(v5);
  BOOL v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1;
  char v9 = sub_10040B5F0();
  if (v9 == 2)
  {
    sub_1005A1B4C();
    swift_allocError();
    uint64_t v10 = sub_100187E0C();
    *a1 = 0;
LABEL_17:
    *((void *)v8 + 1) = v10;
    v8[40] = 0;
    swift_willThrow();
    if (qword_100E62848 != -1) {
      swift_once();
    }
    uint64_t v34 = type metadata accessor for Logger();
    sub_1002102B0(v34, (uint64_t)qword_100F51FE0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v41 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v41, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      uint64_t v37 = swift_slowAlloc();
      uint64_t v42 = (uint64_t)v4;
      v43[0] = *(double *)&v37;
      *(_DWORD *)uint64_t v36 = 136446210;
      swift_errorRetain();
      sub_10017DF08(&qword_100E77F30);
      uint64_t v38 = String.init<A>(describing:)();
      uint64_t v42 = sub_10016414C(v38, v39, (uint64_t *)v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v41, v35, "WeatherUserActivityHandler failed to handle user activity; error=%{public}s",
        v36,
        0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
      uint64_t v40 = v41;
    }
    return;
  }
  if ((v9 & 1) == 0
    || (uint64_t v11 = sub_10040B6B8(), v12)
    && (uint64_t v13 = v11,
        uint64_t v14 = v12,
        type metadata accessor for WeatherLocation(),
        LOBYTE(v13) = sub_1007BFC08(v13, v14),
        swift_bridgeObjectRelease(),
        (v13 & 1) != 0))
  {
    sub_100187E28();
    swift_storeEnumTagMultiPayload();
    char v15 = static LocationSearchEntityFromStringResolver.__derived_struct_equals(_:_:)();
    char v16 = variable initialization expression of SessionEventsAndDataCoordinator.loadedViaReferral();
    sub_100389228((uint64_t)v7, v15 & 1, v16 & 1);
    sub_1002AE148((uint64_t)v7);
    return;
  }
  uint64_t v8 = a1;
  *(double *)&uint64_t v17 = COERCE_DOUBLE(sub_10040B7D0());
  if (v18)
  {
    sub_1005A1B4C();
    swift_allocError();
    uint64_t v10 = sub_100187E0C();
    char v33 = 3;
LABEL_16:
    *uint64_t v8 = v33;
    goto LABEL_17;
  }
  double v19 = *(double *)&v17;
  uint64_t v8 = a1;
  *(double *)&uint64_t v20 = COERCE_DOUBLE(sub_10040B7E0());
  if (v21)
  {
    sub_1005A1B4C();
    swift_allocError();
    uint64_t v10 = sub_100187E0C();
    char v33 = 4;
    goto LABEL_16;
  }
  uint64_t v22 = v20;
  double v23 = *(double *)&v20;
  uint64_t v24 = sub_10040B6D4();
  unint64_t v26 = v25;
  if (qword_100E62848 != -1) {
    swift_once();
  }
  uint64_t v27 = type metadata accessor for Logger();
  sub_1002102B0(v27, (uint64_t)qword_100F51FE0);
  unint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 141558787;
    *(void *)&v43[0] = 1752392040;
    sub_10017D13C();
    *(_WORD *)(v30 + 12) = 2049;
    v43[0] = v19;
    sub_10017D13C();
    *(_WORD *)(v30 + 22) = 2160;
    *(void *)&v43[0] = 1752392040;
    sub_10017D13C();
    *(_WORD *)(v30 + 32) = 2049;
    v43[0] = *(double *)&v22;
    sub_10017D13C();
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "WeatherUserActivityHandler got user activity with latitude and longitude; latitude=%{private,mask.hash}f, longitud"
      "e=%{private,mask.hash}f",
      (uint8_t *)v30,
      0x2Au);
    swift_slowDealloc();
  }

  uint64_t v31 = type metadata accessor for Date();
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v4, 1, 1, v31);
  sub_1002AB8F0();
  uint64_t v32 = Dictionary.init(dictionaryLiteral:)();
  sub_1002AA938(v24, v26, 17, (uint64_t)v4, v32, v19, v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1001E7540((uint64_t)v4);
}

uint64_t type metadata accessor for WeatherUserActivityHandler()
{
  return self;
}

unint64_t sub_1005A1B4C()
{
  unint64_t result = qword_100E81960;
  if (!qword_100E81960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E81960);
  }
  return result;
}

void destroy for WeatherUserActivityHandler.Error(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 >= 3) {
    unsigned int v1 = *(_DWORD *)a1 + 3;
  }
  if (v1 == 2)
  {
    uint64_t v2 = *(void **)a1;
  }
  else if (v1 == 1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 8);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t initializeWithCopy for WeatherUserActivityHandler.Error(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 3) {
    unsigned int v3 = *(_DWORD *)a2 + 3;
  }
  if (v3 == 2)
  {
    uint64_t v5 = *(void **)a2;
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 40) = 2;
    id v6 = v5;
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    if (v3 == 1)
    {
      uint64_t v4 = *(void *)(a2 + 32);
      *(void *)(a1 + 32) = v4;
      (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1 + 8, a2 + 8);
      *(unsigned char *)(a1 + 40) = 1;
    }
    else
    {
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(unsigned char *)(a1 + 40) = 0;
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t assignWithCopy for WeatherUserActivityHandler.Error(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 3) {
      unsigned int v4 = *(_DWORD *)a1 + 3;
    }
    if (v4 == 2)
    {
    }
    else if (v4 == 1)
    {
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 8);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 3) {
      unsigned int v5 = *(_DWORD *)a2 + 3;
    }
    if (v5 == 2)
    {
      BOOL v7 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 40) = 2;
      id v8 = v7;
    }
    else
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      if (v5 == 1)
      {
        uint64_t v6 = *(void *)(a2 + 32);
        *(void *)(a1 + 32) = v6;
        (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1 + 8, a2 + 8);
        *(unsigned char *)(a1 + 40) = 1;
      }
      else
      {
        *(void *)(a1 + 8) = *(void *)(a2 + 8);
        *(unsigned char *)(a1 + 40) = 0;
        swift_bridgeObjectRetain();
      }
    }
  }
  return a1;
}

uint64_t assignWithTake for WeatherUserActivityHandler.Error(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 3) {
      unsigned int v4 = *(_DWORD *)a1 + 3;
    }
    if (v4 == 2)
    {
    }
    else if (v4 == 1)
    {
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1 + 8);
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 3) {
      unsigned int v5 = *(_DWORD *)a2 + 3;
    }
    if (v5 == 2)
    {
      *(void *)a1 = *(void *)a2;
      char v7 = 2;
    }
    else if (v5 == 1)
    {
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      char v7 = 1;
    }
    else
    {
      char v7 = 0;
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    *(unsigned char *)(a1 + 40) = v7;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for WeatherUserActivityHandler.Error(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 3) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for WeatherUserActivityHandler.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1005A1F44(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 3) {
    return (*(_DWORD *)a1 + 3);
  }
  return result;
}

uint64_t sub_1005A1F60(uint64_t result, unsigned int a2)
{
  if (a2 > 2)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for WeatherUserActivityHandler.Error()
{
  return &type metadata for WeatherUserActivityHandler.Error;
}

uint64_t sub_1005A1F98(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v8 = v7;
  __chkstk_darwin(v9);
  sub_10016279C();
  uint64_t v10 = sub_10017DF08(&qword_100E64D60);
  sub_100162E4C();
  __chkstk_darwin(v11);
  sub_10012B938();
  uint64_t v12 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v13 = sub_100109308(v12);
  uint64_t v14 = __chkstk_darwin(v13);
  char v16 = &v30[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = __chkstk_darwin(v14);
  double v19 = &v30[-v18];
  __chkstk_darwin(v17);
  char v21 = &v30[-v20];
  if ((static Date.== infix(_:_:)() & 1) == 0) {
    goto LABEL_14;
  }
  uint64_t v32 = v8;
  uint64_t v22 = type metadata accessor for DayPickerInput();
  sub_100BDD5F4();
  if ((v23 & 1) == 0) {
    goto LABEL_14;
  }
  sub_1001C7278(a1 + *(int *)(v22 + 24), (uint64_t)v21);
  sub_1001C7278(a2 + *(int *)(v22 + 24), (uint64_t)v19);
  uint64_t v24 = v2 + *(int *)(v10 + 48);
  sub_1001C7278((uint64_t)v21, v2);
  sub_1001C7278((uint64_t)v19, v24);
  sub_100162F8C(v2);
  if (!v25)
  {
    sub_1001C7278(v2, (uint64_t)v16);
    sub_100162F8C(v24);
    if (!v25)
    {
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v32 + 32))(v3, v24, v6);
      sub_100127D88((unint64_t *)&qword_100E63980, (void (*)(uint64_t))&type metadata accessor for Date);
      int v31 = dispatch thunk of static Equatable.== infix(_:_:)();
      unint64_t v26 = v3;
      uint64_t v27 = *(void (**)(unsigned char *, uint64_t))(v32 + 8);
      v27(v26, v6);
      sub_1001781AC((uint64_t)v19, (uint64_t *)&unk_100E73CA0);
      sub_1001781AC((uint64_t)v21, (uint64_t *)&unk_100E73CA0);
      v27(v16, v6);
      sub_1001781AC(v2, (uint64_t *)&unk_100E73CA0);
      if (v31) {
        goto LABEL_13;
      }
LABEL_14:
      char v28 = 0;
      return v28 & 1;
    }
    sub_1001781AC((uint64_t)v19, (uint64_t *)&unk_100E73CA0);
    sub_1001781AC((uint64_t)v21, (uint64_t *)&unk_100E73CA0);
    (*(void (**)(unsigned char *, uint64_t))(v32 + 8))(v16, v6);
LABEL_11:
    sub_1001781AC(v2, &qword_100E64D60);
    goto LABEL_14;
  }
  sub_1001781AC((uint64_t)v19, (uint64_t *)&unk_100E73CA0);
  sub_1001781AC((uint64_t)v21, (uint64_t *)&unk_100E73CA0);
  sub_100162F8C(v24);
  if (!v25) {
    goto LABEL_11;
  }
  sub_1001781AC(v2, (uint64_t *)&unk_100E73CA0);
LABEL_13:
  char v28 = static TimeZone.== infix(_:_:)();
  return v28 & 1;
}

uint64_t sub_1005A2300@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v146 = a1;
  uint64_t v148 = a2;
  uint64_t v4 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
  uint64_t v5 = sub_100109308(v4);
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v136 = v6;
  sub_100129064();
  type metadata accessor for DayWeather();
  sub_100179C0C();
  uint64_t v130 = v8;
  uint64_t v131 = v7;
  __chkstk_darwin(v7);
  sub_100109314();
  uint64_t v129 = v9;
  sub_100129064();
  uint64_t v10 = type metadata accessor for Date();
  sub_100179C0C();
  uint64_t v134 = v11;
  __chkstk_darwin(v12);
  sub_100162EF8();
  uint64_t v133 = v13;
  sub_1001626D4();
  __chkstk_darwin(v14);
  uint64_t v128 = (char *)&v126 - v15;
  sub_100129064();
  type metadata accessor for TimeZone();
  sub_100179C0C();
  uint64_t v140 = v17;
  uint64_t v141 = v16;
  __chkstk_darwin(v16);
  sub_100109314();
  uint64_t v142 = v18;
  uint64_t v19 = sub_100129064();
  uint64_t v20 = type metadata accessor for WeatherData(v19);
  uint64_t v21 = sub_100109308(v20);
  __chkstk_darwin(v21);
  sub_100109314();
  uint64_t v143 = v22;
  uint64_t v23 = sub_10017DF08(&qword_100E63770);
  uint64_t v24 = sub_100109308(v23);
  __chkstk_darwin(v24);
  sub_10016279C();
  uint64_t v25 = type metadata accessor for LocationWeatherDataState(0);
  sub_100162E4C();
  uint64_t v27 = __chkstk_darwin(v26);
  os_log_type_t v29 = (char *)&v126 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v145 = (uint64_t)&v126 - v30;
  uint64_t v31 = sub_10017DF08(&qword_100E71418);
  uint64_t v32 = sub_100109308(v31);
  __chkstk_darwin(v32);
  sub_10012B938();
  uint64_t v33 = type metadata accessor for ConditionDetailViewState();
  sub_100162E4C();
  __chkstk_darwin(v34);
  sub_100162EF8();
  uint64_t v144 = v35;
  sub_1001626D4();
  uint64_t v37 = __chkstk_darwin(v36);
  unint64_t v39 = (char *)&v126 - v38;
  __chkstk_darwin(v37);
  sub_100109770();
  uint64_t v138 = (char *)v40;
  sub_1001626D4();
  __chkstk_darwin(v41);
  sub_100109770();
  uint64_t v137 = v42;
  sub_1001626D4();
  __chkstk_darwin(v43);
  sub_100109770();
  uint64_t v132 = v44;
  sub_1001626D4();
  __chkstk_darwin(v45);
  sub_100109770();
  uint64_t v127 = v46;
  sub_1001626D4();
  __chkstk_darwin(v47);
  uint64_t v49 = (char *)&v126 - v48;
  uint64_t v50 = type metadata accessor for DayPickerInput();
  sub_100162E4C();
  __chkstk_darwin(v51);
  uint64_t v53 = (char *)&v126 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  Date.init()();
  uint64_t v54 = (uint64_t)&v53[*(int *)(v50 + 24)];
  uint64_t v135 = v10;
  uint64_t v55 = v10;
  uint64_t v56 = v146;
  _s7Weather24LocationCompositionStateOwst_0(v54, 1, 1, v55);
  static TimeZone.current.getter();
  uint64_t v147 = v50;
  *(void *)&v53[*(int *)(v50 + 20)] = _swiftEmptyArrayStorage;
  sub_10039FAD8(v2);
  if (_s7Weather24LocationCompositionStateOwet_0(v2, 1, v33) == 1)
  {
    sub_1001781AC(v2, &qword_100E71418);
    if (qword_100E627E8 != -1) {
      swift_once();
    }
    uint64_t v57 = type metadata accessor for Logger();
    sub_1002102B0(v57, (uint64_t)qword_100F51ED0);
    uint64_t v58 = Logger.logObject.getter();
    os_log_type_t v59 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v60 = 0;
      _os_log_impl((void *)&_mh_execute_header, v58, v59, "Failed to create DayPickerInput due to missing conditionDetailViewState.", v60, 2u);
      sub_100162EE0();
    }

    uint64_t v61 = (uint64_t)v53;
LABEL_7:
    uint64_t v62 = v148;
LABEL_21:
    sub_1005A4218(v61, v62, (void (*)(void))type metadata accessor for DayPickerInput);
    uint64_t v102 = v147;
    return _s7Weather24LocationCompositionStateOwst_0(v62, 0, 1, v102);
  }
  sub_1005A4218(v2, (uint64_t)v49, (void (*)(void))type metadata accessor for ConditionDetailViewState);
  uint64_t v63 = *(void *)(v56 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
  uint64_t v146 = v33;
  uint64_t v64 = &v49[*(int *)(v33 + 20)];
  swift_bridgeObjectRetain();
  uint64_t v65 = Location.id.getter();
  sub_1001BBE9C(v65, v66, v63);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v67 = (uint64_t)v49;
  if (_s7Weather24LocationCompositionStateOwet_0(v3, 1, v25) == 1)
  {
    sub_1001781AC(v3, &qword_100E63770);
    if (qword_100E627E8 != -1) {
      swift_once();
    }
    uint64_t v68 = type metadata accessor for Logger();
    sub_1002102B0(v68, (uint64_t)qword_100F51ED0);
    sub_1005A41B8((uint64_t)v49, (uint64_t)v39, (void (*)(void))type metadata accessor for ConditionDetailViewState);
    uint64_t v69 = (uint64_t)v49;
    uint64_t v70 = v144;
    sub_1005A41B8(v69, v144, (void (*)(void))type metadata accessor for ConditionDetailViewState);
    uint64_t v71 = Logger.logObject.getter();
    os_log_type_t v72 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v71, v72))
    {
      uint64_t v73 = swift_slowAlloc();
      uint64_t v74 = swift_slowAlloc();
      uint64_t v138 = v53;
      uint64_t v150 = v74;
      *(_DWORD *)uint64_t v73 = 136315651;
      type metadata accessor for DetailCondition();
      sub_100127D88(&qword_100E71420, (void (*)(uint64_t))&type metadata accessor for DetailCondition);
      uint64_t v75 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v149 = sub_10017E648(v75, v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1005A4278((uint64_t)v39, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      *(_WORD *)(v73 + 12) = 2160;
      sub_10017A5B0();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v73 + 22) = 2081;
      type metadata accessor for Location();
      uint64_t v146 = v67;
      sub_100127D88((unint64_t *)&qword_100E66470, (void (*)(uint64_t))&type metadata accessor for Location);
      uint64_t v77 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v149 = sub_10017E648(v77, v78);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1005A4278(v70, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      _os_log_impl((void *)&_mh_execute_header, v71, v72, "Failed to create DayPickerInput due to missing weather data for location; condition=%s, location=%{private,mask.hash}s",
        (uint8_t *)v73,
        0x20u);
      swift_arrayDestroy();
      uint64_t v53 = v138;
      sub_100162EE0();
      sub_100162EE0();

      uint64_t v79 = v146;
    }
    else
    {

      sub_1005A4278(v70, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      sub_1005A4278((uint64_t)v39, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      uint64_t v79 = v67;
    }
    sub_1005A4278(v79, (void (*)(void))type metadata accessor for ConditionDetailViewState);
    uint64_t v62 = v148;
    uint64_t v61 = (uint64_t)v53;
    goto LABEL_21;
  }
  uint64_t v80 = v145;
  sub_1005A4218(v3, v145, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  sub_1005A41B8(v80, (uint64_t)v29, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v138 = v53;
    uint64_t v81 = sub_10017DF08(&qword_100E63748);
    uint64_t v82 = (uint64_t)&v29[*(int *)(v81 + 48)];
    uint64_t v83 = (uint64_t)&v29[*(int *)(v81 + 64)];
    uint64_t v84 = v143;
    sub_1005A4218((uint64_t)v29, v143, (void (*)(void))type metadata accessor for WeatherData);
    sub_1005A4278(v83, (void (*)(void))type metadata accessor for NewsDataModel);
    sub_1005A4278(v82, (void (*)(void))type metadata accessor for PreprocessedWeatherData);
    sub_1001B1E64((void *)v139 + 2, *((void *)v139 + 5));
    uint64_t v85 = v142;
    Location.timeZone.getter();
    uint64_t v86 = sub_1001B2DAC(v84, v85, 1, 11, 0);
    uint64_t v87 = v64;
    uint64_t v89 = v140;
    uint64_t v88 = v141;
    (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v85, v141);
    unint64_t v90 = v86[2];
    if (v90 >= 7)
    {
      uint64_t v115 = v130;
      unint64_t v116 = (unint64_t)v86
           + ((*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80))
           + *(void *)(v115 + 72);
      uint64_t v117 = *(void (**)(uint64_t, unint64_t, uint64_t))(v130 + 16);
      uint64_t v139 = v87;
      uint64_t v118 = v129;
      uint64_t v144 = (uint64_t)v86;
      uint64_t v119 = v131;
      v117(v129, v116, v131);
      uint64_t v120 = v67;
      uint64_t v121 = v128;
      DayWeather.date.getter();
      (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v118, v119);
      uint64_t v122 = v133;
      uint64_t v123 = v134;
      uint64_t v124 = v135;
      (*(void (**)(uint64_t, char *, uint64_t))(v134 + 16))(v133, v121, v135);
      uint64_t v125 = v136;
      sub_1001C7278(v120 + *(int *)(v146 + 24), v136);
      Location.timeZone.getter();
      (*(void (**)(char *, uint64_t))(v123 + 8))(v121, v124);
      sub_1005A4278(v143, (void (*)(void))type metadata accessor for WeatherData);
      sub_1005A4278(v80, (void (*)(void))type metadata accessor for LocationWeatherDataState);
      sub_1005A4278(v120, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      sub_1005A4278((uint64_t)v138, (void (*)(void))type metadata accessor for DayPickerInput);
      uint64_t v62 = v148;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v123 + 32))(v148, v122, v124);
      uint64_t v102 = v147;
      *(void *)(v62 + *(int *)(v147 + 20)) = v144;
      sub_100246A0C(v125, v62 + *(int *)(v102 + 24));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 32))(v62 + *(int *)(v102 + 28), v142, v88);
      return _s7Weather24LocationCompositionStateOwst_0(v62, 0, 1, v102);
    }
    uint64_t v91 = v84;
    if (qword_100E627E8 != -1) {
      swift_once();
    }
    uint64_t v92 = type metadata accessor for Logger();
    sub_1002102B0(v92, (uint64_t)qword_100F51ED0);
    uint64_t v93 = v127;
    sub_1005A41B8(v67, v127, (void (*)(void))type metadata accessor for ConditionDetailViewState);
    uint64_t v94 = v132;
    sub_1005A41B8(v67, v132, (void (*)(void))type metadata accessor for ConditionDetailViewState);
    swift_bridgeObjectRetain();
    uint64_t v95 = Logger.logObject.getter();
    os_log_type_t v96 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v95, v96))
    {
      uint64_t v97 = swift_slowAlloc();
      uint64_t v144 = swift_slowAlloc();
      uint64_t v150 = v144;
      *(_DWORD *)uint64_t v97 = 134218755;
      swift_bridgeObjectRelease();
      uint64_t v149 = v90;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v97 + 12) = 2080;
      type metadata accessor for DetailCondition();
      sub_100127D88(&qword_100E71420, (void (*)(uint64_t))&type metadata accessor for DetailCondition);
      uint64_t v98 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v149 = sub_10017E648(v98, v99);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1005A4278(v93, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      *(_WORD *)(v97 + 22) = 2160;
      sub_10017A5B0();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v97 + 32) = 2081;
      type metadata accessor for Location();
      sub_100127D88((unint64_t *)&qword_100E66470, (void (*)(uint64_t))&type metadata accessor for Location);
      uint64_t v100 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v149 = sub_10017E648(v100, v101);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1005A4278(v94, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      _os_log_impl((void *)&_mh_execute_header, v95, v96, "Failed to create DayPickerInput due to invalid daily data; dayCount=%ld, condition=%s, location=%{private,mask.hash}s",
        (uint8_t *)v97,
        0x2Au);
      sub_100189184();
      sub_100162EE0();
      sub_100162EE0();

      sub_1005A4278(v143, (void (*)(void))type metadata accessor for WeatherData);
      sub_1005A4278(v145, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    }
    else
    {

      swift_bridgeObjectRelease();
      sub_1005A4278(v94, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      sub_1005A4278(v93, (void (*)(void))type metadata accessor for ConditionDetailViewState);
      swift_bridgeObjectRelease();
      sub_1005A4278(v91, (void (*)(void))type metadata accessor for WeatherData);
      sub_1005A4278(v80, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    }
    sub_1005A4278(v67, (void (*)(void))type metadata accessor for ConditionDetailViewState);
    uint64_t v61 = (uint64_t)v138;
    goto LABEL_7;
  }
  sub_1005A4278((uint64_t)v29, (void (*)(void))type metadata accessor for LocationWeatherDataState);
  if (qword_100E627E8 != -1) {
    swift_once();
  }
  uint64_t v104 = type metadata accessor for Logger();
  sub_1002102B0(v104, (uint64_t)qword_100F51ED0);
  uint64_t v105 = v137;
  sub_1005A41B8((uint64_t)v49, v137, (void (*)(void))type metadata accessor for ConditionDetailViewState);
  uint64_t v106 = (uint64_t)v138;
  sub_1005A41B8((uint64_t)v49, (uint64_t)v138, (void (*)(void))type metadata accessor for ConditionDetailViewState);
  uint64_t v107 = Logger.logObject.getter();
  os_log_type_t v108 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v107, v108))
  {
    uint64_t v109 = swift_slowAlloc();
    uint64_t v144 = swift_slowAlloc();
    uint64_t v150 = v144;
    *(_DWORD *)uint64_t v109 = 136315651;
    type metadata accessor for DetailCondition();
    sub_100127D88(&qword_100E71420, (void (*)(uint64_t))&type metadata accessor for DetailCondition);
    uint64_t v110 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v149 = sub_10017E648(v110, v111);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1005A4278(v105, (void (*)(void))type metadata accessor for ConditionDetailViewState);
    *(_WORD *)(v109 + 12) = 2160;
    sub_10017A5B0();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v109 + 22) = 2081;
    type metadata accessor for Location();
    uint64_t v146 = v67;
    sub_100127D88((unint64_t *)&qword_100E66470, (void (*)(uint64_t))&type metadata accessor for Location);
    uint64_t v112 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v149 = sub_10017E648(v112, v113);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1005A4278(v106, (void (*)(void))type metadata accessor for ConditionDetailViewState);
    _os_log_impl((void *)&_mh_execute_header, v107, v108, "Failed to create DayPickerInput due to missing weather data; condition=%s, location=%{private,mask.hash}s",
      (uint8_t *)v109,
      0x20u);
    sub_100189184();
    sub_100162EE0();
    sub_100162EE0();

    sub_1005A4278(v145, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    uint64_t v114 = v146;
  }
  else
  {

    sub_1005A4278(v106, (void (*)(void))type metadata accessor for ConditionDetailViewState);
    sub_1005A4278(v105, (void (*)(void))type metadata accessor for ConditionDetailViewState);
    sub_1005A4278(v80, (void (*)(void))type metadata accessor for LocationWeatherDataState);
    uint64_t v114 = (uint64_t)v49;
  }
  sub_1005A4278(v114, (void (*)(void))type metadata accessor for ConditionDetailViewState);
  uint64_t v102 = v147;
  uint64_t v62 = v148;
  sub_1005A4218((uint64_t)v53, v148, (void (*)(void))type metadata accessor for DayPickerInput);
  return _s7Weather24LocationCompositionStateOwst_0(v62, 0, 1, v102);
}

uint64_t type metadata accessor for DayPickerInputFactory()
{
  return self;
}

uint64_t *sub_1005A357C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    swift_bridgeObjectRetain();
    if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v7))
    {
      uint64_t v12 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      v8((uint64_t *)v10, (uint64_t *)v11, v7);
      _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v7);
    }
    uint64_t v14 = a3[7];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = type metadata accessor for TimeZone();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  return a1;
}

uint64_t sub_1005A3720(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  if (!_s7Weather24LocationCompositionStateOwet_0(v6, 1, v4)) {
    v5(v6, v4);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  uint64_t v8 = type metadata accessor for TimeZone();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

char *sub_1005A3818(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  swift_bridgeObjectRetain();
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)v10, 1, v6))
  {
    uint64_t v11 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v6);
  }
  uint64_t v12 = a3[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

char *sub_1005A396C(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&a1[v9], 1, v6);
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v6);
  if (!v12)
  {
    if (!v13)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v6);
LABEL_7:
  uint64_t v15 = a3[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  return a1;
}

char *sub_1005A3B58(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if (_s7Weather24LocationCompositionStateOwet_0((uint64_t)&a2[v8], 1, v6))
  {
    uint64_t v11 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v7(v9, v10, v6);
    _s7Weather24LocationCompositionStateOwst_0((uint64_t)v9, 0, 1, v6);
  }
  uint64_t v12 = a3[7];
  int v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  return a1;
}

char *sub_1005A3CA8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  int v12 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)&a1[v9], 1, v6);
  int v13 = _s7Weather24LocationCompositionStateOwet_0((uint64_t)v11, 1, v6);
  if (!v12)
  {
    if (!v13)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_10017DF08((uint64_t *)&unk_100E73CA0);
    memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  _s7Weather24LocationCompositionStateOwst_0((uint64_t)v10, 0, 1, v6);
LABEL_7:
  uint64_t v15 = a3[7];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = type metadata accessor for TimeZone();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 40))(v16, v17, v18);
  return a1;
}

uint64_t sub_1005A3E8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005A3EA0);
}

uint64_t sub_1005A3EA0(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1;
LABEL_11:
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
  if (a2 != 0x7FFFFFFF)
  {
    sub_10017DF08((uint64_t *)&unk_100E73CA0);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a2)
    {
      uint64_t v8 = v12;
      uint64_t v14 = a3[6];
    }
    else
    {
      uint64_t v8 = type metadata accessor for TimeZone();
      uint64_t v14 = a3[7];
    }
    uint64_t v9 = a1 + v14;
    goto LABEL_11;
  }
  unint64_t v10 = *(void *)(a1 + a3[5]);
  if (v10 >= 0xFFFFFFFF) {
    LODWORD(v10) = -1;
  }
  return (v10 + 1);
}

uint64_t sub_1005A3F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005A3F8C);
}

void sub_1005A3F8C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  type metadata accessor for Date();
  sub_100162F30();
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(void *)(a1 + a4[5]) = (a2 - 1);
      return;
    }
    sub_10017DF08((uint64_t *)&unk_100E73CA0);
    sub_100162F30();
    if (*(_DWORD *)(v13 + 84) == a3)
    {
      uint64_t v10 = v12;
      uint64_t v14 = a4[6];
    }
    else
    {
      uint64_t v10 = type metadata accessor for TimeZone();
      uint64_t v14 = a4[7];
    }
    uint64_t v11 = a1 + v14;
  }

  _s7Weather24LocationCompositionStateOwst_0(v11, a2, a2, v10);
}

uint64_t type metadata accessor for DayPickerInput()
{
  uint64_t result = qword_100E81A60;
  if (!qword_100E81A60) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1005A40A8()
{
  type metadata accessor for Date();
  if (v0 <= 0x3F)
  {
    sub_1000159D8();
    if (v1 <= 0x3F)
    {
      type metadata accessor for TimeZone();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_1005A41B8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(a2, a1);
  return a2;
}

uint64_t sub_1005A4218(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1005A4278(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  (*(void (**)(uint64_t))(v3 + 8))(a1);
  return a1;
}

ValueMetadata *type metadata accessor for AutomationState()
{
  return &type metadata for AutomationState;
}

uint64_t sub_1005A42E4(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001ALL && a2 == 0x8000000100CA14F0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

unint64_t sub_1005A436C()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_1005A4388(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E81AC8);
  sub_100179C0C();
  uint64_t v6 = v5;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001B1E64(a1, a1[3]);
  sub_1005A492C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v11[1] = a2;
  sub_10017DF08(&qword_100E81AB8);
  sub_1005A4978(&qword_100E81AD0);
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v4);
}

void *sub_1005A44D4(void *a1)
{
  uint64_t v3 = sub_10017DF08(&qword_100E81AA8);
  sub_100179C0C();
  uint64_t v5 = v4;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1001B1E64(a1, a1[3]);
  sub_1005A492C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  else
  {
    sub_10017DF08(&qword_100E81AB8);
    sub_1005A4978(&qword_100E81AC0);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
    uint64_t v9 = (void *)v11[1];
    _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)a1);
  }
  return v9;
}

uint64_t sub_1005A464C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1005A42E4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1005A4678(uint64_t a1)
{
  unint64_t v2 = sub_1005A492C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1005A46B4(uint64_t a1)
{
  unint64_t v2 = sub_1005A492C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1005A46F0(void *a1, void *a2)
{
  return sub_1005A42E0(*a1, *a2);
}

void *sub_1005A46FC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_1005A44D4(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1005A4728(void *a1)
{
  return sub_1005A4388(a1, *v1);
}

uint64_t sub_1005A4744@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_10017DF08(&qword_100E635E0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100C251B0;
  *(void *)(inited + 32) = 0xD00000000000001ALL;
  *(void *)(inited + 40) = 0x8000000100CA14F0;
  *(void *)(inited + 72) = sub_10017DF08(&qword_100E81AB8);
  *(void *)(inited + 48) = a1;
  swift_bridgeObjectRetain();
  Dictionary.init(dictionaryLiteral:)();
  a2[3] = sub_10017DF08(&qword_100E81AD8);
  a2[4] = sub_1005A49DC();
  sub_100170694(a2);
  return ShortDescription.init(name:_:)();
}

uint64_t sub_1005A4850@<X0>(uint64_t *a1@<X8>)
{
  return sub_1005A4744(*v1, a1);
}

uint64_t sub_1005A4858()
{
  sub_1005A4A30();

  return ShortDescribable.description.getter();
}

uint64_t sub_1005A4894@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1008995C8();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1005A48C0()
{
  return sub_100899600();
}

unint64_t sub_1005A48E0()
{
  unint64_t result = qword_100E81AA0;
  if (!qword_100E81AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E81AA0);
  }
  return result;
}

unint64_t sub_1005A492C()
{
  unint64_t result = qword_100E81AB0;
  if (!qword_100E81AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E81AB0);
  }
  return result;
}

uint64_t sub_1005A4978(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10018C6DC(&qword_100E81AB8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1005A49DC()
{
  unint64_t result = qword_100E81AE0;
  if (!qword_100E81AE0)
  {
    sub_10018C6DC(&qword_100E81AD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E81AE0);
  }
  return result;
}

unint64_t sub_1005A4A30()
{
  unint64_t result = qword_100E81AE8;
  if (!qword_100E81AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E81AE8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AutomationState.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1005A4B18);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AutomationState.CodingKeys()
{
  return &type metadata for AutomationState.CodingKeys;
}

unint64_t sub_1005A4B54()
{
  unint64_t result = qword_100E81AF0;
  if (!qword_100E81AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E81AF0);
  }
  return result;
}

unint64_t sub_1005A4BA4()
{
  unint64_t result = qword_100E81AF8;
  if (!qword_100E81AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E81AF8);
  }
  return result;
}

unint64_t sub_1005A4BF4()
{
  unint64_t result = qword_100E81B00;
  if (!qword_100E81B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E81B00);
  }
  return result;
}

void sub_1005A4C40()
{
  qword_100F51928 = 0x4018000000000000;
}

void sub_1005A4C50()
{
  qword_100F51930 = 0x4030000000000000;
}

void sub_1005A4C60()
{
  qword_100F51938 = 0;
}

uint64_t sub_1005A4C6C()
{
  uint64_t v0 = type metadata accessor for UUID();
  sub_100179C0C();
  uint64_t v2 = v1;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  sub_100179C0C();
  uint64_t v8 = v7;
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v11 = __chkstk_darwin(v10);
  __chkstk_darwin(v11);
  if (qword_100E62290 != -1) {
    swift_once();
  }
  swift_beginAccess();
  sub_1005A5184((uint64_t)&xmmword_100F51398, (uint64_t)v45);
  if (v46)
  {
    uint64_t v41 = v2;
    uint64_t v42 = v0;
    uint64_t v43 = v8;
    uint64_t v44 = v6;
    sub_1001B1E64(v45, v46);
    sub_10017DF08(&qword_100E81B08);
    uint64_t v12 = dispatch thunk of ResolverType.resolve<A>(_:)();
    if (v12)
    {
      uint64_t v13 = v12;
      _s7Weather29UVIDescriptorViewModelFactoryVwxx_0((uint64_t)v45);
      type metadata accessor for JSONEncoder();
      swift_allocObject();
      JSONEncoder.init()();
      uint64_t v40 = v13;
      uint64_t v14 = sub_1001AB118();
      uint64_t v15 = *(void *)(v14 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData);
      uint64_t v16 = *(void *)(v14 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 8);
      uint64_t v18 = *(void *)(v14 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 16);
      uint64_t v17 = *(void *)(v14 + OBJC_IVAR____TtCV7Weather9MainState8_Storage_weatherData + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
      v45[0] = v15;
      v45[1] = v16;
      v45[2] = v18;
      uint64_t v46 = v17;
      sub_1002E77D8();
      uint64_t v19 = dispatch thunk of JSONEncoder.encode<A>(_:)();
      unint64_t v38 = v20;
      uint64_t v39 = v19;
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v21 = [self defaultManager];
      id v22 = [v21 temporaryDirectory];

      static URL._unconditionallyBridgeFromObjectiveC(_:)();
      v45[0] = 0;
      v45[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(21);
      swift_bridgeObjectRelease();
      v45[0] = 0xD000000000000013;
      v45[1] = 0x8000000100CA8330;
      UUID.init()();
      uint64_t v23 = UUID.uuidString.getter();
      uint64_t v25 = v24;
      (*(void (**)(char *, uint64_t))(v41 + 8))(v5, v42);
      v26._uint64_t countAndFlagsBits = v23;
      v26._object = v25;
      String.append(_:)(v26);
      swift_bridgeObjectRelease();
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      uint64_t v27 = *(void (**)(void))(v43 + 8);
      sub_10017D154();
      v27();
      URL.appendingPathExtension(_:)();
      sub_10017D154();
      v27();
      unint64_t v29 = v38;
      uint64_t v28 = v39;
      Data.write(to:options:)();
      id v30 = [self generalPasteboard];
      uint64_t v31 = URL.path.getter();
      sub_1005A548C(v31, v32, v30);

      sub_10017DF08(&qword_100E81B10);
      uint64_t v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = xmmword_100C251B0;
      v45[0] = 0;
      v45[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(16);
      swift_bridgeObjectRelease();
      strcpy((char *)v45, "File saved to ");
      HIBYTE(v45[1]) = -18;
      Swift::String v34 = URL.path(percentEncoded:)(1);
      String.append(_:)(v34);
      swift_bridgeObjectRelease();
      uint64_t v35 = v45[0];
      uint64_t v36 = v45[1];
      *(void *)(v33 + 56) = &type metadata for String;
      *(void *)(v33 + 32) = v35;
      *(void *)(v33 + 40) = v36;
      print(_:separator:terminator:)();
      swift_bridgeObjectRelease();
      sub_100318440(v28, v29);
      swift_release();
      sub_10017D154();
      return ((uint64_t (*)(void))v27)();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1005A5184(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6F2A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005A51EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 24);
  uint64_t v5 = type metadata accessor for SettingCellStyle();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_1005A5260()
{
  return swift_release();
}

uint64_t sub_1005A5304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + a3 - 24);
  uint64_t v5 = *(void *)(a4 + a3 - 16);
  uint64_t v6 = *(void *)(a4 + a3 - 8);
  uint64_t v7 = *(void *)(v4 - 8);
  __chkstk_darwin(a1);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)v16 - v12;
  uint64_t v14 = *(void (**)(char *, __n128))(v7 + 16);
  v14((char *)v16 - v12, v11);
  v16[4] = v4;
  v16[5] = v5;
  v16[6] = v6;
  swift_getKeyPath();
  v16[0] = v4;
  v16[1] = v5;
  v16[2] = v6;
  swift_getKeyPath();
  ((void (*)(char *, char *, uint64_t))v14)(v9, v13, v4);
  swift_retain();
  static Published.subscript.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, v4);
}

void sub_1005A548C(uint64_t a1, uint64_t a2, void *a3)
{
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a3 setString:v4];
}

uint64_t sub_1005A54F8()
{
  return 24;
}

__n128 sub_1005A5504(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

void *sub_1005A5518(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = a1 + v6;
    uint64_t v8 = (uint64_t)a2 + v6;
    uint64_t v9 = type metadata accessor for SettingCellStyle();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_1005A5608(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = type metadata accessor for SettingCellStyle();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_1005A5680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = type metadata accessor for SettingCellStyle();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t sub_1005A5720(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = type metadata accessor for SettingCellStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_1005A57C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = type metadata accessor for SettingCellStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1005A5848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for SettingCellStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1005A58DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005A58F0);
}

uint64_t sub_1005A58F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for SettingCellStyle();
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_1005A5978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005A598C);
}

uint64_t sub_1005A598C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for SettingCellStyle();
    uint64_t v8 = v5 + *(int *)(a4 + 24);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for DemoPresetSaveWeatherMainStateButton()
{
  uint64_t result = qword_100E81B78;
  if (!qword_100E81B78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1005A5A54()
{
  uint64_t result = type metadata accessor for SettingCellStyle();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t MKPlacemark.safeTitle.getter()
{
  return sub_1005A5B0C((SEL *)&selRef_title);
}

uint64_t MKPlacemark.safeSubtitle.getter()
{
  return sub_1005A5B0C((SEL *)&selRef_subtitle);
}

uint64_t sub_1005A5B0C(SEL *a1)
{
  if ([v1 respondsToSelector:*a1]) {
    return sub_1005A5B5C(v1, a1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1005A5B5C(void *a1, SEL *a2)
{
  id v2 = [a1 *a2];
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v4;
}

void *sub_1005A5BBC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = type metadata accessor for LocationOfInterest();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return v4;
}

uint64_t sub_1005A5CC4(uint64_t a1, uint64_t a2)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for LocationOfInterest();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_1005A5D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for LocationOfInterest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t *sub_1005A5DE8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_1000C1E18(a1, a2);
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for LocationOfInterest();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_1005A5E68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = type metadata accessor for LocationOfInterest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_1005A5EEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for LocationOfInterest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_1005A5F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005A5F90);
}

uint64_t sub_1005A5F90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for LocationOfInterest();
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    return _s7Weather24LocationCompositionStateOwet_0(v9, a2, v8);
  }
}

uint64_t sub_1005A6018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005A602C);
}

uint64_t sub_1005A602C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for LocationOfInterest();
    uint64_t v8 = v5 + *(int *)(a4 + 20);
    return _s7Weather24LocationCompositionStateOwst_0(v8, a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for SuggestedSearchResultRowView()
{
  uint64_t result = qword_100E81C10;
  if (!qword_100E81C10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1005A60F4()
{
  uint64_t result = type metadata accessor for LocationOfInterest();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1005A618C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005A61A8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v71 = a1;
  uint64_t v70 = type metadata accessor for AutomationInfo(0);
  sub_100162E4C();
  __chkstk_darwin(v2);
  sub_100109314();
  uint64_t v69 = v3;
  uint64_t v68 = type metadata accessor for LocationOfInterestType();
  sub_100179C0C();
  uint64_t v66 = v4;
  __chkstk_darwin(v5);
  sub_100109314();
  uint64_t v64 = v6;
  uint64_t v7 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v7 - 8);
  uint64_t v62 = type metadata accessor for SearchResultButtonStyle();
  sub_100162E4C();
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t *)((char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v59 - v12;
  uint64_t v14 = type metadata accessor for SuggestedSearchResultRowView();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin(v14);
  uint64_t v60 = sub_10017DF08(&qword_100E81C48);
  sub_100179C0C();
  uint64_t v61 = v17;
  __chkstk_darwin(v18);
  uint64_t v65 = sub_10017DF08(&qword_100E81C50);
  sub_100179C0C();
  uint64_t v67 = v19;
  __chkstk_darwin(v20);
  sub_100109314();
  uint64_t v72 = v21;
  uint64_t v22 = sub_10017DF08(&qword_100E7A160);
  __chkstk_darwin(v22 - 8);
  sub_100109314();
  uint64_t v63 = v23;
  uint64_t v59 = v1;
  sub_1005A6ED0(v1, (uint64_t)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v24 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v25 = swift_allocObject();
  sub_1005A708C((uint64_t)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), v25 + v24, (void (*)(void))type metadata accessor for SuggestedSearchResultRowView);
  uint64_t v73 = v1;
  sub_10017DF08(&qword_100E81C58);
  sub_1001246C8(&qword_100E81C60, &qword_100E81C58);
  Button.init(action:label:)();
  *uint64_t v10 = swift_getKeyPath();
  sub_10017DF08((uint64_t *)&unk_100EAA560);
  swift_storeEnumTagMultiPayload();
  sub_1005A708C((uint64_t)v10, (uint64_t)v13, (void (*)(void))type metadata accessor for SearchResultButtonStyle);
  uint64_t v26 = sub_1001246C8(&qword_100E81C68, &qword_100E81C48);
  uint64_t v27 = sub_100342F68(&qword_100E6DE48, (void (*)(uint64_t))type metadata accessor for SearchResultButtonStyle);
  uint64_t v28 = v60;
  uint64_t v29 = v62;
  View.buttonStyle<A>(_:)();
  sub_1005A70EC((uint64_t)v13, (void (*)(void))type metadata accessor for SearchResultButtonStyle);
  uint64_t v30 = v28;
  sub_100162F0C();
  v31();
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v32._uint64_t countAndFlagsBits = 0;
  v32._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v32);
  LocationOfInterest.type.getter();
  uint64_t v33 = LocationOfInterestType.title.getter();
  uint64_t v35 = v34;
  sub_100162F0C();
  v36();
  v37._uint64_t countAndFlagsBits = v33;
  v37._object = v35;
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v37);
  swift_bridgeObjectRelease();
  v38._uint64_t countAndFlagsBits = 8236;
  v38._object = (void *)0xE200000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v38);
  v39._uint64_t countAndFlagsBits = LocationOfInterest.searchDisplayAddress.getter();
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v39);
  swift_bridgeObjectRelease();
  v40._uint64_t countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v40);
  LocalizedStringKey.init(stringInterpolation:)();
  uint64_t v41 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v43 = v42;
  uint64_t v74 = v30;
  uint64_t v75 = v29;
  char v45 = v44 & 1;
  uint64_t v76 = v26;
  uint64_t v77 = v27;
  swift_getOpaqueTypeConformance2();
  uint64_t v46 = v63;
  View.accessibilityLabel(_:)();
  sub_100191924(v41, v43, v45);
  swift_bridgeObjectRelease();
  sub_100162F0C();
  v47();
  uint64_t v48 = LocationOfInterest.searchDisplayAddress.getter();
  uint64_t v49 = v69;
  uint64_t *v69 = v48;
  v49[1] = v50;
  type metadata accessor for AutomationCellInfo(0);
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  sub_10048D374((uint64_t)v49, v51, v52, v53, v54, v55, v56, v57, v59, v60, v61, v62, v63, v64, v65, v66, v67, v68, (uint64_t)v69,
    v70);
  sub_1005A70EC((uint64_t)v49, (void (*)(void))type metadata accessor for AutomationInfo);
  return sub_100178110(v46, &qword_100E7A160);
}

uint64_t sub_1005A684C(void *a1)
{
  sub_1001B1E64(a1, a1[3]);
  uint64_t v2 = type metadata accessor for SuggestedSearchResultRowView();
  return sub_1007747A0((uint64_t)a1 + *(int *)(v2 + 20));
}

uint64_t sub_1005A6890@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static HorizontalAlignment.leading.getter();
  *(void *)(a1 + 8) = 0x4008000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v2 = sub_10017DF08(&qword_100E81C70);
  return sub_1005A68E0(a1 + *(int *)(v2 + 44));
}

uint64_t sub_1005A68E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v1 = sub_10017DF08(&qword_100E81C78);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v23 - v5;
  *(void *)uint64_t v6 = static VerticalAlignment.center.getter();
  *((void *)v6 + 1) = 0x4008000000000000;
  v6[16] = 0;
  uint64_t v7 = sub_10017DF08(&qword_100E81C80);
  sub_1005A6B00((uint64_t)&v6[*(int *)(v7 + 44)]);
  type metadata accessor for SuggestedSearchResultRowView();
  uint64_t v25 = LocationOfInterest.searchDisplayAddress.getter();
  uint64_t v26 = v8;
  sub_10014A85C();
  uint64_t v9 = Text.init<A>(_:)();
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  char v15 = v14 & 1;
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v17 = static Color.secondary.getter();
  uint64_t v18 = swift_getKeyPath();
  uint64_t v23 = v3;
  sub_1001262FC((uint64_t)v6, (uint64_t)v3, &qword_100E81C78);
  uint64_t v19 = (uint64_t)v3;
  uint64_t v20 = v24;
  sub_1001262FC(v19, v24, &qword_100E81C78);
  uint64_t v21 = v20 + *(int *)(sub_10017DF08(&qword_100E81C88) + 48);
  *(void *)uint64_t v21 = v9;
  *(void *)(v21 + 8) = v11;
  *(unsigned char *)(v21 + 16) = v15;
  *(void *)(v21 + 24) = v13;
  *(void *)(v21 + 32) = KeyPath;
  *(void *)(v21 + 40) = 1;
  *(unsigned char *)(v21 + 48) = 0;
  *(void *)(v21 + 56) = v18;
  *(void *)(v21 + 64) = v17;
  sub_100190CC4(v9, v11, v15);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100178110((uint64_t)v6, &qword_100E81C78);
  sub_100191924(v9, v11, v15);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_100178110((uint64_t)v23, &qword_100E81C78);
}

uint64_t sub_1005A6B00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v1 = type metadata accessor for LocationOfInterestType();
  uint64_t v36 = *(void *)(v1 - 8);
  uint64_t v37 = v1;
  __chkstk_darwin(v1);
  uint64_t v35 = (char *)&v33 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10017DF08(&qword_100EAADC0);
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for Image.Scale();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10017DF08(&qword_100E6F770);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  char v14 = (uint64_t *)((char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v15);
  uint64_t v34 = (uint64_t)&v33 - v16;
  type metadata accessor for SuggestedSearchResultRowView();
  LocationOfInterest.imageName.getter();
  uint64_t v17 = Image.init(systemName:)();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for Image.Scale.small(_:), v7);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)v6 + *(int *)(v4 + 36), v10, v7);
  *uint64_t v6 = KeyPath;
  sub_1001262FC((uint64_t)v6, (uint64_t)v14 + *(int *)(v12 + 44), &qword_100EAADC0);
  uint64_t *v14 = v17;
  swift_retain();
  sub_100178110((uint64_t)v6, &qword_100EAADC0);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  swift_release();
  uint64_t v19 = v34;
  sub_1005A7158((uint64_t)v14, v34);
  uint64_t v20 = v35;
  LocationOfInterest.type.getter();
  uint64_t v21 = LocationOfInterestType.title.getter();
  uint64_t v23 = v22;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v20, v37);
  uint64_t v39 = v21;
  uint64_t v40 = v23;
  sub_10014A85C();
  uint64_t v24 = Text.init<A>(_:)();
  uint64_t v26 = v25;
  uint64_t v28 = v27;
  LOBYTE(v17) = v29 & 1;
  sub_1001262FC(v19, (uint64_t)v14, &qword_100E6F770);
  uint64_t v30 = v38;
  sub_1001262FC((uint64_t)v14, v38, &qword_100E6F770);
  uint64_t v31 = v30 + *(int *)(sub_10017DF08(&qword_100E81C90) + 48);
  *(void *)uint64_t v31 = v24;
  *(void *)(v31 + 8) = v26;
  *(unsigned char *)(v31 + 16) = v17;
  *(void *)(v31 + 24) = v28;
  sub_100190CC4(v24, v26, v17);
  swift_bridgeObjectRetain();
  sub_100178110(v19, &qword_100E6F770);
  sub_100191924(v24, v26, v17);
  swift_bridgeObjectRelease();
  return sub_100178110((uint64_t)v14, &qword_100E6F770);
}

uint64_t sub_1005A6ED0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SuggestedSearchResultRowView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005A6F34()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for SuggestedSearchResultRowView() - 8) + 80);
  _s7Weather29UVIDescriptorViewModelFactoryVwxx_0(v0 + ((v1 + 16) & ~v1));
  type metadata accessor for LocationOfInterest();
  sub_100162E4C();
  sub_100162F0C();
  v2();

  return swift_deallocObject();
}

uint64_t sub_1005A701C()
{
  uint64_t v1 = *(void *)(type metadata accessor for SuggestedSearchResultRowView() - 8);
  uint64_t v2 = (void *)(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));

  return sub_1005A684C(v2);
}

uint64_t sub_1005A707C@<X0>(uint64_t a1@<X8>)
{
  return sub_1005A6890(a1);
}

uint64_t sub_1005A708C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  sub_100162E4C();
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, a1);
  return a2;
}

uint64_t sub_1005A70EC(uint64_t a1, void (*a2)(void))
{
  a2(0);
  sub_100162E4C();
  sub_100162F0C();
  v3();
  return a1;
}

uint64_t sub_1005A7158(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10017DF08(&qword_100E6F770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1005A71C4()
{
  unint64_t result = qword_100E81C98;
  if (!qword_100E81C98)
  {
    sub_10018C6DC(&qword_100E7A168);
    sub_1005A7270();
    sub_100342F68((unint64_t *)&qword_100E66BF8, (void (*)(uint64_t))type metadata accessor for AutomationInfoViewModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E81C98);
  }
  return result;
}

unint64_t sub_1005A7270()
{
  unint64_t result = qword_100E81CA0;
  if (!qword_100E81CA0)
  {
    sub_10018C6DC(&qword_100E7A160);
    sub_10018C6DC(&qword_100E81C48);
    type metadata accessor for SearchResultButtonStyle();
    sub_1001246C8(&qword_100E81C68, &qword_100E81C48);
    sub_100342F68(&qword_100E6DE48, (void (*)(uint64_t))type metadata accessor for SearchResultButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_100342F68((unint64_t *)&qword_100EAACA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E81CA0);
  }
  return result;
}

BOOL sub_1005A73C4(uint64_t a1)
{
  return (unint64_t)(a1 - 1) < 2;
}

uint64_t destroy for NotificationsState()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s7Weather26WindCategoryTableViewModelVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for WindCategoryTableViewModel(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for WindCategoryTableViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AirPollutantTableViewModel()
{
  return &type metadata for AirPollutantTableViewModel;
}

unint64_t sub_1005A7518()
{
  unint64_t result = qword_100E81CA8;
  if (!qword_100E81CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E81CA8);
  }
  return result;
}

uint64_t sub_1005A7564(void *a1, void *a2)
{
  BOOL v4 = *a1 == *a2 && a1[1] == a2[1];
  if (v4 || (char v5 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v5 & 1) != 0))
  {
    sub_1000C83A0();
    if (static NSObject.== infix(_:_:)())
    {
      if (a1[3] == a2[3] && a1[4] == a2[4])
      {
        return 1;
      }
      else
      {
        return _stringCompareWithSmolCheck(_:_:expecting:)();
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1005A761C()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  id v1 = *(id *)(v0 + 16);
  NSObject.hash(into:)();

  swift_bridgeObjectRetain();
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1005A76B8()
{
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  id v1 = *(id *)(v0 + 16);
  NSObject.hash(into:)();

  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

void sub_1005A7760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v5 = a1 == a4 && a2 == a5;
  if (v5 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    sub_100BD99E8();
  }
}

uint64_t sub_1005A77CC()
{
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1007079A8();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1005A7848()
{
  return Hasher._finalize()();
}

Swift::Int sub_1005A78DC()
{
  id v1 = *(void **)(v0 + 16);
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  id v2 = v1;
  NSObject.hash(into:)();

  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

void sub_1005A7980(uint64_t *a1, uint64_t *a2)
{
}

Swift::Int sub_1005A799C()
{
  return sub_1005A7848();
}

uint64_t sub_1005A79A8()
{
  return sub_1005A77CC();
}

Swift::Int sub_1005A79B4()
{
  return Hasher._finalize()();
}

uint64_t destroy for AirPollutantTableViewModel.Row(uint64_t a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for AirPollutantTableViewModel.Row(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  BOOL v5 = (void *)a2[2];
  uint64_t v4 = a2[3];
  a1[2] = v5;
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  id v6 = v5;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for AirPollutantTableViewModel.Row(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[2];
  BOOL v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AirPollutantTableViewModel.Row(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AirPollutantTableViewModel.Row()
{
  return &type metadata for AirPollutantTableViewModel.Row;
}

unint64_t sub_1005A7BBC()
{
  unint64_t result = qword_100E81CB0;
  if (!qword_100E81CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100E81CB0);
  }
  return result;
}